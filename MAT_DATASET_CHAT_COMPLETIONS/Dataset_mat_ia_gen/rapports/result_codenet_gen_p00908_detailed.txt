================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import deque

def solve_puzzle(H, W, grid):
    # Directions for movement up, down, left, right
    directions = [(-1,0),(1,0),(0,-1),(0,1)]

    # Parse the grid to find:
    # - the king block cells (2x2, marked with 'X')
    # - the pawns positions (marked with 'o')
    # - the obstacles (marked with '*')
    # - the two open squares (marked with '.')
    obstacles = set()
    pawns = set()
    open_squares = set()
    king_cells = []

    for r in range(H):
        for c in range(W):
            ch = grid[r][c]
            if ch == '*':
                obstacles.add((r,c))
            elif ch == 'o':
                pawns.add((r,c))
            elif ch == '.':
                open_squares.add((r,c))
            elif ch == 'X':
                king_cells.append((r,c))

    # The king occupies exactly 4 cells in a 2x2 block
    # Determine king top-left cell coordinates as a state
    # So king position state is (kr,kc) = upper left cell of king 2x2 block

    # Determine king top-left:
    # king_cells is four coordinates of king cells,
    # find minimum row and column among them:
    kr = min(r for r,c in king_cells)
    kc = min(c for r,c in king_cells)

    # Important validations:
    # king cells should form a 2x2 block, i.e.,
    # check that (kr,kc), (kr,kc+1), (kr+1,kc), (kr+1,kc+1) are all occupied by king
    expected_king_cells = {(kr,kc),(kr,kc+1),(kr+1,kc),(kr+1,kc+1)}
    if set(king_cells) != expected_king_cells:
        # Invalid input format according to problem
        return -1

    # The puzzle always have exactly two open squares
    if len(open_squares) != 2:
        return -1

    # State representation
    # We'll represent the state as (king row, king col, tuple of sorted pawns positions, tuple of two open squares sorted)
    # but open squares are fully defined by frame and pawns and king position too?
    # No, the two open squares shifts as pieces move by sliding into the squares.
    # So the open squares positions must be kept in the state, since pieces moves depend on availability of opens.
    #
    # However, since the grid is fixed, and the sets of obstacles fixed,
    # at each step the union of king + pawns + obstacles + opens = entire grid
    # So knowing king pos + pawn pos + open pos is enough.
    #
    # But open squares move dynamically. Pieces slide into open squares and open squares move to previous piece position.
    #
    # We'll store state :
    # (kr,kc,pawns frozenset, open1, open2)
    # where pawns are stored as frozenset of positions,
    # open squares as a sorted tuple ((r1,c1),(r2,c2))

    # Since open squares are always two distinct cells, sort them to keep order consistent

    # Preprocessing:
    # Construct a set of fixed obstacle squares for quick membership tests

    obstacles_set = obstacles

    # The upper-left corner position of the king is (0,0) for solved state
    goal_king = (0,0)

    # Function to check if a given cell is inside the frame
    def in_frame(r,c):
        return 0 <= r < H and 0 <= c < W

    # Function to check if 2x2 king block fits at (r,c)
    def king_fits(r,c, pawns_set):
        # Check bound
        if r < 0 or c < 0 or r+1 >= H or c+1 >= W:
            return False
        # The 4 cells must be free (occupied by king only), i.e. no obstacles or pawns
        # so these 4 cells must not be an obstacle or pawn cell
        for rr in [r,r+1]:
            for cc in [c,c+1]:
                if (rr,cc) in obstacles_set:
                    return False
                if (rr,cc) in pawns_set:
                    return False
        return True

    # Check adjacency of king edge to two open squares to move king
    # Rules say:
    # If a whole edge of the king piece (i.e. two adjacent cells forming an edge) are adjacent on the side to two open squares, we can move the king sliding one cell in that direction.
    # Means we need to check all four directions king can slide and if the two open squares adjacent at the new positions match.

    # The king moves in four directions:
    # UP: need open squares at (r-1,c) and (r-1,c+1)
    # DOWN: open squares at (r+2,c) and (r+2,c+1)
    # LEFT: open squares at (r,c-1) and (r+1,c-1)
    # RIGHT: open squares at (r,c+2) and (r+1,c+2)

    # For a king move to be valid:
    # Those new cells must be two open squares in the open squares set
    # And the king must fit in the new position (bounds, no obstacle or pawn)

    # Check possible king moves from (r,c)
    def king_moves(r,c, pawns_set, open_squares_set):
        res = []
        # UP
        if r-1 >= 0:
            if {(r-1,c),(r-1,c+1)}.issubset(open_squares_set):
                if king_fits(r-1,c,pawns_set):
                    res.append((r-1,c))
        # DOWN
        if r+2 < H:
            if {(r+2,c),(r+2,c+1)}.issubset(open_squares_set):
                if king_fits(r+1,c,pawns_set):
                    res.append((r+1,c))
        # LEFT
        if c-1 >= 0:
            if {(r,c-1),(r+1,c-1)}.issubset(open_squares_set):
                if king_fits(r,c-1,pawns_set):
                    res.append((r,c-1))
        # RIGHT
        if c+2 < W:
            if {(r,c+2),(r+1,c+2)}.issubset(open_squares_set):
                if king_fits(r,c+1,pawns_set):
                    res.append((r,c+1))
        return res

    # Pawns can move if adjacent to an open square.
    # Valid pawn moves: pawn moves into one of two open squares if adjacent (up/down/left/right)
    # When the pawn moves into an open square, the open square moves to the previous pawn position.
    # Similarly for king move: when king moves into two open squares, the new open squares become the old king block cells.

    # Generate pawn moves: for each pawn adjacent to an open square
    # For each open square adjacent to pawns, pawn can move onto that open square

    def pawn_moves(pawns_set, open_squares_set, king_r, king_c):
        moves = []
        # For each pawn
        for pr, pc in pawns_set:
            for dr,dc in directions:
                nr, nc = pr+dr, pc+dc
                # If the adjacent cell is an open square, the pawn can slide there
                if (nr,nc) in open_squares_set:
                    # Move pawn from (pr,pc) -> (nr,nc)
                    # New pawns positions: remove old, add new
                    new_pawns = pawns_set - {(pr,pc)} | {(nr,nc)}
                    # Open squares move: new open squares positions are old open squares removing moved square adding pawn old position
                    new_open = open_squares_set - {(nr,nc)} | {(pr,pc)}

                    # King position unchanged
                    moves.append( (king_r, king_c, frozenset(new_pawns), tuple(sorted(new_open))) )
        return moves

    # King sliding move:
    # When king moves to a new position (rnew,cnew), the open squares now occupy the old king cells (r,c),(r,c+1),(r+1,c),(r+1,c+1) except 2 are occupied by king in new position,
    # the two squares vacated by king become open squares.
    # The two open squares king occupied before move convert to squares now occupied by king.
    #
    # Actually, the open squares in king move correspond to the two squares the king moves into,
    # and the two open squares after move become the old king cells vacated.
    #
    # So basically we remove from open squares the two squares king slides to,
    # then add the four old king cells minus the two occupied by king in old position,
    # but open squares are always two squares, so we update open squares to those vacated by king.

    # The problem states after king moves to new position:
    # The two old king cells vacated become open squares,
    # and the two open squares occupied are no longer open.

    # We'll have to carefully update open squares accordingly:
    # Steps:
    # - old_king_cells occupied by king initially
    # - new_king_cells occupied by king after move (4 cells)
    # - open squares after move = (open_squares - new_king_cells) + (old_king_cells - new_king_cells)
    # However, new_king_cells overlap old_king_cells at no point (king fully moves)
    # So effectively:
    # open_squares after move = (open_squares - new_king_cells) + old_king_cells

    # But we know open_squares are always two cells, so old_king_cells - new_king_cells should produce two vacated cells

    # Implementing this:

    def king_slide_moves(king_r, king_c, pawns_set, open_squares_set):
        results = []
        old_king_cells = {(king_r, king_c), (king_r, king_c+1), (king_r+1, king_c), (king_r+1, king_c+1)}
        for new_r,new_c in king_moves(king_r, king_c, pawns_set, open_squares_set):
            new_king_cells = {(new_r, new_c), (new_r, new_c+1), (new_r+1, new_c), (new_r+1, new_c+1)}
            # Check pawns set do not intersect new king cells (already done in king_fits), so safe
            # Compute new open squares:
            # Remove new king cells from open squares, add old king cells
            new_open = open_squares_set - new_king_cells | (old_king_cells - new_king_cells)
            # The new open squares must have exactly two cells
            if len(new_open) != 2:
                # Defensive: if invalid, skip
                continue
            results.append((new_r,new_c,pawns_set,frozenset(new_open)))
        return results

    # Initial state creation
    initial_state = (kr,kc,frozenset(pawns),tuple(sorted(open_squares)))

    # BFS to find minimal moves
    # Use a queue and a visited set
    visited = set()
    queue = deque()
    visited.add(initial_state)
    queue.append( (initial_state, 0) )  # (state, moves)

    while queue:
        (cur_kr,cur_kc, cur_pawns, cur_open), dist = queue.popleft()
        # Check if king at goal
        if (cur_kr,cur_kc) == goal_king:
            return dist
        open_set = set(cur_open)

        # Generate all next states by sliding pawns
        for next_state in pawn_moves(cur_pawns, open_set, cur_kr, cur_kc):
            if next_state not in visited:
                visited.add(next_state)
                queue.append((next_state, dist+1))

        # Generate all next states by sliding king
        for kr_new, kc_new, pawns_new, open_new in king_slide_moves(cur_kr, cur_kc, cur_pawns, open_set):
            state = (kr_new, kc_new, pawns_new, tuple(sorted(open_new)))
            if state not in visited:
                visited.add(state)
                queue.append((state, dist+1))

    # If BFS finishes without finding goal
    return -1

def main():
    input = sys.stdin.readline
    while True:
        line = input()
        if not line:
            break
        H,W = map(int,line.strip().split())
        if H == 0 and W == 0:
            break
        grid = [input().rstrip('\n') for _ in range(H)]
        ans = solve_puzzle(H,W,grid)
        print(ans)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3441300094127655
    2. '.' → logprob: -1.594130039215088
    3. '<|end|>' → logprob: -2.969130039215088
    4. '\' → logprob: -4.469130039215088
    5. 'import' → logprob: -5.094130039215088
    6. 'newline' → logprob: -5.094130039215088
    7. '' → logprob: -5.844130039215088
    8. '<|end|>' → logprob: -5.969130039215088
    9. '\r' → logprob: -6.094130039215088
    10. '
' → logprob: -6.344130039215088

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.01979253999888897
    2. 'os' → logprob: -4.019792556762695
    3. ' pathlib' → logprob: -7.894792556762695
    4. ' math' → logprob: -8.144792556762695
    5. ' Py' → logprob: -8.144792556762695
    6. ' collections' → logprob: -8.394792556762695
    7. ' ' → logprob: -9.144792556762695
    8. 'collections' → logprob: -9.894792556762695
    9. ' datetime' → logprob: -10.019792556762695
    10. ' typing' → logprob: -10.519792556762695

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6514770984649658
    2. 'import' → logprob: -0.7764770984649658
    3. '.' → logprob: -4.026476860046387
    4. '```' → logprob: -7.776476860046387
    5. ' ' → logprob: -8.526476860046387
    6. '.import' → logprob: -9.651476860046387
    7. '_' → logprob: -10.026476860046387
    8. '<|end|>' → logprob: -10.276476860046387
    9. '	import' → logprob: -10.401476860046387
    10. '_import' → logprob: -11.026476860046387

Token 6: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.2553475499153137
    2. ' deque' → logprob: -1.630347490310669
    3. ' abc' → logprob: -3.880347490310669
    4. 'deque' → logprob: -5.005347728729248
    5. ' Counter' → logprob: -6.755347728729248
    6. ' named' → logprob: -8.00534725189209
    7. 'abc' → logprob: -8.13034725189209
    8. ' import' → logprob: -9.25534725189209
    9. ' collections' → logprob: -10.00534725189209
    10. 'Counter' → logprob: -10.13034725189209

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0079413652420044
    2. '

' → logprob: -1.2579413652420044
    3. '
' → logprob: -1.7579413652420044
    4. 'import' → logprob: -2.257941246032715
    5. '```' → logprob: -3.132941246032715
    6. '\' → logprob: -3.757941246032715
    7. 'newline' → logprob: -6.507941246032715
    8. '<|end|>' → logprob: -6.507941246032715
    9. '' → logprob: -7.382941246032715
    10. '<|end|>' → logprob: -7.507941246032715

Token 8: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3328877687454224
    2. 'd' → logprob: -1.4578877687454224
    3. '```' → logprob: -2.207887649536133
    4. '`' → logprob: -2.207887649536133
    5. 'b' → logprob: -2.332887649536133
    6. '\' → logprob: -3.332887649536133
    7. 'import' → logprob: -3.332887649536133
    8. 'a' → logprob: -3.832887649536133
    9. ',' → logprob: -4.457887649536133
    10. 'q' → logprob: -4.832887649536133

Token 9: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.001463692169636488
    2. ' bfs' → logprob: -6.876463890075684
    3. ' process' → logprob: -9.251463890075684
    4. ' space' → logprob: -9.876463890075684
    5. ' dfs' → logprob: -10.126463890075684
    6. ' main' → logprob: -10.376463890075684
    7. ' ```' → logprob: -10.376463890075684
    8. ' ' → logprob: -11.001463890075684
    9. ' )' → logprob: -11.126463890075684
    10. ' BFS' → logprob: -11.501463890075684

Token 10: '_p' (ID: 1359)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007898683659732342
    2. '_' → logprob: -5.257898807525635
    3. '():' → logprob: -6.382898807525635
    4. ':' → logprob: -8.007898330688477
    5. '(:' → logprob: -8.757898330688477
    6. '```' → logprob: -8.882898330688477
    7. ' (' → logprob: -9.507898330688477
    8. '(line' → logprob: -11.007898330688477
    9. '(`' → logprob: -11.382898330688477
    10. '):' → logprob: -11.382898330688477

Token 11: 'uzzle' (ID: 38271)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.4537259042263031
    2. 'r' → logprob: -1.5787259340286255
    3. 'uzzle' → logprob: -2.453725814819336
    4. 'ath' → logprob: -3.953725814819336
    5. 'l' → logprob: -4.453725814819336
    6. 'ar' → logprob: -4.703725814819336
    7. 'ermut' → logprob: -5.203725814819336
    8. 'rocessing' → logprob: -5.203725814819336
    9. 'rocess' → logprob: -5.453725814819336
    10. 'al' → logprob: -5.703725814819336

Token 12: '(H' (ID: 20904)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019993890076875687
    2. '_' → logprob: -4.269993782043457
    3. '():' → logprob: -5.519993782043457
    4. '(:' → logprob: -7.144993782043457
    5. ':' → logprob: -8.019993782043457
    6. '_:' → logprob: -9.144993782043457
    7. '(_:' → logprob: -9.644993782043457
    8. '```' → logprob: -9.769993782043457
    9. '):' → logprob: -9.894993782043457
    10. '("("' → logprob: -10.144993782043457

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02081676572561264
    2. '):' → logprob: -3.8958168029785156
    3. ' ,' → logprob: -9.020816802978516
    4. ')' → logprob: -9.770816802978516
    5. ':' → logprob: -10.645816802978516
    6. ' ):' → logprob: -11.270816802978516
    7. 'e' → logprob: -11.520816802978516
    8. '_,' → logprob: -11.770816802978516
    9. ',W' → logprob: -12.395816802978516
    10. '=' → logprob: -12.395816802978516

Token 14: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.5395541787147522
    2. 'W' → logprob: -0.9145541787147522
    3. ' grid' → logprob: -5.289554119110107
    4. 'D' → logprob: -6.914554119110107
    5. 'grid' → logprob: -7.227054119110107
    6. 'N' → logprob: -7.352054119110107
    7. ' D' → logprob: -7.352054119110107
    8. ' M' → logprob: -7.539554119110107
    9. ' N' → logprob: -7.539554119110107
    10. 'M' → logprob: -7.852054119110107

Token 15: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21172362565994263
    2. ',' → logprob: -1.7117235660552979
    3. ')' → logprob: -4.586723804473877
    4. ' ):' → logprob: -11.461723327636719
    5. ':' → logprob: -11.586723327636719
    6. '```' → logprob: -11.711723327636719
    7. ''):' → logprob: -12.086723327636719
    8. ' ,' → logprob: -12.211723327636719
    9. '),' → logprob: -12.461723327636719
    10. '*' → logprob: -12.461723327636719

Token 16: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.43846920132637024
    2. 'grid' → logprob: -2.063469171524048
    3. ' board' → logprob: -2.813469171524048
    4. 'board' → logprob: -3.063469171524048
    5. ' S' → logprob: -3.813469171524048
    6. 'S' → logprob: -4.438469409942627
    7. ' G' → logprob: -4.813469409942627
    8. ' maze' → logprob: -5.063469409942627
    9. ' walls' → logprob: -5.188469409942627
    10. 'graph' → logprob: -5.313469409942627

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006385732558555901
    2. ',' → logprob: -7.875638484954834
    3. ')' → logprob: -8.375638961791992
    4. ':' → logprob: -11.750638961791992
    5. '):
' → logprob: -11.750638961791992
    6. ' ):' → logprob: -12.375638961791992
    7. '[' → logprob: -13.000638961791992
    8. ' ' → logprob: -13.500638961791992
    9. ''):' → logprob: -13.750638961791992
    10. '   ' → logprob: -14.375638961791992

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02484174072742462
    2. ':' → logprob: -3.899841785430908
    3. '```' → logprob: -6.024841785430908
    4. '    ' → logprob: -8.14984130859375
    5. ':
' → logprob: -8.14984130859375
    6. '
' → logprob: -8.14984130859375
    7. '    
' → logprob: -8.27484130859375
    8. '\n' → logprob: -8.64984130859375
    9. '\' → logprob: -8.64984130859375
    10. '``' → logprob: -9.39984130859375

Token 19: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4234256446361542
    2. 'dist' → logprob: -2.2984256744384766
    3. ' dp' → logprob: -2.7984256744384766
    4. 'dp' → logprob: -2.7984256744384766
    5. '    ' → logprob: -3.2984256744384766
    6. ' dist' → logprob: -3.4234256744384766
    7. ' visited' → logprob: -4.048425674438477
    8. 'visited' → logprob: -4.923425674438477
    9. 'distance' → logprob: -5.048425674438477
    10. 'queue' → logprob: -5.673425674438477

Token 20: ' Directions' (ID: 85422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.782275676727295
    2. ' visited' → logprob: -1.907275676727295
    3. ' queue' → logprob: -1.907275676727295
    4. ' dist' → logprob: -2.157275676727295
    5. 'dp' → logprob: -2.532275676727295
    6. ' dp' → logprob: -2.782275676727295
    7. 'visited' → logprob: -2.907275676727295
    8. 'dist' → logprob: -3.157275676727295
    9. ' q' → logprob: -3.282275676727295
    10. 'queue' → logprob: -3.407275676727295

Token 21: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0001329791557509452
    2. '=' → logprob: -9.25013256072998
    3. '   ' → logprob: -10.50013256072998
    4. ':' → logprob: -11.75013256072998
    5. 's' → logprob: -14.75013256072998
    6. ' ' → logprob: -14.75013256072998
    7. ' =
' → logprob: -15.37513256072998
    8. 'dire' → logprob: -16.500133514404297
    9. '```' → logprob: -16.625133514404297
    10. ' =[' → logprob: -17.125133514404297

Token 22: ' movement' (ID: 12772)
  Prédit: ' moving'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moving' → logprob: -1.405198335647583
    2. ' up' → logprob: -1.655198335647583
    3. ' ' → logprob: -1.905198335647583
    4. ' movement' → logprob: -2.530198335647583
    5. ' four' → logprob: -2.655198335647583
    6. ' adjacent' → logprob: -3.030198335647583
    7. ' moves' → logprob: -3.030198335647583
    8. ' movements' → logprob: -3.655198335647583
    9. ' neighbors' → logprob: -3.780198335647583
    10. ' BFS' → logprob: -3.905198335647583

Token 23: ' up' (ID: 869)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1455201804637909
    2. ':' → logprob: -2.5205202102661133
    3. 'dire' → logprob: -3.8955202102661133
    4. ' directions' → logprob: -4.020520210266113
    5. ' :' → logprob: -4.520520210266113
    6. '   ' → logprob: -6.395520210266113
    7. 'dx' → logprob: -6.395520210266113
    8. '```' → logprob: -7.770520210266113
    9. ' dx' → logprob: -8.145520210266113
    10. '=' → logprob: -8.270520210266113

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007305599283427
    2. ' ,' → logprob: -5.00730562210083
    3. ' =' → logprob: -9.132305145263672
    4. ' and' → logprob: -9.132305145263672
    5. '/down' → logprob: -9.132305145263672
    6. '   ' → logprob: -9.882305145263672
    7. 'down' → logprob: -10.007305145263672
    8. '[' → logprob: -10.382305145263672
    9. '=' → logprob: -10.632305145263672
    10. 's' → logprob: -11.007305145263672

Token 25: ' down' (ID: 1917)
  Prédit: ' down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' down' → logprob: -0.033829767256975174
    2. 'down' → logprob: -3.408829689025879
    3. ' right' → logprob: -9.283829689025879
    4. '_down' → logprob: -10.158829689025879
    5. ' ' → logprob: -10.783829689025879
    6. ',' → logprob: -10.908829689025879
    7. ' ,' → logprob: -12.658829689025879
    8. 'Down' → logprob: -12.658829689025879
    9. 'right' → logprob: -12.908829689025879
    10. '.down' → logprob: -13.283829689025879

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025013405829668045
    2. ' ,' → logprob: -6.002501487731934
    3. '   ' → logprob: -12.252501487731934
    4. '`,' → logprob: -12.752501487731934
    5. ' =' → logprob: -13.127501487731934
    6. '=' → logprob: -13.252501487731934
    7. '[' → logprob: -13.377501487731934
    8. '_,' → logprob: -13.502501487731934
    9. '```' → logprob: -13.627501487731934
    10. ' and' → logprob: -13.752501487731934

Token 27: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.05953407287597656
    2. 'left' → logprob: -2.9345340728759766
    3. ' right' → logprob: -5.809534072875977
    4. 'right' → logprob: -7.434534072875977
    5. ' down' → logprob: -8.059534072875977
    6. ',' → logprob: -8.309534072875977
    7. 'down' → logprob: -8.559534072875977
    8. ',left' → logprob: -8.809534072875977
    9. '_left' → logprob: -9.934534072875977
    10. '1' → logprob: -11.059534072875977

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014765332452952862
    2. ' ,' → logprob: -6.876476764678955
    3. ' and' → logprob: -8.001476287841797
    4. 'and' → logprob: -9.251476287841797
    5. ',right' → logprob: -13.501476287841797
    6. '```' → logprob: -13.626476287841797
    7. '   ' → logprob: -13.876476287841797
    8. '`,' → logprob: -13.876476287841797
    9. ',
' → logprob: -14.251476287841797
    10. '_,' → logprob: -14.376476287841797

Token 29: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5762057900428772
    2. ' right' → logprob: -0.8262057900428772
    3. 'and' → logprob: -8.82620620727539
    4. ' and' → logprob: -9.70120620727539
    5. 'Right' → logprob: -10.57620620727539
    6. '_right' → logprob: -11.20120620727539
    7. '   ' → logprob: -12.20120620727539
    8. '	right' → logprob: -12.32620620727539
    9. ',right' → logprob: -12.45120620727539
    10. '```' → logprob: -13.32620620727539

Token 30: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8393412232398987
    2. 'dire' → logprob: -1.589341163635254
    3. '
' → logprob: -2.089341163635254
    4. '   ' → logprob: -2.339341163635254
    5. ' directions' → logprob: -2.964341163635254
    6. ':
' → logprob: -3.089341163635254
    7. '```' → logprob: -3.589341163635254
    8. '    
' → logprob: -5.964341163635254
    9. ',' → logprob: -6.089341163635254
    10. '``' → logprob: -6.464341163635254

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30365967750549316
    2. ' directions' → logprob: -1.8036596775054932
    3. 'dire' → logprob: -2.428659677505493
    4. ':' → logprob: -5.303659439086914
    5. ',' → logprob: -6.928659439086914
    6. '
' → logprob: -7.053659439086914
    7. ':
' → logprob: -7.428659439086914
    8. 'dx' → logprob: -7.678659439086914
    9. 'moves' → logprob: -8.553659439086914
    10. 'direction' → logprob: -8.678659439086914

Token 32: ' directions' (ID: 24921)
  Prédit: ' directions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.1567888855934143
    2. 'dire' → logprob: -2.0317888259887695
    3. '   ' → logprob: -4.2817888259887695
    4. ' DIRE' → logprob: -9.65678882598877
    5. ' moves' → logprob: -11.03178882598877
    6. 'd' → logprob: -11.03178882598877
    7. 'dirs' → logprob: -11.28178882598877
    8. 'moves' → logprob: -11.40678882598877
    9. 'dx' → logprob: -11.53178882598877
    10. 'Directions' → logprob: -11.53178882598877

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0003802680876106024
    2. '=' → logprob: -7.875380039215088
    3. ' =[' → logprob: -16.25037956237793
    4. ' ' → logprob: -17.75037956237793
    5. ')' → logprob: -17.87537956237793
    6. ' =
' → logprob: -18.12537956237793
    7. ':' → logprob: -18.87537956237793
    8. '   ' → logprob: -19.12537956237793
    9. '=[' → logprob: -19.37537956237793
    10. 's' → logprob: -19.37537956237793

Token 34: ' [' (ID: 723)
  Prédit: ' [('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [(' → logprob: -0.015785526484251022
    2. '[(' → logprob: -4.5157856941223145
    3. ' [' → logprob: -5.3907856941223145
    4. '[' → logprob: -8.765785217285156
    5. ' [
' → logprob: -11.890785217285156
    6. ' ' → logprob: -12.390785217285156
    7. '[
' → logprob: -14.765785217285156
    8. '[((' → logprob: -15.390785217285156
    9. ' [[' → logprob: -15.515785217285156
    10. '   ' → logprob: -16.015785217285156

Token 35: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5766713619232178
    2. '(-' → logprob: -0.8266713619232178
    3. ' (' → logprob: -7.326671600341797
    4. ' (-' → logprob: -10.201671600341797
    5. '   ' → logprob: -10.326671600341797
    6. '(up' → logprob: -13.201671600341797
    7. ' ' → logprob: -13.326671600341797
    8. '[' → logprob: -16.076671600341797
    9. '(+' → logprob: -16.076671600341797
    10. '	' → logprob: -16.576671600341797

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '-' → logprob: -19.375
    4. '```' → logprob: -19.75
    5. '2' → logprob: -19.875
    6. '0' → logprob: -20.1875
    7. '১' → logprob: -20.875
    8. '１' → logprob: -21.0
    9. '१' → logprob: -21.0625
    10. '۱' → logprob: -21.125

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.226628895296017e-06
    2. ' ,' → logprob: -12.000007629394531
    3. '0' → logprob: -14.375007629394531
    4. '),' → logprob: -15.375007629394531
    5. '<|end|>' → logprob: -16.25000762939453
    6. ',),' → logprob: -17.37500762939453
    7. '‌,' → logprob: -17.87500762939453
    8. '1' → logprob: -18.12500762939453
    9. '```' → logprob: -18.50000762939453
    10. ',
' → logprob: -18.50000762939453

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019286326132714748
    2. ' ' → logprob: -6.251928806304932
    3. ')' → logprob: -19.376928329467773
    4. '۰' → logprob: -20.626928329467773
    5. '  ' → logprob: -21.751928329467773
    6. '<|end|>' → logprob: -22.001928329467773
    7. '   ' → logprob: -22.126928329467773
    8. ',' → logprob: -22.376928329467773
    9. ' ' → logprob: -22.626928329467773
    10. '    ' → logprob: -22.876928329467773

Token 39: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.001130690099671483
    2. '),(' → logprob: -6.8761305809021
    3. ')' → logprob: -9.501131057739258
    4. ' ),' → logprob: -11.001131057739258
    5. '),
' → logprob: -12.251131057739258
    6. '),

' → logprob: -14.001131057739258
    7. ')]' → logprob: -14.751131057739258
    8. ',),' → logprob: -16.001131057739258
    9. '),
' → logprob: -16.501131057739258
    10. ')],' → logprob: -16.626131057739258

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.263011578586884e-05
    2. '0' → logprob: -10.500042915344238
    3. ' ' → logprob: -11.125042915344238
    4. '+' → logprob: -15.375042915344238
    5. '-' → logprob: -17.250041961669922
    6. '```' → logprob: -17.625041961669922
    7. '01' → logprob: -19.000041961669922
    8. '2' → logprob: -19.125041961669922
    9. '   ' → logprob: -19.187541961669922
    10. '``' → logprob: -19.812541961669922

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002108118060277775
    2. '0' → logprob: -8.625210762023926
    3. ' ,' → logprob: -10.375210762023926
    4. ' ' → logprob: -17.375211715698242
    5. '<|end|>' → logprob: -17.750211715698242
    6. '‌,' → logprob: -19.000211715698242
    7. '```' → logprob: -19.500211715698242
    8. ')' → logprob: -19.625211715698242
    9. '),(' → logprob: -19.875211715698242
    10. '،' → logprob: -21.250211715698242

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '۰' → logprob: -17.500017166137695
    4. '   ' → logprob: -19.500017166137695
    5. '```' → logprob: -19.562517166137695
    6. '０' → logprob: -19.625017166137695
    7. '  ' → logprob: -19.812517166137695
    8. '٠' → logprob: -20.000017166137695
    9. '00' → logprob: -21.125017166137695
    10. '०' → logprob: -21.187517166137695

Token 43: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.008637377060949802
    2. '),' → logprob: -4.758637428283691
    3. ' ),' → logprob: -10.758637428283691
    4. ')' → logprob: -13.883637428283691
    5. ',' → logprob: -14.883637428283691
    6. ' ' → logprob: -15.758637428283691
    7. '0' → logprob: -16.883636474609375
    8. '),'' → logprob: -17.008636474609375
    9. '(' → logprob: -17.133636474609375
    10. '),
' → logprob: -17.133636474609375

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011248346709180623
    2. ' ' → logprob: -9.125112533569336
    3. '-' → logprob: -12.625112533569336
    4. ',' → logprob: -16.500112533569336
    5. '۰' → logprob: -16.625112533569336
    6. '```' → logprob: -17.375112533569336
    7. ' -' → logprob: -18.375112533569336
    8. '   ' → logprob: -18.687612533569336
    9. '０' → logprob: -18.875112533569336
    10. ' ' → logprob: -18.875112533569336

Token 45: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.0010344763286411762
    2. ',' → logprob: -6.876034259796143
    3. ' ,-' → logprob: -14.3760347366333
    4. ',--' → logprob: -15.0010347366333
    5. '-' → logprob: -15.1260347366333
    6. ',-

' → logprob: -15.6260347366333
    7. ' ,' → logprob: -16.376033782958984
    8. ',+' → logprob: -16.501033782958984
    9. '1' → logprob: -17.126033782958984
    10. ',-
' → logprob: -17.501033782958984

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. ',' → logprob: -18.0
    4. '```' → logprob: -18.25
    5. ')' → logprob: -19.25
    6. '+' → logprob: -19.5625
    7. '১' → logprob: -19.9375
    8. '۱' → logprob: -20.0
    9. '-' → logprob: -20.25
    10. '१' → logprob: -20.3125

Token 47: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -3.1186566047836095e-05
    2. '),' → logprob: -10.500031471252441
    3. ',(' → logprob: -13.375031471252441
    4. ',' → logprob: -13.750031471252441
    5. '(' → logprob: -14.750031471252441
    6. ')]' → logprob: -15.000031471252441
    7. ')' → logprob: -15.750031471252441
    8. '0' → logprob: -16.500030517578125
    9. ' ),' → logprob: -16.750030517578125
    10. ')(' → logprob: -17.875030517578125

Token 48: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06996633857488632
    2. '0' → logprob: -2.6949663162231445
    3. ' ' → logprob: -10.444966316223145
    4. '+' → logprob: -15.069966316223145
    5. '```' → logprob: -15.069966316223145
    6. '01' → logprob: -15.882466316223145
    7. ')' → logprob: -16.31996726989746
    8. ',' → logprob: -16.38246726989746
    9. '2' → logprob: -17.06996726989746
    10. '  ' → logprob: -17.38246726989746

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1875571544806007e-05
    2. '1' → logprob: -11.375011444091797
    3. ' ,' → logprob: -15.875011444091797
    4. ',+' → logprob: -16.125011444091797
    5. ',)' → logprob: -16.250011444091797
    6. ' ' → logprob: -18.750011444091797
    7. ')]' → logprob: -19.000011444091797
    8. ')' → logprob: -19.250011444091797
    9. ',-' → logprob: -19.375011444091797
    10. ',(' → logprob: -19.750011444091797

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '0' → logprob: -17.375
    4. '+' → logprob: -17.625
    5. '```' → logprob: -18.25
    6. ')' → logprob: -18.625
    7. '2' → logprob: -21.625
    8. '１' → logprob: -21.75
    9. '۱' → logprob: -22.0
    10. '-' → logprob: -22.75

Token 51: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.04648667946457863
    2. ')' → logprob: -3.2964866161346436
    3. ']' → logprob: -4.796486854553223
    4. ')])' → logprob: -9.421486854553223
    5. '])]' → logprob: -10.546486854553223
    6. ' )' → logprob: -10.671486854553223
    7. '])' → logprob: -11.546486854553223
    8. ' ]' → logprob: -12.796486854553223
    9. '   ' → logprob: -12.921486854553223
    10. '),' → logprob: -13.671486854553223

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0762079656124115
    2. '
' → logprob: -3.4512078762054443
    3. 'visited' → logprob: -4.201208114624023
    4. '    
' → logprob: -4.701208114624023
    5. ' visited' → logprob: -4.701208114624023
    6. ',' → logprob: -6.201208114624023
    7. 'n' → logprob: -6.701208114624023
    8. 'd' → logprob: -7.326208114624023
    9. 'distance' → logprob: -7.326208114624023
    10. ')' → logprob: -7.451208114624023

Token 53: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7707422971725464
    2. 'visited' → logprob: -0.8957422971725464
    3. 'queue' → logprob: -2.645742416381836
    4. 'start' → logprob: -4.020742416381836
    5. 'distance' → logprob: -4.020742416381836
    6. '   ' → logprob: -4.770742416381836
    7. '#' (adapté à ' #') → logprob: -5.520742416381836
    8. 'dp' → logprob: -6.020742416381836
    9. 'q' → logprob: -6.270742416381836
    10. 'max' → logprob: -6.645742416381836

Token 54: ' Parse' (ID: 26701)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.6085892915725708
    2. 'visited' → logprob: -1.6085892915725708
    3. '#' → logprob: -2.4835891723632812
    4. 'queue' → logprob: -2.8585891723632812
    5. 'dist' → logprob: -3.2335891723632812
    6. 'from' → logprob: -3.8585891723632812
    7. 'max' → logprob: -4.358589172363281
    8. ' start' → logprob: -4.733589172363281
    9. ' visited' → logprob: -5.483589172363281
    10. 'q' → logprob: -5.858589172363281

Token 55: ' the' (ID: 290)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.3329395055770874
    2. 'start' → logprob: -2.082939624786377
    3. ' the' → logprob: -2.207939624786377
    4. ' starting' → logprob: -3.457939624786377
    5. ' grid' → logprob: -6.082939624786377
    6. 's' → logprob: -6.332939624786377
    7. ' visited' → logprob: -6.457939624786377
    8. ' a' → logprob: -6.582939624786377
    9. 'starting' → logprob: -6.707939624786377
    10. '_start' → logprob: -6.707939624786377

Token 56: ' grid' (ID: 10586)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.141003966331482
    2. ' starting' → logprob: -1.266003966331482
    3. ' grid' → logprob: -1.891003966331482
    4. ' start' → logprob: -2.1410040855407715
    5. 'grid' → logprob: -3.1410040855407715
    6. 'starting' → logprob: -3.3910040855407715
    7. ' initial' → logprob: -4.7660040855407715
    8. ' positions' → logprob: -4.8910040855407715
    9. 'positions' → logprob: -5.1410040855407715
    10. 's' → logprob: -5.5160040855407715

Token 57: ' to' (ID: 316)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.3296862840652466
    2. '   ' → logprob: -1.4546862840652466
    3. 'n' → logprob: -1.9546862840652466
    4. '```' → logprob: -2.329686164855957
    5. 'for' → logprob: -3.079686164855957
    6. ' for' → logprob: -3.079686164855957
    7. ' visited' → logprob: -3.704686164855957
    8. ':' → logprob: -4.079686164855957
    9. 'start' → logprob: -4.329686164855957
    10. 'rows' → logprob: -4.329686164855957

Token 58: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.10358088463544846
    2. 'find' → logprob: -2.353580951690674
    3. ' locate' → logprob: -6.478580951690674
    4. ' identify' → logprob: -6.853580951690674
    5. 'identify' → logprob: -7.353580951690674
    6. '<|end|>' → logprob: -9.228580474853516
    7. '_find' → logprob: -10.978580474853516
    8. '	find' → logprob: -12.103580474853516
    9. 'loc' → logprob: -12.478580474853516
    10. '.find' → logprob: -13.103580474853516

Token 59: ':
' (ID: 734)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.14300067722797394
    2. ' S' → logprob: -2.768000602722168
    3. 'the' → logprob: -3.393000602722168
    4. 'S' → logprob: -4.143000602722168
    5. 's' → logprob: -5.268000602722168
    6. '<|end|>' → logprob: -5.393000602722168
    7. ' ' → logprob: -6.268000602722168
    8. 'start' → logprob: -6.393000602722168
    9. ' start' → logprob: -6.518000602722168
    10. ' all' → logprob: -6.518000602722168

Token 60: '   ' (ID: 271)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.2438061684370041
    2. 'S' → logprob: -2.7438061237335205
    3. ' s' → logprob: -2.9938061237335205
    4. 's' → logprob: -3.2438061237335205
    5. ' start' → logprob: -4.4938063621521
    6. ' ' → logprob: -4.8688063621521
    7. 'start' → logprob: -4.9938063621521
    8. ' P' → logprob: -5.6188063621521
    9. ''s' → logprob: -5.7438063621521
    10. ' a' → logprob: -5.8688063621521

Token 61: ' #' (ID: 1069)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -1.1373896598815918
    2. 'S' → logprob: -1.7623896598815918
    3. ' start' → logprob: -1.8873896598815918
    4. 's' → logprob: -2.387389659881592
    5. ' s' → logprob: -2.512389659881592
    6. ' ' → logprob: -2.762389659881592
    7. 'start' → logprob: -3.387389659881592
    8. ' P' → logprob: -4.887389659881592
    9. ' a' → logprob: -4.887389659881592
    10. ''s' → logprob: -5.137389659881592

Token 62: ' -' (ID: 533)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -1.203980565071106
    2. ' start' → logprob: -1.328980565071106
    3. ' s' → logprob: -2.0789804458618164
    4. 's' → logprob: -2.3289804458618164
    5. 'S' → logprob: -2.4539804458618164
    6. ' ' → logprob: -3.3289804458618164
    7. 'start' → logprob: -3.5789804458618164
    8. ' a' → logprob: -4.828980445861816
    9. ''s' → logprob: -5.203980445861816
    10. ' the' → logprob: -5.703980445861816

Token 63: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0479450225830078
    2. 'S' → logprob: -1.4229450225830078
    3. 'start' → logprob: -1.7979450225830078
    4. ' start' → logprob: -2.547945022583008
    5. 'the' → logprob: -2.922945022583008
    6. 's' → logprob: -3.547945022583008
    7. ''s' → logprob: -3.672945022583008
    8. ' S' → logprob: -3.922945022583008
    9. ' starting' → logprob: -4.297945022583008
    10. 'starting' → logprob: -6.360445022583008

Token 64: ' king' (ID: 13793)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.57379150390625
    2. ' start' → logprob: -1.82379150390625
    3. ' starting' → logprob: -1.94879150390625
    4. 'S' → logprob: -3.44879150390625
    5. 'starting' → logprob: -3.57379150390625
    6. 's' → logprob: -4.19879150390625
    7. ''s' → logprob: -4.32379150390625
    8. ' initial' → logprob: -4.57379150390625
    9. ' positions' → logprob: -4.82379150390625
    10. 'positions' → logprob: -5.32379150390625

Token 65: ' block' (ID: 4355)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.04000723361968994
    2. ''' → logprob: -3.5400071144104004
    3. ' '' → logprob: -5.9150071144104
    4. '_pos' → logprob: -6.9150071144104
    5. '_positions' → logprob: -7.0400071144104
    6. 's' → logprob: -7.1650071144104
    7. '<|end|>' → logprob: -7.4150071144104
    8. 'position' → logprob: -7.4150071144104
    9. '_position' → logprob: -7.5400071144104
    10. ',' → logprob: -7.6650071144104

Token 66: ' cells' (ID: 11242)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6870730519294739
    2. ''s' → logprob: -1.312072992324829
    3. ' and' → logprob: -3.187072992324829
    4. ' (' → logprob: -3.187072992324829
    5. 's' → logprob: -3.562072992324829
    6. ' ,' → logprob: -3.937072992324829
    7. '(' → logprob: -3.937072992324829
    8. '_' → logprob: -4.062073230743408
    9. '#' → logprob: -4.437073230743408
    10. '(s' → logprob: -4.687073230743408

Token 67: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16359874606132507
    2. ' ,' → logprob: -2.6635987758636475
    3. '<|end|>' → logprob: -3.9135987758636475
    4. '#' → logprob: -4.163598537445068
    5. ':' → logprob: -4.663598537445068
    6. ' and' → logprob: -4.788598537445068
    7. '   ' → logprob: -4.913598537445068
    8. '<|end|>' → logprob: -5.538598537445068
    9. ' ' → logprob: -5.788598537445068
    10. ''s' → logprob: -5.788598537445068

Token 68: '2' (ID: 17)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.5057955980300903
    2. ' (' → logprob: -2.005795478820801
    3. ' '' → logprob: -2.130795478820801
    4. ')' → logprob: -2.255795478820801
    5. ''s' → logprob: -2.380795478820801
    6. '(k' → logprob: -3.255795478820801
    7. '[(' → logprob: -3.630795478820801
    8. '(' → logprob: -3.630795478820801
    9. 'k' → logprob: -3.880795478820801
    10. 'K' → logprob: -4.005795478820801

Token 69: 'x' (ID: 87)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03627157583832741
    2. ',' → logprob: -3.911271572113037
    3. ' )' → logprob: -4.536271572113037
    4. '),' → logprob: -6.661271572113037
    5. ',)' → logprob: -6.661271572113037
    6. ' and' → logprob: -7.411271572113037
    7. '0' → logprob: -8.661272048950195
    8. '])' → logprob: -8.661272048950195
    9. ')
' → logprob: -9.161272048950195
    10. ']' → logprob: -9.161272048950195

Token 70: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004888127092272043
    2. ' ' → logprob: -5.37988805770874
    3. '3' → logprob: -8.754888534545898
    4. ')' → logprob: -9.879888534545898
    5. ' )' → logprob: -11.129888534545898
    6. '1' → logprob: -11.129888534545898
    7. '

' → logprob: -11.754888534545898
    8. '
' → logprob: -11.879888534545898
    9. ',' → logprob: -13.442388534545898
    10. '-' → logprob: -13.504888534545898

Token 71: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44868263602256775
    2. ' square' → logprob: -2.1986825466156006
    3. ' squares' → logprob: -2.3236825466156006
    4. ' )' → logprob: -2.9486825466156006
    5. ' block' → logprob: -4.19868278503418
    6. '),' → logprob: -4.19868278503418
    7. ' of' → logprob: -4.19868278503418
    8. ')
' → logprob: -4.32368278503418
    9. 'square' → logprob: -4.69868278503418
    10. ' ' → logprob: -5.19868278503418

Token 72: ' marked' (ID: 20779)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8161716461181641
    2. ' and' → logprob: -1.941171646118164
    3. ' contiguous' → logprob: -2.691171646118164
    4. '<|end|>' → logprob: -2.941171646118164
    5. ' ' → logprob: -3.566171646118164
    6. ' '' → logprob: -3.566171646118164
    7. ' which' → logprob: -3.691171646118164
    8. ' all' → logprob: -3.691171646118164
    9. ' )' → logprob: -3.691171646118164
    10. ' the' → logprob: -3.816171646118164

Token 73: ' with' (ID: 483)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.654102087020874
    2. ' with' → logprob: -0.904102087020874
    3. 'with' → logprob: -3.529102087020874
    4. 'as' → logprob: -3.654102087020874
    5. '1' → logprob: -4.404102325439453
    6. '2' → logprob: -5.529102325439453
    7. ' ' → logprob: -6.654102325439453
    8. ' by' → logprob: -6.779102325439453
    9. '```' → logprob: -7.904102325439453
    10. 'by' → logprob: -8.654102325439453

Token 74: ' '' (ID: 461)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7643681764602661
    2. '1' → logprob: -1.2643681764602661
    3. '9' → logprob: -2.3893680572509766
    4. '3' → logprob: -3.0143680572509766
    5. '4' → logprob: -3.2643680572509766
    6. ' ' → logprob: -3.3893680572509766
    7. '5' → logprob: -4.264368057250977
    8. ''' → logprob: -4.764368057250977
    9. '7' → logprob: -5.639368057250977
    10. ''s' → logprob: -6.014368057250977

Token 75: 'X' (ID: 55)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.29118612408638
    2. '1' → logprob: -2.1661860942840576
    3. '9' → logprob: -3.1661860942840576
    4. 'K' → logprob: -3.4161860942840576
    5. ''' → logprob: -4.166186332702637
    6. '4' → logprob: -4.166186332702637
    7. '3' → logprob: -4.166186332702637
    8. '5' → logprob: -5.291186332702637
    9. 'k' → logprob: -5.416186332702637
    10. ' ' → logprob: -6.666186332702637

Token 76: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.14159849286079407
    2. ')' → logprob: -2.3915984630584717
    3. ''' → logprob: -3.3915984630584717
    4. '')]' → logprob: -6.141598701477051
    5. ''),' → logprob: -6.391598701477051
    6. ')'' → logprob: -6.766598701477051
    7. ''))' → logprob: -7.641598701477051
    8. ']' → logprob: -7.766598701477051
    9. 'X' → logprob: -8.64159870147705
    10. '']' → logprob: -8.89159870147705

Token 77: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49623915553092957
    2. ':' → logprob: -2.246239185333252
    3. ' ' → logprob: -2.371239185333252
    4. '\' → logprob: -3.371239185333252
    5. '#' → logprob: -3.496239185333252
    6. ')' → logprob: -3.621239185333252
    7. ' 
' → logprob: -3.746239185333252
    8. '   ' → logprob: -3.996239185333252
    9. ' ,' → logprob: -3.996239185333252
    10. ',
' → logprob: -4.621239185333252

Token 78: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17722800374031067
    2. ',' → logprob: -2.9272279739379883
    3. '#' (adapté à ' #') → logprob: -3.0522279739379883
    4. ' ' → logprob: -4.177227973937988
    5. '```' → logprob: -4.802227973937988
    6. ' ,' → logprob: -5.052227973937988
    7. '    ' → logprob: -5.177227973937988
    8. '\' → logprob: -5.802227973937988
    9. '    
' → logprob: -5.927227973937988
    10. ' 
' → logprob: -6.052227973937988

Token 79: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8237376809120178
    2. ' ' → logprob: -1.698737621307373
    3. ' #' → logprob: -2.573737621307373
    4. ' '' → logprob: -2.698737621307373
    5. 'k' → logprob: -2.823737621307373
    6. '   ' → logprob: -3.073737621307373
    7. ''' → logprob: -3.573737621307373
    8. 'x' → logprob: -3.948737621307373
    9. ',' → logprob: -4.823737621307373
    10. '-' → logprob: -5.198737621307373

Token 80: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8030226230621338
    2. ' the' → logprob: -1.1780226230621338
    3. 'positions' → logprob: -2.803022623062134
    4. ' positions' → logprob: -3.553022623062134
    5. 'start' → logprob: -4.053022384643555
    6. ' empty' → logprob: -4.303022384643555
    7. 'empty' → logprob: -4.303022384643555
    8. 'all' → logprob: -4.428022384643555
    9. ' king' → logprob: -4.553022384643555
    10. 'king' → logprob: -4.678022384643555

Token 81: ' paw' (ID: 71961)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.26236411929130554
    2. 'positions' → logprob: -2.137364149093628
    3. 'other' → logprob: -3.262364149093628
    4. ' other' → logprob: -3.262364149093628
    5. ' rest' → logprob: -5.637363910675049
    6. 'position' → logprob: -5.762363910675049
    7. ' ' → logprob: -5.762363910675049
    8. ' blocks' → logprob: -5.887363910675049
    9. 'blocks' → logprob: -5.887363910675049
    10. ' position' → logprob: -6.262363910675049

Token 82: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.34899741411209106
    2. 'n' → logprob: -1.2239973545074463
    3. 's' → logprob: -8.723997116088867
    4. 'nts' → logprob: -9.473997116088867
    5. 'nt' → logprob: -9.973997116088867
    6. 'nb' → logprob: -10.098997116088867
    7. 'r' → logprob: -10.348997116088867
    8. 'print' → logprob: -10.786497116088867
    9. 'nsk' → logprob: -10.786497116088867
    10. 'l' → logprob: -11.098997116088867

Token 83: ' positions' (ID: 15897)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.946461796760559
    2. ''' → logprob: -2.0714616775512695
    3. ' ' → logprob: -2.3214616775512695
    4. ' (' → logprob: -2.3214616775512695
    5. ',' → logprob: -2.4464616775512695
    6. '#' → logprob: -3.0714616775512695
    7. ' cells' → logprob: -3.0714616775512695
    8. '_positions' → logprob: -3.0714616775512695
    9. ' ,' → logprob: -3.1964616775512695
    10. ''s' → logprob: -3.1964616775512695

Token 84: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5125961899757385
    2. '#' → logprob: -1.7625961303710938
    3. ':' → logprob: -2.6375961303710938
    4. 'pawn' → logprob: -3.3875961303710938
    5. 'p' → logprob: -3.7625961303710938
    6. '.' → logprob: -4.262596130371094
    7. ' and' → logprob: -4.262596130371094
    8. ',
' → logprob: -4.637596130371094
    9. 'for' → logprob: -4.887596130371094
    10. '
' → logprob: -5.012596130371094

Token 85: 'marked' (ID: 71560)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -1.5313408374786377
    2. ''' → logprob: -2.1563408374786377
    3. ' (' → logprob: -2.1563408374786377
    4. ')' → logprob: -2.4063408374786377
    5. ' [])' → logprob: -2.6563408374786377
    6. '(' → logprob: -2.7813408374786377
    7. ''s' → logprob: -3.1563408374786377
    8. '[])' → logprob: -3.2813408374786377
    9. '[' → logprob: -3.5313408374786377
    10. '[(' → logprob: -3.6563408374786377

Token 86: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.6326775550842285
    2. ' with' → logprob: -0.7576775550842285
    3. ' as' → logprob: -10.50767707824707
    4. 'as' → logprob: -10.63267707824707
    5. ')' → logprob: -11.75767707824707
    6. ''' → logprob: -12.50767707824707
    7. '	with' → logprob: -12.50767707824707
    8. ' '' → logprob: -12.88267707824707
    9. ' ' → logprob: -13.25767707824707
    10. '=' → logprob: -13.63267707824707

Token 87: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2720237672328949
    2. ''O' → logprob: -2.6470236778259277
    3. ''o' → logprob: -3.0220236778259277
    4. ''*' → logprob: -3.6470236778259277
    5. ''#' → logprob: -4.022023677825928
    6. ' '' → logprob: -4.147023677825928
    7. ''A' → logprob: -4.397023677825928
    8. ''p' → logprob: -4.897023677825928
    9. ''x' → logprob: -5.147023677825928
    10. '1' → logprob: -5.397023677825928

Token 88: 'o' (ID: 78)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.6095060110092163
    2. '1' → logprob: -1.6095060110092163
    3. 'o' → logprob: -1.8595060110092163
    4. 'P' → logprob: -2.234506130218506
    5. ''' → logprob: -2.734506130218506
    6. '#' → logprob: -3.234506130218506
    7. '2' → logprob: -3.359506130218506
    8. 'p' → logprob: -3.484506130218506
    9. 'X' → logprob: -3.609506130218506
    10. '*' → logprob: -3.859506130218506

Token 89: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.006848807912319899
    2. ')' → logprob: -5.2568488121032715
    3. ''' → logprob: -6.7568488121032715
    4. '')]' → logprob: -8.131848335266113
    5. ''),' → logprob: -9.381848335266113
    6. ''o' → logprob: -10.631848335266113
    7. '')
' → logprob: -12.131848335266113
    8. ' ')' → logprob: -12.381848335266113
    9. 'o' → logprob: -12.381848335266113
    10. '")' → logprob: -12.381848335266113

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43776416778564453
    2. '
' → logprob: -1.4377641677856445
    3. '    
' → logprob: -2.9377641677856445
    4. ' 
' → logprob: -3.6877641677856445
    5. '   
' → logprob: -4.8127641677856445
    6. '  
' → logprob: -5.4377641677856445
    7. '```' → logprob: -5.4377641677856445
    8. '     
' → logprob: -5.8127641677856445
    9. 'def' → logprob: -6.0627641677856445
    10. ',' → logprob: -6.0627641677856445

Token 91: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.2194838523864746
    2. 'p' → logprob: -2.2194838523864746
    3. '
' → logprob: -2.2194838523864746
    4. ',' → logprob: -2.3444838523864746
    5. '   ' → logprob: -2.7194838523864746
    6. 'n' → logprob: -2.8444838523864746
    7. ' 
' → logprob: -2.9694838523864746
    8. 'k' → logprob: -3.2194838523864746
    9. ':' → logprob: -3.5944838523864746
    10. ' ' → logprob: -3.8444838523864746

Token 92: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3681963682174683
    2. ' king' → logprob: -1.8681963682174683
    3. 'pawn' → logprob: -2.118196487426758
    4. 'king' → logprob: -2.618196487426758
    5. 'positions' → logprob: -2.618196487426758
    6. '#' → logprob: -2.618196487426758
    7. '   ' → logprob: -2.993196487426758
    8. ' ' → logprob: -3.618196487426758
    9. ' )' → logprob: -3.743196487426758
    10. ' positions' → logprob: -3.868196487426758

Token 93: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5864503383636475
    2. 'the' → logprob: -1.2114503383636475
    3. ' king' → logprob: -4.336450576782227
    4. ' ' → logprob: -4.336450576782227
    5. ' empty' → logprob: -4.336450576782227
    6. 'empty' → logprob: -4.461450576782227
    7. ' '' → logprob: -4.961450576782227
    8. ' a' → logprob: -4.961450576782227
    9. ''s' → logprob: -4.961450576782227
    10. ' obstacles' → logprob: -4.961450576782227

Token 94: ' obstacles' (ID: 46430)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.7425930500030518
    2. ' empty' → logprob: -1.3675930500030518
    3. 'holes' → logprob: -2.8675930500030518
    4. ' king' → logprob: -3.4925930500030518
    5. 'walls' → logprob: -3.7425930500030518
    6. ' obstacles' → logprob: -3.9925930500030518
    7. 'blocks' → logprob: -4.117592811584473
    8. ' walls' → logprob: -4.117592811584473
    9. 'king' → logprob: -4.992592811584473
    10. 'p' → logprob: -5.117592811584473

Token 95: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.1713297367095947
    2. ':' → logprob: -1.7963297367095947
    3. '<|end|>' → logprob: -1.7963297367095947
    4. ' (' → logprob: -2.2963297367095947
    5. '<|end|>' → logprob: -2.7963297367095947
    6. ',' → logprob: -2.7963297367095947
    7. '#' → logprob: -3.1713297367095947
    8. '.' → logprob: -3.6713297367095947
    9. 'and' → logprob: -4.046329498291016
    10. ' cells' → logprob: -5.046329498291016

Token 96: 'marked' (ID: 71560)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.7967858910560608
    2. 'marked' → logprob: -1.296785831451416
    3. ' '#' → logprob: -1.921785831451416
    4. ' marked' → logprob: -2.421785831451416
    5. ' '#'' → logprob: -4.171785831451416
    6. ''' → logprob: -4.796785831451416
    7. ' '' → logprob: -5.171785831451416
    8. '#' → logprob: -5.671785831451416
    9. ' ' → logprob: -6.796785831451416
    10. ''s' → logprob: -7.296785831451416

Token 97: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.2812989354133606
    2. 'with' → logprob: -1.4062988758087158
    3. ' as' → logprob: -9.281298637390137
    4. 'as' → logprob: -10.281298637390137
    5. '	with' → logprob: -11.656298637390137
    6. ' ' → logprob: -12.656298637390137
    7. '<|end|>' → logprob: -12.781298637390137
    8. ' by' → logprob: -13.031298637390137
    9. ',' → logprob: -13.281298637390137
    10. ')' → logprob: -14.156298637390137

Token 98: ' '*' (ID: 34958)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.059412881731987
    2. ''' → logprob: -3.184412956237793
    3. ''*' → logprob: -5.184412956237793
    4. ''x' → logprob: -5.684412956237793
    5. ''o' → logprob: -5.934412956237793
    6. ' '#' → logprob: -6.184412956237793
    7. ''a' → logprob: -8.059412956237793
    8. ''y' → logprob: -8.309412956237793
    9. ''.' → logprob: -8.309412956237793
    10. ''A' → logprob: -8.434412956237793

Token 99: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.5778512954711914
    2. ')' → logprob: -0.8278512954711914
    3. '')]' → logprob: -7.077851295471191
    4. ''' → logprob: -7.452851295471191
    5. '*' → logprob: -9.202851295471191
    6. ''),' → logprob: -9.702851295471191
    7. '',' → logprob: -9.827851295471191
    8. '*)' → logprob: -10.077851295471191
    9. ''*' → logprob: -10.202851295471191
    10. '']' → logprob: -10.202851295471191

Token 100: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2879190146923065
    2. '   ' → logprob: -1.537919044494629
    3. '    
' → logprob: -4.412919044494629
    4. ' 
' → logprob: -5.412919044494629
    5. ':' → logprob: -5.537919044494629
    6. '  
' → logprob: -5.537919044494629
    7. ',' → logprob: -5.912919044494629
    8. '<|end|>' → logprob: -6.412919044494629
    9. '```' → logprob: -6.662919044494629
    10. '   
' → logprob: -7.037919044494629

Token 101: ' #' (ID: 1069)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.9068071842193604
    2. '
' → logprob: -1.5318071842193604
    3. 'n' → logprob: -1.6568071842193604
    4. '#' (adapté à ' #') → logprob: -3.0318071842193604
    5. '    
' → logprob: -3.2818071842193604
    6. '   ' → logprob: -3.7818071842193604
    7. '\' → logprob: -4.031806945800781
    8. '  
' → logprob: -4.781806945800781
    9. '   
' → logprob: -5.031806945800781
    10. '\n' → logprob: -5.281806945800781

Token 102: ' -' (ID: 533)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.43998923897743225
    2. ' king' → logprob: -1.3149892091751099
    3. 'pawn' → logprob: -3.6899893283843994
    4. '#' → logprob: -4.06498908996582
    5. '   ' → logprob: -4.56498908996582
    6. 'k' → logprob: -4.93998908996582
    7. 'empty' → logprob: -5.06498908996582
    8. 'visited' → logprob: -5.56498908996582
    9. ' #' → logprob: -6.18998908996582
    10. ' obstacles' → logprob: -6.56498908996582

Token 103: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.3180434703826904
    2. ' empty' → logprob: -1.3180434703826904
    3. ' king' → logprob: -2.0680434703826904
    4. 'empty' → logprob: -2.4430434703826904
    5. ' visited' → logprob: -2.9430434703826904
    6. 'the' → logprob: -2.9430434703826904
    7. 'visited' → logprob: -2.9430434703826904
    8. ' free' → logprob: -4.1930437088012695
    9. ' spaces' → logprob: -4.8180437088012695
    10. ' a' → logprob: -4.8180437088012695

Token 104: ' two' (ID: 1920)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.4795801639556885
    2. ' empty' → logprob: -1.1045801639556885
    3. 'visited' → logprob: -4.229579925537109
    4. 'spaces' → logprob: -4.979579925537109
    5. ' visited' → logprob: -5.104579925537109
    6. ' spaces' → logprob: -5.354579925537109
    7. 'holes' → logprob: -6.479579925537109
    8. ' free' → logprob: -6.604579925537109
    9. 'space' → logprob: -6.604579925537109
    10. 'free' → logprob: -6.729579925537109

Token 105: ' open' (ID: 2494)
  Prédit: ' empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' empty' → logprob: -0.9844980239868164
    2. ' king' → logprob: -1.7344980239868164
    3. 'empty' → logprob: -2.4844980239868164
    4. ' spaces' → logprob: -2.7344980239868164
    5. ' '' → logprob: -2.9844980239868164
    6. ' kings' → logprob: -2.9844980239868164
    7. ' special' → logprob: -3.6094980239868164
    8. ' points' → logprob: -4.359498023986816
    9. 'king' → logprob: -4.484498023986816
    10. ' X' → logprob: -4.546998023986816

Token 106: ' squares' (ID: 57269)
  Prédit: ' spaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spaces' → logprob: -0.1424218863248825
    2. ' cells' → logprob: -2.6424219608306885
    3. 'spaces' → logprob: -3.1424219608306885
    4. ' ' → logprob: -5.267421722412109
    5. 'cells' → logprob: -5.892421722412109
    6. ' space' → logprob: -6.642421722412109
    7. 's' → logprob: -6.767421722412109
    8. ' squares' → logprob: -6.892421722412109
    9. ' spots' → logprob: -7.017421722412109
    10. '_spaces' → logprob: -7.017421722412109

Token 107: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1660396158695221
    2. ' 
' → logprob: -2.5410397052764893
    3. ':' → logprob: -4.16603946685791
    4. ',' → logprob: -4.66603946685791
    5. '```' → logprob: -4.79103946685791
    6. '\' → logprob: -5.04103946685791
    7. '\n' → logprob: -5.41603946685791
    8. '   ' → logprob: -5.54103946685791
    9. '#' → logprob: -5.66603946685791
    10. ' 

' → logprob: -5.79103946685791

Token 108: 'marked' (ID: 71560)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03548687696456909
    2. ''.' → logprob: -4.410486698150635
    3. ''s' → logprob: -5.160486698150635
    4. ' '' → logprob: -5.285486698150635
    5. ''o' → logprob: -6.160486698150635
    6. ' ' → logprob: -6.285486698150635
    7. ''t' → logprob: -7.035486698150635
    8. ')' → logprob: -7.035486698150635
    9. ' )' → logprob: -7.285486698150635
    10. ''d' → logprob: -7.410486698150635

Token 109: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.3134711980819702
    2. 'with' → logprob: -1.3134711980819702
    3. ' as' → logprob: -9.063470840454102
    4. ''' → logprob: -10.188470840454102
    5. ' '' → logprob: -10.938470840454102
    6. 'as' → logprob: -11.063470840454102
    7. '	with' → logprob: -11.813470840454102
    8. ')' → logprob: -12.063470840454102
    9. ' ' → logprob: -12.313470840454102
    10. ' by' → logprob: -14.188470840454102

Token 110: ' '.' (ID: 12662)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.07636050134897232
    2. ''' → logprob: -2.9513604640960693
    3. ' '.')' → logprob: -3.9513604640960693
    4. ''-' → logprob: -7.076360702514648
    5. ''o' → logprob: -8.076360702514648
    6. '".' → logprob: -8.826360702514648
    7. ''+' → logprob: -8.951360702514648
    8. ' '' → logprob: -9.326360702514648
    9. ' ' → logprob: -9.826360702514648
    10. ''#' → logprob: -9.951360702514648

Token 111: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.3916381895542145
    2. ')' → logprob: -1.391638159751892
    3. '')]' → logprob: -2.7666382789611816
    4. ''' → logprob: -5.016638278961182
    5. ')]' → logprob: -6.516638278961182
    6. '']' → logprob: -6.766638278961182
    7. '')
' → logprob: -6.766638278961182
    8. ')
' → logprob: -8.016637802124023
    9. '')]
' → logprob: -8.141637802124023
    10. ']' → logprob: -8.391637802124023

Token 112: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44592124223709106
    2. '   ' → logprob: -1.3209211826324463
    3. '    
' → logprob: -2.9459211826324463
    4. ' 
' → logprob: -3.9459211826324463
    5. '  
' → logprob: -5.195921421051025
    6. '   
' → logprob: -5.320921421051025
    7. 'def' → logprob: -6.320921421051025
    8. ',' → logprob: -6.320921421051025
    9. ' ' → logprob: -6.820921421051025
    10. 'n' → logprob: -7.195921421051025

Token 113: ' obstacles' (ID: 46430)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.590119481086731
    2. '
' → logprob: -2.3401193618774414
    3. '#' → logprob: -2.4651193618774414
    4. 'n' → logprob: -2.5901193618774414
    5. ' king' → logprob: -3.3401193618774414
    6. '    
' → logprob: -3.7151193618774414
    7. 'king' → logprob: -3.9651193618774414
    8. 'k' → logprob: -4.340119361877441
    9. '  
' → logprob: -4.590119361877441
    10. '\' → logprob: -4.715119361877441

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00463078822940588
    2. '=' → logprob: -5.3796305656433105
    3. ',' → logprob: -11.879631042480469
    4. ' ' → logprob: -13.629631042480469
    5. ' =
' → logprob: -13.629631042480469
    6. '=set' → logprob: -14.254631042480469
    7. 's' → logprob: -16.00463104248047
    8. '=[]' → logprob: -16.00463104248047
    9. ' ,' → logprob: -16.12963104248047
    10. '  ' → logprob: -16.50463104248047

Token 115: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.056137774139642715
    2. ' set' → logprob: -2.931137800216675
    3. '[]' → logprob: -7.056137561798096
    4. '{' → logprob: -8.056138038635254
    5. '	set' → logprob: -10.931138038635254
    6. ' []' → logprob: -10.931138038635254
    7. '[][]' → logprob: -11.806138038635254
    8. ' ' → logprob: -11.806138038635254
    9. '{}' → logprob: -11.931138038635254
    10. ' {(' → logprob: -12.431138038635254

Token 116: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.016267085447907448
    2. '(' → logprob: -4.1412672996521
    3. '((' → logprob: -8.766266822814941
    4. '([(' → logprob: -10.641266822814941
    5. '(),' → logprob: -10.891266822814941
    6. '();' → logprob: -11.891266822814941
    7. '([' → logprob: -12.516266822814941
    8. '()
' → logprob: -12.641266822814941
    9. '(()' → logprob: -12.641266822814941
    10. '([]' → logprob: -12.766266822814941

Token 117: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: ' paw' (ID: 71961)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.46923354268074036
    2. ' paw' → logprob: -1.969233512878418
    3. 'king' → logprob: -2.094233512878418
    4. 'pawn' → logprob: -2.969233512878418
    5. ' king' → logprob: -3.219233512878418
    6. ' kings' → logprob: -5.344233512878418
    7. ' for' → logprob: -5.469233512878418
    8. 'for' → logprob: -5.469233512878418
    9. 'paw' (adapté à ' paw') → logprob: -5.844233512878418
    10. 'k' → logprob: -6.844233512878418

Token 119: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -5.319370302458992e-06
    2. 'nts' → logprob: -12.250005722045898
    3. 'n' → logprob: -15.000005722045898
    4. 'ons' → logprob: -15.875005722045898
    5. 's' → logprob: -17.6250057220459
    6. 'uns' → logprob: -18.1250057220459
    7. ' ns' → logprob: -18.2500057220459
    8. '   ' → logprob: -18.5000057220459
    9. '	ns' → logprob: -18.8750057220459
    10. 'nants' → logprob: -19.6250057220459

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015185497468337417
    2. '=' → logprob: -6.501518726348877
    3. ' ' → logprob: -11.626518249511719
    4. ',' → logprob: -12.251518249511719
    5. ' ,' → logprob: -13.626518249511719
    6. '<|end|>' → logprob: -14.626518249511719
    7. '  ' → logprob: -15.126518249511719
    8. ')' → logprob: -15.626518249511719
    9. 's' → logprob: -15.626518249511719
    10. ' =
' → logprob: -16.37651824951172

Token 121: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.48795661330223083
    2. 'set' → logprob: -0.9879566431045532
    3. ' []' → logprob: -4.737956523895264
    4. '[]' → logprob: -5.362956523895264
    5. ' ' → logprob: -9.112957000732422
    6. '(set' → logprob: -9.487957000732422
    7. 'deque' → logprob: -9.612957000732422
    8. '	set' → logprob: -10.612957000732422
    9. '=set' → logprob: -10.612957000732422
    10. '()' → logprob: -11.487957000732422

Token 122: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0015717566711828113
    2. '(' → logprob: -6.5015716552734375
    3. '()
' → logprob: -10.001571655273438
    4. '(),' → logprob: -11.876571655273438
    5. ' ()' → logprob: -12.376571655273438
    6. '()

' → logprob: -12.376571655273438
    7. '()\' → logprob: -13.251571655273438
    8. '()]' → logprob: -13.751571655273438
    9. '();' → logprob: -14.001571655273438
    10. '([]' → logprob: -14.251571655273438

Token 123: '   ' (ID: 271)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.7039111852645874
    2. '   ' → logprob: -2.453911304473877
    3. ' open' → logprob: -2.453911304473877
    4. ' king' → logprob: -2.453911304473877
    5. ' 
' → logprob: -2.703911304473877
    6. 'king' → logprob: -2.828911304473877
    7. 'empty' → logprob: -3.203911304473877
    8. 'spaces' → logprob: -3.828911304473877
    9. ' kings' → logprob: -4.703911304473877
    10. '    
' → logprob: -4.828911304473877

Token 124: ' open' (ID: 2494)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.5959279537200928
    2. 'open' (adapté à ' open') → logprob: -1.3459279537200928
    3. ' king' → logprob: -2.2209279537200928
    4. 'empty' → logprob: -3.2209279537200928
    5. 'k' → logprob: -4.595928192138672
    6. ' open' → logprob: -4.595928192138672
    7. 'opens' → logprob: -4.845928192138672
    8. ' empty' → logprob: -5.970928192138672
    9. ' opens' → logprob: -6.095928192138672
    10. ' kings' → logprob: -6.220928192138672

Token 125: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.5552899837493896
    2. '_spaces' → logprob: -1.1802899837493896
    3. 's' → logprob: -2.6802899837493896
    4. '_cells' → logprob: -3.1802899837493896
    5. '_positions' → logprob: -5.430290222167969
    6. 'spaces' → logprob: -5.805290222167969
    7. 'cells' → logprob: -7.680290222167969
    8. '_' → logprob: -7.805290222167969
    9. '<|end|>' → logprob: -9.305290222167969
    10. '_slots' → logprob: -9.555290222167969

Token 126: 'quares' (ID: 110764)
  Prédit: 'quares'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quares' → logprob: -0.013173052109777927
    2. 'paces' → logprob: -4.6381731033325195
    3. 'qs' → logprob: -6.1381731033325195
    4. 'qu' → logprob: -8.01317310333252
    5. 'ques' → logprob: -8.13817310333252
    6. 'q' → logprob: -8.26317310333252
    7. '```' → logprob: -8.63817310333252
    8. '[' → logprob: -10.51317310333252
    9. 'quences' → logprob: -10.63817310333252
    10. ' qu' → logprob: -10.63817310333252

Token 127: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132636249065399
    2. ' =' → logprob: -1.3132636547088623
    3. ' ' → logprob: -13.563263893127441
    4. ')' → logprob: -15.438263893127441
    5. '=set' → logprob: -15.438263893127441
    6. '=[]' → logprob: -16.313262939453125
    7. ' =
' → logprob: -17.188262939453125
    8. '=
' → logprob: -17.188262939453125
    9. '＝' → logprob: -17.938262939453125
    10. ',' → logprob: -18.188262939453125

Token 128: ' set' (ID: 920)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.038521647453308105
    2. 'set' → logprob: -3.2885217666625977
    3. ' []' → logprob: -7.788521766662598
    4. ' set' → logprob: -10.163521766662598
    5. '[]
' → logprob: -10.663521766662598
    6. 'deque' → logprob: -13.538521766662598
    7. '[]}' → logprob: -13.913521766662598
    8. '{}' → logprob: -14.538521766662598
    9. '0' → logprob: -15.163521766662598
    10. ' ' → logprob: -16.16352081298828

Token 129: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00034833617974072695
    2. '(' → logprob: -8.125348091125488
    3. '()
' → logprob: -10.000348091125488
    4. '()

' → logprob: -12.625348091125488
    5. '()]' → logprob: -14.125348091125488
    6. ' ()' → logprob: -14.125348091125488
    7. '()\' → logprob: -14.250348091125488
    8. '();' → logprob: -15.000348091125488
    9. '()
' → logprob: -15.250348091125488
    10. '(),' → logprob: -15.625348091125488

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41145241260528564
    2. '
' → logprob: -1.9114524126052856
    3. ' for' → logprob: -3.036452293395996
    4. '    
' → logprob: -3.411452293395996
    5. ' 
' → logprob: -3.536452293395996
    6. 'for' → logprob: -3.536452293395996
    7. '  
' → logprob: -3.661452293395996
    8. '<|end|>' → logprob: -5.286452293395996
    9. '\n' → logprob: -5.786452293395996
    10. ',' → logprob: -5.911452293395996

Token 131: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' (adapté à ' king') → logprob: -0.24046242237091064
    2. ' king' → logprob: -2.240462303161621
    3. 'for' → logprob: -2.740462303161621
    4. ' for' → logprob: -3.365462303161621
    5. 'k' → logprob: -5.365462303161621
    6. '   ' → logprob: -5.990462303161621
    7. ' kings' → logprob: -8.365462303161621
    8. 'kx' → logprob: -8.490462303161621
    9. 'x' → logprob: -8.990462303161621
    10. 'blocks' → logprob: -9.490462303161621

Token 132: '_cells' (ID: 93468)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.13463939726352692
    2. '_pos' → logprob: -3.3846395015716553
    3. '_blocks' → logprob: -3.6346395015716553
    4. '_block' → logprob: -3.8846395015716553
    5. '_cells' → logprob: -3.8846395015716553
    6. ' =' → logprob: -3.8846395015716553
    7. '_position' → logprob: -6.259639263153076
    8. '=' → logprob: -6.634639263153076
    9. '_coords' → logprob: -7.759639263153076
    10. '_' → logprob: -9.134639739990234

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759441256523132
    2. '=' → logprob: -0.8259441256523132
    3. ')' → logprob: -13.825943946838379
    4. '<|end|>' → logprob: -13.825943946838379
    5. '=set' → logprob: -13.950943946838379
    6. '=[]' → logprob: -14.200943946838379
    7. ',' → logprob: -15.825943946838379
    8. ' =
' → logprob: -15.950943946838379
    9. 's' → logprob: -15.950943946838379
    10. ' ' → logprob: -15.950943946838379

Token 134: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.15381987392902374
    2. 'set' → logprob: -2.1538197994232178
    3. ' []' → logprob: -4.153820037841797
    4. ' set' → logprob: -4.528820037841797
    5. '[]
' → logprob: -11.278820037841797
    6. '{}' → logprob: -11.903820037841797
    7. 'deque' → logprob: -11.903820037841797
    8. '[]}' → logprob: -12.528820037841797
    9. '   ' → logprob: -13.528820037841797
    10. ' ' → logprob: -13.903820037841797

Token 135: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7897552847862244
    2. '   ' → logprob: -0.7897552847862244
    3. ' for' → logprob: -3.289755344390869
    4. '    
' → logprob: -3.914755344390869
    5. 'for' → logprob: -3.914755344390869
    6. '  
' → logprob: -4.914755344390869
    7. '<|end|>' → logprob: -5.664755344390869
    8. ' 
' → logprob: -6.539755344390869
    9. ' ' → logprob: -7.789755344390869
    10. '	for' → logprob: -7.914755344390869

Token 136: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08094361424446106
    2. ' for' → logprob: -2.5809435844421387
    3. '   ' → logprob: -6.205943584442139
    4. '	for' → logprob: -10.580944061279297
    5. 'i' → logprob: -13.330944061279297
    6. '    
' → logprob: -13.330944061279297
    7. '
' → logprob: -13.330944061279297
    8. ' ' → logprob: -13.955944061279297
    9. 'row' → logprob: -14.705944061279297
    10. '    ' → logprob: -14.705944061279297

Token 137: ' r' (ID: 428)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5103226900100708
    2. ' r' → logprob: -1.0103226900100708
    3. ' ' → logprob: -3.8853225708007812
    4. ' y' → logprob: -4.885322570800781
    5. ' row' → logprob: -5.760322570800781
    6. 'i' → logprob: -6.385322570800781
    7. 'r' → logprob: -6.635322570800781
    8. ' _' → logprob: -7.510322570800781
    9. ' h' → logprob: -7.510322570800781
    10. '   ' → logprob: -9.885322570800781

Token 138: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011381306685507298
    2. 'in' → logprob: -4.636381149291992
    3. ',' → logprob: -6.511381149291992
    4. ' ,' → logprob: -9.386381149291992
    5. ' ' → logprob: -10.011381149291992
    6. ',in' → logprob: -12.761381149291992
    7. 'ange' → logprob: -13.136381149291992
    8. 'n' → logprob: -14.261381149291992
    9. 'range' → logprob: -14.386381149291992
    10. 'In' → logprob: -15.136381149291992

Token 139: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141392946243286
    2. ' range' → logprob: -1.701413869857788
    3. 'ange' → logprob: -14.951414108276367
    4. '(range' → logprob: -16.451414108276367
    5. '	range' → logprob: -16.451414108276367
    6. ' ' → logprob: -16.576414108276367
    7. ' xrange' → logprob: -16.701414108276367
    8. '_range' → logprob: -18.701414108276367
    9. ')' → logprob: -18.951414108276367
    10. '  ' → logprob: -19.326414108276367

Token 140: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0008294018916785717
    2. '(' → logprob: -7.125829219818115
    3. 'H' → logprob: -10.750829696655273
    4. ' (' → logprob: -13.375829696655273
    5. '(len' → logprob: -14.375829696655273
    6. ' H' → logprob: -14.500829696655273
    7. '(
' → logprob: -15.125829696655273
    8. '   ' → logprob: -15.750829696655273
    9. ' ' → logprob: -16.500829696655273
    10. '1' → logprob: -16.625829696655273

Token 141: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000327956018736586
    2. '):
' → logprob: -8.125328063964844
    3. ' ):' → logprob: -11.000328063964844
    4. ':' → logprob: -11.375328063964844
    5. '):

' → logprob: -13.375328063964844
    6. ')' → logprob: -13.875328063964844
    7. '):
' → logprob: -14.750328063964844
    8. '   ' → logprob: -15.875328063964844
    9. '}:' → logprob: -16.125328063964844
    10. ' ' → logprob: -16.250328063964844

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3241612911224365
    2. ':' → logprob: -1.8241612911224365
    3. '    ' → logprob: -3.1991612911224365
    4. '<|end|>' → logprob: -3.3241612911224365
    5. '   ' → logprob: -3.6991612911224365
    6. ' for' → logprob: -5.199161529541016
    7. ' ' → logprob: -5.449161529541016
    8. '        ' → logprob: -6.949161529541016
    9. '<|end|>' → logprob: -7.074161529541016
    10. ':
' → logprob: -7.949161529541016

Token 143: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.006877460982650518
    2. 'for' (adapté à ' for') → logprob: -5.131877422332764
    3. '   ' → logprob: -7.006877422332764
    4. '	for' → logprob: -10.756877899169922
    5. ' ' → logprob: -11.256877899169922
    6. '       ' → logprob: -12.131877899169922
    7. '    ' → logprob: -12.881877899169922
    8. ' ' → logprob: -16.006877899169922
    9. '  ' → logprob: -16.131877899169922
    10. ' range' → logprob: -16.506877899169922

Token 144: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.25193047523498535
    2. 'c' → logprob: -1.5019304752349854
    3. ' w' → logprob: -14.376930236816406
    4. 'w' → logprob: -15.001930236816406
    5. ' ' → logprob: -15.126930236816406
    6. 'W' → logprob: -16.626930236816406
    7. 'C' → logprob: -17.126930236816406
    8. '   ' → logprob: -17.126930236816406
    9. ' range' → logprob: -17.251930236816406
    10. ' W' → logprob: -17.376930236816406

Token 145: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009899867698550224
    2. 'in' → logprob: -4.634900093078613
    3. ' ' → logprob: -8.884900093078613
    4. 'import' → logprob: -13.384900093078613
    5. '	in' → logprob: -14.009900093078613
    6. '<|end|>' → logprob: -14.634900093078613
    7. '  ' → logprob: -14.884900093078613
    8. '    ' → logprob: -15.134900093078613
    9. '```' → logprob: -15.134900093078613
    10. ')' → logprob: -15.634900093078613

Token 146: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759396553039551
    2. ' range' → logprob: -0.8259396553039551
    3. '(range' → logprob: -15.450939178466797
    4. ' ' → logprob: -17.825939178466797
    5. '(' → logprob: -17.950939178466797
    6. '0' → logprob: -19.325939178466797
    7. '	range' → logprob: -19.450939178466797
    8. ')' → logprob: -20.200939178466797
    9. 'H' → logprob: -20.950939178466797
    10. '[' → logprob: -20.950939178466797

Token 147: '(W' (ID: 26031)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.02392137236893177
    2. '(W' → logprob: -3.773921489715576
    3. '(' → logprob: -7.773921489715576
    4. 'range' → logprob: -8.648921012878418
    5. ' range' → logprob: -10.398921012878418
    6. 'W' → logprob: -11.023921012878418
    7. 'H' → logprob: -11.273921012878418
    8. '(range' → logprob: -11.523921012878418
    9. ' (' → logprob: -11.773921012878418
    10. ')' → logprob: -13.898921012878418

Token 148: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00122070184443146
    2. '):
' → logprob: -7.251220703125
    3. ')' → logprob: -7.751220703125
    4. ' ):' → logprob: -10.001220703125
    5. ':' → logprob: -10.501220703125
    6. '   ' → logprob: -13.001220703125
    7. '):

' → logprob: -13.376220703125
    8. '):
' → logprob: -14.501220703125
    9. 'if' → logprob: -14.501220703125
    10. '+' → logprob: -14.626220703125

Token 149: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4376595616340637
    2. '           ' → logprob: -1.687659502029419
    3. ' if' → logprob: -1.937659502029419
    4. '        ' → logprob: -4.437659740447998
    5. 'if' → logprob: -5.062659740447998
    6. '```' → logprob: -6.187659740447998
    7. '    ' → logprob: -6.562659740447998
    8. '   ' → logprob: -7.187659740447998
    9. '        
' → logprob: -7.687659740447998
    10. ' ' → logprob: -7.937659740447998

Token 150: ' ch' (ID: 549)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34896281361579895
    2. ' cell' → logprob: -2.4739627838134766
    3. ' char' → logprob: -2.8489627838134766
    4. ' ch' → logprob: -3.0989627838134766
    5. 'ch' (adapté à ' ch') → logprob: -3.4739627838134766
    6. '               ' → logprob: -3.7239627838134766
    7. 'if' → logprob: -4.098962783813477
    8. 'char' → logprob: -4.473962783813477
    9. '           ' → logprob: -4.848962783813477
    10. '            ' → logprob: -5.348962783813477

Token 151: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16045697033405304
    2. '=' → logprob: -1.9104570150375366
    3. ' ' → logprob: -8.410456657409668
    4. ' =
' → logprob: -12.910456657409668
    5. ' ' → logprob: -13.285456657409668
    6. ')' → logprob: -13.535456657409668
    7. ' ==' → logprob: -14.160456657409668
    8. '  ' → logprob: -14.160456657409668
    9. 's' → logprob: -14.285456657409668
    10. '=line' → logprob: -15.535456657409668

Token 152: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.033651113510131836
    2. 'grid' → logprob: -3.408651113510132
    3. '	grid' → logprob: -12.658651351928711
    4. '(grid' → logprob: -13.658651351928711
    5. ' ' → logprob: -14.658651351928711
    6. '.grid' → logprob: -15.783651351928711
    7. ':grid' → logprob: -16.03365135192871
    8. '```' → logprob: -16.40865135192871
    9. ' ' → logprob: -16.65865135192871
    10. '   ' → logprob: -17.15865135192871

Token 153: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -13.875000953674316
    3. 'r' → logprob: -16.375001907348633
    4. '[c' → logprob: -16.500001907348633
    5. '[
' → logprob: -16.500001907348633
    6. '```' → logprob: -16.875001907348633
    7. ' [' → logprob: -17.375001907348633
    8. '   ' → logprob: -17.375001907348633
    9. '][' → logprob: -18.500001907348633
    10. '[row' → logprob: -18.750001907348633

Token 154: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0032711182720959187
    2. ']' → logprob: -5.878271102905273
    3. '[c' → logprob: -8.253271102905273
    4. '[r' → logprob: -8.628271102905273
    5. ' ][' → logprob: -11.253271102905273
    6. '[' → logprob: -12.503271102905273
    7. '])' → logprob: -13.128271102905273
    8. '   ' → logprob: -13.878271102905273
    9. ')][' → logprob: -14.253271102905273
    10. '"][' → logprob: -14.378271102905273

Token 155: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.45848218582978e-06
    2. ' c' → logprob: -13.62500286102295
    3. ')c' → logprob: -14.25000286102295
    4. '])' → logprob: -15.87500286102295
    5. '][' → logprob: -16.375001907348633
    6. '0' → logprob: -16.625001907348633
    7. ']' → logprob: -16.875001907348633
    8. ')' → logprob: -17.000001907348633
    9. '	c' → logprob: -17.875001907348633
    10. '
' → logprob: -18.125001907348633

Token 156: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0523160845041275
    2. ')
' → logprob: -3.177316188812256
    3. ']' → logprob: -4.802316188812256
    4. '           ' → logprob: -7.677316188812256
    5. '])' → logprob: -8.302315711975098
    6. ']
' → logprob: -8.552315711975098
    7. ')]' → logprob: -9.927315711975098
    8. ')
' → logprob: -10.677315711975098
    9. '])
' → logprob: -10.677315711975098
    10. ' )' → logprob: -11.052315711975098

Token 157: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8056026697158813
    2. '           ' → logprob: -1.1806026697158813
    3. ' 
' → logprob: -2.055602550506592
    4. '            
' → logprob: -3.055602550506592
    5. '<|end|>' → logprob: -3.805602550506592
    6. ' if' → logprob: -4.805602550506592
    7. '            ' → logprob: -4.930602550506592
    8. '  
' → logprob: -5.555602550506592
    9. '           
' → logprob: -5.680602550506592
    10. '    
' → logprob: -5.680602550506592

Token 158: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3053515553474426
    2. 'if' (adapté à ' if') → logprob: -1.6803514957427979
    3. ' ' → logprob: -3.180351495742798
    4. ' 
' → logprob: -3.930351495742798
    5. '           ' → logprob: -4.680351734161377
    6. '            ' → logprob: -6.305351734161377
    7. '```' → logprob: -6.805351734161377
    8. '    ' → logprob: -7.180351734161377
    9. '
' → logprob: -7.680351734161377
    10. '   ' → logprob: -7.805351734161377

Token 159: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.014164448715746403
    2. 'ch' → logprob: -4.264164447784424
    3. ' ' → logprob: -14.889164924621582
    4. '	ch' → logprob: -15.139164924621582
    5. '(ch' → logprob: -15.514164924621582
    6. '[ch' → logprob: -16.139163970947266
    7. ' ' → logprob: -17.264163970947266
    8. ' c' → logprob: -17.764163970947266
    9. ',ch' → logprob: -17.889163970947266
    10. '_ch' → logprob: -17.889163970947266

Token 160: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01608516462147236
    2. '==' → logprob: -4.141085147857666
    3. '=='' → logprob: -10.766085624694824
    4. ' =='' → logprob: -11.266085624694824
    5. '=' → logprob: -11.891085624694824
    6. ' ' → logprob: -12.766085624694824
    7. '=="' → logprob: -12.891085624694824
    8. ' =' → logprob: -13.266085624694824
    9. ' =="' → logprob: -13.891085624694824
    10. ' ===' → logprob: -14.641085624694824

Token 161: ' '*' (ID: 34958)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.055150922387838364
    2. ''' → logprob: -2.9301509857177734
    3. ' '*'' → logprob: -8.555150985717773
    4. ' '' → logprob: -10.555150985717773
    5. ''O' → logprob: -10.930150985717773
    6. ''o' → logprob: -11.180150985717773
    7. '"' → logprob: -12.305150985717773
    8. '"*' → logprob: -13.180150985717773
    9. ''#' → logprob: -13.180150985717773
    10. ''A' → logprob: -13.555150985717773

Token 162: '':
' (ID: 7669)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5778177976608276
    2. ')' → logprob: -1.8278177976608276
    3. '):
' → logprob: -1.8278177976608276
    4. ':' → logprob: -3.077817916870117
    5. ''):
' → logprob: -3.202817916870117
    6. ''):' → logprob: -3.827817916870117
    7. '':' → logprob: -5.452817916870117
    8. ':
' → logprob: -6.202817916870117
    9. '':
' → logprob: -7.577817916870117
    10. '')' → logprob: -7.577817916870117

Token 163: '               ' (ID: 506)
  Prédit: ' obstacles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obstacles' → logprob: -0.007469143718481064
    2. 'ob' → logprob: -5.507469177246094
    3. '               ' → logprob: -5.757469177246094
    4. ' ob' → logprob: -9.507469177246094
    5. '	ob' → logprob: -9.632469177246094
    6. '           ' → logprob: -10.132469177246094
    7. ' obstáculos' → logprob: -10.632469177246094
    8. '(ob' → logprob: -12.132469177246094
    9. '.ob' → logprob: -12.382469177246094
    10. '_ob' → logprob: -12.382469177246094

Token 164: ' obstacles' (ID: 46430)
  Prédit: ' obstacles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obstacles' → logprob: -0.0006301135290414095
    2. 'ob' → logprob: -7.375629901885986
    3. ' obstáculos' → logprob: -13.750630378723145
    4. ' ob' → logprob: -14.125630378723145
    5. ' obstacle' → logprob: -14.375630378723145
    6. ' obst' → logprob: -14.750630378723145
    7. ' 
' → logprob: -15.125630378723145
    8. '	ob' → logprob: -15.500630378723145
    9. '_ob' → logprob: -16.000629425048828
    10. '.ob' → logprob: -17.250629425048828

Token 165: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.008620958775281906
    2. '.' → logprob: -4.758620738983154
    3. ' .' → logprob: -13.008621215820312
    4. '.Add' → logprob: -13.133621215820312
    5. '.append' → logprob: -13.383621215820312
    6. '.setdefault' → logprob: -15.258621215820312
    7. 'add' → logprob: -16.758621215820312
    8. ')add' → logprob: -17.008621215820312
    9. ').' → logprob: -17.258621215820312
    10. '.insert' → logprob: -17.258621215820312

Token 166: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6987441182136536
    2. '((' → logprob: -0.6987441182136536
    3. ' (' → logprob: -5.198744297027588
    4. ' ((' → logprob: -10.19874382019043
    5. ' ' → logprob: -11.82374382019043
    6. '(
' → logprob: -11.94874382019043
    7. '(r' → logprob: -12.07374382019043
    8. '<|end|>' → logprob: -15.19874382019043
    9. ')' → logprob: -15.82374382019043
    10. '   ' → logprob: -15.94874382019043

Token 167: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.676292231422849e-05
    2. ' r' → logprob: -11.000017166137695
    3. '   ' → logprob: -19.375017166137695
    4. ')' → logprob: -19.625017166137695
    5. ' ' → logprob: -20.000017166137695
    6. '
' → logprob: -20.125017166137695
    7. '	r' → logprob: -20.125017166137695
    8. '_r' → logprob: -20.500017166137695
    9. '  ' → logprob: -21.250017166137695
    10. '```' → logprob: -22.250017166137695

Token 168: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.062493033707141876
    2. ',c' → logprob: -2.812493085861206
    3. ' ,' → logprob: -7.562492847442627
    4. ',
' → logprob: -12.437493324279785
    5. ' ' → logprob: -14.687493324279785
    6. ',

' → logprob: -14.937493324279785
    7. '‌,' → logprob: -15.562493324279785
    8. 'c' → logprob: -15.937493324279785
    9. '<|end|>' → logprob: -16.06249237060547
    10. ',b' → logprob: -16.43749237060547

Token 169: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006747108418494463
    2. ')' → logprob: -5.006747245788574
    3. '))
' → logprob: -10.631747245788574
    4. ' ))' → logprob: -12.881747245788574
    5. '),' → logprob: -13.256747245788574
    6. ')))' → logprob: -13.506747245788574
    7. ')
' → logprob: -14.631747245788574
    8. '));' → logprob: -15.131747245788574
    9. '))

' → logprob: -15.256747245788574
    10. ' ' → logprob: -15.881747245788574

Token 170: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20328783988952637
    2. 'elif' → logprob: -1.8282878398895264
    3. ' elif' → logprob: -4.3282880783081055
    4. '<|end|>' → logprob: -4.7032880783081055
    5. '            
' → logprob: -8.203288078308105
    6. '               ' → logprob: -8.453288078308105
    7. ')' → logprob: -8.953288078308105
    8. '
' → logprob: -9.203288078308105
    9. '	elif' → logprob: -9.578288078308105
    10. '<|end|>' → logprob: -9.828288078308105

Token 171: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.01838335394859314
    2. ' elif' → logprob: -4.018383502960205
    3. '           ' → logprob: -8.393383026123047
    4. '	elif' → logprob: -12.018383026123047
    5. 'el' → logprob: -14.893383026123047
    6. '```' → logprob: -15.143383026123047
    7. '#elif' → logprob: -16.143383026123047
    8. '               ' → logprob: -16.768383026123047
    9. ')' → logprob: -17.018383026123047
    10. 'elseif' → logprob: -17.018383026123047

Token 172: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.008743513375520706
    2. 'ch' → logprob: -4.7587432861328125
    3. ''ch' → logprob: -9.383743286132812
    4. ''' → logprob: -11.133743286132812
    5. ' '' → logprob: -11.633743286132812
    6. ' ' → logprob: -11.633743286132812
    7. ' ' → logprob: -12.133743286132812
    8. '	ch' → logprob: -12.883743286132812
    9. '(ch' → logprob: -13.758743286132812
    10. 'o' → logprob: -14.571243286132812

Token 173: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.007630057632923126
    2. '==' → logprob: -4.882629871368408
    3. ' =='' → logprob: -11.757630348205566
    4. '=='' → logprob: -12.007630348205566
    5. ' =' → logprob: -12.507630348205566
    6. ' ' → logprob: -12.882630348205566
    7. ' ' → logprob: -13.507630348205566
    8. '=' → logprob: -13.507630348205566
    9. ' =="' → logprob: -15.507630348205566
    10. ')' → logprob: -15.507630348205566

Token 174: ' '' (ID: 461)
  Prédit: ''o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''o' → logprob: -0.00022403974435292184
    2. ''' → logprob: -9.000224113464355
    3. ' '' → logprob: -9.375224113464355
    4. 'o' → logprob: -11.750224113464355
    5. ' ' → logprob: -12.500224113464355
    6. ' o' → logprob: -13.250224113464355
    7. ''O' → logprob: -14.750224113464355
    8. '’o' → logprob: -14.875224113464355
    9. '	o' → logprob: -14.875224113464355
    10. '  ' → logprob: -15.125224113464355

Token 175: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0001319063303526491
    2. 'X' → logprob: -9.375131607055664
    3. 'x' → logprob: -10.375131607055664
    4. ''o' → logprob: -11.750131607055664
    5. ' o' → logprob: -12.750131607055664
    6. 'о' → logprob: -14.125131607055664
    7. 'O' → logprob: -14.250131607055664
    8. ''' → logprob: -14.437631607055664
    9. '*' → logprob: -15.000131607055664
    10. '0' → logprob: -15.250131607055664

Token 176: '':
' (ID: 7669)
  Prédit: ''):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.14457595348358154
    2. ''):
' → logprob: -2.394576072692871
    3. '):' → logprob: -3.394576072692871
    4. ')' → logprob: -5.519576072692871
    5. '')' → logprob: -5.644576072692871
    6. '):
' → logprob: -6.394576072692871
    7. '':' → logprob: -8.144576072692871
    8. ':' → logprob: -9.144576072692871
    9. ''):
' → logprob: -9.769576072692871
    10. '"):' → logprob: -10.144576072692871

Token 177: '               ' (ID: 506)
  Prédit: ' paw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paw' → logprob: -0.3455546796321869
    2. '               ' → logprob: -1.4705547094345093
    3. 'p' → logprob: -2.9705545902252197
    4. '                   ' → logprob: -5.845554828643799
    5. '           ' → logprob: -6.220554828643799
    6. 'paw' → logprob: -7.095554828643799
    7. '	           ' → logprob: -7.595554828643799
    8. ':
' → logprob: -7.595554828643799
    9. '	p' → logprob: -7.595554828643799
    10. '		       ' → logprob: -7.970554828643799

Token 178: ' paw' (ID: 71961)
  Prédit: ' paw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paw' → logprob: -0.0022363781463354826
    2. 'p' → logprob: -6.127236366271973
    3. ' paws' → logprob: -10.502236366271973
    4. 'paw' (adapté à ' paw') → logprob: -11.377236366271973
    5. 'pawn' → logprob: -11.752236366271973
    6. ' pawn' → logprob: -13.252236366271973
    7. ' pups' → logprob: -14.127236366271973
    8. '	p' → logprob: -14.877236366271973
    9. ' p' → logprob: -15.002236366271973
    10. ' ' → logprob: -15.377236366271973

Token 179: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.0036620718892663717
    2. 'ons' → logprob: -5.628662109375
    3. 'n' → logprob: -10.253662109375
    4. 's' → logprob: -10.878662109375
    5. 'ans' → logprob: -12.503662109375
    6. 'sns' → logprob: -13.753662109375
    7. 'uns' → logprob: -13.878662109375
    8. 'rons' → logprob: -14.628662109375
    9. 'nts' → logprob: -14.628662109375
    10. '           ' → logprob: -15.128662109375

Token 180: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0005079957190901041
    2. '.' → logprob: -7.625507831573486
    3. ' .' → logprob: -10.875508308410645
    4. '.append' → logprob: -14.875508308410645
    5. '.setdefault' → logprob: -15.000508308410645
    6. '.Add' → logprob: -15.375508308410645
    7. 'add' → logprob: -16.500507354736328
    8. '.update' → logprob: -17.375507354736328
    9. ')add' → logprob: -17.500507354736328
    10. ').' → logprob: -17.500507354736328

Token 181: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.004500854294747114
    2. ' ((' → logprob: -5.879500865936279
    3. '(' → logprob: -6.504500865936279
    4. ' (' → logprob: -8.629500389099121
    5. ' ' → logprob: -11.504500389099121
    6. '(
' → logprob: -11.754500389099121
    7. ' (
' → logprob: -14.504500389099121
    8. '<|end|>' → logprob: -14.754500389099121
    9. '  ' → logprob: -15.629500389099121
    10. '   ' → logprob: -16.754501342773438

Token 182: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.85366350505501e-05
    2. ' r' → logprob: -9.25009822845459
    3. '(r' → logprob: -13.62509822845459
    4. ' ' → logprob: -15.12509822845459
    5. '   ' → logprob: -15.25009822845459
    6. ')' → logprob: -15.25009822845459
    7. '
' → logprob: -15.25009822845459
    8. ' (' → logprob: -16.500099182128906
    9. '	r' → logprob: -16.625099182128906
    10. '  ' → logprob: -17.500099182128906

Token 183: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.09027576446533203
    2. ',' → logprob: -2.965275764465332
    3. ',r' → logprob: -3.465275764465332
    4. ' ,' → logprob: -6.090275764465332
    5. 'r' → logprob: -7.340275764465332
    6. 'c' → logprob: -7.590275764465332
    7. ',
' → logprob: -10.090275764465332
    8. '   ' → logprob: -11.590275764465332
    9. ',p' → logprob: -12.090275764465332
    10. '
' → logprob: -12.340275764465332

Token 184: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025393941905349493
    2. '))' → logprob: -6.002539157867432
    3. ')
' → logprob: -10.00253963470459
    4. ' )' → logprob: -11.12753963470459
    5. '           ' → logprob: -13.75253963470459
    6. '               ' → logprob: -14.37753963470459
    7. '))
' → logprob: -14.75253963470459
    8. ')}' → logprob: -14.87753963470459
    9. ')))' → logprob: -15.12753963470459
    10. '),' → logprob: -15.50253963470459

Token 185: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008953363634645939
    2. '<|end|>' → logprob: -5.75895357131958
    3. 'elif' → logprob: -5.75895357131958
    4. ' elif' → logprob: -6.63395357131958
    5. '            
' → logprob: -7.75895357131958
    6. '  
' → logprob: -9.008953094482422
    7. ' 
' → logprob: -9.008953094482422
    8. ')' → logprob: -9.008953094482422
    9. ' ' → logprob: -9.133953094482422
    10. '               ' → logprob: -9.383953094482422

Token 186: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28386160731315613
    2. 'elif' (adapté à ' elif') → logprob: -1.6588616371154785
    3. ' elif' → logprob: -2.9088616371154785
    4. '               ' → logprob: -8.28386116027832
    5. ')' → logprob: -8.40886116027832
    6. '   ' → logprob: -8.53386116027832
    7. '<|end|>' → logprob: -8.53386116027832
    8. '
' → logprob: -8.53386116027832
    9. '       ' → logprob: -8.78386116027832
    10. '	elif' → logprob: -8.90886116027832

Token 187: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.023359615355730057
    2. 'ch' → logprob: -3.773359537124634
    3. '.' → logprob: -10.273359298706055
    4. '(ch' → logprob: -10.648359298706055
    5. ' ' → logprob: -11.648359298706055
    6. ''ch' → logprob: -11.648359298706055
    7. ' grid' → logprob: -12.085859298706055
    8. ')' → logprob: -12.523359298706055
    9. ''' → logprob: -12.523359298706055
    10. '.ch' → logprob: -12.898359298706055

Token 188: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04302259907126427
    2. '==' → logprob: -3.168022632598877
    3. '=' → logprob: -11.668022155761719
    4. ' ' → logprob: -12.168022155761719
    5. ' =' → logprob: -12.668022155761719
    6. '=='' → logprob: -13.168022155761719
    7. ' ' → logprob: -13.168022155761719
    8. ' =='' → logprob: -14.293022155761719
    9. ')' → logprob: -14.793022155761719
    10. '[' → logprob: -15.418022155761719

Token 189: ' '.' (ID: 12662)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.5878105163574219
    2. ''' → logprob: -0.8378105163574219
    3. ' '' → logprob: -5.087810516357422
    4. ' '.'' → logprob: -5.337810516357422
    5. '.' → logprob: -8.337810516357422
    6. ' ' → logprob: -8.712810516357422
    7. ' '.' → logprob: -8.837810516357422
    8. '  ' → logprob: -9.837810516357422
    9. '('.')' → logprob: -10.587810516357422
    10. '   ' → logprob: -10.712810516357422

Token 190: '':
' (ID: 7669)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18391746282577515
    2. '):
' → logprob: -2.18391752243042
    3. '):' → logprob: -3.80891752243042
    4. ''):
' → logprob: -4.30891752243042
    5. ')' → logprob: -4.55891752243042
    6. ':
' → logprob: -5.93391752243042
    7. ':' → logprob: -6.30891752243042
    8. ''):' → logprob: -6.68391752243042
    9. '           ' → logprob: -6.80891752243042
    10. '                ' → logprob: -7.68391752243042

Token 191: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1899326890707016
    2. 'open' → logprob: -2.1899325847625732
    3. ' open' → logprob: -2.8149325847625732
    4. '                   ' → logprob: -7.439932823181152
    5. '   ' → logprob: -8.689932823181152
    6. '	open' → logprob: -8.939932823181152
    7. '           ' → logprob: -9.564932823181152
    8. ' ' → logprob: -9.564932823181152
    9. '
' → logprob: -10.564932823181152
    10. '       ' → logprob: -10.814932823181152

Token 192: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' (adapté à ' open') → logprob: -0.06198079511523247
    2. ' open' → logprob: -2.811980724334717
    3. '               ' → logprob: -11.436981201171875
    4. '	open' → logprob: -14.311981201171875
    5. '
' → logprob: -14.436981201171875
    6. '                   ' → logprob: -14.561981201171875
    7. 'o' → logprob: -15.561981201171875
    8. '.open' → logprob: -16.561981201171875
    9. '(open' → logprob: -16.686981201171875
    10. ' ' → logprob: -16.686981201171875

Token 193: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.981667537620524e-06
    2. '_' → logprob: -14.125001907348633
    3. 's' → logprob: -14.250001907348633
    4. ' _' → logprob: -15.500001907348633
    5. '_spaces' → logprob: -16.250001907348633
    6. '   ' → logprob: -17.125001907348633
    7. 'open' → logprob: -17.500001907348633
    8. '(_' → logprob: -17.500001907348633
    9. '_square' → logprob: -18.750001907348633
    10. 'Squares' → logprob: -18.875001907348633

Token 194: 'quares' (ID: 110764)
  Prédit: 'quares'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quares' → logprob: -0.0003184233792126179
    2. 'qu' → logprob: -8.87531852722168
    3. 'q' → logprob: -9.50031852722168
    4. 'ques' → logprob: -10.00031852722168
    5. 'quences' → logprob: -10.62531852722168
    6. 's' → logprob: -12.00031852722168
    7. '_' → logprob: -12.00031852722168
    8. 'o' → logprob: -12.37531852722168
    9. 'paces' → logprob: -12.75031852722168
    10. 'a' → logprob: -12.87531852722168

Token 195: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -3.893480243277736e-05
    2. '.' → logprob: -10.250039100646973
    3. 'add' → logprob: -12.875039100646973
    4. ' .' → logprob: -13.875039100646973
    5. '.append' → logprob: -17.500038146972656
    6. ' add' → logprob: -18.500038146972656
    7. '.setdefault' → logprob: -18.875038146972656
    8. '.Add' → logprob: -19.125038146972656
    9. '(add' → logprob: -20.000038146972656
    10. ')add' → logprob: -20.000038146972656

Token 196: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0002788551209960133
    2. ' ((' → logprob: -8.25027847290039
    3. '(' → logprob: -11.00027847290039
    4. ' (' → logprob: -14.50027847290039
    5. ' ' → logprob: -15.62527847290039
    6. '(
' → logprob: -16.75027847290039
    7. '[(' → logprob: -17.75027847290039
    8. '   ' → logprob: -18.25027847290039
    9. '{' → logprob: -18.50027847290039
    10. '  ' → logprob: -18.50027847290039

Token 197: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.584239938296378e-06
    2. ' r' → logprob: -11.875007629394531
    3. ')' → logprob: -15.000007629394531
    4. '(r' → logprob: -15.625007629394531
    5. '   ' → logprob: -16.50000762939453
    6. '
' → logprob: -16.87500762939453
    7. ' ' → logprob: -17.25000762939453
    8. '	r' → logprob: -18.25000762939453
    9. '_r' → logprob: -18.62500762939453
    10. '  ' → logprob: -18.87500762939453

Token 198: ',c' (ID: 22261)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.35575786232948303
    2. 'r' → logprob: -1.6057578325271606
    3. ',c' → logprob: -2.35575795173645
    4. ',' → logprob: -6.355757713317871
    5. ',r' → logprob: -6.855757713317871
    6. ')c' → logprob: -7.480757713317871
    7. ')' → logprob: -8.105757713317871
    8. '))' → logprob: -10.855757713317871
    9. '),' → logprob: -10.855757713317871
    10. ' c' → logprob: -11.105757713317871

Token 199: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021366903092712164
    2. '))' → logprob: -8.625213623046875
    3. ')
' → logprob: -10.375213623046875
    4. '           ' → logprob: -13.625213623046875
    5. '               ' → logprob: -14.250213623046875
    6. ' )' → logprob: -14.750213623046875
    7. ')}' → logprob: -15.750213623046875
    8. ')#' → logprob: -16.375213623046875
    9. ')))' → logprob: -16.500213623046875
    10. ')

' → logprob: -16.500213623046875

Token 200: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011371757835149765
    2. 'elif' → logprob: -4.636371612548828
    3. ' elif' → logprob: -6.761371612548828
    4. '	elif' → logprob: -8.636371612548828
    5. '<|end|>' → logprob: -8.761371612548828
    6. '<|end|>' → logprob: -11.136371612548828
    7. '       ' → logprob: -11.136371612548828
    8. '          ' → logprob: -11.261371612548828
    9. '		' → logprob: -11.386371612548828
    10. '   ' → logprob: -11.386371612548828

Token 201: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.3106819689273834
    2. '           ' → logprob: -1.435681939125061
    3. ' elif' → logprob: -3.5606820583343506
    4. '	elif' → logprob: -7.4356818199157715
    5. '       ' → logprob: -9.81068229675293
    6. '```' → logprob: -11.43568229675293
    7. '<|end|>' → logprob: -12.43568229675293
    8. '   ' → logprob: -12.56068229675293
    9. '	       ' → logprob: -13.06068229675293
    10. '		' → logprob: -13.06068229675293

Token 202: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.029764730483293533
    2. 'ch' → logprob: -3.5297646522521973
    3. '(ch' → logprob: -12.279765129089355
    4. ''ch' → logprob: -12.904765129089355
    5. ' grid' → logprob: -13.154765129089355
    6. '	ch' → logprob: -14.029765129089355
    7. ' ' → logprob: -14.029765129089355
    8. ' ' → logprob: -14.529765129089355
    9. '[ch' → logprob: -14.654765129089355
    10. 'grid' → logprob: -15.154765129089355

Token 203: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023291366174817085
    2. '==' → logprob: -3.7732913494110107
    3. '=' → logprob: -10.64829158782959
    4. ' =' → logprob: -12.02329158782959
    5. '=='' → logprob: -12.14829158782959
    6. ' ' → logprob: -12.39829158782959
    7. ' =='' → logprob: -12.77329158782959
    8. '[' → logprob: -14.02329158782959
    9. ')' → logprob: -14.77329158782959
    10. '        ' → logprob: -15.02329158782959

Token 204: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004168983083218336
    2. ' '' → logprob: -5.50416898727417
    3. ' ' → logprob: -10.379168510437012
    4. 'X' → logprob: -10.379168510437012
    5. ' X' → logprob: -11.879168510437012
    6. '   ' → logprob: -12.004168510437012
    7. '  ' → logprob: -12.129168510437012
    8. '`' → logprob: -13.504168510437012
    9. ''O' → logprob: -13.879168510437012
    10. '"' → logprob: -14.254168510437012

Token 205: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.700132997939363e-05
    2. ''' → logprob: -11.125017166137695
    3. ' X' → logprob: -14.250017166137695
    4. 'K' → logprob: -14.375017166137695
    5. '')' → logprob: -14.875017166137695
    6. 'x' → logprob: -15.500017166137695
    7. ')' → logprob: -16.000017166137695
    8. '"' → logprob: -16.250017166137695
    9. '#' → logprob: -16.375017166137695
    10. '`' → logprob: -17.875017166137695

Token 206: '':
' (ID: 7669)
  Prédit: ''):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.07567022740840912
    2. ''):' → logprob: -3.4506702423095703
    3. '):
' → logprob: -3.5756702423095703
    4. '':
' → logprob: -5.45067024230957
    5. '):' → logprob: -5.82567024230957
    6. '')' → logprob: -6.32567024230957
    7. '':' → logprob: -6.45067024230957
    8. ')' → logprob: -6.70067024230957
    9. ''' → logprob: -7.57567024230957
    10. ':' → logprob: -7.95067024230957

Token 207: '               ' (ID: 506)
  Prédit: ' king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' king' → logprob: -0.1613214761018753
    2. '               ' → logprob: -1.9113215208053589
    3. 'king' → logprob: -7.536321640014648
    4. '           ' → logprob: -8.161321640014648
    5. '                   ' → logprob: -8.661321640014648
    6. '	           ' → logprob: -10.661321640014648
    7. ' if' → logprob: -11.161321640014648
    8. ' King' → logprob: -11.161321640014648
    9. '<|end|>' → logprob: -11.661321640014648
    10. '   ' → logprob: -12.286321640014648

Token 208: ' king' (ID: 13793)
  Prédit: ' king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' king' → logprob: -0.026322247460484505
    2. 'king' (adapté à ' king') → logprob: -3.651322364807129
    3. '                   ' → logprob: -11.776322364807129
    4. '               ' → logprob: -12.026322364807129
    5. '   ' → logprob: -13.651322364807129
    6. '                
' → logprob: -13.776322364807129
    7. ' kings' → logprob: -13.776322364807129
    8. '                    
' → logprob: -13.901322364807129
    9. '                ' → logprob: -14.026322364807129
    10. 'King' → logprob: -14.526322364807129

Token 209: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -13.750001907348633
    3. '_positions' → logprob: -15.125001907348633
    4. 'cells' → logprob: -15.125001907348633
    5. ' _' → logprob: -15.750001907348633
    6. '_blocks' → logprob: -16.125001907348633
    7. '_chars' → logprob: -16.625001907348633
    8. '_cell' → logprob: -16.750001907348633
    9. 'Cells' → logprob: -17.000001907348633
    10. '._' → logprob: -18.000001907348633

Token 210: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00020711649267468601
    2. '.' → logprob: -8.50020694732666
    3. '.add' → logprob: -13.12520694732666
    4. '.app' → logprob: -14.00020694732666
    5. ' .' → logprob: -15.37520694732666
    6. '.extend' → logprob: -15.62520694732666
    7. 'append' → logprob: -15.62520694732666
    8. '.ap' → logprob: -16.000207901000977
    9. '.Append' → logprob: -16.500207901000977
    10. '.setdefault' → logprob: -16.500207901000977

Token 211: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0011849920265376568
    2. '(' → logprob: -6.751184940338135
    3. '(r' → logprob: -11.751185417175293
    4. '(
' → logprob: -12.501185417175293
    5. ' ((' → logprob: -12.876185417175293
    6. ' (' → logprob: -15.251185417175293
    7. '(((' → logprob: -16.001184463500977
    8. ' ' → logprob: -16.501184463500977
    9. '   ' → logprob: -17.626184463500977
    10. '(('' → logprob: -17.626184463500977

Token 212: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.165027217415627e-05
    2. ' r' → logprob: -10.750021934509277
    3. ')' → logprob: -15.750021934509277
    4. '_r' → logprob: -18.12502098083496
    5. '   ' → logprob: -18.75002098083496
    6. '(r' → logprob: -19.12502098083496
    7. '	r' → logprob: -19.50002098083496
    8. '<|end|>' → logprob: -19.50002098083496
    9. ',r' → logprob: -20.37502098083496
    10. ' ' → logprob: -20.37502098083496

Token 213: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7344620823860168
    2. ',r' → logprob: -1.359462022781372
    3. ',c' → logprob: -1.859462022781372
    4. 'r' → logprob: -2.234462022781372
    5. ' ,' → logprob: -7.734462261199951
    6. 'c' → logprob: -10.359461784362793
    7. ')' → logprob: -10.484461784362793
    8. ',(' → logprob: -10.609461784362793
    9. ',int' → logprob: -11.109461784362793
    10. ',
' → logprob: -11.234461784362793

Token 214: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3869522213935852
    2. '))' → logprob: -1.1369521617889404
    3. ')
' → logprob: -9.88695240020752
    4. '))
' → logprob: -11.01195240020752
    5. ')))' → logprob: -12.13695240020752
    6. ' )' → logprob: -12.88695240020752
    7. '),' → logprob: -13.38695240020752
    8. ')}' → logprob: -13.76195240020752
    9. ' ))' → logprob: -13.88695240020752
    10. '           ' → logprob: -14.88695240020752

Token 215: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.029624812304973602
    2. '   ' → logprob: -3.7796247005462646
    3. '    
' → logprob: -5.779624938964844
    4. '  
' → logprob: -6.529624938964844
    5. ' 
' → logprob: -7.779624938964844
    6. '

' → logprob: -7.904624938964844
    7. '<|end|>' → logprob: -8.029624938964844
    8. ')' → logprob: -9.154624938964844
    9. ' if' → logprob: -9.404624938964844
    10. '#' → logprob: -9.904624938964844

Token 216: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9499627947807312
    2. '
' → logprob: -1.074962854385376
    3. '#' (adapté à ' #') → logprob: -1.574962854385376
    4. ' #' → logprob: -4.324962615966797
    5. '    
' → logprob: -4.449962615966797
    6. ' if' → logprob: -4.449962615966797
    7. ' king' → logprob: -4.574962615966797
    8. ' 
' → logprob: -4.949962615966797
    9. 'if' → logprob: -6.074962615966797
    10. '  
' → logprob: -6.199962615966797

Token 217: ' The' (ID: 623)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.4744759202003479
    2. '#' → logprob: -1.7244758605957031
    3. ' king' → logprob: -1.8494758605957031
    4. 'if' → logprob: -3.349475860595703
    5. ' if' → logprob: -5.849475860595703
    6. ' #' → logprob: -6.224475860595703
    7. 'def' → logprob: -7.599475860595703
    8. 'min' → logprob: -7.974475860595703
    9. 'return' → logprob: -8.474475860595703
    10. '   ' → logprob: -8.599475860595703

Token 218: ' king' (ID: 13793)
  Prédit: ' king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' king' → logprob: -0.40645909309387207
    2. '#' → logprob: -1.906459093093872
    3. 'king' → logprob: -2.031459093093872
    4. 'if' → logprob: -3.656459093093872
    5. ' if' → logprob: -4.656458854675293
    6. 'def' → logprob: -4.781458854675293
    7. ' #' → logprob: -4.906458854675293
    8. ' def' → logprob: -7.031458854675293
    9. ' next' → logprob: -7.156458854675293
    10. '   ' → logprob: -8.406458854675293

Token 219: ' occupies' (ID: 134274)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.49210771918296814
    2. '_top' → logprob: -1.4921077489852905
    3. '_cells' → logprob: -3.117107629776001
    4. 'top' → logprob: -3.117107629776001
    5. '_blocks' → logprob: -4.11710786819458
    6. '_position' → logprob: -4.36710786819458
    7. 'positions' → logprob: -5.11710786819458
    8. '#' → logprob: -5.36710786819458
    9. '_x' → logprob: -5.49210786819458
    10. '_pos' → logprob: -5.61710786819458

Token 220: ' exactly' (ID: 9707)
  Prédit: ' four'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' four' → logprob: -1.0853545665740967
    2. ' a' → logprob: -1.2103545665740967
    3. 'a' → logprob: -1.5853545665740967
    4. ' ' → logprob: -2.7103545665740967
    5. 'the' → logprob: -3.5853545665740967
    6. ' the' → logprob: -3.5853545665740967
    7. 'four' → logprob: -3.9603545665740967
    8. '4' → logprob: -4.835354804992676
    9. '2' → logprob: -4.960354804992676
    10. ' two' → logprob: -7.460354804992676

Token 221: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.9131786823272705
    2. ' ' → logprob: -1.1631786823272705
    3. ' four' → logprob: -1.2881786823272705
    4. 'four' → logprob: -4.663178443908691
    5. ' a' → logprob: -7.163178443908691
    6. 'a' → logprob: -8.788178443908691
    7. '2' → logprob: -9.163178443908691
    8. 'two' → logprob: -12.663178443908691
    9. ' two' → logprob: -12.788178443908691
    10. '   ' → logprob: -13.038178443908691

Token 222: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0005000127712264657
    2. ' ' → logprob: -8.375499725341797
    3. ' four' → logprob: -8.750499725341797
    4. 'four' → logprob: -9.500499725341797
    5. '2' → logprob: -10.250499725341797
    6. '(' → logprob: -14.250499725341797
    7. 'a' → logprob: -15.750499725341797
    8. ' (' → logprob: -16.875499725341797
    9. 'two' → logprob: -16.875499725341797
    10. ' a' → logprob: -17.250499725341797

Token 223: ' cells' (ID: 11242)
  Prédit: ' cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cells' → logprob: -0.10928413271903992
    2. 'cells' → logprob: -2.8592841625213623
    3. ' contiguous' → logprob: -3.9842841625213623
    4. '<|end|>' → logprob: -4.484283924102783
    5. ' adjacent' → logprob: -4.859283924102783
    6. ' spaces' → logprob: -5.109283924102783
    7. '_cells' → logprob: -7.734283924102783
    8. ' positions' → logprob: -8.109284400939941
    9. ' consecutive' → logprob: -8.234284400939941
    10. 'spaces' → logprob: -8.484284400939941

Token 224: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.807671308517456
    2. ',' → logprob: -1.557671308517456
    3. '<|end|>' → logprob: -1.932671308517456
    4. '.' → logprob: -2.807671308517456
    5. ' if' → logprob: -3.182671308517456
    6. ':' → logprob: -3.682671308517456
    7. '#' → logprob: -3.932671308517456
    8. ' (' → logprob: -4.557671546936035
    9. ' and' → logprob: -4.682671546936035
    10. '
' → logprob: -4.932671546936035

Token 225: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5332301259040833
    2. 'a' → logprob: -0.9082301259040833
    3. 'the' → logprob: -5.658230304718018
    4. 'king' → logprob: -6.283230304718018
    5. ' king' → logprob: -6.283230304718018
    6. ' the' → logprob: -6.408230304718018
    7. ' ' → logprob: -7.783230304718018
    8. ' grid' → logprob: -8.53322982788086
    9. ' total' → logprob: -8.90822982788086
    10. 'total' → logprob: -9.15822982788086

Token 226: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48498308658599854
    2. '2' → logprob: -0.9849830865859985
    3. 'square' → logprob: -5.109982967376709
    4. ' square' → logprob: -5.609982967376709
    5. ' block' → logprob: -7.359982967376709
    6. 'block' → logprob: -8.359983444213867
    7. 'rect' → logprob: -9.609983444213867
    8. ' rectangular' → logprob: -10.234983444213867
    9. ' contiguous' → logprob: -10.484983444213867
    10. 's' → logprob: -11.359983444213867

Token 227: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0030082501471042633
    2. ' ' → logprob: -6.1280083656311035
    3. 'square' → logprob: -7.1280083656311035
    4. ' square' → logprob: -11.878007888793945
    5. 'block' → logprob: -12.253007888793945
    6. 'rect' → logprob: -12.378007888793945
    7. '4' → logprob: -13.003007888793945
    8. '```' → logprob: -14.503007888793945
    9. 'rectangle' → logprob: -14.878007888793945
    10. '   ' → logprob: -14.878007888793945

Token 228: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.030308183282613754
    2. ' x' → logprob: -3.905308246612549
    3. ',' → logprob: -4.655308246612549
    4. ' ' → logprob: -9.15530776977539
    5. ' ,' → logprob: -9.28030776977539
    6. '   ' → logprob: -13.15530776977539
    7. '2' → logprob: -13.53030776977539
    8. ' by' → logprob: -13.65530776977539
    9. '0' → logprob: -13.90530776977539
    10. ',x' → logprob: -14.53030776977539

Token 229: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '```' → logprob: -16.50000762939453
    4. '   ' → logprob: -16.75000762939453
    5. '1' → logprob: -16.87500762939453
    6. '
' → logprob: -16.87500762939453
    7. '

' → logprob: -17.56250762939453
    8. ',' → logprob: -18.25000762939453
    9. '  ' → logprob: -19.12500762939453
    10. '  
' → logprob: -19.25000762939453

Token 230: ' block' (ID: 4355)
  Prédit: ' block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.2632870078086853
    2. 'block' → logprob: -1.51328706741333
    3. ' square' → logprob: -5.13828706741333
    4. 'square' → logprob: -6.01328706741333
    5. '#' → logprob: -7.26328706741333
    6. ' formation' → logprob: -7.51328706741333
    7. ' area' → logprob: -7.63828706741333
    8. 'pattern' → logprob: -8.263286590576172
    9. 'area' → logprob: -8.388286590576172
    10. ' pattern' → logprob: -8.513286590576172

Token 231: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1381975412368774
    2. '   ' → logprob: -1.1381975412368774
    3. '#' → logprob: -1.8881975412368774
    4. '.' → logprob: -2.263197422027588
    5. ',' → logprob: -2.763197422027588
    6. ' if' → logprob: -5.013197422027588
    7. ',
' → logprob: -5.013197422027588
    8. '    
' → logprob: -5.013197422027588
    9. ':' → logprob: -5.513197422027588
    10. '<|end|>' → logprob: -5.638197422027588

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6751696467399597
    2. '
' → logprob: -1.0501697063446045
    3. '.' → logprob: -2.9251697063446045
    4. ',' → logprob: -3.1751697063446045
    5. '#' → logprob: -4.300169467926025
    6. ',
' → logprob: -4.300169467926025
    7. ':' → logprob: -5.300169467926025
    8. '    
' → logprob: -5.425169467926025
    9. ' and' → logprob: -6.175169467926025
    10. ' if' → logprob: -6.425169467926025

Token 233: ' #' (ID: 1069)
  Prédit: ' king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' king' → logprob: -0.43630364537239075
    2. ' top' → logprob: -1.6863036155700684
    3. 'king' → logprob: -2.4363036155700684
    4. 'top' → logprob: -3.6863036155700684
    5. 'r' → logprob: -4.561303615570068
    6. ' r' → logprob: -4.686303615570068
    7. ' min' → logprob: -4.811303615570068
    8. '#' (adapté à ' #') → logprob: -4.811303615570068
    9. 'min' → logprob: -5.811303615570068
    10. ' #' → logprob: -5.811303615570068

Token 234: ' Determine' (ID: 57076)
  Prédit: ' king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' king' → logprob: -0.3199104070663452
    2. 'king' → logprob: -1.4449104070663452
    3. ' top' → logprob: -4.694910526275635
    4. '#' → logprob: -4.694910526275635
    5. 'top' → logprob: -5.444910526275635
    6. 'assert' → logprob: -5.819910526275635
    7. 'r' → logprob: -5.944910526275635
    8. ' #' → logprob: -6.194910526275635
    9. ' assert' → logprob: -6.319910526275635
    10. ' min' → logprob: -6.819910526275635

Token 235: ' king' (ID: 13793)
  Prédit: ' king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' king' → logprob: -0.13476285338401794
    2. ' top' → logprob: -2.884762763977051
    3. ' min' → logprob: -3.634762763977051
    4. ' the' → logprob: -3.884762763977051
    5. 'king' → logprob: -4.009762763977051
    6. 'top' → logprob: -6.009762763977051
    7. 'min' → logprob: -6.384762763977051
    8. 'the' → logprob: -7.509762763977051
    9. '#' → logprob: -8.13476276397705
    10. ' #' → logprob: -10.13476276397705

Token 236: ' top' (ID: 2344)
  Prédit: '_top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.2809079885482788
    2. '_pos' → logprob: -1.9059079885482788
    3. '_r' → logprob: -3.0309081077575684
    4. '_x' → logprob: -4.280908107757568
    5. '_positions' → logprob: -4.280908107757568
    6. '_position' → logprob: -4.530908107757568
    7. '_origin' → logprob: -6.280908107757568
    8. 'top' → logprob: -6.530908107757568
    9. '_min' → logprob: -6.655908107757568
    10. '_row' → logprob: -6.655908107757568

Token 237: '-left' (ID: 17007)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.0026924132835119963
    2. '_le' → logprob: -6.127692222595215
    3. 'left' → logprob: -8.502692222595215
    4. '-left' → logprob: -8.877692222595215
    5. '_' → logprob: -9.502692222595215
    6. 'Left' → logprob: -10.627692222595215
    7. '```' → logprob: -11.252692222595215
    8. ' left' → logprob: -11.377692222595215
    9. '   ' → logprob: -11.877692222595215
    10. ' _' → logprob: -12.502692222595215

Token 238: ' cell' (ID: 4206)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11521728336811066
    2. '_r' → logprob: -2.8652172088623047
    3. '_corner' → logprob: -4.240217208862305
    4. '=' → logprob: -4.490217208862305
    5. '_cell' → logprob: -4.740217208862305
    6. '_' → logprob: -4.990217208862305
    7. ' cell' → logprob: -5.490217208862305
    8. '_x' → logprob: -5.990217208862305
    9. ' corner' → logprob: -6.740217208862305
    10. 'corner' → logprob: -7.740217208862305

Token 239: ' coordinates' (ID: 27933)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41834431886672974
    2. ' =' → logprob: -2.418344259262085
    3. ':' → logprob: -3.043344259262085
    4. '
' → logprob: -3.043344259262085
    5. ' king' → logprob: -3.043344259262085
    6. ' for' → logprob: -3.293344259262085
    7. ' r' → logprob: -4.043344497680664
    8. 'r' → logprob: -4.418344497680664
    9. '    
' → logprob: -4.418344497680664
    10. ' (' → logprob: -5.668344497680664

Token 240: ' as' (ID: 472)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8229415416717529
    2. ':
' → logprob: -0.8229415416717529
    3. '   ' → logprob: -3.447941541671753
    4. ' =' → logprob: -3.572941541671753
    5. ' king' → logprob: -3.697941541671753
    6. ' for' → logprob: -4.447941780090332
    7. '
' → logprob: -4.822941780090332
    8. '=
' → logprob: -5.572941780090332
    9. 'for' → logprob: -5.947941780090332
    10. '=' → logprob: -6.447941780090332

Token 241: ' a' (ID: 261)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.17357665300369263
    2. ' min' → logprob: -2.173576593399048
    3. '(min' → logprob: -3.798576593399048
    4. 'None' → logprob: -4.173576831817627
    5. ' None' → logprob: -5.173576831817627
    6. 'king' → logprob: -7.298576831817627
    7. 'top' → logprob: -7.423576831817627
    8. '(None' → logprob: -8.423576354980469
    9. ' king' → logprob: -8.548576354980469
    10. ' (' → logprob: -9.423576354980469

Token 242: ' state' (ID: 2608)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.11877866089344025
    2. 'tuple' → logprob: -3.368778705596924
    3. 'min' → logprob: -3.618778705596924
    4. ' min' → logprob: -4.118778705596924
    5. ' (' → logprob: -4.118778705596924
    6. ' next' → logprob: -5.618778705596924
    7. '(tuple' → logprob: -6.493778705596924
    8. ' single' → logprob: -6.618778705596924
    9. ' pair' → logprob: -6.743778705596924
    10. ' sorted' → logprob: -6.868778705596924

Token 243: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23693571984767914
    2. ' king' → logprob: -1.9869357347488403
    3. ' =' → logprob: -3.611935615539551
    4. ':' → logprob: -4.361935615539551
    5. '_' → logprob: -5.236935615539551
    6. ',' → logprob: -5.486935615539551
    7. ' 
' → logprob: -5.486935615539551
    8. ' (' → logprob: -5.486935615539551
    9. '    
' → logprob: -5.861935615539551
    10. ' for' → logprob: -6.486935615539551

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0387791395187378
    2. ' 
' → logprob: -2.2887792587280273
    3. ' king' → logprob: -2.2887792587280273
    4. ':' → logprob: -2.4137792587280273
    5. '
' → logprob: -2.5387792587280273
    6. ':
' → logprob: -2.6637792587280273
    7. ' for' → logprob: -2.6637792587280273
    8. '  
' → logprob: -3.5387792587280273
    9. '    
' → logprob: -3.6637792587280273
    10. '#' → logprob: -4.038779258728027

Token 245: ' #' (ID: 1069)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.9229629635810852
    2. ' king' → logprob: -0.9229629635810852
    3. ' min' → logprob: -2.4229629039764404
    4. ' for' → logprob: -2.7979629039764404
    5. 'min' → logprob: -4.0479631423950195
    6. 'for' → logprob: -4.1729631423950195
    7. 'kx' → logprob: -4.6729631423950195
    8. '#' (adapté à ' #') → logprob: -5.7979631423950195
    9. '   ' → logprob: -6.5479631423950195
    10. 'def' → logprob: -6.5479631423950195

Token 246: ' So' (ID: 2632)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.6154457330703735
    2. ' king' → logprob: -0.8654457330703735
    3. ' min' → logprob: -3.865445613861084
    4. 'min' → logprob: -4.490445613861084
    5. '#' → logprob: -5.740445613861084
    6. 'kx' → logprob: -7.615445613861084
    7. 'r' → logprob: -7.865445613861084
    8. '   ' → logprob: -7.990445613861084
    9. ' #' → logprob: -8.240446090698242
    10. ' for' → logprob: -8.240446090698242

Token 247: ' king' (ID: 13793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2872026860713959
    2. ' king' → logprob: -2.1622025966644287
    3. ':' → logprob: -2.6622025966644287
    4. ',' → logprob: -4.412202835083008
    5. ' for' → logprob: -4.787202835083008
    6. 'r' → logprob: -5.287202835083008
    7. ' r' → logprob: -5.287202835083008
    8. 'king' → logprob: -5.412202835083008
    9. ' #' → logprob: -5.537202835083008
    10. '    ' → logprob: -5.537202835083008

Token 248: ' position' (ID: 4010)
  Prédit: '_top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.1369970142841339
    2. '_pos' → logprob: -3.3869969844818115
    3. '_state' → logprob: -3.8869969844818115
    4. '_cells' → logprob: -3.8869969844818115
    5. '_positions' → logprob: -4.386997222900391
    6. '_row' → logprob: -4.511997222900391
    7. '_x' → logprob: -4.636997222900391
    8. '_r' → logprob: -4.761997222900391
    9. '_states' → logprob: -5.761997222900391
    10. '_position' → logprob: -6.011997222900391

Token 249: ' state' (ID: 2608)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024611234664916992
    2. '=' → logprob: -4.149611473083496
    3. '_' → logprob: -5.649611473083496
    4. ' is' → logprob: -6.149611473083496
    5. 's' → logprob: -6.274611473083496
    6. '_state' → logprob: -8.399611473083496
    7. '_r' → logprob: -8.649611473083496
    8. '_top' → logprob: -9.649611473083496
    9. '_pos' → logprob: -10.024611473083496
    10. ',' → logprob: -10.024611473083496

Token 250: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0808563232421875
    2. '=' → logprob: -2.5808563232421875
    3. ' is' → logprob: -6.8308563232421875
    4. 's' → logprob: -7.2058563232421875
    5. ',' → logprob: -10.455856323242188
    6. ' will' → logprob: -10.705856323242188
    7. 'is' → logprob: -11.330856323242188
    8. ' ' → logprob: -11.455856323242188
    9. ' can' → logprob: -11.955856323242188
    10. ' ,' → logprob: -12.080856323242188

Token 251: ' (' (ID: 350)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -1.30208420753479
    2. '(min' → logprob: -1.55208420753479
    3. ' king' → logprob: -1.80208420753479
    4. '(' → logprob: -1.80208420753479
    5. 'min' → logprob: -1.92708420753479
    6. ' min' → logprob: -4.177083969116211
    7. ' (' → logprob: -4.552083969116211
    8. '(r' → logprob: -5.677083969116211
    9. '(x' → logprob: -6.052083969116211
    10. 'tuple' → logprob: -6.427083969116211

Token 252: 'kr' (ID: 7316)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.1739477664232254
    2. ' king' → logprob: -2.548947811126709
    3. 'r' → logprob: -2.673947811126709
    4. 'min' → logprob: -5.548947811126709
    5. ' r' → logprob: -6.048947811126709
    6. ')' → logprob: -6.673947811126709
    7. 'row' → logprob: -6.923947811126709
    8. 'kr' → logprob: -7.048947811126709
    9. 'kx' → logprob: -7.173947811126709
    10. ' min' → logprob: -7.548947811126709

Token 253: ',k' (ID: 35155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.054982028901576996
    2. 'ow' → logprob: -3.1799819469451904
    3. ',k' → logprob: -4.8049821853637695
    4. ' ,' → logprob: -5.6799821853637695
    5. ',c' → logprob: -8.92998218536377
    6. ',r' → logprob: -10.05498218536377
    7. 'k' → logprob: -10.30498218536377
    8. '_k' → logprob: -10.55498218536377
    9. 'ows' → logprob: -10.92998218536377
    10. ',row' → logprob: -11.55498218536377

Token 254: 'c' (ID: 66)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01450746227055788
    2. 'ing' → logprob: -5.014507293701172
    3. ',r' → logprob: -5.764507293701172
    4. ',' → logprob: -6.014507293701172
    5. 'c' → logprob: -6.639507293701172
    6. ',c' → logprob: -7.639507293701172
    7. ')' → logprob: -8.764507293701172
    8. ',k' → logprob: -9.139507293701172
    9. 'k' → logprob: -10.264507293701172
    10. '_r' → logprob: -10.639507293701172

Token 255: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00307064107619226
    2. ',' → logprob: -6.128070831298828
    3. '),' → logprob: -7.503070831298828
    4. ')=' → logprob: -8.628070831298828
    5. ' )' → logprob: -10.003070831298828
    6. ',)' → logprob: -10.878070831298828
    7. '   ' → logprob: -11.628070831298828
    8. ')+' → logprob: -11.628070831298828
    9. ')>' → logprob: -11.753070831298828
    10. '+' → logprob: -11.878070831298828

Token 256: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17343375086784363
    2. ':' → logprob: -2.548433780670166
    3. ',' → logprob: -3.673433780670166
    4. ' =' → logprob: -3.923433780670166
    5. '
' → logprob: -4.548433780670166
    6. '=' → logprob: -4.673433780670166
    7. ')' → logprob: -5.423433780670166
    8. '(' → logprob: -5.923433780670166
    9. ':
' → logprob: -6.173433780670166
    10. ' ' → logprob: -6.923433780670166

Token 257: ' upper' (ID: 13057)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.7773405909538269
    2. ' king' → logprob: -1.2773406505584717
    3. 'min' → logprob: -1.9023406505584717
    4. ' min' → logprob: -3.0273406505584717
    5. '(' → logprob: -3.4023406505584717
    6. '(min' → logprob: -4.277340412139893
    7. 'None' → logprob: -5.027340412139893
    8. ' None' → logprob: -5.152340412139893
    9. ' (' → logprob: -6.277340412139893
    10. '(None' → logprob: -7.027340412139893

Token 258: ' left' (ID: 3561)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.052696019411087036
    2. '_le' → logprob: -3.8026959896087646
    3. '-left' → logprob: -4.427696228027344
    4. 'left' → logprob: -4.677696228027344
    5. ',' → logprob: -6.052696228027344
    6. '_' → logprob: -6.302696228027344
    7. '-' → logprob: -6.927696228027344
    8. ' left' → logprob: -7.052696228027344
    9. ' _' → logprob: -7.552696228027344
    10. ',left' → logprob: -8.427696228027344

Token 259: ' cell' (ID: 4206)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0269016046077013
    2. ' _' → logprob: -4.651901721954346
    3. '_r' → logprob: -4.776901721954346
    4. ',' → logprob: -6.401901721954346
    5. '_k' → logprob: -6.401901721954346
    6. '_corner' → logprob: -6.401901721954346
    7. '_,' → logprob: -7.026901721954346
    8. 'r' → logprob: -7.651901721954346
    9. ' ' → logprob: -8.151901245117188
    10. '   ' → logprob: -8.651901245117188

Token 260: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35408341884613037
    2. ',' → logprob: -2.35408353805542
    3. '=' → logprob: -2.85408353805542
    4. ' =' → logprob: -2.97908353805542
    5. ')' → logprob: -3.60408353805542
    6. ':' → logprob: -3.72908353805542
    7. '
' → logprob: -4.22908353805542
    8. '_' → logprob: -4.85408353805542
    9. ',
' → logprob: -5.47908353805542
    10. ' of' → logprob: -5.60408353805542

Token 261: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.26012861728668213
    2. ' king' → logprob: -1.5101286172866821
    3. 'the' → logprob: -5.010128498077393
    4. ' the' → logprob: -6.510128498077393
    5. '(' → logprob: -12.76012897491455
    6. ' ' → logprob: -13.26012897491455
    7. ' (' → logprob: -13.63512897491455
    8. '   ' → logprob: -14.76012897491455
    9. '```' → logprob: -14.76012897491455
    10. 'King' → logprob: -15.38512897491455

Token 262: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3760622441768646
    2. '_pos' → logprob: -2.5010621547698975
    3. '_cells' → logprob: -2.5010621547698975
    4. ')' → logprob: -2.8760621547698975
    5. '_coords' → logprob: -3.8760621547698975
    6. '_r' → logprob: -4.126062393188477
    7. '_position' → logprob: -4.501062393188477
    8. '_positions' → logprob: -4.626062393188477
    9. '   ' → logprob: -4.876062393188477
    10. '_cell' → logprob: -5.001062393188477

Token 263: '2' (ID: 17)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.13396140933036804
    2. ' block' → logprob: -2.2589614391326904
    3. '_block' → logprob: -4.758961200714111
    4. '_cells' → logprob: -5.133961200714111
    5. '2' → logprob: -6.633961200714111
    6. ' ' → logprob: -7.258961200714111
    7. 'square' → logprob: -7.258961200714111
    8. ')' → logprob: -7.383961200714111
    9. 'position' → logprob: -7.758961200714111
    10. '   ' → logprob: -8.00896167755127

Token 264: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.442511647939682
    2. ',' → logprob: -1.0675116777420044
    3. ' ,' → logprob: -5.442511558532715
    4. '2' → logprob: -5.692511558532715
    5. '<|end|>' → logprob: -5.817511558532715
    6. ' x' → logprob: -6.442511558532715
    7. ' ' → logprob: -7.317511558532715
    8. '0' → logprob: -8.942511558532715
    9. 'by' → logprob: -9.192511558532715
    10. ',
' → logprob: -9.692511558532715

Token 265: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012594614236149937
    2. ' ' → logprob: -9.875125885009766
    3. ' king' → logprob: -10.625125885009766
    4. '1' → logprob: -10.750125885009766
    5. 'king' → logprob: -11.375125885009766
    6. 'block' → logprob: -12.250125885009766
    7. '```' → logprob: -12.625125885009766
    8. ',' → logprob: -13.187625885009766
    9. ' block' → logprob: -14.125125885009766
    10. 'King' → logprob: -14.500125885009766

Token 266: ' block' (ID: 4355)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19309400022029877
    2. '_block' → logprob: -3.44309401512146
    3. ')' → logprob: -3.81809401512146
    4. '   ' → logprob: -3.94309401512146
    5. '_pos' → logprob: -3.94309401512146
    6. ' block' → logprob: -4.193093776702881
    7. '_r' → logprob: -4.568093776702881
    8. '
' → logprob: -4.568093776702881
    9. '_cell' → logprob: -5.318093776702881
    10. ' _' → logprob: -5.568093776702881

Token 267: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5354108810424805
    2. '
' → logprob: -0.9104108810424805
    3. ':' → logprob: -5.4104108810424805
    4. '    
' → logprob: -5.7854108810424805
    5. ',' → logprob: -7.1604108810424805
    6. ',
' → logprob: -7.4104108810424805
    7. ':
' → logprob: -7.4104108810424805
    8. 'def' → logprob: -7.6604108810424805
    9. '\n' → logprob: -8.16041088104248
    10. ' (' → logprob: -8.41041088104248

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20586363971233368
    2. '
' → logprob: -2.9558637142181396
    3. '  
' → logprob: -3.3308637142181396
    4. '    
' → logprob: -3.9558637142181396
    5. ' 
' → logprob: -4.0808634757995605
    6. '(' → logprob: -4.0808634757995605
    7. ' (' → logprob: -4.2058634757995605
    8. '(
' → logprob: -5.5808634757995605
    9. '\n' → logprob: -5.5808634757995605
    10. ' ' → logprob: -5.7058634757995605

Token 269: ' #' (ID: 1069)
  Prédit: 'kr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kr' → logprob: -0.17245274782180786
    2. ' kr' → logprob: -2.297452688217163
    3. 'king' → logprob: -3.547452688217163
    4. '   ' → logprob: -4.547452926635742
    5. ' king' → logprob: -4.922452926635742
    6. ' for' → logprob: -6.172452926635742
    7. 'for' → logprob: -6.297452926635742
    8. '
' → logprob: -6.422452926635742
    9. '    
' → logprob: -6.797452926635742
    10. '#' (adapté à ' #') → logprob: -6.797452926635742

Token 270: ' Determine' (ID: 57076)
  Prédit: 'kr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'kr' → logprob: -0.8271752595901489
    2. '#' → logprob: -1.452175259590149
    3. 'king' → logprob: -2.2021751403808594
    4. 'min' → logprob: -2.2021751403808594
    5. 'for' → logprob: -2.5771751403808594
    6. ' min' → logprob: -4.702175140380859
    7. ' for' → logprob: -5.327175140380859
    8. 'possible' → logprob: -5.452175140380859
    9. 'def' → logprob: -5.577175140380859
    10. ' king' → logprob: -6.077175140380859

Token 271: ' king' (ID: 13793)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.7140687704086304
    2. ' kr' → logprob: -1.4640687704086304
    3. ' king' → logprob: -2.33906888961792
    4. 'kr' → logprob: -2.46406888961792
    5. 'min' → logprob: -2.83906888961792
    6. 'king' → logprob: -3.33906888961792
    7. '#' → logprob: -6.83906888961792
    8. ' possible' → logprob: -7.08906888961792
    9. 'possible' → logprob: -7.08906888961792
    10. ' #' → logprob: -9.089068412780762

Token 272: ' top' (ID: 2344)
  Prédit: '_top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.8594794869422913
    2. '_cells' → logprob: -1.6094794273376465
    3. 'top' → logprob: -1.9844794273376465
    4. '_positions' → logprob: -2.2344794273376465
    5. ' top' → logprob: -2.3594794273376465
    6. '_min' → logprob: -4.2344794273376465
    7. '_r' → logprob: -5.6094794273376465
    8. 'min' → logprob: -5.8594794273376465
    9. '_rows' → logprob: -5.9844794273376465
    10. ''s' → logprob: -6.2344794273376465

Token 273: '-left' (ID: 17007)
  Prédit: '-left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-left' → logprob: -0.06682184338569641
    2. '_left' → logprob: -2.816821813583374
    3. '-' → logprob: -5.566822052001953
    4. 'left' → logprob: -8.316822052001953
    5. '   ' → logprob: -8.441822052001953
    6. '_LEFT' → logprob: -8.441822052001953
    7. 'Left' → logprob: -9.691822052001953
    8. '-cell' → logprob: -10.316822052001953
    9. '```' → logprob: -10.316822052001953
    10. ' -' → logprob: -10.441822052001953

Token 274: ':
' (ID: 734)
  Prédit: ' cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cell' → logprob: -0.22564570605754852
    2. '_r' → logprob: -3.1006457805633545
    3. 'r' → logprob: -3.3506457805633545
    4. ' r' → logprob: -3.6006457805633545
    5. '_cell' → logprob: -3.7256457805633545
    6. 'cell' → logprob: -3.8506457805633545
    7. ' cells' → logprob: -4.475645542144775
    8. ' position' → logprob: -4.850645542144775
    9. ' coordinates' → logprob: -5.100645542144775
    10. ' row' → logprob: -5.475645542144775

Token 275: '   ' (ID: 271)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.001680536544881761
    2. ' king' → logprob: -6.626680374145508
    3. 'min' → logprob: -8.126680374145508
    4. '   ' → logprob: -10.376680374145508
    5. 'for' → logprob: -11.751680374145508
    6. 'sorted' → logprob: -11.876680374145508
    7. '
' → logprob: -12.751680374145508
    8. 'possible' → logprob: -13.126680374145508
    9. ' min' → logprob: -13.501680374145508
    10. '#' → logprob: -13.751680374145508

Token 276: ' #' (ID: 1069)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.029119420796632767
    2. 'min' → logprob: -3.6541194915771484
    3. 'kx' → logprob: -6.904119491577148
    4. 'kr' → logprob: -7.279119491577148
    5. ' king' → logprob: -7.404119491577148
    6. 'possible' → logprob: -9.404119491577148
    7. ' min' → logprob: -9.654119491577148
    8. 'for' → logprob: -9.904119491577148
    9. 'xs' → logprob: -10.279119491577148
    10. '#' (adapté à ' #') → logprob: -10.279119491577148

Token 277: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.02491813898086548
    2. ' king' → logprob: -3.8999180793762207
    3. 'min' → logprob: -5.774918079376221
    4. '#' → logprob: -7.524918079376221
    5. ' min' → logprob: -8.149918556213379
    6. 'for' → logprob: -9.149918556213379
    7. 'kx' → logprob: -9.524918556213379
    8. 'possible' → logprob: -10.149918556213379
    9. 'r' → logprob: -10.524918556213379
    10. 'kr' → logprob: -10.649918556213379

Token 278: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.0021652483846992254
    2. '_positions' → logprob: -6.5021653175354
    3. 'cells' → logprob: -8.502164840698242
    4. '_coords' → logprob: -8.752164840698242
    5. '_' → logprob: -9.502164840698242
    6. '_rows' → logprob: -9.877164840698242
    7. '_top' → logprob: -10.002164840698242
    8. '_x' → logprob: -10.252164840698242
    9. '_r' → logprob: -10.377164840698242
    10. '_pos' → logprob: -11.877164840698242

Token 279: ' is' (ID: 382)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.008247294463217258
    2. ' =' → logprob: -5.633247375488281
    3. '=' → logprob: -5.883247375488281
    4. '_sorted' → logprob: -6.383247375488281
    5. 'sort' → logprob: -9.133247375488281
    6. 'sorted' → logprob: -10.758247375488281
    7. 'x' → logprob: -11.133247375488281
    8. '_x' → logprob: -12.008247375488281
    9. '_sort' → logprob: -12.633247375488281
    10. '_coords' → logprob: -13.633247375488281

Token 280: ' four' (ID: 4242)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0019142382079735398
    2. ' sorted' → logprob: -6.501914024353027
    3. '[(' → logprob: -8.126914024353027
    4. '[' → logprob: -9.251914024353027
    5. '(sorted' → logprob: -12.251914024353027
    6. '[]' → logprob: -12.251914024353027
    7. 'king' → logprob: -12.376914024353027
    8. ' [(' → logprob: -13.751914024353027
    9. 'set' → logprob: -13.876914024353027
    10. '   ' → logprob: -14.126914024353027

Token 281: ' coordinates' (ID: 27933)
  Prédit: ' cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cells' → logprob: -0.9463645219802856
    2. ' sorted' → logprob: -2.196364402770996
    3. ' king' → logprob: -2.446364402770996
    4. 'coordinates' → logprob: -2.696364402770996
    5. 'sorted' → logprob: -2.696364402770996
    6. 'cells' → logprob: -2.821364402770996
    7. '_cells' → logprob: -3.071364402770996
    8. ' coordinates' → logprob: -3.946364402770996
    9. '_coordinates' → logprob: -3.946364402770996
    10. '_sorted' → logprob: -4.321364402770996

Token 282: ' of' (ID: 328)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'king' → logprob: -1.235316514968872
    2. 'sorted' → logprob: -1.360316514968872
    3. ' =' → logprob: -1.735316514968872
    4. '
' → logprob: -1.860316514968872
    5. '.sort' → logprob: -2.860316514968872
    6. '=' → logprob: -3.610316514968872
    7. '_sorted' → logprob: -4.235316276550293
    8. ' sorted' → logprob: -4.735316276550293
    9. ' king' → logprob: -5.360316276550293
    10. 'sort' → logprob: -6.610316276550293

Token 283: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.06991031020879745
    2. 'the' → logprob: -3.3199102878570557
    3. ' king' → logprob: -3.6949102878570557
    4. '(' → logprob: -5.944910526275635
    5. 'X' → logprob: -6.069910526275635
    6. ' the' → logprob: -6.694910526275635
    7. 'cells' → logprob: -9.319910049438477
    8. ' X' → logprob: -9.694910049438477
    9. '(X' → logprob: -10.444910049438477
    10. ' (' → logprob: -10.819910049438477

Token 284: ' cells' (ID: 11242)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.05264094099402428
    2. '_' → logprob: -3.677640914916992
    3. ' king' → logprob: -5.177640914916992
    4. '_positions' → logprob: -5.427640914916992
    5. 'king' → logprob: -5.552640914916992
    6. '#' → logprob: -6.052640914916992
    7. 'cells' → logprob: -6.052640914916992
    8. '_coordinates' → logprob: -6.302640914916992
    9. '_coords' → logprob: -6.427640914916992
    10. '_x' → logprob: -7.177640914916992

Token 285: ',
' (ID: 412)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9650140404701233
    2. 'king' → logprob: -0.9650140404701233
    3. ' king' → logprob: -1.4650139808654785
    4. '   ' → logprob: -6.2150139808654785
    5. '#' → logprob: -6.3400139808654785
    6. ',' → logprob: -7.8400139808654785
    7. 'sorted' → logprob: -8.090014457702637
    8. '    
' → logprob: -8.340014457702637
    9. '.king' → logprob: -8.340014457702637
    10. ':' → logprob: -8.465014457702637

Token 286: '   ' (ID: 271)
  Prédit: ' king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' king' → logprob: -0.3914624750614166
    2. 'king' → logprob: -1.1414624452590942
    3. 'kr' → logprob: -5.891462326049805
    4. ' kr' → logprob: -6.516462326049805
    5. 'r' → logprob: -9.516462326049805
    6. ' sorted' → logprob: -9.516462326049805
    7. ' r' → logprob: -9.891462326049805
    8. 'kx' → logprob: -10.891462326049805
    9. 'sorted' → logprob: -11.016462326049805
    10. ' kings' → logprob: -11.266462326049805

Token 287: ' #' (ID: 1069)
  Prédit: ' king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' king' → logprob: -0.3545002341270447
    2. 'king' → logprob: -1.2295002937316895
    3. 'kr' → logprob: -5.7295002937316895
    4. ' kr' → logprob: -6.2295002937316895
    5. ' sorted' → logprob: -7.7295002937316895
    6. '#' (adapté à ' #') → logprob: -8.979499816894531
    7. 'sorted' → logprob: -9.104499816894531
    8. ' kings' → logprob: -10.854499816894531
    9. ' #' → logprob: -10.979499816894531
    10. 'r' → logprob: -11.354499816894531

Token 288: ' find' (ID: 1646)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.04173773154616356
    2. ' king' → logprob: -3.4167377948760986
    3. 'kr' → logprob: -5.0417375564575195
    4. '#' → logprob: -7.1667375564575195
    5. 'r' → logprob: -8.29173755645752
    6. ' kr' → logprob: -9.04173755645752
    7. 'min' → logprob: -9.04173755645752
    8. 'kx' → logprob: -9.29173755645752
    9. ' min' → logprob: -9.91673755645752
    10. 'ks' → logprob: -10.16673755645752

Token 289: ' minimum' (ID: 11085)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6776089668273926
    2. ' min' → logprob: -0.8026089668273926
    3. 'kr' → logprob: -3.6776089668273926
    4. ' kr' → logprob: -4.927608966827393
    5. ' the' → logprob: -5.552608966827393
    6. '(min' → logprob: -5.802608966827393
    7. 'the' → logprob: -6.802608966827393
    8. ' minimum' → logprob: -7.177608966827393
    9. 'minimum' → logprob: -7.427608966827393
    10. 'king' → logprob: -7.802608966827393

Token 290: ' row' (ID: 5225)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.7738665342330933
    2. 'r' → logprob: -1.1488665342330933
    3. '_r' → logprob: -1.6488665342330933
    4. '(' → logprob: -3.898866653442383
    5. 'king' → logprob: -5.898866653442383
    6. 'kr' → logprob: -5.898866653442383
    7. '_row' → logprob: -6.648866653442383
    8. '(
' → logprob: -7.773866653442383
    9. ' (' → logprob: -7.898866653442383
    10. ' r' → logprob: -8.273866653442383

Token 291: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13171321153640747
    2. ' =' → logprob: -2.8817131519317627
    3. '=' → logprob: -3.8817131519317627
    4. ',k' → logprob: -4.256713390350342
    5. ' ,' → logprob: -4.631713390350342
    6. 'king' → logprob: -5.506713390350342
    7. 'r' → logprob: -5.631713390350342
    8. '=min' → logprob: -5.881713390350342
    9. ',r' → logprob: -6.256713390350342
    10. '_,' → logprob: -6.256713390350342

Token 292: ' column' (ID: 6000)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.030614139512181282
    2. 'min' → logprob: -3.780614137649536
    3. ' minimum' → logprob: -5.030614376068115
    4. 'col' → logprob: -7.530614376068115
    5. 'column' → logprob: -8.405613899230957
    6. ' min' → logprob: -10.155613899230957
    7. 'king' → logprob: -13.155613899230957
    8. ' col' → logprob: -13.280613899230957
    9. ' column' → logprob: -13.405613899230957
    10. '_min' → logprob: -14.155613899230957

Token 293: ' among' (ID: 6200)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8050118684768677
    2. '
' → logprob: -1.4300118684768677
    3. 'king' → logprob: -2.430011749267578
    4. ' king' → logprob: -2.430011749267578
    5. 'kr' → logprob: -2.555011749267578
    6. ' =' → logprob: -3.805011749267578
    7. 'min' → logprob: -4.180011749267578
    8. ',' → logprob: -5.180011749267578
    9. ' kr' → logprob: -5.430011749267578
    10. '    
' → logprob: -5.680011749267578

Token 294: ' them' (ID: 1373)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.020594794303178787
    2. ' king' → logprob: -3.895594835281372
    3. '[(' → logprob: -10.645594596862793
    4. '[' → logprob: -11.270594596862793
    5. '[key' → logprob: -11.645594596862793
    6. '[k' → logprob: -12.520594596862793
    7. ' [' → logprob: -14.145594596862793
    8. 'the' → logprob: -14.645594596862793
    9. '[x' → logprob: -14.770594596862793
    10. 'x' → logprob: -14.895594596862793

Token 295: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35863974690437317
    2. 'kr' → logprob: -2.358639717102051
    3. '
' → logprob: -2.608639717102051
    4. 'king' → logprob: -3.108639717102051
    5. ' king' → logprob: -3.358639717102051
    6. 'min' → logprob: -3.608639717102051
    7. ' kr' → logprob: -4.608639717102051
    8. ' min' → logprob: -5.608639717102051
    9. '    
' → logprob: -5.983639717102051
    10. ',' → logprob: -5.983639717102051

Token 296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10107483714818954
    2. '
' → logprob: -3.6010749340057373
    3. 'kr' → logprob: -3.6010749340057373
    4. ' kr' → logprob: -3.6010749340057373
    5. 'min' → logprob: -5.226074695587158
    6. ' min' → logprob: -5.976074695587158
    7. ' king' → logprob: -5.976074695587158
    8. '    
' → logprob: -6.476074695587158
    9. 'king' → logprob: -7.101074695587158
    10. '  
' → logprob: -7.976074695587158

Token 297: ' kr' (ID: 7430)
  Prédit: 'kr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kr' (adapté à ' kr') → logprob: -0.6035125255584717
    2. '   ' → logprob: -1.1035125255584717
    3. 'king' → logprob: -2.8535125255584717
    4. ' kr' → logprob: -3.3535125255584717
    5. ' king' → logprob: -4.353512763977051
    6. 'min' → logprob: -4.728512763977051
    7. ' min' → logprob: -5.728512763977051
    8. '
' → logprob: -6.728512763977051
    9. '(' → logprob: -7.228512763977051
    10. ' (' → logprob: -7.603512763977051

Token 298: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05664334446191788
    2. '=' → logprob: -3.18164324760437
    3. ',k' → logprob: -4.681643486022949
    4. ' =' → logprob: -5.556643486022949
    5. ' ,' → logprob: -8.18164348602295
    6. ',c' → logprob: -9.43164348602295
    7. ',r' → logprob: -10.05664348602295
    8. ',min' → logprob: -11.43164348602295
    9. ',
' → logprob: -12.93164348602295
    10. '=min' → logprob: -13.05664348602295

Token 299: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.004078401252627373
    2. ' min' → logprob: -5.504078388214111
    3. '	min' → logprob: -18.879077911376953
    4. ' king' → logprob: -20.629077911376953
    5. 'king' → logprob: -20.879077911376953
    6. '=min' → logprob: -20.879077911376953
    7. '[min' → logprob: -20.879077911376953
    8. '(min' → logprob: -21.629077911376953
    9. 'max' → logprob: -22.254077911376953
    10. 'mi' → logprob: -22.879077911376953

Token 300: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.01081470213830471
    2. '([' → logprob: -4.885814666748047
    3. '(cell' → logprob: -6.135814666748047
    4. '(row' → logprob: -8.135814666748047
    5. '(x' → logprob: -8.385814666748047
    6. '(' → logprob: -8.760814666748047
    7. '(k' → logprob: -8.885814666748047
    8. '(c' → logprob: -9.385814666748047
    9. '(rc' → logprob: -9.635814666748047
    10. '((' → logprob: -10.010814666748047

Token 301: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2853459417819977
    2. ' for' → logprob: -1.4103459119796753
    3. 'king' → logprob: -6.535346031188965
    4. ',' → logprob: -6.660346031188965
    5. ')' → logprob: -8.285346031188965
    6. '[' → logprob: -8.785346031188965
    7. ' ' → logprob: -8.910346031188965
    8. '(r' → logprob: -9.035346031188965
    9. '(c' → logprob: -9.035346031188965
    10. '(' → logprob: -9.285346031188965

Token 302: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.20856043696403503
    2. ' r' → logprob: -1.9585604667663574
    3. '(r' → logprob: -3.0835604667663574
    4. ' (' → logprob: -6.583560466766357
    5. ',r' → logprob: -12.5835599899292
    6. '	r' → logprob: -13.2085599899292
    7. '_r' → logprob: -14.2085599899292
    8. '[r' → logprob: -14.7085599899292
    9. ' ' → logprob: -14.9585599899292
    10. ',' → logprob: -14.9585599899292

Token 303: ',c' (ID: 22261)
  Prédit: ',r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.13308094441890717
    2. ',' → logprob: -2.5080809593200684
    3. ',k' → logprob: -3.5080809593200684
    4. ' in' → logprob: -4.758080959320068
    5. ',_' → logprob: -5.758080959320068
    6. ',c' → logprob: -7.008080959320068
    7. ' ,' → logprob: -7.883080959320068
    8. 'in' → logprob: -10.00808048248291
    9. ',in' → logprob: -10.38308048248291
    10. ',s' → logprob: -10.88308048248291

Token 304: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6330836415290833
    2. 'in' → logprob: -0.7580836415290833
    3. 'king' → logprob: -8.00808334350586
    4. ' king' → logprob: -9.25808334350586
    5. ')' → logprob: -10.88308334350586
    6. ',' → logprob: -11.25808334350586
    7. ' ' → logprob: -11.63308334350586
    8. '   ' → logprob: -12.13308334350586
    9. ' ,' → logprob: -13.25808334350586
    10. '    ' → logprob: -13.25808334350586

Token 305: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.16022422909736633
    2. ' king' → logprob: -1.910224199295044
    3. '.king' → logprob: -16.91022491455078
    4. 'queen' → logprob: -18.03522491455078
    5. ' ' → logprob: -18.53522491455078
    6. 'King' → logprob: -18.66022491455078
    7. '
' → logprob: -19.03522491455078
    8. 'ker' → logprob: -20.41022491455078
    9. 'ken' → logprob: -20.66022491455078
    10. ')' → logprob: -20.78522491455078

Token 306: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -3.054500666621607e-06
    2. ')' → logprob: -13.62500286102295
    3. 'cells' → logprob: -13.75000286102295
    4. 'Cells' → logprob: -15.50000286102295
    5. '_positions' → logprob: -15.50000286102295
    6. ')_' → logprob: -17.250003814697266
    7. '   ' → logprob: -17.250003814697266
    8. '_' → logprob: -17.500003814697266
    9. '_cell' → logprob: -17.500003814697266
    10. 's' → logprob: -17.625003814697266

Token 307: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12699225544929504
    2. ')
' → logprob: -2.1269922256469727
    3. ')
' → logprob: -10.126992225646973
    4. ' )' → logprob: -12.001992225646973
    5. '),' → logprob: -12.376992225646973
    6. ' )
' → logprob: -12.501992225646973
    7. ')

' → logprob: -12.626992225646973
    8. ')+' → logprob: -13.001992225646973
    9. '   ' → logprob: -13.751992225646973
    10. 'if' → logprob: -14.126992225646973

Token 308: '   ' (ID: 271)
  Prédit: 'kc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'kc' → logprob: -0.0027661214116960764
    2. ',' → logprob: -6.252766132354736
    3. ' kc' → logprob: -7.377766132354736
    4. '
' → logprob: -9.752765655517578
    5. ',
' → logprob: -10.252765655517578
    6. ',k' → logprob: -10.377765655517578
    7. 'kr' → logprob: -10.502765655517578
    8. ' ,' → logprob: -10.627765655517578
    9. 'k' → logprob: -11.377765655517578
    10. '<|end|>' → logprob: -11.627765655517578

Token 309: ' kc' (ID: 186187)
  Prédit: 'kc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kc' (adapté à ' kc') → logprob: -0.0004307884373702109
    2. ' kc' → logprob: -7.750430583953857
    3. '
' → logprob: -16.875431060791016
    4. 'k' → logprob: -17.625431060791016
    5. '

' → logprob: -18.125431060791016
    6. 'KC' → logprob: -18.625431060791016
    7. 'jc' → logprob: -19.750431060791016
    8. ' ' → logprob: -20.125431060791016
    9. '   ' → logprob: -20.125431060791016
    10. 'rc' → logprob: -20.750431060791016

Token 310: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740777611732483
    2. ' =' → logprob: -0.9740777611732483
    3. '=min' → logprob: -14.224078178405762
    4. ' ' → logprob: -16.974077224731445
    5. '=
' → logprob: -18.224077224731445
    6. '＝' → logprob: -18.599077224731445
    7. ' =
' → logprob: -18.974077224731445
    8. '=max' → logprob: -19.349077224731445
    9. 'for' → logprob: -19.474077224731445
    10. ')' → logprob: -19.474077224731445

Token 311: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.575939416885376
    2. ' min' → logprob: -0.825939416885376
    3. '(min' → logprob: -18.325939178466797
    4. '	min' → logprob: -19.325939178466797
    5. '=min' → logprob: -20.825939178466797
    6. '_min' → logprob: -21.450939178466797
    7. '[min' → logprob: -21.700939178466797
    8. '.min' → logprob: -21.700939178466797
    9. '0' → logprob: -22.825939178466797
    10. ',min' → logprob: -22.950939178466797

Token 312: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -3.4121114822482923e-06
    2. '(r' → logprob: -13.250003814697266
    3. '(' → logprob: -13.875003814697266
    4. 'c' → logprob: -15.125003814697266
    5. '([' → logprob: -15.625003814697266
    6. '((' → logprob: -16.000003814697266
    7. ' (' → logprob: -16.375003814697266
    8. '[c' → logprob: -18.250003814697266
    9. '(
' → logprob: -18.750003814697266
    10. '   ' → logprob: -19.250003814697266

Token 313: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.252641499042511
    2. ' for' → logprob: -1.5026414394378662
    3. '(c' → logprob: -7.627641677856445
    4. 'c' → logprob: -8.627641677856445
    5. ' ' → logprob: -11.377641677856445
    6. ')' → logprob: -11.502641677856445
    7. '(r' → logprob: -11.752641677856445
    8. '   ' → logprob: -12.252641677856445
    9. '	for' → logprob: -12.377641677856445
    10. ' (' → logprob: -13.252641677856445

Token 314: ' r' (ID: 428)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.22445638477802277
    2. 'r' → logprob: -1.7244564294815063
    3. 'king' → logprob: -4.224456310272217
    4. ' c' → logprob: -5.224456310272217
    5. ' r' → logprob: -6.724456310272217
    6. ' king' → logprob: -7.474456310272217
    7. '(r' → logprob: -7.474456310272217
    8. '(c' → logprob: -8.474456787109375
    9. 'k' → logprob: -9.599456787109375
    10. '[c' → logprob: -10.349456787109375

Token 315: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.08082014322280884
    2. 'c' → logprob: -3.455820083618164
    3. 'king' → logprob: -4.330820083618164
    4. ' for' → logprob: -4.580820083618164
    5. 'for' → logprob: -4.830820083618164
    6. ' king' → logprob: -4.955820083618164
    7. ',k' → logprob: -5.955820083618164
    8. ' in' → logprob: -6.330820083618164
    9. ',' → logprob: -6.330820083618164
    10. ' c' → logprob: -7.705820083618164

Token 316: ' in' (ID: 306)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.2604975402355194
    2. ' in' → logprob: -2.385497570037842
    3. ' king' → logprob: -2.510497570037842
    4. 'in' → logprob: -2.885497570037842
    5. 'c' → logprob: -9.010497093200684
    6. ',' → logprob: -10.010497093200684
    7. ' ' → logprob: -11.135497093200684
    8. 'for' → logprob: -11.510497093200684
    9. ',c' → logprob: -11.635497093200684
    10. 'k' → logprob: -12.135497093200684

Token 317: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.033648233860731125
    2. ' king' → logprob: -3.4086482524871826
    3. '[' → logprob: -14.158648490905762
    4. ' ' → logprob: -14.283648490905762
    5. 'k' → logprob: -15.408648490905762
    6. 'queen' → logprob: -15.658648490905762
    7. '  ' → logprob: -15.908648490905762
    8. '   ' → logprob: -15.908648490905762
    9. '
' → logprob: -15.908648490905762
    10. '.king' → logprob: -16.658647537231445

Token 318: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -4.4849443838757e-06
    2. 'cells' → logprob: -12.625004768371582
    3. ')' → logprob: -14.375004768371582
    4. 'Cells' → logprob: -15.500004768371582
    5. '.Cells' → logprob: -16.500003814697266
    6. 'king' → logprob: -16.500003814697266
    7. '```' → logprob: -16.625003814697266
    8. 'for' → logprob: -17.500003814697266
    9. '.cells' → logprob: -17.625003814697266
    10. 'cell' → logprob: -17.750003814697266

Token 319: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. ')
' → logprob: -13.000004768371582
    3. '   ' → logprob: -13.125004768371582
    4. ' )' → logprob: -14.250004768371582
    5. '))' → logprob: -16.7500057220459
    6. ')}' → logprob: -17.3750057220459
    7. ')

' → logprob: -17.3750057220459
    8. '}' → logprob: -17.8750057220459
    9. ')+' → logprob: -19.0000057220459
    10. '),' → logprob: -19.0000057220459

Token 320: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.773381233215332
    2. '
' → logprob: -0.898381233215332
    3. '<|end|>' → logprob: -3.273381233215332
    4. '#' → logprob: -3.398381233215332
    5. '    
' → logprob: -3.898381233215332
    6. ')' → logprob: -4.148381233215332
    7. 'state' → logprob: -4.273381233215332
    8. 'def' → logprob: -5.773381233215332
    9. '<|end|>' → logprob: -6.523381233215332
    10. ':' → logprob: -7.273381233215332

Token 321: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.0984340906143188
    2. 'visited' → logprob: -1.3484340906143188
    3. '   ' → logprob: -1.7234340906143188
    4. 'state' → logprob: -1.9734340906143188
    5. 'return' → logprob: -3.0984339714050293
    6. 'start' → logprob: -4.598433971405029
    7. 'def' → logprob: -4.723433971405029
    8. ' visited' → logprob: -5.473433971405029
    9. ' #' → logprob: -5.723433971405029
    10. '
' → logprob: -5.848433971405029

Token 322: ' Important' (ID: 63568)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.2208845615386963
    2. '#' → logprob: -1.5958845615386963
    3. 'from' → logprob: -1.5958845615386963
    4. 'def' → logprob: -2.2208845615386963
    5. 'initial' → logprob: -3.2208845615386963
    6. '   ' → logprob: -3.2208845615386963
    7. 'start' → logprob: -3.4708845615386963
    8. 'state' → logprob: -3.5958845615386963
    9. 'return' → logprob: -3.7208845615386963
    10. 'queue' → logprob: -3.9708845615386963

Token 323: ' validations' (ID: 188465)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.7552520036697388
    2. 'visited' → logprob: -1.6302520036697388
    3. '#' → logprob: -2.255251884460449
    4. ' to' → logprob: -2.380251884460449
    5. ' #' → logprob: -3.380251884460449
    6. 'state' → logprob: -3.630251884460449
    7. ':' → logprob: -3.880251884460449
    8. ' for' → logprob: -4.255251884460449
    9. ' state' → logprob: -4.755251884460449
    10. ' next' → logprob: -5.130251884460449

Token 324: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8423510193824768
    2. '#' → logprob: -1.467350959777832
    3. 'assert' → logprob: -2.092350959777832
    4. ' if' → logprob: -2.217350959777832
    5. ':' → logprob: -2.967350959777832
    6. 'if' → logprob: -4.217350959777832
    7. '<|end|>' → logprob: -4.217350959777832
    8. '
' → logprob: -4.592350959777832
    9. ' assert' → logprob: -5.092350959777832
    10. ' for' → logprob: -5.842350959777832

Token 325: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0025901794433594
    2. '#' → logprob: -1.1275901794433594
    3. '   ' → logprob: -2.0025901794433594
    4. ' #' → logprob: -2.1275901794433594
    5. 'if' → logprob: -4.002590179443359
    6. ' assert' → logprob: -4.127590179443359
    7. 'assert' → logprob: -4.252590179443359
    8. ' for' → logprob: -5.752590179443359
    9. '    ' → logprob: -7.127590179443359
    10. '
' → logprob: -7.377590179443359

Token 326: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0124551057815552
    2. '#' (adapté à ' #') → logprob: -1.3874551057815552
    3. 'assert' → logprob: -2.0124549865722656
    4. 'if' → logprob: -2.1374549865722656
    5. ' assert' → logprob: -2.3874549865722656
    6. ' #' → logprob: -3.5124549865722656
    7. ' for' → logprob: -4.637454986572266
    8. 'for' → logprob: -6.012454986572266
    9. '   ' → logprob: -7.262454986572266
    10. '
' → logprob: -8.262454986572266

Token 327: ' king' (ID: 13793)
  Prédit: 'assert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assert' → logprob: -1.1972041130065918
    2. '#' → logprob: -1.3222041130065918
    3. 'if' → logprob: -1.3222041130065918
    4. 'for' → logprob: -2.572204113006592
    5. ' if' → logprob: -3.572204113006592
    6. ' assert' → logprob: -3.572204113006592
    7. ' for' → logprob: -3.697204113006592
    8. ' #' → logprob: -5.322204113006592
    9. 'def' → logprob: -6.822204113006592
    10. '   ' → logprob: -7.697204113006592

Token 328: ' cells' (ID: 11242)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.6186752319335938
    2. '_positions' → logprob: -1.8686752319335938
    3. 'position' → logprob: -2.3686752319335938
    4. ' position' → logprob: -2.7436752319335938
    5. 'positions' → logprob: -2.8686752319335938
    6. 'cells' → logprob: -3.8686752319335938
    7. ' positions' → logprob: -4.493675231933594
    8. ' must' → logprob: -4.743675231933594
    9. ' cells' → logprob: -4.868675231933594
    10. ' ' → logprob: -5.243675231933594

Token 329: ' should' (ID: 1757)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.759436845779419
    2. ' =' → logprob: -1.384436845779419
    3. 'set' → logprob: -3.259436845779419
    4. 'for' → logprob: -3.259436845779419
    5. '_are' → logprob: -3.384436845779419
    6. '_in' → logprob: -4.00943660736084
    7. ' must' → logprob: -4.13443660736084
    8. '_positions' → logprob: -4.38443660736084
    9. 'all' → logprob: -4.38443660736084
    10. 'are' → logprob: -4.75943660736084

Token 330: ' form' (ID: 1625)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.4548662304878235
    2. ' form' → logprob: -1.7048661708831787
    3. 'be' → logprob: -2.4548661708831787
    4. ' all' → logprob: -2.8298661708831787
    5. 'all' → logprob: -3.8298661708831787
    6. 'form' → logprob: -4.204866409301758
    7. ' have' → logprob: -8.204866409301758
    8. 'have' → logprob: -8.204866409301758
    9. 'occup' → logprob: -8.204866409301758
    10. '   ' → logprob: -8.579866409301758

Token 331: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6346291899681091
    2. 'a' → logprob: -1.634629249572754
    3. ' {(' → logprob: -1.634629249572754
    4. '{' → logprob: -2.759629249572754
    5. '[(' → logprob: -4.509629249572754
    6. '{
' → logprob: -6.509629249572754
    7. ' [(' → logprob: -6.759629249572754
    8. '[
' → logprob: -7.009629249572754
    9. ' {' → logprob: -7.759629249572754
    10. ' ' → logprob: -7.884629249572754

Token 332: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.063797727227211
    2. ' ' → logprob: -2.81379771232605
    3. 'square' → logprob: -6.563797950744629
    4. ' square' → logprob: -8.813797950744629
    5. 'rectangle' → logprob: -8.938797950744629
    6. 'rect' → logprob: -10.313797950744629
    7. '{' → logprob: -10.563797950744629
    8. ' rectangle' → logprob: -10.688797950744629
    9. 'block' → logprob: -11.313797950744629
    10. 'complete' → logprob: -11.938797950744629

Token 333: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.37488043308258057
    2. '{' → logprob: -1.3748804330825806
    3. ' {(' → logprob: -3.874880313873291
    4. 'set' → logprob: -4.499880313873291
    5. 'square' → logprob: -4.499880313873291
    6. '[(' → logprob: -4.999880313873291
    7. 'rectangle' → logprob: -5.624880313873291
    8. 'rect' → logprob: -6.124880313873291
    9. '{
' → logprob: -6.249880313873291
    10. '(' → logprob: -7.249880313873291

Token 334: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004334814380854368
    2. ' x' → logprob: -5.879334926605225
    3. ' ' → logprob: -6.879334926605225
    4. ',' → logprob: -7.629334926605225
    5. ' ,' → logprob: -12.254334449768066
    6. '2' → logprob: -12.754334449768066
    7. ' by' → logprob: -12.879334449768066
    8. '×' → logprob: -13.629334449768066
    9. 'by' → logprob: -14.254334449768066
    10. '   ' → logprob: -14.879334449768066

Token 335: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00026860725483857095
    2. ' ' → logprob: -8.375268936157227
    3. '```' → logprob: -11.625268936157227
    4. '   ' → logprob: -11.750268936157227
    5. '
' → logprob: -12.000268936157227
    6. ',' → logprob: -12.875268936157227
    7. '1' → logprob: -14.250268936157227
    8. '`' → logprob: -14.250268936157227
    9. '  ' → logprob: -14.437768936157227
    10. '²' → logprob: -14.500268936157227

Token 336: ' block' (ID: 4355)
  Prédit: ' block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.14492571353912354
    2. 'block' → logprob: -2.019925594329834
    3. ' square' → logprob: -6.519925594329834
    4. 'square' → logprob: -7.394925594329834
    5. '
' → logprob: -9.769926071166992
    6. '#' → logprob: -9.769926071166992
    7. 'pattern' → logprob: -12.019926071166992
    8. ' pattern' → logprob: -12.144926071166992
    9. '_block' → logprob: -12.269926071166992
    10. ' ' → logprob: -12.519926071166992

Token 337: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25544488430023193
    2. 'if' → logprob: -2.5054450035095215
    3. ' if' → logprob: -2.6304450035095215
    4. ' for' → logprob: -3.1304450035095215
    5. 'for' → logprob: -4.6304450035095215
    6. '
' → logprob: -4.7554450035095215
    7. 'assert' → logprob: -5.8804450035095215
    8. ' king' → logprob: -6.5054450035095215
    9. '#' → logprob: -6.6304450035095215
    10. '    
' → logprob: -7.1304450035095215

Token 338: ' i' (ID: 575)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9437828660011292
    2. ' king' → logprob: -1.1937828063964844
    3. ' if' → logprob: -1.3187828063964844
    4. 'king' → logprob: -3.9437828063964844
    5. 'assert' → logprob: -5.318782806396484
    6. 'valid' → logprob: -5.443782806396484
    7. ' valid' → logprob: -5.568782806396484
    8. '   ' → logprob: -6.068782806396484
    9. ' for' → logprob: -6.443782806396484
    10. 'for' → logprob: -7.443782806396484

Token 339: '.e' (ID: 2560)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.0564331205387134e-05
    2. 'for' → logprob: -11.87501049041748
    3. 'if' → logprob: -13.25001049041748
    4. 'm' → logprob: -13.87501049041748
    5. 'n' → logprob: -14.62501049041748
    6. '#' → logprob: -15.37501049041748
    7. '
' → logprob: -17.125011444091797
    8. '=' → logprob: -17.125011444091797
    9. ' f' → logprob: -17.250011444091797
    10. '   ' → logprob: -17.625011444091797

Token 340: '.,
' (ID: 86468)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8686646223068237
    2. ' if' → logprob: -1.8686646223068237
    3. 'for' → logprob: -2.2436647415161133
    4. '   ' → logprob: -2.4936647415161133
    5. 'if' → logprob: -2.8686647415161133
    6. ',' → logprob: -3.3686647415161133
    7. ' (' → logprob: -3.8686647415161133
    8. 'assert' → logprob: -3.9936647415161133
    9. ' all' → logprob: -4.243664741516113
    10. ' not' → logprob: -4.243664741516113

Token 341: '   ' (ID: 271)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.5662403106689453
    2. ' king' → logprob: -1.1912403106689453
    3. 'king' → logprob: -3.5662403106689453
    4. ' (' → logprob: -3.8162403106689453
    5. 'all' → logprob: -3.9412403106689453
    6. ' kr' → logprob: -4.066240310668945
    7. '   ' → logprob: -4.316240310668945
    8. '(' → logprob: -4.566240310668945
    9. 'kr' → logprob: -5.566240310668945
    10. ' for' → logprob: -5.566240310668945

Token 342: ' #' (ID: 1069)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.0491362810134888
    2. 'king' → logprob: -1.0491362810134888
    3. '(' → logprob: -1.9241362810134888
    4. '{' → logprob: -2.924136161804199
    5. 'assert' → logprob: -3.799136161804199
    6. 'expected' → logprob: -3.799136161804199
    7. 'sorted' → logprob: -4.424136161804199
    8. ' king' → logprob: -4.674136161804199
    9. 'if' → logprob: -5.049136161804199
    10. 'len' → logprob: -5.424136161804199

Token 343: ' check' (ID: 2371)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.5125975608825684
    2. 'all' → logprob: -1.7625975608825684
    3. ' king' → logprob: -2.2625975608825684
    4. 'assert' → logprob: -3.2625975608825684
    5. 'king' → logprob: -3.6375975608825684
    6. 'expected' → logprob: -4.137597560882568
    7. 'if' → logprob: -4.512597560882568
    8. ' expected' → logprob: -5.137597560882568
    9. 'for' → logprob: -5.137597560882568
    10. 'sorted' → logprob: -5.262597560882568

Token 344: ' that' (ID: 484)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2156219482421875
    2. ' all' → logprob: -1.8406219482421875
    3. '((' → logprob: -2.0906219482421875
    4. 'all' → logprob: -2.4656219482421875
    5. 'len' → logprob: -2.7156219482421875
    6. ' (' → logprob: -2.8406219482421875
    7. 'abs' → logprob: -3.2156219482421875
    8. 'if' → logprob: -3.3406219482421875
    9. '(len' → logprob: -3.3406219482421875
    10. '(abs' → logprob: -3.9656219482421875

Token 345: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6584591865539551
    2. 'all' → logprob: -1.658459186553955
    3. '(k' → logprob: -2.408459186553955
    4. ' all' → logprob: -3.033459186553955
    5. '{' → logprob: -3.033459186553955
    6. 'set' → logprob: -3.783459186553955
    7. '(r' → logprob: -3.783459186553955
    8. ' (' → logprob: -4.158459186553955
    9. '(len' → logprob: -4.783459186553955
    10. '((' → logprob: -4.783459186553955

Token 346: 'kr' (ID: 7316)
  Prédit: 'kr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kr' → logprob: -0.2856574058532715
    2. '(' → logprob: -1.4106574058532715
    3. ' kr' → logprob: -6.0356574058532715
    4. ' (' → logprob: -6.9106574058532715
    5. ')' → logprob: -8.28565788269043
    6. '   ' → logprob: -8.53565788269043
    7. '(k' → logprob: -8.66065788269043
    8. '
' → logprob: -8.78565788269043
    9. '(r' → logprob: -9.91065788269043
    10. ' ' → logprob: -9.91065788269043

Token 347: ',k' (ID: 35155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08288954943418503
    2. ',k' → logprob: -3.7078895568847656
    3. ' <=' → logprob: -3.8328895568847656
    4. '+' → logprob: -4.457889556884766
    5. ' ,' → logprob: -4.707889556884766
    6. ' +' → logprob: -5.207889556884766
    7. '   ' → logprob: -6.082889556884766
    8. '<=' → logprob: -6.082889556884766
    9. ',c' → logprob: -7.457889556884766
    10. ',r' → logprob: -7.457889556884766

Token 348: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.787507714354433e-05
    2. ',c' → logprob: -10.25004768371582
    3. ',' → logprob: -12.25004768371582
    4. 'kc' → logprob: -13.00004768371582
    5. '
' → logprob: -14.00004768371582
    6. '+' → logprob: -14.12504768371582
    7. ')' → logprob: -14.12504768371582
    8. '),' → logprob: -14.50004768371582
    9. 'k' → logprob: -14.50004768371582
    10. ' c' → logprob: -14.75004768371582

Token 349: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.7188282012939453
    2. ')' → logprob: -0.8438282012939453
    3. '),(' → logprob: -2.7188282012939453
    4. '+' → logprob: -4.968828201293945
    5. '   ' → logprob: -5.343828201293945
    6. ' ),' → logprob: -5.968828201293945
    7. ' )' → logprob: -7.218828201293945
    8. ' ' → logprob: -7.718828201293945
    9. '),
' → logprob: -7.968828201293945
    10. '    ' → logprob: -8.343828201293945

Token 350: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12719382345676422
    2. ' (' → logprob: -2.1271939277648926
    3. '   ' → logprob: -8.502193450927734
    4. ' kr' → logprob: -10.877193450927734
    5. '(k' → logprob: -10.877193450927734
    6. '  ' → logprob: -11.502193450927734
    7. '    ' → logprob: -11.877193450927734
    8. 'kr' → logprob: -12.752193450927734
    9. ' ' → logprob: -13.002193450927734
    10. '
' → logprob: -13.752193450927734

Token 351: 'kr' (ID: 7316)
  Prédit: 'kr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kr' → logprob: -0.0021874953527003527
    2. ' kr' → logprob: -6.127187728881836
    3. '
' → logprob: -14.127187728881836
    4. '   ' → logprob: -14.377187728881836
    5. '  ' → logprob: -14.877187728881836
    6. ' ' → logprob: -15.127187728881836
    7. '(' → logprob: -15.377187728881836
    8. ')' → logprob: -16.752187728881836
    9. '

' → logprob: -17.002187728881836
    10. ',' → logprob: -17.002187728881836

Token 352: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.008822206407785416
    2. ',' → logprob: -4.758822441101074
    3. ' ' → logprob: -9.133822441101074
    4. ' ,' → logprob: -10.383822441101074
    5. ',(' → logprob: -10.383822441101074
    6. '   ' → logprob: -10.883822441101074
    7. ',c' → logprob: -11.383822441101074
    8. '+' → logprob: -12.258822441101074
    9. '  ' → logprob: -13.258822441101074
    10. ',j' → logprob: -14.883822441101074

Token 353: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0008208265644498169
    2. '+' → logprob: -7.250820636749268
    3. 'kc' → logprob: -9.750821113586426
    4. '1' → logprob: -11.375821113586426
    5. '   ' → logprob: -11.625821113586426
    6. 'с' → logprob: -12.250821113586426
    7. 'cc' → logprob: -12.375821113586426
    8. ' ' → logprob: -12.625821113586426
    9. '
' → logprob: -12.875821113586426
    10. ' +' → logprob: -13.000821113586426

Token 354: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00043567578541114926
    2. ' +' → logprob: -7.750435829162598
    3. '),' → logprob: -13.000435829162598
    4. ')+' → logprob: -14.000435829162598
    5. '),(' → logprob: -14.375435829162598
    6. '   ' → logprob: -14.625435829162598
    7. ')' → logprob: -15.250435829162598
    8. '+
' → logprob: -15.375435829162598
    9. '1' → logprob: -16.37543487548828
    10. ',' → logprob: -16.50043487548828

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.500004768371582
    3. '```' → logprob: -14.875004768371582
    4. '   ' → logprob: -15.875004768371582
    5. '0' → logprob: -16.375003814697266
    6. '
' → logprob: -16.625003814697266
    7. ')' → logprob: -16.750003814697266
    8. '``' → logprob: -18.312503814697266
    9. '2' → logprob: -18.500003814697266
    10. '`' → logprob: -18.625003814697266

Token 356: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.002514539286494255
    2. '),(' → logprob: -6.002514362335205
    3. ')' → logprob: -10.877514839172363
    4. ' ),' → logprob: -11.252514839172363
    5. '),
' → logprob: -12.127514839172363
    6. '   ' → logprob: -14.502514839172363
    7. ',' → logprob: -15.127514839172363
    8. ',),' → logprob: -15.502514839172363
    9. ' ' → logprob: -15.627514839172363
    10. ')
' → logprob: -16.752513885498047

Token 357: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931551098823547
    2. ' (' → logprob: -0.6931551098823547
    3. ' kr' → logprob: -12.443155288696289
    4. '(k' → logprob: -13.568155288696289
    5. 'kr' → logprob: -13.818155288696289
    6. '   ' → logprob: -14.443155288696289
    7. '(cr' → logprob: -14.693155288696289
    8. ',' → logprob: -16.06815528869629
    9. ' ' → logprob: -16.06815528869629
    10. '(r' → logprob: -16.06815528869629

Token 358: 'kr' (ID: 7316)
  Prédit: 'kr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kr' → logprob: -0.0015029559144750237
    2. ' kr' → logprob: -6.501502990722656
    3. '
' → logprob: -16.126502990722656
    4. 'cr' → logprob: -16.126502990722656
    5. 'kc' → logprob: -16.501502990722656
    6. '  ' → logprob: -16.626502990722656
    7. ' ' → logprob: -16.626502990722656
    8. '   ' → logprob: -16.876502990722656
    9. 'Kr' → logprob: -17.376502990722656
    10. '(' → logprob: -18.251502990722656

Token 359: '+' (ID: 10)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.005175524391233921
    2. ',' → logprob: -5.380175590515137
    3. ',(' → logprob: -7.630175590515137
    4. ',r' → logprob: -10.255175590515137
    5. ' ,' → logprob: -12.005175590515137
    6. '+' → logprob: -12.005175590515137
    7. ',
' → logprob: -12.380175590515137
    8. ',n' → logprob: -12.755175590515137
    9. '),(' → logprob: -13.005175590515137
    10. ' ' → logprob: -13.380175590515137

Token 360: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009365935111418366
    2. ' ' → logprob: -7.250936508178711
    3. '1' → logprob: -8.500936508178711
    4. '   ' → logprob: -11.000936508178711
    5. '
' → logprob: -12.875936508178711
    6. '```' → logprob: -13.375936508178711
    7. '  ' → logprob: -14.000936508178711
    8. ')' → logprob: -15.000936508178711
    9. ',' → logprob: -15.500936508178711
    10. ' 
' → logprob: -15.875936508178711

Token 361: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.011727162636816502
    2. ',' → logprob: -4.511727333068848
    3. ',c' → logprob: -7.636727333068848
    4. ',(' → logprob: -8.886727333068848
    5. ' ,' → logprob: -10.011727333068848
    6. ',r' → logprob: -12.136727333068848
    7. ',n' → logprob: -12.761727333068848
    8. ',
' → logprob: -13.136727333068848
    9. '),(' → logprob: -13.636727333068848
    10. ',j' → logprob: -14.761727333068848

Token 362: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0008226146455854177
    2. ',c' → logprob: -7.1258225440979
    3. ',' → logprob: -11.000823020935059
    4. ' c' → logprob: -14.500823020935059
    5. ')c' → logprob: -14.500823020935059
    6. ')' → logprob: -15.875823020935059
    7. ',
' → logprob: -16.375822067260742
    8. 'с' → logprob: -16.750822067260742
    9. ' ,' → logprob: -17.375822067260742
    10. '(c' → logprob: -17.625822067260742

Token 363: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.07657397538423538
    2. '),(' → logprob: -2.8265740871429443
    3. ')' → logprob: -4.326573848724365
    4. '),
' → logprob: -7.576573848724365
    5. '+' → logprob: -8.326574325561523
    6. '   ' → logprob: -8.576574325561523
    7. ' ' → logprob: -8.951574325561523
    8. ' ),' → logprob: -8.951574325561523
    9. ',' → logprob: -9.951574325561523
    10. '```' → logprob: -11.201574325561523

Token 364: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.007632650900632143
    2. '(' → logprob: -4.882632732391357
    3. ' kr' → logprob: -11.7576322555542
    4. '   ' → logprob: -12.3826322555542
    5. '(k' → logprob: -12.3826322555542
    6. ' ' → logprob: -12.7576322555542
    7. '    ' → logprob: -12.8826322555542
    8. ' ' → logprob: -13.5076322555542
    9. '(cr' → logprob: -13.7576322555542
    10. '(kn' → logprob: -14.7576322555542

Token 365: 'kr' (ID: 7316)
  Prédit: 'kr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kr' → logprob: -0.20149929821491241
    2. 'kc' → logprob: -1.701499342918396
    3. ' kr' → logprob: -9.701498985290527
    4. 'k' → logprob: -11.576498985290527
    5. ' kc' → logprob: -11.576498985290527
    6. '   ' → logprob: -13.451498985290527
    7. '
' → logprob: -13.701498985290527
    8. 'ks' → logprob: -14.326498985290527
    9. ' ' → logprob: -14.576498985290527
    10. '(' → logprob: -14.951498985290527

Token 366: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.033717166632413864
    2. ',k' → logprob: -3.408717155456543
    3. '+k' → logprob: -10.283717155456543
    4. ',' → logprob: -10.908717155456543
    5. ' +' → logprob: -11.283717155456543
    6. '+
' → logprob: -13.533717155456543
    7. '<|end|>' → logprob: -13.908717155456543
    8. ',key' → logprob: -14.033717155456543
    9. ',user' → logprob: -14.533717155456543
    10. ',c' → logprob: -14.658717155456543

Token 367: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.250001907348633
    3. '+' → logprob: -14.375001907348633
    4. '   ' → logprob: -15.625001907348633
    5. '0' → logprob: -16.375001907348633
    6. ')' → logprob: -16.875001907348633
    7. '
' → logprob: -17.000001907348633
    8. 'c' → logprob: -18.000001907348633
    9. '```' → logprob: -18.375001907348633
    10. '

' → logprob: -18.875001907348633

Token 368: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.018194660544395447
    2. ',c' → logprob: -4.268194675445557
    3. ',' → logprob: -5.518194675445557
    4. ' ,' → logprob: -12.143194198608398
    5. ',
' → logprob: -13.268194198608398
    6. 'c' → logprob: -13.643194198608398
    7. 'k' → logprob: -14.643194198608398
    8. 'kc' → logprob: -15.768194198608398
    9. ' ' → logprob: -15.893194198608398
    10. '<|end|>' → logprob: -16.0181941986084

Token 369: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00019138160860165954
    2. ')' → logprob: -8.750191688537598
    3. '+' → logprob: -10.500191688537598
    4. ')c' → logprob: -13.250191688537598
    5. '<|end|>' → logprob: -14.125191688537598
    6. 'с' → logprob: -14.125191688537598
    7. '```' → logprob: -15.125191688537598
    8. ' c' → logprob: -15.375191688537598
    9. ')
' → logprob: -15.750191688537598
    10. 'cell' → logprob: -16.12519073486328

Token 370: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033971716184169054
    2. '+' → logprob: -5.878396987915039
    3. '),' → logprob: -8.003396987915039
    4. 'in' → logprob: -9.503396987915039
    5. ')
' → logprob: -9.878396987915039
    6. ' )' → logprob: -10.253396987915039
    7. '   ' → logprob: -10.628396987915039
    8. ' in' → logprob: -10.753396987915039
    9. '+)' → logprob: -11.753396987915039
    10. '))' → logprob: -12.003396987915039

Token 371: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.87500286102295
    3. '0' → logprob: -14.00000286102295
    4. ')' → logprob: -14.12500286102295
    5. '+' → logprob: -14.25000286102295
    6. '```' → logprob: -17.625003814697266
    7. '   ' → logprob: -18.125003814697266
    8. '-' → logprob: -19.250003814697266
    9. '
' → logprob: -19.812503814697266
    10. '[' → logprob: -19.812503814697266

Token 372: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011486753646750003
    2. ' )' → logprob: -9.875114440917969
    3. ')
' → logprob: -10.875114440917969
    4. ' in' → logprob: -11.250114440917969
    5. '   ' → logprob: -11.625114440917969
    6. 'in' → logprob: -11.875114440917969
    7. '}' → logprob: -12.500114440917969
    8. '),' → logprob: -12.625114440917969
    9. '))' → logprob: -13.250114440917969
    10. '})' → logprob: -13.250114440917969

Token 373: ' are' (ID: 553)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04217085614800453
    2. 'in' → logprob: -3.667170763015747
    3. ')' → logprob: -4.167171001434326
    4. '   ' → logprob: -9.667170524597168
    5. ' all' → logprob: -10.417170524597168
    6. ')
' → logprob: -10.792170524597168
    7. '}' → logprob: -11.042170524597168
    8. ' )' → logprob: -11.167170524597168
    9. ' ' → logprob: -11.292170524597168
    10. ').' → logprob: -11.417170524597168

Token 374: ' all' (ID: 722)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.631292462348938
    2. ' in' → logprob: -1.131292462348938
    3. 'king' → logprob: -2.5062923431396484
    4. ' king' → logprob: -2.8812923431396484
    5. '(' → logprob: -5.256292343139648
    6. ' (' → logprob: -6.881292343139648
    7. 'all' → logprob: -7.256292343139648
    8. ' all' → logprob: -8.381292343139648
    9. '```' → logprob: -9.381292343139648
    10. '   ' → logprob: -9.756292343139648

Token 375: ' occupied' (ID: 46186)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.22963149845600128
    2. ' in' → logprob: -1.8546315431594849
    3. 'king' → logprob: -3.4796314239501953
    4. ' king' → logprob: -4.854631423950195
    5. '(' → logprob: -5.229631423950195
    6. '('' → logprob: -6.354631423950195
    7. 'X' → logprob: -6.979631423950195
    8. ' (' → logprob: -7.229631423950195
    9. ''' → logprob: -7.604631423950195
    10. ' '' → logprob: -8.354631423950195

Token 376: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.15747766196727753
    2. 'by' → logprob: -2.657477617263794
    3. ' and' → logprob: -3.532477617263794
    4. 'and' → logprob: -4.032477855682373
    5. '   ' → logprob: -5.282477855682373
    6. ',' → logprob: -5.282477855682373
    7. 'if' → logprob: -5.407477855682373
    8. 'tokens' → logprob: -5.532477855682373
    9. ')' → logprob: -5.782477855682373
    10. ' tokens' → logprob: -6.782477855682373

Token 377: ' king' (ID: 13793)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10370166599750519
    2. 'X' → logprob: -3.353701591491699
    3. 'king' → logprob: -3.353701591491699
    4. '(' → logprob: -4.353701591491699
    5. '('' → logprob: -4.853701591491699
    6. ' '' → logprob: -5.728701591491699
    7. ' king' → logprob: -5.978701591491699
    8. ' (' → logprob: -6.728701591491699
    9. '(X' → logprob: -7.853701591491699
    10. ' X' → logprob: -8.7287015914917

Token 378: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11775752902030945
    2. ' for' → logprob: -3.117757558822632
    3. ' if' → logprob: -4.492757320404053
    4. ' cells' → logprob: -4.742757320404053
    5. '
' → logprob: -5.117757320404053
    6. 'if' → logprob: -5.367757320404053
    7. 'for' → logprob: -5.367757320404053
    8. '_cells' → logprob: -5.492757320404053
    9. ' block' → logprob: -5.867757320404053
    10. 'cells' → logprob: -5.867757320404053

Token 379: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010087412782013416
    2. ' if' → logprob: -5.135087490081787
    3. ' for' → logprob: -6.260087490081787
    4. 'if' → logprob: -6.510087490081787
    5. '
' → logprob: -8.510087013244629
    6. 'for' → logprob: -8.635087013244629
    7. ' and' → logprob: -9.510087013244629
    8. '    
' → logprob: -9.635087013244629
    9. 'assert' → logprob: -10.135087013244629
    10. '```' → logprob: -10.510087013244629

Token 380: ' expected' (ID: 5930)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.582045316696167
    2. ' if' → logprob: -1.707045316696167
    3. '   ' → logprob: -1.957045316696167
    4. ' for' → logprob: -2.457045316696167
    5. 'for' → logprob: -4.082045555114746
    6. 'assert' → logprob: -4.832045555114746
    7. ' king' → logprob: -5.332045555114746
    8. 'valid' → logprob: -6.707045555114746
    9. ' assert' → logprob: -7.207045555114746
    10. ' valid' → logprob: -8.082045555114746

Token 381: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8537232279777527
    2. '_positions' → logprob: -0.8537232279777527
    3. '_cells' → logprob: -2.3537232875823975
    4. ' =' → logprob: -2.9787232875823975
    5. '_pos' → logprob: -7.353723049163818
    6. '=' → logprob: -7.478723049163818
    7. '_set' → logprob: -7.853723049163818
    8. 'king' → logprob: -8.228723526000977
    9. '_coords' → logprob: -8.728723526000977
    10. 'positions' → logprob: -8.978723526000977

Token 382: 'king' (ID: 6962)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.03181583061814308
    2. 'king' → logprob: -4.156816005706787
    3. 'positions' → logprob: -4.281816005706787
    4. '_cells' → logprob: -6.531816005706787
    5. ' king' → logprob: -9.281815528869629
    6. '_positions' → logprob: -9.906815528869629
    7. 'set' → logprob: -10.031815528869629
    8. 'coordinates' → logprob: -10.156815528869629
    9. 'coords' → logprob: -10.406815528869629
    10. ' =' → logprob: -10.531815528869629

Token 383: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.012445727363228798
    2. '_positions' → logprob: -4.76244592666626
    3. '=' → logprob: -6.26244592666626
    4. 'cells' → logprob: -7.13744592666626
    5. ' =' → logprob: -7.38744592666626
    6. '==' → logprob: -8.762445449829102
    7. '_' → logprob: -9.887445449829102
    8. 'positions' → logprob: -10.137445449829102
    9. '_coords' → logprob: -10.137445449829102
    10. '   ' → logprob: -10.262445449829102

Token 384: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0380479171872139
    2. ' =' → logprob: -3.288048028945923
    3. '=set' → logprob: -12.163047790527344
    4. '=
' → logprob: -14.913047790527344
    5. '==' → logprob: -15.163047790527344
    6. '={(' → logprob: -15.288047790527344
    7. 'set' → logprob: -16.038047790527344
    8. '   ' → logprob: -16.288047790527344
    9. ' ' → logprob: -16.413047790527344
    10. '=

' → logprob: -16.913047790527344

Token 385: ' {(' (ID: 75216)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.004399855621159077
    2. '[(' → logprob: -5.75439977645874
    3. ' {(' → logprob: -7.25439977645874
    4. 'set' → logprob: -8.004400253295898
    5. '{
' → logprob: -8.629400253295898
    6. '[{' → logprob: -14.254400253295898
    7. '   ' → logprob: -14.754400253295898
    8. '[' → logprob: -16.1294002532959
    9. ' set' → logprob: -16.2544002532959
    10. '{\' → logprob: -16.6294002532959

Token 386: 'kr' (ID: 7316)
  Prédit: 'kr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kr' → logprob: -2.2007883671903983e-05
    2. '(' → logprob: -10.750021934509277
    3. ' kr' → logprob: -14.750021934509277
    4. '   ' → logprob: -17.875022888183594
    5. '
' → logprob: -18.125022888183594
    6. ' (' → logprob: -18.625022888183594
    7. 'Kr' → logprob: -20.125022888183594
    8. ' ' → logprob: -20.375022888183594
    9. '.kr' → logprob: -20.625022888183594
    10. 'krat' → logprob: -20.625022888183594

Token 387: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.2527284324169159
    2. ',' → logprob: -1.5027284622192383
    3. ',r' → logprob: -7.627728462219238
    4. ' ,' → logprob: -8.627728462219238
    5. ',c' → logprob: -9.627728462219238
    6. ',n' → logprob: -10.377728462219238
    7. '   ' → logprob: -11.252728462219238
    8. ',(' → logprob: -12.002728462219238
    9. ' ' → logprob: -12.127728462219238
    10. ',int' → logprob: -12.627728462219238

Token 388: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.013184110634028912
    2. ',c' → logprob: -4.513184070587158
    3. ',' → logprob: -6.263184070587158
    4. ',
' → logprob: -9.513184547424316
    5. 'kc' → logprob: -10.263184547424316
    6. '
' → logprob: -10.513184547424316
    7. ')c' → logprob: -11.138184547424316
    8. '),(' → logprob: -11.138184547424316
    9. '),' → logprob: -11.263184547424316
    10. ' ,' → logprob: -11.263184547424316

Token 389: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.2939477264881134
    2. '),(' → logprob: -1.418947696685791
    3. '),
' → logprob: -4.418947696685791
    4. ' ),' → logprob: -7.793947696685791
    5. ',' → logprob: -8.66894817352295
    6. ')' → logprob: -10.29394817352295
    7. ' ),
' → logprob: -11.54394817352295
    8. '(' → logprob: -11.79394817352295
    9. '   ' → logprob: -11.91894817352295
    10. '),

' → logprob: -12.41894817352295

Token 390: 'kr' (ID: 7316)
  Prédit: 'kr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kr' → logprob: -1.318681188422488e-05
    2. ' kr' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.87501335144043
    4. ' ' → logprob: -17.25001335144043
    5. 'Kr' → logprob: -18.00001335144043
    6. '  ' → logprob: -18.37501335144043
    7. '
' → logprob: -18.37501335144043
    8. '(' → logprob: -18.50001335144043
    9. 'cr' → logprob: -18.50001335144043
    10. 'krar' → logprob: -19.87501335144043

Token 391: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.00024299313372466713
    2. ',' → logprob: -8.500243186950684
    3. 'kc' → logprob: -11.125243186950684
    4. ',c' → logprob: -11.500243186950684
    5. '+' → logprob: -12.375243186950684
    6. ',
' → logprob: -12.750243186950684
    7. ' ,' → logprob: -12.875243186950684
    8. ' kc' → logprob: -13.000243186950684
    9. 'k' → logprob: -14.000243186950684
    10. '
' → logprob: -15.250243186950684

Token 392: 'c' (ID: 66)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003657791530713439
    2. 'c' → logprob: -5.628657817840576
    3. '1' → logprob: -10.503657341003418
    4. 'kc' → logprob: -11.128657341003418
    5. ' +' → logprob: -12.128657341003418
    6. '+c' → logprob: -12.128657341003418
    7. '(' → logprob: -13.753657341003418
    8. '+k' → logprob: -14.128657341003418
    9. ',c' → logprob: -14.628657341003418
    10. '   ' → logprob: -14.628657341003418

Token 393: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.6550729419104755e-05
    2. ' +' → logprob: -10.750036239624023
    3. '1' → logprob: -11.125036239624023
    4. '+
' → logprob: -16.250036239624023
    5. '(' → logprob: -17.625036239624023
    6. '+(' → logprob: -17.750036239624023
    7. '＋' → logprob: -17.750036239624023
    8. '```' → logprob: -17.875036239624023
    9. '()+' → logprob: -18.375036239624023
    10. ')+' → logprob: -18.437536239624023

Token 394: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '
' → logprob: -17.000003814697266
    4. '+' → logprob: -17.625003814697266
    5. '0' → logprob: -17.750003814697266
    6. '   ' → logprob: -17.750003814697266
    7. '```' → logprob: -18.937503814697266
    8. '  ' → logprob: -19.750003814697266
    9. '

' → logprob: -20.062503814697266
    10. '１' → logprob: -20.187503814697266

Token 395: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0007492328295484185
    2. '),' → logprob: -7.250749111175537
    3. '),
' → logprob: -10.375749588012695
    4. '},{' → logprob: -12.625749588012695
    5. ',(' → logprob: -12.750749588012695
    6. ',' → logprob: -14.875749588012695
    7. '{' → logprob: -14.875749588012695
    8. ' ),' → logprob: -14.875749588012695
    9. '(' → logprob: -15.125749588012695
    10. ')' → logprob: -15.250749588012695

Token 396: 'kr' (ID: 7316)
  Prédit: 'kr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kr' → logprob: -9.698698704596609e-05
    2. ' kr' → logprob: -9.250097274780273
    3. '(' → logprob: -14.125097274780273
    4. ' ' → logprob: -17.750097274780273
    5. '   ' → logprob: -17.875097274780273
    6. 'Kr' → logprob: -19.250097274780273
    7. '  ' → logprob: -19.500097274780273
    8. ' (' → logprob: -20.000097274780273
    9. '.kr' → logprob: -20.750097274780273
    10. '
' → logprob: -20.875097274780273

Token 397: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.7697225252486533e-06
    2. ',k' → logprob: -13.125003814697266
    3. ',' → logprob: -14.250003814697266
    4. ' +' → logprob: -14.375003814697266
    5. '+k' → logprob: -15.500003814697266
    6. '1' → logprob: -16.125003814697266
    7. '+
' → logprob: -16.250003814697266
    8. '+,' → logprob: -17.000003814697266
    9. ',r' → logprob: -17.750003814697266
    10. '(' → logprob: -17.750003814697266

Token 398: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001769616355886683
    2. '0' → logprob: -8.875177383422852
    3. ' ' → logprob: -10.250177383422852
    4. '
' → logprob: -13.750177383422852
    5. '   ' → logprob: -15.375177383422852
    6. '(' → logprob: -16.37517738342285
    7. ')' → logprob: -16.50017738342285
    8. '

' → logprob: -16.75017738342285
    9. '```' → logprob: -16.87517738342285
    10. '2' → logprob: -17.00017738342285

Token 399: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.0002016331272898242
    2. ',' → logprob: -8.625201225280762
    3. ' ,' → logprob: -11.000201225280762
    4. ',c' → logprob: -12.250201225280762
    5. ',
' → logprob: -14.625201225280762
    6. ' ' → logprob: -17.375202178955078
    7. '```' → logprob: -17.750202178955078
    8. 'k' → logprob: -17.875202178955078
    9. '(k' → logprob: -18.000202178955078
    10. '
' → logprob: -18.125202178955078

Token 400: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0009130131802521646
    2. ',c' → logprob: -7.125913143157959
    3. 'kc' → logprob: -9.7509126663208
    4. ',' → logprob: -10.8759126663208
    5. ')c' → logprob: -12.0009126663208
    6. '+' → logprob: -12.1259126663208
    7. ')' → logprob: -12.8759126663208
    8. '[c' → logprob: -12.8759126663208
    9. ' c' → logprob: -13.0009126663208
    10. '   ' → logprob: -13.2509126663208

Token 401: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0005377820343710482
    2. '),' → logprob: -7.750537872314453
    3. '+' → logprob: -10.250537872314453
    4. '},{' → logprob: -10.375537872314453
    5. '),
' → logprob: -11.000537872314453
    6. ')' → logprob: -11.875537872314453
    7. ')}' → logprob: -12.000537872314453
    8. '   ' → logprob: -12.875537872314453
    9. ' ' → logprob: -13.375537872314453
    10. ',' → logprob: -14.000537872314453

Token 402: 'kr' (ID: 7316)
  Prédit: 'kr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kr' → logprob: -2.339278580620885e-06
    2. ' kr' → logprob: -13.125001907348633
    3. '(' → logprob: -15.500001907348633
    4. '
' → logprob: -17.625001907348633
    5. 'kc' → logprob: -18.375001907348633
    6. '   ' → logprob: -18.750001907348633
    7. ')' → logprob: -19.000001907348633
    8. 'Kr' → logprob: -19.125001907348633
    9. '{' → logprob: -19.625001907348633
    10. '```' → logprob: -19.750001907348633

Token 403: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.2246291337069124e-05
    2. ',k' → logprob: -11.500021934509277
    3. '1' → logprob: -11.750021934509277
    4. '+k' → logprob: -13.375021934509277
    5. '+
' → logprob: -14.250021934509277
    6. ',' → logprob: -14.250021934509277
    7. ' +' → logprob: -14.500021934509277
    8. 'kc' → logprob: -14.875021934509277
    9. '```' → logprob: -16.875022888183594
    10. 'plus' → logprob: -16.937522888183594

Token 404: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5107177862082608e-05
    2. 'kc' → logprob: -10.625024795532227
    3. ' ' → logprob: -14.750024795532227
    4. 'kr' → logprob: -16.125024795532227
    5. ' kc' → logprob: -16.625024795532227
    6. '
' → logprob: -16.625024795532227
    7. '   ' → logprob: -16.750024795532227
    8. '+' → logprob: -17.000024795532227
    9. ')' → logprob: -17.500024795532227
    10. '0' → logprob: -17.625024795532227

Token 405: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.0010719887213781476
    2. ',' → logprob: -6.876071929931641
    3. ',c' → logprob: -11.00107192993164
    4. ' ,' → logprob: -11.50107192993164
    5. ',
' → logprob: -11.62607192993164
    6. 'kc' → logprob: -14.00107192993164
    7. '+' → logprob: -14.00107192993164
    8. '
' → logprob: -15.00107192993164
    9. '(k' → logprob: -15.62607192993164
    10. ' kc' → logprob: -16.00107192993164

Token 406: 'c' (ID: 66)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1822643280029297
    2. 'c' → logprob: -2.1822643280029297
    3. '+' → logprob: -2.9322643280029297
    4. 'kc' → logprob: -7.80726432800293
    5. ' +' → logprob: -10.18226432800293
    6. '```' → logprob: -10.55726432800293
    7. ')' → logprob: -10.80726432800293
    8. ' ' → logprob: -11.05726432800293
    9. '   ' → logprob: -11.18226432800293
    10. '(' → logprob: -12.68226432800293

Token 407: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009765299037098885
    2. '1' → logprob: -4.634765148162842
    3. '```' → logprob: -12.759765625
    4. ')' → logprob: -13.384765625
    5. '   ' → logprob: -13.509765625
    6. '{' → logprob: -13.947265625
    7. ' +' → logprob: -14.072265625
    8. '(' → logprob: -15.134765625
    9. '0' → logprob: -15.697265625
    10. ')}' → logprob: -15.822265625

Token 408: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.849109119386412e-06
    2. '0' → logprob: -12.125009536743164
    3. ' ' → logprob: -13.125009536743164
    4. ')' → logprob: -13.625009536743164
    5. ')}' → logprob: -14.500009536743164
    6. '+' → logprob: -15.375009536743164
    7. '{' → logprob: -16.125009536743164
    8. '
' → logprob: -16.625009536743164
    9. '   ' → logprob: -16.625009536743164
    10. '```' → logprob: -16.875009536743164

Token 409: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.005906869191676378
    2. '}' → logprob: -5.50590705871582
    3. ')' → logprob: -6.50590705871582
    4. '})' → logprob: -8.75590705871582
    5. ')}
' → logprob: -8.75590705871582
    6. ' )' → logprob: -12.00590705871582
    7. ')}

' → logprob: -12.75590705871582
    8. '))' → logprob: -12.88090705871582
    9. '   ' → logprob: -13.75590705871582
    10. ');}' → logprob: -14.00590705871582

Token 410: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5059099793434143
    2. ' if' → logprob: -1.5059099197387695
    3. '   ' → logprob: -1.7559099197387695
    4. ')' → logprob: -7.1309099197387695
    5. '```' → logprob: -7.3809099197387695
    6. 'assert' → logprob: -8.00590991973877
    7. '<|end|>' → logprob: -8.63090991973877
    8. ' for' → logprob: -8.88090991973877
    9. 'for' → logprob: -9.13090991973877
    10. '
' → logprob: -9.38090991973877

Token 411: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002866804599761963
    2. 'assert' → logprob: -6.002866744995117
    3. ' if' → logprob: -7.877866744995117
    4. 'for' → logprob: -11.502866744995117
    5. 'king' → logprob: -14.002866744995117
    6. ' assert' → logprob: -14.502866744995117
    7. '   ' → logprob: -14.877866744995117
    8. '
' → logprob: -16.127866744995117
    9. '#' → logprob: -16.377866744995117
    10. '```' → logprob: -17.502866744995117

Token 412: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.3677113950252533
    2. 'not' → logprob: -1.3677114248275757
    3. 'expected' → logprob: -3.617711305618286
    4. '   ' → logprob: -4.367711544036865
    5. ' not' → logprob: -4.617711544036865
    6. ' set' → logprob: -5.742711544036865
    7. 'king' → logprob: -8.992711067199707
    8. ' expected' → logprob: -9.117711067199707
    9. '       ' → logprob: -9.992711067199707
    10. ' ' → logprob: -9.992711067199707

Token 413: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.13388703338569e-06
    2. 'king' → logprob: -12.000009536743164
    3. '((' → logprob: -13.250009536743164
    4. ' (' → logprob: -14.750009536743164
    5. '=' → logprob: -16.125009536743164
    6. '(
' → logprob: -16.125009536743164
    7. ' king' → logprob: -16.375009536743164
    8. '
' → logprob: -16.625009536743164
    9. '(expected' → logprob: -16.625009536743164
    10. ')' → logprob: -16.750009536743164

Token 414: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.0001443035143893212
    2. '(' → logprob: -9.625144004821777
    3. ' king' → logprob: -9.750144004821777
    4. ')' → logprob: -11.125144004821777
    5. 'queen' → logprob: -12.875144004821777
    6. '[(' → logprob: -13.750144004821777
    7. '.king' → logprob: -15.125144004821777
    8. '((' → logprob: -15.500144004821777
    9. '[' → logprob: -15.750144004821777
    10. '```' → logprob: -16.000144958496094

Token 415: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -7.896309739408025e-07
    2. 'cells' → logprob: -14.375000953674316
    3. ')' → logprob: -15.750000953674316
    4. 'Cells' → logprob: -16.875
    5. '_tokens' → logprob: -17.25
    6. ')_' → logprob: -17.875
    7. '```' → logprob: -18.875
    8. '
' → logprob: -19.125
    9. ' cells' → logprob: -19.375
    10. '<Cell' → logprob: -19.5

Token 416: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016597089124843478
    2. ')!=' → logprob: -6.501659870147705
    3. '!=' → logprob: -9.251659393310547
    4. ' !=' → logprob: -10.751659393310547
    5. '())' → logprob: -10.751659393310547
    6. '()' → logprob: -11.626659393310547
    7. ' )' → logprob: -12.501659393310547
    8. '()!=' → logprob: -13.376659393310547
    9. '```' → logprob: -13.626659393310547
    10. '   ' → logprob: -13.751659393310547

Token 417: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.38697806000709534
    2. ' !=' → logprob: -1.136978030204773
    3. '==' → logprob: -9.761978149414062
    4. '()!=' → logprob: -10.761978149414062
    5. ')!=' → logprob: -11.011978149414062
    6. '!==' → logprob: -12.386978149414062
    7. ')' → logprob: -13.136978149414062
    8. ' ==' → logprob: -13.261978149414062
    9. '>=' → logprob: -14.386978149414062
    10. '!=(' → logprob: -14.636978149414062

Token 418: ' expected' (ID: 5930)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.018150178715586662
    2. ' expected' → logprob: -4.018150329589844
    3. '(expected' → logprob: -16.393150329589844
    4. '	expected' → logprob: -16.643150329589844
    5. '
' → logprob: -17.268150329589844
    6. '_expected' → logprob: -19.268150329589844
    7. '.expected' → logprob: -19.643150329589844
    8. '   ' → logprob: -20.018150329589844
    9. 'Expected' → logprob: -20.518150329589844
    10. '{' → logprob: -20.518150329589844

Token 419: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.896309739408025e-07
    2. 'king' → logprob: -14.250000953674316
    3. '.king' → logprob: -17.75
    4. '{' → logprob: -18.25
    5. ' king' → logprob: -18.5
    6. '\' → logprob: -18.5
    7. ' _' → logprob: -19.125
    8. 'King' → logprob: -20.0
    9. '_
' → logprob: -20.0
    10. '_k' → logprob: -20.25

Token 420: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -1.0087516784551553e-05
    2. '_' → logprob: -11.62501049041748
    3. '{' → logprob: -14.50001049041748
    4. ' king' → logprob: -15.75001049041748
    5. '
' → logprob: -16.625009536743164
    6. 'queen' → logprob: -16.625009536743164
    7. '.king' → logprob: -17.250009536743164
    8. 'kin' → logprob: -17.500009536743164
    9. '```' → logprob: -17.500009536743164
    10. 'ken' → logprob: -17.875009536743164

Token 421: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.0001625379954930395
    2. 'cells' → logprob: -9.000162124633789
    3. '_' → logprob: -10.250162124633789
    4. 's' → logprob: -13.750162124633789
    5. 'Cells' → logprob: -15.250162124633789
    6. '_states' → logprob: -15.250162124633789
    7. '_cell' → logprob: -15.500162124633789
    8. 'king' → logprob: -15.625162124633789
    9. '   ' → logprob: -15.625162124633789
    10. ' cells' → logprob: -15.625162124633789

Token 422: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018558653071522713
    2. ':
' → logprob: -4.143558502197266
    3. ':return' → logprob: -6.268558502197266
    4. '       ' → logprob: -8.268558502197266
    5. '   ' → logprob: -8.393558502197266
    6. '):' → logprob: -9.393558502197266
    7. ' or' → logprob: -10.518558502197266
    8. ')' → logprob: -11.018558502197266
    9. '):
' → logprob: -11.768558502197266
    10. ':
' → logprob: -13.143558502197266

Token 423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.135819760151207e-05
    2. '
' → logprob: -10.75007152557373
    3. ':
' → logprob: -10.87507152557373
    4. ' return' → logprob: -11.50007152557373
    5. ':' → logprob: -11.87507152557373
    6. '):
' → logprob: -12.00007152557373
    7. '   ' → logprob: -12.75007152557373
    8. 'return' → logprob: -13.37507152557373
    9. '        
' → logprob: -13.75007152557373
    10. ':return' → logprob: -14.00007152557373

Token 424: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.44997572898864746
    2. '   ' → logprob: -1.9499757289886475
    3. ' raise' → logprob: -2.1999757289886475
    4. '       ' → logprob: -2.8249757289886475
    5. 'return' → logprob: -3.0749757289886475
    6. 'raise' → logprob: -5.699975967407227
    7. '
' → logprob: -8.199975967407227
    8. '    ' → logprob: -9.199975967407227
    9. '        
' → logprob: -11.449975967407227
    10. '           ' → logprob: -11.449975967407227

Token 425: ' Invalid' (ID: 26430)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.7181081175804138
    2. 'return' → logprob: -1.2181081771850586
    3. ' raise' → logprob: -1.7181081771850586
    4. ' return' → logprob: -3.4681081771850586
    5. '   ' → logprob: -5.218108177185059
    6. '       ' → logprob: -7.593108177185059
    7. '    ' → logprob: -11.218108177185059
    8. '
' → logprob: -11.968108177185059
    9. '#' → logprob: -12.218108177185059
    10. '           ' → logprob: -12.718108177185059

Token 426: ' input' (ID: 3422)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0924767553806305
    2. 'return' → logprob: -2.4674768447875977
    3. '   ' → logprob: -5.842476844787598
    4. ')' → logprob: -7.967476844787598
    5. ' ' → logprob: -10.092476844787598
    6. ':return' → logprob: -10.217476844787598
    7. ')
' → logprob: -10.467476844787598
    8. '    ' → logprob: -10.592476844787598
    9. '    
' → logprob: -10.592476844787598
    10. ' raise' → logprob: -10.717476844787598

Token 427: ' format' (ID: 6011)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8338308334350586
    2. '   ' → logprob: -1.2088308334350586
    3. 'return' → logprob: -1.8338308334350586
    4. ':
' → logprob: -3.2088308334350586
    5. ' return' → logprob: -3.9588308334350586
    6. '           ' → logprob: -4.333830833435059
    7. ':' → logprob: -4.583830833435059
    8. ':return' → logprob: -4.708830833435059
    9. 'raise' → logprob: -4.958830833435059
    10. '
' → logprob: -5.583830833435059

Token 428: ' according' (ID: 7065)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009573452174663544
    2. '           ' → logprob: -5.759573459625244
    3. 'return' → logprob: -6.009573459625244
    4. ' return' → logprob: -6.259573459625244
    5. '   ' → logprob: -7.134573459625244
    6. ':
' → logprob: -7.759573459625244
    7. ':' → logprob: -8.259572982788086
    8. ':return' → logprob: -8.384572982788086
    9. 'raise' → logprob: -9.384572982788086
    10. ' raise' → logprob: -9.634572982788086

Token 429: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.06256851553916931
    2. ' to' → logprob: -2.812568426132202
    3. '_to' → logprob: -7.687568664550781
    4. 'ly' → logprob: -9.812568664550781
    5. 'import' → logprob: -9.812568664550781
    6. 'def' → logprob: -11.562568664550781
    7. '_code' → logprob: -12.687568664550781
    8. '
' → logprob: -13.062568664550781
    9. 'To' → logprob: -13.062568664550781
    10. '<|end|>' → logprob: -13.062568664550781

Token 430: ' problem' (ID: 4792)
  Prédit: ' problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problem' → logprob: -0.2798338830471039
    2. ' the' → logprob: -1.9048339128494263
    3. 'problem' → logprob: -2.6548337936401367
    4. 'the' → logprob: -3.9048337936401367
    5. ' sys' → logprob: -6.404833793640137
    6. 'Problem' → logprob: -7.404833793640137
    7. ' code' → logprob: -7.654833793640137
    8. ' raise' → logprob: -8.154833793640137
    9. 'sys' → logprob: -8.279833793640137
    10. ' puzzle' → logprob: -8.279833793640137

Token 431: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5990815162658691
    2. '       ' → logprob: -1.3490815162658691
    3. ' return' → logprob: -2.724081516265869
    4. 'return' → logprob: -2.724081516265869
    5. '
' → logprob: -4.349081516265869
    6. '        
' → logprob: -4.474081516265869
    7. '           ' → logprob: -4.724081516265869
    8. ':' → logprob: -5.599081516265869
    9. '    
' → logprob: -5.599081516265869
    10. ')' → logprob: -5.599081516265869

Token 432: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0057559991255402565
    2. ' return' → logprob: -6.50575590133667
    3. 'return' → logprob: -6.88075590133667
    4. '           ' → logprob: -6.88075590133667
    5. '   ' → logprob: -7.38075590133667
    6. ' raise' → logprob: -7.50575590133667
    7. 'raise' → logprob: -7.50575590133667
    8. '        
' → logprob: -8.630756378173828
    9. '
' → logprob: -9.005756378173828
    10. ':' → logprob: -10.130756378173828

Token 433: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11800806224346161
    2. ' return' → logprob: -2.3680081367492676
    3. '   ' → logprob: -4.743008136749268
    4. '       ' → logprob: -5.243008136749268
    5. 'raise' → logprob: -5.743008136749268
    6. ' raise' → logprob: -7.868008136749268
    7. '
' → logprob: -10.24300765991211
    8. '           ' → logprob: -11.74300765991211
    9. '    ' → logprob: -11.86800765991211
    10. '        
' → logprob: -12.99300765991211

Token 434: ' -' (ID: 533)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6037743091583252
    2. '
' → logprob: -1.8537743091583252
    3. ' None' → logprob: -2.228774309158325
    4. 'None' → logprob: -2.353774309158325
    5. '

' → logprob: -3.728774309158325
    6. '  
' → logprob: -4.228774070739746
    7. '    
' → logprob: -4.353774070739746
    8. ' ' → logprob: -4.978774070739746
    9. '\' → logprob: -5.353774070739746
    10. '(' → logprob: -5.853774070739746

Token 435: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -17.125
    3. '100' → logprob: -17.375
    4. ' ' → logprob: -18.0
    5. '999' → logprob: -18.375
    6. '3' → logprob: -19.25
    7. '11' → logprob: -19.5
    8. '0' → logprob: -19.625
    9. '10' → logprob: -20.0
    10. '99' → logprob: -20.125

Token 436: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4989853799343109
    2. '<|end|>' → logprob: -1.1239854097366333
    3. '    
' → logprob: -3.3739852905273438
    4. '
' → logprob: -3.6239852905273438
    5. '<|end|>' → logprob: -6.123985290527344
    6. ')' → logprob: -6.873985290527344
    7. ',' → logprob: -7.248985290527344
    8. '    ' → logprob: -7.373985290527344
    9. '  
' → logprob: -7.373985290527344
    10. ' 
' → logprob: -7.373985290527344

Token 437: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21220146119594574
    2. '   ' → logprob: -2.2122013568878174
    3. '    
' → logprob: -2.5872013568878174
    4. '  
' → logprob: -6.7122015953063965
    5. ' 
' → logprob: -6.8372015953063965
    6. 'visited' → logprob: -6.9622015953063965
    7. '<|end|>' → logprob: -7.5872015953063965
    8. ' visited' → logprob: -7.7122015953063965
    9. '   
' → logprob: -7.8372015953063965
    10. '

' → logprob: -8.212201118469238

Token 438: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8202454447746277
    2. 'visited' → logprob: -0.8202454447746277
    3. '#' (adapté à ' #') → logprob: -2.6952455043792725
    4. 'from' → logprob: -3.8202455043792725
    5. '
' → logprob: -4.945245265960693
    6. 'start' → logprob: -5.320245265960693
    7. 'queue' → logprob: -5.445245265960693
    8. 'state' → logprob: -5.820245265960693
    9. 'def' → logprob: -5.945245265960693
    10. 'moves' → logprob: -6.445245265960693

Token 439: ' The' (ID: 623)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.12611350417137146
    2. '#' → logprob: -3.2511134147644043
    3. 'from' → logprob: -3.2511134147644043
    4. 'start' → logprob: -4.126113414764404
    5. 'queue' → logprob: -5.126113414764404
    6. 'initial' → logprob: -5.126113414764404
    7. 'def' → logprob: -5.501113414764404
    8. '   ' → logprob: -5.751113414764404
    9. 'seen' → logprob: -6.751113414764404
    10. 'pawn' → logprob: -7.126113414764404

Token 440: ' puzzle' (ID: 37488)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8559679388999939
    2. ' visited' → logprob: -2.3559679985046387
    3. ' king' → logprob: -2.4809679985046387
    4. ' initial' → logprob: -2.4809679985046387
    5. '#' → logprob: -2.9809679985046387
    6. 'initial' → logprob: -3.1059679985046387
    7. 'king' → logprob: -3.3559679985046387
    8. 'def' → logprob: -3.6059679985046387
    9. 'queue' → logprob: -3.6059679985046387
    10. 'start' → logprob: -3.7309679985046387

Token 441: ' always' (ID: 3324)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7352623343467712
    2. '#' → logprob: -2.110262393951416
    3. 'state' → logprob: -2.235262393951416
    4. '   ' → logprob: -2.485262393951416
    5. 'def' → logprob: -2.985262393951416
    6. ' states' → logprob: -3.735262393951416
    7. ' state' → logprob: -3.860262393951416
    8. ' requires' → logprob: -4.235262393951416
    9. 'is' → logprob: -4.610262393951416
    10. 'states' → logprob: -4.735262393951416

Token 442: ' have' (ID: 679)
  Prédit: ' guarantees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' guarantees' → logprob: -1.1462825536727905
    2. ' has' → logprob: -1.2712825536727905
    3. 'has' → logprob: -1.8962825536727905
    4. ' requires' → logprob: -3.27128267288208
    5. ' starts' → logprob: -3.27128267288208
    6. ' involves' → logprob: -3.64628267288208
    7. 'gu' → logprob: -3.89628267288208
    8. 'starts' → logprob: -3.89628267288208
    9. 'requires' → logprob: -4.14628267288208
    10. ' includes' → logprob: -4.77128267288208

Token 443: ' exactly' (ID: 9707)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6560255289077759
    2. ' exactly' → logprob: -1.5310255289077759
    3. ' at' → logprob: -2.2810254096984863
    4. ' two' → logprob: -2.4060254096984863
    5. ' valid' → logprob: -4.156025409698486
    6. ' one' → logprob: -4.531025409698486
    7. ' the' → logprob: -4.531025409698486
    8. ' an' → logprob: -4.781025409698486
    9. ' ' → logprob: -5.281025409698486
    10. ' guaranteed' → logprob: -5.531025409698486

Token 444: ' two' (ID: 1920)
  Prédit: ' two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.7675503492355347
    2. 'two' → logprob: -0.7675503492355347
    3. '2' → logprob: -2.767550468444824
    4. ' ' → logprob: -5.267550468444824
    5. 'one' → logprob: -6.142550468444824
    6. ' one' → logprob: -6.642550468444824
    7. '1' → logprob: -8.892550468444824
    8. '4' → logprob: -10.267550468444824
    9. ' exactly' → logprob: -10.642550468444824
    10. '   ' → logprob: -10.892550468444824

Token 445: ' open' (ID: 2494)
  Prédit: ' open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' open' → logprob: -0.0987253338098526
    2. 'open' → logprob: -3.3487253189086914
    3. ' spaces' → logprob: -3.4737253189086914
    4. ' empty' → logprob: -3.9737253189086914
    5. 'spaces' → logprob: -6.598725318908691
    6. 'empty' → logprob: -6.723725318908691
    7. ' paw' → logprob: -6.848725318908691
    8. ' kings' → logprob: -7.223725318908691
    9. ' space' → logprob: -7.348725318908691
    10. ' king' → logprob: -7.473725318908691

Token 446: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.4615950584411621
    2. ' squares' → logprob: -1.461595058441162
    3. 's' → logprob: -2.336595058441162
    4. 'spaces' → logprob: -3.836595058441162
    5. ' spaces' → logprob: -5.086595058441162
    6. 'cells' → logprob: -5.086595058441162
    7. ' cells' → logprob: -5.586595058441162
    8. '_' → logprob: -6.836595058441162
    9. '_spaces' → logprob: -7.586595058441162
    10. ' _' → logprob: -7.961595058441162

Token 447: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11956179141998291
    2. '
' → logprob: -2.3695616722106934
    3. '<|end|>' → logprob: -4.994561672210693
    4. ',' → logprob: -5.869561672210693
    5. ' if' → logprob: -5.994561672210693
    6. ' and' → logprob: -6.119561672210693
    7. '    
' → logprob: -6.494561672210693
    8. '.' → logprob: -6.994561672210693
    9. '<|end|>' → logprob: -7.619561672210693
    10. '#' → logprob: -7.994561672210693

Token 448: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32202786207199097
    2. '
' → logprob: -1.6970279216766357
    3. ' if' → logprob: -2.6970279216766357
    4. 'if' → logprob: -4.572027683258057
    5. ' and' → logprob: -5.197027683258057
    6. '    
' → logprob: -5.947027683258057
    7. 'assert' → logprob: -6.322027683258057
    8. '#' → logprob: -6.947027683258057
    9. ',' → logprob: -7.197027683258057
    10. ' (' → logprob: -7.697027683258057

Token 449: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3799184560775757
    2. ' if' → logprob: -1.3799184560775757
    3. '   ' → logprob: -2.7549185752868652
    4. 'assert' → logprob: -7.504918575286865
    5. '
' → logprob: -8.254918098449707
    6. ' assert' → logprob: -10.129918098449707
    7. ' ' → logprob: -12.129918098449707
    8. '    
' → logprob: -13.004918098449707
    9. '	if' → logprob: -13.129918098449707
    10. '```' → logprob: -13.254918098449707

Token 450: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.47407862544059753
    2. ' len' → logprob: -0.9740786552429199
    3. '(len' → logprob: -13.349078178405762
    4. ' ' → logprob: -17.974079132080078
    5. '	len' → logprob: -18.599079132080078
    6. '   ' → logprob: -20.224079132080078
    7. '[len' → logprob: -20.349079132080078
    8. '=len' → logprob: -20.474079132080078
    9. '<len' → logprob: -21.724079132080078
    10. ',len' → logprob: -21.974079132080078

Token 451: '(open' (ID: 62785)
  Prédit: '(open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(open' → logprob: -0.0007447104435414076
    2. '(' → logprob: -7.250744819641113
    3. 'open' → logprob: -10.375744819641113
    4. ' (' → logprob: -12.750744819641113
    5. ' open' → logprob: -14.500744819641113
    6. '(
' → logprob: -17.125743865966797
    7. '(space' → logprob: -18.125743865966797
    8. '=open' → logprob: -18.125743865966797
    9. '	open' → logprob: -18.375743865966797
    10. '(Open' → logprob: -19.125743865966797

Token 452: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -5.319370302458992e-06
    2. '_' → logprob: -12.625005722045898
    3. 'open' → logprob: -14.250005722045898
    4. '_spaces' → logprob: -14.750005722045898
    5. '(_' → logprob: -15.250005722045898
    6. ')_' → logprob: -15.750005722045898
    7. ' _' → logprob: -16.0000057220459
    8. '()' → logprob: -16.3750057220459
    9. '_open' → logprob: -16.6250057220459
    10. 's' → logprob: -16.6250057220459

Token 453: 'quares' (ID: 110764)
  Prédit: 'quares'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quares' → logprob: -0.07695683091878891
    2. 'open' → logprob: -2.7019567489624023
    3. '_s' → logprob: -5.451956748962402
    4. ' open' → logprob: -7.076956748962402
    5. '(open' → logprob: -7.576956748962402
    6. 's' → logprob: -7.576956748962402
    7. '_open' → logprob: -8.326956748962402
    8. '_' → logprob: -8.826956748962402
    9. 'qu' → logprob: -8.951956748962402
    10. 'q' → logprob: -9.326956748962402

Token 454: ')' (ID: 8)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5875070095062256
    2. ')' → logprob: -0.9625070095062256
    3. '!=' → logprob: -2.9625070095062256
    4. ')!=' → logprob: -4.587507247924805
    5. ' )' → logprob: -7.712507247924805
    6. '()!=' → logprob: -10.712507247924805
    7. '()' → logprob: -11.962507247924805
    8. ' <' → logprob: -13.087507247924805
    9. '   ' → logprob: -13.212507247924805
    10. '```' → logprob: -13.462507247924805

Token 455: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.0789082944393158
    2. '!=' → logprob: -2.5789082050323486
    3. '()!=' → logprob: -11.82890796661377
    4. ')!=' → logprob: -12.32890796661377
    5. ' ==' → logprob: -13.07890796661377
    6. '==' → logprob: -13.20390796661377
    7. ')' → logprob: -14.20390796661377
    8. ' ' → logprob: -14.45390796661377
    9. ' <' → logprob: -15.20390796661377
    10. '<' → logprob: -15.32890796661377

Token 456: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012510590255260468
    2. ' ' → logprob: -4.387510776519775
    3. '```' → logprob: -15.512510299682617
    4. '
' → logprob: -15.637510299682617
    5. '   ' → logprob: -15.887510299682617
    6. ' ' → logprob: -16.012510299682617
    7. 'exact' → logprob: -16.637510299682617
    8. '  ' → logprob: -16.637510299682617
    9. '۲' → logprob: -16.950010299682617
    10. '  
' → logprob: -17.887510299682617

Token 457: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018029935017693788
    2. ' ' → logprob: -8.6251802444458
    3. '
' → logprob: -14.6251802444458
    4. '```' → logprob: -16.500181198120117
    5. '   ' → logprob: -16.625181198120117
    6. 'exact' → logprob: -17.500181198120117
    7. '۲' → logprob: -17.625181198120117
    8. '  ' → logprob: -17.812681198120117
    9. '２' → logprob: -18.750181198120117
    10. '=' → logprob: -18.750181198120117

Token 458: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030665241181850433
    2. ':
' → logprob: -4.030665397644043
    3. ' or' → logprob: -4.530665397644043
    4. ':return' → logprob: -6.655665397644043
    5. '   ' → logprob: -8.530665397644043
    6. '       ' → logprob: -9.655665397644043
    7. 'or' → logprob: -9.780665397644043
    8. '):' → logprob: -10.405665397644043
    9. ')' → logprob: -11.405665397644043
    10. ' :' → logprob: -11.780665397644043

Token 459: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.91732100979425e-05
    2. ':' → logprob: -11.625039100646973
    3. ':
' → logprob: -11.625039100646973
    4. '   ' → logprob: -11.750039100646973
    5. 'return' → logprob: -12.250039100646973
    6. ':return' → logprob: -12.500039100646973
    7. ' return' → logprob: -12.750039100646973
    8. '
' → logprob: -14.250039100646973
    9. '):
' → logprob: -15.125039100646973
    10. ',' → logprob: -15.375039100646973

Token 460: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5785589218139648
    2. 'return' (adapté à ' return') → logprob: -1.0785589218139648
    3. ' return' → logprob: -2.328558921813965
    4. '   ' → logprob: -6.578558921813965
    5. '
' → logprob: -7.953558921813965
    6. '	return' → logprob: -10.703558921813965
    7. '           ' → logprob: -12.953558921813965
    8. ' ' → logprob: -13.453558921813965
    9. '```' → logprob: -13.578558921813965
    10. '{return' → logprob: -14.453558921813965

Token 461: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003178544342517853
    2. ' -' → logprob: -5.753178596496582
    3. 'None' → logprob: -14.378178596496582
    4. ' None' → logprob: -16.003177642822266
    5. ' ' → logprob: -16.503177642822266
    6. '
' → logprob: -16.878177642822266
    7. '-value' → logprob: -17.503177642822266
    8. '0' → logprob: -18.878177642822266
    9. '-return' → logprob: -19.503177642822266
    10. '   ' → logprob: -19.628177642822266

Token 462: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '-' → logprob: -15.875
    3. '2' → logprob: -16.5
    4. '```' → logprob: -16.625
    5. ' ' → logprob: -17.0625
    6. '
' → logprob: -18.6875
    7. '"' → logprob: -18.9375
    8. '3' → logprob: -19.125
    9. ' -' → logprob: -19.125
    10. '   ' → logprob: -19.625

Token 463: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28635522723197937
    2. '    
' → logprob: -2.2863552570343018
    3. '<|end|>' → logprob: -2.2863552570343018
    4. '   ' → logprob: -3.2863552570343018
    5. '<|end|>' → logprob: -5.536355018615723
    6. '

' → logprob: -6.411355018615723
    7. '  
' → logprob: -6.786355018615723
    8. ' 
' → logprob: -7.911355018615723
    9. '#' → logprob: -7.911355018615723
    10. '        
' → logprob: -8.911355018615723

Token 464: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.014970499090850353
    2. '   ' → logprob: -4.514970302581787
    3. '    
' → logprob: -5.889970302581787
    4. '  
' → logprob: -8.514970779418945
    5. '

' → logprob: -8.639970779418945
    6. '#' → logprob: -9.014970779418945
    7. ' 
' → logprob: -9.014970779418945
    8. 'visited' → logprob: -9.514970779418945
    9. '<|end|>' → logprob: -9.639970779418945
    10. '```' → logprob: -9.639970779418945

Token 465: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2562894821166992
    2. '#' (adapté à ' #') → logprob: -1.3812894821166992
    3. 'start' → logprob: -1.3812894821166992
    4. 'target' → logprob: -3.131289482116699
    5. 'visited' → logprob: -3.256289482116699
    6. '
' → logprob: -3.381289482116699
    7. ' start' → logprob: -3.506289482116699
    8. ' #' → logprob: -4.381289482116699
    9. 'goal' → logprob: -4.881289482116699
    10. 'moves' → logprob: -5.131289482116699

Token 466: ' State' (ID: 5388)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.7498462796211243
    2. 'start' → logprob: -1.3748462200164795
    3. '#' → logprob: -2.1248462200164795
    4. 'initial' → logprob: -2.9998462200164795
    5. 'from' → logprob: -3.6248462200164795
    6. 'target' → logprob: -3.9998462200164795
    7. '   ' → logprob: -3.9998462200164795
    8. 'def' → logprob: -4.374846458435059
    9. 'open' → logprob: -4.874846458435059
    10. 'pawn' → logprob: -5.124846458435059

Token 467: ' representation' (ID: 22311)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024995561689138412
    2. '_space' → logprob: -6.627499580383301
    3. '=' → logprob: -7.252499580383301
    4. 's' → logprob: -8.5024995803833
    5. '   ' → logprob: -9.5024995803833
    6. '_state' → logprob: -9.8774995803833
    7. '_queue' → logprob: -10.7524995803833
    8. '_' → logprob: -10.7524995803833
    9. 'space' → logprob: -10.8774995803833
    10. '_size' → logprob: -11.5024995803833

Token 468: '
' (ID: 198)
  Prédit: ' king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' king' → logprob: -0.7904874682426453
    2. ':' → logprob: -1.54048752784729
    3. '   ' → logprob: -2.16548752784729
    4. ' =' → logprob: -2.91548752784729
    5. 'state' → logprob: -3.29048752784729
    6. 'king' → logprob: -3.41548752784729
    7. ':
' → logprob: -3.79048752784729
    8. ' state' → logprob: -3.91548752784729
    9. '#' → logprob: -4.790487289428711
    10. ' (' → logprob: -5.040487289428711

Token 469: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3047395646572113
    2. ' king' → logprob: -1.6797395944595337
    3. '#' → logprob: -3.679739475250244
    4. 'state' → logprob: -4.179739475250244
    5. 'king' → logprob: -4.304739475250244
    6. ' state' → logprob: -4.929739475250244
    7. ' #' → logprob: -5.179739475250244
    8. '
' → logprob: -6.554739475250244
    9. 'current' → logprob: -6.679739475250244
    10. ' current' → logprob: -6.804739475250244

Token 470: ' #' (ID: 1069)
  Prédit: ' king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' king' → logprob: -0.22901730239391327
    2. '   ' → logprob: -2.7290172576904297
    3. ' #' → logprob: -2.8540172576904297
    4. '#' (adapté à ' #') → logprob: -3.9790172576904297
    5. ' state' → logprob: -4.22901725769043
    6. ' visited' → logprob: -4.60401725769043
    7. 'state' → logprob: -5.10401725769043
    8. ' initial' → logprob: -5.10401725769043
    9. ' class' → logprob: -5.10401725769043
    10. 'visited' → logprob: -5.72901725769043

Token 471: ' We'll' (ID: 46830)
  Prédit: ' king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' king' → logprob: -0.9905202388763428
    2. '#' → logprob: -1.2405202388763428
    3. 'king' → logprob: -1.9905202388763428
    4. ' #' → logprob: -2.6155202388763428
    5. 'state' → logprob: -2.7405202388763428
    6. ' state' → logprob: -3.2405202388763428
    7. ' initial' → logprob: -4.990520477294922
    8. 'initial' → logprob: -5.240520477294922
    9. 'start' → logprob: -6.365520477294922
    10. '   ' → logprob: -6.365520477294922

Token 472: ' represent' (ID: 5188)
  Prédit: ' represent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' represent' → logprob: -0.7742741703987122
    2. 'represent' → logprob: -0.7742741703987122
    3. ' use' → logprob: -3.7742741107940674
    4. 'use' → logprob: -4.1492743492126465
    5. 'define' → logprob: -4.3992743492126465
    6. 'encode' → logprob: -5.2742743492126465
    7. '   ' → logprob: -5.6492743492126465
    8. ' define' → logprob: -5.7742743492126465
    9. 'continue' → logprob: -6.3992743492126465
    10. 'consider' → logprob: -6.5242743492126465

Token 473: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4075336456298828
    2. 'the' → logprob: -1.9075336456298828
    3. ' state' → logprob: -2.282533645629883
    4. 'state' → logprob: -3.157533645629883
    5. ' king' → logprob: -4.032533645629883
    6. 'king' → logprob: -4.907533645629883
    7. ' paw' → logprob: -5.282533645629883
    8. ' positions' → logprob: -6.032533645629883
    9. 'pawn' → logprob: -6.157533645629883
    10. 'p' → logprob: -6.532533645629883

Token 474: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.11759855598211288
    2. ' state' → logprob: -2.742598533630371
    3. 'king' → logprob: -3.492598533630371
    4. ' king' → logprob: -4.242598533630371
    5. 'current' → logprob: -7.242598533630371
    6. 'position' → logprob: -8.367598533630371
    7. ' #' → logprob: -8.867598533630371
    8. ' current' → logprob: -8.992598533630371
    9. '   ' → logprob: -9.367598533630371
    10. ' ' → logprob: -9.617598533630371

Token 475: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.0007341049495153129
    2. ' by' → logprob: -8.000734329223633
    3. 'as' → logprob: -8.125734329223633
    4. '   ' → logprob: -10.250734329223633
    5. ')' → logprob: -11.125734329223633
    6. ',' → logprob: -11.125734329223633
    7. ' =' → logprob: -11.375734329223633
    8. ' with' → logprob: -12.000734329223633
    9. '    ' → logprob: -12.250734329223633
    10. '=' → logprob: -13.125734329223633

Token 476: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.35278674960136414
    2. '(' → logprob: -1.2277867794036865
    3. '(k' → logprob: -6.352786540985107
    4. ' a' → logprob: -6.602786540985107
    5. '   ' → logprob: -7.352786540985107
    6. '((' → logprob: -8.477787017822266
    7. '(r' → logprob: -9.602787017822266
    8. ' ((' → logprob: -9.602787017822266
    9. ' ' → logprob: -10.227787017822266
    10. '(tuple' → logprob: -10.352787017822266

Token 477: 'king' (ID: 6962)
  Prédit: 'kr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kr' → logprob: -0.029851382598280907
    2. '(' → logprob: -3.5298514366149902
    3. ' kr' → logprob: -10.279850959777832
    4. 'king' → logprob: -10.404850959777832
    5. ')' → logprob: -11.779850959777832
    6. ' (' → logprob: -11.904850959777832
    7. '   ' → logprob: -12.029850959777832
    8. 'cr' → logprob: -12.654850959777832
    9. 'p' → logprob: -13.654850959777832
    10. '((' → logprob: -13.654850959777832

Token 478: ' row' (ID: 5225)
  Prédit: '_r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.2180882841348648
    2. '_pos' → logprob: -2.593088388442993
    3. '_row' → logprob: -3.218088388442993
    4. ',' → logprob: -3.468088388442993
    5. ')' → logprob: -4.343088150024414
    6. '_positions' → logprob: -4.718088150024414
    7. '_position' → logprob: -4.843088150024414
    8. '_' → logprob: -4.968088150024414
    9. 'r' → logprob: -5.593088150024414
    10. '(' → logprob: -6.843088150024414

Token 479: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006392885115928948
    2. ' ,' → logprob: -8.375638961791992
    3. ',
' → logprob: -8.500638961791992
    4. ',k' → logprob: -9.250638961791992
    5. ')' → logprob: -10.500638961791992
    6. '<|end|>' → logprob: -10.875638961791992
    7. '_,' → logprob: -11.125638961791992
    8. '   ' → logprob: -12.625638961791992
    9. ' ' → logprob: -12.750638961791992
    10. '‌,' → logprob: -12.875638961791992

Token 480: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.16177596151828766
    2. ' king' → logprob: -1.9117759466171265
    3. 'kc' → logprob: -6.536776065826416
    4. ' kc' → logprob: -9.911775588989258
    5. ' ' → logprob: -10.911775588989258
    6. 'kr' → logprob: -11.536775588989258
    7. '  ' → logprob: -11.786775588989258
    8. '   ' → logprob: -12.661775588989258
    9. '
' → logprob: -12.911775588989258
    10. 'col' → logprob: -13.286775588989258

Token 481: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.38848182559013367
    2. 'col' → logprob: -2.013481855392456
    3. ' row' → logprob: -2.888481855392456
    4. '_col' → logprob: -3.013481855392456
    5. ' column' → logprob: -3.638481855392456
    6. 'row' → logprob: -4.013481616973877
    7. ' _' → logprob: -4.263481616973877
    8. ',' → logprob: -4.388481616973877
    9. ' ' → logprob: -5.638481616973877
    10. 'column' → logprob: -5.638481616973877

Token 482: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6352625489234924
    2. ')' → logprob: -0.7602625489234924
    3. '),' → logprob: -6.010262489318848
    4. '   ' → logprob: -10.010262489318848
    5. ',
' → logprob: -10.510262489318848
    6. ')
' → logprob: -11.135262489318848
    7. '<|end|>' → logprob: -11.260262489318848
    8. ' ,' → logprob: -11.385262489318848
    9. ')>' → logprob: -11.635262489318848
    10. ' )' → logprob: -12.010262489318848

Token 483: ' tuple' (ID: 31311)
  Prédit: 'fro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fro' → logprob: -0.0787300318479538
    2. 'tuple' → logprob: -2.8287301063537598
    3. 'p' → logprob: -5.07873010635376
    4. ')' → logprob: -5.32873010635376
    5. ' fro' → logprob: -5.95373010635376
    6. ' tuple' → logprob: -6.45373010635376
    7. 'len' → logprob: -8.203729629516602
    8. ')
' → logprob: -8.578729629516602
    9. 'pawn' → logprob: -8.703729629516602
    10. 'positions' → logprob: -9.078729629516602

Token 484: ' of' (ID: 328)
  Prédit: '(sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.19118459522724152
    2. '(p' → logprob: -1.941184639930725
    3. '(' → logprob: -3.5661845207214355
    4. '(
' → logprob: -6.6911845207214355
    5. 'sorted' → logprob: -7.4411845207214355
    6. '(tuple' → logprob: -8.566184997558594
    7. '((' → logprob: -9.566184997558594
    8. '([' → logprob: -10.191184997558594
    9. '(s' → logprob: -10.566184997558594
    10. '(open' → logprob: -10.816184997558594

Token 485: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.015082517638802528
    2. '(sorted' → logprob: -4.640082359313965
    3. 'p' → logprob: -5.515082359313965
    4. ' sorted' → logprob: -7.015082359313965
    5. 'pawn' → logprob: -8.140082359313965
    6. '(p' → logprob: -10.140082359313965
    7. 'paw' → logprob: -10.390082359313965
    8. 'positions' → logprob: -11.640082359313965
    9. ' paw' → logprob: -12.890082359313965
    10. ')' → logprob: -13.015082359313965

Token 486: ' paw' (ID: 71961)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.09624433517456055
    2. '(p' → logprob: -3.2212443351745605
    3. 'pawn' → logprob: -3.4712443351745605
    4. 'sorted' → logprob: -4.4712443351745605
    5. '(sorted' → logprob: -5.4712443351745605
    6. 'positions' → logprob: -6.2212443351745605
    7. 'paw' → logprob: -6.3462443351745605
    8. ' paw' → logprob: -6.9712443351745605
    9. '((' → logprob: -8.721244812011719
    10. '(' → logprob: -9.846244812011719

Token 487: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -9.996708104154095e-05
    2. 'n' → logprob: -9.375100135803223
    3. 'nts' → logprob: -11.375100135803223
    4. 'ons' → logprob: -13.125100135803223
    5. 'ls' → logprob: -14.250100135803223
    6. 's' → logprob: -14.625100135803223
    7. 'nds' → logprob: -16.625099182128906
    8. '``' → logprob: -16.625099182128906
    9. 'ms' → logprob: -17.000099182128906
    10. '```' → logprob: -17.250099182128906

Token 488: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.38538289070129395
    2. '_positions' → logprob: -1.385382890701294
    3. ')' → logprob: -2.885382890701294
    4. ',' → logprob: -5.135382652282715
    5. ' positions' → logprob: -5.385382652282715
    6. '(' → logprob: -6.510382652282715
    7. 's' → logprob: -8.135382652282715
    8. '),' → logprob: -8.135382652282715
    9. '),(' → logprob: -8.760382652282715
    10. ' ,' → logprob: -8.760382652282715

Token 489: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39136096835136414
    2. ',' → logprob: -1.1413609981536865
    3. '   ' → logprob: -6.141360759735107
    4. ',)' → logprob: -7.266360759735107
    5. '(' → logprob: -7.766360759735107
    6. '),' → logprob: -8.516361236572266
    7. ',p' → logprob: -8.891361236572266
    8. ')
' → logprob: -9.016361236572266
    9. ',
' → logprob: -9.141361236572266
    10. ' )' → logprob: -9.391361236572266

Token 490: ' tuple' (ID: 31311)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4187934696674347
    2. 'pawn' → logprob: -2.7937934398651123
    3. 'tuple' → logprob: -3.2937934398651123
    4. 'open' → logprob: -3.4187934398651123
    5. ' king' → logprob: -3.6687934398651123
    6. 'len' → logprob: -3.7937934398651123
    7. 'empty' → logprob: -4.043793678283691
    8. 'target' → logprob: -4.043793678283691
    9. ' tuple' → logprob: -4.418793678283691
    10. 'steps' → logprob: -4.793793678283691

Token 491: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5408914089202881
    2. ' of' → logprob: -1.165891408920288
    3. 'of' → logprob: -3.040891408920288
    4. '(p' → logprob: -3.415891408920288
    5. ')' → logprob: -4.790891647338867
    6. '(sorted' → logprob: -5.040891647338867
    7. '(
' → logprob: -5.165891647338867
    8. '[' → logprob: -5.915891647338867
    9. ' (' → logprob: -7.040891647338867
    10. '(s' → logprob: -7.915891647338867

Token 492: ' two' (ID: 1920)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.4063452184200287
    2. 'open' → logprob: -1.156345248222351
    3. '(sorted' → logprob: -4.531345367431641
    4. '(open' → logprob: -6.031345367431641
    5. ' open' → logprob: -6.156345367431641
    6. ')' → logprob: -6.406345367431641
    7. ' sorted' → logprob: -6.781345367431641
    8. '
' → logprob: -8.65634536743164
    9. 'remaining' → logprob: -8.78134536743164
    10. '(' → logprob: -8.90634536743164

Token 493: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.08020111918449402
    2. ' open' → logprob: -3.2052011489868164
    3. 'sorted' → logprob: -3.8302011489868164
    4. '(open' → logprob: -5.330201148986816
    5. '(' → logprob: -5.955201148986816
    6. ' sorted' → logprob: -6.330201148986816
    7. 'spaces' → logprob: -6.705201148986816
    8. ')' → logprob: -7.330201148986816
    9. 'positions' → logprob: -7.580201148986816
    10. 'r' → logprob: -7.580201148986816

Token 494: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.005783616565167904
    2. 's' → logprob: -5.505783557891846
    3. '_spaces' → logprob: -7.130783557891846
    4. '_positions' → logprob: -8.255784034729004
    5. ' squares' → logprob: -8.505784034729004
    6. '_' → logprob: -8.630784034729004
    7. '_cells' → logprob: -9.380784034729004
    8. 'spaces' → logprob: -9.380784034729004
    9. ' _' → logprob: -10.755784034729004
    10. '(' → logprob: -11.005784034729004

Token 495: ' sorted' (ID: 20099)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006765460595488548
    2. '_positions' → logprob: -5.631765365600586
    3. ',' → logprob: -6.631765365600586
    4. '))' → logprob: -7.256765365600586
    5. 'positions' → logprob: -7.381765365600586
    6. ',)' → logprob: -8.881765365600586
    7. '_states' → logprob: -9.506765365600586
    8. 's' → logprob: -9.756765365600586
    9. ' positions' → logprob: -10.006765365600586
    10. '_' → logprob: -10.131765365600586

Token 496: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10439527779817581
    2. '))' → logprob: -3.3543953895568848
    3. 'positions' → logprob: -3.3543953895568848
    4. '())' → logprob: -4.104395389556885
    5. 's' → logprob: -5.604395389556885
    6. '_positions' → logprob: -5.854395389556885
    7. ')
' → logprob: -6.354395389556885
    8. '()' → logprob: -7.229395389556885
    9. '))
' → logprob: -7.604395389556885
    10. ' positions' → logprob: -8.229394912719727

Token 497: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5946301817893982
    2. ':' → logprob: -1.469630241394043
    3. ',' → logprob: -1.969630241394043
    4. ')' → logprob: -4.094630241394043
    5. ':
' → logprob: -4.344630241394043
    6. '
' → logprob: -4.844630241394043
    7. ',
' → logprob: -4.969630241394043
    8. 'state' → logprob: -5.219630241394043
    9. '\n' → logprob: -5.219630241394043
    10. '):' → logprob: -5.469630241394043

Token 498: ' #' (ID: 1069)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.42418453097343445
    2. '   ' → logprob: -2.424184560775757
    3. ' 
' → logprob: -2.424184560775757
    4. '
' → logprob: -3.674184560775757
    5. '\n' → logprob: -4.049184322357178
    6. '  
' → logprob: -4.174184322357178
    7. ' state' → logprob: -4.174184322357178
    8. '(
' → logprob: -4.299184322357178
    9. 'return' → logprob: -4.299184322357178
    10. '    
' → logprob: -4.299184322357178

Token 499: ' but' (ID: 889)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.12924724817276
    2. ' state' → logprob: -3.1292471885681152
    3. '   ' → logprob: -3.3792471885681152
    4. '
' → logprob: -3.5042471885681152
    5. ' 
' → logprob: -5.879247188568115
    6. ' next' → logprob: -5.879247188568115
    7. 'next' → logprob: -6.254247188568115
    8. '    
' → logprob: -6.379247188568115
    9. 'def' → logprob: -7.254247188568115
    10. 'current' → logprob: -7.879247188568115

Token 500: ' open' (ID: 2494)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -1.7001301050186157
    2. ')' → logprob: -2.075129985809326
    3. ' instead' → logprob: -2.075129985809326
    4. ' the' → logprob: -2.575129985809326
    5. ' king' → logprob: -2.575129985809326
    6. ' only' → logprob: -2.825129985809326
    7. ' not' → logprob: -2.825129985809326
    8. ' for' → logprob: -2.950129985809326
    9. '    ' → logprob: -3.575129985809326
    10. ',' → logprob: -3.950129985809326

Token 501: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0005406428826972842
    2. '_' → logprob: -8.250540733337402
    3. 's' → logprob: -8.750540733337402
    4. ' squares' → logprob: -10.250540733337402
    5. '_spaces' → logprob: -10.250540733337402
    6. '_positions' → logprob: -10.500540733337402
    7. ' _' → logprob: -11.625540733337402
    8. '_square' → logprob: -13.125540733337402
    9. 'spaces' → logprob: -13.250540733337402
    10. '_states' → logprob: -13.375540733337402

Token 502: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.10232660919427872
    2. ' positions' → logprob: -3.8523266315460205
    3. ' will' → logprob: -3.9773266315460205
    4. '<|end|>' → logprob: -4.352326393127441
    5. ' remain' → logprob: -4.602326393127441
    6. 'positions' → logprob: -4.977326393127441
    7. 'are' → logprob: -5.102326393127441
    8. ',' → logprob: -5.477326393127441
    9. ')' → logprob: -5.477326393127441
    10. ' themselves' → logprob: -6.227326393127441

Token 503: ' fully' (ID: 9637)
  Prédit: 'fixed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fixed' → logprob: -0.25670936703681946
    2. 'immutable' → logprob: -2.006709337234497
    3. ' fixed' → logprob: -3.506709337234497
    4. 'static' → logprob: -3.631709337234497
    5. 'constant' → logprob: -3.756709337234497
    6. ' static' → logprob: -5.381709575653076
    7. ' immutable' → logprob: -5.881709575653076
    8. ' constant' → logprob: -6.256709575653076
    9. 'not' → logprob: -7.506709575653076
    10. 'constants' → logprob: -8.006709098815918

Token 504: ' defined' (ID: 9113)
  Prédit: 'determ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'determ' → logprob: -0.5432985424995422
    2. 'fixed' → logprob: -1.7932984828948975
    3. 'immutable' → logprob: -1.7932984828948975
    4. 'static' → logprob: -3.0432984828948975
    5. 'defined' → logprob: -4.918298721313477
    6. 'known' → logprob: -4.918298721313477
    7. ' determined' → logprob: -5.168298721313477
    8. 'mutable' → logprob: -5.543298721313477
    9. 'dynamic' → logprob: -5.543298721313477
    10. 'contained' → logprob: -6.418298721313477

Token 505: ' by' (ID: 656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7394721508026123
    2. ',' → logprob: -1.1144721508026123
    3. '   ' → logprob: -2.7394721508026123
    4. ' by' → logprob: -2.8644721508026123
    5. ' (' → logprob: -3.7394721508026123
    6. ' )' → logprob: -4.989472389221191
    7. '(' → logprob: -4.989472389221191
    8. ' ,' → logprob: -5.239472389221191
    9. '<|end|>' → logprob: -5.489472389221191
    10. ' ' → logprob: -5.614472389221191

Token 506: ' frame' (ID: 7298)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.16117578744888306
    2. 'king' → logprob: -2.6611757278442383
    3. ' the' → logprob: -3.4111757278442383
    4. '(' → logprob: -3.7861757278442383
    5. 'kr' → logprob: -5.161175727844238
    6. ' (' → logprob: -5.536175727844238
    7. ' king' → logprob: -6.036175727844238
    8. 'open' → logprob: -6.411175727844238
    9. 'ob' → logprob: -6.661175727844238
    10. 'positions' → logprob: -7.286175727844238

Token 507: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8920833468437195
    2. ')' → logprob: -1.1420834064483643
    3. '   ' → logprob: -1.8920834064483643
    4. ',
' → logprob: -3.5170834064483643
    5. '_' → logprob: -4.392083168029785
    6. ':' → logprob: -4.517083168029785
    7. '#' → logprob: -4.642083168029785
    8. ' ,' → logprob: -4.642083168029785
    9. '
' → logprob: -5.017083168029785
    10. ' ' → logprob: -5.392083168029785

Token 508: ' paw' (ID: 71961)
  Prédit: ' king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' king' → logprob: -0.7089575529098511
    2. 'p' → logprob: -1.458957552909851
    3. 'king' → logprob: -2.2089576721191406
    4. 'pawn' → logprob: -3.0839576721191406
    5. ' paw' → logprob: -4.458957672119141
    6. 'len' → logprob: -4.708957672119141
    7. 'the' → logprob: -4.958957672119141
    8. ' grid' → logprob: -4.958957672119141
    9. ' not' → logprob: -5.083957672119141
    10. ' the' → logprob: -5.083957672119141

Token 509: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -4.274932143744081e-05
    2. 'n' → logprob: -11.125042915344238
    3. 'ms' → logprob: -11.250042915344238
    4. 'nts' → logprob: -11.625042915344238
    5. 's' → logprob: -12.375042915344238
    6. 'ws' → logprob: -14.125042915344238
    7. 'ls' → logprob: -14.875042915344238
    8. 'ons' → logprob: -16.000041961669922
    9. 'ds' → logprob: -16.250041961669922
    10. 'm' → logprob: -16.250041961669922

Token 510: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2681433856487274
    2. ')' → logprob: -2.64314341545105
    3. ',' → logprob: -2.76814341545105
    4. ':' → logprob: -3.01814341545105
    5. '
' → logprob: -3.89314341545105
    6. ',
' → logprob: -5.518143177032471
    7. '    
' → logprob: -5.768143177032471
    8. ')
' → logprob: -6.018143177032471
    9. '  
' → logprob: -6.018143177032471
    10. '#' → logprob: -6.268143177032471

Token 511: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.49295952916145325
    2. ' king' → logprob: -0.9929594993591309
    3. 'their' → logprob: -5.367959499359131
    4. 'ob' → logprob: -5.867959499359131
    5. 'grid' → logprob: -6.242959499359131
    6. 'empty' → logprob: -6.367959499359131
    7. 'open' → logprob: -7.117959499359131
    8. ' their' → logprob: -7.117959499359131
    9. 'occupied' → logprob: -7.492959499359131
    10. 'the' → logprob: -7.617959499359131

Token 512: ' position' (ID: 4010)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45221230387687683
    2. ')' → logprob: -1.9522123336791992
    3. ':' → logprob: -2.452212333679199
    4. ',' → logprob: -2.452212333679199
    5. '
' → logprob: -4.452212333679199
    6. '  
' → logprob: -5.327212333679199
    7. 'def' → logprob: -5.452212333679199
    8. '    
' → logprob: -5.452212333679199
    9. '<|end|>' → logprob: -6.077212333679199
    10. '#' → logprob: -6.202212333679199

Token 513: ' too' (ID: 3101)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5368286967277527
    2. ')' → logprob: -2.4118287563323975
    3. '
' → logprob: -2.4118287563323975
    4. ',' → logprob: -2.5368287563323975
    5. ':' → logprob: -2.9118287563323975
    6. '    
' → logprob: -3.1618287563323975
    7. '  
' → logprob: -4.036828517913818
    8. '#' → logprob: -4.786828517913818
    9. '<|end|>' → logprob: -4.911828517913818
    10. ' 
' → logprob: -5.536828517913818

Token 514: '?
' (ID: 3901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9725847244262695
    2. ')' → logprob: -1.4725847244262695
    3. ':' → logprob: -2.0975847244262695
    4. ',' → logprob: -2.7225847244262695
    5. '
' → logprob: -2.9725847244262695
    6. 'def' → logprob: -3.0975847244262695
    7. '  
' → logprob: -3.7225847244262695
    8. '#' → logprob: -3.8475847244262695
    9. '    
' → logprob: -4.3475847244262695
    10. ' 
' → logprob: -5.2225847244262695

Token 515: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7154649496078491
    2. ',' → logprob: -1.8404649496078491
    3. ')' → logprob: -1.9654649496078491
    4. '  
' → logprob: -2.4654650688171387
    5. ' 
' → logprob: -2.7154650688171387
    6. ' (' → logprob: -2.8404650688171387
    7. '(' → logprob: -3.5904650688171387
    8. '(
' → logprob: -3.5904650688171387
    9. '#' → logprob: -3.7154650688171387
    10. ':' → logprob: -3.8404650688171387

Token 516: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4619842767715454
    2. ' 
' → logprob: -1.4619842767715454
    3. 'state' → logprob: -1.4619842767715454
    4. '  
' → logprob: -2.461984157562256
    5. '    
' → logprob: -3.086984157562256
    6. '   
' → logprob: -3.836984157562256
    7. '\' → logprob: -3.961984157562256
    8. '#' (adapté à ' #') → logprob: -3.961984157562256
    9. ' state' → logprob: -4.211984157562256
    10. 'return' → logprob: -4.211984157562256

Token 517: ' No' (ID: 3004)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.1626052856445312
    2. 'state' → logprob: -1.1626052856445312
    3. ')' → logprob: -2.1626052856445312
    4. '   ' → logprob: -2.9126052856445312
    5. '    
' → logprob: -3.0376052856445312
    6. ' state' → logprob: -3.2876052856445312
    7. '#' → logprob: -4.037605285644531
    8. '  
' → logprob: -4.162605285644531
    9. ' )' → logprob: -4.287605285644531
    10. '   
' → logprob: -4.287605285644531

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10894893109798431
    2. ')' → logprob: -3.3589489459991455
    3. ' ,' → logprob: -3.6089489459991455
    4. ',
' → logprob: -4.233948707580566
    5. '   ' → logprob: -4.983948707580566
    6. '<|end|>' → logprob: -5.108948707580566
    7. '<|end|>' → logprob: -5.483948707580566
    8. ':' → logprob: -6.233948707580566
    9. '#' → logprob: -6.858948707580566
    10. ',state' → logprob: -6.858948707580566

Token 519: ' the' (ID: 290)
  Prédit: ' open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' open' → logprob: -0.8445852398872375
    2. ' #' → logprob: -1.4695851802825928
    3. ' we' → logprob: -2.4695851802825928
    4. ' the' → logprob: -2.8445851802825928
    5. ' continue' → logprob: -3.0945851802825928
    6. ' ' → logprob: -3.5945851802825928
    7. '#' → logprob: -3.7195851802825928
    8. ' king' → logprob: -4.094585418701172
    9. ' keep' → logprob: -4.219585418701172
    10. ' because' → logprob: -4.344585418701172

Token 520: ' two' (ID: 1920)
  Prédit: ' open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' open' → logprob: -0.01595999486744404
    2. 'open' → logprob: -5.140960216522217
    3. ' space' → logprob: -5.890960216522217
    4. ' paw' → logprob: -6.515960216522217
    5. ' ' → logprob: -7.015960216522217
    6. ' king' → logprob: -7.390960216522217
    7. ' code' → logprob: -7.515960216522217
    8. ' spaces' → logprob: -7.640960216522217
    9. 'space' → logprob: -8.015959739685059
    10. 'p' → logprob: -8.015959739685059

Token 521: ' open' (ID: 2494)
  Prédit: ' open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' open' → logprob: -0.24147072434425354
    2. 'open' → logprob: -1.6164706945419312
    3. ' spaces' → logprob: -5.491470813751221
    4. ' ' → logprob: -5.616470813751221
    5. 'spaces' → logprob: -5.741470813751221
    6. '_' → logprob: -6.241470813751221
    7. 'space' → logprob: -7.491470813751221
    8. ' ' → logprob: -7.616470813751221
    9. ' squares' → logprob: -7.991470813751221
    10. '_open' → logprob: -8.491470336914062

Token 522: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0012821375858038664
    2. '_' → logprob: -7.501282215118408
    3. ' _' → logprob: -8.00128173828125
    4. '_spaces' → logprob: -8.37628173828125
    5. ' squares' → logprob: -9.00128173828125
    6. 's' → logprob: -10.37628173828125
    7. ' ' → logprob: -13.00128173828125
    8. 'spaces' → logprob: -13.25128173828125
    9. '_cells' → logprob: -13.37628173828125
    10. '_positions' → logprob: -13.50128173828125

Token 523: ' shifts' (ID: 50424)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0300686359405518
    2. ',' → logprob: -1.0300686359405518
    3. ' are' → logprob: -1.7800686359405518
    4. ' ,' → logprob: -3.0300686359405518
    5. '<|end|>' → logprob: -3.9050686359405518
    6. ' )' → logprob: -4.530068397521973
    7. ':' → logprob: -4.905068397521973
    8. '   ' → logprob: -5.280068397521973
    9. ' is' → logprob: -5.280068397521973
    10. '<|end|>' → logprob: -5.655068397521973

Token 524: ' as' (ID: 472)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7615904808044434
    2. ',' → logprob: -0.7615904808044434
    3. ' ,' → logprob: -4.011590480804443
    4. ',
' → logprob: -4.761590480804443
    5. '   ' → logprob: -4.886590480804443
    6. ' )' → logprob: -5.011590480804443
    7. '<|end|>' → logprob: -5.011590480804443
    8. ' =' → logprob: -5.511590480804443
    9. '
' → logprob: -6.136590480804443
    10. '=' → logprob: -6.261590480804443

Token 525: ' pieces' (ID: 12762)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6024876832962036
    2. ' paw' → logprob: -1.3524876832962036
    3. 'the' → logprob: -2.477487564086914
    4. ' king' → logprob: -3.102487564086914
    5. 'king' → logprob: -3.602487564086914
    6. 'p' → logprob: -3.602487564086914
    7. ' we' → logprob: -5.102487564086914
    8. 'pawn' → logprob: -6.352487564086914
    9. '   ' → logprob: -7.977487564086914
    10. ' pieces' → logprob: -7.977487564086914

Token 526: ' move' (ID: 5275)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8025363683700562
    2. ',' → logprob: -1.1775363683700562
    3. '   ' → logprob: -2.4275364875793457
    4. ' ,' → logprob: -3.5525364875793457
    5. '<|end|>' → logprob: -3.5525364875793457
    6. ',
' → logprob: -4.052536487579346
    7. '.' → logprob: -4.552536487579346
    8. '
' → logprob: -4.677536487579346
    9. ' )' → logprob: -4.802536487579346
    10. ' ' → logprob: -4.927536487579346

Token 527: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5367055535316467
    2. '
' → logprob: -1.786705493927002
    3. ')' → logprob: -2.661705493927002
    4. ',' → logprob: -3.036705493927002
    5. '    
' → logprob: -3.286705493927002
    6. '  
' → logprob: -3.286705493927002
    7. '<|end|>' → logprob: -4.411705493927002
    8. ',
' → logprob: -4.536705493927002
    9. ' 
' → logprob: -5.036705493927002
    10. ')
' → logprob: -5.786705493927002

Token 528: ' sliding' (ID: 53853)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 529: ' into' (ID: 1511)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5783241391181946
    2. ')' → logprob: -1.9533240795135498
    3. '
' → logprob: -2.32832407951355
    4. '<|end|>' → logprob: -2.45332407951355
    5. ',' → logprob: -3.20332407951355
    6. '    
' → logprob: -4.453324317932129
    7. '  
' → logprob: -4.578324317932129
    8. '#' → logprob: -4.578324317932129
    9. ',
' → logprob: -4.578324317932129
    10. '<|end|>' → logprob: -4.953324317932129

Token 530: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1708521842956543
    2. 'the' → logprob: -1.2958521842956543
    3. ' them' → logprob: -2.2958521842956543
    4. ' open' → logprob: -2.5458521842956543
    5. 'open' → logprob: -2.5458521842956543
    6. 'them' → logprob: -3.4208521842956543
    7. ' those' → logprob: -3.9208521842956543
    8. ' empty' → logprob: -3.9208521842956543
    9. ' spaces' → logprob: -4.545852184295654
    10. ' these' → logprob: -4.545852184295654

Token 531: ' squares' (ID: 57269)
  Prédit: ' open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' open' → logprob: -0.6675998568534851
    2. ' empty' → logprob: -1.1675999164581299
    3. ' spaces' → logprob: -2.66759991645813
    4. 'open' → logprob: -3.16759991645813
    5. 'empty' → logprob: -3.79259991645813
    6. ' space' → logprob: -4.667599678039551
    7. ' adjacent' → logprob: -5.042599678039551
    8. 'spaces' → logprob: -5.417599678039551
    9. ' blank' → logprob: -5.542599678039551
    10. ' positions' → logprob: -5.667599678039551

Token 532: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.963874101638794
    2. '   ' → logprob: -0.963874101638794
    3. '    
' → logprob: -1.713874101638794
    4. '#' → logprob: -4.338873863220215
    5. ' 
' → logprob: -4.588873863220215
    6. '  
' → logprob: -5.088873863220215
    7. '   
' → logprob: -5.713873863220215
    8. ')' → logprob: -5.838873863220215
    9. ',' → logprob: -5.838873863220215
    10. ')
' → logprob: -6.338873863220215

Token 533: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24040737748146057
    2. ' 
' → logprob: -2.9904074668884277
    3. ')' → logprob: -3.1154074668884277
    4. 'state' → logprob: -3.2404074668884277
    5. '    
' → logprob: -3.7404074668884277
    6. '#' → logprob: -4.365407466888428
    7. '  
' → logprob: -4.615407466888428
    8. ' ' → logprob: -5.240407466888428
    9. '
' → logprob: -5.615407466888428
    10. '   
' → logprob: -5.990407466888428

Token 534: ' #' (ID: 1069)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8814390897750854
    2. '   ' → logprob: -1.0064390897750854
    3. 'state' → logprob: -2.631439208984375
    4. '    
' → logprob: -2.881439208984375
    5. '  
' → logprob: -3.756439208984375
    6. ' state' → logprob: -4.131439208984375
    7. ')' → logprob: -4.381439208984375
    8. '   
' → logprob: -4.506439208984375
    9. ' ' → logprob: -5.256439208984375
    10. '#' (adapté à ' #') → logprob: -5.756439208984375

Token 535: ' So' (ID: 2632)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -1.3663294315338135
    2. '   ' → logprob: -1.7413294315338135
    3. '
' → logprob: -2.2413294315338135
    4. '#' → logprob: -2.2413294315338135
    5. ' 
' → logprob: -2.6163294315338135
    6. ' state' → logprob: -3.1163294315338135
    7. ' next' → logprob: -3.7413294315338135
    8. '    
' → logprob: -3.8663294315338135
    9. ')' → logprob: -3.8663294315338135
    10. '  
' → logprob: -4.116329193115234

Token 536: ' the' (ID: 290)
  Prédit: ' open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' open' → logprob: -0.8727907538414001
    2. 'open' → logprob: -1.247790813446045
    3. 'state' → logprob: -1.997790813446045
    4. ' state' → logprob: -2.497790813446045
    5. ' #' → logprob: -3.622790813446045
    6. '#' → logprob: -4.122790813446045
    7. '   ' → logprob: -4.497790813446045
    8. ' king' → logprob: -5.372790813446045
    9. 'def' → logprob: -5.997790813446045
    10. 'king' → logprob: -6.122790813446045

Token 537: ' open' (ID: 2494)
  Prédit: ' open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' open' → logprob: -0.5212746262550354
    2. ' state' → logprob: -1.2712745666503906
    3. ' ' → logprob: -3.3962745666503906
    4. ' space' → logprob: -3.5212745666503906
    5. 'state' → logprob: -3.8962745666503906
    6. 'space' → logprob: -4.521274566650391
    7. 'open' → logprob: -5.021274566650391
    8. ' two' → logprob: -5.146274566650391
    9. ' next' → logprob: -5.271274566650391
    10. ' current' → logprob: -5.521274566650391

Token 538: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0019565867260098457
    2. '_' → logprob: -6.251956462860107
    3. ' _' → logprob: -11.126956939697266
    4. '_spaces' → logprob: -11.376956939697266
    5. 's' → logprob: -13.876956939697266
    6. '_positions' → logprob: -15.501956939697266
    7. ' squares' → logprob: -16.251956939697266
    8. ' ' → logprob: -16.376956939697266
    9. ')_' → logprob: -16.626956939697266
    10. '_cells' → logprob: -17.126956939697266

Token 539: ' positions' (ID: 15897)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.7673379778862
    2. ',' → logprob: -2.0173380374908447
    3. ')' → logprob: -2.1423380374908447
    4. ' remain' → logprob: -2.2673380374908447
    5. ' =' → logprob: -2.7673380374908447
    6. '<|end|>' → logprob: -3.1423380374908447
    7. 'are' → logprob: -3.7673380374908447
    8. '=' → logprob: -4.517337799072266
    9. ' continue' → logprob: -4.642337799072266
    10. 'remain' → logprob: -5.142337799072266

Token 540: ' must' (ID: 2804)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.4010854959487915
    2. 'are' → logprob: -1.9010854959487915
    3. ' remain' → logprob: -2.526085376739502
    4. '<|end|>' → logprob: -3.276085376739502
    5. 'remain' → logprob: -3.901085376739502
    6. ',' → logprob: -4.401085376739502
    7. ')' → logprob: -4.776085376739502
    8. '<|end|>' → logprob: -5.026085376739502
    9. ' continue' → logprob: -5.401085376739502
    10. 'continue' → logprob: -5.901085376739502

Token 541: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.05274521932005882
    2. 'be' → logprob: -3.5527451038360596
    3. ' also' → logprob: -4.552745342254639
    4. ' remain' → logprob: -5.052745342254639
    5. ' always' → logprob: -6.302745342254639
    6. 'also' → logprob: -6.302745342254639
    7. 'remain' → logprob: -6.802745342254639
    8. 'always' → logprob: -8.05274486541748
    9. ' include' → logprob: -8.42774486541748
    10. 'include' → logprob: -8.80274486541748

Token 542: ' kept' (ID: 13185)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.9310355186462402
    2. 'included' → logprob: -1.1810355186462402
    3. ' part' → logprob: -1.5560355186462402
    4. 'tracked' → logprob: -3.3060355186462402
    5. 'stored' → logprob: -3.4310355186462402
    6. 'tuple' → logprob: -4.80603551864624
    7. 'represented' → logprob: -5.68103551864624
    8. 'explicit' → logprob: -6.05603551864624
    9. ' included' → logprob: -6.18103551864624
    10. 'ke' → logprob: -7.05603551864624

Token 543: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20711269974708557
    2. '   ' → logprob: -2.3321127891540527
    3. ' ,' → logprob: -3.0821127891540527
    4. ')' → logprob: -3.5821127891540527
    5. ',
' → logprob: -5.332112789154053
    6. ' (' → logprob: -6.707112789154053
    7. '_' → logprob: -6.832112789154053
    8. '_state' → logprob: -6.832112789154053
    9. '    
' → logprob: -6.957112789154053
    10. ' ' → logprob: -7.207112789154053

Token 544: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.1614537537097931
    2. 'state' → logprob: -1.9114537239074707
    3. ' the' → logprob: -6.911453723907471
    4. ' state' → logprob: -8.411454200744629
    5. 'sorted' → logprob: -12.286454200744629
    6. 'tuple' → logprob: -12.911454200744629
    7. 'a' → logprob: -13.161454200744629
    8. 'states' → logprob: -14.661454200744629
    9. 'memory' → logprob: -15.661454200744629
    10. 'each' → logprob: -15.911454200744629

Token 545: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.00023476807109545916
    2. ' state' → logprob: -8.375234603881836
    3. 'tuple' → logprob: -13.000234603881836
    4. '(state' → logprob: -14.625234603881836
    5. '
' → logprob: -15.125234603881836
    6. '   ' → logprob: -15.500234603881836
    7. 'states' → logprob: -15.500234603881836
    8. '_state' → logprob: -15.875234603881836
    9. '#' → logprob: -15.875234603881836
    10. 'code' → logprob: -16.000234603881836

Token 546: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12915222346782684
    2. ')' → logprob: -3.629152297973633
    3. 'state' → logprob: -4.004152297973633
    4. '
' → logprob: -4.129152297973633
    5. '    
' → logprob: -4.129152297973633
    6. ',' → logprob: -4.129152297973633
    7. '  
' → logprob: -5.254152297973633
    8. ' 
' → logprob: -5.754152297973633
    9. ' ' → logprob: -5.879152297973633
    10. ' state' → logprob: -5.879152297973633

Token 547: ' since' (ID: 3630)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6660257577896118
    2. '    ' → logprob: -1.9160257577896118
    3. '    
' → logprob: -2.5410256385803223
    4. '   ' → logprob: -2.9160256385803223
    5. ' ' → logprob: -2.9160256385803223
    6. ' but' → logprob: -3.5410256385803223
    7. ' )' → logprob: -3.7910256385803223
    8. ' because' → logprob: -4.416025638580322
    9. ' 
' → logprob: -4.416025638580322
    10. ' as' → logprob: -4.541025638580322

Token 548: ' pieces' (ID: 12762)
  Prédit: 'they'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'they' → logprob: -0.22912530601024628
    2. 'the' → logprob: -1.8541252613067627
    3. 'their' → logprob: -4.354125499725342
    4. 'open' → logprob: -4.479125499725342
    5. ' they' → logprob: -4.979125499725342
    6. 'pawn' → logprob: -5.354125499725342
    7. 'pieces' → logprob: -5.479125499725342
    8. 'p' → logprob: -5.729125499725342
    9. 'king' → logprob: -6.354125499725342
    10. ' the' → logprob: -7.729125499725342

Token 549: ' moves' (ID: 19523)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.38997340202331543
    2. 'can' → logprob: -1.6399734020233154
    3. ' move' → logprob: -2.6399734020233154
    4. 'move' → logprob: -3.3899734020233154
    5. ' may' → logprob: -4.7649736404418945
    6. ' and' → logprob: -5.2649736404418945
    7. 'may' → logprob: -5.5149736404418945
    8. 'and' → logprob: -5.7649736404418945
    9. ' might' → logprob: -7.8899736404418945
    10. ' occupy' → logprob: -8.139973640441895

Token 550: ' depend' (ID: 9630)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.5810045003890991
    2. ')' → logprob: -1.9560045003890991
    3. '<|end|>' → logprob: -2.3310046195983887
    4. ' can' → logprob: -2.4560046195983887
    5. ' and' → logprob: -2.7060046195983887
    6. ',' → logprob: -2.8310046195983887
    7. ' continue' → logprob: -2.8310046195983887
    8. '   ' → logprob: -2.9560046195983887
    9. ' )' → logprob: -3.0810046195983887
    10. ' ,' → logprob: -3.4560046195983887

Token 551: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.018592584878206253
    2. 'on' → logprob: -4.018592357635498
    3. ' upon' → logprob: -8.143592834472656
    4. ' ' → logprob: -9.518592834472656
    5. '<|end|>' → logprob: -10.518592834472656
    6. '   ' → logprob: -11.393592834472656
    7. 'upon' → logprob: -11.393592834472656
    8. '    ' → logprob: -11.518592834472656
    9. '	on' → logprob: -12.268592834472656
    10. ' ' → logprob: -12.768592834472656

Token 552: ' availability' (ID: 18744)
  Prédit: ' open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' open' → logprob: -0.816738486289978
    2. 'open' → logprob: -0.941738486289978
    3. 'the' → logprob: -2.5667386054992676
    4. ' the' → logprob: -3.1917386054992676
    5. ' them' → logprob: -3.8167386054992676
    6. 'them' → logprob: -4.441738605499268
    7. ' tuple' → logprob: -5.441738605499268
    8. ' their' → logprob: -6.191738605499268
    9. 'tuple' → logprob: -6.441738605499268
    10. ' ' → logprob: -6.441738605499268

Token 553: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3053497076034546
    2. ')' → logprob: -1.8053497076034546
    3. ',' → logprob: -2.805349826812744
    4. ' )' → logprob: -5.305349826812744
    5. 's' → logprob: -5.680349826812744
    6. '_states' → logprob: -5.680349826812744
    7. ' and' → logprob: -5.930349826812744
    8. ' (' → logprob: -6.055349826812744
    9. '_state' → logprob: -6.055349826812744
    10. '.' → logprob: -6.305349826812744

Token 554: ' opens' (ID: 24061)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -1.3808908462524414
    2. ' the' → logprob: -1.8808908462524414
    3. ' open' → logprob: -2.1308908462524414
    4. ' positions' → logprob: -2.3808908462524414
    5. 'positions' → logprob: -2.5058908462524414
    6. 'the' → logprob: -2.6308908462524414
    7. ' these' → logprob: -2.8808908462524414
    8. ' those' → logprob: -3.2558908462524414
    9. ' squares' → logprob: -3.5058908462524414
    10. ' ' → logprob: -3.6308908462524414

Token 555: '.
' (ID: 558)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.04752302169799805
    2. ')' → logprob: -3.797523021697998
    3. '   ' → logprob: -4.172523021697998
    4. '_' → logprob: -5.172523021697998
    5. '_spaces' → logprob: -7.172523021697998
    6. ',' → logprob: -7.547523021697998
    7. '_positions' → logprob: -8.047523498535156
    8. '_states' → logprob: -8.172523498535156
    9. 's' → logprob: -8.172523498535156
    10. ')
' → logprob: -8.422523498535156

Token 556: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14864161610603333
    2. ' 
' → logprob: -3.648641586303711
    3. ')' → logprob: -3.773641586303711
    4. '    
' → logprob: -3.773641586303711
    5. 'state' → logprob: -3.898641586303711
    6. '  
' → logprob: -4.523641586303711
    7. ' ' → logprob: -4.648641586303711
    8. ',' → logprob: -5.523641586303711
    9. '\' → logprob: -5.773641586303711
    10. '   
' → logprob: -5.898641586303711

Token 557: ' #
' (ID: 21888)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.7886686325073242
    2. '   ' → logprob: -0.9136686325073242
    3. '    
' → logprob: -2.913668632507324
    4. '  
' → logprob: -3.663668632507324
    5. ')' → logprob: -4.413668632507324
    6. '\n' → logprob: -4.788668632507324
    7. '
' → logprob: -5.038668632507324
    8. '   
' → logprob: -5.038668632507324
    9. 'state' → logprob: -5.163668632507324
    10. '\' → logprob: -5.163668632507324

Token 558: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3514617383480072
    2. '
' → logprob: -1.8514617681503296
    3. '    
' → logprob: -2.35146164894104
    4. ' 
' → logprob: -4.101461887359619
    5. '#' → logprob: -4.601461887359619
    6. 'state' → logprob: -5.101461887359619
    7. ' state' → logprob: -6.351461887359619
    8. ' #' → logprob: -6.601461887359619
    9. '    ' → logprob: -6.851461887359619
    10. '   
' → logprob: -7.101461887359619

Token 559: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.08121787756681442
    2. 'king' → logprob: -3.5812177658081055
    3. 'open' → logprob: -4.2062177658081055
    4. '   ' → logprob: -4.3312177658081055
    5. '
' → logprob: -4.8312177658081055
    6. 'def' → logprob: -5.3312177658081055
    7. 'state' → logprob: -5.4562177658081055
    8. 'initial' → logprob: -6.4562177658081055
    9. 'from' → logprob: -7.3312177658081055
    10. 'empty' → logprob: -8.206217765808105

Token 560: ' However' (ID: 5551)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.7587764859199524
    2. '
' → logprob: -1.5087764263153076
    3. ' 
' → logprob: -2.8837764263153076
    4. ' king' → logprob: -2.8837764263153076
    5. ' state' → logprob: -3.0087764263153076
    6. '   ' → logprob: -3.2587764263153076
    7. 'def' → logprob: -4.383776664733887
    8. 'king' → logprob: -4.383776664733887
    9. 'initial' → logprob: -4.383776664733887
    10. '    
' → logprob: -4.633776664733887

Token 561: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06972243636846542
    2. '   ' → logprob: -3.1947224140167236
    3. ' ,' → logprob: -4.569722652435303
    4. '#' → logprob: -5.444722652435303
    5. ' #' → logprob: -6.569722652435303
    6. ',
' → logprob: -6.819722652435303
    7. ')' → logprob: -6.944722652435303
    8. ' ' → logprob: -6.944722652435303
    9. 'def' → logprob: -6.944722652435303
    10. '<|end|>' → logprob: -7.069722652435303

Token 562: ' since' (ID: 3630)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8815509676933289
    2. ' the' → logprob: -1.6315510272979736
    3. 'def' → logprob: -1.8815510272979736
    4. 'the' → logprob: -3.0065510272979736
    5. 'return' → logprob: -3.5065510272979736
    6. ' #' → logprob: -3.6315510272979736
    7. ' return' → logprob: -3.8815510272979736
    8. ' def' → logprob: -4.0065507888793945
    9. ' paw' → logprob: -4.0065507888793945
    10. '<|end|>' → logprob: -4.6315507888793945

Token 563: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4668773412704468
    2. ' open' → logprob: -2.2168774604797363
    3. 'the' → logprob: -2.4668774604797363
    4. ' king' → logprob: -2.4668774604797363
    5. 'king' → logprob: -3.5918774604797363
    6. ' paw' → logprob: -3.8418774604797363
    7. 'open' → logprob: -3.9668774604797363
    8. 'p' → logprob: -5.341877460479736
    9. 'pawn' → logprob: -5.466877460479736
    10. ' we' → logprob: -5.716877460479736

Token 564: ' grid' (ID: 10586)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.9298775792121887
    2. ' code' → logprob: -1.929877519607544
    3. ' king' → logprob: -2.304877519607544
    4. ' open' → logprob: -2.304877519607544
    5. ' two' → logprob: -2.804877519607544
    6. 'king' → logprob: -2.929877519607544
    7. 'two' → logprob: -2.929877519607544
    8. 'p' → logprob: -3.179877519607544
    9. ' grid' → logprob: -4.804877758026123
    10. 'code' → logprob: -4.804877758026123

Token 565: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.15838342905044556
    2. ' size' → logprob: -3.283383369445801
    3. ' contains' → logprob: -4.158383369445801
    4. ' has' → logprob: -4.158383369445801
    5. ' lines' → logprob: -4.783383369445801
    6. ' may' → logprob: -4.783383369445801
    7. ')' → logprob: -4.783383369445801
    8. ' positions' → logprob: -4.783383369445801
    9. ' can' → logprob: -5.033383369445801
    10. ' itself' → logprob: -5.158383369445801

Token 566: ' fixed' (ID: 13213)
  Prédit: 'static'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'static' → logprob: -0.677688479423523
    2. ' static' → logprob: -1.302688479423523
    3. 'fixed' → logprob: -2.5526885986328125
    4. 'immutable' → logprob: -2.5526885986328125
    5. 'small' → logprob: -3.5526885986328125
    6. ' immutable' → logprob: -4.6776885986328125
    7. ' fixed' → logprob: -4.8026885986328125
    8. ' small' → logprob: -5.5526885986328125
    9. 'mostly' → logprob: -6.4276885986328125
    10. 'bounded' → logprob: -6.6776885986328125

Token 567: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026249675080180168
    2. ' and' → logprob: -4.401249885559082
    3. ' ,' → logprob: -4.901249885559082
    4. ',
' → logprob: -5.651249885559082
    5. 'and' → logprob: -7.401249885559082
    6. ')' → logprob: -7.901249885559082
    7. '   ' → logprob: -8.026249885559082
    8. '<|end|>' → logprob: -8.151249885559082
    9. ' size' → logprob: -8.526249885559082
    10. 'size' → logprob: -9.651249885559082

Token 568: ' and' (ID: 326)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.607962429523468
    2. 'the' → logprob: -1.7329623699188232
    3. ' and' → logprob: -2.3579623699188232
    4. '#' → logprob: -2.4829623699188232
    5. ' we' → logprob: -3.2329623699188232
    6. 'and' → logprob: -4.107962608337402
    7. ' #' → logprob: -4.732962608337402
    8. 'we' → logprob: -5.107962608337402
    9. ' open' → logprob: -5.357962608337402
    10. '<|end|>' → logprob: -5.607962608337402

Token 569: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3349173963069916
    2. ' king' → logprob: -2.4599173069000244
    3. 'the' → logprob: -2.4599173069000244
    4. ' open' → logprob: -3.3349173069000244
    5. 'king' → logprob: -4.3349175453186035
    6. 'open' → logprob: -4.7099175453186035
    7. ' we' → logprob: -4.7099175453186035
    8. ' only' → logprob: -5.0849175453186035
    9. ' there' → logprob: -5.2099175453186035
    10. ' pieces' → logprob: -5.4599175453186035

Token 570: ' sets' (ID: 11982)
  Prédit: ' open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' open' → logprob: -0.9244654178619385
    2. 'open' → logprob: -0.9244654178619385
    3. ' king' → logprob: -2.4244654178619385
    4. '#' → logprob: -3.5494654178619385
    5. ' code' → logprob: -4.174465179443359
    6. ' two' → logprob: -4.299465179443359
    7. ' #' → logprob: -4.799465179443359
    8. 'king' → logprob: -4.924465179443359
    9. ' initial' → logprob: -5.174465179443359
    10. 'p' → logprob: -5.174465179443359

Token 571: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0348517931997776
    2. 'of' → logprob: -4.534852027893066
    3. ' ' → logprob: -5.284852027893066
    4. ' are' → logprob: -5.534852027893066
    5. '<|end|>' → logprob: -5.659852027893066
    6. '<|end|>' → logprob: -6.284852027893066
    7. ')' → logprob: -6.534852027893066
    8. ' is' → logprob: -7.034852027893066
    9. ' (' → logprob: -7.034852027893066
    10. ' open' → logprob: -7.159852027893066

Token 572: ' obstacles' (ID: 46430)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.392163872718811
    2. 'open' → logprob: -1.392163872718811
    3. ' open' → logprob: -2.3921637535095215
    4. ' paw' → logprob: -2.6421637535095215
    5. ' obstacles' → logprob: -2.6421637535095215
    6. ' positions' → logprob: -2.8921637535095215
    7. 'pawn' → logprob: -3.0171637535095215
    8. 'positions' → logprob: -3.2671637535095215
    9. ' king' → logprob: -3.5171637535095215
    10. 'ob' → logprob: -4.1421637535095215

Token 573: ' fixed' (ID: 13213)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16161513328552246
    2. 'and' → logprob: -2.6616151332855225
    3. ' are' → logprob: -2.9116151332855225
    4. ',' → logprob: -4.036615371704102
    5. 'are' → logprob: -6.411615371704102
    6. '   ' → logprob: -6.536615371704102
    7. ' ,' → logprob: -6.536615371704102
    8. ')' → logprob: -7.411615371704102
    9. '<|end|>' → logprob: -7.911615371704102
    10. ' ' → logprob: -8.036615371704102

Token 574: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08989349752664566
    2. ',
' → logprob: -3.3398935794830322
    3. ' and' → logprob: -3.4648935794830322
    4. '   ' → logprob: -4.714893341064453
    5. 'and' → logprob: -5.089893341064453
    6. ' ,' → logprob: -6.464893341064453
    7. ')' → logprob: -6.839893341064453
    8. '#' → logprob: -7.714893341064453
    9. '),' → logprob: -8.089893341064453
    10. '
' → logprob: -8.714893341064453

Token 575: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.171029195189476
    2. '#' → logprob: -2.2960290908813477
    3. ' we' → logprob: -4.046029090881348
    4. '<|end|>' → logprob: -5.046029090881348
    5. ',' → logprob: -5.171029090881348
    6. ' the' → logprob: -5.296029090881348
    7. ' and' → logprob: -5.421029090881348
    8. '<|end|>' → logprob: -5.546029090881348
    9. ' #' → logprob: -6.046029090881348
    10. 'the' → logprob: -6.171029090881348

Token 576: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.060174621641635895
    2. '   ' → logprob: -2.9351747035980225
    3. 'the' → logprob: -6.310174465179443
    4. ' #' → logprob: -7.060174465179443
    5. ' the' → logprob: -7.185174465179443
    6. 'and' → logprob: -7.435174465179443
    7. ' and' → logprob: -8.185174942016602
    8. ' we' → logprob: -8.560174942016602
    9. ' not' → logprob: -9.185174942016602
    10. 'not' → logprob: -9.310174942016602

Token 577: ' at' (ID: 540)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04635751619935036
    2. ' #' → logprob: -3.6713576316833496
    3. '   ' → logprob: -4.79635763168335
    4. ' the' → logprob: -5.92135763168335
    5. 'the' → logprob: -5.92135763168335
    6. ' we' → logprob: -6.29635763168335
    7. ' and' → logprob: -7.42135763168335
    8. 'we' → logprob: -7.54635763168335
    9. 'and' → logprob: -7.67135763168335
    10. '
' → logprob: -7.67135763168335

Token 578: ' each' (ID: 2454)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'least' → logprob: -1.548831582069397
    2. ' this' → logprob: -1.798831582069397
    3. ' least' → logprob: -1.798831582069397
    4. 'most' → logprob: -2.0488314628601074
    5. ' most' → logprob: -2.2988314628601074
    6. 'this' → logprob: -2.6738314628601074
    7. ' the' → logprob: -3.4238314628601074
    8. 'the' → logprob: -3.4238314628601074
    9. 'each' → logprob: -3.6738314628601074
    10. '#' → logprob: -3.6738314628601074

Token 579: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.9247719645500183
    2. ' state' → logprob: -1.299772024154663
    3. 'state' → logprob: -2.049772024154663
    4. ')' → logprob: -2.299772024154663
    5. ' move' → logprob: -3.424772024154663
    6. ' position' → logprob: -4.424771785736084
    7. ' line' → logprob: -4.924771785736084
    8. ' )' → logprob: -5.174771785736084
    9. ' BFS' → logprob: -5.424771785736084
    10. ' ' → logprob: -5.549771785736084

Token 580: ' the' (ID: 290)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04775523021817207
    2. ' ,' → logprob: -3.172755241394043
    3. ' we' → logprob: -6.422755241394043
    4. ' the' → logprob: -7.297755241394043
    5. '<|end|>' → logprob: -7.797755241394043
    6. '   ' → logprob: -7.922755241394043
    7. ')' → logprob: -8.172755241394043
    8. ' ' → logprob: -8.297755241394043
    9. 'state' → logprob: -8.422755241394043
    10. '<|end|>' → logprob: -8.797755241394043

Token 581: ' union' (ID: 22208)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -1.2691237926483154
    2. ' king' → logprob: -1.3941237926483154
    3. 'king' → logprob: -1.8941237926483154
    4. 'open' → logprob: -2.3941237926483154
    5. ' state' → logprob: -2.5191237926483154
    6. ' open' → logprob: -3.0191237926483154
    7. '#' → logprob: -4.2691240310668945
    8. 'possible' → logprob: -4.2691240310668945
    9. ' code' → logprob: -4.8941240310668945
    10. 'def' → logprob: -5.0191240310668945

Token 582: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.04471923038363457
    2. 'of' → logprob: -3.6697192192077637
    3. '   ' → logprob: -5.044719219207764
    4. '<|end|>' → logprob: -5.544719219207764
    5. '<|end|>' → logprob: -6.169719219207764
    6. ' (' → logprob: -6.794719219207764
    7. '(' → logprob: -7.169719219207764
    8. ')' → logprob: -7.169719219207764
    9. ' =' → logprob: -7.294719219207764
    10. ' ' → logprob: -7.419719219207764

Token 583: ' king' (ID: 13793)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.7125868797302246
    2. 'p' → logprob: -1.9625868797302246
    3. ' open' → logprob: -2.3375868797302246
    4. ' king' → logprob: -2.3375868797302246
    5. 'king' → logprob: -2.3375868797302246
    6. ' paw' → logprob: -3.5875868797302246
    7. 'occupied' → logprob: -4.087586879730225
    8. 'ob' → logprob: -4.587586879730225
    9. 'pawn' → logprob: -4.712586879730225
    10. 'paw' → logprob: -5.837586879730225

Token 584: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9595329165458679
    2. ' ,' → logprob: -1.3345329761505127
    3. '_cells' → logprob: -1.8345329761505127
    4. '_positions' → logprob: -2.0845329761505127
    5. ' and' → logprob: -3.9595329761505127
    6. ')' → logprob: -4.334532737731934
    7. ' positions' → logprob: -4.459532737731934
    8. ' cells' → logprob: -5.459532737731934
    9. 'positions' → logprob: -5.584532737731934
    10. ' _' → logprob: -6.209532737731934

Token 585: ' paw' (ID: 71961)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.20561714470386505
    2. ' paw' → logprob: -1.7056171894073486
    3. 'pawn' → logprob: -6.3306169509887695
    4. 'paw' → logprob: -6.8306169509887695
    5. 'open' → logprob: -7.5806169509887695
    6. ' open' → logprob: -7.9556169509887695
    7. ' ' → logprob: -9.33061695098877
    8. ' p' → logprob: -9.95561695098877
    9. '
' → logprob: -10.08061695098877
    10. '```' → logprob: -10.08061695098877

Token 586: 'ns' (ID: 6097)
  Prédit: 'ons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.21258994936943054
    2. 'ns' → logprob: -1.712589979171753
    3. 'awns' → logprob: -4.712589740753174
    4. 's' → logprob: -7.087589740753174
    5. 'ans' → logprob: -7.462589740753174
    6. 'uns' → logprob: -7.837589740753174
    7. 'n' → logprob: -10.087590217590332
    8. 'p' → logprob: -10.087590217590332
    9. 'pawn' → logprob: -10.212590217590332
    10. 'ions' → logprob: -10.587590217590332

Token 587: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.09952929615974426
    2. '+' → logprob: -2.724529266357422
    3. '_positions' → logprob: -4.849529266357422
    4. ')' → logprob: -5.474529266357422
    5. '<|end|>' → logprob: -5.599529266357422
    6. 'positions' → logprob: -5.724529266357422
    7. ' and' → logprob: -5.974529266357422
    8. ' positions' → logprob: -6.599529266357422
    9. '   ' → logprob: -6.724529266357422
    10. '<|end|>' → logprob: -6.974529266357422

Token 588: ' obstacles' (ID: 46430)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.02189885824918747
    2. ' open' → logprob: -3.8968987464904785
    3. 'opens' → logprob: -6.7718987464904785
    4. 'ob' → logprob: -9.271899223327637
    5. ' opens' → logprob: -9.646899223327637
    6. '
' → logprob: -11.271899223327637
    7. ' ' → logprob: -11.646899223327637
    8. 'op' → logprob: -12.271899223327637
    9. 'o' → logprob: -12.521899223327637
    10. '	open' → logprob: -12.646899223327637

Token 589: ' +' (ID: 659)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.2465673685073853
    2. ')' → logprob: -1.6215673685073853
    3. ' must' → logprob: -1.6215673685073853
    4. ' +' → logprob: -2.2465672492980957
    5. ' and' → logprob: -3.3715672492980957
    6. ' should' → logprob: -3.6215672492980957
    7. ' positions' → logprob: -4.246567249298096
    8. ' are' → logprob: -4.371567249298096
    9. ' will' → logprob: -4.496567249298096
    10. '_positions' → logprob: -4.746567249298096

Token 590: ' opens' (ID: 24061)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.018994562327861786
    2. ' open' → logprob: -4.018994331359863
    3. 'opens' → logprob: -7.268994331359863
    4. 'ob' → logprob: -9.768994331359863
    5. ' opens' → logprob: -10.143994331359863
    6. ' ' → logprob: -11.268994331359863
    7. 'op' → logprob: -12.018994331359863
    8. '
' → logprob: -12.018994331359863
    9. '	open' → logprob: -12.393994331359863
    10. 'spaces' → logprob: -12.643994331359863

Token 591: ' =' (ID: 314)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7389125823974609
    2. ')' → logprob: -1.113912582397461
    3. ' must' → logprob: -3.238912582397461
    4. 'is' → logprob: -3.613912582397461
    5. ' forms' → logprob: -3.863912582397461
    6. ' are' → logprob: -3.988912582397461
    7. '   ' → logprob: -4.738912582397461
    8. ' ==' → logprob: -4.863912582397461
    9. ' will' → logprob: -4.863912582397461
    10. 'must' → logprob: -4.863912582397461

Token 592: ' entire' (ID: 6508)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.9473888874053955
    2. ' all' → logprob: -2.3223888874053955
    3. 'ob' → logprob: -2.5723888874053955
    4. 'grid' → logprob: -2.5723888874053955
    5. 'set' → logprob: -2.5723888874053955
    6. 'the' → logprob: -2.5723888874053955
    7. '{' → logprob: -3.3223888874053955
    8. ' set' → logprob: -3.5723888874053955
    9. ' grid' → logprob: -3.5723888874053955
    10. ' {(' → logprob: -3.9473888874053955

Token 593: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.15831859409809113
    2. 'grid' → logprob: -2.033318519592285
    3. ' board' → logprob: -4.908318519592285
    4. 'board' → logprob: -5.033318519592285
    5. ' ' → logprob: -8.158318519592285
    6. 'space' → logprob: -8.533318519592285
    7. ' space' → logprob: -8.783318519592285
    8. ' set' → logprob: -9.033318519592285
    9. '```' → logprob: -9.158318519592285
    10. ' cells' → logprob: -9.533318519592285

Token 594: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46310532093048096
    2. ')' → logprob: -2.0881052017211914
    3. '
' → logprob: -2.2131052017211914
    4. ',' → logprob: -3.3381052017211914
    5. '<|end|>' → logprob: -3.4631052017211914
    6. '  
' → logprob: -3.8381052017211914
    7. '    
' → logprob: -4.463105201721191
    8. ',
' → logprob: -5.338105201721191
    9. ':' → logprob: -5.713105201721191
    10. '.' → logprob: -5.713105201721191

Token 595: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.606861412525177
    2. '<|end|>' → logprob: -1.6068613529205322
    3. ')' → logprob: -1.7318613529205322
    4. '<|end|>' → logprob: -3.8568613529205322
    5. '
' → logprob: -3.9818613529205322
    6. ',' → logprob: -4.481861591339111
    7. '.' → logprob: -5.231861591339111
    8. '    
' → logprob: -5.481861591339111
    9. '  
' → logprob: -5.606861591339111
    10. '\n' → logprob: -5.731861591339111

Token 596: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1531895399093628
    2. ')' → logprob: -2.6531896591186523
    3. ',' → logprob: -3.9031896591186523
    4. '    
' → logprob: -4.153189659118652
    5. '  
' → logprob: -4.528189659118652
    6. '<|end|>' → logprob: -5.278189659118652
    7. ' 
' → logprob: -5.778189659118652
    8. '\n' → logprob: -5.778189659118652
    9. '
' → logprob: -6.028189659118652
    10. ',
' → logprob: -6.528189659118652

Token 597: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1886982917785645
    2. '
' → logprob: -1.4386982917785645
    3. ')' → logprob: -2.1886982917785645
    4. ' 
' → logprob: -2.1886982917785645
    5. '  
' → logprob: -3.0636982917785645
    6. '    
' → logprob: -3.0636982917785645
    7. 'state' → logprob: -3.0636982917785645
    8. '\n' → logprob: -4.0636982917785645
    9. 'def' → logprob: -4.1886982917785645
    10. '   
' → logprob: -4.6886982917785645

Token 598: ' knowing' (ID: 19578)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5768774747848511
    2. ' next' → logprob: -1.951877474784851
    3. ' we' → logprob: -2.7018775939941406
    4. 'state' → logprob: -3.0768775939941406
    5. 'the' → logprob: -3.3268775939941406
    6. '#' → logprob: -3.7018775939941406
    7. ' state' → logprob: -3.8268775939941406
    8. ' states' → logprob: -3.9518775939941406
    9. ' open' → logprob: -4.451877593994141
    10. ' #' → logprob: -4.576877593994141

Token 599: ' king' (ID: 13793)
  Prédit: ' king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' king' → logprob: -0.7580984830856323
    2. ' the' → logprob: -0.8830984830856323
    3. 'the' → logprob: -2.508098602294922
    4. 'king' → logprob: -3.633098602294922
    5. ' (' → logprob: -5.383098602294922
    6. '(' → logprob: -6.258098602294922
    7. ' all' → logprob: -7.383098602294922
    8. 'positions' → logprob: -7.508098602294922
    9. ' positions' → logprob: -7.633098602294922
    10. ' ' → logprob: -8.633098602294922

Token 600: ' pos' (ID: 1253)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.36813148856163025
    2. ',' → logprob: -2.243131399154663
    3. ' ' → logprob: -2.993131399154663
    4. '_positions' → logprob: -2.993131399154663
    5. ' position' → logprob: -4.243131637573242
    6. ' positions' → logprob: -4.243131637573242
    7. ' _' → logprob: -4.493131637573242
    8. '_row' → logprob: -4.618131637573242
    9. '_r' → logprob: -4.993131637573242
    10. 'r' → logprob: -4.993131637573242

Token 601: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09515473991632462
    2. 'ition' → logprob: -3.2201547622680664
    3. ' ,' → logprob: -3.3451547622680664
    4. ')' → logprob: -4.845154762268066
    5. '   ' → logprob: -5.720154762268066
    6. 's' → logprob: -6.845154762268066
    7. ' )' → logprob: -7.470154762268066
    8. 'itions' → logprob: -7.470154762268066
    9. ',
' → logprob: -7.595154762268066
    10. ' ' → logprob: -8.095154762268066

Token 602: ' pawn' (ID: 112226)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10243464261293411
    2. ' paw' → logprob: -2.4774346351623535
    3. 'pawn' → logprob: -5.2274346351623535
    4. 'paw' → logprob: -5.6024346351623535
    5. 'tuple' → logprob: -6.1024346351623535
    6. ' tuple' → logprob: -6.6024346351623535
    7. 'sorted' → logprob: -8.602435111999512
    8. 'fro' → logprob: -8.852435111999512
    9. ' p' → logprob: -9.477435111999512
    10. 'open' → logprob: -9.477435111999512

Token 603: ' pos' (ID: 1253)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009215735830366611
    2. '_positions' → logprob: -5.509215831756592
    3. 'positions' → logprob: -5.634215831756592
    4. ' positions' → logprob: -6.884215831756592
    5. ' s' → logprob: -7.634215831756592
    6. ' ' → logprob: -11.759215354919434
    7. '_s' → logprob: -11.759215354919434
    8. ')' → logprob: -11.884215354919434
    9. 'pos' → logprob: -12.009215354919434
    10. '   ' → logprob: -12.634215354919434

Token 604: ' +' (ID: 659)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09310819208621979
    2. ' +' → logprob: -3.2181081771850586
    3. ',' → logprob: -3.5931081771850586
    4. '+' → logprob: -4.343108177185059
    5. 'itions' → logprob: -5.593108177185059
    6. ')' → logprob: -5.968108177185059
    7. '   ' → logprob: -7.968108177185059
    8. 'positions' → logprob: -8.093108177185059
    9. ' ,' → logprob: -8.718108177185059
    10. 'ions' → logprob: -8.843108177185059

Token 605: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.06771516054868698
    2. 'opens' → logprob: -2.8177151679992676
    3. ' open' → logprob: -5.567715167999268
    4. ' opens' → logprob: -6.442715167999268
    5. 'two' → logprob: -9.44271469116211
    6. 'tuple' → logprob: -9.69271469116211
    7. 'ob' → logprob: -9.94271469116211
    8. 'the' → logprob: -10.56771469116211
    9. 'op' → logprob: -11.06771469116211
    10. ' tuple' → logprob: -11.69271469116211

Token 606: ' pos' (ID: 1253)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.007446901872754097
    2. 's' → logprob: -5.132446765899658
    3. '_spaces' → logprob: -6.882446765899658
    4. '_positions' → logprob: -8.382447242736816
    5. '_' → logprob: -8.507447242736816
    6. '_cells' → logprob: -10.882447242736816
    7. ')' → logprob: -11.632447242736816
    8. 'spaces' → logprob: -11.757447242736816
    9. '```' → logprob: -11.882447242736816
    10. ' squares' → logprob: -12.257447242736816

Token 607: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13213151693344116
    2. 's' → logprob: -3.507131576538086
    3. ',' → logprob: -3.882131576538086
    4. '=' → logprob: -3.882131576538086
    5. ' =' → logprob: -4.132131576538086
    6. ' +' → logprob: -4.757131576538086
    7. ' is' → logprob: -4.882131576538086
    8. '   ' → logprob: -5.382131576538086
    9. ' )' → logprob: -5.382131576538086
    10. '),' → logprob: -5.757131576538086

Token 608: ' enough' (ID: 4951)
  Prédit: ' enough'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enough' → logprob: -1.028236985206604
    2. 'en' → logprob: -1.153236985206604
    3. 's' → logprob: -1.403236985206604
    4. ' sufficient' → logprob: -2.5282368659973145
    5. 'necessary' → logprob: -7.1532368659973145
    6. 'complete' → logprob: -9.653237342834473
    7. ' suficiente' → logprob: -9.778237342834473
    8. ' necessary' → logprob: -10.278237342834473
    9. 'essential' → logprob: -10.278237342834473
    10. ' sufic' → logprob: -10.403237342834473

Token 609: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3535572290420532
    2. ')' → logprob: -2.2285571098327637
    3. '<|end|>' → logprob: -2.9785571098327637
    4. 'state' → logprob: -3.1035571098327637
    5. '
' → logprob: -3.6035571098327637
    6. ',' → logprob: -4.228557109832764
    7. '<|end|>' → logprob: -4.603557109832764
    8. 'def' → logprob: -4.978557109832764
    9. ' states' → logprob: -5.478557109832764
    10. '    
' → logprob: -5.478557109832764

Token 610: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17409594357013702
    2. ')' → logprob: -2.674095869064331
    3. ',' → logprob: -3.549095869064331
    4. ' 
' → logprob: -4.04909610748291
    5. '    
' → logprob: -4.54909610748291
    6. '  
' → logprob: -4.54909610748291
    7. ' ' → logprob: -5.67409610748291
    8. 'def' → logprob: -5.79909610748291
    9. 'state' → logprob: -6.04909610748291
    10. '   
' → logprob: -6.04909610748291

Token 611: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3981272280216217
    2. ')' → logprob: -2.273127317428589
    3. ' 
' → logprob: -2.398127317428589
    4. ',' → logprob: -3.398127317428589
    5. '    
' → logprob: -3.398127317428589
    6. 'state' → logprob: -3.898127317428589
    7. '  
' → logprob: -4.39812707901001
    8. ' ' → logprob: -5.02312707901001
    9. '   
' → logprob: -5.52312707901001
    10. ' )' → logprob: -5.52312707901001

Token 612: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06426110118627548
    2. '    
' → logprob: -3.8142611980438232
    3. '
' → logprob: -3.9392611980438232
    4. 'def' → logprob: -5.064260959625244
    5. ' 
' → logprob: -5.189260959625244
    6. 'state' → logprob: -5.939260959625244
    7. '  
' → logprob: -6.814260959625244
    8. '#' → logprob: -6.939260959625244
    9. '   
' → logprob: -7.064260959625244
    10. '\' → logprob: -7.439260959625244

Token 613: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44321343302726746
    2. 'state' → logprob: -2.19321346282959
    3. 'visited' → logprob: -2.56821346282959
    4. 'initial' → logprob: -3.19321346282959
    5. 'def' → logprob: -3.19321346282959
    6. '#' (adapté à ' #') → logprob: -3.81821346282959
    7. 'king' → logprob: -4.69321346282959
    8. '
' → logprob: -4.81821346282959
    9. ' #' → logprob: -5.06821346282959
    10. ' initial' → logprob: -5.31821346282959

Token 614: ' But' (ID: 3072)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8561198115348816
    2. '   ' → logprob: -1.9811198711395264
    3. 'state' → logprob: -2.3561198711395264
    4. 'initial' → logprob: -2.4811198711395264
    5. 'start' → logprob: -2.6061198711395264
    6. 'def' → logprob: -2.8561198711395264
    7. '#' → logprob: -3.1061198711395264
    8. ' #' → logprob: -4.106119632720947
    9. ' visited' → logprob: -4.356119632720947
    10. ' initial' → logprob: -4.481119632720947

Token 615: ' open' (ID: 2494)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5892618298530579
    2. ' we' → logprob: -2.339261770248413
    3. ' king' → logprob: -2.464261770248413
    4. ' paw' → logprob: -2.964261770248413
    5. ' open' → logprob: -3.214261770248413
    6. ' there' → logprob: -3.964261770248413
    7. ' to' → logprob: -4.089262008666992
    8. ' you' → logprob: -4.214262008666992
    9. ' since' → logprob: -4.339262008666992
    10. ' #' → logprob: -4.714262008666992

Token 616: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.08799509704113007
    2. '_positions' → logprob: -2.5879950523376465
    3. 's' → logprob: -4.9629950523376465
    4. '_spaces' → logprob: -6.9629950523376465
    5. '_' → logprob: -7.0879950523376465
    6. '_cells' → logprob: -9.087995529174805
    7. 'positions' → logprob: -9.712995529174805
    8. ' squares' → logprob: -10.462995529174805
    9. '_states' → logprob: -10.962995529174805
    10. '```' → logprob: -11.087995529174805

Token 617: ' move' (ID: 5275)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.4796895980834961
    2. '<|end|>' → logprob: -2.104689598083496
    3. '_positions' → logprob: -2.604689598083496
    4. ',' → logprob: -2.979689598083496
    5. ' =' → logprob: -3.354689598083496
    6. ' positions' → logprob: -3.729689598083496
    7. '<|end|>' → logprob: -4.104689598083496
    8. 'positions' → logprob: -4.229689598083496
    9. ' remain' → logprob: -4.479689598083496
    10. ' must' → logprob: -5.104689598083496

Token 618: ' dynamically' (ID: 89183)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5379010438919067
    2. ' ,' → logprob: -2.537900924682617
    3. ' are' → logprob: -2.912900924682617
    4. ')' → logprob: -2.912900924682617
    5. '<|end|>' → logprob: -3.162900924682617
    6. '<|end|>' → logprob: -3.412900924682617
    7. 's' → logprob: -3.537900924682617
    8. ' positions' → logprob: -3.662900924682617
    9. '_positions' → logprob: -4.412900924682617
    10. 'positions' → logprob: -4.537900924682617

Token 619: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.516481339931488
    2. ')' → logprob: -1.3914813995361328
    3. '   ' → logprob: -3.016481399536133
    4. '<|end|>' → logprob: -3.141481399536133
    5. '<|end|>' → logprob: -3.766481399536133
    6. ':' → logprob: -4.516481399536133
    7. ',
' → logprob: -4.766481399536133
    8. '.' → logprob: -5.016481399536133
    9. ' states' → logprob: -6.766481399536133
    10. ' )' → logprob: -6.891481399536133

Token 620: ' Pieces' (ID: 118132)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7446527481079102
    2. 'state' → logprob: -1.4946527481079102
    3. ' 
' → logprob: -2.36965274810791
    4. ')' → logprob: -2.99465274810791
    5. '  
' → logprob: -3.61965274810791
    6. '    
' → logprob: -3.86965274810791
    7. '
' → logprob: -3.99465274810791
    8. ',' → logprob: -4.49465274810791
    9. ' state' → logprob: -4.49465274810791
    10. 'states' → logprob: -4.74465274810791

Token 621: ' slide' (ID: 24969)
  Prédit: ' move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.8356319665908813
    2. ' can' → logprob: -0.9606319665908813
    3. 'can' → logprob: -3.210631847381592
    4. 'move' → logprob: -3.460631847381592
    5. 'moves' → logprob: -3.835631847381592
    6. ' may' → logprob: -4.335631847381592
    7. ' and' → logprob: -4.585631847381592
    8. ' cannot' → logprob: -4.585631847381592
    9. 'cannot' → logprob: -5.085631847381592
    10. ' moves' → logprob: -5.085631847381592

Token 622: ' into' (ID: 1511)
  Prédit: ' into'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' into' → logprob: -0.11630582064390182
    2. 'into' → logprob: -2.4913058280944824
    3. ' through' → logprob: -5.241305828094482
    4. '   ' → logprob: -5.991305828094482
    5. '<|end|>' → logprob: -5.991305828094482
    6. 'through' → logprob: -6.116305828094482
    7. ' to' → logprob: -6.241305828094482
    8. ' ' → logprob: -6.741305828094482
    9. 'in' → logprob: -6.741305828094482
    10. ' ,' → logprob: -6.741305828094482

Token 623: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.964289128780365
    2. ' the' → logprob: -1.3392891883850098
    3. 'the' → logprob: -1.7142891883850098
    4. ' open' → logprob: -2.2142891883850098
    5. 'opens' → logprob: -3.8392891883850098
    6. ' them' → logprob: -4.46428918838501
    7. ' opens' → logprob: -4.96428918838501
    8. ' those' → logprob: -5.58928918838501
    9. ' these' → logprob: -5.58928918838501
    10. 'them' → logprob: -5.83928918838501

Token 624: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.057474534958601
    2. '_' → logprob: -3.0574746131896973
    3. '_spaces' → logprob: -5.182474613189697
    4. 's' → logprob: -6.557474613189697
    5. ' _' → logprob: -6.807474613189697
    6. '_positions' → logprob: -8.182474136352539
    7. ' squares' → logprob: -8.682474136352539
    8. ')' → logprob: -9.307474136352539
    9. '_cells' → logprob: -10.307474136352539
    10. ' ' → logprob: -10.557474136352539

Token 625: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20882631838321686
    2. '   ' → logprob: -2.4588263034820557
    3. '<|end|>' → logprob: -3.3338263034820557
    4. ')' → logprob: -3.5838263034820557
    5. '.' → logprob: -4.083826541900635
    6. '<|end|>' → logprob: -4.958826541900635
    7. ' ,' → logprob: -5.958826541900635
    8. ',
' → logprob: -6.083826541900635
    9. ' and' → logprob: -6.333826541900635
    10. ' tokens' → logprob: -6.708826541900635

Token 626: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.13569451868534088
    2. 'the' → logprob: -2.5106945037841797
    3. ' open' → logprob: -4.38569450378418
    4. 'swap' → logprob: -4.63569450378418
    5. 'opens' → logprob: -5.38569450378418
    6. ' the' → logprob: -5.38569450378418
    7. 'vac' → logprob: -6.01069450378418
    8. 'from' → logprob: -6.38569450378418
    9. 'empty' → logprob: -6.51069450378418
    10. 'thus' → logprob: -6.76069450378418

Token 627: ' squares' (ID: 57269)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0003470182418823
    2. '_s' → logprob: -1.2503470182418823
    3. ' squares' → logprob: -1.3753470182418823
    4. 'positions' → logprob: -3.250347137451172
    5. 'spaces' → logprob: -3.750347137451172
    6. '_positions' → logprob: -4.000347137451172
    7. '_spaces' → logprob: -5.500347137451172
    8. ' positions' → logprob: -6.125347137451172
    9. ')' → logprob: -6.625347137451172
    10. ' spaces' → logprob: -7.000347137451172

Token 628: ' move' (ID: 5275)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.6773489713668823
    2. ' move' → logprob: -1.6773489713668823
    3. ' remain' → logprob: -2.677349090576172
    4. ' continue' → logprob: -2.802349090576172
    5. ',' → logprob: -3.052349090576172
    6. ' shift' → logprob: -3.677349090576172
    7. '<|end|>' → logprob: -3.802349090576172
    8. ' positions' → logprob: -4.302349090576172
    9. ' can' → logprob: -4.677349090576172
    10. 'are' → logprob: -4.802349090576172

Token 629: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7434043884277344
    2. ' to' → logprob: -1.6184043884277344
    3. ' ahead' → logprob: -2.6184043884277344
    4. '.' → logprob: -2.7434043884277344
    5. 'to' → logprob: -3.3684043884277344
    6. '<|end|>' → logprob: -3.3684043884277344
    7. ' forward' → logprob: -3.9934043884277344
    8. ' ,' → logprob: -4.118404388427734
    9. ')' → logprob: -4.493404388427734
    10. ' by' → logprob: -4.993404388427734

Token 630: ' previous' (ID: 5880)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.10942914336919785
    2. 'previous' → logprob: -3.234429121017456
    3. 'positions' → logprob: -3.609429121017456
    4. 'where' → logprob: -4.109429359436035
    5. ' the' → logprob: -5.109429359436035
    6. 'that' → logprob: -5.359429359436035
    7. 'those' → logprob: -5.734429359436035
    8. 'old' → logprob: -6.984429359436035
    9. 'pawn' → logprob: -7.109429359436035
    10. '(previous' → logprob: -7.609429359436035

Token 631: ' piece' (ID: 9047)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.1819921731948853
    2. 'position' → logprob: -1.6819921731948853
    3. 'piece' → logprob: -1.6819921731948853
    4. ' position' → logprob: -2.0569920539855957
    5. ' positions' → logprob: -2.4319920539855957
    6. ' piece' → logprob: -2.6819920539855957
    7. 'pos' → logprob: -3.9319920539855957
    8. 'token' → logprob: -6.181992053985596
    9. 'pieces' → logprob: -6.306992053985596
    10. 'space' → logprob: -6.306992053985596

Token 632: ' position' (ID: 4010)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.30214449763298035
    2. '_positions' → logprob: -2.6771445274353027
    3. ',' → logprob: -2.8021445274353027
    4. ')' → logprob: -3.1771445274353027
    5. ' positions' → logprob: -3.4271445274353027
    6. ' ,' → logprob: -3.9271445274353027
    7. 'positions' → logprob: -4.552144527435303
    8. ' )' → logprob: -5.177144527435303
    9. '<|end|>' → logprob: -5.427144527435303
    10. ' s' → logprob: -5.552144527435303

Token 633: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3551642596721649
    2. ')' → logprob: -1.8551642894744873
    3. ',' → logprob: -2.4801642894744873
    4. '
' → logprob: -3.9801642894744873
    5. ':' → logprob: -4.355164051055908
    6. '  
' → logprob: -5.230164051055908
    7. '    
' → logprob: -5.355164051055908
    8. 'def' → logprob: -5.980164051055908
    9. '#' → logprob: -6.230164051055908
    10. '.' → logprob: -6.480164051055908

Token 634: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05339648202061653
    2. '<|end|>' → logprob: -4.178396701812744
    3. ')' → logprob: -4.428396701812744
    4. '    
' → logprob: -4.553396701812744
    5. ',' → logprob: -5.678396701812744
    6. '
' → logprob: -6.053396701812744
    7. '  
' → logprob: -6.178396701812744
    8. ' 
' → logprob: -6.803396701812744
    9. '#' → logprob: -7.178396701812744
    10. '<|end|>' → logprob: -7.303396701812744

Token 635: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19420962035655975
    2. ')' → logprob: -2.069209575653076
    3. '\n' → logprob: -4.944209575653076
    4. 'state' → logprob: -5.069209575653076
    5. 'def' → logprob: -5.319209575653076
    6. ',' → logprob: -5.319209575653076
    7. '    
' → logprob: -5.569209575653076
    8. '\' → logprob: -5.694209575653076
    9. '  
' → logprob: -6.069209575653076
    10. '#' → logprob: -6.069209575653076

Token 636: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05570603907108307
    2. '    
' → logprob: -3.430706024169922
    3. '<|end|>' → logprob: -4.680706024169922
    4. ' 
' → logprob: -6.055706024169922
    5. '  
' → logprob: -6.180706024169922
    6. ')' → logprob: -6.180706024169922
    7. ',' → logprob: -6.805706024169922
    8. '
' → logprob: -7.055706024169922
    9. '<|end|>' → logprob: -7.180706024169922
    10. 'def' → logprob: -7.555706024169922

Token 637: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1882299780845642
    2. 'def' → logprob: -2.438230037689209
    3. '#' (adapté à ' #') → logprob: -4.063230037689209
    4. 'visited' → logprob: -4.188230037689209
    5. 'state' → logprob: -4.313230037689209
    6. '
' → logprob: -4.313230037689209
    7. ' visited' → logprob: -5.188230037689209
    8. '    
' → logprob: -5.563230037689209
    9. ' #' → logprob: -5.688230037689209
    10. ' state' → logprob: -6.188230037689209

Token 638: ' We'll' (ID: 46830)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.9391193389892578
    2. 'initial' → logprob: -1.9391193389892578
    3. '   ' → logprob: -2.064119338989258
    4. 'def' → logprob: -2.314119338989258
    5. 'visited' → logprob: -2.939119338989258
    6. 'from' → logprob: -3.314119338989258
    7. 'queue' → logprob: -3.689119338989258
    8. 'start' → logprob: -3.689119338989258
    9. '#' → logprob: -3.689119338989258
    10. ' #' → logprob: -4.189119338989258

Token 639: ' store' (ID: 4897)
  Prédit: ' represent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' represent' → logprob: -0.6237576007843018
    2. 'represent' → logprob: -2.1237576007843018
    3. 'continue' → logprob: -2.1237576007843018
    4. ' use' → logprob: -2.9987576007843018
    5. ' store' → logprob: -2.9987576007843018
    6. ' continue' → logprob: -3.1237576007843018
    7. ' keep' → logprob: -3.8737576007843018
    8. 'store' → logprob: -3.8737576007843018
    9. 'keep' → logprob: -4.123757362365723
    10. 'use' → logprob: -4.498757362365723

Token 640: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.34880852699279785
    2. '(' → logprob: -1.8488085269927979
    3. 'the' → logprob: -2.973808526992798
    4. 'states' → logprob: -3.848808526992798
    5. ' the' → logprob: -3.973808526992798
    6. ' state' → logprob: -3.973808526992798
    7. ' (' → logprob: -4.598808288574219
    8. ' states' → logprob: -5.098808288574219
    9. 'king' → logprob: -5.473808288574219
    10. ' king' → logprob: -5.723808288574219

Token 641: ' :
' (ID: 10039)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06355097889900208
    2. ' as' → logprob: -2.8135509490966797
    3. '=' → logprob: -7.06355094909668
    4. 'as' → logprob: -8.56355094909668
    5. '   ' → logprob: -8.68855094909668
    6. ' (' → logprob: -9.18855094909668
    7. ',' → logprob: -9.43855094909668
    8. '(' → logprob: -9.81355094909668
    9. 's' → logprob: -10.56355094909668
    10. '    ' → logprob: -10.81355094909668

Token 642: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44285154342651367
    2. ' (' → logprob: -1.1928515434265137
    3. '   ' → logprob: -2.9428515434265137
    4. ' =' → logprob: -7.067851543426514
    5. ' as' → logprob: -8.442852020263672
    6. '(
' → logprob: -8.942852020263672
    7. '=' → logprob: -9.317852020263672
    8. ' kr' → logprob: -10.067852020263672
    9. '    ' → logprob: -10.317852020263672
    10. ')' → logprob: -10.317852020263672

Token 643: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23108555376529694
    2. ' (' → logprob: -1.7310855388641357
    3. '   ' → logprob: -3.6060855388641357
    4. '(
' → logprob: -6.606085777282715
    5. ' king' → logprob: -8.856085777282715
    6. 'kr' → logprob: -9.106085777282715
    7. ' =' → logprob: -9.606085777282715
    8. '(state' → logprob: -9.731085777282715
    9. 'king' → logprob: -9.981085777282715
    10. ' (
' → logprob: -9.981085777282715

Token 644: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018695086240768433
    2. ' (' → logprob: -4.018694877624512
    3. '   ' → logprob: -8.018694877624512
    4. '(
' → logprob: -9.393694877624512
    5. 'kr' → logprob: -10.143694877624512
    6. '(k' → logprob: -10.393694877624512
    7. 'king' → logprob: -11.018694877624512
    8. ' king' → logprob: -11.643694877624512
    9. 'def' → logprob: -12.018694877624512
    10. '(state' → logprob: -12.268694877624512

Token 645: 'kr' (ID: 7316)
  Prédit: 'kr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kr' → logprob: -0.0013333364622667432
    2. ' kr' → logprob: -6.626333236694336
    3. '   ' → logprob: -12.376333236694336
    4. ')' → logprob: -13.626333236694336
    5. 'king' → logprob: -14.126333236694336
    6. '(' → logprob: -14.501333236694336
    7. ' ' → logprob: -15.126333236694336
    8. '  ' → logprob: -15.376333236694336
    9. '
' → logprob: -16.376333236694336
    10. 'cr' → logprob: -16.876333236694336

Token 646: ',k' (ID: 35155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010100631043314934
    2. ',k' → logprob: -4.635100841522217
    3. ' ,' → logprob: -8.260100364685059
    4. ',
' → logprob: -9.885100364685059
    5. ',c' → logprob: -11.885100364685059
    6. '   ' → logprob: -12.010100364685059
    7. ',K' → logprob: -12.885100364685059
    8. '<|end|>' → logprob: -13.260100364685059
    9. ',p' → logprob: -13.510100364685059
    10. ',int' → logprob: -13.510100364685059

Token 647: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0035259556025266647
    2. ',' → logprob: -6.753525733947754
    3. ',k' → logprob: -6.753525733947754
    4. ',c' → logprob: -7.253525733947754
    5. ' ' → logprob: -9.253525733947754
    6. 'kc' → logprob: -9.378525733947754
    7. '<|end|>' → logprob: -9.503525733947754
    8. ' kc' → logprob: -9.878525733947754
    9. '  ' → logprob: -10.128525733947754
    10. ' ,' → logprob: -10.378525733947754

Token 648: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1468578577041626
    2. ',p' → logprob: -2.021857738494873
    3. ',
' → logprob: -6.271857738494873
    4. ',k' → logprob: -6.646857738494873
    5. '),' → logprob: -7.521857738494873
    6. ' ,' → logprob: -9.146858215332031
    7. ')' → logprob: -9.271858215332031
    8. ',(' → logprob: -9.896858215332031
    9. ',P' → logprob: -10.021858215332031
    10. '   ' → logprob: -10.646858215332031

Token 649: 'awns' (ID: 115084)
  Prédit: 'awns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'awns' → logprob: -0.006426637060940266
    2. 'aw' → logprob: -5.506426811218262
    3. 'awn' → logprob: -7.256426811218262
    4. 'a' → logprob: -8.131426811218262
    5. 'aws' → logprob: -8.131426811218262
    6. ']' → logprob: -8.381426811218262
    7. ')' → logprob: -8.756426811218262
    8. 'w' → logprob: -9.006426811218262
    9. '   ' → logprob: -9.631426811218262
    10. 'tuple' → logprob: -9.756426811218262

Token 650: ' fro' (ID: 16956)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08545485883951187
    2. ')' → logprob: -3.0854549407958984
    3. '_positions' → logprob: -4.085454940795898
    4. ',f' → logprob: -4.460454940795898
    5. 'positions' → logprob: -6.335454940795898
    6. '),' → logprob: -6.835454940795898
    7. ',t' → logprob: -6.835454940795898
    8. ',p' → logprob: -6.960454940795898
    9. '_tuple' → logprob: -7.710454940795898
    10. ',
' → logprob: -7.835454940795898

Token 651: 'zens' (ID: 33107)
  Prédit: 'zens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zens' → logprob: -0.0015041481237858534
    2. 'zen' → logprob: -6.501503944396973
    3. 'zent' → logprob: -13.626503944396973
    4. 'zend' → logprob: -14.751503944396973
    5. 'm' → logprob: -16.25150489807129
    6. 'ze' → logprob: -17.37650489807129
    7. 'zon' → logprob: -17.50150489807129
    8. 'z' → logprob: -17.75150489807129
    9. 'zes' → logprob: -17.75150489807129
    10. '```' → logprob: -18.50150489807129

Token 652: 'et' (ID: 292)
  Prédit: 'zen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zen' → logprob: -0.7098846435546875
    2. 'zens' → logprob: -0.7098846435546875
    3. 'm' → logprob: -5.4598846435546875
    4. 'zent' → logprob: -5.8348846435546875
    5. '```' → logprob: -5.8348846435546875
    6. 'zend' → logprob: -6.0848846435546875
    7. 'st' → logprob: -6.5848846435546875
    8. 'en' → logprob: -6.7098846435546875
    9. 'z' → logprob: -8.084884643554688
    10. 'enz' → logprob: -8.459884643554688

Token 653: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10583273321390152
    2. ')' → logprob: -2.855832815170288
    3. ',
' → logprob: -4.980832576751709
    4. ',p' → logprob: -5.230832576751709
    5. '(p' → logprob: -5.480832576751709
    6. '({' → logprob: -5.730832576751709
    7. '),' → logprob: -5.730832576751709
    8. '(' → logprob: -5.730832576751709
    9. '(f' → logprob: -6.105832576751709
    10. 'fro' → logprob: -6.105832576751709

Token 654: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.8063059449195862
    2. 'opens' → logprob: -1.5563058853149414
    3. 'tuple' → logprob: -1.5563058853149414
    4. 'fro' → logprob: -2.3063058853149414
    5. ' tuple' → logprob: -4.431305885314941
    6. ')' → logprob: -5.056305885314941
    7. 'op' → logprob: -5.806305885314941
    8. '   ' → logprob: -6.181305885314941
    9. ' fro' → logprob: -6.181305885314941
    10. ' opens' → logprob: -6.431305885314941

Token 655: '1' (ID: 16)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.001688985270448029
    2. 's' → logprob: -7.0016889572143555
    3. '_spaces' → logprob: -8.001688957214355
    4. '_' → logprob: -8.376688957214355
    5. '_positions' → logprob: -8.751688957214355
    6. '   ' → logprob: -11.001688957214355
    7. ')' → logprob: -11.626688957214355
    8. ')_' → logprob: -12.001688957214355
    9. '_square' → logprob: -12.876688957214355
    10. '_cells' → logprob: -13.001688957214355

Token 656: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.595575749874115
    2. '_positions' → logprob: -0.970575749874115
    3. '_pos' → logprob: -2.8455758094787598
    4. ')' → logprob: -5.34557580947876
    5. ' ,' → logprob: -6.22057580947876
    6. '_coords' → logprob: -6.47057580947876
    7. ',pos' → logprob: -6.84557580947876
    8. '_position' → logprob: -7.97057580947876
    9. 's' → logprob: -8.220575332641602
    10. '),' → logprob: -8.345575332641602

Token 657: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.12702858448028564
    2. ' open' → logprob: -2.127028465270996
    3. '(open' → logprob: -9.877028465270996
    4. '	open' → logprob: -10.877028465270996
    5. ')' → logprob: -11.502028465270996
    6. '_open' → logprob: -11.627028465270996
    7. 'op' → logprob: -12.627028465270996
    8. '   ' → logprob: -13.502028465270996
    9. ' ' → logprob: -13.627028465270996
    10. 'openh' → logprob: -13.752028465270996

Token 658: '2' (ID: 17)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.5864630341529846
    2. '1' → logprob: -1.0864629745483398
    3. ')' → logprob: -2.96146297454834
    4. '_positions' → logprob: -3.96146297454834
    5. '_' → logprob: -4.08646297454834
    6. 's' → logprob: -4.83646297454834
    7. '_square' → logprob: -5.83646297454834
    8. '_spaces' → logprob: -6.08646297454834
    9. ')_' → logprob: -7.08646297454834
    10. '_sq' → logprob: -7.21146297454834

Token 659: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009371895575895905
    2. ',' → logprob: -7.125936985015869
    3. ')=' → logprob: -10.875937461853027
    4. '),' → logprob: -11.000937461853027
    5. ' )' → logprob: -11.125937461853027
    6. '   ' → logprob: -11.125937461853027
    7. ',)' → logprob: -11.250937461853027
    8. ')
' → logprob: -11.375937461853027
    9. ')}' → logprob: -11.625937461853027
    10. '))' → logprob: -12.250937461853027

Token 660: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0195977687835693
    2. '   ' → logprob: -1.2695977687835693
    3. ':' → logprob: -1.6445977687835693
    4. ',' → logprob: -2.0195977687835693
    5. '):' → logprob: -4.394598007202148
    6. ' =' → logprob: -5.019598007202148
    7. '=' → logprob: -5.644598007202148
    8. '_' → logprob: -6.644598007202148
    9. '
' → logprob: -6.644598007202148
    10. '(' → logprob: -7.019598007202148

Token 661: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9607301950454712
    2. ',' → logprob: -1.0857301950454712
    3. ')' → logprob: -1.5857301950454712
    4. '   ' → logprob: -3.5857300758361816
    5. ' =' → logprob: -4.585730075836182
    6. '=' → logprob: -5.210730075836182
    7. 'def' → logprob: -5.335730075836182
    8. '
' → logprob: -5.460730075836182
    9. ',
' → logprob: -5.710730075836182
    10. '(' → logprob: -5.835730075836182

Token 662: ' where' (ID: 1919)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5289868116378784
    2. ' =' → logprob: -1.7789868116378784
    3. ',' → logprob: -2.278986930847168
    4. '=' → logprob: -2.903986930847168
    5. ')' → logprob: -3.028986930847168
    6. '   ' → logprob: -4.653986930847168
    7. '(' → logprob: -4.778986930847168
    8. 'def' → logprob: -5.278986930847168
    9. ' (' → logprob: -5.778986930847168
    10. ' ' → logprob: -6.653986930847168

Token 663: ' paw' (ID: 71961)
  Prédit: ' open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' open' → logprob: -0.5287286043167114
    2. 'open' → logprob: -0.9037286043167114
    3. '(open' → logprob: -5.778728485107422
    4. ' (' → logprob: -7.028728485107422
    5. '(' → logprob: -7.653728485107422
    6. ')' → logprob: -8.403728485107422
    7. '_open' → logprob: -8.653728485107422
    8. '	open' → logprob: -9.153728485107422
    9. '<|end|>' → logprob: -9.778728485107422
    10. '(
' → logprob: -9.903728485107422

Token 664: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.05615626275539398
    2. 'n' → logprob: -2.9311561584472656
    3. 's' → logprob: -7.431156158447266
    4. ')' → logprob: -8.431156158447266
    5. '   ' → logprob: -8.681156158447266
    6. 'nts' → logprob: -9.681156158447266
    7. ',' → logprob: -10.056156158447266
    8. '_ns' → logprob: -10.681156158447266
    9. '	ns' → logprob: -11.056156158447266
    10. '[' → logprob: -11.431156158447266

Token 665: ' are' (ID: 553)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -1.0187016725540161
    2. ')' → logprob: -1.6437016725540161
    3. '_f' → logprob: -1.7687016725540161
    4. ' =' → logprob: -2.3937015533447266
    5. '=' → logprob: -3.2687015533447266
    6. 'fro' → logprob: -3.3937015533447266
    7. ' are' → logprob: -3.6437015533447266
    8. '<|end|>' → logprob: -3.7687015533447266
    9. '=set' → logprob: -3.8937015533447266
    10. ',' → logprob: -4.893701553344727

Token 666: ' stored' (ID: 16240)
  Prédit: ' fro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fro' → logprob: -0.3869265615940094
    2. 'fro' → logprob: -1.136926531791687
    3. ' frozen' → logprob: -10.761926651000977
    4. ')' → logprob: -11.386926651000977
    5. ' ' → logprob: -11.886926651000977
    6. 'f' → logprob: -12.386926651000977
    7. ' a' → logprob: -13.136926651000977
    8. '   ' → logprob: -13.136926651000977
    9. '```' → logprob: -13.886926651000977
    10. '(f' → logprob: -14.386926651000977

Token 667: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.44728562235832214
    2. 'as' → logprob: -1.6972856521606445
    3. ',' → logprob: -2.9472856521606445
    4. 'fro' → logprob: -3.1972856521606445
    5. ')' → logprob: -3.5722856521606445
    6. '=' → logprob: -3.9472856521606445
    7. ' fro' → logprob: -4.9472856521606445
    8. ' in' → logprob: -5.4472856521606445
    9. ',f' → logprob: -5.8222856521606445
    10. ',
' → logprob: -5.9472856521606445

Token 668: ' fro' (ID: 16956)
  Prédit: 'fro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fro' → logprob: -0.008941780775785446
    2. ' fro' → logprob: -5.133941650390625
    3. 'a' → logprob: -6.008941650390625
    4. 'tuple' → logprob: -7.883941650390625
    5. ' a' → logprob: -9.258941650390625
    6. ' tuple' → logprob: -10.258941650390625
    7. 'f' → logprob: -10.883941650390625
    8. 'sorted' → logprob: -12.633941650390625
    9. '(f' → logprob: -12.633941650390625
    10. ' tuples' → logprob: -12.758941650390625

Token 669: 'zens' (ID: 33107)
  Prédit: 'zens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zens' → logprob: -8.53050296427682e-05
    2. 'zen' → logprob: -9.62508487701416
    3. 'zes' → logprob: -10.87508487701416
    4. 'zent' → logprob: -15.75008487701416
    5. 'z' → logprob: -16.875085830688477
    6. 'ze' → logprob: -17.500085830688477
    7. 'ens' → logprob: -17.875085830688477
    8. '```' → logprob: -18.125085830688477
    9. 'zs' → logprob: -18.375085830688477
    10. 'enz' → logprob: -18.375085830688477

Token 670: 'et' (ID: 292)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.2326275259256363
    2. 'et' → logprob: -1.607627511024475
    3. 'zen' → logprob: -6.3576273918151855
    4. 'es' → logprob: -6.4826273918151855
    5. '```' → logprob: -6.6076273918151855
    6. 'zens' → logprob: -7.3576273918151855
    7. 't' → logprob: -7.4826273918151855
    8. 's' → logprob: -7.8576273918151855
    9. 'ze' → logprob: -8.857627868652344
    10. 'e' → logprob: -9.232627868652344

Token 671: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8674806356430054
    2. '(' → logprob: -1.6174806356430054
    3. ')' → logprob: -1.7424806356430054
    4. '<|end|>' → logprob: -2.117480754852295
    5. '   ' → logprob: -3.617480754852295
    6. '(
' → logprob: -3.742480754852295
    7. ',
' → logprob: -4.742480754852295
    8. '(p' → logprob: -4.742480754852295
    9. '<|end|>' → logprob: -5.742480754852295
    10. ',p' → logprob: -5.992480754852295

Token 672: ' positions' (ID: 15897)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.42793840169906616
    2. '(p' → logprob: -1.552938461303711
    3. 'positions' → logprob: -2.427938461303711
    4. ' tuples' → logprob: -3.927938461303711
    5. 'coordinates' → logprob: -4.552938461303711
    6. '(r' → logprob: -5.427938461303711
    7. '(' → logprob: -5.677938461303711
    8. 'pawn' → logprob: -6.177938461303711
    9. ')' → logprob: -6.427938461303711
    10. 'paw' → logprob: -6.927938461303711

Token 673: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7050699591636658
    2. ')' → logprob: -0.9550699591636658
    3. '   ' → logprob: -2.3300700187683105
    4. '(' → logprob: -5.0800700187683105
    5. '<|end|>' → logprob: -5.0800700187683105
    6. ',
' → logprob: -5.7050700187683105
    7. '<|end|>' → logprob: -6.4550700187683105
    8. ' )' → logprob: -7.0800700187683105
    9. ' ' → logprob: -7.4550700187683105
    10. '(
' → logprob: -7.5800700187683105

Token 674: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29555344581604004
    2. '<|end|>' → logprob: -2.17055344581604
    3. ' )' → logprob: -2.54555344581604
    4. ' (' → logprob: -4.045553207397461
    5. '(' → logprob: -4.420553207397461
    6. '   ' → logprob: -4.545553207397461
    7. ''' → logprob: -5.295553207397461
    8. ' ' → logprob: -5.920553207397461
    9. 'open' → logprob: -6.045553207397461
    10. ' 
' → logprob: -6.045553207397461

Token 675: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6484647989273071
    2. '<|end|>' → logprob: -2.0234646797180176
    3. '   ' → logprob: -2.3984646797180176
    4. '    ' → logprob: -2.6484646797180176
    5. ' )' → logprob: -2.8984646797180176
    6. ' ' → logprob: -3.7734646797180176
    7. '(' → logprob: -4.023464679718018
    8. ',' → logprob: -4.023464679718018
    9. ' open' → logprob: -4.148464679718018
    10. ' (' → logprob: -4.648464679718018

Token 676: ' open' (ID: 2494)
  Prédit: ' open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' open' → logprob: -0.609622597694397
    2. 'open' → logprob: -1.859622597694397
    3. ' (' → logprob: -2.3596224784851074
    4. '(' → logprob: -2.3596224784851074
    5. ')' → logprob: -3.2346224784851074
    6. ',' → logprob: -4.234622478485107
    7. '(open' → logprob: -4.484622478485107
    8. '   ' → logprob: -4.484622478485107
    9. ' ' → logprob: -4.859622478485107
    10. '(
' → logprob: -4.984622478485107

Token 677: ' squares' (ID: 57269)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17324911057949066
    2. '_s' → logprob: -1.9232491254806519
    3. '_' → logprob: -4.548249244689941
    4. '_positions' → logprob: -6.673249244689941
    5. 's' → logprob: -7.298249244689941
    6. '_spaces' → logprob: -8.423249244689941
    7. ')' → logprob: -10.173249244689941
    8. '_square' → logprob: -10.548249244689941
    9. '_sq' → logprob: -10.548249244689941
    10. ')_' → logprob: -10.798249244689941

Token 678: ' as' (ID: 472)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.8883063793182373
    2. ',' → logprob: -1.2633063793182373
    3. ' =' → logprob: -2.2633063793182373
    4. '=' → logprob: -2.2633063793182373
    5. '<|end|>' → logprob: -2.7633063793182373
    6. ')' → logprob: -4.388306617736816
    7. '_positions' → logprob: -5.138306617736816
    8. 'are' → logprob: -5.388306617736816
    9. '<|end|>' → logprob: -5.638306617736816
    10. '_are' → logprob: -6.638306617736816

Token 679: ' a' (ID: 261)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.32268092036247253
    2. '(open' → logprob: -2.197680950164795
    3. '(' → logprob: -2.697680950164795
    4. 'tuple' → logprob: -4.072680950164795
    5. '(r' → logprob: -4.072680950164795
    6. '(tuple' → logprob: -4.072680950164795
    7. 'a' → logprob: -4.572680950164795
    8. 'open' → logprob: -4.822680950164795
    9. ' tuple' → logprob: -5.072680950164795
    10. 'two' → logprob: -5.322680950164795

Token 680: ' sorted' (ID: 20099)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.4868020713329315
    2. '((' → logprob: -1.861802101135254
    3. '(tuple' → logprob: -2.111802101135254
    4. ' tuple' → logprob: -3.111802101135254
    5. '(' → logprob: -3.236802101135254
    6. '(sorted' → logprob: -4.611802101135254
    7. 'sorted' → logprob: -5.236802101135254
    8. '(
' → logprob: -5.361802101135254
    9. '(r' → logprob: -6.861802101135254
    10. '   ' → logprob: -6.986802101135254

Token 681: ' tuple' (ID: 31311)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.49803948402404785
    2. '(' → logprob: -1.2480394840240479
    3. 'tuple' → logprob: -2.498039484024048
    4. '(
' → logprob: -4.248039245605469
    5. '(tuple' → logprob: -4.998039245605469
    6. ' tuple' → logprob: -6.748039245605469
    7. ' ((' → logprob: -8.623039245605469
    8. ' (' → logprob: -8.623039245605469
    9. '(('' → logprob: -9.998039245605469
    10. '(open' → logprob: -9.998039245605469

Token 682: ' ((' (ID: 3536)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34967702627182007
    2. ',' → logprob: -1.7246770858764648
    3. '(
' → logprob: -3.099677085876465
    4. ' (' → logprob: -3.224677085876465
    5. ')' → logprob: -4.724677085876465
    6. '   ' → logprob: -5.474677085876465
    7. '_' → logprob: -5.474677085876465
    8. '((' → logprob: -5.474677085876465
    9. '=' → logprob: -5.974677085876465
    10. '[' → logprob: -6.724677085876465

Token 683: 'r' (ID: 81)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.45836248993873596
    2. 'r' → logprob: -1.2083624601364136
    3. '(open' → logprob: -3.833362579345703
    4. ')' → logprob: -4.208362579345703
    5. '0' → logprob: -5.083362579345703
    6. 'op' → logprob: -5.333362579345703
    7. '   ' → logprob: -5.458362579345703
    8. 'o' → logprob: -5.708362579345703
    9. 'min' → logprob: -6.083362579345703
    10. '(' → logprob: -6.208362579345703

Token 684: '1' (ID: 16)
  Prédit: ',c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.410455584526062
    2. ',' → logprob: -1.535455584526062
    3. ',k' → logprob: -2.1604557037353516
    4. '1' → logprob: -5.910455703735352
    5. ' ,' → logprob: -6.160455703735352
    6. 'c' → logprob: -7.785455703735352
    7. ',p' → logprob: -8.660455703735352
    8. ',o' → logprob: -8.660455703735352
    9. ',s' → logprob: -9.160455703735352
    10. '),' → logprob: -9.660455703735352

Token 685: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.16150812804698944
    2. ',' → logprob: -1.9115080833435059
    3. ' ,' → logprob: -6.786508083343506
    4. ',k' → logprob: -10.161508560180664
    5. ',
' → logprob: -10.411508560180664
    6. 'c' → logprob: -10.411508560180664
    7. ',s' → logprob: -11.411508560180664
    8. ',n' → logprob: -11.911508560180664
    9. '),' → logprob: -12.036508560180664
    10. '1' → logprob: -12.161508560180664

Token 686: '1' (ID: 16)
  Prédit: '),('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.35233956575393677
    2. '),' → logprob: -1.227339506149292
    3. '1' → logprob: -5.727339744567871
    4. '),
' → logprob: -8.227339744567871
    5. ')' → logprob: -8.352339744567871
    6. 'r' → logprob: -9.477339744567871
    7. ',' → logprob: -10.602339744567871
    8. ',r' → logprob: -11.352339744567871
    9. '),

' → logprob: -12.727339744567871
    10. '2' → logprob: -12.852339744567871

Token 687: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.3797834515571594
    2. '),' → logprob: -1.2547833919525146
    3. ',' → logprob: -3.5047833919525146
    4. '),
' → logprob: -7.754783630371094
    5. ')' → logprob: -9.004783630371094
    6. ',),' → logprob: -9.254783630371094
    7. ',
' → logprob: -9.754783630371094
    8. ',r' → logprob: -10.754783630371094
    9. ',(' → logprob: -11.004783630371094
    10. '   ' → logprob: -11.504783630371094

Token 688: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -6.704273118884885e-07
    2. ' r' → logprob: -15.125000953674316
    3. '
' → logprob: -15.750000953674316
    4. '0' → logprob: -16.5
    5. ',r' → logprob: -17.0
    6. ',' → logprob: -17.25
    7. ')' → logprob: -17.75
    8. '(r' → logprob: -18.0
    9. '),' → logprob: -18.5
    10. '_r' → logprob: -18.75

Token 689: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02901926264166832
    2. '1' → logprob: -3.779019355773926
    3. ',' → logprob: -5.279019355773926
    4. ',r' → logprob: -8.029019355773926
    5. '0' → logprob: -8.654019355773926
    6. 'r' → logprob: -9.029019355773926
    7. '```' → logprob: -11.529019355773926
    8. ')' → logprob: -12.029019355773926
    9. ',
' → logprob: -12.029019355773926
    10. '   ' → logprob: -12.154019355773926

Token 690: ',c' (ID: 22261)
  Prédit: ',r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.49877914786338806
    2. '),(' → logprob: -0.9987791776657104
    3. ')' → logprob: -4.498779296875
    4. '),' → logprob: -4.998779296875
    5. ',' → logprob: -5.248779296875
    6. 'r' → logprob: -7.748779296875
    7. ',c' → logprob: -8.248779296875
    8. '))' → logprob: -9.123779296875
    9. '1' → logprob: -9.123779296875
    10. '),
' → logprob: -9.498779296875

Token 691: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.061501916497945786
    2. ')' → logprob: -2.936501979827881
    3. '2' → logprob: -5.311501979827881
    4. ',' → logprob: -7.311501979827881
    5. '),' → logprob: -7.436501979827881
    6. '))' → logprob: -8.686501502990723
    7. '),(' → logprob: -8.686501502990723
    8. '```' → logprob: -10.561501502990723
    9. '),
' → logprob: -12.061501502990723
    10. ')
' → logprob: -12.061501502990723

Token 692: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06143106520175934
    2. ')' → logprob: -3.0614311695098877
    3. '),' → logprob: -4.436430931091309
    4. ')),' → logprob: -7.561430931091309
    5. '),(' → logprob: -8.311430931091309
    6. ')))' → logprob: -9.186430931091309
    7. '))
' → logprob: -10.936430931091309
    8. ')}' → logprob: -11.936430931091309
    9. '),
' → logprob: -12.186430931091309
    10. ')
' → logprob: -12.561430931091309

Token 693: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10298142582178116
    2. '   ' → logprob: -3.2279813289642334
    3. ')' → logprob: -3.6029813289642334
    4. ':
' → logprob: -4.8529815673828125
    5. '):' → logprob: -4.9779815673828125
    6. ',' → logprob: -5.1029815673828125
    7. 'def' → logprob: -5.7279815673828125
    8. '
' → logprob: -6.3529815673828125
    9. '  
' → logprob: -6.6029815673828125
    10. '    
' → logprob: -7.3529815673828125

Token 694: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.752695620059967
    2. '   ' → logprob: -1.7526955604553223
    3. ')' → logprob: -1.8776955604553223
    4. ',' → logprob: -3.2526955604553223
    5. '(' → logprob: -3.2526955604553223
    6. 'def' → logprob: -3.6276955604553223
    7. '  
' → logprob: -4.127695560455322
    8. 'state' → logprob: -4.127695560455322
    9. ' 
' → logprob: -4.377695560455322
    10. ' ' → logprob: -4.627695560455322

Token 695: ' Since' (ID: 12265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9878957271575928
    2. 'def' → logprob: -1.2378957271575928
    3. 'visited' → logprob: -2.1128957271575928
    4. 'state' → logprob: -2.7378957271575928
    5. '
' → logprob: -3.2378957271575928
    6. '#' → logprob: -4.112895965576172
    7. 'initial' → logprob: -4.237895965576172
    8. 'queue' → logprob: -4.237895965576172
    9. 'return' → logprob: -4.362895965576172
    10. '    
' → logprob: -4.862895965576172

Token 696: ' open' (ID: 2494)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -1.393450140953064
    2. 'len' → logprob: -1.893450140953064
    3. ' (' → logprob: -2.2684502601623535
    4. '(' → logprob: -2.3934502601623535
    5. 'kr' → logprob: -2.8934502601623535
    6. ' kr' → logprob: -3.2684502601623535
    7. 'king' → logprob: -3.6434502601623535
    8. ' not' → logprob: -3.6434502601623535
    9. ' the' → logprob: -3.6434502601623535
    10. 'H' → logprob: -3.6434502601623535

Token 697: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.08344625681638718
    2. 's' → logprob: -3.4584462642669678
    3. '_' → logprob: -4.083446025848389
    4. ')' → logprob: -4.333446025848389
    5. '1' → logprob: -4.583446025848389
    6. ' squares' → logprob: -5.583446025848389
    7. ')_' → logprob: -6.958446025848389
    8. '_spaces' → logprob: -7.083446025848389
    9. '_positions' → logprob: -7.333446025848389
    10. ' _' → logprob: -7.833446025848389

Token 698: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.5167809724807739
    2. 's' → logprob: -2.0167808532714844
    3. '_positions' → logprob: -2.7667808532714844
    4. 'positions' → logprob: -3.1417808532714844
    5. ' positions' → logprob: -3.3917808532714844
    6. 'are' → logprob: -3.8917808532714844
    7. ',' → logprob: -4.016780853271484
    8. ' represent' → logprob: -4.141780853271484
    9. ' can' → logprob: -4.266780853271484
    10. '<|end|>' → logprob: -4.766780853271484

Token 699: ' always' (ID: 3324)
  Prédit: 'fixed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fixed' → logprob: -1.6946512460708618
    2. 'always' → logprob: -1.8196512460708618
    3. 'immutable' → logprob: -1.9446512460708618
    4. ' always' → logprob: -2.3196511268615723
    5. 'dynamic' → logprob: -2.6946511268615723
    6. 'two' → logprob: -2.9446511268615723
    7. ' dynamic' → logprob: -3.3196511268615723
    8. ' fixed' → logprob: -3.4446511268615723
    9. 'exact' → logprob: -3.8196511268615723
    10. ' exactly' → logprob: -4.194651126861572

Token 700: ' two' (ID: 1920)
  Prédit: ' two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -1.5145668983459473
    2. 'two' → logprob: -2.0145668983459473
    3. ' exactly' → logprob: -2.1395668983459473
    4. ' represented' → logprob: -2.8895668983459473
    5. ' guaranteed' → logprob: -3.0145668983459473
    6. 'adj' → logprob: -3.1395668983459473
    7. ' adjacent' → logprob: -3.1395668983459473
    8. ' at' → logprob: -3.7645668983459473
    9. ' always' → logprob: -3.7645668983459473
    10. ' distinct' → logprob: -3.8895668983459473

Token 701: ' distinct' (ID: 16913)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42798152565956116
    2. ')' → logprob: -2.0529816150665283
    3. 's' → logprob: -2.8029816150665283
    4. 'positions' → logprob: -3.1779816150665283
    5. '_positions' → logprob: -3.3029816150665283
    6. 'open' → logprob: -4.802981376647949
    7. '_s' → logprob: -4.802981376647949
    8. ' ,' → logprob: -4.927981376647949
    9. 'tokens' → logprob: -4.927981376647949
    10. '),' → logprob: -5.052981376647949

Token 702: ' cells' (ID: 11242)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -1.1193090677261353
    2. ',' → logprob: -1.3693090677261353
    3. ' cells' → logprob: -1.9943090677261353
    4. 'positions' → logprob: -2.7443089485168457
    5. ')' → logprob: -3.1193089485168457
    6. ' (' → logprob: -3.3693089485168457
    7. ' squares' → logprob: -3.6193089485168457
    8. 'cells' → logprob: -3.6193089485168457
    9. ' spaces' → logprob: -3.9943089485168457
    10. ' ,' → logprob: -4.119308948516846

Token 703: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04958195984363556
    2. ',
' → logprob: -3.674582004547119
    3. ':' → logprob: -4.674582004547119
    4. ')' → logprob: -4.799582004547119
    5. '   ' → logprob: -6.299582004547119
    6. ' and' → logprob: -7.049582004547119
    7. '),' → logprob: -7.674582004547119
    8. ' ,' → logprob: -8.049581527709961
    9. '):' → logprob: -8.049581527709961
    10. '#' → logprob: -8.424581527709961

Token 704: ' sort' (ID: 4506)
  Prédit: ' open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' open' → logprob: -0.36995729804039
    2. 'open' → logprob: -1.6199573278427124
    3. '   ' → logprob: -3.869957208633423
    4. ' state' → logprob: -4.119957447052002
    5. ' opens' → logprob: -4.119957447052002
    6. '#' → logprob: -4.369957447052002
    7. 'state' → logprob: -4.869957447052002
    8. ' #' → logprob: -5.119957447052002
    9. ' pass' → logprob: -5.244957447052002
    10. ' continue' → logprob: -5.744957447052002

Token 705: ' them' (ID: 1373)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.3801765739917755
    2. '_open' → logprob: -1.8801765441894531
    3. 'ed' → logprob: -2.755176544189453
    4. '(open' → logprob: -2.755176544189453
    5. 'd' → logprob: -4.880176544189453
    6. '_' → logprob: -4.880176544189453
    7. '_positions' → logprob: -5.255176544189453
    8. 's' → logprob: -6.005176544189453
    9. '=open' → logprob: -6.380176544189453
    10. '_pos' → logprob: -6.755176544189453

Token 706: ' to' (ID: 316)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.3908849060535431
    2. '_open' → logprob: -2.0158848762512207
    3. ' =' → logprob: -2.1408848762512207
    4. '   ' → logprob: -3.7658848762512207
    5. '(open' → logprob: -4.390884876251221
    6. '=' → logprob: -4.890884876251221
    7. '_sorted' → logprob: -5.765884876251221
    8. '((' → logprob: -5.890884876251221
    9. 'sorted' → logprob: -6.015884876251221
    10. '(
' → logprob: -6.140884876251221

Token 707: ' keep' (ID: 3357)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.93373042345047
    2. ' keep' → logprob: -1.9337303638458252
    3. ' tuple' → logprob: -2.433730363845825
    4. 'open' → logprob: -2.683730363845825
    5. ' get' → logprob: -2.808730363845825
    6. ' open' → logprob: -2.933730363845825
    7. ' (' → logprob: -3.308730363845825
    8. 'tuple' → logprob: -3.433730363845825
    9. ' maintain' → logprob: -3.808730363845825
    10. 'maint' → logprob: -4.183730602264404

Token 708: ' order' (ID: 2569)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.7753937244415283
    2. '((' → logprob: -0.9003937244415283
    3. '(' → logprob: -2.7753937244415283
    4. 'the' → logprob: -3.9003937244415283
    5. '(open' → logprob: -4.400393486022949
    6. 'them' → logprob: -4.400393486022949
    7. ' them' → logprob: -5.400393486022949
    8. ' open' → logprob: -5.525393486022949
    9. 'consistent' → logprob: -5.525393486022949
    10. '[(' → logprob: -6.025393486022949

Token 709: ' consistent' (ID: 20434)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.3797854781150818
    2. ' =' → logprob: -2.1297855377197266
    3. '_open' → logprob: -2.6297855377197266
    4. '   ' → logprob: -3.5047855377197266
    5. 'opens' → logprob: -3.8797855377197266
    6. '=' → logprob: -4.129785537719727
    7. '_' → logprob: -4.629785537719727
    8. ',' → logprob: -5.129785537719727
    9. '_op' → logprob: -5.254785537719727
    10. '(open' → logprob: -5.254785537719727

Token 710: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8972188830375671
    2. ',' → logprob: -1.272218942642212
    3. 'open' → logprob: -2.522218942642212
    4. ',
' → logprob: -2.772218942642212
    5. '
' → logprob: -2.772218942642212
    6. 'state' → logprob: -3.772218942642212
    7. ')' → logprob: -4.022218704223633
    8. '(open' → logprob: -4.897218704223633
    9. '(
' → logprob: -5.147218704223633
    10. '    
' → logprob: -5.147218704223633

Token 711: '   ' (ID: 271)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.4126097857952118
    2. '   ' → logprob: -1.6626098155975342
    3. '
' → logprob: -2.287609815597534
    4. '    
' → logprob: -4.412609577178955
    5. '  
' → logprob: -4.662609577178955
    6. ' 
' → logprob: -4.787609577178955
    7. 'def' → logprob: -5.662609577178955
    8. ' state' → logprob: -5.912609577178955
    9. ')' → logprob: -6.537609577178955
    10. '   
' → logprob: -6.537609577178955

Token 712: ' #' (ID: 1069)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.6796958446502686
    2. 'state' → logprob: -1.4296958446502686
    3. 'p' → logprob: -2.1796958446502686
    4. '
' → logprob: -3.0546958446502686
    5. '   ' → logprob: -3.1796958446502686
    6. 'opens' → logprob: -4.304696083068848
    7. 'pawn' → logprob: -4.304696083068848
    8. '    
' → logprob: -5.554696083068848
    9. '#' (adapté à ' #') → logprob: -5.679696083068848
    10. ' 
' → logprob: -6.054696083068848

Token 713: ' Pre' (ID: 4659)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -1.2397220134735107
    2. 'initial' → logprob: -1.4897220134735107
    3. 'visited' → logprob: -2.2397220134735107
    4. '   ' → logprob: -2.4897220134735107
    5. '#' → logprob: -2.6147220134735107
    6. 'def' → logprob: -2.7397220134735107
    7. 'open' → logprob: -2.9897220134735107
    8. 'start' → logprob: -2.9897220134735107
    9. 'king' → logprob: -3.6147220134735107
    10. '
' → logprob: -5.23972225189209

Token 714: 'processing' (ID: 41376)
  Prédit: 'vious'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vious' → logprob: -2.022968053817749
    2. 'd' → logprob: -2.147968053817749
    3. 'v' → logprob: -2.272968053817749
    4. 'open' → logprob: -2.397968053817749
    5. 's' → logprob: -2.522968053817749
    6. 'viously' → logprob: -2.647968053817749
    7. 'pare' → logprob: -2.772968053817749
    8. 'process' → logprob: -3.272968053817749
    9. 'compute' → logprob: -3.397968053817749
    10. 'served' → logprob: -3.522968053817749

Token 715: ':
' (ID: 734)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1795858144760132
    2. 'visited' → logprob: -1.5545858144760132
    3. 'pawn' → logprob: -2.4295859336853027
    4. ' #' → logprob: -2.6795859336853027
    5. 'open' → logprob: -3.1795859336853027
    6. ' obstacles' → logprob: -3.3045859336853027
    7. ' visited' → logprob: -3.3045859336853027
    8. ' king' → logprob: -3.6795859336853027
    9. 'occupied' → logprob: -4.054585933685303
    10. '   ' → logprob: -4.054585933685303

Token 716: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40629759430885315
    2. 'pawn' → logprob: -1.9062975645065308
    3. 'empty' → logprob: -3.5312976837158203
    4. 'all' → logprob: -4.15629768371582
    5. 'ob' → logprob: -4.28129768371582
    6. 'p' → logprob: -4.28129768371582
    7. ' obstacles' → logprob: -4.40629768371582
    8. '#' → logprob: -4.53129768371582
    9. 'blocked' → logprob: -4.65629768371582
    10. 'occupied' → logprob: -4.90629768371582

Token 717: ' #' (ID: 1069)
  Prédit: 'pawn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pawn' → logprob: -0.2818017601966858
    2. 'p' → logprob: -2.031801700592041
    3. 'all' → logprob: -3.781801700592041
    4. 'king' → logprob: -4.031801700592041
    5. 'open' → logprob: -4.406801700592041
    6. '#' (adapté à ' #') → logprob: -4.531801700592041
    7. 'occupied' → logprob: -5.031801700592041
    8. 'visited' → logprob: -5.156801700592041
    9. 'empty' → logprob: -5.156801700592041
    10. 'max' → logprob: -5.781801700592041

Token 718: ' Construct' (ID: 36230)
  Prédit: 'pawn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pawn' → logprob: -0.42682328820228577
    2. 'p' → logprob: -2.426823377609253
    3. 'all' → logprob: -3.051823377609253
    4. 'visited' → logprob: -3.301823377609253
    5. 'initial' → logprob: -3.426823377609253
    6. 'empty' → logprob: -3.551823377609253
    7. 'open' → logprob: -3.676823377609253
    8. '#' → logprob: -3.801823377609253
    9. 'king' → logprob: -4.176823139190674
    10. 'max' → logprob: -4.426823139190674

Token 719: ' a' (ID: 261)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -1.8070789575576782
    2. 'ob' → logprob: -2.0570788383483887
    3. 'adj' → logprob: -2.1820788383483887
    4. 'empty' → logprob: -2.6820788383483887
    5. 'all' → logprob: -2.8070788383483887
    6. 'grid' → logprob: -3.0570788383483887
    7. 'frame' → logprob: -3.0570788383483887
    8. 'initial' → logprob: -3.0570788383483887
    9. 'walls' → logprob: -3.6820788383483887
    10. '#' → logprob: -3.8070788383483887

Token 720: ' set' (ID: 920)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -1.4714747667312622
    2. 'grid' → logprob: -1.9714747667312622
    3. 'def' → logprob: -2.2214746475219727
    4. 'visited' → logprob: -2.4714746475219727
    5. ' grid' → logprob: -2.7214746475219727
    6. 'queue' → logprob: -2.9714746475219727
    7. 'walls' → logprob: -3.4714746475219727
    8. 'set' → logprob: -3.5964746475219727
    9. 'neighbors' → logprob: -3.5964746475219727
    10. 'wall' → logprob: -3.9714746475219727

Token 721: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.2174649238586426
    2. '(ob' → logprob: -1.4674649238586426
    3. '_ob' → logprob: -1.5924649238586426
    4. 'of' → logprob: -2.4674649238586426
    5. '   ' → logprob: -3.2174649238586426
    6. '_of' → logprob: -3.3424649238586426
    7. 'ob' → logprob: -3.5924649238586426
    8. ' obstacles' → logprob: -3.5924649238586426
    9. ' all' → logprob: -4.592464923858643
    10. 'all' → logprob: -4.592464923858643

Token 722: ' fixed' (ID: 13213)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.43302589654922485
    2. 'valid' → logprob: -2.05802583694458
    3. 'empty' → logprob: -3.43302583694458
    4. 'ob' → logprob: -3.43302583694458
    5. 'blocked' → logprob: -3.43302583694458
    6. 'free' → logprob: -3.93302583694458
    7. 'occupied' → logprob: -4.30802583694458
    8. 'walls' → logprob: -4.43302583694458
    9. 'cells' → logprob: -4.55802583694458
    10. 'possible' → logprob: -4.68302583694458

Token 723: ' obstacle' (ID: 57212)
  Prédit: ' obstacles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' obstacles' → logprob: -1.211383581161499
    2. '_positions' → logprob: -1.836383581161499
    3. '_ob' → logprob: -2.086383581161499
    4. 'cells' → logprob: -2.336383581161499
    5. '_cells' → logprob: -2.586383581161499
    6. 'ob' → logprob: -3.211383581161499
    7. 'positions' → logprob: -3.211383581161499
    8. ' positions' → logprob: -3.336383581161499
    9. ' cells' → logprob: -3.961383581161499
    10. 'open' → logprob: -4.211383819580078

Token 724: ' squares' (ID: 57269)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00033320096554234624
    2. '_positions' → logprob: -8.875332832336426
    3. '_cells' → logprob: -9.125332832336426
    4. 'cells' → logprob: -10.000332832336426
    5. 'positions' → logprob: -10.750332832336426
    6. ' cells' → logprob: -12.625332832336426
    7. ' s' → logprob: -12.875332832336426
    8. 'set' → logprob: -13.000332832336426
    9. '_s' → logprob: -13.000332832336426
    10. '_set' → logprob: -13.500332832336426

Token 725: ' for' (ID: 395)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.009605441242456436
    2. ' =' → logprob: -5.259605407714844
    3. ' obstacles' → logprob: -5.634605407714844
    4. '(ob' → logprob: -8.009605407714844
    5. '_ob' → logprob: -9.009605407714844
    6. '=' → logprob: -9.134605407714844
    7. '   ' → logprob: -9.259605407714844
    8. '	ob' → logprob: -10.384605407714844
    9. ' obstacle' → logprob: -10.634605407714844
    10. 'fixed' → logprob: -11.134605407714844

Token 726: ' quick' (ID: 4853)
  Prédit: 'fast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fast' → logprob: -0.7224166393280029
    2. ' quick' → logprob: -1.472416639328003
    3. ' fast' → logprob: -2.347416639328003
    4. 'quick' → logprob: -2.597416639328003
    5. ' O' → logprob: -2.972416639328003
    6. 'O' → logprob: -3.222416639328003
    7. ' faster' → logprob: -4.597416877746582
    8. ' lookup' → logprob: -5.222416877746582
    9. 'lookup' → logprob: -5.222416877746582
    10. 'f' → logprob: -6.847416877746582

Token 727: ' membership' (ID: 20190)
  Prédit: 'lookup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lookup' → logprob: -0.3991090953350067
    2. ' lookup' → logprob: -1.149109125137329
    3. '_lookup' → logprob: -5.64910888671875
    4. 'look' → logprob: -5.77410888671875
    5. 'access' → logprob: -6.02410888671875
    6. 'membership' → logprob: -6.39910888671875
    7. ' access' → logprob: -7.27410888671875
    8. ' membership' → logprob: -8.02410888671875
    9. ' look' → logprob: -8.52410888671875
    10. 'checking' → logprob: -9.14910888671875

Token 728: ' tests' (ID: 10742)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.008215012028813362
    2. ' obstacles' → logprob: -5.133214950561523
    3. '_ob' → logprob: -7.008214950561523
    4. '(ob' → logprob: -7.383214950561523
    5. '   ' → logprob: -8.008214950561523
    6. ' obstacle' → logprob: -9.008214950561523
    7. ' =' → logprob: -9.258214950561523
    8. '	ob' → logprob: -10.133214950561523
    9. ':' → logprob: -10.758214950561523
    10. '=' → logprob: -10.883214950561523

Token 729: '

' (ID: 279)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.005983543116599321
    2. ' obstacles' → logprob: -5.505983352661133
    3. 'fixed' → logprob: -7.005983352661133
    4. '_ob' → logprob: -8.255983352661133
    5. ' obstacle' → logprob: -8.380983352661133
    6. '   ' → logprob: -8.505983352661133
    7. '(ob' → logprob: -9.755983352661133
    8. '#' → logprob: -10.130983352661133
    9. '	ob' → logprob: -10.130983352661133
    10. '```' → logprob: -10.630983352661133

Token 730: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7027308940887451
    2. 'visited' → logprob: -1.2027308940887451
    3. '    
' → logprob: -2.952730894088745
    4. 'fixed' → logprob: -3.327730894088745
    5. '#' → logprob: -3.327730894088745
    6. '
' → logprob: -3.702730894088745
    7. 'ob' → logprob: -3.952730894088745
    8. ' obstacles' → logprob: -4.827731132507324
    9. ' visited' → logprob: -5.452731132507324
    10. 'state' → logprob: -5.952731132507324

Token 731: ' obstacles' (ID: 46430)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.22963015735149384
    2. '   ' → logprob: -2.7296302318573
    3. 'ob' → logprob: -2.8546302318573
    4. '#' → logprob: -3.7296302318573
    5. 'fixed' → logprob: -3.7296302318573
    6. '    
' → logprob: -4.979629993438721
    7. '
' → logprob: -4.979629993438721
    8. ' visited' → logprob: -5.604629993438721
    9. 'occupied' → logprob: -5.604629993438721
    10. 'state' → logprob: -5.979629993438721

Token 732: '_set' (ID: 5451)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1758660227060318
    2. '.add' → logprob: -2.55086612701416
    3. '=' → logprob: -2.80086612701416
    4. '<|end|>' → logprob: -4.30086612701416
    5. ')' → logprob: -5.80086612701416
    6. '.update' → logprob: -6.92586612701416
    7. '<|end|>' → logprob: -6.92586612701416
    8. '.clear' → logprob: -7.55086612701416
    9. '.' → logprob: -7.55086612701416
    10. ' |=' → logprob: -7.80086612701416

Token 733: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760099291801453
    2. '=' → logprob: -0.8260099291801453
    3. ')' → logprob: -10.326009750366211
    4. '=set' → logprob: -11.451009750366211
    5. '.add' → logprob: -11.951009750366211
    6. ' =
' → logprob: -11.951009750366211
    7. '.' → logprob: -12.451009750366211
    8. ' =
' → logprob: -12.576009750366211
    9. ' =)' → logprob: -13.951009750366211
    10. ')=' → logprob: -13.951009750366211

Token 734: ' obstacles' (ID: 46430)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.0016820825403556228
    2. 'set' → logprob: -7.126682281494141
    3. 'fro' → logprob: -7.126682281494141
    4. ' obstacles' → logprob: -9.62668228149414
    5. '(ob' → logprob: -13.00168228149414
    6. ' set' → logprob: -13.75168228149414
    7. '	ob' → logprob: -14.00168228149414
    8. ' fro' → logprob: -14.37668228149414
    9. 'Ob' → logprob: -14.37668228149414
    10. 'obs' → logprob: -14.50168228149414

Token 735: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 736: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27421343326568604
    2. '
' → logprob: -1.649213433265686
    3. '    
' → logprob: -4.0242133140563965
    4. 'def' → logprob: -4.2742133140563965
    5. '<|end|>' → logprob: -5.1492133140563965
    6. ')' → logprob: -6.0242133140563965
    7. ',' → logprob: -6.6492133140563965
    8. '#' → logprob: -6.8992133140563965
    9. 'state' → logprob: -7.2742133140563965
    10. ' 
' → logprob: -7.3992133140563965

Token 737: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5031096935272217
    2. '   ' → logprob: -1.6281096935272217
    3. 'def' → logprob: -2.2531096935272217
    4. 'state' → logprob: -3.0031096935272217
    5. '#' (adapté à ' #') → logprob: -4.253109931945801
    6. 'queue' → logprob: -4.753109931945801
    7. '
' → logprob: -5.253109931945801
    8. ' visited' → logprob: -5.628109931945801
    9. 'states' → logprob: -5.628109931945801
    10. '    
' → logprob: -6.253109931945801

Token 738: ' The' (ID: 623)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.39193078875541687
    2. 'from' → logprob: -1.8919308185577393
    3. 'def' → logprob: -2.2669308185577393
    4. 'queue' → logprob: -3.3919308185577393
    5. '#' → logprob: -4.51693058013916
    6. 'initial' → logprob: -4.64193058013916
    7. '   ' → logprob: -4.89193058013916
    8. 'start' → logprob: -5.39193058013916
    9. 'import' → logprob: -7.39193058013916
    10. 'return' → logprob: -7.64193058013916

Token 739: ' upper' (ID: 13057)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7909559011459351
    2. 'visited' → logprob: -1.915955901145935
    3. 'queue' → logprob: -2.7909560203552246
    4. ' initial' → logprob: -3.0409560203552246
    5. ' def' → logprob: -3.0409560203552246
    6. 'initial' → logprob: -3.1659560203552246
    7. 'from' → logprob: -3.2909560203552246
    8. ' queue' → logprob: -3.5409560203552246
    9. 'start' → logprob: -3.7909560203552246
    10. ' visited' → logprob: -3.7909560203552246

Token 740: '-left' (ID: 17007)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.9089699387550354
    2. 'left' → logprob: -1.0339698791503906
    3. '_left' → logprob: -2.7839698791503906
    4. '_' → logprob: -2.9089698791503906
    5. ' bound' → logprob: -3.0339698791503906
    6. 'bound' → logprob: -3.6589698791503906
    7. '_bound' → logprob: -4.033969879150391
    8. '-left' → logprob: -4.908969879150391
    9. ' _' → logprob: -5.033969879150391
    10. ' bounds' → logprob: -5.408969879150391

Token 741: ' corner' (ID: 14194)
  Prédit: ' cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cell' → logprob: -0.40699824690818787
    2. 'cell' → logprob: -2.0319981575012207
    3. ' king' → logprob: -2.5319981575012207
    4. 'corner' → logprob: -3.2819981575012207
    5. '_cell' → logprob: -3.4069981575012207
    6. ' corner' → logprob: -3.4069981575012207
    7. '_corner' → logprob: -5.656998157501221
    8. ' ' → logprob: -5.781998157501221
    9. '_cells' → logprob: -6.406998157501221
    10. ' cells' → logprob: -6.531998157501221

Token 742: ' position' (ID: 4010)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.963379979133606
    2. ' =' → logprob: -1.838379979133606
    3. '<|end|>' → logprob: -1.838379979133606
    4. 'of' → logprob: -1.963379979133606
    5. '=' → logprob: -3.3383798599243164
    6. ')' → logprob: -3.3383798599243164
    7. ',' → logprob: -4.088379859924316
    8. '#' → logprob: -4.463379859924316
    9. 'state' → logprob: -4.463379859924316
    10. 'position' → logprob: -4.963379859924316

Token 743: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6398807764053345
    2. ' of' → logprob: -1.6398807764053345
    3. 'of' → logprob: -2.014880657196045
    4. '=' → logprob: -2.889880657196045
    5. 'king' → logprob: -4.014880657196045
    6. 'state' → logprob: -4.139880657196045
    7. ',' → logprob: -4.264880657196045
    8. 's' → logprob: -4.764880657196045
    9. 'kr' → logprob: -5.139880657196045
    10. ')' → logprob: -5.264880657196045

Token 744: ' the' (ID: 290)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.5891582369804382
    2. ' king' → logprob: -1.589158296585083
    3. 'the' → logprob: -1.589158296585083
    4. ' the' → logprob: -3.339158296585083
    5. 'def' → logprob: -7.464158058166504
    6. ' grid' → logprob: -8.214158058166504
    7. 'grid' → logprob: -8.339158058166504
    8. '#' → logprob: -9.339158058166504
    9. '   ' → logprob: -9.964158058166504
    10. ' ' → logprob: -10.464158058166504

Token 745: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.16095833480358124
    2. ' king' → logprob: -2.1609582901000977
    3. 'grid' → logprob: -3.7859582901000977
    4. ' grid' → logprob: -5.285958290100098
    5. 'board' → logprob: -5.660958290100098
    6. 'state' → logprob: -7.160958290100098
    7. 'p' → logprob: -8.160958290100098
    8. 'initial' → logprob: -8.285958290100098
    9. 'frame' → logprob: -8.535958290100098
    10. 'def' → logprob: -9.035958290100098

Token 746: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 747: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012115664780139923
    2. ' (' → logprob: -4.512115478515625
    3. 'kr' → logprob: -6.887115478515625
    4. ' kr' → logprob: -10.637115478515625
    5. '   ' → logprob: -11.887115478515625
    6. '0' → logprob: -12.387115478515625
    7. '(k' → logprob: -12.512115478515625
    8. '[' → logprob: -13.637115478515625
    9. ' ' → logprob: -14.012115478515625
    10. '  ' → logprob: -14.137115478515625

Token 748: '0' (ID: 15)
  Prédit: 'kr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kr' → logprob: -0.0015730679733678699
    2. ' kr' → logprob: -7.001573085784912
    3. '0' → logprob: -7.501573085784912
    4. '   ' → logprob: -10.376572608947754
    5. ')' → logprob: -10.501572608947754
    6. ' ' → logprob: -10.876572608947754
    7. '(' → logprob: -11.876572608947754
    8. '  ' → logprob: -11.876572608947754
    9. '
' → logprob: -12.626572608947754
    10. 'r' → logprob: -13.376572608947754

Token 749: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004989399458281696
    2. ')' → logprob: -8.25049877166748
    3. ' ,' → logprob: -8.75049877166748
    4. '0' → logprob: -10.25049877166748
    5. ',)' → logprob: -11.62549877166748
    6. ' ' → logprob: -11.87549877166748
    7. ',
' → logprob: -12.00049877166748
    8. '<|end|>' → logprob: -12.37549877166748
    9. '   ' → logprob: -12.62549877166748
    10. '),' → logprob: -13.00049877166748

Token 750: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016504127415828407
    2. ' ' → logprob: -8.750164985656738
    3. ')' → logprob: -12.250164985656738
    4. ',' → logprob: -13.750164985656738
    5. '
' → logprob: -14.625164985656738
    6. '1' → logprob: -16.250165939331055
    7. ' 
' → logprob: -17.125165939331055
    8. '<|end|>' → logprob: -17.250165939331055
    9. '  ' → logprob: -17.375165939331055
    10. ')
' → logprob: -18.250165939331055

Token 751: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002100965939462185
    2. ')
' → logprob: -9.37520980834961
    3. '),' → logprob: -9.62520980834961
    4. ',' → logprob: -10.75020980834961
    5. '   ' → logprob: -11.25020980834961
    6. ' )' → logprob: -11.87520980834961
    7. ').' → logprob: -12.00020980834961
    8. '<|end|>' → logprob: -13.00020980834961
    9. ')

' → logprob: -13.50020980834961
    10. ')}' → logprob: -13.62520980834961

Token 752: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 753: ' solved' (ID: 47244)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.4244388341903687
    2. ' now' → logprob: -1.7994388341903687
    3. ' the' → logprob: -2.049438953399658
    4. 'kr' → logprob: -2.674438953399658
    5. 'initial' → logprob: -2.924438953399658
    6. 'king' → logprob: -3.049438953399658
    7. 'now' → logprob: -3.299438953399658
    8. 'r' → logprob: -3.424438953399658
    9. ' kr' → logprob: -3.549438953399658
    10. 'H' → logprob: -3.799438953399658

Token 754: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.766381025314331
    2. ')' → logprob: -1.641381025314331
    3. '_' → logprob: -1.891381025314331
    4. '_state' → logprob: -2.391381025314331
    5. '<|end|>' → logprob: -2.766381025314331
    6. ' state' → logprob: -4.26638126373291
    7. 'position' → logprob: -5.14138126373291
    8. '_p' → logprob: -5.89138126373291
    9. '_position' → logprob: -6.26638126373291
    10. '_states' → logprob: -6.39138126373291

Token 755: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15474480390548706
    2. '<|end|>' → logprob: -2.279744863510132
    3. '.' → logprob: -4.404744625091553
    4. ',' → logprob: -4.779744625091553
    5. ')' → logprob: -5.154744625091553
    6. '<|end|>' → logprob: -5.529744625091553
    7. ':' → logprob: -5.904744625091553
    8. ',
' → logprob: -6.029744625091553
    9. '   ' → logprob: -6.529744625091553
    10. '#' → logprob: -6.904744625091553

Token 756: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.068913035094738
    2. '.' → logprob: -4.568912982940674
    3. ',' → logprob: -4.693912982940674
    4. '<|end|>' → logprob: -4.818912982940674
    5. '   ' → logprob: -4.943912982940674
    6. ',
' → logprob: -5.068912982940674
    7. ')' → logprob: -5.318912982940674
    8. '#' → logprob: -5.443912982940674
    9. ':' → logprob: -5.943912982940674
    10. '\n' → logprob: -6.193912982940674

Token 757: ' goal' (ID: 8583)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25037163496017456
    2. '   ' → logprob: -2.0003716945648193
    3. 'state' → logprob: -3.1253716945648193
    4. '#' → logprob: -4.75037145614624
    5. 'target' → logprob: -5.00037145614624
    6. '\n' → logprob: -5.62537145614624
    7. 'def' → logprob: -5.62537145614624
    8. ' solved' → logprob: -5.87537145614624
    9. '    
' → logprob: -6.25037145614624
    10. ':' → logprob: -6.25037145614624

Token 758: '_' (ID: 62)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.359551340341568
    2. '_state' → logprob: -1.7345513105392456
    3. '_' → logprob: -2.359551429748535
    4. '_position' → logprob: -3.609551429748535
    5. ' =' → logprob: -6.234551429748535
    6. '_positions' → logprob: -6.609551429748535
    7. '=' → logprob: -8.484551429748535
    8. '_row' → logprob: -8.734551429748535
    9. '_r' → logprob: -9.359551429748535
    10. 'pos' → logprob: -9.359551429748535

Token 759: 'king' (ID: 6962)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.06363341957330704
    2. 'state' → logprob: -3.313633441925049
    3. 'position' → logprob: -3.813633441925049
    4. 'kr' → logprob: -6.063633441925049
    5. 'king' → logprob: -7.188633441925049
    6. 'row' → logprob: -9.56363296508789
    7. 'r' → logprob: -11.06363296508789
    8. 'cell' → logprob: -11.43863296508789
    9. 'positions' → logprob: -11.68863296508789
    10. '_pos' → logprob: -12.18863296508789

Token 760: ' =' (ID: 314)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.01431475393474102
    2. '_position' → logprob: -4.764314651489258
    3. '_row' → logprob: -5.639314651489258
    4. ' =' → logprob: -7.514314651489258
    5. '_r' → logprob: -7.514314651489258
    6. '_positions' → logprob: -7.764314651489258
    7. 'pos' → logprob: -8.264314651489258
    8. '_state' → logprob: -8.389314651489258
    9. '_' → logprob: -9.514314651489258
    10. '=' → logprob: -10.639314651489258

Token 761: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.493430894101039e-05
    2. ' (' → logprob: -9.500075340270996
    3. '0' → logprob: -21.00007438659668
    4. '((' → logprob: -21.87507438659668
    5. ' ' → logprob: -22.00007438659668
    6. '   ' → logprob: -23.25007438659668
    7. '（' → logprob: -24.00007438659668
    8. '  ' → logprob: -24.37507438659668
    9. '[' → logprob: -24.87507438659668
    10. '(
' → logprob: -25.25007438659668

Token 762: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003078142472077161
    2. ' ' → logprob: -8.1253080368042
    3. 'H' → logprob: -11.7503080368042
    4. '1' → logprob: -13.6253080368042
    5. '(' → logprob: -13.7503080368042
    6. ')' → logprob: -15.0003080368042
    7. '(H' → logprob: -15.0003080368042
    8. '   ' → logprob: -15.2503080368042
    9. ' (' → logprob: -15.5003080368042
    10. ' H' → logprob: -15.7503080368042

Token 763: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.666993507067673e-05
    2. ' ,' → logprob: -10.375036239624023
    3. '0' → logprob: -12.250036239624023
    4. ',
' → logprob: -14.375036239624023
    5. ' ' → logprob: -17.125036239624023
    6. '   ' → logprob: -17.875036239624023
    7. '‌,' → logprob: -18.125036239624023
    8. '<|end|>' → logprob: -18.500036239624023
    9. '```' → logprob: -19.000036239624023
    10. ')' → logprob: -19.000036239624023

Token 764: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4987974029500037e-05
    2. ' ' → logprob: -10.625024795532227
    3. '1' → logprob: -14.625024795532227
    4. ')' → logprob: -16.750024795532227
    5. '   ' → logprob: -17.000024795532227
    6. '2' → logprob: -17.875024795532227
    7. '
' → logprob: -18.125024795532227
    8. '۰' → logprob: -18.187524795532227
    9. '  ' → logprob: -18.500024795532227
    10. '4' → logprob: -18.562524795532227

Token 765: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010073020122945309
    2. ',' → logprob: -4.635073184967041
    3. ',)' → logprob: -8.135072708129883
    4. '   ' → logprob: -12.010072708129883
    5. '),' → logprob: -12.635072708129883
    6. '<|end|>' → logprob: -12.760072708129883
    7. ' )' → logprob: -12.885072708129883
    8. ')
' → logprob: -13.010072708129883
    9. '}' → logprob: -13.885072708129883
    10. ')}' → logprob: -14.010072708129883

Token 766: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05356791242957115
    2. 'state' → logprob: -3.803567886352539
    3. '    
' → logprob: -4.553567886352539
    4. ')' → logprob: -4.928567886352539
    5. ',' → logprob: -4.928567886352539
    6. '
' → logprob: -7.303567886352539
    7. '  
' → logprob: -7.428567886352539
    8. '#' → logprob: -7.553567886352539
    9. ' 
' → logprob: -7.803567886352539
    10. ',
' → logprob: -8.053567886352539

Token 767: ' #' (ID: 1069)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -1.1947647333145142
    2. 'visited' → logprob: -1.5697647333145142
    3. 'start' → logprob: -2.0697646141052246
    4. '#' (adapté à ' #') → logprob: -2.3197646141052246
    5. 'p' → logprob: -2.5697646141052246
    6. 'state' → logprob: -2.9447646141052246
    7. '   ' → logprob: -3.0697646141052246
    8. 'pawn' → logprob: -3.0697646141052246
    9. 'def' → logprob: -3.9447646141052246
    10. '
' → logprob: -4.944764614105225

Token 768: ' Function' (ID: 11035)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.6406940817832947
    2. 'start' → logprob: -0.8906940817832947
    3. 'visited' → logprob: -3.2656941413879395
    4. '#' → logprob: -5.3906941413879395
    5. 'state' → logprob: -5.3906941413879395
    6. 'queue' → logprob: -5.8906941413879395
    7. 'def' → logprob: -6.1406941413879395
    8. '   ' → logprob: -6.2656941413879395
    9. ' initial' → logprob: -6.2656941413879395
    10. 'p' → logprob: -6.3906941413879395

Token 769: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0500284805893898
    2. ' def' → logprob: -3.6750285625457764
    3. ' solve' → logprob: -3.9250285625457764
    4. ' to' → logprob: -6.550028324127197
    5. 'solve' → logprob: -6.550028324127197
    6. '   ' → logprob: -8.425028800964355
    7. ' check' → logprob: -9.300028800964355
    8. ' bfs' → logprob: -9.675028800964355
    9. ' is' → logprob: -9.800028800964355
    10. ' find' → logprob: -9.800028800964355

Token 770: ' check' (ID: 2371)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.783791184425354
    2. 'is' → logprob: -1.283791184425354
    3. 'b' → logprob: -2.2837910652160645
    4. 'check' → logprob: -2.2837910652160645
    5. ' check' → logprob: -4.5337910652160645
    6. ' bfs' → logprob: -4.6587910652160645
    7. 'in' → logprob: -4.7837910652160645
    8. 'get' → logprob: -4.9087910652160645
    9. ' valid' → logprob: -5.2837910652160645
    10. 'neighbors' → logprob: -5.7837910652160645

Token 771: ' if' (ID: 538)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.20023539662361145
    2. '_' → logprob: -2.950235366821289
    3. '_state' → logprob: -3.200235366821289
    4. ' if' → logprob: -3.825235366821289
    5. '_position' → logprob: -4.075235366821289
    6. '_in' → logprob: -4.325235366821289
    7. '_inside' → logprob: -5.075235366821289
    8. 'if' → logprob: -5.325235366821289
    9. '_positions' → logprob: -5.700235366821289
    10. '_move' → logprob: -5.700235366821289

Token 772: ' a' (ID: 261)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9813491702079773
    2. '(' → logprob: -1.481349229812622
    3. ' the' → logprob: -1.856349229812622
    4. ' a' → logprob: -2.481349229812622
    5. 'a' → logprob: -2.731349229812622
    6. ' king' → logprob: -3.231349229812622
    7. ' (' → logprob: -3.356349229812622
    8. 'king' → logprob: -4.606348991394043
    9. 'kr' → logprob: -6.481348991394043
    10. 'position' → logprob: -7.231348991394043

Token 773: ' given' (ID: 4335)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.3385823667049408
    2. 'cell' → logprob: -1.5885823965072632
    3. 'state' → logprob: -3.0885822772979736
    4. ' position' → logprob: -4.338582515716553
    5. ' cell' → logprob: -4.463582515716553
    6. 'move' → logprob: -5.463582515716553
    7. 'pos' → logprob: -5.588582515716553
    8. ' move' → logprob: -6.963582515716553
    9. 'def' → logprob: -7.463582515716553
    10. 'given' → logprob: -7.838582515716553

Token 774: ' cell' (ID: 4206)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.13115820288658142
    2. ' position' → logprob: -2.5061581134796143
    3. 'cell' → logprob: -4.381158351898193
    4. ' (' → logprob: -5.006158351898193
    5. 'pos' → logprob: -5.006158351898193
    6. ' cell' → logprob: -5.381158351898193
    7. '(position' → logprob: -5.631158351898193
    8. 'state' → logprob: -5.881158351898193
    9. '(' → logprob: -6.506158351898193
    10. '(r' → logprob: -7.506158351898193

Token 775: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4374309182167053
    2. 'is' → logprob: -1.0624308586120605
    3. ' (' → logprob: -5.5624308586120605
    4. ' ' → logprob: -6.0624308586120605
    5. ' in' → logprob: -6.9374308586120605
    6. '(' → logprob: -7.8124308586120605
    7. 'in' → logprob: -8.062431335449219
    8. ')' → logprob: -8.312431335449219
    9. '_is' → logprob: -8.687431335449219
    10. '_' → logprob: -9.687431335449219

Token 776: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.33677151799201965
    2. ' inside' → logprob: -2.4617714881896973
    3. 'valid' → logprob: -2.8367714881896973
    4. 'within' → logprob: -3.3367714881896973
    5. ' within' → logprob: -3.4617714881896973
    6. 'free' → logprob: -3.8367714881896973
    7. ' valid' → logprob: -3.9617714881896973
    8. 'in' → logprob: -4.086771488189697
    9. ' free' → logprob: -5.461771488189697
    10. '_valid' → logprob: -5.711771488189697

Token 777: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.46883082389831543
    2. 'the' → logprob: -1.0938308238983154
    3. '(' → logprob: -4.2188310623168945
    4. ' (' → logprob: -4.5938310623168945
    5. 'grid' → logprob: -5.0938310623168945
    6. '(H' → logprob: -5.3438310623168945
    7. ' grid' → logprob: -5.9688310623168945
    8. '   ' → logprob: -7.7188310623168945
    9. '(grid' → logprob: -8.218831062316895
    10. 'bounds' → logprob: -8.968831062316895

Token 778: ' frame' (ID: 7298)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.20397840440273285
    2. ' grid' → logprob: -1.703978419303894
    3. 'board' → logprob: -6.078978538513184
    4. ' ' → logprob: -9.828978538513184
    5. 'bounds' → logprob: -9.953978538513184
    6. '   ' → logprob: -10.328978538513184
    7. 'H' → logprob: -10.828978538513184
    8. '(grid' → logprob: -10.828978538513184
    9. ' (' → logprob: -11.203978538513184
    10. '#' → logprob: -11.203978538513184

Token 779: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5929144620895386
    2. '(r' → logprob: -1.3429144620895386
    3. '   ' → logprob: -2.217914581298828
    4. '(row' → logprob: -2.842914581298828
    5. ' (' → logprob: -4.592914581298828
    6. ':' → logprob: -6.217914581298828
    7. ' def' → logprob: -6.592914581298828
    8. '(
' → logprob: -6.967914581298828
    9. '(' → logprob: -7.092914581298828
    10. ':
' → logprob: -7.342914581298828

Token 780: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0913369357585907
    2. '   ' → logprob: -2.591336965560913
    3. ' def' → logprob: -4.841336727142334
    4. '(r' → logprob: -5.841336727142334
    5. ':' → logprob: -8.091337203979492
    6. '(' → logprob: -8.091337203979492
    7. '
' → logprob: -8.466337203979492
    8. ' (' → logprob: -8.716337203979492
    9. '(
' → logprob: -8.966337203979492
    10. '(row' → logprob: -9.466337203979492

Token 781: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0012578530004248023
    2. ' def' → logprob: -7.00125789642334
    3. '   ' → logprob: -8.25125789642334
    4. '
' → logprob: -9.50125789642334
    5. '```' → logprob: -11.62625789642334
    6. '    
' → logprob: -14.87625789642334
    7. ' ' → logprob: -15.12625789642334
    8. ' 
' → logprob: -15.12625789642334
    9. '  
' → logprob: -15.50125789642334
    10. '``' → logprob: -15.87625789642334

Token 782: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.36647456884384155
    2. 'inside' → logprob: -1.2414746284484863
    3. 'is' → logprob: -4.616474628448486
    4. ' in' → logprob: -5.616474628448486
    5. '0' → logprob: -6.116474628448486
    6. ' inside' → logprob: -6.616474628448486
    7. ' is' → logprob: -8.616474151611328
    8. 'lambda' → logprob: -8.741474151611328
    9. ' ' → logprob: -8.991474151611328
    10. 'valid' → logprob: -9.116474151611328

Token 783: '_frame' (ID: 19952)
  Prédit: '_bounds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bounds' → logprob: -0.09093809127807617
    2. '_grid' → logprob: -2.840938091278076
    3. 'bounds' → logprob: -3.715938091278076
    4. '_bound' → logprob: -6.590938091278076
    5. '_range' → logprob: -6.840938091278076
    6. 'range' → logprob: -7.465938091278076
    7. '_board' → logprob: -7.840938091278076
    8. 'grid' → logprob: -8.090938568115234
    9. '_frame' → logprob: -8.715938568115234
    10. '_b' → logprob: -9.090938568115234

Token 784: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.11166779696941376
    2. '(row' → logprob: -2.8616678714752197
    3. '(' → logprob: -3.1116678714752197
    4. ' (' → logprob: -5.861667633056641
    5. '   ' → logprob: -7.861667633056641
    6. '((' → logprob: -8.23666763305664
    7. '(cell' → logprob: -8.23666763305664
    8. '(pos' → logprob: -10.11166763305664
    9. '(i' → logprob: -10.36166763305664
    10. '(
' → logprob: -10.73666763305664

Token 785: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019394151866436005
    2. ',c' → logprob: -4.5193939208984375
    3. ' ,' → logprob: -4.8943939208984375
    4. ',n' → logprob: -8.269393920898438
    5. ',r' → logprob: -8.769393920898438
    6. ',k' → logprob: -9.019393920898438
    7. ',w' → logprob: -9.019393920898438
    8. ',int' → logprob: -9.394393920898438
    9. ',row' → logprob: -11.019393920898438
    10. ',i' → logprob: -11.269393920898438

Token 786: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004421336110681295
    2. '):
' → logprob: -5.504421234130859
    3. ')' → logprob: -8.12942123413086
    4. '   ' → logprob: -10.37942123413086
    5. ',' → logprob: -11.75442123413086
    6. ' ):' → logprob: -12.50442123413086
    7. '):
' → logprob: -12.75442123413086
    8. ':' → logprob: -13.37942123413086
    9. '):

' → logprob: -15.37942123413086
    10. ' ' → logprob: -15.50442123413086

Token 787: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015107295475900173
    2. '   ' → logprob: -4.265107154846191
    3. ' return' → logprob: -7.140107154846191
    4. 'return' → logprob: -8.890107154846191
    5. '    ' → logprob: -12.515107154846191
    6. '	return' → logprob: -13.390107154846191
    7. ':return' → logprob: -13.640107154846191
    8. ':' → logprob: -14.015107154846191
    9. '           ' → logprob: -14.015107154846191
    10. '      ' → logprob: -14.390107154846191

Token 788: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8005791902542114
    2. 'return' (adapté à ' return') → logprob: -0.8005791902542114
    3. '0' → logprob: -2.300579071044922
    4. '   ' → logprob: -6.925579071044922
    5. ' ' → logprob: -7.300579071044922
    6. '	return' → logprob: -13.800579071044922
    7. '
' → logprob: -13.925579071044922
    8. '    ' → logprob: -14.175579071044922
    9. '  ' → logprob: -14.300579071044922
    10. '1' → logprob: -14.800579071044922

Token 789: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008067715098150074
    2. ' ' → logprob: -7.12580680847168
    3. '(' → logprob: -13.37580680847168
    4. '   ' → logprob: -14.87580680847168
    5. ' (' → logprob: -15.50080680847168
    6. '1' → logprob: -16.37580680847168
    7. 'r' → logprob: -16.87580680847168
    8. ' ' → logprob: -17.25080680847168
    9. '  ' → logprob: -18.37580680847168
    10. '
' → logprob: -19.50080680847168

Token 790: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.87500286102295
    3. '(' → logprob: -14.50000286102295
    4. 'r' → logprob: -17.125003814697266
    5. '1' → logprob: -18.125003814697266
    6. '(r' → logprob: -19.000003814697266
    7. ' (' → logprob: -20.375003814697266
    8. '00' → logprob: -20.500003814697266
    9. '
' → logprob: -20.625003814697266
    10. '`' → logprob: -20.750003814697266

Token 791: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3248107135295868
    2. '<=' → logprob: -1.3248107433319092
    3. '<' → logprob: -4.94981050491333
    4. ' <' → logprob: -5.44981050491333
    5. '<H' → logprob: -10.324810981750488
    6. ',' → logprob: -11.324810981750488
    7. '0' → logprob: -11.449810981750488
    8. 'r' → logprob: -11.449810981750488
    9. ' ' → logprob: -11.824810981750488
    10. ' ≤' → logprob: -12.324810981750488

Token 792: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.157039049663581e-05
    2. ' r' → logprob: -9.875051498413086
    3. '	r' → logprob: -17.625051498413086
    4. '_r' → logprob: -19.250051498413086
    5. '$r' → logprob: -21.375051498413086
    6. '{' → logprob: -21.875051498413086
    7. '```' → logprob: -21.875051498413086
    8. '.r' → logprob: -22.125051498413086
    9. '­r' → logprob: -22.250051498413086
    10. '*r' → logprob: -22.375051498413086

Token 793: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1871909350156784
    2. ' <' → logprob: -1.9371908903121948
    3. '<c' → logprob: -4.187191009521484
    4. '<n' → logprob: -5.687191009521484
    5. '<H' → logprob: -5.687191009521484
    6. ' and' → logprob: -6.312191009521484
    7. 'and' → logprob: -6.687191009521484
    8. 'r' → logprob: -7.187191009521484
    9. '<R' → logprob: -8.562191009521484
    10. '<len' → logprob: -8.687191009521484

Token 794: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -3.173704271830502e-06
    2. ' H' → logprob: -13.12500286102295
    3. '   ' → logprob: -14.87500286102295
    4. '	H' → logprob: -16.250003814697266
    5. '4' → logprob: -16.375003814697266
    6. '5' → logprob: -16.500003814697266
    7. '(H' → logprob: -16.500003814697266
    8. '10' → logprob: -16.500003814697266
    9. '8' → logprob: -16.750003814697266
    10. '7' → logprob: -16.750003814697266

Token 795: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011057134717702866
    2. 'and' → logprob: -4.511056900024414
    3. '   ' → logprob: -12.636056900024414
    4. '       ' → logprob: -12.761056900024414
    5. '	and' → logprob: -13.761056900024414
    6. '<|end|>' → logprob: -13.886056900024414
    7. ' ' → logprob: -14.511056900024414
    8. ',' → logprob: -15.511056900024414
    9. ')' → logprob: -15.511056900024414
    10. '    ' → logprob: -16.386056900024414

Token 796: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08250498026609421
    2. 'c' → logprob: -2.582504987716675
    3. ' ' → logprob: -6.082504749298096
    4. ' c' → logprob: -6.832504749298096
    5. 'W' → logprob: -8.457505226135254
    6. ' W' → logprob: -10.707505226135254
    7. '   ' → logprob: -11.457505226135254
    8. '  ' → logprob: -13.832505226135254
    9. '    ' → logprob: -15.207505226135254
    10. '       ' → logprob: -15.457505226135254

Token 797: '0' (ID: 15)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0001093841710826382
    2. 'c' → logprob: -9.625109672546387
    3. ' W' → logprob: -10.250109672546387
    4. '   ' → logprob: -12.250109672546387
    5. ' ' → logprob: -13.875109672546387
    6. 'C' → logprob: -14.125109672546387
    7. '  ' → logprob: -14.625109672546387
    8. '0' → logprob: -14.625109672546387
    9. '(' → logprob: -15.750109672546387
    10. '    ' → logprob: -16.25010871887207

Token 798: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06637672334909439
    2. '<' → logprob: -3.5663766860961914
    3. ' <=' → logprob: -3.8163766860961914
    4. '<c' → logprob: -5.191376686096191
    5. 'W' → logprob: -6.066376686096191
    6. '<W' → logprob: -6.441376686096191
    7. 'c' → logprob: -6.691376686096191
    8. ' ' → logprob: -6.816376686096191
    9. '<=' → logprob: -6.941376686096191
    10. '   ' → logprob: -8.066376686096191

Token 799: ' c' (ID: 274)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.00019126241386402398
    2. ' W' → logprob: -8.625191688537598
    3. '   ' → logprob: -12.250191688537598
    4. 'c' → logprob: -13.250191688537598
    5. ' ' → logprob: -13.250191688537598
    6. '
' → logprob: -13.875191688537598
    7. '  ' → logprob: -14.250191688537598
    8. 'C' → logprob: -15.375191688537598
    9. '=' → logprob: -15.687691688537598
    10. '	W' → logprob: -15.875191688537598

Token 800: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.18904322385787964
    2. '<' → logprob: -1.9390432834625244
    3. '<W' → logprob: -3.8140432834625244
    4. 'W' → logprob: -5.189043045043945
    5. '<H' → logprob: -7.814043045043945
    6. ' ' → logprob: -8.689043045043945
    7. '<c' → logprob: -10.064043045043945
    8. 'c' → logprob: -10.189043045043945
    9. 'r' → logprob: -10.439043045043945
    10. '   ' → logprob: -10.939043045043945

Token 801: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.4140441635390744e-05
    2. ' W' → logprob: -11.375014305114746
    3. '   ' → logprob: -13.375014305114746
    4. '(' → logprob: -14.875014305114746
    5. '(W' → logprob: -15.000014305114746
    6. ' ' → logprob: -15.875014305114746
    7. '  ' → logprob: -16.62501335144043
    8. '
' → logprob: -17.62501335144043
    9. '	W' → logprob: -17.62501335144043
    10. '2' → logprob: -17.75001335144043

Token 802: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47544026374816895
    2. '<|end|>' → logprob: -1.100440263748169
    3. ')' → logprob: -4.10044002532959
    4. '
' → logprob: -5.10044002532959
    5. '<|end|>' → logprob: -5.22544002532959
    6. ':' → logprob: -5.35044002532959
    7. '\n' → logprob: -6.22544002532959
    8. ':return' → logprob: -6.35044002532959
    9. '    
' → logprob: -6.60044002532959
    10. ' ' → logprob: -6.60044002532959

Token 803: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09550260752439499
    2. '<|end|>' → logprob: -3.2205026149749756
    3. '    
' → logprob: -3.9705026149749756
    4. '
' → logprob: -4.0955023765563965
    5. 'def' → logprob: -4.9705023765563965
    6. '```' → logprob: -5.5955023765563965
    7. '  
' → logprob: -6.4705023765563965
    8. ' 
' → logprob: -6.9705023765563965
    9. '<|end|>' → logprob: -7.0955023765563965
    10. ')' → logprob: -7.7205023765563965

Token 804: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7319135069847107
    2. 'def' → logprob: -0.9819135069847107
    3. 'visited' → logprob: -2.1069135665893555
    4. '
' → logprob: -5.2319135665893555
    5. '```' → logprob: -5.3569135665893555
    6. 'state' → logprob: -5.3569135665893555
    7. '    
' → logprob: -6.2319135665893555
    8. '#' (adapté à ' #') → logprob: -6.4819135665893555
    9. 'return' → logprob: -6.6069135665893555
    10. 'empty' → logprob: -7.3569135665893555

Token 805: ' Function' (ID: 11035)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5108098983764648
    2. 'visited' → logprob: -1.1358098983764648
    3. 'initial' → logprob: -3.885809898376465
    4. 'from' → logprob: -4.010809898376465
    5. 'start' → logprob: -4.260809898376465
    6. '   ' → logprob: -4.760809898376465
    7. 'state' → logprob: -4.885809898376465
    8. 'queue' → logprob: -5.510809898376465
    9. '#' → logprob: -5.760809898376465
    10. 'return' → logprob: -6.135809898376465

Token 806: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6251899003982544
    2. ' to' → logprob: -0.8751899003982544
    3. 'to' → logprob: -3.750189781188965
    4. ' def' → logprob: -3.875189781188965
    5. '_to' → logprob: -5.875189781188965
    6. '   ' → logprob: -7.500189781188965
    7. '
' → logprob: -8.625189781188965
    8. '=' → logprob: -9.500189781188965
    9. ' =' → logprob: -10.125189781188965
    10. 'To' → logprob: -10.500189781188965

Token 807: ' check' (ID: 2371)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.310472697019577
    2. 'valid' → logprob: -1.9354727268218994
    3. 'is' → logprob: -3.0604727268218994
    4. 'possible' → logprob: -3.8104727268218994
    5. 'check' → logprob: -4.18547248840332
    6. 'get' → logprob: -4.56047248840332
    7. 'move' → logprob: -4.81047248840332
    8. 'def' → logprob: -5.18547248840332
    9. 'b' → logprob: -5.56047248840332
    10. 'generate' → logprob: -5.68547248840332

Token 808: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07433348894119263
    2. 'if' → logprob: -2.699333429336548
    3. 'def' → logprob: -6.199333667755127
    4. ' whether' → logprob: -6.574333667755127
    5. 'whether' → logprob: -8.449333190917969
    6. '   ' → logprob: -8.574333190917969
    7. 'in' → logprob: -8.699333190917969
    8. ' in' → logprob: -9.199333190917969
    9. '#' → logprob: -10.074333190917969
    10. ' the' → logprob: -10.324333190917969

Token 809: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.021268606185913
    2. ' a' → logprob: -1.396268606185913
    3. '(' → logprob: -1.771268606185913
    4. 'the' → logprob: -2.396268606185913
    5. ' (' → logprob: -3.521268606185913
    6. ' the' → logprob: -3.646268606185913
    7. ' king' → logprob: -4.021268844604492
    8. '(grid' → logprob: -4.646268844604492
    9. 'king' → logprob: -4.896268844604492
    10. '(r' → logprob: -5.021268844604492

Token 810: '2' (ID: 17)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.1846731901168823
    2. 'a' → logprob: -1.3096731901168823
    3. '(r' → logprob: -2.059673309326172
    4. '(' → logprob: -2.934673309326172
    5. 'in' → logprob: -3.059673309326172
    6. ' a' → logprob: -3.309673309326172
    7. '(grid' → logprob: -3.434673309326172
    8. 'cell' → logprob: -4.309673309326172
    9. 'grid' → logprob: -4.434673309326172
    10. ' the' → logprob: -4.559673309326172

Token 811: 'x' (ID: 87)
  Prédit: ' cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cells' → logprob: -1.199301838874817
    2. 'cells' → logprob: -1.324301838874817
    3. ' king' → logprob: -1.699301838874817
    4. 'def' → logprob: -1.949301838874817
    5. '_cells' → logprob: -3.3243017196655273
    6. ' adjacent' → logprob: -4.449301719665527
    7. 'king' → logprob: -4.949301719665527
    8. ')' → logprob: -5.074301719665527
    9. ' def' → logprob: -5.074301719665527
    10. ' squares' → logprob: -5.074301719665527

Token 812: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010930972173810005
    2. '(' → logprob: -5.385931015014648
    3. '   ' → logprob: -5.510931015014648
    4. ' (' → logprob: -7.010931015014648
    5. '(r' → logprob: -7.510931015014648
    6. ',' → logprob: -8.635931015014648
    7. '0' → logprob: -9.010931015014648
    8. 'r' → logprob: -9.510931015014648
    9. 'king' → logprob: -9.635931015014648
    10. ' ' → logprob: -9.635931015014648

Token 813: ' king' (ID: 13793)
  Prédit: ' king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' king' → logprob: -0.13526257872581482
    2. ' block' → logprob: -2.7602624893188477
    3. 'king' → logprob: -3.0102624893188477
    4. 'block' → logprob: -5.010262489318848
    5. ' (' → logprob: -5.510262489318848
    6. ' ' → logprob: -6.760262489318848
    7. '_' → logprob: -7.760262489318848
    8. '(' → logprob: -8.885262489318848
    9. ' cells' → logprob: -8.885262489318848
    10. ' square' → logprob: -9.010262489318848

Token 814: ' block' (ID: 4355)
  Prédit: ' block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.23065200448036194
    2. ' can' → logprob: -3.480652093887329
    3. 'block' → logprob: -3.730652093887329
    4. ' occupies' → logprob: -3.730652093887329
    5. '_cells' → logprob: -3.730652093887329
    6. ' ' → logprob: -3.980652093887329
    7. ' cells' → logprob: -4.10565185546875
    8. '   ' → logprob: -4.73065185546875
    9. ' position' → logprob: -5.10565185546875
    10. 'cells' → logprob: -5.35565185546875

Token 815: ' fits' (ID: 23440)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.30994296073913574
    2. 'in' → logprob: -2.1849429607391357
    3. ' can' → logprob: -3.1849429607391357
    4. 'def' → logprob: -3.4349429607391357
    5. ' is' → logprob: -3.5599429607391357
    6. 'can' → logprob: -4.184943199157715
    7. ' in' → logprob: -4.434943199157715
    8. ' fits' → logprob: -4.934943199157715
    9. 'is' → logprob: -5.684943199157715
    10. ' (' → logprob: -6.059943199157715

Token 816: ' at' (ID: 540)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.04457375779747963
    2. '(' → logprob: -4.044573783874512
    3. '   ' → logprob: -4.044573783874512
    4. ' (' → logprob: -4.919573783874512
    5. 'def' → logprob: -7.419573783874512
    6. ' at' → logprob: -8.419573783874512
    7. ' in' → logprob: -8.544573783874512
    8. 'in' → logprob: -9.544573783874512
    9. ' ' → logprob: -10.169573783874512
    10. '
' → logprob: -10.169573783874512

Token 817: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.5344282984733582
    2. ' (' → logprob: -1.659428358078003
    3. ' r' → logprob: -2.034428358078003
    4. 'r' → logprob: -2.909428358078003
    5. ' position' → logprob: -4.159428119659424
    6. ' the' → logprob: -4.909428119659424
    7. ' a' → logprob: -5.034428119659424
    8. 'in' → logprob: -5.909428119659424
    9. '(' → logprob: -6.909428119659424
    10. 'position' → logprob: -7.034428119659424

Token 818: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.22981898486614227
    2. 'kr' → logprob: -1.6048189401626587
    3. 'nr' → logprob: -6.104818820953369
    4. '   ' → logprob: -6.979818820953369
    5. ')' → logprob: -7.729818820953369
    6. ' r' → logprob: -8.229819297790527
    7. ' kr' → logprob: -8.854819297790527
    8. 'rk' → logprob: -9.354819297790527
    9. 'new' → logprob: -9.729819297790527
    10. '
' → logprob: -10.104819297790527

Token 819: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.01754687912762165
    2. ',' → logprob: -4.142546653747559
    3. ',k' → logprob: -6.642546653747559
    4. ' ,' → logprob: -8.767546653747559
    5. '+' → logprob: -10.517546653747559
    6. '-' → logprob: -11.892546653747559
    7. 'c' → logprob: -11.892546653747559
    8. ' ' → logprob: -12.642546653747559
    9. '   ' → logprob: -13.017546653747559
    10. 'kc' → logprob: -13.892546653747559

Token 820: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.025210412219166756
    2. '):' → logprob: -3.775210380554199
    3. ')' → logprob: -6.775210380554199
    4. '):

' → logprob: -7.525210380554199
    5. ')
' → logprob: -9.0252103805542
    6. ' ):
' → logprob: -9.2752103805542
    7. '   ' → logprob: -10.0252103805542
    8. '):
' → logprob: -11.0252103805542
    9. ' ):' → logprob: -13.4002103805542
    10. 'def' → logprob: -13.5252103805542

Token 821: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7325354814529419
    2. 'def' → logprob: -0.8575354814529419
    3. '   ' → logprob: -2.3575353622436523
    4. ':' → logprob: -8.482535362243652
    5. ':def' → logprob: -9.482535362243652
    6. '	def' → logprob: -10.357535362243652
    7. '(def' → logprob: -10.732535362243652
    8. '```' → logprob: -10.982535362243652
    9. '    
' → logprob: -11.357535362243652
    10. ':
' → logprob: -11.357535362243652

Token 822: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6942068934440613
    2. 'def' (adapté à ' def') → logprob: -0.9442068934440613
    3. '   ' → logprob: -2.194206953048706
    4. '
' → logprob: -9.444207191467285
    5. '    
' → logprob: -12.319207191467285
    6. '	def' → logprob: -12.819207191467285
    7. ' 
' → logprob: -12.944207191467285
    8. '    ' → logprob: -13.444207191467285
    9. '```' → logprob: -13.569207191467285
    10. '       ' → logprob: -14.194207191467285

Token 823: ' king' (ID: 13793)
  Prédit: ' king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' king' → logprob: -0.8550271391868591
    2. 'can' → logprob: -1.355027198791504
    3. 'king' → logprob: -1.355027198791504
    4. ' can' → logprob: -2.855027198791504
    5. 'in' → logprob: -7.230027198791504
    6. ' in' → logprob: -8.480027198791504
    7. 'is' → logprob: -8.855027198791504
    8. ' is' → logprob: -9.730027198791504
    9. 'def' → logprob: -9.730027198791504
    10. 'check' → logprob: -9.980027198791504

Token 824: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.44693267345428467
    2. '_can' → logprob: -1.0719326734542847
    3. '_in' → logprob: -4.571932792663574
    4. '_positions' → logprob: -6.321932792663574
    5. '_position' → logprob: -6.321932792663574
    6. '_pos' → logprob: -7.321932792663574
    7. '_inside' → logprob: -7.571932792663574
    8. 'can' → logprob: -7.696932792663574
    9. 'fits' → logprob: -7.821932792663574
    10. '_fit' → logprob: -7.821932792663574

Token 825: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -0.00762082589790225
    2. 'it' → logprob: -4.882620811462402
    3. 'fits' → logprob: -12.132620811462402
    4. 'irst' → logprob: -13.382620811462402
    5. 't' → logprob: -13.507620811462402
    6. 'itse' → logprob: -13.757620811462402
    7. '```' → logprob: -13.757620811462402
    8. '_' → logprob: -14.507620811462402
    9. 'orm' → logprob: -14.757620811462402
    10. ' its' → logprob: -14.757620811462402

Token 826: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.00037728800089098513
    2. '(' → logprob: -8.125377655029297
    3. ' (' → logprob: -10.375377655029297
    4. '   ' → logprob: -10.750377655029297
    5. '_at' → logprob: -10.750377655029297
    6. '(
' → logprob: -12.750377655029297
    7. '((' → logprob: -13.875377655029297
    8. ' at' → logprob: -14.250377655029297
    9. ' ' → logprob: -14.625377655029297
    10. 'at' → logprob: -14.875377655029297

Token 827: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.019168829545378685
    2. ',' → logprob: -4.019168853759766
    3. ' ,' → logprob: -7.019168853759766
    4. ',k' → logprob: -9.144168853759766
    5. '   ' → logprob: -11.644168853759766
    6. ',int' → logprob: -13.019168853759766
    7. ',r' → logprob: -13.644168853759766
    8. 'c' → logprob: -13.894168853759766
    9. ',w' → logprob: -14.144168853759766
    10. ',
' → logprob: -14.394168853759766

Token 828: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3871903419494629
    2. '):' → logprob: -1.137190341949463
    3. '   ' → logprob: -8.387189865112305
    4. ')' → logprob: -10.262189865112305
    5. '):
' → logprob: -10.387189865112305
    6. ' ):
' → logprob: -11.512189865112305
    7. '):

' → logprob: -11.762189865112305
    8. ' ):' → logprob: -12.387189865112305
    9. ',' → logprob: -13.262189865112305
    10. ' ' → logprob: -14.387189865112305

Token 829: ' paw' (ID: 71961)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.04402785748243332
    2. ' obstacles' → logprob: -3.294027805328369
    3. ')' → logprob: -6.294027805328369
    4. '
' → logprob: -6.669027805328369
    5. 'grid' → logprob: -7.169027805328369
    6. 'in' → logprob: -7.669027805328369
    7. '   ' → logprob: -7.794027805328369
    8. 'H' → logprob: -8.169028282165527
    9. 'W' → logprob: -8.794028282165527
    10. ' grid' → logprob: -9.169028282165527

Token 830: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.001755383680574596
    2. 'ons' → logprob: -6.501755237579346
    3. 'ans' → logprob: -9.376755714416504
    4. 's' → logprob: -9.751755714416504
    5. 'nts' → logprob: -9.876755714416504
    6. 'n' → logprob: -10.126755714416504
    7. 'awns' → logprob: -11.626755714416504
    8. 'nds' → logprob: -12.376755714416504
    9. 'uns' → logprob: -13.251755714416504
    10. 'a' → logprob: -14.626755714416504

Token 831: '_set' (ID: 5451)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01173482183367014
    2. ',p' → logprob: -4.761734962463379
    3. ',set' → logprob: -6.136734962463379
    4. '):' → logprob: -7.761734962463379
    5. ' ,' → logprob: -8.636734962463379
    6. ',f' → logprob: -9.386734962463379
    7. ')' → logprob: -9.386734962463379
    8. '):
' → logprob: -10.136734962463379
    9. 'set' → logprob: -10.261734962463379
    10. ',
' → logprob: -11.011734962463379

Token 832: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06443502008914948
    2. '):
' → logprob: -3.4394350051879883
    3. '):' → logprob: -3.5644350051879883
    4. ',p' → logprob: -6.314435005187988
    5. ' ,' → logprob: -9.939435005187988
    6. ')' → logprob: -9.939435005187988
    7. '):
' → logprob: -10.439435005187988
    8. ',
' → logprob: -11.189435005187988
    9. '   ' → logprob: -11.314435005187988
    10. '):

' → logprob: -11.689435005187988

Token 833: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7068053483963013
    2. '   ' → logprob: -1.3318053483963013
    3. ':' → logprob: -1.4568053483963013
    4. ':
' → logprob: -4.956805229187012
    5. '<|end|>' → logprob: -7.206805229187012
    6. ',' → logprob: -7.831805229187012
    7. ':return' → logprob: -8.081805229187012
    8. '):
' → logprob: -8.081805229187012
    9. ')' → logprob: -8.206805229187012
    10. '):' → logprob: -8.831805229187012

Token 834: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.417948454618454
    2. 'if' → logprob: -1.6679484844207764
    3. 'return' → logprob: -2.5429484844207764
    4. '   ' → logprob: -3.0429484844207764
    5. ' for' → logprob: -4.417948246002197
    6. ' if' → logprob: -4.917948246002197
    7. '#' (adapté à ' #') → logprob: -6.167948246002197
    8. 'try' → logprob: -6.417948246002197
    9. ' return' → logprob: -6.417948246002197
    10. 'cells' → logprob: -6.667948246002197

Token 835: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11212889850139618
    2. 'if' → logprob: -2.612128973007202
    3. '#' → logprob: -4.362128734588623
    4. 'return' → logprob: -5.112128734588623
    5. '   ' → logprob: -5.237128734588623
    6. 'cells' → logprob: -5.237128734588623
    7. ' for' → logprob: -6.112128734588623
    8. ' if' → logprob: -8.112129211425781
    9. 'positions' → logprob: -8.237129211425781
    10. 'try' → logprob: -8.612129211425781

Token 836: ' bound' (ID: 11608)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6273371577262878
    2. ' in' → logprob: -1.2523372173309326
    3. ' all' → logprob: -1.8773372173309326
    4. 'all' → logprob: -4.8773369789123535
    5. ' if' → logprob: -5.2523369789123535
    6. '   ' → logprob: -5.6273369789123535
    7. ' (' → logprob: -5.7523369789123535
    8. '0' → logprob: -6.0023369789123535
    9. 'if' → logprob: -6.2523369789123535
    10. ' ' → logprob: -6.8773369789123535

Token 837: '
' (ID: 198)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.9982871413230896
    2. '   ' → logprob: -1.4982872009277344
    3. ' if' → logprob: -2.1232872009277344
    4. '(' → logprob: -2.6232872009277344
    5. 's' → logprob: -2.7482872009277344
    6. 'r' → logprob: -3.3732872009277344
    7. 'if' → logprob: -3.7482872009277344
    8. ' (' → logprob: -3.7482872009277344
    9. ' r' → logprob: -3.7482872009277344
    10. ' ' → logprob: -3.9982872009277344

Token 838: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6505511999130249
    2. 'if' → logprob: -1.775551199913025
    3. '   ' → logprob: -2.1505513191223145
    4. '(r' → logprob: -2.4005513191223145
    5. '       ' → logprob: -2.7755513191223145
    6. 'r' → logprob: -4.4005513191223145
    7. ' (' → logprob: -5.1505513191223145
    8. ' and' → logprob: -5.4005513191223145
    9. '(' → logprob: -5.5255513191223145
    10. ' r' → logprob: -5.6505513191223145

Token 839: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.24997034668922424
    2. 'if' (adapté à ' if') → logprob: -1.7499703168869019
    3. '   ' → logprob: -3.2499704360961914
    4. ' return' → logprob: -5.749970436096191
    5. '       ' → logprob: -5.999970436096191
    6. '    ' → logprob: -6.624970436096191
    7. 'return' → logprob: -6.749970436096191
    8. ' for' → logprob: -9.124970436096191
    9. '
' → logprob: -9.249970436096191
    10. ' ' → logprob: -9.499970436096191

Token 840: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.32997462153434753
    2. ' not' → logprob: -1.82997465133667
    3. ' r' → logprob: -2.20497465133667
    4. 'not' → logprob: -4.57997465133667
    5. ' ' → logprob: -10.329974174499512
    6. '0' → logprob: -10.329974174499512
    7. '   ' → logprob: -10.579974174499512
    8. 'c' → logprob: -11.329974174499512
    9. ' ' → logprob: -12.204974174499512
    10. '(r' → logprob: -12.204974174499512

Token 841: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4062429368495941
    2. '+' → logprob: -1.7812429666519165
    3. ' <' → logprob: -2.031242847442627
    4. '>' → logprob: -4.281242847442627
    5. ' +' → logprob: -4.406242847442627
    6. ' >' → logprob: -4.906242847442627
    7. '<=' → logprob: -8.156243324279785
    8. ' <=' → logprob: -8.531243324279785
    9. '   ' → logprob: -9.406243324279785
    10. ' ' → logprob: -10.031243324279785

Token 842: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004927450208924711
    2. ' ' → logprob: -7.625492572784424
    3. '1' → logprob: -12.375493049621582
    4. ' ' → logprob: -16.437992095947266
    5. '
' → logprob: -16.437992095947266
    6. '=' → logprob: -16.937992095947266
    7. '   ' → logprob: -17.312992095947266
    8. '-' → logprob: -17.312992095947266
    9. '۰' → logprob: -17.750492095947266
    10. 'H' → logprob: -18.000492095947266

Token 843: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.875009536743164
    3. '1' → logprob: -13.125009536743164
    4. '-' → logprob: -15.625009536743164
    5. '=' → logprob: -16.375009536743164
    6. 'H' → logprob: -16.750009536743164
    7. '
' → logprob: -17.500009536743164
    8. '2' → logprob: -18.562509536743164
    9. '۰' → logprob: -18.562509536743164
    10. '```' → logprob: -18.812509536743164

Token 844: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.008648371323943138
    2. 'or' → logprob: -4.75864839553833
    3. ')' → logprob: -10.883647918701172
    4. '	or' → logprob: -11.883647918701172
    5. '   ' → logprob: -12.383647918701172
    6. ' ' → logprob: -13.133647918701172
    7. '    ' → logprob: -14.508647918701172
    8. '0' → logprob: -14.758647918701172
    9. '<|end|>' → logprob: -14.883647918701172
    10. '  ' → logprob: -15.883647918701172

Token 845: ' c' (ID: 274)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5760826468467712
    2. 'c' → logprob: -0.8260826468467712
    3. '(c' → logprob: -10.201082229614258
    4. ' c' → logprob: -10.326082229614258
    5. '(r' → logprob: -10.576082229614258
    6. ' r' → logprob: -10.701082229614258
    7. '   ' → logprob: -10.951082229614258
    8. '
' → logprob: -13.326082229614258
    9. '  ' → logprob: -13.701082229614258
    10. '	c' → logprob: -13.951082229614258

Token 846: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.18181876838207245
    2. '>' → logprob: -2.681818723678589
    3. '+' → logprob: -2.931818723678589
    4. ' <' → logprob: -3.556818723678589
    5. ' >' → logprob: -4.181818962097168
    6. ' +' → logprob: -7.431818962097168
    7. '<=' → logprob: -9.681818962097168
    8. '   ' → logprob: -10.931818962097168
    9. '>=' → logprob: -11.181818962097168
    10. ' ' → logprob: -11.806818962097168

Token 847: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014835083857178688
    2. ' ' → logprob: -5.014834880828857
    3. '1' → logprob: -5.264834880828857
    4. 'W' → logprob: -6.014834880828857
    5. ' W' → logprob: -8.139835357666016
    6. '(W' → logprob: -9.389835357666016
    7. '(' → logprob: -10.764835357666016
    8. '   ' → logprob: -10.889835357666016
    9. '-' → logprob: -11.139835357666016
    10. '2' → logprob: -11.577335357666016

Token 848: '0' (ID: 15)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.015072889626026154
    2. '0' → logprob: -4.890072822570801
    3. '1' → logprob: -5.265072822570801
    4. ' W' → logprob: -6.765072822570801
    5. '(W' → logprob: -7.015072822570801
    6. '(' → logprob: -9.8900728225708
    7. '=W' → logprob: -10.2650728225708
    8. '2' → logprob: -10.2650728225708
    9. ' ' → logprob: -10.3900728225708
    10. 'H' → logprob: -11.2650728225708

Token 849: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.01119482796639204
    2. 'or' → logprob: -4.511194705963135
    3. '       ' → logprob: -9.511195182800293
    4. '   ' → logprob: -9.761195182800293
    5. '+' → logprob: -12.886195182800293
    6. '	or' → logprob: -12.886195182800293
    7. '    ' → logprob: -13.011195182800293
    8. '           ' → logprob: -13.261195182800293
    9. ' ' → logprob: -13.886195182800293
    10. '        ' → logprob: -14.136195182800293

Token 850: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.22558711469173431
    2. 'c' → logprob: -1.6005871295928955
    3. '   ' → logprob: -9.725586891174316
    4. '(r' → logprob: -9.850586891174316
    5. '(c' → logprob: -10.725586891174316
    6. ' r' → logprob: -11.225586891174316
    7. '(' → logprob: -11.850586891174316
    8. ' c' → logprob: -11.850586891174316
    9. '  ' → logprob: -13.100586891174316
    10. '
' → logprob: -13.475586891174316

Token 851: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.010004802606999874
    2. '>' → logprob: -5.010004997253418
    3. ' +' → logprob: -5.760004997253418
    4. ' >' → logprob: -9.135004997253418
    5. '>=' → logprob: -10.760004997253418
    6. '   ' → logprob: -13.635004997253418
    7. '+r' → logprob: -13.635004997253418
    8. ' >=' → logprob: -15.010004997253418
    9. ' ' → logprob: -15.510004997253418
    10. ' ' → logprob: -15.760004997253418

Token 852: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008160584256984293
    2. '2' → logprob: -7.1258158683776855
    3. ' ' → logprob: -11.500816345214844
    4. '
' → logprob: -14.688316345214844
    5. '```' → logprob: -14.750816345214844
    6. '   ' → logprob: -15.438316345214844
    7. '3' → logprob: -16.313316345214844
    8. '``' → logprob: -17.313316345214844
    9. 'def' → logprob: -17.438316345214844
    10. '{
' → logprob: -17.563316345214844

Token 853: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.14335471391677856
    2. '>=' → logprob: -2.018354654312134
    3. ' >' → logprob: -8.018354415893555
    4. '>' → logprob: -8.393354415893555
    5. ')>=' → logprob: -9.643354415893555
    6. ']>=' → logprob: -10.518354415893555
    7. '   ' → logprob: -11.393354415893555
    8. ')' → logprob: -12.393354415893555
    9. ' <' → logprob: -12.393354415893555
    10. ' ' → logprob: -12.518354415893555

Token 854: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00014013137842994183
    2. ' H' → logprob: -8.875140190124512
    3. '   ' → logprob: -15.875140190124512
    4. ' ' → logprob: -17.000139236450195
    5. '
' → logprob: -17.125139236450195
    6. '	H' → logprob: -17.250139236450195
    7. '  ' → logprob: -19.500139236450195
    8. 'import' → logprob: -20.125139236450195
    9. 'def' → logprob: -20.375139236450195
    10. '<H' → logprob: -20.375139236450195

Token 855: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.00044783088378608227
    2. 'or' → logprob: -7.750447750091553
    3. '	or' → logprob: -12.250448226928711
    4. '<|end|>' → logprob: -12.500448226928711
    5. '   ' → logprob: -12.750448226928711
    6. ' ' → logprob: -12.875448226928711
    7. '    ' → logprob: -13.625448226928711
    8. '       ' → logprob: -14.375448226928711
    9. ' and' → logprob: -14.375448226928711
    10. '  ' → logprob: -15.500448226928711

Token 856: ' c' (ID: 274)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.44685760140419006
    2. 'c' → logprob: -1.0718575716018677
    3. ' W' → logprob: -4.696857452392578
    4. ' c' → logprob: -4.821857452392578
    5. '   ' → logprob: -7.446857452392578
    6. '  ' → logprob: -9.696857452392578
    7. ' ' → logprob: -9.821857452392578
    8. '    ' → logprob: -9.821857452392578
    9. 'w' → logprob: -10.446857452392578
    10. '       ' → logprob: -11.071857452392578

Token 857: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4350368082523346
    2. '>=' → logprob: -1.1850367784500122
    3. ' >=' → logprob: -3.0600368976593018
    4. ' +' → logprob: -9.560036659240723
    5. '>' → logprob: -10.060036659240723
    6. '≥' → logprob: -11.560036659240723
    7. ' ' → logprob: -12.935036659240723
    8. '   ' → logprob: -13.185036659240723
    9. ']>=' → logprob: -13.185036659240723
    10. ' >' → logprob: -13.185036659240723

Token 858: '1' (ID: 16)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0011546281166374683
    2. '2' → logprob: -7.50115442276001
    3. ' W' → logprob: -7.50115442276001
    4. '1' → logprob: -10.876154899597168
    5. '   ' → logprob: -11.626154899597168
    6. ' ' → logprob: -11.626154899597168
    7. '  ' → logprob: -12.126154899597168
    8. '0' → logprob: -13.751154899597168
    9. '```' → logprob: -14.001154899597168
    10. '    ' → logprob: -14.126154899597168

Token 859: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.14296121895313263
    2. '>=' → logprob: -2.017961263656616
    3. ' >' → logprob: -8.392961502075195
    4. '>' → logprob: -9.892961502075195
    5. ' <' → logprob: -13.017961502075195
    6. ')>=' → logprob: -13.017961502075195
    7. '   ' → logprob: -13.142961502075195
    8. '≥' → logprob: -14.517961502075195
    9. '```' → logprob: -14.642961502075195
    10. ']>=' → logprob: -14.767961502075195

Token 860: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.018170077353715897
    2. ' W' → logprob: -4.01816987991333
    3. ' ' → logprob: -11.643170356750488
    4. '   ' → logprob: -11.643170356750488
    5. '	W' → logprob: -14.268170356750488
    6. '  ' → logprob: -14.268170356750488
    7. '```' → logprob: -15.393170356750488
    8. '    ' → logprob: -15.705670356750488
    9. '=W' → logprob: -15.955670356750488
    10. ' ' → logprob: -15.955670356750488

Token 861: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6326502561569214
    2. ':' → logprob: -0.8826502561569214
    3. ':
' → logprob: -3.382650375366211
    4. ' or' → logprob: -4.257650375366211
    5. '   ' → logprob: -5.382650375366211
    6. ':return' → logprob: -6.132650375366211
    7. '    ' → logprob: -10.132650375366211
    8. '           ' → logprob: -10.132650375366211
    9. '      ' → logprob: -10.507650375366211
    10. '):' → logprob: -10.757650375366211

Token 862: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03637997806072235
    2. ':' → logprob: -3.4113800525665283
    3. ':
' → logprob: -7.036379814147949
    4. ':return' → logprob: -7.536379814147949
    5. ' or' → logprob: -7.786379814147949
    6. '   ' → logprob: -8.16137981414795
    7. ' and' → logprob: -8.91137981414795
    8. '           ' → logprob: -9.28637981414795
    9. '<|end|>' → logprob: -9.41137981414795
    10. ' return' → logprob: -10.03637981414795

Token 863: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3065416216850281
    2. 'return' (adapté à ' return') → logprob: -1.8065416812896729
    3. ' return' → logprob: -2.306541681289673
    4. '   ' → logprob: -8.931541442871094
    5. '           ' → logprob: -10.681541442871094
    6. '	return' → logprob: -10.806541442871094
    7. ':return' → logprob: -12.556541442871094
    8. ' ' → logprob: -12.931541442871094
    9. '
' → logprob: -13.681541442871094
    10. '{return' → logprob: -14.056541442871094

Token 864: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0002613358374219388
    2. ' False' → logprob: -8.250261306762695
    3. 'True' → logprob: -18.250261306762695
    4. '(False' → logprob: -20.250261306762695
    5. '   ' → logprob: -22.625261306762695
    6. '=False' → logprob: -23.375261306762695
    7. 'false' → logprob: -23.750261306762695
    8. '0' → logprob: -24.250261306762695
    9. 'F' → logprob: -24.625261306762695
    10. 'FALSE' → logprob: -24.625261306762695

Token 865: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21337145566940308
    2. '<|end|>' → logprob: -2.463371515274048
    3. '   ' → logprob: -2.713371515274048
    4. '
' → logprob: -3.588371515274048
    5. '\n' → logprob: -5.713371276855469
    6. '    ' → logprob: -5.713371276855469
    7. '    
' → logprob: -6.838371276855469
    8. '  
' → logprob: -7.213371276855469
    9. '  ' → logprob: -7.338371276855469
    10. '<|end|>' → logprob: -7.838371276855469

Token 866: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016856135800480843
    2. ' if' → logprob: -4.8918561935424805
    3. '       ' → logprob: -5.2668561935424805
    4. 'if' → logprob: -6.5168561935424805
    5. '
' → logprob: -7.6418561935424805
    6. ' for' → logprob: -7.8918561935424805
    7. '  
' → logprob: -7.8918561935424805
    8. ' ' → logprob: -8.26685619354248
    9. '    
' → logprob: -8.39185619354248
    10. '  ' → logprob: -9.14185619354248

Token 867: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07023317366838455
    2. 'for' → logprob: -3.320233106613159
    3. ' for' → logprob: -3.570233106613159
    4. 'if' → logprob: -6.820233345031738
    5. ' if' → logprob: -7.070233345031738
    6. '       ' → logprob: -7.070233345031738
    7. '#' (adapté à ' #') → logprob: -7.820233345031738
    8. '
' → logprob: -8.820233345031738
    9. ' #' → logprob: -9.945233345031738
    10. 'cells' → logprob: -10.445233345031738

Token 868: ' The' (ID: 623)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18708376586437225
    2. '#' → logprob: -2.1870837211608887
    3. 'if' → logprob: -3.3120837211608887
    4. 'king' → logprob: -4.812083721160889
    5. ' for' → logprob: -5.437083721160889
    6. '       ' → logprob: -5.437083721160889
    7. '   ' → logprob: -5.937083721160889
    8. ' king' → logprob: -7.312083721160889
    9. ' #' → logprob: -7.687083721160889
    10. 'cells' → logprob: -7.687083721160889

Token 869: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5860773921012878
    2. ' king' → logprob: -1.5860774517059326
    3. 'king' → logprob: -2.4610774517059326
    4. 'cells' → logprob: -3.5860774517059326
    5. '#' → logprob: -3.7110774517059326
    6. ' for' → logprob: -3.8360774517059326
    7. 'positions' → logprob: -3.9610774517059326
    8. '   ' → logprob: -4.0860772132873535
    9. 'def' → logprob: -4.2110772132873535
    10. 'if' → logprob: -5.0860772132873535

Token 870: '4' (ID: 19)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5108098983764648
    2. 'positions' → logprob: -2.010809898376465
    3. 'king' → logprob: -2.260809898376465
    4. 'cells' → logprob: -2.885809898376465
    5. '#' → logprob: -3.010809898376465
    6. 'occupied' → logprob: -4.010809898376465
    7. 'block' → logprob: -4.135809898376465
    8. 'if' → logprob: -4.510809898376465
    9. 'blocked' → logprob: -5.385809898376465
    10. 'def' → logprob: -6.385809898376465

Token 871: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.43422746658325195
    2. '(r' → logprob: -1.684227466583252
    3. ' cells' → logprob: -2.309227466583252
    4. ' king' → logprob: -3.309227466583252
    5. 'positions' → logprob: -4.309227466583252
    6. ' (' → logprob: -5.684227466583252
    7. ' positions' → logprob: -5.809227466583252
    8. 'r' → logprob: -5.934227466583252
    9. '   ' → logprob: -6.809227466583252
    10. '(' → logprob: -6.934227466583252

Token 872: ' must' (ID: 2804)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2058221995830536
    2. '=' → logprob: -1.955822229385376
    3. 'for' → logprob: -4.205821990966797
    4. ' for' → logprob: -4.830821990966797
    5. '   ' → logprob: -5.080821990966797
    6. ' to' → logprob: -5.455821990966797
    7. ' are' → logprob: -5.580821990966797
    8. 'to' → logprob: -6.205821990966797
    9. ' in' → logprob: -6.455821990966797
    10. 'are' → logprob: -7.080821990966797

Token 873: ' be' (ID: 413)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.47430863976478577
    2. 'not' → logprob: -0.9743086099624634
    3. ' be' → logprob: -8.724308967590332
    4. ')' → logprob: -10.474308967590332
    5. 'be' → logprob: -10.849308967590332
    6. 'all' → logprob: -11.724308967590332
    7. ' all' → logprob: -11.974308967590332
    8. '
' → logprob: -13.099308967590332
    9. '       ' → logprob: -13.599308967590332
    10. '           ' → logprob: -14.099308967590332

Token 874: ' free' (ID: 2240)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5151771306991577
    2. 'all' → logprob: -1.7651771306991577
    3. '{' → logprob: -3.5151772499084473
    4. 'in' → logprob: -3.7651772499084473
    5. '(r' → logprob: -3.8901772499084473
    6. 'king' → logprob: -3.8901772499084473
    7. '(X' → logprob: -4.140177249908447
    8. ' (' → logprob: -4.390177249908447
    9. ' all' → logprob: -4.390177249908447
    10. '((' → logprob: -4.515177249908447

Token 875: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09865231812000275
    2. ' or' → logprob: -3.0986523628234863
    3. 'and' → logprob: -3.7236523628234863
    4. '   ' → logprob: -3.9736523628234863
    5. ' of' → logprob: -5.473652362823486
    6. ' for' → logprob: -7.223652362823486
    7. ' to' → logprob: -8.223651885986328
    8. ',' → logprob: -8.973651885986328
    9. ' if' → logprob: -9.473651885986328
    10. '<|end|>' → logprob: -9.598651885986328

Token 876: 'occupied' (ID: 98229)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.3814890384674072
    2. ')' → logprob: -2.5064890384674072
    3. '(' → logprob: -3.0064890384674072
    4. ' (' → logprob: -3.1314890384674072
    5. '(p' → logprob: -3.2564890384674072
    6. 'not' → logprob: -3.5064890384674072
    7. '((' → logprob: -3.6314890384674072
    8. '
' → logprob: -4.256488800048828
    9. 'all' → logprob: -4.881488800048828
    10. 'for' → logprob: -5.256488800048828

Token 877: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -1.0779269933700562
    2. ')' → logprob: -1.3279269933700562
    3. ' or' → logprob: -1.3279269933700562
    4. 'by' → logprob: -2.5779271125793457
    5. 'or' → logprob: -3.3279271125793457
    6. '   ' → logprob: -5.452927112579346
    7. ',' → logprob: -6.077927112579346
    8. '       ' → logprob: -6.202927112579346
    9. '           ' → logprob: -6.327927112579346
    10. ' )' → logprob: -6.952927112579346

Token 878: ' king' (ID: 13793)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.8992862701416016
    2. 'king' → logprob: -0.8992862701416016
    3. 'p' → logprob: -2.1492862701416016
    4. 'open' → logprob: -3.7742862701416016
    5. ''.' → logprob: -4.524286270141602
    6. 'paw' → logprob: -5.024286270141602
    7. 'pawn' → logprob: -5.149286270141602
    8. '.' → logprob: -5.149286270141602
    9. ''p' → logprob: -5.649286270141602
    10. ' king' → logprob: -5.649286270141602

Token 879: ' only' (ID: 1606)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.09850140661001205
    2. 'or' → logprob: -2.723501443862915
    3. ')' → logprob: -4.223501205444336
    4. ',' → logprob: -4.348501205444336
    5. '   ' → logprob: -9.348501205444336
    6. ' ,' → logprob: -9.348501205444336
    7. '),' → logprob: -9.473501205444336
    8. ' ' → logprob: -9.598501205444336
    9. ' )' → logprob: -9.723501205444336
    10. ' and' → logprob: -10.723501205444336

Token 880: '),' (ID: 936)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.14222325384616852
    2. ')' → logprob: -2.267223358154297
    3. 'or' → logprob: -3.767223358154297
    4. ',' → logprob: -5.892223358154297
    5. ' if' → logprob: -6.392223358154297
    6. ' )' → logprob: -8.142223358154297
    7. '),' → logprob: -8.142223358154297
    8. 'if' → logprob: -8.267223358154297
    9. ' of' → logprob: -8.642223358154297
    10. ' and' → logprob: -8.767223358154297

Token 881: ' i' (ID: 575)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12732869386672974
    2. 'for' → logprob: -2.752328634262085
    3. '       ' → logprob: -3.752328634262085
    4. '   ' → logprob: -4.252328872680664
    5. 'return' → logprob: -5.127328872680664
    6. ' return' → logprob: -5.127328872680664
    7. '           ' → logprob: -6.127328872680664
    8. '
' → logprob: -6.502328872680664
    9. ' and' → logprob: -6.877328872680664
    10. ' not' → logprob: -7.627328872680664

Token 882: '.e' (ID: 2560)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0004008793330285698
    2. 'if' → logprob: -9.00040054321289
    3. '.e' → logprob: -9.12540054321289
    4. 'n' → logprob: -9.12540054321289
    5. 'for' → logprob: -10.62540054321289
    6. 'return' → logprob: -11.87540054321289
    7. '#' → logprob: -11.87540054321289
    8. 'e' → logprob: -12.00040054321289
    9. 'or' → logprob: -12.37540054321289
    10. 'elif' → logprob: -12.75040054321289

Token 883: '.' (ID: 13)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9237947463989258
    2. '(not' → logprob: -2.548794746398926
    3. 'not' → logprob: -2.673794746398926
    4. 'all' → logprob: -2.798794746398926
    5. 'for' → logprob: -2.923794746398926
    6. '   ' → logprob: -3.173794746398926
    7. '(' → logprob: -3.173794746398926
    8. 'king' → logprob: -3.298794746398926
    9. ' king' → logprob: -3.548794746398926
    10. '       ' → logprob: -3.798794746398926

Token 884: ' no' (ID: 860)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.6566242575645447
    2. '(r' → logprob: -1.9066243171691895
    3. 'not' → logprob: -2.4066243171691895
    4. ' all' → logprob: -2.7816243171691895
    5. '(' → logprob: -2.9066243171691895
    6. '((' → logprob: -3.6566243171691895
    7. '(all' → logprob: -3.7816243171691895
    8. '(not' → logprob: -4.2816243171691895
    9. ' not' → logprob: -4.4066243171691895
    10. '(grid' → logprob: -4.5316243171691895

Token 885: ' obstacles' (ID: 46430)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.0821689367294312
    2. ' (' → logprob: -1.4571689367294312
    3. '((' → logprob: -1.9571689367294312
    4. '(' → logprob: -2.4571690559387207
    5. ' obstacles' → logprob: -2.9571690559387207
    6. 'pawn' → logprob: -3.2071690559387207
    7. 'p' → logprob: -3.7071690559387207
    8. 'ob' → logprob: -3.8321690559387207
    9. ' paw' → logprob: -4.082169055938721
    10. '(ob' → logprob: -4.457169055938721

Token 886: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04129377380013466
    2. 'and' → logprob: -3.2912938594818115
    3. ',' → logprob: -6.291293621063232
    4. ' or' → logprob: -7.166293621063232
    5. '   ' → logprob: -7.541293621063232
    6. ' in' → logprob: -10.66629409790039
    7. ' if' → logprob: -11.29129409790039
    8. ')' → logprob: -11.41629409790039
    9. '<|end|>' → logprob: -11.54129409790039
    10. ' ,' → logprob: -11.66629409790039

Token 887: ' paw' (ID: 71961)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4688573181629181
    2. ' paw' → logprob: -1.2188572883605957
    3. '(p' → logprob: -3.5938572883605957
    4. 'paw' → logprob: -3.9688572883605957
    5. '(' → logprob: -4.343857288360596
    6. ' (' → logprob: -4.718857288360596
    7. '(r' → logprob: -5.468857288360596
    8. 'pawn' → logprob: -5.593857288360596
    9. 'r' → logprob: -7.718857288360596
    10. 'ob' → logprob: -7.968857288360596

Token 888: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.00026503115077503026
    2. 'n' → logprob: -8.750265121459961
    3. 'ons' → logprob: -9.625265121459961
    4. 's' → logprob: -10.625265121459961
    5. 'nts' → logprob: -11.500265121459961
    6. 'uns' → logprob: -13.500265121459961
    7. 'awns' → logprob: -13.500265121459961
    8. 'ms' → logprob: -14.375265121459961
    9. 'pawn' → logprob: -14.375265121459961
    10. 'nds' → logprob: -14.875265121459961

Token 889: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5533865690231323
    2. '   ' → logprob: -1.1783865690231323
    3. ' or' → logprob: -2.678386688232422
    4. 'and' → logprob: -3.553386688232422
    5. ' if' → logprob: -5.053386688232422
    6. ',' → logprob: -5.428386688232422
    7. '       ' → logprob: -5.928386688232422
    8. ' in' → logprob: -6.178386688232422
    9. ')' → logprob: -6.678386688232422
    10. '<|end|>' → logprob: -6.678386688232422

Token 890: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8033956289291382
    2. '   ' → logprob: -0.9283956289291382
    3. ' and' → logprob: -2.5533957481384277
    4. ' or' → logprob: -3.1783957481384277
    5. ' if' → logprob: -4.053395748138428
    6. '           ' → logprob: -4.303395748138428
    7. ',' → logprob: -6.428395748138428
    8. ' for' → logprob: -7.053395748138428
    9. 'and' → logprob: -7.303395748138428
    10. '    ' → logprob: -7.803395748138428

Token 891: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3907538652420044
    2. '   ' → logprob: -1.3907538652420044
    3. 'for' → logprob: -3.265753746032715
    4. '       ' → logprob: -4.140753746032715
    5. ' if' → logprob: -4.640753746032715
    6. '
' → logprob: -5.015753746032715
    7. 'if' → logprob: -6.765753746032715
    8. ' 
' → logprob: -7.015753746032715
    9. '    ' → logprob: -7.640753746032715
    10. '    
' → logprob: -7.765753746032715

Token 892: ' so' (ID: 813)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17173966765403748
    2. ' for' → logprob: -2.0467395782470703
    3. 'if' → logprob: -4.17173957824707
    4. ' if' → logprob: -5.42173957824707
    5. '   ' → logprob: -5.42173957824707
    6. ' king' → logprob: -6.17173957824707
    7. 'king' → logprob: -6.92173957824707
    8. '       ' → logprob: -7.29673957824707
    9. 'return' → logprob: -8.29673957824707
    10. 'cells' → logprob: -8.79673957824707

Token 893: ' these' (ID: 1879)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22048388421535492
    2. '       ' → logprob: -2.5954837799072266
    3. ' for' → logprob: -3.4704837799072266
    4. '           ' → logprob: -3.5954837799072266
    5. 'return' → logprob: -4.470483779907227
    6. '   ' → logprob: -4.470483779907227
    7. 'if' → logprob: -4.595483779907227
    8. 'all' → logprob: -4.720483779907227
    9. 'not' → logprob: -5.720483779907227
    10. ' not' → logprob: -5.970483779907227

Token 894: ' ' (ID: 220)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.317981481552124
    2. 'not' → logprob: -2.442981481552124
    3. ' cells' → logprob: -2.442981481552124
    4. 'cells' → logprob: -2.442981481552124
    5. ' in' → logprob: -5.942981719970703
    6. ' four' → logprob: -6.942981719970703
    7. '4' → logprob: -7.067981719970703
    8. '   ' → logprob: -7.192981719970703
    9. ' ' → logprob: -7.192981719970703
    10. '_cells' → logprob: -7.317981719970703

Token 895: '4' (ID: 19)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.7486783266067505
    2. 'not' → logprob: -1.4986783266067505
    3. 'cells' → logprob: -1.4986783266067505
    4. '(' → logprob: -3.498678207397461
    5. 'in' → logprob: -3.998678207397461
    6. ' not' → logprob: -5.373678207397461
    7. '4' → logprob: -5.748678207397461
    8. '(k' → logprob: -5.748678207397461
    9. 'and' → logprob: -5.873678207397461
    10. '   ' → logprob: -5.873678207397461

Token 896: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.5558204650878906
    2. ' not' → logprob: -1.3058204650878906
    3. ' cells' → logprob: -1.9308204650878906
    4. 'not' → logprob: -4.805820465087891
    5. 'positions' → logprob: -7.305820465087891
    6. ' in' → logprob: -8.05582046508789
    7. ' positions' → logprob: -8.05582046508789
    8. ')' → logprob: -8.30582046508789
    9. ' for' → logprob: -8.68082046508789
    10. 'for' → logprob: -9.05582046508789

Token 897: ' must' (ID: 2804)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6282358765602112
    2. 'not' → logprob: -0.8782358765602112
    3. '=' → logprob: -4.503235816955566
    4. 'should' → logprob: -4.753235816955566
    5. ' =' → logprob: -5.003235816955566
    6. ' in' → logprob: -5.378235816955566
    7. 'in' → logprob: -5.503235816955566
    8. 'must' → logprob: -5.878235816955566
    9. '.' → logprob: -6.128235816955566
    10. 'are' → logprob: -6.503235816955566

Token 898: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.47417399287223816
    2. 'not' → logprob: -0.9741740226745605
    3. ' all' → logprob: -10.724173545837402
    4. ')' → logprob: -11.224173545837402
    5. ' be' → logprob: -11.224173545837402
    6. 'all' → logprob: -11.349173545837402
    7. '       ' → logprob: -12.099173545837402
    8. '
' → logprob: -12.224173545837402
    9. 'return' → logprob: -12.224173545837402
    10. '<|end|>' → logprob: -12.724173545837402

Token 899: ' be' (ID: 413)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12132298201322556
    2. ' in' → logprob: -2.4963228702545166
    3. ' be' → logprob: -3.8713228702545166
    4. 'be' → logprob: -4.621323108673096
    5. ')' → logprob: -6.996323108673096
    6. ' ' → logprob: -9.496322631835938
    7. 'inter' → logprob: -10.246322631835938
    8. 'have' → logprob: -10.621322631835938
    9. 'contain' → logprob: -10.621322631835938
    10. '```' → logprob: -11.121322631835938

Token 900: ' an' (ID: 448)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.02324478141963482
    2. ' in' → logprob: -4.273244857788086
    3. 'ob' → logprob: -5.773244857788086
    4. '(p' → logprob: -6.273244857788086
    5. 'occupied' → logprob: -7.023244857788086
    6. '(' → logprob: -7.148244857788086
    7. '(ob' → logprob: -7.398244857788086
    8. '(r' → logprob: -7.398244857788086
    9. ' obstacles' → logprob: -7.773244857788086
    10. '(in' → logprob: -8.523244857788086

Token 901: ' obstacle' (ID: 57212)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.059579115360975266
    2. 'ob' → logprob: -2.9345791339874268
    3. ' obstacle' → logprob: -5.934578895568848
    4. '(ob' → logprob: -6.934578895568848
    5. ' obstacles' → logprob: -7.809578895568848
    6. '(y' → logprob: -8.809578895568848
    7. 'occupied' → logprob: -9.059578895568848
    8. '(' → logprob: -9.809578895568848
    9. '_ob' → logprob: -10.184578895568848
    10. '((' → logprob: -10.559578895568848

Token 902: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0604429617524147
    2. 'and' → logprob: -2.9354429244995117
    3. ' or' → logprob: -5.435442924499512
    4. '   ' → logprob: -6.935442924499512
    5. ',' → logprob: -9.310442924499512
    6. '           ' → logprob: -10.435442924499512
    7. ')' → logprob: -10.560442924499512
    8. 'or' → logprob: -11.060442924499512
    9. '    ' → logprob: -11.310442924499512
    10. '       ' → logprob: -11.560442924499512

Token 903: ' pawn' (ID: 112226)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9918657541275024
    2. '(p' → logprob: -1.8668657541275024
    3. ' (' → logprob: -1.9918657541275024
    4. '(' → logprob: -2.241865634918213
    5. 'pawn' → logprob: -2.491865634918213
    6. 'in' → logprob: -2.991865634918213
    7. '(r' → logprob: -3.241865634918213
    8. ' paw' → logprob: -3.866865634918213
    9. 'p' → logprob: -4.116865634918213
    10. ' pawn' → logprob: -5.241865634918213

Token 904: ' cell' (ID: 4206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49048295617103577
    2. '       ' → logprob: -1.2404829263687134
    3. ' and' → logprob: -2.490483045578003
    4. '           ' → logprob: -4.990482807159424
    5. ' for' → logprob: -5.615482807159424
    6. '
' → logprob: -6.365482807159424
    7. 'and' → logprob: -7.115482807159424
    8. ' or' → logprob: -7.240482807159424
    9. ' if' → logprob: -7.740482807159424
    10. ',' → logprob: -8.115483283996582

Token 905: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04580213502049446
    2. ' and' → logprob: -3.545802116394043
    3. '       ' → logprob: -4.795802116394043
    4. ' if' → logprob: -5.795802116394043
    5. '           ' → logprob: -6.670802116394043
    6. '
' → logprob: -6.795802116394043
    7. '    ' → logprob: -7.670802116394043
    8. '    
' → logprob: -8.170802116394043
    9. 'and' → logprob: -8.295802116394043
    10. ' for' → logprob: -8.670802116394043

Token 906: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23410718142986298
    2. '       ' → logprob: -1.7341071367263794
    3. ' and' → logprob: -3.734107255935669
    4. ' if' → logprob: -5.48410701751709
    5. '           ' → logprob: -6.85910701751709
    6. ' or' → logprob: -7.48410701751709
    7. ' for' → logprob: -7.85910701751709
    8. '
' → logprob: -7.98410701751709
    9. '    
' → logprob: -7.98410701751709
    10. '    ' → logprob: -8.60910701751709

Token 907: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5544828772544861
    2. '   ' → logprob: -1.4294829368591309
    3. 'for' (adapté à ' for') → logprob: -2.179482936859131
    4. ' if' → logprob: -3.179482936859131
    5. '       ' → logprob: -3.804482936859131
    6. 'if' → logprob: -4.929482936859131
    7. ' and' → logprob: -6.554482936859131
    8. '           ' → logprob: -8.554482460021973
    9. '	for' → logprob: -9.304482460021973
    10. 'and' → logprob: -9.804482460021973

Token 908: ' rr' (ID: 54129)
  Prédit: 'dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dr' → logprob: -0.02390274964272976
    2. 'nr' → logprob: -3.898902654647827
    3. 'rr' → logprob: -6.148902893066406
    4. 'delta' → logprob: -7.523902893066406
    5. 'dx' → logprob: -8.273902893066406
    6. 'i' → logprob: -8.898902893066406
    7. 'offset' → logprob: -9.273902893066406
    8. '(dr' → logprob: -9.648902893066406
    9. '(' → logprob: -10.398902893066406
    10. 'cell' → logprob: -10.773902893066406

Token 909: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.655887246131897
    2. 'in' → logprob: -0.780887246131897
    3. ',' → logprob: -3.7808871269226074
    4. ' ,' → logprob: -9.780887603759766
    5. ',r' → logprob: -9.780887603759766
    6. ',in' → logprob: -9.780887603759766
    7. ' ' → logprob: -10.905887603759766
    8. ')' → logprob: -12.405887603759766
    9. '	in' → logprob: -12.655887603759766
    10. ',i' → logprob: -13.155887603759766

Token 910: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06609869003295898
    2. '[r' → logprob: -2.816098690032959
    3. '(r' → logprob: -5.941098690032959
    4. '(range' → logprob: -6.816098690032959
    5. ' range' → logprob: -7.941098690032959
    6. 'r' → logprob: -10.441099166870117
    7. '[' → logprob: -11.566099166870117
    8. '{' → logprob: -13.941099166870117
    9. '   ' → logprob: -14.441099166870117
    10. ' [' → logprob: -14.941099166870117

Token 911: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.896309739408025e-07
    2. ' r' → logprob: -14.250000953674316
    3. '	r' → logprob: -18.125
    4. '[r' → logprob: -18.875
    5. '(r' → logprob: -19.625
    6. '{' → logprob: -19.75
    7. ',r' → logprob: -20.0
    8. '```' → logprob: -20.75
    9. '
' → logprob: -21.0
    10. '0' → logprob: -21.25

Token 912: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16461974382400513
    2. ',r' → logprob: -1.9146196842193604
    3. ',c' → logprob: -6.1646199226379395
    4. ' ,' → logprob: -6.2896199226379395
    5. ',
' → logprob: -9.289619445800781
    6. ',k' → logprob: -9.539619445800781
    7. ',-' → logprob: -10.414619445800781
    8. ',+' → logprob: -10.664619445800781
    9. ',n' → logprob: -10.789619445800781
    10. '+' → logprob: -10.789619445800781

Token 913: '+' (ID: 10)
  Prédit: ',r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.44035881757736206
    2. 'r' → logprob: -1.3153588771820068
    3. ',' → logprob: -2.940358877182007
    4. ',c' → logprob: -3.690358877182007
    5. '+' → logprob: -4.940358638763428
    6. 'c' → logprob: -6.565358638763428
    7. '   ' → logprob: -6.940358638763428
    8. ' ,' → logprob: -8.565359115600586
    9. ' r' → logprob: -9.565359115600586
    10. '       ' → logprob: -9.815359115600586

Token 914: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008355968166142702
    2. '0' → logprob: -7.125835418701172
    3. 'r' → logprob: -11.000835418701172
    4. ' ' → logprob: -11.375835418701172
    5. '
' → logprob: -13.875835418701172
    6. '   ' → logprob: -14.250835418701172
    7. 'c' → logprob: -14.250835418701172
    8. 'rr' → logprob: -14.750835418701172
    9. '  ' → logprob: -16.500835418701172
    10. '2' → logprob: -16.500835418701172

Token 915: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.197360098361969
    2. ',c' → logprob: -1.8223600387573242
    3. ',' → logprob: -4.572360038757324
    4. ']:' → logprob: -5.197360038757324
    5. '       ' → logprob: -7.947360038757324
    6. ']' → logprob: -7.947360038757324
    7. '   ' → logprob: -8.322360038757324
    8. ',r' → logprob: -8.572360038757324
    9. ']:
' → logprob: -9.197360038757324
    10. '):
' → logprob: -9.572360038757324

Token 916: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27069076895713806
    2. ' for' → logprob: -1.8956907987594604
    3. '       ' → logprob: -2.645690679550171
    4. 'for' → logprob: -5.39569091796875
    5. '               ' → logprob: -5.39569091796875
    6. ',' → logprob: -6.02069091796875
    7. '	       ' → logprob: -6.14569091796875
    8. '   ' → logprob: -7.77069091796875
    9. ':
' → logprob: -8.02069091796875
    10. ':' → logprob: -8.27069091796875

Token 917: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01268092542886734
    2. 'for' (adapté à ' for') → logprob: -4.387681007385254
    3. '           ' → logprob: -9.012681007385254
    4. '               ' → logprob: -10.262681007385254
    5. '       ' → logprob: -12.012681007385254
    6. '	for' → logprob: -12.262681007385254
    7. '            ' → logprob: -13.637681007385254
    8. ' ' → logprob: -13.887681007385254
    9. '   ' → logprob: -14.387681007385254
    10. ' ' → logprob: -14.387681007385254

Token 918: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -1.676292231422849e-05
    2. ' cc' → logprob: -11.000017166137695
    3. 'ccc' → logprob: -17.000017166137695
    4. '	cc' → logprob: -17.875017166137695
    5. '(cc' → logprob: -19.375017166137695
    6. 'col' → logprob: -21.875017166137695
    7. '_cc' → logprob: -22.000017166137695
    8. '   ' → logprob: -22.250017166137695
    9. 'CC' → logprob: -22.375017166137695
    10. 'dd' → logprob: -22.875017166137695

Token 919: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006724368315190077
    2. 'in' → logprob: -5.0067243576049805
    3. ' ' → logprob: -13.25672435760498
    4. '	in' → logprob: -13.38172435760498
    5. '           ' → logprob: -13.88172435760498
    6. '            ' → logprob: -14.13172435760498
    7. '    ' → logprob: -14.25672435760498
    8. '   ' → logprob: -14.38172435760498
    9. '		' → logprob: -14.88172435760498
    10. '        ' → logprob: -15.63172435760498

Token 920: ' [' (ID: 723)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -3.5716304410016164e-05
    2. ' [' → logprob: -10.250035285949707
    3. '[r' → logprob: -16.125036239624023
    4. '[' → logprob: -16.250036239624023
    5. '(c' → logprob: -16.625036239624023
    6. 'range' → logprob: -16.750036239624023
    7. '[
' → logprob: -18.875036239624023
    8. '   ' → logprob: -19.000036239624023
    9. 'c' → logprob: -19.625036239624023
    10. ' range' → logprob: -20.250036239624023

Token 921: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.47495681833243e-05
    2. ' c' → logprob: -10.750024795532227
    3. '[c' → logprob: -13.500024795532227
    4. '   ' → logprob: -14.125024795532227
    5. '(c' → logprob: -14.500024795532227
    6. '
' → logprob: -15.875024795532227
    7. '	c' → logprob: -16.250024795532227
    8. ')c' → logprob: -16.250024795532227
    9. ',c' → logprob: -16.625024795532227
    10. '<c' → logprob: -16.875024795532227

Token 922: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.578983724117279
    2. ',' → logprob: -0.828983724117279
    3. ' ,' → logprob: -6.953983783721924
    4. 'c' → logprob: -7.078983783721924
    5. '(cc' → logprob: -7.703983783721924
    6. 'cc' → logprob: -8.328983306884766
    7. ' in' → logprob: -9.453983306884766
    8. ',(' → logprob: -9.953983306884766
    9. ',
' → logprob: -9.953983306884766
    10. '           ' → logprob: -10.078983306884766

Token 923: '+' (ID: 10)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.07637430727481842
    2. ',' → logprob: -2.7013742923736572
    3. '(cc' → logprob: -5.701374530792236
    4. ',c' → logprob: -6.326374530792236
    5. 'c' → logprob: -7.076374530792236
    6. ' cc' → logprob: -8.826374053955078
    7. '0' → logprob: -9.201374053955078
    8. '   ' → logprob: -9.826374053955078
    9. '	cc' → logprob: -9.951374053955078
    10. '       ' → logprob: -10.826374053955078

Token 924: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -13.500004768371582
    3. '
' → logprob: -13.875004768371582
    4. '0' → logprob: -14.000004768371582
    5. '   ' → logprob: -15.187504768371582
    6. '```' → logprob: -15.187504768371582
    7. '-' → logprob: -16.000003814697266
    8. '[' → logprob: -16.000003814697266
    9. '+' → logprob: -16.187503814697266
    10. '2' → logprob: -16.562503814697266

Token 925: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.024671019986271858
    2. ']:' → logprob: -3.7746710777282715
    3. '               ' → logprob: -6.8996710777282715
    4. ']' → logprob: -8.399670600891113
    5. ']:
' → logprob: -9.274670600891113
    6. '           ' → logprob: -10.524670600891113
    7. ']:

' → logprob: -10.774670600891113
    8. '):
' → logprob: -11.774670600891113
    9. ',' → logprob: -11.774670600891113
    10. ' ]' → logprob: -11.899670600891113

Token 926: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004528374411165714
    2. ' if' → logprob: -8.625452995300293
    3. '<|end|>' → logprob: -8.750452995300293
    4. '                
' → logprob: -10.875452995300293
    5. '           ' → logprob: -11.250452995300293
    6. '<|end|>' → logprob: -11.250452995300293
    7. '	           ' → logprob: -11.375452995300293
    8. 'if' → logprob: -11.500452995300293
    9. ',' → logprob: -11.625452995300293
    10. '                   ' → logprob: -12.000452995300293

Token 927: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3534155786037445
    2. 'if' (adapté à ' if') → logprob: -1.228415608406067
    3. '               ' → logprob: -5.353415489196777
    4. '   ' → logprob: -9.728415489196777
    5. '                   ' → logprob: -9.728415489196777
    6. '           ' → logprob: -9.853415489196777
    7. '       ' → logprob: -10.103415489196777
    8. ' ' → logprob: -12.353415489196777
    9. 'token' → logprob: -12.853415489196777
    10. '	if' → logprob: -12.978415489196777

Token 928: ' (' (ID: 350)
  Prédit: '(rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rr' → logprob: -0.024156806990504265
    2. '(ob' → logprob: -3.7741568088531494
    3. '(' → logprob: -7.14915657043457
    4. '(not' → logprob: -10.52415657043457
    5. '(r' → logprob: -10.64915657043457
    6. 'ob' → logprob: -11.02415657043457
    7. '(cc' → logprob: -11.02415657043457
    8. ' (' → logprob: -11.27415657043457
    9. '(obs' → logprob: -11.77415657043457
    10. '(grid' → logprob: -12.27415657043457

Token 929: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.01418207585811615
    2. '(rr' → logprob: -4.264182090759277
    3. ' rr' → logprob: -11.389182090759277
    4. '_rr' → logprob: -12.014182090759277
    5. 'r' → logprob: -14.764182090759277
    6. 'rrrr' → logprob: -15.014182090759277
    7. ')' → logprob: -16.01418113708496
    8. '   ' → logprob: -16.26418113708496
    9. '(' → logprob: -17.01418113708496
    10. 'RR' → logprob: -17.38918113708496

Token 930: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006771618966013193
    2. ',c' → logprob: -5.006771564483643
    3. ' ,' → logprob: -10.1317720413208
    4. ',ll' → logprob: -12.8817720413208
    5. ',const' → logprob: -13.2567720413208
    6. ',
' → logprob: -13.3817720413208
    7. ',row' → logprob: -13.7567720413208
    8. ',None' → logprob: -14.0067720413208
    9. '(cc' → logprob: -14.2567720413208
    10. ',int' → logprob: -14.2567720413208

Token 931: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -1.4021237802808173e-05
    2. ' cc' → logprob: -11.250014305114746
    3. '	cc' → logprob: -14.875014305114746
    4. '   ' → logprob: -15.750014305114746
    5. '(cc' → logprob: -15.875014305114746
    6. ',' → logprob: -16.37501335144043
    7. 'c' → logprob: -17.00001335144043
    8. ')' → logprob: -17.00001335144043
    9. 'ccc' → logprob: -18.12501335144043
    10. '_cc' → logprob: -18.50001335144043

Token 932: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48434558510780334
    2. ' in' → logprob: -0.984345555305481
    3. 'in' → logprob: -4.609345436096191
    4. ' )' → logprob: -8.609345436096191
    5. ' not' → logprob: -10.234345436096191
    6. 'not' → logprob: -11.234345436096191
    7. '<|end|>' → logprob: -11.984345436096191
    8. ',' → logprob: -12.234345436096191
    9. ')==' → logprob: -12.859345436096191
    10. ' ' → logprob: -12.984345436096191

Token 933: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4740917682647705
    2. 'in' → logprob: -0.9740917682647705
    3. ')' → logprob: -11.599091529846191
    4. ' not' → logprob: -13.099091529846191
    5. ' ' → logprob: -13.474091529846191
    6. 'not' → logprob: -14.099091529846191
    7. '   ' → logprob: -15.224091529846191
    8. '	in' → logprob: -15.599091529846191
    9. '[' → logprob: -15.849091529846191
    10. '
' → logprob: -16.099092483520508

Token 934: ' obstacles' (ID: 46430)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -3.2020991056924686e-05
    2. 'p' → logprob: -10.375032424926758
    3. ' obstacles' → logprob: -14.500032424926758
    4. '
' → logprob: -16.625032424926758
    5. 'paw' → logprob: -16.875032424926758
    6. '   ' → logprob: -17.250032424926758
    7. '(ob' → logprob: -18.000032424926758
    8. '	ob' → logprob: -18.125032424926758
    9. 'Ob' → logprob: -19.125032424926758
    10. 'pawn' → logprob: -19.375032424926758

Token 935: '_set' (ID: 5451)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.586800217628479
    2. '_set' → logprob: -0.836800217628479
    3. 'or' → logprob: -4.5868000984191895
    4. ')' → logprob: -9.461800575256348
    5. '_SET' → logprob: -9.586800575256348
    6. 'and' → logprob: -9.586800575256348
    7. '   ' → logprob: -9.586800575256348
    8. '	or' → logprob: -9.586800575256348
    9. '<|end|>' → logprob: -9.711800575256348
    10. '_or' → logprob: -9.961800575256348

Token 936: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.018580298870801926
    2. 'or' → logprob: -4.143580436706543
    3. ':' → logprob: -7.268580436706543
    4. '               ' → logprob: -7.393580436706543
    5. '                   ' → logprob: -7.768580436706543
    6. '<|end|>' → logprob: -7.768580436706543
    7. '                       ' → logprob: -8.893580436706543
    8. '	or' → logprob: -9.518580436706543
    9. '           ' → logprob: -10.393580436706543
    10. ':return' → logprob: -10.643580436706543

Token 937: '                   ' (ID: 699)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.20346245169639587
    2. '                   ' → logprob: -1.7034624814987183
    3. '                       ' → logprob: -6.703462600708008
    4. 'or' → logprob: -7.828462600708008
    5. '               ' → logprob: -8.828462600708008
    6. '                  ' → logprob: -9.328462600708008
    7. ':' → logprob: -10.328462600708008
    8. '                    ' → logprob: -10.328462600708008
    9. '                      ' → logprob: -11.078462600708008
    10. '<|end|>' → logprob: -11.328462600708008

Token 938: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06988541781902313
    2. '                       ' → logprob: -2.944885492324829
    3. 'return' (adapté à ' return') → logprob: -4.69488525390625
    4. ' return' → logprob: -5.19488525390625
    5. '               ' → logprob: -9.31988525390625
    6. '                           ' → logprob: -10.81988525390625
    7. '   ' → logprob: -11.19488525390625
    8. '           ' → logprob: -11.19488525390625
    9. '                  ' → logprob: -11.31988525390625
    10. ' or' → logprob: -11.81988525390625

Token 939: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -6.217951886355877e-05
    2. ' False' → logprob: -10.000061988830566
    3. 'True' → logprob: -11.000061988830566
    4. ' True' → logprob: -19.500062942504883
    5. 'false' → logprob: -22.125062942504883
    6. '   ' → logprob: -23.250062942504883
    7. '(False' → logprob: -23.250062942504883
    8. '_false' → logprob: -24.500062942504883
    9. '=False' → logprob: -25.250062942504883
    10. '
' → logprob: -25.375062942504883

Token 940: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017164701130241156
    2. '<|end|>' → logprob: -6.751716613769531
    3. '                ' → logprob: -8.376716613769531
    4. ' or' → logprob: -9.001716613769531
    5. '                   ' → logprob: -10.001716613769531
    6. '              ' → logprob: -10.501716613769531
    7. '           ' → logprob: -10.626716613769531
    8. ' and' → logprob: -10.751716613769531
    9. '                
' → logprob: -11.126716613769531
    10. '			' → logprob: -11.626716613769531

Token 941: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.268254896393046e-05
    2. '                ' → logprob: -10.750082969665527
    3. '<|end|>' → logprob: -10.875082969665527
    4. '              ' → logprob: -11.375082969665527
    5. '                   ' → logprob: -11.750082969665527
    6. '           ' → logprob: -11.750082969665527
    7. '			' → logprob: -12.250082969665527
    8. '       ' → logprob: -13.000082969665527
    9. '                
' → logprob: -13.375082969665527
    10. '             ' → logprob: -13.750082969665527

Token 942: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24736684560775757
    2. ' if' → logprob: -1.6223669052124023
    3. ' or' → logprob: -4.497366905212402
    4. 'if' (adapté à ' if') → logprob: -4.622366905212402
    5. '                ' → logprob: -8.247366905212402
    6. '                   ' → logprob: -8.747366905212402
    7. 'or' → logprob: -8.872366905212402
    8. ' ' → logprob: -9.997366905212402
    9. '<|end|>' → logprob: -10.247366905212402
    10. '              ' → logprob: -10.872366905212402

Token 943: ' (' (ID: 350)
  Prédit: '(rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rr' → logprob: -0.01254426408559084
    2. ' (' → logprob: -4.51254415512085
    3. '(' → logprob: -6.51254415512085
    4. '(cc' → logprob: -12.512544631958008
    5. '(rs' → logprob: -13.137544631958008
    6. '(p' → logprob: -13.387544631958008
    7. '   ' → logprob: -14.262544631958008
    8. ' ' → logprob: -14.262544631958008
    9. '(r' → logprob: -14.512544631958008
    10. '(rc' → logprob: -14.887544631958008

Token 944: 'rr' (ID: 1006)
  Prédit: '(rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rr' → logprob: -6.957014556974173e-05
    2. 'rr' → logprob: -10.125069618225098
    3. '(p' → logprob: -11.750069618225098
    4. ' (' → logprob: -12.000069618225098
    5. '(' → logprob: -12.375069618225098
    6. 'p' → logprob: -12.750069618225098
    7. '(pp' → logprob: -13.000069618225098
    8. '(cc' → logprob: -13.250069618225098
    9. '(r' → logprob: -13.750069618225098
    10. '(rs' → logprob: -13.875069618225098

Token 945: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009853479452431202
    2. ',p' → logprob: -4.759853363037109
    3. ',c' → logprob: -6.759853363037109
    4. ' ,' → logprob: -10.50985336303711
    5. ' in' → logprob: -11.25985336303711
    6. ',(' → logprob: -11.50985336303711
    7. ',
' → logprob: -12.13485336303711
    8. 'p' → logprob: -12.38485336303711
    9. '(cc' → logprob: -12.38485336303711
    10. ',in' → logprob: -12.63485336303711

Token 946: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.0002776630863081664
    2. '(cc' → logprob: -8.500277519226074
    3. '(' → logprob: -10.625277519226074
    4. ' cc' → logprob: -11.250277519226074
    5. '(p' → logprob: -11.375277519226074
    6. 'p' → logprob: -11.625277519226074
    7. 'rr' → logprob: -12.375277519226074
    8. 'c' → logprob: -12.750277519226074
    9. 'pawn' → logprob: -12.750277519226074
    10. '
' → logprob: -13.625277519226074

Token 947: ')' (ID: 8)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.39486896991729736
    2. 'in' → logprob: -1.6448689699172974
    3. ')' → logprob: -2.019868850708008
    4. ',' → logprob: -7.894868850708008
    5. ' )' → logprob: -9.519868850708008
    6. ' not' → logprob: -10.644868850708008
    7. 'not' → logprob: -11.394868850708008
    8. ' ' → logprob: -11.644868850708008
    9. '   ' → logprob: -12.519868850708008
    10. '),' → logprob: -12.519868850708008

Token 948: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20142142474651337
    2. 'in' → logprob: -1.7014213800430298
    3. ')' → logprob: -12.076421737670898
    4. ' ' → logprob: -13.826421737670898
    5. '<|end|>' → logprob: -15.076421737670898
    6. 'In' → logprob: -15.826421737670898
    7. ' not' → logprob: -15.951421737670898
    8. ']' → logprob: -16.0764217376709
    9. '
' → logprob: -16.3264217376709
    10. '}' → logprob: -16.3264217376709

Token 949: ' paw' (ID: 71961)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00015335931675508618
    2. ' paw' → logprob: -9.500153541564941
    3. 'paw' → logprob: -9.625153541564941
    4. 'pawn' → logprob: -11.375153541564941
    5. '   ' → logprob: -14.625153541564941
    6. '```' → logprob: -16.750152587890625
    7. ' ' → logprob: -17.000152587890625
    8. '
' → logprob: -17.250152587890625
    9. '           ' → logprob: -17.625152587890625
    10. ' p' → logprob: -17.625152587890625

Token 950: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -2.0219828002154827e-05
    2. 'n' → logprob: -11.625020027160645
    3. 'ons' → logprob: -12.250020027160645
    4. 'nts' → logprob: -12.875020027160645
    5. 's' → logprob: -13.000020027160645
    6. 'ans' → logprob: -14.250020027160645
    7. 'nds' → logprob: -14.750020027160645
    8. 'uns' → logprob: -15.125020027160645
    9. 'ms' → logprob: -17.12502098083496
    10. 'awns' → logprob: -17.25002098083496

Token 951: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0028412528336048126
    2. ':' → logprob: -6.252841472625732
    3. 'set' → logprob: -7.877841472625732
    4. ')' → logprob: -8.752840995788574
    5. ')set' → logprob: -9.127840995788574
    6. ':
' → logprob: -9.252840995788574
    7. 'and' → logprob: -10.127840995788574
    8. '):' → logprob: -10.752840995788574
    9. 's' → logprob: -11.002840995788574
    10. ':set' → logprob: -11.127840995788574

Token 952: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5200168490409851
    2. ':' → logprob: -1.5200169086456299
    3. ':
' → logprob: -2.27001690864563
    4. '                       ' → logprob: -3.14501690864563
    5. ':return' → logprob: -3.64501690864563
    6. '               ' → logprob: -5.270016670227051
    7. ' or' → logprob: -5.520016670227051
    8. '<|end|>' → logprob: -7.145016670227051
    9. '           ' → logprob: -7.270016670227051
    10. '                      ' → logprob: -7.645016670227051

Token 953: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0012863060692325234
    2. '                       ' → logprob: -6.751286506652832
    3. '               ' → logprob: -10.626286506652832
    4. ':return' → logprob: -10.626286506652832
    5. ':' → logprob: -10.751286506652832
    6. 'return' → logprob: -11.251286506652832
    7. ' return' → logprob: -11.751286506652832
    8. ':
' → logprob: -11.751286506652832
    9. '                  ' → logprob: -12.126286506652832
    10. '           ' → logprob: -12.376286506652832

Token 954: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6225916743278503
    2. ' return' → logprob: -0.8725916743278503
    3. '                   ' → logprob: -3.122591733932495
    4. '                       ' → logprob: -6.497591495513916
    5. '               ' → logprob: -11.372591972351074
    6. '	return' → logprob: -11.997591972351074
    7. ':return' → logprob: -12.747591972351074
    8. '   ' → logprob: -12.872591972351074
    9. '           ' → logprob: -13.122591972351074
    10. '       ' → logprob: -13.747591972351074

Token 955: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.011976441368460655
    2. 'True' → logprob: -4.51197624206543
    3. ' False' → logprob: -7.01197624206543
    4. ' True' → logprob: -10.51197624206543
    5. '(False' → logprob: -20.76197624206543
    6. '(True' → logprob: -22.88697624206543
    7. '=False' → logprob: -23.63697624206543
    8. '   ' → logprob: -23.76197624206543
    9. '_false' → logprob: -24.01197624206543
    10. ' ' → logprob: -24.38697624206543

Token 956: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 957: '       ' (ID: 309)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.187390998005867
    2. '       ' → logprob: -2.1873910427093506
    3. '<|end|>' → logprob: -4.1873908042907715
    4. ' return' → logprob: -4.3123908042907715
    5. ')' → logprob: -4.4373908042907715
    6. 'return' → logprob: -5.0623908042907715
    7. '   ' → logprob: -5.8123908042907715
    8. '           ' → logprob: -6.0623908042907715
    9. '
' → logprob: -6.1873908042907715
    10. '	return' → logprob: -6.9373908042907715

Token 958: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18781642615795135
    2. '               ' → logprob: -1.9378163814544678
    3. '   ' → logprob: -4.687816619873047
    4. '           ' → logprob: -4.687816619873047
    5. '<|end|>' → logprob: -6.187816619873047
    6. ')' → logprob: -6.562816619873047
    7. '	return' → logprob: -6.687816619873047
    8. '                   ' → logprob: -6.937816619873047
    9. ' return' → logprob: -7.187816619873047
    10. 'return' (adapté à ' return') → logprob: -7.187816619873047

Token 959: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.029750604182481766
    2. ' True' → logprob: -3.5297505855560303
    3. '   ' → logprob: -15.90475082397461
    4. '(True' → logprob: -18.15475082397461
    5. 'False' → logprob: -20.77975082397461
    6. 'true' → logprob: -22.15475082397461
    7. '=True' → logprob: -22.40475082397461
    8. ' ' → logprob: -23.27975082397461
    9. '       ' → logprob: -23.40475082397461
    10. ' ' → logprob: -23.40475082397461

Token 960: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3506435453891754
    2. '<|end|>' → logprob: -1.350643515586853
    3. ')' → logprob: -4.350643634796143
    4. '    
' → logprob: -4.600643634796143
    5. 'def' → logprob: -5.350643634796143
    6. '
' → logprob: -6.225643634796143
    7. '  
' → logprob: -6.225643634796143
    8. ' 
' → logprob: -6.600643634796143
    9. '```' → logprob: -6.850643634796143
    10. '<|end|>' → logprob: -7.100643634796143

Token 961: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3435550928115845
    2. '   ' → logprob: -2.093554973602295
    3. ' 
' → logprob: -2.468554973602295
    4. ')' → logprob: -3.843554973602295
    5. ':' → logprob: -3.843554973602295
    6. '    
' → logprob: -4.843554973602295
    7. '\' → logprob: -5.218554973602295
    8. '  
' → logprob: -5.843554973602295
    9. 'state' → logprob: -6.093554973602295
    10. '```' → logprob: -6.218554973602295

Token 962: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03466320410370827
    2. 'visited' → logprob: -4.284663200378418
    3. '   ' → logprob: -4.534663200378418
    4. 'from' → logprob: -5.534663200378418
    5. 'state' → logprob: -6.409663200378418
    6. 'queue' → logprob: -6.534663200378418
    7. '
' → logprob: -6.909663200378418
    8. 'next' → logprob: -7.659663200378418
    9. '#' (adapté à ' #') → logprob: -7.784663200378418
    10. 'deque' → logprob: -9.284663200378418

Token 963: ' Check' (ID: 6208)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011782770976424217
    2. 'visited' → logprob: -5.136782646179199
    3. '   ' → logprob: -5.511782646179199
    4. 'from' → logprob: -6.886782646179199
    5. 'queue' → logprob: -7.636782646179199
    6. '
' → logprob: -8.8867826461792
    7. '#' → logprob: -10.1367826461792
    8. 'deque' → logprob: -10.5117826461792
    9. ' def' → logprob: -10.7617826461792
    10. '    
' → logprob: -11.1367826461792

Token 964: ' adjacency' (ID: 177015)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0095926523208618
    2. 'if' → logprob: -1.2595926523208618
    3. ' (' → logprob: -1.8845926523208618
    4. '(' → logprob: -2.2595925331115723
    5. ' king' → logprob: -3.7595925331115723
    6. 'def' → logprob: -4.259592533111572
    7. ' #' → logprob: -4.634592533111572
    8. '#' → logprob: -4.884592533111572
    9. 'king' → logprob: -5.134592533111572
    10. 'p' → logprob: -5.384592533111572

Token 965: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3368104100227356
    2. 'def' → logprob: -1.3368103504180908
    3. 'for' → logprob: -4.58681058883667
    4. ' for' → logprob: -5.71181058883667
    5. ' =' → logprob: -5.96181058883667
    6. '(' → logprob: -5.96181058883667
    7. ':' → logprob: -6.46181058883667
    8. ' of' → logprob: -7.71181058883667
    9. '=' → logprob: -7.83681058883667
    10. ' (' → logprob: -7.96181058883667

Token 966: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.5670813918113708
    2. '(' → logprob: -1.4420814514160156
    3. ' king' → logprob: -2.9420814514160156
    4. 'positions' → logprob: -3.1920814514160156
    5. 'state' → logprob: -3.4420814514160156
    6. 'the' → logprob: -4.567081451416016
    7. 'kr' → logprob: -4.692081451416016
    8. 'open' → logprob: -4.942081451416016
    9. 'p' → logprob: -5.442081451416016
    10. 'pieces' → logprob: -5.567081451416016

Token 967: ' edge' (ID: 11165)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.6348778009414673
    2. '   ' → logprob: -1.7598778009414673
    3. 'def' → logprob: -1.7598778009414673
    4. '_positions' → logprob: -3.3848776817321777
    5. '_' → logprob: -3.6348776817321777
    6. '(' → logprob: -4.259877681732178
    7. ' (' → logprob: -4.759877681732178
    8. ' ' → logprob: -5.009877681732178
    9. ':' → logprob: -5.259877681732178
    10. 'cells' → logprob: -5.759877681732178

Token 968: ' to' (ID: 316)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.30095621943473816
    2. '   ' → logprob: -2.1759562492370605
    3. 'def' → logprob: -2.9259562492370605
    4. '(' → logprob: -3.5509562492370605
    5. '_cells' → logprob: -4.0509562492370605
    6. '(s' → logprob: -5.0509562492370605
    7. ' =' → logprob: -5.0509562492370605
    8. 'cells' → logprob: -5.1759562492370605
    9. ')' → logprob: -5.3009562492370605
    10. ',' → logprob: -5.5509562492370605

Token 969: ' two' (ID: 1920)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.1788009405136108
    2. 'open' → logprob: -1.1788009405136108
    3. 'any' → logprob: -1.8038009405136108
    4. 'pawn' → logprob: -2.8038010597229004
    5. 'king' → logprob: -2.9288010597229004
    6. ' king' → logprob: -3.8038010597229004
    7. '(' → logprob: -3.8038010597229004
    8. ' paw' → logprob: -4.4288010597229
    9. 'paw' → logprob: -4.6788010597229
    10. 'ob' → logprob: -5.1788010597229

Token 970: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.22326458990573883
    2. ' open' → logprob: -2.098264694213867
    3. ' king' → logprob: -4.348264694213867
    4. ' cells' → logprob: -4.848264694213867
    5. ' squares' → logprob: -4.848264694213867
    6. 'op' → logprob: -4.973264694213867
    7. 'cells' → logprob: -5.223264694213867
    8. 's' → logprob: -5.348264694213867
    9. 'king' → logprob: -5.723264694213867
    10. 'adj' → logprob: -5.848264694213867

Token 971: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.2898183763027191
    2. 's' → logprob: -1.4148184061050415
    3. ' squares' → logprob: -5.914818286895752
    4. '_spaces' → logprob: -6.289818286895752
    5. 'spaces' → logprob: -6.539818286895752
    6. '_cells' → logprob: -6.539818286895752
    7. 'cells' → logprob: -7.289818286895752
    8. '```' → logprob: -8.16481876373291
    9. ')' → logprob: -9.91481876373291
    10. ',' → logprob: -10.66481876373291

Token 972: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17548340559005737
    2. 'def' → logprob: -2.675483465194702
    3. 'adj' → logprob: -3.050483465194702
    4. 'king' → logprob: -3.675483465194702
    5. '
' → logprob: -4.800483226776123
    6. '#' → logprob: -5.300483226776123
    7. 'open' → logprob: -6.175483226776123
    8. 'for' → logprob: -6.675483226776123
    9. ' king' → logprob: -6.925483226776123
    10. '    
' → logprob: -8.175483703613281

Token 973: ' move' (ID: 5275)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.7157978415489197
    2. 'be' → logprob: -1.2157979011535645
    3. 'def' → logprob: -1.9657979011535645
    4. 'continue' → logprob: -3.8407979011535645
    5. 'move' → logprob: -4.5907979011535645
    6. ' move' → logprob: -5.0907979011535645
    7. 'pass' → logprob: -5.3407979011535645
    8. 'solve' → logprob: -5.3407979011535645
    9. 's' → logprob: -5.5907979011535645
    10. 'valid' → logprob: -5.9657979011535645

Token 974: ' king' (ID: 13793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7343750596046448
    2. 'def' → logprob: -0.7343750596046448
    3. 'for' → logprob: -3.859375
    4. '
' → logprob: -4.734375
    5. ' for' → logprob: -5.734375
    6. '#' → logprob: -6.859375
    7. ':' → logprob: -7.234375
    8. '(' → logprob: -7.484375
    9. '(
' → logprob: -7.734375
    10. 'if' → logprob: -8.109375

Token 975: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44568800926208496
    2. 'def' → logprob: -1.070688009262085
    3. 'for' → logprob: -5.070688247680664
    4. '
' → logprob: -5.195688247680664
    5. ':' → logprob: -6.445688247680664
    6. ' for' → logprob: -6.945688247680664
    7. '#' → logprob: -7.195688247680664
    8. ':
' → logprob: -7.945688247680664
    9. ' def' → logprob: -8.195688247680664
    10. ',' → logprob: -8.570688247680664

Token 976: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03513036668300629
    2. 'def' → logprob: -4.410130500793457
    3. '
' → logprob: -4.785130500793457
    4. '<|end|>' → logprob: -5.285130500793457
    5. ':' → logprob: -5.410130500793457
    6. ' for' → logprob: -7.285130500793457
    7. '#' → logprob: -7.410130500793457
    8. ' def' → logprob: -7.410130500793457
    9. '    
' → logprob: -7.410130500793457
    10. '  
' → logprob: -7.785130500793457

Token 977: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6322253346443176
    2. 'def' → logprob: -1.2572252750396729
    3. '
' → logprob: -2.132225275039673
    4. '#' (adapté à ' #') → logprob: -3.382225275039673
    5. ' def' → logprob: -4.757225513458252
    6. '    
' → logprob: -5.007225513458252
    7. '<|end|>' → logprob: -5.507225513458252
    8. ' 
' → logprob: -5.632225513458252
    9. '  
' → logprob: -6.007225513458252
    10. ' for' → logprob: -6.382225513458252

Token 978: ' Rules' (ID: 37317)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3420569598674774
    2. '   ' → logprob: -1.5920569896697998
    3. '
' → logprob: -3.8420569896698
    4. ' def' → logprob: -4.092056751251221
    5. ' for' → logprob: -4.217056751251221
    6. '#' → logprob: -5.342056751251221
    7. 'visited' → logprob: -5.467056751251221
    8. ' next' → logprob: -5.592056751251221
    9. ' 
' → logprob: -5.717056751251221
    10. 'for' → logprob: -5.717056751251221

Token 979: ' say' (ID: 2891)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8000759482383728
    2. ':' → logprob: -1.9250760078430176
    3. ' =' → logprob: -2.0500760078430176
    4. '   ' → logprob: -2.4250760078430176
    5. ' for' → logprob: -2.8000760078430176
    6. '#' → logprob: -3.1750760078430176
    7. 'for' → logprob: -3.4250760078430176
    8. '
' → logprob: -4.550076007843018
    9. '=' → logprob: -4.675076007843018
    10. ':
' → logprob: -4.925076007843018

Token 980: ':
' (ID: 734)
  Prédit: ' king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' king' → logprob: -0.2692270278930664
    2. '   ' → logprob: -1.7692270278930664
    3. ' that' → logprob: -3.8942270278930664
    4. ' the' → logprob: -4.519227027893066
    5. '#' → logprob: -4.769227027893066
    6. ' #' → logprob: -5.144227027893066
    7. 'king' → logprob: -5.269227027893066
    8. 'def' → logprob: -5.269227027893066
    9. ' for' → logprob: -5.894227027893066
    10. ' def' → logprob: -5.894227027893066

Token 981: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08926168829202652
    2. ' #' → logprob: -3.214261770248413
    3. '#' → logprob: -3.339261770248413
    4. ' for' → logprob: -5.839261531829834
    5. '
' → logprob: -6.214261531829834
    6. '    ' → logprob: -6.589261531829834
    7. '    
' → logprob: -6.839261531829834
    8. ' def' → logprob: -7.714261531829834
    9. 'def' → logprob: -8.089262008666992
    10. ' (' → logprob: -8.339262008666992

Token 982: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.12585359811782837
    2. '   ' → logprob: -2.8758535385131836
    3. ' #' → logprob: -2.8758535385131836
    4. ' for' → logprob: -6.625853538513184
    5. ' king' → logprob: -6.625853538513184
    6. '
' → logprob: -6.750853538513184
    7. 'def' → logprob: -8.125853538513184
    8. 'for' → logprob: -8.375853538513184
    9. 'The' → logprob: -8.500853538513184
    10. '#
' → logprob: -9.125853538513184

Token 983: ' If' (ID: 1843)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.062264107167720795
    2. ' #' → logprob: -3.9372642040252686
    3. ' king' → logprob: -4.1872639656066895
    4. '   ' → logprob: -5.0622639656066895
    5. 'def' → logprob: -5.4372639656066895
    6. 'king' → logprob: -5.6872639656066895
    7. 'The' → logprob: -6.1872639656066895
    8. 'King' → logprob: -6.3122639656066895
    9. 'for' → logprob: -6.4372639656066895
    10. ' for' → logprob: -6.6872639656066895

Token 984: ' a' (ID: 261)
  Prédit: ' king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' king' → logprob: -0.9254267811775208
    2. 'king' → logprob: -1.175426721572876
    3. ' the' → logprob: -2.800426721572876
    4. 'the' → logprob: -3.175426721572876
    5. 'open' → logprob: -3.425426721572876
    6. ' any' → logprob: -3.425426721572876
    7. '(' → logprob: -3.550426721572876
    8. ' open' → logprob: -3.675426721572876
    9. ' (' → logprob: -4.050426959991455
    10. 'any' → logprob: -4.300426959991455

Token 985: ' whole' (ID: 6062)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.7835769057273865
    2. ' king' → logprob: -0.7835769057273865
    3. 'move' → logprob: -4.408576965332031
    4. ' move' → logprob: -4.408576965332031
    5. ' ' → logprob: -4.658576965332031
    6. 'space' → logprob: -4.658576965332031
    7. 'open' → logprob: -4.908576965332031
    8. 'k' → logprob: -5.158576965332031
    9. 'direction' → logprob: -5.783576965332031
    10. ' (' → logprob: -6.158576965332031

Token 986: ' edge' (ID: 11165)
  Prédit: ' king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' king' → logprob: -0.18208041787147522
    2. ' move' → logprob: -2.9320805072784424
    3. ' ' → logprob: -3.3070805072784424
    4. 'king' → logprob: -3.4320805072784424
    5. ' 
' → logprob: -5.182080268859863
    6. 'n' → logprob: -5.182080268859863
    7. ' (' → logprob: -5.307080268859863
    8. '_' → logprob: -5.307080268859863
    9. 'space' → logprob: -5.807080268859863
    10. ' line' → logprob: -5.807080268859863

Token 987: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.21021011471748352
    2. ' is' → logprob: -2.460210084915161
    3. 'of' → logprob: -2.710210084915161
    4. '_' → logprob: -4.71021032333374
    5. ' (' → logprob: -4.83521032333374
    6. 'is' → logprob: -5.08521032333374
    7. ' adjacent' → logprob: -5.83521032333374
    8. ' ' → logprob: -6.08521032333374
    9. ' can' → logprob: -6.46021032333374
    10. ',' → logprob: -6.71021032333374

Token 988: ' the' (ID: 290)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.2820586562156677
    2. 'the' → logprob: -1.5320587158203125
    3. ' king' → logprob: -3.6570587158203125
    4. ' the' → logprob: -5.6570587158203125
    5. '#' → logprob: -8.782058715820312
    6. '   ' → logprob: -10.282058715820312
    7. ' ' → logprob: -10.282058715820312
    8. '(' → logprob: -10.657058715820312
    9. '```' → logprob: -11.032058715820312
    10. '2' → logprob: -11.282058715820312

Token 989: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.225424125790596
    2. ' king' → logprob: -1.6004241704940796
    3. ' ' → logprob: -13.225423812866211
    4. '```' → logprob: -13.725423812866211
    5. 'state' → logprob: -13.975423812866211
    6. 'King' → logprob: -14.100423812866211
    7. 'block' → logprob: -14.100423812866211
    8. '#' → logprob: -14.225423812866211
    9. 'queen' → logprob: -14.350423812866211
    10. '2' → logprob: -14.475423812866211

Token 990: ' piece' (ID: 9047)
  Prédit: ' touches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' touches' → logprob: -1.0364494323730469
    2. ' is' → logprob: -1.1614494323730469
    3. ' can' → logprob: -2.536449432373047
    4. ' (' → logprob: -3.036449432373047
    5. 'is' → logprob: -3.536449432373047
    6. ' occupies' → logprob: -3.536449432373047
    7. 'touch' → logprob: -3.786449432373047
    8. ' shares' → logprob: -4.161449432373047
    9. 'adj' → logprob: -4.161449432373047
    10. 'can' → logprob: -4.661449432373047

Token 991: ' (' (ID: 350)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7150029540061951
    2. ' can' → logprob: -1.7150030136108398
    3. 'is' → logprob: -2.46500301361084
    4. 'can' → logprob: -2.84000301361084
    5. ' (' → logprob: -2.96500301361084
    6. ' has' → logprob: -2.96500301361084
    7. ' touches' → logprob: -4.09000301361084
    8. 'has' → logprob: -4.96500301361084
    9. 'adj' → logprob: -4.96500301361084
    10. 's' → logprob: -5.34000301361084

Token 992: 'i' (ID: 72)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0903081893920898
    2. 'r' → logprob: -2.09030818939209
    3. '(r' → logprob: -2.09030818939209
    4. ' (' → logprob: -2.34030818939209
    5. '#' → logprob: -2.84030818939209
    6. '4' → logprob: -2.96530818939209
    7. 'the' → logprob: -3.21530818939209
    8. 'kr' → logprob: -3.21530818939209
    9. ')' → logprob: -3.71530818939209
    10. '0' → logprob: -4.09030818939209

Token 993: '.e' (ID: 2560)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03749851882457733
    2. 'n' → logprob: -3.4124984741210938
    3. '==' → logprob: -7.162498474121094
    4. '(' → logprob: -7.412498474121094
    5. ',' → logprob: -7.537498474121094
    6. '=' → logprob: -7.787498474121094
    7. '0' → logprob: -8.162498474121094
    8. ')' → logprob: -8.287498474121094
    9. '#' → logprob: -9.287498474121094
    10. 'r' → logprob: -9.537498474121094

Token 994: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7281686663627625
    2. '.,' → logprob: -1.2281687259674072
    3. '.' → logprob: -2.9781687259674072
    4. '(' → logprob: -3.1031687259674072
    5. 'r' → logprob: -3.6031687259674072
    6. '#' → logprob: -3.7281687259674072
    7. ',j' → logprob: -4.228168487548828
    8. ':' → logprob: -4.728168487548828
    9. ' ,' → logprob: -4.853168487548828
    10. '=' → logprob: -4.853168487548828

Token 995: ' two' (ID: 1920)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6489645838737488
    2. 'kr' → logprob: -1.5239646434783936
    3. 'king' → logprob: -2.1489646434783936
    4. '(r' → logprob: -3.3989646434783936
    5. 'the' → logprob: -3.6489646434783936
    6. 'r' → logprob: -4.0239644050598145
    7. ' (' → logprob: -4.5239644050598145
    8. 'top' → logprob: -5.1489644050598145
    9. '   ' → logprob: -5.2739644050598145
    10. '0' → logprob: -5.5239644050598145

Token 996: ' adjacent' (ID: 39069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4662128686904907
    2. 'cells' → logprob: -1.4662128686904907
    3. '
' → logprob: -1.7162128686904907
    4. 'r' → logprob: -2.216212749481201
    5. ')' → logprob: -3.091212749481201
    6. '#' → logprob: -3.216212749481201
    7. 'adj' → logprob: -3.466212749481201
    8. ' adjacent' → logprob: -4.091212749481201
    9. 'open' → logprob: -4.091212749481201
    10. 'positions' → logprob: -4.216212749481201

Token 997: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.13245244324207306
    2. ' cells' → logprob: -2.6324524879455566
    3. ',' → logprob: -3.6324524879455566
    4. ')' → logprob: -4.882452487945557
    5. 'r' → logprob: -5.257452487945557
    6. 's' → logprob: -5.632452487945557
    7. '
' → logprob: -6.507452487945557
    8. ' ,' → logprob: -6.632452487945557
    9. '_cells' → logprob: -6.632452487945557
    10. 'spaces' → logprob: -7.007452487945557

Token 998: ' forming' (ID: 44860)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.157016322016716
    2. ' are' → logprob: -3.1570162773132324
    3. ' on' → logprob: -3.5320162773132324
    4. ',' → logprob: -4.407016277313232
    5. 'are' → logprob: -4.657016277313232
    6. 'on' → logprob: -4.782016277313232
    7. ' in' → logprob: -4.907016277313232
    8. ' is' → logprob: -5.157016277313232
    9. ' of' → logprob: -5.407016277313232
    10. ' along' → logprob: -5.532016277313232

Token 999: ' an' (ID: 448)
  Prédit: ' an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -1.4267948865890503
    2. 'a' → logprob: -1.8017948865890503
    3. ' a' → logprob: -1.8017948865890503
    4. 'an' → logprob: -1.8017948865890503
    5. 'the' → logprob: -1.9267948865890503
    6. ' the' → logprob: -2.30179500579834
    7. 'that' → logprob: -5.05179500579834
    8. ' that' → logprob: -5.30179500579834
    9. 'king' → logprob: -6.17679500579834
    10. ' one' → logprob: -6.30179500579834

Token 1000: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.18174491822719574
    2. ' edge' → logprob: -1.806744933128357
    3. '
' → logprob: -6.3067450523376465
    4. '```' → logprob: -10.056744575500488
    5. '_edge' → logprob: -10.306744575500488
    6. ' ' → logprob: -10.306744575500488
    7. '``' → logprob: -10.931744575500488
    8. ')' → logprob: -11.431744575500488
    9. '   ' → logprob: -12.556744575500488
    10. ' 
' → logprob: -12.556744575500488

Token 1001: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012148984707891941
    2. ')
' → logprob: -5.637148857116699
    3. ' of' → logprob: -5.637148857116699
    4. ' )' → logprob: -6.262148857116699
    5. ',' → logprob: -6.512148857116699
    6. 'of' → logprob: -7.387148857116699
    7. '),' → logprob: -8.8871488571167
    8. '):
' → logprob: -9.3871488571167
    9. ' in' → logprob: -9.6371488571167
    10. ' are' → logprob: -9.6371488571167

Token 1002: ' are' (ID: 553)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7410261631011963
    2. ' can' → logprob: -0.8660261631011963
    3. 'can' → logprob: -3.1160261631011963
    4. 'is' → logprob: -3.9910261631011963
    5. ' has' → logprob: -4.741025924682617
    6. ')' → logprob: -5.116025924682617
    7. '#' → logprob: -5.491025924682617
    8. ' in' → logprob: -5.616025924682617
    9. ' touches' → logprob: -6.366025924682617
    10. ' adjacent' → logprob: -6.491025924682617

Token 1003: ' adjacent' (ID: 39069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.4818931818008423
    2. ' adjacent' → logprob: -2.1068930625915527
    3. 'both' → logprob: -2.8568930625915527
    4. 'occupied' → logprob: -2.8568930625915527
    5. 'equal' → logprob: -3.2318930625915527
    6. 'open' → logprob: -3.8568930625915527
    7. ' both' → logprob: -4.606893062591553
    8. 'empty' → logprob: -4.606893062591553
    9. 'all' → logprob: -4.731893062591553
    10. ' equal' → logprob: -4.856893062591553

Token 1004: ' on' (ID: 402)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0932316780090332
    2. 'to' → logprob: -2.843231678009033
    3. ' (' → logprob: -4.468231678009033
    4. '_' → logprob: -4.718231678009033
    5. '_to' → logprob: -5.468231678009033
    6. ',' → logprob: -6.093231678009033
    7. ')' → logprob: -6.718231678009033
    8. ' ' → logprob: -7.093231678009033
    9. '(' → logprob: -7.968231678009033
    10. ' and' → logprob: -8.343231201171875

Token 1005: ' the' (ID: 290)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.6678823828697205
    2. 'one' → logprob: -1.2928824424743652
    3. 'the' → logprob: -1.7928824424743652
    4. 'at' → logprob: -3.7928824424743652
    5. 'a' → logprob: -5.417882442474365
    6. 'two' → logprob: -5.667882442474365
    7. ' all' → logprob: -5.792882442474365
    8. 'each' → logprob: -5.917882442474365
    9. ' at' → logprob: -6.667882442474365
    10. 'exact' → logprob: -6.667882442474365

Token 1006: ' side' (ID: 4307)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.44181013107299805
    2. ' same' → logprob: -1.816810131072998
    3. 'left' → logprob: -2.691810131072998
    4. 'grid' → logprob: -3.441810131072998
    5. ' grid' → logprob: -3.816810131072998
    6. ' left' → logprob: -4.316810131072998
    7. ' king' → logprob: -4.566810131072998
    8. 'right' → logprob: -4.691810131072998
    9. 'next' → logprob: -5.066810131072998
    10. 'board' → logprob: -5.441810131072998

Token 1007: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.039606064558029175
    2. 'to' → logprob: -3.7896060943603516
    3. ',' → logprob: -4.539606094360352
    4. '   ' → logprob: -6.164606094360352
    5. ' (' → logprob: -6.664606094360352
    6. ' in' → logprob: -7.664606094360352
    7. ' of' → logprob: -7.789606094360352
    8. ',
' → logprob: -8.289606094360352
    9. '#' → logprob: -8.914606094360352
    10. ' and' → logprob: -9.039606094360352

Token 1008: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -1.035188913345337
    2. ' two' → logprob: -1.535188913345337
    3. 'the' → logprob: -2.160188913345337
    4. 'a' → logprob: -2.410188913345337
    5. 'open' → logprob: -2.910188913345337
    6. 'an' → logprob: -3.035188913345337
    7. ' a' → logprob: -3.160188913345337
    8. ' an' → logprob: -3.785188913345337
    9. '(' → logprob: -3.910188913345337
    10. ' the' → logprob: -4.410188674926758

Token 1009: ' open' (ID: 2494)
  Prédit: ' cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cells' → logprob: -1.1180216073989868
    2. 'open' → logprob: -1.4930216073989868
    3. 'cells' → logprob: -1.8680216073989868
    4. ' open' → logprob: -2.7430214881896973
    5. 'empty' → logprob: -3.4930214881896973
    6. '#' → logprob: -3.6180214881896973
    7. '
' → logprob: -3.7430214881896973
    8. ' (' → logprob: -3.9930214881896973
    9. ' empty' → logprob: -4.243021488189697
    10. ' squares' → logprob: -4.493021488189697

Token 1010: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.06561954319477081
    2. '_' → logprob: -3.440619468688965
    3. '_spaces' → logprob: -4.190619468688965
    4. '_cells' → logprob: -4.690619468688965
    5. 's' → logprob: -5.940619468688965
    6. ' _' → logprob: -6.065619468688965
    7. ' squares' → logprob: -7.065619468688965
    8. ')' → logprob: -7.940619468688965
    9. ',' → logprob: -8.815619468688965
    10. 'spaces' → logprob: -8.940619468688965

Token 1011: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9753077626228333
    2. ',' → logprob: -1.1003077030181885
    3. ':' → logprob: -1.7253077030181885
    4. ',
' → logprob: -3.1003077030181885
    5. ':
' → logprob: -3.3503077030181885
    6. ' (' → logprob: -4.475307941436768
    7. '(' → logprob: -6.350307941436768
    8. ' ,' → logprob: -6.475307941436768
    9. '[' → logprob: -6.725307941436768
    10. ' of' → logprob: -6.850307941436768

Token 1012: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2759152054786682
    2. '   ' → logprob: -1.9009151458740234
    3. ' continue' → logprob: -3.9009151458740234
    4. ' then' → logprob: -4.275915145874023
    5. ' #' → logprob: -4.400915145874023
    6. ' for' → logprob: -4.900915145874023
    7. ' and' → logprob: -5.025915145874023
    8. '
' → logprob: -5.525915145874023
    9. ' the' → logprob: -5.525915145874023
    10. 'continue' → logprob: -5.900915145874023

Token 1013: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.04930693656206131
    2. 'can' → logprob: -3.049306869506836
    3. ' continue' → logprob: -8.424306869506836
    4. ' have' → logprob: -8.549306869506836
    5. 'continue' → logprob: -9.299306869506836
    6. ' may' → logprob: -9.674306869506836
    7. ' could' → logprob: -10.549306869506836
    8. '#' → logprob: -10.674306869506836
    9. ' ' → logprob: -11.174306869506836
    10. ' will' → logprob: -11.299306869506836

Token 1014: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.16662518680095673
    2. ' move' → logprob: -1.9166251420974731
    3. 'slide' → logprob: -5.166625022888184
    4. 'make' → logprob: -8.416625022888184
    5. 'try' → logprob: -8.791625022888184
    6. 'push' → logprob: -8.916625022888184
    7. 'attempt' → logprob: -10.041625022888184
    8. 'generate' → logprob: -11.166625022888184
    9. ' slide' → logprob: -11.291625022888184
    10. '
' → logprob: -11.291625022888184

Token 1015: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.21908408403396606
    2. 'the' → logprob: -2.2190840244293213
    3. ' king' → logprob: -2.4690840244293213
    4. 'king' → logprob: -6.4690842628479
    5. '_' → logprob: -6.8440842628479
    6. ' (' → logprob: -9.094083786010742
    7. ' ' → logprob: -9.219083786010742
    8. ',' → logprob: -9.219083786010742
    9. '_the' → logprob: -9.219083786010742
    10. ' to' → logprob: -10.094083786010742

Token 1016: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.07915691286325455
    2. ' king' → logprob: -2.5791568756103516
    3. 'space' → logprob: -9.829156875610352
    4. ' next' → logprob: -10.579156875610352
    5. 'piece' → logprob: -10.704156875610352
    6. ' ' → logprob: -10.829156875610352
    7. 'next' → logprob: -11.329156875610352
    8. '```' → logprob: -11.516656875610352
    9. 'k' → logprob: -11.579156875610352
    10. '.king' → logprob: -11.641656875610352

Token 1017: ' sliding' (ID: 53853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0495760552585125
    2. ':' → logprob: -4.799576282501221
    3. '
' → logprob: -5.549576282501221
    4. 'def' → logprob: -5.674576282501221
    5. ' in' → logprob: -5.924576282501221
    6. '.' → logprob: -5.924576282501221
    7. 's' → logprob: -6.049576282501221
    8. '_' → logprob: -6.049576282501221
    9. ' for' → logprob: -6.049576282501221
    10. ':
' → logprob: -6.049576282501221

Token 1018: ' one' (ID: 1001)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.46898990869522095
    2. ' into' → logprob: -1.9689898490905762
    3. ' the' → logprob: -2.968989849090576
    4. ' in' → logprob: -3.218989849090576
    5. '_' → logprob: -3.468989849090576
    6. ' one' → logprob: -3.718989849090576
    7. 'to' → logprob: -3.968989849090576
    8. ',' → logprob: -4.343989849090576
    9. 'the' → logprob: -4.843989849090576
    10. ' (' → logprob: -5.468989849090576

Token 1019: ' cell' (ID: 4206)
  Prédit: ' cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cell' → logprob: -1.690595030784607
    2. 'token' → logprob: -1.690595030784607
    3. ' step' → logprob: -1.815595030784607
    4. ' token' → logprob: -1.815595030784607
    5. ' position' → logprob: -2.4405951499938965
    6. ' tile' → logprob: -2.8155951499938965
    7. 'position' → logprob: -3.3155951499938965
    8. 'cell' → logprob: -3.4405951499938965
    9. 'step' → logprob: -4.0655951499938965
    10. 'tile' → logprob: -4.0655951499938965

Token 1020: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22691591084003448
    2. '_' → logprob: -2.3519158363342285
    3. 'in' → logprob: -2.9769158363342285
    4. ',' → logprob: -3.8519158363342285
    5. ' at' → logprob: -4.6019158363342285
    6. '.' → logprob: -5.1019158363342285
    7. ' to' → logprob: -5.4769158363342285
    8. '#' → logprob: -6.3519158363342285
    9. '   ' → logprob: -6.3519158363342285
    10. ' into' → logprob: -6.3519158363342285

Token 1021: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.10413353890180588
    2. ' that' → logprob: -2.9791336059570312
    3. 'the' → logprob: -3.3541336059570312
    4. 'direction' → logprob: -4.479133605957031
    5. ' direction' → logprob: -7.979133605957031
    6. 'a' → logprob: -7.979133605957031
    7. ' the' → logprob: -8.229133605957031
    8. '   ' → logprob: -8.479133605957031
    9. 'dire' → logprob: -8.604133605957031
    10. '
' → logprob: -9.479133605957031

Token 1022: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.12697367370128632
    2. ' direction' → logprob: -2.1269736289978027
    3. '_direction' → logprob: -10.626974105834961
    4. '(direction' → logprob: -11.751974105834961
    5. '方向' → logprob: -12.376974105834961
    6. 'dire' → logprob: -12.501974105834961
    7. '   ' → logprob: -13.376974105834961
    8. '
' → logprob: -13.751974105834961
    9. ' ' → logprob: -14.001974105834961
    10. 'dir' → logprob: -14.501974105834961

Token 1023: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09502997249364853
    2. 'def' → logprob: -2.7200300693511963
    3. '#' → logprob: -4.220029830932617
    4. '
' → logprob: -5.095029830932617
    5. 'for' → logprob: -6.845029830932617
    6. '    
' → logprob: -7.720029830932617
    7. 'moves' → logprob: -7.845029830932617
    8. 'edges' → logprob: -7.970029830932617
    9. ' for' → logprob: -8.345029830932617
    10. '```' → logprob: -8.595029830932617

Token 1024: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004968797322362661
    2. '
' → logprob: -6.129968643188477
    3. '    
' → logprob: -6.254968643188477
    4. ' for' → logprob: -8.379968643188477
    5. 'for' → logprob: -8.754968643188477
    6. '#' → logprob: -9.379968643188477
    7. 'moves' → logprob: -9.504968643188477
    8. 'def' → logprob: -9.754968643188477
    9. 'Next' → logprob: -10.004968643188477
    10. '  
' → logprob: -10.504968643188477

Token 1025: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004263007547706366
    2. '
' → logprob: -6.504262924194336
    3. 'def' → logprob: -6.879262924194336
    4. '    
' → logprob: -7.004262924194336
    5. '#' (adapté à ' #') → logprob: -7.754262924194336
    6. 'for' → logprob: -9.629262924194336
    7. ':' → logprob: -9.754262924194336
    8. '\n' → logprob: -10.129262924194336
    9. 'moves' → logprob: -10.129262924194336
    10. '\' → logprob: -10.504262924194336

Token 1026: ' Means' (ID: 125152)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3265551030635834
    2. '\n' → logprob: -2.451555013656616
    3. '    
' → logprob: -2.701555013656616
    4. '
' → logprob: -3.201555013656616
    5. '#' → logprob: -3.326555013656616
    6. ' 
' → logprob: -4.076555252075195
    7. '\' → logprob: -4.451555252075195
    8. '  
' → logprob: -5.451555252075195
    9. 'for' → logprob: -5.951555252075195
    10. '   
' → logprob: -6.576555252075195

Token 1027: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5827165246009827
    2. ' that' → logprob: -1.957716464996338
    3. '   ' → logprob: -2.082716464996338
    4. ' king' → logprob: -2.957716464996338
    5. 'for' → logprob: -3.082716464996338
    6. ' we' → logprob: -3.707716464996338
    7. ' the' → logprob: -3.957716464996338
    8. 'king' → logprob: -5.082716464996338
    9. ' if' → logprob: -5.207716464996338
    10. 'that' → logprob: -5.207716464996338

Token 1028: ' need' (ID: 1309)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.23474878072738647
    2. 'can' → logprob: -1.7347488403320312
    3. ' need' → logprob: -3.9847488403320312
    4. ' continue' → logprob: -5.609748840332031
    5. 'need' → logprob: -5.984748840332031
    6. '#' → logprob: -6.359748840332031
    7. ' have' → logprob: -6.484748840332031
    8. 'cannot' → logprob: -7.234748840332031
    9. ' should' → logprob: -7.484748840332031
    10. 'continue' → logprob: -7.734748840332031

Token 1029: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2690805494785309
    2. 'to' → logprob: -1.8940805196762085
    3. '   ' → logprob: -2.644080638885498
    4. ' four' → logprob: -5.269080638885498
    5. ' a' → logprob: -6.269080638885498
    6. ' at' → logprob: -6.644080638885498
    7. ' two' → logprob: -6.894080638885498
    8. ' check' → logprob: -7.144080638885498
    9. 'a' → logprob: -7.769080638885498
    10. '4' → logprob: -7.894080638885498

Token 1030: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.006115193944424391
    2. ' check' → logprob: -5.756114959716797
    3. 'continue' → logprob: -7.006114959716797
    4. 'for' → logprob: -7.256114959716797
    5. '#' → logprob: -8.256114959716797
    6. 'consider' → logprob: -8.506114959716797
    7. 'try' → logprob: -8.631114959716797
    8. '
' → logprob: -9.256114959716797
    9. '```' → logprob: -9.381114959716797
    10. '   ' → logprob: -9.756114959716797

Token 1031: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0024936199188232
    2. 'if' → logprob: -1.6274936199188232
    3. ' if' → logprob: -1.8774936199188232
    4. ' for' → logprob: -2.2524936199188232
    5. ' all' → logprob: -3.7524936199188232
    6. 'all' → logprob: -3.8774936199188232
    7. 'the' → logprob: -4.127493858337402
    8. 'each' → logprob: -4.127493858337402
    9. ' the' → logprob: -4.252493858337402
    10. 'dire' → logprob: -4.252493858337402

Token 1032: ' four' (ID: 4242)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.8447259664535522
    2. 'four' → logprob: -1.0947259664535522
    3. '4' → logprob: -2.219726085662842
    4. ' four' → logprob: -2.719726085662842
    5. ' directions' → logprob: -3.719726085662842
    6. 'possible' → logprob: -4.844726085662842
    7. '   ' → logprob: -5.094726085662842
    8. '(' → logprob: -5.094726085662842
    9. 'king' → logprob: -5.344726085662842
    10. 'adj' → logprob: -5.969726085662842

Token 1033: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.46731963753700256
    2. ' directions' → logprob: -1.0923196077346802
    3. 'edges' → logprob: -3.5923197269439697
    4. ' edges' → logprob: -4.967319488525391
    5. 's' → logprob: -7.217319488525391
    6. '   ' → logprob: -7.717319488525391
    7. '_edges' → logprob: -8.21731948852539
    8. 'for' → logprob: -8.59231948852539
    9. ' (' → logprob: -8.71731948852539
    10. '#' → logprob: -8.84231948852539

Token 1034: ' king' (ID: 13793)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6414411664009094
    2. '   ' → logprob: -0.8914411664009094
    3. ' for' → logprob: -3.0164411067962646
    4. 'def' → logprob: -4.641441345214844
    5. '#' → logprob: -6.266441345214844
    6. ':' → logprob: -7.641441345214844
    7. '
' → logprob: -7.641441345214844
    8. 'edges' → logprob: -8.141441345214844
    9. 'edge' → logprob: -8.266441345214844
    10. 'moves' → logprob: -8.641441345214844

Token 1035: ' can' (ID: 665)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.5471998453140259
    2. '_positions' → logprob: -1.6721998453140259
    3. ')' → logprob: -2.5471997261047363
    4. '_' → logprob: -3.2971997261047363
    5. '   ' → logprob: -3.4221997261047363
    6. '_f' → logprob: -3.5471997261047363
    7. 's' → logprob: -4.672199726104736
    8. '_moves' → logprob: -4.922199726104736
    9. ' _' → logprob: -5.547199726104736
    10. '.' → logprob: -5.672199726104736

Token 1036: ' slide' (ID: 24969)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.011731524951756
    2. 'slide' → logprob: -4.7617316246032715
    3. ' move' → logprob: -6.8867316246032715
    4. 'expand' → logprob: -7.5117316246032715
    5. 'occup' → logprob: -8.136731147766113
    6. 'try' → logprob: -8.261731147766113
    7. 'moves' → logprob: -8.261731147766113
    8. '   ' → logprob: -9.011731147766113
    9. '```' → logprob: -9.011731147766113
    10. 'attempt' → logprob: -9.136731147766113

Token 1037: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08494088053703308
    2. ':' → logprob: -3.5849409103393555
    3. 'for' → logprob: -3.7099409103393555
    4. ' for' → logprob: -4.2099409103393555
    5. ':
' → logprob: -5.2099409103393555
    6. '
' → logprob: -5.4599409103393555
    7. 'def' → logprob: -6.0849409103393555
    8. '#' → logprob: -7.5849409103393555
    9. ',' → logprob: -7.9599409103393555
    10. '.' → logprob: -8.834940910339355

Token 1038: ' if' (ID: 538)
  Prédit: ' see'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' see' → logprob: -0.6349934935569763
    2. 'see' → logprob: -1.384993553161621
    3. ' if' → logprob: -3.384993553161621
    4. 'if' → logprob: -3.509993553161621
    5. ' their' → logprob: -3.634993553161621
    6. ' for' → logprob: -4.259993553161621
    7. ' the' → logprob: -4.634993553161621
    8. '#' → logprob: -4.634993553161621
    9. 'their' → logprob: -4.634993553161621
    10. 'for' → logprob: -4.759993553161621

Token 1039: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6877546310424805
    2. 'open' → logprob: -2.1877546310424805
    3. 'both' → logprob: -2.4377546310424805
    4. ' the' → logprob: -2.6877546310424805
    5. 'there' → logprob: -3.0627546310424805
    6. 'that' → logprob: -3.4377546310424805
    7. 'all' → logprob: -3.8127546310424805
    8. ' all' → logprob: -4.1877546310424805
    9. '(' → logprob: -4.3127546310424805
    10. 'possible' → logprob: -4.4377546310424805

Token 1040: ' two' (ID: 1920)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.5908458232879639
    2. 'next' → logprob: -1.5908458232879639
    3. ' king' → logprob: -2.215845823287964
    4. ' two' → logprob: -3.590845823287964
    5. 'two' → logprob: -3.590845823287964
    6. 'king' → logprob: -4.340846061706543
    7. 'open' → logprob: -4.340846061706543
    8. ' adjacent' → logprob: -4.465846061706543
    9. ' ' → logprob: -4.590846061706543
    10. '
' → logprob: -5.465846061706543

Token 1041: ' open' (ID: 2494)
  Prédit: ' open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' open' → logprob: -1.2164965867996216
    2. ' cells' → logprob: -1.2164965867996216
    3. 'open' → logprob: -1.9664965867996216
    4. 'cells' → logprob: -2.091496467590332
    5. ' adjacent' → logprob: -2.466496467590332
    6. ' squares' → logprob: -3.841496467590332
    7. 'adj' → logprob: -4.341496467590332
    8. '
' → logprob: -5.341496467590332
    9. ' ' → logprob: -5.716496467590332
    10. 's' → logprob: -5.841496467590332

Token 1042: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.01545749418437481
    2. 's' → logprob: -4.265457630157471
    3. '_' → logprob: -7.765457630157471
    4. ' squares' → logprob: -8.015457153320312
    5. ')' → logprob: -8.515457153320312
    6. ' _' → logprob: -9.390457153320312
    7. '_cells' → logprob: -9.640457153320312
    8. '   ' → logprob: -10.265457153320312
    9. '_spaces' → logprob: -10.765457153320312
    10. ',' → logprob: -10.765457153320312

Token 1043: ' adjacent' (ID: 39069)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.13573533296585083
    2. ' are' → logprob: -2.510735273361206
    3. 'match' → logprob: -3.885735273361206
    4. ' match' → logprob: -5.010735511779785
    5. 'occup' → logprob: -5.385735511779785
    6. 'exact' → logprob: -6.385735511779785
    7. '```' → logprob: -6.635735511779785
    8. '
' → logprob: -6.635735511779785
    9. ' exactly' → logprob: -6.760735511779785
    10. 'in' → logprob: -6.885735511779785

Token 1044: ' at' (ID: 540)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.9092015624046326
    2. ' in' → logprob: -1.0342016220092773
    3. 'to' → logprob: -2.4092016220092773
    4. ' are' → logprob: -3.0342016220092773
    5. 'in' → logprob: -3.2842016220092773
    6. ',' → logprob: -4.159201622009277
    7. 'are' → logprob: -4.909201622009277
    8. '=' → logprob: -5.409201622009277
    9. 's' → logprob: -5.534201622009277
    10. '   ' → logprob: -5.534201622009277

Token 1045: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6194689869880676
    2. 'that' → logprob: -1.2444689273834229
    3. '(' → logprob: -2.369468927383423
    4. 'one' → logprob: -4.369469165802002
    5. 'king' → logprob: -4.619469165802002
    6. 'r' → logprob: -4.744469165802002
    7. '(r' → logprob: -4.869469165802002
    8. ' that' → logprob: -4.869469165802002
    9. 'least' → logprob: -4.869469165802002
    10. ' the' → logprob: -5.244469165802002

Token 1046: ' new' (ID: 620)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.0787973627448082
    2. 'side' → logprob: -3.2037973403930664
    3. 'same' → logprob: -4.203797340393066
    4. 'edge' → logprob: -4.828797340393066
    5. ' king' → logprob: -6.703797340393066
    6. 'op' → logprob: -6.953797340393066
    7. 'kr' → logprob: -6.953797340393066
    8. 'left' → logprob: -7.078797340393066
    9. 'right' → logprob: -7.203797340393066
    10. 'top' → logprob: -7.203797340393066

Token 1047: ' positions' (ID: 15897)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.34513354301452637
    2. 'position' → logprob: -1.5951335430145264
    3. ' direction' → logprob: -3.7201335430145264
    4. '_' → logprob: -4.2201337814331055
    5. '_position' → logprob: -4.4701337814331055
    6. 'r' → logprob: -4.9701337814331055
    7. 'direction' → logprob: -4.9701337814331055
    8. 'pos' → logprob: -5.9701337814331055
    9. '
' → logprob: -5.9701337814331055
    10. '_r' → logprob: -5.9701337814331055

Token 1048: ' match' (ID: 3981)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3617360591888428
    2. ' are' → logprob: -1.7367360591888428
    3. ' in' → logprob: -1.9867360591888428
    4. 'are' → logprob: -2.4867360591888428
    5. 'in' → logprob: -2.7367360591888428
    6. '   ' → logprob: -2.8617360591888428
    7. 'for' → logprob: -3.2367360591888428
    8. ':
' → logprob: -3.4867360591888428
    9. 'def' → logprob: -3.4867360591888428
    10. ',' → logprob: -3.8617360591888428

Token 1049: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06241105869412422
    2. ':' → logprob: -3.437411069869995
    3. 'def' → logprob: -4.937410831451416
    4. ':
' → logprob: -4.937410831451416
    5. '
' → logprob: -5.437410831451416
    6. '    
' → logprob: -6.187410831451416
    7. ' for' → logprob: -6.687410831451416
    8. '#' → logprob: -7.187410831451416
    9. '\' → logprob: -7.187410831451416
    10. ',' → logprob: -7.312410831451416

Token 1050: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05506259948015213
    2. 'def' → logprob: -3.5550625324249268
    3. '
' → logprob: -4.305062770843506
    4. 'for' → logprob: -5.430062770843506
    5. '#' → logprob: -5.930062770843506
    6. 'moves' → logprob: -6.680062770843506
    7. '```' → logprob: -7.180062770843506
    8. 'Next' → logprob: -7.305062770843506
    9. '    
' → logprob: -7.680062770843506
    10. 'next' → logprob: -7.930062770843506

Token 1051: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5380469560623169
    2. 'moves' → logprob: -1.788046956062317
    3. 'for' → logprob: -2.1630468368530273
    4. 'def' → logprob: -2.4130468368530273
    5. '#' (adapté à ' #') → logprob: -3.9130468368530273
    6. '
' → logprob: -4.913046836853027
    7. 'move' → logprob: -5.538046836853027
    8. '    
' → logprob: -5.788046836853027
    9. 'dire' → logprob: -5.788046836853027
    10. ' for' → logprob: -5.913046836853027

Token 1052: ' The' (ID: 623)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9599626660346985
    2. 'for' → logprob: -1.2099626064300537
    3. '   ' → logprob: -1.8349626064300537
    4. 'moves' → logprob: -1.9599626064300537
    5. '#' → logprob: -4.584962844848633
    6. 'dire' → logprob: -5.709962844848633
    7. 'move' → logprob: -6.334962844848633
    8. 'king' → logprob: -7.209962844848633
    9. ' for' → logprob: -7.459962844848633
    10. 'edges' → logprob: -7.709962844848633

Token 1053: ' king' (ID: 13793)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.519845187664032
    2. ' king' → logprob: -2.5198452472686768
    3. 'dire' → logprob: -2.6448452472686768
    4. ' next' → logprob: -2.6448452472686768
    5. '#' → logprob: -3.1448452472686768
    6. ' #' → logprob: -3.5198452472686768
    7. ' def' → logprob: -3.7698452472686768
    8. 'def' → logprob: -3.8948452472686768
    9. ' possible' → logprob: -4.394845008850098
    10. 'king' → logprob: -4.644845008850098

Token 1054: ' moves' (ID: 19523)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.3784964084625244
    2. 'positions' → logprob: -2.2534964084625244
    3. '_cells' → logprob: -2.8784964084625244
    4. '_moves' → logprob: -3.7534964084625244
    5. '_can' → logprob: -3.8784964084625244
    6. ' can' → logprob: -4.003496170043945
    7. 'can' → logprob: -4.128496170043945
    8. '_edges' → logprob: -4.503496170043945
    9. 'moves' → logprob: -4.753496170043945
    10. ''s' → logprob: -4.878496170043945

Token 1055: ' in' (ID: 306)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.7225267291069031
    2. ' can' → logprob: -1.9725267887115479
    3. 'can' → logprob: -2.472526788711548
    4. '_moves' → logprob: -3.097526788711548
    5. 'd' → logprob: -3.472526788711548
    6. ' in' → logprob: -3.597526788711548
    7. 'def' → logprob: -3.847526788711548
    8. '_positions' → logprob: -3.972526788711548
    9. '_possible' → logprob: -3.972526788711548
    10. 'dire' → logprob: -4.097526550292969

Token 1056: ' four' (ID: 4242)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.1300577074289322
    2. '[(' → logprob: -2.7550578117370605
    3. '[' → logprob: -3.0050578117370605
    4. ' directions' → logprob: -5.7550578117370605
    5. 'four' → logprob: -6.0050578117370605
    6. '[
' → logprob: -7.1300578117370605
    7. '4' → logprob: -7.6300578117370605
    8. 'the' → logprob: -7.8800578117370605
    9. '[-' → logprob: -8.005057334899902
    10. 'one' → logprob: -8.380057334899902

Token 1057: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.25207456946372986
    2. ' directions' → logprob: -1.5020745992660522
    3. '   ' → logprob: -10.252074241638184
    4. 'direction' → logprob: -10.752074241638184
    5. '[
' → logprob: -11.252074241638184
    6. '_d' → logprob: -11.502074241638184
    7. '_direction' → logprob: -12.002074241638184
    8. 'dirs' → logprob: -12.002074241638184
    9. '[(' → logprob: -12.252074241638184
    10. 'possible' → logprob: -12.252074241638184

Token 1058: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9851189851760864
    2. ':' → logprob: -1.2351189851760864
    3. 'for' → logprob: -1.9851189851760864
    4. ':
' → logprob: -1.9851189851760864
    5. ' for' → logprob: -2.985118865966797
    6. 'dire' → logprob: -5.860118865966797
    7. ',' → logprob: -6.235118865966797
    8. 'd' → logprob: -7.235118865966797
    9. ' directions' → logprob: -7.360118865966797
    10. ',
' → logprob: -7.610118865966797

Token 1059: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27097317576408386
    2. 'for' → logprob: -1.8959732055664062
    3. ' for' → logprob: -3.2709732055664062
    4. '#' → logprob: -3.5209732055664062
    5. 'dire' → logprob: -4.270973205566406
    6. '[' → logprob: -6.770973205566406
    7. '[
' → logprob: -7.145973205566406
    8. 'moves' → logprob: -7.270973205566406
    9. ' directions' → logprob: -7.395973205566406
    10. ':' → logprob: -7.895973205566406

Token 1060: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5262184143066406
    2. 'dire' → logprob: -1.6512184143066406
    3. 'for' → logprob: -2.2762184143066406
    4. '#' (adapté à ' #') → logprob: -2.5262184143066406
    5. ' for' → logprob: -4.151218414306641
    6. ' directions' → logprob: -5.026218414306641
    7. 'moves' → logprob: -5.026218414306641
    8. '[' → logprob: -7.151218414306641
    9. ' #' → logprob: -7.526218414306641
    10. 'dir' → logprob: -7.651218414306641

Token 1061: ' UP' (ID: 19153)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39879876375198364
    2. 'dire' → logprob: -2.023798704147339
    3. '#' → logprob: -2.273798704147339
    4. '   ' → logprob: -2.648798704147339
    5. 'moves' → logprob: -4.523798942565918
    6. '[
' → logprob: -6.023798942565918
    7. ' for' → logprob: -6.398798942565918
    8. '[(' → logprob: -6.523798942565918
    9. '#
' → logprob: -6.648798942565918
    10. 'king' → logprob: -6.773798942565918

Token 1062: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6709119081497192
    2. '   ' → logprob: -1.0459119081497192
    3. ':
' → logprob: -3.2959117889404297
    4. ',' → logprob: -3.6709117889404297
    5. ' =' → logprob: -3.6709117889404297
    6. '=' → logprob: -4.17091178894043
    7. 'for' → logprob: -5.04591178894043
    8. '#' → logprob: -5.29591178894043
    9. 'def' → logprob: -5.42091178894043
    10. '(' → logprob: -6.04591178894043

Token 1063: ' need' (ID: 1309)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.7255342602729797
    2. ' (-' → logprob: -1.600534200668335
    3. '   ' → logprob: -2.350534200668335
    4. ' (' → logprob: -2.475534200668335
    5. '(' → logprob: -3.600534200668335
    6. 'def' → logprob: -3.725534200668335
    7. 'for' → logprob: -4.225534439086914
    8. ' dr' → logprob: -4.350534439086914
    9. ' for' → logprob: -4.350534439086914
    10. 'dr' → logprob: -4.600534439086914

Token 1064: ' open' (ID: 2494)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4672413170337677
    2. ' all' → logprob: -2.3422412872314453
    3. ' (' → logprob: -2.4672412872314453
    4. 'all' → logprob: -3.2172412872314453
    5. 'kr' → logprob: -3.3422412872314453
    6. ' kr' → logprob: -3.3422412872314453
    7. ' king' → logprob: -3.7172412872314453
    8. '((' → logprob: -3.9672412872314453
    9. '   ' → logprob: -4.842241287231445
    10. '(
' → logprob: -4.967241287231445

Token 1065: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.050338685512542725
    2. 's' → logprob: -3.1753387451171875
    3. ')' → logprob: -6.4253387451171875
    4. '_' → logprob: -6.6753387451171875
    5. '   ' → logprob: -7.3003387451171875
    6. '_cells' → logprob: -7.6753387451171875
    7. '_spaces' → logprob: -7.6753387451171875
    8. '(' → logprob: -7.8003387451171875
    9. ' _' → logprob: -7.9253387451171875
    10. ')_' → logprob: -8.175338745117188

Token 1066: ' at' (ID: 540)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9850635528564453
    2. '[' → logprob: -1.6100635528564453
    3. ' at' → logprob: -1.9850635528564453
    4. '[(' → logprob: -2.7350635528564453
    5. ',' → logprob: -3.3600635528564453
    6. '==' → logprob: -3.6100635528564453
    7. ':' → logprob: -3.7350635528564453
    8. 'at' → logprob: -4.235063552856445
    9. ' ==' → logprob: -4.235063552856445
    10. '   ' → logprob: -4.360063552856445

Token 1067: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8324638605117798
    2. '[(' → logprob: -1.2074638605117798
    3. '((' → logprob: -1.7074638605117798
    4. '{' → logprob: -2.5824637413024902
    5. ' {(' → logprob: -5.08246374130249
    6. ' (' → logprob: -6.70746374130249
    7. '
' → logprob: -7.20746374130249
    8. 'kr' → logprob: -8.207464218139648
    9. '   ' → logprob: -8.832464218139648
    10. ' [(' → logprob: -9.082464218139648

Token 1068: 'r' (ID: 81)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6342412233352661
    2. 'kr' → logprob: -0.7592412233352661
    3. '[(' → logprob: -7.884241104125977
    4. '((' → logprob: -8.009241104125977
    5. ' (' → logprob: -8.259241104125977
    6. ' kr' → logprob: -8.509241104125977
    7. '0' → logprob: -9.384241104125977
    8. '(k' → logprob: -9.509241104125977
    9. ')' → logprob: -9.634241104125977
    10. '-' → logprob: -10.009241104125977

Token 1069: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015730679733678699
    2. ' -' → logprob: -6.501573085784912
    3. ',' → logprob: -10.626572608947754
    4. 'kr' → logprob: -11.126572608947754
    5. ' ' → logprob: -11.501572608947754
    6. 'k' → logprob: -11.626572608947754
    7. 'king' → logprob: -12.501572608947754
    8. 'r' → logprob: -13.126572608947754
    9. ',k' → logprob: -13.626572608947754
    10. '1' → logprob: -14.251572608947754

Token 1070: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010387639049440622
    2. '2' → logprob: -6.876038551330566
    3. ' ' → logprob: -13.001038551330566
    4. ',' → logprob: -13.376038551330566
    5. '   ' → logprob: -13.938538551330566
    6. '0' → logprob: -15.313538551330566
    7. '3' → logprob: -16.063539505004883
    8. '
' → logprob: -16.126039505004883
    9. '-' → logprob: -16.251039505004883
    10. '```' → logprob: -16.501039505004883

Token 1071: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.906334400177002
    2. ',k' → logprob: -0.906334400177002
    3. ',' → logprob: -1.656334400177002
    4. ' ,' → logprob: -7.031334400177002
    5. ',(' → logprob: -9.281333923339844
    6. '),(' → logprob: -10.031333923339844
    7. ',r' → logprob: -10.406333923339844
    8. 'c' → logprob: -11.031333923339844
    9. ')' → logprob: -11.281333923339844
    10. ' ' → logprob: -11.406333923339844

Token 1072: ')' (ID: 8)
  Prédit: '),('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.2266557514667511
    2. '),' → logprob: -1.9766557216644287
    3. ')' → logprob: -3.2266557216644287
    4. ',' → logprob: -4.226655960083008
    5. '-' → logprob: -4.851655960083008
    6. ',k' → logprob: -7.351655960083008
    7. '),
' → logprob: -7.976655960083008
    8. ',r' → logprob: -8.101655960083008
    9. ' ' → logprob: -8.601655960083008
    10. ' ),' → logprob: -9.226655960083008

Token 1073: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8391320109367371
    2. ',r' → logprob: -1.8391320705413818
    3. '-' → logprob: -2.089132070541382
    4. '   ' → logprob: -2.464132070541382
    5. ',(' → logprob: -2.714132070541382
    6. ')' → logprob: -3.214132070541382
    7. '),(' → logprob: -3.339132070541382
    8. ' ' → logprob: -4.464131832122803
    9. '),' → logprob: -4.464131832122803
    10. ' ,' → logprob: -4.714131832122803

Token 1074: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.07489318400621414
    2. 'r' → logprob: -2.6998932361602783
    3. ' (' → logprob: -5.699892997741699
    4. 'c' → logprob: -6.824892997741699
    5. '   ' → logprob: -8.1998929977417
    6. '(c' → logprob: -8.9498929977417
    7. ' r' → logprob: -10.3248929977417
    8. '    ' → logprob: -10.6998929977417
    9. '     ' → logprob: -10.9498929977417
    10. ' ' → logprob: -11.4498929977417

Token 1075: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004033044911921024
    2. ' r' → logprob: -5.754033088684082
    3. 'c' → logprob: -7.504033088684082
    4. 'k' → logprob: -8.754033088684082
    5. 'kc' → logprob: -9.379033088684082
    6. 'kr' → logprob: -10.629033088684082
    7. ' ' → logprob: -11.379033088684082
    8. 'rc' → logprob: -11.629033088684082
    9. ' c' → logprob: -12.004033088684082
    10. '  ' → logprob: -12.629033088684082

Token 1076: '-' (ID: 12)
  Prédit: ',c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.1709677278995514
    2. 'c' → logprob: -2.4209678173065186
    3. ',' → logprob: -3.2959678173065186
    4. '+' → logprob: -4.2959675788879395
    5. ',k' → logprob: -4.7959675788879395
    6. ' ,' → logprob: -5.2959675788879395
    7. ' ' → logprob: -5.7959675788879395
    8. '-' → logprob: -7.9209675788879395
    9. 'k' → logprob: -7.9209675788879395
    10. ',(' → logprob: -8.920968055725098

Token 1077: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.39050644636154175
    2. '0' → logprob: -1.1405065059661865
    3. 'c' → logprob: -6.140506267547607
    4. ' ' → logprob: -8.140506744384766
    5. '2' → logprob: -8.265506744384766
    6. '-' → logprob: -8.765506744384766
    7. 'kc' → logprob: -8.890506744384766
    8. '(' → logprob: -9.015506744384766
    9. '  ' → logprob: -9.515506744384766
    10. 'k' → logprob: -9.515506744384766

Token 1078: ',c' (ID: 22261)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.4427451193332672
    2. ',c' → logprob: -1.0677450895309448
    3. ',' → logprob: -4.442745208740234
    4. ' ,' → logprob: -6.192745208740234
    5. 'c' → logprob: -10.317745208740234
    6. ',(' → logprob: -10.442745208740234
    7. ' ' → logprob: -10.817745208740234
    8. ',
' → logprob: -11.817745208740234
    9. ',d' → logprob: -11.817745208740234
    10. '   ' → logprob: -12.192745208740234

Token 1079: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000491076149046421
    2. ' +' → logprob: -8.37549114227295
    3. ')' → logprob: -8.50049114227295
    4. '1' → logprob: -11.25049114227295
    5. '   ' → logprob: -11.25049114227295
    6. '),' → logprob: -11.75049114227295
    7. ' ' → logprob: -12.00049114227295
    8. ')+' → logprob: -12.62549114227295
    9. '+
' → logprob: -12.75049114227295
    10. '
' → logprob: -12.87549114227295

Token 1080: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004084808751940727
    2. '0' → logprob: -5.504084587097168
    3. ' ' → logprob: -13.129084587097168
    4. '
' → logprob: -14.004084587097168
    5. '```' → logprob: -14.191584587097168
    6. '2' → logprob: -14.379084587097168
    7. '   ' → logprob: -14.691584587097168
    8. ')' → logprob: -14.941584587097168
    9. '``' → logprob: -15.566584587097168
    10. 'offset' → logprob: -16.066585540771484

Token 1081: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.302455872297287
    2. ')' → logprob: -1.4274559020996094
    3. '   ' → logprob: -3.9274559020996094
    4. '),
' → logprob: -7.427455902099609
    5. '),' → logprob: -7.802455902099609
    6. '):
' → logprob: -8.30245590209961
    7. ' )
' → logprob: -10.42745590209961
    8. ')
' → logprob: -11.17745590209961
    9. ')`
' → logprob: -11.42745590209961
    10. '):' → logprob: -11.55245590209961

Token 1082: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22821299731731415
    2. '#' → logprob: -1.8532129526138306
    3. ':' → logprob: -4.478212833404541
    4. '
' → logprob: -4.978212833404541
    5. ',' → logprob: -4.978212833404541
    6. ')' → logprob: -5.353212833404541
    7. ':
' → logprob: -5.478212833404541
    8. ')
' → logprob: -5.728212833404541
    9. ',
' → logprob: -5.728212833404541
    10. 'def' → logprob: -6.353212833404541

Token 1083: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.37434783577919006
    2. '   ' → logprob: -1.4993478059768677
    3. ':' → logprob: -3.9993479251861572
    4. ',' → logprob: -3.9993479251861572
    5. ',
' → logprob: -4.749347686767578
    6. ')
' → logprob: -4.749347686767578
    7. ')' → logprob: -4.874347686767578
    8. '#
' → logprob: -5.124347686767578
    9. ':
' → logprob: -5.374347686767578
    10. ' #' → logprob: -5.874347686767578

Token 1084: ' DOWN' (ID: 56168)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1764061003923416
    2. 'DOWN' → logprob: -2.051406145095825
    3. '   ' → logprob: -3.676406145095825
    4. '(' → logprob: -5.301405906677246
    5. ' #' → logprob: -7.926405906677246
    6. ' (' → logprob: -8.176405906677246
    7. ' DOWN' → logprob: -8.301405906677246
    8. 'RIGHT' → logprob: -8.426405906677246
    9. '#
' → logprob: -8.551405906677246
    10. 'LEFT' → logprob: -8.676405906677246

Token 1085: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007223221473395824
    2. '(r' → logprob: -8.50072193145752
    3. ' :' → logprob: -9.25072193145752
    4. '   ' → logprob: -9.25072193145752
    5. ':(' → logprob: -9.75072193145752
    6. ' (' → logprob: -9.75072193145752
    7. ',' → logprob: -9.87572193145752
    8. ' =' → logprob: -10.00072193145752
    9. '#' → logprob: -10.25072193145752
    10. 'def' → logprob: -10.75072193145752

Token 1086: ' open' (ID: 2494)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10116340219974518
    2. '(r' → logprob: -2.851163387298584
    3. '(' → logprob: -3.601163387298584
    4. '   ' → logprob: -5.226163387298584
    5. ' r' → logprob: -5.976163387298584
    6. '#' → logprob: -6.601163387298584
    7. 'r' → logprob: -7.601163387298584
    8. ' #' → logprob: -7.601163387298584
    9. '[r' → logprob: -8.601163864135742
    10. ' ' → logprob: -8.601163864135742

Token 1087: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.01679612509906292
    2. '(' → logprob: -5.016796112060547
    3. 's' → logprob: -5.266796112060547
    4. '   ' → logprob: -6.016796112060547
    5. '+' → logprob: -7.391796112060547
    6. ' (' → logprob: -7.891796112060547
    7. '(_' → logprob: -8.266796112060547
    8. '(s' → logprob: -8.891796112060547
    9. ' _' → logprob: -9.141796112060547
    10. '((' → logprob: -9.141796112060547

Token 1088: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.0964098647236824
    2. 'at' → logprob: -2.471409797668457
    3. '   ' → logprob: -5.221409797668457
    4. '=' → logprob: -6.721409797668457
    5. ' =' → logprob: -7.846409797668457
    6. ' (' → logprob: -8.846409797668457
    7. ' ' → logprob: -9.346409797668457
    8. '(' → logprob: -9.596409797668457
    9. '_at' → logprob: -10.346409797668457
    10. ':' → logprob: -10.971409797668457

Token 1089: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1346966028213501
    2. '(r' → logprob: -2.3846964836120605
    3. ' (' → logprob: -3.3846964836120605
    4. '   ' → logprob: -11.634696960449219
    5. ' ' → logprob: -12.884696960449219
    6. '(k' → logprob: -13.884696960449219
    7. '(rr' → logprob: -14.259696960449219
    8. '  ' → logprob: -15.259696960449219
    9. '(cr' → logprob: -16.00969696044922
    10. '(rc' → logprob: -16.13469696044922

Token 1090: 'r' (ID: 81)
  Prédit: 'kr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kr' → logprob: -0.05808672681450844
    2. 'r' → logprob: -2.933086633682251
    3. '(' → logprob: -6.43308687210083
    4. '   ' → logprob: -6.68308687210083
    5. ' kr' → logprob: -8.683086395263672
    6. '  ' → logprob: -9.933086395263672
    7. '(r' → logprob: -10.558086395263672
    8. '    ' → logprob: -11.058086395263672
    9. ' ' → logprob: -11.183086395263672
    10. 'king' → logprob: -11.308086395263672

Token 1091: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.682846287731081e-05
    2. ' +' → logprob: -10.625066757202148
    3. ',' → logprob: -11.000066757202148
    4. ',k' → logprob: -11.500066757202148
    5. ',r' → logprob: -12.250066757202148
    6. '   ' → logprob: -12.750066757202148
    7. ',c' → logprob: -13.375066757202148
    8. ' ' → logprob: -14.000066757202148
    9. '1' → logprob: -14.000066757202148
    10. '+k' → logprob: -14.125066757202148

Token 1092: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.709308167453855e-05
    2. '2' → logprob: -10.250086784362793
    3. '0' → logprob: -10.375086784362793
    4. ' ' → logprob: -11.000086784362793
    5. '   ' → logprob: -13.375086784362793
    6. '
' → logprob: -13.500086784362793
    7. '```' → logprob: -15.250086784362793
    8. '#' → logprob: -16.00008773803711
    9. '``' → logprob: -16.25008773803711
    10. 'def' → logprob: -16.50008773803711

Token 1093: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.004113780800253153
    2. ',' → logprob: -5.504113674163818
    3. ' ,' → logprob: -10.754114151000977
    4. '   ' → logprob: -13.254114151000977
    5. ',r' → logprob: -13.254114151000977
    6. ',k' → logprob: -13.254114151000977
    7. ',d' → logprob: -13.504114151000977
    8. ',
' → logprob: -13.629114151000977
    9. ' ' → logprob: -14.004114151000977
    10. ',b' → logprob: -14.129114151000977

Token 1094: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004325314424932003
    2. '+' → logprob: -5.6293253898620605
    3. '   ' → logprob: -8.504324913024902
    4. '),' → logprob: -8.629324913024902
    5. ')
' → logprob: -8.629324913024902
    6. '-' → logprob: -9.754324913024902
    7. '),(' → logprob: -10.129324913024902
    8. ' )' → logprob: -10.754324913024902
    9. '```' → logprob: -11.379324913024902
    10. '#' → logprob: -12.629324913024902

Token 1095: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4418804943561554
    2. ' and' → logprob: -1.941880464553833
    3. '   ' → logprob: -2.441880464553833
    4. 'and' → logprob: -2.816880464553833
    5. ',' → logprob: -3.066880464553833
    6. '```' → logprob: -4.941880702972412
    7. '),' → logprob: -5.316880702972412
    8. '#' → logprob: -6.191880702972412
    9. '+' → logprob: -6.441880702972412
    10. '),(' → logprob: -6.566880702972412

Token 1096: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0008482214179821312
    2. ' (' → logprob: -7.250848293304443
    3. 'r' → logprob: -9.000847816467285
    4. '   ' → logprob: -11.250847816467285
    5. '(' → logprob: -13.750847816467285
    6. ' r' → logprob: -14.750847816467285
    7. ' ' → logprob: -16.0008487701416
    8. '    ' → logprob: -16.5008487701416
    9. '[r' → logprob: -16.6258487701416
    10. '
' → logprob: -16.8758487701416

Token 1097: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0005156210972927511
    2. 'c' → logprob: -7.625515460968018
    3. '   ' → logprob: -11.125515937805176
    4. ' r' → logprob: -11.750515937805176
    5. 'rc' → logprob: -13.125515937805176
    6. '  ' → logprob: -13.750515937805176
    7. '(r' → logprob: -14.000515937805176
    8. ' ' → logprob: -14.875515937805176
    9. 'kc' → logprob: -15.625515937805176
    10. '    ' → logprob: -16.37551498413086

Token 1098: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.60414821645827e-06
    2. ' +' → logprob: -12.750004768371582
    3. ',' → logprob: -14.125004768371582
    4. '2' → logprob: -14.750004768371582
    5. '+
' → logprob: -15.625004768371582
    6. '```' → logprob: -16.250003814697266
    7. '1' → logprob: -16.750003814697266
    8. '   ' → logprob: -16.812503814697266
    9. ')+' → logprob: -17.562503814697266
    10. ')' → logprob: -17.687503814697266

Token 1099: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6326111555099487
    2. '2' → logprob: -0.7576111555099487
    3. '0' → logprob: -12.507611274719238
    4. '
' → logprob: -13.257611274719238
    5. ' ' → logprob: -13.382611274719238
    6. '   ' → logprob: -13.632611274719238
    7. '+' → logprob: -13.632611274719238
    8. 'c' → logprob: -14.632611274719238
    9. '3' → logprob: -14.757611274719238
    10. '```' → logprob: -14.945111274719238

Token 1100: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.005342497490346432
    2. ',' → logprob: -5.255342483520508
    3. ',k' → logprob: -10.130342483520508
    4. ' ,' → logprob: -11.005342483520508
    5. 'c' → logprob: -11.005342483520508
    6. ',(' → logprob: -11.505342483520508
    7. ',
' → logprob: -11.505342483520508
    8. ',s' → logprob: -12.880342483520508
    9. ',b' → logprob: -13.505342483520508
    10. ',r' → logprob: -13.630342483520508

Token 1101: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01711796224117279
    2. ',' → logprob: -4.767117977142334
    3. ',c' → logprob: -5.017117977142334
    4. ')' → logprob: -7.017117977142334
    5. ',k' → logprob: -7.642117977142334
    6. ',d' → logprob: -9.517117500305176
    7. ',(' → logprob: -9.767117500305176
    8. ' +' → logprob: -9.892117500305176
    9. '1' → logprob: -10.017117500305176
    10. '   ' → logprob: -10.267117500305176

Token 1102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0087516784551553e-05
    2. '0' → logprob: -11.87501049041748
    3. ' ' → logprob: -13.12501049041748
    4. '+' → logprob: -14.37501049041748
    5. '
' → logprob: -16.125009536743164
    6. '2' → logprob: -16.375009536743164
    7. ')' → logprob: -16.750009536743164
    8. '   ' → logprob: -16.875009536743164
    9. '-' → logprob: -17.750009536743164
    10. '```' → logprob: -17.750009536743164

Token 1103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.049368664622306824
    2. '   ' → logprob: -3.4243686199188232
    3. ')
' → logprob: -4.174368858337402
    4. '#' → logprob: -9.299368858337402
    5. '```' → logprob: -9.799368858337402
    6. '):' → logprob: -10.799368858337402
    7. '):
' → logprob: -11.424368858337402
    8. '),' → logprob: -11.799368858337402
    9. 'def' → logprob: -12.674368858337402
    10. ')#' → logprob: -12.674368858337402

Token 1104: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07021362334489822
    2. '   ' → logprob: -2.695213556289673
    3. ' #' → logprob: -9.320213317871094
    4. '(' → logprob: -9.445213317871094
    5. '#
' → logprob: -9.945213317871094
    6. '```' → logprob: -10.570213317871094
    7. ',' → logprob: -11.820213317871094
    8. ' (' → logprob: -12.320213317871094
    9. 'DOWN' → logprob: -12.320213317871094
    10. ')' → logprob: -12.445213317871094

Token 1105: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.08927183598279953
    2. '   ' → logprob: -2.4642717838287354
    3. 'LEFT' → logprob: -9.089271545410156
    4. 'UP' → logprob: -9.589271545410156
    5. 'DOWN' → logprob: -10.089271545410156
    6. ' #' → logprob: -10.339271545410156
    7. '#
' → logprob: -10.589271545410156
    8. '```' → logprob: -10.964271545410156
    9. '(' → logprob: -11.964271545410156
    10. 'RIGHT' → logprob: -11.964271545410156

Token 1106: ' LEFT' (ID: 48606)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07209797203540802
    2. '   ' → logprob: -2.8220980167388916
    3. 'LEFT' → logprob: -5.4470977783203125
    4. 'UP' → logprob: -5.9470977783203125
    5. '(' → logprob: -6.4470977783203125
    6. '#
' → logprob: -6.9470977783203125
    7. ' #' → logprob: -8.572097778320312
    8. '       ' → logprob: -9.822097778320312
    9. '
' → logprob: -9.822097778320312
    10. ' (' → logprob: -9.947097778320312

Token 1107: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021844033617526293
    2. '   ' → logprob: -7.0021843910217285
    3. ' :' → logprob: -7.1271843910217285
    4. 'def' → logprob: -8.627184867858887
    5. ',' → logprob: -8.877184867858887
    6. ':(' → logprob: -10.127184867858887
    7. '(r' → logprob: -11.127184867858887
    8. ' ' → logprob: -11.377184867858887
    9. ' =' → logprob: -11.377184867858887
    10. ' (' → logprob: -11.377184867858887

Token 1108: ' open' (ID: 2494)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.29585057497024536
    2. '(' → logprob: -2.0458505153656006
    3. '(r' → logprob: -2.4208505153656006
    4. ' open' → logprob: -4.17085075378418
    5. 'open' → logprob: -4.67085075378418
    6. '[(' → logprob: -4.79585075378418
    7. ' [(' → logprob: -6.04585075378418
    8. '   ' → logprob: -7.29585075378418
    9. '(k' → logprob: -7.92085075378418
    10. ' kr' → logprob: -8.29585075378418

Token 1109: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.004323302768170834
    2. 's' → logprob: -6.004323482513428
    3. '_spaces' → logprob: -6.879323482513428
    4. ' squares' → logprob: -7.754323482513428
    5. ' _' → logprob: -8.62932300567627
    6. 'spaces' → logprob: -10.00432300567627
    7. ' (' → logprob: -10.25432300567627
    8. '```' → logprob: -10.37932300567627
    9. '(' → logprob: -10.75432300567627
    10. '   ' → logprob: -11.12932300567627

Token 1110: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.2528667449951172
    2. 'at' → logprob: -1.5028667449951172
    3. '   ' → logprob: -7.627866744995117
    4. '=' → logprob: -8.627866744995117
    5. ' =' → logprob: -9.252866744995117
    6. ' (' → logprob: -9.502866744995117
    7. '(' → logprob: -10.127866744995117
    8. ':' → logprob: -11.252866744995117
    9. '	at' → logprob: -11.502866744995117
    10. ' ' → logprob: -11.627866744995117

Token 1111: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.07133492082357407
    2. ' (' → logprob: -2.8213348388671875
    3. '(' → logprob: -4.6963348388671875
    4. 'r' → logprob: -9.071334838867188
    5. '   ' → logprob: -10.571334838867188
    6. '(k' → logprob: -10.696334838867188
    7. ' ' → logprob: -11.196334838867188
    8. ' r' → logprob: -12.321334838867188
    9. '  ' → logprob: -12.696334838867188
    10. 'kr' → logprob: -12.946334838867188

Token 1112: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.015268259681761265
    2. 'kr' → logprob: -4.515268325805664
    3. '(' → logprob: -6.265268325805664
    4. '(r' → logprob: -6.640268325805664
    5. '   ' → logprob: -7.765268325805664
    6. ' r' → logprob: -7.890268325805664
    7. ' kr' → logprob: -9.640268325805664
    8. ' (' → logprob: -9.765268325805664
    9. 'rk' → logprob: -10.890268325805664
    10. '    ' → logprob: -11.515268325805664

Token 1113: ',c' (ID: 22261)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4004410207271576
    2. ',' → logprob: -1.90044105052948
    3. ',k' → logprob: -2.1504409313201904
    4. ' ' → logprob: -3.6504409313201904
    5. '   ' → logprob: -4.4004411697387695
    6. ',c' → logprob: -4.5254411697387695
    7. '+' → logprob: -4.6504411697387695
    8. ' ,' → logprob: -6.4004411697387695
    9. '  ' → logprob: -6.4004411697387695
    10. ',r' → logprob: -7.0254411697387695

Token 1114: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.226628895296017e-06
    2. ' -' → logprob: -12.125007629394531
    3. ')' → logprob: -14.000007629394531
    4. '   ' → logprob: -14.750007629394531
    5. '1' → logprob: -15.500007629394531
    6. ' ' → logprob: -16.37500762939453
    7. '-
' → logprob: -17.75000762939453
    8. '  ' → logprob: -17.87500762939453
    9. ')-' → logprob: -18.12500762939453
    10. '```' → logprob: -18.25000762939453

Token 1115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. '2' → logprob: -12.625007629394531
    3. ')' → logprob: -13.000007629394531
    4. '```' → logprob: -14.250007629394531
    5. ' ' → logprob: -14.500007629394531
    6. '   ' → logprob: -15.500007629394531
    7. '-' → logprob: -16.00000762939453
    8. '
' → logprob: -16.31250762939453
    9. '``' → logprob: -16.37500762939453
    10. '3' → logprob: -17.12500762939453

Token 1116: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022325708996504545
    2. ')
' → logprob: -6.877232551574707
    3. '   ' → logprob: -7.127232551574707
    4. '),' → logprob: -8.252232551574707
    5. ' )' → logprob: -9.127232551574707
    6. '),(' → logprob: -12.252232551574707
    7. ' ' → logprob: -12.502232551574707
    8. '```' → logprob: -12.752232551574707
    9. ' and' → logprob: -13.002232551574707
    10. '  ' → logprob: -13.252232551574707

Token 1117: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4967477321624756
    2. ' and' → logprob: -1.2467477321624756
    3. 'and' → logprob: -2.8717477321624756
    4. '   ' → logprob: -3.1217477321624756
    5. ' )' → logprob: -6.746747970581055
    6. '),' → logprob: -7.746747970581055
    7. '```' → logprob: -7.746747970581055
    8. ',' → logprob: -7.871747970581055
    9. ')
' → logprob: -8.496747970581055
    10. '  ' → logprob: -8.871747970581055

Token 1118: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.002162398537620902
    2. 'r' → logprob: -6.627162456512451
    3. ' (' → logprob: -7.627162456512451
    4. '   ' → logprob: -8.002161979675293
    5. '(' → logprob: -12.002161979675293
    6. '[r' → logprob: -12.752161979675293
    7. ' r' → logprob: -13.752161979675293
    8. '
' → logprob: -14.002161979675293
    9. '    ' → logprob: -14.127161979675293
    10. ' ' → logprob: -14.377161979675293

Token 1119: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.000429596402682364
    2. 'c' → logprob: -8.000429153442383
    3. '(r' → logprob: -9.875429153442383
    4. '   ' → logprob: -11.000429153442383
    5. ' r' → logprob: -11.625429153442383
    6. 'solve' → logprob: -12.750429153442383
    7. 'kc' → logprob: -12.750429153442383
    8. ' ' → logprob: -13.125429153442383
    9. '(' → logprob: -13.250429153442383
    10. 'rc' → logprob: -13.625429153442383

Token 1120: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3503803312778473
    2. '+' → logprob: -1.225380301475525
    3. ',' → logprob: -7.1003804206848145
    4. ',c' → logprob: -7.4753804206848145
    5. 'c' → logprob: -8.850379943847656
    6. ',k' → logprob: -9.225379943847656
    7. ',r' → logprob: -9.225379943847656
    8. ' -' → logprob: -9.475379943847656
    9. '[' → logprob: -10.600379943847656
    10. ' ' → logprob: -10.725379943847656

Token 1121: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2519741356372833
    2. '1' → logprob: -1.501974105834961
    3. '0' → logprob: -10.876974105834961
    4. '
' → logprob: -11.501974105834961
    5. ' ' → logprob: -12.001974105834961
    6. '   ' → logprob: -12.876974105834961
    7. '-' → logprob: -13.126974105834961
    8. '```' → logprob: -13.501974105834961
    9. '``' → logprob: -14.564474105834961
    10. 'c' → logprob: -15.126974105834961

Token 1122: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.016665533185005188
    2. ',k' → logprob: -4.266665458679199
    3. ',' → logprob: -6.016665458679199
    4. ' ,' → logprob: -10.6416654586792
    5. ',r' → logprob: -11.1416654586792
    6. 'c' → logprob: -11.3916654586792
    7. ',s' → logprob: -13.1416654586792
    8. ' ' → logprob: -13.8916654586792
    9. ',j' → logprob: -14.0166654586792
    10. ',p' → logprob: -14.1416654586792

Token 1123: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.3902033970225602e-05
    2. ')' → logprob: -12.125014305114746
    3. ' -' → logprob: -12.250014305114746
    4. '   ' → logprob: -13.000014305114746
    5. '```' → logprob: -14.000014305114746
    6. '1' → logprob: -15.625014305114746
    7. '[' → logprob: -16.37501335144043
    8. ')
' → logprob: -16.87501335144043
    9. '``' → logprob: -17.12501335144043
    10. ' ' → logprob: -17.62501335144043

Token 1124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00862036645412445
    2. '2' → logprob: -4.758620262145996
    3. '```' → logprob: -12.758620262145996
    4. '-' → logprob: -13.633620262145996
    5. ' ' → logprob: -14.758620262145996
    6. '
' → logprob: -15.133620262145996
    7. '   ' → logprob: -15.258620262145996
    8. '0' → logprob: -15.258620262145996
    9. '<|end|>' → logprob: -15.571120262145996
    10. '``' → logprob: -16.258621215820312

Token 1125: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04094254970550537
    2. ')
' → logprob: -3.290942668914795
    3. '):' → logprob: -6.665942668914795
    4. '   ' → logprob: -6.790942668914795
    5. '):
' → logprob: -7.665942668914795
    6. ':' → logprob: -12.040942192077637
    7. '#' → logprob: -12.165942192077637
    8. '```' → logprob: -12.540942192077637
    9. ')
' → logprob: -13.290942192077637
    10. '),' → logprob: -13.290942192077637

Token 1126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6724397540092468
    2. '#' → logprob: -0.7974397540092468
    3. 'LEFT' → logprob: -4.0474395751953125
    4. '(' → logprob: -5.1724395751953125
    5. '[' → logprob: -5.9224395751953125
    6. ',' → logprob: -5.9224395751953125
    7. 'RIGHT' → logprob: -6.0474395751953125
    8. ')' → logprob: -6.2974395751953125
    9. 'DOWN' → logprob: -6.9224395751953125
    10. 'UP' → logprob: -7.0474395751953125

Token 1127: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.029113395139575005
    2. 'RIGHT' → logprob: -4.029113292694092
    3. '   ' → logprob: -4.779113292694092
    4. 'LEFT' → logprob: -6.654113292694092
    5. ' #' → logprob: -8.27911376953125
    6. '#
' → logprob: -8.52911376953125
    7. '(' → logprob: -9.02911376953125
    8. 'r' → logprob: -9.15411376953125
    9. 'UP' → logprob: -9.52911376953125
    10. ' ' → logprob: -9.77911376953125

Token 1128: ' RIGHT' (ID: 51066)
  Prédit: 'RIGHT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RIGHT' → logprob: -0.10455677658319473
    2. '#' → logprob: -2.6045567989349365
    3. '   ' → logprob: -4.854556560516357
    4. '(' → logprob: -5.229556560516357
    5. 'UP' → logprob: -5.479556560516357
    6. 'r' → logprob: -5.604556560516357
    7. 'def' → logprob: -7.104556560516357
    8. '[(' → logprob: -7.479556560516357
    9. '(r' → logprob: -7.729556560516357
    10. ' RIGHT' → logprob: -7.729556560516357

Token 1129: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007231639698147774
    2. ' =' → logprob: -5.757231712341309
    3. ' :' → logprob: -6.632231712341309
    4. '   ' → logprob: -7.007231712341309
    5. ' (' → logprob: -7.382231712341309
    6. '=' → logprob: -7.757231712341309
    7. '(' → logprob: -8.507231712341309
    8. '(r' → logprob: -9.007231712341309
    9. ':(' → logprob: -9.007231712341309
    10. 'def' → logprob: -9.882231712341309

Token 1130: ' open' (ID: 2494)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2184649109840393
    2. ' (' → logprob: -1.7184648513793945
    3. '(r' → logprob: -4.0934648513793945
    4. '   ' → logprob: -9.093464851379395
    5. '(k' → logprob: -10.843464851379395
    6. 'kr' → logprob: -11.218464851379395
    7. ' ' → logprob: -11.343464851379395
    8. ' kr' → logprob: -11.343464851379395
    9. 'king' → logprob: -11.468464851379395
    10. ' king' → logprob: -11.593464851379395

Token 1131: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.07620034366846085
    2. 's' → logprob: -3.201200246810913
    3. '(' → logprob: -4.326200485229492
    4. '(r' → logprob: -4.576200485229492
    5. ' (' → logprob: -6.076200485229492
    6. ' squares' → logprob: -6.201200485229492
    7. 'spaces' → logprob: -6.951200485229492
    8. '(s' → logprob: -7.201200485229492
    9. '(c' → logprob: -7.326200485229492
    10. '_spaces' → logprob: -7.951200485229492

Token 1132: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.01689787022769451
    2. 'at' → logprob: -4.266897678375244
    3. '   ' → logprob: -6.891897678375244
    4. ' =' → logprob: -7.016897678375244
    5. '=' → logprob: -8.141898155212402
    6. ':' → logprob: -8.266898155212402
    7. ' (' → logprob: -8.891898155212402
    8. '	at' → logprob: -10.766898155212402
    9. '(at' → logprob: -10.891898155212402
    10. '[' → logprob: -11.016898155212402

Token 1133: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.16757293045520782
    2. ' (' → logprob: -1.9175729751586914
    3. '(' → logprob: -4.917572975158691
    4. '   ' → logprob: -12.917572975158691
    5. ' ' → logprob: -13.417572975158691
    6. '(k' → logprob: -14.042572975158691
    7. '
' → logprob: -16.667572021484375
    8. '  ' → logprob: -17.167572021484375
    9. '(rc' → logprob: -17.542572021484375
    10. 'r' → logprob: -18.292572021484375

Token 1134: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00011772842844948173
    2. ' r' → logprob: -9.875117301940918
    3. 'kr' → logprob: -10.375117301940918
    4. '(r' → logprob: -10.875117301940918
    5. '   ' → logprob: -11.375117301940918
    6. '(' → logprob: -12.875117301940918
    7. ' (' → logprob: -14.750117301940918
    8. '  ' → logprob: -15.125117301940918
    9. ' ' → logprob: -15.375117301940918
    10. 'rk' → logprob: -15.500117301940918

Token 1135: ',c' (ID: 22261)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.090837836265564
    2. ',r' → logprob: -1.090837836265564
    3. ',c' → logprob: -1.715837836265564
    4. ',k' → logprob: -2.2158379554748535
    5. ',' → logprob: -3.3408379554748535
    6. ' ,' → logprob: -6.2158379554748535
    7. ' ' → logprob: -6.8408379554748535
    8. ',(' → logprob: -8.465837478637695
    9. ' +' → logprob: -8.965837478637695
    10. ',row' → logprob: -9.840837478637695

Token 1136: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.723973582556937e-05
    2. ' +' → logprob: -11.000017166137695
    3. '1' → logprob: -15.250017166137695
    4. '   ' → logprob: -16.375017166137695
    5. '-' → logprob: -16.750017166137695
    6. '+
' → logprob: -17.500017166137695
    7. ')' → logprob: -17.875017166137695
    8. ' ' → logprob: -18.375017166137695
    9. '[' → logprob: -18.875017166137695
    10. ')+' → logprob: -19.250017166137695

Token 1137: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008180848672054708
    2. '+' → logprob: -7.125818252563477
    3. ' ' → logprob: -12.125818252563477
    4. '
' → logprob: -13.125818252563477
    5. '2' → logprob: -13.250818252563477
    6. '```' → logprob: -13.625818252563477
    7. '   ' → logprob: -14.375818252563477
    8. '0' → logprob: -14.625818252563477
    9. '-' → logprob: -14.813318252563477
    10. ')' → logprob: -14.938318252563477

Token 1138: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008467909647151828
    2. ')
' → logprob: -7.375846862792969
    3. '   ' → logprob: -8.875846862792969
    4. ' )' → logprob: -10.375846862792969
    5. '),' → logprob: -11.875846862792969
    6. ')
' → logprob: -12.125846862792969
    7. ')}' → logprob: -12.375846862792969
    8. '+' → logprob: -12.625846862792969
    9. '))' → logprob: -12.750846862792969
    10. ')]' → logprob: -12.750846862792969

Token 1139: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12585484981536865
    2. ':' → logprob: -3.500854969024658
    3. ')' → logprob: -3.625854969024658
    4. 'def' → logprob: -4.375854969024658
    5. '):
' → logprob: -5.000854969024658
    6. '):' → logprob: -5.000854969024658
    7. ':
' → logprob: -5.250854969024658
    8. '[' → logprob: -5.375854969024658
    9. '
' → logprob: -5.500854969024658
    10. ',' → logprob: -5.875854969024658

Token 1140: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.014384318143129349
    2. ' (' → logprob: -4.2643842697143555
    3. '   ' → logprob: -9.014384269714355
    4. 'r' → logprob: -9.639384269714355
    5. '(' → logprob: -10.514384269714355
    6. ' ' → logprob: -12.889384269714355
    7. '[r' → logprob: -13.514384269714355
    8. ' r' → logprob: -13.764384269714355
    9. '
' → logprob: -14.389384269714355
    10. '  ' → logprob: -15.389384269714355

Token 1141: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.901345038088039e-05
    2. '(r' → logprob: -9.375099182128906
    3. ' r' → logprob: -11.250099182128906
    4. '   ' → logprob: -14.250099182128906
    5. ' (' → logprob: -16.000099182128906
    6. '	r' → logprob: -16.875099182128906
    7. 'rk' → logprob: -17.000099182128906
    8. '
' → logprob: -17.500099182128906
    9. '[r' → logprob: -17.625099182128906
    10. '(' → logprob: -17.875099182128906

Token 1142: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00540878064930439
    2. ',c' → logprob: -5.255408763885498
    3. ' +' → logprob: -9.380409240722656
    4. ',' → logprob: -10.505409240722656
    5. 'c' → logprob: -10.505409240722656
    6. '+c' → logprob: -11.130409240722656
    7. ',k' → logprob: -11.880409240722656
    8. '+
' → logprob: -12.380409240722656
    9. ',r' → logprob: -12.380409240722656
    10. '(' → logprob: -13.880409240722656

Token 1143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011951648048125207
    2. '+' → logprob: -9.12511920928955
    3. '2' → logprob: -11.87511920928955
    4. ' ' → logprob: -13.37511920928955
    5. '
' → logprob: -14.37511920928955
    6. '```' → logprob: -14.87511920928955
    7. '   ' → logprob: -15.12511920928955
    8. 'c' → logprob: -15.25011920928955
    9. '``' → logprob: -16.187620162963867
    10. '`' → logprob: -16.875120162963867

Token 1144: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.0015962723409757018
    2. ',' → logprob: -6.501596450805664
    3. ',k' → logprob: -10.376596450805664
    4. ' ,' → logprob: -10.376596450805664
    5. 'c' → logprob: -10.501596450805664
    6. ',
' → logprob: -13.876596450805664
    7. ',(' → logprob: -14.251596450805664
    8. '   ' → logprob: -14.626596450805664
    9. '<|end|>' → logprob: -14.626596450805664
    10. ' ' → logprob: -14.751596450805664

Token 1145: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.842555426876061e-06
    2. ' +' → logprob: -12.750004768371582
    3. '+
' → logprob: -14.500004768371582
    4. '   ' → logprob: -14.875004768371582
    5. '```' → logprob: -15.125004768371582
    6. ')' → logprob: -15.250004768371582
    7. '2' → logprob: -15.500004768371582
    8. ')+' → logprob: -15.750004768371582
    9. ',' → logprob: -16.5000057220459
    10. ' ' → logprob: -17.3750057220459

Token 1146: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5941604690160602e-05
    2. '1' → logprob: -11.250025749206543
    3. '
' → logprob: -11.750025749206543
    4. ' ' → logprob: -12.875025749206543
    5. '   ' → logprob: -14.437525749206543
    6. '```' → logprob: -14.625025749206543
    7. '0' → logprob: -15.125025749206543
    8. 'c' → logprob: -15.187525749206543
    9. '+' → logprob: -15.687525749206543
    10. ')' → logprob: -16.00002670288086

Token 1147: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015415230300277472
    2. '   ' → logprob: -7.126541614532471
    3. ')
' → logprob: -7.251541614532471
    4. '):
' → logprob: -11.751541137695312
    5. '):' → logprob: -12.376541137695312
    6. ')
' → logprob: -13.001541137695312
    7. ')`' → logprob: -13.126541137695312
    8. '))' → logprob: -13.251541137695312
    9. ')`
' → logprob: -13.501541137695312
    10. ')}' → logprob: -13.501541137695312

Token 1148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13514377176761627
    2. 'moves' → logprob: -2.260143756866455
    3. 'def' → logprob: -5.010143756866455
    4. 'for' → logprob: -5.385143756866455
    5. '
' → logprob: -5.885143756866455
    6. '    
' → logprob: -6.135143756866455
    7. 'move' → logprob: -6.260143756866455
    8. 'dire' → logprob: -6.635143756866455
    9. ' moves' → logprob: -7.385143756866455
    10. '#' → logprob: -8.010144233703613

Token 1149: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20436446368694305
    2. 'def' → logprob: -1.9543644189834595
    3. 'moves' → logprob: -3.329364538192749
    4. '#' (adapté à ' #') → logprob: -5.82936429977417
    5. 'for' → logprob: -6.70436429977417
    6. '
' → logprob: -7.07936429977417
    7. 'dire' → logprob: -7.20436429977417
    8. 'move' → logprob: -8.079364776611328
    9. ' for' → logprob: -8.204364776611328
    10. ':' → logprob: -8.454364776611328

Token 1150: ' For' (ID: 2214)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.0925678163766861
    2. 'for' → logprob: -3.2175679206848145
    3. '   ' → logprob: -3.5925679206848145
    4. 'dire' → logprob: -5.0925679206848145
    5. 'king' → logprob: -5.4675679206848145
    6. 'def' → logprob: -5.7175679206848145
    7. 'mov' → logprob: -6.0925679206848145
    8. '#' → logprob: -6.0925679206848145
    9. 'move' → logprob: -6.3425679206848145
    10. 'possible' → logprob: -8.092567443847656

Token 1151: ' a' (ID: 261)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -1.3895319700241089
    2. 'd' → logprob: -1.7645319700241089
    3. ' direction' → logprob: -1.8895319700241089
    4. ' dir' → logprob: -2.0145320892333984
    5. ' d' → logprob: -2.3895320892333984
    6. 'king' → logprob: -2.6395320892333984
    7. 'dir' → logprob: -3.0145320892333984
    8. ' move' → logprob: -4.389532089233398
    9. 'dire' → logprob: -4.639532089233398
    10. 'move' → logprob: -5.014532089233398

Token 1152: ' king' (ID: 13793)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.462891697883606
    2. 'direction' → logprob: -1.837891697883606
    3. 'def' → logprob: -2.0878915786743164
    4. 't' → logprob: -2.3378915786743164
    5. ' direction' → logprob: -2.8378915786743164
    6. 'll' → logprob: -3.0878915786743164
    7. ' d' → logprob: -3.0878915786743164
    8. '#' → logprob: -3.5878915786743164
    9. ' move' → logprob: -3.7128915786743164
    10. ' given' → logprob: -4.087891578674316

Token 1153: ' move' (ID: 5275)
  Prédit: '_move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -0.6437225341796875
    2. ' move' → logprob: -1.7687225341796875
    3. '_moves' → logprob: -2.1437225341796875
    4. '   ' → logprob: -2.8937225341796875
    5. ' position' → logprob: -4.1437225341796875
    6. '_position' → logprob: -4.1437225341796875
    7. ' _' → logprob: -4.2687225341796875
    8. '_' → logprob: -4.3937225341796875
    9. ')' → logprob: -4.3937225341796875
    10. 'position' → logprob: -5.0187225341796875

Token 1154: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5133788585662842
    2. ':
' → logprob: -1.7633788585662842
    3. 'def' → logprob: -2.013378858566284
    4. ' in' → logprob: -2.013378858566284
    5. 's' → logprob: -2.888378858566284
    6. 'in' → logprob: -2.888378858566284
    7. ':' → logprob: -3.263378858566284
    8. ',' → logprob: -3.388378858566284
    9. '_up' → logprob: -3.888378858566284
    10. 'for' → logprob: -4.263379096984863

Token 1155: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.14687739312648773
    2. ' be' → logprob: -2.6468772888183594
    3. 'down' → logprob: -4.271877288818359
    4. 'continue' → logprob: -4.521877288818359
    5. 'up' → logprob: -4.771877288818359
    6. 'occur' → logprob: -4.771877288818359
    7. '(' → logprob: -5.271877288818359
    8. 'complete' → logprob: -5.396877288818359
    9. 'r' → logprob: -5.771877288818359
    10. 'UP' → logprob: -6.146877288818359

Token 1156: ' valid' (ID: 4529)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.3026854991912842
    2. 'valid' → logprob: -2.052685499191284
    3. 'allowed' → logprob: -2.177685499191284
    4. ' valid' → logprob: -5.052685737609863
    5. ' possible' → logprob: -5.177685737609863
    6. 'consider' → logprob: -5.927685737609863
    7. ' allowed' → logprob: -6.552685737609863
    8. 'completed' → logprob: -7.302685737609863
    9. 'made' → logprob: -7.677685737609863
    10. 'performed' → logprob: -7.802685737609863

Token 1157: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3881189525127411
    2. '   ' → logprob: -2.1381189823150635
    3. ':' → logprob: -2.6381189823150635
    4. '#' → logprob: -3.2631189823150635
    5. ':
' → logprob: -3.5131189823150635
    6. 'for' → logprob: -3.6381189823150635
    7. ',
' → logprob: -4.263118743896484
    8. 'def' → logprob: -4.638118743896484
    9. ' for' → logprob: -5.763118743896484
    10. ' in' → logprob: -6.013118743896484

Token 1158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03829106688499451
    2. ' for' → logprob: -3.7882909774780273
    3. 'for' → logprob: -4.663290977478027
    4. '#' → logprob: -6.163290977478027
    5. 'moves' → logprob: -7.163290977478027
    6. ' next' → logprob: -7.788290977478027
    7. 'possible' → logprob: -8.038290977478027
    8. ' #' → logprob: -8.038290977478027
    9. ' moves' → logprob: -8.288290977478027
    10. 'next' → logprob: -8.663290977478027

Token 1159: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3959505558013916
    2. '   ' → logprob: -1.2709505558013916
    3. 'for' → logprob: -3.6459505558013916
    4. ' #' → logprob: -5.2709503173828125
    5. 'if' → logprob: -5.5209503173828125
    6. ' for' → logprob: -5.6459503173828125
    7. 'next' → logprob: -6.2709503173828125
    8. 'possible' → logprob: -6.2709503173828125
    9. ' if' → logprob: -6.8959503173828125
    10. 'def' → logprob: -7.5209503173828125

Token 1160: ' Those' (ID: 21079)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21887251734733582
    2. '   ' → logprob: -1.7188725471496582
    3. 'for' → logprob: -4.343872547149658
    4. 'if' → logprob: -6.843872547149658
    5. 'valid' → logprob: -7.218872547149658
    6. 'moves' → logprob: -7.218872547149658
    7. 'possible' → logprob: -7.468872547149658
    8. ' #' → logprob: -7.718872547149658
    9. ' for' → logprob: -7.968872547149658
    10. '
' → logprob: -9.4688720703125

Token 1161: ' new' (ID: 620)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positions' → logprob: -1.3121285438537598
    2. 'positions' → logprob: -1.6871285438537598
    3. ' open' → logprob: -1.9371285438537598
    4. 'open' → logprob: -2.0621285438537598
    5. ' two' → logprob: -2.4371285438537598
    6. ' squares' → logprob: -2.8121285438537598
    7. ' adjacent' → logprob: -3.5621285438537598
    8. ' cells' → logprob: -4.18712854385376
    9. 'cells' → logprob: -4.31212854385376
    10. 'two' → logprob: -4.43712854385376

Token 1162: ' cells' (ID: 11242)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -1.0694228410720825
    2. '_' → logprob: -1.1944228410720825
    3. 'positions' → logprob: -1.8194228410720825
    4. ' positions' → logprob: -2.944422721862793
    5. ' open' → logprob: -3.444422721862793
    6. 'open' → logprob: -3.569422721862793
    7. '_s' → logprob: -3.569422721862793
    8. '_open' → logprob: -4.194422721862793
    9. '_cells' → logprob: -5.444422721862793
    10. ' _' → logprob: -5.569422721862793

Token 1163: ' must' (ID: 2804)
  Prédit: 'must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'must' → logprob: -0.23911526799201965
    2. ' must' → logprob: -1.6141152381896973
    3. 'in' → logprob: -5.489115238189697
    4. 'should' → logprob: -5.864115238189697
    5. ' in' → logprob: -6.114115238189697
    6. ' are' → logprob: -6.489115238189697
    7. ' should' → logprob: -7.114115238189697
    8. 'are' → logprob: -7.364115238189697
    9. 'that' → logprob: -8.239115715026855
    10. ')' → logprob: -8.864115715026855

Token 1164: ' be' (ID: 413)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.845889151096344
    2. ' not' → logprob: -1.2208890914916992
    3. ' be' → logprob: -1.7208890914916992
    4. 'be' → logprob: -2.345889091491699
    5. 'in' → logprob: -7.470889091491699
    6. ' in' → logprob: -8.4708890914917
    7. 'all' → logprob: -8.9708890914917
    8. ' all' → logprob: -9.4708890914917
    9. 'have' → logprob: -9.5958890914917
    10. ' have' → logprob: -10.9708890914917

Token 1165: ' two' (ID: 1920)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.7550767064094543
    2. 'in' → logprob: -0.8800767064094543
    3. 'inside' → logprob: -2.7550766468048096
    4. 'empty' → logprob: -4.505076885223389
    5. 'free' → logprob: -4.630076885223389
    6. 'all' → logprob: -4.630076885223389
    7. 'within' → logprob: -5.630076885223389
    8. ' in' → logprob: -5.630076885223389
    9. '{' → logprob: -6.005076885223389
    10. ' open' → logprob: -6.255076885223389

Token 1166: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.44987788796424866
    2. ' open' → logprob: -1.3248778581619263
    3. '_open' → logprob: -4.449877738952637
    4. ' of' → logprob: -4.574877738952637
    5. '_' → logprob: -4.824877738952637
    6. ' adjacent' → logprob: -5.074877738952637
    7. ' (' → logprob: -5.324877738952637
    8. ' in' → logprob: -5.324877738952637
    9. ' spaces' → logprob: -5.449877738952637
    10. 'of' → logprob: -5.449877738952637

Token 1167: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.10852442681789398
    2. ')' → logprob: -3.6085243225097656
    3. 's' → logprob: -4.108524322509766
    4. '_spaces' → logprob: -4.233524322509766
    5. ' squares' → logprob: -4.358524322509766
    6. ',' → logprob: -4.858524322509766
    7. ' ' → logprob: -5.233524322509766
    8. '_' → logprob: -5.358524322509766
    9. '(' → logprob: -5.608524322509766
    10. ')
' → logprob: -6.358524322509766

Token 1168: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1538948118686676
    2. 'moves' → logprob: -2.5288949012756348
    3. 'def' → logprob: -3.2788949012756348
    4. '
' → logprob: -4.403894901275635
    5. 'for' → logprob: -4.653894901275635
    6. '#' → logprob: -7.153894901275635
    7. '    
' → logprob: -7.528894901275635
    8. 'm' → logprob: -8.153894424438477
    9. 'next' → logprob: -8.153894424438477
    10. ' for' → logprob: -8.278894424438477

Token 1169: ' the' (ID: 290)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.4610447883605957
    2. 'the' → logprob: -1.0860447883605957
    3. 'ob' → logprob: -4.586044788360596
    4. 'set' → logprob: -4.836044788360596
    5. '{' → logprob: -5.586044788360596
    6. 'dire' → logprob: -5.836044788360596
    7. 'a' → logprob: -6.086044788360596
    8. 'op' → logprob: -6.461044788360596
    9. 'positions' → logprob: -7.086044788360596
    10. 'opens' → logprob: -7.711044788360596

Token 1170: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.05525166541337967
    2. 'state' → logprob: -3.0552515983581543
    3. 'set' → logprob: -5.930251598358154
    4. 'opens' → logprob: -6.805251598358154
    5. 'op' → logprob: -6.930251598358154
    6. '{' → logprob: -7.555251598358154
    7. 'next' → logprob: -8.055252075195312
    8. ' open' → logprob: -9.055252075195312
    9. 'current' → logprob: -9.055252075195312
    10. 'direction' → logprob: -9.055252075195312

Token 1171: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.007726230192929506
    2. 's' → logprob: -5.882726192474365
    3. '_positions' → logprob: -5.882726192474365
    4. '_spaces' → logprob: -7.007726192474365
    5. ')' → logprob: -8.132726669311523
    6. '   ' → logprob: -8.382726669311523
    7. ')_' → logprob: -8.507726669311523
    8. '_' → logprob: -9.007726669311523
    9. '```' → logprob: -9.632726669311523
    10. '_cells' → logprob: -9.882726669311523

Token 1172: ' set' (ID: 920)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07348865270614624
    2. ':
' → logprob: -3.698488712310791
    3. 'def' → logprob: -4.073488712310791
    4. ':' → logprob: -4.948488712310791
    5. '
' → logprob: -4.948488712310791
    6. ',
' → logprob: -6.073488712310791
    7. 's' → logprob: -6.323488712310791
    8. ',' → logprob: -6.448488712310791
    9. '    
' → logprob: -6.823488712310791
    10. ')' → logprob: -6.948488712310791

Token 1173: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06117701157927513
    2. '
' → logprob: -2.9361770153045654
    3. '    
' → logprob: -5.686176776885986
    4. 'def' → logprob: -6.311176776885986
    5. 'moves' → logprob: -7.686176776885986
    6. '#' → logprob: -8.811177253723145
    7. '```' → logprob: -10.061177253723145
    8. 'for' → logprob: -10.186177253723145
    9. '

' → logprob: -10.311177253723145
    10. 'dire' → logprob: -10.436177253723145

Token 1174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003809453686699271
    2. 'def' → logprob: -6.253809452056885
    3. '
' → logprob: -7.628809452056885
    4. '#' → logprob: -7.753809452056885
    5. 'moves' → logprob: -8.128809928894043
    6. '    
' → logprob: -8.378809928894043
    7. ')' → logprob: -9.128809928894043
    8. '       ' → logprob: -10.003809928894043
    9. ':' → logprob: -10.503809928894043
    10. ',' → logprob: -10.878809928894043

Token 1175: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05570513755083084
    2. 'def' → logprob: -3.8057050704956055
    3. 'moves' → logprob: -3.8057050704956055
    4. 'for' → logprob: -5.8057050704956055
    5. '
' → logprob: -5.9307050704956055
    6. 'possible' → logprob: -7.3057050704956055
    7. '#' (adapté à ' #') → logprob: -7.4307050704956055
    8. '    
' → logprob: -7.8057050704956055
    9. 'move' → logprob: -8.055705070495605
    10. ':' → logprob: -8.180705070495605

Token 1176: ' And' (ID: 1958)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40148603916168213
    2. 'moves' → logprob: -1.4014860391616821
    3. 'for' → logprob: -3.0264859199523926
    4. 'def' → logprob: -3.9014859199523926
    5. 'possible' → logprob: -5.526485919952393
    6. 'dire' → logprob: -5.651485919952393
    7. '
' → logprob: -5.776485919952393
    8. 'move' → logprob: -6.651485919952393
    9. ' for' → logprob: -7.151485919952393
    10. '#' → logprob: -7.276485919952393

Token 1177: ' the' (ID: 290)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5028116106987
    2. '   ' → logprob: -2.3778116703033447
    3. 'the' → logprob: -2.5028116703033447
    4. 'def' → logprob: -3.1278116703033447
    5. ' the' → logprob: -3.7528116703033447
    6. 'not' → logprob: -3.8778116703033447
    7. 'all' → logprob: -4.002811431884766
    8. ' not' → logprob: -4.127811431884766
    9. 'king' → logprob: -4.127811431884766
    10. ' king' → logprob: -4.127811431884766

Token 1178: ' king' (ID: 13793)
  Prédit: ' king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' king' → logprob: -0.1252836138010025
    2. 'king' → logprob: -3.000283718109131
    3. '#' → logprob: -4.000283718109131
    4. 'r' → logprob: -4.625283718109131
    5. ' new' → logprob: -4.750283718109131
    6. 'def' → logprob: -5.000283718109131
    7. ' current' → logprob: -5.375283718109131
    8. ' #' → logprob: -5.875283718109131
    9. 'new' → logprob: -6.625283718109131
    10. ' r' → logprob: -6.625283718109131

Token 1179: ' must' (ID: 2804)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.224984884262085
    2. ' must' → logprob: -1.849984884262085
    3. 'moves' → logprob: -2.474984884262085
    4. ' cannot' → logprob: -2.724984884262085
    5. ' move' → logprob: -2.849984884262085
    6. ' ' → logprob: -3.474984884262085
    7. ' moves' → logprob: -3.599984884262085
    8. ' position' → logprob: -3.724984884262085
    9. 'position' → logprob: -3.849984884262085
    10. 'positions' → logprob: -3.974984884262085

Token 1180: ' fit' (ID: 5769)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.25002458691596985
    2. 'not' → logprob: -1.6250245571136475
    3. ' be' → logprob: -4.250024795532227
    4. ' have' → logprob: -5.250024795532227
    5. ' fit' → logprob: -6.625024795532227
    6. 'have' → logprob: -7.125024795532227
    7. 'be' → logprob: -7.500024795532227
    8. 'in' → logprob: -8.250024795532227
    9. ' continue' → logprob: -8.375024795532227
    10. ' in' → logprob: -8.625024795532227

Token 1181: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037058304995298386
    2. 'def' → logprob: -4.412058353424072
    3. '
' → logprob: -4.912058353424072
    4. ' for' → logprob: -5.162058353424072
    5. 'for' → logprob: -5.162058353424072
    6. 'moves' → logprob: -5.662058353424072
    7. ' moves' → logprob: -6.912058353424072
    8. '    
' → logprob: -8.912057876586914
    9. '       ' → logprob: -9.037057876586914
    10. '_moves' → logprob: -9.037057876586914

Token 1182: ' the' (ID: 290)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6307594776153564
    2. '(r' → logprob: -0.8807594776153564
    3. '(' → logprob: -4.130759239196777
    4. '   ' → logprob: -4.630759239196777
    5. 'r' → logprob: -5.630759239196777
    6. ' the' → logprob: -5.630759239196777
    7. 'the' → logprob: -5.880759239196777
    8. '
' → logprob: -6.005759239196777
    9. ' 
' → logprob: -6.130759239196777
    10. ' ' → logprob: -6.255759239196777

Token 1183: ' new' (ID: 620)
  Prédit: 'frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frame' → logprob: -0.6661792397499084
    2. 'grid' → logprob: -1.2911791801452637
    3. 'new' → logprob: -2.2911791801452637
    4. 'next' → logprob: -3.1661791801452637
    5. 'open' → logprob: -4.291179180145264
    6. 'r' → logprob: -4.541179180145264
    7. 'state' → logprob: -4.916179180145264
    8. 'current' → logprob: -4.916179180145264
    9. 'board' → logprob: -5.291179180145264
    10. 'same' → logprob: -5.666179180145264

Token 1184: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.7456257939338684
    2. 'position' → logprob: -0.8706257939338684
    3. 'r' → logprob: -2.8706257343292236
    4. '_r' → logprob: -3.7456257343292236
    5. '_' → logprob: -4.620625972747803
    6. '_position' → logprob: -5.495625972747803
    7. '   ' → logprob: -5.870625972747803
    8. ' r' → logprob: -6.245625972747803
    9. ' ' → logprob: -6.370625972747803
    10. 'pos' → logprob: -6.495625972747803

Token 1185: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0514274537563324
    2. '
' → logprob: -3.0514273643493652
    3. '    
' → logprob: -6.426427364349365
    4. 'def' → logprob: -7.676427364349365
    5. '\n' → logprob: -9.051427841186523
    6. 'moves' → logprob: -9.051427841186523
    7. ' 
' → logprob: -9.551427841186523
    8. ' moves' → logprob: -9.676427841186523
    9. '       ' → logprob: -9.801427841186523
    10. ' directions' → logprob: -10.176427841186523

Token 1186: 'bounds' (ID: 77625)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8601094484329224
    2. 'p' → logprob: -1.2351094484329224
    3. 'True' → logprob: -2.735109329223633
    4. ')' → logprob: -3.110109329223633
    5. 'pawn' → logprob: -3.235109329223633
    6. 'king' → logprob: -3.860109329223633
    7. ' True' → logprob: -3.985109329223633
    8. 'paw' → logprob: -4.485109329223633
    9. 'def' → logprob: -4.735109329223633
    10. 'not' → logprob: -4.860109329223633

Token 1187: ',' (ID: 11)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5613679885864258
    2. ' and' → logprob: -0.9363679885864258
    3. ')' → logprob: -3.811367988586426
    4. '   ' → logprob: -4.686367988586426
    5. ',' → logprob: -6.561367988586426
    6. ' or' → logprob: -6.686367988586426
    7. '+' → logprob: -6.686367988586426
    8. 'or' → logprob: -7.311367988586426
    9. ' +' → logprob: -8.186367988586426
    10. '       ' → logprob: -8.561367988586426

Token 1188: ' no' (ID: 860)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.7600309252738953
    2. 'p' → logprob: -1.01003098487854
    3. 'no' → logprob: -3.01003098487854
    4. 'pawn' → logprob: -3.38503098487854
    5. ' obstacles' → logprob: -3.76003098487854
    6. 'not' → logprob: -4.135030746459961
    7. '#' → logprob: -4.385030746459961
    8. 'pieces' → logprob: -5.010030746459961
    9. 'occupied' → logprob: -5.135030746459961
    10. '   ' → logprob: -5.635030746459961

Token 1189: ' obstacle' (ID: 57212)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05401583015918732
    2. 'pawn' → logprob: -3.179015874862671
    3. ' paw' → logprob: -5.429015636444092
    4. 'rr' → logprob: -5.929015636444092
    5. 'king' → logprob: -7.179015636444092
    6. 'paw' → logprob: -7.179015636444092
    7. 'r' → logprob: -7.304015636444092
    8. 'ob' → logprob: -8.05401611328125
    9. '(rr' → logprob: -8.05401611328125
    10. '(' → logprob: -8.42901611328125

Token 1190: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0011478662490845
    2. ' or' → logprob: -1.0011478662490845
    3. 'or' → logprob: -1.5011478662490845
    4. ',' → logprob: -3.501147747039795
    5. 's' → logprob: -5.126147747039795
    6. ')
' → logprob: -5.876147747039795
    7. '   ' → logprob: -6.751147747039795
    8. 'and' → logprob: -7.751147747039795
    9. 'cells' → logprob: -8.376148223876953
    10. ' and' → logprob: -8.501148223876953

Token 1191: ' pawn' (ID: 112226)
  Prédit: 'pawn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pawn' → logprob: -0.13354384899139404
    2. 'p' → logprob: -2.1335439682006836
    3. ' paw' → logprob: -5.883543968200684
    4. 'paw' → logprob: -5.883543968200684
    5. ' pawn' → logprob: -7.008543968200684
    6. 'king' → logprob: -10.258543968200684
    7. ' p' → logprob: -10.758543968200684
    8. '
' → logprob: -11.008543968200684
    9. '#' → logprob: -11.758543968200684
    10. '```' → logprob: -11.883543968200684

Token 1192: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08102507889270782
    2. ')
' → logprob: -3.0810251235961914
    3. 's' → logprob: -3.9560251235961914
    4. 'positions' → logprob: -5.831025123596191
    5. 'cells' → logprob: -5.956025123596191
    6. '):
' → logprob: -6.581025123596191
    7. 'set' → logprob: -7.081025123596191
    8. '_set' → logprob: -7.206025123596191
    9. '))' → logprob: -7.331025123596191
    10. '   ' → logprob: -7.456025123596191

Token 1193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028246084693819284
    2. '
' → logprob: -6.377824783325195
    3. '    
' → logprob: -7.377824783325195
    4. 'def' → logprob: -8.002824783325195
    5. '       ' → logprob: -9.627824783325195
    6. ')' → logprob: -10.002824783325195
    7. ' 
' → logprob: -12.002824783325195
    8. ',' → logprob: -12.377824783325195
    9. '        
' → logprob: -12.502824783325195
    10. '```' → logprob: -12.627824783325195

Token 1194: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052951913326978683
    2. 'moves' → logprob: -3.1779518127441406
    3. 'def' → logprob: -4.802951812744141
    4. '#' (adapté à ' #') → logprob: -6.802951812744141
    5. 'for' → logprob: -8.67795181274414
    6. 'move' → logprob: -8.92795181274414
    7. '    
' → logprob: -9.17795181274414
    8. ' moves' → logprob: -10.30295181274414
    9. 'mov' → logprob: -10.55295181274414
    10. 'possible' → logprob: -10.80295181274414

Token 1195: ' Check' (ID: 6208)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17725566029548645
    2. 'def' → logprob: -2.302255630493164
    3. 'moves' → logprob: -2.802255630493164
    4. '#' → logprob: -6.927255630493164
    5. '    
' → logprob: -8.927255630493164
    6. 'for' → logprob: -9.177255630493164
    7. 'possible' → logprob: -9.302255630493164
    8. 'from' → logprob: -9.677255630493164
    9. '
' → logprob: -9.802255630493164
    10. 'visited' → logprob: -9.927255630493164

Token 1196: ' possible' (ID: 4149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8135207295417786
    2. 'king' → logprob: -1.4385206699371338
    3. ' king' → logprob: -2.563520669937134
    4. 'if' → logprob: -2.938520669937134
    5. 'for' → logprob: -3.313520669937134
    6. '   ' → logprob: -3.438520669937134
    7. 'dire' → logprob: -3.438520669937134
    8. 'possible' → logprob: -3.688520669937134
    9. 'moves' → logprob: -4.188520908355713
    10. 'r' → logprob: -4.813520908355713

Token 1197: ' king' (ID: 13793)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.07216662913560867
    2. '_moves' → logprob: -3.072166681289673
    3. 'king' → logprob: -3.947166681289673
    4. ' king' → logprob: -6.322166442871094
    5. ' moves' → logprob: -7.447166442871094
    6. 'dire' → logprob: -7.697166442871094
    7. '   ' → logprob: -7.822166442871094
    8. 'def' → logprob: -8.197166442871094
    9. 'move' → logprob: -8.947166442871094
    10. 'mov' → logprob: -9.072166442871094

Token 1198: ' moves' (ID: 19523)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.04334969446063042
    2. 'moves' → logprob: -3.1683497428894043
    3. ' moves' → logprob: -8.668349266052246
    4. '   ' → logprob: -9.668349266052246
    5. '_move' → logprob: -10.043349266052246
    6. '_positions' → logprob: -10.418349266052246
    7. '_mov' → logprob: -10.543349266052246
    8. 'move' → logprob: -13.293349266052246
    9. 'Moves' → logprob: -13.418349266052246
    10. '.moves' → logprob: -13.668349266052246

Token 1199: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14637501537799835
    2. 'for' → logprob: -2.1463749408721924
    3. 'king' → logprob: -5.1463751792907715
    4. 'moves' → logprob: -5.1463751792907715
    5. ' for' → logprob: -5.8963751792907715
    6. 'possible' → logprob: -6.1463751792907715
    7. 'def' → logprob: -6.6463751792907715
    8. '
' → logprob: -7.1463751792907715
    9. '    
' → logprob: -8.271374702453613
    10. ' king' → logprob: -9.021374702453613

Token 1200: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03609796613454819
    2. 'kr' → logprob: -4.161098003387451
    3. '(r' → logprob: -4.536098003387451
    4. 'state' → logprob: -5.661098003387451
    5. ' (' → logprob: -6.411098003387451
    6. 'r' → logprob: -6.411098003387451
    7. '   ' → logprob: -7.036098003387451
    8. 'position' → logprob: -7.911098003387451
    9. '
' → logprob: -8.161097526550293
    10. 'current' → logprob: -8.786097526550293

Token 1201: 'r' (ID: 81)
  Prédit: 'kr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kr' → logprob: -0.0005838918150402606
    2. '   ' → logprob: -8.25058364868164
    3. ' kr' → logprob: -9.12558364868164
    4. 'r' → logprob: -9.25058364868164
    5. '(' → logprob: -9.37558364868164
    6. ')' → logprob: -11.62558364868164
    7. '
' → logprob: -12.50058364868164
    8. '#' → logprob: -12.62558364868164
    9. '       ' → logprob: -12.75058364868164
    10. '```' → logprob: -12.75058364868164

Token 1202: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27726873755455017
    2. ',c' → logprob: -1.7772687673568726
    3. ',k' → logprob: -2.652268648147583
    4. 'kr' → logprob: -7.402268886566162
    5. ',
' → logprob: -7.402268886566162
    6. 'kc' → logprob: -7.777268886566162
    7. ')' → logprob: -8.527268409729004
    8. ' ,' → logprob: -8.902268409729004
    9. '   ' → logprob: -9.152268409729004
    10. ',r' → logprob: -9.152268409729004

Token 1203: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5308223962783813
    2. '):' → logprob: -0.9058223962783813
    3. ')' → logprob: -5.905822277069092
    4. '   ' → logprob: -6.155822277069092
    5. ',' → logprob: -6.780822277069092
    6. '):

' → logprob: -7.155822277069092
    7. '):
' → logprob: -7.655822277069092
    8. 'def' → logprob: -8.40582275390625
    9. ')
' → logprob: -10.03082275390625
    10. 'for' → logprob: -10.53082275390625

Token 1204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12276093661785126
    2. 'for' → logprob: -2.3727610111236572
    3. 'moves' → logprob: -4.497760772705078
    4. ' for' → logprob: -5.372760772705078
    5. 'def' → logprob: -5.622760772705078
    6. '
' → logprob: -6.372760772705078
    7. 'possible' → logprob: -7.497760772705078
    8. '    
' → logprob: -8.872760772705078
    9. '#' → logprob: -9.372760772705078
    10. 'king' → logprob: -9.497760772705078

Token 1205: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.8574502468109131
    2. '   ' → logprob: -0.9824502468109131
    3. 'for' → logprob: -1.982450246810913
    4. 'king' → logprob: -3.357450246810913
    5. 'moves' → logprob: -4.232450485229492
    6. 'possible' → logprob: -4.357450485229492
    7. ' for' → logprob: -7.232450485229492
    8. '
' → logprob: -8.107450485229492
    9. 'valid' → logprob: -9.482450485229492
    10. '    
' → logprob: -9.607450485229492

Token 1206: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -1.013329029083252
    2. 'possible' → logprob: -1.388329029083252
    3. ' king' → logprob: -1.388329029083252
    4. ' possible' → logprob: -2.763329029083252
    5. 'get' → logprob: -3.513329029083252
    6. ' get' → logprob: -3.638329029083252
    7. ' find' → logprob: -5.638329029083252
    8. 'valid' → logprob: -5.638329029083252
    9. ' valid' → logprob: -5.763329029083252
    10. 'can' → logprob: -5.888329029083252

Token 1207: '_moves' (ID: 110706)
  Prédit: '_moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.02610485628247261
    2. '_f' → logprob: -3.7761049270629883
    3. '_move' → logprob: -6.151104927062988
    4. '_possible' → logprob: -8.026104927062988
    5. '_can' → logprob: -8.651104927062988
    6. '_positions' → logprob: -8.901104927062988
    7. '_mov' → logprob: -10.901104927062988
    8. 'moves' → logprob: -11.151104927062988
    9. '```' → logprob: -11.776104927062988
    10. ' _' → logprob: -11.901104927062988

Token 1208: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.02330021746456623
    2. '(' → logprob: -3.7733001708984375
    3. '((' → logprob: -10.648300170898438
    4. ' (' → logprob: -11.273300170898438
    5. '(
' → logprob: -12.148300170898438
    6. '(k' → logprob: -12.648300170898438
    7. '   ' → logprob: -13.148300170898438
    8. '(rr' → logprob: -13.398300170898438
    9. '():' → logprob: -13.523300170898438
    10. '(row' → logprob: -14.148300170898438

Token 1209: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.11667133122682571
    2. ',' → logprob: -2.241671323776245
    3. '):
' → logprob: -6.866671562194824
    4. ',k' → logprob: -6.991671562194824
    5. ' ,' → logprob: -7.366671562194824
    6. '   ' → logprob: -7.616671562194824
    7. '+' → logprob: -8.241671562194824
    8. 'c' → logprob: -9.241671562194824
    9. '):' → logprob: -9.241671562194824
    10. ',r' → logprob: -9.741671562194824

Token 1210: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3010157644748688
    2. ',' → logprob: -1.5510157346725464
    3. '):
' → logprob: -3.051015853881836
    4. '   ' → logprob: -7.926015853881836
    5. ',c' → logprob: -10.551015853881836
    6. ',k' → logprob: -10.551015853881836
    7. ',p' → logprob: -10.801015853881836
    8. ',d' → logprob: -10.926015853881836
    9. '):
' → logprob: -10.926015853881836
    10. ',n' → logprob: -11.051015853881836

Token 1211: ' paw' (ID: 71961)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004043256398290396
    2. ' paw' → logprob: -5.629043102264404
    3. 'paw' → logprob: -8.254043579101562
    4. 'pawn' → logprob: -9.254043579101562
    5. '   ' → logprob: -9.629043579101562
    6. ' ' → logprob: -11.629043579101562
    7. '  ' → logprob: -12.879043579101562
    8. '    ' → logprob: -13.754043579101562
    9. ')' → logprob: -13.754043579101562
    10. '     ' → logprob: -14.004043579101562

Token 1212: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.00019376569252926856
    2. 'n' → logprob: -9.00019359588623
    3. 'nts' → logprob: -10.00019359588623
    4. 'ans' → logprob: -11.50019359588623
    5. 's' → logprob: -11.87519359588623
    6. 'ons' → logprob: -12.62519359588623
    7. '   ' → logprob: -13.37519359588623
    8. '_ns' → logprob: -14.37519359588623
    9. '	ns' → logprob: -14.87519359588623
    10. 'nds' → logprob: -14.87519359588623

Token 1213: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.002184999408200383
    2. ',' → logprob: -6.627184867858887
    3. '_sets' → logprob: -8.002184867858887
    4. '   ' → logprob: -9.252184867858887
    5. 'set' → logprob: -9.502184867858887
    6. '):' → logprob: -9.502184867858887
    7. ',_' → logprob: -9.627184867858887
    8. '):
' → logprob: -9.752184867858887
    9. ')_' → logprob: -10.002184867858887
    10. '_s' → logprob: -10.627184867858887

Token 1214: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47426605224609375
    2. '):
' → logprob: -0.9742660522460938
    3. '   ' → logprob: -8.849266052246094
    4. '):
' → logprob: -10.724266052246094
    5. ')' → logprob: -11.099266052246094
    6. '):

' → logprob: -12.474266052246094
    7. ',' → logprob: -13.474266052246094
    8. ' ):' → logprob: -14.224266052246094
    9. ':' → logprob: -14.474266052246094
    10. '  ' → logprob: -14.724266052246094

Token 1215: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.07081718742847443
    2. ' open' → logprob: -2.945817232131958
    3. 'opens' → logprob: -4.320816993713379
    4. ' opens' → logprob: -6.695816993713379
    5. '   ' → logprob: -7.195816993713379
    6. ' ' → logprob: -8.945816993713379
    7. ')' → logprob: -9.070816993713379
    8. 'op' → logprob: -9.820816993713379
    9. 'ob' → logprob: -10.070816993713379
    10. '	open' → logprob: -10.383316993713379

Token 1216: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.15827210247516632
    2. 's' → logprob: -2.0332720279693604
    3. '1' → logprob: -4.2832722663879395
    4. ')' → logprob: -7.1582722663879395
    5. '_positions' → logprob: -8.158271789550781
    6. '(' → logprob: -9.658271789550781
    7. '
' → logprob: -9.658271789550781
    8. '_spaces' → logprob: -9.783271789550781
    9. 'Squares' → logprob: -9.783271789550781
    10. ' squares' → logprob: -9.908271789550781

Token 1217: 'quares' (ID: 110764)
  Prédit: 'quares'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quares' → logprob: -0.19014178216457367
    2. 'ets' → logprob: -2.0651416778564453
    3. 'et' → logprob: -3.1901416778564453
    4. 'q' → logprob: -6.940141677856445
    5. '```' → logprob: -6.940141677856445
    6. '_' → logprob: -7.065141677856445
    7. '{' → logprob: -8.190141677856445
    8. '1' → logprob: -8.315141677856445
    9. 'qs' → logprob: -8.315141677856445
    10. ')' → logprob: -8.440141677856445

Token 1218: '_set' (ID: 5451)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1608477085828781
    2. '):' → logprob: -1.9108476638793945
    3. '   ' → logprob: -7.9108476638793945
    4. '_set' → logprob: -9.285847663879395
    5. '):
' → logprob: -9.535847663879395
    6. '_' → logprob: -10.035847663879395
    7. '):

' → logprob: -11.285847663879395
    8. ')' → logprob: -11.785847663879395
    9. ',' → logprob: -12.035847663879395
    10. ' ):
' → logprob: -12.035847663879395

Token 1219: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12696370482444763
    2. '):
' → logprob: -2.1269636154174805
    3. '   ' → logprob: -10.87696361541748
    4. '):
' → logprob: -11.62696361541748
    5. ')' → logprob: -12.12696361541748
    6. ' ):' → logprob: -13.75196361541748
    7. '):

' → logprob: -14.25196361541748
    8. ' ' → logprob: -15.62696361541748
    9. ':' → logprob: -15.87696361541748
    10. ' ):
' → logprob: -16.001964569091797

Token 1220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21767710149288177
    2. '   ' → logprob: -1.842677116394043
    3. ':' → logprob: -4.592677116394043
    4. ':
' → logprob: -4.842677116394043
    5. '[' → logprob: -5.092677116394043
    6. ' for' → logprob: -6.217677116394043
    7. '    ' → logprob: -6.342677116394043
    8. '(' → logprob: -6.467677116394043
    9. '```' → logprob: -6.467677116394043
    10. '    
' → logprob: -6.592677116394043

Token 1221: ' res' (ID: 694)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.04101017490029335
    2. '   ' → logprob: -3.4160101413726807
    3. ' moves' → logprob: -5.41601037979126
    4. 'for' → logprob: -6.79101037979126
    5. '       ' → logprob: -7.16601037979126
    6. 'yield' → logprob: -8.166009902954102
    7. ' for' → logprob: -8.541009902954102
    8. 'possible' → logprob: -8.916009902954102
    9. 'm' → logprob: -9.166009902954102
    10. 'result' → logprob: -9.541009902954102

Token 1222: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22590690851211548
    2. ' =' → logprob: -1.6009068489074707
    3. '=[]' → logprob: -7.725906848907471
    4. '=[]
' → logprob: -10.350907325744629
    5. '   ' → logprob: -11.725907325744629
    6. '.append' → logprob: -12.725907325744629
    7. '_' → logprob: -12.850907325744629
    8. 's' → logprob: -13.600907325744629
    9. '[]' → logprob: -13.725907325744629
    10. ' ' → logprob: -14.225907325744629

Token 1223: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0016021024202927947
    2. '[]
' → logprob: -6.7516021728515625
    3. ' []' → logprob: -7.7516021728515625
    4. '   ' → logprob: -14.126602172851562
    5. ' []
' → logprob: -15.251602172851562
    6. '[' → logprob: -15.376602172851562
    7. 'set' → logprob: -15.626602172851562
    8. '[]

' → logprob: -15.626602172851562
    9. '[]}' → logprob: -16.126602172851562
    10. '[]"' → logprob: -16.251602172851562

Token 1224: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007212818134576082
    2. '
' → logprob: -5.8822126388549805
    3. '    
' → logprob: -6.2572126388549805
    4. ' for' → logprob: -7.1322126388549805
    5. ':' → logprob: -7.8822126388549805
    6. ',' → logprob: -8.00721263885498
    7. 'for' → logprob: -8.38221263885498
    8. ':
' → logprob: -8.63221263885498
    9. '    ' → logprob: -9.25721263885498
    10. '       ' → logprob: -9.50721263885498

Token 1225: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14215397834777832
    2. 'if' → logprob: -2.6421539783477783
    3. '#' (adapté à ' #') → logprob: -3.0171539783477783
    4. '   ' → logprob: -4.517153739929199
    5. '       ' → logprob: -7.142153739929199
    6. 'moves' → logprob: -8.3921537399292
    7. ' for' → logprob: -8.6421537399292
    8. 'dire' → logprob: -8.8921537399292
    9. ' if' → logprob: -10.3921537399292
    10. '
' → logprob: -11.1421537399292

Token 1226: ' UP' (ID: 19153)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.026881523430347443
    2. '   ' → logprob: -4.401881694793701
    3. '#' → logprob: -4.651881694793701
    4. 'if' → logprob: -5.651881694793701
    5. ' for' → logprob: -7.526881694793701
    6. '       ' → logprob: -7.901881694793701
    7. '
' → logprob: -9.151881217956543
    8. 'dire' → logprob: -9.401881217956543
    9. 'def' → logprob: -10.776881217956543
    10. 'r' → logprob: -10.776881217956543

Token 1227: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0922911167144775
    2. ' if' → logprob: -1.3422911167144775
    3. '   ' → logprob: -1.8422911167144775
    4. ' =' → logprob: -2.2172911167144775
    5. 'if' → logprob: -2.4672911167144775
    6. ':' → logprob: -3.9672911167144775
    7. ' (' → logprob: -4.342290878295898
    8. ' for' → logprob: -5.467290878295898
    9. 'for' → logprob: -5.842290878295898
    10. '           ' → logprob: -6.342290878295898

Token 1228: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6910457611083984
    2. ' =' → logprob: -1.9410457611083984
    3. ':' → logprob: -2.1910457611083984
    4. ' if' → logprob: -2.4410457611083984
    5. 'if' → logprob: -2.5660457611083984
    6. '       ' → logprob: -3.5660457611083984
    7. ':
' → logprob: -4.066045761108398
    8. 'for' → logprob: -4.566045761108398
    9. '=' → logprob: -5.316045761108398
    10. '
' → logprob: -5.816045761108398

Token 1229: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.019106727093458176
    2. ' if' → logprob: -4.144106864929199
    3. 'nr' → logprob: -7.144106864929199
    4. '   ' → logprob: -7.269106864929199
    5. 'for' → logprob: -7.519106864929199
    6. '       ' → logprob: -8.0191068649292
    7. 'r' → logprob: -8.5191068649292
    8. 'up' → logprob: -9.0191068649292
    9. 'dr' → logprob: -9.1441068649292
    10. 'open' → logprob: -9.5191068649292

Token 1230: ' r' (ID: 428)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.7741743922233582
    2. 'r' → logprob: -0.8991743922233582
    3. ' (' → logprob: -2.774174451828003
    4. ' r' → logprob: -3.274174451828003
    5. 'in' → logprob: -3.774174451828003
    6. ' in' → logprob: -5.399174213409424
    7. '(' → logprob: -5.899174213409424
    8. '(in' → logprob: -7.649174213409424
    9. 'open' → logprob: -7.899174213409424
    10. '   ' → logprob: -8.399174690246582

Token 1231: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4594496190547943
    2. ' >' → logprob: -1.5844496488571167
    3. '>' → logprob: -2.209449529647827
    4. ' -' → logprob: -2.959449529647827
    5. '>-' → logprob: -7.084449768066406
    6. ' ==' → logprob: -8.834449768066406
    7. '   ' → logprob: -8.834449768066406
    8. ' >=' → logprob: -9.209449768066406
    9. '>=' → logprob: -9.584449768066406
    10. '==' → logprob: -9.584449768066406

Token 1232: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -15.750000953674316
    4. '2' → logprob: -16.625001907348633
    5. '```' → logprob: -16.750001907348633
    6. '>' → logprob: -17.625001907348633
    7. '
' → logprob: -17.875001907348633
    8. '=' → logprob: -18.375001907348633
    9. '-' → logprob: -19.125001907348633
    10. '       ' → logprob: -19.500001907348633

Token 1233: ' >=' (ID: 5064)
  Prédit: ',c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.09050750732421875
    2. ',' → logprob: -2.5905075073242188
    3. '>=' → logprob: -5.340507507324219
    4. ')>=' → logprob: -6.090507507324219
    5. ' >=' → logprob: -6.840507507324219
    6. ',r' → logprob: -7.090507507324219
    7. ' ,' → logprob: -7.340507507324219
    8. ',(' → logprob: -7.465507507324219
    9. ')' → logprob: -7.840507507324219
    10. ',-' → logprob: -8.590507507324219

Token 1234: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013452880375552922
    2. '1' → logprob: -9.000134468078613
    3. ' ' → logprob: -11.500134468078613
    4. '2' → logprob: -15.000134468078613
    5. '```' → logprob: -15.250134468078613
    6. 'import' → logprob: -16.31263542175293
    7. '۰' → logprob: -16.75013542175293
    8. '
' → logprob: -16.81263542175293
    9. '-' → logprob: -17.12513542175293
    10. '=' → logprob: -17.50013542175293

Token 1235: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010735770774772391
    2. '1' → logprob: -9.250107765197754
    3. ' ' → logprob: -11.500107765197754
    4. '2' → logprob: -14.500107765197754
    5. '
' → logprob: -16.187606811523438
    6. 'import' → logprob: -17.000106811523438
    7. '```' → logprob: -17.000106811523438
    8. '-' → logprob: -17.125106811523438
    9. 'def' → logprob: -17.312606811523438
    10. '   ' → logprob: -17.375106811523438

Token 1236: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06201429292559624
    2. 'and' → logprob: -2.81201434135437
    3. ',' → logprob: -11.43701457977295
    4. ':' → logprob: -11.43701457977295
    5. ':
' → logprob: -11.68701457977295
    6. '<|end|>' → logprob: -12.31201457977295
    7. '           ' → logprob: -12.43701457977295
    8. '       ' → logprob: -12.81201457977295
    9. '	and' → logprob: -13.31201457977295
    10. ' ' → logprob: -14.31201457977295

Token 1237: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08329446613788605
    2. '       ' → logprob: -3.20829439163208
    3. ' and' → logprob: -3.45829439163208
    4. '	       ' → logprob: -5.45829439163208
    5. 'and' → logprob: -7.20829439163208
    6. ' if' → logprob: -7.58329439163208
    7. '               ' → logprob: -8.083294868469238
    8. ',' → logprob: -8.208294868469238
    9. '         ' → logprob: -8.708294868469238
    10. 'if' → logprob: -8.708294868469238

Token 1238: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07624618709087372
    2. 'new' → logprob: -3.9512462615966797
    3. 'open' → logprob: -4.45124626159668
    4. 'up' → logprob: -4.95124626159668
    5. '       ' → logprob: -5.07624626159668
    6. 'adj' → logprob: -5.20124626159668
    7. 'edge' → logprob: -5.45124626159668
    8. 'required' → logprob: -5.57624626159668
    9. 'needed' → logprob: -5.57624626159668
    10. '           ' → logprob: -5.82624626159668

Token 1239: ' {(' (ID: 75216)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.6842586994171143
    2. '((' → logprob: -1.0592586994171143
    3. ' {(' → logprob: -3.0592586994171143
    4. 'open' → logprob: -3.6842586994171143
    5. '(r' → logprob: -3.8092586994171143
    6. '({' → logprob: -4.059258460998535
    7. '(open' → logprob: -4.059258460998535
    8. '(' → logprob: -4.684258460998535
    9. ' (' → logprob: -4.934258460998535
    10. 'all' → logprob: -7.184258460998535

Token 1240: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0021866646129637957
    2. '(r' → logprob: -6.1271867752075195
    3. ' r' → logprob: -14.25218677520752
    4. '(' → logprob: -15.12718677520752
    5. ' (' → logprob: -15.37718677520752
    6. '   ' → logprob: -15.87718677520752
    7. ',r' → logprob: -16.627185821533203
    8. '{' → logprob: -17.002185821533203
    9. '[r' → logprob: -17.627185821533203
    10. '((' → logprob: -17.752185821533203

Token 1241: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.0722858102526516e-05
    2. ' -' → logprob: -10.125041007995605
    3. '1' → logprob: -14.375041007995605
    4. '   ' → logprob: -18.37504005432129
    5. '−' → logprob: -18.50004005432129
    6. '-
' → logprob: -18.87504005432129
    7. ' ' → logprob: -19.37504005432129
    8. '()-' → logprob: -19.37504005432129
    9. '  ' → logprob: -19.87504005432129
    10. '2' → logprob: -20.25004005432129

Token 1242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. '2' → logprob: -13.37500286102295
    3. ' ' → logprob: -14.37500286102295
    4. '   ' → logprob: -14.75000286102295
    5. '```' → logprob: -16.062501907348633
    6. '       ' → logprob: -17.812501907348633
    7. '``' → logprob: -18.250001907348633
    8. '           ' → logprob: -18.250001907348633
    9. '
' → logprob: -18.375001907348633
    10. '  ' → logprob: -18.750001907348633

Token 1243: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.005912915337830782
    2. ',' → logprob: -5.255912780761719
    3. ' ,' → logprob: -7.380912780761719
    4. ',k' → logprob: -10.005912780761719
    5. 'c' → logprob: -12.505912780761719
    6. ',
' → logprob: -13.255912780761719
    7. '   ' → logprob: -14.255912780761719
    8. ',r' → logprob: -14.380912780761719
    9. ' ' → logprob: -14.380912780761719
    10. ',n' → logprob: -15.068412780761719

Token 1244: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.20174525678157806
    2. '),' → logprob: -1.7017452716827393
    3. ' ),' → logprob: -8.45174503326416
    4. '+' → logprob: -10.45174503326416
    5. '),
' → logprob: -10.70174503326416
    6. '   ' → logprob: -10.70174503326416
    7. '},{' → logprob: -11.07674503326416
    8. ')}' → logprob: -12.07674503326416
    9. ',(' → logprob: -12.45174503326416
    10. ')' → logprob: -12.82674503326416

Token 1245: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -6.630610641877865e-06
    2. ' r' → logprob: -12.500006675720215
    3. '(r' → logprob: -12.750006675720215
    4. '   ' → logprob: -19.7500057220459
    5. '	r' → logprob: -20.2500057220459
    6. '[r' → logprob: -20.2500057220459
    7. '{' → logprob: -20.8750057220459
    8. ',r' → logprob: -20.8750057220459
    9. ' ' → logprob: -21.8750057220459
    10. '  ' → logprob: -21.8750057220459

Token 1246: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.319370302458992e-06
    2. ' -' → logprob: -12.250005722045898
    3. 'c' → logprob: -14.875005722045898
    4. '1' → logprob: -16.1250057220459
    5. ',c' → logprob: -17.3750057220459
    6. '<|end|>' → logprob: -17.3750057220459
    7. ' ' → logprob: -17.5000057220459
    8. ',' → logprob: -17.7500057220459
    9. '+' → logprob: -18.5000057220459
    10. '<|end|>' → logprob: -18.5000057220459

Token 1247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.147740689106286e-05
    2. ' ' → logprob: -9.75007152557373
    3. 'c' → logprob: -11.62507152557373
    4. '0' → logprob: -13.50007152557373
    5. '   ' → logprob: -14.00007152557373
    6. '
' → logprob: -14.18757152557373
    7. '-' → logprob: -15.18757152557373
    8. '  ' → logprob: -15.87507152557373
    9. '```' → logprob: -15.87507152557373
    10. '(' → logprob: -16.000070571899414

Token 1248: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.008914840407669544
    2. 'c' → logprob: -4.758914947509766
    3. ',' → logprob: -8.133914947509766
    4. ' ,' → logprob: -13.133914947509766
    5. ',
' → logprob: -13.258914947509766
    6. '(c' → logprob: -14.008914947509766
    7. ',k' → logprob: -14.258914947509766
    8. ',(' → logprob: -15.133914947509766
    9. '   ' → logprob: -15.258914947509766
    10. ';c' → logprob: -15.508914947509766

Token 1249: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00011522514978423715
    2. '1' → logprob: -9.875115394592285
    3. ' +' → logprob: -10.125115394592285
    4. '),(' → logprob: -12.125115394592285
    5. '),' → logprob: -12.375115394592285
    6. '+
' → logprob: -12.625115394592285
    7. ')+' → logprob: -13.000115394592285
    8. '   ' → logprob: -13.250115394592285
    9. ')' → logprob: -13.375115394592285
    10. ',' → logprob: -14.187615394592285

Token 1250: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.967624019831419e-05
    2. '0' → logprob: -9.750060081481934
    3. ' ' → logprob: -14.000060081481934
    4. '
' → logprob: -15.750060081481934
    5. ')' → logprob: -16.250059127807617
    6. '   ' → logprob: -16.625059127807617
    7. '-' → logprob: -17.562559127807617
    8. '{' → logprob: -17.875059127807617
    9. '2' → logprob: -17.937559127807617
    10. '+' → logprob: -18.250059127807617

Token 1251: ')}' (ID: 15468)
  Prédit: ')}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.030045051127672195
    2. '}' → logprob: -3.7800450325012207
    3. ')' → logprob: -5.405045032501221
    4. ').' → logprob: -7.030045032501221
    5. '       ' → logprob: -8.155045509338379
    6. '}.' → logprob: -8.280045509338379
    7. '})' → logprob: -8.530045509338379
    8. '           ' → logprob: -8.530045509338379
    9. '}).' → logprob: -9.155045509338379
    10. '   ' → logprob: -9.405045509338379

Token 1252: '.' (ID: 13)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3998534679412842
    2. ' <=' → logprob: -1.1498534679412842
    3. '.' → logprob: -4.399853706359863
    4. '==' → logprob: -7.649853706359863
    5. ' ==' → logprob: -9.274853706359863
    6. '   ' → logprob: -10.524853706359863
    7. ')<=' → logprob: -11.899853706359863
    8. '        ' → logprob: -12.774853706359863
    9. 'iss' → logprob: -13.149853706359863
    10. '    ' → logprob: -13.149853706359863

Token 1253: 'iss' (ID: 1009)
  Prédit: 'iss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iss' → logprob: -0.002845529466867447
    2. '<=' → logprob: -5.877845764160156
    3. ' iss' → logprob: -10.627845764160156
    4. ' <=' → logprob: -11.752845764160156
    5. '.' → logprob: -12.002845764160156
    6. 'subset' → logprob: -14.127845764160156
    7. '```' → logprob: -14.377845764160156
    8. '   ' → logprob: -15.127845764160156
    9. '<' → logprob: -15.502845764160156
    10. 'ISS' → logprob: -15.502845764160156

Token 1254: 'ub' (ID: 431)
  Prédit: 'ub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ub' → logprob: -0.0012295155320316553
    2. 'subset' → logprob: -6.751229286193848
    3. 'sub' → logprob: -10.251229286193848
    4. 'up' → logprob: -10.751229286193848
    5. '   ' → logprob: -14.251229286193848
    6. 's' → logprob: -14.376229286193848
    7. 'u' → logprob: -14.751229286193848
    8. '<=' → logprob: -14.751229286193848
    9. 'dis' → logprob: -15.626229286193848
    10. '{' → logprob: -15.751229286193848

Token 1255: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.021979907527565956
    2. 'erset' → logprob: -4.771979808807373
    3. 'ts' → logprob: -6.146979808807373
    4. '{' → logprob: -6.146979808807373
    5. 'rs' → logprob: -6.646979808807373
    6. 'r' → logprob: -7.021979808807373
    7. 'b' → logprob: -7.021979808807373
    8. 't' → logprob: -7.146979808807373
    9. 'et' → logprob: -7.271979808807373
    10. 'sets' → logprob: -7.396979808807373

Token 1256: '(open' (ID: 62785)
  Prédit: '(open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(open' → logprob: -0.045793019235134125
    2. 'open' → logprob: -3.295793056488037
    3. ' open' → logprob: -4.920793056488037
    4. '(' → logprob: -8.045792579650879
    5. ' (' → logprob: -10.170792579650879
    6. '=open' → logprob: -10.170792579650879
    7. '	open' → logprob: -10.670792579650879
    8. '{' → logprob: -12.920792579650879
    9. ')' → logprob: -13.170792579650879
    10. '<|end|>' → logprob: -14.045792579650879

Token 1257: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -6.957014556974173e-05
    2. 's' → logprob: -10.000069618225098
    3. ')_' → logprob: -12.000069618225098
    4. '{' → logprob: -12.625069618225098
    5. '```' → logprob: -12.625069618225098
    6. '(_' → logprob: -12.750069618225098
    7. ')' → logprob: -12.875069618225098
    8. '{s' → logprob: -14.000069618225098
    9. '_spaces' → logprob: -14.250069618225098
    10. '(s' → logprob: -14.500069618225098

Token 1258: 'quares' (ID: 110764)
  Prédit: 'quares'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quares' → logprob: -0.24316446483135223
    2. 's' → logprob: -1.7431644201278687
    3. '_s' → logprob: -3.493164539337158
    4. 'set' → logprob: -5.743164539337158
    5. '_set' → logprob: -6.243164539337158
    6. 'q' → logprob: -6.868164539337158
    7. 'et' → logprob: -6.868164539337158
    8. 'sets' → logprob: -7.493164539337158
    9. '_' → logprob: -7.743164539337158
    10. 'r' → logprob: -8.2431640625

Token 1259: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.00022010602697264403
    2. ')' → logprob: -9.00022029876709
    3. ')_' → logprob: -9.87522029876709
    4. ')set' → logprob: -11.00022029876709
    5. 'set' → logprob: -11.87522029876709
    6. '_s' → logprob: -12.12522029876709
    7. 's' → logprob: -12.62522029876709
    8. '_res' → logprob: -13.12522029876709
    9. '):
' → logprob: -13.50022029876709
    10. '   ' → logprob: -13.62522029876709

Token 1260: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7608546018600464
    2. '):' → logprob: -0.7608546018600464
    3. ')' → logprob: -2.760854721069336
    4. '           ' → logprob: -7.385854721069336
    5. '       ' → logprob: -7.760854721069336
    6. ' ):' → logprob: -7.760854721069336
    7. ' ):
' → logprob: -7.885854721069336
    8. ' )' → logprob: -9.135854721069336
    9. '):
' → logprob: -9.510854721069336
    10. ' and' → logprob: -10.135854721069336

Token 1261: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6668209433555603
    2. ' and' → logprob: -0.7918209433555603
    3. '           ' → logprob: -3.916821002960205
    4. ':
' → logprob: -5.041821002960205
    5. ':' → logprob: -5.666821002960205
    6. 'and' → logprob: -6.541821002960205
    7. '):
' → logprob: -7.416821002960205
    8. '       ' → logprob: -7.541821002960205
    9. ')' → logprob: -7.791821002960205
    10. ',' → logprob: -8.541820526123047

Token 1262: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7221696376800537
    2. ' if' → logprob: -0.9721696376800537
    3. '           ' → logprob: -2.4721696376800537
    4. '               ' → logprob: -3.0971696376800537
    5. '   ' → logprob: -6.222169876098633
    6. 'new' → logprob: -6.597169876098633
    7. ' new' → logprob: -6.722169876098633
    8. ' and' → logprob: -7.722169876098633
    9. 'res' → logprob: -7.972169876098633
    10. '                   ' → logprob: -8.347169876098633

Token 1263: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.0233012642711401
    2. ' king' → logprob: -3.773301362991333
    3. '   ' → logprob: -10.148301124572754
    4. ' ' → logprob: -11.773301124572754
    5. '  ' → logprob: -12.273301124572754
    6. '           ' → logprob: -14.148301124572754
    7. '       ' → logprob: -14.398301124572754
    8. '    ' → logprob: -14.523301124572754
    9. '               ' → logprob: -14.523301124572754
    10. '     ' → logprob: -14.773301124572754

Token 1264: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -4.4656579120783135e-05
    2. 'fits' → logprob: -10.500044822692871
    3. 'f' → logprob: -11.750044822692871
    4. '_moves' → logprob: -12.625044822692871
    5. ')' → logprob: -13.375044822692871
    6. '```' → logprob: -13.875044822692871
    7. '   ' → logprob: -14.125044822692871
    8. '\' → logprob: -14.500044822692871
    9. '       ' → logprob: -15.625044822692871
    10. '_' → logprob: -15.750044822692871

Token 1265: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -3.6550729419104755e-05
    2. 'it' → logprob: -10.750036239624023
    3. 'fits' → logprob: -13.000036239624023
    4. 'ts' → logprob: -13.000036239624023
    5. '
' → logprob: -13.125036239624023
    6. '(r' → logprob: -13.750036239624023
    7. '(' → logprob: -13.750036239624023
    8. '```' → logprob: -13.750036239624023
    9. '   ' → logprob: -14.375036239624023
    10. 'i' → logprob: -14.500036239624023

Token 1266: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0070756361819803715
    2. 'r' → logprob: -5.007075786590576
    3. '(' → logprob: -8.257075309753418
    4. '(
' → logprob: -9.757075309753418
    5. ' r' → logprob: -10.507075309753418
    6. ' (' → logprob: -11.507075309753418
    7. '   ' → logprob: -12.507075309753418
    8. ')' → logprob: -14.882075309753418
    9. '((' → logprob: -15.007075309753418
    10. ',' → logprob: -15.132075309753418

Token 1267: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.623244553338736e-05
    2. ' -' → logprob: -9.625065803527832
    3. 'c' → logprob: -16.75006675720215
    4. '   ' → logprob: -17.25006675720215
    5. ' ' → logprob: -18.00006675720215
    6. '-
' → logprob: -18.37506675720215
    7. 'r' → logprob: -18.75006675720215
    8. '()-' → logprob: -19.00006675720215
    9. '−' → logprob: -19.25006675720215
    10. ',' → logprob: -19.37506675720215

Token 1268: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031871015671640635
    2. '2' → logprob: -5.75318717956543
    3. ' ' → logprob: -12.25318717956543
    4. '   ' → logprob: -13.37818717956543
    5. '
' → logprob: -13.87818717956543
    6. '0' → logprob: -14.37818717956543
    7. '```' → logprob: -14.50318717956543
    8. '           ' → logprob: -15.44068717956543
    9. '       ' → logprob: -15.56568717956543
    10. '-' → logprob: -16.19068717956543

Token 1269: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.0019644396379590034
    2. ',' → logprob: -6.251964569091797
    3. ' ,' → logprob: -10.751964569091797
    4. 'c' → logprob: -11.876964569091797
    5. ',
' → logprob: -12.251964569091797
    6. ',k' → logprob: -14.501964569091797
    7. '-' → logprob: -14.626964569091797
    8. '   ' → logprob: -14.876964569091797
    9. ',r' → logprob: -15.251964569091797
    10. '```' → logprob: -15.501964569091797

Token 1270: ',p' (ID: 14835)
  Prédit: ',p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.23302201926708221
    2. ',' → logprob: -1.7330219745635986
    3. '):' → logprob: -3.8580219745635986
    4. '):
' → logprob: -4.733022212982178
    5. '               ' → logprob: -7.733022212982178
    6. ')' → logprob: -8.35802173614502
    7. '                   ' → logprob: -8.73302173614502
    8. ',k' → logprob: -9.60802173614502
    9. ',P' → logprob: -10.35802173614502
    10. ',n' → logprob: -10.73302173614502

Token 1271: 'awns' (ID: 115084)
  Prédit: 'awns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'awns' → logprob: -1.1160349458805285e-05
    2. 'awn' → logprob: -11.875011444091797
    3. 'a' → logprob: -14.375011444091797
    4. '{' → logprob: -14.750011444091797
    5. 'aw' → logprob: -14.875011444091797
    6. 'awm' → logprob: -15.125011444091797
    7. 'owns' → logprob: -15.375011444091797
    8. 'p' → logprob: -15.375011444091797
    9. '{}' → logprob: -15.500011444091797
    10. 'wn' → logprob: -15.750011444091797

Token 1272: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -2.999452772201039e-05
    2. '_sets' → logprob: -11.250029563903809
    3. 's' → logprob: -12.125029563903809
    4. '_s' → logprob: -12.250029563903809
    5. 'set' → logprob: -13.000029563903809
    6. ')set' → logprob: -13.625029563903809
    7. 'et' → logprob: -14.625029563903809
    8. ')' → logprob: -14.625029563903809
    9. ')_' → logprob: -14.625029563903809
    10. '_tokens' → logprob: -14.750029563903809

Token 1273: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31374987959861755
    2. '):' → logprob: -1.31374990940094
    3. ')' → logprob: -8.313750267028809
    4. '                   ' → logprob: -9.063750267028809
    5. '               ' → logprob: -9.438750267028809
    6. '):
' → logprob: -10.938750267028809
    7. ' ):
' → logprob: -11.438750267028809
    8. '           ' → logprob: -12.188750267028809
    9. ' ):' → logprob: -12.313750267028809
    10. '):

' → logprob: -12.813750267028809

Token 1274: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0037540055345743895
    2. ':' → logprob: -6.253754138946533
    3. ':
' → logprob: -7.003754138946533
    4. '                       ' → logprob: -7.378754138946533
    5. '):' → logprob: -9.753753662109375
    6. '):
' → logprob: -9.753753662109375
    7. ')' → logprob: -10.253753662109375
    8. '                  ' → logprob: -10.628753662109375
    9. '               ' → logprob: -11.003753662109375
    10. '                    ' → logprob: -11.378753662109375

Token 1275: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0006570351542904973
    2. ' res' → logprob: -7.875657081604004
    3. '                       ' → logprob: -8.500657081604004
    4. '                   ' → logprob: -9.625657081604004
    5. '       ' → logprob: -12.000657081604004
    6. '   ' → logprob: -15.000657081604004
    7. '               ' → logprob: -15.375657081604004
    8. '	res' → logprob: -15.500657081604004
    9. '           ' → logprob: -15.750657081604004
    10. 'return' → logprob: -15.875657081604004

Token 1276: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006734795868396759
    2. '.' → logprob: -5.006734848022461
    3. ' .' → logprob: -11.131734848022461
    4. 'append' → logprob: -13.256734848022461
    5. '                   ' → logprob: -14.131734848022461
    6. '.extend' → logprob: -14.506734848022461
    7. '.Append' → logprob: -14.631734848022461
    8. '.app' → logprob: -14.756734848022461
    9. '.add' → logprob: -15.006734848022461
    10. 'app' → logprob: -16.13173484802246

Token 1277: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0010465048253536224
    2. '(('' → logprob: -7.126046657562256
    3. '(' → logprob: -8.751046180725098
    4. '(((' → logprob: -9.751046180725098
    5. '(("' → logprob: -11.126046180725098
    6. '('' → logprob: -12.501046180725098
    7. '((-' → logprob: -12.751046180725098
    8. ' ((' → logprob: -12.751046180725098
    9. '   ' → logprob: -14.251046180725098
    10. '(
' → logprob: -15.876046180725098

Token 1278: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.2200749754119897e-06
    2. '(r' → logprob: -13.375001907348633
    3. '   ' → logprob: -14.750001907348633
    4. ' r' → logprob: -15.375001907348633
    5. '                   ' → logprob: -17.500001907348633
    6. '           ' → logprob: -17.875001907348633
    7. '               ' → logprob: -18.625001907348633
    8. '                           ' → logprob: -18.625001907348633
    9. '                       ' → logprob: -19.125001907348633
    10. '       ' → logprob: -19.375001907348633

Token 1279: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.4391956685576588e-05
    2. ' -' → logprob: -10.625024795532227
    3. '-
' → logprob: -16.750024795532227
    4. ',' → logprob: -16.875024795532227
    5. '<|end|>' → logprob: -18.625024795532227
    6. '-,' → logprob: -18.750024795532227
    7. '<|end|>' → logprob: -18.750024795532227
    8. ')-' → logprob: -18.875024795532227
    9. ')' → logprob: -19.250024795532227
    10. '```' → logprob: -19.250024795532227

Token 1280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006537011358886957
    2. '2' → logprob: -7.3756537437438965
    3. ' ' → logprob: -10.875653266906738
    4. '   ' → logprob: -12.125653266906738
    5. '```' → logprob: -13.875653266906738
    6. '
' → logprob: -15.188153266906738
    7. '0' → logprob: -15.875653266906738
    8. '`' → logprob: -15.938153266906738
    9. '	' → logprob: -16.000654220581055
    10. '           ' → logprob: -16.188154220581055

Token 1281: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.04310229793190956
    2. ',' → logprob: -3.168102264404297
    3. ' ,' → logprob: -9.543102264404297
    4. ',
' → logprob: -11.918102264404297
    5. '   ' → logprob: -12.168102264404297
    6. ',C' → logprob: -12.793102264404297
    7. ',k' → logprob: -12.918102264404297
    8. ',p' → logprob: -13.168102264404297
    9. '<|end|>' → logprob: -13.168102264404297
    10. 'c' → logprob: -13.293102264404297

Token 1282: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01750974729657173
    2. ',' → logprob: -4.267509937286377
    3. ')' → logprob: -6.392509937286377
    4. '))
' → logprob: -7.642509937286377
    5. ')))' → logprob: -8.642509460449219
    6. '                   ' → logprob: -9.017509460449219
    7. ')),' → logprob: -9.142509460449219
    8. ',
' → logprob: -9.267509460449219
    9. '<|end|>' → logprob: -9.267509460449219
    10. ',p' → logprob: -9.642509460449219

Token 1283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013279162347316742
    2. '<|end|>' → logprob: -5.513278961181641
    3. '
' → logprob: -5.638278961181641
    4. '        
' → logprob: -6.138278961181641
    5. ')' → logprob: -6.888278961181641
    6. '[' → logprob: -7.638278961181641
    7. '   ' → logprob: -7.888278961181641
    8. '	' → logprob: -8.38827896118164
    9. '        ' → logprob: -8.88827896118164
    10. '    
' → logprob: -9.01327896118164

Token 1284: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006821935996413231
    2. '#' (adapté à ' #') → logprob: -5.006822109222412
    3. '   ' → logprob: -9.381821632385254
    4. '
' → logprob: -11.131821632385254
    5. '	' → logprob: -12.381821632385254
    6. '           ' → logprob: -13.381821632385254
    7. '```' → logprob: -14.006821632385254
    8. ' #' → logprob: -14.881821632385254
    9. '     ' → logprob: -15.256821632385254
    10. '      ' → logprob: -15.881821632385254

Token 1285: ' DOWN' (ID: 56168)
  Prédit: 'DOWN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DOWN' → logprob: -0.0035760728642344475
    2. '   ' → logprob: -6.503576278686523
    3. 'if' → logprob: -6.878576278686523
    4. ' DOWN' → logprob: -7.253576278686523
    5. '       ' → logprob: -8.128576278686523
    6. ' if' → logprob: -11.003576278686523
    7. 'elif' → logprob: -11.753576278686523
    8. '
' → logprob: -12.128576278686523
    9. ' ' → logprob: -12.503576278686523
    10. '  ' → logprob: -13.503576278686523

Token 1286: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016148388385772705
    2. '
' → logprob: -4.516148567199707
    3. ' if' → logprob: -5.766148567199707
    4. 'if' → logprob: -6.266148567199707
    5. '=' → logprob: -11.516148567199707
    6. '   ' → logprob: -12.141148567199707
    7. '           ' → logprob: -12.266148567199707
    8. ' =' → logprob: -12.391148567199707
    9. '```' → logprob: -12.391148567199707
    10. ':
' → logprob: -12.516148567199707

Token 1287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00040517066372558475
    2. '
' → logprob: -8.125405311584473
    3. 'if' → logprob: -9.375405311584473
    4. ' if' → logprob: -11.375405311584473
    5. '           ' → logprob: -12.500405311584473
    6. '```' → logprob: -12.500405311584473
    7. '   ' → logprob: -13.250405311584473
    8. '	' → logprob: -13.750405311584473
    9. '        
' → logprob: -14.875405311584473
    10. '               ' → logprob: -15.000405311584473

Token 1288: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18175415694713593
    2. ' if' → logprob: -2.1817541122436523
    3. 'if' (adapté à ' if') → logprob: -2.9317541122436523
    4. '   ' → logprob: -10.556754112243652
    5. '           ' → logprob: -11.806754112243652
    6. '
' → logprob: -12.431754112243652
    7. '        ' → logprob: -12.931754112243652
    8. ' ' → logprob: -13.431754112243652
    9. '     ' → logprob: -13.681754112243652
    10. '    ' → logprob: -14.056754112243652

Token 1289: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03809507563710213
    2. ' r' → logprob: -3.288094997406006
    3. '(r' → logprob: -10.163095474243164
    4. ' ' → logprob: -11.913095474243164
    5. '   ' → logprob: -12.288095474243164
    6. ' (' → logprob: -12.913095474243164
    7. '  ' → logprob: -14.288095474243164
    8. '(' → logprob: -15.163095474243164
    9. '	r' → logprob: -15.163095474243164
    10. '
' → logprob: -16.288095474243164

Token 1290: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.73052782076411e-05
    2. ' +' → logprob: -9.625067710876465
    3. '+r' → logprob: -15.000067710876465
    4. '<' → logprob: -15.125067710876465
    5. '+c' → logprob: -15.625067710876465
    6. '1' → logprob: -16.00006675720215
    7. '+
' → logprob: -16.00006675720215
    8. '()+' → logprob: -17.00006675720215
    9. '+(' → logprob: -17.62506675720215
    10. 'r' → logprob: -18.00006675720215

Token 1291: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10022446513175964
    2. '2' → logprob: -2.350224494934082
    3. '
' → logprob: -11.600224494934082
    4. ' ' → logprob: -12.350224494934082
    5. '   ' → logprob: -13.600224494934082
    6. '```' → logprob: -14.350224494934082
    7. '3' → logprob: -14.537724494934082
    8. '=' → logprob: -14.600224494934082
    9. '``' → logprob: -15.287724494934082
    10. '0' → logprob: -15.287724494934082

Token 1292: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7639948725700378
    2. ' <=' → logprob: -0.7639948725700378
    3. '+' → logprob: -3.5139949321746826
    4. '<=' → logprob: -3.6389949321746826
    5. '<' → logprob: -4.8889946937561035
    6. '<c' → logprob: -6.6389946937561035
    7. ',' → logprob: -6.6389946937561035
    8. ',c' → logprob: -6.8889946937561035
    9. ' +' → logprob: -7.8889946937561035
    10. 'c' → logprob: -8.263995170593262

Token 1293: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00026526954025030136
    2. ' H' → logprob: -8.250265121459961
    3. '   ' → logprob: -12.500265121459961
    4. ' ' → logprob: -16.12526512145996
    5. '	H' → logprob: -16.25026512145996
    6. '       ' → logprob: -17.37526512145996
    7. '  ' → logprob: -17.37526512145996
    8. '=' → logprob: -18.12526512145996
    9. '
' → logprob: -18.12526512145996
    10. '```' → logprob: -19.00026512145996

Token 1294: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6681209802627563
    2. ' and' → logprob: -1.5431209802627563
    3. ':' → logprob: -1.9181209802627563
    4. '           ' → logprob: -2.793120861053467
    5. '       ' → logprob: -2.918120861053467
    6. 'and' → logprob: -4.543120861053467
    7. '   ' → logprob: -7.793120861053467
    8. '               ' → logprob: -9.293121337890625
    9. '+' → logprob: -9.918121337890625
    10. ' :
' → logprob: -10.168121337890625

Token 1295: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3869994580745697
    2. '       ' → logprob: -1.136999487876892
    3. '               ' → logprob: -10.011999130249023
    4. '		' → logprob: -10.886999130249023
    5. '```' → logprob: -11.261999130249023
    6. '	       ' → logprob: -11.511999130249023
    7. 'if' → logprob: -11.761999130249023
    8. '         ' → logprob: -12.011999130249023
    9. '	' → logprob: -12.011999130249023
    10. ' ' → logprob: -12.636999130249023

Token 1296: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6763923168182373
    2. ' if' → logprob: -1.1763923168182373
    3. '           ' → logprob: -1.9263923168182373
    4. '               ' → logprob: -3.3013923168182373
    5. '       ' → logprob: -7.551392555236816
    6. ' ' → logprob: -10.301392555236816
    7. '```' → logprob: -10.801392555236816
    8. '            ' → logprob: -10.926392555236816
    9. '                   ' → logprob: -11.301392555236816
    10. '        ' → logprob: -11.676392555236816

Token 1297: ' {(' (ID: 75216)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0009177703177556396
    2. ' {(' → logprob: -7.000917911529541
    3. 'open' → logprob: -12.250917434692383
    4. '{{' → logprob: -14.125917434692383
    5. '{
' → logprob: -16.125917434692383
    6. '   ' → logprob: -16.125917434692383
    7. ' ' → logprob: -16.250917434692383
    8. ' open' → logprob: -16.500917434692383
    9. '{\' → logprob: -16.625917434692383
    10. '={(' → logprob: -17.000917434692383

Token 1298: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0021954562980681658
    2. '(r' → logprob: -6.127195358276367
    3. '{' → logprob: -12.377195358276367
    4. '   ' → logprob: -12.877195358276367
    5. ' r' → logprob: -13.627195358276367
    6. ' (' → logprob: -13.877195358276367
    7. '	r' → logprob: -15.127195358276367
    8. '[r' → logprob: -15.627195358276367
    9. '
' → logprob: -15.752195358276367
    10. '(' → logprob: -16.002195358276367

Token 1299: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.704065213445574e-05
    2. 'r' → logprob: -10.625046730041504
    3. '2' → logprob: -11.375046730041504
    4. ' +' → logprob: -12.500046730041504
    5. '+r' → logprob: -13.000046730041504
    6. '1' → logprob: -13.375046730041504
    7. '0' → logprob: -13.375046730041504
    8. '(' → logprob: -14.250046730041504
    9. '   ' → logprob: -14.625046730041504
    10. '()+' → logprob: -15.875046730041504

Token 1300: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000104616025055293
    2. '1' → logprob: -10.375104904174805
    3. '+' → logprob: -10.750104904174805
    4. ' ' → logprob: -10.750104904174805
    5. 'r' → logprob: -11.375104904174805
    6. '   ' → logprob: -12.125104904174805
    7. '
' → logprob: -12.375104904174805
    8. '(' → logprob: -12.750104904174805
    9. '(r' → logprob: -13.312604904174805
    10. '  ' → logprob: -13.875104904174805

Token 1301: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -7.147740689106286e-05
    2. ',' → logprob: -9.62507152557373
    3. ' ,' → logprob: -12.62507152557373
    4. ',r' → logprob: -14.00007152557373
    5. 'c' → logprob: -14.75007152557373
    6. ',(' → logprob: -15.12507152557373
    7. ',
' → logprob: -16.000070571899414
    8. '(c' → logprob: -16.125070571899414
    9. ',k' → logprob: -16.250070571899414
    10. '   ' → logprob: -16.375070571899414

Token 1302: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0004915529862046242
    2. '),' → logprob: -7.750491619110107
    3. ',(' → logprob: -10.25049114227295
    4. '},{' → logprob: -10.87549114227295
    5. '),
' → logprob: -12.87549114227295
    6. ' ),' → logprob: -13.75049114227295
    7. ',' → logprob: -14.00049114227295
    8. '{' → logprob: -14.12549114227295
    9. ' ' → logprob: -15.75049114227295
    10. '   ' → logprob: -15.87549114227295

Token 1303: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.553032628493384e-05
    2. '(r' → logprob: -9.500075340270996
    3. ' r' → logprob: -15.000075340270996
    4. '(' → logprob: -16.500076293945312
    5. '[r' → logprob: -16.750076293945312
    6. '   ' → logprob: -17.750076293945312
    7. ' (' → logprob: -17.875076293945312
    8. '	r' → logprob: -18.125076293945312
    9. '{' → logprob: -18.625076293945312
    10. '<|end|>' → logprob: -19.250076293945312

Token 1304: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2664456789934775e-06
    2. ',' → logprob: -14.875000953674316
    3. ' +' → logprob: -15.000000953674316
    4. '2' → logprob: -15.500000953674316
    5. '(' → logprob: -16.125001907348633
    6. '+,' → logprob: -17.875001907348633
    7. '+c' → logprob: -18.125001907348633
    8. '<|end|>' → logprob: -18.187501907348633
    9. '+(' → logprob: -18.250001907348633
    10. '{' → logprob: -18.250001907348633

Token 1305: '2' (ID: 17)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.23180803656578064
    2. '2' → logprob: -1.606808066368103
    3. '1' → logprob: -5.106808185577393
    4. '+' → logprob: -8.731807708740234
    5. ' ' → logprob: -10.106807708740234
    6. ' c' → logprob: -10.231807708740234
    7. '0' → logprob: -10.356807708740234
    8. '(c' → logprob: -11.106807708740234
    9. '   ' → logprob: -11.106807708740234
    10. '
' → logprob: -12.606807708740234

Token 1306: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.00017553119687363505
    2. ',' → logprob: -8.875175476074219
    3. 'c' → logprob: -10.375175476074219
    4. ' ,' → logprob: -13.250175476074219
    5. ',
' → logprob: -13.625175476074219
    6. ',(' → logprob: -13.875175476074219
    7. '   ' → logprob: -16.25017547607422
    8. ',k' → logprob: -16.62517547607422
    9. '(c' → logprob: -16.75017547607422
    10. '	c' → logprob: -16.87517547607422

Token 1307: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008217801805585623
    2. ',c' → logprob: -7.125821590423584
    3. ',' → logprob: -11.875822067260742
    4. ' +' → logprob: -12.375822067260742
    5. 'c' → logprob: -13.000822067260742
    6. '+,' → logprob: -13.875822067260742
    7. '+c' → logprob: -14.000822067260742
    8. '1' → logprob: -14.125822067260742
    9. '+
' → logprob: -14.750822067260742
    10. '   ' → logprob: -15.750822067260742

Token 1308: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.584239938296378e-06
    2. '(' → logprob: -12.625007629394531
    3. ' ' → logprob: -13.250007629394531
    4. '
' → logprob: -14.500007629394531
    5. '{' → logprob: -14.750007629394531
    6. '+' → logprob: -14.875007629394531
    7. '   ' → logprob: -15.187507629394531
    8. '0' → logprob: -15.375007629394531
    9. '[' → logprob: -15.937507629394531
    10. '2' → logprob: -16.00000762939453

Token 1309: ')}' (ID: 15468)
  Prédit: ')}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.11470851302146912
    2. '}.' → logprob: -2.364708423614502
    3. '}' → logprob: -4.364708423614502
    4. '   ' → logprob: -7.114708423614502
    5. '}).' → logprob: -7.489708423614502
    6. '})' → logprob: -9.36470890045166
    7. ')' → logprob: -9.98970890045166
    8. '}}' → logprob: -10.23970890045166
    9. '}
' → logprob: -10.36470890045166
    10. '},' → logprob: -11.11470890045166

Token 1310: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0008582198061048985
    2. ' in' → logprob: -7.875858306884766
    3. ').' → logprob: -8.625858306884766
    4. '}.' → logprob: -8.625858306884766
    5. '   ' → logprob: -10.250858306884766
    6. '].' → logprob: -10.625858306884766
    7. '           ' → logprob: -10.750858306884766
    8. ' .' → logprob: -11.000858306884766
    9. '       ' → logprob: -12.125858306884766
    10. '.inter' → logprob: -12.875858306884766

Token 1311: 'iss' (ID: 1009)
  Prédit: 'iss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iss' → logprob: -4.246537173457909e-06
    2. '.' → logprob: -12.500003814697266
    3. 'subset' → logprob: -14.625003814697266
    4. 'intersection' → logprob: -17.000003814697266
    5. '<=' → logprob: -18.500003814697266
    6. ' iss' → logprob: -18.500003814697266
    7. 'is' → logprob: -18.625003814697266
    8. '   ' → logprob: -19.000003814697266
    9. 'issu' → logprob: -20.125003814697266
    10. '```' → logprob: -20.125003814697266

Token 1312: 'ub' (ID: 431)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.20335964858531952
    2. 'ub' → logprob: -1.703359603881836
    3. '_subset' → logprob: -7.453359603881836
    4. 'set' → logprob: -7.703359603881836
    5. '{' → logprob: -8.078359603881836
    6. 'sub' → logprob: -8.203359603881836
    7. '{
' → logprob: -9.328359603881836
    8. '
' → logprob: -9.453359603881836
    9. '```' → logprob: -10.203359603881836
    10. 'open' → logprob: -10.453359603881836

Token 1313: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.6538602709770203
    2. 'subset' → logprob: -0.7788602709770203
    3. '_subset' → logprob: -4.028860092163086
    4. '{' → logprob: -6.903860092163086
    5. 'erset' → logprob: -7.403860092163086
    6. '_set' → logprob: -7.653860092163086
    7. 'ub' → logprob: -7.903860092163086
    8. ' subset' → logprob: -8.278860092163086
    9. 'open' → logprob: -8.778860092163086
    10. '{
' → logprob: -9.278860092163086

Token 1314: '(open' (ID: 62785)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.4748668074607849
    2. '(open' → logprob: -0.9748668074607849
    3. ' open' → logprob: -7.22486686706543
    4. '{' → logprob: -10.22486686706543
    5. '	open' → logprob: -11.22486686706543
    6. '=open' → logprob: -12.59986686706543
    7. ' (' → logprob: -12.84986686706543
    8. '(' → logprob: -13.22486686706543
    9. '.open' → logprob: -14.09986686706543
    10. '```' → logprob: -14.59986686706543

Token 1315: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0002991160727106035
    2. 's' → logprob: -8.250299453735352
    3. 'open' → logprob: -10.500299453735352
    4. 'Squares' → logprob: -12.250299453735352
    5. ')' → logprob: -14.000299453735352
    6. '(s' → logprob: -14.750299453735352
    7. '_spaces' → logprob: -15.000299453735352
    8. 'ob' → logprob: -15.000299453735352
    9. '\' → logprob: -15.125299453735352
    10. '...' → logprob: -15.125299453735352

Token 1316: 'quares' (ID: 110764)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.262701153755188
    2. 'open' → logprob: -2.0127010345458984
    3. 'quares' → logprob: -2.8877010345458984
    4. 's' → logprob: -3.2627010345458984
    5. '_set' → logprob: -6.137701034545898
    6. 'set' → logprob: -7.262701034545898
    7. 'qu' → logprob: -8.512701034545898
    8. '(open' → logprob: -9.262701034545898
    9. 'Squares' → logprob: -9.637701034545898
    10. 'o' → logprob: -10.262701034545898

Token 1317: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0008305939263664186
    2. 'open' → logprob: -7.75083065032959
    3. 'set' → logprob: -7.87583065032959
    4. 'Set' → logprob: -11.87583065032959
    5. ')' → logprob: -12.87583065032959
    6. '_s' → logprob: -13.37583065032959
    7. 's' → logprob: -13.50083065032959
    8. '_open' → logprob: -13.62583065032959
    9. '```' → logprob: -13.87583065032959
    10. '   ' → logprob: -14.12583065032959

Token 1318: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05170314759016037
    2. '):' → logprob: -3.0517032146453857
    3. '       ' → logprob: -6.301702976226807
    4. '               ' → logprob: -7.426702976226807
    5. '           ' → logprob: -7.676702976226807
    6. ')' → logprob: -9.051703453063965
    7. '   ' → logprob: -10.676703453063965
    8. '):

' → logprob: -10.801703453063965
    9. ':
' → logprob: -10.926703453063965
    10. '):
' → logprob: -11.676703453063965

Token 1319: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010579644702374935
    2. '           ' → logprob: -4.635579586029053
    3. ' and' → logprob: -7.510579586029053
    4. ':' → logprob: -9.135580062866211
    5. '                   ' → logprob: -10.010580062866211
    6. 'and' → logprob: -10.010580062866211
    7. ':
' → logprob: -10.510580062866211
    8. '```' → logprob: -10.885580062866211
    9. '):
' → logprob: -12.260580062866211
    10. '       ' → logprob: -12.260580062866211

Token 1320: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.1231874227523804
    2. '                   ' → logprob: -1.3731874227523804
    3. ' if' → logprob: -1.7481874227523804
    4. '               ' → logprob: -1.8731874227523804
    5. '           ' → logprob: -2.37318754196167
    6. '                       ' → logprob: -8.748187065124512
    7. ' ' → logprob: -9.248187065124512
    8. '   ' → logprob: -9.498187065124512
    9. '                ' → logprob: -10.123187065124512
    10. '                    ' → logprob: -10.248187065124512

Token 1321: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.00523612555116415
    2. ' king' → logprob: -5.2552361488342285
    3. '   ' → logprob: -13.63023567199707
    4. ' ' → logprob: -14.88023567199707
    5. '  ' → logprob: -15.25523567199707
    6. '                   ' → logprob: -15.50523567199707
    7. 'queen' → logprob: -16.25523567199707
    8. 'kin' → logprob: -16.50523567199707
    9. '.king' → logprob: -17.00523567199707
    10. '           ' → logprob: -17.50523567199707

Token 1322: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -1.5213274309644476e-05
    2. '+' → logprob: -12.000015258789062
    3. '_moves' → logprob: -12.125015258789062
    4. '           ' → logprob: -14.250015258789062
    5. '```' → logprob: -14.375015258789062
    6. '   ' → logprob: -14.875015258789062
    7. '_' → logprob: -15.125015258789062
    8. 'def' → logprob: -15.250015258789062
    9. '               ' → logprob: -15.500015258789062
    10. '       ' → logprob: -15.875015258789062

Token 1323: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -0.12055674940347672
    2. 'ts' → logprob: -2.2455568313598633
    3. 'fits' → logprob: -5.120556831359863
    4. 't' → logprob: -7.995556831359863
    5. '_f' → logprob: -8.620556831359863
    6. 'r' → logprob: -8.620556831359863
    7. '(r' → logprob: -9.120556831359863
    8. '
' → logprob: -9.495556831359863
    9. 's' → logprob: -9.495556831359863
    10. '```' → logprob: -9.495556831359863

Token 1324: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0009230116847902536
    2. 'r' → logprob: -7.000923156738281
    3. '(' → logprob: -12.125923156738281
    4. '   ' → logprob: -12.375923156738281
    5. '(
' → logprob: -13.500923156738281
    6. ' (' → logprob: -15.750923156738281
    7. ' r' → logprob: -17.37592315673828
    8. '	r' → logprob: -18.00092315673828
    9. '(res' → logprob: -18.12592315673828
    10. '
' → logprob: -18.12592315673828

Token 1325: '+' (ID: 10)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.062121838331222534
    2. '+' → logprob: -2.812121868133545
    3. '+r' → logprob: -9.437121391296387
    4. '   ' → logprob: -10.437121391296387
    5. '(r' → logprob: -10.687121391296387
    6. ' +' → logprob: -11.437121391296387
    7. '1' → logprob: -12.812121391296387
    8. ' r' → logprob: -13.062121391296387
    9. '[r' → logprob: -13.687121391296387
    10. '+
' → logprob: -13.687121391296387

Token 1326: '1' (ID: 16)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.011489142663776875
    2. 'c' → logprob: -4.761488914489746
    3. '+' → logprob: -6.511488914489746
    4. '1' → logprob: -7.136488914489746
    5. '   ' → logprob: -8.636488914489746
    6. '(r' → logprob: -9.386488914489746
    7. ' r' → logprob: -9.511488914489746
    8. ' ' → logprob: -10.011488914489746
    9. 'res' → logprob: -10.261488914489746
    10. '
' → logprob: -10.261488914489746

Token 1327: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.0003217574267182499
    2. ',' → logprob: -8.250321388244629
    3. 'c' → logprob: -10.000321388244629
    4. ' ,' → logprob: -11.750321388244629
    5. '+' → logprob: -13.500321388244629
    6. ',
' → logprob: -13.500321388244629
    7. ',k' → logprob: -14.125321388244629
    8. ',r' → logprob: -14.250321388244629
    9. '<|end|>' → logprob: -14.500321388244629
    10. '```' → logprob: -14.750321388244629

Token 1328: ',p' (ID: 14835)
  Prédit: ',p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.0012715430930256844
    2. ',' → logprob: -6.751271724700928
    3. '+' → logprob: -10.37627124786377
    4. 'p' → logprob: -11.00127124786377
    5. '       ' → logprob: -11.25127124786377
    6. '   ' → logprob: -11.37627124786377
    7. '(p' → logprob: -12.12627124786377
    8. '```' → logprob: -12.50127124786377
    9. ',res' → logprob: -12.50127124786377
    10. '               ' → logprob: -12.62627124786377

Token 1329: 'awns' (ID: 115084)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20876933634281158
    2. '+' → logprob: -1.9587693214416504
    3. 'awns' → logprob: -3.0837693214416504
    4. '-' → logprob: -7.20876932144165
    5. '```' → logprob: -8.083769798278809
    6. '(' → logprob: -9.458769798278809
    7. ')' → logprob: -9.458769798278809
    8. '   ' → logprob: -9.708769798278809
    9. '+
' → logprob: -10.333769798278809
    10. 's' → logprob: -10.833769798278809

Token 1330: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.32136598229408264
    2. '+' → logprob: -1.3213659524917603
    3. '_sets' → logprob: -5.321365833282471
    4. '1' → logprob: -7.446365833282471
    5. 'set' → logprob: -7.696365833282471
    6. '-' → logprob: -8.071366310119629
    7. '```' → logprob: -8.196366310119629
    8. '_' → logprob: -8.446366310119629
    9. '               ' → logprob: -8.571366310119629
    10. 's' → logprob: -8.696366310119629

Token 1331: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20330195128917694
    2. '):' → logprob: -1.7033019065856934
    3. '                   ' → logprob: -6.453301906585693
    4. ')' → logprob: -9.203302383422852
    5. '               ' → logprob: -9.203302383422852
    6. ':
' → logprob: -10.203302383422852
    7. '       ' → logprob: -10.953302383422852
    8. '           ' → logprob: -11.328302383422852
    9. ':' → logprob: -11.453302383422852
    10. '):
' → logprob: -11.703302383422852

Token 1332: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0014045176794752479
    2. ':
' → logprob: -7.501404285430908
    3. '                       ' → logprob: -8.376404762268066
    4. '):
' → logprob: -8.501404762268066
    5. '               ' → logprob: -8.876404762268066
    6. ':' → logprob: -9.126404762268066
    7. '):' → logprob: -9.876404762268066
    8. ')' → logprob: -10.126404762268066
    9. '                    ' → logprob: -10.876404762268066
    10. '                  ' → logprob: -11.126404762268066

Token 1333: ' res' (ID: 694)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6173864006996155
    2. 'res' (adapté à ' res') → logprob: -0.9923864006996155
    3. '                       ' → logprob: -2.9923863410949707
    4. ' res' → logprob: -3.9923863410949707
    5. '       ' → logprob: -4.117386341094971
    6. '               ' → logprob: -6.492386341094971
    7. '           ' → logprob: -6.617386341094971
    8. '                    ' → logprob: -7.117386341094971
    9. '   ' → logprob: -7.492386341094971
    10. ' ' → logprob: -8.742386817932129

Token 1334: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00020520923135336488
    2. '.' → logprob: -8.875205039978027
    3. '                   ' → logprob: -9.750205039978027
    4. '               ' → logprob: -12.500205039978027
    5. 'append' → logprob: -13.625205039978027
    6. '           ' → logprob: -14.000205039978027
    7. ' .' → logprob: -15.000205039978027
    8. '.add' → logprob: -15.375205039978027
    9. '                       ' → logprob: -15.625205039978027
    10. '.extend' → logprob: -16.125205993652344

Token 1335: '((' (ID: 2054)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.014424975961446762
    2. '((' → logprob: -4.264424800872803
    3. '(' → logprob: -8.264425277709961
    4. '   ' → logprob: -13.014425277709961
    5. ' (' → logprob: -13.639425277709961
    6. '(
' → logprob: -15.139425277709961
    7. '(k' → logprob: -16.51442527770996
    8. '(c' → logprob: -17.01442527770996
    9. '       ' → logprob: -17.38942527770996
    10. ' ' → logprob: -17.76442527770996

Token 1336: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.696889623621246e-06
    2. '   ' → logprob: -13.00000286102295
    3. ' r' → logprob: -15.87500286102295
    4. '
' → logprob: -16.125001907348633
    5. '(r' → logprob: -16.125001907348633
    6. '+' → logprob: -18.125001907348633
    7. '       ' → logprob: -18.500001907348633
    8. ')' → logprob: -18.625001907348633
    9. '	r' → logprob: -18.625001907348633
    10. '(' → logprob: -19.125001907348633

Token 1337: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.126521035796031e-05
    2. '+r' → logprob: -10.250091552734375
    3. ' +' → logprob: -10.750091552734375
    4. '+c' → logprob: -11.750091552734375
    5. '1' → logprob: -12.125091552734375
    6. '+
' → logprob: -12.500091552734375
    7. ',' → logprob: -12.625091552734375
    8. '-' → logprob: -12.750091552734375
    9. ',r' → logprob: -13.000091552734375
    10. '   ' → logprob: -13.000091552734375

Token 1338: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04880446195602417
    2. '1' → logprob: -3.048804521560669
    3. '
' → logprob: -9.92380428314209
    4. ' ' → logprob: -10.29880428314209
    5. '   ' → logprob: -10.42380428314209
    6. 'c' → logprob: -10.54880428314209
    7. '+' → logprob: -10.92380428314209
    8. 'r' → logprob: -10.92380428314209
    9. '0' → logprob: -11.29880428314209
    10. '3' → logprob: -11.54880428314209

Token 1339: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.0022505302913486958
    2. ',' → logprob: -6.127250671386719
    3. ' ,' → logprob: -10.002250671386719
    4. ',
' → logprob: -11.627250671386719
    5. '   ' → logprob: -12.127250671386719
    6. '```' → logprob: -14.127250671386719
    7. 'c' → logprob: -14.252250671386719
    8. '	' → logprob: -14.252250671386719
    9. ')' → logprob: -14.752250671386719
    10. ' ' → logprob: -14.752250671386719

Token 1340: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010444102808833122
    2. '))' → logprob: -4.635444164276123
    3. ')
' → logprob: -7.510444164276123
    4. '       ' → logprob: -9.885443687438965
    5. '))
' → logprob: -10.260443687438965
    6. ')))' → logprob: -11.010443687438965
    7. '                   ' → logprob: -11.260443687438965
    8. '               ' → logprob: -11.385443687438965
    9. ' )' → logprob: -12.635443687438965
    10. '   ' → logprob: -13.010443687438965

Token 1341: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006371428607963026
    2. ')' → logprob: -8.50063705444336
    3. '<|end|>' → logprob: -8.50063705444336
    4. '	' → logprob: -9.62563705444336
    5. '   ' → logprob: -10.37563705444336
    6. '[' → logprob: -10.50063705444336
    7. '        
' → logprob: -10.75063705444336
    8. '           ' → logprob: -11.00063705444336
    9. '
' → logprob: -11.25063705444336
    10. '<|end|>' → logprob: -11.62563705444336

Token 1342: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019769940990954638
    2. '   ' → logprob: -8.875197410583496
    3. '	' → logprob: -10.625197410583496
    4. '#' (adapté à ' #') → logprob: -11.625197410583496
    5. '```' → logprob: -11.750197410583496
    6. ')' → logprob: -12.000197410583496
    7. '           ' → logprob: -12.250197410583496
    8. '[' → logprob: -14.125197410583496
    9. '     ' → logprob: -14.125197410583496
    10. '	   ' → logprob: -14.250197410583496

Token 1343: ' LEFT' (ID: 48606)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5594995021820068
    2. '       ' → logprob: -1.8094995021820068
    3. 'LEFT' → logprob: -1.8094995021820068
    4. '#' → logprob: -2.559499502182007
    5. ' LEFT' → logprob: -4.059499740600586
    6. ' #' → logprob: -5.934499740600586
    7. ' ' → logprob: -6.309499740600586
    8. 'RIGHT' → logprob: -7.059499740600586
    9. '  ' → logprob: -7.684499740600586
    10. '	' → logprob: -8.559499740600586

Token 1344: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11344880610704422
    2. '
' → logprob: -2.7384488582611084
    3. 'if' → logprob: -3.7384488582611084
    4. ':
' → logprob: -4.863448619842529
    5. ' if' → logprob: -5.113448619842529
    6. '           ' → logprob: -5.863448619842529
    7. '   ' → logprob: -6.863448619842529
    8. '        
' → logprob: -7.863448619842529
    9. '               ' → logprob: -8.988449096679688
    10. '        ' → logprob: -8.988449096679688

Token 1345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13542760908603668
    2. 'if' → logprob: -2.260427713394165
    3. ' if' → logprob: -4.385427474975586
    4. '   ' → logprob: -5.260427474975586
    5. '
' → logprob: -5.635427474975586
    6. '           ' → logprob: -7.885427474975586
    7. '```' → logprob: -8.885427474975586
    8. '	if' → logprob: -9.135427474975586
    9. '     ' → logprob: -9.135427474975586
    10. '        ' → logprob: -10.010427474975586

Token 1346: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0724555030465126
    2. ' if' → logprob: -2.822455406188965
    3. '       ' → logprob: -4.572455406188965
    4. '   ' → logprob: -9.322455406188965
    5. '	if' → logprob: -12.197455406188965
    6. ' ' → logprob: -13.447455406188965
    7. '           ' → logprob: -13.697455406188965
    8. '
' → logprob: -14.447455406188965
    9. '(' → logprob: -14.697455406188965
    10. 'c' → logprob: -14.947455406188965

Token 1347: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7287998795509338
    2. ' c' → logprob: -0.7287998795509338
    3. 'r' → logprob: -3.853799819946289
    4. ' r' → logprob: -4.353799819946289
    5. 'kc' → logprob: -8.603799819946289
    6. ' kc' → logprob: -8.728799819946289
    7. ' ' → logprob: -8.853799819946289
    8. '   ' → logprob: -9.228799819946289
    9. ' (' → logprob: -9.228799819946289
    10. ' kr' → logprob: -10.228799819946289

Token 1348: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001612267515156418
    2. ' -' → logprob: -8.750161170959473
    3. '>' → logprob: -13.000161170959473
    4. '   ' → logprob: -15.125161170959473
    5. '+' → logprob: -16.50016212463379
    6. ' ' → logprob: -17.00016212463379
    7. ' >' → logprob: -17.12516212463379
    8. '  ' → logprob: -17.75016212463379
    9. '>-' → logprob: -17.75016212463379
    10. 'c' → logprob: -18.12516212463379

Token 1349: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. '   ' → logprob: -12.875005722045898
    3. ' ' → logprob: -13.125005722045898
    4. '```' → logprob: -14.875005722045898
    5. '2' → logprob: -15.500005722045898
    6. '       ' → logprob: -16.3750057220459
    7. '
' → logprob: -16.3750057220459
    8. '           ' → logprob: -16.5000057220459
    9. '=' → logprob: -16.7500057220459
    10. 'def' → logprob: -17.3750057220459

Token 1350: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.10046663135290146
    2. '>=' → logprob: -2.350466728210449
    3. ',' → logprob: -9.10046672821045
    4. ',c' → logprob: -10.22546672821045
    5. ')>=' → logprob: -10.35046672821045
    6. '   ' → logprob: -10.85046672821045
    7. '-' → logprob: -10.85046672821045
    8. '       ' → logprob: -11.85046672821045
    9. '           ' → logprob: -12.10046672821045
    10. 'c' → logprob: -12.22546672821045

Token 1351: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004765576682984829
    2. ' ' → logprob: -5.379765510559082
    3. 'c' → logprob: -9.004765510559082
    4. '   ' → logprob: -11.254765510559082
    5. ' c' → logprob: -12.379765510559082
    6. '1' → logprob: -13.254765510559082
    7. '  ' → logprob: -14.254765510559082
    8. '
' → logprob: -14.317265510559082
    9. '    ' → logprob: -14.504765510559082
    10. '       ' → logprob: -14.629765510559082

Token 1352: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -12.125007629394531
    3. 'c' → logprob: -13.125007629394531
    4. '   ' → logprob: -15.125007629394531
    5. '1' → logprob: -15.875007629394531
    6. '
' → logprob: -16.87500762939453
    7. '  ' → logprob: -17.75000762939453
    8. '```' → logprob: -18.00000762939453
    9. '       ' → logprob: -18.37500762939453
    10. '           ' → logprob: -18.43750762939453

Token 1353: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05219773203134537
    2. ':
' → logprob: -3.5521976947784424
    3. ':' → logprob: -4.0521979331970215
    4. '       ' → logprob: -5.4271979331970215
    5. ' and' → logprob: -9.177197456359863
    6. '{
' → logprob: -9.302197456359863
    7. 'and' → logprob: -9.802197456359863
    8. '          ' → logprob: -9.927197456359863
    9. '		' → logprob: -10.177197456359863
    10. '   ' → logprob: -10.927197456359863

Token 1354: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013953534653410316
    2. '       ' → logprob: -7.001395225524902
    3. '               ' → logprob: -8.626395225524902
    4. '		' → logprob: -8.751395225524902
    5. '```' → logprob: -9.376395225524902
    6. '	       ' → logprob: -10.751395225524902
    7. 'if' → logprob: -11.626395225524902
    8. '                   ' → logprob: -12.126395225524902
    9. ':' → logprob: -12.376395225524902
    10. ' if' → logprob: -12.376395225524902

Token 1355: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3280564844608307
    2. ' if' → logprob: -1.5780564546585083
    3. '           ' → logprob: -2.828056573867798
    4. '               ' → logprob: -4.328056335449219
    5. '       ' → logprob: -7.953056335449219
    6. '```' → logprob: -8.578056335449219
    7. '{
' → logprob: -8.828056335449219
    8. '{' → logprob: -9.453056335449219
    9. '   ' → logprob: -10.203056335449219
    10. '#' → logprob: -10.328056335449219

Token 1356: ' {(' (ID: 75216)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0002715873415581882
    2. ' {(' → logprob: -8.250271797180176
    3. 'open' → logprob: -12.500271797180176
    4. '{{' → logprob: -13.250271797180176
    5. '   ' → logprob: -13.625271797180176
    6. '({' → logprob: -14.125271797180176
    7. '{k' → logprob: -14.250271797180176
    8. '(' → logprob: -14.375271797180176
    9. '{\' → logprob: -15.125271797180176
    10. '={(' → logprob: -15.375271797180176

Token 1357: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -6.153795766294934e-06
    2. '(r' → logprob: -12.250005722045898
    3. ' r' → logprob: -13.875005722045898
    4. '   ' → logprob: -15.000005722045898
    5. '[r' → logprob: -18.0000057220459
    6. ' (' → logprob: -18.1250057220459
    7. '
' → logprob: -18.3750057220459
    8. '    ' → logprob: -19.2500057220459
    9. '{' → logprob: -19.3750057220459
    10. '	r' → logprob: -19.3750057220459

Token 1358: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.013456671498715878
    2. ',' → logprob: -5.01345682144165
    3. ',r' → logprob: -5.88845682144165
    4. ' ' → logprob: -6.51345682144165
    5. '   ' → logprob: -7.13845682144165
    6. '-' → logprob: -7.38845682144165
    7. ',(' → logprob: -7.88845682144165
    8. '(c' → logprob: -8.388456344604492
    9. ' ,' → logprob: -8.763456344604492
    10. 'c' → logprob: -9.013456344604492

Token 1359: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.7432603272027336e-06
    2. ' -' → logprob: -14.000001907348633
    3. '1' → logprob: -14.625001907348633
    4. ',' → logprob: -15.500001907348633
    5. '   ' → logprob: -16.875001907348633
    6. '(' → logprob: -17.625001907348633
    7. '```' → logprob: -18.000001907348633
    8. ' ' → logprob: -18.250001907348633
    9. '  ' → logprob: -18.500001907348633
    10. ')' → logprob: -19.000001907348633

Token 1360: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. '   ' → logprob: -13.250005722045898
    3. ' ' → logprob: -13.250005722045898
    4. '-' → logprob: -13.500005722045898
    5. '```' → logprob: -15.312505722045898
    6. ')' → logprob: -16.0625057220459
    7. '
' → logprob: -16.3125057220459
    8. '{' → logprob: -16.3750057220459
    9. '           ' → logprob: -16.5000057220459
    10. '       ' → logprob: -16.5625057220459

Token 1361: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.002913288539275527
    2. '),' → logprob: -5.877913475036621
    3. '},{' → logprob: -9.877913475036621
    4. '),
' → logprob: -10.502913475036621
    5. ')}' → logprob: -11.877913475036621
    6. ',(' → logprob: -12.002913475036621
    7. ').' → logprob: -12.377913475036621
    8. '   ' → logprob: -13.002913475036621
    9. '{' → logprob: -13.252913475036621
    10. ')' → logprob: -13.252913475036621

Token 1362: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.3120038501219824e-05
    2. '(r' → logprob: -9.875053405761719
    3. ' r' → logprob: -13.500053405761719
    4. '   ' → logprob: -16.00005340576172
    5. ' (' → logprob: -16.75005340576172
    6. '{' → logprob: -17.00005340576172
    7. '	r' → logprob: -17.75005340576172
    8. '(' → logprob: -18.00005340576172
    9. '[r' → logprob: -18.00005340576172
    10. '```' → logprob: -19.62505340576172

Token 1363: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4710277020931244
    2. '-' → logprob: -1.0960277318954468
    3. '1' → logprob: -3.3460276126861572
    4. 'c' → logprob: -5.846027851104736
    5. '0' → logprob: -6.971027851104736
    6. ',c' → logprob: -7.096027851104736
    7. ' ' → logprob: -7.096027851104736
    8. 'r' → logprob: -8.596027374267578
    9. '   ' → logprob: -8.971027374267578
    10. '(c' → logprob: -9.096027374267578

Token 1364: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. '   ' → logprob: -14.25000286102295
    3. ' ' → logprob: -14.43750286102295
    4. '
' → logprob: -14.87500286102295
    5. '2' → logprob: -15.50000286102295
    6. '-' → logprob: -16.187501907348633
    7. '{' → logprob: -16.437501907348633
    8. '(' → logprob: -16.500001907348633
    9. '```' → logprob: -16.812501907348633
    10. '[' → logprob: -17.437501907348633

Token 1365: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -6.825890159234405e-05
    2. 'c' → logprob: -10.125068664550781
    3. ',r' → logprob: -11.125068664550781
    4. ',' → logprob: -11.375068664550781
    5. ',(' → logprob: -14.000068664550781
    6. ',k' → logprob: -14.875068664550781
    7. ' ,' → logprob: -15.125068664550781
    8. '(c' → logprob: -16.00006866455078
    9. '   ' → logprob: -16.37506866455078
    10. '
' → logprob: -16.87506866455078

Token 1366: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9361264946837764e-07
    2. ' -' → logprob: -16.5
    3. ')-' → logprob: -18.5
    4. ',' → logprob: -18.875
    5. 'c' → logprob: -19.5
    6. ',c' → logprob: -19.875
    7. ')' → logprob: -20.625
    8. '#' → logprob: -20.625
    9. '[' → logprob: -20.75
    10. '−' → logprob: -20.875

Token 1367: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4140441635390744e-05
    2. '2' → logprob: -12.500014305114746
    3. '   ' → logprob: -12.500014305114746
    4. 'def' → logprob: -14.000014305114746
    5. '```' → logprob: -14.000014305114746
    6. ' ' → logprob: -14.062514305114746
    7. '           ' → logprob: -14.312514305114746
    8. '-' → logprob: -14.750014305114746
    9. '                   ' → logprob: -15.687514305114746
    10. '
' → logprob: -15.812514305114746

Token 1368: ')}' (ID: 15468)
  Prédit: ')}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.005328032188117504
    2. '}' → logprob: -5.880328178405762
    3. '}.' → logprob: -6.130328178405762
    4. ')' → logprob: -9.630328178405762
    5. '   ' → logprob: -9.755328178405762
    6. '}).' → logprob: -10.130328178405762
    7. '       ' → logprob: -10.380328178405762
    8. '}}' → logprob: -10.380328178405762
    9. '           ' → logprob: -10.380328178405762
    10. '}
' → logprob: -10.755328178405762

Token 1369: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002430951688438654
    2. ' in' → logprob: -6.6274309158325195
    3. ').' → logprob: -7.8774309158325195
    4. '               ' → logprob: -8.37743091583252
    5. '           ' → logprob: -8.50243091583252
    6. ' .' → logprob: -8.62743091583252
    7. '   ' → logprob: -10.25243091583252
    8. '].' → logprob: -11.00243091583252
    9. '}.' → logprob: -11.50243091583252
    10. '```' → logprob: -11.62743091583252

Token 1370: 'iss' (ID: 1009)
  Prédit: 'iss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iss' → logprob: -0.00011069540778407827
    2. 'subset' → logprob: -9.125110626220703
    3. '.' → logprob: -13.500110626220703
    4. '```' → logprob: -15.250110626220703
    5. ' iss' → logprob: -16.375110626220703
    6. '   ' → logprob: -17.875110626220703
    7. 'sub' → logprob: -18.375110626220703
    8. 'isdigit' → logprob: -19.125110626220703
    9. 'is' → logprob: -19.250110626220703
    10. '_subset' → logprob: -19.375110626220703

Token 1371: 'ub' (ID: 431)
  Prédit: 'ub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ub' → logprob: -0.159511536359787
    2. 'subset' → logprob: -2.1595115661621094
    3. '_subset' → logprob: -4.034511566162109
    4. 'open' → logprob: -5.034511566162109
    5. '{' → logprob: -5.784511566162109
    6. 'set' → logprob: -6.784511566162109
    7. 'et' → logprob: -6.784511566162109
    8. 'b' → logprob: -7.284511566162109
    9. 'sub' → logprob: -8.15951156616211
    10. ' subset' → logprob: -8.53451156616211

Token 1372: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0002712297427933663
    2. 'et' → logprob: -9.37527084350586
    3. 'subset' → logprob: -9.75027084350586
    4. 'erset' → logprob: -9.87527084350586
    5. '(set' → logprob: -11.00027084350586
    6. '```' → logprob: -11.37527084350586
    7. 'uset' → logprob: -11.87527084350586
    8. '{' → logprob: -11.87527084350586
    9. '_set' → logprob: -12.25027084350586
    10. 'ub' → logprob: -12.50027084350586

Token 1373: '(open' (ID: 62785)
  Prédit: '(open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(open' → logprob: -0.0002622894535306841
    2. 'open' → logprob: -8.250262260437012
    3. ' (' → logprob: -14.500262260437012
    4. ' open' → logprob: -15.250262260437012
    5. '=open' → logprob: -15.625262260437012
    6. '(' → logprob: -16.625263214111328
    7. '	open' → logprob: -17.375263214111328
    8. '```' → logprob: -18.125263214111328
    9. '/open' → logprob: -18.875263214111328
    10. '.open' → logprob: -19.250263214111328

Token 1374: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00015467056073248386
    2. 's' → logprob: -8.875154495239258
    3. 'open' → logprob: -12.000154495239258
    4. '(s' → logprob: -13.250154495239258
    5. 'Squares' → logprob: -13.750154495239258
    6. '```' → logprob: -14.000154495239258
    7. '_spaces' → logprob: -14.250154495239258
    8. '_' → logprob: -14.625154495239258
    9. '\' → logprob: -14.875154495239258
    10. ')' → logprob: -15.000154495239258

Token 1375: 'quares' (ID: 110764)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.012609835714101791
    2. 's' → logprob: -5.012609958648682
    3. 'quares' → logprob: -5.137609958648682
    4. 'q' → logprob: -13.637609481811523
    5. 'Squares' → logprob: -14.012609481811523
    6. 'qu' → logprob: -14.012609481811523
    7. '_' → logprob: -14.887609481811523
    8. ' squares' → logprob: -15.262609481811523
    9. 'r' → logprob: -15.512609481811523
    10. ')' → logprob: -15.512609481811523

Token 1376: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -5.478889215737581e-05
    2. 'set' → logprob: -9.875054359436035
    3. 'Set' → logprob: -14.500054359436035
    4. 'res' → logprob: -14.500054359436035
    5. '_res' → logprob: -14.625054359436035
    6. '```' → logprob: -14.750054359436035
    7. ')' → logprob: -15.125054359436035
    8. 's' → logprob: -15.250054359436035
    9. '_s' → logprob: -15.375054359436035
    10. ')set' → logprob: -15.875054359436035

Token 1377: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.015300077386200428
    2. '):' → logprob: -4.390300273895264
    3. '               ' → logprob: -6.015300273895264
    4. ')' → logprob: -8.515299797058105
    5. ':
' → logprob: -9.765299797058105
    6. '           ' → logprob: -10.015299797058105
    7. ':' → logprob: -11.515299797058105
    8. '):

' → logprob: -11.515299797058105
    9. '):
' → logprob: -11.890299797058105
    10. '                   ' → logprob: -12.265299797058105

Token 1378: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001628048368729651
    2. '           ' → logprob: -7.6266279220581055
    3. ' and' → logprob: -8.251627922058105
    4. '):
' → logprob: -8.376627922058105
    5. ':
' → logprob: -8.751627922058105
    6. ':' → logprob: -8.876627922058105
    7. 'and' → logprob: -8.876627922058105
    8. '```' → logprob: -8.876627922058105
    9. ')' → logprob: -10.126627922058105
    10. '):' → logprob: -11.751627922058105

Token 1379: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.072212815284729
    2. '               ' → logprob: -1.072212815284729
    3. ' if' → logprob: -1.197212815284729
    4. '                   ' → logprob: -4.3222126960754395
    5. '           ' → logprob: -9.072213172912598
    6. '   ' → logprob: -11.447213172912598
    7. '                ' → logprob: -11.697213172912598
    8. '
' → logprob: -11.697213172912598
    9. '```' → logprob: -12.322213172912598
    10. '	if' → logprob: -12.572213172912598

Token 1380: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.6931735277175903
    2. ' king' → logprob: -0.6931735277175903
    3. ' ' → logprob: -11.8181734085083
    4. '   ' → logprob: -12.1931734085083
    5. 'queen' → logprob: -13.1931734085083
    6. '(' → logprob: -13.3181734085083
    7. '  ' → logprob: -13.4431734085083
    8. '.king' → logprob: -13.8181734085083
    9. ' queen' → logprob: -14.0681734085083
    10. 'kin' → logprob: -14.1931734085083

Token 1381: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -2.339278580620885e-06
    2. '_moves' → logprob: -14.000001907348633
    3. 'def' → logprob: -14.875001907348633
    4. 'f' → logprob: -14.875001907348633
    5. '```' → logprob: -15.375001907348633
    6. '_' → logprob: -15.750001907348633
    7. '   ' → logprob: -16.750001907348633
    8. '
' → logprob: -17.375001907348633
    9. '#' → logprob: -17.625001907348633
    10. '+' → logprob: -17.750001907348633

Token 1382: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -0.010052364319562912
    2. 'fits' → logprob: -4.88505220413208
    3. '_f' → logprob: -6.63505220413208
    4. 'ts' → logprob: -7.13505220413208
    5. 's' → logprob: -10.135052680969238
    6. '_' → logprob: -10.385052680969238
    7. 'Fits' → logprob: -10.760052680969238
    8. 'it' → logprob: -10.885052680969238
    9. '```' → logprob: -10.885052680969238
    10. '   ' → logprob: -11.260052680969238

Token 1383: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.062044430524110794
    2. 'r' → logprob: -2.812044382095337
    3. '(' → logprob: -9.937044143676758
    4. '   ' → logprob: -10.937044143676758
    5. ' (' → logprob: -12.312044143676758
    6. ' r' → logprob: -12.812044143676758
    7. '(
' → logprob: -13.562044143676758
    8. '(res' → logprob: -14.187044143676758
    9. '	r' → logprob: -14.687044143676758
    10. '       ' → logprob: -15.312044143676758

Token 1384: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.003064461052417755
    2. ',' → logprob: -6.0030646324157715
    3. ' ,' → logprob: -8.503064155578613
    4. ' ' → logprob: -8.753064155578613
    5. 'c' → logprob: -8.878064155578613
    6. '   ' → logprob: -10.253064155578613
    7. ',r' → logprob: -10.628064155578613
    8. '  ' → logprob: -12.003064155578613
    9. ',p' → logprob: -12.503064155578613
    10. '       ' → logprob: -12.503064155578613

Token 1385: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. ' -' → logprob: -17.125
    3. 'def' → logprob: -19.75
    4. '```' → logprob: -20.0
    5. '-
' → logprob: -20.875
    6. '()-' → logprob: -21.0
    7. '1' → logprob: -21.0
    8. '   ' → logprob: -21.125
    9. '
' → logprob: -22.25
    10. '-=' → logprob: -22.5

Token 1386: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014287306112237275
    2. '-' → logprob: -9.750143051147461
    3. '   ' → logprob: -10.625143051147461
    4. 'r' → logprob: -10.750143051147461
    5. '
' → logprob: -11.625143051147461
    6. '(' → logprob: -11.750143051147461
    7. 'res' → logprob: -11.875143051147461
    8. ' ' → logprob: -12.937643051147461
    9. '(r' → logprob: -13.250143051147461
    10. 'p' → logprob: -13.562643051147461

Token 1387: ',p' (ID: 14835)
  Prédit: ',p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.002876676619052887
    2. ',' → logprob: -5.8778767585754395
    3. ' ,' → logprob: -9.627876281738281
    4. 'p' → logprob: -12.877876281738281
    5. ',
' → logprob: -14.252876281738281
    6. '   ' → logprob: -14.627876281738281
    7. '```' → logprob: -14.752876281738281
    8. '       ' → logprob: -15.252876281738281
    9. ')' → logprob: -15.377876281738281
    10. '           ' → logprob: -15.502876281738281

Token 1388: 'awns' (ID: 115084)
  Prédit: 'awns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'awns' → logprob: -1.0087516784551553e-05
    2. 'awn' → logprob: -12.12501049041748
    3. 'aw' → logprob: -14.50001049041748
    4. '#' → logprob: -14.75001049041748
    5. 'awning' → logprob: -15.00001049041748
    6. '```' → logprob: -15.25001049041748
    7. '   ' → logprob: -15.37501049041748
    8. '{' → logprob: -15.62501049041748
    9. '
' → logprob: -15.62501049041748
    10. '>' → logprob: -15.75001049041748

Token 1389: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.003144920105114579
    2. '_sets' → logprob: -5.87814474105835
    3. 's' → logprob: -9.003145217895508
    4. 'set' → logprob: -9.503145217895508
    5. ')set' → logprob: -10.628145217895508
    6. '_moves' → logprob: -10.628145217895508
    7. '_s' → logprob: -11.253145217895508
    8. 'ets' → logprob: -11.378145217895508
    9. '_tokens' → logprob: -11.503145217895508
    10. '```' → logprob: -11.753145217895508

Token 1390: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.005994205828756094
    2. '):' → logprob: -5.1309943199157715
    3. '):
' → logprob: -10.880993843078613
    4. '               ' → logprob: -11.005993843078613
    5. '                   ' → logprob: -11.005993843078613
    6. ')' → logprob: -11.755993843078613
    7. '           ' → logprob: -13.255993843078613
    8. ':
' → logprob: -13.505993843078613
    9. '):

' → logprob: -14.005993843078613
    10. '       ' → logprob: -14.255993843078613

Token 1391: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002314761048182845
    2. '               ' → logprob: -6.502314567565918
    3. '                       ' → logprob: -8.752314567565918
    4. '           ' → logprob: -9.127314567565918
    5. ':
' → logprob: -9.252314567565918
    6. '                  ' → logprob: -9.502314567565918
    7. '       ' → logprob: -9.627314567565918
    8. '		           ' → logprob: -9.752314567565918
    9. '				' → logprob: -10.127314567565918
    10. '   ' → logprob: -10.502314567565918

Token 1392: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0011367622064426541
    2. ' res' → logprob: -7.001136779785156
    3. '                   ' → logprob: -8.626136779785156
    4. '                       ' → logprob: -10.376136779785156
    5. '               ' → logprob: -12.126136779785156
    6. '       ' → logprob: -12.126136779785156
    7. '           ' → logprob: -13.626136779785156
    8. '                    ' → logprob: -13.876136779785156
    9. '	res' → logprob: -14.501136779785156
    10. '   ' → logprob: -15.126136779785156

Token 1393: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.5094070477061905e-05
    2. '.' → logprob: -11.875015258789062
    3. '           ' → logprob: -12.000015258789062
    4. 'append' → logprob: -14.000015258789062
    5. '               ' → logprob: -15.000015258789062
    6. ' .' → logprob: -15.000015258789062
    7. '                   ' → logprob: -15.625015258789062
    8. '.extend' → logprob: -16.125015258789062
    9. '       ' → logprob: -16.375015258789062
    10. '.add' → logprob: -17.000015258789062

Token 1394: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.7501181960105896
    2. '(r' → logprob: -1.2501182556152344
    3. '(' → logprob: -1.7501182556152344
    4. '(c' → logprob: -3.2501182556152344
    5. ' (' → logprob: -3.6251182556152344
    6. '(
' → logprob: -6.750118255615234
    7. '<|end|>' → logprob: -7.250118255615234
    8. ')' → logprob: -10.000118255615234
    9. '(k' → logprob: -10.250118255615234
    10. ' ((' → logprob: -11.375118255615234

Token 1395: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.782141569303349e-05
    2. '(r' → logprob: -9.25009822845459
    3. ' r' → logprob: -13.50009822845459
    4. '   ' → logprob: -15.50009822845459
    5. ',r' → logprob: -17.250097274780273
    6. ' (' → logprob: -18.000097274780273
    7. '	r' → logprob: -18.000097274780273
    8. ')' → logprob: -18.250097274780273
    9. '(' → logprob: -18.875097274780273
    10. ' ' → logprob: -18.875097274780273

Token 1396: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.002126233885064721
    2. ',' → logprob: -7.002126216888428
    3. 'c' → logprob: -7.002126216888428
    4. ',r' → logprob: -8.752126693725586
    5. '-' → logprob: -9.127126693725586
    6. '1' → logprob: -11.127126693725586
    7. ' ,' → logprob: -12.002126693725586
    8. '(c' → logprob: -12.502126693725586
    9. '0' → logprob: -13.002126693725586
    10. ',(' → logprob: -13.127126693725586

Token 1397: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.320199877838604e-07
    2. ' -' → logprob: -14.875
    3. '+' → logprob: -16.875
    4. '-
' → logprob: -18.0
    5. ')' → logprob: -19.375
    6. '```' → logprob: -19.5
    7. '1' → logprob: -20.0
    8. ')-' → logprob: -20.125
    9. '−' → logprob: -20.125
    10. '#' → logprob: -20.375

Token 1398: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8550976164988242e-05
    2. '-' → logprob: -12.125018119812012
    3. '   ' → logprob: -12.375018119812012
    4. '2' → logprob: -12.875018119812012
    5. '
' → logprob: -13.000018119812012
    6. ' ' → logprob: -13.812518119812012
    7. 'res' → logprob: -13.937518119812012
    8. '0' → logprob: -14.937518119812012
    9. 'c' → logprob: -15.062518119812012
    10. '```' → logprob: -15.625018119812012

Token 1399: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000754001026507467
    2. ')
' → logprob: -7.375753879547119
    3. '))' → logprob: -9.500754356384277
    4. '       ' → logprob: -10.000754356384277
    5. '   ' → logprob: -12.875754356384277
    6. ' )' → logprob: -13.500754356384277
    7. '               ' → logprob: -13.875754356384277
    8. ')}' → logprob: -14.500754356384277
    9. '           ' → logprob: -14.625754356384277
    10. '))
' → logprob: -15.375754356384277

Token 1400: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01356216799467802
    2. '<|end|>' → logprob: -5.263562202453613
    3. ')' → logprob: -5.763562202453613
    4. '#' → logprob: -6.138562202453613
    5. '```' → logprob: -7.138562202453613
    6. '	' → logprob: -7.138562202453613
    7. '   ' → logprob: -7.888562202453613
    8. '
' → logprob: -8.138562202453613
    9. '<|end|>' → logprob: -8.388562202453613
    10. '        
' → logprob: -8.888562202453613

Token 1401: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.06197642162442207
    2. '       ' → logprob: -2.811976432800293
    3. '   ' → logprob: -11.811976432800293
    4. ' #' → logprob: -14.186976432800293
    5. '```' → logprob: -15.061976432800293
    6. '	' → logprob: -15.686976432800293
    7. '           ' → logprob: -15.686976432800293
    8. '
' → logprob: -17.436975479125977
    9. ' ' → logprob: -17.561975479125977
    10. '      ' → logprob: -17.686975479125977

Token 1402: ' RIGHT' (ID: 51066)
  Prédit: 'RIGHT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RIGHT' → logprob: -0.011735999956727028
    2. '#' → logprob: -5.136735916137695
    3. ' RIGHT' → logprob: -5.386735916137695
    4. '   ' → logprob: -7.386735916137695
    5. 'c' → logprob: -8.136735916137695
    6. '       ' → logprob: -8.886735916137695
    7. 'if' → logprob: -9.386735916137695
    8. '
' → logprob: -10.011735916137695
    9. ' #' → logprob: -11.636735916137695
    10. '_RIGHT' → logprob: -11.761735916137695

Token 1403: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4591241180896759
    2. 'if' → logprob: -1.8341240882873535
    3. ' if' → logprob: -2.2091240882873535
    4. '
' → logprob: -3.3341240882873535
    5. '```' → logprob: -3.8341240882873535
    6. ':
' → logprob: -4.7091240882873535
    7. '(' → logprob: -4.9591240882873535
    8. '(
' → logprob: -5.2091240882873535
    9. '           ' → logprob: -5.4591240882873535
    10. '   ' → logprob: -5.9591240882873535

Token 1404: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027731433510780334
    2. ' if' → logprob: -6.377773284912109
    3. 'if' → logprob: -7.002773284912109
    4. '           ' → logprob: -10.00277328491211
    5. '```' → logprob: -10.00277328491211
    6. '(' → logprob: -10.75277328491211
    7. '        ' → logprob: -11.25277328491211
    8. '
' → logprob: -11.37777328491211
    9. '   ' → logprob: -12.00277328491211
    10. '	' → logprob: -12.75277328491211

Token 1405: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1605423539876938
    2. '       ' → logprob: -2.1605422496795654
    3. ' if' → logprob: -3.4105422496795654
    4. '           ' → logprob: -10.910542488098145
    5. '
' → logprob: -11.785542488098145
    6. '   ' → logprob: -12.285542488098145
    7. '        ' → logprob: -14.285542488098145
    8. '{
' → logprob: -15.035542488098145
    9. '=' → logprob: -15.660542488098145
    10. '               ' → logprob: -15.785542488098145

Token 1406: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.03804286941885948
    2. 'c' → logprob: -3.2880427837371826
    3. '(c' → logprob: -14.163043022155762
    4. ' (' → logprob: -14.413043022155762
    5. ' ' → logprob: -16.413042068481445
    6. ' ' → logprob: -17.413042068481445
    7. '	c' → logprob: -17.788042068481445
    8. '(' → logprob: -18.413042068481445
    9. '   ' → logprob: -18.788042068481445
    10. '  ' → logprob: -19.163042068481445

Token 1407: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.5332478142227046e-05
    2. ' +' → logprob: -11.125015258789062
    3. '+c' → logprob: -14.750015258789062
    4. '+
' → logprob: -16.250015258789062
    5. 'c' → logprob: -17.625015258789062
    6. '()+' → logprob: -17.750015258789062
    7. '   ' → logprob: -18.500015258789062
    8. '1' → logprob: -18.750015258789062
    9. '＋' → logprob: -18.750015258789062
    10. '(' → logprob: -18.875015258789062

Token 1408: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.4987974029500037e-05
    2. '1' → logprob: -10.875024795532227
    3. ' ' → logprob: -12.375024795532227
    4. '```' → logprob: -14.125024795532227
    5. '   ' → logprob: -14.750024795532227
    6. '
' → logprob: -15.125024795532227
    7. '``' → logprob: -17.312524795532227
    8. '	' → logprob: -17.375024795532227
    9. '۲' → logprob: -17.500024795532227
    10. '+' → logprob: -17.625024795532227

Token 1409: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.01999961957335472
    2. ' <=' → logprob: -4.2699995040893555
    3. '<' → logprob: -5.3949995040893555
    4. '+' → logprob: -7.3949995040893555
    5. '<=' → logprob: -7.7699995040893555
    6. '<c' → logprob: -8.894999504089355
    7. ' +' → logprob: -10.144999504089355
    8. ',' → logprob: -11.394999504089355
    9. ' ' → logprob: -11.644999504089355
    10. '<p' → logprob: -11.894999504089355

Token 1410: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.015003261156380177
    2. ' W' → logprob: -4.390003204345703
    3. 'c' → logprob: -6.015003204345703
    4. ' c' → logprob: -10.390003204345703
    5. '0' → logprob: -12.640003204345703
    6. 'C' → logprob: -12.640003204345703
    7. '   ' → logprob: -13.015003204345703
    8. '```' → logprob: -13.015003204345703
    9. ' ' → logprob: -13.265003204345703
    10. '=' → logprob: -13.640003204345703

Token 1411: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48086968064308167
    2. ':
' → logprob: -0.9808696508407593
    3. '       ' → logprob: -5.105869770050049
    4. '           ' → logprob: -7.355869770050049
    5. '=' → logprob: -11.10586929321289
    6. '   ' → logprob: -11.23086929321289
    7. '):
' → logprob: -11.60586929321289
    8. '```' → logprob: -11.85586929321289
    9. '():
' → logprob: -12.35586929321289
    10. ':

' → logprob: -12.85586929321289

Token 1412: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005995394196361303
    2. '       ' → logprob: -5.255995273590088
    3. 'if' → logprob: -7.630995273590088
    4. '               ' → logprob: -9.255995750427246
    5. ' if' → logprob: -9.255995750427246
    6. '```' → logprob: -10.005995750427246
    7. ':
' → logprob: -11.255995750427246
    8. '          ' → logprob: -11.880995750427246
    9. '{
' → logprob: -12.005995750427246
    10. ':' → logprob: -13.005995750427246

Token 1413: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7319376468658447
    2. '           ' → logprob: -1.2319376468658447
    3. ' if' → logprob: -1.4819376468658447
    4. '               ' → logprob: -9.606937408447266
    5. '       ' → logprob: -11.731937408447266
    6. '{
' → logprob: -11.981937408447266
    7. '            ' → logprob: -11.981937408447266
    8. '          ' → logprob: -12.731937408447266
    9. '```' → logprob: -12.731937408447266
    10. '
' → logprob: -13.856937408447266

Token 1414: ' {(' (ID: 75216)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.16023093461990356
    2. ' {(' → logprob: -1.9102308750152588
    3. '{{' → logprob: -12.28523063659668
    4. '{k' → logprob: -13.28523063659668
    5. '={(' → logprob: -15.78523063659668
    6. '{\' → logprob: -16.03523063659668
    7. '   ' → logprob: -16.91023063659668
    8. '{"' → logprob: -17.03523063659668
    9. '{s' → logprob: -17.28523063659668
    10. '{return' → logprob: -17.28523063659668

Token 1415: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1472419600977446e-06
    2. ' r' → logprob: -14.125000953674316
    3. '(r' → logprob: -15.500000953674316
    4. '   ' → logprob: -17.625001907348633
    5. '[r' → logprob: -18.625001907348633
    6. '	r' → logprob: -18.875001907348633
    7. '<|end|>' → logprob: -19.500001907348633
    8. ',r' → logprob: -19.875001907348633
    9. '_r' → logprob: -20.125001907348633
    10. '$r' → logprob: -20.250001907348633

Token 1416: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.010499317198991776
    2. 'c' → logprob: -4.635499477386475
    3. ',' → logprob: -7.385499477386475
    4. ' ,' → logprob: -9.260499000549316
    5. ',r' → logprob: -10.885499000549316
    6. 'r' → logprob: -12.010499000549316
    7. ' c' → logprob: -13.760499000549316
    8. '(c' → logprob: -14.135499000549316
    9. ',k' → logprob: -14.885499000549316
    10. ',
' → logprob: -15.885499000549316

Token 1417: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.320199877838604e-07
    2. ' +' → logprob: -14.875
    3. '2' → logprob: -17.125
    4. '-' → logprob: -18.625
    5. '+
' → logprob: -19.0
    6. '```' → logprob: -19.375
    7. '1' → logprob: -20.25
    8. '＋' → logprob: -20.625
    9. '()+' → logprob: -20.75
    10. '(' → logprob: -21.0

Token 1418: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. '
' → logprob: -14.00000286102295
    3. '+' → logprob: -14.50000286102295
    4. ' ' → logprob: -14.62500286102295
    5. '1' → logprob: -15.50000286102295
    6. '   ' → logprob: -15.62500286102295
    7. '```' → logprob: -16.625001907348633
    8. '
' → logprob: -17.062501907348633
    9. '

' → logprob: -18.000001907348633
    10. '(' → logprob: -18.062501907348633

Token 1419: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.00013250234769657254
    2. '),' → logprob: -9.00013256072998
    3. ',(' → logprob: -12.00013256072998
    4. '},{' → logprob: -13.12513256072998
    5. '),
' → logprob: -14.75013256072998
    6. ' ),' → logprob: -15.87513256072998
    7. ',' → logprob: -16.750131607055664
    8. '{' → logprob: -16.750131607055664
    9. ')}' → logprob: -16.750131607055664
    10. ' ' → logprob: -17.875131607055664

Token 1420: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00011236425780225545
    2. '(r' → logprob: -9.125112533569336
    3. ' r' → logprob: -12.625112533569336
    4. '   ' → logprob: -17.375112533569336
    5. '[r' → logprob: -18.375112533569336
    6. ' (' → logprob: -18.625112533569336
    7. '	r' → logprob: -19.125112533569336
    8. '    ' → logprob: -20.750112533569336
    9. '     ' → logprob: -20.750112533569336
    10. '(' → logprob: -20.875112533569336

Token 1421: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.5822400857578032e-05
    2. ' +' → logprob: -11.750025749206543
    3. '(c' → logprob: -11.875025749206543
    4. '+c' → logprob: -12.625025749206543
    5. 'c' → logprob: -13.000025749206543
    6. '1' → logprob: -13.375025749206543
    7. ',c' → logprob: -13.750025749206543
    8. 'r' → logprob: -14.375025749206543
    9. '[c' → logprob: -14.500025749206543
    10. '(r' → logprob: -14.625025749206543

Token 1422: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3586209714412689
    2. 'c' → logprob: -1.4836210012435913
    3. '2' → logprob: -2.6086208820343018
    4. '+' → logprob: -7.983621120452881
    5. 'r' → logprob: -8.608620643615723
    6. '(c' → logprob: -9.233620643615723
    7. ' c' → logprob: -9.733620643615723
    8. ' ' → logprob: -9.733620643615723
    9. '   ' → logprob: -9.858620643615723
    10. '
' → logprob: -10.233620643615723

Token 1423: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -2.236549335066229e-05
    2. 'c' → logprob: -11.000021934509277
    3. ',' → logprob: -12.500021934509277
    4. ',(' → logprob: -13.750021934509277
    5. ',r' → logprob: -15.125021934509277
    6. ' ,' → logprob: -15.500021934509277
    7. ',k' → logprob: -16.000022888183594
    8. '(c' → logprob: -16.375022888183594
    9. '	c' → logprob: -17.875022888183594
    10. ',C' → logprob: -18.625022888183594

Token 1424: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.045823566731997e-05
    2. '+c' → logprob: -11.250020027160645
    3. 'c' → logprob: -12.750020027160645
    4. ',c' → logprob: -12.875020027160645
    5. ' +' → logprob: -13.750020027160645
    6. ',' → logprob: -14.750020027160645
    7. '2' → logprob: -15.875020027160645
    8. '(c' → logprob: -15.875020027160645
    9. '[' → logprob: -16.75002098083496
    10. '```' → logprob: -17.00002098083496

Token 1425: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.13388703338569e-06
    2. '1' → logprob: -12.500009536743164
    3. 'c' → logprob: -12.500009536743164
    4. ' ' → logprob: -14.125009536743164
    5. '+' → logprob: -14.375009536743164
    6. '
' → logprob: -15.750009536743164
    7. '   ' → logprob: -16.500009536743164
    8. '```' → logprob: -17.000009536743164
    9. '(' → logprob: -17.937509536743164
    10. '{' → logprob: -18.187509536743164

Token 1426: ')}' (ID: 15468)
  Prédit: '}.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}.' → logprob: -0.1692388504743576
    2. ')}' → logprob: -1.919238805770874
    3. '}).' → logprob: -5.669239044189453
    4. ').' → logprob: -5.794239044189453
    5. '}' → logprob: -6.169239044189453
    6. '   ' → logprob: -8.419239044189453
    7. ')' → logprob: -9.919239044189453
    8. '})' → logprob: -10.169239044189453
    9. ' }.' → logprob: -11.294239044189453
    10. '       ' → logprob: -11.294239044189453

Token 1427: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16291305422782898
    2. ').' → logprob: -2.2879130840301514
    3. '}.' → logprob: -3.1629130840301514
    4. ' in' → logprob: -5.662912845611572
    5. '].' → logprob: -6.037912845611572
    6. ')' → logprob: -8.28791332244873
    7. '           ' → logprob: -9.16291332244873
    8. '   ' → logprob: -9.41291332244873
    9. '}' → logprob: -10.41291332244873
    10. '       ' → logprob: -10.66291332244873

Token 1428: 'iss' (ID: 1009)
  Prédit: 'iss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iss' → logprob: -4.1318875446449965e-05
    2. 'subset' → logprob: -10.125041007995605
    3. '.' → logprob: -14.625041007995605
    4. 'open' → logprob: -15.250041007995605
    5. 'set' → logprob: -15.750041007995605
    6. ' iss' → logprob: -16.250041961669922
    7. 'issu' → logprob: -16.750041961669922
    8. 'add' → logprob: -16.750041961669922
    9. '```' → logprob: -17.000041961669922
    10. '_subset' → logprob: -18.125041961669922

Token 1429: 'ub' (ID: 431)
  Prédit: 'ub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ub' → logprob: -0.2635108232498169
    2. 'subset' → logprob: -1.513510823249817
    3. '_subset' → logprob: -4.763510704040527
    4. 'sub' → logprob: -6.388510704040527
    5. 'set' → logprob: -7.138510704040527
    6. 'et' → logprob: -8.388510704040527
    7. '_sub' → logprob: -8.888510704040527
    8. 'b' → logprob: -10.388510704040527
    9. ' subset' → logprob: -10.638510704040527
    10. '{' → logprob: -10.763510704040527

Token 1430: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.029530728235840797
    2. 'sets' → logprob: -4.0295305252075195
    3. 'et' → logprob: -5.4045305252075195
    4. 'ets' → logprob: -5.6545305252075195
    5. 'quares' → logprob: -6.4045305252075195
    6. '_set' → logprob: -7.1545305252075195
    7. 'erset' → logprob: -7.5295305252075195
    8. 'ox' → logprob: -9.52953052520752
    9. 'its' → logprob: -9.90453052520752
    10. 'ots' → logprob: -10.02953052520752

Token 1431: '(open' (ID: 62785)
  Prédit: '(open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(open' → logprob: -0.012666327878832817
    2. 'open' → logprob: -4.38766622543335
    3. ' open' → logprob: -9.262666702270508
    4. ' (' → logprob: -10.012666702270508
    5. '(' → logprob: -11.262666702270508
    6. '=open' → logprob: -13.262666702270508
    7. '	open' → logprob: -13.637666702270508
    8. '.open' → logprob: -15.512666702270508
    9. '_open' → logprob: -15.637666702270508
    10. '{' → logprob: -15.762666702270508

Token 1432: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -4.191489642835222e-05
    2. 's' → logprob: -10.875041961669922
    3. 'open' → logprob: -10.875041961669922
    4. '_spaces' → logprob: -13.125041961669922
    5. '```' → logprob: -15.250041961669922
    6. ')' → logprob: -15.625041961669922
    7. '_open' → logprob: -15.625041961669922
    8. '...' → logprob: -16.000041961669922
    9. 'Squares' → logprob: -16.000041961669922
    10. '(open' → logprob: -16.125041961669922

Token 1433: 'quares' (ID: 110764)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.1799086481332779
    2. 'quares' → logprob: -1.8049086332321167
    3. 'q' → logprob: -9.429908752441406
    4. 's' → logprob: -10.054908752441406
    5. 'qu' → logprob: -11.054908752441406
    6. '_' → logprob: -12.304908752441406
    7. '_q' → logprob: -12.929908752441406
    8. 'open' → logprob: -13.429908752441406
    9. 'o' → logprob: -13.554908752441406
    10. '```' → logprob: -13.554908752441406

Token 1434: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0003978992172051221
    2. '_s' → logprob: -8.000397682189941
    3. 'open' → logprob: -10.500397682189941
    4. 'set' → logprob: -10.875397682189941
    5. 's' → logprob: -11.750397682189941
    6. '_sets' → logprob: -11.875397682189941
    7. 'Set' → logprob: -14.500397682189941
    8. '_open' → logprob: -15.125397682189941
    9. '_SET' → logprob: -16.500398635864258
    10. '```' → logprob: -16.625398635864258

Token 1435: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0027082269079983234
    2. '               ' → logprob: -6.502708435058594
    3. '):' → logprob: -6.877708435058594
    4. ':
' → logprob: -9.877708435058594
    5. '           ' → logprob: -10.127708435058594
    6. ')' → logprob: -10.377708435058594
    7. '       ' → logprob: -10.877708435058594
    8. '):
' → logprob: -11.252708435058594
    9. ' ):
' → logprob: -12.127708435058594
    10. '):

' → logprob: -12.377708435058594

Token 1436: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002245058072730899
    2. ':
' → logprob: -6.87724494934082
    3. '):
' → logprob: -7.37724494934082
    4. ':' → logprob: -8.37724494934082
    5. ')' → logprob: -9.12724494934082
    6. '```' → logprob: -9.37724494934082
    7. '):' → logprob: -9.37724494934082
    8. '           ' → logprob: -10.50224494934082
    9. '                   ' → logprob: -11.37724494934082
    10. '[' → logprob: -12.12724494934082

Token 1437: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16430391371250153
    2. ' if' → logprob: -1.9143038988113403
    3. '               ' → logprob: -5.664303779602051
    4. '                   ' → logprob: -7.414303779602051
    5. '
' → logprob: -14.53930377960205
    6. '                ' → logprob: -15.78930377960205
    7. '	if' → logprob: -15.78930377960205
    8. '```' → logprob: -15.91430377960205
    9. 'If' → logprob: -16.164304733276367
    10. '           ' → logprob: -16.164304733276367

Token 1438: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.04858805239200592
    2. ' king' → logprob: -3.0485880374908447
    3. '   ' → logprob: -15.798587799072266
    4. ' ' → logprob: -16.173587799072266
    5. 'queen' → logprob: -16.173587799072266
    6. '.king' → logprob: -16.173587799072266
    7. '(' → logprob: -16.923587799072266
    8. '  ' → logprob: -17.173587799072266
    9. 'k' → logprob: -17.298587799072266
    10. 'kin' → logprob: -17.298587799072266

Token 1439: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -6.988221684878226e-06
    2. '_moves' → logprob: -12.000006675720215
    3. 'f' → logprob: -14.875006675720215
    4. '_' → logprob: -16.25000762939453
    5. '```' → logprob: -16.37500762939453
    6. 'def' → logprob: -17.12500762939453
    7. 'moves' → logprob: -17.75000762939453
    8. '+' → logprob: -17.87500762939453
    9. '_r' → logprob: -18.00000762939453
    10. 'fits' → logprob: -18.12500762939453

Token 1440: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -0.001835825969465077
    2. 'ts' → logprob: -6.376835823059082
    3. 'fits' → logprob: -9.376835823059082
    4. 's' → logprob: -12.251835823059082
    5. '```' → logprob: -12.251835823059082
    6. '=' → logprob: -12.626835823059082
    7. 'it' → logprob: -12.751835823059082
    8. 't' → logprob: -12.876835823059082
    9. 'ats' → logprob: -13.126835823059082
    10. '_moves' → logprob: -13.126835823059082

Token 1441: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -3.4121114822482923e-06
    2. 'r' → logprob: -12.875003814697266
    3. ' (' → logprob: -14.500003814697266
    4. '(' → logprob: -14.875003814697266
    5. '(
' → logprob: -17.250003814697266
    6. '   ' → logprob: -17.625003814697266
    7. ' r' → logprob: -19.875003814697266
    8. '<|end|>' → logprob: -20.250003814697266
    9. '	r' → logprob: -20.500003814697266
    10. ',r' → logprob: -20.875003814697266

Token 1442: ',c' (ID: 22261)
  Prédit: ',r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.2811886966228485
    2. ',c' → logprob: -1.531188726425171
    3. ',' → logprob: -4.156188488006592
    4. 'r' → logprob: -4.406188488006592
    5. ',k' → logprob: -7.156188488006592
    6. ' ,' → logprob: -9.40618896484375
    7. 'c' → logprob: -9.53118896484375
    8. '   ' → logprob: -11.78118896484375
    9. '(r' → logprob: -12.53118896484375
    10. ',(' → logprob: -12.65618896484375

Token 1443: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.700132997939363e-05
    2. ' +' → logprob: -11.375017166137695
    3. '+c' → logprob: -13.250017166137695
    4. '1' → logprob: -13.625017166137695
    5. '+r' → logprob: -14.625017166137695
    6. 'c' → logprob: -14.750017166137695
    7. '+
' → logprob: -14.750017166137695
    8. '(' → logprob: -14.875017166137695
    9. '2' → logprob: -15.875017166137695
    10. '   ' → logprob: -15.875017166137695

Token 1444: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08931009471416473
    2. '1' → logprob: -2.4643101692199707
    3. '+' → logprob: -8.339309692382812
    4. 'c' → logprob: -9.214309692382812
    5. ' ' → logprob: -10.964309692382812
    6. 'r' → logprob: -12.464309692382812
    7. '   ' → logprob: -12.839309692382812
    8. '3' → logprob: -13.089309692382812
    9. 'res' → logprob: -13.839309692382812
    10. '0' → logprob: -13.964309692382812

Token 1445: ',p' (ID: 14835)
  Prédit: ',p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.0009782671695575118
    2. ',' → logprob: -7.000978469848633
    3. ' ,' → logprob: -11.125978469848633
    4. '):' → logprob: -11.375978469848633
    5. '):
' → logprob: -11.625978469848633
    6. '(p' → logprob: -11.875978469848633
    7. 'p' → logprob: -12.250978469848633
    8. ')' → logprob: -12.375978469848633
    9. '   ' → logprob: -12.875978469848633
    10. ',k' → logprob: -13.125978469848633

Token 1446: 'awns' (ID: 115084)
  Prédit: 'awns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'awns' → logprob: -0.00012284684635233134
    2. 'aws' → logprob: -10.250123023986816
    3. '```' → logprob: -11.125123023986816
    4. 'awn' → logprob: -11.125123023986816
    5. 'aints' → logprob: -11.250123023986816
    6. ')' → logprob: -11.625123023986816
    7. 'aw' → logprob: -12.000123023986816
    8. 'ons' → logprob: -12.625123023986816
    9. '+' → logprob: -12.750123023986816
    10. 's' → logprob: -13.000123023986816

Token 1447: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.24340270459651947
    2. '_moves' → logprob: -1.6184027194976807
    3. '_sets' → logprob: -5.118402481079102
    4. '_s' → logprob: -5.243402481079102
    5. '-' → logprob: -5.743402481079102
    6. 'set' → logprob: -7.493402481079102
    7. '```' → logprob: -7.493402481079102
    8. 's' → logprob: -7.493402481079102
    9. '+' → logprob: -8.243402481079102
    10. ')' → logprob: -8.243402481079102

Token 1448: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.576619565486908
    2. '):' → logprob: -0.826619565486908
    3. ')' → logprob: -7.701619625091553
    4. '):
' → logprob: -9.951619148254395
    5. '               ' → logprob: -10.076619148254395
    6. '                   ' → logprob: -10.076619148254395
    7. ':' → logprob: -10.326619148254395
    8. ':
' → logprob: -10.576619148254395
    9. '       ' → logprob: -11.201619148254395
    10. '           ' → logprob: -11.326619148254395

Token 1449: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0022954940795898438
    2. '               ' → logprob: -6.37729549407959
    3. '                       ' → logprob: -8.75229549407959
    4. '                  ' → logprob: -9.00229549407959
    5. '       ' → logprob: -9.37729549407959
    6. '           ' → logprob: -9.87729549407959
    7. ')' → logprob: -10.00229549407959
    8. 'res' → logprob: -10.25229549407959
    9. '                    ' → logprob: -10.62729549407959
    10. '   ' → logprob: -11.00229549407959

Token 1450: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.002537728985771537
    2. ' res' → logprob: -6.002537727355957
    3. '                   ' → logprob: -9.752537727355957
    4. '                       ' → logprob: -13.502537727355957
    5. '	res' → logprob: -14.127537727355957
    6. '               ' → logprob: -14.752537727355957
    7. '       ' → logprob: -15.252537727355957
    8. 'append' → logprob: -15.502537727355957
    9. '                    ' → logprob: -15.627537727355957
    10. '           ' → logprob: -15.627537727355957

Token 1451: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.749814019713085e-06
    2. '.' → logprob: -12.500006675720215
    3. '           ' → logprob: -12.875006675720215
    4. 'append' → logprob: -15.500006675720215
    5. '       ' → logprob: -16.37500762939453
    6. ' .' → logprob: -16.50000762939453
    7. '.extend' → logprob: -16.62500762939453
    8. '.push' → logprob: -17.75000762939453
    9. '.app' → logprob: -17.87500762939453
    10. '.add' → logprob: -18.00000762939453

Token 1452: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.11579865962266922
    2. '(' → logprob: -2.7407987117767334
    3. '(r' → logprob: -3.1157987117767334
    4. '(
' → logprob: -7.990798473358154
    5. ' (' → logprob: -9.115798950195312
    6. '(k' → logprob: -11.740798950195312
    7. '(c' → logprob: -11.740798950195312
    8. '<|end|>' → logprob: -12.240798950195312
    9. '(token' → logprob: -12.865798950195312
    10. ',(' → logprob: -13.490798950195312

Token 1453: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0067240106873214245
    2. '(r' → logprob: -5.006723880767822
    3. ' r' → logprob: -11.75672435760498
    4. ' (' → logprob: -14.75672435760498
    5. '(' → logprob: -15.63172435760498
    6. '	r' → logprob: -16.131723403930664
    7. '   ' → logprob: -16.256723403930664
    8. ',r' → logprob: -16.631723403930664
    9. '(
' → logprob: -17.006723403930664
    10. '[r' → logprob: -17.256723403930664

Token 1454: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.000563042180147022
    2. 'c' → logprob: -7.750563144683838
    3. ',' → logprob: -9.25056266784668
    4. ',r' → logprob: -10.87556266784668
    5. '+' → logprob: -11.37556266784668
    6. ' ,' → logprob: -13.25056266784668
    7. '0' → logprob: -13.37556266784668
    8. '1' → logprob: -14.12556266784668
    9. '-' → logprob: -15.50056266784668
    10. ')' → logprob: -15.75056266784668

Token 1455: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00014454191841650754
    2. '1' → logprob: -9.000144958496094
    3. ' +' → logprob: -11.500144958496094
    4. '+
' → logprob: -13.250144958496094
    5. '2' → logprob: -13.500144958496094
    6. '0' → logprob: -13.500144958496094
    7. '+c' → logprob: -13.500144958496094
    8. '   ' → logprob: -14.000144958496094
    9. ')' → logprob: -14.250144958496094
    10. ',' → logprob: -14.375144958496094

Token 1456: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019556330516934395
    2. '2' → logprob: -6.251955509185791
    3. '
' → logprob: -11.50195598602295
    4. '0' → logprob: -12.25195598602295
    5. '+' → logprob: -12.37695598602295
    6. ' ' → logprob: -12.87695598602295
    7. '```' → logprob: -14.06445598602295
    8. '   ' → logprob: -14.12695598602295
    9. '-' → logprob: -14.18945598602295
    10. ')' → logprob: -14.25195598602295

Token 1457: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2578859031200409
    2. ')' → logprob: -1.5078859329223633
    3. '       ' → logprob: -5.132885932922363
    4. ')return' → logprob: -11.132885932922363
    5. ')
' → logprob: -11.382885932922363
    6. ')`
' → logprob: -12.007885932922363
    7. '   ' → logprob: -13.132885932922363
    8. ' )
' → logprob: -13.757885932922363
    9. '               ' → logprob: -14.007885932922363
    10. '))
' → logprob: -14.382885932922363

Token 1458: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1459: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004562088288366795
    2. '	return' → logprob: -5.629561901092529
    3. 'return' (adapté à ' return') → logprob: -7.629561901092529
    4. '       ' → logprob: -7.754561901092529
    5. '
' → logprob: -10.754562377929688
    6. ' return' → logprob: -11.379562377929688
    7. '    
' → logprob: -11.629562377929688
    8. '	   ' → logprob: -13.379562377929688
    9. '	
' → logprob: -14.879562377929688
    10. '```' → logprob: -15.004562377929688

Token 1460: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0002613358374219388
    2. ' res' → logprob: -8.250261306762695
    3. '	res' → logprob: -18.750261306762695
    4. '[' → logprob: -21.500261306762695
    5. '   ' → logprob: -21.875261306762695
    6. '(res' → logprob: -22.000261306762695
    7. '$res' → logprob: -22.750261306762695
    8. '_res' → logprob: -23.125261306762695
    9. ' ' → logprob: -23.250261306762695
    10. 're' → logprob: -23.500261306762695

Token 1461: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6304522752761841
    2. '<|end|>' → logprob: -1.005452275276184
    3. 'def' → logprob: -2.7554521560668945
    4. '
' → logprob: -3.7554521560668945
    5. '```' → logprob: -4.7554521560668945
    6. '<|end|>' → logprob: -5.8804521560668945
    7. '    
' → logprob: -6.8804521560668945
    8. ')' → logprob: -7.2554521560668945
    9. '#' → logprob: -7.8804521560668945
    10. '       ' → logprob: -8.380452156066895

Token 1462: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31860703229904175
    2. '   ' → logprob: -1.5686070919036865
    3. '
' → logprob: -3.0686070919036865
    4. '#' → logprob: -4.568606853485107
    5. 'from' → logprob: -5.318606853485107
    6. '```' → logprob: -6.568606853485107
    7. 'return' → logprob: -8.068607330322266
    8. '    
' → logprob: -8.068607330322266
    9. 'visited' → logprob: -8.568607330322266
    10. 'pawn' → logprob: -8.943607330322266

Token 1463: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03822933882474899
    2. '#' (adapté à ' #') → logprob: -3.91322922706604
    3. 'visited' → logprob: -4.663229465484619
    4. '   ' → logprob: -5.663229465484619
    5. 'from' → logprob: -6.538229465484619
    6. '
' → logprob: -6.913229465484619
    7. 'queue' → logprob: -7.038229465484619
    8. 'pawn' → logprob: -7.038229465484619
    9. 'return' → logprob: -9.163228988647461
    10. 'p' → logprob: -9.913228988647461

Token 1464: ' Paw' (ID: 69254)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9335312843322754
    2. 'visited' → logprob: -1.0585312843322754
    3. '#' → logprob: -1.6835312843322754
    4. 'from' → logprob: -3.0585312843322754
    5. '   ' → logprob: -4.933531284332275
    6. 'pawn' → logprob: -5.183531284332275
    7. 'queue' → logprob: -5.433531284332275
    8. 'seen' → logprob: -6.183531284332275
    9. 'return' → logprob: -6.308531284332275
    10. 'initial' → logprob: -6.558531284332275

Token 1465: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.0007206532754935324
    2. 'n' → logprob: -7.250720500946045
    3. 'nts' → logprob: -12.125720977783203
    4. 'ons' → logprob: -12.250720977783203
    5. 'def' → logprob: -16.000720977783203
    6. 'nds' → logprob: -16.875720977783203
    7. 'ms' → logprob: -17.125720977783203
    8. 'wn' → logprob: -17.125720977783203
    9. '   ' → logprob: -17.250720977783203
    10. '#' → logprob: -18.000720977783203

Token 1466: ' can' (ID: 665)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.2616923153400421
    2. 'def' → logprob: -1.8866922855377197
    3. 'moves' → logprob: -3.3866922855377197
    4. '#' → logprob: -4.011692523956299
    5. '_positions' → logprob: -4.386692523956299
    6. '   ' → logprob: -5.511692523956299
    7. ' moves' → logprob: -5.761692523956299
    8. '
' → logprob: -5.761692523956299
    9. '_possible' → logprob: -7.136692523956299
    10. 'positions' → logprob: -7.511692523956299

Token 1467: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.39231497049331665
    2. 'move' → logprob: -1.2673149108886719
    3. '_move' → logprob: -3.642314910888672
    4. 'def' → logprob: -5.267314910888672
    5. '_moves' → logprob: -5.642314910888672
    6. '_positions' → logprob: -6.517314910888672
    7. '.move' → logprob: -6.642314910888672
    8. '   ' → logprob: -7.017314910888672
    9. ')' → logprob: -7.142314910888672
    10. 'moves' → logprob: -7.767314910888672

Token 1468: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5888078808784485
    2. 'def' → logprob: -1.0888078212738037
    3. '(r' → logprob: -2.7138078212738037
    4. ' in' → logprob: -4.838808059692383
    5. '
' → logprob: -4.963808059692383
    6. 'for' → logprob: -5.213808059692383
    7. 'in' → logprob: -5.213808059692383
    8. '#' → logprob: -6.463808059692383
    9. ' for' → logprob: -6.463808059692383
    10. 'from' → logprob: -6.463808059692383

Token 1469: ' adjacent' (ID: 39069)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.409547209739685
    2. '(True' → logprob: -1.659547209739685
    3. ' they' → logprob: -2.1595473289489746
    4. 'the' → logprob: -2.5345473289489746
    5. 'they' → logprob: -2.5345473289489746
    6. ' True' → logprob: -2.9095473289489746
    7. ' the' → logprob: -3.1595473289489746
    8. 'def' → logprob: -3.7845473289489746
    9. 'p' → logprob: -3.7845473289489746
    10. ' adjacent' → logprob: -4.034547328948975

Token 1470: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.396432876586914
    2. '(r' → logprob: -1.396432876586914
    3. '(' → logprob: -1.646432876586914
    4. ' in' → logprob: -2.146432876586914
    5. ' (' → logprob: -3.146432876586914
    6. ' to' → logprob: -3.646432876586914
    7. ',' → logprob: -3.771432876586914
    8. 'cells' → logprob: -3.771432876586914
    9. ' cells' → logprob: -4.146432876586914
    10. 'r' → logprob: -4.146432876586914

Token 1471: ' an' (ID: 448)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.6263140439987183
    2. 'open' → logprob: -0.8763140439987183
    3. 'a' → logprob: -3.626314163208008
    4. 'one' → logprob: -4.376314163208008
    5. ' an' → logprob: -5.751314163208008
    6. 'the' → logprob: -5.876314163208008
    7. 'two' → logprob: -6.501314163208008
    8. '.' → logprob: -7.751314163208008
    9. 'empty' → logprob: -8.001314163208008
    10. ' open' → logprob: -8.126314163208008

Token 1472: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.001117711653932929
    2. ' open' → logprob: -6.876117706298828
    3. 'empty' → logprob: -9.876117706298828
    4. '	open' → logprob: -11.501117706298828
    5. '_' → logprob: -11.751117706298828
    6. '=open' → logprob: -12.876117706298828
    7. '_open' → logprob: -13.126117706298828
    8. '(open' → logprob: -13.751117706298828
    9. ' ' → logprob: -13.751117706298828
    10. 'op' → logprob: -14.001117706298828

Token 1473: ' square' (ID: 13749)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0069714784622192
    2. '_s' → logprob: -1.0069714784622192
    3. 'space' → logprob: -2.8819713592529297
    4. 'square' → logprob: -2.8819713592529297
    5. '(' → logprob: -3.3819713592529297
    6. ')' → logprob: -3.5069713592529297
    7. 's' → logprob: -3.6319713592529297
    8. '_square' → logprob: -3.8819713592529297
    9. ' (' → logprob: -4.25697135925293
    10. ' square' → logprob: -4.75697135925293

Token 1474: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5521376132965088
    2. 'def' → logprob: -0.9271376132965088
    3. '
' → logprob: -3.677137613296509
    4. '#' → logprob: -7.42713737487793
    5. ' def' → logprob: -7.42713737487793
    6. ' and' → logprob: -7.55213737487793
    7. 'and' → logprob: -8.30213737487793
    8. ',' → logprob: -8.55213737487793
    9. ',
' → logprob: -8.92713737487793
    10. '    
' → logprob: -9.05213737487793

Token 1475: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1336584836244583
    2. 'def' → logprob: -2.3836584091186523
    3. 'for' → logprob: -3.7586584091186523
    4. '
' → logprob: -5.633658409118652
    5. ' for' → logprob: -5.633658409118652
    6. '       ' → logprob: -7.258658409118652
    7. '    
' → logprob: -7.758658409118652
    8. '#' → logprob: -8.383658409118652
    9. 'Next' → logprob: -8.508658409118652
    10. '```' → logprob: -9.133658409118652

Token 1476: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4631175100803375
    2. '#' (adapté à ' #') → logprob: -1.5881174802780151
    3. 'def' → logprob: -1.8381174802780151
    4. '
' → logprob: -5.963117599487305
    5. 'Next' → logprob: -6.463117599487305
    6. '       ' → logprob: -7.463117599487305
    7. ' #' → logprob: -7.713117599487305
    8. ' def' → logprob: -7.963117599487305
    9. 'for' → logprob: -8.463117599487305
    10. 'from' → logprob: -8.838117599487305

Token 1477: ' Valid' (ID: 13888)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7270693778991699
    2. '   ' → logprob: -0.9770693778991699
    3. '#' → logprob: -2.10206937789917
    4. '
' → logprob: -4.47706937789917
    5. 'for' → logprob: -5.22706937789917
    6. ' def' → logprob: -8.102069854736328
    7. '    
' → logprob: -8.477069854736328
    8. ' for' → logprob: -8.602069854736328
    9. 'For' → logprob: -8.852069854736328
    10. ' #' → logprob: -9.352069854736328

Token 1478: ' pawn' (ID: 112226)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.05242253094911575
    2. 'pawn' → logprob: -3.302422523498535
    3. '#' → logprob: -5.552422523498535
    4. 'def' → logprob: -5.552422523498535
    5. 'p' → logprob: -6.177422523498535
    6. '_moves' → logprob: -6.302422523498535
    7. 'positions' → logprob: -6.802422523498535
    8. 'cells' → logprob: -7.802422523498535
    9. ' moves' → logprob: -7.802422523498535
    10. 'neighbors' → logprob: -8.552422523498535

Token 1479: ' moves' (ID: 19523)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.07271791249513626
    2. '_positions' → logprob: -2.8227179050445557
    3. ' moves' → logprob: -5.447718143463135
    4. 'moves' → logprob: -5.822718143463135
    5. 's' → logprob: -6.947718143463135
    6. ')' → logprob: -7.197718143463135
    7. ' positions' → logprob: -7.697718143463135
    8. 'positions' → logprob: -7.947718143463135
    9. '_move' → logprob: -8.572717666625977
    10. '_' → logprob: -8.947717666625977

Token 1480: ':' (ID: 25)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.0617014169692993
    2. '=' → logprob: -1.9367014169692993
    3. ' =' → logprob: -2.0617012977600098
    4. '   ' → logprob: -2.5617012977600098
    5. 'def' → logprob: -2.6867012977600098
    6. ':
' → logprob: -3.0617012977600098
    7. 'are' → logprob: -3.1867012977600098
    8. ':' → logprob: -3.1867012977600098
    9. '(r' → logprob: -3.1867012977600098
    10. 'from' → logprob: -3.6867012977600098

Token 1481: ' pawn' (ID: 112226)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3406789302825928
    2. ' for' → logprob: -1.4656789302825928
    3. '   ' → logprob: -3.2156789302825928
    4. '#' → logprob: -4.840679168701172
    5. 'def' → logprob: -5.340679168701172
    6. '
' → logprob: -6.340679168701172
    7. 'from' → logprob: -7.590679168701172
    8. '       ' → logprob: -8.090679168701172
    9. ' #' → logprob: -8.215679168701172
    10. 'r' → logprob: -8.590679168701172

Token 1482: ' moves' (ID: 19523)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.7947477102279663
    2. '_moves' → logprob: -1.1697477102279663
    3. 's' → logprob: -2.794747829437256
    4. '_neighbors' → logprob: -3.294747829437256
    5. 'moves' → logprob: -3.419747829437256
    6. 'positions' → logprob: -3.794747829437256
    7. '   ' → logprob: -4.044747829437256
    8. '_pos' → logprob: -4.669747829437256
    9. 'adj' → logprob: -4.794747829437256
    10. 'for' → logprob: -5.044747829437256

Token 1483: ' into' (ID: 1511)
  Prédit: ' into'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' into' → logprob: -0.621712327003479
    2. 'into' → logprob: -1.621712327003479
    3. ' to' → logprob: -1.996712327003479
    4. 'to' → logprob: -2.4967122077941895
    5. '=' → logprob: -4.3717122077941895
    6. ' =' → logprob: -4.6217122077941895
    7. ' onto' → logprob: -4.7467122077941895
    8. '_to' → logprob: -5.9967122077941895
    9. 'onto' → logprob: -5.9967122077941895
    10. 'tow' → logprob: -6.1217122077941895

Token 1484: ' one' (ID: 1001)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.24737204611301422
    2. 'one' → logprob: -1.997372031211853
    3. 'the' → logprob: -3.2473721504211426
    4. 'open' → logprob: -4.122372150421143
    5. ' an' → logprob: -4.497372150421143
    6. ' one' → logprob: -4.747372150421143
    7. 'adj' → logprob: -5.372372150421143
    8. 'a' → logprob: -6.872372150421143
    9. 'that' → logprob: -7.122372150421143
    10. 'any' → logprob: -7.247372150421143

Token 1485: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.4459465444087982
    2. 'of' → logprob: -1.0709465742111206
    3. ' adjacent' → logprob: -4.94594669342041
    4. '(' → logprob: -5.44594669342041
    5. ' (' → logprob: -6.44594669342041
    6. 'adj' → logprob: -6.82094669342041
    7. 'space' → logprob: -7.19594669342041
    8. ' ' → logprob: -7.57094669342041
    9. 'open' → logprob: -7.94594669342041
    10. '_' → logprob: -8.82094669342041

Token 1486: ' two' (ID: 1920)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.21151843667030334
    2. ' the' → logprob: -1.836518406867981
    3. ' its' → logprob: -3.9615185260772705
    4. 'adj' → logprob: -4.961518287658691
    5. ' adjacent' → logprob: -5.961518287658691
    6. 'its' → logprob: -6.836518287658691
    7. ' four' → logprob: -6.961518287658691
    8. 'open' → logprob: -8.086518287658691
    9. ' ' → logprob: -8.961518287658691
    10. ' open' → logprob: -9.711518287658691

Token 1487: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.20999155938625336
    2. ' open' → logprob: -1.7099915742874146
    3. ' adjacent' → logprob: -5.334991455078125
    4. 'adj' → logprob: -6.834991455078125
    5. ' ' → logprob: -7.709991455078125
    6. '(open' → logprob: -7.834991455078125
    7. '```' → logprob: -8.209991455078125
    8. ' (' → logprob: -8.584991455078125
    9. '(' → logprob: -8.834991455078125
    10. 'spaces' → logprob: -8.959991455078125

Token 1488: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0861138179898262
    2. ' squares' → logprob: -3.211113929748535
    3. 's' → logprob: -3.336113929748535
    4. ')' → logprob: -6.211113929748535
    5. '_spaces' → logprob: -6.211113929748535
    6. 'spaces' → logprob: -7.086113929748535
    7. '_square' → logprob: -7.836113929748535
    8. 'square' → logprob: -8.086113929748535
    9. '(' → logprob: -8.336113929748535
    10. ' ' → logprob: -8.836113929748535

Token 1489: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026074422523379326
    2. '
' → logprob: -3.7760744094848633
    3. '    
' → logprob: -7.026074409484863
    4. 'def' → logprob: -7.151074409484863
    5. '       ' → logprob: -8.026074409484863
    6. '  
' → logprob: -8.776074409484863
    7. '#' → logprob: -9.026074409484863
    8. '           ' → logprob: -9.776074409484863
    9. '<|end|>' → logprob: -9.901074409484863
    10. '<|end|>' → logprob: -9.901074409484863

Token 1490: ' adjacent' (ID: 39069)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2161481380462646
    2. 'pawn' → logprob: -1.2161481380462646
    3. 'that' → logprob: -2.0911481380462646
    4. ' that' → logprob: -2.2161481380462646
    5. ' the' → logprob: -2.8411481380462646
    6. '(' → logprob: -3.5911481380462646
    7. 'open' → logprob: -3.9661481380462646
    8. 'adj' → logprob: -3.9661481380462646
    9. ' adjacent' → logprob: -4.716148376464844
    10. ' open' → logprob: -5.091148376464844

Token 1491: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1086227223277092
    2. ' to' → logprob: -3.8586227893829346
    3. ' (' → logprob: -3.9836227893829346
    4. ',' → logprob: -4.4836225509643555
    5. '(' → logprob: -4.7336225509643555
    6. 'to' → logprob: -4.8586225509643555
    7. '(p' → logprob: -5.6086225509643555
    8. 'positions' → logprob: -5.7336225509643555
    9. '
' → logprob: -5.8586225509643555
    10. ',
' → logprob: -5.8586225509643555

Token 1492: 'up' (ID: 817)
  Prédit: 'pawn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pawn' → logprob: -0.833258867263794
    2. ')' → logprob: -1.833258867263794
    3. '(' → logprob: -2.208258867263794
    4. ' (' → logprob: -2.333258867263794
    5. '(r' → logprob: -2.458258867263794
    6. '(p' → logprob: -3.583258867263794
    7. ' to' → logprob: -4.208258628845215
    8. ' in' → logprob: -4.708258628845215
    9. '
' → logprob: -4.833258628845215
    10. '(True' → logprob: -5.208258628845215

Token 1493: '/down' (ID: 170878)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0073425304144620895
    2. ',-' → logprob: -6.007342338562012
    3. ',
' → logprob: -6.632342338562012
    4. '   ' → logprob: -6.757342338562012
    5. ',left' → logprob: -8.007342338562012
    6. '),' → logprob: -8.257342338562012
    7. '       ' → logprob: -8.257342338562012
    8. '),(' → logprob: -8.382342338562012
    9. ',right' → logprob: -8.757342338562012
    10. ',(' → logprob: -8.882342338562012

Token 1494: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.6786845326423645
    2. '),(' → logprob: -1.1786844730377197
    3. ',left' → logprob: -2.0536844730377197
    4. ',' → logprob: -3.0536844730377197
    5. ' or' → logprob: -6.053684711456299
    6. ',right' → logprob: -6.553684711456299
    7. '/(' → logprob: -6.678684711456299
    8. '```' → logprob: -7.178684711456299
    9. ')/(' → logprob: -7.303684711456299
    10. ')' → logprob: -7.303684711456299

Token 1495: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0005610156804323196
    2. ' left' → logprob: -7.500561237335205
    3. '-left' → logprob: -13.000560760498047
    4. 'right' → logprob: -13.250560760498047
    5. ',left' → logprob: -13.250560760498047
    6. '1' → logprob: -14.125560760498047
    7. 'lef' → logprob: -14.250560760498047
    8. 'down' → logprob: -15.500560760498047
    9. '```' → logprob: -15.500560760498047
    10. '_left' → logprob: -15.875560760498047

Token 1496: '/right' (ID: 199186)
  Prédit: '/right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/right' → logprob: -0.0037890311796218157
    2. '/' → logprob: -6.003788948059082
    3. ',right' → logprob: -6.753788948059082
    4. '```' → logprob: -9.378788948059082
    5. ',' → logprob: -11.378788948059082
    6. ')/(' → logprob: -11.503788948059082
    7. '_right' → logprob: -11.878788948059082
    8. 'or' → logprob: -12.128788948059082
    9. '/up' → logprob: -12.378788948059082
    10. '/or' → logprob: -12.503788948059082

Token 1497: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03032946214079857
    2. ')
' → logprob: -4.15532922744751
    3. '),' → logprob: -5.28032922744751
    4. ' to' → logprob: -5.53032922744751
    5. 'to' → logprob: -6.03032922744751
    6. ',' → logprob: -6.90532922744751
    7. '):
' → logprob: -7.15532922744751
    8. ').' → logprob: -7.65532922744751
    9. ' )' → logprob: -9.280329704284668
    10. '),
' → logprob: -10.030329704284668

Token 1498: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006158438976854086
    2. '
' → logprob: -5.881158351898193
    3. 'def' → logprob: -6.506158351898193
    4. '       ' → logprob: -7.506158351898193
    5. ' for' → logprob: -7.881158351898193
    6. '#' → logprob: -8.506158828735352
    7. 'for' → logprob: -8.756158828735352
    8. '    
' → logprob: -8.881158828735352
    9. '           ' → logprob: -9.006158828735352
    10. '  
' → logprob: -10.131158828735352

Token 1499: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055263057351112366
    2. '       ' → logprob: -4.180263042449951
    3. '
' → logprob: -4.180263042449951
    4. 'def' → logprob: -4.430263042449951
    5. '           ' → logprob: -5.680263042449951
    6. 'for' → logprob: -6.180263042449951
    7. ' for' → logprob: -6.430263042449951
    8. '               ' → logprob: -6.805263042449951
    9. '                   ' → logprob: -7.180263042449951
    10. '    
' → logprob: -7.180263042449951

Token 1500: ' When' (ID: 4296)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12269207090139389
    2. 'def' → logprob: -2.622692108154297
    3. 'for' → logprob: -3.497692108154297
    4. '
' → logprob: -5.622692108154297
    5. ' for' → logprob: -5.872692108154297
    6. '       ' → logprob: -5.872692108154297
    7. '           ' → logprob: -6.622692108154297
    8. '#' → logprob: -7.497692108154297
    9. '               ' → logprob: -7.497692108154297
    10. '                   ' → logprob: -8.372692108154297

Token 1501: ' the' (ID: 290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6845277547836304
    2. 'pawn' → logprob: -0.8095277547836304
    3. 'p' → logprob: -3.68452787399292
    4. ' a' → logprob: -3.93452787399292
    5. 'moving' → logprob: -6.18452787399292
    6. ' pawn' → logprob: -6.43452787399292
    7. 'the' → logprob: -7.55952787399292
    8. '   ' → logprob: -7.68452787399292
    9. ' moving' → logprob: -7.93452787399292
    10. ' paw' → logprob: -8.434527397155762

Token 1502: ' pawn' (ID: 112226)
  Prédit: 'pawn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pawn' → logprob: -0.0006500058807432652
    2. ' pawn' → logprob: -7.875649929046631
    3. 'p' → logprob: -8.625650405883789
    4. '#' → logprob: -10.625650405883789
    5. 'def' → logprob: -10.875650405883789
    6. '   ' → logprob: -11.375650405883789
    7. 'paw' → logprob: -11.875650405883789
    8. '
' → logprob: -12.250650405883789
    9. 'open' → logprob: -12.250650405883789
    10. ' ' → logprob: -12.625650405883789

Token 1503: ' moves' (ID: 19523)
  Prédit: ' moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moves' → logprob: -0.4300052225589752
    2. 'moves' → logprob: -1.0550051927566528
    3. '_moves' → logprob: -7.305005073547363
    4. ' tries' → logprob: -8.805005073547363
    5. '
' → logprob: -9.180005073547363
    6. ' move' → logprob: -9.930005073547363
    7. 's' → logprob: -10.055005073547363
    8. ' is' → logprob: -10.180005073547363
    9. ' slides' → logprob: -10.305005073547363
    10. 'm' → logprob: -10.555005073547363

Token 1504: ' into' (ID: 1511)
  Prédit: 'into'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'into' → logprob: -0.169474259018898
    2. ' into' → logprob: -1.9194742441177368
    3. 'to' → logprob: -5.169474124908447
    4. ' to' → logprob: -6.794474124908447
    5. 'onto' → logprob: -6.794474124908447
    6. '   ' → logprob: -8.169474601745605
    7. 'int' → logprob: -8.419474601745605
    8. ',' → logprob: -8.544474601745605
    9. 'tow' → logprob: -8.669474601745605
    10. ' onto' → logprob: -9.044474601745605

Token 1505: ' an' (ID: 448)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.27999722957611084
    2. 'the' → logprob: -2.1549973487854004
    3. ' an' → logprob: -3.0299973487854004
    4. 'one' → logprob: -3.0299973487854004
    5. ' one' → logprob: -4.4049973487854
    6. ' the' → logprob: -4.7799973487854
    7. 'open' → logprob: -5.0299973487854
    8. 'that' → logprob: -5.7799973487854
    9. 'a' → logprob: -7.5299973487854
    10. ' that' → logprob: -7.6549973487854

Token 1506: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.39143964648246765
    2. ' open' → logprob: -1.14143967628479
    3. ' adjacent' → logprob: -5.516439437866211
    4. '	open' → logprob: -8.141439437866211
    5. 'adj' → logprob: -8.641439437866211
    6. ' ' → logprob: -10.641439437866211
    7. ' ' → logprob: -11.141439437866211
    8. '(open' → logprob: -11.766439437866211
    9. '_open' → logprob: -11.891439437866211
    10. '(' → logprob: -12.516439437866211

Token 1507: ' square' (ID: 13749)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7124453783035278
    2. 'square' → logprob: -1.4624453783035278
    3. '_s' → logprob: -1.9624453783035278
    4. 'space' → logprob: -2.7124452590942383
    5. '_square' → logprob: -2.9624452590942383
    6. ' square' → logprob: -4.587445259094238
    7. ' _' → logprob: -6.087445259094238
    8. 's' → logprob: -6.337445259094238
    9. ''' → logprob: -6.587445259094238
    10. ' ' → logprob: -6.837445259094238

Token 1508: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0754251703619957
    2. ',
' → logprob: -2.700425148010254
    3. ':' → logprob: -6.575425148010254
    4. '(' → logprob: -6.575425148010254
    5. ':
' → logprob: -6.950425148010254
    6. ' (' → logprob: -7.200425148010254
    7. ' ,' → logprob: -8.700425148010254
    8. '(
' → logprob: -8.950425148010254
    9. '   ' → logprob: -9.325425148010254
    10. '(position' → logprob: -9.950425148010254

Token 1509: ' the' (ID: 290)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.24803411960601807
    2. 'the' → logprob: -1.873034119606018
    3. '   ' → logprob: -2.8730340003967285
    4. 'pawn' → logprob: -5.9980340003967285
    5. 'old' → logprob: -6.3730340003967285
    6. ' the' → logprob: -6.8730340003967285
    7. 'open' → logprob: -6.9980340003967285
    8. 'new' → logprob: -6.9980340003967285
    9. '       ' → logprob: -7.3730340003967285
    10. '           ' → logprob: -7.4980340003967285

Token 1510: ' open' (ID: 2494)
  Prédit: 'pawn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pawn' → logprob: -0.029360344633460045
    2. 'open' → logprob: -4.529360294342041
    3. 'old' → logprob: -4.779360294342041
    4. '#' → logprob: -5.154360294342041
    5. 'previous' → logprob: -6.279360294342041
    6. 'prev' → logprob: -6.654360294342041
    7. 'original' → logprob: -8.2793607711792
    8. 'p' → logprob: -8.7793607711792
    9. ' pawn' → logprob: -9.7793607711792
    10. 'new' → logprob: -9.9043607711792

Token 1511: ' square' (ID: 13749)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.05083427578210831
    2. 's' → logprob: -3.9258341789245605
    3. '_' → logprob: -4.3008341789245605
    4. '1' → logprob: -5.1758341789245605
    5. 'square' → logprob: -5.1758341789245605
    6. '_square' → logprob: -6.0508341789245605
    7. 'space' → logprob: -7.3008341789245605
    8. ')' → logprob: -7.9258341789245605
    9. '_spaces' → logprob: -8.300834655761719
    10. '```' → logprob: -8.300834655761719

Token 1512: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -1.0604923963546753
    2. ' becomes' → logprob: -1.1854923963546753
    3. ' moves' → logprob: -1.9354923963546753
    4. 'be' → logprob: -3.060492515563965
    5. 's' → logprob: -3.185492515563965
    6. '```' → logprob: -4.185492515563965
    7. ' is' → logprob: -4.310492515563965
    8. 'position' → logprob: -4.435492515563965
    9. 'positions' → logprob: -4.435492515563965
    10. ''s' → logprob: -4.685492515563965

Token 1513: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.026841843500733376
    2. 'into' → logprob: -4.026841640472412
    3. ' to' → logprob: -4.901841640472412
    4. ' into' → logprob: -7.276841640472412
    5. 'onto' → logprob: -8.40184211730957
    6. '_to' → logprob: -9.40184211730957
    7. '   ' → logprob: -9.65184211730957
    8. 'from' → logprob: -9.90184211730957
    9. '	to' → logprob: -11.15184211730957
    10. '    ' → logprob: -11.27684211730957

Token 1514: ' the' (ID: 290)
  Prédit: 'pawn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pawn' → logprob: -0.018551161512732506
    2. 'the' → logprob: -4.018551349639893
    3. ' the' → logprob: -8.518550872802734
    4. ' pawn' → logprob: -9.143550872802734
    5. 'paw' → logprob: -10.018550872802734
    6. 'p' → logprob: -10.268550872802734
    7. '   ' → logprob: -12.018550872802734
    8. ' its' → logprob: -12.268550872802734
    9. 'its' → logprob: -13.268550872802734
    10. '(p' → logprob: -14.268550872802734

Token 1515: ' previous' (ID: 5880)
  Prédit: 'pawn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pawn' → logprob: -0.008290794678032398
    2. 'previous' → logprob: -5.383290767669678
    3. 'position' → logprob: -6.008290767669678
    4. 'old' → logprob: -7.883290767669678
    5. 'p' → logprob: -8.133291244506836
    6. 'paw' → logprob: -8.383291244506836
    7. ' pawn' → logprob: -9.133291244506836
    8. 'former' → logprob: -9.508291244506836
    9. 'current' → logprob: -9.758291244506836
    10. 'vac' → logprob: -10.883291244506836

Token 1516: ' pawn' (ID: 112226)
  Prédit: 'pawn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pawn' → logprob: -0.018600542098283768
    2. 'position' → logprob: -4.2686004638671875
    3. ' pawn' → logprob: -5.8936004638671875
    4. 'p' → logprob: -7.2686004638671875
    5. ' position' → logprob: -7.2686004638671875
    6. '(p' → logprob: -9.643600463867188
    7. ' (' → logprob: -10.018600463867188
    8. 'pos' → logprob: -10.018600463867188
    9. '(' → logprob: -10.393600463867188
    10. 'space' → logprob: -11.018600463867188

Token 1517: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.004996547941118479
    2. ' position' → logprob: -5.7549967765808105
    3. 's' → logprob: -7.5049967765808105
    4. ''s' → logprob: -7.5049967765808105
    5. '_position' → logprob: -8.129996299743652
    6. 'pos' → logprob: -9.004996299743652
    7. '   ' → logprob: -9.504996299743652
    8. 'osition' → logprob: -10.379996299743652
    9. '	position' → logprob: -10.379996299743652
    10. ')' → logprob: -10.504996299743652

Token 1518: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12447947263717651
    2. '
' → logprob: -2.2494795322418213
    3. 'def' → logprob: -5.124479293823242
    4. '    
' → logprob: -5.499479293823242
    5. '  
' → logprob: -7.749479293823242
    6. '       ' → logprob: -8.124479293823242
    7. '\n' → logprob: -9.124479293823242
    8. '\' → logprob: -9.499479293823242
    9. 'for' → logprob: -9.499479293823242
    10. 'tokens' → logprob: -9.624479293823242

Token 1519: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.35470351576805115
    2. '   ' → logprob: -1.6047035455703735
    3. '```' → logprob: -3.979703426361084
    4. '    
' → logprob: -4.354703426361084
    5. '
' → logprob: -4.729703426361084
    6. '  
' → logprob: -4.854703426361084
    7. '\' → logprob: -5.104703426361084
    8. 'token' → logprob: -5.229703426361084
    9. '#' → logprob: -5.354703426361084
    10. '(' → logprob: -5.479703426361084

Token 1520: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2504918873310089
    2. 'def' → logprob: -1.8754918575286865
    3. '
' → logprob: -3.3754918575286865
    4. 'for' → logprob: -4.625492095947266
    5. ' for' → logprob: -4.750492095947266
    6. '       ' → logprob: -5.500492095947266
    7. '    
' → logprob: -6.000492095947266
    8. '           ' → logprob: -6.375492095947266
    9. '               ' → logprob: -6.500492095947266
    10. '                   ' → logprob: -6.875492095947266

Token 1521: ' Similarly' (ID: 65037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2839883267879486
    2. 'def' → logprob: -1.783988356590271
    3. '
' → logprob: -2.9089882373809814
    4. 'for' → logprob: -4.0339884757995605
    5. '#' → logprob: -5.4089884757995605
    6. '    
' → logprob: -6.9089884757995605
    7. '```' → logprob: -8.283987998962402
    8. 'pawn' → logprob: -8.408987998962402
    9. 'moves' → logprob: -8.408987998962402
    10. 'For' → logprob: -9.158987998962402

Token 1522: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10772711783647537
    2. 'def' → logprob: -3.10772705078125
    3. ' for' → logprob: -3.73272705078125
    4. 'for' → logprob: -4.73272705078125
    5. '
' → logprob: -4.98272705078125
    6. '#' → logprob: -5.10772705078125
    7. '           ' → logprob: -5.48272705078125
    8. '       ' → logprob: -5.73272705078125
    9. ' to' → logprob: -6.48272705078125
    10. ',' → logprob: -6.85772705078125

Token 1523: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.15962821245193481
    2. 'the' → logprob: -2.15962815284729
    3. 'pawn' → logprob: -4.784628391265869
    4. 'def' → logprob: -4.909628391265869
    5. ' king' → logprob: -5.409628391265869
    6. 'open' → logprob: -5.784628391265869
    7. '#' → logprob: -5.909628391265869
    8. 'p' → logprob: -6.159628391265869
    9. 'each' → logprob: -6.784628391265869
    10. ' the' → logprob: -6.784628391265869

Token 1524: ' move' (ID: 5275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04010356217622757
    2. 'for' → logprob: -4.165103435516357
    3. 'def' → logprob: -4.665103435516357
    4. '
' → logprob: -4.790103435516357
    5. ' for' → logprob: -6.040103435516357
    6. '    
' → logprob: -6.415103435516357
    7. '#' → logprob: -6.790103435516357
    8. '       ' → logprob: -8.915103912353516
    9. '  
' → logprob: -9.290103912353516
    10. 'moves' → logprob: -9.290103912353516

Token 1525: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03435145318508148
    2. 'def' → logprob: -3.534351348876953
    3. '
' → logprob: -5.784351348876953
    4. '#' → logprob: -7.534351348876953
    5. '    
' → logprob: -8.284351348876953
    6. '       ' → logprob: -8.534351348876953
    7. '<|end|>' → logprob: -8.534351348876953
    8. 'Next' → logprob: -9.909351348876953
    9. '```' → logprob: -10.034351348876953
    10. '<|end|>' → logprob: -10.409351348876953

Token 1526: ' when' (ID: 1261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11206144839525223
    2. '
' → logprob: -2.8620615005493164
    3. '#' → logprob: -3.7370615005493164
    4. '       ' → logprob: -4.612061500549316
    5. '    
' → logprob: -5.112061500549316
    6. '                   ' → logprob: -6.362061500549316
    7. '           ' → logprob: -6.737061500549316
    8. '               ' → logprob: -6.862061500549316
    9. ' #' → logprob: -6.862061500549316
    10. '```' → logprob: -6.987061500549316

Token 1527: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.08686820417642593
    2. 'the' → logprob: -2.8368682861328125
    3. ' king' → logprob: -4.3368682861328125
    4. ' the' → logprob: -5.2118682861328125
    5. 'a' → logprob: -5.8368682861328125
    6. 'moving' → logprob: -6.7118682861328125
    7. 'pawn' → logprob: -7.4618682861328125
    8. ' a' → logprob: -7.8368682861328125
    9. ' moving' → logprob: -7.9618682861328125
    10. 'it' → logprob: -8.461868286132812

Token 1528: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.14709270000457764
    2. ' moves' → logprob: -2.022092819213867
    3. 'slides' → logprob: -6.147092819213867
    4. '_moves' → logprob: -7.022092819213867
    5. ' slides' → logprob: -7.397092819213867
    6. '   ' → logprob: -8.272092819213867
    7. 'move' → logprob: -8.272092819213867
    8. ' move' → logprob: -9.647092819213867
    9. 's' → logprob: -10.647092819213867
    10. '
' → logprob: -10.772092819213867

Token 1529: ' into' (ID: 1511)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8840153217315674
    2. 'moves' → logprob: -1.6340153217315674
    3. ' into' → logprob: -2.1340153217315674
    4. 'into' → logprob: -2.2590153217315674
    5. 'slides' → logprob: -3.0090153217315674
    6. '   ' → logprob: -3.3840153217315674
    7. ' moves' → logprob: -4.134015083312988
    8. 'to' → logprob: -4.134015083312988
    9. ' slides' → logprob: -4.259015083312988
    10. ' to' → logprob: -4.884015083312988

Token 1530: ' two' (ID: 1920)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6467787623405457
    2. 'open' → logprob: -1.1467788219451904
    3. 'an' → logprob: -2.5217788219451904
    4. 'a' → logprob: -3.7717788219451904
    5. ' the' → logprob: -4.396778583526611
    6. 'one' → logprob: -4.646778583526611
    7. ' open' → logprob: -4.896778583526611
    8. 'two' → logprob: -4.896778583526611
    9. 'that' → logprob: -5.271778583526611
    10. 'new' → logprob: -5.646778583526611

Token 1531: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.5723671317100525
    2. ' open' → logprob: -1.3223671913146973
    3. ' adjacent' → logprob: -2.0723671913146973
    4. 'adj' → logprob: -3.3223671913146973
    5. ' cells' → logprob: -6.072367191314697
    6. '
' → logprob: -6.197367191314697
    7. 'cells' → logprob: -6.947367191314697
    8. ' distinct' → logprob: -7.697367191314697
    9. ' ' → logprob: -8.447366714477539
    10. 'distinct' → logprob: -8.572366714477539

Token 1532: ' squares' (ID: 57269)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4313744008541107
    2. ' squares' → logprob: -1.431374430656433
    3. '_s' → logprob: -2.3063743114471436
    4. 'square' → logprob: -4.806374549865723
    5. 'spaces' → logprob: -7.181374549865723
    6. ')' → logprob: -7.431374549865723
    7. 'cells' → logprob: -7.556374549865723
    8. 'quares' → logprob: -7.931374549865723
    9. ' square' → logprob: -8.431374549865723
    10. '#' → logprob: -8.806374549865723

Token 1533: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10031116008758545
    2. '
' → logprob: -2.475311279296875
    3. 'def' → logprob: -5.350311279296875
    4. '    
' → logprob: -5.600311279296875
    5. '\n' → logprob: -7.725311279296875
    6. ':' → logprob: -8.225311279296875
    7. '  
' → logprob: -8.225311279296875
    8. '\' → logprob: -8.600311279296875
    9. '       ' → logprob: -8.600311279296875
    10. '#' → logprob: -9.100311279296875

Token 1534: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.2573084235191345
    2. '#' → logprob: -1.5073084831237793
    3. ' the' → logprob: -5.882308483123779
    4. '   ' → logprob: -6.507308483123779
    5. 'previous' → logprob: -7.257308483123779
    6. 'open' → logprob: -8.632308006286621
    7. '       ' → logprob: -10.132308006286621
    8. 'both' → logprob: -10.257308006286621
    9. '           ' → logprob: -11.007308006286621
    10. 'when' → logprob: -11.132308006286621

Token 1535: ' new' (ID: 620)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.4018772542476654
    2. 'previous' → logprob: -2.2768771648406982
    3. 'old' → logprob: -2.5268771648406982
    4. ' open' → logprob: -2.7768771648406982
    5. ' previous' → logprob: -3.2768771648406982
    6. ' old' → logprob: -4.526877403259277
    7. '#' → logprob: -4.651877403259277
    8. 'two' → logprob: -4.776877403259277
    9. 'prev' → logprob: -5.026877403259277
    10. ' two' → logprob: -5.651877403259277

Token 1536: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.7831158638000488
    2. 'position' → logprob: -1.5331158638000488
    3. 'king' → logprob: -2.158115863800049
    4. ' king' → logprob: -2.283115863800049
    5. 'positions' → logprob: -3.283115863800049
    6. ' open' → logprob: -3.658115863800049
    7. ' position' → logprob: -4.033115863800049
    8. 'state' → logprob: -4.283115863800049
    9. '_' → logprob: -5.533115863800049
    10. ' positions' → logprob: -6.033115863800049

Token 1537: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.3962632715702057
    2. 's' → logprob: -1.1462632417678833
    3. 'square' → logprob: -5.271263122558594
    4. '_square' → logprob: -6.771263122558594
    5. ' squares' → logprob: -6.896263122558594
    6. '1' → logprob: -7.021263122558594
    7. '_positions' → logprob: -8.146263122558594
    8. 'positions' → logprob: -8.771263122558594
    9. '_' → logprob: -8.771263122558594
    10. 'spaces' → logprob: -8.896263122558594

Token 1538: ' become' (ID: 5025)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.5645418167114258
    2. 'are' → logprob: -1.1895418167114258
    3. ' positions' → logprob: -3.814541816711426
    4. 'move' → logprob: -3.814541816711426
    5. 'set' → logprob: -3.939541816711426
    6. ' are' → logprob: -4.064541816711426
    7. 'be' → logprob: -4.439541816711426
    8. 's' → logprob: -5.064541816711426
    9. 'moves' → logprob: -5.314541816711426
    10. '#' → logprob: -5.314541816711426

Token 1539: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7106061577796936
    2. '{' → logprob: -0.9606061577796936
    3. 'king' → logprob: -3.085606098175049
    4. '(' → logprob: -3.335606098175049
    5. '(r' → logprob: -3.960606098175049
    6. 'previous' → logprob: -4.335606098175049
    7. 'set' → logprob: -5.835606098175049
    8. ' king' → logprob: -6.210606098175049
    9. ' {(' → logprob: -6.210606098175049
    10. '   ' → logprob: -7.335606098175049

Token 1540: ' old' (ID: 2890)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.6292263865470886
    2. 'old' → logprob: -1.3792264461517334
    3. 'previous' → logprob: -1.8792264461517334
    4. ' king' → logprob: -3.2542264461517334
    5. ' previous' → logprob: -4.754226207733154
    6. 'current' → logprob: -5.504226207733154
    7. ' old' → logprob: -5.629226207733154
    8. 'former' → logprob: -6.004226207733154
    9. 'prev' → logprob: -6.879226207733154
    10. '(old' → logprob: -7.129226207733154

Token 1541: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.7077471017837524
    2. ' king' → logprob: -0.7077471017837524
    3. 'open' → logprob: -4.457746982574463
    4. ' open' → logprob: -7.332746982574463
    5. 'position' → logprob: -7.457746982574463
    6. 'positions' → logprob: -7.582746982574463
    7. '(' → logprob: -7.957746982574463
    8. 'kr' → logprob: -8.832747459411621
    9. 'two' → logprob: -9.082747459411621
    10. ' positions' → logprob: -9.332747459411621

Token 1542: ' block' (ID: 4355)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.09087070822715759
    2. 'positions' → logprob: -3.0908706188201904
    3. '_positions' → logprob: -4.0908708572387695
    4. 'pos' → logprob: -4.2158708572387695
    5. ')' → logprob: -5.2158708572387695
    6. '   ' → logprob: -6.7158708572387695
    7. ' position' → logprob: -6.9658708572387695
    8. '_cells' → logprob: -7.4658708572387695
    9. '_position' → logprob: -7.7158708572387695
    10. ''s' → logprob: -8.34087085723877

Token 1543: ' cells' (ID: 11242)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029275493696331978
    2. '
' → logprob: -4.029275417327881
    3. 'def' → logprob: -5.279275417327881
    4. '    
' → logprob: -5.529275417327881
    5. '<|end|>' → logprob: -7.279275417327881
    6. '#' → logprob: -8.154275894165039
    7. '       ' → logprob: -8.279275894165039
    8. '  
' → logprob: -9.029275894165039
    9. ')' → logprob: -9.279275894165039
    10. '<|end|>' → logprob: -9.529275894165039

Token 1544: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18194778263568878
    2. 'def' → logprob: -2.056947708129883
    3. '
' → logprob: -3.431947708129883
    4. '    
' → logprob: -6.181947708129883
    5. '#' → logprob: -6.306947708129883
    6. '\n' → logprob: -7.306947708129883
    7. '\' → logprob: -7.931947708129883
    8. '```' → logprob: -8.306947708129883
    9. ':' → logprob: -8.806947708129883
    10. '       ' → logprob: -8.806947708129883

Token 1545: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2430424690246582
    2. 'def' → logprob: -1.6180424690246582
    3. '
' → logprob: -4.243042469024658
    4. '    
' → logprob: -6.493042469024658
    5. '#' → logprob: -6.868042469024658
    6. '  
' → logprob: -9.3680419921875
    7. '       ' → logprob: -9.4930419921875
    8. '```' → logprob: -9.6180419921875
    9. '\' → logprob: -9.7430419921875
    10. 'for' → logprob: -10.4930419921875

Token 1546: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10961847007274628
    2. 'def' → logprob: -2.4846184253692627
    3. '#' (adapté à ' #') → logprob: -4.734618663787842
    4. '
' → logprob: -5.109618663787842
    5. 'for' → logprob: -5.984618663787842
    6. 'visited' → logprob: -6.609618663787842
    7. 'from' → logprob: -6.984618663787842
    8. 'queue' → logprob: -8.734618186950684
    9. '    
' → logprob: -8.859618186950684
    10. ' for' → logprob: -9.234618186950684

Token 1547: ' Generate' (ID: 33886)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4072277843952179
    2. 'def' → logprob: -1.4072277545928955
    3. 'for' → logprob: -3.4072277545928955
    4. 'visited' → logprob: -3.5322277545928955
    5. '#' → logprob: -4.657227993011475
    6. 'queue' → logprob: -4.782227993011475
    7. 'from' → logprob: -5.407227993011475
    8. '
' → logprob: -6.157227993011475
    9. 'while' → logprob: -7.282227993011475
    10. 'indent' → logprob: -8.157227516174316

Token 1548: ' pawn' (ID: 112226)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.8930095434188843
    2. ' next' → logprob: -1.3930095434188843
    3. 'next' → logprob: -2.518009662628174
    4. ' possible' → logprob: -2.643009662628174
    5. 'neighbors' → logprob: -2.893009662628174
    6. 'moves' → logprob: -3.018009662628174
    7. '   ' → logprob: -3.768009662628174
    8. 'all' → logprob: -4.018009662628174
    9. ' all' → logprob: -4.268009662628174
    10. ' neighbors' → logprob: -5.268009662628174

Token 1549: ' moves' (ID: 19523)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.434675395488739
    2. '_moves' → logprob: -1.4346754550933838
    3. 's' → logprob: -2.934675455093384
    4. 'positions' → logprob: -3.684675455093384
    5. 'moves' → logprob: -4.184675216674805
    6. '   ' → logprob: -4.309675216674805
    7. 'def' → logprob: -5.934675216674805
    8. ' positions' → logprob: -6.809675216674805
    9. '_' → logprob: -7.309675216674805
    10. ' moves' → logprob: -7.434675216674805

Token 1550: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004397478885948658
    2. 'for' → logprob: -6.004397392272949
    3. 'def' → logprob: -7.004397392272949
    4. ' for' → logprob: -8.12939739227295
    5. '    
' → logprob: -8.25439739227295
    6. '
' → logprob: -8.37939739227295
    7. ':' → logprob: -9.37939739227295
    8. 'pawn' → logprob: -10.37939739227295
    9. '  
' → logprob: -11.12939739227295
    10. ':
' → logprob: -11.12939739227295

Token 1551: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25881341099739075
    2. 'def' → logprob: -1.6338133811950684
    3. 'pawn' → logprob: -3.8838133811950684
    4. '
' → logprob: -5.508813381195068
    5. 'for' → logprob: -5.633813381195068
    6. ' def' → logprob: -6.383813381195068
    7. 'p' → logprob: -7.008813381195068
    8. ' for' → logprob: -7.383813381195068
    9. 'next' → logprob: -8.258813858032227
    10. 'moves' → logprob: -8.633813858032227

Token 1552: ' each' (ID: 2454)
  Prédit: 'pawn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pawn' → logprob: -0.03736233711242676
    2. 'p' → logprob: -3.7873623371124268
    3. 'pos' → logprob: -4.912362098693848
    4. 'each' → logprob: -5.287362098693848
    5. 'r' → logprob: -6.662362098693848
    6. 'paw' → logprob: -9.412362098693848
    7. 'def' → logprob: -10.162362098693848
    8. 'a' → logprob: -10.287362098693848
    9. '(' → logprob: -10.412362098693848
    10. ' pawn' → logprob: -10.662362098693848

Token 1553: ' pawn' (ID: 112226)
  Prédit: 'pawn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pawn' → logprob: -0.0025860045570880175
    2. 'p' → logprob: -6.2525858879089355
    3. ' pawn' → logprob: -7.6275858879089355
    4. 'r' → logprob: -9.252586364746094
    5. '(p' → logprob: -10.877586364746094
    6. '(r' → logprob: -10.877586364746094
    7. 'pos' → logprob: -11.252586364746094
    8. '   ' → logprob: -12.377586364746094
    9. '(' → logprob: -12.502586364746094
    10. 'paw' → logprob: -12.502586364746094

Token 1554: ' adjacent' (ID: 39069)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.3227431774139404
    2. ' (' → logprob: -1.6977431774139404
    3. ' in' → logprob: -1.9477431774139404
    4. 'pos' → logprob: -2.0727431774139404
    5. '   ' → logprob: -2.8227431774139404
    6. '(' → logprob: -2.9477431774139404
    7. ',' → logprob: -3.3227431774139404
    8. 'position' → logprob: -3.4477431774139404
    9. '(pos' → logprob: -4.0727434158325195
    10. 'p' → logprob: -4.3227434158325195

Token 1555: ' to' (ID: 316)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8637509942054749
    2. 'to' → logprob: -0.9887509942054749
    3. '   ' → logprob: -2.73875093460083
    4. '(
' → logprob: -3.36375093460083
    5. ' to' → logprob: -3.61375093460083
    6. ' (' → logprob: -4.11375093460083
    7. 'token' → logprob: -4.61375093460083
    8. ',' → logprob: -4.98875093460083
    9. '```' → logprob: -4.98875093460083
    10. '((' → logprob: -5.36375093460083

Token 1556: ' an' (ID: 448)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.292479932308197
    2. 'an' → logprob: -1.6674799919128418
    3. ' an' → logprob: -3.542479991912842
    4. ' open' → logprob: -3.917479991912842
    5. 'one' → logprob: -4.417479991912842
    6. 'a' → logprob: -6.917479991912842
    7. 'each' → logprob: -7.042479991912842
    8. ' one' → logprob: -7.167479991912842
    9. 'any' → logprob: -7.667479991912842
    10. '
' → logprob: -8.917479515075684

Token 1557: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.03819457069039345
    2. ' open' → logprob: -3.2881946563720703
    3. '	open' → logprob: -9.53819465637207
    4. '<|end|>' → logprob: -10.28819465637207
    5. '(open' → logprob: -10.78819465637207
    6. '_open' → logprob: -11.78819465637207
    7. ')' → logprob: -12.03819465637207
    8. ' (' → logprob: -12.53819465637207
    9. '(' → logprob: -12.91319465637207
    10. '<|end|>' → logprob: -13.41319465637207

Token 1558: ' square' (ID: 13749)
  Prédit: 'square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'square' → logprob: -0.5960484743118286
    2. 'space' → logprob: -2.471048355102539
    3. '_s' → logprob: -2.596048355102539
    4. '(' → logprob: -2.721048355102539
    5. ' (' → logprob: -3.096048355102539
    6. '_square' → logprob: -3.221048355102539
    7. 's' → logprob: -3.346048355102539
    8. ''' → logprob: -3.596048355102539
    9. ' square' → logprob: -4.221048355102539
    10. ')' → logprob: -4.471048355102539

Token 1559: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18115143477916718
    2. ':
' → logprob: -2.1811513900756836
    3. 'for' → logprob: -3.9311513900756836
    4. ':' → logprob: -4.056151390075684
    5. 'def' → logprob: -5.556151390075684
    6. ' for' → logprob: -6.181151390075684
    7. '
' → logprob: -6.181151390075684
    8. '```' → logprob: -6.556151390075684
    9. ',' → logprob: -6.681151390075684
    10. 'pawn' → logprob: -6.931151390075684

Token 1560: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02862883359193802
    2. 'for' → logprob: -3.9036288261413574
    3. ' for' → logprob: -5.278628826141357
    4. ':' → logprob: -6.778628826141357
    5. '```' → logprob: -7.903628826141357
    6. '(' → logprob: -8.153629302978516
    7. ',' → logprob: -8.403629302978516
    8. ':
' → logprob: -8.403629302978516
    9. 'def' → logprob: -9.028629302978516
    10. '       ' → logprob: -9.028629302978516

Token 1561: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4855762720108032
    2. 'def' → logprob: -1.4855762720108032
    3. ' for' → logprob: -2.6105761528015137
    4. 'for' → logprob: -2.7355761528015137
    5. '       ' → logprob: -5.110576152801514
    6. '           ' → logprob: -5.485576152801514
    7. '```' → logprob: -6.235576152801514
    8. '(' → logprob: -6.610576152801514
    9. ':' → logprob: -6.860576152801514
    10. 'pawn' → logprob: -7.110576152801514

Token 1562: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09648283571004868
    2. 'for' → logprob: -2.471482753753662
    3. ' for' → logprob: -5.096482753753662
    4. '
' → logprob: -7.596482753753662
    5. '```' → logprob: -8.22148323059082
    6. 'def' → logprob: -8.59648323059082
    7. '       ' → logprob: -8.84648323059082
    8. '    
' → logprob: -9.34648323059082
    9. 'pawn' → logprob: -9.84648323059082
    10. ' ' → logprob: -10.47148323059082

Token 1563: ' each' (ID: 2454)
  Prédit: 'pawn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pawn' → logprob: -0.21182642877101898
    2. 'p' → logprob: -2.0868263244628906
    3. 'pos' → logprob: -3.8368263244628906
    4. 'r' → logprob: -3.9618263244628906
    5. ' pawn' → logprob: -4.086826324462891
    6. ' p' → logprob: -6.086826324462891
    7. ' r' → logprob: -6.461826324462891
    8. '(p' → logprob: -6.961826324462891
    9. ' pos' → logprob: -7.086826324462891
    10. '(' → logprob: -7.336826324462891

Token 1564: ' open' (ID: 2494)
  Prédit: 'pawn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pawn' → logprob: -0.05096864327788353
    2. 'p' → logprob: -3.550968647003174
    3. ' pawn' → logprob: -3.925968647003174
    4. ' p' → logprob: -7.550968647003174
    5. 'r' → logprob: -8.800968170166016
    6. 'paw' → logprob: -9.800968170166016
    7. 'pos' → logprob: -9.925968170166016
    8. '   ' → logprob: -9.925968170166016
    9. ' paw' → logprob: -9.925968170166016
    10. 'open' → logprob: -9.925968170166016

Token 1565: ' square' (ID: 13749)
  Prédit: 'square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'square' → logprob: -0.5344442129135132
    2. '_s' → logprob: -1.6594442129135132
    3. '_square' → logprob: -1.6594442129135132
    4. 's' → logprob: -3.4094443321228027
    5. ')' → logprob: -9.159443855285645
    6. '(square' → logprob: -9.534443855285645
    7. '_' → logprob: -9.909443855285645
    8. ' square' → logprob: -9.909443855285645
    9. '```' → logprob: -10.409443855285645
    10. '
' → logprob: -10.534443855285645

Token 1566: ' adjacent' (ID: 39069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1012740433216095
    2. ':
' → logprob: -3.226274013519287
    3. 'def' → logprob: -4.101274013519287
    4. '
' → logprob: -4.851274013519287
    5. ':' → logprob: -5.226274013519287
    6. 'pawn' → logprob: -5.351274013519287
    7. '):
' → logprob: -5.601274013519287
    8. 'for' → logprob: -5.851274013519287
    9. ' ' → logprob: -6.351274013519287
    10. ' for' → logprob: -6.476274013519287

Token 1567: ' to' (ID: 316)
  Prédit: 'pawn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pawn' → logprob: -0.7959632277488708
    2. '(' → logprob: -1.6709632873535156
    3. 'to' → logprob: -1.6709632873535156
    4. '   ' → logprob: -2.7959632873535156
    5. '(
' → logprob: -3.5459632873535156
    6. ' (' → logprob: -4.045963287353516
    7. 'of' → logprob: -4.420963287353516
    8. ' to' → logprob: -4.670963287353516
    9. 'p' → logprob: -4.795963287353516
    10. ')' → logprob: -4.795963287353516

Token 1568: ' paw' (ID: 71961)
  Prédit: 'pawn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pawn' → logprob: -0.044105418026447296
    2. 'the' → logprob: -3.7941055297851562
    3. 'a' → logprob: -4.044105529785156
    4. 'p' → logprob: -6.669105529785156
    5. ' pawn' → logprob: -7.669105529785156
    6. ' the' → logprob: -7.794105529785156
    7. 'that' → logprob: -7.794105529785156
    8. ' a' → logprob: -7.919105529785156
    9. 'paw' → logprob: -9.419105529785156
    10. 'each' → logprob: -10.169105529785156

Token 1569: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.10680115222930908
    2. 'n' → logprob: -2.6068010330200195
    3. 'wn' → logprob: -4.2318010330200195
    4. 'w' → logprob: -4.9818010330200195
    5. 's' → logprob: -6.6068010330200195
    6. 'awns' → logprob: -6.7318010330200195
    7. 'ws' → logprob: -6.9818010330200195
    8. 'ons' → logprob: -6.9818010330200195
    9. '(' → logprob: -8.10680103302002
    10. 'ans' → logprob: -8.23180103302002

Token 1570: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049426645040512085
    2. ':' → logprob: -3.674426555633545
    3. ':
' → logprob: -4.299426555633545
    4. 'def' → logprob: -5.799426555633545
    5. 'for' → logprob: -6.424426555633545
    6. '
' → logprob: -6.549426555633545
    7. ' for' → logprob: -7.924426555633545
    8. 'pawn' → logprob: -7.924426555633545
    9. 'p' → logprob: -8.174427032470703
    10. '    
' → logprob: -8.299427032470703

Token 1571: ' pawn' (ID: 112226)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4345589280128479
    2. ' for' → logprob: -1.1845588684082031
    3. '   ' → logprob: -3.434558868408203
    4. '           ' → logprob: -5.559558868408203
    5. '
' → logprob: -5.684558868408203
    6. 'pawn' → logprob: -5.809558868408203
    7. '       ' → logprob: -6.809558868408203
    8. '```' → logprob: -7.059558868408203
    9. '                   ' → logprob: -8.184558868408203
    10. ' 
' → logprob: -8.184558868408203

Token 1572: ' can' (ID: 665)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -1.0920742750167847
    2. 's' → logprob: -1.2170742750167847
    3. 'moves' → logprob: -1.7170742750167847
    4. '_positions' → logprob: -2.342074394226074
    5. ' moves' → logprob: -3.592074394226074
    6. ' can' → logprob: -3.592074394226074
    7. 'positions' → logprob: -4.717074394226074
    8. 'can' → logprob: -5.092074394226074
    9. '_pos' → logprob: -6.092074394226074
    10. ' positions' → logprob: -6.092074394226074

Token 1573: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.014682619832456112
    2. ' move' → logprob: -4.264682769775391
    3. 'slide' → logprob: -7.889682769775391
    4. '	move' → logprob: -10.13968276977539
    5. '_move' → logprob: -10.38968276977539
    6. 'm' → logprob: -10.63968276977539
    7. 'moves' → logprob: -11.51468276977539
    8. 'try' → logprob: -11.63968276977539
    9. '.move' → logprob: -11.76468276977539
    10. 'jump' → logprob: -12.63968276977539

Token 1574: ' onto' (ID: 13291)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8825731873512268
    2. 'for' → logprob: -1.632573127746582
    3. ' for' → logprob: -2.132573127746582
    4. '(' → logprob: -2.757573127746582
    5. '(r' → logprob: -3.382573127746582
    6. '
' → logprob: -3.507573127746582
    7. ' (' → logprob: -3.632573127746582
    8. '(
' → logprob: -4.132573127746582
    9. '           ' → logprob: -4.507573127746582
    10. ' in' → logprob: -4.507573127746582

Token 1575: ' that' (ID: 484)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.2264245748519897
    2. ' that' → logprob: -1.7264245748519897
    3. ' the' → logprob: -1.9764245748519897
    4. ' open' → logprob: -2.1014246940612793
    5. '(' → logprob: -2.2264246940612793
    6. 'the' → logprob: -2.8514246940612793
    7. 'open' → logprob: -3.1014246940612793
    8. 'that' → logprob: -3.6014246940612793
    9. '(open' → logprob: -4.351424694061279
    10. ' an' → logprob: -5.101424694061279

Token 1576: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.11077897995710373
    2. ' open' → logprob: -2.360779047012329
    3. 'square' → logprob: -4.98577880859375
    4. ' square' → logprob: -6.61077880859375
    5. '
' → logprob: -7.23577880859375
    6. 'pawn' → logprob: -7.73577880859375
    7. ' 
' → logprob: -7.98577880859375
    8. '(open' → logprob: -9.23577880859375
    9. 'space' → logprob: -9.48577880859375
    10. '_' → logprob: -9.86077880859375

Token 1577: ' square' (ID: 13749)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3897286355495453
    2. '_s' → logprob: -1.6397286653518677
    3. '_square' → logprob: -2.264728546142578
    4. 'square' → logprob: -4.264728546142578
    5. ' square' → logprob: -5.764728546142578
    6. ' _' → logprob: -6.139728546142578
    7. ')' → logprob: -6.639728546142578
    8. 'space' → logprob: -6.889728546142578
    9. 's' → logprob: -7.139728546142578
    10. '_space' → logprob: -7.389728546142578

Token 1578: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19167876243591309
    2. 'def' → logprob: -2.816678762435913
    3. '
' → logprob: -3.066678762435913
    4. '       ' → logprob: -4.316679000854492
    5. '           ' → logprob: -4.691679000854492
    6. ' for' → logprob: -4.691679000854492
    7. 'for' → logprob: -4.816679000854492
    8. '    
' → logprob: -5.066679000854492
    9. '                   ' → logprob: -5.191679000854492
    10. '               ' → logprob: -6.066679000854492

Token 1579: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030469844117760658
    2. 'def' → logprob: -3.9054698944091797
    3. '
' → logprob: -5.03046989440918
    4. 'for' → logprob: -6.03046989440918
    5. ' for' → logprob: -8.15546989440918
    6. '    
' → logprob: -8.15546989440918
    7. '       ' → logprob: -9.15546989440918
    8. '```' → logprob: -9.28046989440918
    9. '  
' → logprob: -10.53046989440918
    10. '#' → logprob: -10.78046989440918

Token 1580: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23672321438789368
    2. 'def' (adapté à ' def') → logprob: -1.9867231845855713
    3. 'for' → logprob: -2.7367231845855713
    4. '
' → logprob: -4.98672342300415
    5. ' for' → logprob: -6.61172342300415
    6. '    
' → logprob: -8.111722946166992
    7. 'moves' → logprob: -9.361722946166992
    8. '       ' → logprob: -9.486722946166992
    9. '#' → logprob: -9.736722946166992
    10. 'pawn' → logprob: -10.236722946166992

Token 1581: ' pawn' (ID: 112226)
  Prédit: 'pawn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pawn' → logprob: -0.6026602387428284
    2. 'generate' → logprob: -0.8526602387428284
    3. 'possible' → logprob: -4.227660179138184
    4. 'get' → logprob: -4.602660179138184
    5. 'p' → logprob: -7.477660179138184
    6. 'valid' → logprob: -7.727660179138184
    7. 'next' → logprob: -8.352660179138184
    8. ' generate' → logprob: -8.477660179138184
    9. 'gen' → logprob: -8.602660179138184
    10. 'find' → logprob: -10.102660179138184

Token 1582: '_moves' (ID: 110706)
  Prédit: '_moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.023646526038646698
    2. '_positions' → logprob: -3.773646593093872
    3. 'moves' → logprob: -8.648646354675293
    4. '_possible' → logprob: -8.648646354675293
    5. '_move' → logprob: -10.898646354675293
    6. 's' → logprob: -11.898646354675293
    7. '_neighbors' → logprob: -11.898646354675293
    8. '_can' → logprob: -12.523646354675293
    9. '_candidates' → logprob: -13.273646354675293
    10. '_mov' → logprob: -13.398646354675293

Token 1583: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.010059681721031666
    2. '(state' → logprob: -4.885059833526611
    3. '(' → logprob: -6.635059833526611
    4. '(pos' → logprob: -7.760059833526611
    5. '(s' → logprob: -7.885059833526611
    6. 'pawn' → logprob: -9.885059356689453
    7. '((' → logprob: -10.135059356689453
    8. '(
' → logprob: -10.385059356689453
    9. ' (' → logprob: -10.510059356689453
    10. '(current' → logprob: -10.635059356689453

Token 1584: 'awns' (ID: 115084)
  Prédit: 'awns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'awns' → logprob: -0.03297671303153038
    2. 'os' → logprob: -3.6579766273498535
    3. 'awn' → logprob: -6.6579766273498535
    4. ')' → logprob: -6.6579766273498535
    5. 's' → logprob: -6.7829766273498535
    6. 'aws' → logprob: -7.4079766273498535
    7. 'aw' → logprob: -7.5329766273498535
    8. '):
' → logprob: -8.032977104187012
    9. 'osition' → logprob: -8.782977104187012
    10. ')`' → logprob: -8.907977104187012

Token 1585: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.7425941228866577
    2. '):' → logprob: -1.4925941228866577
    3. '):
' → logprob: -1.6175941228866577
    4. '_' → logprob: -2.7425942420959473
    5. '_positions' → logprob: -3.9925942420959473
    6. '   ' → logprob: -4.867594242095947
    7. 'set' → logprob: -5.617594242095947
    8. 's' → logprob: -6.242594242095947
    9. ')' → logprob: -6.617594242095947
    10. '_pos' → logprob: -7.117594242095947

Token 1586: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6519794464111328
    2. '):' → logprob: -0.7769794464111328
    3. '(p' → logprob: -4.776979446411133
    4. '   ' → logprob: -5.026979446411133
    5. ',' → logprob: -6.151979446411133
    6. ',p' → logprob: -6.401979446411133
    7. ')' → logprob: -8.651979446411133
    8. '       ' → logprob: -9.901979446411133
    9. 'p' → logprob: -10.026979446411133
    10. '):

' → logprob: -10.276979446411133

Token 1587: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.0013738033594563603
    2. ' open' → logprob: -7.001373767852783
    3. 'opens' → logprob: -8.126374244689941
    4. '   ' → logprob: -9.751374244689941
    5. 'ob' → logprob: -10.001374244689941
    6. 'op' → logprob: -11.376374244689941
    7. ')' → logprob: -11.376374244689941
    8. ' ' → logprob: -12.001374244689941
    9. '       ' → logprob: -12.126374244689941
    10. '
' → logprob: -12.501374244689941

Token 1588: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0002234437270089984
    2. 's' → logprob: -8.750223159790039
    3. '_positions' → logprob: -10.250223159790039
    4. '_spaces' → logprob: -11.500223159790039
    5. ')_' → logprob: -11.875223159790039
    6. '```' → logprob: -12.500223159790039
    7. ')' → logprob: -13.375223159790039
    8. '
' → logprob: -13.500223159790039
    9. '_' → logprob: -13.875223159790039
    10. '_sq' → logprob: -14.000223159790039

Token 1589: 'quares' (ID: 110764)
  Prédit: 'quares'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quares' → logprob: -0.06384100764989853
    2. 'ets' → logprob: -3.4388411045074463
    3. 'et' → logprob: -3.5638411045074463
    4. '```' → logprob: -7.438840866088867
    5. 'qu' → logprob: -8.813840866088867
    6. 'q' → logprob: -9.063840866088867
    7. 'ques' → logprob: -9.188840866088867
    8. '``' → logprob: -9.438840866088867
    9. 'paces' → logprob: -9.688840866088867
    10. '#' → logprob: -10.313840866088867

Token 1590: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0005599428550340235
    2. ',' → logprob: -8.00055980682373
    3. '):
' → logprob: -9.50055980682373
    4. ',_' → logprob: -10.00055980682373
    5. 'set' → logprob: -10.75055980682373
    6. '):' → logprob: -10.87555980682373
    7. ')_' → logprob: -11.25055980682373
    8. '   ' → logprob: -11.87555980682373
    9. '_sets' → logprob: -12.12555980682373
    10. 's' → logprob: -12.12555980682373

Token 1591: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0032834713347256184
    2. '):' → logprob: -5.753283500671387
    3. '   ' → logprob: -9.253283500671387
    4. '):
' → logprob: -11.753283500671387
    5. '):

' → logprob: -14.003283500671387
    6. ')' → logprob: -15.003283500671387
    7. ' ):
' → logprob: -15.128283500671387
    8. '():
' → logprob: -15.378283500671387
    9. ''):
' → logprob: -16.25328254699707
    10. ',' → logprob: -16.50328254699707

Token 1592: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.3540287911891937
    2. 'ob' → logprob: -1.9790288209915161
    3. 'kr' → logprob: -2.1040287017822266
    4. 'open' → logprob: -4.604028701782227
    5. ')' → logprob: -4.854028701782227
    6. '):
' → logprob: -5.604028701782227
    7. '
' → logprob: -6.104028701782227
    8. 'p' → logprob: -6.104028701782227
    9. ')
' → logprob: -6.104028701782227
    10. 'H' → logprob: -6.604028701782227

Token 1593: '_r' (ID: 3442)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.27892568707466125
    2. '_positions' → logprob: -1.5289256572723389
    3. '_r' → logprob: -5.153925895690918
    4. ',' → logprob: -5.653925895690918
    5. 'pos' → logprob: -5.778925895690918
    6. '_position' → logprob: -5.903925895690918
    7. '   ' → logprob: -6.153925895690918
    8. '_set' → logprob: -6.153925895690918
    9. '):
' → logprob: -6.528925895690918
    10. '_row' → logprob: -6.528925895690918

Token 1594: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012137442827224731
    2. ',k' → logprob: -4.887137413024902
    3. ',c' → logprob: -6.512137413024902
    4. ',
' → logprob: -6.512137413024902
    5. ',p' → logprob: -7.262137413024902
    6. ' ,' → logprob: -7.512137413024902
    7. ',user' → logprob: -10.137137413024902
    8. ',int' → logprob: -10.512137413024902
    9. ',n' → logprob: -10.512137413024902
    10. ')' → logprob: -10.637137413024902

Token 1595: ' king' (ID: 13793)
  Prédit: 'kc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kc' → logprob: -0.2025444507598877
    2. 'king' → logprob: -1.7025444507598877
    3. ' king' → logprob: -7.077544212341309
    4. ' kc' → logprob: -8.452544212341309
    5. '   ' → logprob: -10.202544212341309
    6. '  ' → logprob: -11.077544212341309
    7. ' ' → logprob: -12.077544212341309
    8. '
' → logprob: -12.702544212341309
    9. 'k' → logprob: -12.827544212341309
    10. '    ' → logprob: -13.327544212341309

Token 1596: '_c' (ID: 1303)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5912678241729736
    2. ',c' → logprob: -0.9662678241729736
    3. ',k' → logprob: -3.5912678241729736
    4. '_c' → logprob: -4.0912675857543945
    5. 'c' → logprob: -4.2162675857543945
    6. ',
' → logprob: -5.8412675857543945
    7. ' ,' → logprob: -6.5912675857543945
    8. '   ' → logprob: -7.0912675857543945
    9. '_,' → logprob: -7.7162675857543945
    10. ',p' → logprob: -7.8412675857543945

Token 1597: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0018932949751615524
    2. '):' → logprob: -6.376893520355225
    3. '   ' → logprob: -8.626893043518066
    4. '):
' → logprob: -12.001893043518066
    5. '):

' → logprob: -12.751893043518066
    6. ' ):
' → logprob: -13.626893043518066
    7. ',' → logprob: -13.876893043518066
    8. '  ' → logprob: -15.251893043518066
    9. '    ' → logprob: -15.376893043518066
    10. '       ' → logprob: -15.876893043518066

Token 1598: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008944854140281677
    2. '       ' → logprob: -4.758944988250732
    3. ' for' → logprob: -8.633944511413574
    4. '    ' → logprob: -9.508944511413574
    5. 'for' → logprob: -10.633944511413574
    6. '    
' → logprob: -11.633944511413574
    7. '	for' → logprob: -11.633944511413574
    8. '	   ' → logprob: -11.633944511413574
    9. '```' → logprob: -11.758944511413574
    10. '
' → logprob: -11.883944511413574

Token 1599: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' (adapté à ' moves') → logprob: -0.16885289549827576
    2. 'res' → logprob: -1.9188529253005981
    3. 'result' → logprob: -5.668852806091309
    4. '       ' → logprob: -5.918852806091309
    5. '   ' → logprob: -6.543852806091309
    6. 'm' → logprob: -7.543852806091309
    7. 'new' → logprob: -9.043852806091309
    8. 'pawn' → logprob: -9.293852806091309
    9. 'for' → logprob: -9.668852806091309
    10. 'next' → logprob: -9.668852806091309

Token 1600: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6938729286193848
    2. ' =' → logprob: -0.6938729286193848
    3. '   ' → logprob: -7.318872928619385
    4. '=[]' → logprob: -10.443872451782227
    5. '=[]
' → logprob: -11.193872451782227
    6. 's' → logprob: -12.068872451782227
    7. ' ' → logprob: -12.568872451782227
    8. '_' → logprob: -13.068872451782227
    9. '       ' → logprob: -13.068872451782227
    10. '    ' → logprob: -13.318872451782227

Token 1601: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.5242484211921692
    2. '[]' → logprob: -1.0242483615875244
    3. 'set' → logprob: -3.0242483615875244
    4. ' []
' → logprob: -8.524248123168945
    5. ' []' → logprob: -9.149248123168945
    6. '   ' → logprob: -11.024248123168945
    7. ' set' → logprob: -12.024248123168945
    8. '[]

' → logprob: -12.649248123168945
    9. 'deque' → logprob: -13.149248123168945
    10. '[])
' → logprob: -13.274248123168945

Token 1602: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29438111186027527
    2. '       ' → logprob: -1.4193811416625977
    3. '
' → logprob: -5.419381141662598
    4. '    
' → logprob: -5.919381141662598
    5. '        
' → logprob: -6.294381141662598
    6. 'for' → logprob: -6.794381141662598
    7. ' for' → logprob: -6.919381141662598
    8. '	   ' → logprob: -7.544381141662598
    9. '	for' → logprob: -7.669381141662598
    10. '    ' → logprob: -8.544381141662598

Token 1603: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002477200934663415
    2. '   ' → logprob: -6.127477169036865
    3. '       ' → logprob: -8.377477645874023
    4. ' for' → logprob: -10.627477645874023
    5. 'pawn' → logprob: -11.252477645874023
    6. '#' (adapté à ' #') → logprob: -11.627477645874023
    7. 'open' → logprob: -12.502477645874023
    8. '           ' → logprob: -12.627477645874023
    9. '	for' → logprob: -13.127477645874023
    10. 'p' → logprob: -13.127477645874023

Token 1604: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.827200897736475e-05
    2. '   ' → logprob: -10.375078201293945
    3. '       ' → logprob: -10.375078201293945
    4. 'pawn' → logprob: -12.125078201293945
    5. '           ' → logprob: -12.500078201293945
    6. ' for' → logprob: -12.625078201293945
    7. 'def' → logprob: -13.875078201293945
    8. '```' → logprob: -14.500078201293945
    9. '	for' → logprob: -14.750078201293945
    10. 'occupied' → logprob: -15.000078201293945

Token 1605: ' each' (ID: 2454)
  Prédit: 'pawn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pawn' → logprob: -0.09326501935720444
    2. 'p' → logprob: -2.4682650566101074
    3. 'r' → logprob: -6.343265056610107
    4. 'pos' → logprob: -7.218265056610107
    5. ' pawn' → logprob: -7.218265056610107
    6. 'pr' → logprob: -7.843265056610107
    7. 'open' → logprob: -8.71826457977295
    8. 'each' → logprob: -8.96826457977295
    9. ' p' → logprob: -9.46826457977295
    10. 'paw' → logprob: -10.09326457977295

Token 1606: ' pawn' (ID: 112226)
  Prédit: 'pawn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pawn' → logprob: -0.026519037783145905
    2. 'p' → logprob: -3.6515190601348877
    3. ' pawn' → logprob: -8.526518821716309
    4. ' p' → logprob: -12.276518821716309
    5. 'paw' → logprob: -12.401518821716309
    6. '   ' → logprob: -12.401518821716309
    7. 'r' → logprob: -12.526518821716309
    8. 'pa' → logprob: -14.401518821716309
    9. 'pos' → logprob: -14.526518821716309
    10. '```' → logprob: -14.526518821716309

Token 1607: '
' (ID: 198)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4634270966053009
    2. ' in' → logprob: -1.7134270668029785
    3. 'pawn' → logprob: -2.4634270668029785
    4. 'for' → logprob: -3.3384270668029785
    5. 'in' → logprob: -3.5884270668029785
    6. 'pos' → logprob: -4.2134270668029785
    7. ' for' → logprob: -4.3384270668029785
    8. '       ' → logprob: -4.9634270668029785
    9. 'r' → logprob: -6.2134270668029785
    10. '   ' → logprob: -6.3384270668029785

Token 1608: '       ' (ID: 309)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.855677604675293
    2. '       ' → logprob: -1.480677604675293
    3. 'p' → logprob: -2.605677604675293
    4. '   ' → logprob: -2.855677604675293
    5. 'pawn' → logprob: -2.980677604675293
    6. ' (' → logprob: -3.105677604675293
    7. '(p' → logprob: -3.230677604675293
    8. '           ' → logprob: -3.980677604675293
    9. 'r' → logprob: -4.105677604675293
    10. ',' → logprob: -4.355677604675293

Token 1609: ' for' (ID: 395)
  Prédit: 'pawn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pawn' → logprob: -0.8688818216323853
    2. 'for' (adapté à ' for') → logprob: -1.7438818216323853
    3. ' for' → logprob: -1.9938818216323853
    4. '       ' → logprob: -1.9938818216323853
    5. 'p' → logprob: -2.7438817024230957
    6. '   ' → logprob: -3.2438817024230957
    7. ' pawn' → logprob: -4.243881702423096
    8. ' paw' → logprob: -4.368881702423096
    9. '           ' → logprob: -7.368881702423096
    10. ' p' → logprob: -7.743881702423096

Token 1610: ' pr' (ID: 550)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.12545692920684814
    2. '(pr' → logprob: -3.1254568099975586
    3. 'pawn' → logprob: -3.1254568099975586
    4. 'p' → logprob: -4.250456809997559
    5. '(p' → logprob: -4.750456809997559
    6. '(r' → logprob: -5.375456809997559
    7. 'r' → logprob: -6.750456809997559
    8. 'px' → logprob: -7.500456809997559
    9. '(' → logprob: -7.875456809997559
    10. ' pr' → logprob: -9.000456809997559

Token 1611: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0974910706281662
    2. ' in' → logprob: -2.8474910259246826
    3. ' ,' → logprob: -3.4724910259246826
    4. ',p' → logprob: -6.472491264343262
    5. ',c' → logprob: -7.722491264343262
    6. ' ' → logprob: -8.097491264343262
    7. ',pos' → logprob: -8.097491264343262
    8. '   ' → logprob: -8.597491264343262
    9. ')' → logprob: -8.972491264343262
    10. ',r' → logprob: -8.972491264343262

Token 1612: ' pc' (ID: 18736)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' → logprob: -0.0009155054576694965
    2. ' pc' → logprob: -7.00091552734375
    3. '	pc' → logprob: -12.75091552734375
    4. '(pc' → logprob: -15.37591552734375
    5. '_pc' → logprob: -15.62591552734375
    6. '.pc' → logprob: -15.75091552734375
    7. 'pcs' → logprob: -16.00091552734375
    8. '   ' → logprob: -16.37591552734375
    9. '
' → logprob: -17.25091552734375
    10. 'psc' → logprob: -17.37591552734375

Token 1613: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033688925206661224
    2. 'in' → logprob: -3.408689022064209
    3. ' ' → logprob: -11.28368854522705
    4. '   ' → logprob: -11.78368854522705
    5. '	in' → logprob: -12.15868854522705
    6. '       ' → logprob: -12.90868854522705
    7. '
' → logprob: -13.28368854522705
    8. ',' → logprob: -13.28368854522705
    9. ' ' → logprob: -13.28368854522705
    10. '        ' → logprob: -13.40868854522705

Token 1614: ' paw' (ID: 71961)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00015824666479602456
    2. 'list' → logprob: -9.250158309936523
    3. ' paw' → logprob: -10.375158309936523
    4. '   ' → logprob: -11.000158309936523
    5. 'paw' → logprob: -12.250158309936523
    6. 'pawn' → logprob: -12.625158309936523
    7. ' list' → logprob: -13.125158309936523
    8. '    ' → logprob: -14.000158309936523
    9. ' ' → logprob: -14.000158309936523
    10. '
' → logprob: -14.375158309936523

Token 1615: 'ns' (ID: 6097)
  Prédit: 'ons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.2534618377685547
    2. 'ns' → logprob: -1.5034618377685547
    3. 'awns' → logprob: -6.878461837768555
    4. 's' → logprob: -8.628461837768555
    5. 'wn' → logprob: -9.378461837768555
    6. 'ans' → logprob: -9.628461837768555
    7. 'rons' → logprob: -9.753461837768555
    8. 'n' → logprob: -10.253461837768555
    9. 'uns' → logprob: -10.878461837768555
    10. 'ms' → logprob: -11.253461837768555

Token 1616: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.6174083948135376
    2. ':
' → logprob: -1.3674083948135376
    3. '):
' → logprob: -2.742408275604248
    4. ':' → logprob: -2.867408275604248
    5. '   ' → logprob: -3.867408275604248
    6. 's' → logprob: -3.867408275604248
    7. 'set' → logprob: -4.242408275604248
    8. '       ' → logprob: -4.867408275604248
    9. '):' → logprob: -5.367408275604248
    10. ')' → logprob: -5.867408275604248

Token 1617: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.46666213870048523
    2. ':' → logprob: -1.4666621685028076
    3. '           ' → logprob: -1.9666621685028076
    4. '       ' → logprob: -6.5916619300842285
    5. ',' → logprob: -7.8416619300842285
    6. '):
' → logprob: -9.216662406921387
    7. '	       ' → logprob: -9.216662406921387
    8. '               ' → logprob: -9.341662406921387
    9. ':
' → logprob: -10.091662406921387
    10. '   ' → logprob: -10.466662406921387

Token 1618: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007031376590020955
    2. '	       ' → logprob: -7.50070333480835
    3. '		' → logprob: -10.125702857971191
    4. '       ' → logprob: -10.250702857971191
    5. ',' → logprob: -10.750702857971191
    6. '               ' → logprob: -12.000702857971191
    7. '		   ' → logprob: -12.125702857971191
    8. '    	   ' → logprob: -12.250702857971191
    9. '
' → logprob: -12.375702857971191
    10. '```' → logprob: -12.500702857971191

Token 1619: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.46023645997047424
    2. '               ' → logprob: -1.8352364301681519
    3. '           ' → logprob: -1.9602364301681519
    4. ' for' → logprob: -2.7102365493774414
    5. '	       ' → logprob: -6.710236549377441
    6. '	           ' → logprob: -8.210236549377441
    7. '   ' → logprob: -8.710236549377441
    8. '	for' → logprob: -9.710236549377441
    9. '		' → logprob: -10.085236549377441
    10. ' ' → logprob: -10.085236549377441

Token 1620: ' dr' (ID: 1498)
  Prédit: 'dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' → logprob: -0.00018411019118502736
    2. ' dr' → logprob: -8.875184059143066
    3. '(dr' → logprob: -10.500184059143066
    4. '   ' → logprob: -11.500184059143066
    5. '	dr' → logprob: -13.000184059143066
    6. 'd' → logprob: -13.250184059143066
    7. '(' → logprob: -14.000184059143066
    8. 'delta' → logprob: -14.375184059143066
    9. 'dx' → logprob: -15.375184059143066
    10. '```' → logprob: -15.750184059143066

Token 1621: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7019813656806946
    2. ',d' → logprob: -0.7019813656806946
    3. ' ,' → logprob: -5.201981544494629
    4. ' in' → logprob: -6.076981544494629
    5. ',v' → logprob: -8.326981544494629
    6. ',c' → logprob: -9.326981544494629
    7. 'd' → logprob: -9.326981544494629
    8. ',w' → logprob: -9.701981544494629
    9. ',n' → logprob: -9.826981544494629
    10. ',user' → logprob: -9.951981544494629

Token 1622: 'dc' (ID: 13964)
  Prédit: 'dc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.18858851492404938
    2. '0' → logprob: -2.3135886192321777
    3. '(-' → logprob: -3.6885886192321777
    4. '[-' → logprob: -3.9385886192321777
    5. 'd' → logprob: -4.438588619232178
    6. '(' → logprob: -5.313588619232178
    7. 'dire' → logprob: -5.313588619232178
    8. '[' → logprob: -5.438588619232178
    9. '-' → logprob: -7.063588619232178
    10. 'dirs' → logprob: -7.688588619232178

Token 1623: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.054929111152887344
    2. 'in' → logprob: -2.92992901802063
    3. '	in' → logprob: -10.92992877960205
    4. ' ' → logprob: -11.42992877960205
    5. '   ' → logprob: -11.92992877960205
    6. ',' → logprob: -13.30492877960205
    7. ' ,' → logprob: -13.67992877960205
    8. '1' → logprob: -14.05492877960205
    9. '    ' → logprob: -14.05492877960205
    10. '_in' → logprob: -14.30492877960205

Token 1624: ' directions' (ID: 24921)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4767078161239624
    2. 'dire' → logprob: -0.9767078161239624
    3. '[(' → logprob: -6.476707935333252
    4. '[-' → logprob: -7.226707935333252
    5. ' directions' → logprob: -7.976707935333252
    6. ' [' → logprob: -11.226707458496094
    7. '(-' → logprob: -13.101707458496094
    8. '[((' → logprob: -13.101707458496094
    9. 'direction' → logprob: -14.851707458496094
    10. '[
' → logprob: -14.976707458496094

Token 1625: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6623461246490479
    2. ':
' → logprob: -1.1623461246490479
    3. '               ' → logprob: -1.9123461246490479
    4. '<|end|>' → logprob: -4.662345886230469
    5. '           ' → logprob: -6.412345886230469
    6. '                       ' → logprob: -6.537345886230469
    7. '<|end|>' → logprob: -6.537345886230469
    8. '():
' → logprob: -6.787345886230469
    9. '=' → logprob: -6.912345886230469
    10. ',' → logprob: -7.037345886230469

Token 1626: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0714888721704483
    2. ' new' → logprob: -3.821488857269287
    3. ' nr' → logprob: -4.071488857269287
    4. ' r' → logprob: -4.446488857269287
    5. ' nx' → logprob: -5.571488857269287
    6. 'nr' → logprob: -5.946488857269287
    7. ' nxt' → logprob: -6.696488857269287
    8. '            ' → logprob: -6.696488857269287
    9. 'r' → logprob: -6.821488857269287
    10. '	           ' → logprob: -7.071488857269287

Token 1627: ' nr' (ID: 24055)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' (adapté à ' nr') → logprob: -0.4934753179550171
    2. ' nr' → logprob: -0.9934753179550171
    3. 'n' → logprob: -4.993475437164307
    4. '               ' → logprob: -5.868475437164307
    5. '                   ' → logprob: -6.493475437164307
    6. 'npos' → logprob: -6.493475437164307
    7. 'r' → logprob: -6.618475437164307
    8. ' new' → logprob: -6.743475437164307
    9. 'new' → logprob: -7.493475437164307
    10. ' np' → logprob: -7.743475437164307

Token 1628: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020880866795778275
    2. ' =' → logprob: -4.145880699157715
    3. ',' → logprob: -5.395880699157715
    4. '=
' → logprob: -9.145880699157715
    5. '=int' → logprob: -9.645880699157715
    6. '=n' → logprob: -9.770880699157715
    7. ',n' → logprob: -11.020880699157715
    8. '<|end|>' → logprob: -11.520880699157715
    9. ',p' → logprob: -11.895880699157715
    10. '=user' → logprob: -12.270880699157715

Token 1629: ' nc' (ID: 39841)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pc' → logprob: -0.00123332638759166
    2. ' pc' → logprob: -6.751233100891113
    3. '=' → logprob: -9.876233100891113
    4. ' =' → logprob: -12.251233100891113
    5. '(pc' → logprob: -12.751233100891113
    6. '	pc' → logprob: -13.251233100891113
    7. 'nc' → logprob: -13.751233100891113
    8. '_pc' → logprob: -14.501233100891113
    9. '   ' → logprob: -15.376233100891113
    10. 'npc' → logprob: -15.751233100891113

Token 1630: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859009385108948
    2. ' =' → logprob: -3.0485901832580566
    3. ')' → logprob: -13.548589706420898
    4. '=
' → logprob: -14.798589706420898
    5. ' ' → logprob: -15.173589706420898
    6. '=n' → logprob: -15.298589706420898
    7. ')=' → logprob: -16.2985897064209
    8. '               ' → logprob: -16.5485897064209
    9. '   ' → logprob: -16.7985897064209
    10. '<|end|>' → logprob: -17.0485897064209

Token 1631: ' pr' (ID: 550)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.0004306692280806601
    2. ' pr' → logprob: -7.750430583953857
    3. '   ' → logprob: -17.125431060791016
    4. '           ' → logprob: -18.375431060791016
    5. '	pr' → logprob: -19.125431060791016
    6. '(pr' → logprob: -20.000431060791016
    7. 'p' → logprob: -21.375431060791016
    8. '               ' → logprob: -21.375431060791016
    9. '       ' → logprob: -22.375431060791016
    10. '_pr' → logprob: -22.625431060791016

Token 1632: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18016773462295532
    2. ' +' → logprob: -1.8051676750183105
    3. '<|end|>' → logprob: -8.180168151855469
    4. ',' → logprob: -10.305168151855469
    5. '=' → logprob: -10.680168151855469
    6. '<|end|>' → logprob: -11.180168151855469
    7. '[' → logprob: -11.305168151855469
    8. '+
' → logprob: -11.555168151855469
    9. ' ' → logprob: -12.305168151855469
    10. '+n' → logprob: -12.305168151855469

Token 1633: 'dr' (ID: 4541)
  Prédit: 'dr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' → logprob: -0.001182012027129531
    2. 'dc' → logprob: -6.7511820793151855
    3. ' dr' → logprob: -11.751181602478027
    4. 'd' → logprob: -13.376181602478027
    5. '   ' → logprob: -13.376181602478027
    6. '1' → logprob: -15.251181602478027
    7. '	dr' → logprob: -16.126182556152344
    8. '```' → logprob: -16.251182556152344
    9. ' dc' → logprob: -16.751182556152344
    10. ' ' → logprob: -16.876182556152344

Token 1634: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1635: ' pc' (ID: 18736)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' → logprob: -0.00020389800192788243
    2. ' pc' → logprob: -8.500204086303711
    3. '(pc' → logprob: -15.625204086303711
    4. '   ' → logprob: -15.875204086303711
    5. '	pc' → logprob: -17.12520408630371
    6. '    ' → logprob: -18.25020408630371
    7. '       ' → logprob: -18.50020408630371
    8. ' ' → logprob: -18.62520408630371
    9. '  ' → logprob: -19.00020408630371
    10. '
' → logprob: -19.00020408630371

Token 1636: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0014291671104729176
    2. '<|end|>' → logprob: -6.751429080963135
    3. ' +' → logprob: -9.001429557800293
    4. '1' → logprob: -10.001429557800293
    5. '<|end|>' → logprob: -10.126429557800293
    6. ',' → logprob: -11.501429557800293
    7. '+c' → logprob: -11.751429557800293
    8. '+
' → logprob: -12.626429557800293
    9. '+n' → logprob: -12.626429557800293
    10. '```' → logprob: -12.626429557800293

Token 1637: 'dc' (ID: 13964)
  Prédit: 'dc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.0015640194760635495
    2. '1' → logprob: -6.501564025878906
    3. ' dc' → logprob: -9.751564025878906
    4. '0' → logprob: -12.876564025878906
    5. ' ' → logprob: -15.001564025878906
    6. '(dc' → logprob: -15.001564025878906
    7. '
' → logprob: -16.126564025878906
    8. '_dc' → logprob: -16.501564025878906
    9. '   ' → logprob: -17.501564025878906
    10. '.dc' → logprob: -18.251564025878906

Token 1638: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15659166872501373
    2. '<|end|>' → logprob: -2.0315916538238525
    3. '<|end|>' → logprob: -5.406591892242432
    4. ' if' → logprob: -5.531591892242432
    5. '                   ' → logprob: -6.531591892242432
    6. '           ' → logprob: -6.781591892242432
    7. '                               ' → logprob: -7.781591892242432
    8. 'if' → logprob: -7.781591892242432
    9. '                ' → logprob: -8.156591415405273
    10. '                       ' → logprob: -8.656591415405273

Token 1639: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0031840058509260416
    2. '                   ' → logprob: -6.378183841705322
    3. '<|end|>' → logprob: -7.128183841705322
    4. '           ' → logprob: -8.37818431854248
    5. '                ' → logprob: -9.12818431854248
    6. '	           ' → logprob: -9.62818431854248
    7. '              ' → logprob: -9.87818431854248
    8. '<|end|>' → logprob: -10.00318431854248
    9. '                       ' → logprob: -10.12818431854248
    10. '                               ' → logprob: -10.87818431854248

Token 1640: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6736541986465454
    2. ' if' → logprob: -1.2986541986465454
    3. '                   ' → logprob: -2.298654079437256
    4. '               ' → logprob: -2.298654079437256
    5. '                ' → logprob: -5.048654079437256
    6. '                               ' → logprob: -5.298654079437256
    7. '                       ' → logprob: -6.298654079437256
    8. '                           ' → logprob: -7.423654079437256
    9. '                    ' → logprob: -7.923654079437256
    10. '                 ' → logprob: -7.923654079437256

Token 1641: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009746529161930084
    2. ' if' → logprob: -4.884746551513672
    3. 'in' → logprob: -6.884746551513672
    4. '               ' → logprob: -7.259746551513672
    5. '                   ' → logprob: -7.884746551513672
    6. ' in' → logprob: -11.259746551513672
    7. '0' → logprob: -12.634746551513672
    8. 'If' → logprob: -12.634746551513672
    9. '                ' → logprob: -13.134746551513672
    10. '                               ' → logprob: -13.384746551513672

Token 1642: ' the' (ID: 290)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03297463804483414
    2. 'nr' → logprob: -4.282974720001221
    3. 'in' → logprob: -4.657974720001221
    4. ' (' → logprob: -5.407974720001221
    5. ' nr' → logprob: -6.157974720001221
    6. '(' → logprob: -6.407974720001221
    7. ' in' → logprob: -8.407974243164062
    8. 'open' → logprob: -8.782974243164062
    9. '0' → logprob: -8.907974243164062
    10. '(in' → logprob: -8.907974243164062

Token 1643: ' adjacent' (ID: 39069)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005253680050373077
    2. ' (' → logprob: -5.755253791809082
    3. 'nr' → logprob: -6.505253791809082
    4. ' nr' → logprob: -8.005253791809082
    5. 'open' → logprob: -8.880253791809082
    6. '(' → logprob: -10.255253791809082
    7. '{' → logprob: -10.255253791809082
    8. 'n' → logprob: -11.630253791809082
    9. ' open' → logprob: -12.380253791809082
    10. ' ' → logprob: -12.755253791809082

Token 1644: ' cell' (ID: 4206)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6136310696601868
    2. ' cell' → logprob: -2.113631010055542
    3. 'cell' → logprob: -2.488631010055542
    4. '_' → logprob: -2.488631010055542
    5. 'in' → logprob: -3.363631010055542
    6. ' ' → logprob: -4.113631248474121
    7. 'position' → logprob: -4.238631248474121
    8. ' ==' → logprob: -4.238631248474121
    9. ' position' → logprob: -4.363631248474121
    10. 'space' → logprob: -4.613631248474121

Token 1645: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04892570525407791
    2. 'in' → logprob: -3.0489256381988525
    3. ' is' → logprob: -8.673925399780273
    4. ' ==' → logprob: -10.048925399780273
    5. ' ' → logprob: -10.173925399780273
    6. 'n' → logprob: -11.173925399780273
    7. '_in' → logprob: -11.173925399780273
    8. ')' → logprob: -11.298925399780273
    9. ' not' → logprob: -11.673925399780273
    10. '==' → logprob: -11.923925399780273

Token 1646: ' an' (ID: 448)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2522047162055969
    2. ' in' → logprob: -1.5022046566009521
    3. 'open' → logprob: -8.752204895019531
    4. ' open' → logprob: -10.627204895019531
    5. ' ' → logprob: -10.877204895019531
    6. 'n' → logprob: -11.127204895019531
    7. '(n' → logprob: -11.377204895019531
    8. ' (' → logprob: -11.752204895019531
    9. '   ' → logprob: -12.002204895019531
    10. 'nr' → logprob: -12.002204895019531

Token 1647: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.033712901175022125
    2. ' open' → logprob: -3.408712863922119
    3. '_open' → logprob: -10.283713340759277
    4. '	open' → logprob: -11.283713340759277
    5. ' ' → logprob: -12.033713340759277
    6. '(open' → logprob: -13.283713340759277
    7. ' ' → logprob: -13.408713340759277
    8. ')' → logprob: -13.408713340759277
    9. '=open' → logprob: -13.533713340759277
    10. 'in' → logprob: -14.033713340759277

Token 1648: ' square' (ID: 13749)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.37177160382270813
    2. 'square' → logprob: -1.9967715740203857
    3. '_square' → logprob: -2.1217715740203857
    4. '_' → logprob: -3.1217715740203857
    5. 's' → logprob: -5.746771812438965
    6. ' square' → logprob: -5.996771812438965
    7. 'space' → logprob: -5.996771812438965
    8. ' _' → logprob: -6.746771812438965
    9. ' ' → logprob: -7.871771812438965
    10. ''' → logprob: -8.121771812438965

Token 1649: ',' (ID: 11)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6062728762626648
    2. ' and' → logprob: -0.9812728762626648
    3. '               ' → logprob: -2.9812729358673096
    4. '                   ' → logprob: -3.6062729358673096
    5. ':' → logprob: -6.9812726974487305
    6. ',' → logprob: -7.8562726974487305
    7. ':
' → logprob: -8.98127269744873
    8. '                       ' → logprob: -9.10627269744873
    9. '                  ' → logprob: -9.73127269744873
    10. '                ' → logprob: -9.85627269744873

Token 1650: ' the' (ID: 290)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.022375464439392
    2. '                   ' → logprob: -1.022375464439392
    3. ' if' → logprob: -1.272375464439392
    4. '               ' → logprob: -9.147375106811523
    5. '                       ' → logprob: -9.272375106811523
    6. '#' → logprob: -10.147375106811523
    7. '                  ' → logprob: -10.897375106811523
    8. ' and' → logprob: -10.897375106811523
    9. '                               ' → logprob: -11.147375106811523
    10. '                                   ' → logprob: -11.522375106811523

Token 1651: ' pawn' (ID: 112226)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008539159782230854
    2. ' if' → logprob: -5.008539199829102
    3. 'nr' → logprob: -7.258539199829102
    4. '(' → logprob: -8.383539199829102
    5. 'open' → logprob: -8.508539199829102
    6. '#' → logprob: -9.008539199829102
    7. '(n' → logprob: -9.133539199829102
    8. ' (' → logprob: -9.758539199829102
    9. '
' → logprob: -9.883539199829102
    10. '               ' → logprob: -10.008539199829102

Token 1652: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.526593804359436
    2. 'can' → logprob: -1.151593804359436
    3. '_moves' → logprob: -3.1515936851501465
    4. 'moves' → logprob: -3.1515936851501465
    5. '_can' → logprob: -5.4015936851501465
    6. ' moves' → logprob: -6.1515936851501465
    7. '           ' → logprob: -8.526594161987305
    8. '#' → logprob: -8.901594161987305
    9. '               ' → logprob: -8.901594161987305
    10. '	can' → logprob: -9.151594161987305

Token 1653: ' slide' (ID: 24969)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.05495506525039673
    2. ' move' → logprob: -2.929955005645752
    3. '	move' → logprob: -9.80495548248291
    4. '.move' → logprob: -12.17995548248291
    5. '_move' → logprob: -12.30495548248291
    6. 'jump' → logprob: -12.42995548248291
    7. 'slide' → logprob: -13.92995548248291
    8. 'moves' → logprob: -14.30495548248291
    9. '   ' → logprob: -14.55495548248291
    10. '
' → logprob: -15.17995548248291

Token 1654: ' there' (ID: 1354)
  Prédit: 'into'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'into' → logprob: -0.6874814033508301
    2. ' into' → logprob: -1.18748140335083
    3. ' there' → logprob: -2.56248140335083
    4. 'onto' → logprob: -2.93748140335083
    5. ' onto' → logprob: -3.31248140335083
    6. 'there' → logprob: -4.06248140335083
    7. '```' → logprob: -5.43748140335083
    8. 'in' → logprob: -6.56248140335083
    9. '_into' → logprob: -7.56248140335083
    10. 'to' → logprob: -8.187480926513672

Token 1655: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14973513782024384
    2. '               ' → logprob: -2.02473521232605
    3. ' if' → logprob: -5.774734973907471
    4. 'if' → logprob: -6.399734973907471
    5. ' and' → logprob: -6.899734973907471
    6. '                       ' → logprob: -7.399734973907471
    7. ',' → logprob: -8.274735450744629
    8. 'and' → logprob: -8.774735450744629
    9. ':' → logprob: -10.149735450744629
    10. '                  ' → logprob: -10.149735450744629

Token 1656: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008132955059409142
    2. '                   ' → logprob: -4.8831329345703125
    3. '                               ' → logprob: -8.758132934570312
    4. '                       ' → logprob: -9.133132934570312
    5. '                ' → logprob: -9.258132934570312
    6. '              ' → logprob: -10.383132934570312
    7. '<|end|>' → logprob: -10.883132934570312
    8. '```' → logprob: -11.008132934570312
    9. ',' → logprob: -11.133132934570312
    10. '                
' → logprob: -11.258132934570312

Token 1657: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0600980706512928
    2. 'if' (adapté à ' if') → logprob: -2.935098171234131
    3. ' if' → logprob: -5.310098171234131
    4. '                   ' → logprob: -8.435097694396973
    5. '                               ' → logprob: -10.810097694396973
    6. '                       ' → logprob: -11.310097694396973
    7. ' ' → logprob: -13.185097694396973
    8. '                           ' → logprob: -13.310097694396973
    9. '           ' → logprob: -13.435097694396973
    10. '                ' → logprob: -14.060097694396973

Token 1658: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07006958872079849
    2. ' (' → logprob: -2.6950695514678955
    3. '(' → logprob: -9.820069313049316
    4. '   ' → logprob: -10.820069313049316
    5. ' ' → logprob: -11.070069313049316
    6. '(nb' → logprob: -11.695069313049316
    7. '(r' → logprob: -11.945069313049316
    8. '(open' → logprob: -12.695069313049316
    9. '(dr' → logprob: -13.195069313049316
    10. ' ' → logprob: -13.195069313049316

Token 1659: 'nr' (ID: 33357)
  Prédit: 'nr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -1.2664456789934775e-06
    2. ' nr' → logprob: -14.000000953674316
    3. '
' → logprob: -15.500000953674316
    4. '   ' → logprob: -16.375001907348633
    5. '(n' → logprob: -17.250001907348633
    6. '_nr' → logprob: -18.000001907348633
    7. '           ' → logprob: -18.500001907348633
    8. 'n' → logprob: -18.625001907348633
    9. '                   ' → logprob: -18.625001907348633
    10. '               ' → logprob: -19.125001907348633

Token 1660: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39252012968063354
    2. ',n' → logprob: -1.1425201892852783
    3. ')' → logprob: -6.267519950866699
    4. 'in' → logprob: -6.767519950866699
    5. ' in' → logprob: -7.017519950866699
    6. ' ,' → logprob: -7.267519950866699
    7. ',in' → logprob: -8.1425199508667
    8. ',
' → logprob: -9.3925199508667
    9. '(n' → logprob: -9.5175199508667
    10. '   ' → logprob: -9.5175199508667

Token 1661: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0006851525395177305
    2. 'nc' → logprob: -8.00068473815918
    3. ')' → logprob: -8.87568473815918
    4. 'r' → logprob: -10.12568473815918
    5. ')c' → logprob: -10.37568473815918
    6. '
' → logprob: -10.50068473815918
    7. ',c' → logprob: -10.62568473815918
    8. ',n' → logprob: -11.87568473815918
    9. ',' → logprob: -11.93818473815918
    10. '   ' → logprob: -12.00068473815918

Token 1662: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11255700886249542
    2. ' in' → logprob: -2.6125569343566895
    3. 'in' → logprob: -3.4875569343566895
    4. ' )' → logprob: -5.9875569343566895
    5. ' ' → logprob: -12.612557411193848
    6. '   ' → logprob: -12.862557411193848
    7. '    ' → logprob: -12.987557411193848
    8. 'In' → logprob: -13.112557411193848
    9. '	in' → logprob: -13.487557411193848
    10. '_in' → logprob: -14.112557411193848

Token 1663: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931619048118591
    2. ' in' → logprob: -0.6931619048118591
    3. ')' → logprob: -12.568161964416504
    4. ' ' → logprob: -12.818161964416504
    5. ' not' → logprob: -13.568161964416504
    6. '	in' → logprob: -13.818161964416504
    7. ' ' → logprob: -13.818161964416504
    8. '   ' → logprob: -13.818161964416504
    9. '```' → logprob: -13.943161964416504
    10. 'not' → logprob: -14.693161964416504

Token 1664: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -2.4391956685576588e-05
    2. ' open' → logprob: -10.625024795532227
    3. '	open' → logprob: -17.375024795532227
    4. '   ' → logprob: -17.625024795532227
    5. '
' → logprob: -18.500024795532227
    6. ' ' → logprob: -19.000024795532227
    7. '(open' → logprob: -19.875024795532227
    8. '```' → logprob: -19.875024795532227
    9. '           ' → logprob: -20.250024795532227
    10. '=open' → logprob: -20.500024795532227

Token 1665: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.5048530030981055e-06
    2. 's' → logprob: -14.000001907348633
    3. '_' → logprob: -15.750001907348633
    4. '_spaces' → logprob: -16.125001907348633
    5. ' _' → logprob: -16.500001907348633
    6. ')' → logprob: -16.750001907348633
    7. 'Squares' → logprob: -17.250001907348633
    8. ')_' → logprob: -17.750001907348633
    9. '
' → logprob: -18.250001907348633
    10. ' squares' → logprob: -18.250001907348633

Token 1666: 'quares' (ID: 110764)
  Prédit: 'quares'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quares' → logprob: -0.03879930451512337
    2. 's' → logprob: -3.413799285888672
    3. '_s' → logprob: -5.288799285888672
    4. 'q' → logprob: -10.288799285888672
    5. '_' → logprob: -10.788799285888672
    6. 'qu' → logprob: -11.163799285888672
    7. 'Squares' → logprob: -11.538799285888672
    8. 'ques' → logprob: -12.413799285888672
    9. 'quare' → logprob: -12.538799285888672
    10. ' squares' → logprob: -14.163799285888672

Token 1667: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -2.5941604690160602e-05
    2. 'set' → logprob: -10.875025749206543
    3. 's' → logprob: -12.375025749206543
    4. '   ' → logprob: -14.125025749206543
    5. '_sets' → logprob: -14.625025749206543
    6. '_s' → logprob: -14.875025749206543
    7. '_SET' → logprob: -15.250025749206543
    8. ')set' → logprob: -15.500025749206543
    9. ')' → logprob: -15.625025749206543
    10. 'Set' → logprob: -16.25002670288086

Token 1668: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6690547466278076
    2. ':
' → logprob: -1.4190547466278076
    3. ' and' → logprob: -2.0440547466278076
    4. ':' → logprob: -2.4190547466278076
    5. '                       ' → logprob: -4.419054985046387
    6. '               ' → logprob: -4.544054985046387
    7. 'and' → logprob: -5.919054985046387
    8. ',' → logprob: -7.294054985046387
    9. '                           ' → logprob: -8.544054985046387
    10. '):
' → logprob: -8.919054985046387

Token 1669: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0012961853062734008
    2. '                       ' → logprob: -7.751296043395996
    3. ':' → logprob: -8.001296043395996
    4. '               ' → logprob: -9.376296043395996
    5. ' and' → logprob: -9.376296043395996
    6. '                    ' → logprob: -9.501296043395996
    7. '                  ' → logprob: -9.626296043395996
    8. ':
' → logprob: -9.876296043395996
    9. '                           ' → logprob: -10.126296043395996
    10. '                               ' → logprob: -11.001296043395996

Token 1670: ' #' (ID: 1069)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.7792868614196777
    2. '                   ' → logprob: -1.5292868614196777
    3. '#' (adapté à ' #') → logprob: -1.9042868614196777
    4. 'new' → logprob: -2.5292868614196777
    5. '                       ' → logprob: -3.1542868614196777
    6. 'prev' → logprob: -3.6542868614196777
    7. '               ' → logprob: -4.154286861419678
    8. 'moves' → logprob: -5.154286861419678
    9. ' #' → logprob: -6.154286861419678
    10. '                               ' → logprob: -7.279286861419678

Token 1671: ' Move' (ID: 25485)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.4109962284564972
    2. '#' → logprob: -2.035996198654175
    3. 'old' → logprob: -2.160996198654175
    4. '                   ' → logprob: -2.660996198654175
    5. 'prev' → logprob: -4.285996437072754
    6. '           ' → logprob: -5.910996437072754
    7. '               ' → logprob: -6.035996437072754
    8. 'p' → logprob: -7.660996437072754
    9. ' #' → logprob: -7.785996437072754
    10. '   ' → logprob: -7.785996437072754

Token 1672: ' pawn' (ID: 112226)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.39220526814460754
    2. 'from' → logprob: -2.267205238342285
    3. 'p' → logprob: -2.642205238342285
    4. '_p' → logprob: -2.642205238342285
    5. 'old' → logprob: -3.392205238342285
    6. 's' → logprob: -4.392205238342285
    7. 'pawn' → logprob: -5.017205238342285
    8. '#' → logprob: -5.392205238342285
    9. '                   ' → logprob: -5.517205238342285
    10. '_new' → logprob: -5.892205238342285

Token 1673: ' from' (ID: 591)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.567643404006958
    2. 'from' → logprob: -2.067643404006958
    3. 'new' → logprob: -2.317643404006958
    4. 's' → logprob: -3.067643404006958
    5. 'positions' → logprob: -3.192643404006958
    6. '                   ' → logprob: -3.317643404006958
    7. '_p' → logprob: -3.692643404006958
    8. '_new' → logprob: -3.942643404006958
    9. 'pos' → logprob: -4.442643165588379
    10. 'p' → logprob: -4.567643165588379

Token 1674: ' (' (ID: 350)
  Prédit: '(pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -0.025016969069838524
    2. 'pr' → logprob: -3.775017023086548
    3. ' (' → logprob: -6.775016784667969
    4. ' pr' → logprob: -8.025016784667969
    5. '(' → logprob: -8.525016784667969
    6. '(p' → logprob: -9.650016784667969
    7. '(pc' → logprob: -10.525016784667969
    8. '{' → logprob: -12.900016784667969
    9. '   ' → logprob: -13.275016784667969
    10. '	pr' → logprob: -13.650016784667969

Token 1675: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -3.607391408877447e-05
    2. ' pr' → logprob: -10.250036239624023
    3. '(pr' → logprob: -14.250036239624023
    4. '	pr' → logprob: -17.375036239624023
    5. '   ' → logprob: -17.500036239624023
    6. '
' → logprob: -19.750036239624023
    7. ' ' → logprob: -19.750036239624023
    8. '           ' → logprob: -21.750036239624023
    9. '  ' → logprob: -21.750036239624023
    10. '(' → logprob: -21.750036239624023

Token 1676: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000968156848102808
    2. ',n' → logprob: -7.875967979431152
    3. ' ,' → logprob: -8.000967979431152
    4. ',p' → logprob: -9.000967979431152
    5. ')' → logprob: -10.125967979431152
    6. 'pc' → logprob: -10.250967979431152
    7. '),(' → logprob: -11.500967979431152
    8. '(pc' → logprob: -12.125967979431152
    9. ',
' → logprob: -12.250967979431152
    10. '```' → logprob: -12.375967979431152

Token 1677: 'pc' (ID: 6344)
  Prédit: 'pc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' → logprob: -3.547789674485102e-05
    2. ' pc' → logprob: -10.250035285949707
    3. '(pc' → logprob: -16.750036239624023
    4. '	pc' → logprob: -17.625036239624023
    5. '.pc' → logprob: -18.750036239624023
    6. '   ' → logprob: -19.500036239624023
    7. '_pc' → logprob: -19.500036239624023
    8. ',' → logprob: -19.750036239624023
    9. '
' → logprob: -20.250036239624023
    10. 'PC' → logprob: -20.625036239624023

Token 1678: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8443388938903809
    2. 'to' → logprob: -1.2193388938903809
    3. ' to' → logprob: -1.7193388938903809
    4. ',' → logprob: -2.469338893890381
    5. ',to' → logprob: -4.969338893890381
    6. '),' → logprob: -6.844338893890381
    7. '                   ' → logprob: -7.094338893890381
    8. ')
' → logprob: -7.719338893890381
    9. ' ,' → logprob: -8.094339370727539
    10. ',
' → logprob: -8.719339370727539

Token 1679: ' ->' (ID: 2747)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8471518158912659
    2. ' to' → logprob: -1.472151756286621
    3. 'to' → logprob: -1.472151756286621
    4. ',' → logprob: -2.722151756286621
    5. 'p' → logprob: -3.472151756286621
    6. 'moves' → logprob: -5.722151756286621
    7. ',p' → logprob: -5.722151756286621
    8. 'positions' → logprob: -6.222151756286621
    9. ' ->' → logprob: -6.847151756286621
    10. ')' → logprob: -6.972151756286621

Token 1680: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002204497577622533
    2. ' (' → logprob: -6.127204418182373
    3. 'nr' → logprob: -11.252204895019531
    4. '   ' → logprob: -12.752204895019531
    5. ' ' → logprob: -13.502204895019531
    6. ' nr' → logprob: -15.127204895019531
    7. '
' → logprob: -15.127204895019531
    8. '  ' → logprob: -15.377204895019531
    9. '(nb' → logprob: -15.752204895019531
    10. '(' → logprob: -15.877204895019531

Token 1681: 'nr' (ID: 33357)
  Prédit: 'nr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -0.00010139751975657418
    2. '(n' → logprob: -9.375101089477539
    3. ' nr' → logprob: -11.125101089477539
    4. '
' → logprob: -14.375101089477539
    5. '   ' → logprob: -14.625101089477539
    6. 'n' → logprob: -15.875101089477539
    7. '_nr' → logprob: -16.00010108947754
    8. '[n' → logprob: -16.37510108947754
    9. '.nr' → logprob: -16.62510108947754
    10. '``' → logprob: -17.37510108947754

Token 1682: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.011049585416913033
    2. ',' → logprob: -4.511049747467041
    3. ' ,' → logprob: -14.136049270629883
    4. ',
' → logprob: -14.511049270629883
    5. '   ' → logprob: -15.136049270629883
    6. '
' → logprob: -15.511049270629883
    7. '```' → logprob: -17.511049270629883
    8. 'nc' → logprob: -17.886049270629883
    9. ',no' → logprob: -17.886049270629883
    10. '    ' → logprob: -18.636049270629883

Token 1683: 'c' (ID: 66)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.010335799306631088
    2. 'c' → logprob: -4.885335922241211
    3. ',n' → logprob: -6.135335922241211
    4. ',' → logprob: -8.135335922241211
    5. ' nc' → logprob: -9.510335922241211
    6. ',c' → logprob: -9.885335922241211
    7. ')' → logprob: -10.510335922241211
    8. '_nc' → logprob: -10.635335922241211
    9. '(n' → logprob: -10.760335922241211
    10. 'n' → logprob: -11.135335922241211

Token 1684: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.19193501770496368
    2. ')' → logprob: -2.3169350624084473
    3. '                   ' → logprob: -3.0669350624084473
    4. '):
' → logprob: -3.5669350624084473
    5. '),' → logprob: -7.191935062408447
    6. '):' → logprob: -8.441934585571289
    7. '               ' → logprob: -9.566934585571289
    8. '):

' → logprob: -10.441934585571289
    9. '                       ' → logprob: -10.691934585571289
    10. ')
' → logprob: -10.816934585571289

Token 1685: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003275864291936159
    2. '                       ' → logprob: -6.6282758712768555
    3. '                    
' → logprob: -7.1282758712768555
    4. ',' → logprob: -8.003275871276855
    5. '                    ' → logprob: -8.628275871276855
    6. '               ' → logprob: -8.753275871276855
    7. '                        
' → logprob: -9.253275871276855
    8. ':
' → logprob: -10.128275871276855
    9. ':' → logprob: -10.253275871276855
    10. '
' → logprob: -10.378275871276855

Token 1686: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.20644943416118622
    2. ' new' → logprob: -2.456449508666992
    3. '                   ' → logprob: -2.456449508666992
    4. 'old' → logprob: -5.456449508666992
    5. '           ' → logprob: -5.706449508666992
    6. 'p' → logprob: -6.081449508666992
    7. '               ' → logprob: -6.581449508666992
    8. '                       ' → logprob: -6.831449508666992
    9. '#' (adapté à ' #') → logprob: -7.206449508666992
    10. ' #' → logprob: -7.706449508666992

Token 1687: ' New' (ID: 2036)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5871322154998779
    2. '                   ' → logprob: -0.8371322154998779
    3. '#' → logprob: -5.087132453918457
    4. 'old' → logprob: -5.962132453918457
    5. 'p' → logprob: -6.837132453918457
    6. '           ' → logprob: -7.962132453918457
    7. 'prev' → logprob: -8.087132453918457
    8. ' new' → logprob: -8.837132453918457
    9. '   ' → logprob: -9.087132453918457
    10. '               ' → logprob: -9.087132453918457

Token 1688: ' paw' (ID: 71961)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.10135656595230103
    2. 'p' → logprob: -2.3513565063476562
    3. 'pawn' → logprob: -7.101356506347656
    4. 'pr' → logprob: -8.601356506347656
    5. '_pr' → logprob: -9.726356506347656
    6. 'paw' → logprob: -9.976356506347656
    7. 'open' → logprob: -11.851356506347656
    8. '_positions' → logprob: -12.226356506347656
    9. ' paw' → logprob: -12.851356506347656
    10. '_r' → logprob: -12.851356506347656

Token 1689: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.0004408015520311892
    2. 'ons' → logprob: -7.87544059753418
    3. 'n' → logprob: -10.50044059753418
    4. 's' → logprob: -11.00044059753418
    5. 'nts' → logprob: -11.37544059753418
    6. 'awns' → logprob: -14.00044059753418
    7. '           ' → logprob: -14.12544059753418
    8. 'ms' → logprob: -14.50044059753418
    9. 'ans' → logprob: -14.50044059753418
    10. 'pawn' → logprob: -14.62544059753418

Token 1690: ' positions' (ID: 15897)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.40660935640335083
    2. '_set' → logprob: -1.531609296798706
    3. ' =' → logprob: -2.531609296798706
    4. 'positions' → logprob: -4.281609535217285
    5. '_new' → logprob: -4.406609535217285
    6. '_pos' → logprob: -5.656609535217285
    7. 'new' → logprob: -6.031609535217285
    8. 'pos' → logprob: -6.156609535217285
    9. '=' → logprob: -6.156609535217285
    10. '_f' → logprob: -7.656609535217285

Token 1691: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6433604955673218
    2. ' =' → logprob: -0.7683604955673218
    3. 'new' → logprob: -4.893360614776611
    4. '_new' → logprob: -6.768360614776611
    5. 'p' → logprob: -7.143360614776611
    6. 'positions' → logprob: -8.518360137939453
    7. '=p' → logprob: -8.643360137939453
    8. '_positions' → logprob: -8.768360137939453
    9. '=
' → logprob: -8.893360137939453
    10. '_p' → logprob: -9.268360137939453

Token 1692: ' remove' (ID: 6234)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.36995556950569153
    2. 'p' → logprob: -1.9949555397033691
    3. ' new' → logprob: -2.994955539703369
    4. 'fro' → logprob: -3.244955539703369
    5. 'new' → logprob: -3.369955539703369
    6. ' fro' → logprob: -3.994955539703369
    7. 'pawn' → logprob: -4.869955539703369
    8. '                       ' → logprob: -4.869955539703369
    9. ' paw' → logprob: -5.619955539703369
    10. '{' → logprob: -6.119955539703369

Token 1693: ' old' (ID: 2890)
  Prédit: '(pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pr' → logprob: -0.03031395934522152
    2. ' (' → logprob: -3.5303139686584473
    3. '(' → logprob: -7.655313968658447
    4. '(p' → logprob: -10.405313491821289
    5. '   ' → logprob: -10.780313491821289
    6. '((' → logprob: -11.530313491821289
    7. '
' → logprob: -11.530313491821289
    8. '(pl' → logprob: -11.780313491821289
    9. 'pr' → logprob: -13.280313491821289
    10. '       ' → logprob: -13.530313491821289

Token 1694: ',' (ID: 11)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.939350962638855
    2. '(pr' → logprob: -1.064350962638855
    3. '(p' → logprob: -2.0643510818481445
    4. '(' → logprob: -2.4393510818481445
    5. 'pr' → logprob: -3.9393510818481445
    6. 'pawn' → logprob: -4.0643510818481445
    7. ' pr' → logprob: -5.1893510818481445
    8. ',' → logprob: -6.0643510818481445
    9. '_pr' → logprob: -7.0643510818481445
    10. '_p' → logprob: -7.1893510818481445

Token 1695: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.023272152990102768
    2. ' add' → logprob: -3.7732720375061035
    3. '{' → logprob: -12.148272514343262
    4. 'insert' → logprob: -12.523272514343262
    5. '_add' → logprob: -12.773272514343262
    6. 'pr' → logprob: -12.773272514343262
    7. 'replace' → logprob: -12.898272514343262
    8. '.add' → logprob: -13.023272514343262
    9. '(add' → logprob: -13.148272514343262
    10. '+' → logprob: -13.523272514343262

Token 1696: ' new' (ID: 620)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.038518086075782776
    2. ' (' → logprob: -3.288518190383911
    3. '((' → logprob: -7.913517951965332
    4. '   ' → logprob: -10.038517951965332
    5. 'new' → logprob: -10.538517951965332
    6. '(new' → logprob: -11.163517951965332
    7. ' ' → logprob: -12.163517951965332
    8. '(' → logprob: -12.413517951965332
    9. '{' → logprob: -13.038517951965332
    10. '(nn' → logprob: -13.038517951965332

Token 1697: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5496399402618408
    2. '(p' → logprob: -1.4246399402618408
    3. 'p' → logprob: -3.174639940261841
    4. '<|end|>' → logprob: -4.049639701843262
    5. ',' → logprob: -4.174639701843262
    6. '                       ' → logprob: -4.674639701843262
    7. 'pr' → logprob: -4.799639701843262
    8. ' (' → logprob: -4.924639701843262
    9. '{' → logprob: -5.049639701843262
    10. ')' → logprob: -5.049639701843262

Token 1698: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006821935996413231
    2. '                    ' → logprob: -5.756822109222412
    3. '                       ' → logprob: -5.881822109222412
    4. '               ' → logprob: -9.006821632385254
    5. '                           ' → logprob: -9.631821632385254
    6. '                    
' → logprob: -9.631821632385254
    7. '(p' → logprob: -9.756821632385254
    8. '                  ' → logprob: -10.006821632385254
    9. '   ' → logprob: -10.131821632385254
    10. '                     
' → logprob: -10.256821632385254

Token 1699: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.03721119463443756
    2. ' new' → logprob: -3.4122111797332764
    3. '                   ' → logprob: -5.6622114181518555
    4. '                       ' → logprob: -9.912211418151855
    5. 'next' → logprob: -11.662211418151855
    6. 'p' → logprob: -11.787211418151855
    7. '   ' → logprob: -12.537211418151855
    8. '                           ' → logprob: -12.912211418151855
    9. '               ' → logprob: -13.037211418151855
    10. '           ' → logprob: -13.287211418151855

Token 1700: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.003096785396337509
    2. 'p' → logprob: -5.878096580505371
    3. '_' → logprob: -8.253096580505371
    4. ' _' → logprob: -11.378096580505371
    5. '_positions' → logprob: -12.128096580505371
    6. 'pawn' → logprob: -13.003096580505371
    7. 'space' → logprob: -13.128096580505371
    8. '_space' → logprob: -13.253096580505371
    9. '   ' → logprob: -13.503096580505371
    10. '```' → logprob: -14.003096580505371

Token 1701: 'awns' (ID: 115084)
  Prédit: 'awns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'awns' → logprob: -0.0003479785518720746
    2. 'awn' → logprob: -8.375348091125488
    3. 'aw' → logprob: -9.375348091125488
    4. 'a' → logprob: -11.000348091125488
    5. 'aws' → logprob: -13.000348091125488
    6. '`' → logprob: -13.125348091125488
    7. '
' → logprob: -13.250348091125488
    8. '   ' → logprob: -13.875348091125488
    9. '_aw' → logprob: -13.875348091125488
    10. '_' → logprob: -13.875348091125488

Token 1702: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31826305389404297
    2. '=' → logprob: -1.318263053894043
    3. '_set' → logprob: -5.443263053894043
    4. 's' → logprob: -8.443263053894043
    5. '=set' → logprob: -8.443263053894043
    6. '_positions' → logprob: -8.693263053894043
    7. '=p' → logprob: -11.068263053894043
    8. 'set' → logprob: -11.318263053894043
    9. '   ' → logprob: -12.193263053894043
    10. 'Set' → logprob: -12.193263053894043

Token 1703: ' paw' (ID: 71961)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07605740427970886
    2. 'fro' → logprob: -2.7010574340820312
    3. ' fro' → logprob: -6.576057434082031
    4. ' paw' → logprob: -6.576057434082031
    5. 'pawn' → logprob: -6.701057434082031
    6. '   ' → logprob: -7.326057434082031
    7. '(p' → logprob: -7.701057434082031
    8. 'paw' → logprob: -8.201057434082031
    9. '       ' → logprob: -8.701057434082031
    10. 'f' → logprob: -9.326057434082031

Token 1704: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.6600162982940674
    2. 'ons' → logprob: -0.9100162982940674
    3. 'wn' → logprob: -2.6600162982940674
    4. 's' → logprob: -5.535016059875488
    5. 'w' → logprob: -5.785016059875488
    6. 'nts' → logprob: -6.535016059875488
    7. 'tons' → logprob: -7.160016059875488
    8. 'awns' → logprob: -8.160016059875488
    9. 'p' → logprob: -8.285016059875488
    10. 'n' → logprob: -8.535016059875488

Token 1705: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.004051802214235067
    2. 'set' → logprob: -5.629051685333252
    3. '=set' → logprob: -9.37905216217041
    4. '-' → logprob: -9.62905216217041
    5. '.copy' → logprob: -9.87905216217041
    6. 'fro' → logprob: -10.00405216217041
    7. '-set' → logprob: -10.25405216217041
    8. '.' → logprob: -10.50405216217041
    9. '   ' → logprob: -10.62905216217041
    10. 's' → logprob: -10.87905216217041

Token 1706: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02704501897096634
    2. ' -' → logprob: -3.6520450115203857
    3. '   ' → logprob: -8.027045249938965
    4. '.copy' → logprob: -8.777045249938965
    5. '.d' → logprob: -9.402045249938965
    6. '-remove' → logprob: -10.152045249938965
    7. '-{' → logprob: -10.652045249938965
    8. '=' → logprob: -11.027045249938965
    9. '                   ' → logprob: -11.277045249938965
    10. '       ' → logprob: -11.277045249938965

Token 1707: ' {(' (ID: 75216)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -1.3544423381972592e-05
    2. ' {(' → logprob: -11.25001335144043
    3. '{{' → logprob: -15.00001335144043
    4. 'fro' → logprob: -16.12501335144043
    5. '{
' → logprob: -19.87501335144043
    6. '{i' → logprob: -20.00001335144043
    7. '{s' → logprob: -20.00001335144043
    8. '{\' → logprob: -20.75001335144043
    9. '   ' → logprob: -20.75001335144043
    10. 'set' → logprob: -21.00001335144043

Token 1708: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.02977004647254944
    2. '(pr' → logprob: -3.5297701358795166
    3. ' pr' → logprob: -10.904769897460938
    4. ' (' → logprob: -14.279769897460938
    5. '(' → logprob: -15.404769897460938
    6. '	pr' → logprob: -15.779769897460938
    7. '/pr' → logprob: -16.404769897460938
    8. '   ' → logprob: -16.529769897460938
    9. '{' → logprob: -17.404769897460938
    10. 'p' → logprob: -17.904769897460938

Token 1709: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4617256056226324e-05
    2. ',n' → logprob: -11.500014305114746
    3. ' ,' → logprob: -13.000014305114746
    4. 'pc' → logprob: -13.750014305114746
    5. '(pc' → logprob: -14.875014305114746
    6. ',
' → logprob: -15.125014305114746
    7. ',p' → logprob: -15.375014305114746
    8. '	pc' → logprob: -16.250015258789062
    9. '
' → logprob: -16.875015258789062
    10. '_pc' → logprob: -17.375015258789062

Token 1710: 'pc' (ID: 6344)
  Prédit: 'pc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' → logprob: -7.505351095460355e-05
    2. ' pc' → logprob: -9.500075340270996
    3. '(pc' → logprob: -16.00007438659668
    4. '.pc' → logprob: -16.87507438659668
    5. '_pc' → logprob: -18.00007438659668
    6. '	pc' → logprob: -18.00007438659668
    7. ',' → logprob: -19.37507438659668
    8. '   ' → logprob: -20.75007438659668
    9. ' ' → logprob: -21.00007438659668
    10. '
' → logprob: -21.25007438659668

Token 1711: ')}' (ID: 15468)
  Prédit: ')}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.6152809858322144
    2. ')' → logprob: -1.4902809858322144
    3. '}' → logprob: -1.7402809858322144
    4. ',(' → logprob: -3.365281105041504
    5. ',n' → logprob: -4.365281105041504
    6. '})' → logprob: -5.615281105041504
    7. ',' → logprob: -5.615281105041504
    8. '                   ' → logprob: -6.615281105041504
    9. '(n' → logprob: -7.240281105041504
    10. ')}
' → logprob: -7.990281105041504

Token 1712: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.32369160652160645
    2. '.union' → logprob: -1.9486916065216064
    3. ' |' → logprob: -2.1986916065216064
    4. '                   ' → logprob: -4.073691368103027
    5. '{' → logprob: -6.573691368103027
    6. '                       ' → logprob: -6.948691368103027
    7. '                           ' → logprob: -7.448691368103027
    8. '                                   ' → logprob: -8.073691368103027
    9. 'new' → logprob: -8.323691368103027
    10. '           ' → logprob: -8.323691368103027

Token 1713: ' {(' (ID: 75216)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -2.1008713702030946e-06
    2. '{{' → logprob: -13.500001907348633
    3. ' {(' → logprob: -14.250001907348633
    4. '{i' → logprob: -17.875001907348633
    5. '{return' → logprob: -18.500001907348633
    6. '{s' → logprob: -18.625001907348633
    7. '   ' → logprob: -19.250001907348633
    8. '{
' → logprob: -19.625001907348633
    9. '{%' → logprob: -19.875001907348633
    10. '{/*' → logprob: -20.750001907348633

Token 1714: 'nr' (ID: 33357)
  Prédit: 'nr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -3.4121114822482923e-06
    2. ' nr' → logprob: -12.750003814697266
    3. '(n' → logprob: -15.500003814697266
    4. '
' → logprob: -16.125003814697266
    5. '_nr' → logprob: -17.125003814697266
    6. '   ' → logprob: -17.250003814697266
    7. '.nr' → logprob: -18.250003814697266
    8. '\n' → logprob: -19.000003814697266
    9. '{' → logprob: -19.375003814697266
    10. '```' → logprob: -19.875003814697266

Token 1715: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.0015686646802350879
    2. ',' → logprob: -6.501568794250488
    3. ' ,' → logprob: -9.876568794250488
    4. ',
' → logprob: -12.001568794250488
    5. 'nc' → logprob: -12.251568794250488
    6. '   ' → logprob: -13.751568794250488
    7. '(n' → logprob: -14.251568794250488
    8. '
' → logprob: -14.501568794250488
    9. ',no' → logprob: -15.376568794250488
    10. '``' → logprob: -15.626568794250488

Token 1716: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0024052660446614027
    2. 'nc' → logprob: -6.127405166625977
    3. ',n' → logprob: -9.627405166625977
    4. ',c' → logprob: -9.877405166625977
    5. '(n' → logprob: -10.252405166625977
    6. ',' → logprob: -10.877405166625977
    7. '
' → logprob: -11.752405166625977
    8. 'cn' → logprob: -12.127405166625977
    9. ')' → logprob: -12.502405166625977
    10. '``' → logprob: -12.627405166625977

Token 1717: ')}
' (ID: 19324)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.020772993564605713
    2. ')}' → logprob: -4.145772933959961
    3. '}
' → logprob: -5.520772933959961
    4. '                   ' → logprob: -7.645772933959961
    5. ')' → logprob: -8.645772933959961
    6. ')}
' → logprob: -10.020772933959961
    7. '})' → logprob: -11.520772933959961
    8. '               ' → logprob: -12.145772933959961
    9. '                       ' → logprob: -13.145772933959961
    10. ' }' → logprob: -13.145772933959961

Token 1718: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008648726157844067
    2. '                    
' → logprob: -5.133648872375488
    3. ',' → logprob: -7.258648872375488
    4. '               ' → logprob: -7.758648872375488
    5. '
' → logprob: -8.008648872375488
    6. '                       ' → logprob: -8.633648872375488
    7. '                    ' → logprob: -8.758648872375488
    8. '<|end|>' → logprob: -8.883648872375488
    9. '           ' → logprob: -9.008648872375488
    10. ')' → logprob: -9.383648872375488

Token 1719: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6500799655914307
    2. '                   ' → logprob: -1.5250799655914307
    3. '#' (adapté à ' #') → logprob: -2.2750799655914307
    4. 'open' → logprob: -3.0250799655914307
    5. ' new' → logprob: -3.1500799655914307
    6. ' #' → logprob: -4.025079727172852
    7. 'old' → logprob: -4.400079727172852
    8. '               ' → logprob: -4.525079727172852
    9. 'if' → logprob: -5.275079727172852
    10. '                       ' → logprob: -5.525079727172852

Token 1720: ' Open' (ID: 7788)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.18769538402557373
    2. 'old' → logprob: -2.5626955032348633
    3. '#' → logprob: -2.8126955032348633
    4. 'open' → logprob: -3.6876955032348633
    5. 'prev' → logprob: -5.062695503234863
    6. 'for' → logprob: -6.812695503234863
    7. '                   ' → logprob: -7.687695503234863
    8. '           ' → logprob: -8.562695503234863
    9. '               ' → logprob: -8.687695503234863
    10. 'previous' → logprob: -9.187695503234863

Token 1721: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.14881514012813568
    2. 's' → logprob: -2.023815155029297
    3. '_spaces' → logprob: -5.523815155029297
    4. '1' → logprob: -7.648815155029297
    5. 'new' → logprob: -7.648815155029297
    6. '_positions' → logprob: -7.773815155029297
    7. 'spaces' → logprob: -8.523815155029297
    8. 'square' → logprob: -9.273815155029297
    9. '_new' → logprob: -9.398815155029297
    10. 'Squares' → logprob: -9.523815155029297

Token 1722: ' move' (ID: 5275)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1038901805877686
    2. '_new' → logprob: -1.1038901805877686
    3. '=' → logprob: -1.7288901805877686
    4. '_set' → logprob: -2.9788901805877686
    5. 'new' → logprob: -2.9788901805877686
    6. 'moves' → logprob: -3.9788901805877686
    7. '_' → logprob: -4.603890419006348
    8. '_moves' → logprob: -5.103890419006348
    9. '_updated' → logprob: -5.353890419006348
    10. '_next' → logprob: -5.353890419006348

Token 1723: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25017330050468445
    2. ' =' → logprob: -1.6251733303070068
    3. 'from' → logprob: -5.250173091888428
    4. 'to' → logprob: -5.625173091888428
    5. 'open' → logprob: -5.875173091888428
    6. '_to' → logprob: -5.875173091888428
    7. '_set' → logprob: -6.125173091888428
    8. 'old' → logprob: -6.875173091888428
    9. '_old' → logprob: -6.875173091888428
    10. '_new' → logprob: -7.125173091888428

Token 1724: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.32049933075904846
    2. 'open' → logprob: -2.0704994201660156
    3. '{' → logprob: -2.6954994201660156
    4. 'old' → logprob: -2.6954994201660156
    5. '                   ' → logprob: -5.945499420166016
    6. '   ' → logprob: -5.945499420166016
    7. 'prev' → logprob: -6.195499420166016
    8. '                       ' → logprob: -7.195499420166016
    9. ' {(' → logprob: -7.320499420166016
    10. 'opens' → logprob: -7.445499420166016

Token 1725: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.07076077163219452
    2. 'opens' → logprob: -3.570760726928711
    3. '_open' → logprob: -3.695760726928711
    4. '_s' → logprob: -5.070760726928711
    5. 'positions' → logprob: -5.945760726928711
    6. '_positions' → logprob: -6.070760726928711
    7. 'op' → logprob: -6.820760726928711
    8. 's' → logprob: -6.820760726928711
    9. '_p' → logprob: -7.445760726928711
    10. 'p' → logprob: -7.820760726928711

Token 1726: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.2476685643196106
    2. 's' → logprob: -1.7476685047149658
    3. '1' → logprob: -3.997668504714966
    4. 'square' → logprob: -4.497668743133545
    5. '_positions' → logprob: -5.497668743133545
    6. '_square' → logprob: -5.622668743133545
    7. '_spaces' → logprob: -5.622668743133545
    8. 'positions' → logprob: -7.247668743133545
    9. 'spaces' → logprob: -7.622668743133545
    10. '_' → logprob: -7.747668743133545

Token 1727: ' positions' (ID: 15897)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0394747368991375
    2. ' =' → logprob: -3.5394747257232666
    3. 'new' → logprob: -4.914474964141846
    4. 'positions' → logprob: -7.164474964141846
    5. 'set' → logprob: -8.289474487304688
    6. '_new' → logprob: -8.414474487304688
    7. 'pos' → logprob: -8.539474487304688
    8. '_positions' → logprob: -8.539474487304688
    9. 'old' → logprob: -8.664474487304688
    10. 'prev' → logprob: -9.164474487304688

Token 1728: ' are' (ID: 553)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009485358372330666
    2. ' =' → logprob: -4.759485244750977
    3. 'new' → logprob: -7.259485244750977
    4. 'are' → logprob: -10.259485244750977
    5. '=
' → logprob: -10.509485244750977
    6. 'open' → logprob: -10.759485244750977
    7. '   ' → logprob: -11.634485244750977
    8. 'set' → logprob: -11.759485244750977
    9. 'updated' → logprob: -11.884485244750977
    10. '```' → logprob: -11.884485244750977

Token 1729: ' old' (ID: 2890)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.21967191994190216
    2. 'open' → logprob: -1.9696719646453857
    3. '(p' → logprob: -3.8446719646453857
    4. '((' → logprob: -4.219671726226807
    5. '(open' → logprob: -4.719671726226807
    6. '({' → logprob: -5.219671726226807
    7. 'new' → logprob: -5.844671726226807
    8. 'p' → logprob: -6.969671726226807
    9. ' {(' → logprob: -7.219671726226807
    10. 'sorted' → logprob: -7.469671726226807

Token 1730: ' open' (ID: 2494)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.5741373896598816
    2. '(pr' → logprob: -1.3241374492645264
    3. '(p' → logprob: -2.6991374492645264
    4. 'open' → logprob: -3.4491374492645264
    5. 'pr' → logprob: -3.5741374492645264
    6. 'pawn' → logprob: -4.074137210845947
    7. '(' → logprob: -4.324137210845947
    8. 'p' → logprob: -5.074137210845947
    9. ' {(' → logprob: -5.949137210845947
    10. '(open' → logprob: -6.574137210845947

Token 1731: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.09096779674291611
    2. 's' → logprob: -2.715967893600464
    3. '(' → logprob: -4.715967655181885
    4. ' squares' → logprob: -5.590967655181885
    5. '((' → logprob: -6.215967655181885
    6. '   ' → logprob: -6.965967655181885
    7. '(s' → logprob: -7.090967655181885
    8. '{' → logprob: -7.215967655181885
    9. ' (' → logprob: -7.590967655181885
    10. '```' → logprob: -7.715967655181885

Token 1732: ' removing' (ID: 28559)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16055971384048462
    2. ' -' → logprob: -1.9105596542358398
    3. '=' → logprob: -9.53555965423584
    4. 'minus' → logprob: -10.03555965423584
    5. ' ' → logprob: -10.28555965423584
    6. '   ' → logprob: -10.41055965423584
    7. '
' → logprob: -10.41055965423584
    8. '{' → logprob: -10.66055965423584
    9. '-set' → logprob: -10.78555965423584
    10. '-
' → logprob: -10.78555965423584

Token 1733: ' moved' (ID: 12183)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.005383756943047047
    2. ' {(' → logprob: -5.5053839683532715
    3. '(n' → logprob: -7.1303839683532715
    4. '(pr' → logprob: -7.6303839683532715
    5. '[(' → logprob: -11.255383491516113
    6. '((' → logprob: -13.630383491516113
    7. ' (' → logprob: -13.880383491516113
    8. '{{' → logprob: -14.380383491516113
    9. '(' → logprob: -14.380383491516113
    10. '(p' → logprob: -14.755383491516113

Token 1734: ' square' (ID: 13749)
  Prédit: 'pawn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pawn' → logprob: -0.046540044248104095
    2. '{' → logprob: -4.046540260314941
    3. ' {(' → logprob: -4.296540260314941
    4. '(' → logprob: -4.421540260314941
    5. ' (' → logprob: -6.546540260314941
    6. ' {' → logprob: -8.796540260314941
    7. '(p' → logprob: -8.921540260314941
    8. ' pawn' → logprob: -9.046540260314941
    9. 'piece' → logprob: -9.296540260314941
    10. '(pr' → logprob: -9.671540260314941

Token 1735: ' adding' (ID: 12673)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5809625387191772
    2. ' -' → logprob: -0.8309625387191772
    3. '{' → logprob: -6.830962657928467
    4. 's' → logprob: -7.080962657928467
    5. ' ' → logprob: -7.330962657928467
    6. '   ' → logprob: -7.830962657928467
    7. '|' → logprob: -7.955962657928467
    8. 'and' → logprob: -8.455962181091309
    9. ' {(' → logprob: -8.580962181091309
    10. '                   ' → logprob: -8.955962181091309

Token 1736: ' pawn' (ID: 112226)
  Prédit: ' {('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {(' → logprob: -0.6636144518852234
    2. '{' → logprob: -0.9136144518852234
    3. '(pr' → logprob: -2.788614511489868
    4. ' (' → logprob: -3.913614511489868
    5. '(' → logprob: -6.288614273071289
    6. ' {' → logprob: -7.913614273071289
    7. '(p' → logprob: -9.788614273071289
    8. '   ' → logprob: -9.913614273071289
    9. '((' → logprob: -10.288614273071289
    10. ' ' → logprob: -10.663614273071289

Token 1737: ' old' (ID: 2890)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.15496596693992615
    2. '(' → logprob: -3.029965877532959
    3. ' position' → logprob: -3.279965877532959
    4. 'pos' → logprob: -4.029965877532959
    5. ' {(' → logprob: -4.279965877532959
    6. ' (' → logprob: -4.529965877532959
    7. '{' → logprob: -5.279965877532959
    8. ''s' → logprob: -5.404965877532959
    9. 'positions' → logprob: -6.529965877532959
    10. '(position' → logprob: -6.654965877532959

Token 1738: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.03632928431034088
    2. ' position' → logprob: -4.41132926940918
    3. 'pos' → logprob: -4.66132926940918
    4. '(' → logprob: -4.66132926940918
    5. ' (' → logprob: -5.66132926940918
    6. 'space' → logprob: -7.66132926940918
    7. '(position' → logprob: -8.41132926940918
    8. ' ' → logprob: -9.28632926940918
    9. '_position' → logprob: -9.28632926940918
    10. 'positions' → logprob: -9.91132926940918

Token 1739: '
' (ID: 198)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9174008369445801
    2. '-' → logprob: -1.04240083694458
    3. '                   ' → logprob: -2.16740083694458
    4. 'open' → logprob: -2.91740083694458
    5. ' =' → logprob: -4.29240083694458
    6. '|' → logprob: -4.66740083694458
    7. '.union' → logprob: -5.16740083694458
    8. '=' → logprob: -5.29240083694458
    9. ',' → logprob: -5.29240083694458
    10. '
' → logprob: -5.41740083694458

Token 1740: '                   ' (ID: 699)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7686958909034729
    2. '                   ' → logprob: -0.7686958909034729
    3. '=' → logprob: -3.893695831298828
    4. ' -' → logprob: -4.268695831298828
    5. '   ' → logprob: -5.143695831298828
    6. '{' → logprob: -5.143695831298828
    7. 'open' → logprob: -5.393695831298828
    8. '.remove' → logprob: -5.768695831298828
    9. '-' → logprob: -6.143695831298828
    10. '.union' → logprob: -6.393695831298828

Token 1741: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.024709630757570267
    2. '{' → logprob: -4.399709701538086
    3. 'open' → logprob: -4.649709701538086
    4. '(new' → logprob: -6.899709701538086
    5. '   ' → logprob: -8.024709701538086
    6. '((' → logprob: -8.149709701538086
    7. 'old' → logprob: -8.649709701538086
    8. ' new' → logprob: -9.024709701538086
    9. 'tmp' → logprob: -9.274709701538086
    10. 'ns' → logprob: -9.524709701538086

Token 1742: '_open' (ID: 26173)
  Prédit: '_open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_open' → logprob: -0.19384297728538513
    2. '_p' → logprob: -2.068842887878418
    3. '_s' → logprob: -3.443842887878418
    4. '_' → logprob: -4.443842887878418
    5. '_op' → logprob: -5.943842887878418
    6. 'open' → logprob: -6.193842887878418
    7. ' _' → logprob: -6.818842887878418
    8. '   ' → logprob: -9.818842887878418
    9. '_o' → logprob: -10.318842887878418
    10. '_spaces' → logprob: -10.318842887878418

Token 1743: ' =' (ID: 314)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00015205175441224128
    2. 's' → logprob: -10.250151634216309
    3. '   ' → logprob: -10.500151634216309
    4. ' squares' → logprob: -10.875151634216309
    5. '_spaces' → logprob: -11.000151634216309
    6. ' _' → logprob: -11.375151634216309
    7. '```' → logprob: -11.750151634216309
    8. ')' → logprob: -12.125151634216309
    9. ')_' → logprob: -12.625151634216309
    10. '_' → logprob: -12.750151634216309

Token 1744: ' open' (ID: 2494)
  Prédit: '(open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(open' → logprob: -0.6443918943405151
    2. 'tuple' → logprob: -1.5193918943405151
    3. '(tuple' → logprob: -2.0193920135498047
    4. 'open' → logprob: -2.6443920135498047
    5. '(f' → logprob: -4.019392013549805
    6. '{' → logprob: -4.269392013549805
    7. '((' → logprob: -4.644392013549805
    8. 'fro' → logprob: -5.269392013549805
    9. '(sorted' → logprob: -6.269392013549805
    10. '(' → logprob: -7.144392013549805

Token 1745: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -5.1093578804284334e-05
    2. 's' → logprob: -10.125051498413086
    3. '_spaces' → logprob: -12.375051498413086
    4. '{' → logprob: -13.375051498413086
    5. '((' → logprob: -13.750051498413086
    6. '   ' → logprob: -14.125051498413086
    7. '[(' → logprob: -14.500051498413086
    8. '_square' → logprob: -14.750051498413086
    9. '{s' → logprob: -15.000051498413086
    10. 'Squares' → logprob: -15.250051498413086

Token 1746: 'quares' (ID: 110764)
  Prédit: 'quares'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quares' → logprob: -0.10446905344724655
    2. '_s' → logprob: -2.479469060897827
    3. 's' → logprob: -4.604468822479248
    4. '{' → logprob: -5.604468822479248
    5. '((' → logprob: -7.979468822479248
    6. 'et' → logprob: -8.229469299316406
    7. '{s' → logprob: -9.104469299316406
    8. ' {(' → logprob: -9.354469299316406
    9. 'q' → logprob: -9.354469299316406
    10. 'qu' → logprob: -9.479469299316406

Token 1747: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.005621585063636303
    2. 'set' → logprob: -5.880621433258057
    3. '-' → logprob: -7.380621433258057
    4. '{' → logprob: -7.505621433258057
    5. ' -' → logprob: -7.880621433258057
    6. '   ' → logprob: -7.880621433258057
    7. 's' → logprob: -8.505621910095215
    8. '_s' → logprob: -8.505621910095215
    9. '=' → logprob: -9.255621910095215
    10. '=set' → logprob: -9.255621910095215

Token 1748: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1603904515504837
    2. ' -' → logprob: -1.9103904962539673
    3. '-{' → logprob: -8.785390853881836
    4. '-remove' → logprob: -12.285390853881836
    5. '   ' → logprob: -12.910390853881836
    6. '{' → logprob: -13.160390853881836
    7. '{-' → logprob: -14.035390853881836
    8. ' ' → logprob: -14.535390853881836
    9. '-(' → logprob: -14.910390853881836
    10. '-set' → logprob: -15.285390853881836

Token 1749: ' {(' (ID: 75216)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -7.896309739408025e-07
    2. ' {(' → logprob: -14.250000953674316
    3. '{{' → logprob: -16.875
    4. '{i' → logprob: -18.125
    5. '{s' → logprob: -18.25
    6. '{return' → logprob: -19.375
    7. '{
' → logprob: -19.375
    8. '={(' → logprob: -20.25
    9. '{lng' → logprob: -20.625
    10. '{|' → logprob: -20.625

Token 1750: 'nr' (ID: 33357)
  Prédit: 'nr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -0.2014920711517334
    2. '(n' → logprob: -1.7014920711517334
    3. ' nr' → logprob: -9.826492309570312
    4. '_nr' → logprob: -11.826492309570312
    5. ' (' → logprob: -12.701492309570312
    6. 'n' → logprob: -12.701492309570312
    7. '.nr' → logprob: -12.701492309570312
    8. ',n' → logprob: -13.451492309570312
    9. '{' → logprob: -13.451492309570312
    10. 'Nr' → logprob: -13.576492309570312

Token 1751: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.014272687956690788
    2. ',' → logprob: -4.264272689819336
    3. ' ,' → logprob: -10.014272689819336
    4. 'nc' → logprob: -10.264272689819336
    5. ',
' → logprob: -11.389272689819336
    6. ',c' → logprob: -12.389272689819336
    7. '   ' → logprob: -12.764272689819336
    8. '(n' → logprob: -12.889272689819336
    9. '.nc' → logprob: -13.889272689819336
    10. '  ' → logprob: -13.951772689819336

Token 1752: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0012842832366004586
    2. 'nc' → logprob: -6.876284122467041
    3. ')' → logprob: -8.8762845993042
    4. 'pc' → logprob: -10.6262845993042
    5. '(n' → logprob: -10.7512845993042
    6. ',n' → logprob: -11.1262845993042
    7. ')c' → logprob: -11.6262845993042
    8. 'n' → logprob: -11.8762845993042
    9. ',c' → logprob: -12.1262845993042
    10. ',' → logprob: -12.6262845993042

Token 1753: ')}' (ID: 15468)
  Prédit: ')}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.09583054482936859
    2. '}' → logprob: -2.4708304405212402
    3. ')' → logprob: -5.59583044052124
    4. '})' → logprob: -6.09583044052124
    5. ',' → logprob: -7.47083044052124
    6. ',(' → logprob: -9.470830917358398
    7. '{' → logprob: -9.595830917358398
    8. ' {(' → logprob: -9.845830917358398
    9. ')}
' → logprob: -10.470830917358398
    10. '}
' → logprob: -10.720830917358398

Token 1754: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0029289720114320517
    2. ' |' → logprob: -5.877928733825684
    3. '                   ' → logprob: -9.377928733825684
    4. '|(' → logprob: -12.002928733825684
    5. '   ' → logprob: -12.252928733825684
    6. '                       ' → logprob: -12.252928733825684
    7. '.union' → logprob: -12.252928733825684
    8. '                    ' → logprob: -12.377928733825684
    9. '                           ' → logprob: -13.252928733825684
    10. '                               ' → logprob: -13.502928733825684

Token 1755: ' {(' (ID: 75216)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0009159822366200387
    2. ' {(' → logprob: -7.000916004180908
    3. '{{' → logprob: -12.50091552734375
    4. '   ' → logprob: -14.50091552734375
    5. '{return' → logprob: -17.00091552734375
    6. '           ' → logprob: -17.25091552734375
    7. '{s' → logprob: -17.37591552734375
    8. '       ' → logprob: -17.50091552734375
    9. '({' → logprob: -17.62591552734375
    10. '={(' → logprob: -18.25091552734375

Token 1756: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.00015908108616713434
    2. '(pr' → logprob: -8.75015926361084
    3. ' pr' → logprob: -14.25015926361084
    4. '	pr' → logprob: -18.000158309936523
    5. '   ' → logprob: -18.875158309936523
    6. ' (' → logprob: -20.250158309936523
    7. '(' → logprob: -21.375158309936523
    8. 'prs' → logprob: -21.375158309936523
    9. 'prt' → logprob: -21.500158309936523
    10. 'pl' → logprob: -21.750158309936523

Token 1757: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.842555426876061e-06
    2. ' ,' → logprob: -12.750004768371582
    3. 'pc' → logprob: -13.750004768371582
    4. '(pc' → logprob: -15.250004768371582
    5. ',p' → logprob: -15.375004768371582
    6. '_pc' → logprob: -16.6250057220459
    7. '.pc' → logprob: -16.7500057220459
    8. '	pc' → logprob: -16.7500057220459
    9. ',
' → logprob: -17.0000057220459
    10. '```' → logprob: -17.2500057220459

Token 1758: 'pc' (ID: 6344)
  Prédit: 'pc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' → logprob: -9.372294698550832e-06
    2. ' pc' → logprob: -11.750009536743164
    3. 'pcb' → logprob: -14.750009536743164
    4. '(pc' → logprob: -15.125009536743164
    5. '	pc' → logprob: -15.375009536743164
    6. '.pc' → logprob: -15.750009536743164
    7. ',' → logprob: -16.000009536743164
    8. '_pc' → logprob: -16.500009536743164
    9. '
' → logprob: -16.625009536743164
    10. ' ' → logprob: -17.500009536743164

Token 1759: ')}

' (ID: 184554)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.4771024286746979
    2. '}' → logprob: -0.9771023988723755
    3. '                   ' → logprob: -6.227102279663086
    4. ')' → logprob: -7.852102279663086
    5. ')}
' → logprob: -8.102102279663086
    6. '})' → logprob: -8.727102279663086
    7. '}
' → logprob: -8.852102279663086
    8. '                       ' → logprob: -11.602102279663086
    9. ')}}' → logprob: -12.227102279663086
    10. '               ' → logprob: -12.352102279663086

Token 1760: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00042531240615062416
    2. '                    
' → logprob: -9.000425338745117
    3. '               ' → logprob: -9.125425338745117
    4. '                       ' → logprob: -10.375425338745117
    5. '(' → logprob: -10.625425338745117
    6. '				' → logprob: -10.750425338745117
    7. '           ' → logprob: -10.750425338745117
    8. '
' → logprob: -10.750425338745117
    9. ' (' → logprob: -11.125425338745117
    10. '   ' → logprob: -11.750425338745117

Token 1761: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3632783591747284
    2. 'if' → logprob: -2.113278388977051
    3. 'moves' → logprob: -2.613278388977051
    4. 'yield' → logprob: -3.113278388977051
    5. 'new' → logprob: -3.738278388977051
    6. '                       ' → logprob: -4.238278388977051
    7. 'for' → logprob: -4.613278388977051
    8. 'state' → logprob: -5.238278388977051
    9. '(' → logprob: -6.363278388977051
    10. '(new' → logprob: -6.488278388977051

Token 1762: ' King' (ID: 8768)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.00805513933300972
    2. '                   ' → logprob: -5.258055210113525
    3. 'if' → logprob: -6.133055210113525
    4. '                       ' → logprob: -8.883054733276367
    5. '#' → logprob: -8.883054733276367
    6. ' moves' → logprob: -9.258054733276367
    7. '               ' → logprob: -9.508054733276367
    8. 'for' → logprob: -9.758054733276367
    9. 'mov' → logprob: -10.258054733276367
    10. '           ' → logprob: -10.758054733276367

Token 1763: ' position' (ID: 4010)
  Prédit: '_r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.3343600630760193
    2. 'r' → logprob: -2.584360122680664
    3. '_pos' → logprob: -2.584360122680664
    4. '_moves' → logprob: -2.584360122680664
    5. '_positions' → logprob: -4.084360122680664
    6. '                   ' → logprob: -4.084360122680664
    7. 'pos' → logprob: -4.334360122680664
    8. '_position' → logprob: -5.334360122680664
    9. '_move' → logprob: -6.209360122680664
    10. 'moves' → logprob: -7.084360122680664

Token 1764: ' unchanged' (ID: 73928)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3276161253452301
    2. ',' → logprob: -1.4526160955429077
    3. 'moves' → logprob: -4.702616214752197
    4. ' =' → logprob: -5.202616214752197
    5. '_moves' → logprob: -5.452616214752197
    6. ',state' → logprob: -5.702616214752197
    7. ')' → logprob: -5.702616214752197
    8. '=' → logprob: -5.827616214752197
    9. 'state' → logprob: -6.202616214752197
    10. '                    
' → logprob: -6.327616214752197

Token 1765: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0009524329798296094
    2. ',' → logprob: -7.625952243804932
    3. '
' → logprob: -8.75095272064209
    4. '                    
' → logprob: -9.37595272064209
    5. ',
' → logprob: -10.12595272064209
    6. '               ' → logprob: -10.12595272064209
    7. '				' → logprob: -10.25095272064209
    8. '                       ' → logprob: -10.37595272064209
    9. '           ' → logprob: -10.50095272064209
    10. '```' → logprob: -11.50095272064209

Token 1766: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -2.6537622034084052e-05
    2. '                    
' → logprob: -11.50002670288086
    3. '               ' → logprob: -12.25002670288086
    4. '                       ' → logprob: -12.37502670288086
    5. '           ' → logprob: -13.00002670288086
    6. ',' → logprob: -13.25002670288086
    7. '
' → logprob: -13.37502670288086
    8. '                  ' → logprob: -14.25002670288086
    9. '       ' → logprob: -15.62502670288086
    10. '		           ' → logprob: -15.75002670288086

Token 1767: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' (adapté à ' moves') → logprob: -0.0008564318413846195
    2. '                   ' → logprob: -7.375856399536133
    3. 'yield' → logprob: -8.875856399536133
    4. '                       ' → logprob: -10.000856399536133
    5. 'if' → logprob: -10.875856399536133
    6. ' moves' → logprob: -11.625856399536133
    7. 'mov' → logprob: -12.375856399536133
    8. '               ' → logprob: -12.625856399536133
    9. '   ' → logprob: -12.875856399536133
    10. '                    
' → logprob: -13.375856399536133

Token 1768: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0013326213229447603
    2. '.' → logprob: -6.626332759857178
    3. ' .' → logprob: -13.00133228302002
    4. '.extend' → logprob: -13.12633228302002
    5. '.app' → logprob: -14.37633228302002
    6. 'append' → logprob: -14.50133228302002
    7. '.push' → logprob: -15.00133228302002
    8. '.add' → logprob: -15.25133228302002
    9. '.Append' → logprob: -15.62633228302002
    10. '           ' → logprob: -15.62633228302002

Token 1769: '(' (ID: 7)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.11038268357515335
    2. '(' → logprob: -2.3603827953338623
    3. '   ' → logprob: -4.610382556915283
    4. ' (' → logprob: -9.235383033752441
    5. '       ' → logprob: -10.485383033752441
    6. ' ((' → logprob: -10.610383033752441
    7. '                   ' → logprob: -11.110383033752441
    8. '(((' → logprob: -12.110383033752441
    9. '                       ' → logprob: -13.985383033752441
    10. '    ' → logprob: -13.985383033752441

Token 1770: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00019054718723054975
    2. '(r' → logprob: -9.375190734863281
    3. '   ' → logprob: -10.000190734863281
    4. ' (' → logprob: -10.750190734863281
    5. '((' → logprob: -11.250190734863281
    6. '                   ' → logprob: -11.750190734863281
    7. '(k' → logprob: -12.250190734863281
    8. '                       ' → logprob: -12.500190734863281
    9. '(s' → logprob: -13.125190734863281
    10. 'kr' → logprob: -13.375190734863281

Token 1771: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.02215191163122654
    2. '(' → logprob: -4.022151947021484
    3. 'kr' → logprob: -6.397151947021484
    4. '                   ' → logprob: -6.772151947021484
    5. ' king' → logprob: -7.647151947021484
    6. '               ' → logprob: -8.522151947021484
    7. '   ' → logprob: -8.647151947021484
    8. '                       ' → logprob: -9.397151947021484
    9. '           ' → logprob: -10.022151947021484
    10. '       ' → logprob: -10.522151947021484

Token 1772: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.0012052309466525912
    2. 'r' → logprob: -7.0012054443359375
    3. ')' → logprob: -9.001205444335938
    4. ',r' → logprob: -10.376205444335938
    5. '   ' → logprob: -10.376205444335938
    6. '
' → logprob: -11.251205444335938
    7. ',' → logprob: -11.376205444335938
    8. ')_' → logprob: -11.376205444335938
    9. '(r' → logprob: -11.751205444335938
    10. '```' → logprob: -12.001205444335938

Token 1773: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05080663412809372
    2. ',k' → logprob: -3.4258065223693848
    3. ' ,' → logprob: -4.175806522369385
    4. ',
' → logprob: -7.675806522369385
    5. '   ' → logprob: -8.050806999206543
    6. '	' → logprob: -8.175806999206543
    7. ',c' → logprob: -8.800806999206543
    8. ',n' → logprob: -9.550806999206543
    9. '     ' → logprob: -9.800806999206543
    10. '    ' → logprob: -9.800806999206543

Token 1774: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.6932513117790222
    2. 'kc' → logprob: -0.6932513117790222
    3. ' king' → logprob: -9.443251609802246
    4. ' kc' → logprob: -11.693251609802246
    5. 'k' → logprob: -12.193251609802246
    6. '   ' → logprob: -12.568251609802246
    7. '  ' → logprob: -13.443251609802246
    8. '    ' → logprob: -14.193251609802246
    9. '     ' → logprob: -14.318251609802246
    10. 'kg' → logprob: -14.568251609802246

Token 1775: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0005865143029950559
    2. 'c' → logprob: -7.50058650970459
    3. ',c' → logprob: -10.62558650970459
    4. ',' → logprob: -13.00058650970459
    5. '_r' → logprob: -13.12558650970459
    6. '   ' → logprob: -13.25058650970459
    7. 'kc' → logprob: -14.00058650970459
    8. '_k' → logprob: -14.50058650970459
    9. '
' → logprob: -15.00058650970459
    10. '	c' → logprob: -15.12558650970459

Token 1776: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20307350158691406
    2. ',new' → logprob: -1.703073501586914
    3. ' ,' → logprob: -6.703073501586914
    4. ',
' → logprob: -8.703073501586914
    5. '                   ' → logprob: -9.453073501586914
    6. ',n' → logprob: -10.453073501586914
    7. ',(' → logprob: -10.828073501586914
    8. '   ' → logprob: -10.953073501586914
    9. ',{' → logprob: -11.078073501586914
    10. 'new' → logprob: -11.328073501586914

Token 1777: ' fro' (ID: 16956)
  Prédit: 'fro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fro' → logprob: -0.0896831825375557
    2. 'new' → logprob: -2.4646832942962646
    3. ' fro' → logprob: -7.9646830558776855
    4. '   ' → logprob: -8.339683532714844
    5. '                   ' → logprob: -10.589683532714844
    6. ' new' → logprob: -10.589683532714844
    7. 'f' → logprob: -10.714683532714844
    8. '           ' → logprob: -11.214683532714844
    9. '               ' → logprob: -11.339683532714844
    10. '                       ' → logprob: -11.714683532714844

Token 1778: 'zens' (ID: 33107)
  Prédit: 'zens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zens' → logprob: -0.0012014202075079083
    2. 'zes' → logprob: -6.751201629638672
    3. 'es' → logprob: -11.251201629638672
    4. 'ens' → logprob: -11.626201629638672
    5. 'zen' → logprob: -12.001201629638672
    6. 'enz' → logprob: -13.751201629638672
    7. 'esz' → logprob: -14.501201629638672
    8. 'ze' → logprob: -15.376201629638672
    9. 'enes' → logprob: -15.626201629638672
    10. 'zos' → logprob: -15.751201629638672

Token 1779: 'et' (ID: 292)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.008154117502272129
    2. 'et' → logprob: -4.883153915405273
    3. 's' → logprob: -9.258153915405273
    4. '   ' → logprob: -9.258153915405273
    5. '```' → logprob: -9.633153915405273
    6. '{' → logprob: -9.758153915405273
    7. 'sets' → logprob: -9.883153915405273
    8. 'ets' → logprob: -10.633153915405273
    9. 'new' → logprob: -10.758153915405273
    10. '
' → logprob: -10.758153915405273

Token 1780: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.0015034328680485487
    2. 'new' → logprob: -6.5015034675598145
    3. ')new' → logprob: -14.876502990722656
    4. '[new' → logprob: -15.501502990722656
    5. '```' → logprob: -16.001502990722656
    6. ' new' → logprob: -16.001502990722656
    7. '=new' → logprob: -16.251502990722656
    8. ',new' → logprob: -16.876502990722656
    9. ' (' → logprob: -17.001502990722656
    10. '   ' → logprob: -17.376502990722656

Token 1781: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.47134801745414734
    2. 'p' → logprob: -1.0963480472564697
    3. '(p' → logprob: -4.346347808837891
    4. '(new' → logprob: -4.471347808837891
    5. 'new' → logprob: -4.971347808837891
    6. '((' → logprob: -5.096347808837891
    7. '{' → logprob: -6.096347808837891
    8. 'moves' → logprob: -7.596347808837891
    9. '({' → logprob: -7.846347808837891
    10. 's' → logprob: -8.34634780883789

Token 1782: 'awns' (ID: 115084)
  Prédit: 'awns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'awns' → logprob: -0.0030040887650102377
    2. 'owns' → logprob: -6.62800407409668
    3. 'ons' → logprob: -7.12800407409668
    4. '{' → logprob: -8.37800407409668
    5. '(' → logprob: -9.25300407409668
    6. 'aws' → logprob: -9.50300407409668
    7. ')' → logprob: -9.62800407409668
    8. '(p' → logprob: -9.62800407409668
    9. 'aw' → logprob: -9.87800407409668
    10. 'awn' → logprob: -10.00300407409668

Token 1783: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.14465220272541046
    2. ',' → logprob: -2.0196521282196045
    3. ')' → logprob: -6.519652366638184
    4. ' ),' → logprob: -9.394652366638184
    5. '))' → logprob: -9.394652366638184
    6. '),(' → logprob: -9.394652366638184
    7. ' ,' → logprob: -9.769652366638184
    8. '),
' → logprob: -10.269652366638184
    9. ',),' → logprob: -10.269652366638184
    10. '           ' → logprob: -10.394652366638184

Token 1784: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0004170873435214162
    2. ' tuple' → logprob: -8.12541675567627
    3. '(tuple' → logprob: -10.12541675567627
    4. '               ' → logprob: -10.87541675567627
    5. '                   ' → logprob: -11.12541675567627
    6. '           ' → logprob: -11.25041675567627
    7. 'new' → logprob: -11.75041675567627
    8. '   ' → logprob: -11.87541675567627
    9. '                       ' → logprob: -12.00041675567627
    10. '                           ' → logprob: -12.75041675567627

Token 1785: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.00016313401283696294
    2. 'sorted' → logprob: -8.750163078308105
    3. '(' → logprob: -12.375163078308105
    4. '([' → logprob: -14.875163078308105
    5. '[' → logprob: -17.625164031982422
    6. ' sorted' → logprob: -18.375164031982422
    7. '   ' → logprob: -18.875164031982422
    8. '(
' → logprob: -19.000164031982422
    9. '(map' → logprob: -19.000164031982422
    10. '((' → logprob: -19.000164031982422

Token 1786: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.0005010855966247618
    2. '(list' → logprob: -7.8755011558532715
    3. 'new' → logprob: -9.125500679016113
    4. '((' → logprob: -11.750500679016113
    5. '(' → logprob: -12.875500679016113
    6. '(open' → logprob: -14.750500679016113
    7. 'list' → logprob: -15.000500679016113
    8. '(sorted' → logprob: -15.375500679016113
    9. '([' → logprob: -15.750500679016113
    10. ')new' → logprob: -16.00050163269043

Token 1787: '_open' (ID: 26173)
  Prédit: '_open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_open' → logprob: -0.1490420252084732
    2. 'open' → logprob: -2.1490421295166016
    3. '(open' → logprob: -3.8990421295166016
    4. '(new' → logprob: -7.024042129516602
    5. '((' → logprob: -7.774042129516602
    6. 'new' → logprob: -9.774042129516602
    7. '_new' → logprob: -9.774042129516602
    8. '(' → logprob: -10.399042129516602
    9. '	open' → logprob: -11.274042129516602
    10. '({' → logprob: -11.524042129516602

Token 1788: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5236726403236389
    2. ')))' → logprob: -0.8986726403236389
    3. ')),' → logprob: -8.648673057556152
    4. ')))
' → logprob: -9.773673057556152
    5. '))))' → logprob: -9.773673057556152
    6. '))}
' → logprob: -9.898673057556152
    7. ')' → logprob: -10.148673057556152
    8. '   ' → logprob: -10.398673057556152
    9. '()))' → logprob: -10.523673057556152
    10. '))
' → logprob: -10.773673057556152

Token 1789: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025699487887322903
    2. '                   ' → logprob: -6.627570152282715
    3. ')
' → logprob: -7.377570152282715
    4. '               ' → logprob: -9.002570152282715
    5. '           ' → logprob: -9.002570152282715
    6. '   ' → logprob: -9.377570152282715
    7. ' )' → logprob: -9.377570152282715
    8. '       ' → logprob: -9.627570152282715
    9. '                       ' → logprob: -10.627570152282715
    10. '                           ' → logprob: -10.877570152282715

Token 1790: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1791: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016648298129439354
    2. '
' → logprob: -5.266648292541504
    3. 'return' (adapté à ' return') → logprob: -5.391648292541504
    4. '    
' → logprob: -6.141648292541504
    5. '	return' → logprob: -6.516648292541504
    6. '       ' → logprob: -7.141648292541504
    7. '<|end|>' → logprob: -7.141648292541504
    8. ')' → logprob: -7.516648292541504
    9. '  
' → logprob: -8.266648292541504
    10. '\n' → logprob: -9.016648292541504

Token 1792: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -5.080963092041202e-06
    2. ' moves' → logprob: -12.375004768371582
    3. 'mov' → logprob: -14.125004768371582
    4. 'm' → logprob: -16.5000057220459
    5. 'move' → logprob: -17.1250057220459
    6. '[]' → logprob: -18.0000057220459
    7. '   ' → logprob: -18.2500057220459
    8. 'matches' → logprob: -18.6250057220459
    9. '_moves' → logprob: -19.6250057220459
    10. '[m' → logprob: -19.7500057220459

Token 1793: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8460301756858826
    2. '<|end|>' → logprob: -0.9710301756858826
    3. '
' → logprob: -1.8460302352905273
    4. '    
' → logprob: -4.846030235290527
    5. '<|end|>' → logprob: -4.971030235290527
    6. 'def' → logprob: -4.971030235290527
    7. '```' → logprob: -5.596030235290527
    8. '  
' → logprob: -6.096030235290527
    9. ')' → logprob: -7.096030235290527
    10. ':' → logprob: -7.221030235290527

Token 1794: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17839795351028442
    2. 'def' → logprob: -1.9283978939056396
    3. '
' → logprob: -5.178398132324219
    4. '#' → logprob: -5.428398132324219
    5. 'state' → logprob: -6.428398132324219
    6. '    
' → logprob: -6.553398132324219
    7. '```' → logprob: -6.678398132324219
    8. 'return' → logprob: -7.053398132324219
    9. 'states' → logprob: -7.303398132324219
    10. '       ' → logprob: -8.053398132324219

Token 1795: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6090806126594543
    2. '   ' → logprob: -1.1090805530548096
    3. 'for' → logprob: -2.9840805530548096
    4. '#' (adapté à ' #') → logprob: -3.1090805530548096
    5. '
' → logprob: -5.109080791473389
    6. 'states' → logprob: -5.484080791473389
    7. '```' → logprob: -5.609080791473389
    8. 'return' → logprob: -5.609080791473389
    9. 'visited' → logprob: -5.734080791473389
    10. 'state' → logprob: -6.109080791473389

Token 1796: ' King' (ID: 8768)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06264084577560425
    2. 'visited' → logprob: -3.687640905380249
    3. '   ' → logprob: -4.68764066696167
    4. '#' → logprob: -4.81264066696167
    5. 'initial' → logprob: -5.18764066696167
    6. 'start' → logprob: -5.43764066696167
    7. 'from' → logprob: -5.68764066696167
    8. 'state' → logprob: -6.31264066696167
    9. 'queue' → logprob: -6.68764066696167
    10. 'return' → logprob: -7.43764066696167

Token 1797: ' sliding' (ID: 53853)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.027870111167430878
    2. 'def' → logprob: -4.902870178222656
    3. '_move' → logprob: -4.902870178222656
    4. 'moves' → logprob: -5.027870178222656
    5. '_positions' → logprob: -5.777870178222656
    6. '_r' → logprob: -7.027870178222656
    7. '_state' → logprob: -7.777870178222656
    8. '_position' → logprob: -8.027870178222656
    9. '_pos' → logprob: -8.277870178222656
    10. 'r' → logprob: -8.402870178222656

Token 1798: ' move' (ID: 5275)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.012856187298893929
    2. 'moves' → logprob: -4.5128560066223145
    3. 'def' → logprob: -6.3878560066223145
    4. '_move' → logprob: -10.262856483459473
    5. '(r' → logprob: -10.512856483459473
    6. '   ' → logprob: -11.262856483459473
    7. '_positions' → logprob: -11.637856483459473
    8. '```' → logprob: -12.012856483459473
    9. '_mov' → logprob: -12.137856483459473
    10. '
' → logprob: -12.387856483459473

Token 1799: ':
' (ID: 734)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07726098597049713
    2. '   ' → logprob: -2.827260971069336
    3. 'moves' → logprob: -4.952260971069336
    4. '(' → logprob: -5.577260971069336
    5. '_moves' → logprob: -6.827260971069336
    6. '(r' → logprob: -7.077260971069336
    7. '
' → logprob: -7.577260971069336
    8. 'king' → logprob: -8.452260971069336
    9. 's' → logprob: -8.577260971069336
    10. ' def' → logprob: -8.577260971069336

Token 1800: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32397720217704773
    2. '   ' → logprob: -1.3239772319793701
    3. '#' → logprob: -5.198976993560791
    4. 'king' → logprob: -5.948976993560791
    5. '
' → logprob: -6.198976993560791
    6. 'moves' → logprob: -9.32397747039795
    7. '```' → logprob: -9.44897747039795
    8. ' def' → logprob: -9.57397747039795
    9. 'new' → logprob: -9.82397747039795
    10. 'for' → logprob: -9.94897747039795

Token 1801: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21126793324947357
    2. 'king' → logprob: -1.7112679481506348
    3. '   ' → logprob: -4.836267948150635
    4. 'moves' → logprob: -6.836267948150635
    5. 'next' → logprob: -8.461267471313477
    6. 'new' → logprob: -8.711267471313477
    7. ' king' → logprob: -8.836267471313477
    8. 'for' → logprob: -8.961267471313477
    9. '#' (adapté à ' #') → logprob: -9.711267471313477
    10. ' def' → logprob: -10.586267471313477

Token 1802: ' When' (ID: 4296)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02624526061117649
    2. '   ' → logprob: -4.4012451171875
    3. 'king' → logprob: -5.2762451171875
    4. '#' → logprob: -5.7762451171875
    5. '
' → logprob: -6.0262451171875
    6. 'for' → logprob: -6.9012451171875
    7. 'moves' → logprob: -6.9012451171875
    8. 'new' → logprob: -8.4012451171875
    9. ' def' → logprob: -8.5262451171875
    10. 'res' → logprob: -8.9012451171875

Token 1803: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.027372168377041817
    2. ' king' → logprob: -3.652372121810913
    3. 'the' → logprob: -7.527372360229492
    4. 'moving' → logprob: -9.027372360229492
    5. ' moving' → logprob: -9.402372360229492
    6. '#' → logprob: -9.402372360229492
    7. 'def' → logprob: -9.652372360229492
    8. ' the' → logprob: -9.652372360229492
    9. '   ' → logprob: -9.902372360229492
    10. '
' → logprob: -10.902372360229492

Token 1804: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.03396090492606163
    2. ' moves' → logprob: -3.6589608192443848
    3. '_moves' → logprob: -5.533960819244385
    4. 'slides' → logprob: -5.908960819244385
    5. '   ' → logprob: -7.533960819244385
    6. ' slides' → logprob: -8.658961296081543
    7. 'move' → logprob: -9.283961296081543
    8. 'm' → logprob: -9.908961296081543
    9. 'sl' → logprob: -11.033961296081543
    10. 'r' → logprob: -11.283961296081543

Token 1805: ' to' (ID: 316)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.44617512822151184
    2. 'to' → logprob: -2.0711750984191895
    3. ',' → logprob: -2.1961750984191895
    4. 'moves' → logprob: -3.6961750984191895
    5. '   ' → logprob: -3.8211750984191895
    6. ' from' → logprob: -4.0711750984191895
    7. ' to' → logprob: -4.1961750984191895
    8. 'into' → logprob: -4.5711750984191895
    9. '(r' → logprob: -4.8211750984191895
    10. 'r' → logprob: -5.1961750984191895

Token 1806: ' a' (ID: 261)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.3570992350578308
    2. 'new' → logprob: -2.1070992946624756
    3. 'a' → logprob: -2.8570992946624756
    4. '(new' → logprob: -3.2320992946624756
    5. ' (' → logprob: -3.3570992946624756
    6. ' a' → logprob: -3.7320992946624756
    7. ' new' → logprob: -4.2320990562438965
    8. '(' → logprob: -5.9820990562438965
    9. 'r' → logprob: -6.3570990562438965
    10. '(n' → logprob: -6.4820990562438965

Token 1807: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.1022920608520508
    2. ' new' → logprob: -1.3522920608520508
    3. ' (' → logprob: -1.4772920608520508
    4. 'neighbor' → logprob: -2.977292060852051
    5. '(' → logprob: -3.227292060852051
    6. '(s' → logprob: -4.227292060852051
    7. ' tuple' → logprob: -4.227292060852051
    8. '(n' → logprob: -4.727292060852051
    9. '(r' → logprob: -4.977292060852051
    10. '(new' → logprob: -4.977292060852051

Token 1808: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.14037472009658813
    2. ' position' → logprob: -2.1403746604919434
    3. 'r' → logprob: -5.640374660491943
    4. 'pos' → logprob: -5.890374660491943
    5. '_r' → logprob: -6.390374660491943
    6. '_position' → logprob: -6.390374660491943
    7. ' (' → logprob: -6.640374660491943
    8. '(r' → logprob: -6.890374660491943
    9. '(' → logprob: -8.515375137329102
    10. 'location' → logprob: -8.640375137329102

Token 1809: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.29205816984176636
    2. '   ' → logprob: -2.167058229446411
    3. ',' → logprob: -2.417058229446411
    4. '(' → logprob: -3.917058229446411
    5. 'def' → logprob: -4.417057991027832
    6. ':
' → logprob: -5.292057991027832
    7. ' (' → logprob: -5.417057991027832
    8. 'from' → logprob: -6.042057991027832
    9. ',
' → logprob: -6.792057991027832
    10. ':' → logprob: -7.042057991027832

Token 1810: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.38284069299697876
    2. '(' → logprob: -2.507840633392334
    3. '(r' → logprob: -2.507840633392334
    4. 'king' → logprob: -2.507840633392334
    5. 'kr' → logprob: -3.132840633392334
    6. ' (' → logprob: -4.882840633392334
    7. ',' → logprob: -5.257840633392334
    8. '(k' → logprob: -5.632840633392334
    9. 'new' → logprob: -5.632840633392334
    10. '),' → logprob: -6.007840633392334

Token 1811: 'new' (ID: 1389)
  Prédit: ',c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.066661037504673
    2. ',' → logprob: -2.9416611194610596
    3. '+' → logprob: -4.9416608810424805
    4. '-' → logprob: -6.0666608810424805
    5. ' ,' → logprob: -6.4416608810424805
    6. '   ' → logprob: -8.19166088104248
    7. ' ' → logprob: -8.56666088104248
    8. 'c' → logprob: -10.19166088104248
    9. '  ' → logprob: -10.44166088104248
    10. '+,' → logprob: -10.56666088104248

Token 1812: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.028426775708794594
    2. ',' → logprob: -3.6534268856048584
    3. ' ,' → logprob: -6.903426647186279
    4. '+' → logprob: -7.903426647186279
    5. 'new' → logprob: -8.278427124023438
    6. ',new' → logprob: -8.403427124023438
    7. ',
' → logprob: -9.653427124023438
    8. ' ' → logprob: -10.028427124023438
    9. ',k' → logprob: -10.028427124023438
    10. ',r' → logprob: -10.278427124023438

Token 1813: 'new' (ID: 1389)
  Prédit: ',new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',new' → logprob: -1.065145492553711
    2. ',' → logprob: -1.190145492553711
    3. 'new' → logprob: -1.315145492553711
    4. '+' → logprob: -2.815145492553711
    5. ',c' → logprob: -3.940145492553711
    6. '-' → logprob: -6.565145492553711
    7. ')' → logprob: -7.315145492553711
    8. '),' → logprob: -8.315145492553711
    9. 'c' → logprob: -8.440145492553711
    10. '_new' → logprob: -8.815145492553711

Token 1814: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.10478856414556503
    2. '):
' → logprob: -2.3547885417938232
    3. ')' → logprob: -6.479788780212402
    4. '),
' → logprob: -6.729788780212402
    5. '):' → logprob: -6.854788780212402
    6. '):

' → logprob: -7.729788780212402
    7. ',' → logprob: -8.604788780212402
    8. ' ),' → logprob: -10.104788780212402
    9. ')
' → logprob: -10.229788780212402
    10. '   ' → logprob: -10.854788780212402

Token 1815: ' the' (ID: 290)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.231925830245018
    2. '   ' → logprob: -1.6069258451461792
    3. 'old' → logprob: -5.981925964355469
    4. 'new' → logprob: -6.481925964355469
    5. 'def' → logprob: -7.106925964355469
    6. ' #' → logprob: -7.356925964355469
    7. '
' → logprob: -7.856925964355469
    8. '       ' → logprob: -8.856925964355469
    9. '           ' → logprob: -9.356925964355469
    10. '                   ' → logprob: -9.606925964355469

Token 1816: ' open' (ID: 2494)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.36112597584724426
    2. 'open' → logprob: -1.3611259460449219
    3. 'new' → logprob: -3.736125946044922
    4. '#' → logprob: -3.861125946044922
    5. 'previous' → logprob: -7.736125946044922
    6. 'king' → logprob: -7.861125946044922
    7. 'prev' → logprob: -8.111125946044922
    8. 'opens' → logprob: -8.736125946044922
    9. 'current' → logprob: -9.111125946044922
    10. 'empty' → logprob: -9.361125946044922

Token 1817: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0010615098290145397
    2. 's' → logprob: -7.62606143951416
    3. '1' → logprob: -8.00106143951416
    4. '_' → logprob: -9.37606143951416
    5. '_positions' → logprob: -10.12606143951416
    6. '_spaces' → logprob: -10.37606143951416
    7. ' squares' → logprob: -10.87606143951416
    8. '_cells' → logprob: -11.12606143951416
    9. '```' → logprob: -11.50106143951416
    10. ')' → logprob: -11.87606143951416

Token 1818: ' now' (ID: 1954)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.8016613125801086
    2. 'positions' → logprob: -0.8016613125801086
    3. 'be' → logprob: -3.801661252975464
    4. 'are' → logprob: -4.301661491394043
    5. ' move' → logprob: -4.551661491394043
    6. '_positions' → logprob: -4.551661491394043
    7. 'moves' → logprob: -4.801661491394043
    8. 'set' → logprob: -4.801661491394043
    9. '#' → logprob: -5.176661491394043
    10. ' become' → logprob: -5.426661491394043

Token 1819: ' occupy' (ID: 89046)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.29214993119239807
    2. 'are' → logprob: -2.0421500205993652
    3. '=' → logprob: -2.1671500205993652
    4. ' become' → logprob: -4.792150020599365
    5. ' are' → logprob: -8.542149543762207
    6. ' =' → logprob: -8.667149543762207
    7. 'positions' → logprob: -8.667149543762207
    8. 'move' → logprob: -9.792149543762207
    9. 'equal' → logprob: -10.542149543762207
    10. 'cor' → logprob: -10.667149543762207

Token 1820: ' the' (ID: 290)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.8043152093887329
    2. 'the' → logprob: -0.9293152093887329
    3. 'king' → logprob: -2.4293150901794434
    4. ' king' → logprob: -3.9293150901794434
    5. ' {(' → logprob: -4.054315090179443
    6. '(' → logprob: -4.804315090179443
    7. ' the' → logprob: -4.804315090179443
    8. 'expected' → logprob: -5.054315090179443
    9. '   ' → logprob: -5.929315090179443
    10. 'old' → logprob: -6.054315090179443

Token 1821: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.6227275133132935
    2. 'king' → logprob: -1.4977275133132935
    3. 'previous' → logprob: -1.7477275133132935
    4. '(r' → logprob: -3.497727394104004
    5. '(' → logprob: -4.997727394104004
    6. '(old' → logprob: -4.997727394104004
    7. 'positions' → logprob: -5.122727394104004
    8. 'current' → logprob: -5.872727394104004
    9. 'r' → logprob: -5.997727394104004
    10. 'former' → logprob: -5.997727394104004

Token 1822: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.2346486747264862
    2. '_' → logprob: -1.7346487045288086
    3. 'r' → logprob: -4.109648704528809
    4. '_r' → logprob: -5.359648704528809
    5. '(r' → logprob: -5.484648704528809
    6. 'position' → logprob: -5.859648704528809
    7. ' king' → logprob: -6.484648704528809
    8. '(' → logprob: -7.734648704528809
    9. 'positions' → logprob: -7.734648704528809
    10. '_k' → logprob: -7.859648704528809

Token 1823: ' cells' (ID: 11242)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.36093780398368835
    2. '_r' → logprob: -1.3609378337860107
    3. 'r' → logprob: -3.4859378337860107
    4. 'cells' → logprob: -5.235937595367432
    5. '
' → logprob: -5.735937595367432
    6. '_positions' → logprob: -6.235937595367432
    7. '`' → logprob: -7.235937595367432
    8. 'block' → logprob: -7.360937595367432
    9. '   ' → logprob: -7.485937595367432
    10. 'position' → logprob: -7.610937595367432

Token 1824: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21018972992897034
    2. '   ' → logprob: -1.835189700126648
    3. '
' → logprob: -3.9601898193359375
    4. ' def' → logprob: -5.4601898193359375
    5. ':' → logprob: -6.9601898193359375
    6. '    
' → logprob: -6.9601898193359375
    7. ':
' → logprob: -7.0851898193359375
    8. '\' → logprob: -7.7101898193359375
    9. '```' → logprob: -7.8351898193359375
    10. 'for' → logprob: -7.9601898193359375

Token 1825: 'r' (ID: 81)
  Prédit: 'kr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kr' → logprob: -0.9354110956192017
    2. 'r' → logprob: -1.1854110956192017
    3. '(' → logprob: -1.3104110956192017
    4. 'king' → logprob: -4.685410976409912
    5. '   ' → logprob: -5.060410976409912
    6. '(r' → logprob: -5.185410976409912
    7. '
' → logprob: -5.560410976409912
    8. ')' → logprob: -6.310410976409912
    9. '`' → logprob: -6.935410976409912
    10. '``' → logprob: -7.685410976409912

Token 1826: ',c' (ID: 22261)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.7920953035354614
    2. ',k' → logprob: -0.9170953035354614
    3. ',' → logprob: -2.792095184326172
    4. ',new' → logprob: -3.292095184326172
    5. ',c' → logprob: -3.917095184326172
    6. ',r' → logprob: -4.542095184326172
    7. 'r' → logprob: -5.167095184326172
    8. 'kr' → logprob: -5.292095184326172
    9. 'k' → logprob: -6.042095184326172
    10. 'king' → logprob: -6.417095184326172

Token 1827: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.1448160856962204
    2. ',r' → logprob: -2.7698161602020264
    3. '),' → logprob: -3.2698161602020264
    4. '-' → logprob: -4.019815921783447
    5. ',' → logprob: -4.519815921783447
    6. '),
' → logprob: -6.519815921783447
    7. '   ' → logprob: -6.894815921783447
    8. ')' → logprob: -7.269815921783447
    9. ',(' → logprob: -7.644815921783447
    10. '+' → logprob: -7.769815921783447

Token 1828: 'r' (ID: 81)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3892926871776581
    2. 'r' → logprob: -1.1392927169799805
    3. 'kc' → logprob: -6.3892927169799805
    4. '   ' → logprob: -8.01429271697998
    5. ' c' → logprob: -9.51429271697998
    6. '(c' → logprob: -10.13929271697998
    7. '(r' → logprob: -10.13929271697998
    8. '  ' → logprob: -10.26429271697998
    9. 'rc' → logprob: -10.51429271697998
    10. ' ' → logprob: -10.51429271697998

Token 1829: ',c' (ID: 22261)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02407570369541645
    2. 'c' → logprob: -4.399075508117676
    3. ',c' → logprob: -4.524075508117676
    4. ',' → logprob: -7.774075508117676
    5. ' +' → logprob: -9.274075508117676
    6. '+c' → logprob: -9.524075508117676
    7. ' ' → logprob: -10.399075508117676
    8. '-' → logprob: -11.399075508117676
    9. '   ' → logprob: -11.899075508117676
    10. 'new' → logprob: -12.774075508117676

Token 1830: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.5107177862082608e-05
    2. ' +' → logprob: -11.375024795532227
    3. '),' → logprob: -12.125024795532227
    4. '),(' → logprob: -12.250024795532227
    5. '1' → logprob: -13.375024795532227
    6. '   ' → logprob: -14.625024795532227
    7. ')+' → logprob: -14.750024795532227
    8. '+
' → logprob: -15.375024795532227
    9. '),
' → logprob: -15.500024795532227
    10. ')' → logprob: -15.625024795532227

Token 1831: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1689596148207784e-05
    2. '0' → logprob: -9.875051498413086
    3. ' ' → logprob: -16.875051498413086
    4. '```' → logprob: -16.875051498413086
    5. '2' → logprob: -17.125051498413086
    6. ')' → logprob: -17.250051498413086
    7. '
' → logprob: -18.000051498413086
    8. '   ' → logprob: -18.250051498413086
    9. '`' → logprob: -18.750051498413086
    10. '``' → logprob: -18.875051498413086

Token 1832: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.021687736734747887
    2. '),' → logprob: -3.8966877460479736
    3. '),
' → logprob: -7.0216875076293945
    4. ')' → logprob: -8.521687507629395
    5. '   ' → logprob: -11.271687507629395
    6. ',' → logprob: -11.521687507629395
    7. ',(' → logprob: -12.146687507629395
    8. '``' → logprob: -12.271687507629395
    9. ')
' → logprob: -12.396687507629395
    10. '```' → logprob: -12.521687507629395

Token 1833: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.037835580878891e-05
    2. '(r' → logprob: -10.25005054473877
    3. '   ' → logprob: -11.25005054473877
    4. ' r' → logprob: -13.62505054473877
    5. '
' → logprob: -15.50005054473877
    6. ')' → logprob: -15.75005054473877
    7. ' (' → logprob: -16.625049591064453
    8. '	r' → logprob: -17.000049591064453
    9. ',r' → logprob: -17.000049591064453
    10. '  ' → logprob: -17.375049591064453

Token 1834: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014204051345586777
    2. '1' → logprob: -4.264204025268555
    3. ',' → logprob: -11.139204025268555
    4. ',r' → logprob: -11.889204025268555
    5. ' +' → logprob: -11.889204025268555
    6. '   ' → logprob: -12.889204025268555
    7. ' ' → logprob: -12.889204025268555
    8. '+r' → logprob: -12.889204025268555
    9. 'r' → logprob: -13.139204025268555
    10. ')' → logprob: -14.639204025268555

Token 1835: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -12.500006675720215
    3. 'new' → logprob: -14.250006675720215
    4. '```' → logprob: -14.250006675720215
    5. '2' → logprob: -14.875006675720215
    6. '
' → logprob: -15.125006675720215
    7. '   ' → logprob: -15.625006675720215
    8. '...' → logprob: -15.625006675720215
    9. '`' → logprob: -15.625006675720215
    10. 'r' → logprob: -15.625006675720215

Token 1836: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.12751226127147675
    2. ',' → logprob: -2.877512216567993
    3. ',r' → logprob: -2.877512216567993
    4. '),(' → logprob: -5.752512454986572
    5. ',(' → logprob: -6.127512454986572
    6. ',k' → logprob: -6.752512454986572
    7. ',n' → logprob: -7.877512454986572
    8. ',new' → logprob: -10.252511978149414
    9. ',user' → logprob: -10.502511978149414
    10. ',
' → logprob: -10.627511978149414

Token 1837: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0015496177366003394
    2. '),
' → logprob: -7.75154972076416
    3. ',(' → logprob: -8.00154972076416
    4. ',' → logprob: -8.37654972076416
    5. ',r' → logprob: -8.62654972076416
    6. '   ' → logprob: -8.75154972076416
    7. ' ' → logprob: -9.37654972076416
    8. ',n' → logprob: -10.00154972076416
    9. '),' → logprob: -10.12654972076416
    10. '```' → logprob: -11.37654972076416

Token 1838: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0018365412252023816
    2. 'c' → logprob: -6.376836776733398
    3. '   ' → logprob: -9.251836776733398
    4. ' r' → logprob: -10.876836776733398
    5. '  ' → logprob: -11.751836776733398
    6. '(r' → logprob: -12.251836776733398
    7. 'k' → logprob: -13.251836776733398
    8. ' ' → logprob: -13.501836776733398
    9. ')' → logprob: -13.876836776733398
    10. '	r' → logprob: -15.001836776733398

Token 1839: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0029594001825898886
    2. 'new' → logprob: -5.877959251403809
    3. 'c' → logprob: -8.877959251403809
    4. '_new' → logprob: -12.377959251403809
    5. ' +' → logprob: -12.502959251403809
    6. ' ' → logprob: -13.377959251403809
    7. ')' → logprob: -13.377959251403809
    8. '   ' → logprob: -13.627959251403809
    9. '+c' → logprob: -13.877959251403809
    10. '1' → logprob: -14.752959251403809

Token 1840: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0041432189755141735
    2. 'c' → logprob: -6.004143238067627
    3. 'new' → logprob: -6.504143238067627
    4. 'r' → logprob: -9.504142761230469
    5. 'k' → logprob: -10.129142761230469
    6. ' ' → logprob: -10.879142761230469
    7. '   ' → logprob: -10.879142761230469
    8. 'kc' → logprob: -12.629142761230469
    9. 'New' → logprob: -13.504142761230469
    10. '  ' → logprob: -13.629142761230469

Token 1841: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.036261796951293945
    2. ',' → logprob: -4.286261558532715
    3. ')' → logprob: -4.536261558532715
    4. '),(' → logprob: -4.786261558532715
    5. ')c' → logprob: -6.911261558532715
    6. '),' → logprob: -7.411261558532715
    7. ')
' → logprob: -7.786261558532715
    8. '),
' → logprob: -8.661261558532715
    9. '   ' → logprob: -8.911261558532715
    10. 'c' → logprob: -9.286261558532715

Token 1842: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.607391408877447e-05
    2. ' +' → logprob: -11.125036239624023
    3. '
' → logprob: -11.625036239624023
    4. ',' → logprob: -12.625036239624023
    5. '1' → logprob: -12.750036239624023
    6. '   ' → logprob: -13.250036239624023
    7. '),' → logprob: -13.750036239624023
    8. '),(' → logprob: -14.250036239624023
    9. ')' → logprob: -14.375036239624023
    10. '+
' → logprob: -14.875036239624023

Token 1843: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.700132997939363e-05
    2. '0' → logprob: -11.125017166137695
    3. '+' → logprob: -14.250017166137695
    4. '
' → logprob: -14.375017166137695
    5. 'new' → logprob: -15.000017166137695
    6. ' ' → logprob: -15.125017166137695
    7. ')' → logprob: -15.250017166137695
    8. '```' → logprob: -16.375017166137695
    9. '   ' → logprob: -17.000017166137695
    10. '

' → logprob: -17.812517166137695

Token 1844: ')' (ID: 8)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.13005582988262177
    2. ')' → logprob: -2.2550559043884277
    3. '   ' → logprob: -4.380055904388428
    4. '):
' → logprob: -5.630055904388428
    5. '))
' → logprob: -8.00505542755127
    6. '),' → logprob: -9.25505542755127
    7. '                   ' → logprob: -10.00505542755127
    8. ')
' → logprob: -10.13005542755127
    9. '))' → logprob: -10.13005542755127
    10. ')}
' → logprob: -10.13005542755127

Token 1845: ' except' (ID: 6384)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25519296526908875
    2. '   ' → logprob: -2.130192995071411
    3. '
' → logprob: -2.255192995071411
    4. '    
' → logprob: -8.130192756652832
    5. ' def' → logprob: -8.130192756652832
    6. '#' → logprob: -8.630192756652832
    7. 'new' → logprob: -9.005192756652832
    8. '
' → logprob: -9.005192756652832
    9. '```' → logprob: -9.130192756652832
    10. 'res' → logprob: -10.005192756652832

Token 1846: ' ' (ID: 220)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.6190682649612427
    2. 'the' → logprob: -1.7440682649612427
    3. 'for' → logprob: -2.619068145751953
    4. ' (' → logprob: -2.744068145751953
    5. ' that' → logprob: -2.869068145751953
    6. '(r' → logprob: -3.369068145751953
    7. ' the' → logprob: -4.119068145751953
    8. ' for' → logprob: -4.119068145751953
    9. '(' → logprob: -4.369068145751953
    10. 'those' → logprob: -5.494068145751953

Token 1847: '2' (ID: 17)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.1795461177825928
    2. 'that' → logprob: -1.3045461177825928
    3. 'the' → logprob: -1.3045461177825928
    4. 'for' → logprob: -2.5545461177825928
    5. 'two' → logprob: -3.1795461177825928
    6. '(' → logprob: -4.054546356201172
    7. 'those' → logprob: -5.429546356201172
    8. 'they' → logprob: -6.429546356201172
    9. 'only' → logprob: -6.554546356201172
    10. ' that' → logprob: -6.804546356201172

Token 1848: ' are' (ID: 553)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0603392124176025
    2. ')' → logprob: -1.6853392124176025
    3. '#' → logprob: -2.4353392124176025
    4. '(' → logprob: -3.0603392124176025
    5. ' (' → logprob: -3.1853392124176025
    6. 's' → logprob: -3.6853392124176025
    7. ',
' → logprob: -3.8103392124176025
    8. '
' → logprob: -3.9353392124176025
    9. 'cells' → logprob: -4.060338973999023
    10. '<|end|>' → logprob: -4.185338973999023

Token 1849: ' occupied' (ID: 46186)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.8853293061256409
    2. 're' → logprob: -1.135329246520996
    3. 'occupied' → logprob: -2.760329246520996
    4. 'm' → logprob: -3.385329246520996
    5. 'ke' → logprob: -3.510329246520996
    6. 'excluded' → logprob: -4.260329246520996
    7. 'in' → logprob: -4.385329246520996
    8. 'open' → logprob: -4.510329246520996
    9. 'part' → logprob: -4.635329246520996
    10. 'included' → logprob: -4.635329246520996

Token 1850: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3280616998672485
    2. ')' → logprob: -1.7030616998672485
    3. ',' → logprob: -1.9530616998672485
    4. ',
' → logprob: -2.953061580657959
    5. ' by' → logprob: -3.078061580657959
    6. 'by' → logprob: -3.203061580657959
    7. 'def' → logprob: -3.453061580657959
    8. ' (' → logprob: -4.203061580657959
    9. '       ' → logprob: -4.328061580657959
    10. '_' → logprob: -4.453061580657959

Token 1851: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.24984146654605865
    2. 'the' → logprob: -1.6248414516448975
    3. '(' → logprob: -4.249841690063477
    4. 'open' → logprob: -6.374841690063477
    5. 'pieces' → logprob: -6.374841690063477
    6. ' king' → logprob: -6.749841690063477
    7. 'new' → logprob: -6.749841690063477
    8. 'p' → logprob: -7.499841690063477
    9. 'pawn' → logprob: -7.499841690063477
    10. '#' → logprob: -7.624841690063477

Token 1852: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6502395272254944
    2. '
' → logprob: -1.4002394676208496
    3. '#' → logprob: -2.9002394676208496
    4. 'def' → logprob: -3.0252394676208496
    5. ':
' → logprob: -3.5252394676208496
    6. '):
' → logprob: -4.02523946762085
    7. ',' → logprob: -4.27523946762085
    8. '       ' → logprob: -4.40023946762085
    9. ',
' → logprob: -4.90023946762085
    10. ')
' → logprob: -5.15023946762085

Token 1853: ' new' (ID: 620)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.502122163772583
    2. 'new' → logprob: -1.127122163772583
    3. 'this' → logprob: -4.752121925354004
    4. 'next' → logprob: -5.127121925354004
    5. 'two' → logprob: -5.127121925354004
    6. 'old' → logprob: -5.252121925354004
    7. '```' → logprob: -5.252121925354004
    8. 'that' → logprob: -5.377121925354004
    9. 'positions' → logprob: -5.627121925354004
    10. '(' → logprob: -5.877121925354004

Token 1854: ' position' (ID: 4010)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4901679754257202
    2. '
' → logprob: -2.1151680946350098
    3. '#' → logprob: -2.2401680946350098
    4. '_positions' → logprob: -2.3651680946350098
    5. '_cells' → logprob: -2.4901680946350098
    6. ')' → logprob: -2.9901680946350098
    7. ')
' → logprob: -3.3651680946350098
    8. '_s' → logprob: -3.4901680946350098
    9. 'def' → logprob: -3.7401680946350098
    10. '_new' → logprob: -3.7401680946350098

Token 1855: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7570528984069824
    2. 'def' → logprob: -0.7570528984069824
    3. '
' → logprob: -3.2570528984069824
    4. '#' → logprob: -4.882052898406982
    5. ':
' → logprob: -5.882052898406982
    6. '       ' → logprob: -6.257052898406982
    7. '```' → logprob: -6.507052898406982
    8. 'new' → logprob: -6.757052898406982
    9. '                   ' → logprob: -7.257052898406982
    10. ':' → logprob: -7.257052898406982

Token 1856: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5337759256362915
    2. '#' → logprob: -1.0337759256362915
    3. '(' → logprob: -4.283775806427002
    4. 'r' → logprob: -4.908775806427002
    5. ' (' → logprob: -5.408775806427002
    6. 'not' → logprob: -5.658775806427002
    7. ' not' → logprob: -5.908775806427002
    8. ''' → logprob: -6.033775806427002
    9. ' #' → logprob: -6.158775806427002
    10. '                   ' → logprob: -6.158775806427002

Token 1857: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.551415205001831
    2. '(r' → logprob: -1.426415205001831
    3. '(' → logprob: -2.551415205001831
    4. '   ' → logprob: -2.926415205001831
    5. 'r' → logprob: -4.42641544342041
    6. 'which' → logprob: -5.30141544342041
    7. ' (' → logprob: -5.42641544342041
    8. 'not' → logprob: -5.42641544342041
    9. '"' → logprob: -5.80141544342041
    10. 'but' → logprob: -5.92641544342041

Token 1858: ' the' (ID: 290)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.020279787480831146
    2. '   ' → logprob: -4.020279884338379
    3. '                   ' → logprob: -6.895279884338379
    4. '               ' → logprob: -8.270279884338379
    5. '(' → logprob: -8.645279884338379
    6. '           ' → logprob: -8.770279884338379
    7. ' #' → logprob: -9.020279884338379
    8. '
' → logprob: -9.770279884338379
    9. '       ' → logprob: -9.770279884338379
    10. 'and' → logprob: -10.520279884338379

Token 1859: ' two' (ID: 1920)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.705214262008667
    2. 'old' → logprob: -1.455214262008667
    3. 'open' → logprob: -2.455214262008667
    4. 'remaining' → logprob: -3.205214262008667
    5. ' old' → logprob: -3.455214262008667
    6. 'two' → logprob: -3.705214262008667
    7. 'rest' → logprob: -4.205214500427246
    8. 'new' → logprob: -4.330214500427246
    9. ' rest' → logprob: -4.455214500427246
    10. ' #' → logprob: -5.080214500427246

Token 1860: ' squares' (ID: 57269)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.039715252816677094
    2. ' open' → logprob: -4.03971529006958
    3. 'old' → logprob: -4.66471529006958
    4. '#' → logprob: -5.03971529006958
    5. 'new' → logprob: -6.03971529006958
    6. 'adj' → logprob: -7.53971529006958
    7. ' new' → logprob: -8.039714813232422
    8. 'cells' → logprob: -8.164714813232422
    9. 'opens' → logprob: -8.289714813232422
    10. 'spaces' → logprob: -8.539714813232422

Token 1861: ' vac' (ID: 7757)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1952754259109497
    2. ' that' → logprob: -1.5702754259109497
    3. 'that' → logprob: -1.8202754259109497
    4. '   ' → logprob: -2.94527530670166
    5. ' adjacent' → logprob: -2.94527530670166
    6. 'adj' → logprob: -3.32027530670166
    7. ' of' → logprob: -3.69527530670166
    8. 'of' → logprob: -4.07027530670166
    9. 'occupied' → logprob: -4.19527530670166
    10. ' are' → logprob: -4.19527530670166

Token 1862: 'ated' (ID: 780)
  Prédit: 'ated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -0.0063080694526433945
    2. 'ate' → logprob: -5.381308078765869
    3. '(' → logprob: -7.256308078765869
    4. '((' → logprob: -8.131307601928711
    5. '(r' → logprob: -8.631307601928711
    6. '{' → logprob: -9.131307601928711
    7. 'at' → logprob: -10.381307601928711
    8. 'ating' → logprob: -10.506307601928711
    9. 'anted' → logprob: -10.568807601928711
    10. '({' → logprob: -11.193807601928711

Token 1863: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.7475383281707764
    2. 'by' → logprob: -1.7475383281707764
    3. ' are' → logprob: -2.2475383281707764
    4. ',' → logprob: -2.8725383281707764
    5. '   ' → logprob: -2.8725383281707764
    6. 'are' → logprob: -3.4975383281707764
    7. ' at' → logprob: -4.6225385665893555
    8. ' (' → logprob: -4.9975385665893555
    9. ' ' → logprob: -5.1225385665893555
    10. '_by' → logprob: -5.4975385665893555

Token 1864: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.31567883491516113
    2. 'the' → logprob: -1.3156788349151611
    3. ' king' → logprob: -6.565678596496582
    4. 'open' → logprob: -7.690678596496582
    5. '(' → logprob: -9.315678596496582
    6. '#' → logprob: -9.565678596496582
    7. '{' → logprob: -9.690678596496582
    8. ' the' → logprob: -10.190678596496582
    9. 'old' → logprob: -10.190678596496582
    10. 'pawn' → logprob: -10.315678596496582

Token 1865: ' become' (ID: 5025)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7051690220832825
    2. ' are' → logprob: -2.5801689624786377
    3. ' =' → logprob: -2.9551689624786377
    4. '
' → logprob: -2.9551689624786377
    5. ',
' → logprob: -2.9551689624786377
    6. '#' → logprob: -3.0801689624786377
    7. ',' → logprob: -3.4551689624786377
    8. ')' → logprob: -3.9551689624786377
    9. ':
' → logprob: -3.9551689624786377
    10. ')
' → logprob: -3.9551689624786377

Token 1866: ' open' (ID: 2494)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.28400835394859314
    2. 'open' → logprob: -1.4090083837509155
    3. 'new' → logprob: -7.284008502960205
    4. '{' → logprob: -7.534008502960205
    5. ' the' → logprob: -7.784008502960205
    6. 'two' → logprob: -7.784008502960205
    7. '(' → logprob: -8.659008026123047
    8. 'part' → logprob: -8.784008026123047
    9. '((' → logprob: -9.034008026123047
    10. ' open' → logprob: -9.409008026123047

Token 1867: ' squares' (ID: 57269)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27495327591896057
    2. '
' → logprob: -2.0249533653259277
    3. 'def' → logprob: -3.2749533653259277
    4. '#' → logprob: -4.149953365325928
    5. ':
' → logprob: -4.649953365325928
    6. '                   ' → logprob: -4.649953365325928
    7. '       ' → logprob: -4.774953365325928
    8. '               ' → logprob: -5.274953365325928
    9. '\' → logprob: -6.399953365325928
    10. ':' → logprob: -6.399953365325928

Token 1868: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36496636271476746
    2. 'def' → logprob: -1.3649663925170898
    3. '
' → logprob: -3.61496639251709
    4. '    
' → logprob: -4.48996639251709
    5. '\' → logprob: -5.86496639251709
    6. '\n' → logprob: -6.98996639251709
    7. '(
' → logprob: -7.11496639251709
    8. '  
' → logprob: -7.23996639251709
    9. '```' → logprob: -7.36496639251709
    10. '#' → logprob: -7.48996639251709

Token 1869: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055205754935741425
    2. 'def' → logprob: -3.430205821990967
    3. '
' → logprob: -4.680205821990967
    4. '#' → logprob: -5.055205821990967
    5. '    
' → logprob: -6.180205821990967
    6. '\' → logprob: -7.055205821990967
    7. '  
' → logprob: -7.680205821990967
    8. '       ' → logprob: -7.805205821990967
    9. 'new' → logprob: -7.805205821990967
    10. '#
' → logprob: -8.805205345153809

Token 1870: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050768669694662094
    2. '
' → logprob: -3.8007686138153076
    3. '    
' → logprob: -5.175768852233887
    4. '\' → logprob: -5.425768852233887
    5. '       ' → logprob: -5.800768852233887
    6. '#' (adapté à ' #') → logprob: -5.925768852233887
    7. '(
' → logprob: -6.550768852233887
    8. '  
' → logprob: -6.675768852233887
    9. '```' → logprob: -6.800768852233887
    10. 'def' → logprob: -7.175768852233887

Token 1871: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14882931113243103
    2. 'def' → logprob: -2.648829221725464
    3. 'new' → logprob: -4.023829460144043
    4. '#' → logprob: -4.273829460144043
    5. '
' → logprob: -4.398829460144043
    6. '\' → logprob: -5.273829460144043
    7. '(
' → logprob: -6.023829460144043
    8. '(' → logprob: -6.398829460144043
    9. '``' → logprob: -6.773829460144043
    10. 'for' → logprob: -7.023829460144043

Token 1872: ' two' (ID: 1920)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.8772872090339661
    2. '#' → logprob: -1.0022871494293213
    3. 'def' → logprob: -2.1272871494293213
    4. '   ' → logprob: -3.7522871494293213
    5. 'new' → logprob: -4.0022873878479
    6. 'open' → logprob: -4.6272873878479
    7. 'vac' → logprob: -4.6272873878479
    8. 'two' → logprob: -4.8772873878479
    9. 'king' → logprob: -4.8772873878479
    10. '
' → logprob: -5.1272873878479

Token 1873: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.3615337908267975
    2. 'vac' → logprob: -1.986533761024475
    3. 'old' → logprob: -2.1115338802337646
    4. '#' → logprob: -4.3615336418151855
    5. ' vac' → logprob: -4.8615336418151855
    6. ' open' → logprob: -4.8615336418151855
    7. 'new' → logprob: -5.8615336418151855
    8. ' old' → logprob: -6.2365336418151855
    9. 'opens' → logprob: -6.3615336418151855
    10. 'king' → logprob: -6.6115336418151855

Token 1874: ' squares' (ID: 57269)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6433292031288147
    2. '_s' → logprob: -0.7683292031288147
    3. ' squares' → logprob: -4.76832914352417
    4. 'spaces' → logprob: -6.76832914352417
    5. '_spaces' → logprob: -8.143329620361328
    6. 'sq' → logprob: -9.268329620361328
    7. ' ' → logprob: -9.643329620361328
    8. 'cells' → logprob: -9.768329620361328
    9. '(' → logprob: -9.893329620361328
    10. 'square' → logprob: -10.018329620361328

Token 1875: ' king' (ID: 13793)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.928265392780304
    2. 'are' → logprob: -1.1782653331756592
    3. 'positions' → logprob: -2.803265333175659
    4. ' that' → logprob: -3.553265333175659
    5. ' positions' → logprob: -3.803265333175659
    6. 'that' → logprob: -3.928265333175659
    7. '   ' → logprob: -4.178265571594238
    8. '#' → logprob: -4.178265571594238
    9. ' at' → logprob: -4.303265571594238
    10. 'at' → logprob: -4.303265571594238

Token 1876: ' occupied' (ID: 46186)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.4658512473106384
    2. '_moves' → logprob: -1.2158513069152832
    3. '_cells' → logprob: -4.215851306915283
    4. '   ' → logprob: -4.465851306915283
    5. '_positions' → logprob: -4.465851306915283
    6. 'positions' → logprob: -4.715851306915283
    7. 'cells' → logprob: -6.090851306915283
    8. 'le' → logprob: -6.090851306915283
    9. '_' → logprob: -6.215851306915283
    10. 'occup' → logprob: -6.215851306915283

Token 1877: ' before' (ID: 2254)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0390931367874146
    2. '_' → logprob: -2.164093017578125
    3. ',' → logprob: -2.289093017578125
    4. '   ' → logprob: -2.664093017578125
    5. 's' → logprob: -3.164093017578125
    6. ' now' → logprob: -3.664093017578125
    7. ' are' → logprob: -3.664093017578125
    8. '_positions' → logprob: -3.664093017578125
    9. ',
' → logprob: -3.789093017578125
    10. ' at' → logprob: -3.914093017578125

Token 1878: ' move' (ID: 5275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3861249089241028
    2. ' =' → logprob: -2.511124849319458
    3. ' are' → logprob: -2.886124849319458
    4. '
' → logprob: -3.636124849319458
    5. 'def' → logprob: -3.761124849319458
    6. '#' → logprob: -4.011125087738037
    7. ':
' → logprob: -4.636125087738037
    8. '_positions' → logprob: -4.761125087738037
    9. '):
' → logprob: -4.886125087738037
    10. ')' → logprob: -4.886125087738037

Token 1879: ' convert' (ID: 8452)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.2395685911178589
    2. '   ' → logprob: -1.3645685911178589
    3. ' =' → logprob: -2.4895687103271484
    4. 'are' → logprob: -2.7395687103271484
    5. '#' → logprob: -2.8645687103271484
    6. ',' → logprob: -3.3645687103271484
    7. 's' → logprob: -3.4895687103271484
    8. ')' → logprob: -3.6145687103271484
    9. 'def' → logprob: -3.8645687103271484
    10. '=' → logprob: -4.364568710327148

Token 1880: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2879781723022461
    2. ' into' → logprob: -2.037978172302246
    3. ' to' → logprob: -2.787978172302246
    4. 'into' → logprob: -3.037978172302246
    5. '_to' → logprob: -5.787978172302246
    6. 's' → logprob: -5.912978172302246
    7. 'd' → logprob: -6.287978172302246
    8. 'ed' → logprob: -7.162978172302246
    9. '   ' → logprob: -7.537978172302246
    10. '```' → logprob: -7.662978172302246

Token 1881: ' squares' (ID: 57269)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.5579531192779541
    2. 'new' → logprob: -2.682953119277954
    3. 'open' → logprob: -3.182953119277954
    4. '(' → logprob: -3.182953119277954
    5. '((' → logprob: -3.182953119277954
    6. '[(' → logprob: -3.182953119277954
    7. 'set' → logprob: -3.307953119277954
    8. 'vac' → logprob: -3.307953119277954
    9. 'king' → logprob: -3.807953119277954
    10. 'the' → logprob: -3.807953119277954

Token 1882: ' now' (ID: 1954)
  Prédit: ' into'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' into' → logprob: -1.6729357242584229
    2. 'that' → logprob: -2.047935724258423
    3. ' that' → logprob: -2.297935724258423
    4. ' to' → logprob: -2.422935724258423
    5. 'to' → logprob: -2.922935724258423
    6. 's' → logprob: -2.922935724258423
    7. '   ' → logprob: -3.047935724258423
    8. '(
' → logprob: -3.172935724258423
    9. '(' → logprob: -3.297935724258423
    10. 'occupied' → logprob: -3.547935724258423

Token 1883: ' occupied' (ID: 46186)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4748960733413696
    2. 'occupied' → logprob: -1.5998960733413696
    3. '_' → logprob: -2.47489595413208
    4. ')' → logprob: -2.97489595413208
    5. 'def' → logprob: -3.34989595413208
    6. '(
' → logprob: -3.59989595413208
    7. '_positions' → logprob: -3.59989595413208
    8. ',' → logprob: -3.72489595413208
    9. ' (' → logprob: -3.72489595413208
    10. '```' → logprob: -3.97489595413208

Token 1884: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.490185409784317
    2. '   ' → logprob: -2.240185499191284
    3. ' by' → logprob: -2.240185499191284
    4. ')' → logprob: -3.365185499191284
    5. '(
' → logprob: -3.990185499191284
    6. ',' → logprob: -4.240185260772705
    7. '```' → logprob: -4.490185260772705
    8. '=' → logprob: -4.490185260772705
    9. '(r' → logprob: -4.615185260772705
    10. '(' → logprob: -4.865185260772705

Token 1885: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.054594263434410095
    2. 'the' → logprob: -3.1795942783355713
    3. 'pawn' → logprob: -4.929594039916992
    4. 'p' → logprob: -6.679594039916992
    5. ' king' → logprob: -6.929594039916992
    6. 'open' → logprob: -7.304594039916992
    7. '(' → logprob: -7.679594039916992
    8. 'pieces' → logprob: -8.179594039916992
    9. 'new' → logprob: -8.429594039916992
    10. 'paw' → logprob: -8.804594039916992

Token 1886: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12261909991502762
    2. 'def' → logprob: -2.372619152069092
    3. '
' → logprob: -4.622619152069092
    4. '#' → logprob: -5.872619152069092
    5. '    
' → logprob: -6.497619152069092
    6. '       ' → logprob: -6.747619152069092
    7. '\' → logprob: -7.122619152069092
    8. ' def' → logprob: -7.247619152069092
    9. ':' → logprob: -7.497619152069092
    10. '```' → logprob: -7.497619152069092

Token 1887: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04059382900595665
    2. '
' → logprob: -3.9155938625335693
    3. 'def' → logprob: -4.41559362411499
    4. '    
' → logprob: -6.16559362411499
    5. '\' → logprob: -6.66559362411499
    6. '#' → logprob: -6.91559362411499
    7. 'new' → logprob: -6.91559362411499
    8. '       ' → logprob: -8.290594100952148
    9. '  
' → logprob: -8.415594100952148
    10. '\n' → logprob: -8.540594100952148

Token 1888: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0665239691734314
    2. 'def' → logprob: -3.316524028778076
    3. '
' → logprob: -4.316524028778076
    4. '#' → logprob: -4.941524028778076
    5. 'new' → logprob: -6.691524028778076
    6. '```' → logprob: -6.816524028778076
    7. '\' → logprob: -7.191524028778076
    8. 'for' → logprob: -7.441524028778076
    9. '``' → logprob: -7.441524028778076
    10. '`' → logprob: -7.816524028778076

Token 1889: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1388494074344635
    2. '#' → logprob: -2.3888494968414307
    3. 'def' → logprob: -3.8888494968414307
    4. '
' → logprob: -4.513849258422852
    5. 'new' → logprob: -6.263849258422852
    6. '#
' → logprob: -6.263849258422852
    7. '    
' → logprob: -7.138849258422852
    8. 'next' → logprob: -8.513849258422852
    9. '```' → logprob: -8.763849258422852
    10. '\' → logprob: -8.888849258422852

Token 1890: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.465891033411026
    2. '#' (adapté à ' #') → logprob: -1.0908910036087036
    3. 'def' → logprob: -3.715891122817993
    4. '
' → logprob: -5.340890884399414
    5. 'new' → logprob: -6.090890884399414
    6. '#
' → logprob: -6.715890884399414
    7. 'old' → logprob: -6.840890884399414
    8. 'for' → logprob: -8.090890884399414
    9. 'open' → logprob: -8.215890884399414
    10. '       ' → logprob: -8.465890884399414

Token 1891: ' Actually' (ID: 50557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43605130910873413
    2. '   ' → logprob: -1.436051368713379
    3. '#' → logprob: -2.311051368713379
    4. '
' → logprob: -4.436051368713379
    5. 'new' → logprob: -6.061051368713379
    6. 'for' → logprob: -7.311051368713379
    7. '       ' → logprob: -8.436051368713379
    8. '#
' → logprob: -8.561051368713379
    9. ' #' → logprob: -9.061051368713379
    10. ' def' → logprob: -9.061051368713379

Token 1892: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6769647002220154
    2. '   ' → logprob: -0.8019647002220154
    3. '
' → logprob: -4.05196475982666
    4. '#' → logprob: -4.30196475982666
    5. ' def' → logprob: -5.30196475982666
    6. '```' → logprob: -5.55196475982666
    7. ' #' → logprob: -7.05196475982666
    8. '       ' → logprob: -7.80196475982666
    9. '    ' → logprob: -7.80196475982666
    10. '  ' → logprob: -8.92696475982666

Token 1893: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7343713045120239
    2. '#' → logprob: -1.109371304512024
    3. 'def' → logprob: -1.859371304512024
    4. ' #' → logprob: -4.609371185302734
    5. ' def' → logprob: -5.234371185302734
    6. ' king' → logprob: -5.359371185302734
    7. '
' → logprob: -5.734371185302734
    8. '       ' → logprob: -6.359371185302734
    9. ' for' → logprob: -6.484371185302734
    10. ' new' → logprob: -6.734371185302734

Token 1894: ' open' (ID: 2494)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.5437560677528381
    2. 'def' → logprob: -1.0437560081481934
    3. '#' → logprob: -3.5437560081481934
    4. ' king' → logprob: -3.6687560081481934
    5. 'next' → logprob: -6.043756008148193
    6. 'code' → logprob: -6.168756008148193
    7. 'new' → logprob: -7.168756008148193
    8. 'moves' → logprob: -7.543756008148193
    9. 'remaining' → logprob: -7.543756008148193
    10. ' #' → logprob: -7.668756008148193

Token 1895: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.003414036240428686
    2. 's' → logprob: -6.503414154052734
    3. '_' → logprob: -7.253414154052734
    4. ' squares' → logprob: -7.378414154052734
    5. '_cells' → logprob: -8.753414154052734
    6. '_spaces' → logprob: -8.878414154052734
    7. '_positions' → logprob: -9.628414154052734
    8. '```' → logprob: -9.753414154052734
    9. ' _' → logprob: -10.253414154052734
    10. ')' → logprob: -10.878414154052734

Token 1896: ' in' (ID: 306)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.6236741542816162
    2. 'positions' → logprob: -1.7486741542816162
    3. 'are' → logprob: -2.248674154281616
    4. 'move' → logprob: -2.373674154281616
    5. ' move' → logprob: -2.373674154281616
    6. 'moves' → logprob: -2.748674154281616
    7. 's' → logprob: -2.998674154281616
    8. ' positions' → logprob: -2.998674154281616
    9. '#' → logprob: -3.248674154281616
    10. '   ' → logprob: -3.498674154281616

Token 1897: ' king' (ID: 13793)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9274276494979858
    2. 'king' → logprob: -1.3024276494979858
    3. 'state' → logprob: -1.5524276494979858
    4. 'code' → logprob: -2.8024277687072754
    5. 'new' → logprob: -4.677427768707275
    6. 'def' → logprob: -4.802427768707275
    7. '#' → logprob: -5.052427768707275
    8. '```' → logprob: -5.427427768707275
    9. 'front' → logprob: -5.552427768707275
    10. 'which' → logprob: -5.677427768707275

Token 1898: ' move' (ID: 5275)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.03901923447847366
    2. '_move' → logprob: -4.4140191078186035
    3. 'moves' → logprob: -4.5390191078186035
    4. ' _' → logprob: -5.0390191078186035
    5. 'move' → logprob: -5.7890191078186035
    6. '_positions' → logprob: -6.1640191078186035
    7. ' move' → logprob: -7.4140191078186035
    8. ')' → logprob: -7.5390191078186035
    9. '   ' → logprob: -7.6640191078186035
    10. '_' → logprob: -7.9140191078186035

Token 1899: ' correspond' (ID: 11095)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.6335378885269165
    2. ' are' → logprob: -2.008537769317627
    3. ' move' → logprob: -2.133537769317627
    4. 's' → logprob: -2.383537769317627
    5. ' positions' → logprob: -2.508537769317627
    6. 'move' → logprob: -2.758537769317627
    7. '_positions' → logprob: -2.758537769317627
    8. '_move' → logprob: -3.133537769317627
    9. 'moves' → logprob: -3.133537769317627
    10. 'are' → logprob: -3.633537769317627

Token 1900: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.3049475848674774
    2. ' to' → logprob: -1.4299476146697998
    3. ')' → logprob: -4.554947376251221
    4. '   ' → logprob: -5.679947376251221
    5. '(' → logprob: -6.054947376251221
    6. '=' → logprob: -6.179947376251221
    7. '(
' → logprob: -7.054947376251221
    8. '_' → logprob: -7.554947376251221
    9. 'with' → logprob: -7.804947376251221
    10. ' ' → logprob: -8.304947853088379

Token 1901: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.21069568395614624
    2. ' the' → logprob: -2.335695743560791
    3. 'king' → logprob: -3.835695743560791
    4. ' king' → logprob: -4.210695743560791
    5. '(r' → logprob: -4.710695743560791
    6. ' (' → logprob: -4.710695743560791
    7. 'positions' → logprob: -4.960695743560791
    8. '((' → logprob: -5.085695743560791
    9. '(' → logprob: -5.210695743560791
    10. ' {(' → logprob: -5.335695743560791

Token 1902: ' two' (ID: 1920)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.4034743309020996
    2. 'king' → logprob: -1.5284743309020996
    3. 'cells' → logprob: -2.0284743309020996
    4. 'two' → logprob: -2.5284743309020996
    5. 'previous' → logprob: -2.7784743309020996
    6. ' king' → logprob: -3.0284743309020996
    7. 'old' → logprob: -3.0284743309020996
    8. 'open' → logprob: -3.9034743309020996
    9. 'adj' → logprob: -4.1534743309021
    10. 'vac' → logprob: -4.1534743309021

Token 1903: ' squares' (ID: 57269)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.2953750789165497
    2. 'cells' → logprob: -1.920375108718872
    3. 'adj' → logprob: -2.920375108718872
    4. 's' → logprob: -4.420374870300293
    5. 'positions' → logprob: -4.795374870300293
    6. 'occupied' → logprob: -5.045374870300293
    7. ' cells' → logprob: -5.420374870300293
    8. 'new' → logprob: -5.545374870300293
    9. ' open' → logprob: -5.795374870300293
    10. 'old' → logprob: -5.795374870300293

Token 1904: ' the' (ID: 290)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -1.233783483505249
    2. 'the' → logprob: -1.733783483505249
    3. ' that' → logprob: -2.108783483505249
    4. ' the' → logprob: -2.233783483505249
    5. 'occupied' → logprob: -2.233783483505249
    6. 'adj' → logprob: -2.608783483505249
    7. ' adjacent' → logprob: -3.483783483505249
    8. ' king' → logprob: -4.108783721923828
    9. 'king' → logprob: -4.233783721923828
    10. ' next' → logprob: -4.608783721923828

Token 1905: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.018804233521223068
    2. ' king' → logprob: -4.01880407333374
    3. 'open' → logprob: -9.143804550170898
    4. 'previous' → logprob: -9.268804550170898
    5. '
' → logprob: -9.768804550170898
    6. '#' → logprob: -9.893804550170898
    7. 'current' → logprob: -10.393804550170898
    8. 'new' → logprob: -10.518804550170898
    9. 'King' → logprob: -10.518804550170898
    10. 'old' → logprob: -10.893804550170898

Token 1906: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.5564715266227722
    2. 'occup' → logprob: -1.306471586227417
    3. 'occupied' → logprob: -3.056471586227417
    4. 'slides' → logprob: -3.556471586227417
    5. 'just' → logprob: -4.556471347808838
    6. ' moves' → logprob: -4.556471347808838
    7. 'is' → logprob: -4.681471347808838
    8. '```' → logprob: -4.931471347808838
    9. ' occupies' → logprob: -5.056471347808838
    10. '``' → logprob: -5.306471347808838

Token 1907: ' into' (ID: 1511)
  Prédit: 'into'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'into' → logprob: -0.2709745466709137
    2. 'onto' → logprob: -1.8959745168685913
    3. 'to' → logprob: -2.770974636077881
    4. 'from' → logprob: -3.895974636077881
    5. 'on' → logprob: -6.895974636077881
    6. 'out' → logprob: -7.145974636077881
    7. 'tow' → logprob: -7.270974636077881
    8. 'through' → logprob: -7.645974636077881
    9. ' onto' → logprob: -7.645974636077881
    10. 'off' → logprob: -8.145974159240723

Token 1908: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3012644350528717
    2. 'def' → logprob: -1.6762644052505493
    3. '
' → logprob: -2.676264524459839
    4. ' def' → logprob: -7.17626428604126
    5. '       ' → logprob: -7.42626428604126
    6. '```' → logprob: -7.42626428604126
    7. '    
' → logprob: -7.67626428604126
    8. '#' → logprob: -7.92626428604126
    9. ':' → logprob: -8.051264762878418
    10. ')' → logprob: -8.926264762878418

Token 1909: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16849398612976074
    2. '   ' → logprob: -1.9184939861297607
    3. 'not' → logprob: -5.66849422454834
    4. 'and' → logprob: -6.91849422454834
    5. 'which' → logprob: -7.29349422454834
    6. ' not' → logprob: -7.41849422454834
    7. ' #' → logprob: -7.66849422454834
    8. 'but' → logprob: -7.66849422454834
    9. '       ' → logprob: -7.91849422454834
    10. ' and' → logprob: -8.04349422454834

Token 1910: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.21797508001327515
    2. '   ' → logprob: -1.84297513961792
    3. 'which' → logprob: -4.46797513961792
    4. 'and' → logprob: -4.96797513961792
    5. ' and' → logprob: -5.59297513961792
    6. '(' → logprob: -5.96797513961792
    7. ' #' → logprob: -6.09297513961792
    8. ' which' → logprob: -6.09297513961792
    9. 'not' → logprob: -6.21797513961792
    10. '       ' → logprob: -6.96797513961792

Token 1911: ' and' (ID: 326)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.030381154268980026
    2. '   ' → logprob: -3.530381202697754
    3. ' #' → logprob: -8.530381202697754
    4. 'and' → logprob: -9.405381202697754
    5. '       ' → logprob: -10.155381202697754
    6. '
' → logprob: -10.155381202697754
    7. ',' → logprob: -10.530381202697754
    8. 'def' → logprob: -10.530381202697754
    9. 'new' → logprob: -10.655381202697754
    10. 'which' → logprob: -10.780381202697754

Token 1912: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.24238260090351105
    2. '#' → logprob: -1.9923826456069946
    3. 'those' → logprob: -3.617382526397705
    4. '   ' → logprob: -4.117382526397705
    5. 'when' → logprob: -4.867382526397705
    6. ' the' → logprob: -5.117382526397705
    7. 'they' → logprob: -5.367382526397705
    8. 'these' → logprob: -5.867382526397705
    9. 'after' → logprob: -6.242382526397705
    10. 'king' → logprob: -6.242382526397705

Token 1913: ' two' (ID: 1920)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'old' → logprob: -1.1832098960876465
    2. 'two' → logprob: -1.3082098960876465
    3. '#' → logprob: -1.5582098960876465
    4. 'previous' → logprob: -2.6832098960876465
    5. 'king' → logprob: -3.5582098960876465
    6. 'remaining' → logprob: -3.9332098960876465
    7. 'vac' → logprob: -4.1832098960876465
    8. ' old' → logprob: -4.4332098960876465
    9. 'rest' → logprob: -4.5582098960876465
    10. 'open' → logprob: -4.8082098960876465

Token 1914: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -1.0035616159439087
    2. 'vac' → logprob: -1.1285616159439087
    3. 'old' → logprob: -1.8785616159439087
    4. 's' → logprob: -2.503561496734619
    5. 'cells' → logprob: -3.628561496734619
    6. '#' → logprob: -4.253561496734619
    7. ' vac' → logprob: -4.753561496734619
    8. ' squares' → logprob: -5.128561496734619
    9. 'remaining' → logprob: -5.878561496734619
    10. 'occupied' → logprob: -6.253561496734619

Token 1915: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.25405746698379517
    2. 's' → logprob: -1.5040574073791504
    3. ' squares' → logprob: -6.50405740737915
    4. 'cells' → logprob: -8.504057884216309
    5. '_cells' → logprob: -8.754057884216309
    6. 'spaces' → logprob: -9.629057884216309
    7. '_' → logprob: -10.254057884216309
    8. '_spaces' → logprob: -10.254057884216309
    9. 'quares' → logprob: -10.504057884216309
    10. '#' → logprob: -10.754057884216309

Token 1916: ' after' (ID: 1934)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -1.4813841581344604
    2. ' become' → logprob: -2.10638427734375
    3. 'are' → logprob: -2.35638427734375
    4. ' now' → logprob: -2.35638427734375
    5. ' are' → logprob: -2.48138427734375
    6. '   ' → logprob: -3.23138427734375
    7. ' move' → logprob: -3.35638427734375
    8. 'in' → logprob: -3.35638427734375
    9. 'positions' → logprob: -3.35638427734375
    10. ' in' → logprob: -3.60638427734375

Token 1917: ' move' (ID: 5275)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5452540516853333
    2. 'move' → logprob: -1.9202539920806885
    3. 'king' → logprob: -2.9202539920806885
    4. ' king' → logprob: -2.9202539920806885
    5. ' the' → logprob: -3.0452539920806885
    6. ' move' → logprob: -3.1702539920806885
    7. 'that' → logprob: -3.5452539920806885
    8. 'moves' → logprob: -3.7952539920806885
    9. 'moving' → logprob: -5.045254230499268
    10. ' that' → logprob: -5.045254230499268

Token 1918: ' become' (ID: 5025)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.7433903217315674
    2. 'are' → logprob: -1.8683903217315674
    3. '   ' → logprob: -2.1183903217315674
    4. ' =' → logprob: -3.3683903217315674
    5. 'positions' → logprob: -3.4933903217315674
    6. ' must' → logprob: -3.8683903217315674
    7. 'def' → logprob: -3.9933903217315674
    8. ' positions' → logprob: -4.243390083312988
    9. ')' → logprob: -4.243390083312988
    10. '#' → logprob: -4.618390083312988

Token 1919: ' the' (ID: 290)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.7124351859092712
    2. '(r' → logprob: -1.087435245513916
    3. 'the' → logprob: -2.087435245513916
    4. '((' → logprob: -3.712435245513916
    5. ' {(' → logprob: -4.712435245513916
    6. '   ' → logprob: -5.462435245513916
    7. '(' → logprob: -5.462435245513916
    8. '[(' → logprob: -6.337435245513916
    9. '{
' → logprob: -7.337435245513916
    10. 'king' → logprob: -7.462435245513916

Token 1920: ' old' (ID: 2890)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.49745380878448486
    2. 'old' → logprob: -1.6224538087844849
    3. 'two' → logprob: -2.4974536895751953
    4. 'previous' → logprob: -3.2474536895751953
    5. 'king' → logprob: -3.9974536895751953
    6. '(old' → logprob: -4.372453689575195
    7. 'positions' → logprob: -4.747453689575195
    8. '(' → logprob: -4.747453689575195
    9. 'set' → logprob: -4.997453689575195
    10. '{' → logprob: -5.622453689575195

Token 1921: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.1129714846611023
    2. ' king' → logprob: -2.237971544265747
    3. '_' → logprob: -10.237971305847168
    4. 'r' → logprob: -10.612971305847168
    5. 'kr' → logprob: -10.987971305847168
    6. 'position' → logprob: -11.487971305847168
    7. '(' → logprob: -11.487971305847168
    8. ' (' → logprob: -11.487971305847168
    9. '(r' → logprob: -12.237971305847168
    10. '_r' → logprob: -12.362971305847168

Token 1922: ' cells' (ID: 11242)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.3753736913204193
    2. 'r' → logprob: -2.875373601913452
    3. '_r' → logprob: -2.875373601913452
    4. '_positions' → logprob: -3.125373601913452
    5. 'cells' → logprob: -3.500373601913452
    6. '   ' → logprob: -3.625373601913452
    7. ''s' → logprob: -3.750373601913452
    8. 'position' → logprob: -4.375373840332031
    9. ')' → logprob: -4.500373840332031
    10. ',' → logprob: -4.875373840332031

Token 1923: ' vac' (ID: 7757)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5058692693710327
    2. '
' → logprob: -1.6308692693710327
    3. 'def' → logprob: -1.6308692693710327
    4. '    
' → logprob: -6.255869388580322
    5. '#' → logprob: -7.380869388580322
    6. ')
' → logprob: -8.130868911743164
    7. ')' → logprob: -8.255868911743164
    8. '```' → logprob: -8.255868911743164
    9. '       ' → logprob: -8.505868911743164
    10. ':
' → logprob: -8.630868911743164

Token 1924: 'ated' (ID: 780)
  Prédit: 'ated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -0.06824228912591934
    2. '(' → logprob: -3.693242311477661
    3. '(r' → logprob: -4.068242073059082
    4. 'ate' → logprob: -4.943242073059082
    5. '((' → logprob: -5.193242073059082
    6. '(k' → logprob: -6.193242073059082
    7. 'ates' → logprob: -6.318242073059082
    8. '{' → logprob: -6.943242073059082
    9. ' (' → logprob: -6.943242073059082
    10. 'r' → logprob: -7.068242073059082

Token 1925: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06356988102197647
    2. ':
' → logprob: -5.063570022583008
    3. 'def' → logprob: -5.063570022583008
    4. ',' → logprob: -5.313570022583008
    5. '(
' → logprob: -5.438570022583008
    6. ':' → logprob: -5.438570022583008
    7. '(' → logprob: -5.563570022583008
    8. ' +' → logprob: -5.563570022583008
    9. '.' → logprob: -5.813570022583008
    10. ')' → logprob: -5.813570022583008

Token 1926: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.29652732610702515
    2. '   ' → logprob: -1.67152738571167
    3. '
' → logprob: -3.42152738571167
    4. '\' → logprob: -4.67152738571167
    5. ':
' → logprob: -4.79652738571167
    6. '#' → logprob: -5.42152738571167
    7. ':' → logprob: -5.67152738571167
    8. 'new' → logprob: -6.42152738571167
    9. '                   ' → logprob: -6.79652738571167
    10. ' def' → logprob: -7.42152738571167

Token 1927: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1834070384502411
    2. 'def' → logprob: -2.1834070682525635
    3. '
' → logprob: -3.3084070682525635
    4. '       ' → logprob: -5.808406829833984
    5. 'new' → logprob: -5.933406829833984
    6. '                   ' → logprob: -6.308406829833984
    7. '               ' → logprob: -6.433406829833984
    8. '\' → logprob: -6.433406829833984
    9. '    
' → logprob: -6.808406829833984
    10. ':' → logprob: -6.933406829833984

Token 1928: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11742305010557175
    2. 'def' → logprob: -2.4924230575561523
    3. '
' → logprob: -3.6174230575561523
    4. '    
' → logprob: -7.492423057556152
    5. '#' → logprob: -8.617423057556152
    6. '```' → logprob: -9.242423057556152
    7. '       ' → logprob: -9.367423057556152
    8. 'Next' → logprob: -9.992423057556152
    9. 'next' → logprob: -10.242423057556152
    10. ' def' → logprob: -10.367423057556152

Token 1929: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38110923767089844
    2. 'def' → logprob: -1.6311092376708984
    3. 'new' → logprob: -3.2561092376708984
    4. '#' (adapté à ' #') → logprob: -3.6311092376708984
    5. 'for' → logprob: -3.8811092376708984
    6. '
' → logprob: -4.006109237670898
    7. 'old' → logprob: -5.006109237670898
    8. ' for' → logprob: -6.256109237670898
    9. '       ' → logprob: -6.756109237670898
    10. 'next' → logprob: -6.756109237670898

Token 1930: ' So' (ID: 2632)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7330858707427979
    2. '   ' → logprob: -0.8580858707427979
    3. '
' → logprob: -3.233085870742798
    4. 'for' → logprob: -3.858085870742798
    5. 'new' → logprob: -4.233085632324219
    6. '#' → logprob: -4.733085632324219
    7. ' for' → logprob: -5.858085632324219
    8. '                   ' → logprob: -6.108085632324219
    9. '               ' → logprob: -6.608085632324219
    10. '       ' → logprob: -6.983085632324219

Token 1931: ' basically' (ID: 21924)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18814358115196228
    2. '   ' → logprob: -2.688143491744995
    3. 'for' → logprob: -3.313143491744995
    4. ' for' → logprob: -3.313143491744995
    5. 'old' → logprob: -4.563143730163574
    6. ' def' → logprob: -5.063143730163574
    7. '
' → logprob: -5.188143730163574
    8. '       ' → logprob: -6.438143730163574
    9. ' old' → logprob: -6.688143730163574
    10. 'new' → logprob: -6.813143730163574

Token 1932: ' we' (ID: 581)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3252401649951935
    2. 'def' → logprob: -1.700240135192871
    3. 'old' → logprob: -3.450240135192871
    4. '#' → logprob: -3.700240135192871
    5. 'for' → logprob: -4.575240135192871
    6. 'new' → logprob: -4.700240135192871
    7. '
' → logprob: -5.325240135192871
    8. ' for' → logprob: -5.575240135192871
    9. ' old' → logprob: -5.575240135192871
    10. '       ' → logprob: -6.450240135192871

Token 1933: ' remove' (ID: 6234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.407356321811676
    2. 'need' → logprob: -1.9073562622070312
    3. '#' → logprob: -2.5323562622070312
    4. 'can' → logprob: -3.9073562622070312
    5. 'continue' → logprob: -3.9073562622070312
    6. 'def' → logprob: -4.282356262207031
    7. 'move' → logprob: -4.407356262207031
    8. ' need' → logprob: -4.657356262207031
    9. 'replace' → logprob: -4.782356262207031
    10. 'should' → logprob: -5.157356262207031

Token 1934: ' from' (ID: 591)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.1978200078010559
    2. '{' → logprob: -2.572819948196411
    3. ' {(' → logprob: -2.947819948196411
    4. ' the' → logprob: -3.572819948196411
    5. 'king' → logprob: -5.07282018661499
    6. 'open' → logprob: -5.32282018661499
    7. '(' → logprob: -6.07282018661499
    8. 'old' → logprob: -6.44782018661499
    9. ' king' → logprob: -6.57282018661499
    10. '((' → logprob: -6.82282018661499

Token 1935: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.0038090997841209173
    2. ' open' → logprob: -6.378808975219727
    3. 'king' → logprob: -6.753808975219727
    4. 'the' → logprob: -8.003808975219727
    5. ' king' → logprob: -8.253808975219727
    6. '{' → logprob: -9.503808975219727
    7. 'ob' → logprob: -9.503808975219727
    8. 'set' → logprob: -9.628808975219727
    9. 'old' → logprob: -10.628808975219727
    10. '   ' → logprob: -11.003808975219727

Token 1936: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0010946154361590743
    2. '_' → logprob: -7.751094818115234
    3. '_spaces' → logprob: -8.501094818115234
    4. 's' → logprob: -8.626094818115234
    5. '_cells' → logprob: -9.376094818115234
    6. '_positions' → logprob: -10.126094818115234
    7. '```' → logprob: -10.251094818115234
    8. ' squares' → logprob: -10.626094818115234
    9. 'spaces' → logprob: -11.001094818115234
    10. ' _' → logprob: -11.126094818115234

Token 1937: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0842876434326172
    2. ' {(' → logprob: -1.0842876434326172
    3. ' the' → logprob: -1.3342876434326172
    4. ' -' → logprob: -4.834287643432617
    5. '{' → logprob: -5.209287643432617
    6. '-' → logprob: -5.334287643432617
    7. '((' → logprob: -5.709287643432617
    8. 'open' → logprob: -5.834287643432617
    9. ' (' → logprob: -5.834287643432617
    10. 'those' → logprob: -5.959287643432617

Token 1938: ' two' (ID: 1920)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.02195168472826481
    2. 'king' → logprob: -5.021951675415039
    3. 'new' → logprob: -5.646951675415039
    4. 'set' → logprob: -5.896951675415039
    5. '{k' → logprob: -6.146951675415039
    6. ' {(' → logprob: -6.271951675415039
    7. '(' → logprob: -6.646951675415039
    8. 'expected' → logprob: -7.271951675415039
    9. '{
' → logprob: -8.021951675415039
    10. '#' → logprob: -8.021951675415039

Token 1939: ' squares' (ID: 57269)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.8841182589530945
    2. 'open' → logprob: -2.0091183185577393
    3. 'positions' → logprob: -2.1341183185577393
    4. 's' → logprob: -2.2591183185577393
    5. ' squares' → logprob: -2.2591183185577393
    6. ' cells' → logprob: -3.3841183185577393
    7. 'new' → logprob: -3.3841183185577393
    8. 'that' → logprob: -4.88411808013916
    9. ' positions' → logprob: -5.00911808013916
    10. ' new' → logprob: -5.25911808013916

Token 1940: ' king' (ID: 13793)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -1.3609508275985718
    2. 'the' → logprob: -1.6109508275985718
    3. 'that' → logprob: -1.6109508275985718
    4. ' king' → logprob: -2.1109509468078613
    5. ' the' → logprob: -2.6109509468078613
    6. ' that' → logprob: -2.8609509468078613
    7. 'king' → logprob: -3.1109509468078613
    8. ' occupied' → logprob: -3.3609509468078613
    9. ' {(' → logprob: -5.735950946807861
    10. '{' → logprob: -6.985950946807861

Token 1941: ' slides' (ID: 33885)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.4960789680480957
    2. 'positions' → logprob: -1.8710789680480957
    3. '_positions' → logprob: -3.1210789680480957
    4. '_cells' → logprob: -3.1210789680480957
    5. 'cells' → logprob: -3.2460789680480957
    6. ''s' → logprob: -3.4960789680480957
    7. '_moves' → logprob: -3.7460789680480957
    8. '   ' → logprob: -4.996078968048096
    9. 'that' → logprob: -4.996078968048096
    10. 'occup' → logprob: -5.121078968048096

Token 1942: ' to' (ID: 316)
  Prédit: 'into'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'into' → logprob: -0.1905890852212906
    2. 'out' → logprob: -2.315589189529419
    3. 'in' → logprob: -3.190589189529419
    4. 'to' → logprob: -4.81558895111084
    5. ' into' → logprob: -5.19058895111084
    6. '-' → logprob: -5.19058895111084
    7. '_into' → logprob: -5.44058895111084
    8. '   ' → logprob: -5.94058895111084
    9. 'onto' → logprob: -6.19058895111084
    10. '_to' → logprob: -7.56558895111084

Token 1943: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12192739546298981
    2. '
' → logprob: -4.121927261352539
    3. ' and' → logprob: -4.121927261352539
    4. 'def' → logprob: -4.121927261352539
    5. ',' → logprob: -4.246927261352539
    6. ':' → logprob: -4.996927261352539
    7. ':
' → logprob: -5.246927261352539
    8. ')' → logprob: -5.371927261352539
    9. ' (' → logprob: -5.371927261352539
    10. '(' → logprob: -5.746927261352539

Token 1944: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.02090526558458805
    2. 'and' → logprob: -4.395905494689941
    3. '   ' → logprob: -4.895905494689941
    4. ' and' → logprob: -7.395905494689941
    5. ' #' → logprob: -9.020905494689941
    6. ' add' → logprob: -10.020905494689941
    7. 'then' → logprob: -10.770905494689941
    8. 'add' → logprob: -11.020905494689941
    9. '           ' → logprob: -11.395905494689941
    10. ' ' → logprob: -11.770905494689941

Token 1945: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.30957746505737305
    2. 'and' → logprob: -1.809577465057373
    3. '   ' → logprob: -2.309577465057373
    4. ' and' → logprob: -6.184577465057373
    5. ' #' → logprob: -8.684577941894531
    6. 'add' → logprob: -8.684577941894531
    7. '           ' → logprob: -9.309577941894531
    8. ' ' → logprob: -9.309577941894531
    9. '       ' → logprob: -9.309577941894531
    10. 'but' → logprob: -9.309577941894531

Token 1946: ' then' (ID: 1815)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.004411009605973959
    2. '   ' → logprob: -5.629411220550537
    3. 'and' → logprob: -7.629411220550537
    4. 'add' → logprob: -8.879410743713379
    5. '           ' → logprob: -9.879410743713379
    6. 'replace' → logprob: -10.004410743713379
    7. ' #' → logprob: -10.879410743713379
    8. '               ' → logprob: -11.004410743713379
    9. '       ' → logprob: -11.129410743713379
    10. '                   ' → logprob: -11.629410743713379

Token 1947: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.004796069115400314
    2. ' add' → logprob: -5.504796028137207
    3. '   ' → logprob: -7.629796028137207
    4. '#' → logprob: -9.504796028137207
    5. '
' → logprob: -9.504796028137207
    6. 'update' → logprob: -10.879796028137207
    7. 'union' → logprob: -11.129796028137207
    8. 'insert' → logprob: -11.504796028137207
    9. '	add' → logprob: -11.504796028137207
    10. 'open' → logprob: -12.004796028137207

Token 1948: ' the' (ID: 290)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.11837378889322281
    2. ' {(' → logprob: -2.7433738708496094
    3. 'the' → logprob: -4.243373870849609
    4. '(' → logprob: -4.743373870849609
    5. '((' → logprob: -4.868373870849609
    6. '   ' → logprob: -4.993373870849609
    7. 'expected' → logprob: -5.368373870849609
    8. '(r' → logprob: -6.368373870849609
    9. ' (' → logprob: -6.618373870849609
    10. '({' → logprob: -7.993373870849609

Token 1949: ' four' (ID: 4242)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.5108841061592102
    2. 'old' → logprob: -1.0108840465545654
    3. 'four' → logprob: -4.2608842849731445
    4. 'previous' → logprob: -5.2608842849731445
    5. '(r' → logprob: -5.7608842849731445
    6. ' two' → logprob: -5.7608842849731445
    7. 'king' → logprob: -5.8858842849731445
    8. '(old' → logprob: -6.5108842849731445
    9. ' old' → logprob: -7.1358842849731445
    10. '2' → logprob: -7.1358842849731445

Token 1950: ' old' (ID: 2890)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5168690085411072
    2. '(r' → logprob: -1.391869068145752
    3. 'old' → logprob: -2.766869068145752
    4. 'cells' → logprob: -2.891869068145752
    5. 'king' → logprob: -4.516869068145752
    6. '{' → logprob: -4.766869068145752
    7. '(old' → logprob: -5.016869068145752
    8. ' (' → logprob: -5.891869068145752
    9. '(k' → logprob: -6.516869068145752
    10. ' king' → logprob: -6.516869068145752

Token 1951: ' king' (ID: 13793)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.7510449886322021
    2. '(' → logprob: -1.0010449886322021
    3. ' (' → logprob: -2.751044988632202
    4. ' king' → logprob: -3.126044988632202
    5. 'king' → logprob: -3.751044988632202
    6. 'cells' → logprob: -4.126045227050781
    7. '_cells' → logprob: -5.376045227050781
    8. '(k' → logprob: -5.751045227050781
    9. '   ' → logprob: -6.751045227050781
    10. ' cells' → logprob: -6.876045227050781

Token 1952: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.4037488102912903
    2. '_cells' → logprob: -1.1537487506866455
    3. ' cells' → logprob: -4.153748989105225
    4. '(' → logprob: -8.403748512268066
    5. 'positions' → logprob: -8.903748512268066
    6. ' (' → logprob: -8.903748512268066
    7. ' ' → logprob: -9.403748512268066
    8. '   ' → logprob: -9.403748512268066
    9. '(r' → logprob: -9.653748512268066
    10. 'r' → logprob: -9.778748512268066

Token 1953: ' minus' (ID: 40335)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25033244490623474
    2. '
' → logprob: -2.3753323554992676
    3. '       ' → logprob: -3.7503323554992676
    4. 'def' → logprob: -3.8753323554992676
    5. ':
' → logprob: -4.375332355499268
    6. ' +' → logprob: -4.750332355499268
    7. ')' → logprob: -5.125332355499268
    8. ' (' → logprob: -5.125332355499268
    9. ',' → logprob: -5.375332355499268
    10. '               ' → logprob: -5.500332355499268

Token 1954: ' the' (ID: 290)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.005668525584042072
    2. ' {(' → logprob: -6.130668640136719
    3. 'set' → logprob: -6.380668640136719
    4. 'expected' → logprob: -6.755668640136719
    5. '   ' → logprob: -8.380668640136719
    6. 'the' → logprob: -8.755668640136719
    7. '{
' → logprob: -9.630668640136719
    8. '{{' → logprob: -9.880668640136719
    9. '#' → logprob: -11.005668640136719
    10. '{\' → logprob: -11.630668640136719

Token 1955: ' two' (ID: 1920)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.3263581395149231
    2. 'two' → logprob: -1.4513580799102783
    3. 'set' → logprob: -3.2013580799102783
    4. ' {(' → logprob: -6.826358318328857
    5. '#' → logprob: -7.326358318328857
    6. '2' → logprob: -7.701358318328857
    7. 'new' → logprob: -7.826358318328857
    8. '{{' → logprob: -8.0763578414917
    9. '{
' → logprob: -8.8263578414917
    10. 'expected' → logprob: -9.5763578414917

Token 1956: ' occupied' (ID: 46186)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.4603302478790283
    2. 's' → logprob: -2.0853302478790283
    3. 'cells' → logprob: -2.3353302478790283
    4. ' {(' → logprob: -3.5853302478790283
    5. 'new' → logprob: -3.7103302478790283
    6. 'that' → logprob: -3.8353302478790283
    7. 'king' → logprob: -3.9603302478790283
    8. '{' → logprob: -4.210330009460449
    9. 'positions' → logprob: -5.085330009460449
    10. ' squares' → logprob: -5.335330009460449

Token 1957: ' by' (ID: 656)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5023466348648071
    2. '_cells' → logprob: -1.8773466348648071
    3. '_positions' → logprob: -2.2523465156555176
    4. '   ' → logprob: -2.6273465156555176
    5. 'cells' → logprob: -3.0023465156555176
    6. ' by' → logprob: -3.1273465156555176
    7. 'positions' → logprob: -3.1273465156555176
    8. ' ' → logprob: -3.3773465156555176
    9. '_s' → logprob: -3.6273465156555176
    10. ' +' → logprob: -4.127346515655518

Token 1958: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.3380754590034485
    2. 'the' → logprob: -1.5880753993988037
    3. 'new' → logprob: -2.9630753993988037
    4. '(' → logprob: -4.463075637817383
    5. '{' → logprob: -4.838075637817383
    6. ' king' → logprob: -5.713075637817383
    7. 'open' → logprob: -5.713075637817383
    8. '(new' → logprob: -5.713075637817383
    9. '((' → logprob: -8.088075637817383
    10. 'old' → logprob: -8.213075637817383

Token 1959: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13544969260692596
    2. 'def' → logprob: -2.6354496479034424
    3. ':' → logprob: -4.6354498863220215
    4. '       ' → logprob: -4.6354498863220215
    5. '(
' → logprob: -5.0104498863220215
    6. ':
' → logprob: -5.3854498863220215
    7. '
' → logprob: -5.6354498863220215
    8. '(' → logprob: -6.1354498863220215
    9. '           ' → logprob: -6.2604498863220215
    10. '               ' → logprob: -6.2604498863220215

Token 1960: ' old' (ID: 2890)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.19399085640907288
    2. 'new' → logprob: -1.8189908266067505
    3. '{' → logprob: -4.693990707397461
    4. ' the' → logprob: -6.693990707397461
    5. '
' → logprob: -7.068990707397461
    6. 'old' → logprob: -7.693990707397461
    7. 'previous' → logprob: -7.818990707397461
    8. 'set' → logprob: -7.818990707397461
    9. '(new' → logprob: -8.443990707397461
    10. ' new' → logprob: -8.568990707397461

Token 1961: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.05089126527309418
    2. 'king' → logprob: -4.050891399383545
    3. ' position' → logprob: -4.300891399383545
    4. 'r' → logprob: -5.300891399383545
    5. ' king' → logprob: -5.425891399383545
    6. '   ' → logprob: -5.800891399383545
    7. 'pos' → logprob: -7.050891399383545
    8. 'state' → logprob: -7.050891399383545
    9. '```' → logprob: -7.050891399383545
    10. '_r' → logprob: -7.425891399383545

Token 1962: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24764668941497803
    2. ':' → logprob: -1.872646689414978
    3. ':
' → logprob: -3.8726468086242676
    4. 'def' → logprob: -4.497646808624268
    5. ')' → logprob: -5.372646808624268
    6. '(
' → logprob: -5.872646808624268
    7. '       ' → logprob: -5.997646808624268
    8. '    
' → logprob: -5.997646808624268
    9. ',' → logprob: -6.122646808624268
    10. '(' → logprob: -6.247646808624268

Token 1963: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21750275790691376
    2. 'but' → logprob: -2.3425028324127197
    3. '#' → logprob: -3.0925028324127197
    4. 'which' → logprob: -4.092502593994141
    5. ' but' → logprob: -4.717502593994141
    6. '       ' → logprob: -4.967502593994141
    7. 'and' → logprob: -4.967502593994141
    8. '    
' → logprob: -5.342502593994141
    9. '           ' → logprob: -6.342502593994141
    10. ' and' → logprob: -6.717502593994141

Token 1964: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.4229046106338501
    2. '   ' → logprob: -1.17290461063385
    3. 'but' → logprob: -3.7979044914245605
    4. ' but' → logprob: -4.9229044914245605
    5. 'which' → logprob: -6.4229044914245605
    6. 'and' → logprob: -6.7979044914245605
    7. '    
' → logprob: -7.5479044914245605
    8. ' #' → logprob: -8.047904968261719
    9. ' and' → logprob: -8.047904968261719
    10. 'except' → logprob: -8.297904968261719

Token 1965: ' but' (ID: 889)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.726444661617279
    2. '   ' → logprob: -0.726444661617279
    3. ' #' → logprob: -5.226444721221924
    4. ' and' → logprob: -5.601444721221924
    5. ' but' → logprob: -5.851444721221924
    6. '(' → logprob: -5.976444721221924
    7. 'but' → logprob: -6.351444721221924
    8. '    ' → logprob: -6.476444721221924
    9. '                   ' → logprob: -6.601444721221924
    10. ')' → logprob: -6.851444721221924

Token 1966: ' open' (ID: 2494)
  Prédit: 'actually'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'actually' → logprob: -0.8344178199768066
    2. 'the' → logprob: -1.2094178199768066
    3. 'since' → logprob: -2.3344178199768066
    4. 'in' → logprob: -3.0844178199768066
    5. '#' → logprob: -3.0844178199768066
    6. '   ' → logprob: -3.8344178199768066
    7. ' actually' → logprob: -4.459417819976807
    8. ' the' → logprob: -4.959417819976807
    9. 'king' → logprob: -5.459417819976807
    10. ' in' → logprob: -5.584417819976807

Token 1967: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0316297821700573
    2. ' squares' → logprob: -3.781629800796509
    3. 's' → logprob: -4.90662956237793
    4. ')' → logprob: -8.65662956237793
    5. '   ' → logprob: -8.90662956237793
    6. '```' → logprob: -9.03162956237793
    7. ' ' → logprob: -9.40662956237793
    8. '#' → logprob: -9.53162956237793
    9. '_spaces' → logprob: -9.78162956237793
    10. '_' → logprob: -9.78162956237793

Token 1968: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7058205008506775
    2. ' are' → logprob: -0.9558205008506775
    3. '=' → logprob: -3.2058205604553223
    4. 'are' → logprob: -4.080820560455322
    5. ' only' → logprob: -4.580820560455322
    6. ' should' → logprob: -4.580820560455322
    7. '   ' → logprob: -4.955820560455322
    8. ' must' → logprob: -4.955820560455322
    9. ' can' → logprob: -6.080820560455322
    10. ' -' → logprob: -6.080820560455322

Token 1969: ' always' (ID: 3324)
  Prédit: 'always'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'always' → logprob: -0.4613555073738098
    2. 'exact' → logprob: -1.836355447769165
    3. 'just' → logprob: -2.211355447769165
    4. 'actually' → logprob: -3.211355447769165
    5. 'the' → logprob: -3.586355447769165
    6. 'updated' → logprob: -4.836355686187744
    7. 'sim' → logprob: -5.211355686187744
    8. '((' → logprob: -5.711355686187744
    9. ' always' → logprob: -5.961355686187744
    10. '(' → logprob: -6.086355686187744

Token 1970: ' two' (ID: 1920)
  Prédit: 'exact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exact' → logprob: -0.9731029272079468
    2. ' exactly' → logprob: -1.2231029272079468
    3. 'the' → logprob: -1.9731029272079468
    4. 'two' → logprob: -2.0981030464172363
    5. 'just' → logprob: -3.3481030464172363
    6. ' {(' → logprob: -4.973103046417236
    7. ' just' → logprob: -5.098103046417236
    8. '{' → logprob: -5.473103046417236
    9. ' two' → logprob: -5.598103046417236
    10. 'only' → logprob: -6.473103046417236

Token 1971: ' squares' (ID: 57269)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8203237652778625
    2. '   ' → logprob: -0.8203237652778625
    3. 'def' → logprob: -3.9453237056732178
    4. '  
' → logprob: -4.445323944091797
    5. ':
' → logprob: -4.945323944091797
    6. ')' → logprob: -5.070323944091797
    7. '#' → logprob: -5.070323944091797
    8. '    
' → logprob: -5.195323944091797
    9. ' 
' → logprob: -5.570323944091797
    10. ')
' → logprob: -5.570323944091797

Token 1972: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15823282301425934
    2. ':' → logprob: -3.2832329273223877
    3. ':
' → logprob: -3.7832329273223877
    4. '.' → logprob: -4.533232688903809
    5. '       ' → logprob: -4.908232688903809
    6. ',' → logprob: -5.033232688903809
    7. '                   ' → logprob: -5.158232688903809
    8. ')' → logprob: -5.158232688903809
    9. '    
' → logprob: -5.158232688903809
    10. '#' → logprob: -5.533232688903809

Token 1973: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.4675072729587555
    2. '   ' → logprob: -1.967507243156433
    3. '#' → logprob: -2.0925073623657227
    4. 'so' → logprob: -3.8425073623657227
    5. ' not' → logprob: -4.092507362365723
    6. 'not' → logprob: -4.842507362365723
    7. ' and' → logprob: -4.842507362365723
    8. ' but' → logprob: -4.842507362365723
    9. ')' → logprob: -5.092507362365723
    10. '    ' → logprob: -5.217507362365723

Token 1974: ' we' (ID: 581)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6748043894767761
    2. 'new' → logprob: -1.674804449081421
    3. 'old' → logprob: -1.799804449081421
    4. 'open' → logprob: -3.299804449081421
    5. '#' → logprob: -3.799804449081421
    6. 'after' → logprob: -3.924804449081421
    7. '
' → logprob: -4.424804210662842
    8. 'they' → logprob: -4.549804210662842
    9. 'we' → logprob: -4.674804210662842
    10. ' old' → logprob: -5.049804210662842

Token 1975: ' update' (ID: 4027)
  Prédit: 'replace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'replace' → logprob: -0.05670846253633499
    2. 'return' → logprob: -4.306708335876465
    3. 'remove' → logprob: -4.306708335876465
    4. ' replace' → logprob: -5.056708335876465
    5. ' just' → logprob: -5.431708335876465
    6. 'continue' → logprob: -5.681708335876465
    7. 'just' → logprob: -5.806708335876465
    8. 'need' → logprob: -5.806708335876465
    9. 'keep' → logprob: -7.056708335876465
    10. 'add' → logprob: -7.056708335876465

Token 1976: ' open' (ID: 2494)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2452874183654785
    2. 'king' → logprob: -1.2452874183654785
    3. '   ' → logprob: -2.6202874183654785
    4. '(
' → logprob: -2.7452874183654785
    5. ' king' → logprob: -2.9952874183654785
    6. ' =' → logprob: -2.9952874183654785
    7. '((' → logprob: -3.3702874183654785
    8. ' (' → logprob: -3.6202874183654785
    9. 'new' → logprob: -3.7452874183654785
    10. 'old' → logprob: -3.8702874183654785

Token 1977: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0067287529818713665
    2. 's' → logprob: -5.131728649139404
    3. '_' → logprob: -7.881728649139404
    4. ' squares' → logprob: -9.256729125976562
    5. '   ' → logprob: -9.381729125976562
    6. '_spaces' → logprob: -9.381729125976562
    7. '_positions' → logprob: -9.631729125976562
    8. ')' → logprob: -10.381729125976562
    9. 'spaces' → logprob: -10.506729125976562
    10. '```' → logprob: -11.756729125976562

Token 1978: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10443995147943497
    2. 'def' → logprob: -3.2294399738311768
    3. '
' → logprob: -4.229439735412598
    4. ':
' → logprob: -4.354439735412598
    5. ':' → logprob: -4.979439735412598
    6. '       ' → logprob: -5.354439735412598
    7. '    
' → logprob: -5.604439735412598
    8. 'new' → logprob: -5.979439735412598
    9. '#' → logprob: -6.104439735412598
    10. '\' → logprob: -6.854439735412598

Token 1979: ' those' (ID: 2617)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.03521265834569931
    2. 'expected' → logprob: -4.410212516784668
    3. '((' → logprob: -4.535212516784668
    4. 'set' → logprob: -5.035212516784668
    5. ' {(' → logprob: -6.410212516784668
    6. '({' → logprob: -7.160212516784668
    7. '(' → logprob: -7.535212516784668
    8. '(expected' → logprob: -8.160212516784668
    9. '{k' → logprob: -8.285212516784668
    10. 'tuple' → logprob: -8.285212516784668

Token 1980: ' vac' (ID: 7757)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1334950476884842
    2. '
' → logprob: -2.6334950923919678
    3. 'def' → logprob: -3.8834950923919678
    4. ':
' → logprob: -4.133494853973389
    5. ':' → logprob: -5.383494853973389
    6. '       ' → logprob: -5.633494853973389
    7. '    
' → logprob: -6.758494853973389
    8. '#' → logprob: -7.258494853973389
    9. '               ' → logprob: -7.633494853973389
    10. '           ' → logprob: -7.758494853973389

Token 1981: 'ated' (ID: 780)
  Prédit: 'ated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -0.03360904008150101
    2. '{' → logprob: -4.158608913421631
    3. '((' → logprob: -5.533608913421631
    4. 'ac' → logprob: -5.533608913421631
    5. 'open' → logprob: -6.158608913421631
    6. 'ations' → logprob: -6.783608913421631
    7. 'es' → logprob: -6.908608913421631
    8. '(' → logprob: -7.408608913421631
    9. '({' → logprob: -7.408608913421631
    10. 'ed' → logprob: -7.783608913421631

Token 1982: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36814090609550476
    2. '       ' → logprob: -1.6181409358978271
    3. '
' → logprob: -3.618140935897827
    4. '               ' → logprob: -3.868140935897827
    5. '           ' → logprob: -4.368140697479248
    6. 'def' → logprob: -4.868140697479248
    7. '                   ' → logprob: -5.243140697479248
    8. ')' → logprob: -5.493140697479248
    9. ':
' → logprob: -6.118140697479248
    10. '(r' → logprob: -6.118140697479248

Token 1983: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.48957714438438416
    2. 'the' → logprob: -0.9895771741867065
    3. ' king' → logprob: -4.364577293395996
    4. ' the' → logprob: -6.114577293395996
    5. '
' → logprob: -9.239577293395996
    6. 'old' → logprob: -9.364577293395996
    7. '(' → logprob: -9.489577293395996
    8. '{' → logprob: -9.739577293395996
    9. 'previous' → logprob: -10.614577293395996
    10. ' {(' → logprob: -11.114577293395996

Token 1984: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22052843868732452
    2. ':
' → logprob: -2.5955283641815186
    3. 'def' → logprob: -3.2205283641815186
    4. ':' → logprob: -3.5955283641815186
    5. 'new' → logprob: -4.595528602600098
    6. '
' → logprob: -4.720528602600098
    7. '(' → logprob: -5.470528602600098
    8. '#' → logprob: -5.595528602600098
    9. '(
' → logprob: -5.595528602600098
    10. '       ' → logprob: -5.845528602600098

Token 1985: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22024329006671906
    2. 'def' → logprob: -3.095243215560913
    3. '       ' → logprob: -3.220243215560913
    4. '                   ' → logprob: -3.720243215560913
    5. '               ' → logprob: -3.845243215560913
    6. '(' → logprob: -4.470243453979492
    7. 'new' → logprob: -4.470243453979492
    8. '\' → logprob: -4.970243453979492
    9. '           ' → logprob: -5.095243453979492
    10. '    ' → logprob: -5.720243453979492

Token 1986: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09959394484758377
    2. 'def' → logprob: -2.9745938777923584
    3. 'old' → logprob: -3.5995938777923584
    4. '#' (adapté à ' #') → logprob: -5.2245941162109375
    5. '
' → logprob: -5.3495941162109375
    6. 'new' → logprob: -5.8495941162109375
    7. '    
' → logprob: -7.5995941162109375
    8. 'for' → logprob: -7.8495941162109375
    9. '```' → logprob: -7.8495941162109375
    10. '       ' → logprob: -7.9745941162109375

Token 1987: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33436691761016846
    2. 'def' → logprob: -1.5843669176101685
    3. '
' → logprob: -2.834366798400879
    4. 'new' → logprob: -5.209366798400879
    5. '#' → logprob: -5.834366798400879
    6. 'for' → logprob: -6.334366798400879
    7. '    
' → logprob: -6.459366798400879
    8. '       ' → logprob: -6.834366798400879
    9. '(' → logprob: -7.084366798400879
    10. ' (' → logprob: -7.084366798400879

Token 1988: ' problem' (ID: 4792)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.043268874287605286
    2. '#' → logprob: -4.29326868057251
    3. 'old' → logprob: -4.79326868057251
    4. '   ' → logprob: -5.29326868057251
    5. 'king' → logprob: -5.29326868057251
    6. '
' → logprob: -5.54326868057251
    7. 'open' → logprob: -7.04326868057251
    8. ' def' → logprob: -7.29326868057251
    9. 'for' → logprob: -7.41826868057251
    10. ')' → logprob: -7.79326868057251

Token 1989: ' states' (ID: 9407)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2587493658065796
    2. 'moves' → logprob: -1.8837493658065796
    3. '_moves' → logprob: -2.383749485015869
    4. ':' → logprob: -2.508749485015869
    5. '#' → logprob: -2.633749485015869
    6. ' is' → logprob: -2.883749485015869
    7. '   ' → logprob: -3.008749485015869
    8. ' continues' → logprob: -3.383749485015869
    9. '
' → logprob: -3.383749485015869
    10. 's' → logprob: -4.133749485015869

Token 1990: ' after' (ID: 1934)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5098131895065308
    2. '#' → logprob: -1.1348131895065308
    3. 'def' → logprob: -3.1348133087158203
    4. '
' → logprob: -3.8848133087158203
    5. ':' → logprob: -6.00981330871582
    6. '```' → logprob: -6.00981330871582
    7. ' that' → logprob: -6.50981330871582
    8. 'the' → logprob: -6.63481330871582
    9. 'that' → logprob: -6.75981330871582
    10. '       ' → logprob: -7.13481330871582

Token 1991: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.27121686935424805
    2. 'the' → logprob: -1.896216869354248
    3. 'def' → logprob: -3.521216869354248
    4. 'a' → logprob: -4.021216869354248
    5. 'move' → logprob: -4.521216869354248
    6. ' king' → logprob: -4.771216869354248
    7. 'moving' → logprob: -5.021216869354248
    8. '#' → logprob: -5.396216869354248
    9. ' the' → logprob: -6.146216869354248
    10. '   ' → logprob: -6.396216869354248

Token 1992: ' moves' (ID: 19523)
  Prédit: ' move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.23345951735973358
    2. 'moves' → logprob: -2.60845947265625
    3. ' moves' → logprob: -2.85845947265625
    4. 'move' → logprob: -2.98345947265625
    5. '_move' → logprob: -4.23345947265625
    6. '_moves' → logprob: -4.48345947265625
    7. 's' → logprob: -9.23345947265625
    8. ')' → logprob: -9.48345947265625
    9. ' movement' → logprob: -9.48345947265625
    10. '   ' → logprob: -9.60845947265625

Token 1993: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6939978003501892
    2. ',' → logprob: -1.568997859954834
    3. ':' → logprob: -2.318997859954834
    4. ':
' → logprob: -2.568997859954834
    5. 'the' → logprob: -3.068997859954834
    6. ' the' → logprob: -4.318997859954834
    7. '#' → logprob: -4.693997859954834
    8. 'that' → logprob: -4.943997859954834
    9. ' that' → logprob: -5.068997859954834
    10. 'def' → logprob: -5.318997859954834

Token 1994: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.8519711494445801
    2. 'the' → logprob: -1.35197114944458
    3. '(r' → logprob: -2.47697114944458
    4. 'a' → logprob: -2.85197114944458
    5. '(new' → logprob: -3.47697114944458
    6. '(' → logprob: -3.97697114944458
    7. 'position' → logprob: -4.10197114944458
    8. '((' → logprob: -4.47697114944458
    9. 'complete' → logprob: -4.47697114944458
    10. 'vac' → logprob: -4.47697114944458

Token 1995: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.5557414293289185
    2. ' position' → logprob: -1.0557414293289185
    3. 'positions' → logprob: -3.555741310119629
    4. ' positions' → logprob: -4.305741310119629
    5. 'r' → logprob: -4.680741310119629
    6. '(r' → logprob: -4.930741310119629
    7. '_position' → logprob: -5.430741310119629
    8. 'pos' → logprob: -5.430741310119629
    9. ' (' → logprob: -6.305741310119629
    10. '_positions' → logprob: -6.430741310119629

Token 1996: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1800100803375244
    2. '   ' → logprob: -1.1800100803375244
    3. ':
' → logprob: -1.8050100803375244
    4. '(r' → logprob: -2.6800100803375244
    5. '#' → logprob: -2.9300100803375244
    6. ',
' → logprob: -3.0550100803375244
    7. ':' → logprob: -3.6800100803375244
    8. ' (' → logprob: -4.930009841918945
    9. '(' → logprob: -5.055009841918945
    10. 'def' → logprob: -6.055009841918945

Token 1997: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6526522636413574
    2. '   ' → logprob: -0.7776522636413574
    3. 'old' → logprob: -4.777652263641357
    4. ' #' → logprob: -6.027652263641357
    5. 'new' → logprob: -6.277652263641357
    6. 'open' → logprob: -6.402652263641357
    7. '
' → logprob: -7.027652263641357
    8. ' old' → logprob: -7.027652263641357
    9. 'def' → logprob: -7.152652263641357
    10. '#
' → logprob: -7.402652263641357

Token 1998: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6148726940155029
    2. '#' (adapté à ' #') → logprob: -0.9898726940155029
    3. 'old' → logprob: -2.614872694015503
    4. 'open' → logprob: -5.239872932434082
    5. '
' → logprob: -5.739872932434082
    6. 'new' → logprob: -6.364872932434082
    7. ' old' → logprob: -6.364872932434082
    8. ' #' → logprob: -7.114872932434082
    9. 'king' → logprob: -7.989872932434082
    10. '#
' → logprob: -8.114872932434082

Token 1999: ' The' (ID: 623)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5409671664237976
    2. '   ' → logprob: -1.0409672260284424
    3. 'old' → logprob: -2.9159672260284424
    4. 'new' → logprob: -5.165966987609863
    5. 'open' → logprob: -6.665966987609863
    6. 'def' → logprob: -6.790966987609863
    7. '
' → logprob: -7.165966987609863
    8. '#
' → logprob: -7.790966987609863
    9. '"""
' → logprob: -8.665966987609863
    10. ' #' → logprob: -9.040966987609863

Token 2000: ' two' (ID: 1920)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.8945037722587585
    2. 'old' → logprob: -1.2695038318634033
    3. '#' → logprob: -2.8945038318634033
    4. 'new' → logprob: -3.1445038318634033
    5. 'two' → logprob: -3.1445038318634033
    6. ' old' → logprob: -3.2695038318634033
    7. ' king' → logprob: -3.7695038318634033
    8. 'def' → logprob: -3.8945038318634033
    9. ' open' → logprob: -4.019503593444824
    10. ' two' → logprob: -4.269503593444824

Token 2001: ' old' (ID: 2890)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.5484097599983215
    2. 'vac' → logprob: -1.5484097003936768
    3. ' open' → logprob: -2.2984097003936768
    4. ' vac' → logprob: -3.1734097003936768
    5. 'old' → logprob: -4.173409938812256
    6. ' squares' → logprob: -4.923409938812256
    7. 'new' → logprob: -5.173409938812256
    8. ' king' → logprob: -5.298409938812256
    9. 's' → logprob: -5.423409938812256
    10. 'cells' → logprob: -5.548409938812256

Token 2002: ' king' (ID: 13793)
  Prédit: ' king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' king' → logprob: -0.5800950527191162
    2. 'open' → logprob: -1.5800950527191162
    3. 'king' → logprob: -1.5800950527191162
    4. ' open' → logprob: -4.080095291137695
    5. '#' → logprob: -6.455095291137695
    6. ' squares' → logprob: -6.955095291137695
    7. '
' → logprob: -6.955095291137695
    8. 'occupied' → logprob: -6.955095291137695
    9. 'cells' → logprob: -7.330095291137695
    10. 's' → logprob: -7.330095291137695

Token 2003: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.6899269223213196
    2. ' cells' → logprob: -1.3149268627166748
    3. '_cells' → logprob: -1.5649268627166748
    4. ' squares' → logprob: -4.939927101135254
    5. 'positions' → logprob: -5.314927101135254
    6. ' positions' → logprob: -5.814927101135254
    7. ' ' → logprob: -6.064927101135254
    8. ''s' → logprob: -7.314927101135254
    9. '_positions' → logprob: -7.439927101135254
    10. 's' → logprob: -7.939927101135254

Token 2004: ' vac' (ID: 7757)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -1.351657748222351
    2. 'that' → logprob: -1.851657748222351
    3. '-' → logprob: -2.2266578674316406
    4. 'occupied' → logprob: -2.6016578674316406
    5. '   ' → logprob: -2.9766578674316406
    6. ' are' → logprob: -3.2266578674316406
    7. ',' → logprob: -3.6016578674316406
    8. ' (' → logprob: -3.6016578674316406
    9. '#' → logprob: -3.7266578674316406
    10. ' #' → logprob: -4.101657867431641

Token 2005: 'ated' (ID: 780)
  Prédit: 'ated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -0.33946648240089417
    2. 'ate' → logprob: -1.4644664525985718
    3. '(r' → logprob: -4.214466571807861
    4. '(' → logprob: -4.464466571807861
    5. ' (' → logprob: -5.214466571807861
    6. '=' → logprob: -5.839466571807861
    7. '((' → logprob: -5.964466571807861
    8. 'ates' → logprob: -6.339466571807861
    9. 'r' → logprob: -6.401966571807861
    10. 'at' → logprob: -6.776966571807861

Token 2006: ' become' (ID: 5025)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0375316143035889
    2. 's' → logprob: -2.162531614303589
    3. ' (' → logprob: -2.537531614303589
    4. ',' → logprob: -2.537531614303589
    5. ' that' → logprob: -2.537531614303589
    6. ' are' → logprob: -3.287531614303589
    7. ' =' → logprob: -3.662531614303589
    8. 'positions' → logprob: -3.912531614303589
    9. 'that' → logprob: -4.037531852722168
    10. ' become' → logprob: -4.287531852722168

Token 2007: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.5849505066871643
    2. 'the' → logprob: -0.8349505066871643
    3. ' the' → logprob: -5.5849504470825195
    4. ' open' → logprob: -6.0849504470825195
    5. 'two' → logprob: -7.0849504470825195
    6. '(' → logprob: -7.0849504470825195
    7. 'new' → logprob: -7.4599504470825195
    8. '{' → logprob: -8.33495044708252
    9. '   ' → logprob: -9.45995044708252
    10. '(open' → logprob: -9.95995044708252

Token 2008: ' squares' (ID: 57269)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22567321360111237
    2. '
' → logprob: -1.7256731986999512
    3. 'def' → logprob: -5.350673198699951
    4. ':
' → logprob: -5.600673198699951
    5. '    
' → logprob: -5.600673198699951
    6. '  
' → logprob: -6.225673198699951
    7. '

' → logprob: -6.475673198699951
    8. ':' → logprob: -7.100673198699951
    9. '
' → logprob: -7.225673198699951
    10. '#' → logprob: -7.350673198699951

Token 2009: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11070641130208969
    2. 'def' → logprob: -2.485706329345703
    3. '
' → logprob: -4.235706329345703
    4. '                   ' → logprob: -6.110706329345703
    5. '       ' → logprob: -6.235706329345703
    6. '               ' → logprob: -7.235706329345703
    7. '#' → logprob: -7.360706329345703
    8. '           ' → logprob: -7.485706329345703
    9. '    
' → logprob: -7.985706329345703
    10. '
' → logprob: -8.860706329345703

Token 2010: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4744519591331482
    2. '   ' → logprob: -0.9744519591331482
    3. ' #' → logprob: -9.224452018737793
    4. '       ' → logprob: -9.474452018737793
    5. '    ' → logprob: -10.099452018737793
    6. 'and' → logprob: -10.474452018737793
    7. '           ' → logprob: -10.849452018737793
    8. '               ' → logprob: -11.099452018737793
    9. '```' → logprob: -11.224452018737793
    10. '                   ' → logprob: -11.349452018737793

Token 2011: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.10075747966766357
    2. '   ' → logprob: -2.350757598876953
    3. 'and' → logprob: -8.350757598876953
    4. '       ' → logprob: -9.100757598876953
    5. ' #' → logprob: -9.475757598876953
    6. '           ' → logprob: -9.850757598876953
    7. ' and' → logprob: -10.975757598876953
    8. '               ' → logprob: -11.475757598876953
    9. '                   ' → logprob: -11.600757598876953
    10. 'not' → logprob: -11.600757598876953

Token 2012: ' and' (ID: 326)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.023250950500369072
    2. '   ' → logprob: -3.7732510566711426
    3. '       ' → logprob: -13.273250579833984
    4. 'and' → logprob: -13.773250579833984
    5. ' #' → logprob: -13.773250579833984
    6. '           ' → logprob: -14.398250579833984
    7. ' ' → logprob: -15.398250579833984
    8. '  ' → logprob: -15.523250579833984
    9. '               ' → logprob: -16.648250579833984
    10. '    ' → logprob: -16.898250579833984

Token 2013: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3868468403816223
    2. '   ' → logprob: -1.8868467807769775
    3. '#' → logprob: -2.1368467807769775
    4. ' the' → logprob: -3.1368467807769775
    5. 'open' → logprob: -6.636847019195557
    6. 'old' → logprob: -6.636847019195557
    7. 'new' → logprob: -6.886847019195557
    8. 'we' → logprob: -7.511847019195557
    9. '           ' → logprob: -7.761847019195557
    10. 'they' → logprob: -8.011846542358398

Token 2014: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.9752907156944275
    2. 'old' → logprob: -1.6002907752990723
    3. 'new' → logprob: -2.1002907752990723
    4. '#' → logprob: -2.1002907752990723
    5. 'open' → logprob: -2.9752907752990723
    6. '   ' → logprob: -3.1002907752990723
    7. 'king' → logprob: -4.100290775299072
    8. ' two' → logprob: -4.350290775299072
    9. 'remaining' → logprob: -5.100290775299072
    10. 'occupied' → logprob: -5.100290775299072

Token 2015: ' open' (ID: 2494)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.6777721047401428
    2. 'open' → logprob: -1.302772045135498
    3. 'occupied' → logprob: -2.927772045135498
    4. 'new' → logprob: -3.177772045135498
    5. 'cells' → logprob: -3.177772045135498
    6. '#' → logprob: -4.427772045135498
    7. 'remaining' → logprob: -4.802772045135498
    8. 'king' → logprob: -4.927772045135498
    9. ' old' → logprob: -4.927772045135498
    10. ' squares' → logprob: -5.052772045135498

Token 2016: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.5310717225074768
    2. ' squares' → logprob: -1.031071662902832
    3. 's' → logprob: -3.031071662902832
    4. ' ' → logprob: -5.406071662902832
    5. '   ' → logprob: -7.906071662902832
    6. 'spaces' → logprob: -7.906071662902832
    7. '_' → logprob: -8.031071662902832
    8. 'cells' → logprob: -8.281071662902832
    9. ' _' → logprob: -8.531071662902832
    10. '_spaces' → logprob: -8.781071662902832

Token 2017: ' occupied' (ID: 46186)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.5323274731636047
    2. 'that' → logprob: -1.78232741355896
    3. '   ' → logprob: -2.28232741355896
    4. '#' → logprob: -2.90732741355896
    5. 'king' → logprob: -4.032327651977539
    6. ' king' → logprob: -4.032327651977539
    7. 'the' → logprob: -4.032327651977539
    8. 'are' → logprob: -4.907327651977539
    9. ' that' → logprob: -5.532327651977539
    10. 'previous' → logprob: -5.907327651977539

Token 2018: ' are' (ID: 553)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.5545620918273926
    2. ' by' → logprob: -0.9295620918273926
    3. ',' → logprob: -5.179562091827393
    4. '_' → logprob: -5.679562091827393
    5. '_by' → logprob: -5.929562091827393
    6. ' are' → logprob: -5.929562091827393
    7. ' ' → logprob: -6.304562091827393
    8. '<|end|>' → logprob: -6.554562091827393
    9. '```' → logprob: -6.554562091827393
    10. ' (' → logprob: -6.679562091827393

Token 2019: ' no' (ID: 860)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.5155817866325378
    2. 're' → logprob: -1.0155818462371826
    3. 'now' → logprob: -3.8905818462371826
    4. 'occupied' → logprob: -5.2655816078186035
    5. 'the' → logprob: -5.5155816078186035
    6. 'no' → logprob: -5.8905816078186035
    7. 'gone' → logprob: -6.2655816078186035
    8. ' removed' → logprob: -6.5155816078186035
    9. 'taken' → logprob: -6.6405816078186035
    10. 'be' → logprob: -7.2655816078186035

Token 2020: ' longer' (ID: 7411)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.11533201485872269
    2. 'long' → logprob: -2.3653321266174316
    3. ' longer' → logprob: -5.115332126617432
    4. 't' → logprob: -5.115332126617432
    5. 'nger' → logprob: -6.490332126617432
    6. 'onger' → logprob: -6.865332126617432
    7. 'ng' → logprob: -8.240331649780273
    8. '   ' → logprob: -10.115331649780273
    9. '       ' → logprob: -10.865331649780273
    10. ' long' → logprob: -11.240331649780273

Token 2021: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.3912731111049652
    2. 'king' → logprob: -1.6412731409072876
    3. 'occupied' → logprob: -3.016273021697998
    4. 'in' → logprob: -3.516273021697998
    5. 'part' → logprob: -3.891273021697998
    6. ' king' → logprob: -4.391273021697998
    7. 's' → logprob: -4.891273021697998
    8. '(' → logprob: -5.391273021697998
    9. 'available' → logprob: -6.266273021697998
    10. '{' → logprob: -7.141273021697998

Token 2022: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11376006156206131
    2. '
' → logprob: -2.363759994506836
    3. 'def' → logprob: -4.988759994506836
    4. '    
' → logprob: -5.488759994506836
    5. '#' → logprob: -6.738759994506836
    6. ':' → logprob: -8.738759994506836
    7. ')' → logprob: -8.988759994506836
    8. ':
' → logprob: -9.113759994506836
    9. '       ' → logprob: -9.238759994506836
    10. ',
' → logprob: -9.488759994506836

Token 2023: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02579309046268463
    2. 'def' → logprob: -4.900793075561523
    3. '    
' → logprob: -5.650793075561523
    4. 'new' → logprob: -5.900793075561523
    5. '       ' → logprob: -5.900793075561523
    6. '
' → logprob: -6.275793075561523
    7. '\' → logprob: -6.650793075561523
    8. '#' → logprob: -7.650793075561523
    9. ' 
' → logprob: -7.650793075561523
    10. '[' → logprob: -7.775793075561523

Token 2024: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10279364138841629
    2. 'old' → logprob: -2.8527936935424805
    3. 'def' → logprob: -4.1027936935424805
    4. 'new' → logprob: -4.4777936935424805
    5. '#' (adapté à ' #') → logprob: -5.3527936935424805
    6. '
' → logprob: -5.9777936935424805
    7. 'for' → logprob: -6.8527936935424805
    8. 'open' → logprob: -7.6027936935424805
    9. 'moves' → logprob: -7.7277936935424805
    10. '    
' → logprob: -7.9777936935424805

Token 2025: ' We'll' (ID: 46830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06470222771167755
    2. '
' → logprob: -3.689702272415161
    3. 'def' → logprob: -4.314702033996582
    4. '    
' → logprob: -5.314702033996582
    5. 'new' → logprob: -5.314702033996582
    6. '#' → logprob: -5.564702033996582
    7. 'old' → logprob: -5.814702033996582
    8. ' new' → logprob: -6.564702033996582
    9. ' old' → logprob: -6.564702033996582
    10. ' 
' → logprob: -6.939702033996582

Token 2026: ' have' (ID: 679)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.07799186557531357
    2. 'def' → logprob: -3.2029919624328613
    3. '   ' → logprob: -4.202991962432861
    4. 'add' → logprob: -5.452991962432861
    5. 'complete' → logprob: -5.952991962432861
    6. 'define' → logprob: -6.327991962432861
    7. 'implement' → logprob: -6.452991962432861
    8. 'update' → logprob: -6.577991962432861
    9. 'expand' → logprob: -6.827991962432861
    10. '       ' → logprob: -7.202991962432861

Token 2027: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23707519471645355
    2. 'to' → logprob: -1.7370752096176147
    3. '   ' → logprob: -4.112075328826904
    4. 'king' → logprob: -4.612075328826904
    5. 'continue' → logprob: -5.487075328826904
    6. ' to' → logprob: -6.237075328826904
    7. '
' → logprob: -6.987075328826904
    8. '       ' → logprob: -8.112074851989746
    9. 'for' → logprob: -8.362074851989746
    10. 'the' → logprob: -8.362074851989746

Token 2028: ' carefully' (ID: 18455)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.447276771068573
    2. 'update' → logprob: -2.4472768306732178
    3. 'def' → logprob: -2.6972768306732178
    4. '   ' → logprob: -3.1972768306732178
    5. 'replace' → logprob: -3.1972768306732178
    6. 'add' → logprob: -3.1972768306732178
    7. 'handle' → logprob: -4.072276592254639
    8. 'implement' → logprob: -4.072276592254639
    9. 'complete' → logprob: -4.322276592254639
    10. 'expand' → logprob: -4.697276592254639

Token 2029: ' update' (ID: 4027)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.27629390358924866
    2. 'update' → logprob: -2.401293992996216
    3. 'handle' → logprob: -2.401293992996216
    4. 'complete' → logprob: -3.776293992996216
    5. '#' → logprob: -4.151293754577637
    6. 'implement' → logprob: -4.901293754577637
    7. 'consider' → logprob: -5.401293754577637
    8. '   ' → logprob: -6.026293754577637
    9. 'replace' → logprob: -6.526293754577637
    10. '
' → logprob: -6.526293754577637

Token 2030: ' open' (ID: 2494)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.32573631405830383
    2. 'old' → logprob: -2.3257362842559814
    3. ' king' → logprob: -2.7007362842559814
    4. 'r' → logprob: -2.9507362842559814
    5. '   ' → logprob: -4.4507365226745605
    6. 'open' → logprob: -4.7007365226745605
    7. '(' → logprob: -4.8257365226745605
    8. 'state' → logprob: -4.8257365226745605
    9. '(r' → logprob: -5.2007365226745605
    10. 'kr' → logprob: -5.8257365226745605

Token 2031: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0008452449692413211
    2. '_' → logprob: -8.000844955444336
    3. '_cells' → logprob: -9.000844955444336
    4. '_spaces' → logprob: -9.000844955444336
    5. '_positions' → logprob: -9.500844955444336
    6. 's' → logprob: -9.875844955444336
    7. ')' → logprob: -9.875844955444336
    8. ' squares' → logprob: -10.500844955444336
    9. '   ' → logprob: -10.750844955444336
    10. '_square' → logprob: -11.375844955444336

Token 2032: ' accordingly' (ID: 44041)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12650401890277863
    2. '
' → logprob: -2.6265039443969727
    3. 'def' → logprob: -3.7515039443969727
    4. 'new' → logprob: -5.251503944396973
    5. '    
' → logprob: -5.376503944396973
    6. 'old' → logprob: -5.751503944396973
    7. '       ' → logprob: -6.626503944396973
    8. 'for' → logprob: -6.876503944396973
    9. '(old' → logprob: -7.251503944396973
    10. '```' → logprob: -7.251503944396973

Token 2033: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6240050792694092
    2. 'old' → logprob: -1.1240050792694092
    3. 'def' → logprob: -2.499005079269409
    4. '
' → logprob: -3.999005079269409
    5. 'new' → logprob: -4.249005317687988
    6. 'for' → logprob: -4.499005317687988
    7. '#' → logprob: -5.624005317687988
    8. '    
' → logprob: -6.499005317687988
    9. 'moves' → logprob: -6.874005317687988
    10. 'prev' → logprob: -6.999005317687988

Token 2034: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05549709498882294
    2. 'new' → logprob: -3.805497169494629
    3. 'def' → logprob: -4.555497169494629
    4. 'for' → logprob: -5.555497169494629
    5. '
' → logprob: -5.805497169494629
    6. '       ' → logprob: -6.055497169494629
    7. '#' → logprob: -6.305497169494629
    8. 'old' → logprob: -6.555497169494629
    9. ' for' → logprob: -6.680497169494629
    10. 'next' → logprob: -6.930497169494629

Token 2035: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1485241800546646
    2. 'def' → logprob: -2.648524284362793
    3. '
' → logprob: -3.398524284362793
    4. 'old' → logprob: -4.523524284362793
    5. 'for' → logprob: -4.523524284362793
    6. '#' (adapté à ' #') → logprob: -5.148524284362793
    7. 'new' → logprob: -6.523524284362793
    8. '    
' → logprob: -6.773524284362793
    9. '       ' → logprob: -7.023524284362793
    10. '           ' → logprob: -7.398524284362793

Token 2036: ' Steps' (ID: 60117)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.542275071144104
    2. '   ' → logprob: -1.292275071144104
    3. 'for' → logprob: -3.0422749519348145
    4. 'old' → logprob: -3.1672749519348145
    5. '#' → logprob: -3.5422749519348145
    6. 'new' → logprob: -4.5422749519348145
    7. ' for' → logprob: -5.7922749519348145
    8. '```' → logprob: -5.9172749519348145
    9. '
' → logprob: -6.0422749519348145
    10. '       ' → logprob: -7.1672749519348145

Token 2037: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.744472861289978
    2. 'old' → logprob: -1.244472861289978
    3. 'for' → logprob: -2.1194729804992676
    4. ' for' → logprob: -3.6194729804992676
    5. 'def' → logprob: -3.6194729804992676
    6. '#' → logprob: -4.119472980499268
    7. 'new' → logprob: -4.744472980499268
    8. '(old' → logprob: -4.994472980499268
    9. 'current' → logprob: -5.369472980499268
    10. ' (' → logprob: -5.494472980499268

Token 2038: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09232817590236664
    2. '#' → logprob: -2.4673280715942383
    3. ' #' → logprob: -6.967328071594238
    4. '
' → logprob: -7.217328071594238
    5. 'old' → logprob: -7.842328071594238
    6. 'new' → logprob: -8.342328071594238
    7. '```' → logprob: -8.592328071594238
    8. 'for' → logprob: -8.717328071594238
    9. '    
' → logprob: -9.217328071594238
    10. '    ' → logprob: -9.342328071594238

Token 2039: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2658734619617462
    2. '#' (adapté à ' #') → logprob: -2.265873432159424
    3. 'old' → logprob: -2.640873432159424
    4. 'for' → logprob: -3.515873432159424
    5. 'new' → logprob: -4.640873432159424
    6. 'current' → logprob: -5.390873432159424
    7. ' for' → logprob: -5.765873432159424
    8. '```' → logprob: -6.265873432159424
    9. 'r' → logprob: -6.890873432159424
    10. '
' → logprob: -6.890873432159424

Token 2040: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6750848293304443
    2. '#' → logprob: -1.3000848293304443
    3. 'old' → logprob: -1.6750848293304443
    4. 'def' → logprob: -3.9250848293304443
    5. 'for' → logprob: -5.550085067749023
    6. '
' → logprob: -6.300085067749023
    7. 'current' → logprob: -6.550085067749023
    8. 'new' → logprob: -6.675085067749023
    9. ' #' → logprob: -7.425085067749023
    10. 'prev' → logprob: -8.175085067749023

Token 2041: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.01055535301566124
    2. '#' → logprob: -5.385555267333984
    3. 'def' → logprob: -5.760555267333984
    4. 'for' → logprob: -7.260555267333984
    5. 'prev' → logprob: -7.885555267333984
    6. 'king' → logprob: -8.510555267333984
    7. 'new' → logprob: -8.635555267333984
    8. 'For' → logprob: -8.760555267333984
    9. 'from' → logprob: -8.885555267333984
    10. 'r' → logprob: -9.010555267333984

Token 2042: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10866314172744751
    2. 'king' → logprob: -2.3586630821228027
    3. 'kr' → logprob: -4.983663082122803
    4. 'r' → logprob: -6.983663082122803
    5. '_r' → logprob: -7.858663082122803
    6. ' king' → logprob: -9.233663558959961
    7. 'open' → logprob: -10.608663558959961
    8. '   ' → logprob: -10.858663558959961
    9. '_k' → logprob: -10.858663558959961
    10. '_positions' → logprob: -10.858663558959961

Token 2043: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.26731759309768677
    2. 'r' → logprob: -2.267317533493042
    3. 'kr' → logprob: -2.517317533493042
    4. '_' → logprob: -3.142317533493042
    5. '_r' → logprob: -5.517317771911621
    6. 'positions' → logprob: -7.392317771911621
    7. ' king' → logprob: -7.392317771911621
    8. '_positions' → logprob: -7.392317771911621
    9. 'cells' → logprob: -8.142317771911621
    10. '_cells' → logprob: -8.517317771911621

Token 2044: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.0741812139749527
    2. '_r' → logprob: -3.449181318283081
    3. '_positions' → logprob: -3.574181318283081
    4. 'cells' → logprob: -4.824181079864502
    5. '_pos' → logprob: -6.074181079864502
    6. 'r' → logprob: -7.574181079864502
    7. 'positions' → logprob: -7.824181079864502
    8. '_' → logprob: -8.69918155670166
    9. 'pos' → logprob: -9.07418155670166
    10. ',' → logprob: -10.69918155670166

Token 2045: ' occupied' (ID: 46186)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02934402972459793
    2. '=' → logprob: -3.779344081878662
    3. '   ' → logprob: -5.154344081878662
    4. '_set' → logprob: -9.779343605041504
    5. ',' → logprob: -10.279343605041504
    6. '_' → logprob: -10.529343605041504
    7. '_old' → logprob: -10.904343605041504
    8. 'old' → logprob: -11.154343605041504
    9. ':' → logprob: -11.404343605041504
    10. '#' → logprob: -11.529343605041504

Token 2046: ' by' (ID: 656)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5895359516143799
    2. ' =' → logprob: -0.8395359516143799
    3. '   ' → logprob: -4.714535713195801
    4. '_set' → logprob: -6.964535713195801
    5. '_positions' → logprob: -6.964535713195801
    6. ',' → logprob: -7.089535713195801
    7. 'positions' → logprob: -8.0895357131958
    8. '=
' → logprob: -8.5895357131958
    9. '_' → logprob: -8.8395357131958
    10. '=set' → logprob: -8.8395357131958

Token 2047: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.05807402357459068
    2. ' king' → logprob: -3.1830739974975586
    3. '(' → logprob: -4.683073997497559
    4. 'old' → logprob: -6.683073997497559
    5. 'r' → logprob: -6.683073997497559
    6. 'kr' → logprob: -7.058073997497559
    7. 'the' → logprob: -7.308073997497559
    8. '(r' → logprob: -7.558073997497559
    9. ' (' → logprob: -8.308073997497559
    10. '{' → logprob: -8.933073997497559

Token 2048: ' initially' (ID: 25998)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06282950192689896
    2. ' =' → logprob: -3.4378294944763184
    3. '
' → logprob: -4.437829494476318
    4. '#' → logprob: -5.062829494476318
    5. 'old' → logprob: -5.187829494476318
    6. '=' → logprob: -6.687829494476318
    7. '```' → logprob: -8.062829971313477
    8. '    
' → logprob: -8.187829971313477
    9. '(old' → logprob: -8.312829971313477
    10. '_old' → logprob: -8.687829971313477

Token 2049: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.51679927110672
    2. 'old' → logprob: -1.1417992115020752
    3. '#' → logprob: -3.766799211502075
    4. '
' → logprob: -4.141799449920654
    5. ' =' → logprob: -4.266799449920654
    6. '(old' → logprob: -5.391799449920654
    7. ' (' → logprob: -5.891799449920654
    8. '(' → logprob: -5.891799449920654
    9. ',
' → logprob: -6.016799449920654
    10. '#
' → logprob: -6.266799449920654

Token 2050: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7186985611915588
    2. 'old' → logprob: -0.8436985611915588
    3. '#' → logprob: -2.843698501586914
    4. ' old' → logprob: -3.968698501586914
    5. ' #' → logprob: -6.468698501586914
    6. '
' → logprob: -6.718698501586914
    7. '#
' → logprob: -7.968698501586914
    8. ' ' → logprob: -8.093698501586914
    9. '```' → logprob: -8.093698501586914
    10. '`' → logprob: -8.718698501586914

Token 2051: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5680094957351685
    2. '   ' → logprob: -1.0680094957351685
    3. 'old' → logprob: -2.568009376525879
    4. ' #' → logprob: -5.068009376525879
    5. ' old' → logprob: -6.693009376525879
    6. ' ' → logprob: -6.693009376525879
    7. '[' → logprob: -7.318009376525879
    8. ' =' → logprob: -7.693009376525879
    9. '(' → logprob: -8.068009376525879
    10. '```' → logprob: -8.068009376525879

Token 2052: ' -' (ID: 533)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.5997710227966309
    2. '#' → logprob: -1.0997710227966309
    3. '   ' → logprob: -2.349771022796631
    4. ' #' → logprob: -4.599771022796631
    5. ' old' → logprob: -5.099771022796631
    6. '#
' → logprob: -6.724771022796631
    7. ' =' → logprob: -6.849771022796631
    8. '
' → logprob: -7.099771022796631
    9. '=' → logprob: -7.474771022796631
    10. '(old' → logprob: -7.724771022796631

Token 2053: ' new' (ID: 620)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.48449450731277466
    2. '#' → logprob: -1.9844944477081299
    3. 'new' → logprob: -2.10949444770813
    4. '   ' → logprob: -2.73449444770813
    5. 'for' → logprob: -3.60949444770813
    6. 'def' → logprob: -3.85949444770813
    7. '
' → logprob: -5.984494686126709
    8. 'open' → logprob: -6.484494686126709
    9. ' #' → logprob: -6.609494686126709
    10. ' old' → logprob: -6.609494686126709

Token 2054: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011005617678165436
    2. 'king' → logprob: -4.886005401611328
    3. 'r' → logprob: -6.636005401611328
    4. 'kr' → logprob: -6.886005401611328
    5. '_r' → logprob: -7.386005401611328
    6. '_pos' → logprob: -8.511005401611328
    7. '_positions' → logprob: -9.636005401611328
    8. '_cells' → logprob: -10.136005401611328
    9. 'pos' → logprob: -10.261005401611328
    10. '_position' → logprob: -11.136005401611328

Token 2055: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.01763262413442135
    2. 'kr' → logprob: -4.142632484436035
    3. 'r' → logprob: -6.642632484436035
    4. '_' → logprob: -8.267632484436035
    5. ' king' → logprob: -11.642632484436035
    6. '_r' → logprob: -11.767632484436035
    7. 'pos' → logprob: -12.267632484436035
    8. 'k' → logprob: -12.892632484436035
    9. 'queen' → logprob: -13.642632484436035
    10. '```' → logprob: -13.642632484436035

Token 2056: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.04104450345039368
    2. '_r' → logprob: -3.6660444736480713
    3. '_pos' → logprob: -5.41604471206665
    4. '_positions' → logprob: -5.54104471206665
    5. 'cells' → logprob: -6.16604471206665
    6. 'r' → logprob: -6.41604471206665
    7. 'pos' → logprob: -7.16604471206665
    8. '(r' → logprob: -8.166044235229492
    9. 'position' → logprob: -8.291044235229492
    10. '_position' → logprob: -8.416044235229492

Token 2057: ' occupied' (ID: 46186)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23418311774730682
    2. '=' → logprob: -1.6091830730438232
    3. '   ' → logprob: -4.859183311462402
    4. '           ' → logprob: -8.484183311462402
    5. '```' → logprob: -9.359183311462402
    6. 'occupied' → logprob: -9.609183311462402
    7. '               ' → logprob: -9.734183311462402
    8. '       ' → logprob: -9.734183311462402
    9. ')' → logprob: -9.984183311462402
    10. '{' → logprob: -10.109183311462402

Token 2058: ' by' (ID: 656)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08570051938295364
    2. ' =' → logprob: -2.710700511932373
    3. '   ' → logprob: -4.960700511932373
    4. 'by' → logprob: -5.210700511932373
    5. '=
' → logprob: -7.085700511932373
    6. ' by' → logprob: -8.210700988769531
    7. '           ' → logprob: -8.335700988769531
    8. '_' → logprob: -8.460700988769531
    9. '_by' → logprob: -8.460700988769531
    10. '```' → logprob: -8.835700988769531

Token 2059: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.006554559338837862
    2. 'new' → logprob: -5.75655460357666
    3. ' king' → logprob: -6.63155460357666
    4. '(r' → logprob: -7.00655460357666
    5. 'r' → logprob: -7.25655460357666
    6. '{' → logprob: -8.13155460357666
    7. '(new' → logprob: -9.75655460357666
    8. '(' → logprob: -10.50655460357666
    9. '   ' → logprob: -11.00655460357666
    10. 'the' → logprob: -12.00655460357666

Token 2060: ' after' (ID: 1934)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1290707290172577
    2. '       ' → logprob: -2.87907075881958
    3. '
' → logprob: -4.50407075881958
    4. '           ' → logprob: -4.50407075881958
    5. ':
' → logprob: -5.00407075881958
    6. ':' → logprob: -5.75407075881958
    7. '#' → logprob: -5.87907075881958
    8. ',
' → logprob: -6.25407075881958
    9. 'def' → logprob: -6.25407075881958
    10. '               ' → logprob: -6.25407075881958

Token 2061: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.2526962161064148
    2. 'r' → logprob: -2.3776962757110596
    3. ' move' → logprob: -2.5026962757110596
    4. '(r' → logprob: -3.8776962757110596
    5. '_move' → logprob: -4.5026960372924805
    6. ' (' → logprob: -5.6276960372924805
    7. '   ' → logprob: -6.1276960372924805
    8. '
' → logprob: -6.1276960372924805
    9. ' r' → logprob: -6.5026960372924805
    10. 'moving' → logprob: -6.6276960372924805

Token 2062: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03363959118723869
    2. 'old' → logprob: -4.408639430999756
    3. 'def' → logprob: -4.783639430999756
    4. '
' → logprob: -4.908639430999756
    5. 'new' → logprob: -5.908639430999756
    6. '#' → logprob: -7.658639430999756
    7. '    
' → logprob: -8.158639907836914
    8. ' old' → logprob: -8.283639907836914
    9. 'for' → logprob: -8.533639907836914
    10. '```' → logprob: -8.533639907836914

Token 2063: '4' (ID: 19)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02091951109468937
    2. '(r' → logprob: -5.020919322967529
    3. ')' → logprob: -5.270919322967529
    4. '(' → logprob: -6.145919322967529
    5. '   ' → logprob: -6.270919322967529
    6. 'kr' → logprob: -6.520919322967529
    7. 'rr' → logprob: -6.895919322967529
    8. 'new' → logprob: -7.895919322967529
    9. ')
' → logprob: -8.270919799804688
    10. 'king' → logprob: -8.520919799804688

Token 2064: ' cells' (ID: 11242)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.022979497909546
    2. ',r' → logprob: -1.147979497909546
    3. ',' → logprob: -1.647979497909546
    4. '(rr' → logprob: -3.397979497909546
    5. '
' → logprob: -3.647979497909546
    6. ')' → logprob: -3.897979497909546
    7. 'r' → logprob: -4.022979736328125
    8. ',(' → logprob: -4.647979736328125
    9. 'cells' → logprob: -5.147979736328125
    10. ',
' → logprob: -5.897979736328125

Token 2065: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37957486510276794
    2. ')' → logprob: -2.254574775695801
    3. ')
' → logprob: -2.379574775695801
    4. ' =' → logprob: -2.879574775695801
    5. '):
' → logprob: -4.004574775695801
    6. '=' → logprob: -5.129574775695801
    7. '#' → logprob: -5.129574775695801
    8. ':
' → logprob: -5.379574775695801
    9. '
' → logprob: -5.379574775695801
    10. ',' → logprob: -5.629574775695801

Token 2066: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0964198186993599
    2. 'old' → logprob: -2.8464198112487793
    3. '#' → logprob: -3.7214198112487793
    4. 'new' → logprob: -5.596419811248779
    5. ' old' → logprob: -6.346419811248779
    6. '
' → logprob: -6.721419811248779
    7. '#
' → logprob: -7.721419811248779
    8. 'def' → logprob: -7.971419811248779
    9. ' #' → logprob: -7.971419811248779
    10. '       ' → logprob: -7.971419811248779

Token 2067: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17027641832828522
    2. '#' (adapté à ' #') → logprob: -2.170276403427124
    3. 'old' → logprob: -3.795276403427124
    4. 'new' → logprob: -4.545276641845703
    5. ' #' → logprob: -7.170276641845703
    6. ',' → logprob: -7.295276641845703
    7. '(' → logprob: -7.420276641845703
    8. '(old' → logprob: -7.420276641845703
    9. ' old' → logprob: -7.420276641845703
    10. '`' → logprob: -7.545276641845703

Token 2068: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2770310044288635
    2. 'old' → logprob: -2.0270309448242188
    3. 'new' → logprob: -3.4020309448242188
    4. '#' → logprob: -3.5270309448242188
    5. 'for' → logprob: -3.6520309448242188
    6. 'def' → logprob: -4.527030944824219
    7. '       ' → logprob: -6.027030944824219
    8. '
' → logprob: -6.277030944824219
    9. ' for' → logprob: -6.527030944824219
    10. '           ' → logprob: -6.777030944824219

Token 2069: ' open' (ID: 2494)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.12113597244024277
    2. '#' → logprob: -2.371135950088501
    3. '   ' → logprob: -4.74613618850708
    4. 'new' → logprob: -4.99613618850708
    5. 'open' → logprob: -6.24613618850708
    6. '
' → logprob: -6.74613618850708
    7. '       ' → logprob: -7.87113618850708
    8. ' old' → logprob: -7.87113618850708
    9. 'def' → logprob: -8.371135711669922
    10. 'vac' → logprob: -8.496135711669922

Token 2070: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.001098418957553804
    2. '_cells' → logprob: -8.1260986328125
    3. '   ' → logprob: -8.3760986328125
    4. '_positions' → logprob: -8.6260986328125
    5. 's' → logprob: -8.7510986328125
    6. '_spaces' → logprob: -9.6260986328125
    7. '
' → logprob: -10.3760986328125
    8. ' squares' → logprob: -11.1260986328125
    9. '_set' → logprob: -11.2510986328125
    10. '_' → logprob: -11.6260986328125

Token 2071: ' after' (ID: 1934)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5360080599784851
    2. '   ' → logprob: -1.1610081195831299
    3. '=' → logprob: -3.53600811958313
    4. '           ' → logprob: -4.661007881164551
    5. ')' → logprob: -4.911007881164551
    6. ':' → logprob: -5.036007881164551
    7. '       ' → logprob: -5.286007881164551
    8. 's' → logprob: -5.536007881164551
    9. '(s' → logprob: -5.661007881164551
    10. '               ' → logprob: -5.786007881164551

Token 2072: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.24813085794448853
    2. 'king' → logprob: -2.3731307983398438
    3. '=' → logprob: -3.2481307983398438
    4. ' =' → logprob: -3.6231307983398438
    5. 'new' → logprob: -3.9981307983398438
    6. 'the' → logprob: -4.248130798339844
    7. ' move' → logprob: -5.248130798339844
    8. '(' → logprob: -5.498130798339844
    9. ' king' → logprob: -5.748130798339844
    10. '_move' → logprob: -6.248130798339844

Token 2073: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0539666973054409
    2. '
' → logprob: -4.678966522216797
    3. 'new' → logprob: -4.678966522216797
    4. '       ' → logprob: -5.178966522216797
    5. 'def' → logprob: -5.553966522216797
    6. 'old' → logprob: -5.678966522216797
    7. ':' → logprob: -5.678966522216797
    8. '#' → logprob: -6.428966522216797
    9. '           ' → logprob: -6.428966522216797
    10. '    
' → logprob: -6.428966522216797

Token 2074: ' (' (ID: 350)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.7530658841133118
    2. 'expected' → logprob: -0.7530658841133118
    3. 'set' → logprob: -2.878065824508667
    4. 'new' → logprob: -7.003066062927246
    5. ' {(' → logprob: -8.003066062927246
    6. '(expected' → logprob: -9.128066062927246
    7. '{
' → logprob: -9.253066062927246
    8. ' expected' → logprob: -9.503066062927246
    9. 'tuple' → logprob: -9.628066062927246
    10. '   ' → logprob: -9.628066062927246

Token 2075: 'open' (ID: 3843)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.3153188228607178
    2. '{' → logprob: -1.9403188228607178
    3. 'set' → logprob: -2.9403188228607178
    4. 'new' → logprob: -3.0653188228607178
    5. 'open' → logprob: -4.565319061279297
    6. 'old' → logprob: -4.940319061279297
    7. '(expected' → logprob: -5.440319061279297
    8. '((' → logprob: -7.065319061279297
    9. '{
' → logprob: -7.190319061279297
    10. '(' → logprob: -7.565319061279297

Token 2076: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.020770074799656868
    2. 's' → logprob: -4.270770072937012
    3. ' squares' → logprob: -6.395770072937012
    4. '   ' → logprob: -6.895770072937012
    5. '(' → logprob: -7.020770072937012
    6. '_' → logprob: -7.645770072937012
    7. '((' → logprob: -7.770770072937012
    8. '1' → logprob: -7.895770072937012
    9. '{' → logprob: -7.895770072937012
    10. '```' → logprob: -8.145770072937012

Token 2077: 'quares' (ID: 110764)
  Prédit: 'quares'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quares' → logprob: -0.015476150438189507
    2. 'et' → logprob: -5.890476226806641
    3. '{' → logprob: -6.015476226806641
    4. '   ' → logprob: -6.390476226806641
    5. 's' → logprob: -6.515476226806641
    6. '_s' → logprob: -6.765476226806641
    7. '((' → logprob: -6.765476226806641
    8. ' {(' → logprob: -6.890476226806641
    9. '_cells' → logprob: -7.390476226806641
    10. '{
' → logprob: -7.890476226806641

Token 2078: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3635593354701996
    2. ' -' → logprob: -1.238559365272522
    3. '_set' → logprob: -4.238559246063232
    4. '-set' → logprob: -8.11355972290039
    5. '   ' → logprob: -8.86355972290039
    6. ' ' → logprob: -9.86355972290039
    7. '
' → logprob: -10.61355972290039
    8. 'set' → logprob: -11.23855972290039
    9. 'Set' → logprob: -11.73855972290039
    10. '  ' → logprob: -11.86355972290039

Token 2079: ' new' (ID: 620)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.030920742079615593
    2. 'set' → logprob: -3.5309207439422607
    3. 'expected' → logprob: -7.405920505523682
    4. '{
' → logprob: -8.65592098236084
    5. ' {(' → logprob: -9.03092098236084
    6. 'new' → logprob: -9.28092098236084
    7. '{{' → logprob: -9.53092098236084
    8. '({' → logprob: -11.03092098236084
    9. '(set' → logprob: -11.40592098236084
    10. '#' → logprob: -11.53092098236084

Token 2080: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0061666090041399
    2. '_s' → logprob: -5.881166458129883
    3. 'king' → logprob: -6.256166458129883
    4. 'open' → logprob: -7.006166458129883
    5. '_open' → logprob: -9.256166458129883
    6. '_k' → logprob: -9.256166458129883
    7. ' king' → logprob: -9.756166458129883
    8. '((' → logprob: -9.756166458129883
    9. '`' → logprob: -10.506166458129883
    10. '(' → logprob: -10.506166458129883

Token 2081: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.014956635423004627
    2. '_' → logprob: -4.764956474304199
    3. 'open' → logprob: -5.764956474304199
    4. ' king' → logprob: -6.639956474304199
    5. '{' → logprob: -7.264956474304199
    6. '_s' → logprob: -7.889956474304199
    7. '((' → logprob: -8.5149564743042
    8. 'set' → logprob: -8.8899564743042
    9. '_k' → logprob: -9.6399564743042
    10. 's' → logprob: -9.8899564743042

Token 2082: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.048840444535017014
    2. '_s' → logprob: -3.2988405227661133
    3. '_positions' → logprob: -5.423840522766113
    4. ')' → logprob: -6.298840522766113
    5. 's' → logprob: -6.673840522766113
    6. '_moves' → logprob: -6.923840522766113
    7. ')_' → logprob: -7.548840522766113
    8. 'cells' → logprob: -7.673840522766113
    9. '{' → logprob: -8.423840522766113
    10. '_move' → logprob: -8.673840522766113

Token 2083: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012354361824691296
    2. ').' → logprob: -5.262354373931885
    3. '   ' → logprob: -6.012354373931885
    4. ' )' → logprob: -6.762354373931885
    5. '.union' → logprob: -7.137354373931885
    6. '-' → logprob: -7.262354373931885
    7. '|' → logprob: -7.512354373931885
    8. ' -' → logprob: -7.887354373931885
    9. '    ' → logprob: -8.137353897094727
    10. ' |' → logprob: -8.512353897094727

Token 2084: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15504959225654602
    2. '
' → logprob: -2.7800495624542236
    3. ' +' → logprob: -4.030049800872803
    4. ' -' → logprob: -4.405049800872803
    5. '       ' → logprob: -4.530049800872803
    6. '           ' → logprob: -5.155049800872803
    7. ')' → logprob: -5.155049800872803
    8. '-' → logprob: -5.280049800872803
    9. '               ' → logprob: -5.655049800872803
    10. ' =' → logprob: -6.030049800872803

Token 2085: ' (' (ID: 350)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.11888250708580017
    2. '{' → logprob: -2.493882417678833
    3. '(expected' → logprob: -4.118882656097412
    4. 'old' → logprob: -5.368882656097412
    5. '(old' → logprob: -6.493882656097412
    6. 'set' → logprob: -6.868882656097412
    7. '((' → logprob: -6.868882656097412
    8. '(' → logprob: -6.868882656097412
    9. ' {(' → logprob: -6.993882656097412
    10. '({' → logprob: -7.243882656097412

Token 2086: 'old' (ID: 1280)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.18213944137096405
    2. '{' → logprob: -1.9321393966674805
    3. 'old' → logprob: -4.4321393966674805
    4. 'set' → logprob: -4.8071393966674805
    5. ' expected' → logprob: -8.05713939666748
    6. ' {(' → logprob: -8.05713939666748
    7. '   ' → logprob: -8.18213939666748
    8. '(expected' → logprob: -8.55713939666748
    9. '{
' → logprob: -9.30713939666748
    10. '#' → logprob: -9.68213939666748

Token 2087: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0005626845522783697
    2. 'king' → logprob: -7.50056266784668
    3. '```' → logprob: -12.62556266784668
    4. ' king' → logprob: -12.87556266784668
    5. '   ' → logprob: -13.25056266784668
    6. '_cells' → logprob: -14.25056266784668
    7. '
' → logprob: -15.12556266784668
    8. '_k' → logprob: -15.62556266784668
    9. '#' → logprob: -15.62556266784668
    10. '``' → logprob: -16.00056266784668

Token 2088: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.023539412766695023
    2. '_' → logprob: -3.7735393047332764
    3. ' king' → logprob: -9.023539543151855
    4. 'kr' → logprob: -9.023539543151855
    5. '
' → logprob: -10.773539543151855
    6. '(' → logprob: -11.773539543151855
    7. '{' → logprob: -13.023539543151855
    8. 'cells' → logprob: -13.148539543151855
    9. '   ' → logprob: -13.398539543151855
    10. '.king' → logprob: -13.398539543151855

Token 2089: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.0028590820729732513
    2. 'cells' → logprob: -5.877859115600586
    3. '
' → logprob: -10.752859115600586
    4. 'Cells' → logprob: -12.252859115600586
    5. ')' → logprob: -12.502859115600586
    6. '```' → logprob: -12.502859115600586
    7. ')_' → logprob: -12.752859115600586
    8. '{' → logprob: -12.752859115600586
    9. '   ' → logprob: -13.377859115600586
    10. '_positions' → logprob: -13.627859115600586

Token 2090: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14374206960201263
    2. '-' → logprob: -2.018742084503174
    3. '   ' → logprob: -7.018742084503174
    4. ')' → logprob: -9.143741607666016
    5. '    ' → logprob: -11.018741607666016
    6. ' ' → logprob: -11.143741607666016
    7. ')
' → logprob: -11.643741607666016
    8. '  ' → logprob: -12.268741607666016
    9. '-
' → logprob: -12.643741607666016
    10. '       ' → logprob: -12.768741607666016

Token 2091: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.037780143320560455
    2. '{' → logprob: -3.5377800464630127
    3. 'expected' → logprob: -4.912780284881592
    4. 'set' → logprob: -7.537780284881592
    5. 'open' → logprob: -11.162779808044434
    6. ' {(' → logprob: -11.162779808044434
    7. ' new' → logprob: -11.287779808044434
    8. '(new' → logprob: -11.287779808044434
    9. '{
' → logprob: -11.287779808044434
    10. '(' → logprob: -12.287779808044434

Token 2092: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004691188223659992
    2. 'king' → logprob: -5.379691123962402
    3. '{' → logprob: -10.254691123962402
    4. ' king' → logprob: -11.129691123962402
    5. '((' → logprob: -11.754691123962402
    6. '_s' → logprob: -13.129691123962402
    7. '(' → logprob: -13.254691123962402
    8. 'open' → logprob: -13.379691123962402
    9. '#' → logprob: -13.504691123962402
    10. '```' → logprob: -14.254691123962402

Token 2093: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.011319541372358799
    2. '{' → logprob: -5.261319637298584
    3. '_' → logprob: -5.386319637298584
    4. 'expected' → logprob: -6.886319637298584
    5. ' king' → logprob: -8.511319160461426
    6. 'cells' → logprob: -9.886319160461426
    7. 'set' → logprob: -10.386319160461426
    8. '((' → logprob: -10.386319160461426
    9. '_cells' → logprob: -10.511319160461426
    10. ' {(' → logprob: -10.636319160461426

Token 2094: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.020997025072574615
    2. 'cells' → logprob: -3.8959970474243164
    3. 'occupied' → logprob: -8.645997047424316
    4. '_positions' → logprob: -10.145997047424316
    5. ')' → logprob: -10.270997047424316
    6. '   ' → logprob: -10.395997047424316
    7. 'occup' → logprob: -10.520997047424316
    8. 's' → logprob: -10.895997047424316
    9. '_blocks' → logprob: -11.145997047424316
    10. 'Cells' → logprob: -11.145997047424316

Token 2095: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06814385950565338
    2. '   ' → logprob: -3.068143844604492
    3. ')
' → logprob: -4.443143844604492
    4. '))' → logprob: -5.693143844604492
    5. ')}' → logprob: -6.068143844604492
    6. ')))' → logprob: -7.693143844604492
    7. ')`' → logprob: -7.943143844604492
    8. '}' → logprob: -8.568143844604492
    9. '})' → logprob: -8.693143844604492
    10. ')**' → logprob: -9.193143844604492

Token 2096: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04944230616092682
    2. '
' → logprob: -4.174442291259766
    3. '    
' → logprob: -4.924442291259766
    4. '\' → logprob: -5.049442291259766
    5. '\n' → logprob: -5.674442291259766
    6. ':' → logprob: -6.049442291259766
    7. 'def' → logprob: -6.299442291259766
    8. '(
' → logprob: -6.424442291259766
    9. ':
' → logprob: -6.674442291259766
    10. '  
' → logprob: -6.799442291259766

Token 2097: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008535262197256088
    2. '       ' → logprob: -6.133535385131836
    3. '
' → logprob: -6.258535385131836
    4. '    
' → logprob: -7.383535385131836
    5. '           ' → logprob: -7.633535385131836
    6. '\' → logprob: -8.133535385131836
    7. 'new' → logprob: -8.258535385131836
    8. '```' → logprob: -8.258535385131836
    9. '\t' → logprob: -8.383535385131836
    10. ',' → logprob: -8.508535385131836

Token 2098: ' However' (ID: 5551)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01157575286924839
    2. '       ' → logprob: -6.011575698852539
    3. 'new' → logprob: -6.261575698852539
    4. '
' → logprob: -6.636575698852539
    5. 'def' → logprob: -6.636575698852539
    6. '           ' → logprob: -7.011575698852539
    7. 'for' → logprob: -7.511575698852539
    8. '```' → logprob: -7.886575698852539
    9. 'old' → logprob: -8.011575698852539
    10. '               ' → logprob: -8.011575698852539

Token 2099: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4976644217967987
    2. '#' → logprob: -0.9976644515991211
    3. ':' → logprob: -4.247664451599121
    4. ',' → logprob: -5.997664451599121
    5. ' #' → logprob: -6.247664451599121
    6. '       ' → logprob: -7.747664451599121
    7. 'def' → logprob: -7.747664451599121
    8. ' if' → logprob: -7.747664451599121
    9. ':
' → logprob: -7.872664451599121
    10. 'the' → logprob: -8.122664451599121

Token 2100: ' new' (ID: 620)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2834863066673279
    2. '   ' → logprob: -1.4084863662719727
    3. '```' → logprob: -7.033486366271973
    4. ' #' → logprob: -8.158486366271973
    5. '           ' → logprob: -8.533486366271973
    6. 'open' → logprob: -8.658486366271973
    7. '       ' → logprob: -9.283486366271973
    8. 'The' → logprob: -9.533486366271973
    9. 'new' → logprob: -9.658486366271973
    10. 'the' → logprob: -9.783486366271973

Token 2101: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0003144896763842553
    2. 'open' → logprob: -9.125314712524414
    3. 'king' → logprob: -9.625314712524414
    4. '_open' → logprob: -9.750314712524414
    5. '   ' → logprob: -11.000314712524414
    6. '```' → logprob: -11.125314712524414
    7. '_s' → logprob: -11.250314712524414
    8. '#' → logprob: -11.625314712524414
    9. '_cells' → logprob: -12.000314712524414
    10. ' _' → logprob: -13.125314712524414

Token 2102: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.0304515790194273
    2. '_' → logprob: -3.530451536178589
    3. ' king' → logprob: -7.655451774597168
    4. '#' → logprob: -8.905451774597168
    5. '_cells' → logprob: -10.905451774597168
    6. '```' → logprob: -10.905451774597168
    7. 'cells' → logprob: -11.155451774597168
    8. '_positions' → logprob: -12.405451774597168
    9. 'position' → logprob: -12.780451774597168
    10. '.king' → logprob: -12.905451774597168

Token 2103: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.0001097417771234177
    2. 'cells' → logprob: -9.625109672546387
    3. '_moves' → logprob: -11.500109672546387
    4. '   ' → logprob: -11.875109672546387
    5. '_positions' → logprob: -12.500109672546387
    6. '#' → logprob: -12.625109672546387
    7. '```' → logprob: -12.875109672546387
    8. '
' → logprob: -13.000109672546387
    9. '_blocks' → logprob: -13.125109672546387
    10. '_cell' → logprob: -13.250109672546387

Token 2104: ' overlap' (ID: 56631)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.296437382698059
    2. '=' → logprob: -1.796437382698059
    3. ' =' → logprob: -2.0464372634887695
    4. ')' → logprob: -2.6714372634887695
    5. ' is' → logprob: -2.7964372634887695
    6. ' must' → logprob: -2.9214372634887695
    7. ' -' → logprob: -3.2964372634887695
    8. 'must' → logprob: -3.7964372634887695
    9. ' should' → logprob: -3.9214372634887695
    10. '   ' → logprob: -4.4214372634887695

Token 2105: ' old' (ID: 2890)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.4997360408306122
    2. 'with' → logprob: -1.6247360706329346
    3. '=' → logprob: -3.4997360706329346
    4. ')' → logprob: -3.7497360706329346
    5. '   ' → logprob: -3.9997360706329346
    6. ' with' → logprob: -3.9997360706329346
    7. '(' → logprob: -4.1247358322143555
    8. 'not' → logprob: -4.4997358322143555
    9. 'r' → logprob: -4.6247358322143555
    10. '(
' → logprob: -4.6247358322143555

Token 2106: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03247543424367905
    2. ')' → logprob: -4.157475471496582
    3. '_)' → logprob: -5.157475471496582
    4. '_
' → logprob: -6.282475471496582
    5. '   ' → logprob: -6.407475471496582
    6. ')
' → logprob: -6.407475471496582
    7. '_cells' → logprob: -6.407475471496582
    8. '_)
' → logprob: -6.907475471496582
    9. 'king' → logprob: -7.032475471496582
    10. ' king' → logprob: -8.407475471496582

Token 2107: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.007208321243524551
    2. '_' → logprob: -5.507208347320557
    3. 'cells' → logprob: -6.132208347320557
    4. '_cells' → logprob: -7.132208347320557
    5. ' king' → logprob: -9.507207870483398
    6. 'cell' → logprob: -10.132207870483398
    7. '```' → logprob: -12.007207870483398
    8. '#' → logprob: -12.632207870483398
    9. '(' → logprob: -12.882207870483398
    10. '
' → logprob: -12.882207870483398

Token 2108: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.006384822074323893
    2. 'cells' → logprob: -5.50638484954834
    3. ')' → logprob: -7.13138484954834
    4. 's' → logprob: -7.38138484954834
    5. '   ' → logprob: -8.25638484954834
    6. ')_' → logprob: -8.75638484954834
    7. '
' → logprob: -9.25638484954834
    8. '_positions' → logprob: -9.63138484954834
    9. '#' → logprob: -10.00638484954834
    10. '_c' → logprob: -10.88138484954834

Token 2109: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15963856875896454
    2. ':' → logprob: -3.6596386432647705
    3. 'def' → logprob: -3.9096386432647705
    4. ':
' → logprob: -4.409638404846191
    5. '\' → logprob: -4.534638404846191
    6. '(r' → logprob: -4.534638404846191
    7. '(' → logprob: -4.659638404846191
    8. '
' → logprob: -4.784638404846191
    9. '(
' → logprob: -4.909638404846191
    10. '       ' → logprob: -5.409638404846191

Token 2110: ' no' (ID: 860)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'least' → logprob: -1.0480105876922607
    2. '(' → logprob: -1.2980105876922607
    3. 'two' → logprob: -2.7980105876922607
    4. '1' → logprob: -2.7980105876922607
    5. '2' → logprob: -2.9230105876922607
    6. 'most' → logprob: -3.2980105876922607
    7. '{' → logprob: -3.6730105876922607
    8. 'kr' → logprob: -3.7980105876922607
    9. '0' → logprob: -4.29801082611084
    10. 'r' → logprob: -4.29801082611084

Token 2111: ' point' (ID: 2438)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.14278635382652283
    2. 'intersection' → logprob: -3.3927862644195557
    3. 'r' → logprob: -3.5177862644195557
    4. 'more' → logprob: -3.6427862644195557
    5. 'all' → logprob: -5.142786502838135
    6. 'extra' → logprob: -5.392786502838135
    7. ' overlap' → logprob: -5.642786502838135
    8. 'additional' → logprob: -5.642786502838135
    9. '0' → logprob: -5.767786502838135
    10. '1' → logprob: -6.017786502838135

Token 2112: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029416942968964577
    2. ')' → logprob: -5.154417037963867
    3. '    
' → logprob: -5.529417037963867
    4. '       ' → logprob: -5.904417037963867
    5. '...' → logprob: -6.529417037963867
    6. 'def' → logprob: -6.779417037963867
    7. ':' → logprob: -6.904417037963867
    8. '<|end|>' → logprob: -6.904417037963867
    9. '           ' → logprob: -7.029417037963867
    10. '(' → logprob: -7.029417037963867

Token 2113: 'king' (ID: 6962)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06818204373121262
    2. ' )' → logprob: -4.318181991577148
    3. '#' → logprob: -4.693181991577148
    4. '0' → logprob: -4.818181991577148
    5. '1' → logprob: -5.318181991577148
    6. ')
' → logprob: -5.568181991577148
    7. '   ' → logprob: -5.818181991577148
    8. ':' → logprob: -6.068181991577148
    9. 'r' → logprob: -6.318181991577148
    10. '
' → logprob: -6.818181991577148

Token 2114: ' fully' (ID: 9637)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -1.0950310230255127
    2. '_r' → logprob: -1.8450310230255127
    3. 'r' → logprob: -2.4700310230255127
    4. ' moves' → logprob: -2.5950310230255127
    5. '_moves' → logprob: -2.7200310230255127
    6. '_cells' → logprob: -2.9700310230255127
    7. ',' → logprob: -3.2200310230255127
    8. ')' → logprob: -3.4700310230255127
    9. 'cells' → logprob: -4.095030784606934
    10. ',r' → logprob: -4.095030784606934

Token 2115: ' moves' (ID: 19523)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.19443143904209137
    2. 'moves' → logprob: -2.1944315433502197
    3. 'occup' → logprob: -3.0694315433502197
    4. 'occupied' → logprob: -4.444431304931641
    5. 'changes' → logprob: -6.819431304931641
    6. 'm' → logprob: -6.819431304931641
    7. ' overlaps' → logprob: -7.694431304931641
    8. 'covers' → logprob: -7.819431304931641
    9. 're' → logprob: -7.819431304931641
    10. '```' → logprob: -8.19443130493164

Token 2116: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7383644580841064
    2. 'forward' → logprob: -1.7383644580841064
    3. 'to' → logprob: -1.8633644580841064
    4. ',' → logprob: -2.3633644580841064
    5. 'outside' → logprob: -2.7383644580841064
    6. 'away' → logprob: -3.1133644580841064
    7. ')
' → logprob: -3.2383644580841064
    8. '),' → logprob: -3.2383644580841064
    9. 'into' → logprob: -3.3633644580841064
    10. 'out' → logprob: -3.4883644580841064

Token 2117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11130405962467194
    2. ':' → logprob: -3.6113040447235107
    3. '       ' → logprob: -4.36130428314209
    4. ':
' → logprob: -4.61130428314209
    5. '```' → logprob: -5.11130428314209
    6. '(
' → logprob: -5.23630428314209
    7. ',' → logprob: -5.36130428314209
    8. '(' → logprob: -5.61130428314209
    9. '\' → logprob: -5.73630428314209
    10. ',
' → logprob: -5.73630428314209

Token 2118: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08803461492061615
    2. '       ' → logprob: -3.7130346298217773
    3. '(
' → logprob: -4.963034629821777
    4. '               ' → logprob: -5.338034629821777
    5. '           ' → logprob: -5.463034629821777
    6. '    ' → logprob: -5.463034629821777
    7. '(' → logprob: -5.588034629821777
    8. '\' → logprob: -5.588034629821777
    9. ' (' → logprob: -5.588034629821777
    10. ')' → logprob: -5.963034629821777

Token 2119: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6568456292152405
    2. '       ' → logprob: -2.5318455696105957
    3. ')' → logprob: -3.4068455696105957
    4. ',' → logprob: -3.4068455696105957
    5. '\' → logprob: -3.5318455696105957
    6. '```' → logprob: -3.6568455696105957
    7. 'new' → logprob: -3.6568455696105957
    8. '\n' → logprob: -3.9068455696105957
    9. ' new' → logprob: -4.031845569610596
    10. '           ' → logprob: -4.156845569610596

Token 2120: ' effectively' (ID: 18130)
  Prédit: ' old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' old' → logprob: -0.27666884660720825
    2. '   ' → logprob: -2.4016687870025635
    3. 'old' → logprob: -2.5266687870025635
    4. ' new' → logprob: -3.0266687870025635
    5. ' for' → logprob: -4.901669025421143
    6. ' open' → logprob: -5.651669025421143
    7. 'new' → logprob: -5.901669025421143
    8. ' continue' → logprob: -6.276669025421143
    9. '    ' → logprob: -6.401669025421143
    10. '           ' → logprob: -7.026669025421143

Token 2121: ':
' (ID: 734)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.46818074584007263
    2. 'open' → logprob: -2.0931806564331055
    3. '#' → logprob: -2.2181806564331055
    4. '   ' → logprob: -2.5931806564331055
    5. 'new' → logprob: -3.5931806564331055
    6. ' old' → logprob: -3.9681806564331055
    7. '
' → logprob: -4.4681806564331055
    8. ' open' → logprob: -5.8431806564331055
    9. ' new' → logprob: -6.0931806564331055
    10. 'continue' → logprob: -7.3431806564331055

Token 2122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038391444832086563
    2. '#' → logprob: -6.628839015960693
    3. '       ' → logprob: -6.753839015960693
    4. '    ' → logprob: -8.378839492797852
    5. '           ' → logprob: -8.378839492797852
    6. '                   ' → logprob: -8.503839492797852
    7. '```' → logprob: -8.503839492797852
    8. '
' → logprob: -9.378839492797852
    9. ' #' → logprob: -9.503839492797852
    10. '               ' → logprob: -9.628839492797852

Token 2123: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4430984854698181
    2. '#' (adapté à ' #') → logprob: -1.068098545074463
    3. ' #' → logprob: -5.193098545074463
    4. 'new' → logprob: -6.193098545074463
    5. '       ' → logprob: -6.318098545074463
    6. ' new' → logprob: -6.443098545074463
    7. '```' → logprob: -7.568098545074463
    8. '    ' → logprob: -7.568098545074463
    9. '           ' → logprob: -7.818098545074463
    10. ' (' → logprob: -8.443098068237305

Token 2124: ' open' (ID: 2494)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.507743775844574
    2. '   ' → logprob: -1.3827438354492188
    3. 'new' → logprob: -2.6327438354492188
    4. ' new' → logprob: -3.7577438354492188
    5. ' #' → logprob: -4.882743835449219
    6. 'r' → logprob: -4.882743835449219
    7. 'old' → logprob: -5.257743835449219
    8. 'def' → logprob: -5.257743835449219
    9. ' r' → logprob: -5.632743835449219
    10. '       ' → logprob: -5.757743835449219

Token 2125: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0001793457195162773
    2. 's' → logprob: -8.750179290771484
    3. ' =' → logprob: -12.375179290771484
    4. '_' → logprob: -12.625179290771484
    5. '_positions' → logprob: -12.875179290771484
    6. '   ' → logprob: -13.125179290771484
    7. '_spaces' → logprob: -13.125179290771484
    8. '=' → logprob: -13.750179290771484
    9. '
' → logprob: -13.875179290771484
    10. '_cells' → logprob: -14.000179290771484

Token 2126: 'quares' (ID: 110764)
  Prédit: 'quares'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quares' → logprob: -0.002493256703019142
    2. 's' → logprob: -6.752493381500244
    3. '_s' → logprob: -7.627493381500244
    4. 'qu' → logprob: -8.502492904663086
    5. '_' → logprob: -8.627492904663086
    6. 'open' → logprob: -9.377492904663086
    7. 'et' → logprob: -9.502492904663086
    8. 'q' → logprob: -10.127492904663086
    9. 'tr' → logprob: -10.127492904663086
    10. '_open' → logprob: -10.502492904663086

Token 2127: ' after' (ID: 1934)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4291912615299225
    2. ' =' → logprob: -1.0541912317276
    3. '-' → logprob: -9.554191589355469
    4. '_update' → logprob: -10.179191589355469
    5. ' -=' → logprob: -10.179191589355469
    6. '_after' → logprob: -10.304191589355469
    7. '```' → logprob: -10.429191589355469
    8. 'remove' → logprob: -10.429191589355469
    9. 'after' → logprob: -10.554191589355469
    10. '#' → logprob: -10.679191589355469

Token 2128: ' move' (ID: 5275)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19608674943447113
    2. 'move' → logprob: -1.8210867643356323
    3. ' move' → logprob: -5.071086883544922
    4. ' =' → logprob: -5.071086883544922
    5. 'update' → logprob: -6.571086883544922
    6. '=
' → logprob: -7.071086883544922
    7. '_move' → logprob: -7.571086883544922
    8. 'remove' → logprob: -8.446086883544922
    9. '_' → logprob: -9.196086883544922
    10. 'moves' → logprob: -9.446086883544922

Token 2129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.633151113986969
    2. '=' → logprob: -0.758151113986969
    3. '   ' → logprob: -7.633151054382324
    4. '#' → logprob: -11.383151054382324
    5. '```' → logprob: -11.758151054382324
    6. ')' → logprob: -12.383151054382324
    7. '=
' → logprob: -12.383151054382324
    8. 'def' → logprob: -12.383151054382324
    9. ' #' → logprob: -12.508151054382324
    10. ' =
' → logprob: -12.633151054382324

Token 2130: ' (' (ID: 350)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.7456991672515869
    2. '{' → logprob: -1.120699167251587
    3. 'set' → logprob: -2.995699167251587
    4. '(expected' → logprob: -3.245699167251587
    5. 'old' → logprob: -3.370699167251587
    6. '(old' → logprob: -3.495699167251587
    7. 'open' → logprob: -4.245698928833008
    8. 'new' → logprob: -4.995698928833008
    9. '(set' → logprob: -5.245698928833008
    10. '(' → logprob: -5.495698928833008

Token 2131: 'open' (ID: 3843)
  Prédit: 'open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.15268373489379883
    2. '(open' → logprob: -2.027683734893799
    3. '{' → logprob: -5.652683734893799
    4. ' open' → logprob: -6.277683734893799
    5. ' (' → logprob: -6.527683734893799
    6. 'set' → logprob: -6.902683734893799
    7. '(' → logprob: -7.277683734893799
    8. '(set' → logprob: -7.527683734893799
    9. 'new' → logprob: -9.02768325805664
    10. '((' → logprob: -9.27768325805664

Token 2132: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0006118826568126678
    2. '_' → logprob: -8.250612258911133
    3. '   ' → logprob: -8.750612258911133
    4. 's' → logprob: -9.000612258911133
    5. ')' → logprob: -11.125612258911133
    6. ')_' → logprob: -12.000612258911133
    7. ' ' → logprob: -12.125612258911133
    8. '```' → logprob: -12.250612258911133
    9. '_cells' → logprob: -12.375612258911133
    10. '{' → logprob: -12.625612258911133

Token 2133: 'quares' (ID: 110764)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.09134900569915771
    2. 'quares' → logprob: -2.7163491249084473
    3. 's' → logprob: -3.9663491249084473
    4. '   ' → logprob: -7.216349124908447
    5. '_set' → logprob: -7.841349124908447
    6. '_' → logprob: -8.216348648071289
    7. '_cells' → logprob: -8.216348648071289
    8. '{' → logprob: -9.341348648071289
    9. '_spaces' → logprob: -9.841348648071289
    10. 'set' → logprob: -10.091348648071289

Token 2134: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10030005127191544
    2. '-' → logprob: -2.3503000736236572
    3. ' ' → logprob: -9.725299835205078
    4. '-set' → logprob: -11.975299835205078
    5. ' -
' → logprob: -12.100299835205078
    6. '   ' → logprob: -12.350299835205078
    7. '_set' → logprob: -12.475299835205078
    8. '-
' → logprob: -12.850299835205078
    9. '.union' → logprob: -12.975299835205078
    10. '  ' → logprob: -13.725299835205078

Token 2135: ' new' (ID: 620)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.20493821799755096
    2. 'expected' → logprob: -2.0799381732940674
    3. 'set' → logprob: -3.0799381732940674
    4. 'new' → logprob: -4.3299384117126465
    5. ' {(' → logprob: -7.4549384117126465
    6. '{
' → logprob: -9.079937934875488
    7. '{{' → logprob: -9.454937934875488
    8. 'king' → logprob: -9.579937934875488
    9. '({' → logprob: -10.079937934875488
    10. '{k' → logprob: -10.329937934875488

Token 2136: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.842555426876061e-06
    2. 'king' → logprob: -13.500004768371582
    3. '```' → logprob: -14.000004768371582
    4. '_s' → logprob: -14.625004768371582
    5. '_k' → logprob: -15.125004768371582
    6. ' king' → logprob: -15.500004768371582
    7. ')' → logprob: -15.750004768371582
    8. '-' → logprob: -15.875004768371582
    9. ''_' → logprob: -15.875004768371582
    10. '_cells' → logprob: -16.0000057220459

Token 2137: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.006015183869749308
    2. '_' → logprob: -5.131015300750732
    3. '{' → logprob: -10.381014823913574
    4. ' king' → logprob: -10.631014823913574
    5. '((' → logprob: -11.506014823913574
    6. '(' → logprob: -11.881014823913574
    7. 'cells' → logprob: -13.381014823913574
    8. '[(' → logprob: -13.506014823913574
    9. 'queen' → logprob: -13.756014823913574
    10. '```' → logprob: -13.756014823913574

Token 2138: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.0018195280572399497
    2. '_' → logprob: -7.376819610595703
    3. 'king' → logprob: -7.501819610595703
    4. 'cells' → logprob: -7.626819610595703
    5. '{' → logprob: -10.126819610595703
    6. ')' → logprob: -11.251819610595703
    7. '_positions' → logprob: -11.251819610595703
    8. '```' → logprob: -12.001819610595703
    9. '_moves' → logprob: -12.126819610595703
    10. '_blocks' → logprob: -12.251819610595703

Token 2139: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03256417065858841
    2. ').' → logprob: -3.657564163208008
    3. '   ' → logprob: -5.407564163208008
    4. '-' → logprob: -7.032564163208008
    5. ' )' → logprob: -8.282564163208008
    6. ' -' → logprob: -8.407564163208008
    7. ')
' → logprob: -9.782564163208008
    8. ')}' → logprob: -10.157564163208008
    9. '.' → logprob: -10.282564163208008
    10. ')-' → logprob: -10.407564163208008

Token 2140: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8749789595603943
    2. ' +' → logprob: -0.9999789595603943
    3. ')' → logprob: -3.374979019165039
    4. '+' → logprob: -3.624979019165039
    5. '       ' → logprob: -3.874979019165039
    6. ' -' → logprob: -3.999979019165039
    7. ' |' → logprob: -3.999979019165039
    8. '|' → logprob: -4.499979019165039
    9. '               ' → logprob: -4.499979019165039
    10. '           ' → logprob: -4.624979019165039

Token 2141: ' old' (ID: 2890)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.7355383038520813
    2. 'expected' → logprob: -1.4855382442474365
    3. ' {(' → logprob: -1.4855382442474365
    4. ' expected' → logprob: -3.8605382442474365
    5. 'old' → logprob: -3.9855382442474365
    6. ' (' → logprob: -5.110538482666016
    7. '(expected' → logprob: -5.610538482666016
    8. '(' → logprob: -5.860538482666016
    9. ' {' → logprob: -5.985538482666016
    10. '   ' → logprob: -6.110538482666016

Token 2142: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0001847062085289508
    2. 'king' → logprob: -9.375185012817383
    3. '   ' → logprob: -9.625185012817383
    4. '```' → logprob: -11.125185012817383
    5. '_cells' → logprob: -11.875185012817383
    6. ' king' → logprob: -12.250185012817383
    7. '(' → logprob: -12.375185012817383
    8. '``' → logprob: -14.750185012817383
    9. '(_' → logprob: -14.875185012817383
    10. '#' → logprob: -14.875185012817383

Token 2143: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.2526034414768219
    2. '_' → logprob: -1.5026034116744995
    3. '_cells' → logprob: -7.502603530883789
    4. ' king' → logprob: -9.502603530883789
    5. '
' → logprob: -10.752603530883789
    6. '(' → logprob: -11.627603530883789
    7. '   ' → logprob: -12.502603530883789
    8. '{' → logprob: -12.627603530883789
    9. 'cells' → logprob: -13.377603530883789
    10. '```' → logprob: -13.377603530883789

Token 2144: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.004645384382456541
    2. 'cells' → logprob: -5.379645347595215
    3. 'Cells' → logprob: -11.879645347595215
    4. '   ' → logprob: -12.254645347595215
    5. '```' → logprob: -12.504645347595215
    6. '
' → logprob: -13.254645347595215
    7. ' cells' → logprob: -13.254645347595215
    8. '{' → logprob: -13.379645347595215
    9. 's' → logprob: -14.629645347595215
    10. '.cells' → logprob: -15.254645347595215

Token 2145: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05039796605706215
    2. 'def' → logprob: -3.1753978729248047
    3. 'new' → logprob: -6.300397872924805
    4. '
' → logprob: -6.425397872924805
    5. '                   ' → logprob: -6.425397872924805
    6. '       ' → logprob: -6.925397872924805
    7. '           ' → logprob: -7.550397872924805
    8. '               ' → logprob: -7.925397872924805
    9. '```' → logprob: -8.675397872924805
    10. ')' → logprob: -10.175397872924805

Token 2146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05412617325782776
    2. 'def' → logprob: -3.554126262664795
    3. '```' → logprob: -4.804126262664795
    4. '       ' → logprob: -5.429126262664795
    5. '
' → logprob: -5.929126262664795
    6. '\' → logprob: -6.679126262664795
    7. ':' → logprob: -6.804126262664795
    8. '    
' → logprob: -7.179126262664795
    9. ',' → logprob: -7.304126262664795
    10. 'new' → logprob: -7.429126262664795

Token 2147: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07903982698917389
    2. 'def' → logprob: -2.9540398120880127
    3. '
' → logprob: -3.8290398120880127
    4. 'new' → logprob: -7.079040050506592
    5. '```' → logprob: -7.829040050506592
    6. '#' (adapté à ' #') → logprob: -8.204039573669434
    7. '    
' → logprob: -8.454039573669434
    8. '       ' → logprob: -9.204039573669434
    9. 'for' → logprob: -9.579039573669434
    10. '\' → logprob: -10.329039573669434

Token 2148: ' But' (ID: 3072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2696138322353363
    2. 'def' → logprob: -1.5196138620376587
    3. '
' → logprob: -4.269613742828369
    4. ' def' → logprob: -6.769613742828369
    5. '       ' → logprob: -7.394613742828369
    6. 'new' → logprob: -8.144614219665527
    7. ' for' → logprob: -8.144614219665527
    8. '    
' → logprob: -8.644614219665527
    9. 'for' → logprob: -8.644614219665527
    10. '```' → logprob: -9.019614219665527

Token 2149: ' we' (ID: 581)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6087431907653809
    2. '#' → logprob: -1.3587431907653809
    3. 'not' → logprob: -2.858743190765381
    4. 'king' → logprob: -3.108743190765381
    5. '(' → logprob: -3.983743190765381
    6. 'open' → logprob: -4.358743190765381
    7. ' not' → logprob: -4.483743190765381
    8. ' king' → logprob: -4.608743190765381
    9. 'the' → logprob: -4.733743190765381
    10. 'new' → logprob: -4.983743190765381

Token 2150: ' know' (ID: 1761)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.8342652916908264
    2. ' need' → logprob: -1.5842652320861816
    3. 'continue' → logprob: -2.0842652320861816
    4. '   ' → logprob: -2.9592652320861816
    5. '#' → logprob: -3.0842652320861816
    6. ' continue' → logprob: -3.3342652320861816
    7. 'should' → logprob: -4.334265232086182
    8. 'cannot' → logprob: -4.334265232086182
    9. 'must' → logprob: -4.334265232086182
    10. 'have' → logprob: -4.959265232086182

Token 2151: ' open' (ID: 2494)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7775567173957825
    2. '(' → logprob: -1.9025566577911377
    3. ' that' → logprob: -2.5275566577911377
    4. ' new' → logprob: -2.7775566577911377
    5. '   ' → logprob: -2.9025566577911377
    6. ' king' → logprob: -2.9025566577911377
    7. ' the' → logprob: -4.152556896209717
    8. 'new' → logprob: -4.152556896209717
    9. '(r' → logprob: -4.277556896209717
    10. ' ' → logprob: -4.277556896209717

Token 2152: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0006807420286349952
    2. 's' → logprob: -7.375680923461914
    3. '_cells' → logprob: -10.375680923461914
    4. '_spaces' → logprob: -12.125680923461914
    5. '_' → logprob: -12.500680923461914
    6. ' squares' → logprob: -12.750680923461914
    7. '```' → logprob: -13.000680923461914
    8. '_positions' → logprob: -13.125680923461914
    9. '\' → logprob: -14.000680923461914
    10. '
' → logprob: -14.250680923461914

Token 2153: 'quares' (ID: 110764)
  Prédit: 'quares'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quares' → logprob: -0.05287514999508858
    2. 'et' → logprob: -3.92787504196167
    3. '_' → logprob: -4.05287504196167
    4. '_s' → logprob: -4.80287504196167
    5. '_set' → logprob: -6.17787504196167
    6. 'ets' → logprob: -6.17787504196167
    7. 'q' → logprob: -7.80287504196167
    8. '_q' → logprob: -8.302875518798828
    9. 's' → logprob: -8.677875518798828
    10. '_sets' → logprob: -8.802875518798828

Token 2154: ' are' (ID: 553)
  Prédit: 'after'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'after' → logprob: -0.5644962787628174
    2. '_after' → logprob: -1.4394962787628174
    3. ' =' → logprob: -2.5644962787628174
    4. ' after' → logprob: -2.6894962787628174
    5. '_set' → logprob: -4.439496040344238
    6. '_' → logprob: -4.814496040344238
    7. '=' → logprob: -5.314496040344238
    8. '_are' → logprob: -5.439496040344238
    9. 'are' → logprob: -5.814496040344238
    10. ' are' → logprob: -5.814496040344238

Token 2155: ' always' (ID: 3324)
  Prédit: 'always'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'always' → logprob: -0.1485029011964798
    2. 'two' → logprob: -2.898502826690674
    3. ' always' → logprob: -3.273502826690674
    4. 'only' → logprob: -3.773502826690674
    5. 'exact' → logprob: -4.648502826690674
    6. '{' → logprob: -6.398502826690674
    7. 'currently' → logprob: -6.523502826690674
    8. 'a' → logprob: -6.523502826690674
    9. ' two' → logprob: -6.773502826690674
    10. ' only' → logprob: -7.023502826690674

Token 2156: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.6084297299385071
    2. 'exact' → logprob: -1.2334296703338623
    3. '2' → logprob: -2.8584296703338623
    4. ' exactly' → logprob: -2.9834296703338623
    5. 'only' → logprob: -4.108429908752441
    6. ' two' → logprob: -5.108429908752441
    7. '{' → logprob: -5.233429908752441
    8. 'the' → logprob: -5.233429908752441
    9. 'a' → logprob: -5.358429908752441
    10. 'length' → logprob: -5.858429908752441

Token 2157: ' cells' (ID: 11242)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.202555537223816
    2. 's' → logprob: -2.3275556564331055
    3. '#' → logprob: -2.4525556564331055
    4. '_s' → logprob: -2.4525556564331055
    5. '   ' → logprob: -2.7025556564331055
    6. ',' → logprob: -2.7025556564331055
    7. '```' → logprob: -3.2025556564331055
    8. ' ' → logprob: -3.3275556564331055
    9. ' squares' → logprob: -3.7025556564331055
    10. ')
' → logprob: -3.9525556564331055

Token 2158: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13070152699947357
    2. 'def' → logprob: -2.3807015419006348
    3. '
' → logprob: -4.130701541900635
    4. ':' → logprob: -5.380701541900635
    5. ':
' → logprob: -5.880701541900635
    6. '```' → logprob: -6.880701541900635
    7. '    
' → logprob: -6.880701541900635
    8. ')' → logprob: -7.505701541900635
    9. '(
' → logprob: -7.755701541900635
    10. '#' → logprob: -8.005701065063477

Token 2159: ' so' (ID: 813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4116496443748474
    2. '#' → logprob: -1.1616497039794922
    3. ' so' → logprob: -4.911649703979492
    4. ' and' → logprob: -5.911649703979492
    5. 'and' → logprob: -6.036649703979492
    6. 'so' → logprob: -6.536649703979492
    7. '                   ' → logprob: -7.036649703979492
    8. 'not' → logprob: -7.036649703979492
    9. ' but' → logprob: -7.161649703979492
    10. '           ' → logprob: -7.286649703979492

Token 2160: ' old' (ID: 2890)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5251706838607788
    2. 'old' → logprob: -1.4001706838607788
    3. 'new' → logprob: -3.7751708030700684
    4. '#' → logprob: -3.9001708030700684
    5. '           ' → logprob: -3.9001708030700684
    6. '       ' → logprob: -4.025170803070068
    7. 'def' → logprob: -4.150170803070068
    8. ' old' → logprob: -4.275170803070068
    9. ' for' → logprob: -4.650170803070068
    10. 'open' → logprob: -5.025170803070068

Token 2161: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00012701898231171072
    2. '```' → logprob: -10.250126838684082
    3. '_cells' → logprob: -10.500126838684082
    4. '_s' → logprob: -10.750126838684082
    5. 'king' → logprob: -11.500126838684082
    6. '   ' → logprob: -11.500126838684082
    7. ' _' → logprob: -12.500126838684082
    8. ''_' → logprob: -12.500126838684082
    9. '``' → logprob: -13.125126838684082
    10. '`' → logprob: -13.250126838684082

Token 2162: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.013276818208396435
    2. '_' → logprob: -4.638277053833008
    3. ' king' → logprob: -6.763277053833008
    4. '_cells' → logprob: -6.763277053833008
    5. '_s' → logprob: -7.013277053833008
    6. 's' → logprob: -9.263277053833008
    7. 'cells' → logprob: -9.263277053833008
    8. 'open' → logprob: -9.763277053833008
    9. '```' → logprob: -10.513277053833008
    10. '#' → logprob: -12.638277053833008

Token 2163: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.0022467232774943113
    2. 'cells' → logprob: -6.252246856689453
    3. '   ' → logprob: -9.627246856689453
    4. '```' → logprob: -10.252246856689453
    5. '_' → logprob: -10.377246856689453
    6. '_s' → logprob: -10.877246856689453
    7. ')' → logprob: -11.002246856689453
    8. ')_' → logprob: -11.127246856689453
    9. '
' → logprob: -11.127246856689453
    10. '_cell' → logprob: -11.252246856689453

Token 2164: ' -' (ID: 533)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.206569790840149
    2. ' -' → logprob: -1.456569790840149
    3. '-' → logprob: -1.706569790840149
    4. '   ' → logprob: -2.8315696716308594
    5. '=' → logprob: -3.2065696716308594
    6. ')' → logprob: -3.9565696716308594
    7. '_set' → logprob: -4.081569671630859
    8. '_' → logprob: -4.206569671630859
    9. 'are' → logprob: -4.331569671630859
    10. ' are' → logprob: -4.581569671630859

Token 2165: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.015033903531730175
    2. 'expected' → logprob: -4.890033721923828
    3. '{' → logprob: -5.015033721923828
    4. ' new' → logprob: -7.765033721923828
    5. 'set' → logprob: -8.890033721923828
    6. ' {(' → logprob: -9.515033721923828
    7. '(new' → logprob: -10.515033721923828
    8. 'open' → logprob: -11.015033721923828
    9. '(' → logprob: -11.140033721923828
    10. ' expected' → logprob: -11.265033721923828

Token 2166: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009382146410644054
    2. 'king' → logprob: -4.759382247924805
    3. '{' → logprob: -7.509382247924805
    4. ' king' → logprob: -10.134382247924805
    5. '_cells' → logprob: -10.509382247924805
    6. '```' → logprob: -10.759382247924805
    7. '((' → logprob: -11.009382247924805
    8. '(' → logprob: -11.134382247924805
    9. 'expected' → logprob: -11.134382247924805
    10. '_k' → logprob: -11.759382247924805

Token 2167: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.0007885443628765643
    2. '_' → logprob: -7.625788688659668
    3. '{' → logprob: -8.625788688659668
    4. ' king' → logprob: -9.750788688659668
    5. 'cells' → logprob: -10.750788688659668
    6. '_cells' → logprob: -11.375788688659668
    7. '```' → logprob: -11.750788688659668
    8. 'expected' → logprob: -12.375788688659668
    9. '((' → logprob: -13.375788688659668
    10. '{
' → logprob: -13.375788688659668

Token 2168: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.0005725711234845221
    2. 'cells' → logprob: -7.625572681427002
    3. ')' → logprob: -10.500572204589844
    4. '{' → logprob: -11.750572204589844
    5. 'Cells' → logprob: -11.875572204589844
    6. '#' → logprob: -12.125572204589844
    7. '```' → logprob: -12.250572204589844
    8. '   ' → logprob: -12.500572204589844
    9. '_' → logprob: -12.500572204589844
    10. '_positions' → logprob: -12.625572204589844

Token 2169: ' should' (ID: 1757)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22902847826480865
    2. ' =' → logprob: -2.8540284633636475
    3. ':' → logprob: -2.9790284633636475
    4. ')' → logprob: -4.354028701782227
    5. '       ' → logprob: -4.354028701782227
    6. '[' → logprob: -4.479028701782227
    7. ':
' → logprob: -4.729028701782227
    8. 'def' → logprob: -5.104028701782227
    9. '=' → logprob: -5.229028701782227
    10. '):' → logprob: -5.479028701782227

Token 2170: ' produce' (ID: 10635)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.5281793475151062
    2. ' be' → logprob: -1.028179407119751
    3. '=' → logprob: -3.778179407119751
    4. 'have' → logprob: -5.403179168701172
    5. 'always' → logprob: -5.653179168701172
    6. ' =' → logprob: -5.778179168701172
    7. '==' → logprob: -5.903179168701172
    8. 'len' → logprob: -6.028179168701172
    9. 'continue' → logprob: -6.528179168701172
    10. '#' → logprob: -6.653179168701172

Token 2171: ' two' (ID: 1920)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.05825599282979965
    2. 'set' → logprob: -3.683255910873413
    3. 'two' → logprob: -4.183256149291992
    4. '2' → logprob: -5.058256149291992
    5. ' {(' → logprob: -5.558256149291992
    6. 'the' → logprob: -5.808256149291992
    7. 'open' → logprob: -7.183256149291992
    8. 'a' → logprob: -7.433256149291992
    9. '{}' → logprob: -7.808256149291992
    10. '4' → logprob: -8.683256149291992

Token 2172: ' vac' (ID: 7757)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5852264761924744
    2. '_cells' → logprob: -2.585226535797119
    3. '#' → logprob: -3.210226535797119
    4. '}' → logprob: -3.460226535797119
    5. 'tokens' → logprob: -3.835226535797119
    6. '.' → logprob: -3.835226535797119
    7. 's' → logprob: -3.960226535797119
    8. ':' → logprob: -3.960226535797119
    9. ',' → logprob: -3.960226535797119
    10. '_' → logprob: -3.960226535797119

Token 2173: 'ated' (ID: 780)
  Prédit: 'ated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -0.00045736716128885746
    2. '{' → logprob: -7.875457286834717
    3. 'ac' → logprob: -10.125457763671875
    4. '({' → logprob: -12.125457763671875
    5. 'uated' → logprob: -12.250457763671875
    6. 'anted' → logprob: -12.750457763671875
    7. '{}' → logprob: -12.875457763671875
    8. 'ant' → logprob: -13.125457763671875
    9. 'set' → logprob: -13.250457763671875
    10. 'anc' → logprob: -13.250457763671875

Token 2174: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.9258087277412415
    2. ')' → logprob: -1.5508086681365967
    3. '_cells' → logprob: -1.8008086681365967
    4. '_' → logprob: -2.4258086681365967
    5. 's' → logprob: -3.6758086681365967
    6. 'king' → logprob: -3.9258086681365967
    7. '}' → logprob: -4.300808906555176
    8. '   ' → logprob: -4.675808906555176
    9. ' cells' → logprob: -4.675808906555176
    10. '(' → logprob: -5.300808906555176

Token 2175: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09365696460008621
    2. ':' → logprob: -4.09365701675415
    3. 'def' → logprob: -4.09365701675415
    4. ':
' → logprob: -4.46865701675415
    5. '
' → logprob: -4.84365701675415
    6. '\n' → logprob: -4.96865701675415
    7. '\' → logprob: -5.71865701675415
    8. '    
' → logprob: -5.71865701675415
    9. '(
' → logprob: -6.09365701675415
    10. '       ' → logprob: -6.21865701675415

Token 2176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032107703387737274
    2. 'def' → logprob: -4.782107830047607
    3. ':' → logprob: -4.907107830047607
    4. ':
' → logprob: -5.282107830047607
    5. '
' → logprob: -6.032107830047607
    6. '    
' → logprob: -6.157107830047607
    7. '\' → logprob: -7.032107830047607
    8. '```' → logprob: -7.032107830047607
    9. ',' → logprob: -7.157107830047607
    10. '(
' → logprob: -7.282107830047607

Token 2177: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057545099407434464
    2. 'def' → logprob: -3.3075451850891113
    3. 'new' → logprob: -4.557545185089111
    4. '#' (adapté à ' #') → logprob: -5.807545185089111
    5. '
' → logprob: -5.807545185089111
    6. 'for' → logprob: -6.932545185089111
    7. '```' → logprob: -8.182544708251953
    8. 'next' → logprob: -8.307544708251953
    9. '       ' → logprob: -8.682544708251953
    10. 'open' → logprob: -8.807544708251953

Token 2178: ' Implement' (ID: 32889)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019902046769857407
    2. 'def' → logprob: -4.894902229309082
    3. 'new' → logprob: -5.894902229309082
    4. '#' → logprob: -6.144902229309082
    5. '
' → logprob: -6.269902229309082
    6. ' new' → logprob: -6.644902229309082
    7. 'old' → logprob: -7.269902229309082
    8. '       ' → logprob: -7.894902229309082
    9. ' old' → logprob: -8.144902229309082
    10. ' (' → logprob: -8.394902229309082

Token 2179: 'ing' (ID: 289)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2827693223953247
    2. 'def' → logprob: -1.5327693223953247
    3. '
' → logprob: -3.782769203186035
    4. '```' → logprob: -5.407769203186035
    5. '``' → logprob: -7.032769203186035
    6. 'old' → logprob: -7.532769203186035
    7. ' def' → logprob: -7.782769203186035
    8. 'open' → logprob: -8.407769203186035
    9. '    
' → logprob: -8.657769203186035
    10. '       ' → logprob: -8.782769203186035

Token 2180: ' this' (ID: 495)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6855637431144714
    2. 'def' → logprob: -0.8105637431144714
    3. '
' → logprob: -4.060563564300537
    4. 'new' → logprob: -4.560563564300537
    5. 'for' → logprob: -4.685563564300537
    6. '```' → logprob: -5.185563564300537
    7. '#' → logprob: -6.185563564300537
    8. 'open' → logprob: -6.435563564300537
    9. '``' → logprob: -7.060563564300537
    10. ' for' → logprob: -7.310563564300537

Token 2181: ':

' (ID: 1402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18780219554901123
    2. 'def' → logprob: -2.062802314758301
    3. '
' → logprob: -3.187802314758301
    4. '    
' → logprob: -7.437802314758301
    5. 'old' → logprob: -8.0628023147583
    6. '```' → logprob: -8.0628023147583
    7. '
' → logprob: -8.1878023147583
    8. ':' → logprob: -8.3128023147583
    9. '#' → logprob: -8.4378023147583
    10. 'new' → logprob: -8.6878023147583

Token 2182: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26111340522766113
    2. '   ' → logprob: -1.5111134052276611
    3. '
' → logprob: -5.761113166809082
    4. 'old' → logprob: -5.886113166809082
    5. 'new' → logprob: -6.761113166809082
    6. ' def' → logprob: -7.136113166809082
    7. '```' → logprob: -7.636113166809082
    8. '#' → logprob: -8.261113166809082
    9. 'for' → logprob: -8.886113166809082
    10. 'open' → logprob: -9.761113166809082

Token 2183: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4595157206058502
    2. 'for' → logprob: -1.8345156908035278
    3. '   ' → logprob: -2.0845158100128174
    4. 'new' → logprob: -2.9595158100128174
    5. '#' → logprob: -4.459515571594238
    6. 'next' → logprob: -5.209515571594238
    7. 'moves' → logprob: -5.459515571594238
    8. 'king' → logprob: -5.834515571594238
    9. 'states' → logprob: -5.959515571594238
    10. 'state' → logprob: -6.584515571594238

Token 2184: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.03383391350507736
    2. 'generate' → logprob: -3.7838339805603027
    3. 'update' → logprob: -5.658833980560303
    4. 'possible' → logprob: -5.783833980560303
    5. 'apply' → logprob: -6.533833980560303
    6. 'get' → logprob: -6.908833980560303
    7. 'next' → logprob: -7.283833980560303
    8. 'make' → logprob: -8.533833503723145
    9. 'try' → logprob: -8.783833503723145
    10. 'move' → logprob: -8.908833503723145

Token 2185: '_slide' (ID: 149819)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.003653645282611251
    2. '_move' → logprob: -5.628653526306152
    3. ' _' → logprob: -11.128653526306152
    4. '_mov' → logprob: -11.753653526306152
    5. '_' → logprob: -12.128653526306152
    6. 'moves' → logprob: -12.503653526306152
    7. '_f' → logprob: -12.753653526306152
    8. ''_' → logprob: -13.003653526306152
    9. '_steps' → logprob: -13.128653526306152
    10. '```' → logprob: -13.253653526306152

Token 2186: '_moves' (ID: 110706)
  Prédit: '_move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -0.9435349702835083
    2. '(r' → logprob: -1.1935349702835083
    3. '_moves' → logprob: -1.1935349702835083
    4. '(' → logprob: -6.068534851074219
    5. '_' → logprob: -7.068534851074219
    6. 'moves' → logprob: -7.193534851074219
    7. 'move' → logprob: -8.693534851074219
    8. 'def' → logprob: -8.943534851074219
    9. '(_' → logprob: -9.693534851074219
    10. '_positions' → logprob: -10.193534851074219

Token 2187: '(' (ID: 7)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.06997156143188477
    2. '(' → logprob: -2.6949715614318848
    3. '(
' → logprob: -11.694971084594727
    4. '(k' → logprob: -12.069971084594727
    5. ' (' → logprob: -12.194971084594727
    6. '((' → logprob: -12.694971084594727
    7. '   ' → logprob: -13.569971084594727
    8. ':' → logprob: -13.819971084594727
    9. '(self' → logprob: -13.819971084594727
    10. '_' → logprob: -14.069971084594727

Token 2188: 'king' (ID: 6962)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00020520923135336488
    2. ')' → logprob: -9.250205039978027
    3. ' r' → logprob: -9.875205039978027
    4. 'kr' → logprob: -10.750205039978027
    5. '   ' → logprob: -11.250205039978027
    6. '):' → logprob: -12.250205039978027
    7. '
' → logprob: -12.500205039978027
    8. '):
' → logprob: -12.500205039978027
    9. 'king' → logprob: -12.750205039978027
    10. '(r' → logprob: -13.125205039978027

Token 2189: '_r' (ID: 3442)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.14984536170959473
    2. '_r' → logprob: -2.5248453617095947
    3. '_f' → logprob: -3.5248453617095947
    4. '_slide' → logprob: -4.024845123291016
    5. 'r' → logprob: -6.024845123291016
    6. 'moves' → logprob: -6.274845123291016
    7. '_sl' → logprob: -6.649845123291016
    8. '_positions' → logprob: -6.649845123291016
    9. '_' → logprob: -7.274845123291016
    10. '(r' → logprob: -7.399845123291016

Token 2190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007213685312308371
    2. ',k' → logprob: -8.125720977783203
    3. ' ,' → logprob: -8.375720977783203
    4. ',
' → logprob: -9.125720977783203
    5. ',int' → logprob: -10.875720977783203
    6. '   ' → logprob: -11.000720977783203
    7. ',p' → logprob: -11.625720977783203
    8. 'def' → logprob: -12.750720977783203
    9. ',user' → logprob: -12.875720977783203
    10. '):
' → logprob: -12.875720977783203

Token 2191: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.0011727249948307872
    2. ' king' → logprob: -6.7511725425720215
    3. '   ' → logprob: -13.75117301940918
    4. '```' → logprob: -14.62617301940918
    5. 'kc' → logprob: -15.50117301940918
    6. '
' → logprob: -15.50117301940918
    7. '    ' → logprob: -16.50117301940918
    8. '       ' → logprob: -16.50117301940918
    9. '     ' → logprob: -16.62617301940918
    10. ' ' → logprob: -16.62617301940918

Token 2192: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0032629151828587055
    2. 'c' → logprob: -5.753262996673584
    3. '_r' → logprob: -10.128262519836426
    4. '+' → logprob: -10.753262519836426
    5. '   ' → logprob: -11.628262519836426
    6. '```' → logprob: -12.128262519836426
    7. ',c' → logprob: -13.128262519836426
    8. 'r' → logprob: -13.253262519836426
    9. ',' → logprob: -14.128262519836426
    10. 'import' → logprob: -14.253262519836426

Token 2193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010095883626490831
    2. '   ' → logprob: -7.501009464263916
    3. ',new' → logprob: -8.376009941101074
    4. ' ,' → logprob: -9.751009941101074
    5. '):
' → logprob: -10.251009941101074
    6. '):' → logprob: -10.376009941101074
    7. ',next' → logprob: -10.501009941101074
    8. '       ' → logprob: -10.751009941101074
    9. ',p' → logprob: -11.126009941101074
    10. 'def' → logprob: -12.376009941101074

Token 2194: ' paw' (ID: 71961)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.006202161777764559
    2. ' paw' → logprob: -5.506202220916748
    3. 'paw' → logprob: -6.881202220916748
    4. 'pawn' → logprob: -7.881202220916748
    5. '   ' → logprob: -8.50620174407959
    6. 'king' → logprob: -8.75620174407959
    7. 'open' → logprob: -9.00620174407959
    8. ')' → logprob: -9.75620174407959
    9. 'k' → logprob: -10.63120174407959
    10. ' ' → logprob: -10.75620174407959

Token 2195: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.3852521777153015
    2. 'ons' → logprob: -1.2602522373199463
    3. 'ans' → logprob: -4.135251998901367
    4. 'n' → logprob: -4.260251998901367
    5. 'r' → logprob: -5.635251998901367
    6. '_r' → logprob: -6.635251998901367
    7. 'nts' → logprob: -7.760251998901367
    8. 'ins' → logprob: -8.885251998901367
    9. 'uns' → logprob: -9.010251998901367
    10. 's' → logprob: -9.010251998901367

Token 2196: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.00023357603640761226
    2. '_sets' → logprob: -8.62523365020752
    3. '_s' → logprob: -11.00023365020752
    4. '_tokens' → logprob: -11.37523365020752
    5. '_f' → logprob: -11.62523365020752
    6. ',' → logprob: -12.62523365020752
    7. '_positions' → logprob: -13.00023365020752
    8. 's' → logprob: -13.00023365020752
    9. 'set' → logprob: -13.25023365020752
    10. '_moves' → logprob: -13.62523365020752

Token 2197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008996733813546598
    2. '   ' → logprob: -8.000899314880371
    3. ' ,' → logprob: -8.000899314880371
    4. ',p' → logprob: -10.000899314880371
    5. ',next' → logprob: -10.000899314880371
    6. ',n' → logprob: -10.500899314880371
    7. ',k' → logprob: -10.500899314880371
    8. ',new' → logprob: -11.000899314880371
    9. ',r' → logprob: -11.625899314880371
    10. ',
' → logprob: -11.750899314880371

Token 2198: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.004688464570790529
    2. ' open' → logprob: -5.629688262939453
    3. 'king' → logprob: -8.004688262939453
    4. 'dire' → logprob: -8.504688262939453
    5. ')' → logprob: -8.629688262939453
    6. '   ' → logprob: -9.379688262939453
    7. 'ob' → logprob: -9.879688262939453
    8. ' king' → logprob: -9.879688262939453
    9. '
' → logprob: -10.129688262939453
    10. ' directions' → logprob: -10.379688262939453

Token 2199: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00017648482753429562
    2. '_r' → logprob: -10.125176429748535
    3. '_spaces' → logprob: -10.500176429748535
    4. 'r' → logprob: -10.625176429748535
    5. 's' → logprob: -10.750176429748535
    6. ')' → logprob: -10.875176429748535
    7. '```' → logprob: -11.375176429748535
    8. '_sl' → logprob: -11.750176429748535
    9. 'Squares' → logprob: -12.375176429748535
    10. ')_' → logprob: -12.500176429748535

Token 2200: 'quares' (ID: 110764)
  Prédit: 'quares'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quares' → logprob: -0.0003577495808713138
    2. 'et' → logprob: -9.000357627868652
    3. 'q' → logprob: -9.125357627868652
    4. 'ets' → logprob: -10.250357627868652
    5. 'qu' → logprob: -10.500357627868652
    6. '_set' → logprob: -11.000357627868652
    7. '_' → logprob: -11.625357627868652
    8. '```' → logprob: -11.750357627868652
    9. 'ques' → logprob: -12.250357627868652
    10. '``' → logprob: -12.875357627868652

Token 2201: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -5.0020742492051795e-05
    2. 'set' → logprob: -10.625049591064453
    3. ')_' → logprob: -11.625049591064453
    4. ',' → logprob: -12.250049591064453
    5. '):
' → logprob: -13.375049591064453
    6. '   ' → logprob: -13.500049591064453
    7. ')' → logprob: -13.625049591064453
    8. 'def' → logprob: -13.625049591064453
    9. ')set' → logprob: -13.875049591064453
    10. '_sets' → logprob: -14.000049591064453

Token 2202: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20219458639621735
    2. '):' → logprob: -1.7021945714950562
    3. '   ' → logprob: -7.702194690704346
    4. '):
' → logprob: -8.077194213867188
    5. '):

' → logprob: -11.452194213867188
    6. '(r' → logprob: -13.327194213867188
    7. ')' → logprob: -13.452194213867188
    8. ',' → logprob: -13.702194213867188
    9. ' ):
' → logprob: -13.827194213867188
    10. ' ):' → logprob: -14.202194213867188

Token 2203: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31376519799232483
    2. '   ' → logprob: -1.3137651681900024
    3. '```' → logprob: -8.688765525817871
    4. ' res' → logprob: -9.063765525817871
    5. '[' → logprob: -10.063765525817871
    6. 'tokens' → logprob: -10.188765525817871
    7. 'res' → logprob: -10.438765525817871
    8. '    ' → logprob: -10.563765525817871
    9. '     ' → logprob: -10.938765525817871
    10. '    
' → logprob: -11.188765525817871

Token 2204: ' results' (ID: 4376)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6813267469406128
    2. '       ' → logprob: -0.9313267469406128
    3. ' res' → logprob: -2.9313268661499023
    4. '   ' → logprob: -4.056326866149902
    5. 'moves' → logprob: -4.306326866149902
    6. 'result' → logprob: -4.931326866149902
    7. '```' → logprob: -5.556326866149902
    8. 'tokens' → logprob: -6.181326866149902
    9. 'yield' → logprob: -7.181326866149902
    10. '           ' → logprob: -7.681326866149902

Token 2205: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07059749215841293
    2. ' =' → logprob: -2.6955974102020264
    3. '=[]' → logprob: -8.195597648620605
    4. '.append' → logprob: -8.820597648620605
    5. '.' → logprob: -9.195597648620605
    6. '.extend' → logprob: -10.445597648620605
    7. ')' → logprob: -10.570597648620605
    8. '.=' → logprob: -11.320597648620605
    9. '=[]
' → logprob: -11.445597648620605
    10. '+=' → logprob: -11.570597648620605

Token 2206: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.021402820944786072
    2. '[]
' → logprob: -4.021402835845947
    3. ' []' → logprob: -5.771402835845947
    4. ' []
' → logprob: -9.021402359008789
    5. '   ' → logprob: -12.021402359008789
    6. '       ' → logprob: -12.521402359008789
    7. '[],' → logprob: -14.771402359008789
    8. '[' → logprob: -15.021402359008789
    9. '[])' → logprob: -15.646402359008789
    10. 'deque' → logprob: -15.646402359008789

Token 2207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05344056338071823
    2. 'for' → logprob: -3.428440570831299
    3. '   ' → logprob: -4.428440570831299
    4. ' for' → logprob: -4.928440570831299
    5. '
' → logprob: -8.67844009399414
    6. '```' → logprob: -9.30344009399414
    7. '	for' → logprob: -9.55344009399414
    8. '	   ' → logprob: -11.17844009399414
    9. 'moves' → logprob: -11.17844009399414
    10. '           ' → logprob: -11.17844009399414

Token 2208: ' old' (ID: 2890)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02048875018954277
    2. 'moves' → logprob: -4.270488739013672
    3. '       ' → logprob: -5.270488739013672
    4. 'next' → logprob: -7.770488739013672
    5. 'm' → logprob: -8.145488739013672
    6. 'new' → logprob: -8.645488739013672
    7. '   ' → logprob: -9.270488739013672
    8. ' for' → logprob: -9.395488739013672
    9. 'possible' → logprob: -10.020488739013672
    10. 'dire' → logprob: -11.770488739013672

Token 2209: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03390847146511078
    2. '_r' → logprob: -3.4089083671569824
    3. '_cells' → logprob: -9.03390884399414
    4. '_positions' → logprob: -9.65890884399414
    5. 'r' → logprob: -11.03390884399414
    6. '_k' → logprob: -11.40890884399414
    7. '```' → logprob: -11.65890884399414
    8. 'king' → logprob: -12.53390884399414
    9. '_cell' → logprob: -12.78390884399414
    10. '_moves' → logprob: -12.78390884399414

Token 2210: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.00032473751343786716
    2. 'cells' → logprob: -8.250325202941895
    3. '_cells' → logprob: -10.625325202941895
    4. ' king' → logprob: -10.625325202941895
    5. 'r' → logprob: -11.750325202941895
    6. '_' → logprob: -13.250325202941895
    7. 'queen' → logprob: -13.750325202941895
    8. 'kr' → logprob: -14.625325202941895
    9. 'kind' → logprob: -14.750325202941895
    10. '(r' → logprob: -14.875325202941895

Token 2211: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.00013333676906768233
    2. '_r' → logprob: -9.875133514404297
    3. 'cells' → logprob: -10.125133514404297
    4. '_positions' → logprob: -10.500133514404297
    5. 'r' → logprob: -12.250133514404297
    6. '```' → logprob: -13.250133514404297
    7. '_cell' → logprob: -14.000133514404297
    8. '   ' → logprob: -14.000133514404297
    9. '_moves' → logprob: -14.000133514404297
    10. '
' → logprob: -14.250133514404297

Token 2212: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002476016292348504
    2. ' =' → logprob: -6.002476215362549
    3. '={(' → logprob: -15.25247573852539
    4. '=
' → logprob: -16.25247573852539
    5. '=set' → logprob: -17.50247573852539
    6. '   ' → logprob: -19.00247573852539
    7. ' ' → logprob: -19.12747573852539
    8. '{' → logprob: -19.25247573852539
    9. '```' → logprob: -19.62747573852539
    10. 'set' → logprob: -19.75247573852539

Token 2213: ' {(' (ID: 75216)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.00041494169272482395
    2. ' {(' → logprob: -7.875414848327637
    3. '{
' → logprob: -10.625414848327637
    4. '   ' → logprob: -11.750414848327637
    5. '{{' → logprob: -13.375414848327637
    6. 'set' → logprob: -15.000414848327637
    7. '{\' → logprob: -16.000415802001953
    8. ' ' → logprob: -16.125415802001953
    9. '{s' → logprob: -16.125415802001953
    10. '{'' → logprob: -16.250415802001953

Token 2214: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -2.856408536899835e-05
    2. ' king' → logprob: -10.500028610229492
    3. '   ' → logprob: -14.500028610229492
    4. '(' → logprob: -15.875028610229492
    5. 'queen' → logprob: -16.375028610229492
    6. '  ' → logprob: -16.875028610229492
    7. 'kr' → logprob: -16.875028610229492
    8. ' ' → logprob: -18.375028610229492
    9. '```' → logprob: -18.500028610229492
    10. '       ' → logprob: -18.625028610229492

Token 2215: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -4.4849443838757e-06
    2. 'r' → logprob: -12.375004768371582
    3. 'king' → logprob: -16.625003814697266
    4. '
' → logprob: -17.750003814697266
    5. '_k' → logprob: -17.875003814697266
    6. '\' → logprob: -18.125003814697266
    7. '_' → logprob: -18.375003814697266
    8. '   ' → logprob: -18.875003814697266
    9. 'def' → logprob: -20.000003814697266
    10. '```' → logprob: -20.125003814697266

Token 2216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026526954025030136
    2. ' ,' → logprob: -8.375265121459961
    3. '   ' → logprob: -11.250265121459961
    4. ' ' → logprob: -11.500265121459961
    5. ',
' → logprob: -12.125265121459961
    6. '  ' → logprob: -13.000265121459961
    7. '	' → logprob: -14.125265121459961
    8. '       ' → logprob: -14.625265121459961
    9. '```' → logprob: -14.625265121459961
    10. '    ' → logprob: -14.750265121459961

Token 2217: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.00011093381908722222
    2. ' king' → logprob: -9.125110626220703
    3. '  ' → logprob: -14.250110626220703
    4. '   ' → logprob: -14.250110626220703
    5. ' ' → logprob: -15.875110626220703
    6. 'kc' → logprob: -16.125110626220703
    7. '    ' → logprob: -16.125110626220703
    8. '     ' → logprob: -16.250110626220703
    9. 'queen' → logprob: -16.750110626220703
    10. '.king' → logprob: -16.750110626220703

Token 2218: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.012681283056735992
    2. 'c' → logprob: -4.637681484222412
    3. 'king' → logprob: -6.137681484222412
    4. ',' → logprob: -7.762681484222412
    5. ',c' → logprob: -8.512681007385254
    6. ' king' → logprob: -9.387681007385254
    7. 'kc' → logprob: -11.012681007385254
    8. '   ' → logprob: -12.012681007385254
    9. ' ' → logprob: -12.137681007385254
    10. '
' → logprob: -12.762681007385254

Token 2219: '),' (ID: 936)
  Prédit: '),('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.3214085102081299
    2. '),' → logprob: -1.3214085102081299
    3. '),
' → logprob: -4.821408271789551
    4. ' ),' → logprob: -10.94640827178955
    5. '   ' → logprob: -11.82140827178955
    6. '+' → logprob: -11.82140827178955
    7. ')}' → logprob: -12.44640827178955
    8. '},{' → logprob: -12.82140827178955
    9. ')' → logprob: -12.94640827178955
    10. '       ' → logprob: -12.94640827178955

Token 2220: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005756704485975206
    2. ' (' → logprob: -7.500575542449951
    3. '{' → logprob: -11.00057601928711
    4. '   ' → logprob: -13.37557601928711
    5. '          ' → logprob: -13.75057601928711
    6. '       ' → logprob: -14.50057601928711
    7. '  ' → logprob: -14.50057601928711
    8. '        ' → logprob: -15.00057601928711
    9. '      ' → logprob: -15.12557601928711
    10. '           ' → logprob: -15.12557601928711

Token 2221: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -3.173704271830502e-06
    2. ' king' → logprob: -12.75000286102295
    3. '   ' → logprob: -15.75000286102295
    4. 'queen' → logprob: -17.375003814697266
    5. '  ' → logprob: -18.625003814697266
    6. ' ' → logprob: -18.625003814697266
    7. '.king' → logprob: -18.750003814697266
    8. 'ken' → logprob: -19.375003814697266
    9. '(' → logprob: -19.375003814697266
    10. '    ' → logprob: -20.125003814697266

Token 2222: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.0005607772618532181
    2. 'king' → logprob: -7.750560760498047
    3. 'r' → logprob: -9.125560760498047
    4. '_k' → logprob: -11.375560760498047
    5. '+' → logprob: -12.000560760498047
    6. ' king' → logprob: -13.250560760498047
    7. '_' → logprob: -15.250560760498047
    8. '   ' → logprob: -15.500560760498047
    9. '_s' → logprob: -15.500560760498047
    10. '\' → logprob: -15.625560760498047

Token 2223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013137049041688442
    2. ',k' → logprob: -4.763136863708496
    3. 'king' → logprob: -5.763136863708496
    4. ' ,' → logprob: -7.013136863708496
    5. '   ' → logprob: -8.513136863708496
    6. ' king' → logprob: -9.263136863708496
    7. ' ' → logprob: -9.638136863708496
    8. ',
' → logprob: -10.513136863708496
    9. '+' → logprob: -10.888136863708496
    10. '  ' → logprob: -11.013136863708496

Token 2224: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -3.583550642360933e-05
    2. ' king' → logprob: -10.250036239624023
    3. '  ' → logprob: -15.625036239624023
    4. '   ' → logprob: -16.250036239624023
    5. ' ' → logprob: -16.375036239624023
    6. 'queen' → logprob: -17.000036239624023
    7. 'kc' → logprob: -17.125036239624023
    8. '     ' → logprob: -17.875036239624023
    9. '    ' → logprob: -17.875036239624023
    10. '      ' → logprob: -18.375036239624023

Token 2225: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.003893184242770076
    2. '+' → logprob: -6.1288933753967285
    3. 'c' → logprob: -6.3788933753967285
    4. '   ' → logprob: -12.87889289855957
    5. ' ' → logprob: -13.87889289855957
    6. ' +' → logprob: -14.25389289855957
    7. '  ' → logprob: -14.37889289855957
    8. ',' → logprob: -14.50389289855957
    9. ')' → logprob: -14.75389289855957
    10. '(' → logprob: -14.75389289855957

Token 2226: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001487140398239717
    2. ' +' → logprob: -9.62514877319336
    3. '),' → logprob: -10.00014877319336
    4. '),(' → logprob: -11.00014877319336
    5. '1' → logprob: -11.37514877319336
    6. '+(' → logprob: -13.12514877319336
    7. '   ' → logprob: -13.50014877319336
    8. '-' → logprob: -13.75014877319336
    9. '+
' → logprob: -14.00014877319336
    10. '),
' → logprob: -14.00014877319336

Token 2227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. '0' → logprob: -13.50000286102295
    3. ' ' → logprob: -13.87500286102295
    4. '   ' → logprob: -15.12500286102295
    5. '
' → logprob: -16.000003814697266
    6. '```' → logprob: -16.500003814697266
    7. '2' → logprob: -17.500003814697266
    8. '`' → logprob: -18.500003814697266
    9. '``' → logprob: -18.562503814697266
    10. ')' → logprob: -18.687503814697266

Token 2228: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.008827757090330124
    2. '),(' → logprob: -4.7588276863098145
    3. '),
' → logprob: -8.758828163146973
    4. ',' → logprob: -10.758828163146973
    5. '},' → logprob: -10.883828163146973
    6. ' ),' → logprob: -12.133828163146973
    7. ')' → logprob: -12.258828163146973
    8. '},{' → logprob: -13.133828163146973
    9. '   ' → logprob: -14.383828163146973
    10. '{' → logprob: -14.383828163146973

Token 2229: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07152726501226425
    2. '{' → logprob: -2.6965272426605225
    3. ' (' → logprob: -6.571527481079102
    4. ' {(' → logprob: -9.446527481079102
    5. ' {' → logprob: -9.821527481079102
    6. 'king' → logprob: -10.946527481079102
    7. '   ' → logprob: -11.071527481079102
    8. ' king' → logprob: -12.071527481079102
    9. '{
' → logprob: -12.696527481079102
    10. '       ' → logprob: -12.821527481079102

Token 2230: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -9.9728669738397e-05
    2. ' king' → logprob: -9.250100135803223
    3. '   ' → logprob: -13.375100135803223
    4. '(' → logprob: -13.625100135803223
    5. 'queen' → logprob: -15.250100135803223
    6. '  ' → logprob: -16.000099182128906
    7. 'King' → logprob: -16.250099182128906
    8. ' ' → logprob: -16.625099182128906
    9. '.king' → logprob: -16.875099182128906
    10. '    ' → logprob: -17.125099182128906

Token 2231: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.001033999491482973
    2. '+' → logprob: -7.376033782958984
    3. 'r' → logprob: -8.001033782958984
    4. 'king' → logprob: -9.751033782958984
    5. '_' → logprob: -11.751033782958984
    6. '   ' → logprob: -13.251033782958984
    7. '(' → logprob: -14.001033782958984
    8. '+r' → logprob: -14.251033782958984
    9. '
' → logprob: -14.876033782958984
    10. ' king' → logprob: -15.001033782958984

Token 2232: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002540824469178915
    2. '+' → logprob: -6.377540588378906
    3. '   ' → logprob: -7.752540588378906
    4. ' ,' → logprob: -8.627540588378906
    5. ' ' → logprob: -9.127540588378906
    6. '  ' → logprob: -10.502540588378906
    7. '-' → logprob: -10.752540588378906
    8. ',
' → logprob: -10.877540588378906
    9. '     ' → logprob: -12.127540588378906
    10. '       ' → logprob: -12.127540588378906

Token 2233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4349258542060852
    2. '0' → logprob: -1.3099257946014404
    3. 'king' → logprob: -2.5599257946014404
    4. ' ' → logprob: -5.5599260330200195
    5. ' king' → logprob: -6.9349260330200195
    6. '   ' → logprob: -8.30992603302002
    7. '
' → logprob: -8.68492603302002
    8. 'old' → logprob: -9.18492603302002
    9. '  ' → logprob: -9.43492603302002
    10. '(' → logprob: -11.62242603302002

Token 2234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.978233846486546e-05
    2. 'king' → logprob: -11.375049591064453
    3. '<|end|>' → logprob: -11.625049591064453
    4. ',
' → logprob: -12.000049591064453
    5. ' ,' → logprob: -12.000049591064453
    6. '   ' → logprob: -12.250049591064453
    7. ',k' → logprob: -12.500049591064453
    8. ' king' → logprob: -12.750049591064453
    9. '```' → logprob: -13.750049591064453
    10. '
' → logprob: -14.000049591064453

Token 2235: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -9.627176768844947e-05
    2. ' king' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.25009536743164
    4. 'queen' → logprob: -17.50009536743164
    5. '```' → logprob: -18.62509536743164
    6. '  ' → logprob: -18.87509536743164
    7. ' ' → logprob: -19.00009536743164
    8. 'King' → logprob: -19.00009536743164
    9. '.king' → logprob: -19.62509536743164
    10. 'kg' → logprob: -19.62509536743164

Token 2236: '_c' (ID: 1303)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.29971370100975037
    2. '_c' → logprob: -1.4247137308120728
    3. 'king' → logprob: -4.049713611602783
    4. 'r' → logprob: -7.674713611602783
    5. '_r' → logprob: -8.424714088439941
    6. '   ' → logprob: -9.549714088439941
    7. ' ' → logprob: -10.299714088439941
    8. 'cell' → logprob: -10.299714088439941
    9. ' king' → logprob: -10.549714088439941
    10. 'C' → logprob: -10.924714088439941

Token 2237: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.007202766370028257
    2. '),(' → logprob: -5.132202625274658
    3. '),
' → logprob: -7.132202625274658
    4. '+' → logprob: -8.757203102111816
    5. ',' → logprob: -9.257203102111816
    6. ')' → logprob: -9.757203102111816
    7. '   ' → logprob: -9.757203102111816
    8. '-' → logprob: -10.632203102111816
    9. ')},' → logprob: -10.882203102111816
    10. '},' → logprob: -11.132203102111816

Token 2238: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14333125948905945
    2. ' (' → logprob: -2.018331289291382
    3. '{' → logprob: -7.893331050872803
    4. '       ' → logprob: -9.893331527709961
    5. 'king' → logprob: -10.018331527709961
    6. ' king' → logprob: -10.018331527709961
    7. '   ' → logprob: -10.268331527709961
    8. '           ' → logprob: -11.018331527709961
    9. ' {(' → logprob: -11.393331527709961
    10. '    ' → logprob: -11.393331527709961

Token 2239: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -1.2113979209971149e-05
    2. ' king' → logprob: -11.375012397766113
    3. '   ' → logprob: -15.000012397766113
    4. 'queen' → logprob: -16.250011444091797
    5. '(' → logprob: -17.500011444091797
    6. '.king' → logprob: -17.625011444091797
    7. '  ' → logprob: -18.000011444091797
    8. '    ' → logprob: -18.125011444091797
    9. '```' → logprob: -18.125011444091797
    10. ' ' → logprob: -18.125011444091797

Token 2240: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.039756838232278824
    2. 'king' → logprob: -3.2897567749023438
    3. '_' → logprob: -7.414756774902344
    4. '+' → logprob: -8.039756774902344
    5. ' king' → logprob: -8.539756774902344
    6. 'r' → logprob: -8.664756774902344
    7. '   ' → logprob: -8.789756774902344
    8. '<|end|>' → logprob: -8.914756774902344
    9. '_k' → logprob: -9.914756774902344
    10. '(' → logprob: -10.914756774902344

Token 2241: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0029495321214199066
    2. ',' → logprob: -5.8779497146606445
    3. ' +' → logprob: -9.252949714660645
    4. '   ' → logprob: -10.502949714660645
    5. '	' → logprob: -12.252949714660645
    6. ' ' → logprob: -13.127949714660645
    7. '```' → logprob: -13.127949714660645
    8. '+,' → logprob: -13.252949714660645
    9. ' ,' → logprob: -13.377949714660645
    10. '  ' → logprob: -13.502949714660645

Token 2242: '1' (ID: 16)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.39001837372779846
    2. '1' → logprob: -1.140018343925476
    3. ' king' → logprob: -6.515018463134766
    4. ' ' → logprob: -6.640018463134766
    5. '   ' → logprob: -9.140018463134766
    6. '(' → logprob: -10.015018463134766
    7. '  ' → logprob: -10.265018463134766
    8. 'old' → logprob: -10.515018463134766
    9. '```' → logprob: -10.640018463134766
    10. '
' → logprob: -10.890018463134766

Token 2243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.470901229884475e-05
    2. ' ,' → logprob: -10.25008487701416
    3. ',k' → logprob: -11.00008487701416
    4. 'king' → logprob: -11.50008487701416
    5. ',
' → logprob: -11.75008487701416
    6. '```' → logprob: -12.12508487701416
    7. '   ' → logprob: -12.87508487701416
    8. ' king' → logprob: -13.37508487701416
    9. '(' → logprob: -14.37508487701416
    10. '	' → logprob: -14.50008487701416

Token 2244: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.0005555360112339258
    2. ' king' → logprob: -7.500555515289307
    3. '  ' → logprob: -14.250555992126465
    4. '   ' → logprob: -14.500555992126465
    5. 'kc' → logprob: -14.500555992126465
    6. ' ' → logprob: -15.125555992126465
    7. '     ' → logprob: -16.00055503845215
    8. 'queen' → logprob: -16.25055503845215
    9. '      ' → logprob: -16.50055503845215
    10. '    ' → logprob: -16.62555503845215

Token 2245: '_c' (ID: 1303)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.41301852464675903
    2. '_c' → logprob: -1.5380184650421143
    3. '1' → logprob: -2.1630184650421143
    4. '+' → logprob: -4.913018703460693
    5. '   ' → logprob: -7.788018703460693
    6. '<|end|>' → logprob: -8.413018226623535
    7. ')' → logprob: -8.538018226623535
    8. ' ' → logprob: -8.538018226623535
    9. '  ' → logprob: -10.663018226623535
    10. 'C' → logprob: -10.788018226623535

Token 2246: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001491292379796505
    2. ')}' → logprob: -6.876491069793701
    3. ')}
' → logprob: -8.62649154663086
    4. ')},' → logprob: -9.62649154663086
    5. ' +' → logprob: -9.75149154663086
    6. '   ' → logprob: -10.00149154663086
    7. ')' → logprob: -10.37649154663086
    8. '),' → logprob: -11.12649154663086
    9. '-' → logprob: -11.37649154663086
    10. ')})
' → logprob: -11.50149154663086

Token 2247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.546478935983032e-05
    2. ' ' → logprob: -10.875025749206543
    3. '+' → logprob: -13.250025749206543
    4. '   ' → logprob: -13.750025749206543
    5. '
' → logprob: -13.750025749206543
    6. '<|end|>' → logprob: -14.375025749206543
    7. '```' → logprob: -14.500025749206543
    8. '0' → logprob: -15.312525749206543
    9. ')' → logprob: -15.500025749206543
    10. '{' → logprob: -15.875025749206543

Token 2248: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.33413374423980713
    2. ')}
' → logprob: -1.3341337442398071
    3. ')' → logprob: -4.459133625030518
    4. '}' → logprob: -5.459133625030518
    5. '       ' → logprob: -6.209133625030518
    6. '}
' → logprob: -6.334133625030518
    7. ')}
' → logprob: -7.709133625030518
    8. '   ' → logprob: -7.834133625030518
    9. '):
' → logprob: -9.834134101867676
    10. ')}

' → logprob: -10.334134101867676

Token 2249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021037524566054344
    2. 'for' → logprob: -4.521037578582764
    3. ' for' → logprob: -5.146037578582764
    4. '   ' → logprob: -6.396037578582764
    5. '
' → logprob: -6.521037578582764
    6. '	' → logprob: -7.896037578582764
    7. '	for' → logprob: -8.146037101745605
    8. ',' → logprob: -9.396037101745605
    9. '	   ' → logprob: -9.396037101745605
    10. '```' → logprob: -9.896037101745605

Token 2250: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06326176226139069
    2. '       ' → logprob: -2.8132617473602295
    3. 'moves' → logprob: -7.813261985778809
    4. ' for' → logprob: -7.938261985778809
    5. '   ' → logprob: -7.938261985778809
    6. 'new' → logprob: -9.313261985778809
    7. 'next' → logprob: -10.063261985778809
    8. 'possible' → logprob: -11.063261985778809
    9. '```' → logprob: -11.813261985778809
    10. '           ' → logprob: -12.563261985778809

Token 2251: ' new' (ID: 620)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nr' → logprob: -0.111589215695858
    2. 'dr' → logprob: -2.486589193344116
    3. 'new' → logprob: -3.986589193344116
    4. '(' → logprob: -7.361589431762695
    5. '(dr' → logprob: -7.486589431762695
    6. '(n' → logprob: -7.611589431762695
    7. 'nd' → logprob: -8.236589431762695
    8. 'dir' → logprob: -8.236589431762695
    9. 'r' → logprob: -8.236589431762695
    10. '(new' → logprob: -8.361589431762695

Token 2252: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.05200942978262901
    2. '_' → logprob: -3.177009344100952
    3. '_token' → logprob: -5.677009582519531
    4. '_pos' → logprob: -6.177009582519531
    5. 'r' → logprob: -7.052009582519531
    6. '_positions' → logprob: -7.177009582519531
    7. 'token' → logprob: -7.552009582519531
    8. '_tokens' → logprob: -8.052009582519531
    9. '_position' → logprob: -8.552009582519531
    10. '_moves' → logprob: -8.802009582519531

Token 2253: ',new' (ID: 60564)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22878195345401764
    2. ',new' → logprob: -1.6037819385528564
    3. 'in' → logprob: -6.9787821769714355
    4. ',in' → logprob: -7.3537821769714355
    5. ' in' → logprob: -7.4787821769714355
    6. ' ,' → logprob: -7.6037821769714355
    7. ',c' → logprob: -8.728781700134277
    8. ',n' → logprob: -9.353781700134277
    9. ',k' → logprob: -9.478781700134277
    10. ',b' → logprob: -9.853781700134277

Token 2254: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.002174170222133398
    2. ',c' → logprob: -6.627174377441406
    3. ',' → logprob: -7.877174377441406
    4. '_,' → logprob: -8.502174377441406
    5. 'c' → logprob: -8.877174377441406
    6. 'new' → logprob: -10.377174377441406
    7. ',new' → logprob: -10.752174377441406
    8. ',_' → logprob: -10.877174377441406
    9. '_r' → logprob: -11.377174377441406
    10. '```' → logprob: -11.502174377441406

Token 2255: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038635771721601486
    2. 'in' → logprob: -3.288635730743408
    3. '<|end|>' → logprob: -8.163636207580566
    4. ')' → logprob: -8.663636207580566
    5. ',' → logprob: -9.913636207580566
    6. '       ' → logprob: -10.413636207580566
    7. '        ' → logprob: -11.663636207580566
    8. '<|end|>' → logprob: -12.038636207580566
    9. '):
' → logprob: -12.288636207580566
    10. '	in' → logprob: -12.413636207580566

Token 2256: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.0011703446507453918
    2. ' king' → logprob: -6.7511701583862305
    3. '   ' → logprob: -16.126171112060547
    4. 'queen' → logprob: -17.501171112060547
    5. '```' → logprob: -19.001171112060547
    6. '       ' → logprob: -19.001171112060547
    7. '.king' → logprob: -19.376171112060547
    8. '           ' → logprob: -19.501171112060547
    9. ' ' → logprob: -19.751171112060547
    10. '  ' → logprob: -20.251171112060547

Token 2257: '_moves' (ID: 110706)
  Prédit: '_moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.2393771857023239
    2. '_slide' → logprob: -1.6143771409988403
    3. 'slide' → logprob: -4.489377021789551
    4. 'moves' → logprob: -6.864377021789551
    5. '
' → logprob: -8.36437702178955
    6. ')' → logprob: -8.61437702178955
    7. 'Slide' → logprob: -8.73937702178955
    8. '_sl' → logprob: -8.73937702178955
    9. '_move' → logprob: -9.48937702178955
    10. '_slider' → logprob: -9.73937702178955

Token 2258: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.5014188799541444e-05
    2. 'king' → logprob: -11.375044822692871
    3. '
' → logprob: -11.750044822692871
    4. ' (' → logprob: -11.875044822692871
    5. ')' → logprob: -12.250044822692871
    6. ',' → logprob: -12.500044822692871
    7. '(
' → logprob: -13.000044822692871
    8. '   ' → logprob: -13.250044822692871
    9. '```' → logprob: -13.625044822692871
    10. '[' → logprob: -14.375044822692871

Token 2259: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -1.5451681974809617e-05
    2. ' king' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.500015258789062
    4. '(' → logprob: -15.625015258789062
    5. ')' → logprob: -15.875015258789062
    6. '
' → logprob: -16.375015258789062
    7. '.king' → logprob: -17.625015258789062
    8. '```' → logprob: -17.750015258789062
    9. 'King' → logprob: -18.125015258789062
    10. 'queen' → logprob: -18.375015258789062

Token 2260: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -9.865583706414327e-05
    2. '_' → logprob: -9.87509822845459
    3. '_,' → logprob: -10.75009822845459
    4. 'r' → logprob: -11.75009822845459
    5. '_c' → logprob: -12.25009822845459
    6. ' _' → logprob: -12.62509822845459
    7. '   ' → logprob: -12.87509822845459
    8. ')' → logprob: -13.25009822845459
    9. '+' → logprob: -14.12509822845459
    10. ',' → logprob: -14.37509822845459

Token 2261: ',' (ID: 11)
  Prédit: ',new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',new' → logprob: -0.07062559574842453
    2. ',' → logprob: -2.6956255435943604
    3. 'new' → logprob: -8.445625305175781
    4. ',next' → logprob: -9.070625305175781
    5. ',user' → logprob: -9.070625305175781
    6. ',
' → logprob: -9.195625305175781
    7. ',current' → logprob: -10.195625305175781
    8. ' ,' → logprob: -10.445625305175781
    9. ',n' → logprob: -11.445625305175781
    10. '+' → logprob: -11.695625305175781

Token 2262: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.0003202114312443882
    2. ' king' → logprob: -8.750320434570312
    3. 'new' → logprob: -8.750320434570312
    4. '   ' → logprob: -13.375320434570312
    5. ' ' → logprob: -15.375320434570312
    6. 'queen' → logprob: -15.375320434570312
    7. '```' → logprob: -15.500320434570312
    8. '
' → logprob: -15.625320434570312
    9. '  ' → logprob: -15.750320434570312
    10. '     ' → logprob: -15.875320434570312

Token 2263: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.004058809485286474
    2. '+' → logprob: -5.629058837890625
    3. 'c' → logprob: -8.004058837890625
    4. '-' → logprob: -9.504058837890625
    5. '   ' → logprob: -11.254058837890625
    6. ',' → logprob: -11.379058837890625
    7. '
' → logprob: -12.629058837890625
    8. 'new' → logprob: -12.629058837890625
    9. ',c' → logprob: -13.004058837890625
    10. 'moves' → logprob: -13.379058837890625

Token 2264: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5234082341194153
    2. ',p' → logprob: -0.8984082341194153
    3. ' ,' → logprob: -9.148407936096191
    4. ',
' → logprob: -10.398407936096191
    5. '       ' → logprob: -10.773407936096191
    6. ',[' → logprob: -10.773407936096191
    7. ',new' → logprob: -11.273407936096191
    8. '
' → logprob: -11.398407936096191
    9. '           ' → logprob: -11.398407936096191
    10. ',user' → logprob: -11.398407936096191

Token 2265: ' paw' (ID: 71961)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0016795829869806767
    2. ' paw' → logprob: -6.876679420471191
    3. 'paw' → logprob: -7.376679420471191
    4. 'pawn' → logprob: -10.876679420471191
    5. ' paws' → logprob: -14.376679420471191
    6. ')p' → logprob: -15.001679420471191
    7. '   ' → logprob: -15.376679420471191
    8. '```' → logprob: -15.876679420471191
    9. ')' → logprob: -16.126680374145508
    10. '<p' → logprob: -16.126680374145508

Token 2266: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.4857162833213806
    2. 'ons' → logprob: -0.9857162833213806
    3. 's' → logprob: -4.485716342926025
    4. 'uns' → logprob: -9.610715866088867
    5. 'ms' → logprob: -10.110715866088867
    6. 'n' → logprob: -10.235715866088867
    7. '_ns' → logprob: -10.235715866088867
    8. '_set' → logprob: -10.860715866088867
    9. '_s' → logprob: -10.860715866088867
    10. 'awns' → logprob: -10.985715866088867

Token 2267: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0015123621560633183
    2. 'set' → logprob: -7.12651252746582
    3. 'r' → logprob: -8.37651252746582
    4. '_sets' → logprob: -8.75151252746582
    5. ',' → logprob: -9.37651252746582
    6. '_r' → logprob: -10.25151252746582
    7. '_,' → logprob: -10.37651252746582
    8. 's' → logprob: -10.62651252746582
    9. '   ' → logprob: -10.75151252746582
    10. '_s' → logprob: -11.00151252746582

Token 2268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038529320154339075
    2. ',new' → logprob: -5.628852844238281
    3. ' ,' → logprob: -9.253852844238281
    4. ',next' → logprob: -9.628852844238281
    5. ',
' → logprob: -11.128852844238281
    6. ',user' → logprob: -11.378852844238281
    7. ',set' → logprob: -11.628852844238281
    8. '<|end|>' → logprob: -11.753852844238281
    9. ',function' → logprob: -12.253852844238281
    10. ',end' → logprob: -12.503852844238281

Token 2269: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.00014644917973782867
    2. ' open' → logprob: -9.125146865844727
    3. '{' → logprob: -10.250146865844727
    4. ' {(' → logprob: -13.750146865844727
    5. '(open' → logprob: -15.250146865844727
    6. '	open' → logprob: -15.625146865844727
    7. '   ' → logprob: -15.625146865844727
    8. '{
' → logprob: -16.250146865844727
    9. '           ' → logprob: -16.750146865844727
    10. ' ' → logprob: -17.250146865844727

Token 2270: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.018238326534628868
    2. 's' → logprob: -4.018238544464111
    3. 'Squares' → logprob: -11.018238067626953
    4. 'open' → logprob: -11.268238067626953
    5. '{' → logprob: -11.893238067626953
    6. '
' → logprob: -12.018238067626953
    7. '_set' → logprob: -12.143238067626953
    8. '_' → logprob: -12.268238067626953
    9. '_open' → logprob: -12.643238067626953
    10. '_sets' → logprob: -12.768238067626953

Token 2271: 'quares' (ID: 110764)
  Prédit: 'quares'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quares' → logprob: -0.27908289432525635
    2. '_set' → logprob: -2.404082775115967
    3. 's' → logprob: -3.154082775115967
    4. 'et' → logprob: -3.404082775115967
    5. '_s' → logprob: -3.904082775115967
    6. 'set' → logprob: -4.154082775115967
    7. 'ets' → logprob: -4.404082775115967
    8. 'q' → logprob: -4.654082775115967
    9. 'qu' → logprob: -4.779082775115967
    10. '_' → logprob: -6.029082775115967

Token 2272: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.00017803447553887963
    2. 'set' → logprob: -8.750178337097168
    3. ')' → logprob: -12.000178337097168
    4. '{' → logprob: -12.750178337097168
    5. 's' → logprob: -12.875178337097168
    6. ')set' → logprob: -13.125178337097168
    7. '_sets' → logprob: -13.625178337097168
    8. '   ' → logprob: -14.125178337097168
    9. ')_' → logprob: -14.125178337097168
    10. 'Set' → logprob: -14.500178337097168

Token 2273: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11320538818836212
    2. '):
' → logprob: -2.2382054328918457
    3. '       ' → logprob: -7.988205432891846
    4. '):
' → logprob: -10.613204956054688
    5. '           ' → logprob: -12.363204956054688
    6. '   ' → logprob: -12.363204956054688
    7. ')' → logprob: -12.488204956054688
    8. ' ):' → logprob: -12.863204956054688
    9. ':' → logprob: -13.363204956054688
    10. '):

' → logprob: -13.988204956054688

Token 2274: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6332122087478638
    2. '           ' → logprob: -0.7582122087478638
    3. '```' → logprob: -7.883212089538574
    4. '               ' → logprob: -9.633212089538574
    5. 'tokens' → logprob: -10.133212089538574
    6. 'results' → logprob: -10.383212089538574
    7. '   ' → logprob: -10.758212089538574
    8. '
' → logprob: -11.008212089538574
    9. '	       ' → logprob: -11.008212089538574
    10. 'new' → logprob: -12.008212089538574

Token 2275: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.10314572602510452
    2. '           ' → logprob: -2.3531458377838135
    3. '               ' → logprob: -6.353145599365234
    4. 'old' → logprob: -7.353145599365234
    5. '#' → logprob: -8.478145599365234
    6. ' new' → logprob: -8.728145599365234
    7. 'open' → logprob: -9.478145599365234
    8. '   ' → logprob: -9.853145599365234
    9. '       ' → logprob: -11.228145599365234
    10. '                   ' → logprob: -11.603145599365234

Token 2276: '_' (ID: 62)
  Prédit: '_r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.002791803563013673
    2. '_' → logprob: -6.252791881561279
    3. '_tokens' → logprob: -7.877791881561279
    4. '_s' → logprob: -8.627791404724121
    5. '_token' → logprob: -10.002791404724121
    6. '```' → logprob: -10.002791404724121
    7. 'r' → logprob: -10.127791404724121
    8. '_cells' → logprob: -10.752791404724121
    9. ' _' → logprob: -10.877791404724121
    10. '_t' → logprob: -10.877791404724121

Token 2277: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.16187909245491028
    2. 'r' → logprob: -2.036879062652588
    3. '_r' → logprob: -4.161879062652588
    4. 'cells' → logprob: -6.786879062652588
    5. '_' → logprob: -6.911879062652588
    6. ' king' → logprob: -7.661879062652588
    7. '_cells' → logprob: -8.286879539489746
    8. '#' → logprob: -9.161879539489746
    9. 'open' → logprob: -9.411879539489746
    10. 'set' → logprob: -9.536879539489746

Token 2278: '_cells' (ID: 93468)
  Prédit: '_r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.09028741717338562
    2. '_cells' → logprob: -2.465287446975708
    3. '_c' → logprob: -7.465287208557129
    4. '_' → logprob: -7.590287208557129
    5. '_f' → logprob: -9.340287208557129
    6. '_cell' → logprob: -10.215287208557129
    7. '_,' → logprob: -10.465287208557129
    8. '```' → logprob: -10.465287208557129
    9. ' _' → logprob: -10.715287208557129
    10. '   ' → logprob: -11.090287208557129

Token 2279: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021615028381348
    2. ' =' → logprob: -2.3502161502838135
    3. '={(' → logprob: -11.725215911865234
    4. '=set' → logprob: -13.850215911865234
    5. '{' → logprob: -15.600215911865234
    6. '={' → logprob: -15.725215911865234
    7. '=
' → logprob: -16.100215911865234
    8. ' ={' → logprob: -17.850215911865234
    9. ')' → logprob: -18.100215911865234
    10. '   ' → logprob: -18.475215911865234

Token 2280: ' {(' (ID: 75216)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0013184542767703533
    2. ' {(' → logprob: -6.751318454742432
    3. '{{' → logprob: -8.876317977905273
    4. '   ' → logprob: -12.376317977905273
    5. '{s' → logprob: -13.626317977905273
    6. '{
' → logprob: -14.501317977905273
    7. '{return' → logprob: -14.626317977905273
    8. '={(' → logprob: -15.126317977905273
    9. '{\' → logprob: -15.126317977905273
    10. '           ' → logprob: -15.626317977905273

Token 2281: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -3.054500666621607e-06
    2. ' new' → logprob: -12.75000286102295
    3. '(new' → logprob: -18.125003814697266
    4. '   ' → logprob: -18.625003814697266
    5. '_new' → logprob: -19.375003814697266
    6. '	new' → logprob: -19.625003814697266
    7. 'New' → logprob: -19.875003814697266
    8. ')new' → logprob: -20.375003814697266
    9. '[new' → logprob: -20.625003814697266
    10. '$new' → logprob: -20.750003814697266

Token 2282: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.00029041420202702284
    2. 'new' → logprob: -8.625290870666504
    3. 'r' → logprob: -9.125290870666504
    4. '(new' → logprob: -14.375290870666504
    5. '_new' → logprob: -14.500290870666504
    6. '_' → logprob: -14.750290870666504
    7. '+' → logprob: -16.125289916992188
    8. '[new' → logprob: -16.375289916992188
    9. ' new' → logprob: -16.875289916992188
    10. '_n' → logprob: -17.125289916992188

Token 2283: ',' (ID: 11)
  Prédit: ',new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',new' → logprob: -0.1269657015800476
    2. ',' → logprob: -2.1269657611846924
    3. 'new' → logprob: -10.501965522766113
    4. ' ,' → logprob: -12.126965522766113
    5. ',next' → logprob: -13.751965522766113
    6. '           ' → logprob: -14.001965522766113
    7. ',user' → logprob: -14.751965522766113
    8. ',
' → logprob: -14.876965522766113
    9. ',n' → logprob: -15.251965522766113
    10. ' new' → logprob: -15.251965522766113

Token 2284: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.1637164789135568e-05
    2. ' new' → logprob: -11.375011444091797
    3. '	new' → logprob: -17.250011444091797
    4. '   ' → logprob: -18.000011444091797
    5. ',new' → logprob: -18.250011444091797
    6. 'New' → logprob: -18.250011444091797
    7. '[new' → logprob: -18.875011444091797
    8. '    ' → logprob: -19.375011444091797
    9. '_new' → logprob: -19.375011444091797
    10. ')new' → logprob: -19.625011444091797

Token 2285: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0026164439041167498
    2. 'c' → logprob: -6.1276164054870605
    3. ',c' → logprob: -8.377616882324219
    4. ',' → logprob: -8.752616882324219
    5. 'new' → logprob: -11.127616882324219
    6. 'C' → logprob: -12.002616882324219
    7. 'king' → logprob: -12.002616882324219
    8. '+' → logprob: -12.127616882324219
    9. ',new' → logprob: -13.252616882324219
    10. '   ' → logprob: -13.502616882324219

Token 2286: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.2522248327732086
    2. '),(' → logprob: -1.5022248029708862
    3. ',' → logprob: -8.877224922180176
    4. '),
' → logprob: -9.002224922180176
    5. ')' → logprob: -11.127224922180176
    6. ' ),' → logprob: -12.127224922180176
    7. '},' → logprob: -12.752224922180176
    8. '},{' → logprob: -12.877224922180176
    9. '           ' → logprob: -13.502224922180176
    10. ',),' → logprob: -13.752224922180176

Token 2287: ' (' (ID: 350)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.10182178020477295
    2. ' (' → logprob: -2.3518218994140625
    3. '{' → logprob: -6.4768218994140625
    4. '(' → logprob: -10.476821899414062
    5. '[new' → logprob: -10.851821899414062
    6. ' {(' → logprob: -11.601821899414062
    7. ' {' → logprob: -11.851821899414062
    8. ' new' → logprob: -12.476821899414062
    9. 'new' → logprob: -12.851821899414062
    10. '            ' → logprob: -13.851821899414062

Token 2288: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -9.627176768844947e-05
    2. ' new' → logprob: -9.250096321105957
    3. '(new' → logprob: -17.87509536743164
    4. '	new' → logprob: -18.50009536743164
    5. '_new' → logprob: -18.87509536743164
    6. ')new' → logprob: -18.87509536743164
    7. 'newline' → logprob: -19.62509536743164
    8. '   ' → logprob: -19.62509536743164
    9. '[new' → logprob: -19.87509536743164
    10. ' ' → logprob: -19.87509536743164

Token 2289: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.011641167104244232
    2. '_c' → logprob: -4.761641025543213
    3. 'new' → logprob: -6.136641025543213
    4. 'r' → logprob: -7.386641025543213
    5. '(new' → logprob: -8.386641502380371
    6. 'c' → logprob: -12.136641502380371
    7. ' new' → logprob: -13.261641502380371
    8. '[new' → logprob: -13.261641502380371
    9. '_' → logprob: -13.511641502380371
    10. '(' → logprob: -14.261641502380371

Token 2290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3875657021999359
    2. ',new' → logprob: -1.1375657320022583
    3. 'new' → logprob: -8.012565612792969
    4. ',next' → logprob: -8.137565612792969
    5. ' ,' → logprob: -10.637565612792969
    6. ',n' → logprob: -10.887565612792969
    7. ' new' → logprob: -11.762565612792969
    8. ',c' → logprob: -12.262565612792969
    9. ',user' → logprob: -13.012565612792969
    10. ',current' → logprob: -13.012565612792969

Token 2291: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.001170460251159966
    2. ' new' → logprob: -6.751170635223389
    3. 'next' → logprob: -15.50117015838623
    4. 'New' → logprob: -17.251171112060547
    5. '_new' → logprob: -18.876171112060547
    6. '[new' → logprob: -18.876171112060547
    7. '(new' → logprob: -18.876171112060547
    8. '	new' → logprob: -19.001171112060547
    9. ')new' → logprob: -20.001171112060547
    10. '$new' → logprob: -20.376171112060547

Token 2292: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.009163877926766872
    2. 'new' → logprob: -4.759163856506348
    3. 'c' → logprob: -7.759163856506348
    4. '1' → logprob: -9.509163856506348
    5. ' ' → logprob: -11.259163856506348
    6. ' new' → logprob: -11.384163856506348
    7. '+' → logprob: -11.384163856506348
    8. 'C' → logprob: -12.134163856506348
    9. '   ' → logprob: -12.884163856506348
    10. '(new' → logprob: -13.759163856506348

Token 2293: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.014684110297821e-06
    2. ' +' → logprob: -12.000008583068848
    3. '+
' → logprob: -14.000008583068848
    4. '1' → logprob: -14.000008583068848
    5. '+(' → logprob: -15.375008583068848
    6. '```' → logprob: -15.375008583068848
    7. ',' → logprob: -15.500008583068848
    8. '+,' → logprob: -15.750008583068848
    9. ')+' → logprob: -16.125009536743164
    10. '),' → logprob: -16.125009536743164

Token 2294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. '0' → logprob: -12.250004768371582
    3. '{' → logprob: -16.1250057220459
    4. 'new' → logprob: -17.1250057220459
    5. ' ' → logprob: -17.3750057220459
    6. '
' → logprob: -18.6250057220459
    7. '   ' → logprob: -18.8750057220459
    8. '(' → logprob: -19.0000057220459
    9. '```' → logprob: -19.3750057220459
    10. '{
' → logprob: -19.5000057220459

Token 2295: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0078281844034791
    2. '),(' → logprob: -4.882828235626221
    3. ')' → logprob: -8.632827758789062
    4. '),
' → logprob: -11.257827758789062
    5. ',' → logprob: -11.757827758789062
    6. '},' → logprob: -11.757827758789062
    7. '           ' → logprob: -11.882827758789062
    8. ' ),' → logprob: -12.507827758789062
    9. ')}' → logprob: -13.882827758789062
    10. '},{' → logprob: -13.882827758789062

Token 2296: ' (' (ID: 350)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.009330776520073414
    2. '{' → logprob: -4.759330749511719
    3. ' (' → logprob: -7.259330749511719
    4. ' {(' → logprob: -12.134330749511719
    5. ' {' → logprob: -12.634330749511719
    6. '[new' → logprob: -12.884330749511719
    7. '(' → logprob: -14.884330749511719
    8. '({' → logprob: -15.634330749511719
    9. '   ' → logprob: -15.759330749511719
    10. '           ' → logprob: -15.884330749511719

Token 2297: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -7.584239938296378e-06
    2. ' new' → logprob: -12.000007629394531
    3. '(new' → logprob: -13.625007629394531
    4. '   ' → logprob: -16.25000762939453
    5. '	new' → logprob: -17.50000762939453
    6. '[new' → logprob: -17.62500762939453
    7. '       ' → logprob: -18.37500762939453
    8. '{' → logprob: -18.37500762939453
    9. '     ' → logprob: -18.62500762939453
    10. '           ' → logprob: -18.75000762939453

Token 2298: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.02020069770514965
    2. '_' → logprob: -4.520200729370117
    3. 'r' → logprob: -5.270200729370117
    4. '1' → logprob: -6.020200729370117
    5. 'new' → logprob: -6.770200729370117
    6. '_c' → logprob: -8.520200729370117
    7. '+' → logprob: -8.770200729370117
    8. '(' → logprob: -11.145200729370117
    9. '(new' → logprob: -11.520200729370117
    10. 'c' → logprob: -12.645200729370117

Token 2299: '+' (ID: 10)
  Prédit: ',new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',new' → logprob: -0.20150084793567657
    2. ',' → logprob: -1.7015008926391602
    3. 'new' → logprob: -9.45150089263916
    4. ' ,' → logprob: -12.32650089263916
    5. ',n' → logprob: -13.70150089263916
    6. ' new' → logprob: -14.20150089263916
    7. '[new' → logprob: -14.32650089263916
    8. ',next' → logprob: -14.82650089263916
    9. '(new' → logprob: -15.57650089263916
    10. ',m' → logprob: -15.82650089263916

Token 2300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2521032691001892
    2. 'new' → logprob: -1.502103328704834
    3. ' new' → logprob: -9.127102851867676
    4. '0' → logprob: -10.627102851867676
    5. 'c' → logprob: -11.002102851867676
    6. ' ' → logprob: -11.127102851867676
    7. '```' → logprob: -13.002102851867676
    8. '(new' → logprob: -13.127102851867676
    9. '   ' → logprob: -13.752102851867676
    10. '
' → logprob: -13.752102851867676

Token 2301: ',' (ID: 11)
  Prédit: ',new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',new' → logprob: -0.2519642114639282
    2. ',' → logprob: -1.5019642114639282
    3. 'new' → logprob: -10.501964569091797
    4. ' ,' → logprob: -12.751964569091797
    5. ',user' → logprob: -13.876964569091797
    6. ' new' → logprob: -14.376964569091797
    7. ',
' → logprob: -14.376964569091797
    8. ')new' → logprob: -14.751964569091797
    9. '[new' → logprob: -14.751964569091797
    10. ',next' → logprob: -14.876964569091797

Token 2302: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0008049834286794066
    2. ' new' → logprob: -7.125804901123047
    3. '[new' → logprob: -15.000804901123047
    4. '(new' → logprob: -16.625804901123047
    5. ')new' → logprob: -17.125804901123047
    6. 'New' → logprob: -17.500804901123047
    7. '$new' → logprob: -17.625804901123047
    8. '	new' → logprob: -17.625804901123047
    9. '_new' → logprob: -17.875804901123047
    10. '```' → logprob: -18.125804901123047

Token 2303: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.31894224882125854
    2. 'c' → logprob: -1.3189423084259033
    3. 'new' → logprob: -5.193942070007324
    4. ' new' → logprob: -10.818942070007324
    5. '   ' → logprob: -10.818942070007324
    6. '(' → logprob: -10.943942070007324
    7. '(new' → logprob: -11.568942070007324
    8. '1' → logprob: -11.693942070007324
    9. '_new' → logprob: -11.943942070007324
    10. 'r' → logprob: -12.568942070007324

Token 2304: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03376452997326851
    2. ',new' → logprob: -3.408764600753784
    3. 'new' → logprob: -9.408764839172363
    4. ')' → logprob: -11.283764839172363
    5. ' ,' → logprob: -12.283764839172363
    6. '```' → logprob: -12.533764839172363
    7. ',next' → logprob: -12.783764839172363
    8. '+' → logprob: -13.283764839172363
    9. ')new' → logprob: -13.283764839172363
    10. ',
' → logprob: -13.408764839172363

Token 2305: ' (' (ID: 350)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.19161705672740936
    2. ' (' → logprob: -2.441617012023926
    3. '{' → logprob: -2.566617012023926
    4. ' {(' → logprob: -5.066617012023926
    5. ' {' → logprob: -5.816617012023926
    6. 'new' → logprob: -7.191617012023926
    7. '(' → logprob: -8.566617012023926
    8. ' new' → logprob: -8.941617012023926
    9. '[new' → logprob: -9.316617012023926
    10. '           ' → logprob: -10.441617012023926

Token 2306: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -4.060365608893335e-05
    2. ' new' → logprob: -10.125041007995605
    3. '   ' → logprob: -16.12504005432129
    4. '(new' → logprob: -16.25004005432129
    5. '           ' → logprob: -16.62504005432129
    6. '_new' → logprob: -17.87504005432129
    7. '       ' → logprob: -18.00004005432129
    8. ')new' → logprob: -18.00004005432129
    9. '[new' → logprob: -18.12504005432129
    10. 'New' → logprob: -18.12504005432129

Token 2307: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.020062008872628212
    2. 'new' → logprob: -4.27006196975708
    3. '_' → logprob: -5.64506196975708
    4. '(new' → logprob: -6.14506196975708
    5. '_new' → logprob: -9.645062446594238
    6. 'r' → logprob: -9.770062446594238
    7. '[new' → logprob: -10.395062446594238
    8. ' new' → logprob: -10.770062446594238
    9. '_c' → logprob: -11.770062446594238
    10. ')new' → logprob: -11.895062446594238

Token 2308: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35983604192733765
    2. ',new' → logprob: -1.3598361015319824
    3. '+' → logprob: -3.4848361015319824
    4. 'new' → logprob: -4.234836101531982
    5. ' new' → logprob: -8.734835624694824
    6. '<|end|>' → logprob: -9.859835624694824
    7. '[new' → logprob: -10.359835624694824
    8. ' ,' → logprob: -10.609835624694824
    9. '_new' → logprob: -11.109835624694824
    10. ',next' → logprob: -11.109835624694824

Token 2309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06219387799501419
    2. 'new' → logprob: -2.8121938705444336
    3. ' new' → logprob: -8.687193870544434
    4. ' ' → logprob: -10.187193870544434
    5. '   ' → logprob: -12.812193870544434
    6. 'New' → logprob: -12.874693870544434
    7. '(new' → logprob: -13.062193870544434
    8. '+' → logprob: -13.937193870544434
    9. '```' → logprob: -13.937193870544434
    10. '	new' → logprob: -13.999693870544434

Token 2310: ',' (ID: 11)
  Prédit: ',new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',new' → logprob: -0.02325270138680935
    2. ',' → logprob: -3.7732527256011963
    3. 'new' → logprob: -12.773252487182617
    4. ',user' → logprob: -14.023252487182617
    5. ' ,' → logprob: -14.148252487182617
    6. ',next' → logprob: -14.398252487182617
    7. '[new' → logprob: -14.398252487182617
    8. ')new' → logprob: -14.523252487182617
    9. '(new' → logprob: -15.148252487182617
    10. ' new' → logprob: -15.273252487182617

Token 2311: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0017043406842276454
    2. ' new' → logprob: -6.376704216003418
    3. '[new' → logprob: -13.876704216003418
    4. '(new' → logprob: -14.751704216003418
    5. '   ' → logprob: -15.751704216003418
    6. ')new' → logprob: -15.751704216003418
    7. 'New' → logprob: -16.001705169677734
    8. '	new' → logprob: -16.251705169677734
    9. ' ' → logprob: -16.501705169677734
    10. '       ' → logprob: -16.876705169677734

Token 2312: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0026826607063412666
    2. '1' → logprob: -6.502682685852051
    3. 'c' → logprob: -6.752682685852051
    4. 'C' → logprob: -12.00268268585205
    5. 'new' → logprob: -13.62768268585205
    6. '
' → logprob: -13.75268268585205
    7. ')' → logprob: -13.75268268585205
    8. '   ' → logprob: -14.37768268585205
    9. ' ' → logprob: -14.75268268585205
    10. 'const' → logprob: -14.75268268585205

Token 2313: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014600737951695919
    2. ')}' → logprob: -4.63960075378418
    3. ')' → logprob: -5.51460075378418
    4. '),' → logprob: -8.01460075378418
    5. ')}
' → logprob: -8.88960075378418
    6. ')},' → logprob: -9.76460075378418
    7. ' +' → logprob: -10.26460075378418
    8. ',' → logprob: -10.26460075378418
    9. '1' → logprob: -10.76460075378418
    10. '),(' → logprob: -10.88960075378418

Token 2314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028233008924871683
    2. 'new' → logprob: -5.877823352813721
    3. ' new' → logprob: -11.127822875976562
    4. ' ' → logprob: -13.502822875976562
    5. '{' → logprob: -14.002822875976562
    6. '(new' → logprob: -15.127822875976562
    7. 'New' → logprob: -15.877822875976562
    8. '<|end|>' → logprob: -15.877822875976562
    9. '[new' → logprob: -16.127822875976562
    10. '   ' → logprob: -16.252822875976562

Token 2315: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.020310621708631516
    2. '}' → logprob: -4.520310401916504
    3. ')' → logprob: -4.770310401916504
    4. ')}
' → logprob: -7.520310401916504
    5. '           ' → logprob: -8.895310401916504
    6. '})' → logprob: -11.270310401916504
    7. ')}
' → logprob: -11.395310401916504
    8. '       ' → logprob: -11.520310401916504
    9. '               ' → logprob: -11.770310401916504
    10. '   ' → logprob: -12.270310401916504

Token 2316: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16102397441864014
    2. '               ' → logprob: -1.9110239744186401
    3. '
' → logprob: -8.91102409362793
    4. ' if' → logprob: -9.03602409362793
    5. '                   ' → logprob: -9.16102409362793
    6. '```' → logprob: -9.16102409362793
    7. '{
' → logprob: -9.66102409362793
    8. '       ' → logprob: -9.91102409362793
    9. '            
' → logprob: -10.66102409362793
    10. ' ' → logprob: -10.78602409362793

Token 2317: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6176018118858337
    2. 'open' → logprob: -0.8676018118858337
    3. 'new' → logprob: -3.4926018714904785
    4. 'old' → logprob: -5.9926018714904785
    5. 'vac' → logprob: -6.1176018714904785
    6. '   ' → logprob: -6.6176018714904785
    7. ' open' → logprob: -7.2426018714904785
    8. '#' (adapté à ' #') → logprob: -7.3676018714904785
    9. ' new' → logprob: -7.6176018714904785
    10. 'removed' → logprob: -7.8676018714904785

Token 2318: ' Check' (ID: 6208)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.5644407272338867
    2. '           ' → logprob: -1.6894407272338867
    3. 'new' → logprob: -1.8144407272338867
    4. '#' → logprob: -2.8144407272338867
    5. 'vac' → logprob: -4.564440727233887
    6. 'old' → logprob: -5.814440727233887
    7. '   ' → logprob: -5.939440727233887
    8. '       ' → logprob: -6.439440727233887
    9. 'removed' → logprob: -6.939440727233887
    10. ' #' → logprob: -7.189440727233887

Token 2319: ' paw' (ID: 71961)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5972208976745605
    2. 'not' → logprob: -2.3472208976745605
    3. 'len' → logprob: -2.4722208976745605
    4. '(new' → logprob: -2.5972208976745605
    5. 'if' → logprob: -2.9722208976745605
    6. ' new' → logprob: -3.9722208976745605
    7. '((' → logprob: -3.9722208976745605
    8. 'open' → logprob: -3.9722208976745605
    9. '#' → logprob: -4.2222208976745605
    10. '   ' → logprob: -4.5972208976745605

Token 2320: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -8.304016228066757e-05
    2. 'n' → logprob: -9.625082969665527
    3. 'nts' → logprob: -11.500082969665527
    4. '           ' → logprob: -13.375082969665527
    5. '_ns' → logprob: -14.125082969665527
    6. '   ' → logprob: -14.250082969665527
    7. 's' → logprob: -14.250082969665527
    8. '       ' → logprob: -14.750082969665527
    9. 'ons' → logprob: -15.000082969665527
    10. ' ns' → logprob: -15.375082969665527

Token 2321: ' set' (ID: 920)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.3379396200180054
    2. '_set' → logprob: -1.4629396200180054
    3. 'if' → logprob: -1.9629396200180054
    4. 'is' → logprob: -2.712939739227295
    5. '.is' → logprob: -2.712939739227295
    6. '           ' → logprob: -2.962939739227295
    7. 'dis' → logprob: -3.712939739227295
    8. 'and' → logprob: -3.837939739227295
    9. '.inter' → logprob: -3.962939739227295
    10. 'inter' → logprob: -4.462939739227295

Token 2322: ' do' (ID: 621)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1416720598936081
    2. 'if' → logprob: -3.266672134399414
    3. 'and' → logprob: -3.391672134399414
    4. '&' → logprob: -4.016672134399414
    5. 'is' → logprob: -4.641672134399414
    6. 'for' → logprob: -5.141672134399414
    7. '               ' → logprob: -5.141672134399414
    8. '.' → logprob: -5.641672134399414
    9. '.is' → logprob: -5.641672134399414
    10. '.inter' → logprob: -6.016672134399414

Token 2323: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.009141319431364536
    2. 'es' → logprob: -5.134141445159912
    3. ' not' → logprob: -5.759141445159912
    4. '_not' → logprob: -10.884140968322754
    5. 'n't' → logprob: -11.384140968322754
    6. '   ' → logprob: -12.134140968322754
    7. '	not' → logprob: -12.134140968322754
    8. 's' → logprob: -13.134140968322754
    9. '(not' → logprob: -13.759140968322754
    10. '               ' → logprob: -13.759140968322754

Token 2324: ' intersect' (ID: 64353)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.003664325689896941
    2. 'over' → logprob: -5.753664493560791
    3. 'intersection' → logprob: -8.503664016723633
    4. ' intersect' → logprob: -9.128664016723633
    5. '&' → logprob: -9.503664016723633
    6. '.inter' → logprob: -10.628664016723633
    7. 'conf' → logprob: -10.628664016723633
    8. 'have' → logprob: -10.878664016723633
    9. ' overlap' → logprob: -11.253664016723633
    10. 'contain' → logprob: -12.503664016723633

Token 2325: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -1.326164960861206
    2. '           ' → logprob: -1.451164960861206
    3. 'new' → logprob: -1.576164960861206
    4. '(new' → logprob: -2.326164960861206
    5. 'with' → logprob: -2.451164960861206
    6. ' with' → logprob: -2.451164960861206
    7. ' if' → logprob: -4.701165199279785
    8. 'if' → logprob: -5.076165199279785
    9. '               ' → logprob: -6.451165199279785
    10. '&' → logprob: -6.826165199279785

Token 2326: ' king' (ID: 13793)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00024084746837615967
    2. 'king' → logprob: -8.37524127960205
    3. '_k' → logprob: -12.62524127960205
    4. 'new' → logprob: -13.25024127960205
    5. '_p' → logprob: -13.25024127960205
    6. '```' → logprob: -13.62524127960205
    7. '_new' → logprob: -14.12524127960205
    8. ' king' → logprob: -14.62524127960205
    9. '#' → logprob: -15.62524127960205
    10. '``' → logprob: -16.125240325927734

Token 2327: ' cells' (ID: 11242)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.0017143317963927984
    2. 'cells' → logprob: -6.62671422958374
    3. '           ' → logprob: -8.126714706420898
    4. '
' → logprob: -10.876714706420898
    5. '_positions' → logprob: -11.126714706420898
    6. '_' → logprob: -11.626714706420898
    7. 'new' → logprob: -11.626714706420898
    8. '_cell' → logprob: -12.126714706420898
    9. '_new' → logprob: -12.251714706420898
    10. '```' → logprob: -12.376714706420898

Token 2328: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029794832225888968
    2. ' if' → logprob: -6.002979278564453
    3. 'if' → logprob: -7.752979278564453
    4. 'and' → logprob: -10.377979278564453
    5. ' and' → logprob: -11.252979278564453
    6. '               ' → logprob: -12.127979278564453
    7. ' or' → logprob: -12.127979278564453
    8. '<|end|>' → logprob: -12.377979278564453
    9. ',' → logprob: -13.127979278564453
    10. ':
' → logprob: -13.252979278564453

Token 2329: 'already' (ID: 89136)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.3492151498794556
    2. 'False' → logprob: -1.4742151498794556
    3. 'True' → logprob: -1.7242151498794556
    4. ')' → logprob: -2.099215030670166
    5. '           ' → logprob: -2.599215030670166
    6. 'not' → logprob: -3.724215030670166
    7. '
' → logprob: -4.224215030670166
    8. 'pawn' → logprob: -4.349215030670166
    9. ' True' → logprob: -4.474215030670166
    10. ' new' → logprob: -4.849215030670166

Token 2330: ' done' (ID: 4167)
  Prédit: 'checked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'checked' → logprob: -0.2428341507911682
    2. 'covered' → logprob: -2.2428340911865234
    3. 'dis' → logprob: -4.617834091186523
    4. 'in' → logprob: -4.742834091186523
    5. 'ens' → logprob: -4.742834091186523
    6. '
' → logprob: -4.867834091186523
    7. 'included' → logprob: -4.867834091186523
    8. 'validated' → logprob: -4.992834091186523
    9. 'def' → logprob: -5.242834091186523
    10. ' checked' → logprob: -5.492834091186523

Token 2331: ' in' (ID: 306)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6628352999687195
    2. ')' → logprob: -0.7878352999687195
    3. '           ' → logprob: -3.6628353595733643
    4. 'in' → logprob: -7.037835121154785
    5. '):
' → logprob: -7.162835121154785
    6. ' in' → logprob: -7.162835121154785
    7. ',' → logprob: -7.912835121154785
    8. '),' → logprob: -7.912835121154785
    9. '               ' → logprob: -8.162835121154785
    10. '```' → logprob: -8.537835121154785

Token 2332: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.00036787090357393026
    2. 'previous' → logprob: -9.125368118286133
    3. 'def' → logprob: -9.375368118286133
    4. 'if' → logprob: -10.000368118286133
    5. '```' → logprob: -10.500368118286133
    6. 'pawn' → logprob: -10.750368118286133
    7. 'the' → logprob: -11.000368118286133
    8. ' king' → logprob: -11.250368118286133
    9. 'queen' → logprob: -11.500368118286133
    10. 'moves' → logprob: -11.750368118286133

Token 2333: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.012753669172525406
    2. 'fits' → logprob: -5.137753486633301
    3. '_moves' → logprob: -5.387753486633301
    4. 'f' → logprob: -7.387753486633301
    5. 'moves' → logprob: -7.512753486633301
    6. 'slide' → logprob: -7.637753486633301
    7. '_slide' → logprob: -9.0127534866333
    8. '```' → logprob: -9.3877534866333
    9. '_cells' → logprob: -9.5127534866333
    10. '_fit' → logprob: -10.6377534866333

Token 2334: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -0.001125094946473837
    2. 'it' → logprob: -7.376124858856201
    3. '_' → logprob: -8.75112533569336
    4. 'fits' → logprob: -10.00112533569336
    5. '```' → logprob: -10.00112533569336
    6. 'i' → logprob: -10.37612533569336
    7. '__' → logprob: -11.31362533569336
    8. 'itse' → logprob: -11.43862533569336
    9. ')' → logprob: -11.62612533569336
    10. '``' → logprob: -11.62612533569336

Token 2335: '),' (ID: 936)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5265375375747681
    2. ')' → logprob: -1.401537537574768
    3. '):
' → logprob: -2.0265374183654785
    4. '           ' → logprob: -3.7765374183654785
    5. '):' → logprob: -5.1515374183654785
    6. '),' → logprob: -7.5265374183654785
    7. '               ' → logprob: -7.5265374183654785
    8. '):

' → logprob: -7.9015374183654785
    9. ' )
' → logprob: -8.026537895202637
    10. ' and' → logprob: -8.901537895202637

Token 2336: ' so' (ID: 813)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013460424728691578
    2. '
' → logprob: -5.638460636138916
    3. '               ' → logprob: -5.638460636138916
    4. '            
' → logprob: -6.013460636138916
    5. '                   ' → logprob: -6.763460636138916
    6. ' continue' → logprob: -7.638460636138916
    7. '            ' → logprob: -7.638460636138916
    8. ' 
' → logprob: -8.138460159301758
    9. '       ' → logprob: -8.263460159301758
    10. ' if' → logprob: -8.513460159301758

Token 2337: ' safe' (ID: 7703)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8965466618537903
    2. '           ' → logprob: -1.1465466022491455
    3. '               ' → logprob: -1.6465466022491455
    4. ' continue' → logprob: -3.0215466022491455
    5. 'open' → logprob: -4.271546840667725
    6. '#' → logprob: -5.146546840667725
    7. '   ' → logprob: -5.396546840667725
    8. 'new' → logprob: -5.896546840667725
    9. '```' → logprob: -6.271546840667725
    10. ' open' → logprob: -6.771546840667725

Token 2338: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007078948896378279
    2. '
' → logprob: -5.007079124450684
    3. '            
' → logprob: -8.257079124450684
    4. '<|end|>' → logprob: -10.382079124450684
    5. ' new' → logprob: -11.132079124450684
    6. 'new' → logprob: -11.632079124450684
    7. ',' → logprob: -11.882079124450684
    8. '```' → logprob: -12.007079124450684
    9. '               ' → logprob: -12.132079124450684
    10. '<|end|>' → logprob: -12.757079124450684

Token 2339: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005160979344509542
    2. '               ' → logprob: -8.500515937805176
    3. '
' → logprob: -8.875515937805176
    4. '```' → logprob: -10.250515937805176
    5. '            
' → logprob: -10.500515937805176
    6. '                   ' → logprob: -10.500515937805176
    7. 'new' → logprob: -11.125515937805176
    8. ' if' → logprob: -11.125515937805176
    9. '{
' → logprob: -11.625515937805176
    10. 'if' → logprob: -11.750515937805176

Token 2340: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028741197660565376
    2. 'open' → logprob: -3.6537411212921143
    3. 'new' → logprob: -7.278741359710693
    4. ' open' → logprob: -7.528741359710693
    5. '               ' → logprob: -7.778741359710693
    6. '
' → logprob: -8.028740882873535
    7. '   ' → logprob: -8.528740882873535
    8. ' new' → logprob: -9.653740882873535
    9. '#' (adapté à ' #') → logprob: -10.028740882873535
    10. 'old' → logprob: -10.153740882873535

Token 2341: ' Compute' (ID: 45438)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.5850989818572998
    2. '           ' → logprob: -0.8350989818572998
    3. 'new' → logprob: -5.210099220275879
    4. '#' → logprob: -6.585099220275879
    5. 'old' → logprob: -6.585099220275879
    6. '   ' → logprob: -8.085099220275879
    7. '               ' → logprob: -8.335099220275879
    8. '
' → logprob: -8.710099220275879
    9. 'opens' → logprob: -10.210099220275879
    10. ' open' → logprob: -10.960099220275879

Token 2342: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.04671185463666916
    2. 'open' → logprob: -3.4217119216918945
    3. ' new' → logprob: -5.0467119216918945
    4. '           ' → logprob: -5.7967119216918945
    5. '   ' → logprob: -6.1717119216918945
    6. 'updated' → logprob: -7.0467119216918945
    7. '#' → logprob: -8.296711921691895
    8. '               ' → logprob: -9.296711921691895
    9. ' open' → logprob: -9.796711921691895
    10. 'next' → logprob: -10.171711921691895

Token 2343: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.31330597400665283
    2. '_open' → logprob: -1.3133059740066528
    3. 'opens' → logprob: -11.063305854797363
    4. '_p' → logprob: -11.813305854797363
    5. ' open' → logprob: -12.063305854797363
    6. '   ' → logprob: -12.688305854797363
    7. '
' → logprob: -12.938305854797363
    8. 'p' → logprob: -13.063305854797363
    9. 'op' → logprob: -13.188305854797363
    10. '	open' → logprob: -13.438305854797363

Token 2344: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0003766919835470617
    2. 's' → logprob: -8.12537670135498
    3. '_spaces' → logprob: -10.62537670135498
    4. 'open' → logprob: -11.50037670135498
    5. '_set' → logprob: -11.62537670135498
    6. '   ' → logprob: -11.87537670135498
    7. 'sq' → logprob: -12.00037670135498
    8. '
' → logprob: -12.75037670135498
    9. '_cells' → logprob: -13.00037670135498
    10. ' squares' → logprob: -13.12537670135498

Token 2345: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04025093466043472
    2. 'new' → logprob: -4.040250778198242
    3. ' =' → logprob: -4.290250778198242
    4. '   ' → logprob: -5.790250778198242
    5. ' new' → logprob: -5.915250778198242
    6. 'open' → logprob: -6.915250778198242
    7. '=' → logprob: -7.665250778198242
    8. 'old' → logprob: -8.790250778198242
    9. 'updated' → logprob: -9.290250778198242
    10. '```' → logprob: -9.290250778198242

Token 2346: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0283009372651577
    2. 'new' → logprob: -4.403300762176514
    3. 'open' → logprob: -5.153300762176514
    4. '               ' → logprob: -5.403300762176514
    5. ' new' → logprob: -5.778300762176514
    6. '   ' → logprob: -7.153300762176514
    7. ' open' → logprob: -7.778300762176514
    8. '```' → logprob: -7.778300762176514
    9. 'old' → logprob: -8.778301239013672
    10. '                   ' → logprob: -9.528301239013672

Token 2347: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.23719914257526398
    2. '           ' → logprob: -2.112199068069458
    3. 'open' → logprob: -2.987199068069458
    4. ' new' → logprob: -3.862199068069458
    5. '   ' → logprob: -5.112199306488037
    6. 'old' → logprob: -5.487199306488037
    7. '               ' → logprob: -5.987199306488037
    8. '#' (adapté à ' #') → logprob: -6.612199306488037
    9. 'remaining' → logprob: -7.237199306488037
    10. 'temp' → logprob: -7.737199306488037

Token 2348: ' Remove' (ID: 18141)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.18886537849903107
    2. 'open' → logprob: -2.0638654232025146
    3. '           ' → logprob: -3.9388654232025146
    4. 'old' → logprob: -4.4388651847839355
    5. ' new' → logprob: -5.3138651847839355
    6. '#' → logprob: -5.8138651847839355
    7. '   ' → logprob: -6.8138651847839355
    8. 'updated' → logprob: -6.9388651847839355
    9. '               ' → logprob: -7.0638651847839355
    10. 'removed' → logprob: -7.1888651847839355

Token 2349: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.45565667748451233
    2. 'open' → logprob: -1.33065664768219
    3. ' new' → logprob: -2.4556567668914795
    4. ' open' → logprob: -4.3306565284729
    5. '(new' → logprob: -6.4556565284729
    6. '(open' → logprob: -7.3306565284729
    7. '   ' → logprob: -8.955657005310059
    8. ' (' → logprob: -9.080657005310059
    9. 'from' → logprob: -9.830657005310059
    10. '(' → logprob: -10.455657005310059

Token 2350: ' king' (ID: 13793)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0009563630446791649
    2. 'king' → logprob: -7.0009565353393555
    3. ' king' → logprob: -10.750956535339355
    4. '_k' → logprob: -11.875956535339355
    5. '```' → logprob: -12.375956535339355
    6. '_s' → logprob: -12.500956535339355
    7. '_open' → logprob: -13.000956535339355
    8. 'open' → logprob: -13.125956535339355
    9. '_new' → logprob: -14.000956535339355
    10. '`' → logprob: -14.375956535339355

Token 2351: ' cells' (ID: 11242)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.00012976066500414163
    2. 'cells' → logprob: -9.500129699707031
    3. '_s' → logprob: -9.875129699707031
    4. '_positions' → logprob: -14.250129699707031
    5. '```' → logprob: -14.750129699707031
    6. '_cell' → logprob: -14.875129699707031
    7. '"_' → logprob: -15.250129699707031
    8. '
' → logprob: -15.250129699707031
    9. 's' → logprob: -15.625129699707031
    10. ''_' → logprob: -15.750129699707031

Token 2352: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5781723260879517
    2. 'open' → logprob: -1.8281723260879517
    3. ' =' → logprob: -1.9531723260879517
    4. '=' → logprob: -3.453172206878662
    5. 'new' → logprob: -3.453172206878662
    6. '   ' → logprob: -4.453172206878662
    7. 'updated' → logprob: -4.453172206878662
    8. '_open' → logprob: -5.078172206878662
    9. ' open' → logprob: -5.328172206878662
    10. '               ' → logprob: -5.328172206878662

Token 2353: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.012468801811337471
    2. '(open' → logprob: -4.6374688148498535
    3. ' open' → logprob: -6.0124688148498535
    4. ' (' → logprob: -9.137468338012695
    5. '   ' → logprob: -10.137468338012695
    6. '{' → logprob: -10.387468338012695
    7. '(' → logprob: -10.512468338012695
    8. '           ' → logprob: -10.887468338012695
    9. '	open' → logprob: -11.512468338012695
    10. '       ' → logprob: -12.512468338012695

Token 2354: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0013695230009034276
    2. 's' → logprob: -6.626369476318359
    3. '   ' → logprob: -11.25136947631836
    4. '_spaces' → logprob: -11.87636947631836
    5. '_' → logprob: -12.00136947631836
    6. ' squares' → logprob: -12.25136947631836
    7. '```' → logprob: -12.87636947631836
    8. '(s' → logprob: -13.62636947631836
    9. '``' → logprob: -13.87636947631836
    10. '_cells' → logprob: -14.37636947631836

Token 2355: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024889066815376282
    2. 'new' → logprob: -5.14988899230957
    3. '   ' → logprob: -5.64988899230957
    4. '               ' → logprob: -5.77488899230957
    5. '                   ' → logprob: -5.77488899230957
    6. '```' → logprob: -6.27488899230957
    7. '
' → logprob: -6.39988899230957
    8. '-' → logprob: -7.27488899230957
    9. ' -' → logprob: -7.27488899230957
    10. ',' → logprob: -7.27488899230957

Token 2356: ' add' (ID: 1147)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6636783480644226
    2. ' new' → logprob: -0.7886783480644226
    3. 'open' → logprob: -4.288678169250488
    4. '           ' → logprob: -4.788678169250488
    5. ' open' → logprob: -5.163678169250488
    6. '               ' → logprob: -6.288678169250488
    7. '                   ' → logprob: -7.788678169250488
    8. '   ' → logprob: -8.163678169250488
    9. 'updated' → logprob: -10.663678169250488
    10. '(new' → logprob: -10.788678169250488

Token 2357: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.013248002156615257
    2. '(old' → logprob: -4.763247966766357
    3. ' old' → logprob: -5.388247966766357
    4. '   ' → logprob: -10.638248443603516
    5. ' (' → logprob: -10.763248443603516
    6. '(' → logprob: -12.888248443603516
    7. '	old' → logprob: -13.013248443603516
    8. '           ' → logprob: -13.513248443603516
    9. '       ' → logprob: -15.138248443603516
    10. '_old' → logprob: -15.263248443603516

Token 2358: ' king' (ID: 13793)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.240481914370321e-05
    2. 'king' → logprob: -9.875052452087402
    3. 'open' → logprob: -15.125052452087402
    4. ' king' → logprob: -15.250052452087402
    5. '   ' → logprob: -15.375052452087402
    6. '```' → logprob: -16.500051498413086
    7. '_open' → logprob: -17.625051498413086
    8. '#' → logprob: -18.000051498413086
    9. '           ' → logprob: -18.125051498413086
    10. '(' → logprob: -18.250051498413086

Token 2359: ' cells' (ID: 11242)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.0017214729450643063
    2. 'cells' → logprob: -6.626721382141113
    3. '_s' → logprob: -8.376721382141113
    4. '   ' → logprob: -9.751721382141113
    5. 's' → logprob: -10.126721382141113
    6. '           ' → logprob: -11.376721382141113
    7. '_cell' → logprob: -12.001721382141113
    8. '_' → logprob: -12.251721382141113
    9. ' cells' → logprob: -12.376721382141113
    10. '       ' → logprob: -12.376721382141113

Token 2360: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00342080881819129
    2. 'new' → logprob: -6.003420829772949
    3. ' new' → logprob: -7.378420829772949
    4. '
' → logprob: -8.62842082977295
    5. '   ' → logprob: -10.62842082977295
    6. 'open' → logprob: -10.87842082977295
    7. ',' → logprob: -10.87842082977295
    8. '               ' → logprob: -11.25342082977295
    9. '                   ' → logprob: -11.50342082977295
    10. 'next' → logprob: -11.75342082977295

Token 2361: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00033939589047804475
    2. '
' → logprob: -9.62533950805664
    3. '                   ' → logprob: -9.87533950805664
    4. '               ' → logprob: -10.12533950805664
    5. 'new' → logprob: -10.12533950805664
    6. '```' → logprob: -10.75033950805664
    7. '            
' → logprob: -10.75033950805664
    8. ' new' → logprob: -11.00033950805664
    9. '       ' → logprob: -11.12533950805664
    10. '   ' → logprob: -11.25033950805664

Token 2362: ' new' (ID: 620)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32789692282676697
    2. 'new' (adapté à ' new') → logprob: -1.3278969526290894
    3. ' new' → logprob: -4.452897071838379
    4. 'open' → logprob: -6.452897071838379
    5. '               ' → logprob: -7.577897071838379
    6. 'next' → logprob: -7.952897071838379
    7. '   ' → logprob: -8.327897071838379
    8. 'updated' → logprob: -10.077897071838379
    9. '```' → logprob: -10.702897071838379
    10. '       ' → logprob: -10.702897071838379

Token 2363: '_open' (ID: 26173)
  Prédit: '_open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_open' → logprob: -0.006788670551031828
    2. 'open' → logprob: -5.006788730621338
    3. '_op' → logprob: -9.63178825378418
    4. 'opens' → logprob: -12.25678825378418
    5. 'Open' → logprob: -13.88178825378418
    6. '_' → logprob: -13.88178825378418
    7. 'op' → logprob: -14.25678825378418
    8. '_s' → logprob: -15.75678825378418
    9. ' open' → logprob: -16.75678825378418
    10. '	open' → logprob: -17.00678825378418

Token 2364: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5063743591308594
    2. '_s' → logprob: -1.2563743591308594
    3. ' =' → logprob: -2.2563743591308594
    4. 's' → logprob: -4.881374359130859
    5. '_' → logprob: -8.63137435913086
    6. '=_' → logprob: -9.63137435913086
    7. '=s' → logprob: -11.50637435913086
    8. '_=' → logprob: -11.63137435913086
    9. '=set' → logprob: -11.63137435913086
    10. '_set' → logprob: -11.75637435913086

Token 2365: ' open' (ID: 2494)
  Prédit: '(open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(open' → logprob: -0.08690056204795837
    2. 'open' → logprob: -2.586900472640991
    3. ' (' → logprob: -5.08690071105957
    4. '(set' → logprob: -7.21190071105957
    5. ' open' → logprob: -7.83690071105957
    6. '   ' → logprob: -8.33690071105957
    7. '(' → logprob: -8.83690071105957
    8. 'set' → logprob: -9.58690071105957
    9. '((' → logprob: -10.71190071105957
    10. '       ' → logprob: -10.71190071105957

Token 2366: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -3.273621405242011e-05
    2. 's' → logprob: -10.375032424926758
    3. '   ' → logprob: -14.500032424926758
    4. 'open' → logprob: -14.875032424926758
    5. ' squares' → logprob: -15.375032424926758
    6. '_spaces' → logprob: -16.125032424926758
    7. 'Squares' → logprob: -16.250032424926758
    8. '       ' → logprob: -16.875032424926758
    9. '           ' → logprob: -17.375032424926758
    10. '_open' → logprob: -17.375032424926758

Token 2367: 'quares' (ID: 110764)
  Prédit: 'quares'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quares' → logprob: -0.08683191984891891
    2. 's' → logprob: -2.83683180809021
    3. '_s' → logprob: -3.71183180809021
    4. 'qu' → logprob: -10.336832046508789
    5. 'Squares' → logprob: -10.586832046508789
    6. '_' → logprob: -10.836832046508789
    7. '{' → logprob: -11.711832046508789
    8. '(s' → logprob: -11.711832046508789
    9. 'q' → logprob: -12.086832046508789
    10. ' squares' → logprob: -12.586832046508789

Token 2368: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -2.8921695047756657e-05
    2. '_s' → logprob: -11.500028610229492
    3. '   ' → logprob: -11.625028610229492
    4. 'set' → logprob: -12.500028610229492
    5. '_sets' → logprob: -13.375028610229492
    6. 's' → logprob: -13.875028610229492
    7. '```' → logprob: -14.125028610229492
    8. '_' → logprob: -14.250028610229492
    9. '_SET' → logprob: -14.875028610229492
    10. '           ' → logprob: -15.250028610229492

Token 2369: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6940141916275024
    2. ' -' → logprob: -0.6940141916275024
    3. '   ' → logprob: -7.819014072418213
    4. '           ' → logprob: -8.194014549255371
    5. ' ' → logprob: -9.569014549255371
    6. '               ' → logprob: -10.194014549255371
    7. '                   ' → logprob: -11.194014549255371
    8. '.union' → logprob: -11.319014549255371
    9. '  ' → logprob: -11.569014549255371
    10. ' .' → logprob: -11.694014549255371

Token 2370: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00012654215970542282
    2. ' new' → logprob: -9.000126838684082
    3. '(new' → logprob: -13.250126838684082
    4. '{' → logprob: -14.000126838684082
    5. '(' → logprob: -15.375126838684082
    6. '   ' → logprob: -16.125125885009766
    7. '	new' → logprob: -16.125125885009766
    8. ' ' → logprob: -17.125125885009766
    9. ' (' → logprob: -17.625125885009766
    10. '
' → logprob: -17.875125885009766

Token 2371: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0006304710987024009
    2. 'king' → logprob: -7.3756303787231445
    3. ' king' → logprob: -12.875630378723145
    4. '{' → logprob: -15.000630378723145
    5. 'new' → logprob: -15.000630378723145
    6. '_k' → logprob: -15.000630378723145
    7. '_new' → logprob: -15.750630378723145
    8. '.king' → logprob: -16.25063133239746
    9. '_cells' → logprob: -16.50063133239746
    10. '```' → logprob: -16.62563133239746

Token 2372: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -4.453737710718997e-05
    2. '_' → logprob: -10.250044822692871
    3. ' king' → logprob: -12.375044822692871
    4. 'new' → logprob: -13.250044822692871
    5. '{' → logprob: -13.750044822692871
    6. 'kin' → logprob: -14.125044822692871
    7. 'kind' → logprob: -15.000044822692871
    8. 'queen' → logprob: -15.125044822692871
    9. '```' → logprob: -15.750044822692871
    10. 'ki' → logprob: -15.750044822692871

Token 2373: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.003189597511664033
    2. 'cells' → logprob: -5.753189563751221
    3. 'new' → logprob: -12.628190040588379
    4. '_moves' → logprob: -13.128190040588379
    5. 'Cells' → logprob: -13.253190040588379
    6. ' cells' → logprob: -13.628190040588379
    7. '.cells' → logprob: -14.003190040588379
    8. '   ' → logprob: -14.253190040588379
    9. 's' → logprob: -15.253190040588379
    10. '```' → logprob: -15.378190040588379

Token 2374: ' |' (ID: 1022)
  Prédit: ' |'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.5289078950881958
    2. '.union' → logprob: -1.5289078950881958
    3. '|' → logprob: -1.7789078950881958
    4. '           ' → logprob: -3.7789077758789062
    5. ' new' → logprob: -7.778907775878906
    6. '                   ' → logprob: -7.903907775878906
    7. ' .' → logprob: -8.278907775878906
    8. 'new' → logprob: -8.403907775878906
    9. '.new' → logprob: -8.403907775878906
    10. '            ' → logprob: -8.778907775878906

Token 2375: ' (' (ID: 350)
  Prédit: '(old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(old' → logprob: -0.03762780502438545
    2. 'old' → logprob: -3.787627696990967
    3. ' (' → logprob: -5.037627696990967
    4. '(expected' → logprob: -5.287627696990967
    5. '           ' → logprob: -6.162627696990967
    6. '(' → logprob: -8.787628173828125
    7. ' old' → logprob: -8.787628173828125
    8. 'expected' → logprob: -9.162628173828125
    9. '   ' → logprob: -9.537628173828125
    10. '{' → logprob: -9.787628173828125

Token 2376: 'old' (ID: 1280)
  Prédit: 'old'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.0008644147892482579
    2. '(old' → logprob: -7.250864505767822
    3. ' old' → logprob: -9.000864028930664
    4. 'expected' → logprob: -10.625864028930664
    5. '{' → logprob: -12.375864028930664
    6. '(' → logprob: -13.625864028930664
    7. '(expected' → logprob: -14.500864028930664
    8. ' (' → logprob: -14.625864028930664
    9. '   ' → logprob: -15.625864028930664
    10. '	old' → logprob: -16.000864028930664

Token 2377: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.392202976712724e-06
    2. 'king' → logprob: -13.500006675720215
    3. '```' → logprob: -13.500006675720215
    4. ' _' → logprob: -14.625006675720215
    5. ')_' → logprob: -14.625006675720215
    6. '_cells' → logprob: -15.125006675720215
    7. '_k' → logprob: -15.250006675720215
    8. 'King' → logprob: -15.250006675720215
    9. '_open' → logprob: -15.375006675720215
    10. '\' → logprob: -15.625006675720215

Token 2378: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -2.618001053633634e-05
    2. '_' → logprob: -10.625025749206543
    3. ' king' → logprob: -13.250025749206543
    4. '```' → logprob: -16.75002670288086
    5. 'queen' → logprob: -17.75002670288086
    6. '.king' → logprob: -18.25002670288086
    7. '
' → logprob: -18.37502670288086
    8. '{' → logprob: -18.50002670288086
    9. 'ki' → logprob: -19.00002670288086
    10. '(' → logprob: -19.37502670288086

Token 2379: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.00020473242329899222
    2. 'cells' → logprob: -8.500205039978027
    3. 'Cells' → logprob: -14.875205039978027
    4. '   ' → logprob: -15.625205039978027
    5. '```' → logprob: -15.875205039978027
    6. '
' → logprob: -16.00020408630371
    7. '.cells' → logprob: -16.12520408630371
    8. '_cell' → logprob: -16.25020408630371
    9. ' cells' → logprob: -16.25020408630371
    10. '_blocks' → logprob: -17.00020408630371

Token 2380: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.018182484433054924
    2. '-' → logprob: -4.018182277679443
    3. ')' → logprob: -10.768182754516602
    4. ' ' → logprob: -12.268182754516602
    5. '<|end|>' → logprob: -13.268182754516602
    6. '-set' → logprob: -13.768182754516602
    7. '-remove' → logprob: -13.768182754516602
    8. '<|end|>' → logprob: -14.143182754516602
    9. '-ex' → logprob: -14.893182754516602
    10. '   ' → logprob: -15.268182754516602

Token 2381: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0003398726985324174
    2. ' new' → logprob: -8.00033950805664
    3. '{' → logprob: -13.37533950805664
    4. '(new' → logprob: -14.12533950805664
    5. ' ' → logprob: -14.62533950805664
    6. 'old' → logprob: -15.12533950805664
    7. '   ' → logprob: -15.12533950805664
    8. '	new' → logprob: -15.12533950805664
    9. '
' → logprob: -15.62533950805664
    10. '  ' → logprob: -16.12533950805664

Token 2382: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04903285950422287
    2. 'king' → logprob: -3.0490329265594482
    3. 'open' → logprob: -7.924032688140869
    4. '_open' → logprob: -9.549033164978027
    5. ' king' → logprob: -12.049033164978027
    6. '{' → logprob: -13.799033164978027
    7. '_k' → logprob: -13.799033164978027
    8. 'new' → logprob: -14.049033164978027
    9. '.king' → logprob: -14.049033164978027
    10. '```' → logprob: -14.549033164978027

Token 2383: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -4.251091377227567e-05
    2. ' king' → logprob: -11.000042915344238
    3. '{' → logprob: -11.500042915344238
    4. '_' → logprob: -11.875042915344238
    5. 'new' → logprob: -12.000042915344238
    6. 'open' → logprob: -14.250042915344238
    7. '{
' → logprob: -15.125042915344238
    8. 'old' → logprob: -15.250042915344238
    9. 'kind' → logprob: -15.250042915344238
    10. '.king' → logprob: -15.250042915344238

Token 2384: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.0005872295005246997
    2. 'cells' → logprob: -7.500587463378906
    3. 'Cells' → logprob: -11.500587463378906
    4. '_moves' → logprob: -12.000587463378906
    5. '_c' → logprob: -12.500587463378906
    6. '   ' → logprob: -13.000587463378906
    7. 'new' → logprob: -13.625587463378906
    8. '_positions' → logprob: -13.750587463378906
    9. '.cells' → logprob: -13.875587463378906
    10. '_slide' → logprob: -14.125587463378906

Token 2385: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7178347706794739
    2. ')
' → logprob: -0.7178347706794739
    3. '           ' → logprob: -3.717834711074829
    4. ')
' → logprob: -9.84283447265625
    5. '               ' → logprob: -11.59283447265625
    6. '       ' → logprob: -11.59283447265625
    7. '                   ' → logprob: -12.34283447265625
    8. ')

' → logprob: -12.46783447265625
    9. '   ' → logprob: -12.84283447265625
    10. ')return' → logprob: -12.84283447265625

Token 2386: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011653638648567721
    2. '<|end|>' → logprob: -9.750116348266602
    3. ')' → logprob: -11.125116348266602
    4. '            
' → logprob: -11.500116348266602
    5. '<|end|>' → logprob: -12.125116348266602
    6. '		' → logprob: -12.250116348266602
    7. '
' → logprob: -12.750116348266602
    8. '```' → logprob: -12.750116348266602
    9. ',' → logprob: -13.125116348266602
    10. '               ' → logprob: -13.125116348266602

Token 2387: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013677753508090973
    2. 'results' → logprob: -4.388677597045898
    3. 'for' → logprob: -7.263677597045898
    4. 'new' → logprob: -8.263677597045898
    5. 'if' → logprob: -9.388677597045898
    6. '```' → logprob: -10.263677597045898
    7. ' for' → logprob: -10.388677597045898
    8. ' results' → logprob: -10.638677597045898
    9. 'state' → logprob: -12.013677597045898
    10. ' if' → logprob: -12.138677597045898

Token 2388: ' The' (ID: 623)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.2904236316680908
    2. '           ' → logprob: -1.9154236316680908
    3. 'new' → logprob: -3.040423631668091
    4. 'state' → logprob: -3.540423631668091
    5. 'if' → logprob: -3.790423631668091
    6. 'for' → logprob: -6.290423393249512
    7. 'states' → logprob: -7.415423393249512
    8. '               ' → logprob: -7.540423393249512
    9. '                   ' → logprob: -7.665423393249512
    10. '#' → logprob: -7.790423393249512

Token 2389: ' new' (ID: 620)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.9634196162223816
    2. 'results' → logprob: -0.9634196162223816
    3. 'new' → logprob: -1.8384196758270264
    4. '           ' → logprob: -2.9634196758270264
    5. 'king' → logprob: -4.838419437408447
    6. '   ' → logprob: -4.838419437408447
    7. 'if' → logprob: -5.713419437408447
    8. '#' → logprob: -6.213419437408447
    9. 'next' → logprob: -6.588419437408447
    10. 'open' → logprob: -7.213419437408447

Token 2390: ' open' (ID: 2494)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -1.1909626722335815
    2. 'state' → logprob: -1.3159626722335815
    3. '_open' → logprob: -1.8159626722335815
    4. '_results' → logprob: -2.440962791442871
    5. '_state' → logprob: -2.690962791442871
    6. 'open' → logprob: -2.690962791442871
    7. 'king' → logprob: -4.065962791442871
    8. '_r' → logprob: -4.940962791442871
    9. '_' → logprob: -5.065962791442871
    10. '           ' → logprob: -5.315962791442871

Token 2391: ' squares' (ID: 57269)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.1980704665184021
    2. 's' → logprob: -1.8230705261230469
    3. '=' → logprob: -4.823070526123047
    4. ' =' → logprob: -5.573070526123047
    5. '_set' → logprob: -6.573070526123047
    6. 'set' → logprob: -7.323070526123047
    7. '_spaces' → logprob: -7.323070526123047
    8. '```' → logprob: -7.448070526123047
    9. ')' → logprob: -7.823070526123047
    10. '   ' → logprob: -8.073070526123047

Token 2392: ' must' (ID: 2804)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28533339500427246
    2. ' =' → logprob: -1.4103333950042725
    3. '_set' → logprob: -6.410333633422852
    4. '_sorted' → logprob: -7.660333633422852
    5. '_positions' → logprob: -7.910333633422852
    6. '_tokens' → logprob: -8.410333633422852
    7. 'must' → logprob: -8.785333633422852
    8. 's' → logprob: -8.785333633422852
    9. '           ' → logprob: -8.910333633422852
    10. 'tokens' → logprob: -9.285333633422852

Token 2393: ' have' (ID: 679)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3739202320575714
    2. 'be' → logprob: -1.498920202255249
    3. 'have' → logprob: -2.498920202255249
    4. ' be' → logprob: -5.998920440673828
    5. 'len' → logprob: -6.623920440673828
    6. ' =' → logprob: -6.998920440673828
    7. ' have' → logprob: -7.498920440673828
    8. '==' → logprob: -7.998920440673828
    9. 'continue' → logprob: -8.123920440673828
    10. 'not' → logprob: -8.623920440673828

Token 2394: ' exactly' (ID: 9707)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.023228006437420845
    2. '2' → logprob: -4.273228168487549
    3. 'length' → logprob: -4.898228168487549
    4. 'exact' → logprob: -7.023228168487549
    5. 'two' → logprob: -7.648228168487549
    6. ' len' → logprob: -9.52322769165039
    7. '==' → logprob: -10.02322769165039
    8. ' exactly' → logprob: -10.52322769165039
    9. '=' → logprob: -11.89822769165039
    10. '```' → logprob: -11.89822769165039

Token 2395: ' two' (ID: 1920)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00013405199570115656
    2. 'two' → logprob: -9.125134468078613
    3. 'len' → logprob: -11.250134468078613
    4. ' ' → logprob: -11.750134468078613
    5. ' two' → logprob: -12.750134468078613
    6. 'exact' → logprob: -14.250134468078613
    7. '{' → logprob: -14.875134468078613
    8. '   ' → logprob: -16.500133514404297
    9. ' exactly' → logprob: -16.625133514404297
    10. 'length' → logprob: -16.625133514404297

Token 2396: ' cells' (ID: 11242)
  Prédit: ' cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cells' → logprob: -1.269029974937439
    2. ' if' → logprob: -1.644029974937439
    3. 'if' → logprob: -2.3940300941467285
    4. ')' → logprob: -2.3940300941467285
    5. 'cells' → logprob: -2.5190300941467285
    6. ' squares' → logprob: -3.1440300941467285
    7. ' elements' → logprob: -3.5190300941467285
    8. ' and' → logprob: -3.7690300941467285
    9. 's' → logprob: -3.8940300941467285
    10. '   ' → logprob: -4.2690300941467285

Token 2397: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008551576174795628
    2. ' and' → logprob: -5.758551597595215
    3. ' if' → logprob: -5.883551597595215
    4. 'and' → logprob: -7.383551597595215
    5. ',' → logprob: -7.758551597595215
    6. '<|end|>' → logprob: -7.758551597595215
    7. 'if' → logprob: -8.008551597595215
    8. '		' → logprob: -9.133551597595215
    9. ':
' → logprob: -9.383551597595215
    10. '
' → logprob: -9.383551597595215

Token 2398: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.314625690924004e-05
    2. ' if' → logprob: -10.625073432922363
    3. '<|end|>' → logprob: -11.375073432922363
    4. 'if' → logprob: -11.875073432922363
    5. '		' → logprob: -11.875073432922363
    6. ',' → logprob: -11.875073432922363
    7. '               ' → logprob: -12.875073432922363
    8. '[' → logprob: -12.875073432922363
    9. '```' → logprob: -12.875073432922363
    10. '       ' → logprob: -13.500073432922363

Token 2399: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026409445330500603
    2. 'if' (adapté à ' if') → logprob: -3.651409387588501
    3. ' if' → logprob: -9.276409149169922
    4. 'assert' → logprob: -12.026409149169922
    5. '
' → logprob: -12.526409149169922
    6. '               ' → logprob: -13.901409149169922
    7. '```' → logprob: -14.026409149169922
    8. '            
' → logprob: -14.151409149169922
    9. '          ' → logprob: -14.276409149169922
    10. '       ' → logprob: -14.401409149169922

Token 2400: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00012356207298580557
    2. ' len' → logprob: -9.000123977661133
    3. '(len' → logprob: -16.000123977661133
    4. 'new' → logprob: -17.625123977661133
    5. '   ' → logprob: -18.875123977661133
    6. ' ' → logprob: -22.375123977661133
    7. '  ' → logprob: -22.375123977661133
    8. '
' → logprob: -22.500123977661133
    9. '	len' → logprob: -22.500123977661133
    10. '=len' → logprob: -22.625123977661133

Token 2401: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -6.635164754698053e-05
    2. 'new' → logprob: -9.625066757202148
    3. '(' → logprob: -15.750066757202148
    4. '```' → logprob: -17.37506675720215
    5. ')new' → logprob: -17.50006675720215
    6. '=new' → logprob: -17.62506675720215
    7. ' new' → logprob: -17.87506675720215
    8. ' (' → logprob: -18.25006675720215
    9. '[new' → logprob: -19.37506675720215
    10. '(open' → logprob: -19.75006675720215

Token 2402: '_open' (ID: 26173)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.2541158199310303
    2. '_open' → logprob: -1.6291158199310303
    3. '(open' → logprob: -4.379116058349609
    4. '_new' → logprob: -4.504116058349609
    5. 'new' → logprob: -5.629116058349609
    6. 'open' → logprob: -7.629116058349609
    7. '(_' → logprob: -8.25411605834961
    8. '_(' → logprob: -9.62911605834961
    9. '(' → logprob: -10.00411605834961
    10. '```' → logprob: -10.00411605834961

Token 2403: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.24263234436511993
    2. ' ==' → logprob: -1.8676323890686035
    3. ')' → logprob: -3.4926323890686035
    4. ')==' → logprob: -3.4926323890686035
    5. '()==' → logprob: -9.492631912231445
    6. ']==' → logprob: -11.742631912231445
    7. '()' → logprob: -11.867631912231445
    8. '==
' → logprob: -12.242631912231445
    9. ' )' → logprob: -12.242631912231445
    10. '```' → logprob: -12.867631912231445

Token 2404: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06200969219207764
    2. ' ==' → logprob: -2.812009811401367
    3. '!=' → logprob: -11.062009811401367
    4. ')==' → logprob: -11.437009811401367
    5. '()==' → logprob: -11.937009811401367
    6. ' !=' → logprob: -12.687009811401367
    7. '==
' → logprob: -12.812009811401367
    8. '===' → logprob: -13.937009811401367
    9. ')' → logprob: -14.437009811401367
    10. '           ' → logprob: -14.812009811401367

Token 2405: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003360582049936056
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -14.500335693359375
    4. '```' → logprob: -17.375335693359375
    5. '           ' → logprob: -17.625335693359375
    6. '  ' → logprob: -18.000335693359375
    7. '       ' → logprob: -18.125335693359375
    8. '{' → logprob: -18.500335693359375
    9. '    ' → logprob: -18.750335693359375
    10. '     ' → logprob: -19.125335693359375

Token 2406: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.096126576769166e-05
    2. ' ' → logprob: -10.125041007995605
    3. '   ' → logprob: -15.000041007995605
    4. '```' → logprob: -15.500041007995605
    5. '{' → logprob: -16.62504005432129
    6. '۲' → logprob: -16.75004005432129
    7. '=' → logprob: -17.37504005432129
    8. '  ' → logprob: -18.12504005432129
    9. '           ' → logprob: -18.25004005432129
    10. '
' → logprob: -18.37504005432129

Token 2407: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4153989255428314
    2. ':
' → logprob: -1.2903989553451538
    3. '           ' → logprob: -3.7903988361358643
    4. '               ' → logprob: -3.9153988361358643
    5. ' and' → logprob: -4.165399074554443
    6. ' or' → logprob: -6.165399074554443
    7. '       ' → logprob: -6.165399074554443
    8. 'and' → logprob: -7.540399074554443
    9. '<|end|>' → logprob: -7.540399074554443
    10. '                       ' → logprob: -7.790399074554443

Token 2408: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011181884910911322
    2. 'continue' → logprob: -7.001118183135986
    3. ' continue' → logprob: -9.501118659973145
    4. '                   ' → logprob: -9.876118659973145
    5. '           ' → logprob: -10.001118659973145
    6. '                       ' → logprob: -10.876118659973145
    7. ':' → logprob: -12.001118659973145
    8. '	continue' → logprob: -13.251118659973145
    9. '       ' → logprob: -13.501118659973145
    10. '_continue' → logprob: -13.501118659973145

Token 2409: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.022207297384738922
    2. '               ' → logprob: -4.272207260131836
    3. '                   ' → logprob: -5.022207260131836
    4. ' continue' → logprob: -6.897207260131836
    5. '           ' → logprob: -8.022207260131836
    6. '	continue' → logprob: -10.647207260131836
    7. '                       ' → logprob: -10.772207260131836
    8. '   ' → logprob: -10.897207260131836
    9. '       ' → logprob: -11.147207260131836
    10. '```' → logprob: -12.897207260131836

Token 2410: ' Defensive' (ID: 194572)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.0013288103509694338
    2. '                   ' → logprob: -7.251328945159912
    3. '               ' → logprob: -7.501328945159912
    4. '           ' → logprob: -10.126328468322754
    5. 'return' → logprob: -11.501328468322754
    6. ' continue' → logprob: -11.626328468322754
    7. '                       ' → logprob: -13.001328468322754
    8. '```' → logprob: -13.126328468322754
    9. '   ' → logprob: -13.751328468322754
    10. '#' → logprob: -14.501328468322754

Token 2411: ':' (ID: 25)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.011983275413513184
    2. ' continue' → logprob: -4.511983394622803
    3. '               ' → logprob: -7.636983394622803
    4. ':
' → logprob: -8.261982917785645
    5. ':' → logprob: -9.761982917785645
    6. '           ' → logprob: -9.761982917785645
    7. '                   ' → logprob: -10.136982917785645
    8. 'return' → logprob: -10.761982917785645
    9. '_continue' → logprob: -12.011982917785645
    10. '   ' → logprob: -12.761982917785645

Token 2412: ' if' (ID: 538)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.004864411428570747
    2. '                   ' → logprob: -5.50486421585083
    3. '               ' → logprob: -7.75486421585083
    4. ' continue' → logprob: -8.004864692687988
    5. '   ' → logprob: -11.629864692687988
    6. '                       ' → logprob: -12.004864692687988
    7. '           ' → logprob: -12.629864692687988
    8. 'return' → logprob: -12.754864692687988
    9. '	continue' → logprob: -14.004864692687988
    10. '```' → logprob: -14.504864692687988

Token 2413: ' invalid' (ID: 15796)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.09720294177532196
    2. ' True' → logprob: -2.597203016281128
    3. 'len' → logprob: -4.597202777862549
    4. 'not' → logprob: -5.472202777862549
    5. ' not' → logprob: -6.722202777862549
    6. 'continue' → logprob: -6.722202777862549
    7. 'False' → logprob: -6.972202777862549
    8. 'new' → logprob: -8.222203254699707
    9. ' len' → logprob: -9.222203254699707
    10. ' continue' → logprob: -9.722203254699707

Token 2414: ',' (ID: 11)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7987127304077148
    2. '               ' → logprob: -1.6737127304077148
    3. ' continue' → logprob: -1.9237127304077148
    4. '                   ' → logprob: -1.9237127304077148
    5. ':
' → logprob: -2.923712730407715
    6. ':' → logprob: -4.423712730407715
    7. '           ' → logprob: -5.798712730407715
    8. '                ' → logprob: -8.423712730407715
    9. '                       ' → logprob: -8.423712730407715
    10. '                  ' → logprob: -8.548712730407715

Token 2415: ' skip' (ID: 16677)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.00843278132379055
    2. '                   ' → logprob: -5.008432865142822
    3. ' continue' → logprob: -6.508432865142822
    4. '               ' → logprob: -8.508432388305664
    5. '           ' → logprob: -12.133432388305664
    6. 'return' → logprob: -12.258432388305664
    7. '                       ' → logprob: -12.383432388305664
    8. '   ' → logprob: -12.383432388305664
    9. '	continue' → logprob: -12.633432388305664
    10. '```' → logprob: -13.883432388305664

Token 2416: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.34561604261398315
    2. 'continue' → logprob: -1.970616102218628
    3. '               ' → logprob: -2.595616102218628
    4. ' continue' → logprob: -2.595616102218628
    5. '                       ' → logprob: -6.345615863800049
    6. '	continue' → logprob: -7.095615863800049
    7. '           ' → logprob: -7.720615863800049
    8. '				' → logprob: -8.720616340637207
    9. '
' → logprob: -9.220616340637207
    10. '			' → logprob: -9.845616340637207

Token 2417: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2879141867160797
    2. '               ' → logprob: -1.6629141569137573
    3. 'continue' → logprob: -3.287914276123047
    4. ' continue' → logprob: -4.162914276123047
    5. '                       ' → logprob: -5.037914276123047
    6. '           ' → logprob: -7.662914276123047
    7. '                               ' → logprob: -8.287914276123047
    8. '	continue' → logprob: -9.162914276123047
    9. '                           ' → logprob: -9.662914276123047
    10. '       ' → logprob: -9.787914276123047

Token 2418: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.01123137678951025
    2. '               ' → logprob: -5.011231422424316
    3. '                   ' → logprob: -5.511231422424316
    4. ' continue' → logprob: -7.886231422424316
    5. '           ' → logprob: -9.636231422424316
    6. '	continue' → logprob: -11.511231422424316
    7. '```' → logprob: -12.261231422424316
    8. '                       ' → logprob: -12.386231422424316
    9. '   ' → logprob: -12.761231422424316
    10. '       ' → logprob: -13.886231422424316

Token 2419: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00026073982007801533
    2. '               ' → logprob: -8.875260353088379
    3. '
' → logprob: -9.625260353088379
    4. '       ' → logprob: -11.375260353088379
    5. '                   ' → logprob: -11.625260353088379
    6. '            
' → logprob: -11.625260353088379
    7. 'continue' → logprob: -11.875260353088379
    8. '		' → logprob: -12.125260353088379
    9. '<|end|>' → logprob: -12.875260353088379
    10. '   ' → logprob: -13.250260353088379

Token 2420: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016957100888248533
    2. '
' → logprob: -9.37516975402832
    3. '       ' → logprob: -10.12516975402832
    4. '               ' → logprob: -10.37516975402832
    5. '            
' → logprob: -12.50016975402832
    6. '		' → logprob: -12.87516975402832
    7. '                   ' → logprob: -13.00016975402832
    8. '   ' → logprob: -13.75016975402832
    9. 'continue' → logprob: -13.75016975402832
    10. 'for' → logprob: -14.37516975402832

Token 2421: ' results' (ID: 4376)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003773835487663746
    2. 'results' (adapté à ' results') → logprob: -5.8787736892700195
    3. 'state' → logprob: -7.3787736892700195
    4. 'new' → logprob: -8.75377368927002
    5. '       ' → logprob: -9.37877368927002
    6. 'moves' → logprob: -10.62877368927002
    7. 'result' → logprob: -10.75377368927002
    8. '```' → logprob: -11.25377368927002
    9. '               ' → logprob: -11.87877368927002
    10. '   ' → logprob: -11.87877368927002

Token 2422: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007282786536961794
    2. '.' → logprob: -7.250728130340576
    3. '.extend' → logprob: -11.250728607177734
    4. '.app' → logprob: -13.125728607177734
    5. '           ' → logprob: -13.375728607177734
    6. 'append' → logprob: -13.750728607177734
    7. 'Append' → logprob: -15.625728607177734
    8. '   ' → logprob: -15.625728607177734
    9. '               ' → logprob: -16.000728607177734
    10. '.Append' → logprob: -16.125728607177734

Token 2423: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09826048463582993
    2. ' (' → logprob: -2.8482604026794434
    3. '((' → logprob: -3.3482604026794434
    4. '   ' → logprob: -7.723260402679443
    5. ' ((' → logprob: -10.598260879516602
    6. '(
' → logprob: -10.598260879516602
    7. '       ' → logprob: -13.348260879516602
    8. '    ' → logprob: -13.848260879516602
    9. '           ' → logprob: -14.098260879516602
    10. '```' → logprob: -15.348260879516602

Token 2424: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -5.3120038501219824e-05
    2. ' new' → logprob: -9.875053405761719
    3. '(new' → logprob: -13.625053405761719
    4. '   ' → logprob: -14.875053405761719
    5. ')new' → logprob: -17.75005340576172
    6. '	new' → logprob: -17.87505340576172
    7. '           ' → logprob: -18.75005340576172
    8. '_new' → logprob: -18.87505340576172
    9. 'New' → logprob: -19.25005340576172
    10. '       ' → logprob: -19.50005340576172

Token 2425: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.011459089815616608
    2. '_' → logprob: -4.511458873748779
    3. 'r' → logprob: -9.386459350585938
    4. ' _' → logprob: -9.886459350585938
    5. '_k' → logprob: -10.636459350585938
    6. '_s' → logprob: -10.636459350585938
    7. '_
' → logprob: -10.636459350585938
    8. '_t' → logprob: -10.761459350585938
    9. '```' → logprob: -10.761459350585938
    10. '   ' → logprob: -11.011459350585938

Token 2426: ',new' (ID: 60564)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029937464743852615
    2. ',new' → logprob: -3.529937505722046
    3. ' ,' → logprob: -9.904937744140625
    4. ',
' → logprob: -10.154937744140625
    5. ',next' → logprob: -10.154937744140625
    6. ',n' → logprob: -10.654937744140625
    7. ',c' → logprob: -11.904937744140625
    8. '<|end|>' → logprob: -12.404937744140625
    9. '	' → logprob: -12.529937744140625
    10. ',user' → logprob: -12.654937744140625

Token 2427: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -6.253713218029588e-05
    2. 'c' → logprob: -10.625062942504883
    3. '_' → logprob: -11.125062942504883
    4. ',c' → logprob: -11.375062942504883
    5. ',' → logprob: -11.875062942504883
    6. '_,' → logprob: -12.875062942504883
    7. 'new' → logprob: -14.500062942504883
    8. '   ' → logprob: -14.750062942504883
    9. '-c' → logprob: -14.750062942504883
    10. '```' → logprob: -15.500062942504883

Token 2428: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004420266952365637
    2. ')' → logprob: -6.379420280456543
    3. ' ,' → logprob: -7.254420280456543
    4. '<|end|>' → logprob: -7.504420280456543
    5. ',)' → logprob: -8.004420280456543
    6. ',
' → logprob: -8.004420280456543
    7. '           ' → logprob: -9.004420280456543
    8. '   ' → logprob: -9.379420280456543
    9. ',,,' → logprob: -9.504420280456543
    10. ',,' → logprob: -9.879420280456543

Token 2429: 'awns' (ID: 115084)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.21773415803909302
    2. 'aw' → logprob: -2.8427340984344482
    3. 'ow' → logprob: -3.0927340984344482
    4. 'new' → logprob: -3.4677340984344482
    5. 'awn' → logprob: -4.092734336853027
    6. 'en' → logprob: -4.342734336853027
    7. 'awns' → logprob: -4.592734336853027
    8. '(open' → logprob: -5.592734336853027
    9. 'ro' → logprob: -6.092734336853027
    10. 'fro' → logprob: -6.092734336853027

Token 2430: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0022339976858347654
    2. ')' → logprob: -7.002233982086182
    3. ')_' → logprob: -7.877233982086182
    4. '_s' → logprob: -8.37723445892334
    5. '_' → logprob: -8.87723445892334
    6. '_f' → logprob: -9.12723445892334
    7. '_sets' → logprob: -9.37723445892334
    8. ')set' → logprob: -9.50223445892334
    9. '<|end|>' → logprob: -9.62723445892334
    10. 'set' → logprob: -10.00223445892334

Token 2431: ',f' (ID: 38733)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00428044656291604
    2. ')' → logprob: -6.3792805671691895
    3. ' ,' → logprob: -7.5042805671691895
    4. ',new' → logprob: -7.6292805671691895
    5. '<|end|>' → logprob: -7.8792805671691895
    6. '           ' → logprob: -8.004280090332031
    7. '   ' → logprob: -9.254280090332031
    8. ',
' → logprob: -9.629280090332031
    9. '))' → logprob: -9.754280090332031
    10. ',)' → logprob: -10.004280090332031

Token 2432: 'ro' (ID: 298)
  Prédit: 'ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.011107014492154121
    2. 'tuple' → logprob: -5.886106967926025
    3. 'rozen' → logprob: -6.261106967926025
    4. 'roz' → logprob: -6.261106967926025
    5. '{' → logprob: -6.636106967926025
    6. '(tuple' → logprob: -6.761106967926025
    7. '(' → logprob: -7.511106967926025
    8. 'rost' → logprob: -8.261107444763184
    9. 'fro' → logprob: -8.261107444763184
    10. '((' → logprob: -9.261107444763184

Token 2433: 'zens' (ID: 33107)
  Prédit: 'zens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zens' → logprob: -0.002057119505479932
    2. 'zes' → logprob: -7.002057075500488
    3. 'ro' → logprob: -7.377057075500488
    4. 'zen' → logprob: -8.377057075500488
    5. 'zos' → logprob: -8.877057075500488
    6. 'roz' → logprob: -10.127057075500488
    7. 'oz' → logprob: -10.127057075500488
    8. 'ros' → logprob: -10.752057075500488
    9. '```' → logprob: -11.377057075500488
    10. 'o' → logprob: -11.627057075500488

Token 2434: 'et' (ID: 292)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0015652115689590573
    2. 'et' → logprob: -7.501564979553223
    3. '```' → logprob: -8.251564979553223
    4. 'es' → logprob: -8.501564979553223
    5. '(set' → logprob: -8.876564979553223
    6. 'zes' → logprob: -9.251564979553223
    7. 'zet' → logprob: -9.501564979553223
    8. 'zens' → logprob: -9.876564979553223
    9. 'sets' → logprob: -10.376564979553223
    10. 'setz' → logprob: -10.376564979553223

Token 2435: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.0006965887732803822
    2. 'new' → logprob: -7.625696659088135
    3. '(sorted' → logprob: -8.500696182250977
    4. ')new' → logprob: -12.500696182250977
    5. ' new' → logprob: -14.875696182250977
    6. '[new' → logprob: -15.250696182250977
    7. '(tuple' → logprob: -15.750696182250977
    8. '(' → logprob: -16.000696182250977
    9. '((' → logprob: -16.000696182250977
    10. 'sorted' → logprob: -16.125696182250977

Token 2436: '_open' (ID: 26173)
  Prédit: '_open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_open' → logprob: -0.0030046850442886353
    2. 'open' → logprob: -6.003004550933838
    3. '(open' → logprob: -7.878004550933838
    4. 'Open' → logprob: -9.753005027770996
    5. '_new' → logprob: -10.128005027770996
    6. '(p' → logprob: -10.878005027770996
    7. '(new' → logprob: -12.128005027770996
    8. ')' → logprob: -12.378005027770996
    9. '_p' → logprob: -12.753005027770996
    10. 'pawn' → logprob: -13.253005027770996

Token 2437: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3489917516708374
    2. ')' → logprob: -1.2239917516708374
    3. ')))' → logprob: -8.723991394042969
    4. '))
' → logprob: -9.223991394042969
    5. ')}' → logprob: -9.723991394042969
    6. '   ' → logprob: -9.848991394042969
    7. '       ' → logprob: -10.348991394042969
    8. '[' → logprob: -10.598991394042969
    9. ')>' → logprob: -10.598991394042969
    10. '()))' → logprob: -10.723991394042969

Token 2438: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.891326367855072
    2. '```' → logprob: -1.6413264274597168
    3. '
' → logprob: -1.8913264274597168
    4. '    
' → logprob: -2.516326427459717
    5. '   ' → logprob: -3.016326427459717
    6. '  
' → logprob: -3.266326427459717
    7. ')' → logprob: -3.641326427459717
    8. '<|end|>' → logprob: -4.391326427459717
    9. ' 
' → logprob: -4.641326427459717
    10. '``' → logprob: -5.141326427459717

Token 2439: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4301168918609619
    2. '   ' → logprob: -1.055116891860962
    3. 'return' (adapté à ' return') → logprob: -7.180116653442383
    4. ')' → logprob: -8.930116653442383
    5. ' return' → logprob: -9.055116653442383
    6. '	return' → logprob: -9.180116653442383
    7. '
' → logprob: -9.555116653442383
    8. '    
' → logprob: -10.055116653442383
    9. '           ' → logprob: -10.305116653442383
    10. '	' → logprob: -10.305116653442383

Token 2440: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -1.981667537620524e-06
    2. '(results' → logprob: -13.750001907348633
    3. ' results' → logprob: -14.000001907348633
    4. '	results' → logprob: -19.125001907348633
    5. 'result' → logprob: -20.375001907348633
    6. 'Results' → logprob: -20.625001907348633
    7. '.results' → logprob: -20.875001907348633
    8. '_results' → logprob: -21.375001907348633
    9. 'res' → logprob: -21.750001907348633
    10. 'list' → logprob: -21.875001907348633

Token 2441: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2442: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7429729700088501
    2. '   ' → logprob: -1.24297297000885
    3. 'queue' → logprob: -2.1179728507995605
    4. 'from' → logprob: -3.1179728507995605
    5. 'visited' → logprob: -3.1179728507995605
    6. '#' → logprob: -4.4929728507995605
    7. 'return' → logprob: -4.7429728507995605
    8. 'stack' → logprob: -6.1179728507995605
    9. 'import' → logprob: -6.6179728507995605
    10. 'for' → logprob: -6.7429728507995605

Token 2443: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.250136137008667
    2. 'def' → logprob: -1.500136137008667
    3. 'from' → logprob: -1.625136137008667
    4. 'visited' → logprob: -1.625136137008667
    5. '#' (adapté à ' #') → logprob: -2.625136137008667
    6. 'queue' → logprob: -4.125136375427246
    7. 'start' → logprob: -5.750136375427246
    8. '
' → logprob: -5.875136375427246
    9. 'import' → logprob: -6.750136375427246
    10. 'seen' → logprob: -8.000136375427246

Token 2444: ' Initial' (ID: 9209)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6557278633117676
    2. '   ' → logprob: -1.6557278633117676
    3. 'queue' → logprob: -1.9057278633117676
    4. 'from' → logprob: -3.0307278633117676
    5. 'visited' → logprob: -3.0307278633117676
    6. '#' → logprob: -3.9057278633117676
    7. 'start' → logprob: -4.280727863311768
    8. 'initial' → logprob: -5.530727863311768
    9. 'stack' → logprob: -6.530727863311768
    10. 'return' → logprob: -6.780727863311768

Token 2445: ' state' (ID: 2608)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.3884355127811432
    2. 'state' → logprob: -1.1384354829788208
    3. '_' → logprob: -6.638435363769531
    4. 'king' → logprob: -8.763435363769531
    5. '_pos' → logprob: -10.513435363769531
    6. '_position' → logprob: -11.263435363769531
    7. 'position' → logprob: -11.388435363769531
    8. 'pos' → logprob: -11.513435363769531
    9. '_r' → logprob: -11.513435363769531
    10. ' state' → logprob: -12.138435363769531

Token 2446: ' creation' (ID: 15609)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.6801393628120422
    2. 'initial' → logprob: -0.8051393628120422
    3. '   ' → logprob: -3.3051393032073975
    4. ' initial' → logprob: -5.805139541625977
    5. 'start' → logprob: -6.055139541625977
    6. 'init' → logprob: -6.680139541625977
    7. '
' → logprob: -6.680139541625977
    8. ' state' → logprob: -7.305139541625977
    9. ' =' → logprob: -7.805139541625977
    10. 'king' → logprob: -8.430139541625977

Token 2447: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6969583630561829
    2. 'initial' → logprob: -1.446958303451538
    3. 'state' → logprob: -1.571958303451538
    4. '
' → logprob: -2.946958303451538
    5. '    
' → logprob: -5.321958541870117
    6. ' initial' → logprob: -7.696958541870117
    7. 'start' → logprob: -8.071958541870117
    8. 'init' → logprob: -8.196958541870117
    9. '```' → logprob: -8.821958541870117
    10. ' state' → logprob: -9.446958541870117

Token 2448: '   ' (ID: 271)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.26264113187789917
    2. 'state' → logprob: -2.012641191482544
    3. '   ' → logprob: -2.387641191482544
    4. '
' → logprob: -5.637640953063965
    5. 'init' → logprob: -6.887640953063965
    6. 'start' → logprob: -8.012640953063965
    7. ' initial' → logprob: -8.012640953063965
    8. '    
' → logprob: -9.387640953063965
    9. '```' → logprob: -9.637640953063965
    10. 'king' → logprob: -10.512640953063965

Token 2449: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' (adapté à ' initial') → logprob: -0.5162566304206848
    2. 'state' → logprob: -1.01625657081604
    3. '   ' → logprob: -3.89125657081604
    4. 'start' → logprob: -4.141256809234619
    5. 'init' → logprob: -5.516256809234619
    6. 'king' → logprob: -7.891256809234619
    7. ' initial' → logprob: -8.641256332397461
    8. 'visited' → logprob: -9.016256332397461
    9. '
' → logprob: -9.391256332397461
    10. '```' → logprob: -9.641256332397461

Token 2450: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.01811622828245163
    2. '_' → logprob: -4.643115997314453
    3. 'state' → logprob: -5.393115997314453
    4. ' =' → logprob: -6.143115997314453
    5. '=' → logprob: -6.643115997314453
    6. '_token' → logprob: -8.768115997314453
    7. '_r' → logprob: -9.893115997314453
    8. ' _' → logprob: -10.643115997314453
    9. '_states' → logprob: -10.643115997314453
    10. ' state' → logprob: -11.268115997314453

Token 2451: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759912729263306
    2. ' =' → logprob: -0.8259912729263306
    3. '=
' → logprob: -10.7009916305542
    4. '=(' → logprob: -11.7009916305542
    5. ')' → logprob: -12.2009916305542
    6. ' =
' → logprob: -12.4509916305542
    7. '   ' → logprob: -12.4509916305542
    8. ' =(' → logprob: -12.7009916305542
    9. ',' → logprob: -13.4509916305542
    10. '=(-' → logprob: -14.2009916305542

Token 2452: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010353106772527099
    2. ' (' → logprob: -7.126035213470459
    3. '   ' → logprob: -8.376035690307617
    4. '  ' → logprob: -14.626035690307617
    5. '(
' → logprob: -16.751035690307617
    6. '((' → logprob: -17.001035690307617
    7. ' ' → logprob: -17.001035690307617
    8. '    ' → logprob: -17.376035690307617
    9. '(cr' → logprob: -18.501035690307617
    10. 'kr' → logprob: -18.751035690307617

Token 2453: 'kr' (ID: 7316)
  Prédit: 'kr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kr' → logprob: -3.531315314830863e-06
    2. '   ' → logprob: -12.750003814697266
    3. ' kr' → logprob: -14.875003814697266
    4. '(' → logprob: -16.500003814697266
    5. 'Kr' → logprob: -17.875003814697266
    6. 'cr' → logprob: -19.625003814697266
    7. '  ' → logprob: -19.625003814697266
    8. 'krat' → logprob: -19.875003814697266
    9. '.kr' → logprob: -20.125003814697266
    10. '    
' → logprob: -20.250003814697266

Token 2454: ',k' (ID: 35155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04448312148451805
    2. ',k' → logprob: -3.169483184814453
    3. ',
' → logprob: -7.169483184814453
    4. ' ,' → logprob: -7.669483184814453
    5. '   ' → logprob: -9.169483184814453
    6. ',c' → logprob: -9.794483184814453
    7. '<|end|>' → logprob: -10.669483184814453
    8. ' ' → logprob: -11.544483184814453
    9. ',n' → logprob: -12.419483184814453
    10. '  ' → logprob: -12.419483184814453

Token 2455: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.191489642835222e-05
    2. ',c' → logprob: -10.250041961669922
    3. '	c' → logprob: -12.875041961669922
    4. ',' → logprob: -13.875041961669922
    5. ' ' → logprob: -13.875041961669922
    6. ' c' → logprob: -14.250041961669922
    7. '   ' → logprob: -14.875041961669922
    8. '  ' → logprob: -15.375041961669922
    9. '_c' → logprob: -15.375041961669922
    10. '<|end|>' → logprob: -15.625041961669922

Token 2456: ',f' (ID: 38733)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2381761521100998
    2. ',p' → logprob: -1.6131761074066162
    3. ',f' → logprob: -4.488176345825195
    4. ' ,' → logprob: -7.363176345825195
    5. ',
' → logprob: -7.988176345825195
    6. '   ' → logprob: -8.738176345825195
    7. ')' → logprob: -9.738176345825195
    8. ',len' → logprob: -10.613176345825195
    9. ',P' → logprob: -10.738176345825195
    10. ',,' → logprob: -10.988176345825195

Token 2457: 'ro' (ID: 298)
  Prédit: 'ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -6.551721889991313e-05
    2. 'fro' → logprob: -10.375065803527832
    3. 'roz' → logprob: -11.000065803527832
    4. 'ros' → logprob: -11.500065803527832
    5. 'rom' → logprob: -12.500065803527832
    6. 'rost' → logprob: -13.000065803527832
    7. '```' → logprob: -14.125065803527832
    8. 'rozen' → logprob: -14.625065803527832
    9. 'rox' → logprob: -16.500064849853516
    10. 'oz' → logprob: -17.000064849853516

Token 2458: 'zens' (ID: 33107)
  Prédit: 'zens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zens' → logprob: -2.7372048862162046e-05
    2. 'zes' → logprob: -10.750027656555176
    3. 'zen' → logprob: -12.500027656555176
    4. 'ens' → logprob: -13.125027656555176
    5. '```' → logprob: -17.00002670288086
    6. 'ze' → logprob: -17.12502670288086
    7. 'enz' → logprob: -17.12502670288086
    8. 'zent' → logprob: -17.25002670288086
    9. 'z' → logprob: -18.12502670288086
    10. 'oz' → logprob: -18.62502670288086

Token 2459: 'et' (ID: 292)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.16459031403064728
    2. 'et' → logprob: -1.9145903587341309
    3. 'es' → logprob: -6.664590358734131
    4. 's' → logprob: -7.164590358734131
    5. '```' → logprob: -7.414590358734131
    6. 'erset' → logprob: -7.914590358734131
    7. 'est' → logprob: -8.289589881896973
    8. 'ets' → logprob: -8.414589881896973
    9. '   ' → logprob: -8.539589881896973
    10. 'zens' → logprob: -9.164589881896973

Token 2460: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0001617035741219297
    2. 'p' → logprob: -8.750162124633789
    3. '(sorted' → logprob: -13.500162124633789
    4. '(' → logprob: -14.000162124633789
    5. 'pawn' → logprob: -15.125162124633789
    6. '((' → logprob: -15.500162124633789
    7. ')' → logprob: -15.750162124633789
    8. '(
' → logprob: -16.37516212463379
    9. 'sorted' → logprob: -17.12516212463379
    10. ')p' → logprob: -17.62516212463379

Token 2461: 'awns' (ID: 115084)
  Prédit: 'awns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'awns' → logprob: -0.0002752790169324726
    2. '(p' → logprob: -8.500275611877441
    3. 'aw' → logprob: -10.875275611877441
    4. '(' → logprob: -11.625275611877441
    5. '(w' → logprob: -12.250275611877441
    6. '(a' → logprob: -12.375275611877441
    7. 'awn' → logprob: -12.500275611877441
    8. '(op' → logprob: -12.500275611877441
    9. ')' → logprob: -12.625275611877441
    10. '{}' → logprob: -13.125275611877441

Token 2462: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7654149532318115
    2. '_set' → logprob: -1.6404149532318115
    3. '(p' → logprob: -1.7654149532318115
    4. '),' → logprob: -3.1404149532318115
    5. ')_' → logprob: -3.6404149532318115
    6. ')set' → logprob: -3.8904149532318115
    7. '(s' → logprob: -4.515415191650391
    8. '(' → logprob: -4.515415191650391
    9. '((' → logprob: -4.765415191650391
    10. '{' → logprob: -4.890415191650391

Token 2463: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.001570683903992176
    2. ' tuple' → logprob: -6.501570701599121
    3. '(tuple' → logprob: -9.876570701599121
    4. 'fro' → logprob: -11.251570701599121
    5. '   ' → logprob: -12.876570701599121
    6. '(' → logprob: -14.876570701599121
    7. '_tuple' → logprob: -15.751570701599121
    8. 'Tuple' → logprob: -15.751570701599121
    9. ')' → logprob: -15.876570701599121
    10. 'tu' → logprob: -16.126569747924805

Token 2464: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.00011045700375689194
    2. 'sorted' → logprob: -9.125110626220703
    3. '(' → logprob: -14.750110626220703
    4. '[' → logprob: -15.250110626220703
    5. ' (' → logprob: -15.250110626220703
    6. ')' → logprob: -15.375110626220703
    7. ' sorted' → logprob: -15.750110626220703
    8. '(s' → logprob: -16.250110626220703
    9. '_sorted' → logprob: -16.625110626220703
    10. '[(' → logprob: -17.250110626220703

Token 2465: '(open' (ID: 62785)
  Prédit: '(open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(open' → logprob: -0.004121619276702404
    2. 'open' → logprob: -5.504121780395508
    3. '(list' → logprob: -10.129121780395508
    4. '(' → logprob: -13.629121780395508
    5. 'list' → logprob: -14.129121780395508
    6. '((' → logprob: -14.379121780395508
    7. '(tuple' → logprob: -15.379121780395508
    8. '```' → logprob: -15.879121780395508
    9. '	open' → logprob: -16.379121780395508
    10. '=open' → logprob: -16.504121780395508

Token 2466: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -7.862962229410186e-05
    2. '(s' → logprob: -10.000078201293945
    3. 's' → logprob: -10.750078201293945
    4. 'open' → logprob: -11.750078201293945
    5. '(open' → logprob: -14.000078201293945
    6. '_spaces' → logprob: -14.125078201293945
    7. '(_' → logprob: -14.500078201293945
    8. '   ' → logprob: -15.000078201293945
    9. 'Squares' → logprob: -15.125078201293945
    10. ')' → logprob: -15.625078201293945

Token 2467: 'quares' (ID: 110764)
  Prédit: 'quares'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quares' → logprob: -0.00037251986213959754
    2. 'q' → logprob: -9.375372886657715
    3. '_' → logprob: -9.875372886657715
    4. '```' → logprob: -10.250372886657715
    5. 'qu' → logprob: -10.625372886657715
    6. '_s' → logprob: -10.625372886657715
    7. 'ques' → logprob: -10.875372886657715
    8. ')' → logprob: -11.250372886657715
    9. 's' → logprob: -11.250372886657715
    10. '((' → logprob: -11.500372886657715

Token 2468: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.06490401178598404
    2. '))' → logprob: -2.814903974533081
    3. ')))
' → logprob: -5.93990421295166
    4. '))
' → logprob: -8.68990421295166
    5. ')' → logprob: -10.18990421295166
    6. '())))' → logprob: -10.81490421295166
    7. '))))' → logprob: -10.93990421295166
    8. '   ' → logprob: -11.18990421295166
    9. ' ' → logprob: -11.43990421295166
    10. ')))

' → logprob: -11.81490421295166

Token 2469: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.509070634841919
    2. '   ' → logprob: -1.009070634841919
    3. 'queue' → logprob: -3.884070634841919
    4. '```' → logprob: -5.13407039642334
    5. 'def' → logprob: -6.13407039642334
    6. '    
' → logprob: -6.25907039642334
    7. 'visited' → logprob: -6.75907039642334
    8. 'state' → logprob: -7.38407039642334
    9. 'stack' → logprob: -7.63407039642334
    10. 'next' → logprob: -8.25907039642334

Token 2470: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.8103858232498169
    2. 'visited' → logprob: -1.310385823249817
    3. 'from' → logprob: -1.560385823249817
    4. '   ' → logprob: -2.9353857040405273
    5. '
' → logprob: -4.435385704040527
    6. '#' (adapté à ' #') → logprob: -5.185385704040527
    7. 'def' → logprob: -5.810385704040527
    8. 'q' → logprob: -6.685385704040527
    9. 'seen' → logprob: -9.060385704040527
    10. 'import' → logprob: -9.060385704040527

Token 2471: ' BFS' (ID: 190016)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.011943807825446129
    2. 'import' → logprob: -5.011943817138672
    3. 'visited' → logprob: -5.761943817138672
    4. '   ' → logprob: -6.261943817138672
    5. '#' → logprob: -9.636943817138672
    6. 'queue' → logprob: -9.636943817138672
    7. '
' → logprob: -11.136943817138672
    8. 'seen' → logprob: -11.886943817138672
    9. '```' → logprob: -11.886943817138672
    10. ' from' → logprob: -13.136943817138672

Token 2472: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.518281102180481
    2. 'from' → logprob: -1.518281102180481
    3. '
' → logprob: -2.2682809829711914
    4. 'queue' → logprob: -2.5182809829711914
    5. 'visited' → logprob: -7.893280982971191
    6. '```' → logprob: -7.893280982971191
    7. 'import' → logprob: -8.643280982971191
    8. '    
' → logprob: -8.893280982971191
    9. ' from' → logprob: -9.018280982971191
    10. ' queue' → logprob: -10.143280982971191

Token 2473: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.22018368542194366
    2. 'solve' → logprob: -1.8451837301254272
    3. 'expl' → logprob: -3.8451836109161377
    4. 'search' → logprob: -5.345183849334717
    5. 'import' → logprob: -5.345183849334717
    6. ' find' → logprob: -5.845183849334717
    7. 'complete' → logprob: -6.470183849334717
    8. ' solve' → logprob: -6.845183849334717
    9. '```' → logprob: -7.845183849334717
    10. '
' → logprob: -7.845183849334717

Token 2474: ' minimal' (ID: 19957)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.48340868949890137
    2. 'steps' → logprob: -2.1084086894989014
    3. 'minimum' → logprob: -2.8584086894989014
    4. 'short' → logprob: -3.1084086894989014
    5. ' the' → logprob: -3.3584086894989014
    6. 'queue' → logprob: -3.4834086894989014
    7. ' shortest' → logprob: -4.1084089279174805
    8. 'minimal' → logprob: -4.3584089279174805
    9. '
' → logprob: -4.4834089279174805
    10. 'min' → logprob: -4.6084089279174805

Token 2475: ' moves' (ID: 19523)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.4660152196884155
    2. 'steps' → logprob: -1.4660152196884155
    3. '   ' → logprob: -2.591015338897705
    4. 'from' → logprob: -4.216015338897705
    5. 'distance' → logprob: -4.466015338897705
    6. ' queue' → logprob: -4.591015338897705
    7. 'depth' → logprob: -4.841015338897705
    8. 'import' → logprob: -5.216015338897705
    9. '```' → logprob: -5.341015338897705
    10. 'moves' → logprob: -5.591015338897705

Token 2476: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1749526560306549
    2. '
' → logprob: -1.9249526262283325
    3. 'from' → logprob: -4.424952507019043
    4. 'queue' → logprob: -6.549952507019043
    5. 'import' → logprob: -7.549952507019043
    6. '```' → logprob: -7.799952507019043
    7. '    
' → logprob: -9.049952507019043
    8. ' from' → logprob: -9.424952507019043
    9. 'visited' → logprob: -10.174952507019043
    10. ' queue' → logprob: -11.299952507019043

Token 2477: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09323319792747498
    2. '
' → logprob: -2.593233108520508
    3. 'queue' → logprob: -4.968233108520508
    4. 'from' → logprob: -5.343233108520508
    5. 'visited' → logprob: -6.343233108520508
    6. 'import' → logprob: -8.343233108520508
    7. '    
' → logprob: -8.468233108520508
    8. '```' → logprob: -9.093233108520508
    9. ' queue' → logprob: -9.468233108520508
    10. ' from' → logprob: -10.843233108520508

Token 2478: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4158603847026825
    2. '   ' → logprob: -1.4158604145050049
    3. 'visited' → logprob: -2.415860414505005
    4. 'queue' → logprob: -5.165860176086426
    5. '
' → logprob: -6.165860176086426
    6. 'import' → logprob: -8.165860176086426
    7. '```' → logprob: -9.415860176086426
    8. 'seen' → logprob: -10.915860176086426
    9. ' from' → logprob: -11.040860176086426
    10. '    
' → logprob: -12.415860176086426

Token 2479: ' Use' (ID: 7649)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.33383387327194214
    2. 'queue' → logprob: -1.583833932876587
    3. '   ' → logprob: -3.083833932876587
    4. 'from' → logprob: -3.583833932876587
    5. '
' → logprob: -5.333833694458008
    6. 'seen' → logprob: -8.583833694458008
    7. 'q' → logprob: -10.208833694458008
    8. '    
' → logprob: -10.833833694458008
    9. 'import' → logprob: -12.333833694458008
    10. 'que' → logprob: -12.583833694458008

Token 2480: ' a' (ID: 261)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5788525342941284
    2. 'deque' → logprob: -0.8288525342941284
    3. ' deque' → logprob: -6.328852653503418
    4. '```' → logprob: -7.328852653503418
    5. '   ' → logprob: -8.328852653503418
    6. 'import' → logprob: -8.703852653503418
    7. ' from' → logprob: -10.203852653503418
    8. 'collections' → logprob: -11.453852653503418
    9. '
' → logprob: -11.953852653503418
    10. 'queue' → logprob: -12.203852653503418

Token 2481: ' queue' (ID: 13661)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.03456508740782738
    2. ' deque' → logprob: -3.784564971923828
    3. 'from' → logprob: -4.534564971923828
    4. 'queue' → logprob: -8.284564971923828
    5. 'import' → logprob: -8.909564971923828
    6. ' queue' → logprob: -10.034564971923828
    7. 'collections' → logprob: -10.659564971923828
    8. ' from' → logprob: -10.784564971923828
    9. 'b' → logprob: -11.034564971923828
    10. 'set' → logprob: -11.284564971923828

Token 2482: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5467711091041565
    2. '=' → logprob: -1.0467710494995117
    3. '   ' → logprob: -3.1717710494995117
    4. 'from' → logprob: -3.7967710494995117
    5. '(queue' → logprob: -6.421771049499512
    6. 'deque' → logprob: -6.421771049499512
    7. 'import' → logprob: -7.171771049499512
    8. 'queue' → logprob: -7.296771049499512
    9. '
' → logprob: -7.421771049499512
    10. ' from' → logprob: -8.671771049499512

Token 2483: ' a' (ID: 261)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.011815168894827366
    2. 'set' → logprob: -4.511815071105957
    3. ' visited' → logprob: -7.511815071105957
    4. 'seen' → logprob: -9.386815071105957
    5. '
' → logprob: -9.511815071105957
    6. 'import' → logprob: -10.136815071105957
    7. '```' → logprob: -11.136815071105957
    8. '   ' → logprob: -12.511815071105957
    9. ' set' → logprob: -12.886815071105957
    10. 'deque' → logprob: -13.761815071105957

Token 2484: ' visited' (ID: 18416)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.09421217441558838
    2. 'visited' → logprob: -3.094212055206299
    3. 'deque' → logprob: -3.219212055206299
    4. '
' → logprob: -5.969212055206299
    5. '```' → logprob: -7.219212055206299
    6. 'from' → logprob: -7.344212055206299
    7. 'import' → logprob: -7.594212055206299
    8. ' set' → logprob: -10.219212532043457
    9. 'seen' → logprob: -10.469212532043457
    10. '=set' → logprob: -10.844212532043457

Token 2485: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.7410061359405518
    2. ' =' → logprob: -0.8660061359405518
    3. '_states' → logprob: -3.1160061359405518
    4. '=set' → logprob: -3.8660061359405518
    5. '
' → logprob: -4.366005897521973
    6. '=' → logprob: -4.366005897521973
    7. '_set' → logprob: -5.866005897521973
    8. ' ' → logprob: -6.116005897521973
    9. 'import' → logprob: -6.491005897521973
    10. ')' → logprob: -6.991005897521973

Token 2486: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47206637263298035
    2. '   ' → logprob: -1.0970664024353027
    3. 'visited' → logprob: -3.8470664024353027
    4. 'queue' → logprob: -4.097066402435303
    5. 'from' → logprob: -6.222066402435303
    6. '```' → logprob: -6.972066402435303
    7. 'import' → logprob: -7.722066402435303
    8. ' queue' → logprob: -8.222065925598145
    9. '    
' → logprob: -8.347065925598145
    10. '(queue' → logprob: -8.972065925598145

Token 2487: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16554684937000275
    2. '
' → logprob: -2.5405468940734863
    3. 'visited' → logprob: -3.4155468940734863
    4. 'from' → logprob: -3.5405468940734863
    5. 'import' → logprob: -5.165546894073486
    6. 'queue' → logprob: -5.415546894073486
    7. '```' → logprob: -7.165546894073486
    8. ' from' → logprob: -7.540546894073486
    9. ' visited' → logprob: -9.040546417236328
    10. ' queue' → logprob: -9.415546417236328

Token 2488: ' visited' (ID: 18416)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.38813045620918274
    2. 'visited' (adapté à ' visited') → logprob: -1.3881304264068604
    3. 'from' → logprob: -3.1381304264068604
    4. '
' → logprob: -3.8881304264068604
    5. '   ' → logprob: -5.3881306648254395
    6. '```' → logprob: -6.0131306648254395
    7. ' queue' → logprob: -7.3881306648254395
    8. 'q' → logprob: -8.513130187988281
    9. '``' → logprob: -8.888130187988281
    10. ' visited' → logprob: -9.263130187988281

Token 2489: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.578843891620636
    2. ' =' → logprob: -0.828843891620636
    3. '=set' → logprob: -6.32884407043457
    4. '.add' → logprob: -6.82884407043457
    5. '<|end|>' → logprob: -11.95384407043457
    6. '```' → logprob: -11.95384407043457
    7. 'add' → logprob: -12.20384407043457
    8. '.setdefault' → logprob: -12.45384407043457
    9. ')' → logprob: -13.20384407043457
    10. '=
' → logprob: -13.57884407043457

Token 2490: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0005978313274681568
    2. ' set' → logprob: -8.000597953796387
    3. '{' → logprob: -8.250597953796387
    4. '=set' → logprob: -13.750597953796387
    5. ' {' → logprob: -16.37559700012207
    6. '	set' → logprob: -17.62559700012207
    7. '(set' → logprob: -17.75059700012207
    8. '   ' → logprob: -20.25059700012207
    9. '```' → logprob: -20.25059700012207
    10. '{
' → logprob: -20.25059700012207

Token 2491: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5142390727996826
    2. '()' → logprob: -1.0142390727996826
    3. '([' → logprob: -3.7642390727996826
    4. '(initial' → logprob: -4.639239311218262
    5. '   ' → logprob: -5.639239311218262
    6. '([(' → logprob: -6.264239311218262
    7. ' =' → logprob: -8.389239311218262
    8. ',' → logprob: -9.014239311218262
    9. '(' → logprob: -9.139239311218262
    10. '()

' → logprob: -9.139239311218262

Token 2492: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49619606137275696
    2. 'queue' → logprob: -0.9961960315704346
    3. '
' → logprob: -4.371196269989014
    4. ' queue' → logprob: -5.246196269989014
    5. '```' → logprob: -5.746196269989014
    6. 'from' → logprob: -7.621196269989014
    7. '    
' → logprob: -9.621195793151855
    8. 'q' → logprob: -9.996195793151855
    9. '``' → logprob: -9.996195793151855
    10. '	queue' → logprob: -10.121195793151855

Token 2493: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.002057119505479932
    2. 'from' → logprob: -6.752057075500488
    3. '   ' → logprob: -7.252057075500488
    4. 'q' → logprob: -9.502057075500488
    5. '
' → logprob: -9.752057075500488
    6. '```' → logprob: -10.627057075500488
    7. ' queue' → logprob: -10.877057075500488
    8. 'que' → logprob: -14.002057075500488
    9. '``' → logprob: -14.877057075500488
    10. 'import' → logprob: -15.377057075500488

Token 2494: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7165268063545227
    2. '=' → logprob: -1.216526746749878
    3. '.append' → logprob: -1.591526746749878
    4. '.' → logprob: -4.841526985168457
    5. ' .' → logprob: -6.716526985168457
    6. '.add' → logprob: -7.341526985168457
    7. '   ' → logprob: -7.591526985168457
    8. ')' → logprob: -7.841526985168457
    9. '.pop' → logprob: -8.466526985168457
    10. '.enqueue' → logprob: -8.966526985168457

Token 2495: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.00020425561524461955
    2. ' deque' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.250204086303711
    4. 'collections' → logprob: -16.50020408630371
    5. '[(' → logprob: -17.37520408630371
    6. '```' → logprob: -17.87520408630371
    7. 'Deque' → logprob: -19.50020408630371
    8. '
' → logprob: -20.00020408630371
    9. ' ' → logprob: -20.12520408630371
    10. 'de' → logprob: -20.50020408630371

Token 2496: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.7595741748809814
    2. '()' → logprob: -0.8845741748809814
    3. '()
' → logprob: -2.7595741748809814
    4. '([' → logprob: -3.2595741748809814
    5. '([
' → logprob: -4.759573936462402
    6. '(initial' → logprob: -5.259573936462402
    7. '(' → logprob: -6.009573936462402
    8. '[(' → logprob: -7.759573936462402
    9. '()

' → logprob: -8.134573936462402
    10. '[' → logprob: -9.134573936462402

Token 2497: '   ' (ID: 271)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.3715023100376129
    2. '.append' → logprob: -1.8715022802352905
    3. '   ' → logprob: -2.62150239944458
    4. '(queue' → logprob: -3.37150239944458
    5. 'append' → logprob: -4.24650239944458
    6. 'state' → logprob: -5.24650239944458
    7. '.enqueue' → logprob: -5.37150239944458
    8. 'initial' → logprob: -5.37150239944458
    9. 'enqueue' → logprob: -5.49650239944458
    10. '```' → logprob: -5.49650239944458

Token 2498: ' visited' (ID: 18416)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.00014180023572407663
    2. '   ' → logprob: -9.625142097473145
    3. 'visited' (adapté à ' visited') → logprob: -10.625142097473145
    4. '
' → logprob: -11.000142097473145
    5. 'initial' → logprob: -11.000142097473145
    6. 'state' → logprob: -11.500142097473145
    7. ' queue' → logprob: -12.125142097473145
    8. '```' → logprob: -14.000142097473145
    9. '(queue' → logprob: -14.750142097473145
    10. '    
' → logprob: -14.875142097473145

Token 2499: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0019944203086197376
    2. '.' → logprob: -6.251994609832764
    3. ').' → logprob: -10.751994132995605
    4. '=' → logprob: -11.251994132995605
    5. 'add' → logprob: -11.376994132995605
    6. '.append' → logprob: -12.126994132995605
    7. '```' → logprob: -12.501994132995605
    8. '().' → logprob: -12.751994132995605
    9. ' .' → logprob: -13.001994132995605
    10. '_add' → logprob: -13.626994132995605

Token 2500: '(initial' (ID: 63456)
  Prédit: '(initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(initial' → logprob: -0.005363482981920242
    2. '(' → logprob: -5.380363464355469
    3. '((' → logprob: -7.255363464355469
    4. '(
' → logprob: -10.630363464355469
    5. 'initial' → logprob: -11.505363464355469
    6. ' (' → logprob: -14.005363464355469
    7. '```' → logprob: -15.380363464355469
    8. '(import' → logprob: -15.755363464355469
    9. '(current' → logprob: -15.880363464355469
    10. '(in' → logprob: -15.880363464355469

Token 2501: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.008878801949322224
    2. '_token' → logprob: -4.758878707885742
    3. 'state' → logprob: -9.383878707885742
    4. ')' → logprob: -9.758878707885742
    5. ')_' → logprob: -9.758878707885742
    6. '_states' → logprob: -10.883878707885742
    7. '```' → logprob: -11.508878707885742
    8. '_status' → logprob: -12.133878707885742
    9. '_' → logprob: -12.133878707885742
    10. '_tokens' → logprob: -12.383878707885742

Token 2502: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07909224927425385
    2. ')
' → logprob: -2.579092264175415
    3. ',' → logprob: -9.329092025756836
    4. '   ' → logprob: -10.204092025756836
    5. ',)' → logprob: -10.329092025756836
    6. ',
' → logprob: -11.079092025756836
    7. ' )' → logprob: -11.954092025756836
    8. ',)
' → logprob: -12.329092025756836
    9. ')
' → logprob: -12.454092025756836
    10. '
' → logprob: -12.829092025756836

Token 2503: '   ' (ID: 271)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.000747802434489131
    2. '   ' → logprob: -7.8757476806640625
    3. '```' → logprob: -8.125747680664062
    4. '
' → logprob: -10.000747680664062
    5. ' queue' → logprob: -11.250747680664062
    6. '(queue' → logprob: -11.875747680664062
    7. '	queue' → logprob: -12.625747680664062
    8. '``' → logprob: -13.250747680664062
    9. '    
' → logprob: -14.250747680664062
    10. ')' → logprob: -15.875747680664062

Token 2504: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -4.572941179503687e-05
    2. '```' → logprob: -10.750045776367188
    3. '   ' → logprob: -10.875045776367188
    4. ' queue' → logprob: -13.000045776367188
    5. '(queue' → logprob: -13.125045776367188
    6. '``' → logprob: -14.500045776367188
    7. '
' → logprob: -15.000045776367188
    8. '    
' → logprob: -16.625045776367188
    9. '`' → logprob: -16.875045776367188
    10. '	queue' → logprob: -17.375045776367188

Token 2505: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002752214903011918
    2. '.' → logprob: -6.502752304077148
    3. '.p' → logprob: -6.877752304077148
    4. '.extend' → logprob: -9.002752304077148
    5. '.put' → logprob: -10.377752304077148
    6. '.enqueue' → logprob: -10.377752304077148
    7. '_append' → logprob: -12.002752304077148
    8. '.app' → logprob: -12.377752304077148
    9. ').' → logprob: -12.502752304077148
    10. '.push' → logprob: -12.502752304077148

Token 2506: '(' (ID: 7)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.28313636779785156
    2. '(initial' → logprob: -2.0331363677978516
    3. '(' → logprob: -2.1581363677978516
    4. ' (' → logprob: -9.533136367797852
    5. '(
' → logprob: -11.283136367797852
    6. 'initial' → logprob: -11.658136367797852
    7. '   ' → logprob: -11.908136367797852
    8. '```' → logprob: -12.033136367797852
    9. '(('' → logprob: -12.408136367797852
    10. '(((' → logprob: -12.658136367797852

Token 2507: ' (' (ID: 350)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.29134291410446167
    2. '(initial' → logprob: -1.5413429737091064
    3. '(' → logprob: -3.2913429737091064
    4. '0' → logprob: -6.666342735290527
    5. ' initial' → logprob: -9.541342735290527
    6. '   ' → logprob: -9.791342735290527
    7. ' (' → logprob: -10.416342735290527
    8. '1' → logprob: -12.791342735290527
    9. '(
' → logprob: -13.291342735290527
    10. ')' → logprob: -13.416342735290527

Token 2508: 'initial' (ID: 17493)
  Prédit: 'kr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kr' → logprob: -0.09142526239156723
    2. 'initial' → logprob: -2.8414251804351807
    3. '0' → logprob: -3.5914251804351807
    4. '(' → logprob: -6.71642541885376
    5. ')' → logprob: -9.341424942016602
    6. '1' → logprob: -9.841424942016602
    7. '   ' → logprob: -10.466424942016602
    8. '(initial' → logprob: -10.591424942016602
    9. ' kr' → logprob: -11.841424942016602
    10. ' ' → logprob: -11.841424942016602

Token 2509: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.07041196525096893
    2. '_' → logprob: -2.9454119205474854
    3. '_token' → logprob: -4.4454121589660645
    4. ' _' → logprob: -6.9454121589660645
    5. ')' → logprob: -7.4454121589660645
    6. ')_' → logprob: -7.6954121589660645
    7. 'state' → logprob: -8.195411682128906
    8. '_
' → logprob: -8.320411682128906
    9. '_,' → logprob: -8.570411682128906
    10. '(' → logprob: -8.820411682128906

Token 2510: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01732664927840233
    2. '[' → logprob: -5.142326831817627
    3. ',
' → logprob: -5.517326831817627
    4. ')' → logprob: -5.642326831817627
    5. ',)' → logprob: -6.642326831817627
    6. '   ' → logprob: -6.767326831817627
    7. ' ,' → logprob: -6.892326831817627
    8. ' +' → logprob: -9.892326354980469
    9. '```' → logprob: -10.017326354980469
    10. '+' → logprob: -10.142326354980469

Token 2511: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0683535037969705e-05
    2. ' ' → logprob: -11.50001049041748
    3. '1' → logprob: -14.87501049041748
    4. '   ' → logprob: -16.250011444091797
    5. '
' → logprob: -17.375011444091797
    6. ')' → logprob: -18.875011444091797
    7. '  ' → logprob: -20.750011444091797
    8. '    ' → logprob: -21.250011444091797
    9. '           ' → logprob: -22.250011444091797
    10. ')
' → logprob: -22.375011444091797

Token 2512: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -20.25
    4. '
' → logprob: -20.875
    5. '1' → logprob: -21.25
    6. ')' → logprob: -22.125
    7. '۰' → logprob: -22.5
    8. '000' → logprob: -22.75
    9. '```' → logprob: -23.875
    10. '  ' → logprob: -24.1875

Token 2513: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.27099974633893e-05
    2. ' )' → logprob: -11.750012397766113
    3. ')
' → logprob: -12.875012397766113
    4. '   ' → logprob: -13.750012397766113
    5. '))' → logprob: -13.750012397766113
    6. ')`' → logprob: -17.12501335144043
    7. '```' → logprob: -17.50001335144043
    8. '}' → logprob: -18.25001335144043
    9. '),' → logprob: -18.37501335144043
    10. ' ' → logprob: -18.37501335144043

Token 2514: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005119257839396596
    2. '   ' → logprob: -8.00051212310791
    3. ')
' → logprob: -8.75051212310791
    4. ' )' → logprob: -11.12551212310791
    5. '```' → logprob: -14.00051212310791
    6. '       ' → logprob: -14.37551212310791
    7. '
' → logprob: -14.75051212310791
    8. '))' → logprob: -14.87551212310791
    9. ')`' → logprob: -14.87551212310791
    10. ' ' → logprob: -16.375511169433594

Token 2515: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014136235229671001
    2. '
' → logprob: -5.13913631439209
    3. '```' → logprob: -5.38913631439209
    4. 'while' → logprob: -5.76413631439209
    5. '    
' → logprob: -8.13913631439209
    6. ' while' → logprob: -9.26413631439209
    7. '``' → logprob: -9.88913631439209
    8. 'While' → logprob: -11.13913631439209
    9. '	while' → logprob: -11.88913631439209
    10. '  
' → logprob: -12.63913631439209

Token 2516: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.33906444907188416
    2. '   ' → logprob: -1.3390644788742065
    3. ')' → logprob: -4.464064598083496
    4. ' while' → logprob: -4.714064598083496
    5. '```' → logprob: -5.839064598083496
    6. '	while' → logprob: -7.339064598083496
    7. 'While' → logprob: -7.464064598083496
    8. '    
' → logprob: -8.214064598083496
    9. '
' → logprob: -8.339064598083496
    10. ')
' → logprob: -9.214064598083496

Token 2517: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5808282494544983
    2. 'steps' → logprob: -1.7058281898498535
    3. 'moves' → logprob: -2.4558281898498535
    4. 'depth' → logprob: -2.7058281898498535
    5. '0' → logprob: -3.4558281898498535
    6. '#' → logprob: -4.0808281898498535
    7. '
' → logprob: -4.7058281898498535
    8. 'state' → logprob: -4.8308281898498535
    9. 'tokens' → logprob: -5.4558281898498535
    10. '```' → logprob: -5.4558281898498535

Token 2518: 'state' (ID: 5294)
  Prédit: 'state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.48075100779533386
    2. 'initial' → logprob: -1.1057510375976562
    3. '0' → logprob: -4.355751037597656
    4. '(initial' → logprob: -4.355751037597656
    5. 'queue' → logprob: -4.480751037597656
    6. ')' → logprob: -5.105751037597656
    7. ' initial' → logprob: -6.730751037597656
    8. 'current' → logprob: -6.980751037597656
    9. '(queue' → logprob: -7.105751037597656
    10. 'visited' → logprob: -7.230751037597656

Token 2519: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1571304351091385
    2. ')' → logprob: -2.157130479812622
    3. '[' → logprob: -4.032130241394043
    4. '   ' → logprob: -5.157130241394043
    5. ',
' → logprob: -6.157130241394043
    6. ',)' → logprob: -6.407130241394043
    7. '```' → logprob: -7.032130241394043
    8. ')
' → logprob: -8.782130241394043
    9. ' ,' → logprob: -9.032130241394043
    10. '[
' → logprob: -9.157130241394043

Token 2520: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.08126184344291687
    2. 'depth' → logprob: -3.3312618732452393
    3. ' moves' → logprob: -4.58126163482666
    4. ')' → logprob: -4.58126163482666
    5. 'steps' → logprob: -4.70626163482666
    6. '0' → logprob: -5.33126163482666
    7. '_moves' → logprob: -5.70626163482666
    8. 'move' → logprob: -6.58126163482666
    9. '1' → logprob: -7.08126163482666
    10. 'distance' → logprob: -7.08126163482666

Token 2521: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017089712200686336
    2. ')
' → logprob: -6.751708984375
    3. '   ' → logprob: -8.876708984375
    4. '+' → logprob: -8.876708984375
    5. '_count' → logprob: -9.376708984375
    6. '))' → logprob: -10.126708984375
    7. '```' → logprob: -10.501708984375
    8. 'count' → logprob: -11.001708984375
    9. ' )' → logprob: -11.376708984375
    10. ')`' → logprob: -11.501708984375

Token 2522: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6506480574607849
    2. 'while' → logprob: -0.9006480574607849
    3. '```' → logprob: -2.6506481170654297
    4. '
' → logprob: -7.52564811706543
    5. ' while' → logprob: -7.77564811706543
    6. '``' → logprob: -8.27564811706543
    7. '	while' → logprob: -9.15064811706543
    8. '    
' → logprob: -10.27564811706543
    9. 'While' → logprob: -10.90064811706543
    10. '`' → logprob: -11.90064811706543

Token 2523: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.003533201524987817
    2. '   ' → logprob: -5.753533363342285
    3. '
' → logprob: -8.503533363342285
    4. '```' → logprob: -9.003533363342285
    5. ' while' → logprob: -10.503533363342285
    6. '``' → logprob: -14.003533363342285
    7. '    
' → logprob: -14.378533363342285
    8. '	while' → logprob: -14.503533363342285
    9. 'While' → logprob: -15.003533363342285
    10. 'for' → logprob: -18.37853240966797

Token 2524: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.004107492510229349
    2. 'queue' → logprob: -5.504107475280762
    3. ' len' → logprob: -11.129107475280762
    4. '(queue' → logprob: -11.379107475280762
    5. '   ' → logprob: -13.379107475280762
    6. 'len' → logprob: -13.879107475280762
    7. '	queue' → logprob: -16.004108428955078
    8. ' True' → logprob: -16.004108428955078
    9. ' ' → logprob: -16.504108428955078
    10. ' not' → logprob: -17.254108428955078

Token 2525: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2859884798526764
    2. '   ' → logprob: -2.1609885692596436
    3. ':' → logprob: -2.7859885692596436
    4. '.pop' → logprob: -3.6609885692596436
    5. '       ' → logprob: -4.5359883308410645
    6. '):
' → logprob: -5.0359883308410645
    7. '.peek' → logprob: -5.1609883308410645
    8. '```' → logprob: -5.2859883308410645
    9. ' and' → logprob: -5.7859883308410645
    10. '[' → logprob: -5.7859883308410645

Token 2526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001981333363801241
    2. '```' → logprob: -7.251981258392334
    3. '   ' → logprob: -7.751981258392334
    4. '        
' → logprob: -9.001981735229492
    5. ' (' → logprob: -9.126981735229492
    6. '    ' → logprob: -9.376981735229492
    7. '
' → logprob: -9.376981735229492
    8. '(' → logprob: -9.501981735229492
    9. '    
' → logprob: -10.126981735229492
    10. '`' → logprob: -10.126981735229492

Token 2527: ' (' (ID: 350)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.5550995469093323
    2. '(state' → logprob: -0.9300995469093323
    3. '(current' → logprob: -4.4300994873046875
    4. 'current' → logprob: -4.5550994873046875
    5. '       ' → logprob: -5.0550994873046875
    6. ' (' → logprob: -6.6800994873046875
    7. ' state' → logprob: -7.3050994873046875
    8. '   ' → logprob: -8.430099487304688
    9. '           ' → logprob: -9.305099487304688
    10. ',state' → logprob: -9.805099487304688

Token 2528: 'cur' (ID: 3264)
  Prédit: 'kr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'kr' → logprob: -0.24301676452159882
    2. 'king' → logprob: -2.2430167198181152
    3. 'state' → logprob: -2.6180167198181152
    4. '(' → logprob: -3.3680167198181152
    5. 'r' → logprob: -6.868016719818115
    6. 'current' → logprob: -8.243017196655273
    7. '   ' → logprob: -8.618017196655273
    8. '(r' → logprob: -8.743017196655273
    9. '(state' → logprob: -8.743017196655273
    10. 'curr' → logprob: -8.743017196655273

Token 2529: '_' (ID: 62)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.34105756878852844
    2. '_r' → logprob: -1.466057538986206
    3. '_' → logprob: -2.966057538986206
    4. 'state' → logprob: -5.091057777404785
    5. '_k' → logprob: -9.091057777404785
    6. 'r' → logprob: -9.091057777404785
    7. '_s' → logprob: -9.466057777404785
    8. ' _' → logprob: -9.841057777404785
    9. ')_' → logprob: -10.091057777404785
    10. '\' → logprob: -10.841057777404785

Token 2530: 'kr' (ID: 7316)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1128703355789185
    2. 'state' → logprob: -1.3628703355789185
    3. 'king' → logprob: -1.8628703355789185
    4. '_' → logprob: -2.112870216369629
    5. '_r' → logprob: -2.737870216369629
    6. '_state' → logprob: -2.987870216369629
    7. 'kr' → logprob: -3.862870216369629
    8. '_k' → logprob: -7.112870216369629
    9. 'k' → logprob: -7.612870216369629
    10. '_s' → logprob: -8.112870216369629

Token 2531: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030293059535324574
    2. '[cur' → logprob: -8.625303268432617
    3. ' ,' → logprob: -10.375303268432617
    4. '       ' → logprob: -10.625303268432617
    5. ',
' → logprob: -10.625303268432617
    6. 'cur' → logprob: -11.250303268432617
    7. '(cur' → logprob: -12.125303268432617
    8. ',current' → logprob: -12.375303268432617
    9. ',c' → logprob: -12.500303268432617
    10. ',user' → logprob: -13.250303268432617

Token 2532: 'cur' (ID: 3264)
  Prédit: 'cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -1.5213274309644476e-05
    2. ' cur' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.000015258789062
    4. '	cur' → logprob: -16.125015258789062
    5. '[cur' → logprob: -16.875015258789062
    6. '(cur' → logprob: -17.000015258789062
    7. '_cur' → logprob: -17.375015258789062
    8. '
' → logprob: -17.375015258789062
    9. '       ' → logprob: -17.875015258789062
    10. '.cur' → logprob: -18.625015258789062

Token 2533: '_k' (ID: 11637)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4530223608016968
    2. '_k' → logprob: -1.8280223608016968
    3. '_,' → logprob: -2.3280224800109863
    4. '_cc' → logprob: -3.2030224800109863
    5. ',_' → logprob: -3.7030224800109863
    6. '_c' → logprob: -3.7030224800109863
    7. ',c' → logprob: -5.078022480010986
    8. '_cur' → logprob: -5.578022480010986
    9. '_mc' → logprob: -5.828022480010986
    10. '_pc' → logprob: -7.453022480010986

Token 2534: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0003037650021724403
    2. ',c' → logprob: -8.250304222106934
    3. '_c' → logprob: -11.000304222106934
    4. ',' → logprob: -11.250304222106934
    5. 'cur' → logprob: -11.375304222106934
    6. '	c' → logprob: -14.625304222106934
    7. ' c' → logprob: -15.500304222106934
    8. ')c' → logprob: -15.750304222106934
    9. 'cu' → logprob: -16.000303268432617
    10. ',
' → logprob: -16.250303268432617

Token 2535: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0396219827234745
    2. '),' → logprob: -3.2896220684051514
    3. ',p' → logprob: -8.03962230682373
    4. ',),' → logprob: -8.16462230682373
    5. ',current' → logprob: -8.78962230682373
    6. ',user' → logprob: -8.78962230682373
    7. ',c' → logprob: -9.03962230682373
    8. '),(' → logprob: -9.28962230682373
    9. ',
' → logprob: -9.78962230682373
    10. ' ,' → logprob: -10.03962230682373

Token 2536: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.00017445837147533894
    2. 'p' → logprob: -8.875174522399902
    3. 'fro' → logprob: -10.875174522399902
    4. ' cur' → logprob: -11.750174522399902
    5. '_cur' → logprob: -13.000174522399902
    6. 'paw' → logprob: -13.625174522399902
    7. '(cur' → logprob: -14.500174522399902
    8. '   ' → logprob: -14.625174522399902
    9. 'pawn' → logprob: -14.750174522399902
    10. '```' → logprob: -15.000174522399902

Token 2537: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.03495413810014725
    2. '_,' → logprob: -3.909954071044922
    3. '_' → logprob: -4.659954071044922
    4. '_f' → logprob: -6.159954071044922
    5. '_r' → logprob: -6.784954071044922
    6. 'p' → logprob: -7.909954071044922
    7. '_k' → logprob: -8.409954071044922
    8. ',' → logprob: -8.659954071044922
    9. '_
' → logprob: -9.784954071044922
    10. ' _' → logprob: -9.784954071044922

Token 2538: 'awns' (ID: 115084)
  Prédit: 'awns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'awns' → logprob: -0.04226364940404892
    2. 'os' → logprob: -3.4172637462615967
    3. 'r' → logprob: -6.417263507843018
    4. '_' → logprob: -6.417263507843018
    5. 'aw' → logprob: -6.417263507843018
    6. 'a' → logprob: -6.792263507843018
    7. 'aws' → logprob: -7.792263507843018
    8. 'w' → logprob: -8.042263984680176
    9. 'awn' → logprob: -8.292263984680176
    10. '_r' → logprob: -8.417263984680176

Token 2539: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08462929725646973
    2. '),' → logprob: -2.5846292972564697
    3. ',),' → logprob: -5.834629058837891
    4. ')' → logprob: -7.084629058837891
    5. '           ' → logprob: -7.584629058837891
    6. ',)' → logprob: -8.58462905883789
    7. ',f' → logprob: -8.83462905883789
    8. ',
' → logprob: -8.83462905883789
    9. ',p' → logprob: -9.08462905883789
    10. ' ,' → logprob: -9.08462905883789

Token 2540: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0012040425790473819
    2. ' cur' → logprob: -6.751204013824463
    3. '(cur' → logprob: -10.876204490661621
    4. '
' → logprob: -12.501204490661621
    5. ')' → logprob: -13.251204490661621
    6. '[cur' → logprob: -13.376204490661621
    7. '_cur' → logprob: -13.501204490661621
    8. 'open' → logprob: -13.626204490661621
    9. '	cur' → logprob: -13.626204490661621
    10. '   ' → logprob: -14.001204490661621

Token 2541: '_open' (ID: 26173)
  Prédit: '_open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_open' → logprob: -0.0045402501709759235
    2. 'open' → logprob: -5.62954044342041
    3. '_op' → logprob: -8.25454044342041
    4. '_' → logprob: -8.62954044342041
    5. '_k' → logprob: -8.75454044342041
    6. '_r' → logprob: -8.75454044342041
    7. '_o' → logprob: -9.37954044342041
    8. '_p' → logprob: -10.75454044342041
    9. '_f' → logprob: -11.12954044342041
    10. '
' → logprob: -11.12954044342041

Token 2542: '),' (ID: 936)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.011356087401509285
    2. '_set' → logprob: -5.636355876922607
    3. '),' → logprob: -5.886355876922607
    4. ')' → logprob: -6.136355876922607
    5. ')_' → logprob: -6.886355876922607
    6. 's' → logprob: -7.511355876922607
    7. '```' → logprob: -7.886355876922607
    8. '_' → logprob: -8.511356353759766
    9. '))' → logprob: -8.761356353759766
    10. '   ' → logprob: -9.011356353759766

Token 2543: ' dist' (ID: 3601)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.14262047410011292
    2. '
' → logprob: -3.39262056350708
    3. 'depth' → logprob: -3.39262056350708
    4. ' moves' → logprob: -3.89262056350708
    5. 'move' → logprob: -4.14262056350708
    6. 'cur' → logprob: -4.26762056350708
    7. 'steps' → logprob: -5.14262056350708
    8. '   ' → logprob: -5.39262056350708
    9. '_moves' → logprob: -6.26762056350708
    10. ' move' → logprob: -7.51762056350708

Token 2544: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24685344099998474
    2. ' =' → logprob: -1.7468534708023071
    3. ')' → logprob: -3.2468533515930176
    4. '+' → logprob: -5.746853351593018
    5. ' +' → logprob: -7.246853351593018
    6. ')=' → logprob: -7.246853351593018
    7. '   ' → logprob: -8.496853828430176
    8. '+=' → logprob: -8.746853828430176
    9. '       ' → logprob: -8.996853828430176
    10. ' +=' → logprob: -9.496853828430176

Token 2545: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.07255107164382935
    2. ' queue' → logprob: -2.6975510120391846
    3. '(queue' → logprob: -6.447551250457764
    4. '       ' → logprob: -7.447551250457764
    5. '   ' → logprob: -8.572550773620605
    6. '
' → logprob: -9.822550773620605
    7. '           ' → logprob: -10.197550773620605
    8. 'visited' → logprob: -10.322550773620605
    9. '	queue' → logprob: -10.947550773620605
    10. '.queue' → logprob: -11.072550773620605

Token 2546: '.p' (ID: 1201)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42132270336151123
    2. ' =' → logprob: -1.4213227033615112
    3. '       ' → logprob: -3.046322822570801
    4. ')' → logprob: -3.421322822570801
    5. '   ' → logprob: -4.546322822570801
    6. '):
' → logprob: -5.921322822570801
    7. '           ' → logprob: -6.296322822570801
    8. ':
' → logprob: -6.671322822570801
    9. ',' → logprob: -7.046322822570801
    10. '        
' → logprob: -7.671322822570801

Token 2547: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0014155926182866096
    2. 'append' → logprob: -7.001415729522705
    3. 'op' → logprob: -8.626415252685547
    4. '.append' → logprob: -8.751415252685547
    5. '```' → logprob: -9.251415252685547
    6. 'ut' → logprob: -10.376415252685547
    7. 'p' → logprob: -11.001415252685547
    8. 'ople' → logprob: -12.001415252685547
    9. '_append' → logprob: -12.126415252685547
    10. '``' → logprob: -13.501415252685547

Token 2548: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03403176739811897
    2. '
' → logprob: -3.534031867980957
    3. '        
' → logprob: -5.909031867980957
    4. ')' → logprob: -7.534031867980957
    5. '<|end|>' → logprob: -7.784031867980957
    6. '  
' → logprob: -9.409031867980957
    7. '   ' → logprob: -9.659031867980957
    8. '):
' → logprob: -9.784031867980957
    9. '    
' → logprob: -9.909031867980957
    10. ':' → logprob: -10.034031867980957

Token 2549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.339776832144707e-05
    2. '        
' → logprob: -10.000082969665527
    3. '
' → logprob: -11.000082969665527
    4. '   ' → logprob: -11.250082969665527
    5. '           ' → logprob: -12.250082969665527
    6. 'if' → logprob: -13.375082969665527
    7. '```' → logprob: -14.625082969665527
    8. ' if' → logprob: -15.125082969665527
    9. '	' → logprob: -15.500082969665527
    10. '      ' → logprob: -16.000083923339844

Token 2550: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4864042103290558
    2. '       ' → logprob: -0.9864041805267334
    3. 'for' → logprob: -5.1114044189453125
    4. '#' (adapté à ' #') → logprob: -5.4864044189453125
    5. '
' → logprob: -6.4864044189453125
    6. '   ' → logprob: -8.236404418945312
    7. ' if' → logprob: -8.861404418945312
    8. '        
' → logprob: -9.486404418945312
    9. '```' → logprob: -9.986404418945312
    10. '           ' → logprob: -11.986404418945312

Token 2551: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.038455914705991745
    2. '#' → logprob: -3.5384559631347656
    3. '       ' → logprob: -4.788455963134766
    4. 'for' → logprob: -8.788455963134766
    5. '
' → logprob: -9.038455963134766
    6. '   ' → logprob: -10.288455963134766
    7. 'If' → logprob: -10.788455963134766
    8. '           ' → logprob: -12.163455963134766
    9. ' if' → logprob: -12.163455963134766
    10. '        
' → logprob: -13.038455963134766

Token 2552: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8284490704536438
    2. 'if' → logprob: -1.328449010848999
    3. '(cur' → logprob: -1.578449010848999
    4. ' (' → logprob: -2.828449010848999
    5. ' cur' → logprob: -4.078449249267578
    6. 'cur' → logprob: -4.203449249267578
    7. '   ' → logprob: -7.578449249267578
    8. '(' → logprob: -8.078449249267578
    9. '       ' → logprob: -9.078449249267578
    10. 'for' → logprob: -9.828449249267578

Token 2553: ' king' (ID: 13793)
  Prédit: '(cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cur' → logprob: -0.10375958681106567
    2. 'cur' → logprob: -2.478759527206421
    3. ' (' → logprob: -4.853759765625
    4. ' cur' → logprob: -5.603759765625
    5. '(' → logprob: -6.353759765625
    6. '(goal' → logprob: -6.978759765625
    7. 'goal' → logprob: -7.603759765625
    8. '[cur' → logprob: -10.478759765625
    9. '   ' → logprob: -11.603759765625
    10. ' ' → logprob: -12.353759765625

Token 2554: ' at' (ID: 540)
  Prédit: '_r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.2595949172973633
    2. '==' → logprob: -2.6345949172973633
    3. ' ==' → logprob: -2.6345949172973633
    4. '(cur' → logprob: -3.8845949172973633
    5. 'cur' → logprob: -4.634594917297363
    6. '   ' → logprob: -4.759594917297363
    7. ' (' → logprob: -4.759594917297363
    8. ',' → logprob: -5.009594917297363
    9. 'position' → logprob: -5.134594917297363
    10. '(' → logprob: -5.759594917297363

Token 2555: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.0023572142235934734
    2. ' goal' → logprob: -6.752357006072998
    3. '(goal' → logprob: -6.752357006072998
    4. '(' → logprob: -11.127357482910156
    5. 'go' → logprob: -13.502357482910156
    6. ' (' → logprob: -13.877357482910156
    7. '_goal' → logprob: -14.877357482910156
    8. '   ' → logprob: -15.627357482910156
    9. '.goal' → logprob: -16.002357482910156
    10. 'cur' → logprob: -16.002357482910156

Token 2556: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12080240249633789
    2. '==' → logprob: -3.370802402496338
    3. ' ==' → logprob: -3.495802402496338
    4. 'if' → logprob: -3.995802402496338
    5. ' and' → logprob: -4.120802402496338
    6. 'and' → logprob: -4.870802402496338
    7. ' if' → logprob: -6.495802402496338
    8. ' (' → logprob: -6.620802402496338
    9. ':
' → logprob: -7.245802402496338
    10. '(cur' → logprob: -7.370802402496338

Token 2557: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4188896119594574
    2. ' and' → logprob: -1.4188896417617798
    3. 'and' → logprob: -3.1688895225524902
    4. '           ' → logprob: -4.41888952255249
    5. '```' → logprob: -4.41888952255249
    6. ' (' → logprob: -4.54388952255249
    7. ' ==' → logprob: -4.66888952255249
    8. '==' → logprob: -5.41888952255249
    9. '(' → logprob: -5.91888952255249
    10. 'if' → logprob: -6.54388952255249

Token 2558: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008397075347602367
    2. '       ' → logprob: -5.258397102355957
    3. ' if' → logprob: -5.758397102355957
    4. '```' → logprob: -13.633397102355957
    5. '           ' → logprob: -14.758397102355957
    6. 'If' → logprob: -15.008397102355957
    7. '	if' → logprob: -17.25839614868164
    8. '
' → logprob: -17.50839614868164
    9. '   ' → logprob: -17.88339614868164
    10. ';if' → logprob: -18.00839614868164

Token 2559: ' (' (ID: 350)
  Prédit: '(cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -0.11764847487211227
    2. 'cur' → logprob: -2.3676483631134033
    3. ' cur' → logprob: -4.492648601531982
    4. ' (' → logprob: -5.117648601531982
    5. '(' → logprob: -9.742648124694824
    6. '[cur' → logprob: -9.992648124694824
    7. '   ' → logprob: -12.867648124694824
    8. '	cur' → logprob: -14.242648124694824
    9. '(c' → logprob: -14.742648124694824
    10. ' ' → logprob: -14.992648124694824

Token 2560: 'cur' (ID: 3264)
  Prédit: 'cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -1.0802738870552275e-05
    2. ' cur' → logprob: -11.50001049041748
    3. '(cur' → logprob: -14.50001049041748
    4. '   ' → logprob: -17.500011444091797
    5. '	cur' → logprob: -17.500011444091797
    6. ' ' → logprob: -17.875011444091797
    7. '
' → logprob: -18.250011444091797
    8. '[cur' → logprob: -18.625011444091797
    9. '-cur' → logprob: -18.750011444091797
    10. '  ' → logprob: -19.125011444091797

Token 2561: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00018077615823131055
    2. '_k' → logprob: -8.625181198120117
    3. '_r' → logprob: -15.500181198120117
    4. ' _' → logprob: -15.625181198120117
    5. '_ke' → logprob: -15.875181198120117
    6. '
' → logprob: -16.000181198120117
    7. '```' → logprob: -16.000181198120117
    8. '\' → logprob: -16.250181198120117
    9. '_
' → logprob: -16.875181198120117
    10. ')_' → logprob: -17.000181198120117

Token 2562: 'kr' (ID: 7316)
  Prédit: 'kr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kr' → logprob: -0.06903798878192902
    2. 'kc' → logprob: -2.819037914276123
    3. '_' → logprob: -5.694037914276123
    4. 'k' → logprob: -6.194037914276123
    5. '_k' → logprob: -6.444037914276123
    6. '0' → logprob: -11.694038391113281
    7. 'ks' → logprob: -12.444038391113281
    8. 'Kr' → logprob: -12.444038391113281
    9. 'kg' → logprob: -12.569038391113281
    10. 'к' → logprob: -12.819038391113281

Token 2563: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024113759398460388
    2. '==' → logprob: -4.149113655090332
    3. ' ==' → logprob: -5.024113655090332
    4. ' ,' → logprob: -6.899113655090332
    5. ')==' → logprob: -9.149113655090332
    6. ',current' → logprob: -9.274113655090332
    7. ',
' → logprob: -9.399113655090332
    8. ',c' → logprob: -9.524113655090332
    9. ',user' → logprob: -10.899113655090332
    10. '<|end|>' → logprob: -11.274113655090332

Token 2564: 'cur' (ID: 3264)
  Prédit: 'cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0002719449403230101
    2. ' cur' → logprob: -8.250271797180176
    3. ',' → logprob: -11.750271797180176
    4. '0' → logprob: -13.250271797180176
    5. '
' → logprob: -14.375271797180176
    6. '```' → logprob: -15.875271797180176
    7. '(cur' → logprob: -16.000272750854492
    8. '	cur' → logprob: -16.750272750854492
    9. '[cur' → logprob: -17.250272750854492
    10. '_cur' → logprob: -17.500272750854492

Token 2565: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.0006828876794315875
    2. '_c' → logprob: -7.500682830810547
    3. ',' → logprob: -10.125682830810547
    4. 'kc' → logprob: -10.125682830810547
    5. '_nc' → logprob: -11.625682830810547
    6. ' ' → logprob: -12.125682830810547
    7. '
' → logprob: -12.375682830810547
    8. '_mc' → logprob: -12.500682830810547
    9. '_h' → logprob: -12.500682830810547
    10. '_j' → logprob: -12.500682830810547

Token 2566: 'c' (ID: 66)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.394663006067276
    2. 'c' → logprob: -1.1446629762649536
    3. ',' → logprob: -5.144662857055664
    4. ',c' → logprob: -6.769662857055664
    5. ')' → logprob: -8.644662857055664
    6. '   ' → logprob: -8.769662857055664
    7. '```' → logprob: -8.894662857055664
    8. ',
' → logprob: -9.394662857055664
    9. '+' → logprob: -10.144662857055664
    10. '_' → logprob: -10.269662857055664

Token 2567: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006108670961111784
    2. ')==' → logprob: -5.25610876083374
    3. '==' → logprob: -7.63110876083374
    4. ' ==' → logprob: -7.88110876083374
    5. ' )' → logprob: -11.506108283996582
    6. '       ' → logprob: -14.881108283996582
    7. '```' → logprob: -15.631108283996582
    8. '())' → logprob: -15.756108283996582
    9. ']==' → logprob: -16.1311092376709
    10. '')' → logprob: -16.2561092376709

Token 2568: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2522234320640564
    2. '==' → logprob: -1.5022234916687012
    3. ')==' → logprob: -8.502223014831543
    4. ')' → logprob: -9.502223014831543
    5. '==
' → logprob: -11.627223014831543
    6. ']==' → logprob: -13.377223014831543
    7. ' ==
' → logprob: -13.377223014831543
    8. '==(' → logprob: -13.502223014831543
    9. '```' → logprob: -13.627223014831543
    10. '()==' → logprob: -14.627223014831543

Token 2569: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.07089637219905853
    2. '(' → logprob: -2.8208963871002197
    3. ' goal' → logprob: -4.820896148681641
    4. '(goal' → logprob: -7.570896148681641
    5. ' (' → logprob: -8.07089614868164
    6. 'go' → logprob: -14.57089614868164
    7. ' ' → logprob: -14.82089614868164
    8. '   ' → logprob: -14.94589614868164
    9. '.goal' → logprob: -15.69589614868164
    10. '0' → logprob: -15.69589614868164

Token 2570: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02745521254837513
    2. '_:' → logprob: -4.0274553298950195
    3. ':' → logprob: -4.9024553298950195
    4. '_,' → logprob: -7.1524553298950195
    5. '):' → logprob: -8.52745532989502
    6. '   ' → logprob: -8.77745532989502
    7. 'and' → logprob: -8.90245532989502
    8. ':
' → logprob: -9.27745532989502
    9. ')' → logprob: -9.40245532989502
    10. ' and' → logprob: -9.52745532989502

Token 2571: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.013583439402282238
    2. '_' → logprob: -4.388583660125732
    3. 'King' → logprob: -7.013583660125732
    4. ' king' → logprob: -10.263583183288574
    5. 'KING' → logprob: -10.388583183288574
    6. 'position' → logprob: -10.888583183288574
    7. '```' → logprob: -11.388583183288574
    8. '_,' → logprob: -11.513583183288574
    9. '_k' → logprob: -11.513583183288574
    10. ',' → logprob: -11.638583183288574

Token 2572: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.22473442554473877
    2. ':' → logprob: -2.099734306335449
    3. 'and' → logprob: -2.724734306335449
    4. ':
' → logprob: -4.599734306335449
    5. '           ' → logprob: -6.224734306335449
    6. '       ' → logprob: -7.474734306335449
    7. '<|end|>' → logprob: -7.724734306335449
    8. '          ' → logprob: -10.72473430633545
    9. ' :' → logprob: -10.72473430633545
    10. '               ' → logprob: -10.84973430633545

Token 2573: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012304692063480616
    2. ' and' → logprob: -7.626230239868164
    3. ':
' → logprob: -8.251230239868164
    4. ':' → logprob: -8.751230239868164
    5. '       ' → logprob: -9.126230239868164
    6. '               ' → logprob: -9.751230239868164
    7. 'continue' → logprob: -10.001230239868164
    8. ' continue' → logprob: -10.251230239868164
    9. '```' → logprob: -11.126230239868164
    10. 'and' → logprob: -11.126230239868164

Token 2574: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.33171501755714417
    2. '           ' → logprob: -1.3317149877548218
    3. '               ' → logprob: -4.081715106964111
    4. ' return' → logprob: -6.581715106964111
    5. '   ' → logprob: -11.956714630126953
    6. '```' → logprob: -12.581714630126953
    7. '{return' → logprob: -12.581714630126953
    8. '	return' → logprob: -13.456714630126953
    9. ':return' → logprob: -13.456714630126953
    10. '       ' → logprob: -13.956714630126953

Token 2575: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03216069936752319
    2. ' dist' → logprob: -3.532160758972168
    3. '0' → logprob: -6.032160758972168
    4. ' ' → logprob: -12.032160758972168
    5. '   ' → logprob: -14.532160758972168
    6. '(dist' → logprob: -14.782160758972168
    7. '
' → logprob: -17.03215980529785
    8. '	dist' → logprob: -17.15715980529785
    9. '_dist' → logprob: -17.53215980529785
    10. 'Dist' → logprob: -17.65715980529785

Token 2576: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01040895376354456
    2. '
' → logprob: -4.635408878326416
    3. '        
' → logprob: -7.760408878326416
    4. '   ' → logprob: -9.010409355163574
    5. '```' → logprob: -10.510409355163574
    6. '#' → logprob: -11.260409355163574
    7. '    
' → logprob: -11.385409355163574
    8. '  
' → logprob: -11.385409355163574
    9. 'for' → logprob: -11.510409355163574
    10. '<|end|>' → logprob: -11.635409355163574

Token 2577: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.055500250309705734
    2. '
' → logprob: -2.9305002689361572
    3. '        
' → logprob: -7.555500030517578
    4. '
' → logprob: -10.805500030517578
    5. '```' → logprob: -10.805500030517578
    6. '   ' → logprob: -10.930500030517578
    7. '    
' → logprob: -11.430500030517578
    8. '  
' → logprob: -11.430500030517578
    9. '#' → logprob: -11.805500030517578
    10. '           ' → logprob: -13.680500030517578

Token 2578: ' open' (ID: 2494)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.055303215980529785
    2. '
' → logprob: -3.4303030967712402
    3. '        
' → logprob: -4.55530309677124
    4. 'for' → logprob: -4.68030309677124
    5. '#' → logprob: -7.05530309677124
    6. '   ' → logprob: -8.430303573608398
    7. '    
' → logprob: -8.680303573608398
    8. ' for' → logprob: -8.805303573608398
    9. '```' → logprob: -9.430303573608398
    10. 'moves' → logprob: -10.305303573608398

Token 2579: '_set' (ID: 5451)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -3.881560041918419e-05
    2. '_' → logprob: -11.125039100646973
    3. '_spaces' → logprob: -11.500039100646973
    4. ')_' → logprob: -12.125039100646973
    5. '
' → logprob: -13.125039100646973
    6. '```' → logprob: -13.250039100646973
    7. '_set' → logprob: -13.875039100646973
    8. ')' → logprob: -14.500039100646973
    9. 's' → logprob: -14.750039100646973
    10. '_positions' → logprob: -14.875039100646973

Token 2580: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16214874386787415
    2. '=' → logprob: -1.9121487140655518
    3. '_set' → logprob: -6.912148952484131
    4. '=set' → logprob: -7.162148952484131
    5. '_' → logprob: -9.037148475646973
    6. '   ' → logprob: -11.412148475646973
    7. '```' → logprob: -11.662148475646973
    8. '=_' → logprob: -12.287148475646973
    9. ')' → logprob: -13.037148475646973
    10. 'set' → logprob: -13.787148475646973

Token 2581: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00047630956396460533
    2. ' set' → logprob: -7.750476360321045
    3. '{' → logprob: -10.000475883483887
    4. '   ' → logprob: -15.875475883483887
    5. '(set' → logprob: -16.125476837158203
    6. 'fro' → logprob: -17.750476837158203
    7. '	set' → logprob: -18.000476837158203
    8. '{
' → logprob: -18.375476837158203
    9. ' {' → logprob: -18.625476837158203
    10. '       ' → logprob: -18.750476837158203

Token 2582: '(cur' (ID: 34723)
  Prédit: '(cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -4.1080467781284824e-05
    2. 'cur' → logprob: -10.625041007995605
    3. '(' → logprob: -11.625041007995605
    4. '((' → logprob: -11.875041007995605
    5. '[cur' → logprob: -15.375041007995605
    6. '([(' → logprob: -16.625041961669922
    7. '```' → logprob: -16.625041961669922
    8. '(list' → logprob: -17.000041961669922
    9. '()' → logprob: -17.250041961669922
    10. '(curr' → logprob: -17.375041961669922

Token 2583: '_open' (ID: 26173)
  Prédit: '_open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_open' → logprob: -0.0005618501454591751
    2. 'open' → logprob: -7.625561714172363
    3. '(open' → logprob: -10.500561714172363
    4. '_' → logprob: -11.125561714172363
    5. '_cur' → logprob: -11.500561714172363
    6. '(_' → logprob: -12.500561714172363
    7. '(cur' → logprob: -12.500561714172363
    8. '_s' → logprob: -12.625561714172363
    9. 'Open' → logprob: -12.875561714172363
    10. '[cur' → logprob: -13.375561714172363

Token 2584: ')

' (ID: 1029)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.26057398319244385
    2. ')' → logprob: -1.5105739831924438
    3. '       ' → logprob: -4.760573863983154
    4. '   ' → logprob: -10.760574340820312
    5. ')
' → logprob: -11.010574340820312
    6. ')

' → logprob: -12.135574340820312
    7. '())
' → logprob: -13.510574340820312
    8. ' )
' → logprob: -14.135574340820312
    9. '())' → logprob: -15.260574340820312
    10. '()
' → logprob: -15.385574340820312

Token 2585: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00040517066372558475
    2. '
' → logprob: -8.875405311584473
    3. 'for' → logprob: -9.250405311584473
    4. '        
' → logprob: -9.375405311584473
    5. ' for' → logprob: -10.250405311584473
    6. '```' → logprob: -10.625405311584473
    7. '   ' → logprob: -10.875405311584473
    8. '           ' → logprob: -12.875405311584473
    9. '    
' → logprob: -14.375405311584473
    10. '  
' → logprob: -14.500405311584473

Token 2586: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.16474521160125732
    2. 'for' → logprob: -1.9147452116012573
    3. '       ' → logprob: -5.414745330810547
    4. '   ' → logprob: -10.539745330810547
    5. 'moves' → logprob: -10.914745330810547
    6. '           ' → logprob: -12.539745330810547
    7. '        
' → logprob: -12.789745330810547
    8. 'pawn' → logprob: -13.164745330810547
    9. ' #' → logprob: -13.414745330810547
    10. '```' → logprob: -13.539745330810547

Token 2587: ' Generate' (ID: 33886)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3134854733943939
    2. 'for' → logprob: -1.3134855031967163
    3. 'king' → logprob: -9.063485145568848
    4. '   ' → logprob: -10.313485145568848
    5. '       ' → logprob: -10.688485145568848
    6. 'next' → logprob: -11.063485145568848
    7. 'moves' → logprob: -11.313485145568848
    8. 'pawn' → logprob: -11.813485145568848
    9. ' #' → logprob: -12.438485145568848
    10. 'For' → logprob: -12.563485145568848

Token 2588: ' all' (ID: 722)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.1242239698767662
    2. '#' → logprob: -2.3742239475250244
    3. 'moves' → logprob: -4.2492241859436035
    4. 'for' → logprob: -5.3742241859436035
    5. 'next' → logprob: -5.7492241859436035
    6. 'pawn' → logprob: -6.8742241859436035
    7. 'possible' → logprob: -8.499223709106445
    8. '   ' → logprob: -8.874223709106445
    9. 'neighbors' → logprob: -9.124223709106445
    10. ' #' → logprob: -9.874223709106445

Token 2589: ' next' (ID: 2613)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.4830590784549713
    2. 'possible' → logprob: -1.983059048652649
    3. 'moves' → logprob: -2.2330591678619385
    4. 'next' → logprob: -2.2330591678619385
    5. '   ' → logprob: -4.233058929443359
    6. '#' → logprob: -5.108058929443359
    7. ' king' → logprob: -5.233058929443359
    8. ' next' → logprob: -5.733058929443359
    9. '       ' → logprob: -6.983058929443359
    10. ' #' → logprob: -8.23305892944336

Token 2590: ' states' (ID: 9407)
  Prédit: '_states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.7710269093513489
    2. '_moves' → logprob: -0.7710269093513489
    3. 'moves' → logprob: -3.146026849746704
    4. 'states' → logprob: -4.146027088165283
    5. '_' → logprob: -4.521027088165283
    6. ' states' → logprob: -5.521027088165283
    7. ' moves' → logprob: -7.146027088165283
    8. '_state' → logprob: -9.396026611328125
    9. '   ' → logprob: -9.521026611328125
    10. '_positions' → logprob: -9.646026611328125

Token 2591: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025615072809159756
    2. '
' → logprob: -6.252561569213867
    3. '        
' → logprob: -7.627561569213867
    4. '#' → logprob: -9.627561569213867
    5. 'for' → logprob: -10.377561569213867
    6. '   ' → logprob: -11.127561569213867
    7. ' for' → logprob: -11.377561569213867
    8. ',' → logprob: -12.002561569213867
    9. '           ' → logprob: -12.502561569213867
    10. ':
' → logprob: -12.877561569213867

Token 2592: ' sliding' (ID: 53853)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.06940818578004837
    2. '#' → logprob: -2.8194081783294678
    3. 'pawn' → logprob: -5.444408416748047
    4. ' king' → logprob: -6.694408416748047
    5. '       ' → logprob: -7.444408416748047
    6. ' #' → logprob: -7.944408416748047
    7. '   ' → logprob: -8.069408416748047
    8. 'moving' → logprob: -9.069408416748047
    9. 'trying' → logprob: -9.069408416748047
    10. 'p' → logprob: -9.319408416748047

Token 2593: ' paw' (ID: 71961)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.04180587828159332
    2. 'pieces' → logprob: -3.7918059825897217
    3. '#' → logprob: -4.541805744171143
    4. 'for' → logprob: -6.166805744171143
    5. 'the' → logprob: -6.291805744171143
    6. '       ' → logprob: -6.416805744171143
    7. ' king' → logprob: -6.666805744171143
    8. '   ' → logprob: -7.416805744171143
    9. 'pawn' → logprob: -8.9168062210083
    10. ' pieces' → logprob: -10.5418062210083

Token 2594: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.10950479656457901
    2. 'ons' → logprob: -2.4845046997070312
    3. 'n' → logprob: -4.734504699707031
    4. 'awns' → logprob: -4.859504699707031
    5. 's' → logprob: -7.109504699707031
    6. 'nts' → logprob: -7.484504699707031
    7. 'pawn' → logprob: -7.609504699707031
    8. 'on' → logprob: -7.859504699707031
    9. 'ans' → logprob: -7.984504699707031
    10. 'rons' → logprob: -8.359504699707031

Token 2595: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036611182149499655
    2. 'for' → logprob: -5.753661155700684
    3. ' for' → logprob: -8.003661155700684
    4. ' and' → logprob: -10.128661155700684
    5. '   ' → logprob: -10.753661155700684
    6. 'and' → logprob: -10.878661155700684
    7. '
' → logprob: -11.003661155700684
    8. '           ' → logprob: -11.128661155700684
    9. ',' → logprob: -11.503661155700684
    10. '        
' → logprob: -11.628661155700684

Token 2596: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014311464503407478
    2. 'for' → logprob: -4.26431131362915
    3. ' for' → logprob: -8.889311790466309
    4. '   ' → logprob: -11.889311790466309
    5. '
' → logprob: -14.139311790466309
    6. '           ' → logprob: -14.139311790466309
    7. '        
' → logprob: -14.264311790466309
    8. '```' → logprob: -14.389311790466309
    9. '	for' → logprob: -15.389311790466309
    10. '	' → logprob: -15.889311790466309

Token 2597: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.23180368542671204
    2. '       ' → logprob: -1.6068036556243896
    3. ' for' → logprob: -5.606803894042969
    4. 'pawn' → logprob: -6.606803894042969
    5. 'moves' → logprob: -7.106803894042969
    6. 'p' → logprob: -8.731803894042969
    7. '
' → logprob: -8.731803894042969
    8. '```' → logprob: -9.606803894042969
    9. 'next' → logprob: -10.231803894042969
    10. '   ' → logprob: -10.231803894042969

Token 2598: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.24327345192432404
    2. 'new' → logprob: -2.6182734966278076
    3. 'move' → logprob: -2.8682734966278076
    4. 'pawn' → logprob: -3.6182734966278076
    5. 'pr' → logprob: -4.3682732582092285
    6. 'nr' → logprob: -4.6182732582092285
    7. 'king' → logprob: -4.7432732582092285
    8. 'n' → logprob: -5.6182732582092285
    9. '(next' → logprob: -5.6182732582092285
    10. '(' → logprob: -5.6182732582092285

Token 2599: '_state' (ID: 9479)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04772510752081871
    2. '_cur' → logprob: -4.297725200653076
    3. '_p' → logprob: -4.547725200653076
    4. '_state' → logprob: -4.672725200653076
    5. '_pos' → logprob: -5.922725200653076
    6. '_pr' → logprob: -5.922725200653076
    7. '_k' → logprob: -6.047725200653076
    8. '_r' → logprob: -7.047725200653076
    9. '_move' → logprob: -7.047725200653076
    10. '_token' → logprob: -7.047725200653076

Token 2600: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16039960086345673
    2. 'in' → logprob: -1.9103995561599731
    3. '	in' → logprob: -9.535399436950684
    4. '_in' → logprob: -9.785399436950684
    5. '
' → logprob: -12.035399436950684
    6. ' ' → logprob: -12.285399436950684
    7. '           ' → logprob: -12.660399436950684
    8. '        ' → logprob: -12.785399436950684
    9. '       ' → logprob: -12.785399436950684
    10. '_' → logprob: -12.785399436950684

Token 2601: ' pawn' (ID: 112226)
  Prédit: 'pawn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pawn' → logprob: -0.00030185774085111916
    2. ' pawn' → logprob: -9.3753023147583
    3. '[p' → logprob: -9.5003023147583
    4. 'king' → logprob: -9.6253023147583
    5. '   ' → logprob: -10.3753023147583
    6. 'p' → logprob: -10.6253023147583
    7. 'paw' → logprob: -11.7503023147583
    8. '[' → logprob: -12.5003023147583
    9. '[(' → logprob: -12.7503023147583
    10. '(p' → logprob: -13.6253023147583

Token 2602: '_moves' (ID: 110706)
  Prédit: '_moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -1.0683535037969705e-05
    2. 'moves' → logprob: -13.00001049041748
    3. '_mov' → logprob: -13.12501049041748
    4. '_positions' → logprob: -13.25001049041748
    5. '
' → logprob: -13.62501049041748
    6. ''_' → logprob: -14.12501049041748
    7. '_move' → logprob: -14.62501049041748
    8. '_' → logprob: -14.87501049041748
    9. '```' → logprob: -15.37501049041748
    10. '_sl' → logprob: -15.62501049041748

Token 2603: '(cur' (ID: 34723)
  Prédit: '(cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -1.3306015716807451e-05
    2. '(' → logprob: -11.87501335144043
    3. 'cur' → logprob: -13.50001335144043
    4. '   ' → logprob: -13.87501335144043
    5. '       ' → logprob: -14.00001335144043
    6. ' (' → logprob: -14.12501335144043
    7. '[cur' → logprob: -14.12501335144043
    8. '(current' → logprob: -14.37501335144043
    9. '           ' → logprob: -14.87501335144043
    10. '(curr' → logprob: -15.00001335144043

Token 2604: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.04631448909640312
    2. 'cur' → logprob: -3.4213144779205322
    3. '_k' → logprob: -5.421314716339111
    4. 'p' → logprob: -5.796314716339111
    5. '_set' → logprob: -5.796314716339111
    6. 'set' → logprob: -7.296314716339111
    7. '_' → logprob: -7.796314716339111
    8. '_cur' → logprob: -7.796314716339111
    9. 'open' → logprob: -9.046314239501953
    10. '(cur' → logprob: -9.546314239501953

Token 2605: 'awns' (ID: 115084)
  Prédit: 'awns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'awns' → logprob: -6.659005157416686e-05
    2. 'aw' → logprob: -10.625066757202148
    3. 'owns' → logprob: -11.000066757202148
    4. 'awn' → logprob: -11.875066757202148
    5. 'cur' → logprob: -12.250066757202148
    6. '_' → logprob: -12.625066757202148
    7. '{' → logprob: -13.750066757202148
    8. 'aws' → logprob: -14.125066757202148
    9. 'raw' → logprob: -14.250066757202148
    10. 'rons' → logprob: -14.375066757202148

Token 2606: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007206317037343979
    2. ',next' → logprob: -5.007206439971924
    3. '(open' → logprob: -8.632205963134766
    4. ',set' → logprob: -9.382205963134766
    5. ' ,' → logprob: -9.382205963134766
    6. 'open' → logprob: -9.757205963134766
    7. '(next' → logprob: -11.257205963134766
    8. ',
' → logprob: -11.632205963134766
    9. ',current' → logprob: -11.882205963134766
    10. ',new' → logprob: -12.007205963134766

Token 2607: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.0019307781476527452
    2. ' open' → logprob: -6.2519307136535645
    3. '(open' → logprob: -13.501931190490723
    4. '	open' → logprob: -15.001931190490723
    5. '{' → logprob: -15.501931190490723
    6. 'cur' → logprob: -16.001930236816406
    7. '
' → logprob: -16.501930236816406
    8. '   ' → logprob: -16.876930236816406
    9. ')' → logprob: -18.001930236816406
    10. ' ' → logprob: -18.001930236816406

Token 2608: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.06517433375120163
    2. 'open' → logprob: -3.4401743412017822
    3. '_s' → logprob: -3.6901743412017822
    4. 'set' → logprob: -5.440174102783203
    5. '_open' → logprob: -6.690174102783203
    6. 's' → logprob: -8.190174102783203
    7. '_sets' → logprob: -9.565174102783203
    8. 'et' → logprob: -10.565174102783203
    9. '_' → logprob: -10.690174102783203
    10. '
' → logprob: -10.940174102783203

Token 2609: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019866866059601307
    2. ',next' → logprob: -6.376986503601074
    3. ' ,' → logprob: -8.751986503601074
    4. '           ' → logprob: -10.251986503601074
    5. '       ' → logprob: -10.376986503601074
    6. '   ' → logprob: -11.376986503601074
    7. ',user' → logprob: -12.251986503601074
    8. ')' → logprob: -12.376986503601074
    9. ',current' → logprob: -12.501986503601074
    10. '(next' → logprob: -12.626986503601074

Token 2610: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -6.704273118884885e-07
    2. ' cur' → logprob: -14.500000953674316
    3. '(cur' → logprob: -17.125
    4. '
' → logprob: -18.0
    5. '[cur' → logprob: -19.125
    6. '   ' → logprob: -19.25
    7. '	cur' → logprob: -19.625
    8. '-cur' → logprob: -19.625
    9. '.cur' → logprob: -20.5
    10. '_cur' → logprob: -20.625

Token 2611: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007628519553691149
    2. '_k' → logprob: -5.132628440856934
    3. 'kr' → logprob: -7.007628440856934
    4. '_r' → logprob: -8.257628440856934
    5. 'cur' → logprob: -8.382628440856934
    6. '_cur' → logprob: -9.132628440856934
    7. 'r' → logprob: -9.382628440856934
    8. 'k' → logprob: -9.507628440856934
    9. 'ur' → logprob: -10.632628440856934
    10. '_cr' → logprob: -12.507628440856934

Token 2612: 'kr' (ID: 7316)
  Prédit: 'kr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kr' → logprob: -0.0053240046836435795
    2. '_' → logprob: -5.380323886871338
    3. '_k' → logprob: -7.880323886871338
    4. 'k' → logprob: -8.880324363708496
    5. 'kc' → logprob: -9.005324363708496
    6. 'Kr' → logprob: -10.755324363708496
    7. 'cur' → logprob: -11.005324363708496
    8. '
' → logprob: -12.505324363708496
    9. '```' → logprob: -13.005324363708496
    10. '_r' → logprob: -13.505324363708496

Token 2613: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.266944157890975e-05
    2. ' ,' → logprob: -10.000072479248047
    3. ',next' → logprob: -11.250072479248047
    4. ',
' → logprob: -12.625072479248047
    5. '       ' → logprob: -12.875072479248047
    6. ',current' → logprob: -13.250072479248047
    7. '[cur' → logprob: -13.500072479248047
    8. '   ' → logprob: -14.125072479248047
    9. '<|end|>' → logprob: -14.250072479248047
    10. '           ' → logprob: -14.375072479248047

Token 2614: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -2.7968066206085496e-05
    2. ' cur' → logprob: -10.500027656555176
    3. '
' → logprob: -15.500027656555176
    4. '(cur' → logprob: -17.125028610229492
    5. '	cur' → logprob: -17.750028610229492
    6. '[cur' → logprob: -18.500028610229492
    7. '```' → logprob: -18.625028610229492
    8. '   ' → logprob: -18.625028610229492
    9. '-cur' → logprob: -18.750028610229492
    10. ' ' → logprob: -19.125028610229492

Token 2615: '_k' (ID: 11637)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0021426472812891006
    2. '_k' → logprob: -6.502142429351807
    3. 'c' → logprob: -8.002142906188965
    4. '_cc' → logprob: -9.127142906188965
    5. '_nc' → logprob: -9.127142906188965
    6. '_mc' → logprob: -10.877142906188965
    7. '_ct' → logprob: -11.627142906188965
    8. 'kc' → logprob: -11.752142906188965
    9. '```' → logprob: -11.752142906188965
    10. '_gc' → logprob: -11.877142906188965

Token 2616: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00038014890742488205
    2. '_c' → logprob: -7.875380039215088
    3. 'с' → logprob: -17.00037956237793
    4. '\' → logprob: -17.50037956237793
    5. '	c' → logprob: -18.12537956237793
    6. '_' → logprob: -18.25037956237793
    7. '```' → logprob: -18.37537956237793
    8. 'cur' → logprob: -18.50037956237793
    9. ',' → logprob: -19.12537956237793
    10. ')' → logprob: -19.37537956237793

Token 2617: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2538367509841919
    2. '):
' → logprob: -1.503836750984192
    3. '       ' → logprob: -6.753836631774902
    4. '           ' → logprob: -7.378836631774902
    5. ':' → logprob: -10.253836631774902
    6. '):
' → logprob: -10.253836631774902
    7. ')' → logprob: -11.378836631774902
    8. ',' → logprob: -11.878836631774902
    9. '   ' → logprob: -12.128836631774902
    10. '          ' → logprob: -12.253836631774902

Token 2618: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00032271104282699525
    2. '```' → logprob: -9.750322341918945
    3. '	       ' → logprob: -9.875322341918945
    4. '               ' → logprob: -9.875322341918945
    5. '       ' → logprob: -10.000322341918945
    6. '   ' → logprob: -10.625322341918945
    7. 'if' → logprob: -11.000322341918945
    8. '          ' → logprob: -11.125322341918945
    9. ':
' → logprob: -11.625322341918945
    10. ':' → logprob: -11.625322341918945

Token 2619: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.31650838255882263
    2. '           ' → logprob: -1.316508412361145
    3. ' if' → logprob: -5.9415082931518555
    4. '               ' → logprob: -7.5665082931518555
    5. '```' → logprob: -9.691508293151855
    6. '``' → logprob: -11.066508293151855
    7. '{
' → logprob: -11.816508293151855
    8. '   ' → logprob: -12.816508293151855
    9. '
' → logprob: -13.066508293151855
    10. '       ' → logprob: -13.191508293151855

Token 2620: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.386884480714798
    2. ' next' → logprob: -1.1368844509124756
    3. '(next' → logprob: -11.636884689331055
    4. '[next' → logprob: -12.761884689331055
    5. 'not' → logprob: -14.261884689331055
    6. '_next' → logprob: -15.261884689331055
    7. '	next' → logprob: -15.261884689331055
    8. ' not' → logprob: -15.386884689331055
    9. '           ' → logprob: -15.636884689331055
    10. '               ' → logprob: -16.136884689331055

Token 2621: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.00020425561524461955
    2. 'next' → logprob: -9.375204086303711
    3. '_next' → logprob: -10.000204086303711
    4. '(next' → logprob: -10.125204086303711
    5. '_' → logprob: -11.625204086303711
    6. 'state' → logprob: -11.625204086303711
    7. '[next' → logprob: -12.250204086303711
    8. '_states' → logprob: -12.500204086303711
    9. '_token' → logprob: -12.625204086303711
    10. 'State' → logprob: -13.500204086303711

Token 2622: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.016423294320702553
    2. 'not' → logprob: -4.141423225402832
    3. 'in' → logprob: -9.266423225402832
    4. '<|end|>' → logprob: -9.391423225402832
    5. '	not' → logprob: -9.891423225402832
    6. '[' → logprob: -10.016423225402832
    7. ' in' → logprob: -10.016423225402832
    8. ')' → logprob: -10.516423225402832
    9. '<|end|>' → logprob: -11.391423225402832
    10. '_not' → logprob: -11.766423225402832

Token 2623: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3134002387523651
    2. ' in' → logprob: -1.3134002685546875
    3. 'visited' → logprob: -9.063400268554688
    4. '   ' → logprob: -11.688400268554688
    5. '           ' → logprob: -11.813400268554688
    6. 'not' → logprob: -13.563400268554688
    7. '```' → logprob: -14.188400268554688
    8. '       ' → logprob: -14.188400268554688
    9. '_in' → logprob: -14.563400268554688
    10. '
' → logprob: -14.688400268554688

Token 2624: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.9361264946837764e-07
    2. ' visited' → logprob: -15.875
    3. '
' → logprob: -18.125
    4. 'seen' → logprob: -20.375
    5. 'visible' → logprob: -21.125
    6. '{' → logprob: -21.25
    7. '```' → logprob: -21.375
    8. '{
' → logprob: -21.5
    9. '   ' → logprob: -21.875
    10. '<|end|>' → logprob: -22.25

Token 2625: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3077189028263092
    2. ':
' → logprob: -1.4327188730239868
    3. ':' → logprob: -3.8077189922332764
    4. '):
' → logprob: -6.307718753814697
    5. '                       ' → logprob: -6.682718753814697
    6. '                   ' → logprob: -8.432719230651855
    7. '           ' → logprob: -8.557719230651855
    8. '                               ' → logprob: -8.932719230651855
    9. ' and' → logprob: -9.182719230651855
    10. '                           ' → logprob: -9.432719230651855

Token 2626: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002334568416699767
    2. '```' → logprob: -9.62523365020752
    3. '                               ' → logprob: -10.12523365020752
    4. '                   ' → logprob: -10.62523365020752
    5. '                       ' → logprob: -10.75023365020752
    6. '	           ' → logprob: -11.00023365020752
    7. '           ' → logprob: -11.00023365020752
    8. '		       ' → logprob: -11.12523365020752
    9. 'visited' → logprob: -11.87523365020752
    10. '	       ' → logprob: -12.37523365020752

Token 2627: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.02419276535511017
    2. '                   ' → logprob: -3.7741928100585938
    3. ' visited' → logprob: -7.649192810058594
    4. '                       ' → logprob: -8.274192810058594
    5. '               ' → logprob: -9.149192810058594
    6. '   ' → logprob: -10.024192810058594
    7. '```' → logprob: -10.524192810058594
    8. '                               ' → logprob: -11.274192810058594
    9. '
' → logprob: -12.274192810058594
    10. '           ' → logprob: -12.524192810058594

Token 2628: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00011069540778407827
    2. '.' → logprob: -9.125110626220703
    3. 'add' → logprob: -14.000110626220703
    4. '.append' → logprob: -14.875110626220703
    5. '_add' → logprob: -15.375110626220703
    6. '.Add' → logprob: -16.125110626220703
    7. '.setdefault' → logprob: -16.875110626220703
    8. '.remove' → logprob: -17.000110626220703
    9. '.update' → logprob: -17.250110626220703
    10. ' add' → logprob: -17.750110626220703

Token 2629: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.00027897433028556406
    2. '(' → logprob: -8.250279426574707
    3. 'next' → logprob: -11.125279426574707
    4. '(
' → logprob: -13.000279426574707
    5. ' next' → logprob: -14.625279426574707
    6. ' (' → logprob: -16.75027847290039
    7. '[next' → logprob: -17.25027847290039
    8. ',next' → logprob: -17.62527847290039
    9. '	next' → logprob: -19.00027847290039
    10. '(space' → logprob: -20.37527847290039

Token 2630: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -6.217951886355877e-05
    2. 'state' → logprob: -9.875061988830566
    3. 'State' → logprob: -12.375061988830566
    4. '_next' → logprob: -13.500061988830566
    5. '(next' → logprob: -13.500061988830566
    6. '_token' → logprob: -14.000061988830566
    7. ')' → logprob: -14.375061988830566
    8. '_' → logprob: -14.500061988830566
    9. '(state' → logprob: -15.125061988830566
    10. '(_' → logprob: -15.125061988830566

Token 2631: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1377609521150589
    2. ')' → logprob: -2.262760877609253
    3. ',' → logprob: -4.012761116027832
    4. ')
' → logprob: -5.887761116027832
    5. '                   ' → logprob: -7.137761116027832
    6. '           ' → logprob: -7.387761116027832
    7. ',
' → logprob: -7.387761116027832
    8. '```' → logprob: -7.887761116027832
    9. '<|end|>' → logprob: -8.387761116027832
    10. '),' → logprob: -8.512761116027832

Token 2632: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6687626242637634
    2. '               ' → logprob: -1.0437626838684082
    3. '                   ' → logprob: -2.918762683868408
    4. '``' → logprob: -3.418762683868408
    5. '			' → logprob: -4.293762683868408
    6. '                       ' → logprob: -4.793762683868408
    7. ',' → logprob: -5.293762683868408
    8. '                               ' → logprob: -6.293762683868408
    9. '<|end|>' → logprob: -6.293762683868408
    10. '   ' → logprob: -6.418762683868408

Token 2633: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.0012520157033577561
    2. '               ' → logprob: -8.001252174377441
    3. ' queue' → logprob: -8.001252174377441
    4. '                   ' → logprob: -8.126252174377441
    5. '```' → logprob: -9.251252174377441
    6. '
' → logprob: -9.376252174377441
    7. '           ' → logprob: -10.126252174377441
    8. '   ' → logprob: -10.501252174377441
    9. '(queue' → logprob: -11.126252174377441
    10. '                       ' → logprob: -12.251252174377441

Token 2634: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006128106266260147
    2. '.' → logprob: -5.506128311157227
    3. '.extend' → logprob: -6.881128311157227
    4. '               ' → logprob: -7.506128311157227
    5. '                   ' → logprob: -8.506128311157227
    6. '```' → logprob: -9.631128311157227
    7. '.enqueue' → logprob: -9.631128311157227
    8. '.put' → logprob: -10.131128311157227
    9. '           ' → logprob: -10.756128311157227
    10. '.p' → logprob: -11.381128311157227

Token 2635: '((' (ID: 2054)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.6007378697395325
    2. '(' → logprob: -0.8507378697395325
    3. '((' → logprob: -4.350738048553467
    4. ' (' → logprob: -4.600738048553467
    5. '(
' → logprob: -6.600738048553467
    6. '```' → logprob: -9.350737571716309
    7. ' next' → logprob: -10.350737571716309
    8. '               ' → logprob: -10.975737571716309
    9. ' (
' → logprob: -11.600737571716309
    10. '(space' → logprob: -11.850737571716309

Token 2636: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0005577972042374313
    2. ' next' → logprob: -7.500557899475098
    3. '(next' → logprob: -12.250557899475098
    4. '	next' → logprob: -16.12555694580078
    5. '[next' → logprob: -18.25055694580078
    6. '   ' → logprob: -18.37555694580078
    7. 'Next' → logprob: -20.00055694580078
    8. '
' → logprob: -20.00055694580078
    9. '.next' → logprob: -20.12555694580078
    10. '_next' → logprob: -20.50055694580078

Token 2637: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.002215084619820118
    2. 'state' → logprob: -6.2522149085998535
    3. 'next' → logprob: -9.252215385437012
    4. '_next' → logprob: -9.502215385437012
    5. '_token' → logprob: -10.002215385437012
    6. ')' → logprob: -11.252215385437012
    7. ')_' → logprob: -11.252215385437012
    8. '[next' → logprob: -11.627215385437012
    9. '(next' → logprob: -12.127215385437012
    10. 'State' → logprob: -12.127215385437012

Token 2638: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003103175258729607
    2. ' ,' → logprob: -8.875309944152832
    3. '+' → logprob: -9.875309944152832
    4. '   ' → logprob: -10.625309944152832
    5. ' +' → logprob: -11.375309944152832
    6. '               ' → logprob: -11.500309944152832
    7. ',
' → logprob: -11.750309944152832
    8. ',next' → logprob: -12.000309944152832
    9. ',+' → logprob: -12.000309944152832
    10. '       ' → logprob: -12.250309944152832

Token 2639: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0009115827269852161
    2. ' dist' → logprob: -7.000911712646484
    3. '   ' → logprob: -17.250911712646484
    4. '(dist' → logprob: -17.500911712646484
    5. '	dist' → logprob: -17.625911712646484
    6. '_dist' → logprob: -17.625911712646484
    7. 'Dist' → logprob: -18.875911712646484
    8. '                   ' → logprob: -19.000911712646484
    9. '               ' → logprob: -19.375911712646484
    10. '
' → logprob: -19.625911712646484

Token 2640: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024774393532425165
    2. ' +' → logprob: -6.002477645874023
    3. '+
' → logprob: -13.877477645874023
    4. '1' → logprob: -15.002477645874023
    5. '＋' → logprob: -15.252477645874023
    6. ')+' → logprob: -16.752477645874023
    7. '+[' → logprob: -16.752477645874023
    8. '+)' → logprob: -17.752477645874023
    9. ' +
' → logprob: -18.252477645874023
    10. '[' → logprob: -18.502477645874023

Token 2641: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.375
    4. '```' → logprob: -17.75
    5. '           ' → logprob: -18.75
    6. '                   ' → logprob: -19.625
    7. '``' → logprob: -20.125
    8. ')' → logprob: -20.25
    9. '               ' → logprob: -20.375
    10. '
' → logprob: -20.375

Token 2642: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0033263610675930977
    2. '               ' → logprob: -6.378326416015625
    3. ')' → logprob: -7.253326416015625
    4. '))
' → logprob: -7.253326416015625
    5. '           ' → logprob: -8.878326416015625
    6. '                   ' → logprob: -10.628326416015625
    7. '       ' → logprob: -11.003326416015625
    8. ')))' → logprob: -11.753326416015625
    9. '                       ' → logprob: -12.878326416015625
    10. '                               ' → logprob: -13.128326416015625

Token 2643: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03287382423877716
    2. '```' → logprob: -3.9078738689422607
    3. '
' → logprob: -4.782873630523682
    4. 'for' → logprob: -6.157873630523682
    5. '           ' → logprob: -7.407873630523682
    6. '   ' → logprob: -7.657873630523682
    7. ' for' → logprob: -7.782873630523682
    8. '        
' → logprob: -9.40787410736084
    9. '``' → logprob: -9.90787410736084
    10. '               ' → logprob: -10.03287410736084

Token 2644: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017064884305000305
    2. 'for' → logprob: -4.267065048217773
    3. '```' → logprob: -6.392065048217773
    4. ' for' → logprob: -7.142065048217773
    5. '
' → logprob: -7.892065048217773
    6. '   ' → logprob: -10.517065048217773
    7. '``' → logprob: -11.642065048217773
    8. '           ' → logprob: -11.892065048217773
    9. '	for' → logprob: -12.142065048217773
    10. '        
' → logprob: -12.392065048217773

Token 2645: ' Generate' (ID: 33886)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00343803851865232
    2. '#' → logprob: -6.2534379959106445
    3. '       ' → logprob: -6.5034379959106445
    4. '   ' → logprob: -12.003437995910645
    5. 'king' → logprob: -13.378437995910645
    6. ' for' → logprob: -13.628437995910645
    7. '
' → logprob: -14.503437995910645
    8. 'next' → logprob: -15.128437995910645
    9. 'new' → logprob: -15.503437995910645
    10. '           ' → logprob: -16.12843894958496

Token 2646: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.012849358841776848
    2. ' all' → logprob: -4.3878493309021
    3. 'king' → logprob: -8.762849807739258
    4. '   ' → logprob: -9.512849807739258
    5. '       ' → logprob: -10.012849807739258
    6. '           ' → logprob: -11.137849807739258
    7. '               ' → logprob: -11.512849807739258
    8. '(' → logprob: -11.512849807739258
    9. '#' → logprob: -11.637849807739258
    10. ' king' → logprob: -11.887849807739258

Token 2647: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.4757862687110901
    2. 'next' → logprob: -0.9757862687110901
    3. '_next' → logprob: -6.600786209106445
    4. ' king' → logprob: -8.725786209106445
    5. '(next' → logprob: -9.600786209106445
    6. 'king' → logprob: -9.850786209106445
    7. '_state' → logprob: -10.725786209106445
    8. '       ' → logprob: -11.350786209106445
    9. '[next' → logprob: -11.850786209106445
    10. '   ' → logprob: -12.225786209106445

Token 2648: ' states' (ID: 9407)
  Prédit: '_states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.2346784621477127
    2. '_state' → logprob: -1.7346785068511963
    3. ' states' → logprob: -4.109678268432617
    4. 'states' → logprob: -4.234678268432617
    5. 'state' → logprob: -6.734678268432617
    6. '   ' → logprob: -8.109678268432617
    7. '_' → logprob: -8.609678268432617
    8. ' state' → logprob: -9.109678268432617
    9. '       ' → logprob: -11.609678268432617
    10. '_moves' → logprob: -11.984678268432617

Token 2649: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.31217899918556213
    2. 'by' → logprob: -1.6871789693832397
    3. '       ' → logprob: -2.5621790885925293
    4. 'from' → logprob: -5.437179088592529
    5. ' from' → logprob: -7.812179088592529
    6. '(' → logprob: -8.062178611755371
    7. '           ' → logprob: -8.187178611755371
    8. 'for' → logprob: -8.437178611755371
    9. '   ' → logprob: -8.937178611755371
    10. ' for' → logprob: -9.687178611755371

Token 2650: ' sliding' (ID: 53853)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.012739663943648338
    2. ' king' → logprob: -4.387739658355713
    3. '   ' → logprob: -9.512740135192871
    4. '(' → logprob: -10.262740135192871
    5. '
' → logprob: -10.262740135192871
    6. '       ' → logprob: -10.637740135192871
    7. '#' → logprob: -11.137740135192871
    8. ' (' → logprob: -12.012740135192871
    9. '  ' → logprob: -12.262740135192871
    10. 'for' → logprob: -12.637740135192871

Token 2651: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.0015767596196383238
    2. ' king' → logprob: -6.751576900482178
    3. '(' → logprob: -7.876576900482178
    4. '   ' → logprob: -11.62657642364502
    5. '       ' → logprob: -12.12657642364502
    6. 'k' → logprob: -12.50157642364502
    7. 'the' → logprob: -13.00157642364502
    8. '
' → logprob: -13.62657642364502
    9. ' (' → logprob: -13.75157642364502
    10. '(k' → logprob: -14.12657642364502

Token 2652: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11284679919481277
    2. '(cur' → logprob: -2.487846851348877
    3. '(' → logprob: -4.237846851348877
    4. ',' → logprob: -5.862846851348877
    5. 'for' → logprob: -5.862846851348877
    6. ' (' → logprob: -6.612846851348877
    7. '
' → logprob: -7.487846851348877
    8. 'from' → logprob: -7.612846851348877
    9. 'cur' → logprob: -8.112846374511719
    10. ' for' → logprob: -8.487846374511719

Token 2653: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1312427818775177
    2. 'for' → logprob: -2.1312427520751953
    3. '(' → logprob: -6.506242752075195
    4. ' for' → logprob: -6.881242752075195
    5. '(cur' → logprob: -7.131242752075195
    6. '   ' → logprob: -7.506242752075195
    7. '```' → logprob: -9.131242752075195
    8. ',' → logprob: -9.381242752075195
    9. '           ' → logprob: -9.881242752075195
    10. ' (' → logprob: -10.256242752075195

Token 2654: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002025827532634139
    2. '       ' → logprob: -6.252025604248047
    3. ' for' → logprob: -9.252025604248047
    4. '```' → logprob: -14.502025604248047
    5. '   ' → logprob: -14.752025604248047
    6. '	for' → logprob: -15.627025604248047
    7. '           ' → logprob: -15.627025604248047
    8. '               ' → logprob: -17.752025604248047
    9. '
' → logprob: -17.877025604248047
    10. '_for' → logprob: -18.127025604248047

Token 2655: ' kr' (ID: 7430)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.07951687276363373
    2. '(next' → logprob: -2.579516887664795
    3. 'new' → logprob: -7.579516887664795
    4. ' next' → logprob: -9.454516410827637
    5. '(' → logprob: -10.704516410827637
    6. '(new' → logprob: -11.454516410827637
    7. '(n' → logprob: -13.579516410827637
    8. ' (' → logprob: -13.704516410827637
    9. 'king' → logprob: -14.704516410827637
    10. 'move' → logprob: -14.704516410827637

Token 2656: '_new' (ID: 13000)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011391209438443184
    2. ',next' → logprob: -5.6363911628723145
    3. ',k' → logprob: -5.7613911628723145
    4. ',c' → logprob: -6.1363911628723145
    5. ',new' → logprob: -7.1363911628723145
    6. ' ,' → logprob: -7.8863911628723145
    7. '_,' → logprob: -8.136391639709473
    8. '_next' → logprob: -8.136391639709473
    9. '_cur' → logprob: -8.386391639709473
    10. '_new' → logprob: -9.136391639709473

Token 2657: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.786196975852363e-05
    2. ',k' → logprob: -10.875038146972656
    3. ' ,' → logprob: -11.125038146972656
    4. '_,' → logprob: -13.375038146972656
    5. ',new' → logprob: -14.000038146972656
    6. 'cur' → logprob: -14.750038146972656
    7. ',int' → logprob: -15.375038146972656
    8. '```' → logprob: -15.625038146972656
    9. ',next' → logprob: -15.875038146972656
    10. ',c' → logprob: -15.875038146972656

Token 2658: ' kc' (ID: 186187)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.04859646037220955
    2. 'kc' → logprob: -3.0485963821411133
    3. 'k' → logprob: -12.798596382141113
    4. ' cur' → logprob: -12.798596382141113
    5. 'kur' → logprob: -13.298596382141113
    6. 'kr' → logprob: -13.923596382141113
    7. ' kc' → logprob: -14.548596382141113
    8. '   ' → logprob: -15.923596382141113
    9. 'cr' → logprob: -15.923596382141113
    10. '
' → logprob: -16.67359733581543

Token 2659: '_new' (ID: 13000)
  Prédit: '_new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_new' → logprob: -0.0020069109741598368
    2. ',' → logprob: -6.752007007598877
    3. 'New' → logprob: -7.627007007598877
    4. '+' → logprob: -9.127006530761719
    5. 'new' → logprob: -9.127006530761719
    6. '_next' → logprob: -10.502006530761719
    7. '_NEW' → logprob: -10.627006530761719
    8. '_cur' → logprob: -10.877006530761719
    9. ',_' → logprob: -11.252006530761719
    10. '_,' → logprob: -11.502006530761719

Token 2660: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005705483490601182
    2. ' ,' → logprob: -7.875570774078369
    3. ' in' → logprob: -9.625570297241211
    4. ',current' → logprob: -10.875570297241211
    5. ',next' → logprob: -11.125570297241211
    6. ',c' → logprob: -11.500570297241211
    7. '```' → logprob: -11.875570297241211
    8. ',k' → logprob: -12.000570297241211
    9. '<|end|>' → logprob: -12.000570297241211
    10. '           ' → logprob: -12.000570297241211

Token 2661: ' paw' (ID: 71961)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.010105586610734463
    2. 'p' → logprob: -4.635105609893799
    3. ' cur' → logprob: -8.51010513305664
    4. 'paw' → logprob: -9.63510513305664
    5. 'fro' → logprob: -10.01010513305664
    6. 'pr' → logprob: -12.13510513305664
    7. 'pawn' → logprob: -12.26010513305664
    8. ' paw' → logprob: -12.76010513305664
    9. '   ' → logprob: -12.76010513305664
    10. 'set' → logprob: -13.26010513305664

Token 2662: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -9.088346359931165e-07
    2. 'n' → logprob: -14.375000953674316
    3. '_ns' → logprob: -15.250000953674316
    4. ' ns' → logprob: -18.375
    5. 's' → logprob: -18.875
    6. 'nts' → logprob: -19.0
    7. '	ns' → logprob: -19.5
    8. 'ons' → logprob: -20.0
    9. '(ns' → logprob: -20.5
    10. 'nds' → logprob: -21.0

Token 2663: '_new' (ID: 13000)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.043363846838474274
    2. '_new' → logprob: -3.1683638095855713
    3. ',' → logprob: -8.543363571166992
    4. '_cur' → logprob: -9.293363571166992
    5. 'set' → logprob: -10.668363571166992
    6. '_sets' → logprob: -11.043363571166992
    7. 'new' → logprob: -11.418363571166992
    8. ',_' → logprob: -11.918363571166992
    9. ',new' → logprob: -11.918363571166992
    10. 'cur' → logprob: -12.668363571166992

Token 2664: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002252314705401659
    2. '_set' → logprob: -6.627252101898193
    3. ' ,' → logprob: -8.002252578735352
    4. '_,' → logprob: -8.127252578735352
    5. ',_' → logprob: -9.252252578735352
    6. ',set' → logprob: -9.252252578735352
    7. ',new' → logprob: -10.127252578735352
    8. '_new' → logprob: -10.752252578735352
    9. '```' → logprob: -11.377252578735352
    10. ',f' → logprob: -12.252252578735352

Token 2665: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -8.983476436696947e-05
    2. ' open' → logprob: -10.000089645385742
    3. 'new' → logprob: -10.375089645385742
    4. 'opens' → logprob: -11.750089645385742
    5. 'cur' → logprob: -13.250089645385742
    6. 'op' → logprob: -13.500089645385742
    7. '	open' → logprob: -14.375089645385742
    8. '_open' → logprob: -14.750089645385742
    9. '   ' → logprob: -15.000089645385742
    10. '```' → logprob: -15.875089645385742

Token 2666: '_new' (ID: 13000)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.012461502104997635
    2. '_new' → logprob: -4.8874616622924805
    3. '_' → logprob: -6.2624616622924805
    4. '_set' → logprob: -7.5124616622924805
    5. '```' → logprob: -7.5124616622924805
    6. '_tokens' → logprob: -8.38746166229248
    7. '((' → logprob: -8.51246166229248
    8. '_spaces' → logprob: -8.88746166229248
    9. '(_' → logprob: -9.01246166229248
    10. '}_' → logprob: -9.01246166229248

Token 2667: ' in' (ID: 306)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.9887323975563049
    2. 'in' → logprob: -1.3637323379516602
    3. ' in' → logprob: -1.7387323379516602
    4. ')' → logprob: -1.7387323379516602
    5. '):
' → logprob: -4.98873233795166
    6. '_in' → logprob: -5.11373233795166
    7. ')_' → logprob: -6.36373233795166
    8. '_' → logprob: -6.48873233795166
    9. '   ' → logprob: -6.61373233795166
    10. ')set' → logprob: -7.73873233795166

Token 2668: ' king' (ID: 13793)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5926706194877625
    2. 'queue' → logprob: -1.2176706790924072
    3. '(queue' → logprob: -2.4676706790924072
    4. 'king' → logprob: -3.8426706790924072
    5. ' queue' → logprob: -4.342670440673828
    6. '(' → logprob: -4.467670440673828
    7. '       ' → logprob: -4.967670440673828
    8. ' visited' → logprob: -5.217670440673828
    9. '           ' → logprob: -6.467670440673828
    10. ' (' → logprob: -6.592670440673828

Token 2669: '_slide' (ID: 149819)
  Prédit: '_slide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_slide' → logprob: -0.006210562773048878
    2. '_moves' → logprob: -5.2562103271484375
    3. '_s' → logprob: -7.7562103271484375
    4. '_move' → logprob: -8.756210327148438
    5. 'slide' → logprob: -9.006210327148438
    6. '_sl' → logprob: -9.506210327148438
    7. '_new' → logprob: -10.256210327148438
    8. '_slice' → logprob: -10.881210327148438
    9. 'Slide' → logprob: -11.006210327148438
    10. '_slider' → logprob: -11.131210327148438

Token 2670: '_moves' (ID: 110706)
  Prédit: '_moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.00023452966706827283
    2. 'moves' → logprob: -8.375234603881836
    3. '(_' → logprob: -13.625234603881836
    4. 'Moves' → logprob: -14.750234603881836
    5. '   ' → logprob: -14.750234603881836
    6. '(' → logprob: -14.875234603881836
    7. '_move' → logprob: -15.000234603881836
    8. '((' → logprob: -15.125234603881836
    9. 's' → logprob: -15.875234603881836
    10. '[(' → logprob: -16.125234603881836

Token 2671: '(cur' (ID: 34723)
  Prédit: '(cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -3.214019307051785e-05
    2. '(' → logprob: -10.375032424926758
    3. '[cur' → logprob: -15.250032424926758
    4. 'cur' → logprob: -15.375032424926758
    5. '   ' → logprob: -16.125032424926758
    6. ' (' → logprob: -16.375032424926758
    7. '(curr' → logprob: -16.375032424926758
    8. '(
' → logprob: -16.625032424926758
    9. '((' → logprob: -17.125032424926758
    10. '       ' → logprob: -17.625032424926758

Token 2672: '_' (ID: 62)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.036050472408533096
    2. '_' → logprob: -3.41105055809021
    3. 'cur' → logprob: -6.161050319671631
    4. 'k' → logprob: -9.286050796508789
    5. '_cur' → logprob: -9.411050796508789
    6. 'kr' → logprob: -10.286050796508789
    7. '_new' → logprob: -10.786050796508789
    8. '(cur' → logprob: -11.036050796508789
    9. 'kc' → logprob: -11.536050796508789
    10. 'new' → logprob: -11.661050796508789

Token 2673: 'kr' (ID: 7316)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.17580774426460266
    2. 'kc' → logprob: -2.4258077144622803
    3. 'cur' → logprob: -3.0508077144622803
    4. 'kr' → logprob: -4.175807952880859
    5. 'k' → logprob: -4.675807952880859
    6. '_' → logprob: -7.675807952880859
    7. 'kur' → logprob: -9.80080795288086
    8. '
' → logprob: -10.55080795288086
    9. 'new' → logprob: -10.67580795288086
    10. '_p' → logprob: -10.80080795288086

Token 2674: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3869971036911011
    2. ',k' → logprob: -1.136997103691101
    3. ' ,' → logprob: -9.51199722290039
    4. '(k' → logprob: -11.63699722290039
    5. ',
' → logprob: -12.01199722290039
    6. ',n' → logprob: -12.13699722290039
    7. ',K' → logprob: -12.63699722290039
    8. '```' → logprob: -12.76199722290039
    9. ',c' → logprob: -12.88699722290039
    10. ',j' → logprob: -12.88699722290039

Token 2675: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -1.3782830137643032e-05
    2. 'kc' → logprob: -11.37501335144043
    3. ' cur' → logprob: -13.12501335144043
    4. '   ' → logprob: -15.75001335144043
    5. '(cur' → logprob: -17.50001335144043
    6. '       ' → logprob: -17.50001335144043
    7. '
' → logprob: -17.75001335144043
    8. '	cur' → logprob: -18.12501335144043
    9. 'k' → logprob: -18.37501335144043
    10. '           ' → logprob: -18.75001335144043

Token 2676: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.00024500858853571117
    2. 'kc' → logprob: -8.375245094299316
    3. '_c' → logprob: -11.375245094299316
    4. ' kc' → logprob: -14.375245094299316
    5. '_nc' → logprob: -14.375245094299316
    6. 'k' → logprob: -14.750245094299316
    7. 'c' → logprob: -15.500245094299316
    8. '-k' → logprob: -15.625245094299316
    9. '   ' → logprob: -15.875245094299316
    10. '_' → logprob: -16.000244140625

Token 2677: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0003131784324068576
    2. '_c' → logprob: -8.125312805175781
    3. '
' → logprob: -12.125312805175781
    4. 'kc' → logprob: -12.125312805175781
    5. ',' → logprob: -13.500312805175781
    6. '   ' → logprob: -14.125312805175781
    7. ' ' → logprob: -14.125312805175781
    8. ',c' → logprob: -14.500312805175781
    9. '```' → logprob: -14.625312805175781
    10. '  ' → logprob: -15.375312805175781

Token 2678: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04893966764211655
    2. ',k' → logprob: -3.0489397048950195
    3. ' ,' → logprob: -8.29893970489502
    4. ',p' → logprob: -10.04893970489502
    5. ',w' → logprob: -11.29893970489502
    6. ',n' → logprob: -11.42393970489502
    7. '   ' → logprob: -12.67393970489502
    8. ')' → logprob: -12.67393970489502
    9. ',None' → logprob: -12.67393970489502
    10. ',user' → logprob: -12.92393970489502

Token 2679: ' cur' (ID: 4396)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.0015040287980809808
    2. ' open' → logprob: -6.501503944396973
    3. 'king' → logprob: -13.876503944396973
    4. '           ' → logprob: -15.126503944396973
    5. '               ' → logprob: -16.00150489807129
    6. '   ' → logprob: -16.50150489807129
    7. ' king' → logprob: -17.00150489807129
    8. '                   ' → logprob: -17.12650489807129
    9. '```' → logprob: -17.25150489807129
    10. '	open' → logprob: -17.25150489807129

Token 2680: '_p' (ID: 1359)
  Prédit: '_new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_new' → logprob: -0.16082516312599182
    2. '_k' → logprob: -2.160825252532959
    3. '_open' → logprob: -3.660825252532959
    4. 'open' → logprob: -5.285825252532959
    5. '_n' → logprob: -6.410825252532959
    6. 'k' → logprob: -7.910825252532959
    7. 'New' → logprob: -8.1608247756958
    8. 'new' → logprob: -8.7858247756958
    9. '_' → logprob: -10.2858247756958
    10. '   ' → logprob: -11.5358247756958

Token 2681: 'awns' (ID: 115084)
  Prédit: 'awns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'awns' → logprob: -5.431207682704553e-05
    2. 'owns' → logprob: -11.125054359436035
    3. 'aw' → logprob: -11.375054359436035
    4. 'awn' → logprob: -11.500054359436035
    5. 'wn' → logprob: -12.375054359436035
    6. 'aws' → logprob: -12.500054359436035
    7. 'a' → logprob: -12.875054359436035
    8. 'w' → logprob: -13.625054359436035
    9. '`' → logprob: -13.625054359436035
    10. '
' → logprob: -14.750054359436035

Token 2682: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013834332639817148
    2. ' ,' → logprob: -9.125138282775879
    3. '           ' → logprob: -12.000138282775879
    4. ',
' → logprob: -12.250138282775879
    5. '   ' → logprob: -12.500138282775879
    6. '       ' → logprob: -12.625138282775879
    7. '               ' → logprob: -13.375138282775879
    8. ',new' → logprob: -14.000138282775879
    9. ',next' → logprob: -14.000138282775879
    10. ',out' → logprob: -14.125138282775879

Token 2683: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.0007107630372047424
    2. ' open' → logprob: -7.250710964202881
    3. '   ' → logprob: -14.875710487365723
    4. '           ' → logprob: -15.750710487365723
    5. '               ' → logprob: -16.12571144104004
    6. '       ' → logprob: -16.75071144104004
    7. 'cur' → logprob: -17.25071144104004
    8. '                   ' → logprob: -17.37571144104004
    9. '
' → logprob: -17.62571144104004
    10. '	open' → logprob: -17.87571144104004

Token 2684: '_set' (ID: 5451)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.012215528637170792
    2. '_new' → logprob: -4.762215614318848
    3. '_set' → logprob: -5.762215614318848
    4. '_sets' → logprob: -8.637215614318848
    5. 'new' → logprob: -9.012215614318848
    6. 's' → logprob: -9.262215614318848
    7. ')' → logprob: -11.512215614318848
    8. 'New' → logprob: -12.137215614318848
    9. 'set' → logprob: -12.262215614318848
    10. 'Squares' → logprob: -12.262215614318848

Token 2685: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.012600069865584373
    2. '):' → logprob: -4.512599945068359
    3. '       ' → logprob: -6.512599945068359
    4. '           ' → logprob: -10.01259994506836
    5. '):
' → logprob: -11.51259994506836
    6. '   ' → logprob: -12.13759994506836
    7. ')' → logprob: -13.51259994506836
    8. '               ' → logprob: -13.76259994506836
    9. '          ' → logprob: -14.01259994506836
    10. ' ):
' → logprob: -14.26259994506836

Token 2686: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35420897603034973
    2. '               ' → logprob: -1.2292089462280273
    3. '```' → logprob: -6.104208946228027
    4. 'if' → logprob: -6.479208946228027
    5. '       ' → logprob: -6.604208946228027
    6. '{
' → logprob: -8.729208946228027
    7. '                   ' → logprob: -8.979208946228027
    8. '   ' → logprob: -8.979208946228027
    9. '	       ' → logprob: -10.229208946228027
    10. ' if' → logprob: -10.229208946228027

Token 2687: ' state' (ID: 2608)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17853617668151855
    2. '               ' → logprob: -1.9285361766815186
    3. ' if' → logprob: -4.303536415100098
    4. '           ' → logprob: -5.428536415100098
    5. '   ' → logprob: -9.053536415100098
    6. '       ' → logprob: -9.928536415100098
    7. '```' → logprob: -10.303536415100098
    8. '                   ' → logprob: -10.553536415100098
    9. 'visited' → logprob: -12.428536415100098
    10. '``' → logprob: -12.928536415100098

Token 2688: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5505198240280151
    2. ' =' → logprob: -1.0505198240280151
    3. '_tokens' → logprob: -3.3005199432373047
    4. '           ' → logprob: -4.550519943237305
    5. '_token' → logprob: -4.550519943237305
    6. '_state' → logprob: -5.925519943237305
    7. '=
' → logprob: -6.175519943237305
    8. ')' → logprob: -6.300519943237305
    9. '_' → logprob: -6.550519943237305
    10. '=_' → logprob: -6.675519943237305

Token 2689: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4021237802808173e-05
    2. ' (' → logprob: -11.250014305114746
    3. '(k' → logprob: -14.125014305114746
    4. '           ' → logprob: -15.250014305114746
    5. '   ' → logprob: -17.75001335144043
    6. '(
' → logprob: -18.62501335144043
    7. 'kr' → logprob: -19.75001335144043
    8. ' kr' → logprob: -20.12501335144043
    9. '((' → logprob: -20.62501335144043
    10. '            
' → logprob: -21.00001335144043

Token 2690: 'kr' (ID: 7316)
  Prédit: 'kr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kr' → logprob: -1.6240566083070007e-06
    2. ' kr' → logprob: -13.875001907348633
    3. '(' → logprob: -14.250001907348633
    4. '   ' → logprob: -17.875001907348633
    5. 'king' → logprob: -19.375001907348633
    6. 'Kr' → logprob: -19.500001907348633
    7. 'kg' → logprob: -19.750001907348633
    8. 'kc' → logprob: -19.750001907348633
    9. 'ks' → logprob: -20.125001907348633
    10. 'kl' → logprob: -20.500001907348633

Token 2691: '_new' (ID: 13000)
  Prédit: '_new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_new' → logprob: -7.255023956531659e-05
    2. 'new' → logprob: -9.750072479248047
    3. 'New' → logprob: -12.000072479248047
    4. '_' → logprob: -12.125072479248047
    5. '_NEW' → logprob: -14.250072479248047
    6. '_k' → logprob: -14.750072479248047
    7. ',' → logprob: -14.875072479248047
    8. '_,' → logprob: -14.875072479248047
    9. '_n' → logprob: -16.000072479248047
    10. '   ' → logprob: -16.125072479248047

Token 2692: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1602877974510193
    2. ',k' → logprob: -1.910287857055664
    3. ',
' → logprob: -9.785287857055664
    4. ' ,' → logprob: -11.910287857055664
    5. ',c' → logprob: -16.285287857055664
    6. ',K' → logprob: -16.285287857055664
    7. ',

' → logprob: -16.660287857055664
    8. ',
' → logprob: -16.785287857055664
    9. ',\
' → logprob: -16.910287857055664
    10. ',n' → logprob: -16.910287857055664

Token 2693: ' kc' (ID: 186187)
  Prédit: 'kc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kc' → logprob: -1.676292231422849e-05
    2. ' kc' → logprob: -11.000017166137695
    3. 'k' → logprob: -17.250017166137695
    4. 'KC' → logprob: -21.000017166137695
    5. 'kb' → logprob: -22.750017166137695
    6. 'ks' → logprob: -23.000017166137695
    7. '
' → logprob: -23.250017166137695
    8. 'ka' → logprob: -23.750017166137695
    9. 'kil' → logprob: -24.000017166137695
    10. 'kg' → logprob: -24.000017166137695

Token 2694: '_new' (ID: 13000)
  Prédit: '_new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_new' → logprob: -0.3754943311214447
    2. ',' → logprob: -2.0004942417144775
    3. 'kc' → logprob: -2.3754942417144775
    4. '_nc' → logprob: -3.1254942417144775
    5. ' kc' → logprob: -4.125494480133057
    6. 'c' → logprob: -4.875494480133057
    7. '_k' → logprob: -5.000494480133057
    8. ',k' → logprob: -5.750494480133057
    9. '_c' → logprob: -6.250494480133057
    10. '_,' → logprob: -6.375494480133057

Token 2695: ',' (ID: 11)
  Prédit: ',p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.38690876960754395
    2. ',' → logprob: -1.136908769607544
    3. ' ,' → logprob: -11.386908531188965
    4. ',
' → logprob: -11.511908531188965
    5. '           ' → logprob: -12.261908531188965
    6. ',P' → logprob: -12.386908531188965
    7. '   ' → logprob: -13.011908531188965
    8. ',f' → logprob: -13.886908531188965
    9. ',k' → logprob: -14.386908531188965
    10. '       ' → logprob: -14.886908531188965

Token 2696: ' paw' (ID: 71961)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.025136014446616173
    2. 'paw' → logprob: -3.7751359939575195
    3. ' paw' → logprob: -6.4001359939575195
    4. 'pawn' → logprob: -8.40013599395752
    5. '           ' → logprob: -13.65013599395752
    6. '   ' → logprob: -15.15013599395752
    7. 'fro' → logprob: -15.40013599395752
    8. '<p' → logprob: -16.150136947631836
    9. 'pox' → logprob: -16.400136947631836
    10. '         ' → logprob: -16.525136947631836

Token 2697: 'ns' (ID: 6097)
  Prédit: 'ns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.023009134456515312
    2. 'ons' → logprob: -3.8980090618133545
    3. 'uns' → logprob: -6.898009300231934
    4. 's' → logprob: -7.523009300231934
    5. 'wn' → logprob: -7.898009300231934
    6. 'w' → logprob: -8.523009300231934
    7. '_ns' → logprob: -9.398009300231934
    8. 'n' → logprob: -9.648009300231934
    9. 'awns' → logprob: -10.023009300231934
    10. 'new' → logprob: -10.273009300231934

Token 2698: '_new' (ID: 13000)
  Prédit: '_new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_new' → logprob: -1.8193366486229934e-05
    2. 'new' → logprob: -11.000018119812012
    3. 'New' → logprob: -14.125018119812012
    4. '```' → logprob: -15.875018119812012
    5. '_set' → logprob: -16.000019073486328
    6. '
' → logprob: -16.000019073486328
    7. '_NEW' → logprob: -16.375019073486328
    8. '_n' → logprob: -16.375019073486328
    9. 's' → logprob: -16.500019073486328
    10. '_news' → logprob: -16.625019073486328

Token 2699: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003234262694604695
    2. '           ' → logprob: -9.625323295593262
    3. ',
' → logprob: -9.875323295593262
    4. ' ,' → logprob: -10.125323295593262
    5. '```' → logprob: -11.000323295593262
    6. '<|end|>' → logprob: -11.000323295593262
    7. ',next' → logprob: -11.125323295593262
    8. ')' → logprob: -11.375323295593262
    9. ',s' → logprob: -11.750323295593262
    10. ',user' → logprob: -11.750323295593262

Token 2700: ' tuple' (ID: 31311)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.005241702310740948
    2. 'tuple' → logprob: -5.255241870880127
    3. ' open' → logprob: -12.380241394042969
    4. '(open' → logprob: -13.380241394042969
    5. ' tuple' → logprob: -14.130241394042969
    6. '   ' → logprob: -14.255241394042969
    7. 'op' → logprob: -15.880241394042969
    8. '	open' → logprob: -16.00524139404297
    9. '(tuple' → logprob: -16.13024139404297
    10. '           ' → logprob: -16.38024139404297

Token 2701: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.5760053992271423
    2. 'sorted' → logprob: -0.8260053992271423
    3. '(open' → logprob: -10.076004981994629
    4. 'open' → logprob: -10.701004981994629
    5. ' sorted' → logprob: -14.951004981994629
    6. '.sorted' → logprob: -15.201004981994629
    7. '(' → logprob: -15.701004981994629
    8. '
' → logprob: -15.951004981994629
    9. '_sorted' → logprob: -16.201005935668945
    10. '   ' → logprob: -16.326005935668945

Token 2702: '(open' (ID: 62785)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.6931489706039429
    2. '(open' → logprob: -0.6931489706039429
    3. '=open' → logprob: -13.693148612976074
    4. ' open' → logprob: -15.693148612976074
    5. '	open' → logprob: -16.06814956665039
    6. '```' → logprob: -16.06814956665039
    7. 'list' → logprob: -16.06814956665039
    8. '
' → logprob: -16.94314956665039
    9. '/open' → logprob: -17.44314956665039
    10. '(list' → logprob: -17.81814956665039

Token 2703: '_new' (ID: 13000)
  Prédit: '_new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_new' → logprob: -0.0006502442411147058
    2. 'new' → logprob: -7.375650405883789
    3. '_open' → logprob: -11.125650405883789
    4. '(new' → logprob: -12.375650405883789
    5. 'New' → logprob: -13.125650405883789
    6. 'open' → logprob: -14.125650405883789
    7. '_s' → logprob: -14.250650405883789
    8. 's' → logprob: -14.375650405883789
    9. '(open' → logprob: -14.625650405883789
    10. '_NEW' → logprob: -16.87565040588379

Token 2704: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.09445906430482864
    2. ')))' → logprob: -2.594459056854248
    3. '))
' → logprob: -4.219459056854248
    4. ')))
' → logprob: -7.344459056854248
    5. ')' → logprob: -10.094459533691406
    6. '           ' → logprob: -10.719459533691406
    7. '   ' → logprob: -11.594459533691406
    8. '       ' → logprob: -11.594459533691406
    9. '))))' → logprob: -12.594459533691406
    10. '               ' → logprob: -13.094459533691406

Token 2705: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21808791160583496
    2. '```' → logprob: -2.093087911605835
    3. '                   ' → logprob: -3.218087911605835
    4. ')' → logprob: -4.718088150024414
    5. '           ' → logprob: -5.343088150024414
    6. '   ' → logprob: -5.468088150024414
    7. '<|end|>' → logprob: -5.718088150024414
    8. ',' → logprob: -5.968088150024414
    9. '``' → logprob: -6.218088150024414
    10. '{
' → logprob: -6.593088150024414

Token 2706: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5025764107704163
    2. '               ' → logprob: -1.0025763511657715
    3. '           ' → logprob: -3.7525763511657715
    4. ' if' → logprob: -5.5025763511657715
    5. '```' → logprob: -7.7525763511657715
    6. '                   ' → logprob: -9.50257682800293
    7. '   ' → logprob: -10.37757682800293
    8. '``' → logprob: -11.12757682800293
    9. '       ' → logprob: -12.25257682800293
    10. '              ' → logprob: -13.12757682800293

Token 2707: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.5759430527687073
    2. ' state' → logprob: -0.8259430527687073
    3. '(state' → logprob: -12.700942993164062
    4. '   ' → logprob: -15.950942993164062
    5. '	state' → logprob: -16.325942993164062
    6. '               ' → logprob: -16.575942993164062
    7. '           ' → logprob: -16.950942993164062
    8. ' not' → logprob: -16.950942993164062
    9. 'not' → logprob: -17.200942993164062
    10. '                   ' → logprob: -17.450942993164062

Token 2708: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.014360236935317516
    2. 'not' → logprob: -4.264360427856445
    3. ' in' → logprob: -9.514360427856445
    4. ')' → logprob: -10.139360427856445
    5. ' !=' → logprob: -10.264360427856445
    6. 'in' → logprob: -11.014360427856445
    7. '!=' → logprob: -11.889360427856445
    8. '[' → logprob: -12.139360427856445
    9. '<|end|>' → logprob: -12.264360427856445
    10. '           ' → logprob: -12.514360427856445

Token 2709: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0661078467965126
    2. 'in' → logprob: -3.191107749938965
    3. ' not' → logprob: -3.816107749938965
    4. ')' → logprob: -8.816107749938965
    5. '<|end|>' → logprob: -8.941107749938965
    6. ' add' → logprob: -9.691107749938965
    7. 'not' → logprob: -9.691107749938965
    8. '_add' → logprob: -9.691107749938965
    9. ' visited' → logprob: -9.941107749938965
    10. 'visited' → logprob: -9.941107749938965

Token 2710: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -7.941850526549388e-06
    2. ' visited' → logprob: -11.750007629394531
    3. '{' → logprob: -17.37500762939453
    4. 'visible' → logprob: -18.25000762939453
    5. '
' → logprob: -18.50000762939453
    6. 'seen' → logprob: -19.00000762939453
    7. '{
' → logprob: -20.00000762939453
    8. '```' → logprob: -20.25000762939453
    9. '{"' → logprob: -21.12500762939453
    10. '   ' → logprob: -21.87500762939453

Token 2711: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33797386288642883
    2. ':
' → logprob: -1.4629738330841064
    3. '                   ' → logprob: -4.0879740715026855
    4. '                               ' → logprob: -4.7129740715026855
    5. '                       ' → logprob: -4.9629740715026855
    6. '):
' → logprob: -5.2129740715026855
    7. '{
' → logprob: -5.7129740715026855
    8. ':' → logprob: -5.7129740715026855
    9. '```' → logprob: -5.7129740715026855
    10. '                           ' → logprob: -6.4629740715026855

Token 2712: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8210371732711792
    2. '                   ' → logprob: -1.0710371732711792
    3. '                       ' → logprob: -2.3210372924804688
    4. '```' → logprob: -2.4460372924804688
    5. '                               ' → logprob: -3.8210372924804688
    6. '                           ' → logprob: -5.571037292480469
    7. '``' → logprob: -6.446037292480469
    8. '           ' → logprob: -6.696037292480469
    9. '{
' → logprob: -6.946037292480469
    10. '                ' → logprob: -8.196037292480469

Token 2713: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.6897607445716858
    2. '                   ' → logprob: -1.064760684967041
    3. '               ' → logprob: -2.564760684967041
    4. '```' → logprob: -2.814760684967041
    5. '                               ' → logprob: -5.189760684967041
    6. '``' → logprob: -5.314760684967041
    7. '                       ' → logprob: -5.564760684967041
    8. ' visited' → logprob: -6.689760684967041
    9. '                ' → logprob: -8.3147611618042
    10. '           ' → logprob: -8.4397611618042

Token 2714: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.009797999635338783
    2. '.' → logprob: -4.634798049926758
    3. '.setdefault' → logprob: -11.134798049926758
    4. '_add' → logprob: -11.884798049926758
    5. '.append' → logprob: -11.884798049926758
    6. '                   ' → logprob: -13.134798049926758
    7. '<|end|>' → logprob: -13.134798049926758
    8. '           ' → logprob: -13.259798049926758
    9. '.Add' → logprob: -13.384798049926758
    10. '.
' → logprob: -13.884798049926758

Token 2715: '(state' (ID: 16114)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5972954034805298
    2. '(state' → logprob: -0.8472954034805298
    3. '(
' → logprob: -3.9722952842712402
    4. 'state' → logprob: -6.47229528427124
    5. ' (' → logprob: -7.72229528427124
    6. '(space' → logprob: -8.347295761108398
    7. ' state' → logprob: -9.847295761108398
    8. ' (
' → logprob: -11.472295761108398
    9. '(token' → logprob: -13.222295761108398
    10. ''' → logprob: -13.597295761108398

Token 2716: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015499046072363853
    2. ')' → logprob: -4.890499114990234
    3. ')(
' → logprob: -6.140499114990234
    4. '```' → logprob: -6.640499114990234
    5. '(
' → logprob: -6.765499114990234
    6. '                   ' → logprob: -6.890499114990234
    7. ')
' → logprob: -7.140499114990234
    8. '<|end|>' → logprob: -8.390499114990234
    9. ',
' → logprob: -9.015499114990234
    10. '           ' → logprob: -9.015499114990234

Token 2717: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.22049202024936676
    2. '               ' → logprob: -1.8454920053482056
    3. '                   ' → logprob: -3.470492124557495
    4. '``' → logprob: -5.345491886138916
    5. '			' → logprob: -6.720491886138916
    6. '                       ' → logprob: -6.720491886138916
    7. '                               ' → logprob: -7.470491886138916
    8. '				' → logprob: -8.720492362976074
    9. '			       ' → logprob: -8.970492362976074
    10. '                           ' → logprob: -8.970492362976074

Token 2718: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.002252910751849413
    2. '                   ' → logprob: -7.00225305557251
    3. '```' → logprob: -7.00225305557251
    4. '               ' → logprob: -8.002252578735352
    5. ' queue' → logprob: -9.627252578735352
    6. '``' → logprob: -10.752252578735352
    7. '                       ' → logprob: -12.752252578735352
    8. '           ' → logprob: -13.252252578735352
    9. '   ' → logprob: -13.627252578735352
    10. '
' → logprob: -14.127252578735352

Token 2719: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001669485354796052
    2. '.enqueue' → logprob: -9.125166893005371
    3. '.' → logprob: -11.125166893005371
    4. 'append' → logprob: -11.500166893005371
    5. '_append' → logprob: -12.000166893005371
    6. '```' → logprob: -12.125166893005371
    7. '           ' → logprob: -12.375166893005371
    8. '               ' → logprob: -12.500166893005371
    9. '.extend' → logprob: -12.500166893005371
    10. '.put' → logprob: -12.625166893005371

Token 2720: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.4260805547237396
    2. '(' → logprob: -1.176080584526062
    3. '(
' → logprob: -3.3010804653167725
    4. '(state' → logprob: -6.676080703735352
    5. '```' → logprob: -8.801080703735352
    6. ' (' → logprob: -10.426080703735352
    7. '<|end|>' → logprob: -10.551080703735352
    8. ',' → logprob: -10.676080703735352
    9. '(('' → logprob: -10.676080703735352
    10. '(token' → logprob: -11.176080703735352

Token 2721: 'state' (ID: 5294)
  Prédit: '(state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.06212979927659035
    2. 'state' → logprob: -2.8121297359466553
    3. ' (' → logprob: -9.062129974365234
    4. '(' → logprob: -11.437129974365234
    5. ' state' → logprob: -11.437129974365234
    6. '[state' → logprob: -11.937129974365234
    7. '                   ' → logprob: -12.312129974365234
    8. '               ' → logprob: -12.312129974365234
    9. ',state' → logprob: -12.312129974365234
    10. '   ' → logprob: -13.437129974365234

Token 2722: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0051958090625703335
    2. ',state' → logprob: -6.005195617675781
    3. '               ' → logprob: -6.630195617675781
    4. '(state' → logprob: -7.505195617675781
    5. ',(' → logprob: -8.255195617675781
    6. '(' → logprob: -9.255195617675781
    7. '                   ' → logprob: -9.505195617675781
    8. ' ,' → logprob: -9.755195617675781
    9. ',
' → logprob: -9.755195617675781
    10. '           ' → logprob: -9.880195617675781

Token 2723: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.18172304332256317
    2. ' dist' → logprob: -1.8067229986190796
    3. '(dist' → logprob: -6.931723117828369
    4. 'state' → logprob: -7.431723117828369
    5. ' (' → logprob: -8.556722640991211
    6. ' state' → logprob: -9.056722640991211
    7. '(state' → logprob: -10.306722640991211
    8. '               ' → logprob: -10.806722640991211
    9. 'distance' → logprob: -11.181722640991211
    10. '                   ' → logprob: -11.556722640991211

Token 2724: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.650518920039758e-06
    2. ' +' → logprob: -12.625003814697266
    3. '+
' → logprob: -15.375003814697266
    4. '＋' → logprob: -17.625003814697266
    5. ')+' → logprob: -19.375003814697266
    6. '()+' → logprob: -20.000003814697266
    7. '1' → logprob: -20.125003814697266
    8. '+[' → logprob: -20.250003814697266
    9. '+xml' → logprob: -21.750003814697266
    10. '+)' → logprob: -21.750003814697266

Token 2725: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. '+' → logprob: -12.750003814697266
    3. ' ' → logprob: -14.375003814697266
    4. '2' → logprob: -15.125003814697266
    5. '   ' → logprob: -17.000003814697266
    6. '```' → logprob: -18.250003814697266
    7. '
' → logprob: -18.875003814697266
    8. '+
' → logprob: -19.875003814697266
    9. '           ' → logprob: -20.000003814697266
    10. ' +' → logprob: -20.250003814697266

Token 2726: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.061083611100912094
    2. '               ' → logprob: -3.3110835552215576
    3. ')' → logprob: -4.061083793640137
    4. '))
' → logprob: -5.311083793640137
    5. '           ' → logprob: -7.811083793640137
    6. '                   ' → logprob: -9.686083793640137
    7. '       ' → logprob: -9.811083793640137
    8. ')
' → logprob: -10.311083793640137
    9. '   ' → logprob: -10.561083793640137
    10. ')))' → logprob: -11.436083793640137

Token 2727: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5118023157119751
    2. '   ' → logprob: -1.011802315711975
    3. '       ' → logprob: -4.6368021965026855
    4. ')' → logprob: -4.8868021965026855
    5. '<|end|>' → logprob: -5.1368021965026855
    6. '
' → logprob: -5.2618021965026855
    7. '``' → logprob: -5.7618021965026855
    8. 'return' → logprob: -6.6368021965026855
    9. '    
' → logprob: -6.7618021965026855
    10. '\' → logprob: -7.7618021965026855

Token 2728: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16120287775993347
    2. '```' → logprob: -1.9112029075622559
    3. '   ' → logprob: -7.411202907562256
    4. ' return' → logprob: -8.786202430725098
    5. '``' → logprob: -8.911202430725098
    6. '{return' → logprob: -10.411202430725098
    7. '
' → logprob: -10.661202430725098
    8. ':return' → logprob: -11.036202430725098
    9. '	return' → logprob: -11.911202430725098
    10. '@return' → logprob: -12.661202430725098

Token 2729: ' If' (ID: 1843)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -9.77022064034827e-05
    2. '   ' → logprob: -9.250097274780273
    3. ' return' → logprob: -13.500097274780273
    4. '	return' → logprob: -16.500097274780273
    5. '```' → logprob: -17.500097274780273
    6. '#' → logprob: -17.875097274780273
    7. '{return' → logprob: -19.000097274780273
    8. 'Return' → logprob: -20.000097274780273
    9. '
' → logprob: -20.375097274780273
    10. '@return' → logprob: -21.500097274780273

Token 2730: ' BFS' (ID: 190016)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015434302622452378
    2. ' -' → logprob: -6.8765435218811035
    3. '   ' → logprob: -8.001543045043945
    4. 'return' → logprob: -8.876543045043945
    5. 'None' → logprob: -11.626543045043945
    6. ' no' → logprob: -12.251543045043945
    7. 'no' → logprob: -12.251543045043945
    8. '
' → logprob: -12.251543045043945
    9. ' return' → logprob: -12.626543045043945
    10. '```' → logprob: -12.751543045043945

Token 2731: ' finishes' (ID: 48473)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.884213387966156
    2. 'returns' → logprob: -1.2592134475708008
    3. '```' → logprob: -1.3842134475708008
    4. 'return' → logprob: -3.884213447570801
    5. ' returns' → logprob: -4.759213447570801
    6. '
' → logprob: -5.134213447570801
    7. '       ' → logprob: -5.259213447570801
    8. 'completed' → logprob: -6.259213447570801
    9. '#' → logprob: -6.259213447570801
    10. '``' → logprob: -6.384213447570801

Token 2732: ' without' (ID: 2935)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4413902461528778
    2. 'return' → logprob: -1.1913902759552002
    3. '```' → logprob: -3.5663902759552
    4. ',' → logprob: -4.566390037536621
    5. ':return' → logprob: -5.566390037536621
    6. ':' → logprob: -5.941390037536621
    7. ':
' → logprob: -6.191390037536621
    8. '       ' → logprob: -6.191390037536621
    9. ' return' → logprob: -6.441390037536621
    10. '-' → logprob: -6.566390037536621

Token 2733: ' finding' (ID: 12129)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00019734179659280926
    2. ' return' → logprob: -8.625197410583496
    3. 'finding' → logprob: -11.625197410583496
    4. 'result' → logprob: -12.375197410583496
    5. ' returning' → logprob: -13.250197410583496
    6. 'answer' → logprob: -13.750197410583496
    7. 'a' → logprob: -13.750197410583496
    8. 'found' → logprob: -15.375197410583496
    9. '```' → logprob: -15.375197410583496
    10. ' finding' → logprob: -15.625197410583496

Token 2734: ' goal' (ID: 8583)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10865703225135803
    2. '-' → logprob: -3.233657121658325
    3. ' a' → logprob: -3.233657121658325
    4. ' -' → logprob: -5.233656883239746
    5. 'answer' → logprob: -5.483656883239746
    6. 'result' → logprob: -5.608656883239746
    7. 'solution' → logprob: -5.733656883239746
    8. 'return' → logprob: -5.983656883239746
    9. '```' → logprob: -6.233656883239746
    10. '   ' → logprob: -7.233656883239746

Token 2735: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5057357549667358
    2. 'return' → logprob: -1.0057357549667358
    3. '       ' → logprob: -4.255735874176025
    4. '```' → logprob: -4.255735874176025
    5. ' return' → logprob: -6.755735874176025
    6. ':return' → logprob: -7.505735874176025
    7. ':
' → logprob: -7.755735874176025
    8. ',' → logprob: -8.505735397338867
    9. '
' → logprob: -8.880735397338867
    10. '{return' → logprob: -9.380735397338867

Token 2736: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027720704674720764
    2. 'return' → logprob: -6.002771854400635
    3. '```' → logprob: -8.502772331237793
    4. '       ' → logprob: -9.502772331237793
    5. ' return' → logprob: -11.377772331237793
    6. ':return' → logprob: -12.627772331237793
    7. '``' → logprob: -13.627772331237793
    8. '	return' → logprob: -14.127772331237793
    9. ':
' → logprob: -14.627772331237793
    10. '{return' → logprob: -14.877772331237793

Token 2737: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00871704239398241
    2. '   ' → logprob: -4.758717060089111
    3. ' return' → logprob: -9.758716583251953
    4. '```' → logprob: -10.133716583251953
    5. '	return' → logprob: -12.758716583251953
    6. '
' → logprob: -13.508716583251953
    7. '{return' → logprob: -15.133716583251953
    8. '       ' → logprob: -15.258716583251953
    9. '``' → logprob: -16.508716583251953
    10. ':return' → logprob: -17.008716583251953

Token 2738: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0019288709154352546
    2. ' -' → logprob: -6.251928806304932
    3. 'None' → logprob: -15.50192928314209
    4. ' ' → logprob: -18.376928329467773
    5. '   ' → logprob: -18.376928329467773
    6. ' None' → logprob: -18.501928329467773
    7. '-inf' → logprob: -18.876928329467773
    8. '−' → logprob: -19.251928329467773
    9. '```' → logprob: -20.876928329467773
    10. '-none' → logprob: -21.751928329467773

Token 2739: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -17.0
    3. '```' → logprob: -19.25
    4. '-' → logprob: -20.25
    5. '0' → logprob: -20.75
    6. ' ' → logprob: -20.875
    7. '10' → logprob: -21.625
    8. '9' → logprob: -21.625
    9. '   ' → logprob: -21.625
    10. '999' → logprob: -22.125

Token 2740: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2741: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7818211913108826
    2. '```' → logprob: -0.7818211913108826
    3. '<|end|>' → logprob: -2.7818212509155273
    4. 'def' → logprob: -3.9068212509155273
    5. '<|end|>' → logprob: -7.031821250915527
    6. 'import' → logprob: -7.656821250915527
    7. '\' → logprob: -8.031821250915527
    8. '\n' → logprob: -8.781821250915527
    9. '``' → logprob: -8.906821250915527
    10. 'if' → logprob: -9.031821250915527

Token 2742: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.01906263455748558
    2. ' solve' → logprob: -4.394062519073486
    3. 'main' → logprob: -5.269062519073486
    4. '_main' → logprob: -7.019062519073486
    5. 'solve' → logprob: -8.519062995910645
    6. ' parse' → logprob: -9.269062995910645
    7. ' read' → logprob: -9.769062995910645
    8. ' solution' → logprob: -10.519062995910645
    9. ' run' → logprob: -11.144062995910645
    10. '_input' → logprob: -11.394062995910645

Token 2743: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.015235038474202156
    2. '(' → logprob: -4.64023494720459
    3. '():
' → logprob: -5.39023494720459
    4. ':' → logprob: -8.01523494720459
    5. '_' → logprob: -9.01523494720459
    6. '(
' → logprob: -9.14023494720459
    7. '()' → logprob: -9.51523494720459
    8. '(args' → logprob: -10.26523494720459
    9. '(argv' → logprob: -10.39023494720459
    10. ' (' → logprob: -10.51523494720459

Token 2744: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06726375222206116
    2. ' import' → logprob: -3.4422638416290283
    3. 'import' → logprob: -3.5672638416290283
    4. '```' → logprob: -6.067263603210449
    5. ' input' → logprob: -6.192263603210449
    6. 'input' → logprob: -8.94226360321045
    7. ' for' → logprob: -10.06726360321045
    8. ' lines' → logprob: -10.06726360321045
    9. '``' → logprob: -10.31726360321045
    10. ' if' → logprob: -10.31726360321045

Token 2745: ' input' (ID: 3422)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7460010051727295
    2. '   ' → logprob: -1.1210010051727295
    3. 'n' → logprob: -2.4960010051727295
    4. ' import' → logprob: -3.2460010051727295
    5. 'input' (adapté à ' input') → logprob: -3.3710010051727295
    6. ' n' → logprob: -3.7460010051727295
    7. ' input' → logprob: -4.496001243591309
    8. 't' → logprob: -5.871001243591309
    9. 'T' → logprob: -6.371001243591309
    10. 'line' → logprob: -7.121001243591309

Token 2746: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05359920859336853
    2. '_line' → logprob: -3.5535991191864014
    3. '_data' → logprob: -4.1785993576049805
    4. '_lines' → logprob: -5.0535993576049805
    5. '().' → logprob: -6.9285993576049805
    6. '()
' → logprob: -7.9285993576049805
    7. 'data' → logprob: -9.17859935760498
    8. ' =' → logprob: -9.55359935760498
    9. '_str' → logprob: -9.55359935760498
    10. '_' → logprob: -9.92859935760498

Token 2747: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.12712012231349945
    2. ' sys' → logprob: -2.127120018005371
    3. 'input' → logprob: -8.627120018005371
    4. ' input' → logprob: -11.752120018005371
    5. '=sys' → logprob: -13.127120018005371
    6. 'lambda' → logprob: -13.377120018005371
    7. '	sys' → logprob: -13.627120018005371
    8. ' lambda' → logprob: -15.877120018005371
    9. '(sys' → logprob: -16.002120971679688
    10. 'stdin' → logprob: -17.627120971679688

Token 2748: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.004398786462843418
    2. '.' → logprob: -5.504398822784424
    3. '.readline' → logprob: -8.504398345947266
    4. '.stdout' → logprob: -9.504398345947266
    5. 'stdin' → logprob: -10.879398345947266
    6. '.argv' → logprob: -11.629398345947266
    7. '.std' → logprob: -11.879398345947266
    8. '(stdin' → logprob: -13.129398345947266
    9. '().' → logprob: -13.379398345947266
    10. '._' → logprob: -13.879398345947266

Token 2749: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.20692837238311768
    2. 'read' → logprob: -1.7069283723831177
    3. ' readline' → logprob: -5.706928253173828
    4. '_read' → logprob: -6.206928253173828
    5. 'rea' → logprob: -10.206928253173828
    6. 'input' → logprob: -10.581928253173828
    7. 'stdin' → logprob: -10.706928253173828
    8. 'readonly' → logprob: -10.831928253173828
    9. '.read' → logprob: -11.206928253173828
    10. '
' → logprob: -11.831928253173828

Token 2750: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6461639404296875
    2. '()' → logprob: -1.0211639404296875
    3. '()
' → logprob: -2.2711639404296875
    4. '
' → logprob: -5.1461639404296875
    5. 'def' → logprob: -5.3961639404296875
    6. '().' → logprob: -6.5211639404296875
    7. '()\' → logprob: -8.146163940429688
    8. 'n' → logprob: -9.271163940429688
    9. '    
' → logprob: -9.521163940429688
    10. 'num' → logprob: -10.271163940429688

Token 2751: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024924222379922867
    2. 'n' → logprob: -7.002492427825928
    3. '```' → logprob: -7.752492427825928
    4. 't' → logprob: -7.877492427825928
    5. 'T' → logprob: -8.25249195098877
    6. 'H' → logprob: -8.75249195098877
    7. 'def' → logprob: -9.50249195098877
    8. '
' → logprob: -9.75249195098877
    9. '(H' → logprob: -9.87749195098877
    10. 'for' → logprob: -9.87749195098877

Token 2752: ' while' (ID: 2049)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.3903191089630127
    2. 'H' → logprob: -1.1403191089630127
    3. 't' → logprob: -5.765318870544434
    4. '   ' → logprob: -8.890318870544434
    5. 'while' (adapté à ' while') → logprob: -9.390318870544434
    6. 'n' → logprob: -11.140318870544434
    7. 'N' → logprob: -11.265318870544434
    8. '
' → logprob: -11.265318870544434
    9. 'num' → logprob: -11.390318870544434
    10. ' T' → logprob: -11.515318870544434

Token 2753: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.3872104585170746
    2. 'True' → logprob: -1.137210488319397
    3. '(True' → logprob: -8.012210845947266
    4. '   ' → logprob: -12.762210845947266
    5. ' line' → logprob: -13.137210845947266
    6. 'line' → logprob: -13.637210845947266
    7. '1' → logprob: -14.137210845947266
    8. '=True' → logprob: -14.637210845947266
    9. ' ' → logprob: -15.137210845947266
    10. 'true' → logprob: -15.262210845947266

Token 2754: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.8589341044425964
    2. '():
' → logprob: -1.3589341640472412
    3. ':' → logprob: -1.7339341640472412
    4. ':
' → logprob: -2.733934164047241
    5. '       ' → logprob: -3.608934164047241
    6. '   ' → logprob: -3.608934164047241
    7. ' line' → logprob: -4.108933925628662
    8. '(line' → logprob: -5.858933925628662
    9. ',' → logprob: -7.358933925628662
    10. '_line' → logprob: -7.608933925628662

Token 2755: '       ' (ID: 309)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.9398306012153625
    2. '   ' → logprob: -1.1898305416107178
    3. ' line' → logprob: -1.1898305416107178
    4. '	line' → logprob: -7.564830780029297
    5. '```' → logprob: -9.064830780029297
    6. '       ' → logprob: -9.689830780029297
    7. '(line' → logprob: -10.564830780029297
    8. '#line' → logprob: -10.939830780029297
    9. '_line' → logprob: -11.939830780029297
    10. '    
' → logprob: -12.689830780029297

Token 2756: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.0067603676579892635
    2. '   ' → logprob: -5.256760597229004
    3. ' line' → logprob: -6.506760597229004
    4. 'l' → logprob: -11.631760597229004
    5. '	line' → logprob: -12.131760597229004
    6. '       ' → logprob: -12.256760597229004
    7. 'N' → logprob: -12.506760597229004
    8. 'n' → logprob: -12.756760597229004
    9. 'L' → logprob: -13.506760597229004
    10. '_line' → logprob: -13.631760597229004

Token 2757: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22611382603645325
    2. '=' → logprob: -1.6011137962341309
    3. '=line' → logprob: -7.351113796234131
    4. '   ' → logprob: -10.601114273071289
    5. '(line' → logprob: -11.726114273071289
    6. '()' → logprob: -12.101114273071289
    7. 'line' → logprob: -12.351114273071289
    8. '.strip' → logprob: -13.226114273071289
    9. '(' → logprob: -13.476114273071289
    10. '=input' → logprob: -13.726114273071289

Token 2758: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.048607006669044495
    2. ' input' → logprob: -3.048607110977173
    3. 'sys' → logprob: -11.673606872558594
    4. 'line' → logprob: -12.048606872558594
    5. ' sys' → logprob: -12.548606872558594
    6. '=input' → logprob: -13.798606872558594
    7. ' line' → logprob: -14.798606872558594
    8. '(input' → logprob: -15.423606872558594
    9. '_input' → logprob: -18.923606872558594
    10. '<input' → logprob: -19.048606872558594

Token 2759: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5479286909103394
    2. '()' → logprob: -1.0479286909103394
    3. '()
' → logprob: -2.672928810119629
    4. '=' → logprob: -7.297928810119629
    5. '.strip' → logprob: -7.547928810119629
    6. 'strip' → logprob: -7.922928810119629
    7. 'rstrip' → logprob: -8.547928810119629
    8. '()

' → logprob: -9.797928810119629
    9. '.rstrip' → logprob: -9.797928810119629
    10. ' =' → logprob: -10.172928810119629

Token 2760: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10422709584236145
    2. ' if' → logprob: -2.354227066040039
    3. '   ' → logprob: -5.729227066040039
    4. 'if' → logprob: -7.354227066040039
    5. '	if' → logprob: -10.854227066040039
    6. ' =' → logprob: -11.229227066040039
    7. '        
' → logprob: -11.354227066040039
    8. ' ' → logprob: -11.604227066040039
    9. ',' → logprob: -11.604227066040039
    10. '=' → logprob: -11.854227066040039

Token 2761: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4649226665496826
    2. ' if' → logprob: -1.2149226665496826
    3. '       ' → logprob: -2.5899226665496826
    4. '   ' → logprob: -10.589922904968262
    5. '	if' → logprob: -10.964922904968262
    6. '        
' → logprob: -12.339922904968262
    7. ' ' → logprob: -12.839922904968262
    8. '           ' → logprob: -13.214922904968262
    9. 'If' → logprob: -13.839922904968262
    10. '    ' → logprob: -13.839922904968262

Token 2762: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2530443072319031
    2. 'not' → logprob: -1.5030443668365479
    3. 'line' → logprob: -7.503044128417969
    4. ' line' → logprob: -7.503044128417969
    5. '#line' → logprob: -11.378044128417969
    6. '=line' → logprob: -15.753044128417969
    7. '[line' → logprob: -16.25304412841797
    8. '(line' → logprob: -16.62804412841797
    9. ' ' → logprob: -17.25304412841797
    10. '	not' → logprob: -17.50304412841797

Token 2763: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.002475777640938759
    2. ' line' → logprob: -6.002475738525391
    3. '#line' → logprob: -16.50247573852539
    4. '(line' → logprob: -18.00247573852539
    5. '	line' → logprob: -18.50247573852539
    6. '=line' → logprob: -18.62747573852539
    7. '[line' → logprob: -20.25247573852539
    8. '
' → logprob: -20.37747573852539
    9. '_line' → logprob: -21.00247573852539
    10. 'Line' → logprob: -21.25247573852539

Token 2764: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08743984252214432
    2. ':' → logprob: -2.587439775466919
    3. '.strip' → logprob: -4.962440013885498
    4. ' or' → logprob: -7.462440013885498
    5. '():
' → logprob: -8.58743953704834
    6. '.rstrip' → logprob: -8.71243953704834
    7. '.' → logprob: -8.96243953704834
    8. '.startswith' → logprob: -9.08743953704834
    9. '):
' → logprob: -9.33743953704834
    10. '   ' → logprob: -9.46243953704834

Token 2765: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08177738636732101
    2. '       ' → logprob: -2.831777334213257
    3. ' break' → logprob: -4.456777572631836
    4. 'break' → logprob: -5.331777572631836
    5. '   ' → logprob: -6.081777572631836
    6. ':
' → logprob: -7.956777572631836
    7. ':' → logprob: -9.331777572631836
    8. '	break' → logprob: -9.456777572631836
    9. '_break' → logprob: -9.706777572631836
    10. ',' → logprob: -9.706777572631836

Token 2766: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.6095155477523804
    2. '       ' → logprob: -0.8595155477523804
    3. ' break' → logprob: -3.60951566696167
    4. '           ' → logprob: -5.60951566696167
    5. '	break' → logprob: -6.60951566696167
    6. '   ' → logprob: -7.10951566696167
    7. '_break' → logprob: -9.984515190124512
    8. ' ' → logprob: -10.359515190124512
    9. 'return' → logprob: -11.234515190124512
    10. '
' → logprob: -11.359515190124512

Token 2767: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028612238820642233
    2. '   ' → logprob: -6.252861022949219
    3. '```' → logprob: -7.377861022949219
    4. ',' → logprob: -8.752861022949219
    5. ' if' → logprob: -10.377861022949219
    6. '        
' → logprob: -10.377861022949219
    7. '
' → logprob: -11.502861022949219
    8. 'n' → logprob: -11.752861022949219
    9. 'try' → logprob: -11.752861022949219
    10. 'if' → logprob: -11.752861022949219

Token 2768: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004385014064610004
    2. '   ' → logprob: -5.629384994506836
    3. '        
' → logprob: -8.004384994506836
    4. '```' → logprob: -8.254384994506836
    5. '
' → logprob: -9.629384994506836
    6. ',' → logprob: -10.254384994506836
    7. '    
' → logprob: -11.254384994506836
    8. 'try' → logprob: -11.379384994506836
    9. '           ' → logprob: -11.504384994506836
    10. ' line' → logprob: -11.879384994506836

Token 2769: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' (adapté à ' H') → logprob: -0.02687990665435791
    2. 'h' → logprob: -4.776879787445068
    3. '       ' → logprob: -4.776879787445068
    4. ' H' → logprob: -5.151879787445068
    5. 'parts' → logprob: -6.901879787445068
    6. ' parts' → logprob: -7.026879787445068
    7. 'line' → logprob: -7.526879787445068
    8. '   ' → logprob: -7.651879787445068
    9. 'HW' → logprob: -7.776879787445068
    10. 'if' → logprob: -8.526880264282227

Token 2770: ',W' (ID: 117252)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09161249548196793
    2. ',W' → logprob: -2.4666125774383545
    3. '=' → logprob: -6.216612339019775
    4. ' =' → logprob: -7.841612339019775
    5. ' ,' → logprob: -8.966612815856934
    6. ',w' → logprob: -10.216612815856934
    7. 'W' → logprob: -10.341612815856934
    8. ',
' → logprob: -11.216612815856934
    9. ',H' → logprob: -11.341612815856934
    10. ' W' → logprob: -11.591612815856934

Token 2771: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.049267563968896866
    2. ' =' → logprob: -3.049267530441284
    3. '=line' → logprob: -7.299267768859863
    4. '=int' → logprob: -13.174267768859863
    5. '=
' → logprob: -14.049267768859863
    6. ',' → logprob: -14.799267768859863
    7. '=input' → logprob: -15.299267768859863
    8. '   ' → logprob: -15.424267768859863
    9. ')=' → logprob: -16.299266815185547
    10. ')' → logprob: -16.799266815185547

Token 2772: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.313264399766922
    2. ' map' → logprob: -1.3132643699645996
    3. '	map' → logprob: -13.438264846801758
    4. '(map' → logprob: -14.938264846801758
    5. 'list' → logprob: -15.063264846801758
    6. '[' → logprob: -15.563264846801758
    7. 'm' → logprob: -15.938264846801758
    8. 'line' → logprob: -16.063264846801758
    9. 'tuple' → logprob: -16.438264846801758
    10. ' line' → logprob: -17.063264846801758

Token 2773: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001744200591929257
    2. 'int' → logprob: -6.501744270324707
    3. '(str' → logprob: -8.626744270324707
    4. '(lambda' → logprob: -10.751744270324707
    5. '[int' → logprob: -11.001744270324707
    6. '=int' → logprob: -11.626744270324707
    7. '(' → logprob: -12.126744270324707
    8. 'str' → logprob: -12.376744270324707
    9. '<int' → logprob: -12.751744270324707
    10. 'lambda' → logprob: -13.376744270324707

Token 2774: ',line' (ID: 171132)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.011284664273262024
    2. ',line' → logprob: -5.886284828186035
    3. '=line' → logprob: -6.011284828186035
    4. '().' → logprob: -6.011284828186035
    5. '(),' → logprob: -6.636284828186035
    6. '#line' → logprob: -7.136284828186035
    7. '[line' → logprob: -7.261284828186035
    8. ',' → logprob: -8.261284828186035
    9. '(' → logprob: -9.011284828186035
    10. 'line' → logprob: -9.636284828186035

Token 2775: '.strip' (ID: 40613)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.25411590933799744
    2. '.strip' → logprob: -2.1291158199310303
    3. '.split' → logprob: -2.2541158199310303
    4. '.readline' → logprob: -8.37911605834961
    5. '.' → logprob: -9.00411605834961
    6. '.rstrip' → logprob: -9.50411605834961
    7. ' .' → logprob: -10.75411605834961
    8. 'split' → logprob: -11.75411605834961
    9. '   ' → logprob: -11.87911605834961
    10. ').' → logprob: -12.25411605834961

Token 2776: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.3856492842023727e-06
    2. '.split' → logprob: -14.000000953674316
    3. '()' → logprob: -16.125001907348633
    4. '().
' → logprob: -16.375001907348633
    5. 'split' → logprob: -16.375001907348633
    6. '()
' → logprob: -16.500001907348633
    7. '())' → logprob: -16.875001907348633
    8. '   ' → logprob: -18.000001907348633
    9. '().__' → logprob: -18.375001907348633
    10. '()?.' → logprob: -18.375001907348633

Token 2777: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -15.375
    3. '(split' → logprob: -16.25
    4. 'rstrip' → logprob: -17.25
    5. 'strip' → logprob: -17.5
    6. 'spl' → logprob: -17.625
    7. ')' → logprob: -17.875
    8. '```' → logprob: -19.0
    9. 'startswith' → logprob: -19.125
    10. '_split' → logprob: -19.25

Token 2778: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5780475735664368
    2. ')' → logprob: -0.8280475735664368
    3. '()' → logprob: -7.078047752380371
    4. '())
' → logprob: -7.578047752380371
    5. '))' → logprob: -7.703047752380371
    6. '(' → logprob: -9.453047752380371
    7. ')
' → logprob: -9.578047752380371
    8. '('' → logprob: -9.953047752380371
    9. '(','' → logprob: -10.203047752380371
    10. '')' → logprob: -10.703047752380371

Token 2779: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008483256213366985
    2. 'if' → logprob: -5.008483409881592
    3. ' if' → logprob: -6.383483409881592
    4. '   ' → logprob: -10.008482933044434
    5. '```' → logprob: -10.758482933044434
    6. '	if' → logprob: -11.883482933044434
    7. '	' → logprob: -13.383482933044434
    8. '           ' → logprob: -14.633482933044434
    9. '<|end|>' → logprob: -14.633482933044434
    10. '        
' → logprob: -15.008482933044434

Token 2780: ' if' (ID: 538)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.09660471230745316
    2. 'if' (adapté à ' if') → logprob: -2.596604824066162
    3. '       ' → logprob: -4.096604824066162
    4. ' grid' → logprob: -7.346604824066162
    5. ' if' → logprob: -8.346604347229004
    6. '   ' → logprob: -10.721604347229004
    7. '	grid' → logprob: -11.221604347229004
    8. '```' → logprob: -12.721604347229004
    9. 'gr' → logprob: -13.096604347229004
    10. 'break' → logprob: -13.721604347229004

Token 2781: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00015872348740231246
    2. ' H' → logprob: -8.750158309936523
    3. '(H' → logprob: -15.875158309936523
    4. '   ' → logprob: -17.500158309936523
    5. ' ' → logprob: -18.750158309936523
    6. ' (' → logprob: -19.375158309936523
    7. '(' → logprob: -20.500158309936523
    8. '	H' → logprob: -20.625158309936523
    9. '  ' → logprob: -21.375158309936523
    10. '_H' → logprob: -22.125158309936523

Token 2782: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3132827877998352
    2. '==' → logprob: -1.3132827281951904
    3. '=' → logprob: -12.31328296661377
    4. ' ' → logprob: -12.43828296661377
    5. '   ' → logprob: -12.68828296661377
    6. ',' → logprob: -13.06328296661377
    7. '===' → logprob: -13.68828296661377
    8. '```' → logprob: -13.68828296661377
    9. '==
' → logprob: -14.43828296661377
    10. ')==' → logprob: -14.43828296661377

Token 2783: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '۰' → logprob: -21.25002098083496
    4. 'W' → logprob: -21.37502098083496
    5. '
' → logprob: -21.37502098083496
    6. 'Q' → logprob: -22.87502098083496
    7. '   ' → logprob: -23.00002098083496
    8. '```' → logprob: -23.25002098083496
    9. '  ' → logprob: -23.50002098083496
    10. '=' → logprob: -24.25002098083496

Token 2784: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '۰' → logprob: -20.625003814697266
    4. '
' → logprob: -21.875003814697266
    5. 'W' → logprob: -22.000003814697266
    6. '０' → logprob: -23.000003814697266
    7. 'Q' → logprob: -23.250003814697266
    8. '  ' → logprob: -23.375003814697266
    9. '  ' → logprob: -23.500003814697266
    10. '=' → logprob: -23.750003814697266

Token 2785: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06216598302125931
    2. 'and' → logprob: -2.8121659755706787
    3. ' or' → logprob: -9.437166213989258
    4. '	and' → logprob: -10.062166213989258
    5. '   ' → logprob: -10.312166213989258
    6. ':
' → logprob: -11.062166213989258
    7. ':' → logprob: -11.312166213989258
    8. ' ' → logprob: -12.062166213989258
    9. '           ' → logprob: -12.687166213989258
    10. '       ' → logprob: -12.687166213989258

Token 2786: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -2.15310683415737e-05
    2. ' W' → logprob: -10.750021934509277
    3. '	W' → logprob: -19.37502098083496
    4. '   ' → logprob: -20.12502098083496
    5. '  ' → logprob: -21.50002098083496
    6. ' ' → logprob: -22.12502098083496
    7. '<W' → logprob: -23.12502098083496
    8. '    ' → logprob: -24.37502098083496
    9. '
' → logprob: -24.62502098083496
    10. ' ' → logprob: -24.75002098083496

Token 2787: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04859202727675438
    2. '==' → logprob: -3.0485920906066895
    3. ')==' → logprob: -13.423591613769531
    4. ' ' → logprob: -14.048591613769531
    5. '=' → logprob: -14.673591613769531
    6. ' ===' → logprob: -14.923591613769531
    7. ' ' → logprob: -14.923591613769531
    8. ' =' → logprob: -15.173591613769531
    9. ' ==
' → logprob: -15.173591613769531
    10. '==
' → logprob: -15.298591613769531

Token 2788: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -19.000261306762695
    4. '  ' → logprob: -21.000261306762695
    5. '=' → logprob: -21.500261306762695
    6. '```' → logprob: -22.125261306762695
    7. '۰' → logprob: -22.250261306762695
    8. '<|end|>' → logprob: -22.375261306762695
    9. ' ' → logprob: -22.875261306762695
    10. '[' → logprob: -23.000261306762695

Token 2789: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -19.375015258789062
    4. '<|end|>' → logprob: -20.000015258789062
    5. '  ' → logprob: -20.250015258789062
    6. '<|end|>' → logprob: -20.625015258789062
    7. '
' → logprob: -21.125015258789062
    8. '۰' → logprob: -21.625015258789062
    9. 'import' → logprob: -22.125015258789062
    10. '=' → logprob: -22.250015258789062

Token 2790: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.49565839767456055
    2. ':' → logprob: -1.1206583976745605
    3. '           ' → logprob: -2.7456583976745605
    4. '       ' → logprob: -8.495658874511719
    5. ':return' → logprob: -8.495658874511719
    6. '		' → logprob: -10.245658874511719
    7. '   ' → logprob: -10.245658874511719
    8. '():
' → logprob: -11.495658874511719
    9. '	       ' → logprob: -11.495658874511719
    10. '               ' → logprob: -11.620658874511719

Token 2791: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001671730075031519
    2. '       ' → logprob: -6.50167179107666
    3. '		' → logprob: -10.00167179107666
    4. '	       ' → logprob: -10.12667179107666
    5. ':' → logprob: -10.87667179107666
    6. ':
' → logprob: -11.00167179107666
    7. '               ' → logprob: -11.50167179107666
    8. '   ' → logprob: -11.87667179107666
    9. ' break' → logprob: -12.50167179107666
    10. ',' → logprob: -12.50167179107666

Token 2792: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.016745837405323982
    2. 'return' → logprob: -4.5167460441589355
    3. ' break' → logprob: -5.2667460441589355
    4. '           ' → logprob: -8.016745567321777
    5. '	break' → logprob: -9.391745567321777
    6. '               ' → logprob: -9.766745567321777
    7. '       ' → logprob: -10.391745567321777
    8. ' return' → logprob: -11.016745567321777
    9. '_break' → logprob: -13.141745567321777
    10. '```' → logprob: -14.766745567321777

Token 2793: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003088871017098427
    2. '   ' → logprob: -8.250308990478516
    3. '        
' → logprob: -11.250308990478516
    4. '<|end|>' → logprob: -11.500308990478516
    5. '
' → logprob: -11.750308990478516
    6. 'grid' → logprob: -12.125308990478516
    7. '```' → logprob: -12.500308990478516
    8. '           ' → logprob: -12.875308990478516
    9. '	' → logprob: -13.875308990478516
    10. '	   ' → logprob: -14.875308990478516

Token 2794: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003839597338810563
    2. 'grid' → logprob: -8.500384330749512
    3. '   ' → logprob: -8.750384330749512
    4. '<|end|>' → logprob: -12.375384330749512
    5. '        
' → logprob: -12.625384330749512
    6. ' grid' → logprob: -12.750384330749512
    7. '```' → logprob: -12.875384330749512
    8. '	grid' → logprob: -13.250384330749512
    9. 'line' → logprob: -13.625384330749512
    10. ' lines' → logprob: -13.875384330749512

Token 2795: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.014508292078971863
    2. '       ' → logprob: -4.389508247375488
    3. ' grid' → logprob: -6.264508247375488
    4. '   ' → logprob: -9.514508247375488
    5. '	grid' → logprob: -11.139508247375488
    6. '_grid' → logprob: -13.014508247375488
    7. '.grid' → logprob: -14.514508247375488
    8. '        
' → logprob: -14.639508247375488
    9. 'Grid' → logprob: -14.764508247375488
    10. 'rows' → logprob: -14.764508247375488

Token 2796: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3510702848434448
    2. '=' → logprob: -1.2260702848434448
    3. '   ' → logprob: -6.226070404052734
    4. '=line' → logprob: -8.351070404052734
    5. '       ' → logprob: -9.601070404052734
    6. '=
' → logprob: -10.476070404052734
    7. '    ' → logprob: -10.476070404052734
    8. ' =
' → logprob: -10.476070404052734
    9. '=[]
' → logprob: -10.601070404052734
    10. '=[]' → logprob: -10.601070404052734

Token 2797: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06683555245399475
    2. '[input' → logprob: -3.566835641860962
    3. ' [' → logprob: -4.066835403442383
    4. '[line' → logprob: -4.566835403442383
    5. '[]
' → logprob: -6.316835403442383
    6. '[data' → logprob: -7.191835403442383
    7. '[class' → logprob: -7.316835403442383
    8. '[user' → logprob: -7.441835403442383
    9. '[str' → logprob: -7.441835403442383
    10. '[event' → logprob: -7.941835403442383

Token 2798: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -4.334533878136426e-05
    2. 'list' → logprob: -10.750042915344238
    3. ' input' → logprob: -10.750042915344238
    4. 'sys' → logprob: -15.125042915344238
    5. '[input' → logprob: -17.250043869018555
    6. 'line' → logprob: -17.500043869018555
    7. '<input' → logprob: -17.625043869018555
    8. '(input' → logprob: -19.250043869018555
    9. '=input' → logprob: -19.875043869018555
    10. '   ' → logprob: -20.375043869018555

Token 2799: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004084455315023661
    2. '()' → logprob: -5.504084587097168
    3. '()
' → logprob: -12.879084587097168
    4. '()]' → logprob: -13.504084587097168
    5. '())' → logprob: -13.754084587097168
    6. '()[' → logprob: -15.129084587097168
    7. '()].' → logprob: -15.379084587097168
    8. 'rstrip' → logprob: -15.879084587097168
    9. '(' → logprob: -16.62908363342285
    10. ' ().' → logprob: -16.75408363342285

Token 2800: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.47408178448677063
    2. 'rstrip' → logprob: -0.9740817546844482
    3. 'read' → logprob: -12.724081993103027
    4. '_strip' → logprob: -14.099081993103027
    5. '.rstrip' → logprob: -14.599081993103027
    6. 'r' → logprob: -14.974081993103027
    7. '(strip' → logprob: -15.599081993103027
    8. ' strip' → logprob: -16.59908103942871
    9. '.strip' → logprob: -16.84908103942871
    10. 'str' → logprob: -17.59908103942871

Token 2801: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.039109572768211365
    2. '('\' → logprob: -3.539109468460083
    3. '()\' → logprob: -4.789109706878662
    4. '()
' → logprob: -7.539109706878662
    5. ''\' → logprob: -8.539109230041504
    6. '())' → logprob: -8.539109230041504
    7. ')' → logprob: -10.539109230041504
    8. '\n' → logprob: -11.039109230041504
    9. '("\' → logprob: -11.539109230041504
    10. '())
' → logprob: -12.539109230041504

Token 2802: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019361276645213366
    2. '\n' → logprob: -6.251935958862305
    3. ''\' → logprob: -12.376935958862305
    4. 'newline' → logprob: -13.251935958862305
    5. '('\' → logprob: -14.501935958862305
    6. 'r' → logprob: -15.251935958862305
    7. 'rstrip' → logprob: -15.376935958862305
    8. '\r' → logprob: -15.501935958862305
    9. ')\' → logprob: -15.501935958862305
    10. '"\' → logprob: -16.376935958862305

Token 2803: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.103727787733078
    2. '())' → logprob: -2.7287278175354004
    3. '')' → logprob: -4.1037278175354
    4. '()' → logprob: -4.1037278175354
    5. '('\' → logprob: -9.603727340698242
    6. ')\' → logprob: -9.728727340698242
    7. '()\' → logprob: -10.603727340698242
    8. '")' → logprob: -11.103727340698242
    9. ''\' → logprob: -11.353727340698242
    10. ')]' → logprob: -11.978727340698242

Token 2804: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15400651097297668
    2. 'for' → logprob: -2.5290064811706543
    3. '       ' → logprob: -2.7790064811706543
    4. '()' → logprob: -8.279006958007812
    5. '	for' → logprob: -8.779006958007812
    6. '           ' → logprob: -9.029006958007812
    7. ')' → logprob: -9.279006958007812
    8. '               ' → logprob: -9.529006958007812
    9. '	' → logprob: -9.904006958007812
    10. ']' → logprob: -10.404006958007812

Token 2805: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.8219583075260743e-05
    2. ' _' → logprob: -10.500038146972656
    3. '_i' → logprob: -12.500038146972656
    4. '_range' → logprob: -12.875038146972656
    5. '_=' → logprob: -14.125038146972656
    6. '_h' → logprob: -14.500038146972656
    7. '_H' → logprob: -14.625038146972656
    8. '_r' → logprob: -14.875038146972656
    9. '_in' → logprob: -15.125038146972656
    10. ' in' → logprob: -15.250038146972656

Token 2806: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10208746790885925
    2. 'in' → logprob: -2.3520874977111816
    3. ' range' → logprob: -6.977087497711182
    4. ' in' → logprob: -6.977087497711182
    5. '_' → logprob: -11.727087020874023
    6. '_range' → logprob: -13.227087020874023
    7. '	range' → logprob: -13.852087020874023
    8. '(range' → logprob: -13.977087020874023
    9. '
' → logprob: -14.852087020874023
    10. '...' → logprob: -15.727087020874023

Token 2807: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.505351095460355e-05
    2. ' range' → logprob: -9.500075340270996
    3. '(range' → logprob: -15.750075340270996
    4. '_range' → logprob: -19.00007438659668
    5. '	range' → logprob: -19.25007438659668
    6. '
' → logprob: -20.00007438659668
    7. '.range' → logprob: -20.12507438659668
    8. '_' → logprob: -21.75007438659668
    9. '[' → logprob: -22.75007438659668
    10. '```' → logprob: -22.87507438659668

Token 2808: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.00015955790877342224
    2. 'H' → logprob: -8.75015926361084
    3. '	H' → logprob: -14.12515926361084
    4. 'HBox' → logprob: -16.125160217285156
    5. '   ' → logprob: -16.375160217285156
    6. '(' → logprob: -16.500160217285156
    7. ' H' → logprob: -17.000160217285156
    8. ' (' → logprob: -17.250160217285156
    9. ',H' → logprob: -17.250160217285156
    10. '(W' → logprob: -18.125160217285156

Token 2809: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0012577339075505733
    2. ']' → logprob: -7.12625789642334
    3. ')' → logprob: -7.87625789642334
    4. ')]
' → logprob: -9.87625789642334
    5. '       ' → logprob: -11.12625789642334
    6. '   ' → logprob: -12.50125789642334
    7. ']
' → logprob: -13.12625789642334
    8. ' )' → logprob: -15.00125789642334
    9. ')
' → logprob: -15.00125789642334
    10. ')]
' → logprob: -15.75125789642334

Token 2810: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006159624084830284
    2. '<|end|>' → logprob: -6.256159782409668
    3. 'state' → logprob: -6.381159782409668
    4. '   ' → logprob: -6.506159782409668
    5. '        
' → logprob: -7.881159782409668
    6. 'solve' → logprob: -8.131159782409668
    7. 'result' → logprob: -9.381159782409668
    8. 'solution' → logprob: -9.631159782409668
    9. '
' → logprob: -9.756159782409668
    10. 'def' → logprob: -10.881159782409668

Token 2811: ' ans' (ID: 3345)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6335903406143188
    2. '       ' → logprob: -0.8835903406143188
    3. 'print' → logprob: -3.0085902214050293
    4. ' result' → logprob: -5.258590221405029
    5. 'res' → logprob: -6.883590221405029
    6. '   ' → logprob: -8.633590698242188
    7. 'answer' → logprob: -9.758590698242188
    8. ' print' → logprob: -9.758590698242188
    9. 'results' → logprob: -10.258590698242188
    10. '
' → logprob: -10.508590698242188

Token 2812: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5250057578086853
    2. '=' → logprob: -0.9000057578086853
    3. '   ' → logprob: -6.90000581741333
    4. '<|end|>' → logprob: -8.650005340576172
    5. '<|end|>' → logprob: -8.775005340576172
    6. '    ' → logprob: -9.900005340576172
    7. '=True' → logprob: -10.150005340576172
    8. ')' → logprob: -10.150005340576172
    9. '.append' → logprob: -10.400005340576172
    10. ' ' → logprob: -10.650005340576172

Token 2813: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.00861468818038702
    2. ' solve' → logprob: -4.758614540100098
    3. '.solve' → logprob: -16.133615493774414
    4. '
' → logprob: -17.258615493774414
    5. '   ' → logprob: -18.008615493774414
    6. '(s' → logprob: -20.758615493774414
    7. 'solver' → logprob: -21.008615493774414
    8. '
' → logprob: -21.133615493774414
    9. 'print' → logprob: -21.258615493774414
    10. '```' → logprob: -21.383615493774414

Token 2814: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -13.875001907348633
    3. '_s' → logprob: -15.250001907348633
    4. '_solver' → logprob: -15.250001907348633
    5. '_solution' → logprob: -15.625001907348633
    6. 'p' → logprob: -16.250001907348633
    7. '```' → logprob: -16.250001907348633
    8. '\' → logprob: -16.625001907348633
    9. 'solve' → logprob: -16.625001907348633
    10. '_problem' → logprob: -17.000001907348633

Token 2815: 'uzzle' (ID: 38271)
  Prédit: 'uzzle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uzzle' → logprob: -6.0629870858974755e-05
    2. 'uz' → logprob: -10.75006103515625
    3. '_' → logprob: -11.12506103515625
    4. 'uzz' → logprob: -11.50006103515625
    5. 'zzle' → logprob: -11.75006103515625
    6. 'uzzles' → logprob: -13.12506103515625
    7. '_p' → logprob: -13.50006103515625
    8. 'u' → logprob: -13.75006103515625
    9. 'z' → logprob: -14.37506103515625
    10. '
' → logprob: -15.25006103515625

Token 2816: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -2.15310683415737e-05
    2. '(' → logprob: -11.000021934509277
    3. '(ans' → logprob: -12.625021934509277
    4. '((' → logprob: -14.250021934509277
    5. '(
' → logprob: -14.750021934509277
    6. ' (' → logprob: -15.125021934509277
    7. '   ' → logprob: -17.37502098083496
    8. '(W' → logprob: -17.75002098083496
    9. '(answer' → logprob: -18.25002098083496
    10. '
' → logprob: -18.37502098083496

Token 2817: ',W' (ID: 117252)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12695802748203278
    2. ',W' → logprob: -2.126958131790161
    3. ' ,' → logprob: -11.001957893371582
    4. ',
' → logprob: -11.751957893371582
    5. '(W' → logprob: -13.501957893371582
    6. '   ' → logprob: -14.001957893371582
    7. ',H' → logprob: -14.001957893371582
    8. ',w' → logprob: -14.251957893371582
    9. 'W' → logprob: -14.251957893371582
    10. '       ' → logprob: -14.751957893371582

Token 2818: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04421445354819298
    2. ',H' → logprob: -3.1692144870758057
    3. '(H' → logprob: -6.919214248657227
    4. ' ,' → logprob: -9.419214248657227
    5. '(' → logprob: -9.669214248657227
    6. ',
' → logprob: -10.794214248657227
    7. '   ' → logprob: -11.044214248657227
    8. ')' → logprob: -11.294214248657227
    9. '(grid' → logprob: -11.419214248657227
    10. '       ' → logprob: -11.544214248657227

Token 2819: 'grid' (ID: 7886)
  Prédit: 'grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -1.9361264946837764e-07
    2. ' grid' → logprob: -16.125
    3. '
' → logprob: -19.375
    4. 'ans' → logprob: -19.5
    5. '(grid' → logprob: -20.625
    6. '	grid' → logprob: -21.25
    7. '   ' → logprob: -22.125
    8. '.grid' → logprob: -23.0
    9. 'gr' → logprob: -23.25
    10. '```' → logprob: -23.25

Token 2820: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.029682103544473648
    2. ')' → logprob: -3.904682159423828
    3. '       ' → logprob: -4.779682159423828
    4. '   ' → logprob: -7.654682159423828
    5. '
' → logprob: -9.904682159423828
    6. '(ans' → logprob: -10.154682159423828
    7. '()
' → logprob: -10.654682159423828
    8. '(' → logprob: -11.154682159423828
    9. ')
' → logprob: -11.154682159423828
    10. '())
' → logprob: -11.654682159423828

Token 2821: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31358611583709717
    2. 'print' → logprob: -1.3135861158370972
    3. ' print' → logprob: -8.438586235046387
    4. '```' → logprob: -9.313586235046387
    5. '   ' → logprob: -11.188586235046387
    6. '
' → logprob: -13.813586235046387
    7. '``' → logprob: -13.938586235046387
    8. '        
' → logprob: -14.688586235046387
    9. '	print' → logprob: -14.813586235046387
    10. '#print' → logprob: -14.938586235046387

Token 2822: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.5954712075181305e-05
    2. '       ' → logprob: -10.250036239624023
    3. ' print' → logprob: -14.625036239624023
    4. '   ' → logprob: -17.125036239624023
    5. '```' → logprob: -17.500036239624023
    6. '	print' → logprob: -19.125036239624023
    7. '
' → logprob: -19.250036239624023
    8. '``' → logprob: -19.250036239624023
    9. '#print' → logprob: -19.875036239624023
    10. 'printf' → logprob: -19.875036239624023

Token 2823: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.935296834039036e-06
    2. 'ans' → logprob: -12.75000286102295
    3. '	ans' → logprob: -19.125003814697266
    4. '(answer' → logprob: -19.625003814697266
    5. '(' → logprob: -20.250003814697266
    6. '()' → logprob: -20.750003814697266
    7. '(
' → logprob: -21.625003814697266
    8. 'ANS' → logprob: -21.625003814697266
    9. '(abs' → logprob: -22.000003814697266
    10. '_ans' → logprob: -22.375003814697266

Token 2824: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5928495486150496e-05
    2. '())' → logprob: -11.500016212463379
    3. '()' → logprob: -12.750016212463379
    4. '   ' → logprob: -13.875016212463379
    5. ')
' → logprob: -14.000016212463379
    6. '`)' → logprob: -14.750016212463379
    7. ' )' → logprob: -15.250016212463379
    8. ')`' → logprob: -15.375016212463379
    9. '))' → logprob: -15.750016212463379
    10. '')' → logprob: -17.000015258789062

Token 2825: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005292219575494528
    2. '```' → logprob: -5.3802924156188965
    3. 'main' → logprob: -7.3802924156188965
    4. ' if' → logprob: -10.505291938781738
    5. '
' → logprob: -11.380291938781738
    6. '#' → logprob: -12.630291938781738
    7. '<|end|>' → logprob: -12.880291938781738
    8. '``' → logprob: -13.380291938781738
    9. '\n' → logprob: -14.505291938781738
    10. '\' → logprob: -14.755291938781738

Token 2826: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.004078997299075127
    2. '__' → logprob: -5.5040788650512695
    3. '___' → logprob: -15.75407886505127
    4. '_' → logprob: -16.004079818725586
    5. '_name' → logprob: -16.004079818725586
    6. ' ___' → logprob: -16.254079818725586
    7. ' _' → logprob: -17.129079818725586
    8. 'name' → logprob: -17.504079818725586
    9. ' ' → logprob: -17.629079818725586
    10. ' name' → logprob: -17.879079818725586

Token 2827: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005874283146113157
    2. '==' → logprob: -6.255874156951904
    3. ' ==' → logprob: -6.380874156951904
    4. 'name' → logprob: -7.380874156951904
    5. '.__' → logprob: -7.380874156951904
    6. '__.__' → logprob: -7.880874156951904
    7. 'if' → logprob: -9.130874633789062
    8. '```' → logprob: -9.255874633789062
    9. '__.' → logprob: -9.505874633789062
    10. '=="' → logprob: -9.880874633789062

Token 2828: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0035949565935879946
    2. '==' → logprob: -6.128594875335693
    3. '__.__' → logprob: -7.378594875335693
    4. '=="' → logprob: -7.503594875335693
    5. ' ==' → logprob: -9.003595352172852
    6. '__
' → logprob: -10.378595352172852
    7. '__":
' → logprob: -11.003595352172852
    8. '=='' → logprob: -11.128595352172852
    9. '__["' → logprob: -11.503595352172852
    10. '__.' → logprob: -11.503595352172852

Token 2829: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5447858572006226
    2. '__' → logprob: -0.9197858572006226
    3. ' ==' → logprob: -4.544785976409912
    4. '=="' → logprob: -4.794785976409912
    5. '=='' → logprob: -6.044785976409912
    6. '==
' → logprob: -9.669785499572754
    7. '()==' → logprob: -10.794785499572754
    8. '=' → logprob: -10.794785499572754
    9. '```' → logprob: -11.044785499572754
    10. '===' → logprob: -11.419785499572754

Token 2830: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12730833888053894
    2. ''' → logprob: -2.1273083686828613
    3. '__' → logprob: -7.877308368682861
    4. ' "__' → logprob: -14.127307891845703
    5. 'main' → logprob: -16.627307891845703
    6. ' '__' → logprob: -16.877307891845703
    7. '"name' → logprob: -18.002307891845703
    8. '   ' → logprob: -18.252307891845703
    9. '('__' → logprob: -18.252307891845703
    10. '("__' → logprob: -18.877307891845703

Token 2831: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3135163187980652
    2. 'main' → logprob: -1.31351637840271
    3. '"' → logprob: -8.563516616821289
    4. ''' → logprob: -9.938516616821289
    5. 'name' → logprob: -12.188516616821289
    6. '___' → logprob: -12.688516616821289
    7. '__":
' → logprob: -12.938516616821289
    8. '_main' → logprob: -13.313516616821289
    9. '____' → logprob: -14.438516616821289
    10. '```' → logprob: -14.813516616821289

Token 2832: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.2556798458099365
    2. '__' → logprob: -1.5056798458099365
    3. '__':
' → logprob: -5.630680084228516
    4. '__
' → logprob: -9.380680084228516
    5. '__.' → logprob: -10.630680084228516
    6. '__["' → logprob: -10.880680084228516
    7. '__.__' → logprob: -11.005680084228516
    8. '__
' → logprob: -12.755680084228516
    9. '__()
' → logprob: -13.130680084228516
    10. '__:' → logprob: -13.505680084228516

Token 2833: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2741795480251312
    2. '   ' → logprob: -1.7741795778274536
    3. 'solve' → logprob: -2.774179458618164
    4. '```' → logprob: -5.649179458618164
    5. '__' → logprob: -5.899179458618164
    6. '____' → logprob: -8.149179458618164
    7. '_main' → logprob: -8.274179458618164
    8. '	main' → logprob: -8.399179458618164
    9. ' main' → logprob: -8.649179458618164
    10. '    
' → logprob: -8.774179458618164

Token 2834: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0003361774142831564
    2. 'solve' → logprob: -8.000336647033691
    3. ' main' → logprob: -14.500336647033691
    4. '   ' → logprob: -15.250336647033691
    5. '	main' → logprob: -18.875335693359375
    6. ' solve' → logprob: -20.375335693359375
    7. '```' → logprob: -20.500335693359375
    8. '_main' → logprob: -20.625335693359375
    9. '(main' → logprob: -21.875335693359375
    10. 'import' → logprob: -22.500335693359375

Token 2835: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2833
Tokens correctement prédits (1ère position, stricte): 1033
Tokens correctement prédits (1ère position, avec adaptation): 1110
Tokens correctement prédits (top 10): 2111
Précision stricte (1ère position): 36.46%
Précision adaptée (1ère position): 39.18%
Précision (top 10): 74.51%
================================================================================
