================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:27:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def is_leap_year(year):
    """
    Détermine si une année donnée est une année bissextile selon les règles spécifiées.
    Une année est bissextile si :
    - elle est divisible par 4,
    - sauf si elle est divisible par 100, alors ce n'est pas une année bissextile,
    - sauf si elle est divisible par 400, alors c'est quand même une année bissextile.
    """
    if year % 400 == 0:
        return True
    if year % 100 == 0:
        return False
    if year % 4 == 0:
        return True
    return False

def main():
    """
    Programme principal pour lire plusieurs ensembles de données.
    Chaque ensemble est constitué de deux entiers a et b (0 < a <= b < 3000).
    On doit afficher toutes les années bissextiles entre a et b inclus.
    Si aucune année bissextile n'existe dans cet intervalle, on affiche 'NA'.
    L'entrée se termine quand a et b valent tous les deux 0.
    Une ligne vide est imprimée entre chaque ensemble de résultats (sauf avant le premier).
    """
    first_output = True  # Pour gérer l'affichage des lignes vides entre groupes

    while True:
        # On lit une ligne d'entrée
        line = input().strip()
        if not line:
            # Si la ligne est vide, on la saute
            continue
        a_str, b_str = line.split()
        a, b = int(a_str), int(b_str)

        # Condition de terminaison
        if a == 0 and b == 0:
            break

        # Collecte des années bissextiles dans l'intervalle
        leap_years = []
        for year in range(a, b + 1):
            if is_leap_year(year):
                leap_years.append(year)

        # Affichage
        if not first_output:
            # Ligne vide entre les blocs de sortie
            print()
        else:
            first_output = False

        if leap_years:
            for ly in leap_years:
                print(ly)
        else:
            print("NA")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' is' (ID: 382)
  → Token d'amorce (pas de prédiction)

Token 2: '_le' (ID: 27121)
  → Token d'amorce (pas de prédiction)

Token 3: 'ap' (ID: 403)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.37160956859588623
    2. 'a' → logprob: -1.7466095685958862
    3. 'n' → logprob: -3.121609687805176
    4. '_g' → logprob: -3.746609687805176
    5. 'g' → logprob: -3.996609687805176
    6. '_a' → logprob: -4.371609687805176
    7. 'ap' → logprob: -4.371609687805176
    8. '_n' → logprob: -5.496609687805176
    9. '```' → logprob: -5.496609687805176
    10. 'q' → logprob: -5.621609687805176

Token 4: '_year' (ID: 33489)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011164079420268536
    2. '_year' → logprob: -4.51116418838501
    3. '(' → logprob: -9.886163711547852
    4. '_(' → logprob: -10.261163711547852
    5. '```' → logprob: -11.636163711547852
    6. '(year' → logprob: -11.761163711547852
    7. '_a' → logprob: -12.636163711547852
    8. '(_' → logprob: -13.136163711547852
    9. ' year' → logprob: -13.511163711547852
    10. '(a' → logprob: -13.761163711547852

Token 5: '(year' (ID: 58075)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06287047266960144
    2. '_' → logprob: -2.812870502471924
    3. '```' → logprob: -8.312870025634766
    4. '(_:' → logprob: -8.312870025634766
    5. '(_' → logprob: -8.437870025634766
    6. '_(' → logprob: -9.937870025634766
    7. '_:' → logprob: -10.187870025634766
    8. '(:' → logprob: -11.062870025634766
    9. '_parent' → logprob: -11.187870025634766
    10. '():' → logprob: -11.312870025634766

Token 6: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007814936339855194
    2. ')' → logprob: -5.007814884185791
    3. ':' → logprob: -6.882814884185791
    4. '):
' → logprob: -10.50781536102295
    5. '():' → logprob: -11.38281536102295
    6. '```' → logprob: -11.88281536102295
    7. ''):' → logprob: -12.00781536102295
    8. '_' → logprob: -12.63281536102295
    9. '(' → logprob: -12.88281536102295
    10. '**' → logprob: -12.88281536102295

Token 7: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008741740137338638
    2. '   ' → logprob: -4.883741855621338
    3. ':
' → logprob: -7.633741855621338
    4. '```' → logprob: -7.633741855621338
    5. '():' → logprob: -9.88374137878418
    6. '):' → logprob: -10.88374137878418
    7. '    
' → logprob: -11.25874137878418
    8. '(' → logprob: -11.50874137878418
    9. ':return' → logprob: -11.50874137878418
    10. '':' → logprob: -11.88374137878418

Token 8: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24614734947681427
    2. ':' → logprob: -2.246147394180298
    3. '```' → logprob: -2.746147394180298
    4. ' ' → logprob: -3.871147394180298
    5. ' 
' → logprob: -4.621147155761719
    6. '\n' → logprob: -5.371147155761719
    7. ''' → logprob: -5.746147155761719
    8. '\' → logprob: -6.746147155761719
    9. '    
' → logprob: -6.871147155761719
    10. '``' → logprob: -6.996147155761719

Token 9: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.3215312361717224
    2. '   ' → logprob: -2.071531295776367
    3. '"""
' → logprob: -2.321531295776367
    4. 'Returns' → logprob: -3.821531295776367
    5. ''''' → logprob: -4.446531295776367
    6. 'Return' → logprob: -5.321531295776367
    7. ''''
' → logprob: -5.696531295776367
    8. 'Calculate' → logprob: -6.446531295776367
    9. 'Calcul' → logprob: -6.821531295776367
    10. '#' → logprob: -6.946531295776367

Token 10: ' Dé' (ID: 27247)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.13573959469795227
    2. '"""
' → logprob: -3.38573956489563
    3. 'Returns' → logprob: -3.63573956489563
    4. '   ' → logprob: -3.88573956489563
    5. 'Determ' → logprob: -4.010739803314209
    6. ''''' → logprob: -5.135739803314209
    7. '```' → logprob: -5.260739803314209
    8. 'Return' → logprob: -5.385739803314209
    9. 'Checks' → logprob: -5.635739803314209
    10. 'Calcul' → logprob: -6.260739803314209

Token 11: 'term' (ID: 8044)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.02318618632853031
    2. 'term' → logprob: -3.898186206817627
    3. 'fin' → logprob: -7.398186206817627
    4. 't' → logprob: -7.773186206817627
    5. '   ' → logprob: -8.023185729980469
    6. 'te' → logprob: -8.273185729980469
    7. 'ter' → logprob: -8.523185729980469
    8. 'fine' → logprob: -8.523185729980469
    9. 'termin' → logprob: -8.773185729980469
    10. 'tect' → logprob: -9.273185729980469

Token 12: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.03231455385684967
    2. 'i' → logprob: -4.282314777374268
    3. '   ' → logprob: -4.407314777374268
    4. 'e' → logprob: -6.532314777374268
    5. '```' → logprob: -7.157314777374268
    6. 'r' → logprob: -7.282314777374268
    7. 'ne' → logprob: -7.657314777374268
    8. 'rine' → logprob: -7.907314777374268
    9. '    ' → logprob: -8.53231430053711
    10. ' ine' → logprob: -8.53231430053711

Token 13: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.8771398663520813
    2. '   ' → logprob: -1.6271398067474365
    3. ' if' → logprob: -2.0021398067474365
    4. 's' → logprob: -2.3771398067474365
    5. ' ' → logprob: -2.3771398067474365
    6. 'si' → logprob: -3.1271398067474365
    7. '```' → logprob: -5.377140045166016
    8. 'if' → logprob: -5.627140045166016
    9. '  ' → logprob: -5.752140045166016
    10. ' s' → logprob: -6.127140045166016

Token 14: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.8794493675231934
    2. ' l' → logprob: -1.7544493675231934
    3. 'année' → logprob: -2.0044493675231934
    4. '   ' → logprob: -2.5044493675231934
    5. ' ' → logprob: -2.5044493675231934
    6. ' année' → logprob: -2.6294493675231934
    7. ' an' → logprob: -4.504449367523193
    8. '    ' → logprob: -5.379449367523193
    9. ' a' → logprob: -5.504449367523193
    10. ' ' → logprob: -5.629449367523193

Token 15: ' année' (ID: 32998)
  Prédit: 'année'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'année' → logprob: -0.3534323573112488
    2. ' année' → logprob: -1.8534324169158936
    3. ' ' → logprob: -1.9784324169158936
    4. '   ' → logprob: -6.6034321784973145
    5. ''année' → logprob: -7.8534321784973145
    6. ' ' → logprob: -8.478432655334473
    7. ' an' → logprob: -8.728432655334473
    8. '  ' → logprob: -9.103432655334473
    9. 'ann' → logprob: -9.478432655334473
    10. 'anne' → logprob: -9.603432655334473

Token 16: ' donnée' (ID: 130126)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3037242889404297
    2. ' est' → logprob: -1.8037242889404297
    3. '   ' → logprob: -2.8037242889404297
    4. '_' → logprob: -3.6787242889404297
    5. 's' → logprob: -5.42872428894043
    6. ' s' → logprob: -5.80372428894043
    7. '  ' → logprob: -6.42872428894043
    8. '    ' → logprob: -7.42872428894043
    9. 'est' → logprob: -7.42872428894043
    10. '<|end|>' → logprob: -8.80372428894043

Token 17: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6699619889259338
    2. ' est' → logprob: -1.044961929321289
    3. '   ' → logprob: -2.044961929321289
    4. '_' → logprob: -6.169961929321289
    5. 'est' → logprob: -6.544961929321289
    6. '    ' → logprob: -6.669961929321289
    7. '  ' → logprob: -7.044961929321289
    8. '```' → logprob: -8.544961929321289
    9. '    
' → logprob: -9.169961929321289
    10. ' return' → logprob: -9.169961929321289

Token 18: ' une' (ID: 2463)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.7260925769805908
    2. ' une' → logprob: -0.7260925769805908
    3. 'b' → logprob: -4.101092338562012
    4. 'une' → logprob: -4.601092338562012
    5. '   ' → logprob: -5.351092338562012
    6. ' a' → logprob: -8.101092338562012
    7. '  ' → logprob: -9.101092338562012
    8. ' ' → logprob: -9.226092338562012
    9. '\' → logprob: -9.601092338562012
    10. '	b' → logprob: -9.726092338562012

Token 19: ' année' (ID: 32998)
  Prédit: ' année'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' année' → logprob: -0.7512378692626953
    2. 'année' → logprob: -1.1262378692626953
    3. ' ' → logprob: -1.6262378692626953
    4. ''année' → logprob: -6.251237869262695
    5. ' b' → logprob: -6.501237869262695
    6. '   ' → logprob: -6.876237869262695
    7. ' an' → logprob: -7.001237869262695
    8. ' ' → logprob: -8.001237869262695
    9. ' années' → logprob: -8.251237869262695
    10. '_' → logprob: -8.376237869262695

Token 20: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5226099491119385
    2. ' b' → logprob: -1.3976099491119385
    3. ' ' → logprob: -2.5226099491119385
    4. 'b' → logprob: -3.1476099491119385
    5. '```' → logprob: -5.147609710693359
    6. 's' → logprob: -5.772609710693359
    7. '_' → logprob: -5.897609710693359
    8. ' ' → logprob: -6.022609710693359
    9. '_b' → logprob: -6.147609710693359
    10. '\' → logprob: -6.272609710693359

Token 21: 'isse' (ID: 6969)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.26293158531188965
    2. 'is' → logprob: -1.7629315853118896
    3. 'isse' → logprob: -2.8879315853118896
    4. 'isc' → logprob: -6.012931823730469
    5. 'iss' → logprob: -7.637931823730469
    6. 'ic' → logprob: -8.512931823730469
    7. 'isci' → logprob: -9.137931823730469
    8. 'isi' → logprob: -9.387931823730469
    9. '\x' → logprob: -9.762931823730469
    10. '#' → logprob: -9.762931823730469

Token 22: 'xt' (ID: 711)
  Prédit: 'cte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cte' → logprob: -0.18591228127479553
    2. 'cle' → logprob: -2.8109123706817627
    3. 'ct' → logprob: -3.0609123706817627
    4. 'c' → logprob: -3.8109123706817627
    5. 'cule' → logprob: -4.310912132263184
    6. 'culaire' → logprob: -4.685912132263184
    7. 'cture' → logprob: -4.810912132263184
    8. 'cre' → logprob: -6.560912132263184
    9. 'chte' → logprob: -7.560912132263184
    10. 'cue' → logprob: -7.560912132263184

Token 23: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -0.0004935794277116656
    2. 'ive' → logprob: -7.87549352645874
    3. 'ible' → logprob: -9.250494003295898
    4. 'u' → logprob: -11.750494003295898
    5. 'uelle' → logprob: -12.500494003295898
    6. 'ule' → logprob: -12.750494003295898
    7. 'ille' → logprob: -13.750494003295898
    8. 'île' → logprob: -15.375494003295898
    9. 'yle' → logprob: -15.500494003295898
    10. 'ue' → logprob: -15.500494003295898

Token 24: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3936029076576233
    2. '\n' → logprob: -1.2686028480529785
    3. ':' → logprob: -4.0186028480529785
    4. '\' → logprob: -4.7686028480529785
    5. '```' → logprob: -5.2686028480529785
    6. '.' → logprob: -6.5186028480529785
    7. ' ' → logprob: -6.5186028480529785
    8. '"""
' → logprob: -6.8936028480529785
    9. '    
' → logprob: -7.0186028480529785
    10. '  
' → logprob: -7.0186028480529785

Token 25: ' les' (ID: 1341)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.32203951478004456
    2. ' la' → logprob: -2.0720396041870117
    3. ' les' → logprob: -2.3220396041870117
    4. ' le' → logprob: -3.9470396041870117
    5. ' P' → logprob: -5.197039604187012
    6. ' Python' → logprob: -5.322039604187012
    7. ' ' → logprob: -5.447039604187012
    8. '```' → logprob: -5.697039604187012
    9. ' `' → logprob: -6.072039604187012
    10. ' the' → logprob: -6.322039604187012

Token 26: ' règles' (ID: 67042)
  Prédit: ' règles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' règles' → logprob: -0.04521440342068672
    2. ' critères' → logprob: -3.2952144145965576
    3. ' normes' → logprob: -5.9202141761779785
    4. 'r' → logprob: -5.9202141761779785
    5. ' règle' → logprob: -8.045214653015137
    6. ' r' → logprob: -8.170214653015137
    7. '   ' → logprob: -8.420214653015137
    8. ' années' → logprob: -9.170214653015137
    9. ' criter' → logprob: -9.420214653015137
    10. ' rég' → logprob: -9.420214653015137

Token 27: ' spéc' (ID: 20135)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7777709364891052
    2. ' de' → logprob: -2.02777099609375
    3. '```' → logprob: -2.02777099609375
    4. '\n' → logprob: -2.27777099609375
    5. ' ' → logprob: -2.65277099609375
    6. '    ' → logprob: -4.02777099609375
    7. '\' → logprob: -4.65277099609375
    8. ' ou' → logprob: -4.65277099609375
    9. ' (' → logprob: -4.90277099609375
    10. '  ' → logprob: -5.15277099609375

Token 28: 'ifiées' (ID: 162346)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06511078029870987
    2. 'ial' → logprob: -3.565110683441162
    3. 'iales' → logprob: -3.690110683441162
    4. 'iale' → logprob: -5.315110683441162
    5. 'ifi' → logprob: -6.315110683441162
    6. 'ia' → logprob: -6.815110683441162
    7. 'ifiques' → logprob: -7.315110683441162
    8. 'ialis' → logprob: -8.06511116027832
    9. 'iali' → logprob: -8.19011116027832
    10. 'ifiées' → logprob: -9.06511116027832

Token 29: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02232050523161888
    2. '.' → logprob: -4.14732027053833
    3. '```' → logprob: -5.89732027053833
    4. ':' → logprob: -7.14732027053833
    5. '\n' → logprob: -7.27232027053833
    6. ' ' → logprob: -7.52232027053833
    7. '    
' → logprob: -8.772320747375488
    8. ',' → logprob: -8.772320747375488
    9. '"""' → logprob: -8.772320747375488
    10. ' en' → logprob: -9.022320747375488

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02970697730779648
    2. '\n' → logprob: -4.029706954956055
    3. '    
' → logprob: -5.154706954956055
    4. '
' → logprob: -6.404706954956055
    5. ' 
' → logprob: -6.404706954956055
    6. '```' → logprob: -7.779706954956055
    7. '  
' → logprob: -8.029706954956055
    8. '"""
' → logprob: -8.154706954956055
    9. '   
' → logprob: -8.154706954956055
    10. '    ' → logprob: -8.404706954956055

Token 31: ' Une' (ID: 19758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10785844177007675
    2. '\n' → logprob: -2.357858419418335
    3. '    
' → logprob: -5.482858657836914
    4. '"""' → logprob: -6.982858657836914
    5. ' 
' → logprob: -7.107858657836914
    6. '   
' → logprob: -7.732858657836914
    7. '  
' → logprob: -7.857858657836914
    8. '
' → logprob: -8.357858657836914
    9. '```' → logprob: -8.732858657836914
    10. '    ' → logprob: -9.232858657836914

Token 32: ' année' (ID: 32998)
  Prédit: ' année'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' année' → logprob: -0.7386358976364136
    2. 'année' → logprob: -0.7386358976364136
    3. ' ' → logprob: -3.738636016845703
    4. '   ' → logprob: -4.863636016845703
    5. ' b' → logprob: -5.988636016845703
    6. 'n' → logprob: -6.238636016845703
    7. ' an' → logprob: -6.363636016845703
    8. 'b' → logprob: -6.863636016845703
    9. 'an' → logprob: -7.238636016845703
    10. ''année' → logprob: -7.363636016845703

Token 33: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.04309156909584999
    2. '   ' → logprob: -3.7930915355682373
    3. ' divisible' → logprob: -4.918091773986816
    4. ' b' → logprob: -5.793091773986816
    5. 'est' → logprob: -5.793091773986816
    6. ' is' → logprob: -5.918091773986816
    7. ' ' → logprob: -6.668091773986816
    8. 'b' → logprob: -8.043091773986816
    9. ' se' → logprob: -8.168091773986816
    10. '_' → logprob: -8.543091773986816

Token 34: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.16148582100868225
    2. 'b' → logprob: -2.0364859104156494
    3. ' divisible' → logprob: -4.03648567199707
    4. ' une' → logprob: -8.41148567199707
    5. '	b' → logprob: -8.78648567199707
    6. '   ' → logprob: -9.16148567199707
    7. ' ' → logprob: -9.28648567199707
    8. 'div' → logprob: -9.41148567199707
    9. ' divis' → logprob: -9.53648567199707
    10. 'bis' → logprob: -10.47398567199707

Token 35: 'isse' (ID: 6969)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012231895700097084
    2. 'isse' → logprob: -5.137231826782227
    3. 'is' → logprob: -5.762231826782227
    4. 'e' → logprob: -6.762231826782227
    5. 'iss' → logprob: -7.012231826782227
    6. '_' → logprob: -7.887231826782227
    7. '_i' → logprob: -9.137231826782227
    8. '```' → logprob: -9.387231826782227
    9. '#' → logprob: -9.762231826782227
    10. 'u' → logprob: -9.887231826782227

Token 36: 'xt' (ID: 711)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.17962150275707245
    2. 'c' → logprob: -2.429621458053589
    3. 'xt' → logprob: -3.429621458053589
    4. 's' → logprob: -4.179621696472168
    5. '   ' → logprob: -4.304621696472168
    6. 'ct' → logprob: -4.804621696472168
    7. ' ' → logprob: -5.929621696472168
    8. '  ' → logprob: -7.054621696472168
    9. '       ' → logprob: -7.179621696472168
    10. '_' → logprob: -8.054621696472168

Token 37: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -0.0052766879089176655
    2. 'i' → logprob: -5.255276679992676
    3. 'e' → logprob: -11.005276679992676
    4. '   ' → logprob: -11.505276679992676
    5. 'il' → logprob: -11.755276679992676
    6. 'île' → logprob: -12.505276679992676
    7. ' ile' → logprob: -13.380276679992676
    8. '       ' → logprob: -14.630276679992676
    9. '`' → logprob: -14.880276679992676
    10. '

' → logprob: -15.130276679992676

Token 38: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -1.060295820236206
    2. ' if' → logprob: -1.310295820236206
    3. '   ' → logprob: -1.560295820236206
    4. ' ' → logprob: -2.560295820236206
    5. ' (' → logprob: -3.560295820236206
    6. ' space' → logprob: -4.310296058654785
    7. ' est' → logprob: -4.685296058654785
    8. ' s' → logprob: -4.935296058654785
    9. ',' → logprob: -5.060296058654785
    10. 's' → logprob: -5.185296058654785

Token 39: ' :
' (ID: 10039)
  Prédit: ' elle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elle' → logprob: -0.8854067921638489
    2. ' (' → logprob: -1.135406732559204
    3. ' l' → logprob: -2.010406732559204
    4. ' year' → logprob: -2.885406732559204
    5. '   ' → logprob: -3.635406732559204
    6. '(year' → logprob: -4.760406970977783
    7. ' ' → logprob: -4.885406970977783
    8. 'année' → logprob: -5.010406970977783
    9. ' année' → logprob: -5.135406970977783
    10. ' divisible' → logprob: -5.385406970977783

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10479843616485596
    2. ' ' → logprob: -2.7297983169555664
    3. '    ' → logprob: -4.229798316955566
    4. ' (' → logprob: -4.729798316955566
    5. 'n' → logprob: -6.229798316955566
    6. '(' → logprob: -6.354798316955566
    7. '  ' → logprob: -6.979798316955566
    8. '```' → logprob: -7.104798316955566
    9. ')' → logprob: -7.354798316955566
    10. '    
' → logprob: -7.479798316955566

Token 41: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04519651085138321
    2. ' ' → logprob: -4.045196533203125
    3. '    ' → logprob: -4.045196533203125
    4. '```' → logprob: -5.795196533203125
    5. '    
' → logprob: -6.795196533203125
    6. '\n' → logprob: -7.045196533203125
    7. '\' → logprob: -7.045196533203125
    8. '  ' → logprob: -7.420196533203125
    9. ''' → logprob: -7.670196533203125
    10. ' 
' → logprob: -7.795196533203125

Token 42: ' elle' (ID: 11451)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12734392285346985
    2. ' year' → logprob: -3.0023438930511475
    3. ' divisible' → logprob: -3.0023438930511475
    4. '(year' → logprob: -5.002344131469727
    5. '   ' → logprob: -5.502344131469727
    6. '(' → logprob: -5.627344131469727
    7. 'année' → logprob: -6.377344131469727
    8. 'year' → logprob: -6.377344131469727
    9. ' elle' → logprob: -6.752344131469727
    10. ' année' → logprob: -7.877344131469727

Token 43: ' est' (ID: 893)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.08081211149692535
    2. '%' → logprob: -2.7058122158050537
    3. ' est' → logprob: -5.455811977386475
    4. ' ' → logprob: -5.705811977386475
    5. ' divisible' → logprob: -6.455811977386475
    6. ' ' → logprob: -7.330811977386475
    7. 's' → logprob: -7.455811977386475
    8. '   ' → logprob: -8.830812454223633
    9. 'est' → logprob: -9.955812454223633
    10. '<|end|>' → logprob: -10.080812454223633

Token 44: ' divisible' (ID: 167813)
  Prédit: ' divisible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.0007032568100839853
    2. 'div' → logprob: -7.37570333480835
    3. ' divis' → logprob: -10.000702857971191
    4. '   ' → logprob: -10.500702857971191
    5. ' div' → logprob: -13.375702857971191
    6. ' b' → logprob: -14.500702857971191
    7. 'b' → logprob: -14.750702857971191
    8. '    ' → logprob: -15.500702857971191
    9. ' ' → logprob: -15.750702857971191
    10. '_div' → logprob: -16.125703811645508

Token 45: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.39087188243865967
    2. 'par' → logprob: -1.2658718824386597
    3. '   ' → logprob: -3.390872001647949
    4. '    ' → logprob: -6.015872001647949
    5. ' ' → logprob: -6.640872001647949
    6. '_par' → logprob: -6.765872001647949
    7. '	par' → logprob: -7.015872001647949
    8. '  ' → logprob: -7.015872001647949
    9. '(par' → logprob: -8.51587200164795
    10. '(' → logprob: -8.64087200164795

Token 46: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.22567035257816315
    2. ' ' → logprob: -1.600670337677002
    3. ' ' → logprob: -8.72567081451416
    4. '400' → logprob: -9.97567081451416
    5. '   ' → logprob: -10.97567081451416
    6. ' quatre' → logprob: -11.35067081451416
    7. '```' → logprob: -11.85067081451416
    8. '  ' → logprob: -13.72567081451416
    9. '40' → logprob: -13.97567081451416
    10. '' → logprob: -14.10067081451416

Token 47: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.020652133971452713
    2. '400' → logprob: -3.8956520557403564
    3. ' ' → logprob: -9.395651817321777
    4. '```' → logprob: -11.020651817321777
    5. '   ' → logprob: -11.770651817321777
    6. 'le' → logprob: -14.145651817321777
    7. '100' → logprob: -14.520651817321777
    8. ' ' → logprob: -15.020651817321777
    9. '  ' → logprob: -15.145651817321777
    10. '``' → logprob: -15.395651817321777

Token 48: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1047937199473381
    2. ' ' → logprob: -3.7297937870025635
    3. ' and' → logprob: -3.8547937870025635
    4. ''' → logprob: -4.104793548583984
    5. ',' → logprob: -4.229793548583984
    6. '    ' → logprob: -5.104793548583984
    7. '```' → logprob: -5.479793548583984
    8. '"' → logprob: -6.354793548583984
    9. '  ' → logprob: -6.604793548583984
    10. ' et' → logprob: -6.979793548583984

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03799993917346001
    2. ' but' → logprob: -4.663000106811523
    3. '    ' → logprob: -5.038000106811523
    4. ' ' → logprob: -5.038000106811523
    5. ' mais' → logprob: -5.038000106811523
    6. ' et' → logprob: -5.288000106811523
    7. ' sauf' → logprob: -7.163000106811523
    8. '\' → logprob: -7.663000106811523
    9. '    
' → logprob: -7.788000106811523
    10. ' \' → logprob: -7.913000106811523

Token 50: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11367770284414291
    2. ' et' → logprob: -3.238677740097046
    3. ' ' → logprob: -3.613677740097046
    4. ' mais' → logprob: -3.738677740097046
    5. ' but' → logprob: -4.738677501678467
    6. '    ' → logprob: -6.238677501678467
    7. 'et' → logprob: -6.613677501678467
    8. ' sauf' → logprob: -6.613677501678467
    9. '  ' → logprob: -6.988677501678467
    10. ' and' → logprob: -7.488677501678467

Token 51: ' sauf' (ID: 87919)
  Prédit: ' elle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elle' → logprob: -0.6681247353553772
    2. ' (' → logprob: -1.7931246757507324
    3. '   ' → logprob: -1.9181246757507324
    4. ' et' → logprob: -2.9181246757507324
    5. ' non' → logprob: -3.7931246757507324
    6. '    ' → logprob: -4.168124675750732
    7. ' ' → logprob: -4.668124675750732
    8. '(' → logprob: -4.668124675750732
    9. '```' → logprob: -4.918124675750732
    10. ' n' → logprob: -5.418124675750732

Token 52: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.5835253000259399
    2. 'si' → logprob: -0.9585253000259399
    3. '<|end|>' → logprob: -3.5835251808166504
    4. 's' → logprob: -4.95852518081665
    5. ' ' → logprob: -4.95852518081665
    6. ' if' → logprob: -5.08352518081665
    7. 'if' → logprob: -6.33352518081665
    8. 'qu' → logprob: -6.33352518081665
    9. '```' → logprob: -6.45852518081665
    10. ' ' → logprob: -7.58352518081665

Token 53: ' elle' (ID: 11451)
  Prédit: ' elle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elle' → logprob: -0.005853655282407999
    2. ' divisible' → logprob: -6.255853652954102
    3. ''elle' → logprob: -7.005853652954102
    4. ' ' → logprob: -7.630853652954102
    5. 'elle' → logprob: -7.630853652954102
    6. '<|end|>' → logprob: -7.755853652954102
    7. ' l' → logprob: -7.880853652954102
    8. ' ela' → logprob: -8.380853652954102
    9. ' elles' → logprob: -9.130853652954102
    10. '```' → logprob: -9.130853652954102

Token 54: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.0625636950135231
    2. 'est' → logprob: -2.81256365776062
    3. ' divisible' → logprob: -8.5625638961792
    4. ' ' → logprob: -9.4375638961792
    5. '%' → logprob: -9.5625638961792
    6. '<|end|>' → logprob: -9.8125638961792
    7. ''est' → logprob: -9.9375638961792
    8. ' ' → logprob: -10.0625638961792
    9. ' is' → logprob: -10.0625638961792
    10. ' %' → logprob: -11.6875638961792

Token 55: ' divisible' (ID: 167813)
  Prédit: ' divisible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.058197397738695145
    2. 'div' → logprob: -2.933197498321533
    3. 'a' → logprob: -5.808197498321533
    4. ' divis' → logprob: -8.683197021484375
    5. 'égal' → logprob: -9.808197021484375
    6. '   ' → logprob: -10.558197021484375
    7. ' div' → logprob: -11.683197021484375
    8. '	div' → logprob: -11.933197021484375
    9. ' aussi' → logprob: -12.058197021484375
    10. ' ' → logprob: -12.183197021484375

Token 56: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.062210455536842346
    2. 'par' → logprob: -2.8122105598449707
    3. ' ' → logprob: -8.687210083007812
    4. '   ' → logprob: -10.687210083007812
    5. '<|end|>' → logprob: -11.062210083007812
    6. '	par' → logprob: -11.687210083007812
    7. '  ' → logprob: -12.062210083007812
    8. '_par' → logprob: -12.312210083007812
    9. ' ' → logprob: -12.437210083007812
    10. '100' → logprob: -13.062210083007812

Token 57: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.47409141063690186
    2. ' ' → logprob: -0.9740914106369019
    3. ' ' → logprob: -12.349091529846191
    4. '```' → logprob: -12.974091529846191
    5. '<|end|>' → logprob: -13.474091529846191
    6. '1' → logprob: -13.724091529846191
    7. '  ' → logprob: -13.724091529846191
    8. '   ' → logprob: -14.724091529846191
    9. '0' → logprob: -15.224091529846191
    10. '	' → logprob: -15.286591529846191

Token 58: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.125000953674316
    3. '400' → logprob: -15.250000953674316
    4. '1' → logprob: -16.875001907348633
    5. '```' → logprob: -17.000001907348633
    6. 'cent' → logprob: -17.125001907348633
    7. '4' → logprob: -17.625001907348633
    8. '   ' → logprob: -17.625001907348633
    9. '0' → logprob: -17.750001907348633
    10. '10' → logprob: -18.500001907348633

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0319606214761734
    2. '   ' → logprob: -3.6569607257843018
    3. ',
' → logprob: -5.906960487365723
    4. ' ,' → logprob: -6.031960487365723
    5. '.' → logprob: -9.406960487365723
    6. '    
' → logprob: -9.406960487365723
    7. '    ' → logprob: -9.781960487365723
    8. '\' → logprob: -10.156960487365723
    9. ' ' → logprob: -10.281960487365723
    10. '  ' → logprob: -10.281960487365723

Token 60: ' alors' (ID: 17971)
  Prédit: ' mais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mais' → logprob: -0.4823891222476959
    2. '   ' → logprob: -1.7323890924453735
    3. ' sauf' → logprob: -1.8573890924453735
    4. ' but' → logprob: -3.982389211654663
    5. '    ' → logprob: -4.857388973236084
    6. ' ' → logprob: -4.982388973236084
    7. ' et' → logprob: -4.982388973236084
    8. 's' → logprob: -5.857388973236084
    9. ' except' → logprob: -6.232388973236084
    10. '    
' → logprob: -6.732388973236084

Token 61: ' ce' (ID: 2357)
  Prédit: ' elle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elle' → logprob: -0.0209408737719059
    2. 'elle' → logprob: -3.8959407806396484
    3. ''elle' → logprob: -8.020940780639648
    4. '’elle' → logprob: -11.395940780639648
    5. ' ela' → logprob: -11.520940780639648
    6. '   ' → logprob: -12.270940780639648
    7. 'elles' → logprob: -12.270940780639648
    8. ' il' → logprob: -12.520940780639648
    9. ' elles' → logprob: -12.645940780639648
    10. ' ' → logprob: -12.770940780639648

Token 62: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3427574634552002
    2. ' n' → logprob: -1.3427574634552002
    3. '   ' → logprob: -3.7177574634552
    4. ' ' → logprob: -7.217757225036621
    5. '    
' → logprob: -7.217757225036621
    6. ' ' → logprob: -7.592757225036621
    7. '    ' → logprob: -8.092757225036621
    8. '```' → logprob: -8.467757225036621
    9. '  ' → logprob: -8.592757225036621
    10. 's' → logprob: -8.842757225036621

Token 63: ''est' (ID: 6616)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4328083395957947
    2. 'n' → logprob: -1.3078083992004395
    3. ''est' → logprob: -3.0578083992004395
    4. '   ' → logprob: -4.0578083992004395
    5. ''' → logprob: -4.8078083992004395
    6. ''n' → logprob: -6.4328083992004395
    7. 'pas' → logprob: -6.4328083992004395
    8. ' pas' → logprob: -6.5578083992004395
    9. '    
' → logprob: -7.1828083992004395
    10. ' 
' → logprob: -7.6828083992004395

Token 64: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.1132226288318634
    2. 'pas' → logprob: -2.238222599029541
    3. ' ' → logprob: -8.1132230758667
    4. '   ' → logprob: -9.4882230758667
    5. 's' → logprob: -11.7382230758667
    6. '_pas' → logprob: -11.9882230758667
    7. ' ' → logprob: -12.4882230758667
    8. 'p' → logprob: -13.2382230758667
    9. '  ' → logprob: -14.2382230758667
    10. ' plus' → logprob: -14.3632230758667

Token 65: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.0169588141143322
    2. 'une' → logprob: -5.266958713531494
    3. ' ' → logprob: -6.016958713531494
    4. ' b' → logprob: -6.266958713531494
    5. ' an' → logprob: -6.391958713531494
    6. '<|end|>' → logprob: -6.391958713531494
    7. ' a' → logprob: -7.016958713531494
    8. 'b' → logprob: -7.391958713531494
    9. ' un' → logprob: -7.516958713531494
    10. ' l' → logprob: -7.641958713531494

Token 66: ' année' (ID: 32998)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.48429858684539795
    2. 'année' → logprob: -1.484298586845398
    3. 'b' → logprob: -1.984298586845398
    4. ' année' → logprob: -4.3592987060546875
    5. ' ' → logprob: -5.6092987060546875
    6. 'ann' → logprob: -7.8592987060546875
    7. '   ' → logprob: -7.8592987060546875
    8. 's' → logprob: -8.109298706054688
    9. '    
' → logprob: -8.484298706054688
    10. ' an' → logprob: -8.734298706054688

Token 67: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.46664854884147644
    2. 'b' → logprob: -1.2166485786437988
    3. '   ' → logprob: -2.591648578643799
    4. ' ' → logprob: -7.591648578643799
    5. '    
' → logprob: -8.34164810180664
    6. '	b' → logprob: -8.34164810180664
    7. '<|end|>' → logprob: -8.84164810180664
    8. '_b' → logprob: -9.46664810180664
    9. '    ' → logprob: -9.59164810180664
    10. 's' → logprob: -9.77914810180664

Token 68: 'isse' (ID: 6969)
  Prédit: 'isse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isse' → logprob: -0.21913079917430878
    2. 'i' → logprob: -1.7191307544708252
    3. 'is' → logprob: -4.344130992889404
    4. 'iss' → logprob: -5.594130992889404
    5. 'e' → logprob: -7.719130992889404
    6. 's' → logprob: -10.094130516052246
    7. '   ' → logprob: -10.094130516052246
    8. 'isses' → logprob: -10.594130516052246
    9. 'issé' → logprob: -10.719130516052246
    10. 'issi' → logprob: -10.844130516052246

Token 69: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.015453388914465904
    2. 'ct' → logprob: -4.265453338623047
    3. 'c' → logprob: -7.765453338623047
    4. 'x' → logprob: -8.265453338623047
    5. '   ' → logprob: -8.390453338623047
    6. '       ' → logprob: -9.140453338623047
    7. 'ctl' → logprob: -9.515453338623047
    8. 'ext' → logprob: -10.765453338623047
    9. '```' → logprob: -10.890453338623047
    10. 't' → logprob: -11.390453338623047

Token 70: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -0.00025776340044103563
    2. '   ' → logprob: -9.25025749206543
    3. 'e' → logprob: -9.75025749206543
    4. 'i' → logprob: -10.00025749206543
    5. 'le' → logprob: -11.87525749206543
    6. '       ' → logprob: -12.00025749206543
    7. 'île' → logprob: -12.00025749206543
    8. 'il' → logprob: -12.25025749206543
    9. 'tile' → logprob: -12.37525749206543
    10. '    ' → logprob: -12.50025749206543

Token 71: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01278156228363514
    2. ',
' → logprob: -5.262781620025635
    3. '\n' → logprob: -5.762781620025635
    4. ',' → logprob: -6.137781620025635
    5. '    
' → logprob: -6.762781620025635
    6. '\' → logprob: -8.512781143188477
    7. '
' → logprob: -8.887781143188477
    8. '"""
' → logprob: -8.887781143188477
    9. '       ' → logprob: -9.012781143188477
    10. '  ' → logprob: -9.012781143188477

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002569289645180106
    2. ' ' → logprob: -9.250256538391113
    3. '    ' → logprob: -9.375256538391113
    4. '  ' → logprob: -10.875256538391113
    5. '       ' → logprob: -11.000256538391113
    6. 'except' → logprob: -11.750256538391113
    7. ' sauf' → logprob: -11.875256538391113
    8. ' except' → logprob: -11.875256538391113
    9. '    
' → logprob: -12.750256538391113
    10. '\' → logprob: -12.750256538391113

Token 73: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005175283877179027
    2. '    ' → logprob: -8.625517845153809
    3. ' ' → logprob: -9.125517845153809
    4. ' sauf' → logprob: -9.875517845153809
    5. 'except' → logprob: -10.125517845153809
    6. '       ' → logprob: -10.375517845153809
    7. '  ' → logprob: -10.375517845153809
    8. ' except' → logprob: -10.500517845153809
    9. '"' → logprob: -11.250517845153809
    10. '\' → logprob: -12.000517845153809

Token 74: ' sauf' (ID: 87919)
  Prédit: ' sauf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sauf' → logprob: -0.4702257812023163
    2. '   ' → logprob: -1.0952258110046387
    3. 's' → logprob: -4.220225811004639
    4. '-' → logprob: -4.720225811004639
    5. ' except' → logprob: -5.595225811004639
    6. ' ' → logprob: -5.595225811004639
    7. '    ' → logprob: -5.845225811004639
    8. ' si' → logprob: -6.095225811004639
    9. ' mais' → logprob: -6.845225811004639
    10. 'except' → logprob: -6.970225811004639

Token 75: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.10327398777008057
    2. 'si' → logprob: -2.478273868560791
    3. ' if' → logprob: -4.478273868560791
    4. 's' → logprob: -7.103273868560791
    5. '<|end|>' → logprob: -7.478273868560791
    6. 'if' → logprob: -7.728273868560791
    7. '   ' → logprob: -8.22827434539795
    8. ' ' → logprob: -8.22827434539795
    9. ' s' → logprob: -8.47827434539795
    10. '    ' → logprob: -9.35327434539795

Token 76: ' elle' (ID: 11451)
  Prédit: ' elle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elle' → logprob: -0.003773835487663746
    2. 'elle' → logprob: -6.0037736892700195
    3. ''elle' → logprob: -7.8787736892700195
    4. ' ' → logprob: -8.12877368927002
    5. '   ' → logprob: -8.12877368927002
    6. '    ' → logprob: -9.75377368927002
    7. '```' → logprob: -9.75377368927002
    8. '’elle' → logprob: -10.37877368927002
    9. ' ela' → logprob: -10.50377368927002
    10. ' ' → logprob: -10.75377368927002

Token 77: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.22561639547348022
    2. 'est' → logprob: -1.600616455078125
    3. ' divisible' → logprob: -9.475616455078125
    4. ' ' → logprob: -9.725616455078125
    5. 'div' → logprob: -10.225616455078125
    6. ''est' → logprob: -11.475616455078125
    7. ' ' → logprob: -11.725616455078125
    8. ' is' → logprob: -12.725616455078125
    9. '```' → logprob: -12.975616455078125
    10. '’est' → logprob: -14.225616455078125

Token 78: ' divisible' (ID: 167813)
  Prédit: ' divisible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.020808588713407516
    2. 'div' → logprob: -4.145808696746826
    3. ' divis' → logprob: -5.520808696746826
    4. ' aussi' → logprob: -8.395808219909668
    5. ' également' → logprob: -8.770808219909668
    6. '   ' → logprob: -9.145808219909668
    7. ' div' → logprob: -9.395808219909668
    8. ' ' → logprob: -10.020808219909668
    9. ' also' → logprob: -10.520808219909668
    10. 'égal' → logprob: -10.770808219909668

Token 79: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.09041636437177658
    2. 'par' → logprob: -2.465416431427002
    3. '   ' → logprob: -6.965416431427002
    4. ' ' → logprob: -8.340415954589844
    5. '	par' → logprob: -8.965415954589844
    6. '  ' → logprob: -10.215415954589844
    7. '    ' → logprob: -10.340415954589844
    8. ' ' → logprob: -10.715415954589844
    9. '<|end|>' → logprob: -10.715415954589844
    10. '```' → logprob: -10.965415954589844

Token 80: ' ' (ID: 220)
  Prédit: '400'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '400' → logprob: -0.575955867767334
    2. ' ' → logprob: -0.825955867767334
    3. '4' → logprob: -11.825956344604492
    4. ' ' → logprob: -12.075956344604492
    5. '40' → logprob: -14.325956344604492
    6. '   ' → logprob: -14.450956344604492
    7. '399' → logprob: -14.575956344604492
    8. '```' → logprob: -14.575956344604492
    9. '  ' → logprob: -15.200956344604492
    10. '900' → logprob: -15.575956344604492

Token 81: '400' (ID: 4812)
  Prédit: '400'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '400' → logprob: -2.3080716346157715e-05
    2. '4' → logprob: -10.875022888183594
    3. ' ' → logprob: -12.750022888183594
    4. '```' → logprob: -14.625022888183594
    5. '40' → logprob: -14.875022888183594
    6. '-' → logprob: -16.125022888183594
    7. '   ' → logprob: -16.125022888183594
    8. '``' → logprob: -16.500022888183594
    9. '  ' → logprob: -17.500022888183594
    10. 'qu' → logprob: -17.875022888183594

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1866198629140854
    2. '   ' → logprob: -1.8116198778152466
    3. '),' → logprob: -6.186619758605957
    4. ')' → logprob: -6.811619758605957
    5. ' ,' → logprob: -6.811619758605957
    6. '.' → logprob: -7.061619758605957
    7. ':' → logprob: -7.561619758605957
    8. ',
' → logprob: -7.936619758605957
    9. '):' → logprob: -8.186619758605957
    10. ').' → logprob: -9.311619758605957

Token 83: ' alors' (ID: 17971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1846398115158081
    2. ' alors' → logprob: -2.0596399307250977
    3. ' return' → logprob: -4.184639930725098
    4. ',' → logprob: -4.934639930725098
    5. '    ' → logprob: -5.184639930725098
    6. ' ' → logprob: -6.059639930725098
    7. '  ' → logprob: -6.309639930725098
    8. ' ,' → logprob: -6.684639930725098
    9. ' c' → logprob: -6.934639930725098
    10. ' ' → logprob: -7.059639930725098

Token 84: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.06930530816316605
    2. ' elle' → logprob: -2.944305419921875
    3. 'c' → logprob: -4.319305419921875
    4. ' it' → logprob: -7.944305419921875
    5. ' ce' → logprob: -8.569305419921875
    6. ' ' → logprob: -8.819305419921875
    7. 'elle' → logprob: -8.944305419921875
    8. ' oui' → logprob: -9.819305419921875
    9. ' ' → logprob: -10.944305419921875
    10. 'it' → logprob: -11.194305419921875

Token 85: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.3722040057182312
    2. ''' → logprob: -1.247204065322876
    3. ''e' → logprob: -4.122203826904297
    4. 'e' → logprob: -5.872203826904297
    5. 'est' → logprob: -5.997203826904297
    6. ''s' → logprob: -7.622203826904297
    7. ''es' → logprob: -7.747203826904297
    8. ''''' → logprob: -8.122203826904297
    9. ' '' → logprob: -8.747203826904297
    10. ''a' → logprob: -8.997203826904297

Token 86: ' quand' (ID: 18026)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.008214777335524559
    2. ' aussi' → logprob: -5.258214950561523
    3. 'une' → logprob: -6.008214950561523
    4. 'a' → logprob: -8.508214950561523
    5. ' également' → logprob: -8.633214950561523
    6. ' also' → logprob: -9.758214950561523
    7. ' a' → logprob: -10.633214950561523
    8. ' ' → logprob: -11.008214950561523
    9. ' an' → logprob: -11.258214950561523
    10. '   ' → logprob: -11.758214950561523

Token 87: ' même' (ID: 9679)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.1446017473936081
    2. ' même' → logprob: -2.769601821899414
    3. '-' → logprob: -3.144601821899414
    4. 'une' → logprob: -3.769601821899414
    5. '-même' → logprob: -6.019601821899414
    6. '```' → logprob: -7.644601821899414
    7. ' un' → logprob: -8.019601821899414
    8. 'a' → logprob: -8.144601821899414
    9. '-a' → logprob: -8.269601821899414
    10. '"""' → logprob: -8.394601821899414

Token 88: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.007647445425391197
    2. 'une' → logprob: -5.007647514343262
    3. ' b' → logprob: -7.632647514343262
    4. ' True' → logprob: -8.257647514343262
    5. 'b' → logprob: -9.632647514343262
    6. ' ' → logprob: -10.132647514343262
    7. ' an' → logprob: -11.007647514343262
    8. '   ' → logprob: -11.257647514343262
    9. 'année' → logprob: -11.382647514343262
    10. ' true' → logprob: -11.382647514343262

Token 89: ' année' (ID: 32998)
  Prédit: ' année'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' année' → logprob: -0.2688272297382355
    2. 'année' → logprob: -1.518827199935913
    3. ' b' → logprob: -4.268827438354492
    4. 'b' → logprob: -6.893827438354492
    5. ' années' → logprob: -7.768827438354492
    6. ' ' → logprob: -8.018827438354492
    7. ' ann' → logprob: -8.143827438354492
    8. ''année' → logprob: -8.393827438354492
    9. ' an' → logprob: -8.768827438354492
    10. '   ' → logprob: -9.393827438354492

Token 90: ' b' (ID: 287)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.4557814300060272
    2. ' b' → logprob: -1.7057814598083496
    3. '   ' → logprob: -2.2057814598083496
    4. ' true' → logprob: -2.9557814598083496
    5. 'b' → logprob: -4.70578145980835
    6. '    ' → logprob: -5.95578145980835
    7. ' leap' → logprob: -6.20578145980835
    8. ' year' → logprob: -7.08078145980835
    9. '    
' → logprob: -7.20578145980835
    10. '=True' → logprob: -7.33078145980835

Token 91: 'isse' (ID: 6969)
  Prédit: 'isse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isse' → logprob: -0.011179156601428986
    2. 'iss' → logprob: -5.261178970336914
    3. 'i' → logprob: -5.386178970336914
    4. 'is' → logprob: -7.011178970336914
    5. '   ' → logprob: -9.261178970336914
    6. 'e' → logprob: -9.511178970336914
    7. 'ise' → logprob: -10.261178970336914
    8. '```' → logprob: -10.261178970336914
    9. 'isset' → logprob: -10.761178970336914
    10. ' i' → logprob: -11.011178970336914

Token 92: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0003448792558629066
    2. 'ct' → logprob: -8.125345230102539
    3. 'tile' → logprob: -11.125345230102539
    4. 'tle' → logprob: -11.875345230102539
    5. 'x' → logprob: -12.375345230102539
    6. 'lt' → logprob: -12.750345230102539
    7. '       ' → logprob: -13.000345230102539
    8. '   ' → logprob: -13.125345230102539
    9. ' xt' → logprob: -13.250345230102539
    10. 'st' → logprob: -13.375345230102539

Token 93: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -0.00017231269157491624
    2. '   ' → logprob: -9.50017261505127
    3. 'e' → logprob: -9.87517261505127
    4. 'i' → logprob: -11.00017261505127
    5. '       ' → logprob: -12.25017261505127
    6. 'il' → logprob: -12.25017261505127
    7. 'le' → logprob: -12.87517261505127
    8. '    ' → logprob: -13.12517261505127
    9. '     ' → logprob: -13.12517261505127
    10. 'île' → logprob: -13.12517261505127

Token 94: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003974274266511202
    2. '"""' → logprob: -6.753974437713623
    3. '"""
' → logprob: -7.128974437713623
    4. '"' → logprob: -7.378974437713623
    5. '
' → logprob: -7.378974437713623
    6. '```' → logprob: -8.378973960876465
    7. ')' → logprob: -8.503973960876465
    8. '\n' → logprob: -8.753973960876465
    9. '  ' → logprob: -10.378973960876465
    10. ')
' → logprob: -10.378973960876465

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012127326801419258
    2. '
' → logprob: -4.76212739944458
    3. '"""' → logprob: -6.26212739944458
    4. '"""
' → logprob: -7.51212739944458
    5. '```' → logprob: -7.88712739944458
    6. '    
' → logprob: -8.012126922607422
    7. '\n' → logprob: -9.012126922607422
    8. '"' → logprob: -9.887126922607422
    9. '    ' → logprob: -10.262126922607422
    10. ' 
' → logprob: -10.512126922607422

Token 96: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009872603230178356
    2. '"""' → logprob: -4.8848724365234375
    3. '
' → logprob: -7.0098724365234375
    4. '\n' → logprob: -7.8848724365234375
    5. '"""
' (adapté à ' """
') → logprob: -8.134872436523438
    6. '```' → logprob: -8.259872436523438
    7. '    
' → logprob: -8.509872436523438
    8. '"' → logprob: -10.009872436523438
    9. '    ' → logprob: -10.134872436523438
    10. '  
' → logprob: -10.634872436523438

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03200588375329971
    2. '
' → logprob: -3.782005786895752
    3. '    
' → logprob: -5.657005786895752
    4. '\n' → logprob: -5.657005786895752
    5. ' 
' → logprob: -6.532005786895752
    6. '\' → logprob: -9.40700626373291
    7. '```' → logprob: -9.65700626373291
    8. '    ' → logprob: -10.78200626373291
    9. '   
' → logprob: -11.03200626373291
    10. 'n' → logprob: -11.28200626373291

Token 98: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12064212560653687
    2. 'if' (adapté à ' if') → logprob: -2.9956421852111816
    3. 'return' → logprob: -3.8706421852111816
    4. ' 
' → logprob: -4.495642185211182
    5. ' if' → logprob: -4.745642185211182
    6. '    
' → logprob: -4.870642185211182
    7. '\n' → logprob: -5.620642185211182
    8. 'i' → logprob: -5.620642185211182
    9. 'r' → logprob: -5.995642185211182
    10. 'n' → logprob: -6.245642185211182

Token 99: ' year' (ID: 1284)
  Prédit: ' year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' year' → logprob: -0.008246348239481449
    2. ' (' → logprob: -4.883246421813965
    3. ' ' → logprob: -7.508246421813965
    4. 'year' → logprob: -10.258246421813965
    5. '(year' → logprob: -10.258246421813965
    6. ' ' → logprob: -10.883246421813965
    7. ' 年' → logprob: -14.883246421813965
    8. '(' → logprob: -15.008246421813965
    9. ' years' → logprob: -15.008246421813965
    10. ' not' → logprob: -15.383246421813965

Token 100: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0008195152622647583
    2. '%' → logprob: -7.500819683074951
    3. ' ' → logprob: -8.250819206237793
    4. ' ' → logprob: -12.250819206237793
    5. '   ' → logprob: -14.875819206237793
    6. ' %
' → logprob: -15.125819206237793
    7. '	' → logprob: -17.87582015991211
    8. '  ' → logprob: -18.25082015991211
    9. '    ' → logprob: -18.50082015991211
    10. ' ‌' → logprob: -18.62582015991211

Token 101: ' ' (ID: 220)
  Prédit: '400'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '400' → logprob: -0.006003567948937416
    2. '4' → logprob: -5.506003379821777
    3. ' ' → logprob: -6.256003379821777
    4. '40' → logprob: -12.381003379821777
    5. '   ' → logprob: -15.756003379821777
    6. '```' → logprob: -16.506004333496094
    7. '0' → logprob: -18.756004333496094
    8. '' → logprob: -18.881004333496094
    9. '٤' → logprob: -19.068504333496094
    10. '  ' → logprob: -19.443504333496094

Token 102: '400' (ID: 4812)
  Prédit: '400'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '400' → logprob: -0.014163747429847717
    2. '4' → logprob: -4.264163970947266
    3. ' ' → logprob: -16.139163970947266
    4. '40' → logprob: -16.264163970947266
    5. '```' → logprob: -18.264163970947266
    6. '   ' → logprob: -18.514163970947266
    7. '100' → logprob: -19.639163970947266
    8. '٤' → logprob: -20.389163970947266
    9. '' → logprob: -20.889163970947266
    10. '000' → logprob: -21.264163970947266

Token 103: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03806513547897339
    2. '==' → logprob: -3.288065195083618
    3. '=' → logprob: -10.913064956665039
    4. ' =' → logprob: -12.913064956665039
    5. ' ' → logprob: -13.788064956665039
    6. '0' → logprob: -14.038064956665039
    7. ' ' → logprob: -14.413064956665039
    8. ')' → logprob: -15.538064956665039
    9. ' !=' → logprob: -15.913064956665039
    10. ')==' → logprob: -15.913064956665039

Token 104: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004078401252627373
    2. ' ' → logprob: -5.504078388214111
    3. '=' → logprob: -18.754077911376953
    4. ' ' → logprob: -19.879077911376953
    5. '```' → logprob: -20.754077911376953
    6. '۰' → logprob: -20.879077911376953
    7. '00' → logprob: -21.379077911376953
    8. '000' → logprob: -21.379077911376953
    9. ' ' → logprob: -21.379077911376953
    10. '  ' → logprob: -21.629077911376953

Token 105: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '```' → logprob: -17.25001335144043
    4. '   ' → logprob: -18.37501335144043
    5. '  ' → logprob: -18.75001335144043
    6. '00' → logprob: -20.00001335144043
    7. '    ' → logprob: -20.18751335144043
    8. '=' → logprob: -20.25001335144043
    9. '``' → logprob: -20.31251335144043
    10. ' ' → logprob: -20.31251335144043

Token 106: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017529279284644872
    2. ':
' → logprob: -8.875175476074219
    3. ':return' → logprob: -10.625175476074219
    4. ' :' → logprob: -12.000175476074219
    5. '):' → logprob: -12.625175476074219
    6. '   ' → logprob: -13.875175476074219
    7. ' or' → logprob: -16.00017547607422
    8. '       ' → logprob: -16.37517547607422
    9. ':**' → logprob: -16.37517547607422
    10. ' and' → logprob: -16.50017547607422

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006238406989723444
    2. '   ' → logprob: -6.1312384605407715
    3. ':' → logprob: -6.5062384605407715
    4. ' return' → logprob: -6.7562384605407715
    5. '
' → logprob: -6.8812384605407715
    6. 'return' → logprob: -8.631237983703613
    7. ':return' → logprob: -9.506237983703613
    8. '\n' → logprob: -10.006237983703613
    9. ':
' → logprob: -11.631237983703613
    10. '    
' → logprob: -12.006237983703613

Token 108: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6111800670623779
    2. ' return' → logprob: -1.361180067062378
    3. '       ' → logprob: -1.611180067062378
    4. '
' → logprob: -6.861180305480957
    5. '   ' → logprob: -8.736180305480957
    6. ' 
' → logprob: -9.986180305480957
    7. '	return' → logprob: -12.111180305480957
    8. ' ' → logprob: -12.236180305480957
    9. ':return' → logprob: -12.861180305480957
    10. 'eturn' → logprob: -12.986180305480957

Token 109: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.575939416885376
    2. ' True' → logprob: -0.825939416885376
    3. '   ' → logprob: -17.950939178466797
    4. '(True' → logprob: -19.450939178466797
    5. '=True' → logprob: -22.325939178466797
    6. 'False' → logprob: -22.575939178466797
    7. 'true' → logprob: -22.575939178466797
    8. ' Tru' → logprob: -23.325939178466797
    9. ' ' → logprob: -23.700939178466797
    10. 'Tr' → logprob: -23.825939178466797

Token 110: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26966142654418945
    2. '
' → logprob: -1.6446614265441895
    3. '\n' → logprob: -3.5196614265441895
    4. '    
' → logprob: -4.3946614265441895
    5. '  
' → logprob: -7.7696614265441895
    6. '   
' → logprob: -7.7696614265441895
    7. ' 
' → logprob: -8.769660949707031
    8. 'elif' → logprob: -9.269660949707031
    9. '\' → logprob: -9.769660949707031
    10. '  ' → logprob: -10.269660949707031

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009531530551612377
    2. '
' → logprob: -5.009531497955322
    3. '    
' → logprob: -6.634531497955322
    4. '\n' → logprob: -7.009531497955322
    5. 'elif' → logprob: -7.634531497955322
    6. ' elif' → logprob: -10.00953197479248
    7. '   
' → logprob: -10.75953197479248
    8. '  
' → logprob: -11.13453197479248
    9. '  ' → logprob: -11.88453197479248
    10. '	elif' → logprob: -12.25953197479248

Token 112: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3738640248775482
    2. 'elif' → logprob: -1.7488640546798706
    3. '
' → logprob: -2.248863935470581
    4. ' elif' → logprob: -4.12386417388916
    5. '    
' → logprob: -4.37386417388916
    6. 'if' (adapté à ' if') → logprob: -6.74886417388916
    7. '\n' → logprob: -6.74886417388916
    8. '  
' → logprob: -7.74886417388916
    9. '   
' → logprob: -7.99886417388916
    10. ' if' → logprob: -8.49886417388916

Token 113: ' year' (ID: 1284)
  Prédit: ' year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' year' → logprob: -1.5213274309644476e-05
    2. 'year' → logprob: -12.000015258789062
    3. ' ' → logprob: -12.250015258789062
    4. ' ' → logprob: -12.375015258789062
    5. ' years' → logprob: -18.375015258789062
    6. '(year' → logprob: -18.625015258789062
    7. ' jaar' → logprob: -19.375015258789062
    8. ' año' → logprob: -19.375015258789062
    9. '_year' → logprob: -19.500015258789062
    10. '年' → logprob: -19.875015258789062

Token 114: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.02326492965221405
    2. '%' → logprob: -3.7732648849487305
    3. ' ' → logprob: -10.89826488494873
    4. ' ' → logprob: -14.27326488494873
    5. '   ' → logprob: -16.523265838623047
    6. '1' → logprob: -17.773265838623047
    7. '20' → logprob: -18.023265838623047
    8. '  ' → logprob: -18.085765838623047
    9. ' %
' → logprob: -18.210765838623047
    10. '	' → logprob: -18.210765838623047

Token 115: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.25193271040916443
    2. ' ' → logprob: -1.5019327402114868
    3. '4' → logprob: -13.001933097839355
    4. '  ' → logprob: -14.626933097839355
    5. '40' → logprob: -15.001933097839355
    6. '   ' → logprob: -15.501933097839355
    7. ' ' → logprob: -15.876933097839355
    8. '```' → logprob: -16.12693214416504
    9. '<|end|>' → logprob: -17.12693214416504
    10. '0' → logprob: -17.12693214416504

Token 116: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -6.420598219847307e-05
    2. '4' → logprob: -9.7500638961792
    3. ' ' → logprob: -12.1250638961792
    4. '   ' → logprob: -15.3750638961792
    5. '  ' → logprob: -16.375064849853516
    6. '1' → logprob: -16.625064849853516
    7. '0' → logprob: -18.750064849853516
    8. '    ' → logprob: -18.750064849853516
    9. '```' → logprob: -19.625064849853516
    10. '１００' → logprob: -20.625064849853516

Token 117: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.18182890117168427
    2. ' ==' → logprob: -2.3068289756774902
    3. '!=' → logprob: -3.0568289756774902
    4. '==' → logprob: -3.9318289756774902
    5. ' ' → logprob: -10.681828498840332
    6. '=' → logprob: -12.556828498840332
    7. ' ' → logprob: -12.931828498840332
    8. '0' → logprob: -13.556828498840332
    9. '   ' → logprob: -13.681828498840332
    10. '()!=' → logprob: -14.181828498840332

Token 118: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01603648066520691
    2. ' ' → logprob: -4.141036510467529
    3. '=' → logprob: -13.516036033630371
    4. '   ' → logprob: -15.266036033630371
    5. '```' → logprob: -15.516036033630371
    6. '==' → logprob: -16.641036987304688
    7. '  ' → logprob: -16.891036987304688
    8. ' ' → logprob: -17.016036987304688
    9. '100' → logprob: -17.641036987304688
    10. '!=' → logprob: -17.891036987304688

Token 119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033713103039190173
    2. ' ' → logprob: -8.000337600708008
    3. '=' → logprob: -14.500337600708008
    4. '==' → logprob: -14.875337600708008
    5. '   ' → logprob: -14.875337600708008
    6. '00' → logprob: -16.125337600708008
    7. '```' → logprob: -16.187837600708008
    8. '  ' → logprob: -16.375337600708008
    9. ' ' → logprob: -17.625337600708008
    10. '       ' → logprob: -17.687837600708008

Token 120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005100222188048065
    2. ':
' → logprob: -8.375510215759277
    3. ':return' → logprob: -8.375510215759277
    4. '   ' → logprob: -10.750510215759277
    5. '):' → logprob: -11.750510215759277
    6. ' :' → logprob: -11.875510215759277
    7. '==' → logprob: -12.375510215759277
    8. ' ==' → logprob: -12.625510215759277
    9. '       ' → logprob: -14.000510215759277
    10. '<|end|>' → logprob: -14.250510215759277

Token 121: '       ' (ID: 309)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.6763038635253906
    2. 'False' → logprob: -1.3013038635253906
    3. '   ' → logprob: -1.9263038635253906
    4. '       ' → logprob: -3.0513038635253906
    5. ' return' → logprob: -4.301303863525391
    6. ':return' → logprob: -5.301303863525391
    7. '    ' → logprob: -5.926303863525391
    8. ':' → logprob: -6.551303863525391
    9. 'return' → logprob: -6.926303863525391
    10. ' True' → logprob: -7.676303863525391

Token 122: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8138065338134766
    2. 'False' → logprob: -1.0638065338134766
    3. ' return' → logprob: -2.1888065338134766
    4. ' False' → logprob: -2.4388065338134766
    5. '   ' → logprob: -4.563806533813477
    6. '       ' → logprob: -6.313806533813477
    7. 'false' → logprob: -10.188806533813477
    8. '	return' → logprob: -10.313806533813477
    9. '    ' → logprob: -10.938806533813477
    10. ' false' → logprob: -11.563806533813477

Token 123: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0485873706638813
    2. ' False' → logprob: -3.0485873222351074
    3. '(False' → logprob: -19.298587799072266
    4. '   ' → logprob: -20.923587799072266
    5. 'True' → logprob: -21.048587799072266
    6. '=False' → logprob: -21.173587799072266
    7. '_false' → logprob: -22.048587799072266
    8. ' ' → logprob: -22.423587799072266
    9. 'false' → logprob: -22.923587799072266
    10. ' True' → logprob: -23.548587799072266

Token 124: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4525463581085205
    2. '
' → logprob: -1.0775463581085205
    3. '    
' → logprob: -3.8275463581085205
    4. '  
' → logprob: -6.827546119689941
    5. ' 
' → logprob: -7.952546119689941
    6. '   
' → logprob: -8.577546119689941
    7. '```' → logprob: -9.952546119689941
    8. '\n' → logprob: -10.077546119689941
    9. 'if' → logprob: -10.327546119689941
    10. '<|end|>' → logprob: -10.952546119689941

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0360163189470768
    2. '
' → logprob: -4.036016464233398
    3. '    
' → logprob: -4.161016464233398
    4. ' 
' → logprob: -7.036016464233398
    5. '  
' → logprob: -7.161016464233398
    6. '   
' → logprob: -8.411016464233398
    7. 'if' → logprob: -9.661016464233398
    8. ' if' → logprob: -9.911016464233398
    9. '\n' → logprob: -9.911016464233398
    10. '```' → logprob: -10.286016464233398

Token 126: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08092261850833893
    2. ' if' → logprob: -2.5809226036071777
    3. '   ' → logprob: -6.205922603607178
    4. 'i' → logprob: -12.705923080444336
    5. 'return' → logprob: -12.955923080444336
    6. ' ' → logprob: -13.080923080444336
    7. '  ' → logprob: -13.330923080444336
    8. ' 
' → logprob: -13.955923080444336
    9. '    
' → logprob: -14.330923080444336
    10. ' i' → logprob: -14.330923080444336

Token 127: ' year' (ID: 1284)
  Prédit: ' year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' year' → logprob: -0.0005555360112339258
    2. 'year' → logprob: -7.500555515289307
    3. ' ' → logprob: -13.125555992126465
    4. ' ' → logprob: -14.750555992126465
    5. '   ' → logprob: -16.62555503845215
    6. '(year' → logprob: -17.62555503845215
    7. '  ' → logprob: -18.50055503845215
    8. '年' → logprob: -19.12555503845215
    9. ' years' → logprob: -19.12555503845215
    10. 'Year' → logprob: -19.25055503845215

Token 128: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.018215499818325043
    2. '%' → logprob: -4.018215656280518
    3. ' ' → logprob: -9.64321517944336
    4. ' ' → logprob: -14.51821517944336
    5. '   ' → logprob: -16.39321517944336
    6. '  ' → logprob: -17.39321517944336
    7. 's' → logprob: -17.89321517944336
    8. '4' → logprob: -18.39321517944336
    9. '1' → logprob: -18.76821517944336
    10. '_' → logprob: -19.39321517944336

Token 129: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3484492301940918
    2. '4' → logprob: -1.2234492301940918
    3. ' ' → logprob: -13.22344970703125
    4. '40' → logprob: -14.34844970703125
    5. '   ' → logprob: -14.59844970703125
    6. '```' → logprob: -14.59844970703125
    7. '  ' → logprob: -15.09844970703125
    8. '34' → logprob: -15.72344970703125
    9. '32' → logprob: -15.84844970703125
    10. '<|end|>' → logprob: -16.22344970703125

Token 130: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.000003814697266
    4. '```' → logprob: -18.750003814697266
    5. '٤' → logprob: -19.625003814697266
    6. '  ' → logprob: -19.625003814697266
    7. '40' → logprob: -19.875003814697266
    8. '' → logprob: -19.875003814697266
    9. '۴' → logprob: -20.250003814697266
    10. '400' → logprob: -20.500003814697266

Token 131: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.049262795597314835
    2. '==' → logprob: -3.049262762069702
    3. ' ' → logprob: -7.924263000488281
    4. ' !=' → logprob: -8.174263000488281
    5. ' ' → logprob: -11.799263000488281
    6. '0' → logprob: -11.799263000488281
    7. '   ' → logprob: -12.424263000488281
    8. '=' → logprob: -12.549263000488281
    9. '!=' → logprob: -12.549263000488281
    10. '  ' → logprob: -13.424263000488281

Token 132: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07889287173748016
    2. ' ' → logprob: -2.578892946243286
    3. '=' → logprob: -12.953892707824707
    4. '==' → logprob: -15.078892707824707
    5. ' ' → logprob: -15.078892707824707
    6. '   ' → logprob: -16.578893661499023
    7. '  ' → logprob: -17.328893661499023
    8. '00' → logprob: -17.953893661499023
    9. '۰' → logprob: -18.453893661499023
    10. '	' → logprob: -18.578893661499023

Token 133: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004311460361350328
    2. ' ' → logprob: -7.750431060791016
    3. '4' → logprob: -15.000431060791016
    4. '=' → logprob: -16.125431060791016
    5. '==' → logprob: -16.750431060791016
    6. ' ' → logprob: -17.625431060791016
    7. '   ' → logprob: -18.125431060791016
    8. '  ' → logprob: -18.125431060791016
    9. '00' → logprob: -18.750431060791016
    10. '```' → logprob: -18.750431060791016

Token 134: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001472483854740858
    2. ':
' → logprob: -6.626472473144531
    3. ':return' → logprob: -9.251472473144531
    4. '       ' → logprob: -10.501472473144531
    5. '   ' → logprob: -11.001472473144531
    6. '):' → logprob: -12.501472473144531
    7. ' :' → logprob: -13.626472473144531
    8. '<|end|>' → logprob: -14.251472473144531
    9. '():' → logprob: -15.251472473144531
    10. ':

' → logprob: -15.501472473144531

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05788153409957886
    2. '   ' → logprob: -3.0578815937042236
    3. 'return' → logprob: -5.0578813552856445
    4. ' return' → logprob: -5.9328813552856445
    5. ':return' → logprob: -9.807881355285645
    6. '
' → logprob: -10.182881355285645
    7. '	return' → logprob: -10.182881355285645
    8. '    ' → logprob: -10.307881355285645
    9. ' True' → logprob: -10.682881355285645
    10. '<|end|>' → logprob: -11.307881355285645

Token 136: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007340277079492807
    2. ' return' → logprob: -5.007340431213379
    3. '       ' → logprob: -7.632340431213379
    4. '   ' → logprob: -9.007340431213379
    5. 'True' → logprob: -11.382340431213379
    6. '	return' → logprob: -13.382340431213379
    7. ':return' → logprob: -13.632340431213379
    8. ' True' → logprob: -13.757340431213379
    9. '           ' → logprob: -14.757340431213379
    10. '    ' → logprob: -14.882340431213379

Token 137: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.4740770161151886
    2. 'True' → logprob: -0.9740769863128662
    3. ' ' → logprob: -18.974077224731445
    4. '(True' → logprob: -19.224077224731445
    5. '=True' → logprob: -20.599077224731445
    6. ' Tru' → logprob: -21.849077224731445
    7. '   ' → logprob: -21.974077224731445
    8. ' ' → logprob: -23.224077224731445
    9. 'False' → logprob: -23.224077224731445
    10. 'Tr' → logprob: -23.349077224731445

Token 138: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003987336531281471
    2. 'return' → logprob: -8.500398635864258
    3. '    
' → logprob: -9.250398635864258
    4. ' return' → logprob: -9.875398635864258
    5. 'False' → logprob: -10.875398635864258
    6. '
' → logprob: -11.125398635864258
    7. 'else' → logprob: -12.375398635864258
    8. ' else' → logprob: -13.250398635864258
    9. ' False' → logprob: -13.375398635864258
    10. '  
' → logprob: -13.375398635864258

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002769097685813904
    2. 'return' → logprob: -6.0027689933776855
    3. ' return' → logprob: -8.377769470214844
    4. '    
' → logprob: -10.252769470214844
    5. 'False' → logprob: -11.127769470214844
    6. 'else' → logprob: -12.127769470214844
    7. '
' → logprob: -12.752769470214844
    8. '  ' → logprob: -13.627769470214844
    9. ' False' → logprob: -14.002769470214844
    10. '  
' → logprob: -14.252769470214844

Token 140: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05040216073393822
    2. '   ' → logprob: -3.0504021644592285
    3. ' return' → logprob: -6.9254021644592285
    4. 'False' → logprob: -7.1754021644592285
    5. 'else' → logprob: -9.80040168762207
    6. 'false' → logprob: -12.67540168762207
    7. '	return' → logprob: -12.92540168762207
    8. ' False' → logprob: -13.55040168762207
    9. 'eturn' → logprob: -14.17540168762207
    10. ':return' → logprob: -14.42540168762207

Token 141: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.2014133334159851
    2. 'False' → logprob: -1.7014133930206299
    3. '(False' → logprob: -18.826414108276367
    4. '=False' → logprob: -21.201414108276367
    5. ' ' → logprob: -21.451414108276367
    6. '_false' → logprob: -21.576414108276367
    7. ' false' → logprob: -23.076414108276367
    8. '.False' → logprob: -23.201414108276367
    9. ' ' → logprob: -23.701414108276367
    10. '   ' → logprob: -23.826414108276367

Token 142: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1873335838317871
    2. '<|end|>' → logprob: -1.937333583831787
    3. '\n' → logprob: -4.187333583831787
    4. '```' → logprob: -4.937333583831787
    5. 'newline' → logprob: -6.812333583831787
    6. '\' → logprob: -7.187333583831787
    7. '#' → logprob: -7.437333583831787
    8. '' → logprob: -7.562333583831787
    9. '<|end|>' → logprob: -7.687333583831787
    10. ' ' → logprob: -8.687334060668945

Token 143: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06972409784793854
    2. 'def' → logprob: -3.8197240829467773
    3. '\n' → logprob: -4.319724082946777
    4. '#' → logprob: -4.819724082946777
    5. '<|end|>' → logprob: -4.819724082946777
    6. '```' → logprob: -4.944724082946777
    7. '

' → logprob: -6.569724082946777
    8. '  
' → logprob: -6.694724082946777
    9. ' 
' → logprob: -6.819724082946777
    10. '[' → logprob: -7.319724082946777

Token 144: ' main' (ID: 2758)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.003580826334655285
    2. ' calculate' → logprob: -6.5035810470581055
    3. ' ' → logprob: -6.6285810470581055
    4. ' est' → logprob: -7.8785810470581055
    5. 'is' → logprob: -9.253581047058105
    6. ' check' → logprob: -9.878581047058105
    7. ' main' → logprob: -10.628581047058105
    8. ' get' → logprob: -10.753581047058105
    9. ' space' → logprob: -10.878581047058105
    10. ' ' → logprob: -11.128581047058105

Token 145: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.31667202711105347
    2. '(' → logprob: -1.3166720867156982
    3. '_' → logprob: -5.941671848297119
    4. ':' → logprob: -7.941671848297119
    5. '()' → logprob: -8.941672325134277
    6. ' ():' → logprob: -9.316672325134277
    7. '_:' → logprob: -9.941672325134277
    8. ' (' → logprob: -10.941672325134277
    9. '(":' → logprob: -10.941672325134277
    10. '():
' → logprob: -11.191672325134277

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28038036823272705
    2. ' year' → logprob: -1.530380368232727
    3. ' 
' → logprob: -4.6553802490234375
    4. ' ' → logprob: -5.5303802490234375
    5. '    ' → logprob: -5.6553802490234375
    6. ' année' → logprob: -5.7803802490234375
    7. 'year' → logprob: -5.9053802490234375
    8. '    
' → logprob: -7.0303802490234375
    9. 'année' → logprob: -7.1553802490234375
    10. 'n' → logprob: -7.4053802490234375

Token 147: ' """
' (ID: 7037)
  Prédit: ' year'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' year' → logprob: -0.16166451573371887
    2. 'year' → logprob: -1.9116644859313965
    3. '   ' → logprob: -7.9116644859313965
    4. 'année' → logprob: -7.9116644859313965
    5. ' for' → logprob: -8.661664962768555
    6. ' import' → logprob: -9.411664962768555
    7. ' an' → logprob: -9.411664962768555
    8. 'import' → logprob: -9.536664962768555
    9. 'anne' → logprob: -9.536664962768555
    10. ' année' → logprob: -9.911664962768555

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07537796348333359
    2. ' Aff' → logprob: -3.950377941131592
    3. 'Aff' → logprob: -5.200377941131592
    4. '"""' → logprob: -5.450377941131592
    5. ' """' → logprob: -5.575377941131592
    6. ' Vér' → logprob: -5.700377941131592
    7. 'Dé' → logprob: -6.075377941131592
    8. 'Calcul' → logprob: -6.075377941131592
    9. ' Tests' → logprob: -6.450377941131592
    10. 'É' → logprob: -6.450377941131592

Token 149: ' Programme' (ID: 50667)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2032158374786377
    2. 'year' → logprob: -1.3282158374786377
    3. 'année' → logprob: -2.0782158374786377
    4. 'Ann' → logprob: -2.5782158374786377
    5. 'An' → logprob: -2.5782158374786377
    6. 'for' → logprob: -3.2032158374786377
    7. '   ' → logprob: -3.3282158374786377
    8. '#' → logprob: -3.3282158374786377
    9. 'years' → logprob: -4.828215599060059
    10. ' year' → logprob: -5.453215599060059

Token 150: ' principal' (ID: 10589)
  Prédit: ' principal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' principal' → logprob: -0.05629589036107063
    2. '   ' → logprob: -3.681295871734619
    3. ' de' → logprob: -3.931295871734619
    4. ' pour' → logprob: -6.181295871734619
    5. 'principal' → logprob: -6.181295871734619
    6. ' d' → logprob: -6.806295871734619
    7. ' qui' → logprob: -6.806295871734619
    8. ' permettant' → logprob: -7.056295871734619
    9. ' test' → logprob: -7.556295871734619
    10. ' principale' → logprob: -7.556295871734619

Token 151: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13655148446559906
    2. ':' → logprob: -2.3865513801574707
    3. 'def' → logprob: -3.7615513801574707
    4. ':
' → logprob: -5.261551380157471
    5. '    
' → logprob: -6.011551380157471
    6. ' :' → logprob: -6.511551380157471
    7. '
' → logprob: -6.886551380157471
    8. '():' → logprob: -6.886551380157471
    9. '```' → logprob: -8.261551856994629
    10. '():
' → logprob: -8.761551856994629

Token 152: ' lire' (ID: 46082)
  Prédit: ' tester'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tester' → logprob: -0.013412091881036758
    2. ' vérifier' → logprob: -4.888411998748779
    3. ' test' → logprob: -6.138411998748779
    4. ' demander' → logprob: -7.263411998748779
    5. 'tester' → logprob: -7.263411998748779
    6. ' ex' → logprob: -7.388411998748779
    7. ' lancer' → logprob: -8.138412475585938
    8. ' utiliser' → logprob: -8.388412475585938
    9. ' afficher' → logprob: -8.763412475585938
    10. ' testing' → logprob: -9.013412475585938

Token 153: ' plusieurs' (ID: 20875)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.03583806753158569
    2. ' l' → logprob: -3.5358381271362305
    3. ' an' → logprob: -5.9108381271362305
    4. 'une' → logprob: -6.7858381271362305
    5. ' un' → logprob: -6.9108381271362305
    6. ' ' → logprob: -7.9108381271362305
    7. ' ' → logprob: -8.53583812713623
    8. ' année' → logprob: -8.53583812713623
    9. ' year' → logprob: -8.66083812713623
    10. '   ' → logprob: -9.16083812713623

Token 154: ' ensembles' (ID: 144172)
  Prédit: ' années'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' années' → logprob: -0.019741231575608253
    2. ' des' → logprob: -4.519741058349609
    3. ' years' → logprob: -5.519741058349609
    4. 'année' → logprob: -6.644741058349609
    5. ' lignes' → logprob: -7.394741058349609
    6. ' ' → logprob: -7.394741058349609
    7. ' une' → logprob: -7.644741058349609
    8. ' année' → logprob: -8.01974105834961
    9. ' lines' → logprob: -8.26974105834961
    10. ' an' → logprob: -8.39474105834961

Token 155: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3376554846763611
    2. ' d' → logprob: -1.4626555442810059
    3. 'd' → logprob: -3.587655544281006
    4. 'de' → logprob: -3.837655544281006
    5. '   ' → logprob: -5.712655544281006
    6. ' ' → logprob: -7.462655544281006
    7. 'def' → logprob: -7.462655544281006
    8. '    ' → logprob: -7.712655544281006
    9. ' l' → logprob: -8.212655067443848
    10. ' des' → logprob: -9.837655067443848

Token 156: ' données' (ID: 30580)
  Prédit: ' données'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.04648485779762268
    2. ' années' → logprob: -3.79648494720459
    3. ' tests' → logprob: -4.92148494720459
    4. ' test' → logprob: -5.29648494720459
    5. ' entr' → logprob: -5.67148494720459
    6. ' input' → logprob: -6.04648494720459
    7. ' inputs' → logprob: -6.67148494720459
    8. 'entr' → logprob: -7.54648494720459
    9. 'd' → logprob: -7.67148494720459
    10. ' valeurs' → logprob: -7.67148494720459

Token 157: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09431620687246323
    2. ',' → logprob: -2.969316244125366
    3. ' et' → logprob: -3.469316244125366
    4. ' ,' → logprob: -5.344316005706787
    5. '    ' → logprob: -7.344316005706787
    6. ' :' → logprob: -7.719316005706787
    7. ' de' → logprob: -7.969316005706787
    8. '.' → logprob: -8.094316482543945
    9. '```' → logprob: -8.844316482543945
    10. ' (' → logprob: -8.844316482543945

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006950391689315438
    2. '    
' → logprob: -8.00069522857666
    3. '    ' → logprob: -8.75069522857666
    4. 'n' → logprob: -9.50069522857666
    5. ' 
' → logprob: -9.87569522857666
    6. '
' → logprob: -10.75069522857666
    7. ' for' → logprob: -11.25069522857666
    8. ' n' → logprob: -12.25069522857666
    9. 'import' → logprob: -12.25069522857666
    10. '```' → logprob: -12.25069522857666

Token 159: ' Chaque' (ID: 94758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0422811321914196
    2. 'n' → logprob: -4.417281150817871
    3. ' n' → logprob: -4.542281150817871
    4. ' while' → logprob: -4.667281150817871
    5. '
' → logprob: -6.417281150817871
    6. ' for' → logprob: -6.917281150817871
    7. ' lines' → logprob: -6.917281150817871
    8. ' try' → logprob: -7.042281150817871
    9. ' import' → logprob: -7.167281150817871
    10. ' year' → logprob: -7.292281150817871

Token 160: ' ensemble' (ID: 33081)
  Prédit: ' ensemble'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ensemble' → logprob: -1.1085820198059082
    2. 'ensemble' → logprob: -1.2335820198059082
    3. ' ' → logprob: -1.6085820198059082
    4. ' année' → logprob: -2.608582019805908
    5. ' input' → logprob: -3.858582019805908
    6. ' set' → logprob: -4.358582019805908
    7. ' year' → logprob: -4.483582019805908
    8. 'année' → logprob: -4.608582019805908
    9. ' line' → logprob: -4.858582019805908
    10. ' dataset' → logprob: -5.233582019805908

Token 161: ' est' (ID: 893)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.10297829657793045
    2. 'de' → logprob: -3.352978229522705
    3. ' d' → logprob: -4.102978229522705
    4. ' est' → logprob: -4.977978229522705
    5. ' consists' → logprob: -5.102978229522705
    6. ' ' → logprob: -5.102978229522705
    7. '   ' → logprob: -5.102978229522705
    8. ' =' → logprob: -5.477978229522705
    9. '    ' → logprob: -5.602978229522705
    10. ' consiste' → logprob: -5.727978229522705

Token 162: ' constitué' (ID: 196673)
  Prédit: ' constitué'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constitué' → logprob: -0.7284945249557495
    2. ' composé' → logprob: -1.1034945249557495
    3. ' fourni' → logprob: -2.478494644165039
    4. ' une' → logprob: -3.478494644165039
    5. ' lu' → logprob: -4.478494644165039
    6. ' un' → logprob: -4.603494644165039
    7. ' l' → logprob: -5.228494644165039
    8. ' ' → logprob: -5.228494644165039
    9. ' constitu' → logprob: -5.353494644165039
    10. ' donné' → logprob: -5.353494644165039

Token 163: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.026083603501319885
    2. 'd' → logprob: -4.026083469390869
    3. ' ' → logprob: -5.526083469390869
    4. ' de' → logprob: -6.526083469390869
    5. ' par' → logprob: -7.151083469390869
    6. 'e' → logprob: -7.526083469390869
    7. 'de' → logprob: -8.026083946228027
    8. '<|end|>' → logprob: -8.026083946228027
    9. ' du' → logprob: -8.776083946228027
    10. ' ' → logprob: -9.526083946228027

Token 164: ' deux' (ID: 10301)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.3026820421218872
    2. ' une' → logprob: -1.6776820421218872
    3. ' l' → logprob: -1.8026820421218872
    4. ' ' → logprob: -2.1776819229125977
    5. ' an' → logprob: -2.4276819229125977
    6. ' trois' → logprob: -3.5526819229125977
    7. ' n' → logprob: -3.8026819229125977
    8. ' year' → logprob: -3.8026819229125977
    9. ' la' → logprob: -4.427681922912598
    10. 'l' → logprob: -4.427681922912598

Token 165: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.03151208534836769
    2. ' integers' → logprob: -4.656512260437012
    3. 'ent' → logprob: -4.906512260437012
    4. ' nombres' → logprob: -5.156512260437012
    5. ' espaces' → logprob: -5.281512260437012
    6. ' années' → logprob: -6.531512260437012
    7. ' lignes' → logprob: -7.531512260437012
    8. ' int' → logprob: -8.156512260437012
    9. ' valeurs' → logprob: -8.406512260437012
    10. ' entier' → logprob: -8.656512260437012

Token 166: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.012917251326143742
    2. 'ières' → logprob: -4.8879170417785645
    3. 'ier' → logprob: -5.8879170417785645
    4. '   ' → logprob: -6.3879170417785645
    5. 'r' → logprob: -7.8879170417785645
    6. 'i' → logprob: -8.262917518615723
    7. 'ers' → logprob: -10.387917518615723
    8. 'rees' → logprob: -10.512917518615723
    9. 'ieres' → logprob: -10.512917518615723
    10. 'ires' → logprob: -11.012917518615723

Token 167: ' a' (ID: 261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3652361333370209
    2. ' n' → logprob: -2.2402360439300537
    3. ' ,' → logprob: -2.9902360439300537
    4. ' (' → logprob: -3.4902360439300537
    5. '()' → logprob: -3.6152360439300537
    6. '(' → logprob: -3.7402360439300537
    7. 'n' → logprob: -4.490236282348633
    8. ' ' → logprob: -4.740236282348633
    9. ' ' → logprob: -4.865236282348633
    10. 'a' → logprob: -5.365236282348633

Token 168: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027415158692747355
    2. ' ,' → logprob: -7.00274133682251
    3. ' ' → logprob: -7.12774133682251
    4. ',b' → logprob: -7.62774133682251
    5. 'n' → logprob: -9.002741813659668
    6. ' et' → logprob: -9.002741813659668
    7. 'et' → logprob: -9.252741813659668
    8. ',n' → logprob: -9.752741813659668
    9. ' and' → logprob: -9.877741813659668
    10. ',a' → logprob: -11.502741813659668

Token 169: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.47482436895370483
    2. 'b' → logprob: -0.9748243689537048
    3. ' ' → logprob: -7.47482442855835
    4. 'n' → logprob: -9.599823951721191
    5. ' n' → logprob: -9.724823951721191
    6. ' ' → logprob: -11.099823951721191
    7. 'm' → logprob: -11.224823951721191
    8. ' m' → logprob: -11.974823951721191
    9. '  ' → logprob: -12.974823951721191
    10. ' z' → logprob: -13.099823951721191

Token 170: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015137357637286186
    2. ' ,' → logprob: -4.390137195587158
    3. ' sépar' → logprob: -6.515137195587158
    4. '.' → logprob: -8.390137672424316
    5. ' ' → logprob: -8.640137672424316
    6. ' separated' → logprob: -9.390137672424316
    7. ':' → logprob: -9.515137672424316
    8. ' ' → logprob: -9.765137672424316
    9. ' (' → logprob: -10.140137672424316
    10. ' a' → logprob: -10.140137672424316

Token 171: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.521827757358551
    2. ',' → logprob: -1.7718276977539062
    3. '):' → logprob: -2.1468276977539062
    4. ' )' → logprob: -2.5218276977539062
    5. ' ):' → logprob: -3.7718276977539062
    6. '),' → logprob: -5.896827697753906
    7. ').' → logprob: -6.021827697753906
    8. ' ' → logprob: -6.021827697753906
    9. ' ,' → logprob: -6.271827697753906
    10. ' ),' → logprob: -6.396827697753906

Token 172: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6781631112098694
    2. ' <' → logprob: -0.9281631112098694
    3. '<=' → logprob: -3.1781630516052246
    4. ',' → logprob: -3.5531630516052246
    5. '<' → logprob: -4.303163051605225
    6. ' ' → logprob: -5.053163051605225
    7. ')' → logprob: -5.553163051605225
    8. ' ≤' → logprob: -7.303163051605225
    9. ' ,' → logprob: -7.428163051605225
    10. '=' → logprob: -7.803163051605225

Token 173: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.24818339943885803
    2. ' a' → logprob: -1.8731833696365356
    3. ' ' → logprob: -2.748183488845825
    4. '=' → logprob: -7.373183250427246
    5. '  ' → logprob: -7.748183250427246
    6. 'b' → logprob: -7.873183250427246
    7. ' b' → logprob: -8.248183250427246
    8. '   ' → logprob: -9.248183250427246
    9. '<|end|>' → logprob: -9.623183250427246
    10. ',' → logprob: -9.748183250427246

Token 174: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.31380170583724976
    2. '<' → logprob: -1.9388017654418945
    3. ' <=' → logprob: -3.0638017654418945
    4. ' ' → logprob: -3.3138017654418945
    5. '<=' → logprob: -3.8138017654418945
    6. ',' → logprob: -4.6888017654418945
    7. ' and' → logprob: -5.5638017654418945
    8. '=' → logprob: -5.8138017654418945
    9. ' ,' → logprob: -6.6888017654418945
    10. 'and' → logprob: -7.0638017654418945

Token 175: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04625212773680687
    2. ' b' → logprob: -3.6712520122528076
    3. '100' → logprob: -4.671252250671387
    4. '10' → logprob: -5.171252250671387
    5. ' ' → logprob: -5.421252250671387
    6. '200' → logprob: -9.046252250671387
    7. '999' → logprob: -10.296252250671387
    8. '20' → logprob: -10.421252250671387
    9. '1' → logprob: -10.921252250671387
    10. 'a' → logprob: -11.171252250671387

Token 176: ' <' (ID: 464)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1763065606355667
    2. '):
' → logprob: -2.8013064861297607
    3. '):' → logprob: -3.0513064861297607
    4. '),' → logprob: -3.6763064861297607
    5. ').' → logprob: -4.67630672454834
    6. ' )' → logprob: -4.80130672454834
    7. '   ' → logprob: -6.05130672454834
    8. ')
' → logprob: -6.30130672454834
    9. ' ),' → logprob: -6.67630672454834
    10. ' ):
' → logprob: -6.67630672454834

Token 177: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12309330701828003
    2. '100' → logprob: -2.248093366622925
    3. '10' → logprob: -4.748093128204346
    4. '=' → logprob: -6.623093128204346
    5. '1' → logprob: -8.998093605041504
    6. 'int' → logprob: -11.498093605041504
    7. ' =' → logprob: -11.498093605041504
    8. ')' → logprob: -11.498093605041504
    9. '  ' → logprob: -11.998093605041504
    10. '2' → logprob: -12.373093605041504

Token 178: '300' (ID: 4095)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0849137157201767
    2. '400' → logprob: -3.084913730621338
    3. '10' → logprob: -4.334913730621338
    4. ' ' → logprob: -4.709913730621338
    5. '214' → logprob: -5.084913730621338
    6. '210' → logprob: -6.334913730621338
    7. '300' → logprob: -7.084913730621338
    8. '500' → logprob: -7.209913730621338
    9. '1' → logprob: -7.209913730621338
    10. '410' → logprob: -7.709913730621338

Token 179: '0' (ID: 15)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.31321316957473755
    2. '00' → logprob: -1.9382131099700928
    3. '):
' → logprob: -2.5632131099700928
    4. ')' → logprob: -3.5632131099700928
    5. '0' → logprob: -4.688213348388672
    6. '):' → logprob: -4.938213348388672
    7. ')
' → logprob: -6.813213348388672
    8. '),' → logprob: -7.563213348388672
    9. '   ' → logprob: -8.188213348388672
    10. '):

' → logprob: -8.313213348388672

Token 180: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2861211895942688
    2. '):
' → logprob: -2.536121129989624
    3. '):' → logprob: -2.661121129989624
    4. '),' → logprob: -2.786121129989624
    5. ').' → logprob: -3.536121129989624
    6. '   ' → logprob: -5.661121368408203
    7. ')
' → logprob: -5.661121368408203
    8. ').
' → logprob: -7.161121368408203
    9. ',' → logprob: -7.286121368408203
    10. '),
' → logprob: -8.411121368408203

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017260339111089706
    2. '
' → logprob: -4.392260551452637
    3. '    
' → logprob: -6.017260551452637
    4. '<|end|>' → logprob: -6.767260551452637
    5. ' 
' → logprob: -8.017260551452637
    6. '    ' → logprob: -8.017260551452637
    7. '  
' → logprob: -8.267260551452637
    8. ' ' → logprob: -10.142260551452637
    9. '<|end|>' → logprob: -10.142260551452637
    10. '```' → logprob: -10.392260551452637

Token 182: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09438703954219818
    2. '
' → logprob: -2.9693870544433594
    3. ' 
' → logprob: -3.9693870544433594
    4. '    
' → logprob: -4.219387054443359
    5. '  
' → logprob: -6.844387054443359
    6. ' while' → logprob: -6.969387054443359
    7. '    ' → logprob: -6.969387054443359
    8. ' ' → logprob: -7.719387054443359
    9. '   
' → logprob: -8.09438705444336
    10. 'n' → logprob: -8.34438705444336

Token 183: ' doit' (ID: 21822)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.12575583159923553
    2. ' a' → logprob: -3.625755786895752
    3. 'while' → logprob: -3.625755786895752
    4. ' continue' → logprob: -4.125755786895752
    5. ':' → logprob: -5.250755786895752
    6. ' ' → logprob: -5.375755786895752
    7. '   ' → logprob: -5.375755786895752
    8. ' ' → logprob: -5.875755786895752
    9. ' import' → logprob: -5.875755786895752
    10. ' :' → logprob: -6.000755786895752

Token 184: ' afficher' (ID: 146524)
  Prédit: ' compter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compter' → logprob: -0.03272200748324394
    2. ' calcul' → logprob: -4.032721996307373
    3. ' ' → logprob: -5.782721996307373
    4. ' count' → logprob: -6.157721996307373
    5. ' déterminer' → logprob: -6.157721996307373
    6. 'count' → logprob: -6.407721996307373
    7. ' lire' → logprob: -6.782721996307373
    8. ' continuer' → logprob: -7.282721996307373
    9. ' afficher' → logprob: -7.282721996307373
    10. ' ' → logprob: -8.157722473144531

Token 185: ' toutes' (ID: 17502)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.11061301827430725
    2. ' ' → logprob: -3.3606131076812744
    3. ' l' → logprob: -3.7356131076812744
    4. ' nombre' → logprob: -4.360612869262695
    5. ' la' → logprob: -4.735612869262695
    6. 'le' → logprob: -4.860612869262695
    7. 'l' → logprob: -5.110612869262695
    8. ' the' → logprob: -5.610612869262695
    9. ' ' → logprob: -5.985612869262695
    10. 'nombre' → logprob: -6.610612869262695

Token 186: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.03175416588783264
    2. 'les' → logprob: -3.5317542552948
    3. ' ' → logprob: -6.656754016876221
    4. '   ' → logprob: -8.781754493713379
    5. '(' → logprob: -9.156754493713379
    6. ' l' → logprob: -9.656754493713379
    7. '    ' → logprob: -9.781754493713379
    8. '_' → logprob: -10.031754493713379
    9. '  ' → logprob: -10.031754493713379
    10. '<|end|>' → logprob: -10.031754493713379

Token 187: ' années' (ID: 25714)
  Prédit: ' années'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' années' → logprob: -0.1921911984682083
    2. 'ann' → logprob: -1.817191243171692
    3. 'année' → logprob: -4.567191123962402
    4. 'anne' → logprob: -6.567191123962402
    5. ''ann' → logprob: -9.442191123962402
    6. ' ann' → logprob: -9.442191123962402
    7. ' année' → logprob: -9.692191123962402
    8. '   ' → logprob: -10.192191123962402
    9. 'dates' → logprob: -10.442191123962402
    10. 'an' → logprob: -10.442191123962402

Token 188: ' b' (ID: 287)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.7967936992645264
    2. ' b' → logprob: -1.6717936992645264
    3. 'b' → logprob: -1.9217936992645264
    4. ' comprises' → logprob: -2.9217936992645264
    5. ' compris' → logprob: -3.2967936992645264
    6. '   ' → logprob: -3.5467936992645264
    7. ' between' → logprob: -3.6717936992645264
    8. '<|end|>' → logprob: -4.1717939376831055
    9. 'entre' → logprob: -4.6717939376831055
    10. ' ' → logprob: -4.6717939376831055

Token 189: 'isse' (ID: 6969)
  Prédit: 'isse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isse' → logprob: -0.01068863458931446
    2. 'is' → logprob: -5.260688781738281
    3. 'etween' → logprob: -5.510688781738281
    4. 'isses' → logprob: -8.010688781738281
    5. 'e' → logprob: -8.885688781738281
    6. '   ' → logprob: -9.010688781738281
    7. 'iss' → logprob: -9.260688781738281
    8. 'et' → logprob: -9.385688781738281
    9. 'issé' → logprob: -9.510688781738281
    10. ' comprises' → logprob: -9.885688781738281

Token 190: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0016700613778084517
    2. 'ext' → logprob: -7.876669883728027
    3. 'x' → logprob: -8.126669883728027
    4. 's' → logprob: -8.376669883728027
    5. 'ct' → logprob: -8.876669883728027
    6. '   ' → logprob: -9.251669883728027
    7. 'lect' → logprob: -9.876669883728027
    8. '%' → logprob: -10.001669883728027
    9. '       ' → logprob: -10.251669883728027
    10. '\' → logprob: -10.501669883728027

Token 191: 'iles' (ID: 2892)
  Prédit: 'iles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iles' → logprob: -0.0012315383646637201
    2. 'tiles' → logprob: -7.251231670379639
    3. 'ile' → logprob: -7.876231670379639
    4. '```' → logprob: -11.00123119354248
    5. '   ' → logprob: -11.37623119354248
    6. '

' → logprob: -11.37623119354248
    7. 'itles' → logprob: -11.50123119354248
    8. '|' → logprob: -11.75123119354248
    9. 'illes' → logprob: -11.75123119354248
    10. 'it' → logprob: -11.75123119354248

Token 192: ' entre' (ID: 3853)
  Prédit: ' comprises'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comprises' → logprob: -0.5368474721908569
    2. ' entre' → logprob: -1.036847472190857
    3. ' compris' → logprob: -3.6618475914001465
    4. 'entre' → logprob: -4.6618475914001465
    5. ' de' → logprob: -4.9118475914001465
    6. '   ' → logprob: -5.0368475914001465
    7. ' comprise' → logprob: -5.7868475914001465
    8. ' between' → logprob: -6.0368475914001465
    9. ' dans' → logprob: -6.0368475914001465
    10. 'com' → logprob: -6.4118475914001465

Token 193: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.252168208360672
    2. 'a' → logprob: -1.5021681785583496
    3. ' ' → logprob: -9.127168655395508
    4. ' ' → logprob: -9.377168655395508
    5. '<|end|>' → logprob: -11.127168655395508
    6. '	a' → logprob: -11.502168655395508
    7. '   ' → logprob: -12.002168655395508
    8. '_a' → logprob: -12.502168655395508
    9. ' les' → logprob: -13.377168655395508
    10. '(a' → logprob: -13.627168655395508

Token 194: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.39960864186286926
    2. ' ' → logprob: -1.2746086120605469
    3. 'et' → logprob: -3.399608612060547
    4. ' and' → logprob: -4.149608612060547
    5. ' a' → logprob: -8.149608612060547
    6. 'and' → logprob: -8.774608612060547
    7. '   ' → logprob: -9.774608612060547
    8. ' ' → logprob: -9.899608612060547
    9. ',' → logprob: -10.149608612060547
    10. '  ' → logprob: -10.649608612060547

Token 195: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.033679354935884476
    2. 'b' → logprob: -3.408679246902466
    3. ' ' → logprob: -10.908679008483887
    4. ' ' → logprob: -11.158679008483887
    5. '    ' → logprob: -15.283679008483887
    6. '_b' → logprob: -15.658679008483887
    7. '   ' → logprob: -16.158679962158203
    8. '	b' → logprob: -16.283679962158203
    9. ' ' → logprob: -16.533679962158203
    10. 's' → logprob: -16.908679962158203

Token 196: ' inclus' (ID: 11891)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043223440647125244
    2. ' ,' → logprob: -3.6682233810424805
    3. ' inclus' → logprob: -4.5432233810424805
    4. ' ' → logprob: -5.2932233810424805
    5. ' inclusive' → logprob: -7.7932233810424805
    6. ' (' → logprob: -8.04322338104248
    7. 'inclusive' → logprob: -9.16822338104248
    8. ' y' → logprob: -9.79322338104248
    9. ' compris' → logprob: -10.04322338104248
    10. '   ' → logprob: -10.29322338104248

Token 197: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4342901110649109
    2. '   ' → logprob: -1.0592901706695557
    3. '.' → logprob: -6.184289932250977
    4. ':' → logprob: -6.184289932250977
    5. ' ,' → logprob: -6.809289932250977
    6. ',
' → logprob: -9.684289932250977
    7. ' :' → logprob: -10.059289932250977
    8. ' ' → logprob: -10.059289932250977
    9. '    ' → logprob: -10.184289932250977
    10. 'es' → logprob: -10.434289932250977

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04165826365351677
    2. '
' → logprob: -3.2916581630706787
    3. '    
' → logprob: -5.791658401489258
    4. ' 
' → logprob: -8.416658401489258
    5. '  
' → logprob: -8.916658401489258
    6. ' for' → logprob: -9.666658401489258
    7. '   
' → logprob: -10.541658401489258
    8. 'for' → logprob: -10.541658401489258
    9. ' ' → logprob: -10.916658401489258
    10. '    ' → logprob: -11.166658401489258

Token 199: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6530226469039917
    2. '
' → logprob: -0.7780226469039917
    3. '    
' → logprob: -4.028022766113281
    4. ' 
' → logprob: -6.778022766113281
    5. 'for' → logprob: -8.278022766113281
    6. '\n' → logprob: -8.528022766113281
    7. '   
' → logprob: -9.028022766113281
    8. ' for' → logprob: -9.028022766113281
    9. '    ' → logprob: -9.153022766113281
    10. '  
' → logprob: -9.153022766113281

Token 200: ' aucune' (ID: 51173)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.34610655903816223
    2. ' a' → logprob: -1.7211065292358398
    3. ' ' → logprob: -2.59610652923584
    4. ' no' → logprob: -4.22110652923584
    5. ' aucun' → logprob: -4.72110652923584
    6. ' aucune' → logprob: -5.47110652923584
    7. 'a' → logprob: -5.59610652923584
    8. 'not' → logprob: -5.72110652923584
    9. ' ' → logprob: -6.59610652923584
    10. ' b' → logprob: -7.34610652923584

Token 201: ' année' (ID: 32998)
  Prédit: 'année'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'année' → logprob: -0.5580511093139648
    2. ' année' → logprob: -0.9330511093139648
    3. '_' → logprob: -4.433051109313965
    4. ' ' → logprob: -5.558051109313965
    5. ' années' → logprob: -5.558051109313965
    6. ' b' → logprob: -5.683051109313965
    7. ''année' → logprob: -6.058051109313965
    8. ' year' → logprob: -6.308051109313965
    9. '_year' → logprob: -6.433051109313965
    10. ' ann' → logprob: -6.808051109313965

Token 202: ' b' (ID: 287)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.36171823740005493
    2. ' b' → logprob: -1.8617181777954102
    3. 'b' → logprob: -2.11171817779541
    4. 'n' → logprob: -3.86171817779541
    5. '   ' → logprob: -5.48671817779541
    6. '<|end|>' → logprob: -7.86171817779541
    7. '_b' → logprob: -8.36171817779541
    8. 'année' → logprob: -8.48671817779541
    9. ' ' → logprob: -8.73671817779541
    10. ' entre' → logprob: -9.11171817779541

Token 203: 'isse' (ID: 6969)
  Prédit: 'isse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isse' → logprob: -0.014089575968682766
    2. 'is' → logprob: -4.764089584350586
    3. 'iss' → logprob: -5.264089584350586
    4. 'isset' → logprob: -9.639089584350586
    5. 'ise' → logprob: -10.139089584350586
    6. 'isst' → logprob: -10.139089584350586
    7. 'isser' → logprob: -10.639089584350586
    8. 'issé' → logprob: -11.139089584350586
    9. 'issez' → logprob: -11.139089584350586
    10. 'issent' → logprob: -11.264089584350586

Token 204: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0032101573888212442
    2. 'ct' → logprob: -5.878210067749023
    3. 'x' → logprob: -8.753210067749023
    4. 'ext' → logprob: -9.378210067749023
    5. 'lt' → logprob: -10.128210067749023
    6. 'lect' → logprob: -10.753210067749023
    7. 'cht' → logprob: -11.378210067749023
    8. '   ' → logprob: -11.378210067749023
    9. 't' → logprob: -11.628210067749023
    10. 'le' → logprob: -12.253210067749023

Token 205: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -0.008566821925342083
    2. 'ite' → logprob: -5.508566856384277
    3. 'tile' → logprob: -5.883566856384277
    4. 'ible' → logprob: -7.758566856384277
    5. 'ent' → logprob: -8.008566856384277
    6. 'le' → logprob: -8.258566856384277
    7. 't' → logprob: -8.383566856384277
    8. 'ente' → logprob: -9.008566856384277
    9. 'iles' → logprob: -9.508566856384277
    10. 'itle' → logprob: -9.633566856384277

Token 206: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06370288133621216
    2. 'n' → logprob: -2.8137028217315674
    3. '   ' → logprob: -6.9387030601501465
    4. ' entre' → logprob: -8.063702583312988
    5. ' ne' → logprob: -9.438702583312988
    6. ' is' → logprob: -10.063702583312988
    7. ' isn't' → logprob: -10.313702583312988
    8. ' between' → logprob: -10.438702583312988
    9. ' ' → logprob: -10.438702583312988
    10. 'entre' → logprob: -10.813702583312988

Token 207: ''ex' (ID: 23472)
  Prédit: ''est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.038823388516902924
    2. ''' → logprob: -4.03882360458374
    3. ' n' → logprob: -5.28882360458374
    4. 'n' → logprob: -5.66382360458374
    5. 'e' → logprob: -5.78882360458374
    6. ''y' → logprob: -6.41382360458374
    7. ''ex' → logprob: -6.53882360458374
    8. ''a' → logprob: -6.78882360458374
    9. 'est' → logprob: -6.78882360458374
    10. '’est' → logprob: -7.16382360458374

Token 208: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.005579860415309668
    2. 'ist' → logprob: -5.380579948425293
    3. 'ists' → logprob: -8.005579948425293
    4. 'ite' → logprob: -8.005579948425293
    5. 'e' → logprob: -8.880579948425293
    6. 'i' → logprob: -9.755579948425293
    7. 'é' → logprob: -10.130579948425293
    8. 'is' → logprob: -11.505579948425293
    9. 'it' → logprob: -11.755579948425293
    10. 'istes' → logprob: -11.880579948425293

Token 209: ' dans' (ID: 2671)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.6231051683425903
    2. ',' → logprob: -1.2481051683425903
    3. ' dans' → logprob: -2.248105049133301
    4. 'entre' → logprob: -3.873105049133301
    5. 'dans' → logprob: -3.873105049133301
    6. ' between' → logprob: -4.998105049133301
    7. '   ' → logprob: -5.123105049133301
    8. ':' → logprob: -5.623105049133301
    9. 'ent' → logprob: -6.123105049133301
    10. ' ' → logprob: -6.373105049133301

Token 210: ' cet' (ID: 19505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.26400721073150635
    2. ' cette' → logprob: -2.389007091522217
    3. ' ce' → logprob: -3.014007091522217
    4. 'la' → logprob: -3.139007091522217
    5. ' range' → logprob: -3.889007091522217
    6. ' cet' → logprob: -4.639007091522217
    7. 'range' → logprob: -4.764007091522217
    8. ' this' → logprob: -6.389007091522217
    9. ' that' → logprob: -6.764007091522217
    10. 'l' → logprob: -6.764007091522217

Token 211: ' interval' (ID: 17116)
  Prédit: ' interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.3509989380836487
    2. 'interval' → logprob: -1.225998878479004
    3. ' intervalo' → logprob: -7.225998878479004
    4. 'e' → logprob: -7.350998878479004
    5. ' interv' → logprob: -7.350998878479004
    6. 'es' → logprob: -8.975998878479004
    7. ' range' → logprob: -9.225998878479004
    8. '_interval' → logprob: -9.225998878479004
    9. 'range' → logprob: -9.350998878479004
    10. ' espace' → logprob: -9.600998878479004

Token 212: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0005704291397705674
    2. 're' → logprob: -8.625570297241211
    3. 'u' → logprob: -8.875570297241211
    4. '   ' → logprob: -9.250570297241211
    5. 'le' → logprob: -10.750570297241211
    6. 'ère' → logprob: -11.125570297241211
    7. 'é' → logprob: -11.250570297241211
    8. ' e' → logprob: -11.750570297241211
    9. 'eve' → logprob: -11.750570297241211
    10. 'val' → logprob: -11.875570297241211

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028095098678022623
    2. ':' → logprob: -6.002809524536133
    3. '   ' → logprob: -8.502809524536133
    4. ' ,' → logprob: -9.252809524536133
    5. ',
' → logprob: -10.877809524536133
    6. ':
' → logprob: -11.877809524536133
    7. ' :' → logprob: -12.377809524536133
    8. 'def' → logprob: -13.752809524536133
    9. ',n' → logprob: -14.002809524536133
    10. '(' → logprob: -15.002809524536133

Token 214: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037822503596544266
    2. ' print' → logprob: -3.4128224849700928
    3. '    ' → logprob: -6.287822723388672
    4. '       ' → logprob: -6.787822723388672
    5. 'print' → logprob: -7.037822723388672
    6. '   ' → logprob: -8.662822723388672
    7. '    
' → logprob: -10.537822723388672
    8. '   ' → logprob: -10.662822723388672
    9. ' ' → logprob: -10.787822723388672
    10. '	print' → logprob: -11.162822723388672

Token 215: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016241513192653656
    2. ' print' → logprob: -4.516241550445557
    3. '    ' → logprob: -6.266241550445557
    4. 'print' → logprob: -7.016241550445557
    5. ' n' → logprob: -7.266241550445557
    6. 'n' → logprob: -8.141241073608398
    7. '  ' → logprob: -8.266241073608398
    8. '   ' → logprob: -8.391241073608398
    9. ' continue' → logprob: -8.516241073608398
    10. '	print' → logprob: -9.141241073608398

Token 216: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06621216237545013
    2. ' "' → logprob: -3.3162121772766113
    3. '   ' → logprob: -3.9412121772766113
    4. '("' → logprob: -6.066212177276611
    5. '"No' → logprob: -6.191212177276611
    6. ' ' → logprob: -6.816212177276611
    7. ''' → logprob: -7.441212177276611
    8. ' Aucun' → logprob: -7.816212177276611
    9. ' None' → logprob: -8.191211700439453
    10. '    
' → logprob: -8.191211700439453

Token 217: 'NA' (ID: 9555)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.41336745023727417
    2. 'None' → logprob: -1.288367509841919
    3. 'auc' → logprob: -3.413367509841919
    4. '   ' → logprob: -5.28836727142334
    5. 'NONE' → logprob: -5.28836727142334
    6. '"' → logprob: -6.03836727142334
    7. ' Aucun' → logprob: -6.16336727142334
    8. 'a' → logprob: -6.41336727142334
    9. 'none' → logprob: -6.66336727142334
    10. '  ' → logprob: -6.66336727142334

Token 218: ''.
' (ID: 49980)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002137532690539956
    2. '')' → logprob: -6.752137660980225
    3. '"' → logprob: -7.627137660980225
    4. ''.' → logprob: -8.127137184143066
    5. '\n' → logprob: -9.377137184143066
    6. ''''' → logprob: -10.502137184143066
    7. '"""' → logprob: -11.127137184143066
    8. '')
' → logprob: -11.502137184143066
    9. '').' → logprob: -11.877137184143066
    10. ''
' → logprob: -11.877137184143066

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03042219765484333
    2. '
' → logprob: -3.6554222106933594
    3. '    
' → logprob: -5.530422210693359
    4. 'import' → logprob: -9.78042221069336
    5. ' 
' → logprob: -10.03042221069336
    6. 'n' → logprob: -11.40542221069336
    7. '   
' → logprob: -11.78042221069336
    8. 'a' → logprob: -12.15542221069336
    9. '  
' → logprob: -12.40542221069336
    10. 'while' → logprob: -12.65542221069336

Token 220: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14204175770282745
    2. '
' → logprob: -2.1420416831970215
    3. 'while' → logprob: -5.1420416831970215
    4. ' while' → logprob: -5.2670416831970215
    5. '    
' → logprob: -6.3920416831970215
    6. ' 
' → logprob: -7.6420416831970215
    7. 'n' → logprob: -7.7670416831970215
    8. 'import' → logprob: -7.8920416831970215
    9. '```' → logprob: -8.26704216003418
    10. '\n' → logprob: -8.39204216003418

Token 221: ''entrée' (ID: 115820)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9969611167907715
    2. ' while' → logprob: -1.2469611167907715
    3. '   ' → logprob: -1.4969611167907715
    4. 'ine' → logprob: -2.8719611167907715
    5. 'ines' → logprob: -3.3719611167907715
    6. 'a' → logprob: -4.4969611167907715
    7. 'e' → logprob: -5.2469611167907715
    8. 'import' → logprob: -5.9969611167907715
    9. 'n' → logprob: -6.4969611167907715
    10. ' a' → logprob: -6.4969611167907715

Token 222: ' se' (ID: 458)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.0507797002792358
    2. ' continues' → logprob: -1.8007797002792358
    3. 'contin' → logprob: -1.8007797002792358
    4. ':' → logprob: -2.4257798194885254
    5. ' =' → logprob: -2.6757798194885254
    6. 'continue' → logprob: -3.3007798194885254
    7. 'import' → logprob: -3.8007798194885254
    8. ' import' → logprob: -3.8007798194885254
    9. ' est' → logprob: -3.9257798194885254
    10. '_continue' → logprob: -4.925779819488525

Token 223: ' termine' (ID: 76900)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8728675842285156
    2. '=' → logprob: -0.9978675842285156
    3. 'while' → logprob: -3.4978675842285156
    4. ' while' → logprob: -3.6228675842285156
    5. ''' → logprob: -3.9978675842285156
    6. 'ont' → logprob: -4.122867584228516
    7. 'n' → logprob: -4.372867584228516
    8. ''agit' → logprob: -4.747867584228516
    9. ' composed' → logprob: -4.872867584228516
    10. ' ' → logprob: -4.997867584228516

Token 224: ' quand' (ID: 18026)
  Prédit: ' when'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' when' → logprob: -0.4379265010356903
    2. ' par' → logprob: -1.4379265308380127
    3. ' lorsqu' → logprob: -3.0629265308380127
    4. ' lorsque' → logprob: -3.1879265308380127
    5. ' avec' → logprob: -4.812926292419434
    6. ' quand' → logprob: -5.437926292419434
    7. ' lors' → logprob: -5.687926292419434
    8. ' with' → logprob: -5.937926292419434
    9. ' dès' → logprob: -6.187926292419434
    10. ' ' → logprob: -6.437926292419434

Token 225: ' a' (ID: 261)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.3231375813484192
    2. ' True' → logprob: -1.5731375217437744
    3. 'False' → logprob: -2.9481375217437744
    4. ' a' → logprob: -5.1981377601623535
    5. 'True' → logprob: -5.4481377601623535
    6. 'a' → logprob: -5.4481377601623535
    7. ' not' → logprob: -6.9481377601623535
    8. ' ' → logprob: -7.4481377601623535
    9. ' une' → logprob: -8.948137283325195
    10. ' la' → logprob: -9.698137283325195

Token 226: ' et' (ID: 859)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08154240250587463
    2. ' ' → logprob: -3.081542491912842
    3. '==' → logprob: -3.456542491912842
    4. ' a' → logprob: -8.331542015075684
    5. ' et' → logprob: -8.581542015075684
    6. ' is' → logprob: -9.331542015075684
    7. ' and' → logprob: -9.456542015075684
    8. 'et' → logprob: -9.706542015075684
    9. ' b' → logprob: -10.206542015075684
    10. '=' → logprob: -10.456542015075684

Token 227: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.251930296421051
    2. ' b' → logprob: -1.5019302368164062
    3. ' ' → logprob: -14.001930236816406
    4. '0' → logprob: -15.251930236816406
    5. '_b' → logprob: -16.876930236816406
    6. '	b' → logprob: -18.501930236816406
    7. '  ' → logprob: -18.876930236816406
    8. '   ' → logprob: -19.251930236816406
    9. '<|end|>' → logprob: -20.251930236816406
    10. ' None' → logprob: -20.626930236816406

Token 228: ' valent' (ID: 148217)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.4752614498138428
    2. '==' → logprob: -2.4752614498138428
    3. ' ==' → logprob: -2.6002614498138428
    4. 'ont' → logprob: -2.7252614498138428
    5. ' are' → logprob: -3.2252614498138428
    6. 's' → logprob: -3.2252614498138428
    7. ' deviennent' → logprob: -3.4752614498138428
    8. ' ' → logprob: -4.100261688232422
    9. '<|end|>' → logprob: -5.850261688232422
    10. ' =' → logprob: -5.850261688232422

Token 229: ' tous' (ID: 10688)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31326955556869507
    2. ' ' → logprob: -1.3132696151733398
    3. ' (' → logprob: -12.68826961517334
    4. '  ' → logprob: -12.93826961517334
    5. '<|end|>' → logprob: -14.06326961517334
    6. '(' → logprob: -14.68826961517334
    7. '۰' → logprob: -15.93826961517334
    8. ' -' → logprob: -16.250768661499023
    9. ' ' → logprob: -16.313268661499023
    10. '    ' → logprob: -16.750768661499023

Token 230: ' les' (ID: 1341)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.29620248079299927
    2. '0' → logprob: -2.0462024211883545
    3. ' deux' → logprob: -2.4212024211883545
    4. ' les' → logprob: -3.6712024211883545
    5. 'les' → logprob: -5.171202659606934
    6. ' ' → logprob: -5.546202659606934
    7. '   ' → logprob: -6.796202659606934
    8. '_de' → logprob: -7.796202659606934
    9. ' two' → logprob: -7.921202659606934
    10. ' zeros' → logprob: -8.546202659606934

Token 231: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.04225119203329086
    2. '0' → logprob: -3.4172511100769043
    3. ' deux' → logprob: -4.792251110076904
    4. '2' → logprob: -9.042251586914062
    5. 'z' → logprob: -10.292251586914062
    6. ' ' → logprob: -10.417251586914062
    7. '   ' → logprob: -11.042251586914062
    8. 'eux' → logprob: -11.417251586914062
    9. 'two' → logprob: -11.417251586914062
    10. '```' → logprob: -11.792251586914062

Token 232: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '-' → logprob: -18.75023078918457
    4. '  ' → logprob: -19.00023078918457
    5. 'zero' → logprob: -19.62523078918457
    6. ' zero' → logprob: -19.87523078918457
    7. '۰' → logprob: -20.87523078918457
    8. '=' → logprob: -21.00023078918457
    9. '０' → logprob: -21.12523078918457
    10. ' zéro' → logprob: -21.12523078918457

Token 233: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005537479883059859
    2. ' ' → logprob: -7.500553607940674
    3. '-' → logprob: -14.875554084777832
    4. ' -' → logprob: -16.250553131103516
    5. 'zero' → logprob: -16.375553131103516
    6. '  ' → logprob: -16.938053131103516
    7. 'z' → logprob: -17.188053131103516
    8. '０' → logprob: -17.625553131103516
    9. ' zéro' → logprob: -17.938053131103516
    10. '```' → logprob: -18.250553131103516

Token 234: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4285796880722046
    2. '.' → logprob: -1.8035796880722046
    3. '   ' → logprob: -1.8035796880722046
    4. ':
' → logprob: -4.553579807281494
    5. ',' → logprob: -5.553579807281494
    6. '
' → logprob: -6.428579807281494
    7. '.
' → logprob: -6.553579807281494
    8. '    
' → logprob: -7.428579807281494
    9. '  ' → logprob: -8.303579330444336
    10. ' :' → logprob: -8.803579330444336

Token 235: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2527567744255066
    2. '   ' → logprob: -1.5027568340301514
    3. '    
' → logprob: -7.127756595611572
    4. ' 
' → logprob: -11.75275707244873
    5. ' while' → logprob: -12.00275707244873
    6. 'while' → logprob: -13.12775707244873
    7. '
' → logprob: -13.12775707244873
    8. '```' → logprob: -13.12775707244873
    9. '   
' → logprob: -13.62775707244873
    10. '  
' → logprob: -13.87775707244873

Token 236: ' Une' (ID: 19758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062305886298418045
    2. ' while' → logprob: -3.1873059272766113
    3. '
' → logprob: -4.312305927276611
    4. 'while' → logprob: -5.187305927276611
    5. '    
' → logprob: -9.312305450439453
    6. '```' → logprob: -11.187305450439453
    7. 'import' → logprob: -11.562305450439453
    8. '	while' → logprob: -12.187305450439453
    9. ' 
' → logprob: -12.937305450439453
    10. '    ' → logprob: -13.062305450439453

Token 237: ' ligne' (ID: 19583)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.28315043449401855
    2. ' while' → logprob: -1.4081504344940186
    3. '   ' → logprob: -6.908150672912598
    4. ' boucle' → logprob: -8.158150672912598
    5. 'bou' → logprob: -9.033150672912598
    6. '  ' → logprob: -9.408150672912598
    7. ' ' → logprob: -9.533150672912598
    8. '
' → logprob: -10.033150672912598
    9. ' ' → logprob: -10.158150672912598
    10. ' fois' → logprob: -10.158150672912598

Token 238: ' vide' (ID: 21835)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05477055907249451
    2. '   ' → logprob: -4.054770469665527
    3. '=' → logprob: -4.179770469665527
    4. 'while' → logprob: -5.304770469665527
    5. ' while' → logprob: -5.304770469665527
    6. ' ' → logprob: -6.679770469665527
    7. ' with' → logprob: -6.929770469665527
    8. '=input' → logprob: -7.054770469665527
    9. ' de' → logprob: -7.179770469665527
    10. 'import' → logprob: -7.304770469665527

Token 239: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 240: ' imprim' (ID: 95016)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9424225687980652
    2. ' présente' → logprob: -1.31742262840271
    3. ' print' → logprob: -2.19242262840271
    4. ' affich' → logprob: -2.44242262840271
    5. ' ins' → logprob: -3.19242262840271
    6. ' laiss' → logprob: -3.31742262840271
    7. ' imprim' → logprob: -4.567422389984131
    8. 'import' → logprob: -4.817422389984131
    9. ' attend' → logprob: -5.442422389984131
    10. ' nécessaire' → logprob: -5.442422389984131

Token 241: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0024704246316105127
    2. 'é' → logprob: -6.75247049331665
    3. 'rée' → logprob: -7.00247049331665
    4. 'im' → logprob: -9.877470016479492
    5. 'lée' → logprob: -9.877470016479492
    6. 'int' → logprob: -10.627470016479492
    7. 'er' → logprob: -10.752470016479492
    8. 'éd' → logprob: -10.877470016479492
    9. 'urée' → logprob: -10.877470016479492
    10. 'ee' → logprob: -10.877470016479492

Token 242: ' entre' (ID: 3853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6507766246795654
    2. '()' → logprob: -1.5257766246795654
    3. ' après' → logprob: -2.5257766246795654
    4. ' entre' → logprob: -2.9007766246795654
    5. ' between' → logprob: -3.0257766246795654
    6. ' after' → logprob: -3.6507766246795654
    7. 'between' → logprob: -4.7757768630981445
    8. ' avant' → logprob: -5.0257768630981445
    9. 'after' → logprob: -5.1507768630981445
    10. '\n' → logprob: -5.1507768630981445

Token 243: ' chaque' (ID: 21194)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.3663627505302429
    2. 'cha' → logprob: -2.1163628101348877
    3. 'de' → logprob: -2.2413628101348877
    4. ' deux' → logprob: -3.3663628101348877
    5. ' les' → logprob: -3.8663628101348877
    6. ' chaque' → logprob: -4.116362571716309
    7. '2' → logprob: -6.616362571716309
    8. ' ' → logprob: -6.616362571716309
    9. '   ' → logprob: -7.241362571716309
    10. 'eux' → logprob: -7.491362571716309

Token 244: ' ensemble' (ID: 33081)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.6203824877738953
    2. 'jeu' → logprob: -0.9953824877738953
    3. ' ensemble' → logprob: -3.24538254737854
    4. ' jeu' → logprob: -3.74538254737854
    5. 'entrée' → logprob: -4.370382308959961
    6. 'ense' → logprob: -5.495382308959961
    7. 'je' → logprob: -6.120382308959961
    8. 'cas' → logprob: -6.245382308959961
    9. ' cas' → logprob: -6.745382308959961
    10. ' jeux' → logprob: -7.495382308959961

Token 245: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06275448948144913
    2. '    
' → logprob: -3.1877543926239014
    3. '
' → logprob: -4.4377546310424805
    4. 'def' → logprob: -5.6877546310424805
    5. '  
' → logprob: -7.4377546310424805
    6. '

' → logprob: -7.4377546310424805
    7. '  ' → logprob: -7.8127546310424805
    8. ',' → logprob: -7.8127546310424805
    9. '   
' → logprob: -8.31275463104248
    10. 's' → logprob: -8.43775463104248

Token 246: ' résultats' (ID: 48985)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.9822165369987488
    2. 'd' → logprob: -1.3572165966033936
    3. ' résultats' → logprob: -1.4822165966033936
    4. 'rés' → logprob: -3.1072165966033936
    5. ' sorties' → logprob: -3.2322165966033936
    6. ' sortie' → logprob: -4.3572163581848145
    7. 'entrée' → logprob: -4.4822163581848145
    8. 'tests' → logprob: -5.4822163581848145
    9. 's' → logprob: -5.6072163581848145
    10. 'sort' → logprob: -5.7322163581848145

Token 247: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00743849715217948
    2. '
' → logprob: -5.257438659667969
    3. '    
' → logprob: -6.132438659667969
    4. '  
' → logprob: -11.882438659667969
    5. '   
' → logprob: -12.007438659667969
    6. 'while' → logprob: -12.382438659667969
    7. ' while' → logprob: -12.507438659667969
    8. 'import' → logprob: -12.757438659667969
    9. ',' → logprob: -13.382438659667969
    10. ' 
' → logprob: -13.757438659667969

Token 248: 's' (ID: 82)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062310148030519485
    2. '   ' → logprob: -2.937310218811035
    3. ')
' → logprob: -5.312310218811035
    4. ').' → logprob: -6.937310218811035
    5. 'except' → logprob: -7.187310218811035
    6. ' except' → logprob: -8.812310218811035
    7. ' sauf' → logprob: -9.062310218811035
    8. '```' → logprob: -9.312310218811035
    9. ')\' → logprob: -9.562310218811035
    10. '")' → logprob: -9.937310218811035

Token 249: 'auf' (ID: 7483)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3238019049167633
    2. 'auf' → logprob: -2.1988019943237305
    3. 'ur' → logprob: -2.5738019943237305
    4. 'a' → logprob: -3.1988019943237305
    5. 'e' → logprob: -3.5738019943237305
    6. 'u' → logprob: -5.6988019943237305
    7. 'ans' → logprob: -5.9488019943237305
    8. '   ' → logprob: -6.0738019943237305
    9. 'aut' → logprob: -6.3238019943237305
    10. 'urtout' → logprob: -6.4488019943237305

Token 250: ' avant' (ID: 13339)
  Prédit: ' après'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' après' → logprob: -0.33825433254241943
    2. ' avant' → logprob: -1.3382543325424194
    3. ' after' → logprob: -4.588254451751709
    4. 'avant' → logprob: -5.088254451751709
    5. ' pas' → logprob: -5.338254451751709
    6. 'after' → logprob: -6.963254451751709
    7. ' à' → logprob: -7.338254451751709
    8. 'ap' → logprob: -7.588254451751709
    9. 'pas' → logprob: -8.08825397491455
    10. ' ' → logprob: -8.58825397491455

Token 251: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.41882601380348206
    2. ' la' → logprob: -1.6688259840011597
    3. 'le' → logprob: -1.9188259840011597
    4. ' le' → logprob: -5.043826103210449
    5. 'l' → logprob: -8.29382610321045
    6. 'the' → logprob: -8.79382610321045
    7. 'prem' → logprob: -10.41882610321045
    8. '   ' → logprob: -10.91882610321045
    9. ' ' → logprob: -11.54382610321045
    10. ' the' → logprob: -12.04382610321045

Token 252: ' premier' (ID: 15506)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.002708581043407321
    2. ' premier' → logprob: -6.002708435058594
    3. 'first' → logprob: -9.127708435058594
    4. 'dern' → logprob: -9.127708435058594
    5. '1' → logprob: -12.002708435058594
    6. ' first' → logprob: -12.502708435058594
    7. '```' → logprob: -13.627708435058594
    8. 'tout' → logprob: -13.627708435058594
    9. '   ' → logprob: -14.127708435058594
    10. 'pr' → logprob: -14.252708435058594

Token 253: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20071488618850708
    2. 'ensemble' → logprob: -1.8257148265838623
    3. ' ensemble' → logprob: -4.075715065002441
    4. ' )' → logprob: -6.200715065002441
    5. ').' → logprob: -7.200715065002441
    6. 'ense' → logprob: -8.575715065002441
    7. 'ent' → logprob: -9.200715065002441
    8. 'print' → logprob: -9.200715065002441
    9. '):' → logprob: -9.575715065002441
    10. 'def' → logprob: -9.575715065002441

Token 254: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002309408038854599
    2. '
' → logprob: -6.752309322357178
    3. '    
' → logprob: -7.002309322357178
    4. ' while' → logprob: -9.252309799194336
    5. 'while' → logprob: -9.377309799194336
    6. 'a' → logprob: -11.002309799194336
    7. 'import' → logprob: -11.252309799194336
    8. ' 
' → logprob: -12.502309799194336
    9. '    ' → logprob: -12.627309799194336
    10. '   
' → logprob: -13.252309799194336

Token 255: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00605737091973424
    2. ' while' → logprob: -5.381057262420654
    3. 'while' → logprob: -7.256057262420654
    4. '    
' → logprob: -7.756057262420654
    5. '
' → logprob: -8.256057739257812
    6. 'import' → logprob: -11.131057739257812
    7. '```' → logprob: -12.006057739257812
    8. '    ' → logprob: -12.006057739257812
    9. 'a' → logprob: -12.256057739257812
    10. ' a' → logprob: -12.881057739257812

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35375991463661194
    2. ' while' → logprob: -1.3537598848342896
    3. 'while' → logprob: -3.228760004043579
    4. 'import' → logprob: -10.353759765625
    5. '    
' → logprob: -10.853759765625
    6. '
' → logprob: -11.103759765625
    7. '```' → logprob: -12.478759765625
    8. ' import' → logprob: -12.603759765625
    9. '  ' → logprob: -13.728759765625
    10. 'a' → logprob: -13.728759765625

Token 257: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' (adapté à ' first') → logprob: -0.007289281114935875
    2. 'while' → logprob: -5.507289409637451
    3. 'import' → logprob: -5.757289409637451
    4. '   ' → logprob: -11.257288932800293
    5. 'is' → logprob: -11.257288932800293
    6. 'print' → logprob: -12.257288932800293
    7. 'prem' → logprob: -12.382288932800293
    8. 'from' → logprob: -13.132288932800293
    9. 'printed' → logprob: -13.132288932800293
    10. ' first' → logprob: -13.632288932800293

Token 258: '_output' (ID: 16732)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01331128366291523
    2. ' =' → logprob: -5.388311386108398
    3. '_input' → logprob: -5.388311386108398
    4. '=' → logprob: -6.513311386108398
    5. '_set' → logprob: -6.763311386108398
    6. '_line' → logprob: -7.263311386108398
    7. '_=' → logprob: -7.763311386108398
    8. '_run' → logprob: -9.388311386108398
    9. '_output' → logprob: -9.638311386108398
    10. '_print' → logprob: -10.638311386108398

Token 259: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05391259491443634
    2. '=' → logprob: -3.05391263961792
    3. '_output' → logprob: -5.80391263961792
    4. '_' → logprob: -6.17891263961792
    5. '_line' → logprob: -9.178912162780762
    6. '=True' → logprob: -9.803912162780762
    7. '_print' → logprob: -10.303912162780762
    8. '=False' → logprob: -11.553912162780762
    9. '_block' → logprob: -12.303912162780762
    10. ' ' → logprob: -12.678912162780762

Token 260: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.06196768581867218
    2. ' True' → logprob: -2.811967611312866
    3. 'False' → logprob: -17.811967849731445
    4. '(True' → logprob: -17.936967849731445
    5. '=True' → logprob: -18.436967849731445
    6. 'true' → logprob: -20.811967849731445
    7. '   ' → logprob: -21.311967849731445
    8. 'Tr' → logprob: -21.561967849731445
    9. 'TRUE' → logprob: -22.686967849731445
    10. ' ' → logprob: -22.686967849731445

Token 261: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5358052849769592
    2. '
' → logprob: -0.9108052849769592
    3. 'while' → logprob: -5.0358052253723145
    4. '    
' → logprob: -5.2858052253723145
    5. ' while' → logprob: -7.0358052253723145
    6. '	
' → logprob: -9.910805702209473
    7. '	while' → logprob: -10.285805702209473
    8. '  
' → logprob: -10.410805702209473
    9. ' 
' → logprob: -11.660805702209473
    10. '
' → logprob: -11.660805702209473

Token 262: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.28176191449165344
    2. '   ' → logprob: -1.531761884689331
    3. '
' → logprob: -3.656761884689331
    4. ' while' → logprob: -5.78176212310791
    5. '    
' → logprob: -7.78176212310791
    6. '	while' → logprob: -10.28176212310791
    7. '```' → logprob: -10.65676212310791
    8. '  
' → logprob: -12.03176212310791
    9. '   
' → logprob: -13.15676212310791
    10. 'import' → logprob: -13.53176212310791

Token 263: ' Pour' (ID: 13931)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.11101285368204117
    2. 'while' → logprob: -2.6110129356384277
    3. '   ' → logprob: -4.111012935638428
    4. ' True' → logprob: -5.486012935638428
    5. ' for' → logprob: -5.611012935638428
    6. ' input' → logprob: -6.861012935638428
    7. ' line' → logprob: -7.361012935638428
    8. ' next' → logprob: -7.486012935638428
    9. '
' → logprob: -7.611012935638428
    10. ' current' → logprob: -7.736012935638428

Token 264: ' gérer' (ID: 86786)
  Prédit: ' gérer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gérer' → logprob: -0.2999928891658783
    2. 'g' → logprob: -1.4249929189682007
    3. 's' → logprob: -5.54999303817749
    4. 'gestion' → logprob: -5.67499303817749
    5. 'ind' → logprob: -6.54999303817749
    6. 'su' → logprob: -6.54999303817749
    7. 'indi' → logprob: -6.79999303817749
    8. ' savoir' → logprob: -6.92499303817749
    9. 'ger' → logprob: -7.29999303817749
    10. ' éviter' → logprob: -7.42499303817749

Token 265: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.7893906235694885
    2. ' les' → logprob: -0.7893906235694885
    3. ' la' → logprob: -2.7893905639648438
    4. ' le' → logprob: -4.664390563964844
    5. 'l' → logprob: -4.789390563964844
    6. 'les' → logprob: -5.289390563964844
    7. ' ' → logprob: -6.164390563964844
    8. ' un' → logprob: -6.664390563964844
    9. '<|end|>' → logprob: -6.914390563964844
    10. ' ' → logprob: -7.039390563964844

Token 266: ''aff' (ID: 53397)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9397532939910889
    2. 'e' → logprob: -1.4397532939910889
    3. ''espace' → logprob: -2.064753293991089
    4. ''esp' → logprob: -2.189753293991089
    5. 'es' → logprob: -2.439753293991089
    6. ''aff' → logprob: -3.814753293991089
    7. 'esp' → logprob: -4.564753532409668
    8. ''' → logprob: -4.689753532409668
    9. ''inter' → logprob: -7.064753532409668
    10. ''aj' → logprob: -7.939753532409668

Token 267: 'ichage' (ID: 118475)
  Prédit: 'ichage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -5.621933451038785e-05
    2. 'iche' → logprob: -10.500056266784668
    3. 'ich' → logprob: -10.875056266784668
    4. 'ic' → logprob: -12.125056266784668
    5. 'icher' → logprob: -13.125056266784668
    6. '
' → logprob: -14.625056266784668
    7. '   ' → logprob: -15.000056266784668
    8. 'acement' → logprob: -15.125056266784668
    9. '

' → logprob: -15.250056266784668
    10. '"' → logprob: -15.750056266784668

Token 268: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9369595050811768
    2. ' des' → logprob: -1.0619595050811768
    3. ' while' → logprob: -2.4369595050811768
    4. '<|end|>' → logprob: -2.5619595050811768
    5. 'while' → logprob: -3.9369595050811768
    6. ' de' → logprob: -3.9369595050811768
    7. '  ' → logprob: -4.436959266662598
    8. ' du' → logprob: -4.436959266662598
    9. ' ' → logprob: -4.686959266662598
    10. '<|end|>' → logprob: -4.686959266662598

Token 269: ' lignes' (ID: 81687)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.10095006227493286
    2. 's' → logprob: -2.600950002670288
    3. '
' → logprob: -5.100950241088867
    4. '\' → logprob: -5.850950241088867
    5. 'l' → logprob: -6.475950241088867
    6. 'esp' → logprob: -6.600950241088867
    7. 'inter' → logprob: -7.100950241088867
    8. 'es' → logprob: -7.100950241088867
    9. '"\' → logprob: -7.100950241088867
    10. 'newline' → logprob: -7.100950241088867

Token 270: ' v' (ID: 323)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.07255560904741287
    2. 'vid' → logprob: -3.9475555419921875
    3. ' vide' → logprob: -4.5725555419921875
    4. 'de' → logprob: -5.0725555419921875
    5. 'v' → logprob: -5.1975555419921875
    6. ' v' → logprob: -5.1975555419921875
    7. ' ' → logprob: -5.8225555419921875
    8. 'inter' → logprob: -6.0725555419921875
    9. 'bl' → logprob: -6.0725555419921875
    10. 'def' → logprob: -6.5725555419921875

Token 271: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.09368334710597992
    2. 'ide' → logprob: -2.4686832427978516
    3. 'id' → logprob: -5.468683242797852
    4. 'i' → logprob: -8.968683242797852
    5. 'ier' → logprob: -9.218683242797852
    6. '
' → logprob: -9.593683242797852
    7. 'ideo' → logprob: -10.468683242797852
    8. 'idé' → logprob: -10.593683242797852
    9. 'ert' → logprob: -10.718683242797852
    10. 'ideos' → logprob: -11.218683242797852

Token 272: ' entre' (ID: 3853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04071767255663872
    2. '
' → logprob: -3.415717601776123
    3. 'while' → logprob: -5.415717601776123
    4. '    
' → logprob: -6.665717601776123
    5. ' while' → logprob: -6.665717601776123
    6. '	while' → logprob: -11.040718078613281
    7. '<|end|>' → logprob: -11.415718078613281
    8. '  
' → logprob: -11.790718078613281
    9. '	
' → logprob: -12.665718078613281
    10. '```' → logprob: -12.790718078613281

Token 273: ' groupes' (ID: 72206)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.6722315549850464
    2. ' les' → logprob: -0.7972315549850464
    3. 'ense' → logprob: -3.547231674194336
    4. ' ensembles' → logprob: -5.047231674194336
    5. 'ensemble' → logprob: -6.922231674194336
    6. 'outputs' → logprob: -7.297231674194336
    7. 'sets' → logprob: -7.422231674194336
    8. ' sets' → logprob: -8.797231674194336
    9. ' outputs' → logprob: -8.797231674194336
    10. '   ' → logprob: -8.922231674194336

Token 274: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018644418567419052
    2. '
' → logprob: -4.268644332885742
    3. 'while' → logprob: -5.768644332885742
    4. ' while' → logprob: -7.143644332885742
    5. '    
' → logprob: -7.518644332885742
    6. '	while' → logprob: -12.268644332885742
    7. 'import' → logprob: -13.018644332885742
    8. '  
' → logprob: -13.018644332885742
    9. '```' → logprob: -13.643644332885742
    10. ',' → logprob: -14.018644332885742

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05170394480228424
    2. 'while' → logprob: -3.301703929901123
    3. ' while' → logprob: -4.301703929901123
    4. 'import' → logprob: -11.051704406738281
    5. '    
' → logprob: -12.301704406738281
    6. '	while' → logprob: -13.301704406738281
    7. '
' → logprob: -13.551704406738281
    8. '```' → logprob: -15.051704406738281
    9. '   ' → logprob: -16.42670440673828
    10. ' ' → logprob: -16.67670440673828

Token 276: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0004648696631193161
    2. '   ' → logprob: -8.25046443939209
    3. ' while' → logprob: -8.50046443939209
    4. 'import' → logprob: -15.75046443939209
    5. '```' → logprob: -17.125465393066406
    6. '	while' → logprob: -19.250465393066406
    7. 'While' → logprob: -19.875465393066406
    8. '  ' → logprob: -21.500465393066406
    9. '
' → logprob: -22.375465393066406
    10. 'from' → logprob: -22.875465393066406

Token 277: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0019286326132714748
    2. 'True' → logprob: -6.251928806304932
    3. '(True' → logprob: -16.751928329467773
    4. '=True' → logprob: -18.626928329467773
    5. ' ' → logprob: -18.751928329467773
    6. ' ' → logprob: -19.126928329467773
    7. '   ' → logprob: -19.626928329467773
    8. ' Tru' → logprob: -19.876928329467773
    9. ' true' → logprob: -20.876928329467773
    10. '  ' → logprob: -21.501928329467773

Token 278: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00132976402528584
    2. ':
' → logprob: -6.8763298988342285
    3. '       ' → logprob: -8.50132942199707
    4. ' :' → logprob: -10.00132942199707
    5. '   ' → logprob: -10.37632942199707
    6. '():' → logprob: -11.87632942199707
    7. ',' → logprob: -12.25132942199707
    8. '):' → logprob: -12.87632942199707
    9. '=' → logprob: -14.25132942199707
    10. ' :
' → logprob: -14.37632942199707

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012911251746118069
    2. 'a' → logprob: -4.512911319732666
    3. '   ' → logprob: -6.637911319732666
    4. '        
' → logprob: -8.637910842895508
    5. ' a' → logprob: -8.762910842895508
    6. '    
' → logprob: -9.887910842895508
    7. '    ' → logprob: -10.012910842895508
    8. '      ' → logprob: -10.887910842895508
    9. ' line' → logprob: -11.012910842895508
    10. 'input' → logprob: -11.137910842895508

Token 280: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7255569100379944
    2. ' line' → logprob: -1.1005568504333496
    3. 'a' → logprob: -2.8505568504333496
    4. 'try' → logprob: -3.1005568504333496
    5. 'line' → logprob: -3.3505568504333496
    6. ' try' → logprob: -3.6005568504333496
    7. ' a' → logprob: -4.22555685043335
    8. 'input' → logprob: -6.60055685043335
    9. ' input' → logprob: -7.35055685043335
    10. '   ' → logprob: -7.60055685043335

Token 281: ' On' (ID: 2160)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.7477333545684814
    2. ' line' → logprob: -1.3727333545684814
    3. 'try' → logprob: -1.8727333545684814
    4. 'a' → logprob: -2.3727333545684814
    5. 'input' → logprob: -4.747733116149902
    6. ' try' → logprob: -4.872733116149902
    7. 'ligne' → logprob: -5.622733116149902
    8. ' a' → logprob: -6.122733116149902
    9. '   ' → logprob: -7.122733116149902
    10. 'l' → logprob: -7.122733116149902

Token 282: ' lit' (ID: 11980)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.7280986905097961
    2. '       ' → logprob: -1.3530986309051514
    3. ' line' → logprob: -2.4780986309051514
    4. ' input' → logprob: -2.8530986309051514
    5. 'input' → logprob: -3.4780986309051514
    6. 's' → logprob: -3.8530986309051514
    7. 'try' → logprob: -3.9780986309051514
    8. ' inputs' → logprob: -4.8530988693237305
    9. ' readline' → logprob: -5.1030988693237305
    10. '        
' → logprob: -5.7280988693237305

Token 283: ' une' (ID: 2463)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5501911044120789
    2. ' a' → logprob: -1.1751911640167236
    3. ' input' → logprob: -2.8001911640167236
    4. ' la' → logprob: -4.9251909255981445
    5. ' ligne' → logprob: -4.9251909255981445
    6. ' une' → logprob: -5.0501909255981445
    7. ' ' → logprob: -5.3001909255981445
    8. 'a' → logprob: -5.3001909255981445
    9. ' l' → logprob: -5.5501909255981445
    10. ' ' → logprob: -5.8001909255981445

Token 284: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.20487196743488312
    2. 'ligne' → logprob: -2.204871892929077
    3. ' ' → logprob: -2.829871892929077
    4. 'l' → logprob: -4.954872131347656
    5. ' line' → logprob: -5.704872131347656
    6. '   ' → logprob: -5.954872131347656
    7. ' input' → logprob: -7.079872131347656
    8. ' lign' → logprob: -7.579872131347656
    9. 'line' → logprob: -8.079872131347656
    10. ' a' → logprob: -8.079872131347656

Token 285: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020064815878868103
    2. ',' → logprob: -4.395064830780029
    3. ' =' → logprob: -5.895064830780029
    4. 'a' → logprob: -7.145064830780029
    5. ' line' → logprob: -7.645064830780029
    6. 'n' → logprob: -7.770064830780029
    7. 'input' → logprob: -8.145064353942871
    8. '        
' → logprob: -8.395064353942871
    9. '   ' → logprob: -8.520064353942871
    10. ' a' → logprob: -8.770064353942871

Token 286: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.10479061305522919
    2. 'entrée' → logprob: -2.479790687561035
    3. 'input' → logprob: -4.479790687561035
    4. 'e' → logprob: -6.229790687561035
    5. ' input' → logprob: -6.729790687561035
    6. ''' → logprob: -7.729790687561035
    7. '’entrée' → logprob: -8.354790687561035
    8. 'es' → logprob: -8.729790687561035
    9. 'entr' → logprob: -8.979790687561035
    10. ' entrée' → logprob: -9.479790687561035

Token 287: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021795393899083138
    2. ',' → logprob: -4.896795272827148
    3. ' =' → logprob: -5.146795272827148
    4. '        
' → logprob: -5.146795272827148
    5. ':' → logprob: -7.646795272827148
    6. ' line' → logprob: -8.146795272827148
    7. '      ' → logprob: -8.521795272827148
    8. '=' → logprob: -8.771795272827148
    9. 'input' → logprob: -9.021795272827148
    10. '       
' → logprob: -9.021795272827148

Token 288: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033584432676434517
    2. '        
' → logprob: -6.253358364105225
    3. ',' → logprob: -7.128358364105225
    4. ':' → logprob: -8.878358840942383
    5. '      ' → logprob: -9.503358840942383
    6. '   ' → logprob: -9.878358840942383
    7. ' =' → logprob: -10.003358840942383
    8. '        ' → logprob: -10.378358840942383
    9. 'input' → logprob: -10.503358840942383
    10. '           ' → logprob: -10.628358840942383

Token 289: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0884542465209961
    2. 'line' (adapté à ' line') → logprob: -2.713454246520996
    3. '       ' → logprob: -4.713454246520996
    4. 'try' → logprob: -6.213454246520996
    5. ' try' → logprob: -6.213454246520996
    6. ' input' → logprob: -6.463454246520996
    7. 'input' → logprob: -6.713454246520996
    8. 'a' → logprob: -6.963454246520996
    9. '   ' → logprob: -7.338454246520996
    10. ' a' → logprob: -7.588454246520996

Token 290: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020542705431580544
    2. '=' → logprob: -3.895542621612549
    3. ' =
' → logprob: -14.270543098449707
    4. ' ' → logprob: -16.52054214477539
    5. ' ' → logprob: -17.39554214477539
    6. ' =
' → logprob: -17.52054214477539
    7. '=input' → logprob: -17.64554214477539
    8. '=line' → logprob: -17.77054214477539
    9. '   ' → logprob: -17.89554214477539
    10. 's' → logprob: -18.02054214477539

Token 291: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01814994215965271
    2. ' input' → logprob: -4.0181498527526855
    3. '	input' → logprob: -19.018150329589844
    4. '=input' → logprob: -19.268150329589844
    5. '(input' → logprob: -19.393150329589844
    6. ' ' → logprob: -20.268150329589844
    7. '<input' → logprob: -21.018150329589844
    8. '```' → logprob: -21.268150329589844
    9. '   ' → logprob: -21.643150329589844
    10. '_input' → logprob: -22.268150329589844

Token 292: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07892625778913498
    2. '().' → logprob: -2.5789263248443604
    3. '()
' → logprob: -10.703926086425781
    4. '(' → logprob: -11.578926086425781
    5. '())' → logprob: -13.453926086425781
    6. '()

' → logprob: -13.578926086425781
    7. ' ()' → logprob: -13.828926086425781
    8. '()>' → logprob: -15.703926086425781
    9. '("")' → logprob: -15.828926086425781
    10. '.strip' → logprob: -15.953926086425781

Token 293: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -5.512236498361744e-07
    2. 'split' → logprob: -15.000000953674316
    3. 'rstrip' → logprob: -16.25
    4. ' strip' → logprob: -19.75
    5. '.strip' → logprob: -21.375
    6. '_strip' → logprob: -22.75
    7. '(strip' → logprob: -23.5
    8. '-strip' → logprob: -23.625
    9. 'str' → logprob: -24.25
    10. 'Strip' → logprob: -26.375

Token 294: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06204129010438919
    2. '()
' → logprob: -2.8120412826538086
    3. ')' → logprob: -9.812041282653809
    4. '       ' → logprob: -11.312041282653809
    5. '()

' → logprob: -12.812041282653809
    6. '()
' → logprob: -13.812041282653809
    7. ')
' → logprob: -14.187041282653809
    8. '   ' → logprob: -14.812041282653809
    9. ' ()' → logprob: -14.812041282653809
    10. '())' → logprob: -14.937041282653809

Token 295: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21158219873905182
    2. '
' → logprob: -1.8365821838378906
    3. '<|end|>' → logprob: -4.211582183837891
    4. '        
' → logprob: -4.461582183837891
    5. '  
' → logprob: -6.211582183837891
    6. ' 
' → logprob: -6.586582183837891
    7. '\n' → logprob: -7.961582183837891
    8. 'if' → logprob: -8.21158218383789
    9. ' if' → logprob: -8.71158218383789
    10. '<|end|>' → logprob: -8.83658218383789

Token 296: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014645613729953766
    2. ' if' → logprob: -4.264645576477051
    3. '       ' → logprob: -7.639645576477051
    4. '   ' → logprob: -15.13964557647705
    5. '        
' → logprob: -15.38964557647705
    6. ' ' → logprob: -15.76464557647705
    7. '	if' → logprob: -16.014646530151367
    8. ';if' → logprob: -16.514646530151367
    9. 'If' → logprob: -16.639646530151367
    10. 'tokens' → logprob: -17.514646530151367

Token 297: ' not' (ID: 625)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4906245172023773
    2. 'line' → logprob: -1.4906245470046997
    3. ' not' → logprob: -1.8656245470046997
    4. 'not' → logprob: -4.86562442779541
    5. ' ' → logprob: -11.24062442779541
    6. '	line' → logprob: -13.24062442779541
    7. '(line' → logprob: -14.11562442779541
    8. 'len' → logprob: -15.11562442779541
    9. ' ' → logprob: -15.49062442779541
    10. ' len' → logprob: -15.49062442779541

Token 298: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0004306692280806601
    2. ' line' → logprob: -7.750430583953857
    3. '	line' → logprob: -18.750431060791016
    4. '(line' → logprob: -19.000431060791016
    5. 'lin' → logprob: -20.000431060791016
    6. 'ligne' → logprob: -20.250431060791016
    7. 'len' → logprob: -20.250431060791016
    8. ' ' → logprob: -20.750431060791016
    9. 'li' → logprob: -20.750431060791016
    10. '
' → logprob: -21.500431060791016

Token 299: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.258177787065506
    2. ':
' → logprob: -1.5081777572631836
    3. ' or' → logprob: -5.133177757263184
    4. '<|end|>' → logprob: -8.383177757263184
    5. ':

' → logprob: -11.008177757263184
    6. ':return' → logprob: -11.133177757263184
    7. '=' → logprob: -11.633177757263184
    8. '):
' → logprob: -11.633177757263184
    9. ')' → logprob: -11.883177757263184
    10. '<|end|>' → logprob: -12.008177757263184

Token 300: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001761809689924121
    2. '       ' → logprob: -6.6267619132995605
    3. ' continue' → logprob: -8.626761436462402
    4. ' break' → logprob: -9.376761436462402
    5. 'continue' → logprob: -9.501761436462402
    6. '   ' → logprob: -10.876761436462402
    7. 'break' → logprob: -10.876761436462402
    8. '		' → logprob: -11.501761436462402
    9. ',' → logprob: -11.501761436462402
    10. '               ' → logprob: -11.876761436462402

Token 301: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7359784841537476
    2. ' continue' → logprob: -1.2359784841537476
    3. '       ' → logprob: -2.235978603363037
    4. '           ' → logprob: -2.735978603363037
    5. 'break' → logprob: -3.360978603363037
    6. ' break' → logprob: -3.735978603363037
    7. '	continue' → logprob: -9.985978126525879
    8. '               ' → logprob: -10.485978126525879
    9. '   ' → logprob: -10.985978126525879
    10. '	break' → logprob: -11.110978126525879

Token 302: ' Si' (ID: 7832)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3641120493412018
    2. ' continue' → logprob: -1.2391120195388794
    3. '       ' → logprob: -4.36411190032959
    4. 'break' → logprob: -6.23911190032959
    5. ' break' → logprob: -7.23911190032959
    6. '	continue' → logprob: -9.73911190032959
    7. '           ' → logprob: -10.36411190032959
    8. 'contin' → logprob: -10.61411190032959
    9. 'continu' → logprob: -11.48911190032959
    10. '   ' → logprob: -11.61411190032959

Token 303: ' la' (ID: 557)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7416672706604004
    2. 'line' → logprob: -0.9916672706604004
    3. 'continue' → logprob: -2.6166672706604004
    4. ' continue' → logprob: -2.8666672706604004
    5. ' not' → logprob: -4.6166672706604
    6. ' True' → logprob: -5.4916672706604
    7. 'True' → logprob: -6.4916672706604
    8. 'not' → logprob: -6.4916672706604
    9. 'break' → logprob: -6.7416672706604
    10. '       ' → logprob: -7.2416672706604

Token 304: ' ligne' (ID: 19583)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.23044461011886597
    2. 'line' → logprob: -1.6054446697235107
    3. ' ligne' → logprob: -6.480444431304932
    4. ' not' → logprob: -7.230444431304932
    5. 'len' → logprob: -7.480444431304932
    6. 'ligne' → logprob: -7.480444431304932
    7. 'continue' → logprob: -7.855444431304932
    8. ' continue' → logprob: -8.73044490814209
    9. 'not' → logprob: -8.98044490814209
    10. 'input' → logprob: -9.10544490814209

Token 305: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4846550226211548
    2. 'continue' → logprob: -1.7346550226211548
    3. ' ==' → logprob: -1.9846550226211548
    4. ' continue' → logprob: -3.1096549034118652
    5. ' continues' → logprob: -4.859654903411865
    6. '=' → logprob: -4.984654903411865
    7. 'contin' → logprob: -5.109654903411865
    8. ' =' → logprob: -6.109654903411865
    9. ' is' → logprob: -6.484654903411865
    10. '===' → logprob: -8.359655380249023

Token 306: ' vide' (ID: 21835)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.06207076087594032
    2. '""' → logprob: -3.312070846557617
    3. 'continue' → logprob: -4.562070846557617
    4. 'empty' → logprob: -5.437070846557617
    5. ' empty' → logprob: -6.687070846557617
    6. '"' → logprob: -6.687070846557617
    7. ''' → logprob: -6.812070846557617
    8. 'None' → logprob: -6.937070846557617
    9. ' ' → logprob: -7.187070846557617
    10. ' continue' → logprob: -7.437070846557617

Token 307: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6390025019645691
    2. ',' → logprob: -0.7640025019645691
    3. 'continue' → logprob: -5.514002323150635
    4. ' continue' → logprob: -6.264002323150635
    5. '       ' → logprob: -8.764002799987793
    6. '               ' → logprob: -9.139002799987793
    7. ' ,' → logprob: -9.639002799987793
    8. ',
' → logprob: -10.889002799987793
    9. ' continues' → logprob: -10.889002799987793
    10. '_continue' → logprob: -11.389002799987793

Token 308: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33635038137435913
    2. ' continue' → logprob: -1.961350440979004
    3. 'continue' → logprob: -1.961350440979004
    4. '       ' → logprob: -5.961350440979004
    5. ' break' → logprob: -7.086350440979004
    6. 'break' → logprob: -7.211350440979004
    7. '	continue' → logprob: -9.711350440979004
    8. 'contin' → logprob: -11.086350440979004
    9. '   ' → logprob: -11.211350440979004
    10. '               ' → logprob: -11.461350440979004

Token 309: ' la' (ID: 557)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.030102189630270004
    2. ' continue' → logprob: -3.905102252960205
    3. 'contin' → logprob: -4.780102252960205
    4. '       ' → logprob: -7.030102252960205
    5. 'break' → logprob: -9.030101776123047
    6. '	continue' → logprob: -10.655101776123047
    7. '_continue' → logprob: -10.780101776123047
    8. 'continu' → logprob: -10.905101776123047
    9. ' continuer' → logprob: -11.155101776123047
    10. '           ' → logprob: -11.405101776123047

Token 310: ' saute' (ID: 146395)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.011606632731854916
    2. ' continue' → logprob: -4.511606693267822
    3. 'contin' → logprob: -7.636606693267822
    4. 'break' → logprob: -9.636606216430664
    5. '	continue' → logprob: -12.761606216430664
    6. 'continu' → logprob: -13.011606216430664
    7. ' continues' → logprob: -13.136606216430664
    8. '       ' → logprob: -13.386606216430664
    9. '   ' → logprob: -14.261606216430664
    10. ' break' → logprob: -14.636606216430664

Token 311: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006319562904536724
    2. '       ' → logprob: -5.131319522857666
    3. 'continue' → logprob: -8.506319999694824
    4. ' continue' → logprob: -9.256319999694824
    5. '               ' → logprob: -10.631319999694824
    6. ',' → logprob: -10.881319999694824
    7. '
' → logprob: -11.506319999694824
    8. '   ' → logprob: -11.881319999694824
    9. '.' → logprob: -12.131319999694824
    10. '<|end|>' → logprob: -12.256319999694824

Token 312: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006869417615234852
    2. '       ' → logprob: -5.006869316101074
    3. 'continue' → logprob: -9.506869316101074
    4. ' continue' → logprob: -10.256869316101074
    5. '		' → logprob: -11.506869316101074
    6. '               ' → logprob: -11.756869316101074
    7. ',' → logprob: -11.881869316101074
    8. '   ' → logprob: -12.131869316101074
    9. '<|end|>' → logprob: -12.506869316101074
    10. '
' → logprob: -12.631869316101074

Token 313: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.34227436780929565
    2. ' continue' → logprob: -1.7172744274139404
    3. '           ' → logprob: -2.8422744274139404
    4. '       ' → logprob: -2.9672744274139404
    5. '	continue' → logprob: -7.717274188995361
    6. '   ' → logprob: -9.59227466583252
    7. '_continue' → logprob: -11.34227466583252
    8. '	       ' → logprob: -11.71727466583252
    9. 'contin' → logprob: -11.84227466583252
    10. '		' → logprob: -12.59227466583252

Token 314: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006565337534993887
    2. '
' → logprob: -5.756565570831299
    3. '        
' → logprob: -6.631565570831299
    4. '<|end|>' → logprob: -6.881565570831299
    5. '    
' → logprob: -8.00656509399414
    6. '  
' → logprob: -8.00656509399414
    7. '   ' → logprob: -8.38156509399414
    8. ' 
' → logprob: -10.63156509399414
    9. 'tokens' → logprob: -10.88156509399414
    10. '       
' → logprob: -11.13156509399414

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004508800804615021
    2. 'a' → logprob: -6.129508972167969
    3. '        
' → logprob: -6.629508972167969
    4. ' a' → logprob: -7.879508972167969
    5. '   ' → logprob: -8.254508972167969
    6. '    
' → logprob: -9.504508972167969
    7. '
' → logprob: -9.629508972167969
    8. '  
' → logprob: -10.379508972167969
    9. '       
' → logprob: -10.504508972167969
    10. ',' → logprob: -10.504508972167969

Token 316: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0005361131625249982
    2. ' a' → logprob: -8.00053596496582
    3. '       ' → logprob: -8.75053596496582
    4. '   ' → logprob: -10.62553596496582
    5. 'parts' → logprob: -11.50053596496582
    6. 'try' → logprob: -12.00053596496582
    7. 'tokens' → logprob: -14.62553596496582
    8. ' parts' → logprob: -14.62553596496582
    9. '        
' → logprob: -14.75053596496582
    10. '_a' → logprob: -15.75053596496582

Token 317: '_str' (ID: 6182)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004294215235859156
    2. ',b' → logprob: -5.504294395446777
    3. ' ,' → logprob: -8.504294395446777
    4. 'b' → logprob: -11.504294395446777
    5. ',a' → logprob: -14.004294395446777
    6. ',s' → logprob: -14.129294395446777
    7. ',
' → logprob: -15.004294395446777
    8. ',\
' → logprob: -15.629294395446777
    9. '‌,' → logprob: -16.12929344177246
    10. ',v' → logprob: -16.25429344177246

Token 318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010891393758356571
    2. ',b' → logprob: -7.126089096069336
    3. ',a' → logprob: -8.251089096069336
    4. ' ,' → logprob: -10.751089096069336
    5. 'a' → logprob: -14.751089096069336
    6. ',
' → logprob: -15.126089096069336
    7. ',n' → logprob: -15.376089096069336
    8. 'b' → logprob: -15.626089096069336
    9. ',s' → logprob: -15.876089096069336
    10. ',\
' → logprob: -16.126089096069336

Token 319: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5760881304740906
    2. 'b' → logprob: -0.8260881304740906
    3. ' ' → logprob: -8.826087951660156
    4. ' 
' → logprob: -14.326087951660156
    5. 'space' → logprob: -14.326087951660156
    6. '	b' → logprob: -15.826087951660156
    7. ' ' → logprob: -15.951087951660156
    8. '  ' → logprob: -16.201087951660156
    9. '    ' → logprob: -16.576087951660156
    10. ' space' → logprob: -16.701087951660156

Token 320: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.2019428163766861
    2. ' =' → logprob: -2.4519429206848145
    3. '_' → logprob: -2.7019429206848145
    4. '=' → logprob: -3.7019429206848145
    5. ' ' → logprob: -5.4519429206848145
    6. ',' → logprob: -8.076942443847656
    7. ' _' → logprob: -8.826942443847656
    8. 'str' → logprob: -9.576942443847656
    9. '_=' → logprob: -10.451942443847656
    10. '<|end|>' → logprob: -10.951942443847656

Token 321: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0380416102707386
    2. ' =' → logprob: -3.288041591644287
    3. '=line' → logprob: -15.913042068481445
    4. '=
' → logprob: -18.788042068481445
    5. '＝' → logprob: -19.163042068481445
    6. '=input' → logprob: -19.663042068481445
    7. ' ' → logprob: -20.038042068481445
    8. '=a' → logprob: -20.038042068481445
    9. '=}' → logprob: -20.288042068481445
    10. '=

' → logprob: -20.413042068481445

Token 322: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.3868734836578369
    2. ' line' → logprob: -1.136873483657837
    3. '	line' → logprob: -14.011873245239258
    4. '=line' → logprob: -14.136873245239258
    5. 'input' → logprob: -14.511873245239258
    6. ' ' → logprob: -15.386873245239258
    7. '[line' → logprob: -16.511873245239258
    8. ' input' → logprob: -16.761873245239258
    9. '(line' → logprob: -17.511873245239258
    10. '_line' → logprob: -17.636873245239258

Token 323: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967797577381134
    2. ' =' → logprob: -2.8119678497314453
    3. ' ' → logprob: -17.061967849731445
    4. '=

' → logprob: -17.186967849731445
    5. '＝' → logprob: -17.811967849731445
    6. '=
' → logprob: -17.936967849731445
    7. '    ' → logprob: -18.186967849731445
    8. '=line' → logprob: -18.561967849731445
    9. '=input' → logprob: -18.936967849731445
    10. '	' → logprob: -19.311967849731445

Token 324: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.578184497309849e-05
    2. '(' → logprob: -10.250085830688477
    3. '('' → logprob: -10.250085830688477
    4. '()
' → logprob: -11.500085830688477
    5. ')' → logprob: -13.750085830688477
    6. ' ()' → logprob: -13.875085830688477
    7. '())' → logprob: -14.000085830688477
    8. '()]' → logprob: -14.875085830688477
    9. '()

' → logprob: -14.875085830688477
    10. '()='' → logprob: -15.375085830688477

Token 325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4146461486816406
    2. 'a' → logprob: -1.2896461486816406
    3. ' a' → logprob: -4.039646148681641
    4. '        
' → logprob: -4.164646148681641
    5. '    
' → logprob: -4.664646148681641
    6. '   ' → logprob: -4.914646148681641
    7. ' 
' → logprob: -5.289646148681641
    8. '
' → logprob: -5.914646148681641
    9. '   
' → logprob: -6.414646148681641
    10. '<|end|>' → logprob: -6.914646148681641

Token 326: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.018165044486522675
    2. ' a' → logprob: -4.018165111541748
    3. '   ' → logprob: -12.01816463470459
    4. ' 
' → logprob: -12.51816463470459
    5. '       ' → logprob: -13.14316463470459
    6. '        
' → logprob: -13.89316463470459
    7. '	a' → logprob: -14.01816463470459
    8. '    
' → logprob: -14.26816463470459
    9. '_a' → logprob: -14.89316463470459
    10. '    ' → logprob: -15.14316463470459

Token 327: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04639962688088417
    2. '=' → logprob: -3.6713995933532715
    3. ',' → logprob: -3.9213995933532715
    4. '=int' → logprob: -10.29640007019043
    5. ' ,' → logprob: -10.42140007019043
    6. ' ' → logprob: -11.17140007019043
    7. ' =
' → logprob: -12.79640007019043
    8. '<|end|>' → logprob: -13.29640007019043
    9. ',a' → logprob: -14.04640007019043
    10. '    ' → logprob: -14.42140007019043

Token 328: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.009827514179050922
    2. 'b' → logprob: -4.634827613830566
    3. ' ' → logprob: -10.384827613830566
    4. 'int' → logprob: -10.634827613830566
    5. ' int' → logprob: -11.259827613830566
    6. '<|end|>' → logprob: -13.134827613830566
    7. ' ' → logprob: -14.009827613830566
    8. ' 
' → logprob: -15.259827613830566
    9. '=int' → logprob: -15.634827613830566
    10. '	b' → logprob: -15.759827613830566

Token 329: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759454965591431
    2. ' =' → logprob: -0.8259454965591431
    3. '=int' → logprob: -12.200945854187012
    4. ')' → logprob: -15.325945854187012
    5. ',' → logprob: -15.325945854187012
    6. ' ' → logprob: -15.575945854187012
    7. '＝' → logprob: -16.575944900512695
    8. '    ' → logprob: -16.700944900512695
    9. '   ' → logprob: -16.825944900512695
    10. '=
' → logprob: -16.950944900512695

Token 330: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029750484973192215
    2. ' int' → logprob: -3.5297505855560303
    3. 'map' → logprob: -17.27975082397461
    4. ' map' → logprob: -18.02975082397461
    5. '[int' → logprob: -19.02975082397461
    6. '   ' → logprob: -19.27975082397461
    7. '(int' → logprob: -20.02975082397461
    8. ' ' → logprob: -20.27975082397461
    9. '	int' → logprob: -20.65475082397461
    10. '=int' → logprob: -20.90475082397461

Token 331: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -7.226628895296017e-06
    2. 'a' → logprob: -12.375007629394531
    3. '(' → logprob: -12.750007629394531
    4. '(b' → logprob: -18.62500762939453
    5. ' (' → logprob: -19.00000762939453
    6. '(
' → logprob: -19.12500762939453
    7. '(ai' → logprob: -20.12500762939453
    8. '(A' → logprob: -20.62500762939453
    9. '()' → logprob: -21.62500762939453
    10. '   ' → logprob: -22.00000762939453

Token 332: '_str' (ID: 6182)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3374748229980469
    2. '(a' → logprob: -1.3374748229980469
    3. ')' → logprob: -4.587474822998047
    4. '),' → logprob: -5.087474822998047
    5. '_str' → logprob: -5.462474822998047
    6. '_a' → logprob: -5.962474822998047
    7. ' a' → logprob: -8.462474822998047
    8. 'str' → logprob: -8.837474822998047
    9. ')a' → logprob: -8.962474822998047
    10. '   ' → logprob: -9.087474822998047

Token 333: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00030817187507636845
    2. ')' → logprob: -8.8753080368042
    3. ',' → logprob: -8.8753080368042
    4. ' ),' → logprob: -10.5003080368042
    5. '   ' → logprob: -15.2503080368042
    6. ' ' → logprob: -15.5003080368042
    7. '),(' → logprob: -15.5003080368042
    8. ' ,' → logprob: -16.000308990478516
    9. '```' → logprob: -17.000308990478516
    10. ',),' → logprob: -17.125308990478516

Token 334: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6304093599319458
    2. ' int' → logprob: -0.8804093599319458
    3. 'b' → logprob: -3.6304092407226562
    4. ' b' → logprob: -3.6304092407226562
    5. '<int' → logprob: -14.630409240722656
    6. ' ' → logprob: -14.755409240722656
    7. '	int' → logprob: -15.130409240722656
    8. '=int' → logprob: -15.255409240722656
    9. '[int' → logprob: -15.380409240722656
    10. '(int' → logprob: -15.380409240722656

Token 335: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.051342763006687164
    2. '(b' → logprob: -3.426342725753784
    3. ' b' → logprob: -4.051342964172363
    4. '(' → logprob: -8.926342964172363
    5. ' ' → logprob: -12.551342964172363
    6. ' (' → logprob: -13.176342964172363
    7. ')' → logprob: -13.426342964172363
    8. ')b' → logprob: -13.551342964172363
    9. '	b' → logprob: -14.301342964172363
    10. '_b' → logprob: -15.051342964172363

Token 336: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -8.709308167453855e-05
    2. ')' → logprob: -10.875086784362793
    3. 'str' → logprob: -10.875086784362793
    4. '_b' → logprob: -11.000086784362793
    5. 'b' → logprob: -11.125086784362793
    6. 'Str' → logprob: -11.875086784362793
    7. ')b' → logprob: -12.125086784362793
    8. '(b' → logprob: -12.875086784362793
    9. '_STR' → logprob: -14.750086784362793
    10. '   ' → logprob: -14.750086784362793

Token 337: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2014516294002533
    2. ')
' → logprob: -1.7014516592025757
    3. ')
' → logprob: -10.576451301574707
    4. '       ' → logprob: -12.076451301574707
    5. ')

' → logprob: -12.076451301574707
    6. '   ' → logprob: -13.826451301574707
    7. ' )' → logprob: -16.201452255249023
    8. ')`
' → logprob: -16.576452255249023
    9. ' )
' → logprob: -16.576452255249023
    10. ')
/' → logprob: -17.076452255249023

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001905200770124793
    2. '
' → logprob: -6.6269049644470215
    3. '   ' → logprob: -7.8769049644470215
    4. '        
' → logprob: -9.12690544128418
    5. 'if' → logprob: -9.50190544128418
    6. ' if' → logprob: -11.62690544128418
    7. '    
' → logprob: -12.37690544128418
    8. '  
' → logprob: -13.75190544128418
    9. '           ' → logprob: -15.00190544128418
    10. '      ' → logprob: -15.12690544128418

Token 339: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00020973898062948138
    2. '       ' → logprob: -8.50020980834961
    3. ' if' → logprob: -12.00020980834961
    4. '   ' → logprob: -18.25020980834961
    5. 'If' → logprob: -18.37520980834961
    6. '
' → logprob: -18.87520980834961
    7. '	if' → logprob: -20.50020980834961
    8. '#' (adapté à ' #') → logprob: -21.87520980834961
    9. '        
' → logprob: -21.87520980834961
    10. '```' → logprob: -22.25020980834961

Token 340: ' Condition' (ID: 30255)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0005891331238672137
    2. '       ' → logprob: -7.750589370727539
    3. ' if' → logprob: -8.750589370727539
    4. '#' → logprob: -16.25058937072754
    5. '
' → logprob: -16.87558937072754
    6. 'If' → logprob: -17.25058937072754
    7. '   ' → logprob: -17.87558937072754
    8. '        
' → logprob: -19.25058937072754
    9. '	if' → logprob: -19.62558937072754
    10. 's' → logprob: -20.25058937072754

Token 341: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030998067930340767
    2. ' if' → logprob: -3.5309979915618896
    3. 'if' → logprob: -7.280998229980469
    4. 's' → logprob: -8.030998229980469
    5. '   ' → logprob: -9.405998229980469
    6. '           ' → logprob: -10.155998229980469
    7. '      ' → logprob: -11.030998229980469
    8. ' for' → logprob: -11.030998229980469
    9. ' that' → logprob: -11.530998229980469
    10. '        
' → logprob: -11.655998229980469

Token 342: ' termina' (ID: 86892)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03284821659326553
    2. ' a' → logprob: -3.5328481197357178
    3. '(a' → logprob: -6.407848358154297
    4. 'break' → logprob: -7.407848358154297
    5. 'if' → logprob: -7.782848358154297
    6. ' (' → logprob: -9.032848358154297
    7. ' break' → logprob: -9.407848358154297
    8. ' fin' → logprob: -9.782848358154297
    9. 'fin' → logprob: -9.907848358154297
    10. ' if' → logprob: -10.032848358154297

Token 343: 'ison' (ID: 5072)
  Prédit: 'tion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tion' → logprob: -0.0029738990124315023
    2. 'ion' → logprob: -7.002974033355713
    3. '   ' → logprob: -7.377974033355713
    4. 'ition' → logprob: -7.502974033355713
    5. 'ison' → logprob: -7.627974033355713
    6. 'if' → logprob: -8.502973556518555
    7. 'ction' → logprob: -9.377973556518555
    8. '       ' → logprob: -10.252973556518555
    9. 't' → logprob: -10.252973556518555
    10. 'ision' → logprob: -11.627973556518555

Token 344: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001290454383706674
    2. 'if' → logprob: -9.500128746032715
    3. ' if' → logprob: -9.875128746032715
    4. '<|end|>' → logprob: -14.000128746032715
    5. '        
' → logprob: -14.625128746032715
    6. '   ' → logprob: -15.125128746032715
    7. '      ' → logprob: -15.250128746032715
    8. '```' → logprob: -15.375128746032715
    9. '	' → logprob: -16.12512969970703
    10. '        ' → logprob: -16.25012969970703

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.0100624169572257e-05
    2. 'if' → logprob: -11.125020027160645
    3. ' if' → logprob: -12.750020027160645
    4. '   ' → logprob: -14.125020027160645
    5. '
' → logprob: -14.375020027160645
    6. '<|end|>' → logprob: -14.750020027160645
    7. '        
' → logprob: -15.125020027160645
    8. '      ' → logprob: -15.750020027160645
    9. '```' → logprob: -16.25002098083496
    10. '	' → logprob: -16.50002098083496

Token 346: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.018184710294008255
    2. ' if' → logprob: -4.018184661865234
    3. '       ' → logprob: -10.268184661865234
    4. 'If' → logprob: -19.768184661865234
    5. '   ' → logprob: -19.893184661865234
    6. '```' → logprob: -20.518184661865234
    7. 'break' → logprob: -20.643184661865234
    8. '	if' → logprob: -21.393184661865234
    9. '
' → logprob: -21.518184661865234
    10. ' ' → logprob: -22.018184661865234

Token 347: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6931487321853638
    2. ' a' → logprob: -0.6931487321853638
    3. '	a' → logprob: -14.318148612976074
    4. '(a' → logprob: -14.818148612976074
    5. ' ' → logprob: -15.568148612976074
    6. '_a' → logprob: -15.693148612976074
    7. ' (' → logprob: -16.19314956665039
    8. ' ' → logprob: -16.81814956665039
    9. '>a' → logprob: -17.69314956665039
    10. '(' → logprob: -18.06814956665039

Token 348: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31326884031295776
    2. '==' → logprob: -1.3132688999176025
    3. ' ' → logprob: -12.313268661499023
    4. '0' → logprob: -14.063268661499023
    5. '=' → logprob: -14.063268661499023
    6. '==
' → logprob: -14.813268661499023
    7. ' =' → logprob: -15.313268661499023
    8. '```' → logprob: -15.563268661499023
    9. '()==' → logprob: -16.688268661499023
    10. ')==' → logprob: -16.813268661499023

Token 349: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. 'b' → logprob: -18.625179290771484
    4. '<|end|>' → logprob: -21.000179290771484
    5. '۰' → logprob: -21.125179290771484
    6. ' b' → logprob: -21.750179290771484
    7. '   ' → logprob: -21.750179290771484
    8. 'and' → logprob: -21.875179290771484
    9. '  ' → logprob: -21.875179290771484
    10. '```' → logprob: -22.000179290771484

Token 350: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. 'b' → logprob: -16.000001907348633
    4. '۰' → logprob: -21.875001907348633
    5. ' b' → logprob: -22.625001907348633
    6. 'and' → logprob: -22.875001907348633
    7. '
' → logprob: -23.000001907348633
    8. '```' → logprob: -23.500001907348633
    9. '０' → logprob: -24.000001907348633
    10. '  ' → logprob: -24.250001907348633

Token 351: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07889088988304138
    2. 'and' → logprob: -2.578890800476074
    3. '0' → logprob: -14.328890800476074
    4. ' ' → logprob: -14.828890800476074
    5. '   ' → logprob: -16.57889175415039
    6. ' и' → logprob: -17.70389175415039
    7. '    ' → logprob: -17.95389175415039
    8. '	and' → logprob: -17.95389175415039
    9. '&&' → logprob: -18.32889175415039
    10. ' và' → logprob: -18.45389175415039

Token 352: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2519293427467346
    2. 'b' → logprob: -1.5019292831420898
    3. ' ' → logprob: -16.001930236816406
    4. '   ' → logprob: -16.251930236816406
    5. '	b' → logprob: -16.751930236816406
    6. '    ' → logprob: -17.376930236816406
    7. '0' → logprob: -18.501930236816406
    8. ' ' → logprob: -18.876930236816406
    9. '  ' → logprob: -19.001930236816406
    10. '       ' → logprob: -19.376930236816406

Token 353: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12694071233272552
    2. '==' → logprob: -2.1269407272338867
    3. ' ' → logprob: -12.001940727233887
    4. '<|end|>' → logprob: -12.376940727233887
    5. ')==' → logprob: -14.001940727233887
    6. ']==' → logprob: -14.751940727233887
    7. '<|end|>' → logprob: -15.501940727233887
    8. '0' → logprob: -15.751940727233887
    9. '=' → logprob: -15.876940727233887
    10. ')' → logprob: -16.12693977355957

Token 354: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. '   ' → logprob: -17.625804901123047
    4. '  ' → logprob: -18.625804901123047
    5. '<|end|>' → logprob: -19.750804901123047
    6. '۰' → logprob: -20.500804901123047
    7. ' ' → logprob: -20.625804901123047
    8. '       ' → logprob: -21.250804901123047
    9. '    ' → logprob: -22.000804901123047
    10. '00' → logprob: -22.063304901123047

Token 355: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -19.875051498413086
    4. '  ' → logprob: -20.125051498413086
    5. '۰' → logprob: -21.500051498413086
    6. ' ' → logprob: -23.250051498413086
    7. '    ' → logprob: -23.375051498413086
    8. '<|end|>' → logprob: -23.375051498413086
    9. '```' → logprob: -23.750051498413086
    10. '00' → logprob: -23.875051498413086

Token 356: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10469463467597961
    2. '           ' → logprob: -2.8546946048736572
    3. ':
' → logprob: -3.3546946048736572
    4. '       ' → logprob: -4.979694843292236
    5. '   ' → logprob: -11.604694366455078
    6. ' :' → logprob: -12.604694366455078
    7. '          ' → logprob: -12.854694366455078
    8. ':return' → logprob: -12.979694366455078
    9. '.' → logprob: -13.104694366455078
    10. ':
' → logprob: -13.229694366455078

Token 357: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.167648876318708e-05
    2. '       ' → logprob: -10.250041961669922
    3. '		' → logprob: -13.500041961669922
    4. ':
' → logprob: -13.625041961669922
    5. '          ' → logprob: -14.125041961669922
    6. ' break' → logprob: -14.250041961669922
    7. '               ' → logprob: -14.375041961669922
    8. '
' → logprob: -14.625041961669922
    9. 'break' → logprob: -14.750041961669922
    10. ':' → logprob: -15.000041961669922

Token 358: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16704893112182617
    2. 'break' (adapté à ' break') → logprob: -1.9170489311218262
    3. ' break' → logprob: -5.167048931121826
    4. '       ' → logprob: -6.917048931121826
    5. 'return' → logprob: -9.542049407958984
    6. '               ' → logprob: -10.917049407958984
    7. '	break' → logprob: -11.417049407958984
    8. '   ' → logprob: -12.417049407958984
    9. '		' → logprob: -13.167049407958984
    10. '_break' → logprob: -13.792049407958984

Token 359: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03777991607785225
    2. '       ' → logprob: -3.6627798080444336
    3. '<|end|>' → logprob: -4.912779808044434
    4. '        
' → logprob: -5.662779808044434
    5. '    
' → logprob: -8.287779808044434
    6. '  
' → logprob: -9.037779808044434
    7. '<|end|>' → logprob: -9.537779808044434
    8. '

' → logprob: -9.537779808044434
    9. '
' → logprob: -11.037779808044434
    10. '   ' → logprob: -11.412779808044434

Token 360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025214483961462975
    2. '
' → logprob: -3.775214433670044
    3. '        
' → logprob: -6.900214672088623
    4. '   ' → logprob: -7.650214672088623
    5. 'if' → logprob: -8.275214195251465
    6. '    
' → logprob: -8.900214195251465
    7. '  
' → logprob: -10.275214195251465
    8. ' if' → logprob: -11.150214195251465
    9. '```' → logprob: -11.150214195251465
    10. '<|end|>' → logprob: -11.650214195251465

Token 361: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22844450175762177
    2. '       ' → logprob: -1.9784444570541382
    3. 'le' → logprob: -2.8534445762634277
    4. 'years' → logprob: -5.103444576263428
    5. ' if' → logprob: -6.728444576263428
    6. '        
' → logprob: -7.728444576263428
    7. '   ' → logprob: -8.60344409942627
    8. 'output' → logprob: -9.22844409942627
    9. 'is' → logprob: -9.60344409942627
    10. '```' → logprob: -9.72844409942627

Token 362: ' Collect' (ID: 30483)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2561623454093933
    2. 'le' → logprob: -1.506162405014038
    3. 'years' → logprob: -6.131162166595459
    4. '       ' → logprob: -6.881162166595459
    5. '   ' → logprob: -8.131162643432617
    6. 'b' → logprob: -8.256162643432617
    7. ' if' → logprob: -8.381162643432617
    8. 'is' → logprob: -10.256162643432617
    9. '#' → logprob: -10.381162643432617
    10. 'l' → logprob: -10.381162643432617

Token 363: 'e' (ID: 68)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3096510171890259
    2. 'le' → logprob: -1.8096510171890259
    3. '   ' → logprob: -3.3096508979797363
    4. 'er' → logprob: -3.4346508979797363
    5. 'e' → logprob: -4.684650897979736
    6. 'years' → logprob: -4.809650897979736
    7. '_le' → logprob: -4.934650897979736
    8. ' years' → logprob: -5.434650897979736
    9. 'ion' → logprob: -6.434650897979736
    10. '_year' → logprob: -7.559650897979736

Token 364: ' des' (ID: 731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1839262694120407
    2. 'le' → logprob: -2.4339263439178467
    3. ' leap' → logprob: -3.0589263439178467
    4. ' des' → logprob: -3.6839263439178467
    5. ' de' → logprob: -6.433926105499268
    6. 'des' → logprob: -6.933926105499268
    7. '   ' → logprob: -7.183926105499268
    8. ' years' → logprob: -7.308926105499268
    9. 'b' → logprob: -7.308926105499268
    10. 'les' → logprob: -7.558926105499268

Token 365: ' années' (ID: 25714)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.032157234847545624
    2. ' leap' → logprob: -3.6571571826934814
    3. 'b' → logprob: -5.7821574211120605
    4. 'years' → logprob: -6.9071574211120605
    5. ' b' → logprob: -7.4071574211120605
    6. 'bis' → logprob: -7.7821574211120605
    7. 'ble' → logprob: -8.657156944274902
    8. ' années' → logprob: -8.782156944274902
    9. ' years' → logprob: -9.282156944274902
    10. 'ann' → logprob: -9.407156944274902

Token 366: ' b' (ID: 287)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.18247194588184357
    2. 'b' → logprob: -2.307471990585327
    3. '       ' → logprob: -3.057471990585327
    4. '   ' → logprob: -4.682471752166748
    5. ' leap' → logprob: -5.057471752166748
    6. 'bis' → logprob: -6.182471752166748
    7. ' b' → logprob: -6.932471752166748
    8. '_le' → logprob: -7.807471752166748
    9. '_b' → logprob: -7.807471752166748
    10. 'ble' → logprob: -7.932471752166748

Token 367: 'isse' (ID: 6969)
  Prédit: 'isse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isse' → logprob: -0.019104616716504097
    2. 'is' → logprob: -4.019104480743408
    3. 'iss' → logprob: -7.519104480743408
    4. 'ises' → logprob: -9.769104957580566
    5. 'isses' → logprob: -9.769104957580566
    6. '_' → logprob: -10.394104957580566
    7. 'isset' → logprob: -10.644104957580566
    8. 'ies' → logprob: -11.019104957580566
    9. 'ise' → logprob: -11.019104957580566
    10. '=' → logprob: -11.144104957580566

Token 368: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.001816790085285902
    2. 'ct' → logprob: -7.501816749572754
    3. '   ' → logprob: -8.001816749572754
    4. 'ext' → logprob: -8.001816749572754
    5. 'x' → logprob: -8.251816749572754
    6. '       ' → logprob: -9.251816749572754
    7. 't' → logprob: -9.876816749572754
    8. 'xties' → logprob: -10.876816749572754
    9. 'years' → logprob: -11.001816749572754
    10. '    ' → logprob: -11.001816749572754

Token 369: 'iles' (ID: 2892)
  Prédit: 'iles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iles' → logprob: -6.76628842484206e-05
    2. 'ile' → logprob: -9.625067710876465
    3. 'illes' → logprob: -14.000067710876465
    4. 'i' → logprob: -15.750067710876465
    5. 'ibles' → logprob: -15.750067710876465
    6. '   ' → logprob: -16.75006675720215
    7. '```' → logprob: -16.75006675720215
    8. 'tiles' → logprob: -17.37506675720215
    9. '[' → logprob: -17.50006675720215
    10. 'ILES' → logprob: -17.62506675720215

Token 370: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.271409809589386
    2. 'le' → logprob: -2.146409749984741
    3. ' leap' → logprob: -2.146409749984741
    4. 'b' → logprob: -7.27140998840332
    5. ':' → logprob: -7.52140998840332
    6. ',' → logprob: -7.64640998840332
    7. '        
' → logprob: -7.89640998840332
    8. '   ' → logprob: -8.14640998840332
    9. ' =' → logprob: -8.14640998840332
    10. '=' → logprob: -8.89640998840332

Token 371: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.23061802983283997
    2. 'la' → logprob: -2.4806180000305176
    3. 'le' → logprob: -3.6056180000305176
    4. '[]' → logprob: -3.6056180000305176
    5. ' une' → logprob: -4.230618000030518
    6. 'range' → logprob: -4.230618000030518
    7. 'une' → logprob: -5.105618000030518
    8. 'list' → logprob: -5.480618000030518
    9. ' range' → logprob: -5.730618000030518
    10. ' le' → logprob: -5.730618000030518

Token 372: ''' (ID: 6)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4592956602573395
    2. 'interval' → logprob: -1.209295630455017
    3. 'inter' → logprob: -3.9592957496643066
    4. 'a' → logprob: -4.459295749664307
    5. 'ter' → logprob: -4.584295749664307
    6. '_interval' → logprob: -4.709295749664307
    7. ' range' → logprob: -5.459295749664307
    8. '[' → logprob: -5.584295749664307
    9. '=[]
' → logprob: -6.459295749664307
    10. '_inter' → logprob: -6.834295749664307

Token 373: 'interval' (ID: 37558)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038024164736270905
    2. 'interval' → logprob: -3.5380241870880127
    3. '[' → logprob: -5.413023948669434
    4. '[a' → logprob: -6.663023948669434
    5. '[]' → logprob: -7.788023948669434
    6. 'liste' → logprob: -8.288023948669434
    7. ' range' → logprob: -8.413023948669434
    8. 'année' → logprob: -8.663023948669434
    9. 'b' → logprob: -8.788023948669434
    10. 'a' → logprob: -8.788023948669434

Token 374: 'le' (ID: 282)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.33228322863578796
    2. 're' → logprob: -2.0822832584381104
    3. 'le' → logprob: -2.0822832584381104
    4. 'erval' → logprob: -4.082283020019531
    5. 'vale' → logprob: -4.582283020019531
    6. 'e' → logprob: -6.582283020019531
    7. 'vel' → logprob: -6.582283020019531
    8. 'al' → logprob: -6.832283020019531
    9. 'er' → logprob: -7.332283020019531
    10. 'ale' → logprob: -8.207283020019531

Token 375: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02973336912691593
    2. ' leap' → logprob: -4.154733180999756
    3. 'le' → logprob: -4.404733180999756
    4. '        
' → logprob: -8.029733657836914
    5. '   ' → logprob: -8.529733657836914
    6. 'b' → logprob: -8.654733657836914
    7. ' years' → logprob: -8.654733657836914
    8. ',' → logprob: -9.279733657836914
    9. ':' → logprob: -9.529733657836914
    10. 'years' → logprob: -9.779733657836914

Token 376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06895309686660767
    2. 'le' → logprob: -3.193953037261963
    3. ' leap' → logprob: -3.693953037261963
    4. '        
' → logprob: -9.193953514099121
    5. ' years' → logprob: -9.443953514099121
    6. ' leaps' → logprob: -9.443953514099121
    7. '   ' → logprob: -9.568953514099121
    8. 'b' → logprob: -9.568953514099121
    9. '_le' → logprob: -10.068953514099121
    10. ':' → logprob: -10.193953514099121

Token 377: ' leap' (ID: 58256)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.020878300070762634
    2. ' leap' → logprob: -3.895878314971924
    3. '   ' → logprob: -9.020877838134766
    4. 'ble' → logprob: -9.645877838134766
    5. 'b' → logprob: -9.895877838134766
    6. 'bis' → logprob: -10.520877838134766
    7. 'years' → logprob: -10.520877838134766
    8. ' years' → logprob: -11.520877838134766
    9. ' leaps' → logprob: -11.770877838134766
    10. ' b' → logprob: -11.770877838134766

Token 378: '_year' (ID: 33489)
  Prédit: '_year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_year' → logprob: -0.0013864279026165605
    2. 's' → logprob: -7.251386642456055
    3. 'years' → logprob: -7.376386642456055
    4. '_' → logprob: -10.126386642456055
    5. ' years' → logprob: -12.501386642456055
    6. 'year' → logprob: -13.126386642456055
    7. 'Years' → logprob: -13.251386642456055
    8. '_ann' → logprob: -14.376386642456055
    9. '_s' → logprob: -14.626386642456055
    10. ' =' → logprob: -15.001386642456055

Token 379: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.339278580620885e-06
    2. 'es' → logprob: -14.125001907348633
    3. '_year' → logprob: -14.375001907348633
    4. '_s' → logprob: -14.500001907348633
    5. '_list' → logprob: -15.500001907348633
    6. '_' → logprob: -16.375001907348633
    7. 'years' → logprob: -17.000001907348633
    8. ' s' → logprob: -18.000001907348633
    9. '=' → logprob: -18.000001907348633
    10. ' =' → logprob: -18.750001907348633

Token 380: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889936864376068
    2. '=' → logprob: -2.578899383544922
    3. '=[]' → logprob: -11.703899383544922
    4. ' =[' → logprob: -14.703899383544922
    5. ' ' → logprob: -15.328899383544922
    6. 's' → logprob: -15.453899383544922
    7. '=[' → logprob: -16.328899383544922
    8. '[]' → logprob: -16.453899383544922
    9. '    ' → logprob: -16.578899383544922
    10. '[' → logprob: -16.703899383544922

Token 381: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.24179239571094513
    2. '[' → logprob: -1.9917924404144287
    3. ' [' → logprob: -2.7417924404144287
    4. ' []' → logprob: -4.49179220199585
    5. '[]
' → logprob: -6.49179220199585
    6. '[a' → logprob: -7.86679220199585
    7. '[
' → logprob: -8.241792678833008
    8. '[i' → logprob: -9.241792678833008
    9. '[int' → logprob: -9.991792678833008
    10. '[start' → logprob: -10.116792678833008

Token 382: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20858995616436005
    2. ' for' → logprob: -1.7085899114608765
    3. 'for' → logprob: -4.958590030670166
    4. '   ' → logprob: -10.208589553833008
    5. '	for' → logprob: -10.583589553833008
    6. '        
' → logprob: -10.708589553833008
    7. '        ' → logprob: -11.708589553833008
    8. '    ' → logprob: -11.833589553833008
    9. '<|end|>' → logprob: -12.083589553833008
    10. '	' → logprob: -12.333589553833008

Token 383: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04048141464591026
    2. ' for' → logprob: -3.5404813289642334
    3. '       ' → logprob: -4.5404815673828125
    4. '
' → logprob: -12.665481567382812
    5. '   ' → logprob: -13.665481567382812
    6. '	for' → logprob: -14.040481567382812
    7. '        
' → logprob: -16.790481567382812
    8. '```' → logprob: -17.540481567382812
    9. 'range' → logprob: -17.790481567382812
    10. ' ' → logprob: -17.915481567382812

Token 384: ' year' (ID: 1284)
  Prédit: ' year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' year' → logprob: -0.10028204321861267
    2. 'year' → logprob: -2.3502819538116455
    3. ' i' → logprob: -10.600281715393066
    4. ' y' → logprob: -10.975281715393066
    5. 'i' → logprob: -11.225281715393066
    6. 'y' → logprob: -11.350281715393066
    7. ' année' → logprob: -12.975281715393066
    8. '   ' → logprob: -13.475281715393066
    9. 'année' → logprob: -13.600281715393066
    10. ' ' → logprob: -14.225281715393066

Token 385: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00410998472943902
    2. 'in' → logprob: -5.504109859466553
    3. ' ' → logprob: -11.004110336303711
    4. '<|end|>' → logprob: -12.504110336303711
    5. '	in' → logprob: -13.004110336303711
    6. 'range' → logprob: -13.254110336303711
    7. '_in' → logprob: -13.254110336303711
    8. '<|end|>' → logprob: -13.754110336303711
    9. '_' → logprob: -14.129110336303711
    10. ' ' → logprob: -14.254110336303711

Token 386: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067156096920371056
    2. ' range' → logprob: -5.006715774536133
    3. '   ' → logprob: -16.006715774536133
    4. '	range' → logprob: -16.506715774536133
    5. '(range' → logprob: -17.256715774536133
    6. ' ' → logprob: -19.256715774536133
    7. 'rang' → logprob: -19.881715774536133
    8. '  ' → logprob: -20.506715774536133
    9. '    ' → logprob: -20.881715774536133
    10. 'Range' → logprob: -21.006715774536133

Token 387: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.375004768371582
    3. 'a' → logprob: -16.000003814697266
    4. ' (' → logprob: -17.000003814697266
    5. '(
' → logprob: -18.000003814697266
    6. ' a' → logprob: -19.125003814697266
    7. '   ' → logprob: -19.875003814697266
    8. '(A' → logprob: -20.125003814697266
    9. '/a' → logprob: -20.875003814697266
    10. '	a' → logprob: -22.000003814697266

Token 388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001255230512470007
    2. ',b' → logprob: -7.376255035400391
    3. ' ,' → logprob: -7.376255035400391
    4. 'b' → logprob: -13.37625503540039
    5. ',
' → logprob: -14.00125503540039
    6. '   ' → logprob: -15.62625503540039
    7. ' b' → logprob: -17.37625503540039
    8. '       ' → logprob: -17.75125503540039
    9. ',int' → logprob: -18.37625503540039
    10. '
' → logprob: -19.12625503540039

Token 389: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12693072855472565
    2. ' b' → logprob: -2.1269307136535645
    3. '   ' → logprob: -13.251931190490723
    4. '	b' → logprob: -14.126931190490723
    5. '(b' → logprob: -16.751930236816406
    6. '    ' → logprob: -16.876930236816406
    7. ')b' → logprob: -17.876930236816406
    8. ' ' → logprob: -18.501930236816406
    9. ' ' → logprob: -19.001930236816406
    10. ',b' → logprob: -19.376930236816406

Token 390: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25193020701408386
    2. ' +' → logprob: -1.5019302368164062
    3. '   ' → logprob: -13.876930236816406
    4. '+b' → logprob: -15.876930236816406
    5. '+
' → logprob: -17.376930236816406
    6. ' ' → logprob: -18.251930236816406
    7. '＋' → logprob: -18.751930236816406
    8. ' plus' → logprob: -18.751930236816406
    9. ' +
' → logprob: -19.126930236816406
    10. '    ' → logprob: -19.376930236816406

Token 391: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023154958034865558
    2. ' ' → logprob: -8.375231742858887
    3. '   ' → logprob: -13.875231742858887
    4. ')' → logprob: -16.75023078918457
    5. '```' → logprob: -17.62523078918457
    6. '  ' → logprob: -18.25023078918457
    7. '
' → logprob: -18.87523078918457
    8. '       ' → logprob: -19.50023078918457
    9. '    ' → logprob: -19.87523078918457
    10. '     ' → logprob: -20.31273078918457

Token 392: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.750009536743164
    4. ')' → logprob: -17.000009536743164
    5. '  ' → logprob: -19.250009536743164
    6. '```' → logprob: -19.375009536743164
    7. '
' → logprob: -19.625009536743164
    8. '１' → logprob: -20.000009536743164
    9. '    ' → logprob: -20.312509536743164
    10. '۱' → logprob: -20.500009536743164

Token 393: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03806536644697189
    2. '):
' → logprob: -3.2880654335021973
    3. ' ):' → logprob: -11.538064956665039
    4. ')' → logprob: -12.538064956665039
    5. '):
' → logprob: -12.663064956665039
    6. ':' → logprob: -12.788064956665039
    7. '   ' → logprob: -12.913064956665039
    8. '       ' → logprob: -14.288064956665039
    9. ',' → logprob: -14.663064956665039
    10. '):

' → logprob: -14.913064956665039

Token 394: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002324864035472274
    2. '<|end|>' → logprob: -7.002325057983398
    3. ' if' → logprob: -7.377325057983398
    4. '       ' → logprob: -8.127325057983398
    5. 'if' → logprob: -9.002325057983398
    6. '   ' → logprob: -9.002325057983398
    7. '<|end|>' → logprob: -9.627325057983398
    8. '            
' → logprob: -9.627325057983398
    9. '            ' → logprob: -10.752325057983398
    10. ' ' → logprob: -10.877325057983398

Token 395: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1757776439189911
    2. ' if' → logprob: -1.9257776737213135
    3. '           ' → logprob: -4.175777435302734
    4. '       ' → logprob: -10.050777435302734
    5. '               ' → logprob: -11.050777435302734
    6. '   ' → logprob: -11.550777435302734
    7. '```' → logprob: -14.675777435302734
    8. '	if' → logprob: -15.300777435302734
    9. '
' → logprob: -15.800777435302734
    10. 'If' → logprob: -16.050777435302734

Token 396: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.12692978978157043
    2. 'is' → logprob: -2.126929759979248
    3. ' ' → logprob: -14.626930236816406
    4. ' ' → logprob: -14.876930236816406
    5. '(is' → logprob: -15.001930236816406
    6. '	is' → logprob: -15.251930236816406
    7. '   ' → logprob: -15.626930236816406
    8. ')is' → logprob: -16.751930236816406
    9. '_is' → logprob: -17.126930236816406
    10. '    ' → logprob: -17.751930236816406

Token 397: '_le' (ID: 27121)
  Prédit: '_le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -2.2200749754119897e-06
    2. '_' → logprob: -13.375001907348633
    3. 'le' → logprob: -14.500001907348633
    4. '_year' → logprob: -16.000001907348633
    5. ' _' → logprob: -17.625001907348633
    6. ' leap' → logprob: -18.000001907348633
    7. 'a' → logprob: -18.500001907348633
    8. '_LE' → logprob: -18.750001907348633
    9. ')_' → logprob: -18.875001907348633
    10. 'Leap' → logprob: -19.125001907348633

Token 398: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -2.8802491215174086e-05
    2. 'p' → logprob: -11.375028610229492
    3. 'ep' → logprob: -12.250028610229492
    4. 'a' → logprob: -12.875028610229492
    5. 'ап' → logprob: -13.125028610229492
    6. '_ap' → logprob: -14.125028610229492
    7. ' leap' → logprob: -14.125028610229492
    8. '   ' → logprob: -14.187528610229492
    9. '_' → logprob: -14.875028610229492
    10. '_year' → logprob: -15.000028610229492

Token 399: '_year' (ID: 33489)
  Prédit: '_year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_year' → logprob: -0.00024596223374828696
    2. '_' → logprob: -8.375246047973633
    3. '_le' → logprob: -11.750246047973633
    4. ' _' → logprob: -12.125246047973633
    5. 'year' → logprob: -13.750246047973633
    6. '_YEAR' → logprob: -15.000246047973633
    7. 's' → logprob: -16.500246047973633
    8. 'Year' → logprob: -16.500246047973633
    9. '_period' → logprob: -16.750246047973633
    10. ' year' → logprob: -16.750246047973633

Token 400: '(year' (ID: 58075)
  Prédit: '(year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(year' → logprob: -2.069664333248511e-05
    2. '(' → logprob: -10.875020980834961
    3. 'year' → logprob: -13.750020980834961
    4. ' (' → logprob: -15.000020980834961
    5. '(
' → logprob: -16.37502098083496
    6. ' year' → logprob: -16.62502098083496
    7. '(y' → logprob: -16.87502098083496
    8. ')' → logprob: -18.12502098083496
    9. '(month' → logprob: -18.75002098083496
    10. '(day' → logprob: -19.62502098083496

Token 401: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023320479318499565
    2. '):
' → logprob: -3.773320436477661
    3. ')' → logprob: -10.148320198059082
    4. ' ):' → logprob: -10.523320198059082
    5. '):
' → logprob: -13.148320198059082
    6. '):

' → logprob: -13.648320198059082
    7. '   ' → logprob: -13.648320198059082
    8. '(year' → logprob: -13.648320198059082
    9. ':' → logprob: -14.023320198059082
    10. '       ' → logprob: -14.398320198059082

Token 402: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0048156497068703175
    2. 'le' → logprob: -5.504815578460693
    3. '           ' → logprob: -8.129816055297852
    4. ' le' → logprob: -8.379816055297852
    5. ' leap' → logprob: -8.504816055297852
    6. '_le' → logprob: -13.254816055297852
    7. '(le' → logprob: -13.379816055297852
    8. '       ' → logprob: -13.504816055297852
    9. '                   ' → logprob: -13.879816055297852
    10. ' ' → logprob: -14.004816055297852

Token 403: ' leap' (ID: 58256)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.041675303131341934
    2. '               ' → logprob: -3.791675329208374
    3. ' leap' → logprob: -4.041675090789795
    4. ' le' → logprob: -7.916675090789795
    5. '           ' → logprob: -8.291675567626953
    6. '                   ' → logprob: -10.041675567626953
    7. '   ' → logprob: -10.541675567626953
    8. '(le' → logprob: -13.166675567626953
    9. ' ' → logprob: -13.291675567626953
    10. '.le' → logprob: -14.291675567626953

Token 404: '_year' (ID: 33489)
  Prédit: '_year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_year' → logprob: -8.537868779967539e-06
    2. 'years' → logprob: -11.875008583068848
    3. 's' → logprob: -14.250008583068848
    4. 'year' → logprob: -14.625008583068848
    5. '_' → logprob: -15.750008583068848
    6. ' years' → logprob: -16.50000762939453
    7. 'Years' → logprob: -17.00000762939453
    8. ' _' → logprob: -17.50000762939453
    9. 'Year' → logprob: -18.37500762939453
    10. '_YEAR' → logprob: -18.87500762939453

Token 405: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03399178758263588
    2. '_year' → logprob: -4.033991813659668
    3. 'years' → logprob: -4.158991813659668
    4. ' years' → logprob: -9.658991813659668
    5. 'year' → logprob: -11.908991813659668
    6. 'ears' → logprob: -12.158991813659668
    7. '.append' → logprob: -12.283991813659668
    8. 'Years' → logprob: -12.283991813659668
    9. '-years' → logprob: -13.158991813659668
    10. 'es' → logprob: -13.283991813659668

Token 406: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.093505099765025e-05
    2. '.' → logprob: -10.875020980834961
    3. 'append' → logprob: -13.250020980834961
    4. '.Append' → logprob: -16.87502098083496
    5. '.add' → logprob: -17.00002098083496
    6. '           ' → logprob: -17.62502098083496
    7. '_append' → logprob: -18.00002098083496
    8. '.extend' → logprob: -18.25002098083496
    9. ' .' → logprob: -18.37502098083496
    10. ' append' → logprob: -18.50002098083496

Token 407: '(year' (ID: 58075)
  Prédit: '(year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(year' → logprob: -0.0004985823179595172
    2. 'year' → logprob: -8.00049877166748
    3. '(str' → logprob: -8.75049877166748
    4. '(' → logprob: -12.37549877166748
    5. ' year' → logprob: -14.50049877166748
    6. 'str' → logprob: -16.875497817993164
    7. ' (' → logprob: -18.125497817993164
    8. '(f' → logprob: -18.750497817993164
    9. 'Year' → logprob: -18.750497817993164
    10. '(
' → logprob: -18.875497817993164

Token 408: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.968312951968983e-06
    2. ')
' → logprob: -12.125009536743164
    3. '       ' → logprob: -13.125009536743164
    4. ' )' → logprob: -14.000009536743164
    5. '<|end|>' → logprob: -14.500009536743164
    6. '   ' → logprob: -14.750009536743164
    7. ')

' → logprob: -15.000009536743164
    8. '           ' → logprob: -16.375009536743164
    9. '<|end|>' → logprob: -16.375009536743164
    10. '')' → logprob: -17.000009536743164

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2256108820438385
    2. '
' → logprob: -1.6006108522415161
    3. '<|end|>' → logprob: -9.600610733032227
    4. '   ' → logprob: -9.725610733032227
    5. '        
' → logprob: -10.225610733032227
    6. 'if' → logprob: -11.350610733032227
    7. '```' → logprob: -11.725610733032227
    8. ' if' → logprob: -12.350610733032227
    9. '
' → logprob: -12.475610733032227
    10. '    
' → logprob: -13.100610733032227

Token 410: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.025136834010481834
    2. '       ' → logprob: -3.775136947631836
    3. ' if' → logprob: -6.275136947631836
    4. '```' → logprob: -12.150136947631836
    5. '   ' → logprob: -14.025136947631836
    6. '
' → logprob: -14.525136947631836
    7. '        
' → logprob: -14.900136947631836
    8. '	if' → logprob: -16.275136947631836
    9. 'output' → logprob: -17.650136947631836
    10. 'If' → logprob: -17.650136947631836

Token 411: ' Aff' (ID: 13741)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.816093228830141e-06
    2. '       ' → logprob: -13.00000286102295
    3. ' if' → logprob: -14.50000286102295
    4. '```' → logprob: -17.250001907348633
    5. 'output' → logprob: -19.250001907348633
    6. '   ' → logprob: -20.750001907348633
    7. '#' → logprob: -20.750001907348633
    8. '        
' → logprob: -21.375001907348633
    9. '           ' → logprob: -21.750001907348633
    10. 'If' → logprob: -22.750001907348633

Token 412: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.1899864226579666
    2. '       ' → logprob: -2.68998646736145
    3. '   ' → logprob: -3.06498646736145
    4. 'ichage' → logprob: -3.06498646736145
    5. 'ich' → logprob: -4.814986228942871
    6. 'iche' → logprob: -6.189986228942871
    7. '    ' → logprob: -7.064986228942871
    8. 'ic' → logprob: -8.939986228942871
    9. '#' → logprob: -9.189986228942871
    10. '```' → logprob: -9.314986228942871

Token 413: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009537547826766968
    2. '
' → logprob: -5.134537696838379
    3. '        
' → logprob: -5.884537696838379
    4. '<|end|>' → logprob: -7.884537696838379
    5. ' if' → logprob: -9.134537696838379
    6. 'if' → logprob: -9.134537696838379
    7. '  
' → logprob: -9.759537696838379
    8. '    
' → logprob: -10.009537696838379
    9. '   ' → logprob: -10.259537696838379
    10. '       
' → logprob: -10.634537696838379

Token 414: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024203950306400657
    2. '
' → logprob: -9.125242233276367
    3. '   ' → logprob: -9.750242233276367
    4. '        
' → logprob: -9.750242233276367
    5. 'if' → logprob: -12.125242233276367
    6. ' if' → logprob: -12.625242233276367
    7. '           ' → logprob: -13.000242233276367
    8. '    
' → logprob: -13.875242233276367
    9. '     ' → logprob: -14.125242233276367
    10. '<|end|>' → logprob: -14.125242233276367

Token 415: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1723099797964096
    2. '       ' → logprob: -1.9223099946975708
    3. ' if' → logprob: -4.422309875488281
    4. '   ' → logprob: -12.172309875488281
    5. '	if' → logprob: -14.297309875488281
    6. '```' → logprob: -14.422309875488281
    7. ' ' → logprob: -17.17230987548828
    8. 'If' → logprob: -17.17230987548828
    9. '           ' → logprob: -17.29730987548828
    10. ';if' → logprob: -17.79730987548828

Token 416: ' not' (ID: 625)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.04884418845176697
    2. ' leap' → logprob: -4.048844337463379
    3. 'not' → logprob: -4.298844337463379
    4. 'len' → logprob: -4.548844337463379
    5. ' not' → logprob: -5.423844337463379
    6. 'first' → logprob: -6.798844337463379
    7. ' first' → logprob: -8.423844337463379
    8. ' len' → logprob: -8.548844337463379
    9. ' le' → logprob: -9.673844337463379
    10. '   ' → logprob: -10.423844337463379

Token 417: ' first' (ID: 1577)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.4925142824649811
    2. ' leap' → logprob: -0.9925142526626587
    3. ' first' → logprob: -4.242514133453369
    4. 'first' → logprob: -5.617514133453369
    5. ' le' → logprob: -8.617514610290527
    6. ' ' → logprob: -10.117514610290527
    7. '   ' → logprob: -11.117514610290527
    8. '  ' → logprob: -11.617514610290527
    9. 'len' → logprob: -12.742514610290527
    10. ' not' → logprob: -13.742514610290527

Token 418: '_output' (ID: 16732)
  Prédit: '_output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_output' → logprob: -6.988221684878226e-06
    2. '_' → logprob: -12.000006675720215
    3. 'output' → logprob: -14.375006675720215
    4. ' _' → logprob: -16.37500762939453
    5. '_input' → logprob: -17.25000762939453
    6. '_out' → logprob: -17.62500762939453
    7. ' output' → logprob: -17.75000762939453
    8. '_print' → logprob: -18.37500762939453
    9. '_
' → logprob: -18.50000762939453
    10. 'Output' → logprob: -18.62500762939453

Token 419: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006741777528077364
    2. ':
' → logprob: -5.006742000579834
    3. ' and' → logprob: -11.006741523742676
    4. ':

' → logprob: -12.756741523742676
    5. 'and' → logprob: -13.006741523742676
    6. ':
' → logprob: -13.756741523742676
    7. '       ' → logprob: -14.006741523742676
    8. '   ' → logprob: -14.381741523742676
    9. '==' → logprob: -14.756741523742676
    10. 'print' → logprob: -14.756741523742676

Token 420: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06589280068874359
    2. '       ' → logprob: -3.4408926963806152
    3. 'print' → logprob: -3.6908926963806152
    4. '
' → logprob: -5.190892696380615
    5. ' print' → logprob: -6.815892696380615
    6. '        
' → logprob: -10.565893173217773
    7. '\n' → logprob: -10.940893173217773
    8. '            
' → logprob: -11.065893173217773
    9. '\' → logprob: -11.190893173217773
    10. '               ' → logprob: -11.440893173217773

Token 421: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.031433772295713425
    2. '       ' → logprob: -3.7814338207244873
    3. ' print' → logprob: -5.531433582305908
    4. '
' → logprob: -5.531433582305908
    5. '\n' → logprob: -9.156434059143066
    6. '
' → logprob: -9.656434059143066
    7. '           ' → logprob: -10.781434059143066
    8. '\' → logprob: -11.281434059143066
    9. '        
' → logprob: -11.281434059143066
    10. '   ' → logprob: -12.031434059143066

Token 422: ' Ligne' (ID: 127787)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00017231269157491624
    2. ' print' → logprob: -9.25017261505127
    3. '       ' → logprob: -9.50017261505127
    4. '
' → logprob: -14.12517261505127
    5. '           ' → logprob: -15.25017261505127
    6. '   ' → logprob: -15.62517261505127
    7. '	print' → logprob: -16.875171661376953
    8. '```' → logprob: -17.375171661376953
    9. '
' → logprob: -17.750171661376953
    10. '\n' → logprob: -17.875171661376953

Token 423: ' vide' (ID: 21835)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 424: ' entre' (ID: 3853)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 425: ' les' (ID: 1341)
  Prédit: ' groupes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' groupes' → logprob: -1.4468815326690674
    2. 'ense' → logprob: -1.8218815326690674
    3. 'print' → logprob: -2.0718815326690674
    4. 'outputs' → logprob: -2.5718815326690674
    5. 'les' → logprob: -2.8218815326690674
    6. 'groups' → logprob: -2.8218815326690674
    7. ' ensembles' → logprob: -2.8218815326690674
    8. ' les' → logprob: -2.9468815326690674
    9. 'sets' → logprob: -3.6968815326690674
    10. 's' → logprob: -3.8218815326690674

Token 426: ' blocs' (ID: 182599)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.667760968208313
    2. 'outputs' → logprob: -1.667760968208313
    3. ' groupes' → logprob: -2.7927608489990234
    4. 'ense' → logprob: -3.0427608489990234
    5. 'rés' → logprob: -3.1677608489990234
    6. 'bl' → logprob: -3.1677608489990234
    7. 'result' → logprob: -3.6677608489990234
    8. 'sort' → logprob: -3.7927608489990234
    9. 'groups' → logprob: -4.542760848999023
    10. 'print' → logprob: -4.917760848999023

Token 427: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2644210159778595
    2. 'print' → logprob: -1.514420986175537
    3. '           ' → logprob: -4.514420986175537
    4. ' print' → logprob: -6.764420986175537
    5. '\n' → logprob: -8.514421463012695
    6. '
' → logprob: -10.014421463012695
    7. '        
' → logprob: -10.639421463012695
    8. '   ' → logprob: -11.639421463012695
    9. '               ' → logprob: -11.764421463012695
    10. '\' → logprob: -11.889421463012695

Token 428: ' sortie' (ID: 52761)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.022031569853425026
    2. ' résultats' → logprob: -4.522031784057617
    3. 'result' → logprob: -5.397031784057617
    4. 'print' → logprob: -6.022031784057617
    5. 'sort' → logprob: -6.397031784057617
    6. 'r' → logprob: -6.647031784057617
    7. 'aff' → logprob: -7.772031784057617
    8. 'output' → logprob: -8.272031784057617
    9. 'results' → logprob: -9.522031784057617
    10. ' sortie' → logprob: -9.647031784057617

Token 429: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16344265639781952
    2. '       ' → logprob: -1.913442611694336
    3. '
' → logprob: -6.413442611694336
    4. '\n' → logprob: -7.538442611694336
    5. ' print' → logprob: -7.663442611694336
    6. '           ' → logprob: -7.788442611694336
    7. '        
' → logprob: -9.538442611694336
    8. '\' → logprob: -10.788442611694336
    9. '    
' → logprob: -11.038442611694336
    10. '```' → logprob: -11.038442611694336

Token 430: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1640564650297165
    2. 'print' → logprob: -2.1640565395355225
    3. '
' → logprob: -3.6640565395355225
    4. '           ' → logprob: -5.164056301116943
    5. '\n' → logprob: -5.414056301116943
    6. ' print' → logprob: -8.289056777954102
    7. '        
' → logprob: -8.539056777954102
    8. '\' → logprob: -9.289056777954102
    9. '    
' → logprob: -10.289056777954102
    10. '
' → logprob: -11.164056777954102

Token 431: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.000169332604855299
    2. ' print' → logprob: -8.75016975402832
    3. '       ' → logprob: -11.50016975402832
    4. '           ' → logprob: -15.12516975402832
    5. '   ' → logprob: -15.50016975402832
    6. '```' → logprob: -16.00016975402832
    7. '
' → logprob: -16.62516975402832
    8. '	print' → logprob: -17.62516975402832
    9. '\n' → logprob: -18.00016975402832
    10. '\' → logprob: -19.12516975402832

Token 432: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.7689099018462e-05
    2. '("")' → logprob: -9.50008773803711
    3. '()
' → logprob: -11.37508773803711
    4. '(' → logprob: -13.87508773803711
    5. '()\' → logprob: -16.25008773803711
    6. ' ()' → logprob: -16.50008773803711
    7. '()

' → logprob: -16.75008773803711
    8. '""' → logprob: -17.25008773803711
    9. '('' → logprob: -18.00008773803711
    10. '()
' → logprob: -18.37508773803711

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.054500666621607e-06
    2. 'else' → logprob: -13.62500286102295
    3. '<|end|>' → logprob: -14.25000286102295
    4. ' else' → logprob: -14.87500286102295
    5. '   ' → logprob: -14.87500286102295
    6. ' first' → logprob: -15.25000286102295
    7. '        
' → logprob: -16.000003814697266
    8. '           ' → logprob: -16.750003814697266
    9. '      ' → logprob: -17.125003814697266
    10. '
' → logprob: -17.375003814697266

Token 434: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021524035837501287
    2. 'first' → logprob: -6.502152442932129
    3. ' first' → logprob: -7.377152442932129
    4. 'if' → logprob: -10.877152442932129
    5. 'print' → logprob: -12.502152442932129
    6. '   ' → logprob: -14.377152442932129
    7. ' if' → logprob: -14.502152442932129
    8. '           ' → logprob: -14.877152442932129
    9. '	first' → logprob: -16.252151489257812
    10. '[first' → logprob: -16.252151489257812

Token 435: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3568268418312073
    2. '           ' → logprob: -1.2318267822265625
    3. ':' → logprob: -5.6068267822265625
    4. ':
' → logprob: -6.1068267822265625
    5. ' first' → logprob: -6.7318267822265625
    6. ':first' → logprob: -7.6068267822265625
    7. ',' → logprob: -8.606826782226562
    8. '[first' → logprob: -8.856826782226562
    9. '   ' → logprob: -9.231826782226562
    10. '               ' → logprob: -9.731826782226562

Token 436: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0235803984105587
    2. '           ' → logprob: -3.773580312728882
    3. ' first' → logprob: -8.148580551147461
    4. 'first' → logprob: -10.023580551147461
    5. '               ' → logprob: -14.023580551147461
    6. 'First' → logprob: -15.273580551147461
    7. '	first' → logprob: -15.648580551147461
    8. '   ' → logprob: -15.773580551147461
    9. '[first' → logprob: -17.14858055114746
    10. '```' → logprob: -17.27358055114746

Token 437: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' (adapté à ' first') → logprob: -0.03046996332705021
    2. ' first' → logprob: -3.5304698944091797
    3. '       ' → logprob: -7.28046989440918
    4. '   ' → logprob: -11.15546989440918
    5. '           ' → logprob: -11.28046989440918
    6. '	first' → logprob: -12.78046989440918
    7. 'First' → logprob: -14.28046989440918
    8. '[first' → logprob: -17.40546989440918
    9. '               ' → logprob: -17.53046989440918
    10. '.first' → logprob: -18.28046989440918

Token 438: '_output' (ID: 16732)
  Prédit: '_output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_output' → logprob: -8.65707261255011e-06
    2. '_' → logprob: -11.750008583068848
    3. ' _' → logprob: -15.000008583068848
    4. 'output' → logprob: -15.750008583068848
    5. '_out' → logprob: -15.875008583068848
    6. 'Output' → logprob: -17.375009536743164
    7. '_outputs' → logprob: -17.750009536743164
    8. '_input' → logprob: -17.875009536743164
    9. '_OUTPUT' → logprob: -18.125009536743164
    10. '__' → logprob: -18.750009536743164

Token 439: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038048259913921356
    2. ' =' → logprob: -3.288048267364502
    3. '=False' → logprob: -11.913047790527344
    4. 'False' → logprob: -16.663047790527344
    5. '[' → logprob: -17.788047790527344
    6. '=false' → logprob: -19.163047790527344
    7. '＝' → logprob: -19.413047790527344
    8. '.=' → logprob: -19.663047790527344
    9. '```' → logprob: -19.913047790527344
    10. '=True' → logprob: -20.038047790527344

Token 440: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.842555426876061e-06
    2. ' False' → logprob: -12.250004768371582
    3. 'True' → logprob: -19.0000057220459
    4. '(False' → logprob: -22.7500057220459
    5. '=False' → logprob: -24.6250057220459
    6. 'F' → logprob: -24.7500057220459
    7. 'false' → logprob: -25.6250057220459
    8. '   ' → logprob: -26.0000057220459
    9. 'FALSE' → logprob: -27.2500057220459
    10. 'Fa' → logprob: -27.6250057220459

Token 441: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.036524842376821e-05
    2. '<|end|>' → logprob: -11.125040054321289
    3. '        
' → logprob: -12.000040054321289
    4. '
' → logprob: -12.000040054321289
    5. 'if' → logprob: -12.375040054321289
    6. '   ' → logprob: -12.500040054321289
    7. '```' → logprob: -13.250040054321289
    8. ' if' → logprob: -13.625040054321289
    9. 'for' → logprob: -14.125040054321289
    10. ' for' → logprob: -14.250040054321289

Token 442: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.47428202629089355
    2. '       ' → logprob: -0.9742820262908936
    3. ' if' → logprob: -9.099282264709473
    4. '   ' → logprob: -9.349282264709473
    5. 'for' → logprob: -12.349282264709473
    6. '```' → logprob: -13.474282264709473
    7. '	if' → logprob: -15.224282264709473
    8. ' ' → logprob: -16.974281311035156
    9. '           ' → logprob: -17.474281311035156
    10. 'If' → logprob: -17.849281311035156

Token 443: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -5.676981345459353e-06
    2. '       ' → logprob: -12.250005722045898
    3. ' if' → logprob: -14.000005722045898
    4. 'If' → logprob: -21.7500057220459
    5. '	if' → logprob: -21.8750057220459
    6. '   ' → logprob: -23.0000057220459
    7. '```' → logprob: -23.7500057220459
    8. ';if' → logprob: -24.1250057220459
    9. 'for' → logprob: -24.2500057220459
    10. '#' → logprob: -25.0000057220459

Token 444: ' leap' (ID: 58256)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.09161923080682755
    2. ' leap' → logprob: -2.5916192531585693
    3. 'len' → logprob: -4.46661901473999
    4. ' len' → logprob: -6.96661901473999
    5. ' not' → logprob: -9.091619491577148
    6. 'not' → logprob: -9.341619491577148
    7. ' le' → logprob: -11.466619491577148
    8. '   ' → logprob: -11.966619491577148
    9. ' ' → logprob: -13.716619491577148
    10. 'l' → logprob: -14.841619491577148

Token 445: '_year' (ID: 33489)
  Prédit: '_year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_year' → logprob: -3.8889261304575484e-06
    2. 'year' → logprob: -13.000003814697266
    3. 'years' → logprob: -14.125003814697266
    4. 's' → logprob: -14.500003814697266
    5. 'Year' → logprob: -16.625003814697266
    6. '       ' → logprob: -16.625003814697266
    7. '_' → logprob: -17.000003814697266
    8. '   ' → logprob: -17.625003814697266
    9. '_YEAR' → logprob: -18.125003814697266
    10. '(year' → logprob: -18.625003814697266

Token 446: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0006880098371766508
    2. 'years' → logprob: -8.125687599182129
    3. '_year' → logprob: -8.250687599182129
    4. 'ars' → logprob: -10.000687599182129
    5. 'ears' → logprob: -10.125687599182129
    6. 'rs' → logprob: -10.375687599182129
    7. 'ear' → logprob: -12.125687599182129
    8. 'ours' → logprob: -13.250687599182129
    9. 'Years' → logprob: -13.500687599182129
    10. ' years' → logprob: -13.750687599182129

Token 447: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.558399319241289e-05
    2. ' :' → logprob: -11.500025749206543
    3. '==' → logprob: -11.750025749206543
    4. ':
' → logprob: -12.250025749206543
    5. '=' → logprob: -13.875025749206543
    6. '):' → logprob: -14.625025749206543
    7. ' ==' → logprob: -14.750025749206543
    8. '>' → logprob: -15.000025749206543
    9. ')' → logprob: -16.000024795532227
    10. '   ' → logprob: -16.250024795532227

Token 448: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018774702912196517
    2. ' for' → logprob: -6.751877307891846
    3. 'for' → logprob: -7.751877307891846
    4. '       ' → logprob: -8.751877784729004
    5. 'print' → logprob: -9.126877784729004
    6. '	       ' → logprob: -12.126877784729004
    7. ' print' → logprob: -12.876877784729004
    8. '               ' → logprob: -14.251877784729004
    9. '          ' → logprob: -14.876877784729004
    10. '   ' → logprob: -15.001877784729004

Token 449: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10230551660060883
    2. ' for' → logprob: -2.8523054122924805
    3. 'print' → logprob: -3.6023054122924805
    4. '           ' → logprob: -5.1023054122924805
    5. '       ' → logprob: -5.1023054122924805
    6. ' print' → logprob: -9.22730541229248
    7. '               ' → logprob: -12.35230541229248
    8. '   ' → logprob: -12.97730541229248
    9. '	for' → logprob: -13.22730541229248
    10. ' ' → logprob: -13.35230541229248

Token 450: ' ly' (ID: 15280)
  Prédit: 'year'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'year' → logprob: -0.09077730774879456
    2. 'y' → logprob: -2.7157773971557617
    3. ' year' → logprob: -4.715777397155762
    4. 'yr' → logprob: -5.215777397155762
    5. ' y' → logprob: -5.465777397155762
    6. 'ly' → logprob: -6.340777397155762
    7. 'iy' → logprob: -9.965777397155762
    8. 'le' → logprob: -10.090777397155762
    9. 'yy' → logprob: -10.215777397155762
    10. 'yl' → logprob: -10.215777397155762

Token 451: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16300806403160095
    2. 'ear' → logprob: -1.9130080938339233
    3. 'in' → logprob: -5.913008213043213
    4. 'ar' → logprob: -10.538007736206055
    5. 'year' → logprob: -10.913007736206055
    6. 'ears' → logprob: -11.163007736206055
    7. '_year' → logprob: -11.538007736206055
    8. ' ' → logprob: -13.038007736206055
    9. 'print' → logprob: -13.538007736206055
    10. 'e' → logprob: -13.788007736206055

Token 452: ' leap' (ID: 58256)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -8.494741632603109e-05
    2. ' leap' → logprob: -9.37508487701416
    3. ' le' → logprob: -16.750085830688477
    4. '   ' → logprob: -18.000085830688477
    5. 'Leap' → logprob: -19.500085830688477
    6. '(le' → logprob: -19.625085830688477
    7. '_le' → logprob: -20.500085830688477
    8. ' ' → logprob: -20.500085830688477
    9. 'leet' → logprob: -20.875085830688477
    10. '  ' → logprob: -21.000085830688477

Token 453: '_year' (ID: 33489)
  Prédit: '_year'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_year' → logprob: -2.4153549020411447e-05
    2. 'year' → logprob: -10.87502384185791
    3. 'years' → logprob: -12.50002384185791
    4. 'ear' → logprob: -13.75002384185791
    5. 's' → logprob: -15.37502384185791
    6. 'Year' → logprob: -16.125024795532227
    7. '-year' → logprob: -18.125024795532227
    8. '(year' → logprob: -18.250024795532227
    9. 'ears' → logprob: -18.625024795532227
    10. '_' → logprob: -19.000024795532227

Token 454: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011184925213456154
    2. 'ars' → logprob: -5.0111846923828125
    3. 'years' → logprob: -5.5111846923828125
    4. '_year' → logprob: -8.386184692382812
    5. 'ears' → logprob: -8.761184692382812
    6. 'ays' → logprob: -11.511184692382812
    7. 'es' → logprob: -11.886184692382812
    8. 'ear' → logprob: -12.136184692382812
    9. ' years' → logprob: -12.886184692382812
    10. 'ers' → logprob: -13.011184692382812

Token 455: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7342469096183777
    2. ':
' → logprob: -1.2342469692230225
    3. ':' → logprob: -1.4842469692230225
    4. 'print' → logprob: -6.984246730804443
    5. '           ' → logprob: -7.609246730804443
    6. '):
' → logprob: -8.234247207641602
    7. ' print' → logprob: -8.609247207641602
    8. ',' → logprob: -9.109247207641602
    9. '():
' → logprob: -9.109247207641602
    10. '<|end|>' → logprob: -9.734247207641602

Token 456: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003340856172144413
    2. 'print' → logprob: -5.753340721130371
    3. ' print' → logprob: -8.753340721130371
    4. '           ' → logprob: -12.503340721130371
    5. '       ' → logprob: -14.253340721130371
    6. '   ' → logprob: -14.628340721130371
    7. '```' → logprob: -15.878340721130371
    8. '	           ' → logprob: -16.753341674804688
    9. '              ' → logprob: -16.878341674804688
    10. '	print' → logprob: -16.878341674804688

Token 457: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.013511360622942448
    2. ' print' → logprob: -4.5135111808776855
    3. '               ' → logprob: -6.0135111808776855
    4. '                   ' → logprob: -11.763511657714844
    5. '   ' → logprob: -12.513511657714844
    6. '           ' → logprob: -12.638511657714844
    7. '	print' → logprob: -15.513511657714844
    8. '       ' → logprob: -15.763511657714844
    9. ' ' → logprob: -18.763511657714844
    10. '```' → logprob: -18.763511657714844

Token 458: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. '(f' → logprob: -14.75
    3. ' ly' → logprob: -18.875
    4. '(l' → logprob: -19.75
    5. 'ly' → logprob: -21.25
    6. '()' → logprob: -22.5
    7. 'Ly' → logprob: -22.5
    8. '(
' → logprob: -22.625
    9. '(L' → logprob: -22.75
    10. ' (' → logprob: -23.0

Token 459: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -1.9361264946837764e-07
    2. ' ly' → logprob: -15.875
    3. '   ' → logprob: -17.875
    4. 'lys' → logprob: -20.125
    5. '.ly' → logprob: -21.125
    6. '       ' → logprob: -21.25
    7. 'lyde' → logprob: -21.75
    8. 'lya' → logprob: -21.75
    9. '  ' → logprob: -21.875
    10. '     ' → logprob: -21.875

Token 460: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2127087504486553e-05
    2. ')
' → logprob: -10.750021934509277
    3. '())' → logprob: -15.125021934509277
    4. '<|end|>' → logprob: -16.375022888183594
    5. ')
' → logprob: -16.625022888183594
    6. ' )' → logprob: -17.000022888183594
    7. '()' → logprob: -17.125022888183594
    8. '),' → logprob: -17.375022888183594
    9. '       ' → logprob: -17.375022888183594
    10. ')}' → logprob: -17.625022888183594

Token 461: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029837964102625847
    2. 'else' → logprob: -3.5298378467559814
    3. ' else' → logprob: -9.404837608337402
    4. '```' → logprob: -12.404837608337402
    5. '   ' → logprob: -13.779837608337402
    6. 'Else' → logprob: -17.02983856201172
    7. '      ' → logprob: -17.65483856201172
    8. 'elif' → logprob: -18.15483856201172
    9. '	else' → logprob: -18.27983856201172
    10. '           ' → logprob: -18.52983856201172

Token 462: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.011289246380329132
    2. '       ' → logprob: -4.511289119720459
    3. ' else' → logprob: -8.511289596557617
    4. '   ' → logprob: -10.136289596557617
    5. '```' → logprob: -14.511289596557617
    6. 'elif' → logprob: -16.636289596557617
    7. 'print' → logprob: -17.011289596557617
    8. '	else' → logprob: -17.511289596557617
    9. ' ' → logprob: -18.136289596557617
    10. 'Else' → logprob: -18.511289596557617

Token 463: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23317129909992218
    2. ':
' → logprob: -2.108171224594116
    3. ':' → logprob: -2.483171224594116
    4. 'print' → logprob: -5.983171463012695
    5. '       ' → logprob: -8.483171463012695
    6. '               ' → logprob: -9.108171463012695
    7. ' print' → logprob: -9.733171463012695
    8. '(print' → logprob: -9.983171463012695
    9. '(' → logprob: -10.983171463012695
    10. ' :
' → logprob: -11.108171463012695

Token 464: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0896831825375557
    2. '           ' → logprob: -3.0896832942962646
    3. '       ' → logprob: -3.3396832942962646
    4. ' print' → logprob: -5.3396830558776855
    5. '	       ' → logprob: -11.964683532714844
    6. '   ' → logprob: -12.339683532714844
    7. '	print' → logprob: -12.339683532714844
    8. '```' → logprob: -14.214683532714844
    9. '(print' → logprob: -14.714683532714844
    10. '               ' → logprob: -14.839683532714844

Token 465: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.1888679839321412e-05
    2. ' print' → logprob: -10.750021934509277
    3. '           ' → logprob: -15.000021934509277
    4. '       ' → logprob: -16.50002098083496
    5. '	print' → logprob: -17.75002098083496
    6. '   ' → logprob: -17.87502098083496
    7. ' ' → logprob: -22.87502098083496
    8. '```' → logprob: -23.37502098083496
    9. 'Print' → logprob: -23.62502098083496
    10. 'printf' → logprob: -23.87502098083496

Token 466: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.1005108430981636
    2. '("' → logprob: -2.350510835647583
    3. '(' → logprob: -8.100510597229004
    4. 'NA' → logprob: -14.850510597229004
    5. ''' → logprob: -14.975510597229004
    6. '"' → logprob: -16.72551155090332
    7. '(N' → logprob: -16.72551155090332
    8. ' ("' → logprob: -18.22551155090332
    9. ' ('' → logprob: -18.72551155090332
    10. '("'' → logprob: -18.85051155090332

Token 467: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: 0.0
    2. ' NA' → logprob: -21.75
    3. 'N' → logprob: -22.375
    4. '"' → logprob: -23.375
    5. 'Na' → logprob: -24.5
    6. '   ' → logprob: -24.625
    7. ''' → logprob: -24.875
    8. 'na' → logprob: -26.375
    9. 'NAL' → logprob: -27.25
    10. 'NI' → logprob: -27.375

Token 468: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -1.6047699318733066e-05
    2. ')' → logprob: -11.500016212463379
    3. ')")' → logprob: -12.375016212463379
    4. '")
' → logprob: -13.375016212463379
    5. '}")' → logprob: -17.000015258789062
    6. '')' → logprob: -18.250015258789062
    7. '")}' → logprob: -18.250015258789062
    8. '```' → logprob: -18.750015258789062
    9. ' ")' → logprob: -19.125015258789062
    10. '")
' → logprob: -19.125015258789062

Token 469: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01816808618605137
    2. 'main' → logprob: -4.018167972564697
    3. '#' → logprob: -11.643168449401855
    4. ' if' → logprob: -12.268168449401855
    5. '```' → logprob: -12.393168449401855
    6. 'for' → logprob: -15.268168449401855
    7. ' main' → logprob: -15.768168449401855
    8. '(main' → logprob: -16.39316749572754
    9. 'while' → logprob: -16.89316749572754
    10. '<|end|>' → logprob: -16.89316749572754

Token 470: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6937949061393738
    2. ' __' → logprob: -0.6937949061393738
    3. '_' → logprob: -8.068795204162598
    4. ' ' → logprob: -8.443795204162598
    5. '_name' → logprob: -10.443795204162598
    6. '___' → logprob: -10.568795204162598
    7. '202' → logprob: -10.693795204162598
    8. 'name' → logprob: -11.068795204162598
    9. ' ' → logprob: -11.693795204162598
    10. '0' → logprob: -13.193795204162598

Token 471: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009405885823071003
    2. ' __' → logprob: -4.759406089782715
    3. ' ==' → logprob: -7.759406089782715
    4. '==' → logprob: -9.384406089782715
    5. '_name' → logprob: -9.759406089782715
    6. '_' → logprob: -10.134406089782715
    7. '.__' → logprob: -10.259406089782715
    8. '__.__' → logprob: -10.509406089782715
    9. '_NAME' → logprob: -10.634406089782715
    10. '___' → logprob: -11.009406089782715

Token 472: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.9385402993066236e-05
    2. '__.__' → logprob: -11.125019073486328
    3. '==' → logprob: -12.500019073486328
    4. '___' → logprob: -15.625019073486328
    5. '=="' → logprob: -16.125019073486328
    6. '__.' → logprob: -16.125019073486328
    7. '____' → logprob: -16.375019073486328
    8. ' ==' → logprob: -16.500019073486328
    9. '__["' → logprob: -16.875019073486328
    10. '"' → logprob: -17.000019073486328

Token 473: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6594210863113403
    2. '__' → logprob: -1.2844210863113403
    3. ' ==' → logprob: -1.6594210863113403
    4. '=="' → logprob: -4.159420967102051
    5. '=='' → logprob: -9.03442096710205
    6. '=' → logprob: -10.90942096710205
    7. '===' → logprob: -11.78442096710205
    8. '"' → logprob: -11.90942096710205
    9. '__.__' → logprob: -12.53442096710205
    10. ' =="' → logprob: -12.53442096710205

Token 474: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006758356466889381
    2. ''' → logprob: -5.006758213043213
    3. ' "__' → logprob: -10.381758689880371
    4. '__' → logprob: -11.381758689880371
    5. ' '__' → logprob: -15.631758689880371
    6. '"name' → logprob: -15.756758689880371
    7. '"user' → logprob: -16.506757736206055
    8. '("__' → logprob: -17.381757736206055
    9. '"_' → logprob: -17.881757736206055
    10. '"class' → logprob: -18.131757736206055

Token 475: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.000810340337920934
    2. '__' → logprob: -7.125810146331787
    3. 'name' → logprob: -12.500810623168945
    4. '"' → logprob: -14.375810623168945
    5. 'python' → logprob: -15.000810623168945
    6. 'built' → logprob: -15.125810623168945
    7. '202' → logprob: -16.000810623168945
    8. '__":
' → logprob: -16.250810623168945
    9. 'ma' → logprob: -16.500810623168945
    10. '```' → logprob: -16.625810623168945

Token 476: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.10024257749319077
    2. '__' → logprob: -2.3502426147460938
    3. '__':
' → logprob: -10.350242614746094
    4. '"' → logprob: -13.225242614746094
    5. '__.' → logprob: -14.475242614746094
    6. '__["' → logprob: -14.475242614746094
    7. '__.__' → logprob: -15.100242614746094
    8. '```' → logprob: -15.350242614746094
    9. '__:' → logprob: -15.850242614746094
    10. '_' → logprob: -16.100242614746094

Token 477: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -7.660315895918757e-05
    2. ' main' → logprob: -9.500076293945312
    3. '   ' → logprob: -13.750076293945312
    4. '	main' → logprob: -14.375076293945312
    5. '__' → logprob: -16.625076293945312
    6. '_main' → logprob: -16.875076293945312
    7. '    
' → logprob: -21.000076293945312
    8. 'Main' → logprob: -21.000076293945312
    9. '```' → logprob: -21.125076293945312
    10. '(main' → logprob: -21.500076293945312

Token 478: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.25
    3. '	main' → logprob: -21.375
    4. '   ' → logprob: -22.375
    5. '(main' → logprob: -24.125
    6. '.main' → logprob: -25.375
    7. '_main' → logprob: -26.125
    8. 'Main' → logprob: -27.875
    9. '```' → logprob: -28.0
    10. '/main' → logprob: -29.25

Token 479: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 477
Tokens correctement prédits (1ère position, stricte): 185
Tokens correctement prédits (1ère position, avec adaptation): 208
Tokens correctement prédits (top 10): 373
Précision stricte (1ère position): 38.78%
Précision adaptée (1ère position): 43.61%
Précision (top 10): 78.20%
================================================================================
