================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def gcd(a, b):
    while b:
        a, b = b, a % b
    return abs(a)

def is_divisor(m, n, p, q):
    norm = m*m + n*n
    if norm == 0:
        return False
    s1 = m*p + n*q
    s2 = m*q - n*p
    if s1 % norm != 0 or s2 % norm != 0:
        return False
    return True

def count_divisors(m, n):
    norm = m*m + n*n
    count = 0
    # Since we know divisors must satisfy the divisor condition,
    # we try all possible pairs (a,b) with a^2 + b^2 dividing norm.
    # But that might be complex, so we just try all (a,b) with a^2+b^2 <= norm
    # and check divisor condition.
    limit = int(norm**0.5) + 1
    for a in range(-limit, limit+1):
        for b in range(-limit, limit+1):
            if a*a + b*b == 0:
                continue
            if (norm % (a*a + b*b)) == 0:
                if is_divisor(a, b, m, n):
                    count += 1
    return count

def main():
    input_lines = sys.stdin.read().strip().split('\n')
    t = int(input_lines[0])
    for i in range(1, t+1):
        m,n = map(int, input_lines[i].split())
        norm = m*m + n*n
        if norm <= 1:
            print('C')
            continue
        div_count = count_divisors(m, n)
        if div_count == 8:
            print('P')
        else:
            print('C')

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05313064530491829
    2. '\n' → logprob: -3.678130626678467
    3. 'import' → logprob: -4.303130626678467
    4. '\' → logprob: -4.803130626678467
    5. '[' → logprob: -6.928130626678467
    6. '' → logprob: -7.303130626678467
    7. '```' → logprob: -7.553130626678467
    8. 'newline' → logprob: -7.553130626678467
    9. '#' → logprob: -7.928130626678467
    10. '<|end|>' → logprob: -8.053131103515625

Token 4: ' gcd' (ID: 106918)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0201973095536232
    2. ' ' → logprob: -5.39519739151001
    3. '  ' → logprob: -6.39519739151001
    4. '<|end|>' → logprob: -6.39519739151001
    5. ' process' → logprob: -6.52019739151001
    6. ' space' → logprob: -6.77019739151001
    7. ' sys' → logprob: -6.89519739151001
    8. ' main' → logprob: -6.89519739151001
    9. ' a' → logprob: -7.02019739151001
    10. ')' → logprob: -7.27019739151001

Token 5: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005882986588403583
    2. ' (' → logprob: -7.875588417053223
    3. '<|end|>' → logprob: -9.250588417053223
    4. '```' → logprob: -10.250588417053223
    5. '<|end|>' → logprob: -11.125588417053223
    6. '_' → logprob: -11.375588417053223
    7. ')' → logprob: -11.500588417053223
    8. '(
' → logprob: -12.250588417053223
    9. '(x' → logprob: -12.250588417053223
    10. '(

' → logprob: -12.750588417053223

Token 6: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005888025742024183
    2. ' ,' → logprob: -5.380887985229492
    3. ',a' → logprob: -6.880887985229492
    4. ',b' → logprob: -9.005887985229492
    5. ')' → logprob: -10.005887985229492
    6. ',)' → logprob: -10.380887985229492
    7. ',
' → logprob: -11.505887985229492
    8. ',int' → logprob: -11.880887985229492
    9. ',g' → logprob: -12.630887985229492
    10. '<|end|>' → logprob: -12.880887985229492

Token 7: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.01820332556962967
    2. 'b' → logprob: -4.018203258514404
    3. ' ' → logprob: -9.893203735351562
    4. ')' → logprob: -13.893203735351562
    5. ' ' → logprob: -14.143203735351562
    6. '<|end|>' → logprob: -14.643203735351562
    7. ')b' → logprob: -15.018203735351562
    8. ' )' → logprob: -15.893203735351562
    9. ',b' → logprob: -16.143203735351562
    10. ' б' → logprob: -16.643203735351562

Token 8: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008833789266645908
    2. ')' → logprob: -4.758833885192871
    3. '):
' → logprob: -8.633833885192871
    4. ',' → logprob: -11.133833885192871
    5. ':' → logprob: -11.258833885192871
    6. '   ' → logprob: -13.133833885192871
    7. '<|end|>' → logprob: -13.258833885192871
    8. ')>' → logprob: -13.633833885192871
    9. ' ):' → logprob: -13.633833885192871
    10. '):
' → logprob: -13.883833885192871

Token 9: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06778266280889511
    2. '   ' → logprob: -2.9427826404571533
    3. ' :' → logprob: -4.942782878875732
    4. ':
' → logprob: -6.067782878875732
    5. '):' → logprob: -7.567782878875732
    6. ':return' → logprob: -7.567782878875732
    7. '':' → logprob: -7.942782878875732
    8. '():' → logprob: -8.067782402038574
    9. ' return' → logprob: -8.442782402038574
    10. ' ' → logprob: -8.442782402038574

Token 10: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7713155746459961
    2. ' ' → logprob: -1.521315574645996
    3. ' if' → logprob: -1.521315574645996
    4. '    ' → logprob: -3.021315574645996
    5. '```' → logprob: -4.021315574645996
    6. ' 
' → logprob: -4.896315574645996
    7. 'if' → logprob: -5.396315574645996
    8. ' i' → logprob: -5.646315574645996
    9. ' while' → logprob: -6.021315574645996
    10. 'i' → logprob: -6.146315574645996

Token 11: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.44282475113868713
    2. ' a' → logprob: -1.0678247213363647
    3. 'b' → logprob: -4.942824840545654
    4. 'a' → logprob: -5.067824840545654
    5. ' ' → logprob: -7.442824840545654
    6. '(a' → logprob: -12.817824363708496
    7. ' (' → logprob: -13.067824363708496
    8. ' gcd' → logprob: -14.317824363708496
    9. ' not' → logprob: -14.442824363708496
    10. '  ' → logprob: -14.442824363708496

Token 12: ':
' (ID: 734)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.034328874200582504
    2. ':' → logprob: -4.159328937530518
    3. ' >' → logprob: -5.034328937530518
    4. '!=' → logprob: -5.409328937530518
    5. ' and' → logprob: -5.909328937530518
    6. '>' → logprob: -6.284328937530518
    7. '<|end|>' → logprob: -7.034328937530518
    8. ' ' → logprob: -7.534328937530518
    9. ' :' → logprob: -8.03432846069336
    10. ')' → logprob: -8.90932846069336

Token 13: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009509210474789143
    2. '    ' → logprob: -5.259509086608887
    3. '```' → logprob: -6.884509086608887
    4. 'a' → logprob: -7.759509086608887
    5. '   ' → logprob: -8.009509086608887
    6. ' 
' → logprob: -8.134509086608887
    7. ' =' → logprob: -8.384509086608887
    8. '\n' → logprob: -8.509509086608887
    9. '     ' → logprob: -8.509509086608887
    10. '\' → logprob: -8.509509086608887

Token 14: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5263269543647766
    2. 'a' (adapté à ' a') → logprob: -0.9013269543647766
    3. '       ' → logprob: -6.526327133178711
    4. '```' → logprob: -7.151327133178711
    5. '        ' → logprob: -8.776327133178711
    6. ' =' → logprob: -8.901327133178711
    7. '    ' → logprob: -8.901327133178711
    8. '           ' → logprob: -8.901327133178711
    9. '``' → logprob: -9.651327133178711
    10. '=a' → logprob: -10.276327133178711

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04998789355158806
    2. ' %=' → logprob: -3.29998779296875
    3. ' ,' → logprob: -4.92498779296875
    4. '%' → logprob: -6.17498779296875
    5. ' %' → logprob: -6.42498779296875
    6. '%=' → logprob: -7.79998779296875
    7. '%,' → logprob: -8.79998779296875
    8. '=' → logprob: -8.92498779296875
    9. ' %,' → logprob: -9.04998779296875
    10. ' =' → logprob: -10.04998779296875

Token 16: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5761756896972656
    2. ' b' → logprob: -0.8261756896972656
    3. '<|end|>' → logprob: -8.451175689697266
    4. ' ' → logprob: -11.201175689697266
    5. '<|end|>' → logprob: -11.951175689697266
    6. '>b' → logprob: -14.201175689697266
    7. 's' → logprob: -14.576175689697266
    8. '	b' → logprob: -15.201175689697266
    9. ' ' → logprob: -15.576175689697266
    10. 'space' → logprob: -15.701175689697266

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2811765670776367
    2. '=' → logprob: -1.4061765670776367
    3. ',' → logprob: -10.781176567077637
    4. '<|end|>' → logprob: -12.531176567077637
    5. '   ' → logprob: -14.906176567077637
    6. '<|end|>' → logprob: -15.281176567077637
    7. ')' → logprob: -15.406176567077637
    8. '       ' → logprob: -15.781176567077637
    9. ' ' → logprob: -15.906176567077637
    10. ' =
' → logprob: -15.906176567077637

Token 18: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.07889595627784729
    2. 'b' → logprob: -2.5788960456848145
    3. ' ' → logprob: -12.953895568847656
    4. ' ' → logprob: -13.703895568847656
    5. '```' → logprob: -13.703895568847656
    6. ',' → logprob: -15.578895568847656
    7. ' (' → logprob: -15.641395568847656
    8. '<|end|>' → logprob: -15.766395568847656
    9. '(b' → logprob: -15.828895568847656
    10. '0' → logprob: -16.016395568847656

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007614201866090298
    2. ' ,' → logprob: -4.8826141357421875
    3. '<|end|>' → logprob: -12.507614135742188
    4. ',
' → logprob: -13.382614135742188
    5. ' ' → logprob: -13.632614135742188
    6. ',a' → logprob: -15.007614135742188
    7. '`,' → logprob: -15.382614135742188
    8. '<|end|>' → logprob: -15.507614135742188
    9. 'a' → logprob: -15.882614135742188
    10. '‌,' → logprob: -15.882614135742188

Token 20: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.31326258182525635
    2. 'a' → logprob: -1.3132625818252563
    3. '	a' → logprob: -14.688262939453125
    4. ' ' → logprob: -14.938262939453125
    5. ' ' → logprob: -16.688262939453125
    6. '>a' → logprob: -17.813262939453125
    7. '```' → logprob: -18.688262939453125
    8. '<|end|>' → logprob: -18.688262939453125
    9. ')a' → logprob: -18.813262939453125
    10. ' а' → logprob: -18.813262939453125

Token 21: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.12095419317483902
    2. '%' → logprob: -2.2459542751312256
    3. '<|end|>' → logprob: -5.2459540367126465
    4. ' ' → logprob: -6.2459540367126465
    5. 'a' → logprob: -7.4959540367126465
    6. ' a' → logprob: -9.495954513549805
    7. ' %=' → logprob: -9.620954513549805
    8. '<|end|>' → logprob: -10.120954513549805
    9. '  ' → logprob: -10.245954513549805
    10. '%A' → logprob: -10.870954513549805

Token 22: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011047935113310814
    2. ' b' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.13604736328125
    4. '	b' → logprob: -19.76104736328125
    5. '  ' → logprob: -19.88604736328125
    6. ')b' → logprob: -20.88604736328125
    7. '>b' → logprob: -20.88604736328125
    8. '   ' → logprob: -21.01104736328125
    9. '%b' → logprob: -21.26104736328125
    10. '_b' → logprob: -21.38604736328125

Token 23: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7219697833061218
    2. '<|end|>' → logprob: -1.0969698429107666
    3. ' ' → logprob: -2.2219698429107666
    4. '```' → logprob: -4.4719696044921875
    5. 'newline' → logprob: -4.4719696044921875
    6. ' 
' → logprob: -4.5969696044921875
    7. '\' → logprob: -4.7219696044921875
    8. '   ' → logprob: -5.3469696044921875
    9. '2' → logprob: -5.7219696044921875
    10. '<|end|>' → logprob: -5.7219696044921875

Token 24: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48539042472839355
    2. '\n' → logprob: -1.7353904247283936
    3. '<|end|>' → logprob: -2.1103904247283936
    4. ' 
' → logprob: -3.2353904247283936
    5. '    ' → logprob: -4.735390663146973
    6. '   ' → logprob: -4.735390663146973
    7. '\' → logprob: -4.860390663146973
    8. ' \' → logprob: -5.360390663146973
    9. '  
' → logprob: -5.610390663146973
    10. '  ' → logprob: -6.235390663146973

Token 25: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.36629053950309753
    2. ' return' → logprob: -1.36629056930542
    3. '   ' → logprob: -2.99129056930542
    4. ' ' → logprob: -7.36629056930542
    5. ' 
' → logprob: -7.99129056930542
    6. ':return' → logprob: -9.241290092468262
    7. '    
' → logprob: -9.366290092468262
    8. '	return' → logprob: -9.491290092468262
    9. '```' → logprob: -9.866290092468262
    10. '    ' → logprob: -10.741290092468262

Token 26: ' abs' (ID: 8443)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6931481957435608
    2. ' a' → logprob: -0.6931481957435608
    3. ' ' → logprob: -14.443148612976074
    4. '	a' → logprob: -15.693148612976074
    5. ' ' → logprob: -15.818148612976074
    6. '_a' → logprob: -16.818147659301758
    7. 'space' → logprob: -18.068147659301758
    8. ',a' → logprob: -19.318147659301758
    9. '```' → logprob: -19.318147659301758
    10. 'а' → logprob: -19.443147659301758

Token 27: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5759645700454712
    2. '(' → logprob: -0.8259645700454712
    3. 'a' → logprob: -10.95096492767334
    4. ' (' → logprob: -13.20096492767334
    5. '(ab' → logprob: -13.82596492767334
    6. '(b' → logprob: -13.95096492767334
    7. '(
' → logprob: -13.95096492767334
    8. '(s' → logprob: -14.45096492767334
    9. '(x' → logprob: -14.57596492767334
    10. '(

' → logprob: -14.82596492767334

Token 28: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.5
    3. '))' → logprob: -17.25
    4. ')
' → logprob: -17.875
    5. ')))' → logprob: -18.75
    6. ')`' → logprob: -19.5
    7. ')return' → logprob: -19.875
    8. ')>' → logprob: -20.125
    9. '),' → logprob: -20.5
    10. '}' → logprob: -20.5

Token 29: 'def' (ID: 1314)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.7550415396690369
    2. '<|end|>' → logprob: -1.3800415992736816
    3. '
' → logprob: -1.8800415992736816
    4. 'def' → logprob: -3.1300415992736816
    5. '```' → logprob: -3.2550415992736816
    6. '\n' → logprob: -3.3800415992736816
    7. '<|end|>' → logprob: -6.255041599273682
    8. 'newline' → logprob: -6.380041599273682
    9. ' 

' → logprob: -6.505041599273682
    10. '#' → logprob: -7.005041599273682

Token 30: ' is' (ID: 382)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.10540435463190079
    2. ' gcd' → logprob: -2.6054043769836426
    3. ' g' → logprob: -5.730404376983643
    4. ' ' → logprob: -5.730404376983643
    5. ' main' → logprob: -5.730404376983643
    6. ' space' → logprob: -5.855404376983643
    7. ' calculate' → logprob: -5.980404376983643
    8. ' cop' → logprob: -6.105404376983643
    9. ' find' → logprob: -6.105404376983643
    10. ' add' → logprob: -6.855404376983643

Token 31: '_div' (ID: 36926)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.7172845005989075
    2. '_' → logprob: -1.8422844409942627
    3. '_c' → logprob: -1.8422844409942627
    4. '_pal' → logprob: -2.0922844409942627
    5. '_div' → logprob: -3.5922844409942627
    6. ' ' → logprob: -3.9672844409942627
    7. '_rel' → logprob: -4.717284679412842
    8. '_valid' → logprob: -6.092284679412842
    9. ' _' → logprob: -6.092284679412842
    10. ' cop' → logprob: -6.467284679412842

Token 32: 'isor' (ID: 65473)
  Prédit: 'isible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isible' → logprob: -1.1517960956552997e-05
    2. 'isable' → logprob: -12.500011444091797
    3. 'is' → logprob: -12.750011444091797
    4. 'isor' → logprob: -13.750011444091797
    5. 'ISIBLE' → logprob: -14.000011444091797
    6. '_' → logprob: -14.125011444091797
    7. 'ible' → logprob: -14.250011444091797
    8. ' is' → logprob: -14.875011444091797
    9. '```' → logprob: -15.000011444091797
    10. '   ' → logprob: -15.125011444091797

Token 33: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0025944423396140337
    2. '(a' → logprob: -6.002594470977783
    3. ' (' → logprob: -9.627593994140625
    4. '(x' → logprob: -10.627593994140625
    5. '(n' → logprob: -11.627593994140625
    6. '(value' → logprob: -12.752593994140625
    7. '(div' → logprob: -13.127593994140625
    8. '(d' → logprob: -13.502593994140625
    9. '(of' → logprob: -13.752593994140625
    10. '(b' → logprob: -13.752593994140625

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00380150368437171
    2. ' ,' → logprob: -5.628801345825195
    3. 'a' → logprob: -9.753801345825195
    4. '):' → logprob: -10.253801345825195
    5. ')' → logprob: -10.378801345825195
    6. ',a' → logprob: -10.878801345825195
    7. 'e' → logprob: -11.628801345825195
    8. ',)' → logprob: -12.003801345825195
    9. ',b' → logprob: -12.378801345825195
    10. 'u' → logprob: -12.503801345825195

Token 35: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12741129100322723
    2. ' n' → logprob: -2.127411365509033
    3. 'd' → logprob: -8.627410888671875
    4. '   ' → logprob: -9.252410888671875
    5. ' ' → logprob: -9.752410888671875
    6. 'k' → logprob: -10.252410888671875
    7. ' d' → logprob: -10.502410888671875
    8. 'a' → logprob: -10.627410888671875
    9. 'x' → logprob: -11.252410888671875
    10. '	n' → logprob: -11.502410888671875

Token 36: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00224243919365108
    2. ')' → logprob: -6.127242565155029
    3. ',' → logprob: -10.127242088317871
    4. ' ):' → logprob: -11.877242088317871
    5. '):
' → logprob: -12.377242088317871
    6. ':' → logprob: -12.752242088317871
    7. '   ' → logprob: -13.752242088317871
    8. '=' → logprob: -14.002242088317871
    9. '):
' → logprob: -15.627242088317871
    10. '),' → logprob: -16.127243041992188

Token 37: ' p' (ID: 275)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.4141873121261597
    2. 'd' → logprob: -1.5391873121261597
    3. ' d' → logprob: -2.289187431335449
    4. ' k' → logprob: -2.289187431335449
    5. ')' → logprob: -2.789187431335449
    6. ' )' → logprob: -2.789187431335449
    7. 'div' → logprob: -3.289187431335449
    8. '   ' → logprob: -3.539187431335449
    9. 'm' → logprob: -3.539187431335449
    10. 'x' → logprob: -4.164187431335449

Token 38: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017258725129067898
    2. ')' → logprob: -6.376725673675537
    3. ' ):' → logprob: -11.251726150512695
    4. '):
' → logprob: -12.001726150512695
    5. '=' → logprob: -13.501726150512695
    6. ',' → logprob: -14.251726150512695
    7. '   ' → logprob: -14.626726150512695
    8. ':' → logprob: -14.751726150512695
    9. '_' → logprob: -14.876726150512695
    10. ''):' → logprob: -15.126726150512695

Token 39: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.36000242829322815
    2. ' q' → logprob: -1.3600023984909058
    3. 'k' → logprob: -4.235002517700195
    4. 'd' → logprob: -4.985002517700195
    5. ' )' → logprob: -5.110002517700195
    6. ' d' → logprob: -5.485002517700195
    7. ')' → logprob: -5.610002517700195
    8. ' k' → logprob: -5.735002517700195
    9. ' ' → logprob: -6.485002517700195
    10. ' ):' → logprob: -7.235002517700195

Token 40: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015548591036349535
    2. ')' → logprob: -6.5015549659729
    3. ':' → logprob: -10.751554489135742
    4. ' ):' → logprob: -11.126554489135742
    5. '):
' → logprob: -11.626554489135742
    6. '   ' → logprob: -12.501554489135742
    7. ',' → logprob: -14.001554489135742
    8. ''):' → logprob: -14.376554489135742
    9. ' ' → logprob: -15.251554489135742
    10. ')：' → logprob: -15.376554489135742

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10086578875780106
    2. ':' → logprob: -2.7258658409118652
    3. '    ' → logprob: -3.9758658409118652
    4. ' ' → logprob: -5.600865840911865
    5. ' 
' → logprob: -6.350865840911865
    6. '<|end|>' → logprob: -6.725865840911865
    7. ' :' → logprob: -6.850865840911865
    8. ' return' → logprob: -6.975865840911865
    9. ':return' → logprob: -7.475865840911865
    10. ' (' → logprob: -7.475865840911865

Token 42: ' norm' (ID: 7882)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.09807266294956207
    2. '    ' → logprob: -3.3480727672576904
    3. ' ' → logprob: -3.7230727672576904
    4. '   ' → logprob: -4.348072528839111
    5. 'return' → logprob: -4.473072528839111
    6. ' (' → logprob: -5.223072528839111
    7. ' p' → logprob: -6.348072528839111
    8. ' m' → logprob: -6.848072528839111
    9. ' 
' → logprob: -6.973072528839111
    10. ' if' → logprob: -9.09807300567627

Token 43: ' =' (ID: 314)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.16983895003795624
    2. ' =' → logprob: -2.1698389053344727
    3. '=' → logprob: -3.4198389053344727
    4. '   ' → logprob: -5.419838905334473
    5. '_a' → logprob: -6.669838905334473
    6. 'a' → logprob: -7.544838905334473
    7. '=(' → logprob: -7.919838905334473
    8. 'ed' → logprob: -7.919838905334473
    9. '_factor' → logprob: -8.544838905334473
    10. '1' → logprob: -8.544838905334473

Token 44: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.41326114535331726
    2. ' p' → logprob: -2.0382611751556396
    3. ' abs' → logprob: -2.4132611751556396
    4. ' max' → logprob: -2.9132611751556396
    5. ' (' → logprob: -3.5382611751556396
    6. 'm' → logprob: -4.1632609367370605
    7. 'abs' → logprob: -5.1632609367370605
    8. ' n' → logprob: -5.4132609367370605
    9. ' min' → logprob: -5.9132609367370605
    10. 'p' → logprob: -6.0382609367370605

Token 45: '*m' (ID: 85049)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.36295291781425476
    2. '*' → logprob: -1.8629529476165771
    3. '*q' → logprob: -2.237952947616577
    4. '*p' → logprob: -3.487952947616577
    5. '//' → logprob: -5.862952709197998
    6. '*n' → logprob: -6.487952709197998
    7. ' %' → logprob: -6.487952709197998
    8. ' /' → logprob: -6.612952709197998
    9. '**' → logprob: -6.862952709197998
    10. ' //' → logprob: -6.987952709197998

Token 46: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6327235102653503
    2. ' +' → logprob: -0.7577235102653503
    3. '*' → logprob: -9.882723808288574
    4. '+n' → logprob: -10.757723808288574
    5. '>' → logprob: -11.382723808288574
    6. '+p' → logprob: -11.507723808288574
    7. ' ' → logprob: -11.632723808288574
    8. '   ' → logprob: -12.757723808288574
    9. '-' → logprob: -12.757723808288574
    10. '<|end|>' → logprob: -13.507723808288574

Token 47: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0032017158810049295
    2. ' n' → logprob: -5.753201484680176
    3. 'q' → logprob: -11.003201484680176
    4. 'p' → logprob: -12.878201484680176
    5. '	n' → logprob: -13.378201484680176
    6. '   ' → logprob: -14.003201484680176
    7. ' ' → logprob: -14.003201484680176
    8. '4' → logprob: -14.878201484680176
    9. '_n' → logprob: -15.628201484680176
    10. '(n' → logprob: -15.753201484680176

Token 48: '*n' (ID: 58470)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7953150868415833
    2. '*p' → logprob: -1.2953150272369385
    3. '*q' → logprob: -1.5453150272369385
    4. '**' → logprob: -2.9203150272369385
    5. '*n' → logprob: -5.170315265655518
    6. '*m' → logprob: -6.795315265655518
    7. '*b' → logprob: -7.545315265655518
    8. '*a' → logprob: -9.04531478881836
    9. '*j' → logprob: -11.04531478881836
    10. '*u' → logprob: -11.04531478881836

Token 49: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9617682695388794
    2. ' ' → logprob: -1.5867682695388794
    3. '+' → logprob: -2.46176815032959
    4. '<|end|>' → logprob: -2.46176815032959
    5. ')' → logprob: -3.08676815032959
    6. ' +' → logprob: -3.71176815032959
    7. ',' → logprob: -3.83676815032959
    8. ' 
' → logprob: -3.96176815032959
    9. '==' → logprob: -4.33676815032959
    10. '*' → logprob: -4.33676815032959

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15038582682609558
    2. ' ' → logprob: -2.525385856628418
    3. ' if' → logprob: -4.025385856628418
    4. '*' → logprob: -4.650385856628418
    5. ' *' → logprob: -4.650385856628418
    6. '<|end|>' → logprob: -5.400385856628418
    7. '    ' → logprob: -5.775385856628418
    8. ' return' → logprob: -6.025385856628418
    9. '
' → logprob: -6.150385856628418
    10. '    
' → logprob: -6.525385856628418

Token 51: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4256476163864136
    2. ' if' → logprob: -1.4256476163864136
    3. ' return' → logprob: -2.800647735595703
    4. ' norm' → logprob: -3.800647735595703
    5. 'return' → logprob: -4.800647735595703
    6. 'if' (adapté à ' if') → logprob: -5.300647735595703
    7. '```' → logprob: -5.550647735595703
    8. 'norm' → logprob: -6.925647735595703
    9. '    ' → logprob: -7.050647735595703
    10. ' ' → logprob: -7.425647735595703

Token 52: ' norm' (ID: 7882)
  Prédit: ' norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' norm' → logprob: -0.6347159147262573
    2. ' (' → logprob: -0.8847159147262573
    3. '(norm' → logprob: -3.759716033935547
    4. ' p' → logprob: -3.884716033935547
    5. 'norm' → logprob: -5.134716033935547
    6. '(p' → logprob: -6.259716033935547
    7. '(' → logprob: -6.634716033935547
    8. ' not' → logprob: -7.009716033935547
    9. 'p' → logprob: -7.134716033935547
    10. ' q' → logprob: -7.134716033935547

Token 53: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06273903697729111
    2. '==' → logprob: -2.812739133834839
    3. ' >' → logprob: -8.562739372253418
    4. ' ' → logprob: -8.812739372253418
    5. ' !=' → logprob: -8.812739372253418
    6. ' <=' → logprob: -9.687739372253418
    7. '>' → logprob: -9.937739372253418
    8. ' <' → logprob: -10.437739372253418
    9. ':' → logprob: -10.562739372253418
    10. '.' → logprob: -10.812739372253418

Token 54: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2519404888153076
    2. ' ' → logprob: -1.5019404888153076
    3. ' p' → logprob: -12.251940727233887
    4. '   ' → logprob: -13.251940727233887
    5. '<|end|>' → logprob: -13.939440727233887
    6. '    ' → logprob: -14.126940727233887
    7. '1' → logprob: -14.189440727233887
    8. '۰' → logprob: -14.751940727233887
    9. ' q' → logprob: -15.251940727233887
    10. '  ' → logprob: -15.376940727233887

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002666999935172498
    2. ' ' → logprob: -8.250267028808594
    3. '   ' → logprob: -12.500267028808594
    4. '<|end|>' → logprob: -14.875267028808594
    5. '۰' → logprob: -15.250267028808594
    6. '    ' → logprob: -15.625267028808594
    7. '  ' → logprob: -15.625267028808594
    8. '00' → logprob: -16.250267028808594
    9. '1' → logprob: -16.375267028808594
    10. '٠' → logprob: -16.500267028808594

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004173729568719864
    2. ' :' → logprob: -6.254173755645752
    3. ':return' → logprob: -6.254173755645752
    4. ':
' → logprob: -8.754173278808594
    5. '   ' → logprob: -9.129173278808594
    6. ' or' → logprob: -10.254173278808594
    7. '       ' → logprob: -12.004173278808594
    8. '):' → logprob: -12.379173278808594
    9. ' and' → logprob: -13.129173278808594
    10. ' :
' → logprob: -13.504173278808594

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034732285887002945
    2. ':' → logprob: -3.4097323417663574
    3. ':return' → logprob: -8.0347318649292
    4. '   ' → logprob: -8.4097318649292
    5. ':
' → logprob: -8.4097318649292
    6. ',' → logprob: -9.2847318649292
    7. ' return' → logprob: -9.9097318649292
    8. '<|end|>' → logprob: -10.0347318649292
    9. ' or' → logprob: -10.6597318649292
    10. ' and' → logprob: -10.9097318649292

Token 58: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40503621101379395
    2. ' return' → logprob: -1.155036211013794
    3. 'return' (adapté à ' return') → logprob: -4.030035972595215
    4. ' ' → logprob: -9.280035972595215
    5. '   ' → logprob: -10.530035972595215
    6. ':return' → logprob: -10.780035972595215
    7. '        ' → logprob: -10.905035972595215
    8. '    ' → logprob: -11.530035972595215
    9. '	return' → logprob: -11.530035972595215
    10. ' ' → logprob: -11.780035972595215

Token 59: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.6935675740242004
    2. 'False' → logprob: -0.6935675740242004
    3. ' True' → logprob: -8.068567276000977
    4. 'True' → logprob: -9.193567276000977
    5. ' None' → logprob: -13.568567276000977
    6. '(False' → logprob: -13.568567276000977
    7. ' ' → logprob: -13.943567276000977
    8. '0' → logprob: -14.193567276000977
    9. 'None' → logprob: -14.318567276000977
    10. ' false' → logprob: -15.943567276000977

Token 60: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13184842467308044
    2. '<|end|>' → logprob: -2.8818483352661133
    3. '    
' → logprob: -3.5068483352661133
    4. '
' → logprob: -3.5068483352661133
    5. '  
' → logprob: -6.506848335266113
    6. '\n' → logprob: -6.881848335266113
    7. '<|end|>' → logprob: -6.881848335266113
    8. '   
' → logprob: -7.256848335266113
    9. ' 
' → logprob: -7.256848335266113
    10. ',' → logprob: -7.631848335266113

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025166703388094902
    2. '    
' → logprob: -4.4001665115356445
    3. '<|end|>' → logprob: -4.9001665115356445
    4. '
' → logprob: -5.6501665115356445
    5. '  
' → logprob: -7.9001665115356445
    6. '\n' → logprob: -8.150166511535645
    7. '   
' → logprob: -8.275166511535645
    8. ' ' → logprob: -9.025166511535645
    9. '<|end|>' → logprob: -9.025166511535645
    10. ' 
' → logprob: -9.275166511535645

Token 62: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30714377760887146
    2. ' return' → logprob: -2.4321436882019043
    3. ' dot' → logprob: -3.6821436882019043
    4. ' dp' → logprob: -3.6821436882019043
    5. ' x' → logprob: -3.8071436882019043
    6. 'return' → logprob: -4.057143688201904
    7. ' r' → logprob: -4.182143688201904
    8. ' norm' → logprob: -4.432143688201904
    9. 'dot' → logprob: -5.307143688201904
    10. '    
' → logprob: -5.432143688201904

Token 63: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07368101924657822
    2. 'q' → logprob: -4.323680877685547
    3. 'qrt' → logprob: -4.323680877685547
    4. '=' → logprob: -4.573680877685547
    5. 'quared' → logprob: -4.823680877685547
    6. 'um' → logprob: -4.948680877685547
    7. 'calar' → logprob: -5.448680877685547
    8. 'qr' → logprob: -5.573680877685547
    9. '   ' → logprob: -5.823680877685547
    10. 'quare' → logprob: -6.073680877685547

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06258205324411392
    2. '=' → logprob: -2.812582015991211
    3. ',' → logprob: -7.437582015991211
    4. ' ' → logprob: -11.812582015991211
    5. '1' → logprob: -12.562582015991211
    6. 'p' → logprob: -12.687582015991211
    7. 's' → logprob: -12.937582015991211
    8. '=s' → logprob: -13.687582015991211
    9. ' ==' → logprob: -13.812582015991211
    10. ' ,' → logprob: -13.812582015991211

Token 65: ' m' (ID: 284)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9463648200035095
    2. 'm' → logprob: -1.1963648796081543
    3. ' p' → logprob: -2.1963648796081543
    4. ' m' → logprob: -2.3213648796081543
    5. '(m' → logprob: -3.1963648796081543
    6. '(p' → logprob: -3.4463648796081543
    7. ' (' → logprob: -3.6963648796081543
    8. '   ' → logprob: -7.071364879608154
    9. '(' → logprob: -7.571364879608154
    10. '2' → logprob: -7.946364879608154

Token 66: '*p' (ID: 72579)
  Prédit: '*p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*p' → logprob: -0.0232771597802639
    2. '*' → logprob: -4.023277282714844
    3. ' *' → logprob: -5.773277282714844
    4. '*q' → logprob: -6.273277282714844
    5. 'p' → logprob: -9.648277282714844
    6. '%' → logprob: -10.273277282714844
    7. '*n' → logprob: -12.148277282714844
    8. '**' → logprob: -12.398277282714844
    9. '==' → logprob: -13.148277282714844
    10. '*s' → logprob: -13.398277282714844

Token 67: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4756419360637665
    2. '-' → logprob: -1.4756419658660889
    3. '+' → logprob: -2.475641965866089
    4. ' +' → logprob: -2.725641965866089
    5. ' ' → logprob: -8.725642204284668
    6. '+n' → logprob: -10.975642204284668
    7. '-n' → logprob: -11.100642204284668
    8. '1' → logprob: -11.475642204284668
    9. '  ' → logprob: -11.975642204284668
    10. '>' → logprob: -12.100642204284668

Token 68: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014468450099229813
    2. ' n' → logprob: -4.264468669891357
    3. '<|end|>' → logprob: -8.1394681930542
    4. '<|end|>' → logprob: -11.6394681930542
    5. '	n' → logprob: -13.3894681930542
    6. '_n' → logprob: -13.5144681930542
    7. ' ' → logprob: -14.5144681930542
    8. '   ' → logprob: -15.7644681930542
    9. ',n' → logprob: -16.264469146728516
    10. ')n' → logprob: -16.514469146728516

Token 69: '*q' (ID: 136288)
  Prédit: '*q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*q' → logprob: -0.0061407838948071
    2. 'q' → logprob: -5.50614070892334
    3. '*' → logprob: -6.25614070892334
    4. ' *' → logprob: -9.00614070892334
    5. ' q' → logprob: -11.25614070892334
    6. '&q' → logprob: -13.38114070892334
    7. '<|end|>' → logprob: -13.50614070892334
    8. '	q' → logprob: -13.75614070892334
    9. '?q' → logprob: -13.88114070892334
    10. ''q' → logprob: -15.25614070892334

Token 70: '
' (ID: 198)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5568832755088806
    2. ' ' → logprob: -1.6818833351135254
    3. ' %' → logprob: -2.3068833351135254
    4. '   ' → logprob: -2.5568833351135254
    5. '<|end|>' → logprob: -3.5568833351135254
    6. '==' → logprob: -4.306883335113525
    7. ' >=' → logprob: -5.056883335113525
    8. ' <=' → logprob: -5.556883335113525
    9. '%' → logprob: -5.931883335113525
    10. '  ' → logprob: -6.056883335113525

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5036489367485046
    2. ' ' → logprob: -1.3786489963531494
    3. ' 
' → logprob: -3.2536489963531494
    4. '<|end|>' → logprob: -3.2536489963531494
    5. '
' → logprob: -3.5036489963531494
    6. ' ==' → logprob: -5.25364875793457
    7. ' >=' → logprob: -5.25364875793457
    8. ' <' → logprob: -5.50364875793457
    9. '    ' → logprob: -5.50364875793457
    10. '  
' → logprob: -5.62864875793457

Token 72: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5619199275970459
    2. ' return' → logprob: -2.061919927597046
    3. '<|end|>' → logprob: -2.061919927597046
    4. ' ' → logprob: -2.436919927597046
    5. 'return' → logprob: -3.686919927597046
    6. ' if' → logprob: -3.686919927597046
    7. ' s' → logprob: -3.811919927597046
    8. 's' (adapté à ' s') → logprob: -5.811920166015625
    9. '  ' → logprob: -6.436920166015625
    10. '    ' → logprob: -6.436920166015625

Token 73: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9633219838142395
    2. '1' → logprob: -1.7133219242095947
    3. '=' → logprob: -1.9633219242095947
    4. ' ' → logprob: -2.7133219242095947
    5. ' *' → logprob: -2.7133219242095947
    6. 's' → logprob: -3.0883219242095947
    7. '<|end|>' → logprob: -3.4633219242095947
    8. '*' → logprob: -3.7133219242095947
    9. '   ' → logprob: -3.7133219242095947
    10. ',' → logprob: -4.463322162628174

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0046523879282176495
    2. '=' → logprob: -5.379652500152588
    3. ' ' → logprob: -11.12965202331543
    4. ',' → logprob: -11.87965202331543
    5. '   ' → logprob: -12.62965202331543
    6. '<|end|>' → logprob: -13.25465202331543
    7. 's' → logprob: -13.62965202331543
    8. ':' → logprob: -14.25465202331543
    9. 'def' → logprob: -14.37965202331543
    10. ' =
' → logprob: -14.62965202331543

Token 75: ' m' (ID: 284)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6192914843559265
    2. 'n' → logprob: -0.9942914843559265
    3. 'p' → logprob: -3.3692915439605713
    4. 'q' → logprob: -4.494291305541992
    5. ' p' → logprob: -4.494291305541992
    6. ' -' → logprob: -4.744291305541992
    7. 'm' → logprob: -4.869291305541992
    8. '-' → logprob: -4.869291305541992
    9. ' m' → logprob: -5.494291305541992
    10. '-n' → logprob: -5.744291305541992

Token 76: '*q' (ID: 136288)
  Prédit: '*q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*q' → logprob: -0.0057066925801336765
    2. '*' → logprob: -5.255706787109375
    3. '*(-' → logprob: -8.130706787109375
    4. 'q' → logprob: -9.380706787109375
    5. '*-' → logprob: -10.005706787109375
    6. '*p' → logprob: -10.380706787109375
    7. ' *' → logprob: -12.130706787109375
    8. '*n' → logprob: -12.130706787109375
    9. '*s' → logprob: -13.130706787109375
    10. '*(' → logprob: -13.630706787109375

Token 77: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22547979652881622
    2. ' -' → logprob: -1.6004798412322998
    3. '<|end|>' → logprob: -9.850480079650879
    4. '-s' → logprob: -12.850480079650879
    5. '+' → logprob: -12.975480079650879
    6. '-p' → logprob: -13.100480079650879
    7. ' ' → logprob: -13.850480079650879
    8. '*' → logprob: -14.600480079650879
    9. '-python' → logprob: -14.600480079650879
    10. '-q' → logprob: -14.975480079650879

Token 78: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023256659507751465
    2. ' n' → logprob: -3.773256778717041
    3. 'p' → logprob: -12.023256301879883
    4. '<|end|>' → logprob: -13.523256301879883
    5. 'np' → logprob: -13.773256301879883
    6. '	n' → logprob: -14.148256301879883
    7. ' ' → logprob: -14.273256301879883
    8. '   ' → logprob: -14.648256301879883
    9. '_n' → logprob: -15.398256301879883
    10. '  ' → logprob: -15.523256301879883

Token 79: '*p' (ID: 72579)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.856408536899835e-05
    2. ' p' → logprob: -10.500028610229492
    3. '*p' → logprob: -14.250028610229492
    4. 'q' → logprob: -16.625028610229492
    5. '<|end|>' → logprob: -16.750028610229492
    6. '<p' → logprob: -17.125028610229492
    7. ''p' → logprob: -17.500028610229492
    8. '_p' → logprob: -17.500028610229492
    9. '	p' → logprob: -17.625028610229492
    10. '   ' → logprob: -18.125028610229492

Token 80: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010174150578677654
    2. ' ==' → logprob: -5.13517427444458
    3. ' return' → logprob: -6.76017427444458
    4. ' %' → logprob: -6.76017427444458
    5. ' ' → logprob: -7.38517427444458
    6. '==' → logprob: -7.63517427444458
    7. '    ' → logprob: -8.510173797607422
    8. '  ' → logprob: -8.885173797607422
    9. '%' → logprob: -9.260173797607422
    10. '=' → logprob: -9.385173797607422

Token 81: '   ' (ID: 271)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.872218132019043
    2. '   ' → logprob: -1.622218132019043
    3. '<|end|>' → logprob: -1.747218132019043
    4. ' ==' → logprob: -2.622218132019043
    5. '
' → logprob: -2.872218132019043
    6. '%' → logprob: -3.122218132019043
    7. ' ' → logprob: -3.872218132019043
    8. '==' → logprob: -5.122218132019043
    9. ' 
' → logprob: -6.747218132019043
    10. ' <=' → logprob: -6.747218132019043

Token 82: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6656045317649841
    2. ' return' → logprob: -0.9156045317649841
    3. ' ' → logprob: -3.040604591369629
    4. 'return' → logprob: -3.915604591369629
    5. '    ' → logprob: -5.415604591369629
    6. ' if' → logprob: -5.540604591369629
    7. ' %' → logprob: -6.290604591369629
    8. ' s' → logprob: -6.915604591369629
    9. ' 
' → logprob: -6.915604591369629
    10. '  ' → logprob: -7.040604591369629

Token 83: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.027335628867149353
    2. 's' → logprob: -3.9023356437683105
    3. ' (' → logprob: -5.2773356437683105
    4. '(s' → logprob: -6.5273356437683105
    5. ' abs' → logprob: -9.277335166931152
    6. ' ' → logprob: -10.152335166931152
    7. '(' → logprob: -10.527335166931152
    8. 'abs' → logprob: -11.277335166931152
    9. '   ' → logprob: -11.777335166931152
    10. ' norm' → logprob: -12.589835166931152

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00402021873742342
    2. '2' → logprob: -5.6290202140808105
    3. ' ' → logprob: -8.504020690917969
    4. '_' → logprob: -9.629020690917969
    5. '**' → logprob: -10.066520690917969
    6. 's' → logprob: -10.254020690917969
    7. '%' → logprob: -11.754020690917969
    8. '```' → logprob: -11.754020690917969
    9. ' s' → logprob: -12.004020690917969
    10. '   ' → logprob: -12.191520690917969

Token 85: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.047635555267333984
    2. '%' → logprob: -3.297635555267334
    3. ' ' → logprob: -5.297635555267334
    4. '*' → logprob: -6.297635555267334
    5. ' *' → logprob: -6.297635555267334
    6. ' ==' → logprob: -7.422635555267334
    7. '**' → logprob: -8.922636032104492
    8. '==' → logprob: -9.797636032104492
    9. ' **' → logprob: -10.547636032104492
    10. '%s' → logprob: -11.297636032104492

Token 86: ' norm' (ID: 7882)
  Prédit: ' norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' norm' → logprob: -0.5761168599128723
    2. 'norm' → logprob: -0.8261168599128723
    3. '(norm' → logprob: -8.701116561889648
    4. '2' → logprob: -11.826116561889648
    5. ' ' → logprob: -13.201116561889648
    6. '1' → logprob: -14.201116561889648
    7. '   ' → logprob: -15.451116561889648
    8. '.norm' → logprob: -15.701116561889648
    9. '  ' → logprob: -15.826116561889648
    10. 'n' → logprob: -16.07611656188965

Token 87: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3900507092475891
    2. '!=' → logprob: -1.2650506496429443
    3. ' !=' → logprob: -3.6400506496429443
    4. ' ==' → logprob: -4.265050888061523
    5. ' or' → logprob: -8.515050888061523
    6. '=' → logprob: -8.765050888061523
    7. ' ' → logprob: -11.015050888061523
    8. 'and' → logprob: -11.765050888061523
    9. '===' → logprob: -11.890050888061523
    10. ':' → logprob: -12.015050888061523

Token 88: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2519313097000122
    2. ' ' → logprob: -1.5019313097000122
    3. '<|end|>' → logprob: -14.001931190490723
    4. ' ' → logprob: -15.126931190490723
    5. '   ' → logprob: -15.251931190490723
    6. '  ' → logprob: -15.251931190490723
    7. '=' → logprob: -15.501931190490723
    8. '```' → logprob: -15.939431190490723
    9. ')' → logprob: -16.56443214416504
    10. '	' → logprob: -17.00193214416504

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -17.250139236450195
    4. '  ' → logprob: -18.375139236450195
    5. '۰' → logprob: -19.125139236450195
    6. '```' → logprob: -19.687639236450195
    7. 'zero' → logprob: -19.812639236450195
    8. '  ' → logprob: -20.000139236450195
    9. '00' → logprob: -20.125139236450195
    10. '    ' → logprob: -20.312639236450195

Token 90: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05269082635641098
    2. ':return' → logprob: -3.4276907444000244
    3. ' or' → logprob: -4.8026909828186035
    4. ' and' → logprob: -5.4276909828186035
    5. '   ' → logprob: -5.8026909828186035
    6. ':
' → logprob: -6.8026909828186035
    7. '<|end|>' → logprob: -6.9276909828186035
    8. ' :' → logprob: -7.9276909828186035
    9. '       ' → logprob: -8.552690505981445
    10. ' return' → logprob: -8.927690505981445

Token 91: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.06995799392461777
    2. 's' → logprob: -2.694957971572876
    3. '(s' → logprob: -11.319957733154297
    4. ' (' → logprob: -12.444957733154297
    5. ' ' → logprob: -13.319957733154297
    6. '    ' → logprob: -13.569957733154297
    7. ''s' → logprob: -13.819957733154297
    8. ' ' → logprob: -14.819957733154297
    9. '<|end|>' → logprob: -15.194957733154297
    10. '   ' → logprob: -15.694957733154297

Token 92: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.958325295476243e-05
    2. 's' → logprob: -10.500079154968262
    3. '%' → logprob: -10.750079154968262
    4. ' ' → logprob: -11.250079154968262
    5. '1' → logprob: -12.250079154968262
    6. '_' → logprob: -12.500079154968262
    7. '   ' → logprob: -13.000079154968262
    8. ' s' → logprob: -13.000079154968262
    9. '```' → logprob: -13.750079154968262
    10. '₂' → logprob: -13.875079154968262

Token 93: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.011228079907596111
    2. '%' → logprob: -4.511228084564209
    3. ' ' → logprob: -8.63622760772705
    4. '<|end|>' → logprob: -13.26122760772705
    5. ' %#' → logprob: -14.63622760772705
    6. ' %=' → logprob: -15.76122760772705
    7. ' ' → logprob: -16.386228561401367
    8. '  ' → logprob: -16.886228561401367
    9. ' `%' → logprob: -17.136228561401367
    10. '<|end|>' → logprob: -17.636228561401367

Token 94: ' norm' (ID: 7882)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.4741760492324829
    2. ' norm' → logprob: -0.9741760492324829
    3. '(norm' → logprob: -9.224176406860352
    4. '.norm' → logprob: -15.599176406860352
    5. '_norm' → logprob: -15.974176406860352
    6. '```' → logprob: -17.47417640686035
    7. 'n' → logprob: -17.59917640686035
    8. ' norms' → logprob: -17.97417640686035
    9. ' ' → logprob: -18.22417640686035
    10. ' norma' → logprob: -18.72417640686035

Token 95: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.020679574459791183
    2. '!=' → logprob: -3.895679473876953
    3. ')!=' → logprob: -10.145679473876953
    4. ' ' → logprob: -10.395679473876953
    5. '<|end|>' → logprob: -10.520679473876953
    6. '()!=' → logprob: -11.270679473876953
    7. ')' → logprob: -11.645679473876953
    8. ' !==' → logprob: -12.395679473876953
    9. ']!=' → logprob: -13.020679473876953
    10. '  ' → logprob: -13.145679473876953

Token 96: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0059287971816957
    2. ' ' → logprob: -5.130928993225098
    3. ' ' → logprob: -16.88092803955078
    4. '   ' → logprob: -17.13092803955078
    5. '۰' → logprob: -17.63092803955078
    6. '<|end|>' → logprob: -18.25592803955078
    7. 'not' → logprob: -18.50592803955078
    8. '  ' → logprob: -18.75592803955078
    9. ' not' → logprob: -18.88092803955078
    10. ' ' → logprob: -19.00592803955078

Token 97: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020389800192788243
    2. ' ' → logprob: -8.500204086303711
    3. '<|end|>' → logprob: -16.00020408630371
    4. '   ' → logprob: -16.75020408630371
    5. '۰' → logprob: -17.00020408630371
    6. '012' → logprob: -18.18770408630371
    7. '٠' → logprob: -18.18770408630371
    8. '  ' → logprob: -18.25020408630371
    9. '```' → logprob: -18.68770408630371
    10. '０' → logprob: -18.93770408630371

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013948804698884487
    2. ':return' → logprob: -7.251394748687744
    3. ':
' → logprob: -7.376394748687744
    4. '   ' → logprob: -10.251395225524902
    5. '):' → logprob: -11.001395225524902
    6. ' :' → logprob: -12.626395225524902
    7. '       ' → logprob: -14.001395225524902
    8. ' return' → logprob: -14.126395225524902
    9. '):
' → logprob: -14.501395225524902
    10. ':**' → logprob: -15.126395225524902

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043424684554338455
    2. '   ' → logprob: -3.168424606323242
    3. ' return' → logprob: -9.668424606323242
    4. '
' → logprob: -9.918424606323242
    5. '    
' → logprob: -10.043424606323242
    6. ' 
' → logprob: -10.043424606323242
    7. '\n' → logprob: -10.043424606323242
    8. '```' → logprob: -10.168424606323242
    9. '        
' → logprob: -10.543424606323242
    10. '    ' → logprob: -11.043424606323242

Token 100: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39410141110420227
    2. '   ' → logprob: -1.2691013813018799
    3. ' return' → logprob: -3.14410138130188
    4. 'return' (adapté à ' return') → logprob: -7.269101619720459
    5. '    ' → logprob: -7.769101619720459
    6. ' ' → logprob: -9.3941011428833
    7. '```' → logprob: -9.5191011428833
    8. '           ' → logprob: -10.0191011428833
    9. ' 
' → logprob: -10.1441011428833
    10. '	return' → logprob: -10.2691011428833

Token 101: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.011047814972698689
    2. ' False' → logprob: -4.511047840118408
    3. 'True' → logprob: -17.26104736328125
    4. '(False' → logprob: -18.63604736328125
    5. ' ' → logprob: -20.38604736328125
    6. 'F' → logprob: -20.88604736328125
    7. ' True' → logprob: -21.01104736328125
    8. '=False' → logprob: -21.38604736328125
    9. 'None' → logprob: -21.88604736328125
    10. '_false' → logprob: -22.38604736328125

Token 102: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008475062204524875
    2. '\n' → logprob: -7.500847339630127
    3. '    
' → logprob: -8.875847816467285
    4. '
' → logprob: -9.750847816467285
    5. '  
' → logprob: -10.500847816467285
    6. '  ' → logprob: -11.000847816467285
    7. '<|end|>' → logprob: -11.500847816467285
    8. '   
' → logprob: -11.750847816467285
    9. '```' → logprob: -12.000847816467285
    10. '	return' → logprob: -12.125847816467285

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005171707598492503
    2. '    
' → logprob: -8.125516891479492
    3. '\n' → logprob: -9.875516891479492
    4. '
' → logprob: -9.875516891479492
    5. '  ' → logprob: -10.625516891479492
    6. '<|end|>' → logprob: -10.625516891479492
    7. '   
' → logprob: -10.875516891479492
    8. '  
' → logprob: -10.875516891479492
    9. ' 
' → logprob: -12.125516891479492
    10. '       ' → logprob: -12.125516891479492

Token 104: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.541112427134067e-05
    2. 'return' (adapté à ' return') → logprob: -10.875075340270996
    3. '\n' → logprob: -11.000075340270996
    4. '    
' → logprob: -11.250075340270996
    5. ' return' → logprob: -11.250075340270996
    6. '	return' → logprob: -12.375075340270996
    7. '<|end|>' → logprob: -13.250075340270996
    8. '  ' → logprob: -13.750075340270996
    9. '       ' → logprob: -13.750075340270996
    10. ')' → logprob: -13.875075340270996

Token 105: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.6931517124176025
    2. ' True' → logprob: -0.6931517124176025
    3. '(True' → logprob: -12.693151473999023
    4. '   ' → logprob: -13.693151473999023
    5. 'Tr' → logprob: -15.568151473999023
    6. ' Tru' → logprob: -16.193151473999023
    7. ' ' → logprob: -18.193151473999023
    8. ' Tr' → logprob: -18.318151473999023
    9. ' ' → logprob: -19.068151473999023
    10. '1' → logprob: -19.318151473999023

Token 106: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008479825221002102
    2. '#' → logprob: -5.758479595184326
    3. 'import' → logprob: -6.383479595184326
    4. '<|end|>' → logprob: -6.383479595184326
    5. '```' → logprob: -6.758479595184326
    6. 'm' → logprob: -8.008480072021484
    7. 'for' → logprob: -9.758480072021484
    8. 'n' → logprob: -9.883480072021484
    9. 'print' → logprob: -10.133480072021484
    10. 'a' → logprob: -10.258480072021484

Token 108: ' count' (ID: 3605)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4733025133609772
    2. ' l' → logprob: -2.3483026027679443
    3. ' complex' → logprob: -2.3483026027679443
    4. 'complex' → logprob: -3.2233026027679443
    5. 'main' → logprob: -3.5983026027679443
    6. ' find' → logprob: -4.098302364349365
    7. ' is' → logprob: -4.223302364349365
    8. ' solve' → logprob: -4.348302364349365
    9. ' gcd' → logprob: -4.348302364349365
    10. 'l' → logprob: -4.973302364349365

Token 109: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.06851305067539215
    2. '(' → logprob: -3.0685131549835205
    3. '_f' → logprob: -4.568512916564941
    4. '_' → logprob: -5.818512916564941
    5. '(_' → logprob: -6.568512916564941
    6. 'div' → logprob: -6.818512916564941
    7. '_pairs' → logprob: -7.568512916564941
    8. '_dist' → logprob: -7.943512916564941
    9. '(div' → logprob: -8.068512916564941
    10. '<|end|>' → logprob: -8.318512916564941

Token 110: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.13985265791416168
    2. '```' → logprob: -2.51485276222229
    3. '(' → logprob: -4.389852523803711
    4. 'isible' → logprob: -4.764852523803711
    5. 'idors' → logprob: -5.639852523803711
    6. 'iders' → logprob: -5.764852523803711
    7. '(is' → logprob: -5.889852523803711
    8. 'ectors' → logprob: -6.264852523803711
    9. 's' → logprob: -6.764852523803711
    10. 'ors' → logprob: -6.764852523803711

Token 111: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.0007671024068258703
    2. '```' → logprob: -8.50076675415039
    3. 'tors' → logprob: -8.87576675415039
    4. 'def' → logprob: -9.00076675415039
    5. 'or' → logprob: -9.25076675415039
    6. '   ' → logprob: -9.37576675415039
    7. 'div' → logprob: -11.62576675415039
    8. 'd' → logprob: -11.75076675415039
    9. 's' → logprob: -11.81326675415039
    10. '``' → logprob: -11.81326675415039

Token 112: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.6138395071029663
    2. '(n' → logprob: -1.4888395071029663
    3. '(a' → logprob: -1.8638395071029663
    4. '(' → logprob: -2.738839626312256
    5. '(x' → logprob: -4.988839626312256
    6. '(g' → logprob: -5.863839626312256
    7. ' (' → logprob: -7.488839626312256
    8. '(k' → logprob: -7.488839626312256
    9. '(l' → logprob: -7.863839626312256
    10. '(N' → logprob: -8.113839149475098

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005792465526610613
    2. ',n' → logprob: -7.500579357147217
    3. ' ,' → logprob: -10.750578880310059
    4. ',p' → logprob: -13.000578880310059
    5. ',b' → logprob: -13.750578880310059
    6. ',q' → logprob: -13.875578880310059
    7. ',m' → logprob: -15.500578880310059
    8. '‌,' → logprob: -16.250579833984375
    9. ',a' → logprob: -16.750579833984375
    10. ',int' → logprob: -16.750579833984375

Token 114: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20145484805107117
    2. ' n' → logprob: -1.7014548778533936
    3. 'm' → logprob: -11.201455116271973
    4. '   ' → logprob: -11.826455116271973
    5. ' ' → logprob: -12.076455116271973
    6. ' m' → logprob: -12.826455116271973
    7. 'def' → logprob: -12.951455116271973
    8. '    ' → logprob: -13.326455116271973
    9. ')' → logprob: -13.451455116271973
    10. '```' → logprob: -13.451455116271973

Token 115: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014199002645909786
    2. '):' → logprob: -4.2641987800598145
    3. ' ,' → logprob: -10.889199256896973
    4. '   ' → logprob: -11.514199256896973
    5. ',p' → logprob: -13.389199256896973
    6. '):
' → logprob: -13.764199256896973
    7. ')' → logprob: -13.889199256896973
    8. ',m' → logprob: -14.139199256896973
    9. ',n' → logprob: -14.639199256896973
    10. ':' → logprob: -14.639199256896973

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003409893484786153
    2. 'count' → logprob: -5.7534098625183105
    3. ' count' → logprob: -8.628410339355469
    4. '```' → logprob: -10.378410339355469
    5. 'cnt' → logprob: -11.503410339355469
    6. 'total' → logprob: -11.753410339355469
    7. 'result' → logprob: -13.878410339355469
    8. ' total' → logprob: -14.128410339355469
    9. 'counter' → logprob: -14.253410339355469
    10. 'div' → logprob: -14.753410339355469

Token 117: ' norm' (ID: 7882)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.15005530416965485
    2. '   ' → logprob: -2.275055408477783
    3. ' count' → logprob: -3.400055408477783
    4. 'cnt' → logprob: -6.275055408477783
    5. 'import' → logprob: -7.650055408477783
    6. 'total' → logprob: -8.150054931640625
    7. ' cnt' → logprob: -9.275054931640625
    8. 'result' → logprob: -9.400054931640625
    9. 'from' → logprob: -9.525054931640625
    10. '```' → logprob: -10.150054931640625

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005931289400905371
    2. '=' → logprob: -5.130931377410889
    3. ' ' → logprob: -13.75593090057373
    4. ',' → logprob: -14.25593090057373
    5. ')' → logprob: -14.88093090057373
    6. '  ' → logprob: -16.505931854248047
    7. '=int' → logprob: -16.505931854248047
    8. ' =(' → logprob: -16.880931854248047
    9. ' ' → logprob: -17.130931854248047
    10. ' =)' → logprob: -17.255931854248047

Token 119: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.016037767753005028
    2. ' m' → logprob: -4.141037940979004
    3. ' ' → logprob: -12.766037940979004
    4. '(' → logprob: -15.766037940979004
    5. '(m' → logprob: -16.391036987304688
    6. ' (' → logprob: -16.391036987304688
    7. '   ' → logprob: -16.391036987304688
    8. '	m' → logprob: -16.891036987304688
    9. ' ' → logprob: -17.016036987304688
    10. 'abs' → logprob: -17.266036987304688

Token 120: '*m' (ID: 85049)
  Prédit: '*m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*m' → logprob: -0.0036648025270551443
    2. '*' → logprob: -5.628664970397949
    3. '**' → logprob: -10.25366497039795
    4. ' *' → logprob: -10.50366497039795
    5. '2' → logprob: -14.75366497039795
    6. 'm' → logprob: -14.87866497039795
    7. '```' → logprob: -15.12866497039795
    8. '*a' → logprob: -15.37866497039795
    9. '***' → logprob: -15.50366497039795
    10. ' ' → logprob: -16.253664016723633

Token 121: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.34845584630966187
    2. ' +' → logprob: -1.2234559059143066
    3. '+n' → logprob: -12.598455429077148
    4. ' +
' → logprob: -13.348455429077148
    5. '+
' → logprob: -13.598455429077148
    6. ' ' → logprob: -13.598455429077148
    7. '   ' → logprob: -14.223455429077148
    8. ',' → logprob: -14.848455429077148
    9. '+m' → logprob: -14.848455429077148
    10. '  ' → logprob: -14.848455429077148

Token 122: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023248855024576187
    2. ' n' → logprob: -3.7732489109039307
    3. '<|end|>' → logprob: -13.773248672485352
    4. '	n' → logprob: -14.023248672485352
    5. ' ' → logprob: -14.148248672485352
    6. '   ' → logprob: -14.523248672485352
    7. '  ' → logprob: -15.273248672485352
    8. '    ' → logprob: -18.27324867248535
    9. '```' → logprob: -18.64824867248535
    10. '<|end|>' → logprob: -18.64824867248535

Token 123: '*n' (ID: 58470)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.799477219581604
    2. '*n' → logprob: -0.799477219581604
    3. 'n' → logprob: -2.2994771003723145
    4. '<|end|>' → logprob: -7.9244771003723145
    5. '**' → logprob: -8.799477577209473
    6. '```' → logprob: -11.174477577209473
    7. ' *' → logprob: -11.799477577209473
    8. '*\' → logprob: -12.174477577209473
    9. '*)' → logprob: -12.799477577209473
    10. ' n' → logprob: -12.799477577209473

Token 124: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5450006723403931
    2. 'count' → logprob: -0.9200006723403931
    3. ' count' → logprob: -4.6700005531311035
    4. 'div' → logprob: -5.4200005531311035
    5. ' if' → logprob: -6.4200005531311035
    6. '
' → logprob: -6.4200005531311035
    7. 'if' → logprob: -7.0450005531311035
    8. ',' → logprob: -7.1700005531311035
    9. 'result' → logprob: -7.4200005531311035
    10. ' ' → logprob: -7.4200005531311035

Token 125: '   ' (ID: 271)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.39859312772750854
    2. '   ' → logprob: -1.1485931873321533
    3. 'if' → logprob: -5.023592948913574
    4. 'import' → logprob: -6.523592948913574
    5. 'cnt' → logprob: -6.648592948913574
    6. ' count' → logprob: -6.773592948913574
    7. 'div' → logprob: -7.898592948913574
    8. ' if' → logprob: -8.023592948913574
    9. '```' → logprob: -9.273592948913574
    10. 'result' → logprob: -9.273592948913574

Token 126: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.003992677200585604
    2. '   ' → logprob: -5.878992557525635
    3. 'cnt' → logprob: -7.003992557525635
    4. ' count' → logprob: -9.003993034362793
    5. 'if' → logprob: -9.378993034362793
    6. 'result' → logprob: -10.628993034362793
    7. 'import' → logprob: -10.878993034362793
    8. 'div' → logprob: -11.503993034362793
    9. 'counter' → logprob: -12.253993034362793
    10. 'root' → logprob: -12.378993034362793

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0038391444832086563
    2. '=' → logprob: -6.003839015960693
    3. ' ' → logprob: -6.628839015960693
    4. ' +=' → logprob: -10.378839492797852
    5. ')' → logprob: -12.628839492797852
    6. '<|end|>' → logprob: -13.128839492797852
    7. '  ' → logprob: -14.003839492797852
    8. ' =)' → logprob: -14.378839492797852
    9. ' *=' → logprob: -14.503839492797852
    10. ',' → logprob: -15.003839492797852

Token 128: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08026867359876633
    2. ' ' → logprob: -2.705268621444702
    3. '1' → logprob: -4.580268859863281
    4. '   ' → logprob: -11.330268859863281
    5. '2' → logprob: -11.580268859863281
    6. '4' → logprob: -13.767768859863281
    7. 'int' → logprob: -14.392768859863281
    8. '(' → logprob: -14.580268859863281
    9. '  ' → logprob: -14.767768859863281
    10. ' ' → logprob: -14.955268859863281

Token 129: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005671726074069738
    2. '1' → logprob: -5.255671501159668
    3. ' ' → logprob: -7.755671501159668
    4. '4' → logprob: -12.880671501159668
    5. '2' → logprob: -13.130671501159668
    6. '   ' → logprob: -13.380671501159668
    7. 'div' → logprob: -14.505671501159668
    8. '```' → logprob: -14.755671501159668
    9. '{}' → logprob: -15.130671501159668
    10. '۰' → logprob: -15.193171501159668

Token 130: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15467484295368195
    2. '
' → logprob: -2.529674768447876
    3. ' for' → logprob: -3.029674768447876
    4. 'for' → logprob: -4.279675006866455
    5. ' ' → logprob: -8.154674530029297
    6. ',' → logprob: -8.154674530029297
    7. '<|end|>' → logprob: -8.529674530029297
    8. 'import' → logprob: -8.779674530029297
    9. '	for' → logprob: -8.904674530029297
    10. '    
' → logprob: -9.029674530029297

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3058747947216034
    2. ' for' → logprob: -1.6808748245239258
    3. 'for' → logprob: -2.680874824523926
    4. '
' → logprob: -4.930874824523926
    5. '<|end|>' → logprob: -7.180874824523926
    6. '	for' → logprob: -8.055874824523926
    7. ',' → logprob: -8.555874824523926
    8. ' ' → logprob: -9.180874824523926
    9. 'import' → logprob: -9.430874824523926
    10. '    
' → logprob: -10.055874824523926

Token 132: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015042672166600823
    2. 'import' → logprob: -7.001504421234131
    3. 'limit' → logprob: -7.876504421234131
    4. ' for' → logprob: -8.751503944396973
    5. '   ' → logprob: -10.751503944396973
    6. 'from' → logprob: -11.251503944396973
    7. 'max' → logprob: -11.626503944396973
    8. 'root' → logprob: -12.001503944396973
    9. 'sqrt' → logprob: -12.876503944396973
    10. 'i' → logprob: -13.501503944396973

Token 133: ' Since' (ID: 12265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005910311359912157
    2. 'limit' → logprob: -5.255910396575928
    3. ' for' → logprob: -7.630910396575928
    4. 'import' → logprob: -9.38090991973877
    5. 'max' → logprob: -10.38090991973877
    6. 'root' → logprob: -10.63090991973877
    7. 'from' → logprob: -10.75590991973877
    8. ' limit' → logprob: -11.13090991973877
    9. 'lim' → logprob: -12.00590991973877
    10. '   ' → logprob: -13.50590991973877

Token 134: ' we' (ID: 581)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.5868083238601685
    2. 'import' → logprob: -1.8368083238601685
    3. 'int' → logprob: -2.086808204650879
    4. ' norm' → logprob: -2.086808204650879
    5. ' for' → logprob: -2.586808204650879
    6. 'i' → logprob: -2.836808204650879
    7. 'abs' → logprob: -2.836808204650879
    8. ' abs' → logprob: -2.961808204650879
    9. 'norm' → logprob: -3.211808204650879
    10. 'for' → logprob: -3.336808204650879

Token 135: ' know' (ID: 1761)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5994173288345337
    2. ' are' → logprob: -1.9744173288345337
    3. ' import' → logprob: -2.474417209625244
    4. 'int' → logprob: -2.724417209625244
    5. ' for' → logprob: -3.474417209625244
    6. 'm' → logprob: -3.599417209625244
    7. ' m' → logprob: -3.724417209625244
    8. ' ' → logprob: -3.974417209625244
    9. 'abs' → logprob: -4.599417209625244
    10. ' abs' → logprob: -4.974417209625244

Token 136: ' divis' (ID: 37826)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6867694854736328
    2. 'import' → logprob: -1.8117694854736328
    3. 'for' → logprob: -2.061769485473633
    4. ' import' → logprob: -2.686769485473633
    5. 'limit' → logprob: -2.811769485473633
    6. ' limit' → logprob: -3.061769485473633
    7. ' i' → logprob: -4.686769485473633
    8. ' max' → logprob: -4.686769485473633
    9. 'max' → logprob: -5.686769485473633
    10. 'i' → logprob: -6.061769485473633

Token 137: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.023642228916287422
    2. 'e' → logprob: -4.273642063140869
    3. 'or' → logprob: -4.773642063140869
    4. 'ing' → logprob: -7.648642063140869
    5. 'ed' → logprob: -9.273642539978027
    6. 'o' → logprob: -9.398642539978027
    7. 'ng' → logprob: -9.523642539978027
    8. 'ion' → logprob: -9.773642539978027
    9. '```' → logprob: -9.898642539978027
    10. 'on' → logprob: -10.148642539978027

Token 138: ' must' (ID: 2804)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.4008677005767822
    2. ' for' → logprob: -1.9008677005767822
    3. ' can' → logprob: -3.5258677005767822
    4. ' in' → logprob: -3.7758677005767822
    5. ' must' → logprob: -4.025867462158203
    6. 'import' → logprob: -4.275867462158203
    7. 'for' → logprob: -4.275867462158203
    8. ' #' → logprob: -4.275867462158203
    9. ',' → logprob: -4.525867462158203
    10. ' of' → logprob: -4.900867462158203

Token 139: ' satisfy' (ID: 35441)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.35910218954086304
    2. ' have' → logprob: -1.9841022491455078
    3. ' satisfy' → logprob: -2.359102249145508
    4. ' lie' → logprob: -3.609102249145508
    5. 'be' → logprob: -4.109102249145508
    6. 'have' → logprob: -4.734102249145508
    7. ' range' → logprob: -5.359102249145508
    8. 'import' → logprob: -5.984102249145508
    9. 'range' → logprob: -6.109102249145508
    10. 's' → logprob: -6.484102249145508

Token 140: ' the' (ID: 290)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.46779879927635193
    2. 'abs' → logprob: -1.0927988290786743
    3. ' for' → logprob: -4.467798709869385
    4. 'for' → logprob: -4.717798709869385
    5. 'int' → logprob: -5.092798709869385
    6. '-' → logprob: -6.342798709869385
    7. ' int' → logprob: -6.842798709869385
    8. ' ' → logprob: -6.967798709869385
    9. 'import' → logprob: -7.092798709869385
    10. ' -' → logprob: -7.217798709869385

Token 141: ' divisor' (ID: 100482)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6209995150566101
    2. 'for' → logprob: -1.3709995746612549
    3. 'int' → logprob: -2.870999574661255
    4. 'abs' → logprob: -2.870999574661255
    5. 'max' → logprob: -3.620999574661255
    6. 'norm' → logprob: -3.870999574661255
    7. ' for' → logprob: -4.245999336242676
    8. 'range' → logprob: -4.745999336242676
    9. ' norm' → logprob: -5.370999336242676
    10. ' abs' → logprob: -5.495999336242676

Token 142: ' condition' (ID: 7060)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8929780125617981
    2. 'def' → logprob: -1.5179779529571533
    3. '_limit' → logprob: -2.5179779529571533
    4. '_norm' → logprob: -2.7679779529571533
    5. 'norm' → logprob: -3.0179779529571533
    6. '_range' → logprob: -3.5179779529571533
    7. ' condition' → logprob: -3.6429779529571533
    8. '_condition' → logprob: -3.7679779529571533
    9. '_m' → logprob: -4.142978191375732
    10. 'limit' → logprob: -4.267978191375732

Token 143: ',
' (ID: 412)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4756114184856415
    2. ',' → logprob: -1.2256114482879639
    3. '   ' → logprob: -2.600611448287964
    4. 'for' → logprob: -4.725611209869385
    5. ',
' → logprob: -7.225611209869385
    6. ' ,' → logprob: -7.850611209869385
    7. '	for' → logprob: -8.475611686706543
    8. ':' → logprob: -8.850611686706543
    9. '
' → logprob: -8.975611686706543
    10. '<|end|>' → logprob: -9.475611686706543

Token 144: '   ' (ID: 271)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.11022820323705673
    2. 'for' → logprob: -2.9852283000946045
    3. ' limit' → logprob: -3.8602283000946045
    4. '   ' → logprob: -3.8602283000946045
    5. 'max' → logprob: -5.360228061676025
    6. ' for' → logprob: -5.735228061676025
    7. 'import' → logprob: -6.610228061676025
    8. 'r' → logprob: -7.235228061676025
    9. 'root' → logprob: -7.360228061676025
    10. 'lim' → logprob: -7.735228061676025

Token 145: ' #' (ID: 1069)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.05548457056283951
    2. 'for' → logprob: -3.5554845333099365
    3. 'max' → logprob: -4.680484771728516
    4. 'lim' → logprob: -4.680484771728516
    5. 'root' → logprob: -5.930484771728516
    6. 'L' → logprob: -6.805484771728516
    7. ' limit' → logprob: -6.930484771728516
    8. 'bound' → logprob: -7.055484771728516
    9. 'r' → logprob: -8.055484771728516
    10. 'R' → logprob: -8.680484771728516

Token 146: ' we' (ID: 581)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.02800191007554531
    2. 'max' → logprob: -4.77800178527832
    3. 'for' → logprob: -4.90300178527832
    4. ' limit' → logprob: -5.15300178527832
    5. 'lim' → logprob: -5.90300178527832
    6. 'root' → logprob: -6.15300178527832
    7. 'import' → logprob: -7.90300178527832
    8. 'bound' → logprob: -8.52800178527832
    9. 'sqrt' → logprob: -9.02800178527832
    10. ' max' → logprob: -9.15300178527832

Token 147: ' try' (ID: 2075)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06742111593484879
    2. 'for' → logprob: -3.1924211978912354
    3. 'import' → logprob: -4.192420959472656
    4. ' import' → logprob: -4.942420959472656
    5. ' can' → logprob: -7.567420959472656
    6. ' will' → logprob: -8.442420959472656
    7. ' ' → logprob: -8.442420959472656
    8. ' range' → logprob: -8.567420959472656
    9. ' limit' → logprob: -8.692420959472656
    10. '   ' → logprob: -9.317420959472656

Token 148: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.060774326324463
    2. ' i' → logprob: -1.435774326324463
    3. ' for' → logprob: -1.935774326324463
    4. 'i' → logprob: -2.810774326324463
    5. ' x' → logprob: -3.060774326324463
    6. 'for' → logprob: -3.310774326324463
    7. ' d' → logprob: -3.310774326324463
    8. 'd' → logprob: -3.310774326324463
    9. 'x' → logprob: -3.810774326324463
    10. 'all' → logprob: -4.810774326324463

Token 149: ' possible' (ID: 4149)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.644402027130127
    2. 'i' → logprob: -1.394402027130127
    3. ' x' → logprob: -2.019402027130127
    4. ' i' → logprob: -2.394402027130127
    5. 'a' → logprob: -6.644402027130127
    6. 'for' → logprob: -7.644402027130127
    7. 'd' → logprob: -7.769402027130127
    8. ' for' → logprob: -8.019401550292969
    9. ' d' → logprob: -8.644401550292969
    10. ' a' → logprob: -8.894401550292969

Token 150: ' pairs' (ID: 24702)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.17541669309139252
    2. 'i' → logprob: -2.6754167079925537
    3. 'p' → logprob: -3.1754167079925537
    4. ' x' → logprob: -3.4254167079925537
    5. 'a' → logprob: -4.550416469573975
    6. ' i' → logprob: -5.550416469573975
    7. ' p' → logprob: -6.175416469573975
    8. 'd' → logprob: -7.425416469573975
    9. ' a' → logprob: -8.800416946411133
    10. 'r' → logprob: -9.175416946411133

Token 151: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5908599495887756
    2. ' for' → logprob: -1.7158598899841309
    3. '(i' → logprob: -2.590859889984131
    4. 'for' → logprob: -2.590859889984131
    5. ' i' → logprob: -2.965859889984131
    6. 'i' → logprob: -3.590859889984131
    7. '(-' → logprob: -4.465859889984131
    8. 'x' → logprob: -5.215859889984131
    9. '(x' → logprob: -5.215859889984131
    10. ' x' → logprob: -5.965859889984131

Token 152: 'a' (ID: 64)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.19547632336616516
    2. 'i' → logprob: -2.1954762935638428
    3. 'x' → logprob: -3.0704762935638428
    4. 'a' → logprob: -3.9454762935638428
    5. ' p' → logprob: -8.445476531982422
    6. 'd' → logprob: -9.195476531982422
    7. ' i' → logprob: -9.695476531982422
    8. '```' → logprob: -10.070476531982422
    9. 'r' → logprob: -10.445476531982422
    10. ' x' → logprob: -10.945476531982422

Token 153: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010635088197886944
    2. ' in' → logprob: -5.760634899139404
    3. ',a' → logprob: -5.885634899139404
    4. ' ,' → logprob: -6.010634899139404
    5. 'for' → logprob: -7.635634899139404
    6. 'a' → logprob: -7.885634899139404
    7. 'in' → logprob: -8.010635375976562
    8. ')' → logprob: -8.010635375976562
    9. ',b' → logprob: -8.385635375976562
    10. '_,' → logprob: -9.385635375976562

Token 154: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019914666190743446
    2. ',' → logprob: -4.144914627075195
    3. ' for' → logprob: -7.019914627075195
    4. ' in' → logprob: -7.269914627075195
    5. '   ' → logprob: -7.519914627075195
    6. 'for' → logprob: -7.519914627075195
    7. ' )' → logprob: -7.644914627075195
    8. '-' → logprob: -8.519914627075195
    9. ' ,' → logprob: -8.894914627075195
    10. '=' → logprob: -9.769914627075195

Token 155: ' with' (ID: 483)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.060214247554540634
    2. '<|end|>' → logprob: -4.185214042663574
    3. ' in' → logprob: -4.435214042663574
    4. 'for' → logprob: -4.810214042663574
    5. ' from' → logprob: -4.935214042663574
    6. '   ' → logprob: -4.935214042663574
    7. ',' → logprob: -5.185214042663574
    8. ' ' → logprob: -6.560214042663574
    9. 'from' → logprob: -7.685214042663574
    10. '	for' → logprob: -8.310214042663574

Token 156: ' a' (ID: 261)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7652856111526489
    2. '-' → logprob: -1.140285611152649
    3. 'a' → logprob: -2.7652854919433594
    4. ' a' → logprob: -3.0152854919433594
    5. ' abs' → logprob: -3.1402854919433594
    6. '-a' → logprob: -3.3902854919433594
    7. 'abs' → logprob: -4.265285491943359
    8. 'int' → logprob: -5.140285491943359
    9. ' int' → logprob: -5.640285491943359
    10. '-int' → logprob: -6.640285491943359

Token 157: '^' (ID: 61)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0404200553894043
    2. 'from' → logprob: -4.165420055389404
    3. 'in' → logprob: -4.290420055389404
    4. ' from' → logprob: -5.540420055389404
    5. ' =' → logprob: -6.040420055389404
    6. '=' → logprob: -7.165420055389404
    7. ',' → logprob: -7.290420055389404
    8. ' ' → logprob: -7.415420055389404
    9. ' range' → logprob: -7.540420055389404
    10. 'range' → logprob: -8.165420532226562

Token 158: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06200969219207764
    2. '-' → logprob: -3.562009811401367
    3. ' -' → logprob: -4.437009811401367
    4. ' ' → logprob: -4.687009811401367
    5. 'from' → logprob: -6.312009811401367
    6. 'a' → logprob: -6.687009811401367
    7. '-b' → logprob: -6.937009811401367
    8. 'abs' → logprob: -6.937009811401367
    9. ' abs' → logprob: -7.062009811401367
    10. '-range' → logprob: -7.187009811401367

Token 159: ' +' (ID: 659)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3135177791118622
    2. '<=' → logprob: -1.3135178089141846
    3. '+' → logprob: -9.938517570495605
    4. '<|end|>' → logprob: -9.938517570495605
    5. ')<=' → logprob: -10.313517570495605
    6. ' +' → logprob: -10.438517570495605
    7. ',' → logprob: -10.688517570495605
    8. ' ≤' → logprob: -10.813517570495605
    9. ' ' → logprob: -11.063517570495605
    10. ']<=' → logprob: -11.938517570495605

Token 160: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0004306692280806601
    2. ' b' → logprob: -7.750430583953857
    3. '	b' → logprob: -20.375431060791016
    4. ' ' → logprob: -22.000431060791016
    5. '```' → logprob: -22.625431060791016
    6. '(b' → logprob: -23.125431060791016
    7. ')b' → logprob: -23.125431060791016
    8. '   ' → logprob: -23.750431060791016
    9. '  ' → logprob: -23.750431060791016
    10. '<|end|>' → logprob: -24.250431060791016

Token 161: '^' (ID: 61)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.020597713068127632
    2. '<=' → logprob: -3.8955976963043213
    3. '*' → logprob: -10.895597457885742
    4. ' ≤' → logprob: -11.520597457885742
    5. ')<=' → logprob: -11.895597457885742
    6. 'a' → logprob: -12.145597457885742
    7. ' ' → logprob: -12.145597457885742
    8. '<|end|>' → logprob: -13.145597457885742
    9. ' a' → logprob: -13.395597457885742
    10. ' <' → logprob: -13.395597457885742

Token 162: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00019650737522169948
    2. 'b' → logprob: -8.75019645690918
    3. ' ' → logprob: -10.87519645690918
    4. '<=' → logprob: -11.25019645690918
    5. '```' → logprob: -13.25019645690918
    6. 'a' → logprob: -13.75019645690918
    7. ' <=' → logprob: -14.50019645690918
    8. '<|end|>' → logprob: -14.62519645690918
    9. '(' → logprob: -14.75019645690918
    10. ')' → logprob: -15.00019645690918

Token 163: ' dividing' (ID: 94879)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.026319922879338264
    2. '<=' → logprob: -3.651319980621338
    3. ' ' → logprob: -11.52631950378418
    4. ')<=' → logprob: -12.27631950378418
    5. ' ≤' → logprob: -13.15131950378418
    6. ']<=' → logprob: -13.52631950378418
    7. 'le' → logprob: -15.27631950378418
    8. '<|end|>' → logprob: -15.27631950378418
    9. '```' → logprob: -15.52631950378418
    10. ' \' → logprob: -15.65131950378418

Token 164: ' norm' (ID: 7882)
  Prédit: ' norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' norm' → logprob: -0.6931570172309875
    2. 'norm' → logprob: -0.6931570172309875
    3. '
' → logprob: -12.068157196044922
    4. '(norm' → logprob: -12.693157196044922
    5. 'n' → logprob: -15.068157196044922
    6. ' ' → logprob: -16.193157196044922
    7. ' 
' → logprob: -16.193157196044922
    8. ' ' → logprob: -16.818157196044922
    9. ' \
' → logprob: -17.193157196044922
    10. '\n' → logprob: -17.193157196044922

Token 165: '.
' (ID: 558)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7346212863922119
    2. '   ' → logprob: -1.109621286392212
    3. ',' → logprob: -2.109621286392212
    4. 'for' → logprob: -3.234621286392212
    5. 'import' → logprob: -4.484621047973633
    6. ' ' → logprob: -4.984621047973633
    7. '
' → logprob: -6.484621047973633
    8. ' and' → logprob: -6.484621047973633
    9. '<|end|>' → logprob: -6.734621047973633
    10. '  ' → logprob: -6.859621047973633

Token 166: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6832860708236694
    2. 'for' → logprob: -0.8082860708236694
    3. '   ' → logprob: -3.558286190032959
    4. 'import' → logprob: -4.308286190032959
    5. ' max' → logprob: -6.058286190032959
    6. 'max' → logprob: -6.308286190032959
    7. ',' → logprob: -7.183286190032959
    8. 'from' → logprob: -7.308286190032959
    9. ' limit' → logprob: -7.933286190032959
    10. 'limit' → logprob: -7.933286190032959

Token 167: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.784694254398346
    2. 'import' → logprob: -1.7846941947937012
    3. 'max' → logprob: -1.7846941947937012
    4. 'limit' → logprob: -2.284694194793701
    5. ' for' → logprob: -2.534694194793701
    6. 'from' → logprob: -4.784694194793701
    7. '   ' → logprob: -5.034694194793701
    8. ' limit' → logprob: -5.159694194793701
    9. ' max' → logprob: -5.284694194793701
    10. ' import' → logprob: -7.534694194793701

Token 168: ' But' (ID: 3072)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.3910156786441803
    2. 'for' → logprob: -2.0160157680511475
    3. 'max' → logprob: -2.6410157680511475
    4. ' limit' → logprob: -2.6410157680511475
    5. ' for' → logprob: -3.8910157680511475
    6. ' max' → logprob: -4.266015529632568
    7. 'import' → logprob: -4.641015529632568
    8. '   ' → logprob: -6.391015529632568
    9. ' import' → logprob: -6.891015529632568
    10. 'lim' → logprob: -7.766015529632568

Token 169: ' that' (ID: 484)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24616001546382904
    2. 'for' → logprob: -1.6211600303649902
    3. 'import' → logprob: -4.62116003036499
    4. 'max' → logprob: -5.87116003036499
    5. ' max' → logprob: -6.49616003036499
    6. ' import' → logprob: -6.62116003036499
    7. 'limit' → logprob: -6.87116003036499
    8. ' limit' → logprob: -7.24616003036499
    9. ' norm' → logprob: -7.37116003036499
    10. '#' → logprob: -7.49616003036499

Token 170: ' might' (ID: 3572)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4899778664112091
    2. ' ' → logprob: -1.9899778366088867
    3. ' is' → logprob: -2.4899778366088867
    4. 'for' → logprob: -3.3649778366088867
    5. ' norm' → logprob: -3.7399778366088867
    6. ' a' → logprob: -3.8649778366088867
    7. ' =' → logprob: -4.739977836608887
    8. ' continues' → logprob: -4.864977836608887
    9. ':' → logprob: -5.114977836608887
    10. ' max' → logprob: -5.239977836608887

Token 171: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.021776383742690086
    2. ' continue' → logprob: -5.02177619934082
    3. ' ' → logprob: -5.52177619934082
    4. ' for' → logprob: -6.02177619934082
    5. ' raise' → logprob: -6.14677619934082
    6. ' not' → logprob: -6.52177619934082
    7. ' have' → logprob: -6.77177619934082
    8. '    ' → logprob: -7.39677619934082
    9. '<|end|>' → logprob: -7.64677619934082
    10. ' a' → logprob: -7.77177619934082

Token 172: ' complex' (ID: 8012)
  Prédit: 'too'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'too' → logprob: -0.880253255367279
    2. 'ine' → logprob: -1.1302533149719238
    3. ' too' → logprob: -2.005253314971924
    4. 'very' → logprob: -2.630253314971924
    5. ' very' → logprob: -3.630253314971924
    6. ' inefficient' → logprob: -4.380253314971924
    7. 'slow' → logprob: -4.630253314971924
    8. ' slow' → logprob: -6.130253314971924
    9. ' expensive' → logprob: -6.630253314971924
    10. 'exp' → logprob: -6.755253314971924

Token 173: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.5246196389198303
    2. ' for' → logprob: -1.6496195793151855
    3. 'for' → logprob: -1.7746195793151855
    4. 'import' → logprob: -4.3996195793151855
    5. '#' → logprob: -4.3996195793151855
    6. '   ' → logprob: -4.6496195793151855
    7. 'max' → logprob: -5.3996195793151855
    8. 'so' → logprob: -5.8996195793151855
    9. '...' → logprob: -6.7746195793151855
    10. 'continue' → logprob: -7.0246195793151855

Token 175: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2284724712371826
    2. 'for' → logprob: -1.3534724712371826
    3. 'limit' → logprob: -2.1034724712371826
    4. 'import' → logprob: -2.3534724712371826
    5. ' limit' → logprob: -2.8534724712371826
    6. '#' → logprob: -2.8534724712371826
    7. 'max' → logprob: -3.1034724712371826
    8. ' max' → logprob: -3.8534724712371826
    9. ' #' → logprob: -4.103472709655762
    10. ' import' → logprob: -4.853472709655762

Token 176: ' just' (ID: 1327)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6377201676368713
    2. 'for' → logprob: -1.0127201080322266
    3. ' can' → logprob: -3.0127201080322266
    4. 'import' → logprob: -3.1377201080322266
    5. ''ll' → logprob: -6.012720108032227
    6. ' continue' → logprob: -6.262720108032227
    7. ' import' → logprob: -6.512720108032227
    8. ' could' → logprob: -6.762720108032227
    9. 'continue' → logprob: -7.012720108032227
    10. ' will' → logprob: -7.137720108032227

Token 177: ' try' (ID: 2075)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.758241593837738
    2. 'for' → logprob: -0.758241593837738
    3. 'import' → logprob: -3.133241653442383
    4. 'limit' → logprob: -4.883241653442383
    5. ' limit' → logprob: -5.508241653442383
    6. ' import' → logprob: -5.508241653442383
    7. ' continue' → logprob: -6.883241653442383
    8. ' try' → logprob: -7.008241653442383
    9. 'int' → logprob: -7.758241653442383
    10. 'try' → logprob: -7.883241653442383

Token 178: ' all' (ID: 722)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.130001500248909
    2. ' a' → logprob: -2.7550015449523926
    3. 'for' → logprob: -3.1300015449523926
    4. 'a' → logprob: -4.755001544952393
    5. ' abs' → logprob: -5.755001544952393
    6. ' range' → logprob: -6.880001544952393
    7. ' i' → logprob: -7.255001544952393
    8. 'range' → logprob: -8.255001068115234
    9. 'abs' → logprob: -8.755001068115234
    10. ' all' → logprob: -8.880001068115234

Token 179: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03529125079512596
    2. ' a' → logprob: -3.4102911949157715
    3. 'for' → logprob: -7.0352911949157715
    4. ' for' → logprob: -7.7852911949157715
    5. ' ' → logprob: -9.41029167175293
    6. 'i' → logprob: -9.53529167175293
    7. ' integers' → logprob: -9.53529167175293
    8. ' pairs' → logprob: -10.66029167175293
    9. ' i' → logprob: -10.66029167175293
    10. 'pairs' → logprob: -10.78529167175293

Token 180: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001760744140483439
    2. ' a' → logprob: -6.626760959625244
    3. 'i' → logprob: -8.126760482788086
    4. 'x' → logprob: -10.001760482788086
    5. 'range' → logprob: -10.751760482788086
    6. 'int' → logprob: -11.376760482788086
    7. 'for' → logprob: -11.376760482788086
    8. '-' → logprob: -12.001760482788086
    9. ' -' → logprob: -12.001760482788086
    10. ')' → logprob: -12.126760482788086

Token 181: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013368098996579647
    2. ' ,' → logprob: -5.013368129730225
    3. ' in' → logprob: -5.513368129730225
    4. ')' → logprob: -6.888368129730225
    5. ',b' → logprob: -8.013367652893066
    6. ' =' → logprob: -8.013367652893066
    7. ',-' → logprob: -8.513367652893066
    8. '=' → logprob: -8.888367652893066
    9. 'from' → logprob: -9.013367652893066
    10. ',a' → logprob: -9.763367652893066

Token 182: ')' (ID: 8)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1091901883482933
    2. ')' → logprob: -2.4841902256011963
    3. 'in' → logprob: -4.859189987182617
    4. ',' → logprob: -5.359189987182617
    5. ' for' → logprob: -5.359189987182617
    6. 'for' → logprob: -6.734189987182617
    7. ' )' → logprob: -7.984189987182617
    8. ':' → logprob: -8.234189987182617
    9. '):' → logprob: -8.484189987182617
    10. ' ' → logprob: -8.609189987182617

Token 183: ' with' (ID: 483)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.24187439680099487
    2. ' with' → logprob: -2.7418744564056396
    3. ' for' → logprob: -2.9918744564056396
    4. 'for' → logprob: -3.3668744564056396
    5. 'with' → logprob: -3.6168744564056396
    6. 'import' → logprob: -3.8668744564056396
    7. 'in' → logprob: -4.7418742179870605
    8. '   ' → logprob: -6.1168742179870605
    9. 'from' → logprob: -6.3668742179870605
    10. ',' → logprob: -6.6168742179870605

Token 184: ' a' (ID: 261)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.49939972162246704
    2. ' -' → logprob: -1.6243996620178223
    3. 'a' → logprob: -2.6243996620178223
    4. ' a' → logprob: -2.8743996620178223
    5. ' abs' → logprob: -2.8743996620178223
    6. 'abs' → logprob: -4.749399662017822
    7. '-a' → logprob: -6.249399662017822
    8. ' ' → logprob: -10.24940013885498
    9. ' range' → logprob: -11.12440013885498
    10. '-range' → logprob: -11.37440013885498

Token 185: '^' (ID: 61)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00736607238650322
    2. ',' → logprob: -6.007366180419922
    3. 'in' → logprob: -6.382366180419922
    4. ' ,' → logprob: -6.632366180419922
    5. ' ' → logprob: -7.632366180419922
    6. ' range' → logprob: -8.257366180419922
    7. ' =' → logprob: -8.507366180419922
    8. ' from' → logprob: -8.632366180419922
    9. 'from' → logprob: -8.632366180419922
    10. '**' → logprob: -9.257366180419922

Token 186: '2' (ID: 17)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5104650259017944
    2. '-' → logprob: -1.5104650259017944
    3. ' -' → logprob: -2.760465145111084
    4. ' range' → logprob: -2.760465145111084
    5. ' in' → logprob: -4.635465145111084
    6. ' ' → logprob: -4.760465145111084
    7. 'b' → logprob: -5.010465145111084
    8. 'from' → logprob: -5.260465145111084
    9. '-range' → logprob: -5.260465145111084
    10. '-r' → logprob: -5.760465145111084

Token 187: '+b' (ID: 76609)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.7619212865829468
    2. '<=' → logprob: -1.5119212865829468
    3. ' +' → logprob: -1.8869212865829468
    4. '+' → logprob: -2.0119214057922363
    5. '<|end|>' → logprob: -4.386921405792236
    6. ',' → logprob: -4.511921405792236
    7. ' ,' → logprob: -6.761921405792236
    8. ' ' → logprob: -6.886921405792236
    9. ' and' → logprob: -7.636921405792236
    10. ' in' → logprob: -7.761921405792236

Token 188: '^' (ID: 61)
  Prédit: '*b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.3748719096183777
    2. '<=' → logprob: -1.9998719692230225
    3. 'b' → logprob: -2.4998719692230225
    4. '*' → logprob: -2.9998719692230225
    5. ' <=' → logprob: -3.6248719692230225
    6. '<|end|>' → logprob: -5.249871730804443
    7. '+b' → logprob: -5.499871730804443
    8. '^' → logprob: -6.249871730804443
    9. ' b' → logprob: -6.249871730804443
    10. '_b' → logprob: -6.624871730804443

Token 189: '2' (ID: 17)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.043254148215055466
    2. '2' → logprob: -3.1682541370391846
    3. ' b' → logprob: -8.543253898620605
    4. '*b' → logprob: -10.793253898620605
    5. '<=' → logprob: -11.168253898620605
    6. ' ' → logprob: -11.793253898620605
    7. 'a' → logprob: -11.793253898620605
    8. '^' → logprob: -12.668253898620605
    9. '²' → logprob: -13.293253898620605
    10. '+b' → logprob: -13.793253898620605

Token 190: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.08895266801118851
    2. '<=' → logprob: -2.4639527797698975
    3. ')<=' → logprob: -12.088953018188477
    4. ']<=' → logprob: -12.838953018188477
    5. '<|end|>' → logprob: -13.088953018188477
    6. ' ≤' → logprob: -14.088953018188477
    7. ' ' → logprob: -14.588953018188477
    8. ' ' → logprob: -15.213953018188477
    9. '```' → logprob: -15.338953018188477
    10. '\' → logprob: -15.713953018188477

Token 191: ' norm' (ID: 7882)
  Prédit: ' norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' norm' → logprob: -0.3868847191333771
    2. 'norm' → logprob: -1.1368846893310547
    3. ' ' → logprob: -12.011884689331055
    4. 'int' → logprob: -12.886884689331055
    5. '   ' → logprob: -13.386884689331055
    6. '(norm' → logprob: -13.386884689331055
    7. ' ' → logprob: -14.886884689331055
    8. ' int' → logprob: -15.011884689331055
    9. '```' → logprob: -15.386884689331055
    10. '    ' → logprob: -15.636884689331055

Token 192: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19323214888572693
    2. ':' → logprob: -2.0682320594787598
    3. '+' → logprob: -3.6932320594787598
    4. ',' → logprob: -4.69323205947876
    5. ' and' → logprob: -5.06823205947876
    6. ' for' → logprob: -5.94323205947876
    7. '.' → logprob: -6.19323205947876
    8. 'and' → logprob: -6.69323205947876
    9. ' +' → logprob: -7.31823205947876
    10. 'for' → logprob: -7.56823205947876

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054358210414648056
    2. ':' → logprob: -3.6793582439422607
    3. ',' → logprob: -4.179358005523682
    4. ' for' → logprob: -5.304358005523682
    5. ' ' → logprob: -5.804358005523682
    6. '
' → logprob: -6.929358005523682
    7. '.' → logprob: -7.679358005523682
    8. ' and' → logprob: -7.804358005523682
    9. 'for' → logprob: -8.05435848236084
    10. '    
' → logprob: -8.05435848236084

Token 194: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0793684646487236
    2. ' for' → logprob: -3.2043683528900146
    3. '
' → logprob: -3.7043683528900146
    4. 'for' → logprob: -5.204368591308594
    5. ' ' → logprob: -6.329368591308594
    6. '    
' → logprob: -6.704368591308594
    7. '\n' → logprob: -7.454368591308594
    8. ' 
' → logprob: -7.579368591308594
    9. '  
' → logprob: -7.579368591308594
    10. ',' → logprob: -8.579368591308594

Token 195: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07535618543624878
    2. ' for' → logprob: -3.0753562450408936
    3. '   ' → logprob: -3.7003562450408936
    4. 'limit' → logprob: -6.7003560066223145
    5. 'max' → logprob: -8.075356483459473
    6. 'import' → logprob: -9.575356483459473
    7. ' limit' → logprob: -9.825356483459473
    8. '	for' → logprob: -11.200356483459473
    9. 'from' → logprob: -11.950356483459473
    10. ' max' → logprob: -12.450356483459473

Token 196: ' check' (ID: 2371)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9535607695579529
    2. ' (' → logprob: -1.4535608291625977
    3. 'a' → logprob: -2.3285608291625977
    4. ' for' → logprob: -2.4535608291625977
    5. 'for' → logprob: -2.9535608291625977
    6. ' check' → logprob: -2.9535608291625977
    7. ' abs' → logprob: -3.0785608291625977
    8. '(' → logprob: -4.328560829162598
    9. 'abs' → logprob: -4.703560829162598
    10. ' ' → logprob: -4.953560829162598

Token 197: ' divisor' (ID: 100482)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4354953467845917
    2. ' if' → logprob: -1.435495376586914
    3. '    ' → logprob: -2.435495376586914
    4. '       ' → logprob: -3.810495376586914
    5. 'if' → logprob: -6.685495376586914
    6. ' ' → logprob: -6.810495376586914
    7. ' for' → logprob: -6.935495376586914
    8. '        ' → logprob: -7.935495376586914
    9. '      ' → logprob: -7.935495376586914
    10. '(' → logprob: -7.935495376586914

Token 198: ' condition' (ID: 7060)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7699236273765564
    2. '(' → logprob: -0.8949236273765564
    3. ' (' → logprob: -3.769923686981201
    4. 's' → logprob: -3.769923686981201
    5. '    ' → logprob: -4.019923686981201
    6. ' condition' → logprob: -4.019923686981201
    7. ')' → logprob: -4.144923686981201
    8. ':' → logprob: -4.519923686981201
    9. '(s' → logprob: -5.519923686981201
    10. '       ' → logprob: -5.644923686981201

Token 199: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013335873372852802
    2. '
' → logprob: -4.763335704803467
    3. ' for' → logprob: -5.763335704803467
    4. '    
' → logprob: -6.763335704803467
    5. ',' → logprob: -8.763336181640625
    6. '<|end|>' → logprob: -9.763336181640625
    7. 'for' → logprob: -9.888336181640625
    8. '  
' → logprob: -10.388336181640625
    9. '	for' → logprob: -10.888336181640625
    10. '   
' → logprob: -11.013336181640625

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.365234911441803
    2. ' for' → logprob: -1.2402348518371582
    3. 'for' → logprob: -4.115234851837158
    4. '
' → logprob: -8.490235328674316
    5. '    
' → logprob: -9.990235328674316
    6. '```' → logprob: -10.615235328674316
    7. ' ' → logprob: -11.365235328674316
    8. ' 
' → logprob: -11.365235328674316
    9. '	for' → logprob: -11.865235328674316
    10. '  
' → logprob: -12.115235328674316

Token 201: ' limit' (ID: 5967)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15120171010494232
    2. ' for' → logprob: -2.4012017250061035
    3. '   ' → logprob: -3.0262017250061035
    4. 'max' → logprob: -7.2762017250061035
    5. 'limit' (adapté à ' limit') → logprob: -7.9012017250061035
    6. 'import' → logprob: -9.526201248168945
    7. ' max' → logprob: -10.901201248168945
    8. ' limit' → logprob: -11.026201248168945
    9. ' ' → logprob: -11.276201248168945
    10. '	for' → logprob: -11.401201248168945

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0004319804720580578
    2. '=' → logprob: -7.750432014465332
    3. ' ' → logprob: -13.875432014465332
    4. '=int' → logprob: -15.750432014465332
    5. ' =
' → logprob: -17.125431060791016
    6. ' ' → logprob: -17.250431060791016
    7. '  ' → logprob: -18.000431060791016
    8. ',' → logprob: -18.125431060791016
    9. '_' → logprob: -18.125431060791016
    10. '   ' → logprob: -18.375431060791016

Token 203: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.523952066898346
    2. ' int' → logprob: -0.898952066898346
    3. ' norm' → logprob: -7.398952007293701
    4. 'norm' → logprob: -8.77395248413086
    5. ' ' → logprob: -10.52395248413086
    6. '(int' → logprob: -11.14895248413086
    7. 'is' → logprob: -12.02395248413086
    8. '	int' → logprob: -12.89895248413086
    9. ' is' → logprob: -13.27395248413086
    10. ' (' → logprob: -13.27395248413086

Token 204: '(norm' (ID: 169218)
  Prédit: '(norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(norm' → logprob: -5.240481914370321e-05
    2. 'norm' → logprob: -10.625052452087402
    3. '(' → logprob: -11.125052452087402
    4. '((' → logprob: -11.875052452087402
    5. ' norm' → logprob: -12.375052452087402
    6. '(pow' → logprob: -14.000052452087402
    7. '(s' → logprob: -14.250052452087402
    8. ' (' → logprob: -15.500052452087402
    9. '(limit' → logprob: -15.500052452087402
    10. '(normal' → logprob: -15.625052452087402

Token 205: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.003178071230649948
    2. ' **' → logprob: -5.753178119659424
    3. ')**' → logprob: -15.503177642822266
    4. '**)' → logprob: -16.253177642822266
    5. ')' → logprob: -16.878177642822266
    6. ' **)' → logprob: -17.878177642822266
    7. ' ' → logprob: -18.003177642822266
    8. '*' → logprob: -19.253177642822266
    9. ':**' → logprob: -19.378177642822266
    10. '0' → logprob: -20.003177642822266

Token 206: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8789383830153383e-05
    2. '.' → logprob: -11.000019073486328
    3. ' ' → logprob: -13.125019073486328
    4. '(' → logprob: -19.000019073486328
    5. '```' → logprob: -19.125019073486328
    6. '   ' → logprob: -19.625019073486328
    7. ' .' → logprob: -20.750019073486328
    8. '05' → logprob: -20.750019073486328
    9. '۰' → logprob: -20.875019073486328
    10. '{' → logprob: -21.000019073486328

Token 207: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005335147492587566
    2. '0' → logprob: -5.255335330963135
    3. '5' → logprob: -9.255334854125977
    4. ' .' → logprob: -12.630334854125977
    5. '```' → logprob: -14.005334854125977
    6. ' ' → logprob: -14.380334854125977
    7. '(' → logprob: -14.630334854125977
    8. '   ' → logprob: -15.380334854125977
    9. '**' → logprob: -15.755334854125977
    10. '..' → logprob: -16.005334854125977

Token 208: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -7.896309739408025e-07
    2. '   ' → logprob: -16.0
    3. '```' → logprob: -16.3125
    4. '4' → logprob: -16.75
    5. '6' → logprob: -16.875
    6. '
' → logprob: -16.9375
    7. '**' → logprob: -17.0
    8. '

' → logprob: -17.1875
    9. '25' → logprob: -17.3125
    10. '...' → logprob: -17.4375

Token 209: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008724244311451912
    2. ')+' → logprob: -4.758724212646484
    3. ' )' → logprob: -9.133724212646484
    4. '+' → logprob: -14.008724212646484
    5. '   ' → logprob: -14.508724212646484
    6. '())' → logprob: -15.758724212646484
    7. ' +' → logprob: -16.508724212646484
    8. ')
' → logprob: -16.883724212646484
    9. '()' → logprob: -16.883724212646484
    10. '+)' → logprob: -17.008724212646484

Token 210: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.475503534078598
    2. ' +' → logprob: -0.9755035638809204
    3. '+
' → logprob: -6.975503444671631
    4. ' +
' → logprob: -7.975503444671631
    5. '   ' → logprob: -9.475503921508789
    6. '
' → logprob: -9.975503921508789
    7. ' ' → logprob: -11.350503921508789
    8. '<|end|>' → logprob: -12.475503921508789
    9. ')+' → logprob: -13.100503921508789
    10. ' for' → logprob: -13.600503921508789

Token 211: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.660315895918757e-05
    2. ' ' → logprob: -9.500076293945312
    3. '2' → logprob: -13.500076293945312
    4. '   ' → logprob: -15.625076293945312
    5. '```' → logprob: -16.750076293945312
    6. '  ' → logprob: -19.500076293945312
    7. '    ' → logprob: -19.750076293945312
    8. '
' → logprob: -20.375076293945312
    9. '(' → logprob: -20.375076293945312
    10. '+' → logprob: -21.062576293945312

Token 212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. '2' → logprob: -12.375005722045898
    3. ' ' → logprob: -13.625005722045898
    4. '```' → logprob: -20.1250057220459
    5. '10' → logprob: -20.2500057220459
    6. '   ' → logprob: -20.5000057220459
    7. '  ' → logprob: -21.3750057220459
    8. '
' → logprob: -22.5000057220459
    9. '11' → logprob: -22.5000057220459
    10. '

' → logprob: -22.5000057220459

Token 213: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5725700259208679
    2. '
' → logprob: -1.0725700855255127
    3. '<|end|>' → logprob: -2.9475700855255127
    4. '    
' → logprob: -3.9475700855255127
    5. ' for' → logprob: -4.947569847106934
    6. '  
' → logprob: -5.447569847106934
    7. '\n' → logprob: -5.947569847106934
    8. ':' → logprob: -6.197569847106934
    9. 'for' → logprob: -6.447569847106934
    10. '<|end|>' → logprob: -6.697569847106934

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009527160786092281
    2. ' for' → logprob: -5.134527206420898
    3. 'for' → logprob: -6.384527206420898
    4. '
' → logprob: -7.134527206420898
    5. '    
' → logprob: -7.384527206420898
    6. '	for' → logprob: -7.884527206420898
    7. '  
' → logprob: -10.384527206420898
    8. ' ' → logprob: -10.759527206420898
    9. '<|end|>' → logprob: -11.259527206420898
    10. ' 
' → logprob: -11.509527206420898

Token 215: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.37904027104377747
    2. ' for' → logprob: -1.629040241241455
    3. '   ' → logprob: -2.129040241241455
    4. '
' → logprob: -8.504040718078613
    5. '	for' → logprob: -9.004040718078613
    6. '    
' → logprob: -10.129040718078613
    7. ' ' → logprob: -10.254040718078613
    8. ' 
' → logprob: -12.254040718078613
    9. '```' → logprob: -12.629040718078613
    10. '  
' → logprob: -13.379040718078613

Token 216: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4740801155567169
    2. ' a' → logprob: -0.9740800857543945
    3. 'b' → logprob: -13.974080085754395
    4. ' b' → logprob: -13.974080085754395
    5. '	a' → logprob: -14.099080085754395
    6. 'i' → logprob: -15.474080085754395
    7. ' i' → logprob: -15.599080085754395
    8. 'm' → logprob: -16.22408103942871
    9. ' ' → logprob: -16.72408103942871
    10. '   ' → logprob: -17.22408103942871

Token 217: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014431791380047798
    2. 'in' → logprob: -4.264431953430176
    3. ' ' → logprob: -8.264431953430176
    4. '	in' → logprob: -12.514431953430176
    5. ' i' → logprob: -13.139431953430176
    6. ',' → logprob: -13.139431953430176
    7. ' ,' → logprob: -14.514431953430176
    8. '0' → logprob: -14.764431953430176
    9. 'n' → logprob: -14.889431953430176
    10. 'a' → logprob: -15.014431953430176

Token 218: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014163628220558167
    2. ' range' → logprob: -4.264163494110107
    3. '(range' → logprob: -16.889163970947266
    4. '   ' → logprob: -17.389163970947266
    5. '	range' → logprob: -17.514163970947266
    6. '-' → logprob: -17.764163970947266
    7. '-range' → logprob: -18.264163970947266
    8. ' ' → logprob: -18.389163970947266
    9. 'limit' → logprob: -19.139163970947266
    10. 'ran' → logprob: -20.014163970947266

Token 219: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.05087222903966904
    2. '(limit' → logprob: -3.050872325897217
    3. '-limit' → logprob: -6.300872325897217
    4. '(' → logprob: -7.800872325897217
    5. '-' → logprob: -10.425871849060059
    6. 'limit' → logprob: -12.300871849060059
    7. ' (-' → logprob: -13.675871849060059
    8. '-l' → logprob: -14.050871849060059
    9. ' limit' → logprob: -14.050871849060059
    10. ' -' → logprob: -14.300871849060059

Token 220: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -4.320199877838604e-07
    2. ' limit' → logprob: -14.75
    3. '(limit' → logprob: -20.875
    4. 'lim' → logprob: -21.125
    5. '-limit' → logprob: -23.0
    6. '_limit' → logprob: -23.625
    7. '
' → logprob: -23.75
    8. 'Limit' → logprob: -24.875
    9. '.limit' → logprob: -25.0
    10. 'limits' → logprob: -26.0

Token 221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011735594598576427
    2. ' ,' → logprob: -6.751173496246338
    3. ',
' → logprob: -13.376173973083496
    4. '+' → logprob: -14.376173973083496
    5. '+,' → logprob: -15.251173973083496
    6. '   ' → logprob: -15.376173973083496
    7. ',a' → logprob: -15.626173973083496
    8. '‌,' → logprob: -15.876173973083496
    9. 'a' → logprob: -16.12617301940918
    10. '_,' → logprob: -16.87617301940918

Token 222: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.03805858641862869
    2. ' limit' → logprob: -3.2880585193634033
    3. '   ' → logprob: -11.913058280944824
    4. '(limit' → logprob: -12.413058280944824
    5. ' ' → logprob: -13.038058280944824
    6. '
' → logprob: -13.663058280944824
    7. 'lim' → logprob: -14.288058280944824
    8. '    ' → logprob: -14.538058280944824
    9. '+' → logprob: -14.788058280944824
    10. '_limit' → logprob: -15.288058280944824

Token 223: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03532163426280022
    2. ' +' → logprob: -3.4103217124938965
    3. '):' → logprob: -6.7853217124938965
    4. '):
' → logprob: -7.5353217124938965
    5. ',' → logprob: -12.785321235656738
    6. '+
' → logprob: -13.160321235656738
    7. '1' → logprob: -13.285321235656738
    8. ')' → logprob: -13.410321235656738
    9. '):

' → logprob: -14.785321235656738
    10. '   ' → logprob: -14.910321235656738

Token 224: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '2' → logprob: -16.625028610229492
    4. ')' → logprob: -18.000028610229492
    5. '   ' → logprob: -18.500028610229492
    6. '```' → logprob: -18.875028610229492
    7. '):
' → logprob: -19.250028610229492
    8. '0' → logprob: -19.625028610229492
    9. '۱' → logprob: -20.437528610229492
    10. '  ' → logprob: -20.937528610229492

Token 225: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47416871786117554
    2. '):
' → logprob: -0.9741687178611755
    3. ':' → logprob: -9.72416877746582
    4. '   ' → logprob: -11.09916877746582
    5. '):
' → logprob: -11.72416877746582
    6. '):

' → logprob: -13.09916877746582
    7. ' ):' → logprob: -13.34916877746582
    8. ')' → logprob: -13.47416877746582
    9. ' ):
' → logprob: -13.84916877746582
    10. ':
' → logprob: -14.59916877746582

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21355721354484558
    2. '   ' → logprob: -1.713557243347168
    3. ' for' → logprob: -4.713557243347168
    4. '<|end|>' → logprob: -6.338557243347168
    5. ' ' → logprob: -6.963557243347168
    6. ' if' → logprob: -9.713557243347168
    7. ',' → logprob: -9.963557243347168
    8. 'for' → logprob: -9.963557243347168
    9. '	' → logprob: -10.088557243347168
    10. '	for' → logprob: -10.213557243347168

Token 227: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08975674957036972
    2. 'for' (adapté à ' for') → logprob: -2.714756727218628
    3. '   ' → logprob: -3.964756727218628
    4. '       ' → logprob: -7.464756965637207
    5. ' ' → logprob: -10.339756965637207
    6. '	for' → logprob: -10.339756965637207
    7. '0' → logprob: -11.964756965637207
    8. ' if' → logprob: -12.839756965637207
    9. '           ' → logprob: -12.839756965637207
    10. 'if' → logprob: -14.214756965637207

Token 228: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029750484973192215
    2. ' b' → logprob: -3.5297505855560303
    3. '	b' → logprob: -18.52975082397461
    4. '   ' → logprob: -19.02975082397461
    5. ' ' → logprob: -19.65475082397461
    6. '_b' → logprob: -21.65475082397461
    7. ''b' → logprob: -21.90475082397461
    8. ')b' → logprob: -22.15475082397461
    9. '  ' → logprob: -22.52975082397461
    10. 'a' → logprob: -22.65475082397461

Token 229: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001567353610880673
    2. 'in' → logprob: -6.751567363739014
    3. ' ' → logprob: -8.126566886901855
    4. '<|end|>' → logprob: -9.501566886901855
    5. '	in' → logprob: -11.376566886901855
    6. ' range' → logprob: -11.876566886901855
    7. 'range' → logprob: -12.501566886901855
    8. ' =' → logprob: -14.376566886901855
    9. '<|end|>' → logprob: -14.626566886901855
    10. ',' → logprob: -14.751566886901855

Token 230: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.769446611404419
    2. '(-' → logprob: -1.019446611404419
    3. ' range' → logprob: -1.769446611404419
    4. '-range' → logprob: -5.51944637298584
    5. '(range' → logprob: -7.26944637298584
    6. ' -' → logprob: -7.89444637298584
    7. ' (-' → logprob: -8.14444637298584
    8. '-limit' → logprob: -10.26944637298584
    9. 'limit' → logprob: -10.64444637298584
    10. '-' → logprob: -10.64444637298584

Token 231: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -4.008129963040119e-06
    2. '-limit' → logprob: -12.750003814697266
    3. ' (-' → logprob: -14.500003814697266
    4. '(limit' → logprob: -15.125003814697266
    5. '(' → logprob: -16.000003814697266
    6. ' -' → logprob: -16.000003814697266
    7. '-' → logprob: -16.500003814697266
    8. '[-' → logprob: -17.500003814697266
    9. '-l' → logprob: -17.750003814697266
    10. '   ' → logprob: -18.500003814697266

Token 232: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -7.107425062713446e-06
    2. ' limit' → logprob: -11.875006675720215
    3. '(limit' → logprob: -17.62500762939453
    4. '-limit' → logprob: -18.25000762939453
    5. '_limit' → logprob: -19.62500762939453
    6. ' ' → logprob: -20.12500762939453
    7. 'lim' → logprob: -20.25000762939453
    8. '   ' → logprob: -21.00000762939453
    9. '1' → logprob: -21.37500762939453
    10. 'Limit' → logprob: -21.50000762939453

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01519500557333231
    2. '+' → logprob: -4.265194892883301
    3. ' ,' → logprob: -7.140194892883301
    4. ' +' → logprob: -8.8901948928833
    5. '+,' → logprob: -9.7651948928833
    6. '1' → logprob: -10.6401948928833
    7. 'limit' → logprob: -12.3901948928833
    8. '   ' → logprob: -12.7651948928833
    9. '(limit' → logprob: -12.8901948928833
    10. ' ' → logprob: -13.1401948928833

Token 234: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.048589639365673065
    2. ' limit' → logprob: -3.0485897064208984
    3. '(limit' → logprob: -13.548589706420898
    4. 'lim' → logprob: -15.173589706420898
    5. ' ' → logprob: -15.423589706420898
    6. '   ' → logprob: -15.673589706420898
    7. '_limit' → logprob: -16.1735897064209
    8. '-limit' → logprob: -16.5485897064209
    9. '    ' → logprob: -16.6735897064209
    10. '
' → logprob: -17.1735897064209

Token 235: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00016313401283696294
    2. ' +' → logprob: -8.750163078308105
    3. '1' → logprob: -12.500163078308105
    4. '+
' → logprob: -15.125163078308105
    5. ',' → logprob: -15.250163078308105
    6. '()+' → logprob: -16.125164031982422
    7. ')+' → logprob: -16.500164031982422
    8. '):
' → logprob: -16.625164031982422
    9. ')' → logprob: -17.375164031982422
    10. '2' → logprob: -17.500164031982422

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0683535037969705e-05
    2. ' ' → logprob: -11.62501049041748
    3. '+' → logprob: -14.12501049041748
    4. '2' → logprob: -14.37501049041748
    5. ')' → logprob: -15.87501049041748
    6. ',' → logprob: -17.000011444091797
    7. '```' → logprob: -17.062511444091797
    8. '   ' → logprob: -17.625011444091797
    9. '=' → logprob: -18.375011444091797
    10. '0' → logprob: -18.437511444091797

Token 237: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25226253271102905
    2. '):' → logprob: -1.5022625923156738
    3. '           ' → logprob: -8.752262115478516
    4. '       ' → logprob: -9.502262115478516
    5. ':' → logprob: -9.752262115478516
    6. '):
' → logprob: -10.752262115478516
    7. '):

' → logprob: -11.752262115478516
    8. ':
' → logprob: -12.127262115478516
    9. '   ' → logprob: -13.627262115478516
    10. ')' → logprob: -13.752262115478516

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38765156269073486
    2. '       ' → logprob: -1.1376515626907349
    3. ' if' → logprob: -8.012651443481445
    4. '<|end|>' → logprob: -8.512651443481445
    5. '	       ' → logprob: -9.012651443481445
    6. ',' → logprob: -10.637651443481445
    7. '               ' → logprob: -10.762651443481445
    8. '   ' → logprob: -11.262651443481445
    9. '        
' → logprob: -11.637651443481445
    10. '        ' → logprob: -11.762651443481445

Token 239: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2481054663658142
    2. '           ' → logprob: -2.123105525970459
    3. 'if' (adapté à ' if') → logprob: -2.498105525970459
    4. '               ' → logprob: -4.123105525970459
    5. '       ' → logprob: -6.623105525970459
    6. '   ' → logprob: -8.2481050491333
    7. ' norm' → logprob: -11.8731050491333
    8. ' continue' → logprob: -12.1231050491333
    9. ' ' → logprob: -12.2481050491333
    10. '            
' → logprob: -12.7481050491333

Token 240: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.430785208940506
    2. ' a' → logprob: -1.0557851791381836
    3. ' (' → logprob: -6.930785179138184
    4. '(a' → logprob: -7.305785179138184
    5. ' is' → logprob: -8.805785179138184
    6. ' not' → logprob: -8.930785179138184
    7. '(' → logprob: -10.305785179138184
    8. '   ' → logprob: -10.805785179138184
    9. ' ' → logprob: -10.930785179138184
    10. 'is' → logprob: -10.930785179138184

Token 241: '*a' (ID: 78448)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5380901098251343
    2. '==' → logprob: -1.2880901098251343
    3. '*a' → logprob: -2.288090229034424
    4. '**' → logprob: -3.913090229034424
    5. '*' → logprob: -4.538090229034424
    6. ' *' → logprob: -5.163090229034424
    7. 'a' → logprob: -6.538090229034424
    8. ' !=' → logprob: -7.413090229034424
    9. '!=' → logprob: -8.913089752197266
    10. ' ' → logprob: -8.913089752197266

Token 242: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7065516710281372
    2. ' +' → logprob: -0.7065516710281372
    3. ' <=' → logprob: -5.081551551818848
    4. '<=' → logprob: -5.331551551818848
    5. '+b' → logprob: -6.206551551818848
    6. ' >' → logprob: -9.081551551818848
    7. '>' → logprob: -9.331551551818848
    8. ' ' → logprob: -10.831551551818848
    9. '+B' → logprob: -12.206551551818848
    10. '```' → logprob: -12.956551551818848

Token 243: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.15310683415737e-05
    2. ' b' → logprob: -10.750021934509277
    3. '   ' → logprob: -19.87502098083496
    4. ' ' → logprob: -20.25002098083496
    5. '<|end|>' → logprob: -20.37502098083496
    6. ')b' → logprob: -20.87502098083496
    7. '	b' → logprob: -21.00002098083496
    8. '  ' → logprob: -21.75002098083496
    9. '```' → logprob: -22.12502098083496
    10. '       ' → logprob: -22.75002098083496

Token 244: '*b' (ID: 72162)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07777274399995804
    2. '*b' → logprob: -3.702772855758667
    3. ' <=' → logprob: -4.077772617340088
    4. '<=' → logprob: -4.327772617340088
    5. '*a' → logprob: -4.702772617340088
    6. ' ' → logprob: -5.327772617340088
    7. '[' → logprob: -6.702772617340088
    8. '>' → logprob: -6.827772617340088
    9. ' *' → logprob: -7.202772617340088
    10. ' >' → logprob: -7.327772617340088

Token 245: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7525271773338318
    2. '<=' → logprob: -1.5025272369384766
    3. ' >' → logprob: -1.7525272369384766
    4. ' <=' → logprob: -2.3775272369384766
    5. '==' → logprob: -3.3775272369384766
    6. ' ==' → logprob: -5.127527236938477
    7. '0' → logprob: -10.127527236938477
    8. '!=' → logprob: -11.502527236938477
    9. ' ' → logprob: -11.627527236938477
    10. '=' → logprob: -12.627527236938477

Token 246: ' ' (ID: 220)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.07981905341148376
    2. ' norm' → logprob: -3.2048189640045166
    3. '0' → logprob: -3.3298189640045166
    4. ' ' → logprob: -8.079818725585938
    5. '   ' → logprob: -11.579818725585938
    6. '1' → logprob: -11.579818725585938
    7. '(norm' → logprob: -11.704818725585938
    8. '    ' → logprob: -12.579818725585938
    9. '
' → logprob: -13.079818725585938
    10. 'n' → logprob: -13.329818725585938

Token 247: '0' (ID: 15)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.0062902988865971565
    2. '0' → logprob: -5.506290435791016
    3. ' norm' → logprob: -6.131290435791016
    4. ' ' → logprob: -11.256290435791016
    5. '1' → logprob: -11.506290435791016
    6. '   ' → logprob: -12.631290435791016
    7. '
' → logprob: -12.881290435791016
    8. 'n' → logprob: -13.131290435791016
    9. '(norm' → logprob: -13.631290435791016
    10. 'm' → logprob: -14.131290435791016

Token 248: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09973323345184326
    2. ':
' → logprob: -2.474733352661133
    3. ' or' → logprob: -4.724733352661133
    4. '               ' → logprob: -6.724733352661133
    5. '           ' → logprob: -7.599733352661133
    6. '       ' → logprob: -9.974733352661133
    7. ' :' → logprob: -10.224733352661133
    8. '   ' → logprob: -10.599733352661133
    9. ' continue' → logprob: -11.599733352661133
    10. ':return' → logprob: -11.724733352661133

Token 249: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019180988892912865
    2. '           ' → logprob: -4.269180774688721
    3. ' continue' → logprob: -5.519180774688721
    4. 'continue' → logprob: -8.019181251525879
    5. ':' → logprob: -8.144181251525879
    6. ':
' → logprob: -8.644181251525879
    7. '       ' → logprob: -9.769181251525879
    8. ',' → logprob: -10.519181251525879
    9. '	           ' → logprob: -10.894181251525879
    10. '	       ' → logprob: -11.019181251525879

Token 250: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05802801251411438
    2. ' continue' → logprob: -2.933027982711792
    3. 'continue' (adapté à ' continue') → logprob: -6.058028221130371
    4. '           ' → logprob: -7.683028221130371
    5. '                   ' → logprob: -8.183028221130371
    6. '	continue' → logprob: -10.683028221130371
    7. '   ' → logprob: -10.808028221130371
    8. '	           ' → logprob: -12.433028221130371
    9. ' ' → logprob: -12.683028221130371
    10. '_continue' → logprob: -13.308028221130371

Token 251: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004032687284052372
    2. '<|end|>' → logprob: -6.004032611846924
    3. '
' → logprob: -7.129032611846924
    4. '            
' → logprob: -7.629032611846924
    5. '       ' → logprob: -9.004033088684082
    6. '          ' → logprob: -10.379033088684082
    7. '<|end|>' → logprob: -10.754033088684082
    8. '  
' → logprob: -11.004033088684082
    9. '               ' → logprob: -11.254033088684082
    10. '           
' → logprob: -11.379033088684082

Token 252: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.32523515378125e-05
    2. '<|end|>' → logprob: -10.250062942504883
    3. '            
' → logprob: -11.375062942504883
    4. '          ' → logprob: -12.250062942504883
    5. '       ' → logprob: -12.500062942504883
    6. ',' → logprob: -12.500062942504883
    7. '<|end|>' → logprob: -14.375062942504883
    8. '           
' → logprob: -14.500062942504883
    9. '               ' → logprob: -14.500062942504883
    10. '
' → logprob: -14.500062942504883

Token 253: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05135737359523773
    2. ' if' → logprob: -3.0513572692871094
    3. 'if' (adapté à ' if') → logprob: -6.551357269287109
    4. '       ' → logprob: -6.676357269287109
    5. '<|end|>' → logprob: -10.42635726928711
    6. '            
' → logprob: -11.67635726928711
    7. '   ' → logprob: -11.67635726928711
    8. '          ' → logprob: -11.80135726928711
    9. '               ' → logprob: -12.42635726928711
    10. ' ' → logprob: -12.67635726928711

Token 254: ' (' (ID: 350)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1277376264333725
    2. 'is' → logprob: -2.127737522125244
    3. ' not' → logprob: -8.002737998962402
    4. 'a' → logprob: -8.627737998962402
    5. ' a' → logprob: -8.627737998962402
    6. ' (' → logprob: -10.002737998962402
    7. 'not' → logprob: -10.877737998962402
    8. 'norm' → logprob: -11.377737998962402
    9. '(is' → logprob: -11.627737998962402
    10. ' norm' → logprob: -11.752737998962402

Token 255: 'norm' (ID: 30970)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.028197335079312325
    2. 'a' → logprob: -3.9031972885131836
    3. ' is' → logprob: -4.903197288513184
    4. ' a' → logprob: -9.653197288513184
    5. 'abs' → logprob: -9.653197288513184
    6. ')' → logprob: -10.778197288513184
    7. 'm' → logprob: -11.028197288513184
    8. 'not' → logprob: -11.528197288513184
    9. ')is' → logprob: -11.778197288513184
    10. '(is' → logprob: -12.778197288513184

Token 256: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.042319297790527344
    2. '%' → logprob: -3.2923192977905273
    3. ')' → logprob: -5.542319297790527
    4. ' ' → logprob: -9.042319297790527
    5. ' )' → logprob: -9.042319297790527
    6. ' %
' → logprob: -10.167319297790527
    7. ' ' → logprob: -10.792319297790527
    8. ')%' → logprob: -11.042319297790527
    9. '%s' → logprob: -11.292319297790527
    10. ' %)' → logprob: -11.667319297790527

Token 257: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.018222050741314888
    2. ' (' → logprob: -4.018221855163574
    3. '(' → logprob: -10.018221855163574
    4. '((' → logprob: -11.768221855163574
    5. '
' → logprob: -12.518221855163574
    6. '(abs' → logprob: -12.643221855163574
    7. ')' → logprob: -12.893221855163574
    8. '(A' → logprob: -13.018221855163574
    9. '(
' → logprob: -13.518221855163574
    10. '(ans' → logprob: -13.518221855163574

Token 258: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10053962469100952
    2. '(a' → logprob: -2.3505396842956543
    3. ' a' → logprob: -8.725539207458496
    4. ' (' → logprob: -8.850539207458496
    5. '(' → logprob: -11.225539207458496
    6. ')' → logprob: -12.725539207458496
    7. '   ' → logprob: -12.850539207458496
    8. ')a' → logprob: -13.100539207458496
    9. '[a' → logprob: -13.225539207458496
    10. '((' → logprob: -13.725539207458496

Token 259: '*a' (ID: 78448)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5760982632637024
    2. '*a' → logprob: -0.8260982632637024
    3. ' a' → logprob: -9.076098442077637
    4. ' *' → logprob: -10.701098442077637
    5. '*' → logprob: -11.576098442077637
    6. ''a' → logprob: -12.576098442077637
    7. '
' → logprob: -12.701098442077637
    8. ' ' → logprob: -13.576098442077637
    9. '	a' → logprob: -13.951098442077637
    10. '(a' → logprob: -14.076098442077637

Token 260: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2326248586177826
    2. '+b' → logprob: -1.732624888420105
    3. ' +' → logprob: -3.4826247692108154
    4. 'b' → logprob: -13.607625007629395
    5. '+B' → logprob: -14.732625007629395
    6. '+a' → logprob: -15.232625007629395
    7. '＋' → logprob: -15.857625007629395
    8. '   ' → logprob: -15.857625007629395
    9. ' ' → logprob: -15.982625007629395
    10. ')' → logprob: -16.107624053955078

Token 261: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.836499985889532e-05
    2. ' b' → logprob: -9.7500581741333
    3. ')b' → logprob: -19.000059127807617
    4. ' ' → logprob: -19.125059127807617
    5. '+b' → logprob: -20.250059127807617
    6. '	b' → logprob: -20.750059127807617
    7. '   ' → logprob: -21.750059127807617
    8. '(b' → logprob: -21.875059127807617
    9. ')' → logprob: -22.125059127807617
    10. '*b' → logprob: -22.375059127807617

Token 262: '*b' (ID: 72162)
  Prédit: '*b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.04209678992629051
    2. 'b' → logprob: -3.6670968532562256
    3. ')' → logprob: -4.4170966148376465
    4. '))' → logprob: -5.9170966148376465
    5. ')b' → logprob: -8.167097091674805
    6. '2' → logprob: -8.292097091674805
    7. ')==' → logprob: -8.667097091674805
    8. '	b' → logprob: -10.292097091674805
    9. '*)' → logprob: -10.667097091674805
    10. '*' → logprob: -11.042097091674805

Token 263: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07852926850318909
    2. ')==' → logprob: -3.0785293579101562
    3. '==' → logprob: -4.078529357910156
    4. ')!=' → logprob: -4.703529357910156
    5. ' )' → logprob: -6.703529357910156
    6. '!=' → logprob: -6.703529357910156
    7. ' !=' → logprob: -7.578529357910156
    8. ' ==' → logprob: -7.578529357910156
    9. '))' → logprob: -10.703529357910156
    10. '   ' → logprob: -13.703529357910156

Token 264: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02731696143746376
    2. ' ==' → logprob: -3.6523170471191406
    3. '!=' → logprob: -7.027317047119141
    4. ' !=' → logprob: -9.02731704711914
    5. ')==' → logprob: -12.27731704711914
    6. '=' → logprob: -12.90231704711914
    7. '===' → logprob: -14.27731704711914
    8. '==
' → logprob: -14.52731704711914
    9. ')' → logprob: -15.77731704711914
    10. '```' → logprob: -16.15231704711914

Token 265: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002475777640938759
    2. ' ' → logprob: -6.002475738525391
    3. '   ' → logprob: -16.37747573852539
    4. '  ' → logprob: -17.87747573852539
    5. ' ' → logprob: -18.00247573852539
    6. '۰' → logprob: -18.62747573852539
    7. '00' → logprob: -19.37747573852539
    8. '  ' → logprob: -19.62747573852539
    9. '٠' → logprob: -19.75247573852539
    10. '```' → logprob: -19.75247573852539

Token 266: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.37506675720215
    4. '  ' → logprob: -19.12506675720215
    5. '۰' → logprob: -19.25006675720215
    6. '  ' → logprob: -19.75006675720215
    7. '
' → logprob: -20.25006675720215
    8. '    ' → logprob: -20.50006675720215
    9. ')' → logprob: -20.62506675720215
    10. '٠' → logprob: -20.68756675720215

Token 267: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.028473472222685814
    2. '           ' → logprob: -3.903473377227783
    3. '               ' → logprob: -5.153473377227783
    4. 'and' → logprob: -6.278473377227783
    5. ':' → logprob: -9.153473854064941
    6. '            ' → logprob: -10.278473854064941
    7. '       ' → logprob: -10.403473854064941
    8. '              ' → logprob: -11.028473854064941
    9. '          ' → logprob: -11.653473854064941
    10. ',' → logprob: -11.778473854064941

Token 268: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.477644681930542
    2. '               ' → logprob: -0.977644681930542
    3. '           ' → logprob: -6.227644920349121
    4. ' ' → logprob: -8.352644920349121
    5. 'and' → logprob: -8.352644920349121
    6. '<|end|>' → logprob: -8.352644920349121
    7. ':' → logprob: -8.602644920349121
    8. ':
' → logprob: -8.852644920349121
    9. '                
' → logprob: -9.102644920349121
    10. ',' → logprob: -9.352644920349121

Token 269: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3073466718196869
    2. 'if' (adapté à ' if') → logprob: -1.5573467016220093
    3. '               ' → logprob: -2.9323465824127197
    4. '           ' → logprob: -7.557346820831299
    5. '                   ' → logprob: -9.93234634399414
    6. '   ' → logprob: -10.18234634399414
    7. ' and' → logprob: -10.80734634399414
    8. '       ' → logprob: -12.80734634399414
    9. ' ' → logprob: -12.93234634399414
    10. '	if' → logprob: -13.93234634399414

Token 270: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.47407791018486023
    2. ' is' → logprob: -0.9740779399871826
    3. '(is' → logprob: -14.974078178405762
    4. '   ' → logprob: -15.849078178405762
    5. ' ' → logprob: -16.099077224731445
    6. '                   ' → logprob: -16.474077224731445
    7. '           ' → logprob: -16.724077224731445
    8. '	is' → logprob: -17.099077224731445
    9. '               ' → logprob: -17.224077224731445
    10. ' ' → logprob: -17.599077224731445

Token 271: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -4.320199877838604e-07
    2. 'div' → logprob: -15.25
    3. '_' → logprob: -16.375
    4. '_DIV' → logprob: -18.5
    5. '_def' → logprob: -19.0
    6. '<div' → logprob: -19.25
    7. ' _' → logprob: -19.875
    8. ' divisor' → logprob: -21.0
    9. '(div' → logprob: -21.25
    10. '	div' → logprob: -21.375

Token 272: 'isor' (ID: 65473)
  Prédit: 'isor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isor' → logprob: -0.006004755850881338
    2. 'is' → logprob: -5.131004810333252
    3. 'a' → logprob: -10.881004333496094
    4. 's' → logprob: -11.131004333496094
    5. '(a' → logprob: -11.381004333496094
    6. '(is' → logprob: -11.881004333496094
    7. '   ' → logprob: -12.756004333496094
    8. '_is' → logprob: -13.006004333496094
    9. 'visor' → logprob: -13.256004333496094
    10. 'or' → logprob: -13.381004333496094

Token 273: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.008660778403282166
    2. '(m' → logprob: -4.758660793304443
    3. ' (' → logprob: -10.258660316467285
    4. '(' → logprob: -12.008660316467285
    5. '(
' → logprob: -12.258660316467285
    6. '((' → logprob: -16.1336612701416
    7. '   ' → logprob: -17.0086612701416
    8. '(abs' → logprob: -17.8836612701416
    9. '(ab' → logprob: -17.8836612701416
    10. 'm' → logprob: -18.0086612701416

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03394430875778198
    2. ',n' → logprob: -3.9089443683624268
    3. ',b' → logprob: -4.533944129943848
    4. ' ,' → logprob: -6.033944129943848
    5. ',m' → logprob: -9.158944129943848
    6. 'b' → logprob: -10.033944129943848
    7. ',
' → logprob: -11.908944129943848
    8. '(n' → logprob: -12.283944129943848
    9. 'n' → logprob: -12.908944129943848
    10. '(' → logprob: -13.408944129943848

Token 275: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00027468299958854914
    2. ' b' → logprob: -8.375274658203125
    3. 'm' → logprob: -10.125274658203125
    4. 'n' → logprob: -12.625274658203125
    5. 'a' → logprob: -14.250274658203125
    6. ' m' → logprob: -16.500274658203125
    7. ' n' → logprob: -17.500274658203125
    8. ' ' → logprob: -17.875274658203125
    9. ',b' → logprob: -18.375274658203125
    10. ',' → logprob: -18.750274658203125

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015322434483096004
    2. ',m' → logprob: -6.751532077789307
    3. ' ,' → logprob: -8.126532554626465
    4. '(m' → logprob: -10.751532554626465
    5. ',
' → logprob: -10.751532554626465
    6. 'm' → logprob: -11.376532554626465
    7. '   ' → logprob: -12.126532554626465
    8. '           ' → logprob: -13.501532554626465
    9. '(' → logprob: -13.501532554626465
    10. '       ' → logprob: -14.126532554626465

Token 277: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -5.676981345459353e-06
    2. ' m' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.500005722045898
    4. '
' → logprob: -17.0000057220459
    5. '    ' → logprob: -18.8750057220459
    6. '  ' → logprob: -20.2500057220459
    7. '       ' → logprob: -20.5000057220459
    8. '```' → logprob: -20.6250057220459
    9. '           ' → logprob: -21.1250057220459
    10. '                   ' → logprob: -21.2500057220459

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022108007688075304
    2. ',n' → logprob: -6.12721061706543
    3. ' ,' → logprob: -10.62721061706543
    4. '```' → logprob: -14.62721061706543
    5. '   ' → logprob: -15.37721061706543
    6. ',q' → logprob: -15.62721061706543
    7. ',
' → logprob: -15.87721061706543
    8. ')' → logprob: -16.00221061706543
    9. ',b' → logprob: -16.12721061706543
    10. 'n' → logprob: -16.75221061706543

Token 279: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004307884373702109
    2. ' n' → logprob: -7.750430583953857
    3. '   ' → logprob: -17.250431060791016
    4. '	n' → logprob: -17.750431060791016
    5. '  ' → logprob: -18.125431060791016
    6. '
' → logprob: -18.500431060791016
    7. ' ' → logprob: -18.500431060791016
    8. ',n' → logprob: -19.500431060791016
    9. '    ' → logprob: -19.750431060791016
    10. '_n' → logprob: -20.000431060791016

Token 280: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10026243329048157
    2. '):
' → logprob: -2.350262403488159
    3. '):
' → logprob: -10.350262641906738
    4. ')' → logprob: -11.850262641906738
    5. '                   ' → logprob: -12.100262641906738
    6. '               ' → logprob: -12.600262641906738
    7. '):

' → logprob: -12.850262641906738
    8. '           ' → logprob: -12.975262641906738
    9. ':' → logprob: -14.225262641906738
    10. ' ):' → logprob: -14.225262641906738

Token 281: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00019257364328950644
    2. '                       ' → logprob: -9.875192642211914
    3. '               ' → logprob: -10.250192642211914
    4. ':
' → logprob: -10.375192642211914
    5. '                  ' → logprob: -10.625192642211914
    6. ':' → logprob: -10.750192642211914
    7. '                    
' → logprob: -12.000192642211914
    8. '):
' → logprob: -12.125192642211914
    9. '           ' → logprob: -12.250192642211914
    10. ',' → logprob: -12.375192642211914

Token 282: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.08623587340116501
    2. '                   ' → logprob: -3.336235761642456
    3. '                       ' → logprob: -3.461235761642456
    4. ' count' → logprob: -4.211236000061035
    5. '       ' → logprob: -7.711236000061035
    6. '               ' → logprob: -8.711236000061035
    7. '   ' → logprob: -8.836236000061035
    8. '           ' → logprob: -10.336236000061035
    9. '
' → logprob: -10.711236000061035
    10. 'if' → logprob: -12.461236000061035

Token 283: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38695889711380005
    2. ' +=' → logprob: -1.1369588375091553
    3. ']+=' → logprob: -10.261959075927734
    4. '=' → logprob: -10.386959075927734
    5. '+' → logprob: -11.011959075927734
    6. '   ' → logprob: -13.386959075927734
    7. '```' → logprob: -13.761959075927734
    8. '    ' → logprob: -14.136959075927734
    9. ' ' → logprob: -14.636959075927734
    10. ')' → logprob: -15.136959075927734

Token 284: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.392824874026701e-05
    2. ' ' → logprob: -10.50003433227539
    3. '2' → logprob: -12.50003433227539
    4. '4' → logprob: -13.25003433227539
    5. '8' → logprob: -14.37503433227539
    6. '   ' → logprob: -15.62503433227539
    7. '(' → logprob: -18.00003433227539
    8. '       ' → logprob: -18.06253433227539
    9. '[' → logprob: -18.75003433227539
    10. '0' → logprob: -18.81253433227539

Token 285: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3557529857498594e-05
    2. '4' → logprob: -11.37502384185791
    3. '2' → logprob: -12.00002384185791
    4. ' ' → logprob: -12.50002384185791
    5. '8' → logprob: -13.12502384185791
    6. '   ' → logprob: -15.87502384185791
    7. '(' → logprob: -17.812522888183594
    8. '
' → logprob: -18.062522888183594
    9. '  ' → logprob: -18.187522888183594
    10. '0' → logprob: -18.812522888183594

Token 286: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014695111894980073
    2. '
' → logprob: -6.626469612121582
    3. 'return' → logprob: -9.626469612121582
    4. ' return' → logprob: -10.251469612121582
    5. '    
' → logprob: -10.376469612121582
    6. '	return' → logprob: -12.251469612121582
    7. '       ' → logprob: -12.376469612121582
    8. '  
' → logprob: -14.626469612121582
    9. '```' → logprob: -15.001469612121582
    10. '<|end|>' → logprob: -15.001469612121582

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00025978617486543953
    2. 'return' → logprob: -9.125259399414062
    3. '
' → logprob: -9.625259399414062
    4. ' return' → logprob: -9.875259399414062
    5. '	return' → logprob: -10.875259399414062
    6. '       ' → logprob: -11.375259399414062
    7. '    
' → logprob: -13.125259399414062
    8. '```' → logprob: -15.250259399414062
    9. ':return' → logprob: -16.125259399414062
    10. '           ' → logprob: -16.375259399414062

Token 288: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.127049058675766
    2. 'return' (adapté à ' return') → logprob: -2.127048969268799
    3. ' return' → logprob: -9.127049446105957
    4. '	return' → logprob: -12.002049446105957
    5. '       ' → logprob: -12.752049446105957
    6. '```' → logprob: -14.127049446105957
    7. ' ' → logprob: -14.377049446105957
    8. '
' → logprob: -14.502049446105957
    9. ':return' → logprob: -14.627049446105957
    10. '    
' → logprob: -15.377049446105957

Token 289: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00033546582562848926
    2. ' count' → logprob: -8.000335693359375
    3. '(count' → logprob: -17.375335693359375
    4. '   ' → logprob: -19.625335693359375
    5. '2' → logprob: -20.125335693359375
    6. ' ' → logprob: -20.875335693359375
    7. 'int' → logprob: -21.125335693359375
    8. 'c' → logprob: -21.250335693359375
    9. '	count' → logprob: -21.750335693359375
    10. 'counter' → logprob: -22.000335693359375

Token 290: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 291: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 292: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0010465048253536224
    2. 'main' → logprob: -7.251046657562256
    3. ' count' → logprob: -8.126046180725098
    4. ' normalize' → logprob: -11.501046180725098
    5. ' solve' → logprob: -12.126046180725098
    6. ' factor' → logprob: -12.251046180725098
    7. ' mob' → logprob: -12.876046180725098
    8. ' num' → logprob: -13.251046180725098
    9. ' normal' → logprob: -13.251046180725098
    10. ' find' → logprob: -13.376046180725098

Token 293: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.4868770196917467e-05
    2. ' ():' → logprob: -10.875024795532227
    3. '():
' → logprob: -12.375024795532227
    4. '()' → logprob: -14.125024795532227
    5. '(' → logprob: -14.625024795532227
    6. '()>' → logprob: -15.500024795532227
    7. '():
' → logprob: -16.250024795532227
    8. ':' → logprob: -16.375024795532227
    9. '(":' → logprob: -17.125024795532227
    10. '(:' → logprob: -18.000024795532227

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.256090372800827
    2. ' import' → logprob: -1.6310904026031494
    3. 'import' → logprob: -3.6310904026031494
    4. ' for' → logprob: -6.88109016418457
    5. '```' → logprob: -7.00609016418457
    6. ' input' → logprob: -7.13109016418457
    7. ' line' → logprob: -8.38109016418457
    8. 'n' → logprob: -8.50609016418457
    9. 'input' → logprob: -8.75609016418457
    10. 'for' → logprob: -9.00609016418457

Token 295: ' input' (ID: 3422)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.1828913688659668
    2. ' n' → logprob: -1.3078913688659668
    3. 't' → logprob: -1.5578913688659668
    4. 'n' → logprob: -2.307891368865967
    5. ' line' → logprob: -3.682891368865967
    6. ' input' → logprob: -3.807891368865967
    7. ' x' → logprob: -4.182891368865967
    8. 'x' → logprob: -4.307891368865967
    9. '   ' → logprob: -4.682891368865967
    10. ' for' → logprob: -4.807891368865967

Token 296: '_lines' (ID: 42980)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.7158626317977905
    2. '()' → logprob: -0.8408626317977905
    3. '_data' → logprob: -2.59086275100708
    4. '_lines' → logprob: -6.09086275100708
    5. '_' → logprob: -6.96586275100708
    6. '_str' → logprob: -7.34086275100708
    7. '_text' → logprob: -7.46586275100708
    8. ' =' → logprob: -8.590862274169922
    9. '().' → logprob: -9.590862274169922
    10. 's' → logprob: -9.965862274169922

Token 297: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931775212287903
    2. ' =' → logprob: -0.6931775212287903
    3. '()' → logprob: -10.943177223205566
    4. '=sys' → logprob: -12.068177223205566
    5. '   ' → logprob: -12.568177223205566
    6. ' ' → logprob: -13.568177223205566
    7. '	' → logprob: -14.818177223205566
    8. '(' → logprob: -14.943177223205566
    9. '=[]' → logprob: -15.193177223205566
    10. ' =
' → logprob: -15.443177223205566

Token 298: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.023245712742209435
    2. ' sys' → logprob: -3.7732458114624023
    3. '[' → logprob: -15.398245811462402
    4. '	sys' → logprob: -17.273244857788086
    5. '=sys' → logprob: -17.523244857788086
    6. '(sys' → logprob: -17.773244857788086
    7. ' [' → logprob: -19.648244857788086
    8. '[]' → logprob: -20.523244857788086
    9. 'list' → logprob: -21.398244857788086
    10. '```' → logprob: -21.648244857788086

Token 299: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0010634170612320304
    2. '.' → logprob: -6.876063346862793
    3. '.readline' → logprob: -11.001063346862793
    4. '.argv' → logprob: -12.001063346862793
    5. '.stdout' → logprob: -12.126063346862793
    6. '.std' → logprob: -13.876063346862793
    7. 'stdin' → logprob: -14.376063346862793
    8. '.readlines' → logprob: -15.376063346862793
    9. '.input' → logprob: -15.876063346862793
    10. '(stdin' → logprob: -16.37606430053711

Token 300: '.read' (ID: 7211)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.33112528920173645
    2. '.readline' → logprob: -1.581125259399414
    3. '.read' → logprob: -2.581125259399414
    4. 'read' → logprob: -7.956125259399414
    5. '.' → logprob: -9.206125259399414
    6. '.buffer' → logprob: -13.831125259399414
    7. '_read' → logprob: -15.331125259399414
    8. '.Read' → logprob: -16.206125259399414
    9. ' readline' → logprob: -16.206125259399414
    10. 'lines' → logprob: -16.706125259399414

Token 301: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.10023200511932373
    2. '()' → logprob: -2.3502321243286133
    3. '(' → logprob: -10.850232124328613
    4. '()
' → logprob: -13.850232124328613
    5. 'lines' → logprob: -14.100232124328613
    6. '_lines' → logprob: -14.100232124328613
    7. '()

' → logprob: -14.350232124328613
    8. '())' → logprob: -14.475232124328613
    9. '_line' → logprob: -14.975232124328613
    10. ' ()' → logprob: -14.975232124328613

Token 302: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0486946702003479
    2. 'split' → logprob: -3.048694610595703
    3. 'rstrip' → logprob: -9.173694610595703
    4. 'read' → logprob: -12.798694610595703
    5. 'decode' → logprob: -14.673694610595703
    6. ' strip' → logprob: -16.173694610595703
    7. 'replace' → logprob: -17.173694610595703
    8. '```' → logprob: -17.298694610595703
    9. ' split' → logprob: -17.298694610595703
    10. 'str' → logprob: -17.673694610595703

Token 303: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.008615872822701931
    2. '()' → logprob: -4.758615970611572
    3. 'split' → logprob: -14.508615493774414
    4. '()
' → logprob: -15.383615493774414
    5. '(' → logprob: -15.633615493774414
    6. '().'' → logprob: -15.758615493774414
    7. '('' → logprob: -15.883615493774414
    8. ' ().' → logprob: -16.758615493774414
    9. '()\' → logprob: -17.008615493774414
    10. '()`' → logprob: -17.258615493774414

Token 304: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.375
    3. '(split' → logprob: -18.75
    4. 'strip' → logprob: -21.25
    5. 'spl' → logprob: -21.25
    6. 'decode' → logprob: -21.625
    7. '```' → logprob: -22.875
    8. 'plit' → logprob: -24.0
    9. '.split' → logprob: -24.5
    10. 'rstrip' → logprob: -24.5

Token 305: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5809613466262817
    2. '('\' → logprob: -0.8309613466262817
    3. 'lines' → logprob: -5.830961227416992
    4. '('' → logprob: -6.455961227416992
    5. '(' → logprob: -8.705961227416992
    6. '("\' → logprob: -8.830961227416992
    7. '()\' → logprob: -8.830961227416992
    8. '()[' → logprob: -10.330961227416992
    9. '()
' → logprob: -12.455961227416992
    10. '(\' → logprob: -13.205961227416992

Token 306: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.320199877838604e-07
    2. '\n' → logprob: -15.0
    3. ' n' → logprob: -18.875
    4. 'newline' → logprob: -20.0
    5. 'lines' → logprob: -20.625
    6. '	n' → logprob: -22.0
    7. '
' → logprob: -22.125
    8. '```' → logprob: -22.625
    9. 'ndef' → logprob: -22.875
    10. '\' → logprob: -23.0

Token 307: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005909211467951536
    2. '')' → logprob: -7.500590801239014
    3. '   ' → logprob: -11.000591278076172
    4. ')
' → logprob: -11.000591278076172
    5. ']' → logprob: -12.875591278076172
    6. '")' → logprob: -13.875591278076172
    7. '[' → logprob: -14.875591278076172
    8. ' )' → logprob: -15.125591278076172
    9. '）' → logprob: -16.000591278076172
    10. '')
' → logprob: -16.125591278076172

Token 308: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2950107157230377
    2. ' for' → logprob: -1.5450106859207153
    3. 'for' → logprob: -3.170010805130005
    4. '
' → logprob: -10.295010566711426
    5. '    
' → logprob: -10.670010566711426
    6. ' results' → logprob: -10.920010566711426
    7. ' n' → logprob: -11.295010566711426
    8. '```' → logprob: -11.295010566711426
    9. '  ' → logprob: -11.670010566711426
    10. '    ' → logprob: -11.670010566711426

Token 309: ' t' (ID: 260)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04210512712597847
    2. ' for' → logprob: -3.792105197906494
    3. 't' (adapté à ' t') → logprob: -4.042105197906494
    4. 'T' → logprob: -7.417105197906494
    5. ' t' → logprob: -8.667104721069336
    6. 'n' → logprob: -8.792104721069336
    7. '   ' → logprob: -9.542104721069336
    8. 'num' → logprob: -10.042104721069336
    9. ' T' → logprob: -10.542104721069336
    10. 'results' → logprob: -10.667104721069336

Token 310: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01837421953678131
    2. '=' → logprob: -4.018374443054199
    3. 'okens' → logprob: -8.6433744430542
    4. 'oken' → logprob: -11.7683744430542
    5. ' ' → logprob: -11.8933744430542
    6. '_' → logprob: -12.1433744430542
    7. '  ' → logprob: -12.2683744430542
    8. '=int' → logprob: -12.3933744430542
    9. ')' → logprob: -13.0183744430542
    10. ',' → logprob: -13.1433744430542

Token 311: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001234428636962548
    2. ' int' → logprob: -9.000123023986816
    3. 'len' → logprob: -18.500123977661133
    4. '[int' → logprob: -20.125123977661133
    5. '=int' → logprob: -21.250123977661133
    6. '(int' → logprob: -21.500123977661133
    7. '   ' → logprob: -21.875123977661133
    8. '	int' → logprob: -23.750123977661133
    9. ' ' → logprob: -24.375123977661133
    10. '<int' → logprob: -24.500123977661133

Token 312: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0002831464516930282
    2. 'input' → logprob: -8.750283241271973
    3. '(' → logprob: -9.000283241271973
    4. '(
' → logprob: -13.875283241271973
    5. ' input' → logprob: -15.250283241271973
    6. '=input' → logprob: -17.875282287597656
    7. ' (' → logprob: -18.125282287597656
    8. ',input' → logprob: -18.250282287597656
    9. '(

' → logprob: -18.875282287597656
    10. '[input' → logprob: -19.000282287597656

Token 313: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0001673061487963423
    2. '()' → logprob: -9.125166893005371
    3. '()[' → logprob: -10.250166893005371
    4. '[' → logprob: -11.625166893005371
    5. '(' → logprob: -12.375166893005371
    6. '())' → logprob: -12.500166893005371
    7. 'lines' → logprob: -12.875166893005371
    8. '().' → logprob: -13.875166893005371
    9. 'Lines' → logprob: -14.375166893005371
    10. '_' → logprob: -14.750166893005371

Token 314: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -16.375
    3. ' [' → logprob: -19.25
    4. '[
' → logprob: -19.5
    5. '   ' → logprob: -20.625
    6. '\[' → logprob: -20.875
    7. '```' → logprob: -21.125
    8. '(' → logprob: -21.625
    9. '()[' → logprob: -21.75
    10. ')[' → logprob: -21.875

Token 315: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.75
    3. ' ' → logprob: -17.375
    4. '[' → logprob: -19.125
    5. '
' → logprob: -21.5
    6. '   ' → logprob: -22.0
    7. '```' → logprob: -22.75
    8. '۰' → logprob: -23.375
    9. '０' → logprob: -23.875
    10. ']' → logprob: -24.375

Token 316: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00048072010395117104
    2. ')' → logprob: -8.500480651855469
    3. ']' → logprob: -8.500480651855469
    4. '])
' → logprob: -9.750480651855469
    5. ' ])' → logprob: -11.375480651855469
    6. '].' → logprob: -13.375480651855469
    7. ''])' → logprob: -14.250480651855469
    8. '[' → logprob: -14.375480651855469
    9. '][' → logprob: -15.125480651855469
    10. ')]' → logprob: -15.750480651855469

Token 317: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03568658232688904
    2. 'for' → logprob: -3.535686492919922
    3. ' for' → logprob: -5.410686492919922
    4. 'idx' → logprob: -7.785686492919922
    5. 'i' → logprob: -8.035686492919922
    6. 'index' → logprob: -8.535686492919922
    7. '
' → logprob: -8.785686492919922
    8. '    
' → logprob: -8.785686492919922
    9. '```' → logprob: -9.910686492919922
    10. 'line' → logprob: -10.285686492919922

Token 318: ' for' (ID: 395)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.5754867792129517
    2. 'for' (adapté à ' for') → logprob: -1.3254867792129517
    3. 'line' → logprob: -2.575486660003662
    4. 'index' → logprob: -2.825486660003662
    5. '   ' → logprob: -3.825486660003662
    6. ' idx' → logprob: -4.450486660003662
    7. ' for' → logprob: -6.200486660003662
    8. '    
' → logprob: -8.32548713684082
    9. ' index' → logprob: -8.57548713684082
    10. '
' → logprob: -8.82548713684082

Token 319: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008615042082965374
    2. 'i' → logprob: -4.758615016937256
    3. ' _' → logprob: -15.008615493774414
    4. ' idx' → logprob: -17.133615493774414
    5. '	i' → logprob: -17.258615493774414
    6. '_' → logprob: -17.508615493774414
    7. ' line' → logprob: -17.758615493774414
    8. ' ' → logprob: -18.133615493774414
    9. '_i' → logprob: -18.133615493774414
    10. ' case' → logprob: -19.008615493774414

Token 320: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016160234808921814
    2. 'in' → logprob: -4.141160011291504
    3. ' ' → logprob: -9.266160011291504
    4. '	in' → logprob: -11.016160011291504
    5. '    ' → logprob: -12.266160011291504
    6. '1' → logprob: -13.516160011291504
    7. '   ' → logprob: -13.766160011291504
    8. 'In' → logprob: -13.891160011291504
    9. '0' → logprob: -14.141160011291504
    10. ',' → logprob: -14.141160011291504

Token 321: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07888989895582199
    2. ' range' → logprob: -2.578889846801758
    3. ' ' → logprob: -16.828889846801758
    4. '(range' → logprob: -16.828889846801758
    5. '1' → logprob: -17.953889846801758
    6. '	range' → logprob: -17.953889846801758
    7. '   ' → logprob: -18.453889846801758
    8. '  ' → logprob: -18.578889846801758
    9. ' in' → logprob: -19.828889846801758
    10. '    ' → logprob: -20.078889846801758

Token 322: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.5597102396423e-05
    2. '1' → logprob: -10.250035285949707
    3. ' (' → logprob: -16.875036239624023
    4. '   ' → logprob: -17.500036239624023
    5. '(t' → logprob: -19.000036239624023
    6. ' ' → logprob: -19.375036239624023
    7. 't' → logprob: -19.375036239624023
    8. '(
' → logprob: -19.875036239624023
    9. ' t' → logprob: -22.000036239624023
    10. ',' → logprob: -22.125036239624023

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9743012671824545e-05
    2. 't' → logprob: -10.875020027160645
    3. ' ' → logprob: -14.250020027160645
    4. '   ' → logprob: -16.125019073486328
    5. ' t' → logprob: -17.750019073486328
    6. '```' → logprob: -20.500019073486328
    7. '2' → logprob: -21.000019073486328
    8. '
' → logprob: -21.000019073486328
    9. '(' → logprob: -21.000019073486328
    10. ')' → logprob: -21.625019073486328

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.2524021157296374e-05
    2. ' ,' → logprob: -10.000052452087402
    3. ',t' → logprob: -11.875052452087402
    4. ',
' → logprob: -17.25005340576172
    5. 't' → logprob: -18.12505340576172
    6. '(t' → logprob: -18.25005340576172
    7. ',len' → logprob: -18.25005340576172
    8. '‌,' → logprob: -18.25005340576172
    9. '   ' → logprob: -18.37505340576172
    10. '(' → logprob: -18.87505340576172

Token 325: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0001584850688232109
    2. ' t' → logprob: -8.750158309936523
    3. '   ' → logprob: -17.625158309936523
    4. '	t' → logprob: -18.500158309936523
    5. '1' → logprob: -20.500158309936523
    6. 'i' → logprob: -21.125158309936523
    7. '`t' → logprob: -21.375158309936523
    8. ' ' → logprob: -21.375158309936523
    9. '  ' → logprob: -21.500158309936523
    10. '\t' → logprob: -21.750158309936523

Token 326: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0065534901805222034
    2. ',' → logprob: -5.881553649902344
    3. ' +' → logprob: -5.881553649902344
    4. '):' → logprob: -7.006553649902344
    5. '   ' → logprob: -11.131553649902344
    6. '):
' → logprob: -12.381553649902344
    7. '+,' → logprob: -12.506553649902344
    8. '+t' → logprob: -12.506553649902344
    9. '+i' → logprob: -12.631553649902344
    10. ' ,' → logprob: -13.006553649902344

Token 327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. ')' → logprob: -20.3750057220459
    4. '   ' → logprob: -22.3750057220459
    5. '```' → logprob: -22.6250057220459
    6. '
' → logprob: -23.3750057220459
    7. 'i' → logprob: -23.5000057220459
    8. '۱' → logprob: -23.7500057220459
    9. '１' → logprob: -24.2500057220459
    10. '  ' → logprob: -24.7500057220459

Token 328: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0563904233276844
    2. ':' → logprob: -3.4313905239105225
    3. '):
' → logprob: -3.8063905239105225
    4. ',' → logprob: -8.806390762329102
    5. '   ' → logprob: -10.181390762329102
    6. ':
' → logprob: -10.681390762329102
    7. ' ):' → logprob: -10.806390762329102
    8. '():' → logprob: -11.181390762329102
    9. ']:' → logprob: -12.431390762329102
    10. ')' → logprob: -12.931390762329102

Token 329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10102657228708267
    2. '   ' → logprob: -2.3510265350341797
    3. 'tokens' → logprob: -8.35102653503418
    4. ' line' → logprob: -9.10102653503418
    5. 'm' → logprob: -9.35102653503418
    6. ' parts' → logprob: -9.47602653503418
    7. ' tokens' → logprob: -9.85102653503418
    8. ',' → logprob: -9.97602653503418
    9. ' m' → logprob: -9.97602653503418
    10. '```' → logprob: -10.35102653503418

Token 330: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.006147180683910847
    2. ' m' → logprob: -5.131147384643555
    3. '       ' → logprob: -8.631147384643555
    4. '   ' → logprob: -11.256147384643555
    5. ' parts' → logprob: -11.381147384643555
    6. 'x' → logprob: -11.881147384643555
    7. 'parts' → logprob: -12.631147384643555
    8. 'mn' → logprob: -13.006147384643555
    9. 'M' → logprob: -14.006147384643555
    10. 'a' → logprob: -14.381147384643555

Token 331: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015074820257723331
    2. ',n' → logprob: -6.50150728225708
    3. ' ,' → logprob: -12.626507759094238
    4. 'n' → logprob: -13.751507759094238
    5. '‌,' → logprob: -15.001507759094238
    6. ',
' → logprob: -15.876507759094238
    7. ',int' → logprob: -16.626506805419922
    8. ',s' → logprob: -17.001506805419922
    9. ',\
' → logprob: -17.001506805419922
    10. ',num' → logprob: -17.251506805419922

Token 332: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0047063762322068214
    2. ' =' → logprob: -5.504706382751465
    3. ',' → logprob: -7.379706382751465
    4. '=int' → logprob: -13.379706382751465
    5. ')=' → logprob: -14.129706382751465
    6. ')' → logprob: -15.254706382751465
    7. '=

' → logprob: -15.254706382751465
    8. '=input' → logprob: -15.379706382751465
    9. '=
' → logprob: -16.00470542907715
    10. '=user' → logprob: -16.12970542907715

Token 333: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.4740773141384125
    2. 'map' → logprob: -0.9740773439407349
    3. '(map' → logprob: -15.349077224731445
    4. '	map' → logprob: -16.099077224731445
    5. '   ' → logprob: -17.599077224731445
    6. '[' → logprob: -18.099077224731445
    7. '_map' → logprob: -18.724077224731445
    8. 'list' → logprob: -18.974077224731445
    9. '.map' → logprob: -18.974077224731445
    10. '    ' → logprob: -19.724077224731445

Token 334: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -8.697387966094539e-05
    2. 'int' → logprob: -9.750086784362793
    3. '(' → logprob: -10.500086784362793
    4. '(str' → logprob: -14.625086784362793
    5. '<int' → logprob: -15.375086784362793
    6. '[int' → logprob: -15.625086784362793
    7. '=int' → logprob: -15.875086784362793
    8. ',int' → logprob: -16.25008773803711
    9. ' int' → logprob: -17.12508773803711
    10. ' (' → logprob: -17.87508773803711

Token 335: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.04750460386276245
    2. ',' → logprob: -3.2975046634674072
    3. '(input' → logprob: -4.672504425048828
    4. 'input' → logprob: -10.422504425048828
    5. ' ,' → logprob: -11.422504425048828
    6. '=input' → logprob: -12.172504425048828
    7. '[input' → logprob: -12.172504425048828
    8. ',user' → logprob: -12.422504425048828
    9. ' input' → logprob: -12.547504425048828
    10. ',(' → logprob: -13.047504425048828

Token 336: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0004306692280806601
    2. ' input' → logprob: -7.750430583953857
    3. '(input' → logprob: -19.500431060791016
    4. ')' → logprob: -20.250431060791016
    5. ',input' → logprob: -20.625431060791016
    6. '	input' → logprob: -20.875431060791016
    7. '[input' → logprob: -21.500431060791016
    8. '=input' → logprob: -22.250431060791016
    9. '   ' → logprob: -23.250431060791016
    10. '_input' → logprob: -23.250431060791016

Token 337: '_lines' (ID: 42980)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5893019437789917
    2. '_lines' → logprob: -0.8393019437789917
    3. '().' → logprob: -4.464302062988281
    4. '(' → logprob: -7.339302062988281
    5. '[input' → logprob: -7.714302062988281
    6. '(user' → logprob: -8.714302062988281
    7. 'Lines' → logprob: -9.214302062988281
    8. '()' → logprob: -9.589302062988281
    9. '=input' → logprob: -9.964302062988281
    10. '(lines' → logprob: -10.089302062988281

Token 338: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011050889268517494
    2. '[' → logprob: -4.511050701141357
    3. '[line' → logprob: -13.886051177978516
    4. '[
' → logprob: -14.261051177978516
    5. ' [' → logprob: -14.511051177978516
    6. ')[' → logprob: -15.386051177978516
    7. '   ' → logprob: -15.511051177978516
    8. '[I' → logprob: -16.011051177978516
    9. '[m' → logprob: -16.011051177978516
    10. '[input' → logprob: -16.511051177978516

Token 339: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.005307754501700401
    2. '[i' → logprob: -6.005307674407959
    3. '[' → logprob: -6.130307674407959
    4. '.split' → logprob: -8.380308151245117
    5. '][' → logprob: -8.505308151245117
    6. ']' → logprob: -8.505308151245117
    7. '.strip' → logprob: -12.505308151245117
    8. '])' → logprob: -12.630308151245117
    9. 'split' → logprob: -13.130308151245117
    10. '   ' → logprob: -13.130308151245117

Token 340: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.01816738210618496
    2. 'strip' → logprob: -4.018167495727539
    3. '(split' → logprob: -11.268167495727539
    4. 'rstrip' → logprob: -12.518167495727539
    5. ' split' → logprob: -14.393167495727539
    6. '.split' → logprob: -15.268167495727539
    7. 'plit' → logprob: -16.14316749572754
    8. ' strip' → logprob: -17.26816749572754
    9. '(strip' → logprob: -17.26816749572754
    10. 'spl' → logprob: -17.39316749572754

Token 341: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0018647374818101525
    2. '()' → logprob: -7.251864910125732
    3. '(','' → logprob: -7.251864910125732
    4. '('' → logprob: -8.001864433288574
    5. '(' → logprob: -9.751864433288574
    6. ')' → logprob: -10.251864433288574
    7. '())
' → logprob: -11.751864433288574
    8. '()))' → logprob: -12.626864433288574
    9. '(',' → logprob: -12.876864433288574
    10. ' ())' → logprob: -13.751864433288574

Token 342: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017922651022672653
    2. '   ' → logprob: -9.875179290771484
    3. 'print' → logprob: -9.875179290771484
    4. '```' → logprob: -10.000179290771484
    5. 'count' → logprob: -10.875179290771484
    6. 'result' → logprob: -13.000179290771484
    7. '        
' → logprob: -13.000179290771484
    8. '<|end|>' → logprob: -13.250179290771484
    9. '
' → logprob: -13.625179290771484
    10. ' print' → logprob: -13.750179290771484

Token 343: ' norm' (ID: 7882)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.032949723303318024
    2. 'result' → logprob: -4.282949924468994
    3. ' print' → logprob: -4.782949924468994
    4. 'res' → logprob: -5.032949924468994
    5. 'count' → logprob: -6.157949924468994
    6. ' res' → logprob: -7.657949924468994
    7. ' result' → logprob: -8.282949447631836
    8. '   ' → logprob: -8.407949447631836
    9. 'cnt' → logprob: -8.782949447631836
    10. 'd' → logprob: -8.907949447631836

Token 344: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22545182704925537
    2. '=' → logprob: -1.6004518270492554
    3. ',' → logprob: -10.225451469421387
    4. ')' → logprob: -13.850451469421387
    5. '=count' → logprob: -14.725451469421387
    6. '   ' → logprob: -15.350451469421387
    7. '=int' → logprob: -15.350451469421387
    8. ' ' → logprob: -15.600451469421387
    9. ' ==' → logprob: -15.850451469421387
    10. '=m' → logprob: -16.475452423095703

Token 345: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0067156096920371056
    2. ' m' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.256715774536133
    4. ' ' → logprob: -19.756715774536133
    5. '	m' → logprob: -19.881715774536133
    6. '  ' → logprob: -20.506715774536133
    7. 'abs' → logprob: -21.256715774536133
    8. '(m' → logprob: -21.631715774536133
    9. '(' → logprob: -22.131715774536133
    10. ' ' → logprob: -22.256715774536133

Token 346: '*m' (ID: 85049)
  Prédit: '*m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*m' → logprob: -0.00017362393555231392
    2. ' *' → logprob: -8.750173568725586
    3. '*' → logprob: -11.125173568725586
    4. '**' → logprob: -15.000173568725586
    5. 'm' → logprob: -16.750173568725586
    6. '*n' → logprob: -17.000173568725586
    7. '*a' → logprob: -17.500173568725586
    8. '*l' → logprob: -19.250173568725586
    9. '*A' → logprob: -19.875173568725586
    10. '***' → logprob: -20.125173568725586

Token 347: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1604820340871811
    2. ' +' → logprob: -1.9104820489883423
    3. '+n' → logprob: -8.285482406616211
    4. '   ' → logprob: -12.160482406616211
    5. '+m' → logprob: -16.16048240661621
    6. '()+' → logprob: -16.28548240661621
    7. '+b' → logprob: -16.66048240661621
    8. '+
' → logprob: -17.03548240661621
    9. '  ' → logprob: -17.03548240661621
    10. '<|end|>' → logprob: -17.41048240661621

Token 348: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00012356207298580557
    2. ' n' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.875123977661133
    4. '	n' → logprob: -19.125123977661133
    5. '       ' → logprob: -20.625123977661133
    6. '  ' → logprob: -22.250123977661133
    7. '    ' → logprob: -22.375123977661133
    8. ' ' → logprob: -22.500123977661133
    9. '_n' → logprob: -23.375123977661133
    10. '```' → logprob: -23.375123977661133

Token 349: '*n' (ID: 58470)
  Prédit: '*n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.0005725711234845221
    2. 'n' → logprob: -7.500572681427002
    3. '*' → logprob: -10.875572204589844
    4. '*b' → logprob: -14.625572204589844
    5. '```' → logprob: -16.500572204589844
    6. ' n' → logprob: -17.875572204589844
    7. ')n' → logprob: -18.375572204589844
    8. '$n' → logprob: -18.375572204589844
    9. '	n' → logprob: -18.500572204589844
    10. '   ' → logprob: -18.625572204589844

Token 350: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007731780642643571
    2. '   ' → logprob: -7.500772953033447
    3. 'count' → logprob: -8.875773429870605
    4. 'print' → logprob: -10.000773429870605
    5. 'div' → logprob: -11.125773429870605
    6. '        
' → logprob: -11.625773429870605
    7. ',' → logprob: -12.625773429870605
    8. '<|end|>' → logprob: -13.000773429870605
    9. 'if' → logprob: -13.750773429870605
    10. '
' → logprob: -14.375773429870605

Token 351: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019099542405456305
    2. '   ' → logprob: -6.3769097328186035
    3. 'print' → logprob: -9.376910209655762
    4. 'count' → logprob: -9.376910209655762
    5. 'div' → logprob: -10.751910209655762
    6. '```' → logprob: -11.751910209655762
    7. 'result' → logprob: -11.876910209655762
    8. ' print' → logprob: -14.376910209655762
    9. '        
' → logprob: -15.501910209655762
    10. ' div' → logprob: -15.626910209655762

Token 352: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5005692839622498
    2. 'res' → logprob: -1.8755693435668945
    3. 'result' → logprob: -2.1255693435668945
    4. 'div' → logprob: -2.7505693435668945
    5. 'd' → logprob: -3.1255693435668945
    6. 'ans' → logprob: -4.8755693435668945
    7. 'answer' → logprob: -5.6255693435668945
    8. 'count' → logprob: -7.6255693435668945
    9. 'cnt' → logprob: -7.8755693435668945
    10. '       ' → logprob: -8.125569343566895

Token 353: ' norm' (ID: 7882)
  Prédit: 'norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'norm' → logprob: -0.637344241142273
    2. ' norm' → logprob: -0.762344241142273
    3. '(norm' → logprob: -6.3873443603515625
    4. 'm' → logprob: -6.3873443603515625
    5. ' m' → logprob: -8.012344360351562
    6. 'g' → logprob: -8.012344360351562
    7. 'n' → logprob: -8.137344360351562
    8. ' (' → logprob: -9.137344360351562
    9. ' gcd' → logprob: -9.137344360351562
    10. '(' → logprob: -9.387344360351562

Token 354: ' <=' (ID: 5017)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.005267549771815538
    2. ' ==' → logprob: -5.25526762008667
    3. '!=' → logprob: -10.630267143249512
    4. '>' → logprob: -12.755267143249512
    5. '<=' → logprob: -12.755267143249512
    6. '=' → logprob: -13.005267143249512
    7. '<' → logprob: -15.255267143249512
    8. ' !=' → logprob: -15.255267143249512
    9. '==
' → logprob: -15.380267143249512
    10. ']==' → logprob: -15.505267143249512

Token 355: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04329684004187584
    2. '0' → logprob: -3.1682968139648438
    3. ' ' → logprob: -8.918296813964844
    4. '4' → logprob: -9.043296813964844
    5. '2' → logprob: -10.168296813964844
    6. '3' → logprob: -12.043296813964844
    7. '100' → logprob: -14.918296813964844
    8. '   ' → logprob: -15.168296813964844
    9. '9' → logprob: -15.418296813964844
    10. '10' → logprob: -15.793296813964844

Token 356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07031607627868652
    2. '0' → logprob: -2.6953160762786865
    3. '4' → logprob: -8.695316314697266
    4. '2' → logprob: -9.195316314697266
    5. ' ' → logprob: -9.445316314697266
    6. '100' → logprob: -10.945316314697266
    7. '3' → logprob: -12.070316314697266
    8. '9' → logprob: -12.945316314697266
    9. '10' → logprob: -12.945316314697266
    10. '6' → logprob: -14.070316314697266

Token 357: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5860596299171448
    2. ':' → logprob: -0.8360596299171448
    3. '           ' → logprob: -5.2110595703125
    4. '       ' → logprob: -5.4610595703125
    5. ' or' → logprob: -8.5860595703125
    6. ':return' → logprob: -8.9610595703125
    7. ',' → logprob: -11.0860595703125
    8. ' and' → logprob: -11.2110595703125
    9. ':
' → logprob: -11.9610595703125
    10. ':

' → logprob: -12.3360595703125

Token 358: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019451762782409787
    2. '       ' → logprob: -7.2519450187683105
    3. ':' → logprob: -7.3769450187683105
    4. '
' → logprob: -8.376945495605469
    5. ':
' → logprob: -8.626945495605469
    6. 'print' → logprob: -9.376945495605469
    7. ' print' → logprob: -9.751945495605469
    8. ',' → logprob: -10.876945495605469
    9. '0' → logprob: -10.876945495605469
    10. '            
' → logprob: -12.626945495605469

Token 359: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.7640110850334167
    2. '       ' → logprob: -1.3890111446380615
    3. ' print' → logprob: -1.5140111446380615
    4. '           ' → logprob: -2.7640111446380615
    5. '
' → logprob: -6.639010906219482
    6. '   ' → logprob: -8.26401138305664
    7. '```' → logprob: -9.26401138305664
    8. '               ' → logprob: -9.38901138305664
    9. '        
' → logprob: -10.76401138305664
    10. ' ' → logprob: -11.51401138305664

Token 360: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6428827047348022
    2. '(norm' → logprob: -0.8928827047348022
    3. '1' → logprob: -2.892882823944092
    4. 'norm' → logprob: -5.142882823944092
    5. '0' → logprob: -6.267882823944092
    6. '(-' → logprob: -7.142882823944092
    7. '(count' → logprob: -8.392882347106934
    8. '(n' → logprob: -9.017882347106934
    9. '4' → logprob: -9.517882347106934
    10. '2' → logprob: -9.767882347106934

Token 361: 'C' (ID: 34)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09998082369565964
    2. '0' → logprob: -2.5999808311462402
    3. '4' → logprob: -4.22498083114624
    4. '-' → logprob: -5.59998083114624
    5. 'norm' → logprob: -7.34998083114624
    6. ''' → logprob: -7.47498083114624
    7. '2' → logprob: -7.59998083114624
    8. ' ' → logprob: -8.349980354309082
    9. '3' → logprob: -9.599980354309082
    10. '(' → logprob: -9.849980354309082

Token 362: '')
' (ID: 2515)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0903540626168251
    2. '4' → logprob: -2.5903539657592773
    3. '0' → logprob: -5.215353965759277
    4. '2' → logprob: -5.965353965759277
    5. 'U' → logprob: -8.090353965759277
    6. '3' → logprob: -8.340353965759277
    7. 'u' → logprob: -8.340353965759277
    8. '-' → logprob: -8.340353965759277
    9. 'O' → logprob: -8.465353965759277
    10. 'ase' → logprob: -8.465353965759277

Token 363: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22546741366386414
    2. '       ' → logprob: -1.6004674434661865
    3. '               ' → logprob: -10.725467681884766
    4. '   ' → logprob: -10.975467681884766
    5. ',' → logprob: -11.725467681884766
    6. '<|end|>' → logprob: -13.475467681884766
    7. 'continue' → logprob: -13.725467681884766
    8. ' continue' → logprob: -14.350467681884766
    9. ' else' → logprob: -14.600467681884766
    10. '.' → logprob: -14.600467681884766

Token 364: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16086414456367493
    2. '       ' → logprob: -1.9108641147613525
    3. 'continue' (adapté à ' continue') → logprob: -7.660864353179932
    4. ' continue' → logprob: -9.160863876342773
    5. '   ' → logprob: -9.910863876342773
    6. ' ' → logprob: -12.535863876342773
    7. '               ' → logprob: -12.660863876342773
    8. '	continue' → logprob: -12.910863876342773
    9. '	       ' → logprob: -13.160863876342773
    10. '     ' → logprob: -14.785863876342773

Token 365: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.453737710718997e-05
    2. '        
' → logprob: -10.750044822692871
    3. '<|end|>' → logprob: -11.250044822692871
    4. '   ' → logprob: -12.500044822692871
    5. ',' → logprob: -12.875044822692871
    6. '           ' → logprob: -13.750044822692871
    7. '```' → logprob: -14.000044822692871
    8. '
' → logprob: -14.000044822692871
    9. '      ' → logprob: -15.625044822692871
    10. '    
' → logprob: -15.625044822692871

Token 366: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.547789674485102e-05
    2. '<|end|>' → logprob: -10.750035285949707
    3. '   ' → logprob: -11.750035285949707
    4. '        
' → logprob: -12.875035285949707
    5. '```' → logprob: -13.500035285949707
    6. '           ' → logprob: -14.000035285949707
    7. '      ' → logprob: -15.250035285949707
    8. '<|end|>' → logprob: -15.750035285949707
    9. ',' → logprob: -15.875035285949707
    10. '​' → logprob: -16.000036239624023

Token 367: ' div' (ID: 4223)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3463659286499023
    2. 'print' → logprob: -1.7213659286499023
    3. 'div' (adapté à ' div') → logprob: -1.8463659286499023
    4. 'res' → logprob: -1.9713659286499023
    5. 'cnt' → logprob: -2.5963659286499023
    6. 'count' → logprob: -2.8463659286499023
    7. 'result' → logprob: -2.9713659286499023
    8. 'c' → logprob: -3.3463659286499023
    9. '       ' → logprob: -3.8463659286499023
    10. 'ans' → logprob: -4.471365928649902

Token 368: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.4495443105697632
    2. 'is' → logprob: -1.3245443105697632
    3. 's' → logprob: -3.0745444297790527
    4. 'count' → logprob: -3.1995444297790527
    5. '   ' → logprob: -5.699544429779053
    6. '_cnt' → logprob: -7.199544429779053
    7. ' =' → logprob: -7.324544429779053
    8. '=' → logprob: -7.324544429779053
    9. 'iders' → logprob: -7.449544429779053
    10. 'isor' → logprob: -7.574544429779053

Token 369: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759401321411133
    2. '=' → logprob: -0.8259401321411133
    3. '   ' → logprob: -14.825940132141113
    4. '=int' → logprob: -16.200939178466797
    5. '=count' → logprob: -16.325939178466797
    6. ' ' → logprob: -17.075939178466797
    7. '  ' → logprob: -17.075939178466797
    8. '＝' → logprob: -17.575939178466797
    9. ')' → logprob: -18.075939178466797
    10. ',' → logprob: -18.075939178466797

Token 370: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.07888978719711304
    2. ' count' → logprob: -2.578889846801758
    3. '(count' → logprob: -19.453889846801758
    4. '	count' → logprob: -21.453889846801758
    5. '   ' → logprob: -23.078889846801758
    6. '[count' → logprob: -23.578889846801758
    7. '.count' → logprob: -24.203889846801758
    8. '_count' → logprob: -24.453889846801758
    9. 'counts' → logprob: -24.578889846801758
    10. 'Count' → logprob: -24.703889846801758

Token 371: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -9.865583706414327e-05
    2. 'div' → logprob: -9.37509822845459
    3. '_def' → logprob: -11.50009822845459
    4. '(div' → logprob: -14.00009822845459
    5. '(' → logprob: -14.37509822845459
    6. 's' → logprob: -14.50009822845459
    7. '<div' → logprob: -14.87509822845459
    8. '(a' → logprob: -15.25009822845459
    9. '(_' → logprob: -15.37509822845459
    10. '(m' → logprob: -15.75009822845459

Token 372: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.004032452590763569
    2. 's' → logprob: -6.254032611846924
    3. 'ors' → logprob: -6.754032611846924
    4. 'tors' → logprob: -7.754032611846924
    5. '_count' → logprob: -8.629032135009766
    6. 'itors' → logprob: -9.254032135009766
    7. '(' → logprob: -9.879032135009766
    8. '(C' → logprob: -10.504032135009766
    9. 'div' → logprob: -10.754032135009766
    10. 'm' → logprob: -11.254032135009766

Token 373: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.0015655691968277097
    2. 'tors' → logprob: -6.501565456390381
    3. 's' → logprob: -10.001565933227539
    4. 'ators' → logprob: -12.001565933227539
    5. 'itors' → logprob: -12.501565933227539
    6. '[' → logprob: -13.501565933227539
    7. 'rors' → logprob: -13.876565933227539
    8. 'is' → logprob: -14.126565933227539
    9. 'ers' → logprob: -14.126565933227539
    10. 'os' → logprob: -14.876565933227539

Token 374: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -6.704273118884885e-07
    2. ' (' → logprob: -14.750000953674316
    3. '(' → logprob: -15.125000953674316
    4. '(
' → logprob: -18.625
    5. '   ' → logprob: -18.75
    6. '(M' → logprob: -19.5
    7. 'm' → logprob: -20.625
    8. '```' → logprob: -20.875
    9. '((' → logprob: -21.125
    10. '(n' → logprob: -21.25

Token 375: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038062144070863724
    2. ',n' → logprob: -3.28806209564209
    3. ',
' → logprob: -11.41306209564209
    4. ' ,' → logprob: -11.66306209564209
    5. '   ' → logprob: -15.03806209564209
    6. 'n' → logprob: -15.53806209564209
    7. ',

' → logprob: -16.413063049316406
    8. ',m' → logprob: -16.413063049316406
    9. '(n' → logprob: -16.788063049316406
    10. '```' → logprob: -16.913063049316406

Token 376: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009756323881447315
    2. ' n' → logprob: -4.634756088256836
    3. ' ' → logprob: -16.009756088256836
    4. '
' → logprob: -16.009756088256836
    5. '	n' → logprob: -16.259756088256836
    6. ',n' → logprob: -17.509756088256836
    7. ')n' → logprob: -17.509756088256836
    8. ',' → logprob: -17.759756088256836
    9. ' ' → logprob: -18.009756088256836
    10. '' → logprob: -18.134756088256836

Token 377: ')
' (ID: 446)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.3902706205844879
    2. ')' → logprob: -1.1402705907821655
    3. ')
' → logprob: -6.015270709991455
    4. '   ' → logprob: -8.015270233154297
    5. '(' → logprob: -8.140270233154297
    6. '       ' → logprob: -8.515270233154297
    7. ' (' → logprob: -9.265270233154297
    8. ',' → logprob: -11.640270233154297
    9. '(
' → logprob: -12.390270233154297
    10. ')m' → logprob: -12.515270233154297

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.778209353797138e-05
    2. '   ' → logprob: -9.875067710876465
    3. '```' → logprob: -11.750067710876465
    4. 'print' → logprob: -12.500067710876465
    5. '<|end|>' → logprob: -13.125067710876465
    6. '
' → logprob: -13.500067710876465
    7. '           ' → logprob: -14.375067710876465
    8. ' print' → logprob: -15.625067710876465
    9. '        
' → logprob: -15.875067710876465
    10. '#' → logprob: -16.12506866455078

Token 379: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2266205996274948
    2. ' if' → logprob: -1.9766205549240112
    3. 'print' → logprob: -3.226620674133301
    4. '       ' → logprob: -3.726620674133301
    5. ' print' → logprob: -7.851620674133301
    6. '   ' → logprob: -9.7266206741333
    7. '
' → logprob: -11.2266206741333
    8. '```' → logprob: -11.9766206741333
    9. '           ' → logprob: -13.1016206741333
    10. '        
' → logprob: -13.4766206741333

Token 380: ' div' (ID: 4223)
  Prédit: ' div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' div' → logprob: -0.020565710961818695
    2. 'div' → logprob: -3.8955657482147217
    3. '	div' → logprob: -11.0205659866333
    4. '(div' → logprob: -12.6455659866333
    5. ' norm' → logprob: -13.6455659866333
    6. ' divis' → logprob: -14.1455659866333
    7. ' ' → logprob: -14.2705659866333
    8. ' (' → logprob: -14.6455659866333
    9. ' ' → logprob: -15.3955659866333
    10. '<div' → logprob: -15.8955659866333

Token 381: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -5.5577775128767826e-06
    2. 's' → logprob: -13.000005722045898
    3. 'is' → logprob: -13.500005722045898
    4. 'isor' → logprob: -14.250005722045898
    5. '_' → logprob: -14.625005722045898
    6. 'ides' → logprob: -15.250005722045898
    7. 'count' → logprob: -16.2500057220459
    8. '_counts' → logprob: -16.7500057220459
    9. 'es' → logprob: -17.1250057220459
    10. 'isible' → logprob: -17.1250057220459

Token 382: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.677442193031311
    2. ' ==' → logprob: -0.802442193031311
    3. '>' → logprob: -3.9274420738220215
    4. ' >' → logprob: -4.3024420738220215
    5. ' <=' → logprob: -5.5524420738220215
    6. '<=' → logprob: -5.6774420738220215
    7. '%' → logprob: -6.3024420738220215
    8. '>=' → logprob: -7.3024420738220215
    9. ' >=' → logprob: -8.05244255065918
    10. ' <' → logprob: -8.92744255065918

Token 383: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.15502509474754333
    2. '1' → logprob: -2.155025005340576
    3. '2' → logprob: -3.780025005340576
    4. '9' → logprob: -5.780025005340576
    5. '5' → logprob: -6.530025005340576
    6. '4' → logprob: -8.905025482177734
    7. ' ' → logprob: -8.905025482177734
    8. '13' → logprob: -11.030025482177734
    9. '7' → logprob: -11.530025482177734
    10. '0' → logprob: -11.655025482177734

Token 384: '8' (ID: 23)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.29514050483703613
    2. '1' → logprob: -1.4201405048370361
    3. '2' → logprob: -4.420140266418457
    4. '5' → logprob: -7.045140266418457
    5. '9' → logprob: -7.545140266418457
    6. '4' → logprob: -8.170140266418457
    7. ''' → logprob: -9.045140266418457
    8. '7' → logprob: -11.670140266418457
    9. ' ' → logprob: -11.795140266418457
    10. '0' → logprob: -12.170140266418457

Token 385: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47483646869659424
    2. ':' → logprob: -0.9748364686965942
    3. '       ' → logprob: -8.099836349487305
    4. '   ' → logprob: -8.224836349487305
    5. ' or' → logprob: -8.974836349487305
    6. '           ' → logprob: -10.349836349487305
    7. ':
' → logprob: -10.849836349487305
    8. ' and' → logprob: -12.474836349487305
    9. '):
' → logprob: -13.099836349487305
    10. ':return' → logprob: -13.849836349487305

Token 386: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006607849150896072
    2. '       ' → logprob: -5.131608009338379
    3. 'print' → logprob: -8.006608009338379
    4. ' print' → logprob: -8.756608009338379
    5. ':' → logprob: -9.506608009338379
    6. '	       ' → logprob: -10.006608009338379
    7. '               ' → logprob: -10.506608009338379
    8. '   ' → logprob: -11.381608009338379
    9. ':
' → logprob: -12.131608009338379
    10. '
' → logprob: -12.256608009338379

Token 387: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.010416971519589424
    2. ' print' → logprob: -5.1354169845581055
    3. '           ' → logprob: -5.8854169845581055
    4. '       ' → logprob: -6.3854169845581055
    5. '               ' → logprob: -11.885416984558105
    6. '   ' → logprob: -12.385416984558105
    7. '	print' → logprob: -14.260416984558105
    8. ' ' → logprob: -14.635416984558105
    9. '	       ' → logprob: -15.760416984558105
    10. '.print' → logprob: -16.88541603088379

Token 388: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0007741317385807633
    2. '(' → logprob: -7.750773906707764
    3. '("' → logprob: -8.000774383544922
    4. '(A' → logprob: -13.125774383544922
    5. '(C' → logprob: -13.250774383544922
    6. '('+' → logprob: -13.750774383544922
    7. ''C' → logprob: -14.125774383544922
    8. ''A' → logprob: -14.625774383544922
    9. '('*' → logprob: -15.125774383544922
    10. 'A' → logprob: -15.500774383544922

Token 389: 'P' (ID: 47)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.8955859541893005
    2. 'B' → logprob: -1.7705860137939453
    3. 'Z' → logprob: -2.3955860137939453
    4. 'A' → logprob: -2.5205860137939453
    5. 'P' → logprob: -2.7705860137939453
    6. 'D' → logprob: -3.2705860137939453
    7. 'J' → logprob: -3.7705860137939453
    8. 'G' → logprob: -3.8955860137939453
    9. 'E' → logprob: -3.8955860137939453
    10. 'U' → logprob: -4.270586013793945

Token 390: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.027386322617530823
    2. '')
' → logprob: -3.652386426925659
    3. 'R' → logprob: -7.90238618850708
    4. 'I' → logprob: -8.152386665344238
    5. 'Q' → logprob: -9.027386665344238
    6. 'L' → logprob: -9.652386665344238
    7. '')
' → logprob: -9.777386665344238
    8. 'C' → logprob: -9.902386665344238
    9. '')

' → logprob: -11.152386665344238
    10. ''' → logprob: -11.277386665344238

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002216511406004429
    2. 'else' → logprob: -6.252216339111328
    3. 'elif' → logprob: -8.502216339111328
    4. ' else' → logprob: -9.502216339111328
    5. '<|end|>' → logprob: -12.002216339111328
    6. ' elif' → logprob: -13.127216339111328
    7. '```' → logprob: -14.127216339111328
    8. '           ' → logprob: -14.877216339111328
    9. '   ' → logprob: -15.502216339111328
    10. ',' → logprob: -15.877216339111328

Token 392: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017743531614542007
    2. 'else' (adapté à ' else') → logprob: -4.5177435874938965
    3. 'elif' → logprob: -5.0177435874938965
    4. ' else' → logprob: -10.142743110656738
    5. ' elif' → logprob: -11.392743110656738
    6. '```' → logprob: -13.142743110656738
    7. '   ' → logprob: -14.142743110656738
    8. '	elif' → logprob: -15.517743110656738
    9. '           ' → logprob: -15.642743110656738
    10. ' ' → logprob: -16.017744064331055

Token 393: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006588066928088665
    2. ':' → logprob: -5.381587982177734
    3. ':
' → logprob: -6.256587982177734
    4. '          ' → logprob: -10.756587982177734
    5. '               ' → logprob: -12.131587982177734
    6. '(' → logprob: -12.381587982177734
    7. '       ' → logprob: -12.881587982177734
    8. '         ' → logprob: -13.131587982177734
    9. '():
' → logprob: -13.131587982177734
    10. '	       ' → logprob: -13.506587982177734

Token 394: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04895680397748947
    2. 'print' → logprob: -3.048956871032715
    3. ' print' → logprob: -7.923956871032715
    4. '               ' → logprob: -12.673956871032715
    5. '       ' → logprob: -13.798956871032715
    6. '```' → logprob: -13.798956871032715
    7. '   ' → logprob: -14.048956871032715
    8. '		' → logprob: -15.048956871032715
    9. '	       ' → logprob: -15.048956871032715
    10. '          ' → logprob: -15.173956871032715

Token 395: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0004940562648698688
    2. ' print' → logprob: -8.000494003295898
    3. '           ' → logprob: -8.750494003295898
    4. '       ' → logprob: -15.750494003295898
    5. '   ' → logprob: -17.7504940032959
    6. '	print' → logprob: -18.2504940032959
    7. '```' → logprob: -18.3754940032959
    8. '               ' → logprob: -18.6254940032959
    9. 'printf' → logprob: -18.8754940032959
    10. '.print' → logprob: -19.2504940032959

Token 396: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.011053125374019146
    2. '(' → logprob: -4.511053085327148
    3. '("' → logprob: -12.386053085327148
    4. '()' → logprob: -14.511053085327148
    5. '(None' → logprob: -16.01105308532715
    6. '('(' → logprob: -16.01105308532715
    7. ' ('' → logprob: -16.26105308532715
    8. '(('' → logprob: -16.26105308532715
    9. '('?' → logprob: -17.01105308532715
    10. '('.')' → logprob: -17.01105308532715

Token 397: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.012228130362927914
    2. 'R' → logprob: -5.512228012084961
    3. 'N' → logprob: -5.887228012084961
    4. 'U' → logprob: -6.387228012084961
    5. 'Z' → logprob: -7.262228012084961
    6. ''C' → logprob: -7.387228012084961
    7. 'I' → logprob: -7.512228012084961
    8. ''' → logprob: -7.637228012084961
    9. 'O' → logprob: -8.137228012084961
    10. 'S' → logprob: -8.637228012084961

Token 398: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00021057340200059116
    2. ')' → logprob: -8.500210762023926
    3. '')
' → logprob: -12.000210762023926
    4. '")' → logprob: -14.125210762023926
    5. '}')' → logprob: -16.87520980834961
    6. ''' → logprob: -17.25020980834961
    7. '')

' → logprob: -18.62520980834961
    8. ')'' → logprob: -18.87520980834961
    9. '   ' → logprob: -19.00020980834961
    10. '')"' → logprob: -19.62520980834961

Token 399: 'if' (ID: 366)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.506132960319519
    2. '<|end|>' → logprob: -1.131132960319519
    3. '```' → logprob: -2.8811330795288086
    4. 'if' → logprob: -4.256133079528809
    5. '%' → logprob: -6.506133079528809
    6. '\' → logprob: -7.006133079528809
    7. '
' → logprob: -7.506133079528809
    8. '<|end|>' → logprob: -7.756133079528809
    9. '\n' → logprob: -8.131133079528809
    10. ' if' → logprob: -8.756133079528809

Token 400: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.009095247834920883
    2. '__' → logprob: -5.009095191955566
    3. '_' → logprob: -6.509095191955566
    4. ' _' → logprob: -7.884095191955566
    5. ' ' → logprob: -8.259095191955566
    6. ' ' → logprob: -9.509095191955566
    7. ' ​' → logprob: -9.884095191955566
    8. ' ‌' → logprob: -10.759095191955566
    9. ' ' → logprob: -11.009095191955566
    10. '​' → logprob: -11.009095191955566

Token 401: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01938842236995697
    2. ' __' → logprob: -4.394388198852539
    3. ' ==' → logprob: -5.394388198852539
    4. '==' → logprob: -7.019388198852539
    5. '.__' → logprob: -7.144388198852539
    6. '__.' → logprob: -8.269388198852539
    7. '__.__' → logprob: -8.644388198852539
    8. '.py' → logprob: -9.894388198852539
    9. '[' → logprob: -10.394388198852539
    10. '_' → logprob: -10.894388198852539

Token 402: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0003433296224102378
    2. '__.__' → logprob: -8.125343322753906
    3. '==' → logprob: -10.250343322753906
    4. '__.' → logprob: -12.125343322753906
    5. '=="' → logprob: -13.125343322753906
    6. '__('' → logprob: -13.750343322753906
    7. '__["' → logprob: -13.875343322753906
    8. ' ==' → logprob: -14.125343322753906
    9. '___' → logprob: -15.000343322753906
    10. '=='' → logprob: -15.000343322753906

Token 403: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.46683135628700256
    2. '==' → logprob: -1.2168313264846802
    3. ' ==' → logprob: -2.7168314456939697
    4. '=="' → logprob: -4.841831207275391
    5. '=='' → logprob: -5.966831207275391
    6. '__.__' → logprob: -8.96683120727539
    7. '.__' → logprob: -9.59183120727539
    8. '==
' → logprob: -10.84183120727539
    9. '=' → logprob: -10.96683120727539
    10. '_' → logprob: -11.21683120727539

Token 404: ' "__' (ID: 27367)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.47408831119537354
    2. '"' → logprob: -0.9740883111953735
    3. '__' → logprob: -11.849088668823242
    4. ' "__' → logprob: -12.974088668823242
    5. ' '__' → logprob: -13.599088668823242
    6. ''"' → logprob: -16.349088668823242
    7. ''name' → logprob: -16.474088668823242
    8. '('__' → logprob: -16.474088668823242
    9. ''user' → logprob: -16.849088668823242
    10. '"user' → logprob: -16.974088668823242

Token 405: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0002128382766386494
    2. '__' → logprob: -8.500212669372559
    3. 'name' → logprob: -13.125212669372559
    4. '_main' → logprob: -13.375212669372559
    5. ' main' → logprob: -14.000212669372559
    6. 'm' → logprob: -14.000212669372559
    7. 'built' → logprob: -14.000212669372559
    8. '"' → logprob: -14.125212669372559
    9. '__":
' → logprob: -14.375212669372559
    10. 'py' → logprob: -14.875212669372559

Token 406: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.007916301488876343
    2. '__' → logprob: -4.882916450500488
    3. '__':
' → logprob: -8.132916450500488
    4. '__.' → logprob: -11.507916450500488
    5. '__["' → logprob: -12.882916450500488
    6. '__.__' → logprob: -13.132916450500488
    7. '__:' → logprob: -14.132916450500488
    8. '.__' → logprob: -15.132916450500488
    9. '.' → logprob: -15.632916450500488
    10. '__("' → logprob: -15.882916450500488

Token 407: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00911297369748354
    2. ' main' → logprob: -4.75911283493042
    3. '   ' → logprob: -8.134113311767578
    4. '	main' → logprob: -8.509113311767578
    5. '_main' → logprob: -12.759113311767578
    6. '```' → logprob: -16.384113311767578
    7. '    
' → logprob: -16.634113311767578
    8. '(main' → logprob: -16.759113311767578
    9. '.main' → logprob: -16.884113311767578
    10. 'Main' → logprob: -17.259113311767578

Token 408: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -5.512236498361744e-07
    2. ' main' → logprob: -14.500000953674316
    3. '	main' → logprob: -21.25
    4. '   ' → logprob: -23.625
    5. '.main' → logprob: -27.0
    6. '_main' → logprob: -27.125
    7. '(main' → logprob: -28.0
    8. 'import' → logprob: -28.25
    9. 'Main' → logprob: -28.5
    10. 'mainwindow' → logprob: -29.0

Token 409: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 407
Tokens correctement prédits (1ère position, stricte): 167
Tokens correctement prédits (1ère position, avec adaptation): 177
Tokens correctement prédits (top 10): 339
Précision stricte (1ère position): 41.03%
Précision adaptée (1ère position): 43.49%
Précision (top 10): 83.29%
================================================================================
