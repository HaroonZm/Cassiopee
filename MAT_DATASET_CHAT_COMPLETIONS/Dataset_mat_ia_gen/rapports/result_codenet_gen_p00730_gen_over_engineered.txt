================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import List, Tuple

class Piece(ABC):
    @abstractmethod
    def area(self) -> int:
        pass

    @abstractmethod
    def perimeter(self) -> int:
        pass

    @abstractmethod
    def cut(self, cut_start: int) -> Tuple['Piece', 'Piece']:
        pass

    @abstractmethod
    def edges(self) -> List[int]:
        pass

    @abstractmethod
    def width(self) -> int:
        pass

    @abstractmethod
    def depth(self) -> int:
        pass


class RectangularPiece(Piece):
    def __init__(self, w: int, d: int):
        if w < 1 or d < 1:
            raise ValueError("Width and depth must be positive integers.")
        self._w = w
        self._d = d

    def area(self) -> int:
        return self._w * self._d

    def width(self) -> int:
        return self._w

    def depth(self) -> int:
        return self._d

    def perimeter(self) -> int:
        # Perimeter of top view rectangle
        return 2 * (self._w + self._d)

    def edges(self) -> List[int]:
        # Edges lengths in order: top, right, bottom, left
        return [self._w, self._d, self._w, self._d]

    def cut(self, cut_start: int) -> Tuple['RectangularPiece', 'RectangularPiece']:
        # Simulates cutting this piece starting at cut_start distance clockwise from NW corner
        perim = self.perimeter()
        if cut_start <= 0 or cut_start >= perim:
            raise ValueError("cut_start must be within the perimeter, not at corners.")

        # Determine on which edge the cut_start lies (0-based index: 0 top, 1 right, 2 bottom, 3 left)
        edges = self.edges()
        accumulated = 0
        edge_index = -1
        for i, length in enumerate(edges):
            if accumulated < cut_start < accumulated + length:
                edge_index = i
                offset = cut_start - accumulated
                break
            accumulated += length
        else:
            # cut_start cannot be a corner so this should never happen
            raise ValueError("cut_start cannot be at a corner.")

        # The cut surface is orthogonal to the side face on which the starting point exists
        # That means we cut perpendicular to that edge inside the piece, splitting it into two.
        # Since the cake is always rectangular and vertical,
        # the cut line is aligned with edges either vertical or horizontal
        # Compute new subpieces dimensions depending on the edge cut.

        # For edges:
        # 0: top edge (cut surface vertical line parallel to vertical edges)
        # 1: right edge (cut surface horizontal line parallel to horizontal edges)
        # 2: bottom edge (same as top edge)
        # 3: left edge (same as right edge)

        if edge_index == 0:  # top edge
            # cut perpendicular to top edge -> vertical cut at position offset from NW corner eastwards
            cut_pos = offset
            if cut_pos <= 0 or cut_pos >= self._w:
                raise ValueError("Invalid cut position along width.")
            left_piece = RectangularPiece(cut_pos, self._d)
            right_piece = RectangularPiece(self._w - cut_pos, self._d)
        elif edge_index == 1:  # right edge
            # cut perpendicular to right edge -> horizontal cut at position offset from NE corner southwards
            cut_pos = offset
            if cut_pos <= 0 or cut_pos >= self._d:
                raise ValueError("Invalid cut position along depth.")
            upper_piece = RectangularPiece(self._w, cut_pos)
            lower_piece = RectangularPiece(self._w, self._d - cut_pos)
            left_piece, right_piece = upper_piece, lower_piece
        elif edge_index == 2:  # bottom edge
            # bottom edge counted cw from NW corner: starting point from SE corner going westward 
            # cut perpendicular to bottom edge -> vertical cut similar to top edge
            cut_pos = self._w - offset
            if cut_pos <= 0 or cut_pos >= self._w:
                raise ValueError("Invalid cut position along width.")
            left_piece = RectangularPiece(cut_pos, self._d)
            right_piece = RectangularPiece(self._w - cut_pos, self._d)
        else:  # edge_index == 3 left edge
            # cut perpendicular to left edge -> horizontal cut similar to right edge
            cut_pos = self._d - offset
            if cut_pos <= 0 or cut_pos >= self._d:
                raise ValueError("Invalid cut position along depth.")
            upper_piece = RectangularPiece(self._w, cut_pos)
            lower_piece = RectangularPiece(self._w, self._d - cut_pos)
            left_piece, right_piece = upper_piece, lower_piece

        # Return pieces such that the smaller area piece has smaller ID later on
        pieces = [left_piece, right_piece]
        pieces.sort(key=lambda p: p.area())
        return pieces[0], pieces[1]


class CakeCuttingSimulator:
    def __init__(self, initial_width: int, initial_depth: int):
        self.pieces: List[Piece] = [RectangularPiece(initial_width, initial_depth)]
        # Initially only one piece with ID 1

    def perform_cut(self, piece_id: int, cut_start: int):
        # piece_id 1-based
        idx = piece_id - 1
        target_piece = self.pieces[idx]

        # Cut the target piece
        p1, p2 = target_piece.cut(cut_start)

        # Replace target piece with the two new pieces maintaining ID assignment policy
        # Remove old piece
        self.pieces.pop(idx)
        # Add new pieces
        self.pieces.append(p1)
        self.pieces.append(p2)
        # Reassign IDs by sorting pieces by area ascending, stable for same area
        self.pieces.sort(key=lambda p: p.area())

    def get_sorted_areas(self) -> List[int]:
        return sorted(p.area() for p in self.pieces)


class InputParser:
    def __init__(self, lines: List[str]):
        self.lines = lines
        self.index = 0

    def __iter__(self):
        return self

    def __next__(self) -> Tuple[int, int, int, List[Tuple[int,int]]]:
        if self.index >= len(self.lines):
            raise StopIteration

        line = self.lines[self.index].strip()
        if not line:
            self.index += 1
            return self.__next__()

        nwd = line.split()
        if len(nwd) < 3:
            self.index += 1
            return self.__next__()

        n, w, d = map(int, nwd)
        self.index += 1
        if n == 0 and w == 0 and d == 0:
            raise StopIteration

        cuts = []
        for _ in range(n):
            p_s_line = self.lines[self.index].strip()
            self.index += 1
            p_i, s_i = map(int, p_s_line.split())
            cuts.append((p_i, s_i))

        return n, w, d, cuts


def main():
    import sys
    input_lines = sys.stdin.read().splitlines()
    parser = InputParser(input_lines)
    try:
        while True:
            n, w, d, cuts = next(parser)
            simulator = CakeCuttingSimulator(w, d)
            for idx, (pi, si) in enumerate(cuts, start=1):
                simulator.perform_cut(pi, si)
            areas = simulator.get_sorted_areas()
            print(' '.join(map(str, areas)))
    except StopIteration:
        pass

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.07508495450019836
    2. 'ABC' → logprob: -2.700084924697876
    3. ' ' → logprob: -5.950085163116455
    4. ' A' → logprob: -7.075085163116455
    5. ' ' → logprob: -7.325085163116455
    6. 'import' → logprob: -8.700084686279297
    7. ' Abstract' → logprob: -8.825084686279297
    8. 'ABCDE' → logprob: -9.075084686279297
    9. ' abc' → logprob: -9.325084686279297
    10. 'Abstract' → logprob: -9.575084686279297

Token 4: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6998194456100464
    2. '.' → logprob: -0.6998194456100464
    3. 'import' → logprob: -6.574819564819336
    4. '<|end|>' → logprob: -6.824819564819336
    5. ':' → logprob: -6.949819564819336
    6. ' ,' → logprob: -7.074819564819336
    7. ' ' → logprob: -7.574819564819336
    8. ' .' → logprob: -7.574819564819336
    9. '```' → logprob: -8.199819564819336
    10. '' → logprob: -8.324819564819336

Token 5: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.6972059607505798
    2. ' abstract' → logprob: -0.8222059607505798
    3. 'Abstract' → logprob: -2.8222060203552246
    4. ' ' → logprob: -6.822206020355225
    5. 'Meta' → logprob: -6.822206020355225
    6. '```' → logprob: -8.572205543518066
    7. '.abstract' → logprob: -8.822205543518066
    8. ' A' → logprob: -9.322205543518066
    9. ' Abstract' → logprob: -9.447205543518066
    10. ' ABC' → logprob: -10.447205543518066

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -7.672236824873835e-05
    2. 'classmethod' → logprob: -10.250076293945312
    3. 'm' → logprob: -10.625076293945312
    4. 'meth' → logprob: -12.000076293945312
    5. 'staticmethod' → logprob: -12.500076293945312
    6. '_method' → logprob: -12.875076293945312
    7. 'abstract' → logprob: -13.625076293945312
    8. 'me' → logprob: -14.125076293945312
    9. 'met' → logprob: -14.125076293945312
    10. '```' → logprob: -14.500076293945312

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4196794033050537
    2. '```' → logprob: -1.4196794033050537
    3. 'class' → logprob: -2.9196794033050537
    4. '

' → logprob: -4.044679641723633
    5. '\n' → logprob: -5.044679641723633
    6. '' → logprob: -5.044679641723633
    7. '<|end|>' → logprob: -5.169679641723633
    8. '
' → logprob: -5.794679641723633
    9. '``' → logprob: -5.919679641723633
    10. '\' → logprob: -6.419679641723633

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30175668001174927
    2. '

' → logprob: -1.5517566204071045
    3. 'class' → logprob: -3.4267566204071045
    4. '```' → logprob: -4.426756858825684
    5. '' → logprob: -6.801756858825684
    6. '
' → logprob: -7.301756858825684
    7. ' 

' → logprob: -7.676756858825684
    8. ' class' → logprob: -7.801756858825684
    9. '\n' → logprob: -8.051756858825684
    10. '``' → logprob: -8.176756858825684

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.12415774166584015
    2. ' collections' → logprob: -2.374157667160034
    3. ' dat' → logprob: -4.124157905578613
    4. 'typing' → logprob: -5.874157905578613
    5. 'collections' → logprob: -7.124157905578613
    6. ' os' → logprob: -7.249157905578613
    7. ' io' → logprob: -7.249157905578613
    8. ' datetime' → logprob: -7.499157905578613
    9. ' sys' → logprob: -8.124157905578613
    10. ' abc' → logprob: -8.249157905578613

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04280390217900276
    2. 'import' → logprob: -3.292804002761841
    3. '<|end|>' → logprob: -6.042803764343262
    4. '.' → logprob: -6.542803764343262
    5. ' ' → logprob: -7.542803764343262
    6. '<|end|>' → logprob: -9.542803764343262
    7. ' as' → logprob: -9.667803764343262
    8. '[' → logprob: -9.917803764343262
    9. '```' → logprob: -10.292803764343262
    10. ' .' → logprob: -10.417803764343262

Token 11: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.4352477490901947
    2. ' List' → logprob: -1.685247778892517
    3. 'Any' → logprob: -2.1852476596832275
    4. ' Union' → logprob: -3.6852476596832275
    5. ' Callable' → logprob: -4.310247898101807
    6. 'List' → logprob: -5.060247898101807
    7. ' Protocol' → logprob: -5.560247898101807
    8. ' Optional' → logprob: -6.060247898101807
    9. 'Union' → logprob: -6.810247898101807
    10. 'Callable' → logprob: -7.060247898101807

Token 12: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.43221092224121094
    2. '
' → logprob: -1.182210922241211
    3. 'class' → logprob: -3.307210922241211
    4. '```' → logprob: -5.057210922241211
    5. '\n' → logprob: -7.307210922241211
    6. '


' → logprob: -8.182210922241211
    7. '``' → logprob: -8.807210922241211
    8. '
' → logprob: -9.057210922241211
    9. ' class' → logprob: -9.932210922241211
    10. '<class' → logprob: -10.932210922241211

Token 13: ' Tuple' (ID: 50841)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Union' → logprob: -1.5745834112167358
    2. ' Optional' → logprob: -1.6995834112167358
    3. 'Optional' → logprob: -1.6995834112167358
    4. ' Callable' → logprob: -1.8245834112167358
    5. 'Callable' → logprob: -2.5745835304260254
    6. 'Any' → logprob: -2.9495835304260254
    7. 'Union' → logprob: -3.0745835304260254
    8. ' Any' → logprob: -3.5745835304260254
    9. 'Iterable' → logprob: -3.6995835304260254
    10. 'Tuple' → logprob: -4.574583530426025

Token 14: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6561242341995239
    2. '

' → logprob: -1.281124234199524
    3. '
' → logprob: -1.906124234199524
    4. '```' → logprob: -3.0311241149902344
    5. '\n' → logprob: -5.781124114990234
    6. '``' → logprob: -6.156124114990234
    7. ' class' → logprob: -8.031124114990234
    8. '


' → logprob: -8.156124114990234
    9. '
' → logprob: -8.531124114990234
    10. '<class' → logprob: -8.656124114990234

Token 15: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.001352498889900744
    2. '
' → logprob: -6.751352310180664
    3. '```' → logprob: -8.751352310180664
    4. '\n' → logprob: -11.876352310180664
    5. '

' → logprob: -12.126352310180664
    6. '``' → logprob: -12.376352310180664
    7. ' class' → logprob: -13.001352310180664
    8. '"class' → logprob: -13.376352310180664
    9. '<class' → logprob: -13.501352310180664
    10. 'clas' → logprob: -14.376352310180664

Token 16: ' Piece' (ID: 48233)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01402093656361103
    2. ' Abstract' → logprob: -4.889020919799805
    3. ' My' → logprob: -6.639020919799805
    4. ' Shape' → logprob: -7.264020919799805
    5. ' Space' → logprob: -7.514020919799805
    6. ' Serializer' → logprob: -7.639020919799805
    7. ' Base' → logprob: -7.764020919799805
    8. ' ABC' → logprob: -8.139020919799805
    9. ' Basic' → logprob: -8.139020919799805
    10. ' A' → logprob: -8.639020919799805

Token 17: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2536884844303131
    2. ':' → logprob: -1.5036884546279907
    3. '(Abstract' → logprob: -6.753688335418701
    4. ' :' → logprob: -7.753688335418701
    5. '():' → logprob: -9.87868881225586
    6. '```' → logprob: -10.50368881225586
    7. '<|end|>' → logprob: -11.37868881225586
    8. ' (' → logprob: -11.37868881225586
    9. '):' → logprob: -11.87868881225586
    10. '(object' → logprob: -12.00368881225586

Token 18: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.07908079028129578
    2. ' ABC' → logprob: -2.579080820083618
    3. ')' → logprob: -9.204080581665039
    4. '):' → logprob: -10.329080581665039
    5. 'abc' → logprob: -10.954080581665039
    6. 'Abstract' → logprob: -11.329080581665039
    7. 'AB' → logprob: -11.954080581665039
    8. 'ABCDE' → logprob: -12.204080581665039
    9. 'object' → logprob: -12.329080581665039
    10. '   ' → logprob: -13.079080581665039

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0032163304276764393
    2. ')' → logprob: -5.75321626663208
    3. ':' → logprob: -10.503216743469238
    4. '):
' → logprob: -11.753216743469238
    5. ',' → logprob: -13.628216743469238
    6. ' ):' → logprob: -13.628216743469238
    7. '):

' → logprob: -15.253216743469238
    8. '():' → logprob: -16.128215789794922
    9. ')>' → logprob: -16.128215789794922
    10. ')：' → logprob: -16.753215789794922

Token 20: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4497550129890442
    2. '   ' → logprob: -1.0747549533843994
    3. '):' → logprob: -4.1997551918029785
    4. ')' → logprob: -6.4497551918029785
    5. ' :' → logprob: -6.8247551918029785
    6. ' ' → logprob: -7.4497551918029785
    7. '    
' → logprob: -7.5747551918029785
    8. ':
' → logprob: -7.8247551918029785
    9. 'def' → logprob: -8.19975471496582
    10. '):
' → logprob: -8.32475471496582

Token 21: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11813200265169144
    2. '    ' → logprob: -3.1181321144104004
    3. 'def' → logprob: -3.3681321144104004
    4. ' def' → logprob: -3.8681321144104004
    5. '    
' → logprob: -5.3681321144104
    6. '@' (adapté à ' @') → logprob: -5.8681321144104
    7. ' ' → logprob: -5.9931321144104
    8. ' 
' → logprob: -7.6181321144104
    9. '  ' → logprob: -8.118131637573242
    10. '\n' → logprob: -8.618131637573242

Token 22: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -3.128163257315464e-07
    2. 'ab' → logprob: -15.75
    3. 'staticmethod' → logprob: -16.5
    4. '.abstract' → logprob: -17.25
    5. ' abstract' → logprob: -17.375
    6. 'abs' → logprob: -17.5
    7. 'abc' → logprob: -17.625
    8. 'property' → logprob: -17.875
    9. 'classmethod' → logprob: -18.375
    10. 'override' → logprob: -21.5

Token 23: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -2.463036435074173e-05
    2. '_method' → logprob: -10.750024795532227
    3. 'meth' → logprob: -13.250024795532227
    4. 'classmethod' → logprob: -14.125024795532227
    5. 'm' → logprob: -15.125024795532227
    6. 'staticmethod' → logprob: -16.375024795532227
    7. 'property' → logprob: -16.750024795532227
    8. '   ' → logprob: -17.000024795532227
    9. '	method' → logprob: -17.125024795532227
    10. 'met' → logprob: -17.125024795532227

Token 24: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19503191113471985
    2. ' def' → logprob: -1.9450318813323975
    3. '(' → logprob: -4.445032119750977
    4. 'method' → logprob: -4.570032119750977
    5. '\' → logprob: -5.570032119750977
    6. '
' → logprob: -6.445032119750977
    7. ' ' → logprob: -6.820032119750977
    8. '_method' → logprob: -6.945032119750977
    9. '   ' → logprob: -7.445032119750977
    10. '	def' → logprob: -7.695032119750977

Token 25: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6755338311195374
    2. '(' → logprob: -1.1755337715148926
    3. '
' → logprob: -2.4255337715148926
    4. 'method' → logprob: -3.3005337715148926
    5. '    
' → logprob: -4.300533771514893
    6. '<|end|>' → logprob: -4.425533771514893
    7. ' def' → logprob: -4.925533771514893
    8. '\' → logprob: -5.675533771514893
    9. '('' → logprob: -5.800533771514893
    10. '(method' → logprob: -5.925533771514893

Token 26: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.674858301877975e-05
    2. ' def' → logprob: -10.125096321105957
    3. '
' → logprob: -10.250096321105957
    4. '   ' → logprob: -11.375096321105957
    5. 'method' → logprob: -12.000096321105957
    6. 'abstract' → logprob: -13.625096321105957
    7. 'classmethod' → logprob: -14.125096321105957
    8. '    
' → logprob: -14.625096321105957
    9. '```' → logprob: -14.875096321105957
    10. 'property' → logprob: -15.000096321105957

Token 27: ' area' (ID: 3624)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09853068739175797
    2. ' move' → logprob: -3.2235307693481445
    3. ' valid' → logprob: -4.3485307693481445
    4. ' get' → logprob: -4.5985307693481445
    5. ' validate' → logprob: -4.8485307693481445
    6. ' calculate' → logprob: -4.8485307693481445
    7. ' )' → logprob: -5.7235307693481445
    8. ' moves' → logprob: -5.7235307693481445
    9. ' evaluate' → logprob: -6.8485307693481445
    10. ' possible' → logprob: -6.8485307693481445

Token 28: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.28153687715530396
    2. '(' → logprob: -1.4065368175506592
    3. 'self' → logprob: -8.906537055969238
    4. '(s' → logprob: -9.156537055969238
    5. ')' → logprob: -10.156537055969238
    6. 's' → logprob: -10.406537055969238
    7. '()' → logprob: -10.906537055969238
    8. '(
' → logprob: -11.156537055969238
    9. ' (' → logprob: -11.531537055969238
    10. '(Self' → logprob: -11.656537055969238

Token 29: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5774314999580383
    2. ')' → logprob: -0.8274314999580383
    3. 'self' → logprob: -6.702431678771973
    4. ',' → logprob: -8.952431678771973
    5. ')->' → logprob: -9.952431678771973
    6. ':' → logprob: -10.077431678771973
    7. ' ):' → logprob: -11.702431678771973
    8. '),' → logprob: -11.827431678771973
    9. '_self' → logprob: -11.827431678771973
    10. '):
' → logprob: -11.952431678771973

Token 30: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.18281902372837067
    2. '(' → logprob: -2.182819128036499
    3. '():' → logprob: -2.932819128036499
    4. ':' → logprob: -7.68281888961792
    5. '()' → logprob: -8.057819366455078
    6. 'self' → logprob: -9.307819366455078
    7. '->' → logprob: -10.182819366455078
    8. ')' → logprob: -10.182819366455078
    9. '(s' → logprob: -10.307819366455078
    10. ' ->' → logprob: -10.807819366455078

Token 31: ' int' (ID: 677)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.026538079604506493
    2. 'float' → logprob: -3.901538133621216
    3. ' int' → logprob: -5.276537895202637
    4. 'int' → logprob: -7.151537895202637
    5. ' ' → logprob: -9.651537895202637
    6. ' None' → logprob: -11.401537895202637
    7. '	float' → logprob: -12.776537895202637
    8. ' ' → logprob: -13.026537895202637
    9. 'flo' → logprob: -13.526537895202637
    10. '  ' → logprob: -14.401537895202637

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015979631280060858
    2. '):' → logprob: -9.875160217285156
    3. '():' → logprob: -10.125160217285156
    4. ':
' → logprob: -10.125160217285156
    5. ':return' → logprob: -11.000160217285156
    6. '<|end|>' → logprob: -12.125160217285156
    7. ' :' → logprob: -13.250160217285156
    8. ':**' → logprob: -13.875160217285156
    9. ':def' → logprob: -13.875160217285156
    10. ':void' → logprob: -14.250160217285156

Token 33: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.0018822348210960627
    2. '       ' → logprob: -7.001882076263428
    3. ' pass' → logprob: -7.001882076263428
    4. '...' → logprob: -10.126882553100586
    5. '   ' → logprob: -11.376882553100586
    6. 'pas' → logprob: -12.126882553100586
    7. 'raise' → logprob: -14.001882553100586
    8. '	pass' → logprob: -14.126882553100586
    9. 'p' → logprob: -14.501882553100586
    10. '    ' → logprob: -14.501882553100586

Token 35: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2221895456314087
    2. '

' → logprob: -1.7221895456314087
    3. 'class' → logprob: -4.972189426422119
    4. '<|end|>' → logprob: -5.222189426422119
    5. '\n' → logprob: -5.597189426422119
    6. '


' → logprob: -6.347189426422119
    7. '```' → logprob: -7.722189426422119
    8. '    
' → logprob: -7.722189426422119
    9. '   ' → logprob: -7.847189426422119
    10. 'n' → logprob: -8.347189903259277

Token 36: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24980080127716064
    2. '

' → logprob: -2.124800682067871
    3. 'class' → logprob: -2.374800682067871
    4. '<|end|>' → logprob: -5.749800682067871
    5. '\n' → logprob: -6.624800682067871
    6. '    
' → logprob: -6.874800682067871
    7. '


' → logprob: -6.874800682067871
    8. '```' → logprob: -7.749800682067871
    9. '   ' → logprob: -8.124800682067871
    10. '<|end|>' → logprob: -8.624800682067871

Token 37: ' @' (ID: 759)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.05744222551584244
    2. '
' → logprob: -2.9324421882629395
    3. '

' → logprob: -6.0574421882629395
    4. ' class' → logprob: -9.557442665100098
    5. '    
' → logprob: -10.307442665100098
    6. '```' → logprob: -10.807442665100098
    7. '   ' → logprob: -10.932442665100098
    8. '\n' → logprob: -10.932442665100098
    9. '
    
' → logprob: -11.182442665100098
    10. '<|end|>' → logprob: -11.307442665100098

Token 38: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.019732225686311722
    2. 'property' → logprob: -4.0197319984436035
    3. 'staticmethod' → logprob: -6.7697319984436035
    4. 'classmethod' → logprob: -7.8947319984436035
    5. 'area' → logprob: -10.394732475280762
    6. 'abc' → logprob: -11.394732475280762
    7. 'dat' → logprob: -11.644732475280762
    8. 'abs' → logprob: -12.019732475280762
    9. ' abstract' → logprob: -13.019732475280762
    10. 'class' → logprob: -14.644732475280762

Token 39: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00016873658751137555
    2. 'def' → logprob: -9.125168800354004
    3. '_method' → logprob: -10.500168800354004
    4. 'classmethod' → logprob: -11.500168800354004
    5. '.method' → logprob: -11.500168800354004
    6. ' method' → logprob: -12.375168800354004
    7. 'staticmethod' → logprob: -12.750168800354004
    8. '	method' → logprob: -13.250168800354004
    9. '(method' → logprob: -14.500168800354004
    10. 'ethod' → logprob: -14.500168800354004

Token 40: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23405492305755615
    2. 'def' → logprob: -1.6090549230575562
    3. ' def' → logprob: -5.359055042266846
    4. '
' → logprob: -6.109055042266846
    5. '\' → logprob: -6.734055042266846
    6. '\n' → logprob: -8.359054565429688
    7. '    
' → logprob: -9.609054565429688
    8. '<|end|>' → logprob: -9.734054565429688
    9. '   ' → logprob: -10.234054565429688
    10. '```' → logprob: -10.859054565429688

Token 41: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0022058088798075914
    2. '
' → logprob: -6.127205848693848
    3. ' def' → logprob: -11.002205848693848
    4. '```' → logprob: -13.252205848693848
    5. 'property' → logprob: -14.627205848693848
    6. 'class' → logprob: -15.002205848693848
    7. '
' → logprob: -15.002205848693848
    8. '   ' → logprob: -15.377205848693848
    9. 'classmethod' → logprob: -15.502205848693848
    10. 'area' → logprob: -15.502205848693848

Token 42: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005087056662887335
    2. 'property' → logprob: -5.630086898803711
    3. 'area' → logprob: -7.630086898803711
    4. 'classmethod' → logprob: -8.130086898803711
    5. ' def' → logprob: -8.380086898803711
    6. '
' → logprob: -9.255086898803711
    7. 'str' → logprob: -9.505086898803711
    8. 'int' → logprob: -10.130086898803711
    9. 'method' → logprob: -10.255086898803711
    10. 'size' → logprob: -10.255086898803711

Token 43: ' perimeter' (ID: 89600)
  Prédit: ' perimeter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' perimeter' → logprob: -0.009229915216565132
    2. 'per' → logprob: -5.634230136871338
    3. ' name' → logprob: -6.634230136871338
    4. ' color' → logprob: -7.009230136871338
    5. ' shape' → logprob: -7.259230136871338
    6. 'name' → logprob: -8.00922966003418
    7. ' coordinates' → logprob: -8.25922966003418
    8. ' description' → logprob: -8.25922966003418
    9. ' display' → logprob: -8.50922966003418
    10. ' def' → logprob: -8.88422966003418

Token 44: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009450533543713391
    2. ')' → logprob: -7.250945091247559
    3. '(' → logprob: -8.750945091247559
    4. '()' → logprob: -9.750945091247559
    5. 'self' → logprob: -11.500945091247559
    6. '```' → logprob: -12.750945091247559
    7. ' (' → logprob: -13.250945091247559
    8. '   ' → logprob: -13.500945091247559
    9. ' ' → logprob: -14.875945091247559
    10. ' self' → logprob: -15.250945091247559

Token 45: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.771655115589965e-05
    2. ' )' → logprob: -11.875018119812012
    3. 'self' → logprob: -12.000018119812012
    4. '()' → logprob: -13.250018119812012
    5. '`)' → logprob: -14.000018119812012
    6. '())' → logprob: -14.750018119812012
    7. '   ' → logprob: -14.750018119812012
    8. '(self' → logprob: -14.875018119812012
    9. '```' → logprob: -15.250018119812012
    10. ' ' → logprob: -15.500018119812012

Token 46: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4939488172531128
    2. ')' → logprob: -1.2439488172531128
    3. ' ->' → logprob: -2.6189489364624023
    4. '->' → logprob: -4.118948936462402
    5. '(' → logprob: -4.868948936462402
    6. '()' → logprob: -6.243948936462402
    7. ')->' → logprob: -6.243948936462402
    8. '   ' → logprob: -7.993948936462402
    9. 'self' → logprob: -8.493948936462402
    10. '       ' → logprob: -9.243948936462402

Token 47: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3132665753364563
    2. 'int' → logprob: -1.3132665157318115
    3. ' ' → logprob: -13.31326675415039
    4. '	int' → logprob: -14.18826675415039
    5. ':int' → logprob: -14.18826675415039
    6. '[int' → logprob: -14.93826675415039
    7. '(int' → logprob: -15.18826675415039
    8. ')' → logprob: -15.31326675415039
    9. '   ' → logprob: -15.56326675415039
    10. ' None' → logprob: -15.68826675415039

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006559623870998621
    2. ':
' → logprob: -7.6256561279296875
    3. '):' → logprob: -9.750656127929688
    4. '<|end|>' → logprob: -10.250656127929688
    5. '():' → logprob: -10.625656127929688
    6. ':return' → logprob: -10.875656127929688
    7. ' :' → logprob: -11.625656127929688
    8. ':def' → logprob: -12.250656127929688
    9. '   ' → logprob: -12.500656127929688
    10. '```' → logprob: -12.750656127929688

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010835404973477125
    2. '<|end|>' → logprob: -7.6260833740234375
    3. 'pass' → logprob: -7.8760833740234375
    4. ' pass' → logprob: -9.001083374023438
    5. '   ' → logprob: -9.376083374023438
    6. '```' → logprob: -12.501083374023438
    7. '<|end|>' → logprob: -13.876083374023438
    8. '	pass' → logprob: -14.501083374023438
    9. '        
' → logprob: -14.751083374023438
    10. '\n' → logprob: -15.376083374023438

Token 50: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.008851985447108746
    2. '       ' → logprob: -4.758852005004883
    3. ' pass' → logprob: -8.383852005004883
    4. '   ' → logprob: -11.758852005004883
    5. '```' → logprob: -14.383852005004883
    6. '	pass' → logprob: -14.883852005004883
    7. 'pas' → logprob: -16.383852005004883
    8. '      ' → logprob: -17.133852005004883
    9. '     ' → logprob: -18.008852005004883
    10. '        
' → logprob: -18.258852005004883

Token 51: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1725648045539856
    2. 'class' → logprob: -1.9225647449493408
    3. '

' → logprob: -4.42256498336792
    4. '<|end|>' → logprob: -9.422564506530762
    5. ' class' → logprob: -9.922564506530762
    6. '```' → logprob: -10.172564506530762
    7. '
' → logprob: -10.672564506530762
    8. '


' → logprob: -10.922564506530762
    9. '    
' → logprob: -11.547564506530762
    10. '<class' → logprob: -11.547564506530762

Token 52: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.014233083464205265
    2. '
' → logprob: -4.264233112335205
    3. '

' → logprob: -9.764232635498047
    4. ' class' → logprob: -12.639232635498047
    5. '```' → logprob: -13.139232635498047
    6. '  
' → logprob: -13.389232635498047
    7. '<|end|>' → logprob: -13.514232635498047
    8. '<class' → logprob: -14.014232635498047
    9. '    
' → logprob: -14.014232635498047
    10. '
' → logprob: -14.264232635498047

Token 53: ' @' (ID: 759)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -5.407366916188039e-05
    2. '
' → logprob: -9.875054359436035
    3. '    
' → logprob: -14.000054359436035
    4. ' class' → logprob: -14.125054359436035
    5. '   ' → logprob: -15.500054359436035
    6. '<|end|>' → logprob: -15.875054359436035
    7. '  
' → logprob: -16.25005340576172
    8. '<class' → logprob: -16.25005340576172
    9. '```' → logprob: -16.37505340576172
    10. '"class' → logprob: -16.50005340576172

Token 54: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.07149241864681244
    2. 'classmethod' → logprob: -3.4464924335479736
    3. 'property' → logprob: -3.8214924335479736
    4. 'staticmethod' → logprob: -4.1964921951293945
    5. 'abc' → logprob: -9.196492195129395
    6. 'dat' → logprob: -9.446492195129395
    7. 'class' → logprob: -11.571492195129395
    8. 'abs' → logprob: -13.071492195129395
    9. 'override' → logprob: -13.571492195129395
    10. ' abstract' → logprob: -13.821492195129395

Token 55: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0006394077208824456
    2. 'def' → logprob: -7.75063943862915
    3. '_method' → logprob: -8.750638961791992
    4. '.method' → logprob: -11.000638961791992
    5. ' method' → logprob: -11.750638961791992
    6. '(method' → logprob: -12.375638961791992
    7. 'classmethod' → logprob: -12.375638961791992
    8. '	method' → logprob: -12.875638961791992
    9. '   ' → logprob: -13.000638961791992
    10. 'staticmethod' → logprob: -13.000638961791992

Token 56: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6691595315933228
    2. '
' → logprob: -0.7941595315933228
    3. ' def' → logprob: -3.669159412384033
    4. '   ' → logprob: -4.919159412384033
    5. '\' → logprob: -6.419159412384033
    6. '
' → logprob: -7.669159412384033
    7. '<|end|>' → logprob: -8.044159889221191
    8. '```' → logprob: -8.419159889221191
    9. '    
' → logprob: -8.794159889221191
    10. '(def' → logprob: -9.919159889221191

Token 57: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006643029628321528
    2. '
' → logprob: -8.250664710998535
    3. 'property' → logprob: -8.375664710998535
    4. '   ' → logprob: -9.125664710998535
    5. 'classmethod' → logprob: -10.125664710998535
    6. ' def' → logprob: -11.625664710998535
    7. 'staticmethod' → logprob: -11.875664710998535
    8. '```' → logprob: -12.375664710998535
    9. 'method' → logprob: -14.000664710998535
    10. 'd' → logprob: -14.375664710998535

Token 58: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4914362132549286
    2. 'property' → logprob: -1.491436243057251
    3. 'method' → logprob: -2.366436243057251
    4. 'classmethod' → logprob: -2.991436243057251
    5. 'staticmethod' → logprob: -4.116436004638672
    6. 'area' → logprob: -6.366436004638672
    7. ' def' → logprob: -8.616436004638672
    8. 'bool' → logprob: -8.741436004638672
    9. 'dat' → logprob: -9.241436004638672
    10. '   ' → logprob: -9.491436004638672

Token 59: ' cut' (ID: 6092)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -2.0536723136901855
    2. ' def' → logprob: -2.1786723136901855
    3. ' draw' → logprob: -2.1786723136901855
    4. ' name' → logprob: -2.5536723136901855
    5. ' color' → logprob: -2.8036723136901855
    6. 'draw' → logprob: -2.8036723136901855
    7. ' shape' → logprob: -2.8036723136901855
    8. ' description' → logprob: -2.9286723136901855
    9. ' dimensions' → logprob: -3.0536723136901855
    10. 'resize' → logprob: -3.3036723136901855

Token 60: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.22648809850215912
    2. '(' → logprob: -1.6014881134033203
    3. '(s' → logprob: -8.72648811340332
    4. '_' → logprob: -8.72648811340332
    5. '_piece' → logprob: -8.72648811340332
    6. 's' → logprob: -9.22648811340332
    7. '_at' → logprob: -9.35148811340332
    8. '(
' → logprob: -9.60148811340332
    9. 'self' → logprob: -9.72648811340332
    10. ')' → logprob: -9.72648811340332

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39443856477737427
    2. ')' → logprob: -1.1444385051727295
    3. 'self' → logprob: -5.394438743591309
    4. ' ,' → logprob: -6.144438743591309
    5. '   ' → logprob: -8.019438743591309
    6. ' )' → logprob: -9.144438743591309
    7. '       ' → logprob: -9.769438743591309
    8. 's' → logprob: -10.019438743591309
    9. '_,' → logprob: -10.144438743591309
    10. ' ' → logprob: -10.519438743591309

Token 62: ' cut' (ID: 6092)
  Prédit: ' piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' piece' → logprob: -1.3341065645217896
    2. ' self' → logprob: -1.5841065645217896
    3. ' pieces' → logprob: -1.7091065645217896
    4. ' length' → logprob: -2.5841064453125
    5. ' other' → logprob: -3.0841064453125
    6. ' cut' → logprob: -3.4591064453125
    7. ' size' → logprob: -3.4591064453125
    8. 'self' → logprob: -3.5841064453125
    9. ' n' → logprob: -3.8341064453125
    10. ')' → logprob: -3.9591064453125

Token 63: '_start' (ID: 10949)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_point' → logprob: -1.1076949834823608
    2. '_pos' → logprob: -1.7326949834823608
    3. '_' → logprob: -2.6076951026916504
    4. '_type' → logprob: -2.6076951026916504
    5. '_line' → logprob: -2.7326951026916504
    6. '_position' → logprob: -2.8576951026916504
    7. '_size' → logprob: -2.8576951026916504
    8. 's' → logprob: -3.4826951026916504
    9. '_length' → logprob: -3.4826951026916504
    10. '_points' → logprob: -4.10769510269165

Token 64: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023485267534852028
    2. '_point' → logprob: -3.8984851837158203
    3. '_pos' → logprob: -6.02348518371582
    4. '_position' → logprob: -8.64848518371582
    5. ')' → logprob: -9.27348518371582
    6. '_x' → logprob: -9.39848518371582
    7. '_:' → logprob: -10.39848518371582
    8. '_index' → logprob: -10.52348518371582
    9. ',' → logprob: -10.77348518371582
    10. ' :' → logprob: -11.14848518371582

Token 65: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7215629816055298
    2. 'Tuple' → logprob: -0.9715629816055298
    3. ' Tuple' → logprob: -2.3465628623962402
    4. ' int' → logprob: -3.5965628623962402
    5. ')' → logprob: -4.47156286239624
    6. 'List' → logprob: -8.721563339233398
    7. 'Point' → logprob: -8.971563339233398
    8. '[int' → logprob: -8.971563339233398
    9. '<|end|>' → logprob: -8.971563339233398
    10. 'Tu' → logprob: -9.346563339233398

Token 66: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029928788542747498
    2. ')' → logprob: -3.529928684234619
    3. ' ,' → logprob: -9.404929161071777
    4. ':' → logprob: -9.904929161071777
    5. ',
' → logprob: -10.654929161071777
    6. ' )' → logprob: -12.279929161071777
    7. ',)' → logprob: -12.279929161071777
    8. '   ' → logprob: -12.529929161071777
    9. '):' → logprob: -12.779929161071777
    10. ' ' → logprob: -13.529929161071777

Token 67: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6762331128120422
    2. ' ->' → logprob: -1.3012330532073975
    3. '->' → logprob: -1.9262330532073975
    4. ',' → logprob: -2.8012330532073975
    5. ')->' → logprob: -4.426233291625977
    6. '   ' → logprob: -7.426233291625977
    7. '->[' → logprob: -9.926233291625977
    8. ':' → logprob: -10.051233291625977
    9. ' ' → logprob: -10.176233291625977
    10. ' )->' → logprob: -10.426233291625977

Token 68: ' Tuple' (ID: 50841)
  Prédit: ' Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Tuple' → logprob: -0.4582552909851074
    2. 'Tuple' → logprob: -1.8332552909851074
    3. ''' → logprob: -2.7082552909851074
    4. ' '' → logprob: -2.7082552909851074
    5. ' List' → logprob: -3.3332552909851074
    6. 'List' → logprob: -3.8332552909851074
    7. ''T' → logprob: -4.958255290985107
    8. ' int' → logprob: -6.458255290985107
    9. '"' → logprob: -6.583255290985107
    10. 'int' → logprob: -6.708255290985107

Token 69: '['' (ID: 1181)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.6334570646286011
    2. '[' → logprob: -0.7584570646286011
    3. '[List' → logprob: -7.883457183837891
    4. '[
' → logprob: -8.38345718383789
    5. ' [' → logprob: -9.63345718383789
    6. '[]' → logprob: -9.88345718383789
    7. '[Int' → logprob: -10.38345718383789
    8. '[(' → logprob: -10.38345718383789
    9. '[P' → logprob: -11.50845718383789
    10. '(int' → logprob: -11.88345718383789

Token 70: 'Piece' (ID: 36823)
  Prédit: 'Piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Piece' → logprob: -0.00011212585377506912
    2. 'Pie' → logprob: -9.625112533569336
    3. 'int' → logprob: -10.375112533569336
    4. 'P' → logprob: -12.250112533569336
    5. ' Piece' → logprob: -12.375112533569336
    6. 'Cut' → logprob: -12.875112533569336
    7. '_piece' → logprob: -14.125112533569336
    8. 'Pi' → logprob: -14.125112533569336
    9. 'Point' → logprob: -15.000112533569336
    10. 'Pieces' → logprob: -15.375112533569336

Token 71: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016171731054782867
    2. '',' → logprob: -4.141171932220459
    3. ' ,' → logprob: -10.3911714553833
    4. ','' → logprob: -10.3911714553833
    5. '']' → logprob: -10.5161714553833
    6. '','' → logprob: -10.8911714553833
    7. '[' → logprob: -11.1411714553833
    8. ']' → logprob: -12.7661714553833
    9. '‌,' → logprob: -12.8911714553833
    10. ',List' → logprob: -13.5161714553833

Token 72: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.8172050714492798
    2. ' ' → logprob: -0.9422050714492798
    3. ''' → logprob: -1.8172050714492798
    4. '<|end|>' → logprob: -6.06720495223999
    5. ' ' → logprob: -6.31720495223999
    6. 'space' → logprob: -7.44220495223999
    7. ' space' → logprob: -7.94220495223999
    8. ' 
' → logprob: -8.317205429077148
    9. ''s' → logprob: -8.817205429077148
    10. ')' → logprob: -9.567205429077148

Token 73: 'Piece' (ID: 36823)
  Prédit: 'Piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Piece' → logprob: -0.00024168188974726945
    2. ' Piece' → logprob: -8.37524127960205
    3. 'Pie' → logprob: -12.37524127960205
    4. 'iece' → logprob: -12.62524127960205
    5. '_piece' → logprob: -13.00024127960205
    6. 'piece' → logprob: -14.50024127960205
    7. 'P' → logprob: -15.12524127960205
    8. ' ' → logprob: -15.62524127960205
    9. '-piece' → logprob: -16.500242233276367
    10. ' piece' → logprob: -16.500242233276367

Token 74: '']:
' (ID: 44766)
  Prédit: '']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']:' → logprob: -0.1295030266046524
    2. '']' → logprob: -2.129503011703491
    3. ']:' → logprob: -6.50450325012207
    4. ']' → logprob: -7.87950325012207
    5. '"]:' → logprob: -8.25450325012207
    6. '':' → logprob: -8.62950325012207
    7. '']:
' → logprob: -8.75450325012207
    8. ''):' → logprob: -10.50450325012207
    9. '',' → logprob: -10.50450325012207
    10. '):' → logprob: -11.00450325012207

Token 75: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3331855833530426
    2. '):' → logprob: -1.5831855535507202
    3. ')' → logprob: -3.5831856727600098
    4. '   ' → logprob: -3.8331856727600098
    5. '<|end|>' → logprob: -4.20818567276001
    6. '       ' → logprob: -4.70818567276001
    7. ' :' → logprob: -5.95818567276001
    8. ':return' → logprob: -7.70818567276001
    9. ':
' → logprob: -8.458185195922852
    10. '```' → logprob: -8.583185195922852

Token 76: ' pass' (ID: 1853)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5859707593917847
    2. '):' → logprob: -1.2109707593917847
    3. '<|end|>' → logprob: -2.710970878601074
    4. '       ' → logprob: -3.835970878601074
    5. '
' → logprob: -3.960970878601074
    6. ':' → logprob: -4.835970878601074
    7. ' 
' → logprob: -4.960970878601074
    8. '   ' → logprob: -5.210970878601074
    9. '```' → logprob: -5.335970878601074
    10. ' ' → logprob: -5.835970878601074

Token 77: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.12001832574605942
    2. '
' → logprob: -2.245018243789673
    3. '

' → logprob: -5.245018482208252
    4. ' class' → logprob: -6.995018482208252
    5. '<|end|>' → logprob: -7.995018482208252
    6. '\n' → logprob: -8.745018005371094
    7. '```' → logprob: -8.995018005371094
    8. '' → logprob: -9.620018005371094
    9. '<class' → logprob: -9.745018005371094
    10. '


' → logprob: -9.995018005371094

Token 78: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4888779819011688
    2. '
' → logprob: -0.9888780117034912
    3. '

' → logprob: -4.238877773284912
    4. ' class' → logprob: -9.98887825012207
    5. '```' → logprob: -9.98887825012207
    6. '
' → logprob: -10.23887825012207
    7. '


' → logprob: -10.48887825012207
    8. '\n' → logprob: -10.73887825012207
    9. '<class' → logprob: -10.98887825012207
    10. '<|end|>' → logprob: -11.11387825012207

Token 79: ' @' (ID: 759)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0013692846987396479
    2. '
' → logprob: -6.626369476318359
    3. '\n' → logprob: -11.00136947631836
    4. ' class' → logprob: -11.50136947631836
    5. 'c' → logprob: -11.87636947631836
    6. ' 
' → logprob: -13.00136947631836
    7. '```' → logprob: -13.25136947631836
    8. '

' → logprob: -13.50136947631836
    9. '    
' → logprob: -14.12636947631836
    10. '  
' → logprob: -14.12636947631836

Token 80: 'abstract' (ID: 31332)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.016572678461670876
    2. 'classmethod' → logprob: -4.51657247543335
    3. 'Piece' → logprob: -6.51657247543335
    4. 'piece' → logprob: -6.76657247543335
    5. 'abstract' → logprob: -7.51657247543335
    6. 'method' → logprob: -7.76657247543335
    7. 'staticmethod' → logprob: -7.76657247543335
    8. 'P' → logprob: -8.391572952270508
    9. 'abc' → logprob: -8.766572952270508
    10. 'ABC' → logprob: -8.891572952270508

Token 81: 'method' (ID: 8697)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3516086935997009
    2. 'method' → logprob: -1.2266087532043457
    3. ' def' → logprob: -6.726608753204346
    4. '
' → logprob: -7.601608753204346
    5. '_method' → logprob: -8.101608276367188
    6. '   ' → logprob: -8.101608276367188
    7. ')' → logprob: -8.726608276367188
    8. '    
' → logprob: -8.851608276367188
    9. ' ' → logprob: -9.851608276367188
    10. '    ' → logprob: -9.976608276367188

Token 82: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.003175932914018631
    2. 'def' → logprob: -6.003175735473633
    3. '
' → logprob: -7.628175735473633
    4. ' def' → logprob: -9.503175735473633
    5. '<|end|>' → logprob: -9.628175735473633
    6. '\' → logprob: -10.753175735473633
    7. '   ' → logprob: -11.253175735473633
    8. ' 
' → logprob: -11.253175735473633
    9. 'newline' → logprob: -12.378175735473633
    10. '\n' → logprob: -12.378175735473633

Token 83: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14616616070270538
    2. 'def' → logprob: -2.0211660861968994
    3. ' def' → logprob: -6.6461663246154785
    4. '
' → logprob: -7.1461663246154785
    5. '   ' → logprob: -7.3961663246154785
    6. '<|end|>' → logprob: -8.14616584777832
    7. '\' → logprob: -9.27116584777832
    8. '  ' → logprob: -9.39616584777832
    9. ' 
' → logprob: -9.89616584777832
    10. '    
' → logprob: -10.02116584777832

Token 84: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00010080150241265073
    2. 'class' → logprob: -9.625101089477539
    3. ' def' → logprob: -10.375101089477539
    4. 'd' → logprob: -13.375101089477539
    5. '
' → logprob: -14.000101089477539
    6. '   ' → logprob: -15.125101089477539
    7. 's' → logprob: -15.250101089477539
    8. 'de' → logprob: -16.25010108947754
    9. 'classmethod' → logprob: -16.37510108947754
    10. 'async' → logprob: -16.75010108947754

Token 85: ' edges' (ID: 22569)
  Prédit: ' resize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' resize' → logprob: -1.2531688213348389
    2. ' rotate' → logprob: -1.8781688213348389
    3. ' def' → logprob: -2.253168821334839
    4. ' scale' → logprob: -2.503168821334839
    5. 'resize' → logprob: -2.878168821334839
    6. ' is' → logprob: -3.003168821334839
    7. ' merge' → logprob: -3.128168821334839
    8. ' color' → logprob: -3.878168821334839
    9. ' clone' → logprob: -3.878168821334839
    10. ' combine' → logprob: -4.003169059753418

Token 86: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06889056414365768
    2. ')' → logprob: -3.1938905715942383
    3. '(' → logprob: -3.8188905715942383
    4. 's' → logprob: -7.318890571594238
    5. '_length' → logprob: -7.568890571594238
    6. ':' → logprob: -7.818890571594238
    7. '_count' → logprob: -7.943890571594238
    8. ''' → logprob: -8.193890571594238
    9. '_lengths' → logprob: -8.318890571594238
    10. '(s' → logprob: -8.818890571594238

Token 87: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024512779782526195
    2. 'self' → logprob: -9.000245094299316
    3. ' )' → logprob: -10.125245094299316
    4. '   ' → logprob: -10.500245094299316
    5. ':' → logprob: -11.250245094299316
    6. '(self' → logprob: -11.500245094299316
    7. '')' → logprob: -11.625245094299316
    8. ',' → logprob: -11.875245094299316
    9. '`)' → logprob: -12.750245094299316
    10. '       ' → logprob: -13.125245094299316

Token 88: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0795464962720871
    2. ' ->' → logprob: -2.5795464515686035
    3. '->' → logprob: -8.329546928405762
    4. ' ' → logprob: -9.079546928405762
    5. '   ' → logprob: -9.329546928405762
    6. ' )' → logprob: -9.329546928405762
    7. ')->' → logprob: -9.454546928405762
    8. '()' → logprob: -11.079546928405762
    9. '  ' → logprob: -11.704546928405762
    10. '(' → logprob: -12.329546928405762

Token 89: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.43569719791412354
    2. 'List' → logprob: -1.0606971979141235
    3. ' int' → logprob: -5.560697078704834
    4. 'int' → logprob: -5.810697078704834
    5. '	List' → logprob: -9.810697555541992
    6. '   ' → logprob: -10.060697555541992
    7. ' ' → logprob: -11.310697555541992
    8. '[List' → logprob: -12.060697555541992
    9. '    ' → logprob: -12.185697555541992
    10. '[int' → logprob: -12.685697555541992

Token 90: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.051625486463308334
    2. '[str' → logprob: -3.4266254901885986
    3. '[' → logprob: -4.0516252517700195
    4. '[List' → logprob: -8.67662525177002
    5. '['' → logprob: -8.92662525177002
    6. 'int' → logprob: -10.30162525177002
    7. '[
' → logprob: -10.42662525177002
    8. ' [' → logprob: -11.05162525177002
    9. '<int' → logprob: -11.17662525177002
    10. '<|end|>' → logprob: -11.42662525177002

Token 91: ']:
' (ID: 22152)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029775485396385193
    2. ']:' → logprob: -3.529775381088257
    3. '']' → logprob: -11.279775619506836
    4. ' ]' → logprob: -12.529775619506836
    5. ']>' → logprob: -13.029775619506836
    6. ']:
' → logprob: -13.029775619506836
    7. '']:' → logprob: -14.029775619506836
    8. ']
' → logprob: -14.404775619506836
    9. ']:
' → logprob: -14.529775619506836
    10. ':' → logprob: -14.529775619506836

Token 92: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' pass' (ID: 1853)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0488944910466671
    2. 'class' → logprob: -3.1738944053649902
    3. '

' → logprob: -5.17389440536499
    4. '
' → logprob: -9.423894882202148
    5. '' → logprob: -10.173894882202148
    6. ' class' → logprob: -10.548894882202148
    7. '


' → logprob: -10.798894882202148
    8. '```' → logprob: -11.298894882202148
    9. 'c' → logprob: -11.673894882202148
    10. '\n' → logprob: -11.798894882202148

Token 95: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06842043250799179
    2. 'class' → logprob: -2.81842041015625
    3. 'c' → logprob: -6.19342041015625
    4. '' → logprob: -6.81842041015625
    5. '

' → logprob: -6.81842041015625
    6. ' 
' → logprob: -6.94342041015625
    7. '\n' → logprob: -7.44342041015625
    8. '
' → logprob: -9.06842041015625
    9. 'n' → logprob: -9.06842041015625
    10. '    
' → logprob: -9.19342041015625

Token 96: ' @' (ID: 759)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.02331826649606228
    2. '
' → logprob: -3.773318290710449
    3. ' class' → logprob: -10.39831829071045
    4. '\n' → logprob: -10.89831829071045
    5. '    
' → logprob: -11.77331829071045
    6. ' 
' → logprob: -12.39831829071045
    7. 'c' → logprob: -13.02331829071045
    8. '  
' → logprob: -13.27331829071045
    9. '

' → logprob: -13.39831829071045
    10. '```' → logprob: -13.77331829071045

Token 97: 'abstract' (ID: 31332)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7726700305938721
    2. 'classmethod' → logprob: -1.022670030593872
    3. 'property' → logprob: -2.397670030593872
    4. 'abstract' → logprob: -2.897670030593872
    5. 'staticmethod' → logprob: -4.022669792175293
    6. 'dat' → logprob: -4.647669792175293
    7. 'abc' → logprob: -5.522669792175293
    8. 'piece' → logprob: -7.522669792175293
    9. 'aclass' → logprob: -9.147669792175293
    10. 'c' → logprob: -10.147669792175293

Token 98: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.002736997092142701
    2. 'def' → logprob: -6.002737045288086
    3. '_method' → logprob: -9.627737045288086
    4. 'classmethod' → logprob: -9.627737045288086
    5. '<|end|>' → logprob: -10.252737045288086
    6. 'staticmethod' → logprob: -10.502737045288086
    7. 'meth' → logprob: -11.252737045288086
    8. '
' → logprob: -11.377737045288086
    9. 'token' → logprob: -11.752737045288086
    10. '.method' → logprob: -11.752737045288086

Token 99: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02701113373041153
    2. 'def' → logprob: -3.6520111560821533
    3. '
' → logprob: -7.652010917663574
    4. '\' → logprob: -8.777010917663574
    5. ' def' → logprob: -9.902010917663574
    6. '   ' → logprob: -11.527010917663574
    7. '<|end|>' → logprob: -12.152010917663574
    8. '\n' → logprob: -12.402010917663574
    9. ' 
' → logprob: -13.402010917663574
    10. '    
' → logprob: -13.652010917663574

Token 100: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019283657893538475
    2. '
' → logprob: -4.019283771514893
    3. ' def' → logprob: -7.769283771514893
    4. '   ' → logprob: -8.144283294677734
    5. 'classmethod' → logprob: -8.394283294677734
    6. 'staticmethod' → logprob: -10.269283294677734
    7. '\' → logprob: -10.769283294677734
    8. 'property' → logprob: -10.894283294677734
    9. 'class' → logprob: -10.894283294677734
    10. 'd' → logprob: -10.894283294677734

Token 101: ' def' (ID: 1056)
  Prédit: 'property'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -0.24546696245670319
    2. 'classmethod' → logprob: -1.745466947555542
    3. 'class' → logprob: -3.870466947555542
    4. 'def' (adapté à ' def') → logprob: -4.120467185974121
    5. 'staticmethod' → logprob: -5.495467185974121
    6. 'dat' → logprob: -7.245467185974121
    7. 'abstract' → logprob: -8.245467185974121
    8. 'prop' → logprob: -9.120467185974121
    9. 'method' → logprob: -9.245467185974121
    10. ' property' → logprob: -9.495467185974121

Token 102: ' width' (ID: 4345)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' color' → logprob: -1.3397789001464844
    2. 'color' → logprob: -1.4647789001464844
    3. 'name' → logprob: -1.7147789001464844
    4. 'rotate' → logprob: -3.2147789001464844
    5. 'describe' → logprob: -3.5897789001464844
    6. ' name' → logprob: -3.5897789001464844
    7. 'scale' → logprob: -4.214778900146484
    8. 'contains' → logprob: -4.214778900146484
    9. 'resize' → logprob: -4.214778900146484
    10. 'clone' → logprob: -4.339778900146484

Token 103: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0016924348892644048
    2. '(' → logprob: -6.876692295074463
    3. ')' → logprob: -8.001692771911621
    4. 'self' → logprob: -8.251692771911621
    5. '()' → logprob: -10.626692771911621
    6. '(s' → logprob: -11.251692771911621
    7. 's' → logprob: -11.751692771911621
    8. '<|end|>' → logprob: -12.376692771911621
    9. '(
' → logprob: -13.001692771911621
    10. ' (' → logprob: -13.001692771911621

Token 104: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.868328920158092e-05
    2. '   ' → logprob: -11.375028610229492
    3. ' )' → logprob: -11.875028610229492
    4. 'self' → logprob: -12.500028610229492
    5. ' ' → logprob: -13.000028610229492
    6. ':' → logprob: -13.875028610229492
    7. '')' → logprob: -14.250028610229492
    8. '`)' → logprob: -14.375028610229492
    9. '(self' → logprob: -14.625028610229492
    10. ',' → logprob: -15.125028610229492

Token 105: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35439813137054443
    2. '->' → logprob: -1.6043981313705444
    3. ' ->' → logprob: -2.729398250579834
    4. '()' → logprob: -3.854398250579834
    5. '   ' → logprob: -5.229398250579834
    6. ':' → logprob: -5.979398250579834
    7. ')->' → logprob: -6.729398250579834
    8. '()->' → logprob: -7.229398250579834
    9. ' ' → logprob: -7.729398250579834
    10. '(' → logprob: -8.229397773742676

Token 106: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5122253894805908
    2. ' int' → logprob: -1.3872253894805908
    3. ')' → logprob: -2.012225389480591
    4. ' ' → logprob: -4.512225151062012
    5. ' )' → logprob: -5.262225151062012
    6. '   ' → logprob: -8.137225151062012
    7. ':int' → logprob: -8.887225151062012
    8. '[int' → logprob: -9.012225151062012
    9. ' 
' → logprob: -9.137225151062012
    10. '  ' → logprob: -9.387225151062012

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020484323613345623
    2. '<|end|>' → logprob: -6.377048492431641
    3. '   ' → logprob: -9.25204849243164
    4. ':
' → logprob: -9.50204849243164
    5. '):' → logprob: -9.50204849243164
    6. ':def' → logprob: -10.50204849243164
    7. ':return' → logprob: -10.50204849243164
    8. ')' → logprob: -11.00204849243164
    9. '<|end|>' → logprob: -11.62704849243164
    10. ' :' → logprob: -11.87704849243164

Token 108: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.1290282905101776
    2. ' pass' → logprob: -2.1290283203125
    3. '0' → logprob: -6.7540283203125
    4. '<|end|>' → logprob: -7.6290283203125
    5. '       ' → logprob: -8.1290283203125
    6. '   ' → logprob: -9.5040283203125
    7. 'return' → logprob: -10.6290283203125
    8. '
' → logprob: -10.8790283203125
    9. '	pass' → logprob: -11.1290283203125
    10. ' ' → logprob: -12.5040283203125

Token 110: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2953001856803894
    2. 'class' → logprob: -1.4203002452850342
    3. '<|end|>' → logprob: -4.795300006866455
    4. '

' → logprob: -5.420300006866455
    5. ' class' → logprob: -7.545300006866455
    6. '<|end|>' → logprob: -8.795300483703613
    7. '```' → logprob: -9.170300483703613
    8. ' 
' → logprob: -9.670300483703613
    9. '    
' → logprob: -9.670300483703613
    10. '<class' → logprob: -9.670300483703613

Token 111: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.07946843653917313
    2. '
' → logprob: -2.5794684886932373
    3. '

' → logprob: -8.204468727111816
    4. 'c' → logprob: -9.454468727111816
    5. ' class' → logprob: -9.579468727111816
    6. '   ' → logprob: -10.079468727111816
    7. '\n' → logprob: -10.579468727111816
    8. '<class' → logprob: -11.079468727111816
    9. '    
' → logprob: -11.329468727111816
    10. '<|end|>' → logprob: -11.329468727111816

Token 112: ' @' (ID: 759)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.003266241867095232
    2. '
' → logprob: -5.753266334533691
    3. ' class' → logprob: -10.128266334533691
    4. '   ' → logprob: -10.628266334533691
    5. '<|end|>' → logprob: -12.503266334533691
    6. '<class' → logprob: -12.878266334533691
    7. '    
' → logprob: -13.003266334533691
    8. '"class' → logprob: -13.253266334533691
    9. '\n' → logprob: -13.253266334533691
    10. '

' → logprob: -13.253266334533691

Token 113: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.4409956634044647
    2. 'method' → logprob: -2.190995693206787
    3. 'classmethod' → logprob: -2.190995693206787
    4. 'class' → logprob: -2.440995693206787
    5. 'staticmethod' → logprob: -3.315995693206787
    6. 'property' → logprob: -4.690995693206787
    7. 'type' → logprob: -9.690995216369629
    8. 'abc' → logprob: -9.815995216369629
    9. 'length' → logprob: -10.440995216369629
    10. 'interface' → logprob: -10.440995216369629

Token 114: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.004645622801035643
    2. 'def' → logprob: -5.379645824432373
    3. '_method' → logprob: -11.129645347595215
    4. '   ' → logprob: -12.754645347595215
    5. 'classmethod' → logprob: -12.754645347595215
    6. 'property' → logprob: -13.754645347595215
    7. 'staticmethod' → logprob: -14.004645347595215
    8. ' method' → logprob: -14.379645347595215
    9. '	method' → logprob: -14.504645347595215
    10. ' def' → logprob: -14.754645347595215

Token 115: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002654966665431857
    2. '   ' → logprob: -6.002655029296875
    3. '
' → logprob: -8.877655029296875
    4. ' def' → logprob: -10.377655029296875
    5. '    
' → logprob: -12.502655029296875
    6. '<|end|>' → logprob: -13.502655029296875
    7. '	def' → logprob: -13.627655029296875
    8. '  ' → logprob: -14.002655029296875
    9. '
' → logprob: -15.377655029296875
    10. ' ' → logprob: -15.502655029296875

Token 116: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005620885640382767
    2. '   ' → logprob: -7.5005621910095215
    3. ' def' → logprob: -11.750561714172363
    4. 'method' → logprob: -15.125561714172363
    5. '    
' → logprob: -15.250561714172363
    6. '
' → logprob: -15.500561714172363
    7. '  ' → logprob: -15.750561714172363
    8. '	def' → logprob: -15.875561714172363
    9. '    ' → logprob: -16.62556266784668
    10. ' ' → logprob: -16.62556266784668

Token 117: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5338648557662964
    2. 'height' → logprob: -0.9088648557662964
    3. 'length' → logprob: -4.658864974975586
    4. 'class' → logprob: -7.533864974975586
    5. 'depth' → logprob: -7.783864974975586
    6. '_height' → logprob: -9.283864974975586
    7. ' height' → logprob: -10.158864974975586
    8. 'width' → logprob: -10.283864974975586
    9. ' def' → logprob: -10.658864974975586
    10. '
' → logprob: -11.533864974975586

Token 118: ' depth' (ID: 13636)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.4849856495857239
    2. ' height' → logprob: -0.9849856495857239
    3. ' length' → logprob: -5.109985828399658
    4. 'length' → logprob: -5.359985828399658
    5. '_height' → logprob: -10.3599853515625
    6. 'def' → logprob: -10.4849853515625
    7. 'name' → logprob: -11.6099853515625
    8. ' ' → logprob: -11.6099853515625
    9. ' def' → logprob: -11.6099853515625
    10. '	height' → logprob: -12.1099853515625

Token 119: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.013512528501451015
    2. '()' → logprob: -4.76351261138916
    3. ')' → logprob: -5.88851261138916
    4. '(' → logprob: -6.63851261138916
    5. '(s' → logprob: -7.63851261138916
    6. '   ' → logprob: -8.88851261138916
    7. ' (' → logprob: -9.63851261138916
    8. ' ' → logprob: -9.88851261138916
    9. '```' → logprob: -10.76351261138916
    10. '(
' → logprob: -11.13851261138916

Token 120: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.5014188799541444e-05
    2. '   ' → logprob: -10.375044822692871
    3. 'self' → logprob: -12.625044822692871
    4. ' )' → logprob: -13.000044822692871
    5. ' ' → logprob: -13.375044822692871
    6. '):' → logprob: -13.500044822692871
    7. '()' → logprob: -13.625044822692871
    8. '```' → logprob: -14.125044822692871
    9. '(self' → logprob: -14.375044822692871
    10. '')' → logprob: -14.375044822692871

Token 121: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.1065431535243988
    2. ')' → logprob: -2.7315430641174316
    3. '->' → logprob: -3.3565430641174316
    4. ':' → logprob: -8.35654354095459
    5. ' ' → logprob: -8.48154354095459
    6. '()' → logprob: -8.60654354095459
    7. '   ' → logprob: -8.60654354095459
    8. ')->' → logprob: -8.73154354095459
    9. '(self' → logprob: -10.35654354095459
    10. '(' → logprob: -10.48154354095459

Token 122: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.38688522577285767
    2. 'int' → logprob: -1.136885166168213
    3. ' ' → logprob: -11.761885643005371
    4. ')' → logprob: -13.511885643005371
    5. '	int' → logprob: -13.511885643005371
    6. '   ' → logprob: -13.886885643005371
    7. '  ' → logprob: -14.261885643005371
    8. '(int' → logprob: -14.761885643005371
    9. ']int' → logprob: -14.886885643005371
    10. '<int' → logprob: -15.011885643005371

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001186299603432417
    2. ':
' → logprob: -7.126186370849609
    3. '<|end|>' → logprob: -8.37618637084961
    4. '   ' → logprob: -9.50118637084961
    5. '():' → logprob: -10.62618637084961
    6. ':def' → logprob: -11.12618637084961
    7. ' :' → logprob: -11.50118637084961
    8. ':return' → logprob: -11.75118637084961
    9. '):' → logprob: -12.12618637084961
    10. '       ' → logprob: -12.37618637084961

Token 124: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.07957864552736282
    2. ' pass' → logprob: -3.3295786380767822
    3. 'int' → logprob: -3.8295786380767822
    4. '0' → logprob: -4.204578876495361
    5. '   ' → logprob: -5.704578876495361
    6. '  ' → logprob: -8.329578399658203
    7. ' ' → logprob: -9.204578399658203
    8. ' int' → logprob: -9.579578399658203
    9. '       ' → logprob: -9.704578399658203
    10. 'None' → logprob: -9.829578399658203

Token 126: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20264148712158203
    2. 'class' → logprob: -1.827641487121582
    3. '<|end|>' → logprob: -4.077641487121582
    4. '

' → logprob: -5.827641487121582
    5. '\n' → logprob: -6.827641487121582
    6. ' class' → logprob: -7.077641487121582
    7. '```' → logprob: -8.327641487121582
    8. '<|end|>' → logprob: -9.327641487121582
    9. '<class' → logprob: -9.452641487121582
    10. ' 
' → logprob: -9.827641487121582

Token 127: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.004098466131836176
    2. 'c' → logprob: -5.504098415374756
    3. '
' → logprob: -11.004098892211914
    4. ' class' → logprob: -13.004098892211914
    5. '<class' → logprob: -14.879098892211914
    6. '```' → logprob: -15.379098892211914
    7. '"class' → logprob: -15.504098892211914
    8. 'cla' → logprob: -16.629098892211914
    9. 'clas' → logprob: -16.629098892211914
    10. '<|end|>' → logprob: -16.754098892211914

Token 128: ' Rect' (ID: 22765)
  Prédit: ' Rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Rectangle' → logprob: -0.02424221858382225
    2. ' Rect' → logprob: -4.024242401123047
    3. 'Rectangle' → logprob: -5.899242401123047
    4. ' Square' → logprob: -6.149242401123047
    5. ' Bar' → logprob: -8.024242401123047
    6. ' Block' → logprob: -8.649242401123047
    7. ' Wood' → logprob: -9.149242401123047
    8. ' Piece' → logprob: -9.524242401123047
    9. ' Cut' → logprob: -9.899242401123047
    10. ' Rec' → logprob: -9.899242401123047

Token 129: 'angular' (ID: 8802)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -1.5332478142227046e-05
    2. 'angular' → logprob: -11.125015258789062
    3. 'Angle' → logprob: -15.500015258789062
    4. 'ANGLE' → logprob: -16.625015258789062
    5. '```' → logprob: -16.625015258789062
    6. 'angel' → logprob: -16.875015258789062
    7. 'rectangle' → logprob: -17.125015258789062
    8. 'class' → logprob: -17.250015258789062
    9. 'angler' → logprob: -17.625015258789062
    10. 'agle' → logprob: -17.750015258789062

Token 130: 'Piece' (ID: 36823)
  Prédit: 'Piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Piece' → logprob: -0.0005781737272627652
    2. 'Pie' → logprob: -7.7505784034729
    3. 'Cut' → logprob: -10.625577926635742
    4. 'Pr' → logprob: -10.750577926635742
    5. 'Shape' → logprob: -11.000577926635742
    6. 'Plate' → logprob: -11.125577926635742
    7. 'Block' → logprob: -11.375577926635742
    8. 'Puzzle' → logprob: -11.500577926635742
    9. ' Piece' → logprob: -11.750577926635742
    10. 'Paper' → logprob: -11.750577926635742

Token 131: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.13563331961631775
    2. '(' → logprob: -2.1356332302093506
    3. ':' → logprob: -4.76063346862793
    4. '):' → logprob: -10.38563346862793
    5. ' :' → logprob: -10.51063346862793
    6. '(Rect' → logprob: -10.63563346862793
    7. '():' → logprob: -11.51063346862793
    8. ' (' → logprob: -13.26063346862793
    9. '(Point' → logprob: -13.51063346862793
    10. '(:' → logprob: -13.63563346862793

Token 132: 'iece' (ID: 12778)
  Prédit: 'iece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iece' → logprob: -5.3120038501219824e-05
    2. 'ie' → logprob: -11.125053405761719
    3. '(' → logprob: -11.250053405761719
    4. '(P' → logprob: -11.625053405761719
    5. 'iec' → logprob: -12.000053405761719
    6. 'I' → logprob: -13.625053405761719
    7. '```' → logprob: -13.625053405761719
    8. '   ' → logprob: -13.750053405761719
    9. 'ieces' → logprob: -14.000053405761719
    10. '(piece' → logprob: -14.375053405761719

Token 133: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00028374246903695166
    2. '):
' → logprob: -8.375284194946289
    3. ':' → logprob: -10.000284194946289
    4. ' ):' → logprob: -12.875284194946289
    5. ')' → logprob: -13.500284194946289
    6. ',' → logprob: -13.625284194946289
    7. ']:' → logprob: -14.000284194946289
    8. '   ' → logprob: -14.125284194946289
    9. '):

' → logprob: -15.000284194946289
    10. '):
' → logprob: -15.625284194946289

Token 134: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028776289895176888
    2. '   ' → logprob: -4.278776168823242
    3. ':
' → logprob: -4.278776168823242
    4. ' :' → logprob: -8.403776168823242
    5. '):' → logprob: -8.653776168823242
    6. '(' → logprob: -9.528776168823242
    7. '():' → logprob: -10.278776168823242
    8. ' def' → logprob: -10.403776168823242
    9. ' :
' → logprob: -10.653776168823242
    10. 'def' → logprob: -11.278776168823242

Token 135: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0012023737654089928
    2. ' def' → logprob: -6.751202583312988
    3. '   ' → logprob: -10.376202583312988
    4. 'width' → logprob: -14.626202583312988
    5. '
' → logprob: -15.876202583312988
    6. ' ' → logprob: -16.251201629638672
    7. 'de' → logprob: -16.376201629638672
    8. '_def' → logprob: -16.751201629638672
    9. '	def' → logprob: -16.876201629638672
    10. ')' → logprob: -17.001201629638672

Token 136: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.002129087457433343
    2. ' def' → logprob: -6.252129077911377
    3. ' ' → logprob: -9.127129554748535
    4. ' _' → logprob: -10.502129554748535
    5. '__' → logprob: -11.002129554748535
    6. ' init' → logprob: -11.002129554748535
    7. '_init' → logprob: -11.752129554748535
    8. 'def' → logprob: -11.877129554748535
    9. '_' → logprob: -11.877129554748535
    10. ' ' → logprob: -12.002129554748535

Token 137: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.512236498361744e-07
    2. 'ini' → logprob: -14.750000953674316
    3. 'in' → logprob: -17.375
    4. 'inite' → logprob: -17.625
    5. 'i' → logprob: -18.25
    6. 'inti' → logprob: -18.75
    7. 'innit' → logprob: -18.875
    8. ' init' → logprob: -19.125
    9. '	init' → logprob: -19.75
    10. 'int' → logprob: -19.75

Token 138: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0004484269011300057
    2. '(self' → logprob: -8.375448226928711
    3. '__' → logprob: -8.625448226928711
    4. '__(
' → logprob: -10.625448226928711
    5. '(' → logprob: -11.375448226928711
    6. '_(' → logprob: -13.750448226928711
    7. '__((' → logprob: -14.125448226928711
    8. '__('' → logprob: -15.000448226928711
    9. 'self' → logprob: -16.00044822692871
    10. '__("' → logprob: -16.50044822692871

Token 139: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0110511165112257
    2. ' self' → logprob: -4.511051177978516
    3. '   ' → logprob: -13.761051177978516
    4. '	self' → logprob: -14.136051177978516
    5. ',' → logprob: -14.886051177978516
    6. ' ' → logprob: -15.011051177978516
    7. '
' → logprob: -15.136051177978516
    8. '       ' → logprob: -15.136051177978516
    9. '(self' → logprob: -16.136051177978516
    10. '0' → logprob: -16.511051177978516

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034589387476444244
    2. ' ,' → logprob: -3.5345892906188965
    3. 'self' → logprob: -5.5345892906188965
    4. ' self' → logprob: -7.1595892906188965
    5. ',self' → logprob: -10.034589767456055
    6. ' ' → logprob: -10.534589767456055
    7. ',width' → logprob: -11.409589767456055
    8. '(self' → logprob: -11.909589767456055
    9. '<|end|>' → logprob: -12.284589767456055
    10. '_,' → logprob: -13.409589767456055

Token 141: ' w' (ID: 286)
  Prédit: ' width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.25471386313438416
    2. 'width' → logprob: -1.5047138929367065
    3. 'self' → logprob: -6.379714012145996
    4. ' self' → logprob: -6.879714012145996
    5. ' ' → logprob: -11.129714012145996
    6. '   ' → logprob: -11.754714012145996
    7. '	width' → logprob: -11.754714012145996
    8. 'w' → logprob: -11.879714012145996
    9. ' w' → logprob: -11.879714012145996
    10. 'x' → logprob: -12.629714012145996

Token 142: ':' (ID: 25)
  Prédit: 'idth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idth' → logprob: -0.0026313038542866707
    2. ',' → logprob: -6.127631187438965
    3. 'IDTH' → logprob: -8.127631187438965
    4. ':' → logprob: -9.627631187438965
    5. 'id' → logprob: -10.252631187438965
    6. 'ith' → logprob: -10.752631187438965
    7. 'idh' → logprob: -11.377631187438965
    8. 'idt' → logprob: -11.627631187438965
    9. 'width' → logprob: -12.377631187438965
    10. ':int' → logprob: -14.377631187438965

Token 143: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6932017803192139
    2. ' int' → logprob: -0.6932017803192139
    3. ':int' → logprob: -9.943202018737793
    4. ',' → logprob: -13.818202018737793
    5. ',int' → logprob: -13.818202018737793
    6. ' ' → logprob: -13.943202018737793
    7. '	int' → logprob: -14.193202018737793
    8. '(int' → logprob: -14.193202018737793
    9. '=int' → logprob: -14.318202018737793
    10. ':' → logprob: -14.693202018737793

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020592445798683912
    2. ' ,' → logprob: -8.500205993652344
    3. '<|end|>' → logprob: -13.500205993652344
    4. '‌,' → logprob: -14.875205993652344
    5. ',
' → logprob: -15.500205993652344
    6. ')' → logprob: -16.250205993652344
    7. '<|end|>' → logprob: -16.250205993652344
    8. ':' → logprob: -16.375205993652344
    9. ',int' → logprob: -17.000205993652344
    10. ',width' → logprob: -17.000205993652344

Token 145: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.10037046670913696
    2. 'd' → logprob: -2.350370407104492
    3. ' ' → logprob: -9.475370407104492
    4. ' h' → logprob: -10.100370407104492
    5. 'h' → logprob: -10.975370407104492
    6. 'depth' → logprob: -11.725370407104492
    7. ' 
' → logprob: -11.975370407104492
    8. ' depth' → logprob: -12.350370407104492
    9. ' ' → logprob: -13.100370407104492
    10. '	d' → logprob: -13.350370407104492

Token 146: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011431955499574542
    2. '):' → logprob: -7.376142978668213
    3. ':int' → logprob: -7.876142978668213
    4. ')' → logprob: -9.251143455505371
    5. 'th' → logprob: -10.376143455505371
    6. ' :' → logprob: -13.001143455505371
    7. ',' → logprob: -13.501143455505371
    8. '):
' → logprob: -13.501143455505371
    9. 'idth' → logprob: -13.876143455505371
    10. 'int' → logprob: -14.376143455505371

Token 147: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31331729888916016
    2. ' int' → logprob: -1.3133172988891602
    3. ':int' → logprob: -10.06331729888916
    4. ')' → logprob: -12.06331729888916
    5. '=int' → logprob: -13.31331729888916
    6. '(int' → logprob: -13.68831729888916
    7. '[int' → logprob: -13.93831729888916
    8. ',int' → logprob: -14.43831729888916
    9. '<int' → logprob: -14.43831729888916
    10. ' ' → logprob: -14.43831729888916

Token 148: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007223116233944893
    2. ')' → logprob: -5.632223129272461
    3. '):
' → logprob: -5.632223129272461
    4. ':' → logprob: -10.882223129272461
    5. '   ' → logprob: -11.757223129272461
    6. ',' → logprob: -12.507223129272461
    7. ' ):' → logprob: -12.757223129272461
    8. '):
' → logprob: -13.382223129272461
    9. ' ' → logprob: -15.257223129272461
    10. '       ' → logprob: -15.757223129272461

Token 149: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029719248414039612
    2. '):' → logprob: -3.654719352722168
    3. '       ' → logprob: -6.029719352722168
    4. ':
' → logprob: -7.654719352722168
    5. '):
' → logprob: -8.279719352722168
    6. ')' → logprob: -8.779719352722168
    7. ',' → logprob: -9.279719352722168
    8. ' :' → logprob: -11.154719352722168
    9. '():' → logprob: -12.279719352722168
    10. '<|end|>' → logprob: -12.654719352722168

Token 150: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.022664932534098625
    2. ' self' → logprob: -4.272665023803711
    3. '       ' → logprob: -4.772665023803711
    4. '   ' → logprob: -12.897665023803711
    5. '	self' → logprob: -13.022665023803711
    6. 'super' → logprob: -13.397665023803711
    7. ' ' → logprob: -13.897665023803711
    8. '	' → logprob: -15.897665023803711
    9. ' ' → logprob: -16.14766502380371
    10. '      ' → logprob: -17.27266502380371

Token 151: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.00025954778539016843
    2. 'w' → logprob: -8.625259399414062
    3. ' not' → logprob: -9.500259399414062
    4. ' ' → logprob: -12.625259399414062
    5. ' (' → logprob: -13.875259399414062
    6. ' isinstance' → logprob: -15.000259399414062
    7. 'not' → logprob: -15.375259399414062
    8. ' ' → logprob: -16.500259399414062
    9. '<|end|>' → logprob: -16.625259399414062
    10. '	w' → logprob: -17.250259399414062

Token 152: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.009068545885384083
    2. '<=' → logprob: -5.009068489074707
    3. ' <' → logprob: -6.134068489074707
    4. ' ' → logprob: -9.009068489074707
    5. '<' → logprob: -9.759068489074707
    6. ' >' → logprob: -14.134068489074707
    7. ' ' → logprob: -14.634068489074707
    8. '  ' → logprob: -14.759068489074707
    9. ' ≤' → logprob: -15.384068489074707
    10. ')<=' → logprob: -15.884068489074707

Token 153: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6765946745872498
    2. '0' → logprob: -1.3015947341918945
    3. ' ' → logprob: -1.6765947341918945
    4. '=' → logprob: -3.4265947341918945
    5. ' =' → logprob: -10.301594734191895
    6. '>' → logprob: -12.051594734191895
    7. '   ' → logprob: -12.801594734191895
    8. ' or' → logprob: -13.301594734191895
    9. '<|end|>' → logprob: -14.114094734191895
    10. ':' → logprob: -14.364094734191895

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22678707540035248
    2. '0' → logprob: -1.6017870903015137
    3. ' ' → logprob: -7.226787090301514
    4. '=' → logprob: -7.351787090301514
    5. '   ' → logprob: -13.101786613464355
    6. '>' → logprob: -13.601786613464355
    7. ' =' → logprob: -14.976786613464355
    8. 'or' → logprob: -14.976786613464355
    9. '```' → logprob: -15.601786613464355
    10. '2' → logprob: -15.789286613464355

Token 155: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.009679008275270462
    2. ':' → logprob: -5.009678840637207
    3. '<|end|>' → logprob: -5.884678840637207
    4. ' ' → logprob: -9.759678840637207
    5. ':
' → logprob: -10.009678840637207
    6. 'or' → logprob: -10.634678840637207
    7. '<|end|>' → logprob: -11.134678840637207
    8. ' and' → logprob: -11.509678840637207
    9. '       ' → logprob: -11.509678840637207
    10. ')' → logprob: -11.759678840637207

Token 156: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.026302501559257507
    2. 'd' → logprob: -3.6513025760650635
    3. ' ' → logprob: -14.401302337646484
    4. '	d' → logprob: -14.901302337646484
    5. ' ' → logprob: -14.901302337646484
    6. ' w' → logprob: -16.026302337646484
    7. '       ' → logprob: -16.151302337646484
    8. '    ' → logprob: -16.276302337646484
    9. '        ' → logprob: -16.401302337646484
    10. '   ' → logprob: -16.526302337646484

Token 157: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0005791273433715105
    2. '<|end|>' → logprob: -7.875579357147217
    3. '<' → logprob: -9.000578880310059
    4. ' ' → logprob: -9.500578880310059
    5. '1' → logprob: -15.625578880310059
    6. ' <
' → logprob: -15.750578880310059
    7. ' <",' → logprob: -16.000579833984375
    8. '<|end|>' → logprob: -16.250579833984375
    9. '<int' → logprob: -17.000579833984375
    10. 's' → logprob: -17.125579833984375

Token 158: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20141783356666565
    2. ' ' → logprob: -1.7014178037643433
    3. '<|end|>' → logprob: -12.576417922973633
    4. '=' → logprob: -15.076417922973633
    5. '
' → logprob: -15.201417922973633
    6. '   ' → logprob: -15.326417922973633
    7. '0' → logprob: -16.326417922973633
    8. '  ' → logprob: -16.826417922973633
    9. ' ' → logprob: -17.201417922973633
    10. '<|end|>' → logprob: -17.263917922973633

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038419815246015787
    2. ' ' → logprob: -7.875384330749512
    3. '<|end|>' → logprob: -13.125384330749512
    4. '0' → logprob: -14.125384330749512
    5. '=' → logprob: -14.375384330749512
    6. '   ' → logprob: -14.625384330749512
    7. '
' → logprob: -16.812883377075195
    8. '<|end|>' → logprob: -16.875383377075195
    9. '  ' → logprob: -17.125383377075195
    10. '```' → logprob: -17.312883377075195

Token 160: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012545561417937279
    2. ':
' → logprob: -4.387545585632324
    3. '):' → logprob: -11.387545585632324
    4. ',' → logprob: -11.887545585632324
    5. ':return' → logprob: -12.012545585632324
    6. ' :' → logprob: -12.887545585632324
    7. '):
' → logprob: -13.137545585632324
    8. ':

' → logprob: -13.262545585632324
    9. '<|end|>' → logprob: -13.387545585632324
    10. ' or' → logprob: -13.637545585632324

Token 161: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5376265048980713
    2. ':
' → logprob: -0.9126265048980713
    3. '           ' → logprob: -4.787626266479492
    4. '       ' → logprob: -5.287626266479492
    5. ',' → logprob: -8.412626266479492
    6. ' :
' → logprob: -8.662626266479492
    7. '
' → logprob: -8.787626266479492
    8. '):
' → logprob: -8.912626266479492
    9. ' raise' → logprob: -9.162626266479492
    10. '):' → logprob: -9.912626266479492

Token 162: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.5029594302177429
    2. 'raise' (adapté à ' raise') → logprob: -1.6279594898223877
    3. '
' → logprob: -2.2529594898223877
    4. '           ' → logprob: -2.3779594898223877
    5. ' 
' → logprob: -8.377959251403809
    6. '            
' → logprob: -8.627959251403809
    7. '               ' → logprob: -8.877959251403809
    8. '            ' → logprob: -8.877959251403809
    9. '_raise' → logprob: -9.127959251403809
    10. '	raise' → logprob: -9.627959251403809

Token 163: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.0003044802288059145
    2. 'Value' → logprob: -8.125304222106934
    3. ' ' → logprob: -12.375304222106934
    4. '	Value' → logprob: -12.875304222106934
    5. ' Val' → logprob: -13.625304222106934
    6. '<Value' → logprob: -16.25030517578125
    7. '(Value' → logprob: -16.50030517578125
    8. '_Value' → logprob: -16.62530517578125
    9. '```' → logprob: -17.25030517578125
    10. '_value' → logprob: -17.37530517578125

Token 164: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.008622255176305771
    2. 'rror' → logprob: -4.758622169494629
    3. 'r' → logprob: -12.008622169494629
    4. 'ror' → logprob: -13.633622169494629
    5. 'error' → logprob: -15.258622169494629
    6. 'Value' → logprob: -15.758622169494629
    7. 'n' → logprob: -17.133623123168945
    8. 'Er' → logprob: -17.383623123168945
    9. 'rr' → logprob: -18.133623123168945
    10. ' Error' → logprob: -18.258623123168945

Token 165: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0011486716102808714
    2. '(' → logprob: -7.001148700714111
    3. '('' → logprob: -8.376148223876953
    4. '(f' → logprob: -12.376148223876953
    5. '(
' → logprob: -13.126148223876953
    6. '("'' → logprob: -15.126148223876953
    7. '(

' → logprob: -15.751148223876953
    8. '("")' → logprob: -16.751148223876953
    9. '()' → logprob: -16.876148223876953
    10. '(",' → logprob: -17.251148223876953

Token 166: 'Width' (ID: 5156)
  Prédit: 'Width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Width' → logprob: -0.09813351929187775
    2. ' Width' → logprob: -2.7231335639953613
    3. 'Dimensions' → logprob: -4.098133563995361
    4. ' width' → logprob: -5.098133563995361
    5. ' Dimensions' → logprob: -6.723133563995361
    6. 'width' → logprob: -6.723133563995361
    7. 'Both' → logprob: -6.973133563995361
    8. 'Invalid' → logprob: -7.098133563995361
    9. '"' → logprob: -8.723133087158203
    10. 'Dimension' → logprob: -8.848133087158203

Token 167: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0012894016690552235
    2. 'and' → logprob: -6.876289367675781
    3. ' must' → logprob: -8.376289367675781
    4. ' ' → logprob: -11.001289367675781
    5. 'must' → logprob: -12.751289367675781
    6. '	and' → logprob: -13.376289367675781
    7. ' и' → logprob: -14.126289367675781
    8. ' should' → logprob: -14.376289367675781
    9. ',' → logprob: -14.501289367675781
    10. '   ' → logprob: -14.626289367675781

Token 168: ' depth' (ID: 13636)
  Prédit: ' depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' depth' → logprob: -0.006855085026472807
    2. 'depth' → logprob: -5.256855010986328
    3. ' Depth' → logprob: -6.506855010986328
    4. 'Depth' → logprob: -9.131855010986328
    5. ' height' → logprob: -11.881855010986328
    6. '_depth' → logprob: -12.506855010986328
    7. ' ' → logprob: -12.506855010986328
    8. ' depths' → logprob: -13.506855010986328
    9. '(depth' → logprob: -13.756855010986328
    10. '-depth' → logprob: -15.006855010986328

Token 169: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.000116655595775228
    2. 'must' → logprob: -9.125116348266602
    3. ' should' → logprob: -11.875116348266602
    4. ' ' → logprob: -15.125116348266602
    5. '>' → logprob: -15.875116348266602
    6. '<|end|>' → logprob: -16.3751163482666
    7. ' have' → logprob: -16.8751163482666
    8. '   ' → logprob: -17.2501163482666
    9. ' need' → logprob: -17.3751163482666
    10. ')' → logprob: -17.3751163482666

Token 170: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -11.000019073486328
    3. '<|end|>' → logprob: -13.875019073486328
    4. ' must' → logprob: -15.375019073486328
    5. ' both' → logprob: -15.375019073486328
    6. '>' → logprob: -16.000019073486328
    7. 'be' → logprob: -16.125019073486328
    8. '	be' → logprob: -16.250019073486328
    9. ' not' → logprob: -16.500019073486328
    10. ' always' → logprob: -16.625019073486328

Token 171: ' positive' (ID: 8841)
  Prédit: ' positive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positive' → logprob: -0.10622300207614899
    2. ' at' → logprob: -2.6062231063842773
    3. 'positive' → logprob: -4.356223106384277
    4. ' greater' → logprob: -4.481223106384277
    5. 'greater' → logprob: -6.606223106384277
    6. ' ' → logprob: -7.606223106384277
    7. ' >=' → logprob: -7.981223106384277
    8. 'at' → logprob: -8.481223106384277
    9. '>' → logprob: -8.981223106384277
    10. '>=' → logprob: -9.231223106384277

Token 172: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -9.412610233994201e-05
    2. 'inte' → logprob: -9.500094413757324
    3. '")' → logprob: -11.125094413757324
    4. ',' → logprob: -13.750094413757324
    5. ')' → logprob: -14.125094413757324
    6. ' integer' → logprob: -14.500094413757324
    7. ' values' → logprob: -14.750094413757324
    8. ' ")' → logprob: -14.875094413757324
    9. ' ' → logprob: -15.250094413757324
    10. '1' → logprob: -15.625094413757324

Token 173: '.")
' (ID: 27834)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.2847552001476288
    2. '")
' → logprob: -1.4097552299499512
    3. '.")' → logprob: -6.284755229949951
    4. '.")
' → logprob: -7.034755229949951
    5. '")
' → logprob: -7.159755229949951
    6. ',' → logprob: -11.159754753112793
    7. ')' → logprob: -11.284754753112793
    8. '.")
' → logprob: -11.534754753112793
    9. '       ' → logprob: -12.034754753112793
    10. ' ")' → logprob: -12.159754753112793

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009985323995351791
    2. '
' → logprob: -4.634985446929932
    3. '        
' → logprob: -8.509984970092773
    4. '<|end|>' → logprob: -11.509984970092773
    5. ' self' → logprob: -12.384984970092773
    6. 'self' → logprob: -12.509984970092773
    7. '  
' → logprob: -12.634984970092773
    8. '    
' → logprob: -13.259984970092773
    9. '      ' → logprob: -14.009984970092773
    10. '   ' → logprob: -14.009984970092773

Token 175: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022502930834889412
    2. '
' → logprob: -4.022502899169922
    3. ' self' → logprob: -6.147502899169922
    4. 'self' (adapté à ' self') → logprob: -6.272502899169922
    5. '        
' → logprob: -8.272502899169922
    6. ' 
' → logprob: -11.522502899169922
    7. ' ' → logprob: -11.522502899169922
    8. '   ' → logprob: -11.772502899169922
    9. '  
' → logprob: -11.772502899169922
    10. '	self' → logprob: -12.022502899169922

Token 176: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.970652163028717
    2. '.w' → logprob: -0.970652163028717
    3. '.width' → logprob: -1.5956521034240723
    4. '._' → logprob: -3.3456521034240723
    5. ' .' → logprob: -5.470652103424072
    6. ' ' → logprob: -10.09565258026123
    7. '_width' → logprob: -10.59565258026123
    8. ' width' → logprob: -11.72065258026123
    9. '.__' → logprob: -12.09565258026123
    10. 'width' → logprob: -12.59565258026123

Token 177: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.16039685904979706
    2. 'width' → logprob: -1.9103968143463135
    3. '_width' → logprob: -9.035396575927734
    4. '_w' → logprob: -9.910396575927734
    5. ' width' → logprob: -12.785396575927734
    6. ' w' → logprob: -15.035396575927734
    7. '	width' → logprob: -15.785396575927734
    8. '_' → logprob: -16.160396575927734
    9. '

' → logprob: -16.285396575927734
    10. 'Width' → logprob: -16.535396575927734

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20445704460144043
    2. '=' → logprob: -1.7044570446014404
    3. 'idth' → logprob: -5.8294572830200195
    4. ',' → logprob: -9.82945728302002
    5. ' ' → logprob: -11.07945728302002
    6. '   ' → logprob: -11.45445728302002
    7. 'IDTH' → logprob: -11.95445728302002
    8. '=w' → logprob: -11.95445728302002
    9. 'ith' → logprob: -13.07945728302002
    10. '  ' → logprob: -13.95445728302002

Token 179: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.4740781784057617
    2. 'w' → logprob: -0.9740781784057617
    3. '	w' → logprob: -14.224078178405762
    4. ' ' → logprob: -14.849078178405762
    5. '_w' → logprob: -16.474079132080078
    6. ' ' → logprob: -16.974079132080078
    7. '<w' → logprob: -17.849079132080078
    8. '=w' → logprob: -17.974079132080078
    9. '```' → logprob: -18.599079132080078
    10. '?w' → logprob: -18.724079132080078

Token 180: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.129928857088089
    2. '<|end|>' → logprob: -2.5049288272857666
    3. 'self' → logprob: -3.3799288272857666
    4. '
' → logprob: -5.379929065704346
    5. ' self' → logprob: -7.629929065704346
    6. '<|end|>' → logprob: -7.754929065704346
    7. ',' → logprob: -8.504928588867188
    8. ' ' → logprob: -9.129928588867188
    9. '   ' → logprob: -9.504928588867188
    10. '      ' → logprob: -10.879928588867188

Token 181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08507248759269714
    2. '
' → logprob: -2.7100725173950195
    3. '<|end|>' → logprob: -4.3350725173950195
    4. 'self' → logprob: -6.4600725173950195
    5. ',' → logprob: -9.71007251739502
    6. ' ' → logprob: -9.83507251739502
    7. '   ' → logprob: -9.83507251739502
    8. ' self' → logprob: -10.21007251739502
    9. '        
' → logprob: -10.58507251739502
    10. '<|end|>' → logprob: -10.58507251739502

Token 182: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00924738496541977
    2. ' self' → logprob: -4.759247303009033
    3. '       ' → logprob: -7.384247303009033
    4. '
' → logprob: -11.509247779846191
    5. '   ' → logprob: -14.634247779846191
    6. '        
' → logprob: -15.134247779846191
    7. ' ' → logprob: -15.384247779846191
    8. '	self' → logprob: -15.634247779846191
    9. '        ' → logprob: -16.009246826171875
    10. 'd' → logprob: -16.384246826171875

Token 183: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.05908740311861038
    2. '.' → logprob: -3.0590875148773193
    3. '_' → logprob: -4.80908727645874
    4. '_d' → logprob: -6.68408727645874
    5. ' .' → logprob: -7.93408727645874
    6. '.d' → logprob: -8.434087753295898
    7. ' ' → logprob: -8.559087753295898
    8. ' _' → logprob: -8.809087753295898
    9. '_w' → logprob: -10.809087753295898
    10. '	' → logprob: -11.059087753295898

Token 184: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.011373155459296e-05
    2. ' d' → logprob: -10.500030517578125
    3. '_d' → logprob: -13.625030517578125
    4. 'depth' → logprob: -14.375030517578125
    5. '
' → logprob: -15.250030517578125
    6. '	d' → logprob: -15.250030517578125
    7. '.d' → logprob: -16.937530517578125
    8. ')d' → logprob: -16.937530517578125
    9. ' ' → logprob: -17.625030517578125
    10. 'w' → logprob: -17.750030517578125

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3731844425201416
    2. '=' → logprob: -1.2481844425201416
    3. ' ' → logprob: -3.9981844425201416
    4. '<|end|>' → logprob: -5.4981842041015625
    5. 'd' → logprob: -6.3731842041015625
    6. ' d' → logprob: -9.123184204101562
    7. ')' → logprob: -9.373184204101562
    8. '<|end|>' → logprob: -11.123184204101562
    9. '=d' → logprob: -11.498184204101562
    10. '  ' → logprob: -11.873184204101562

Token 186: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2519298195838928
    2. ' d' → logprob: -1.501929759979248
    3. ' ' → logprob: -15.376930236816406
    4. 'depth' → logprob: -15.876930236816406
    5. ' ' → logprob: -16.376930236816406
    6. '	d' → logprob: -16.376930236816406
    7. '
' → logprob: -16.501930236816406
    8. '_d' → logprob: -16.626930236816406
    9. '<|end|>' → logprob: -17.126930236816406
    10. ' depth' → logprob: -17.376930236816406

Token 187: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06238171458244324
    2. '    
' → logprob: -3.4373817443847656
    3. '<|end|>' → logprob: -3.6873817443847656
    4. '
' → logprob: -6.562381744384766
    5. '<|end|>' → logprob: -7.437381744384766
    6. '  
' → logprob: -7.687381744384766
    7. '        
' → logprob: -8.187381744384766
    8. 'def' → logprob: -8.562381744384766
    9. '```' → logprob: -9.187381744384766
    10. '       ' → logprob: -9.437381744384766

Token 189: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3870418071746826
    2. '@property' → logprob: -1.1370418071746826
    3. '   ' → logprob: -8.762042045593262
    4. ' def' → logprob: -11.762042045593262
    5. '@' → logprob: -13.137042045593262
    6. 'property' → logprob: -13.387042045593262
    7. '
' → logprob: -13.637042045593262
    8. '    
' → logprob: -14.137042045593262
    9. '

' → logprob: -15.637042045593262
    10. '@end' → logprob: -16.262041091918945

Token 190: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.14623074233531952
    2. ' ' → logprob: -2.146230697631836
    3. ' def' → logprob: -4.521230697631836
    4. 'area' → logprob: -5.771230697631836
    5. '_area' → logprob: -6.396230697631836
    6. '_' → logprob: -6.521230697631836
    7. '   ' → logprob: -7.646230697631836
    8. ' _' → logprob: -7.771230697631836
    9. ' width' → logprob: -7.896230697631836
    10. ' space' → logprob: -8.646230697631836

Token 191: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08017130941152573
    2. '(' → logprob: -2.5801713466644287
    3. '()' → logprob: -6.83017110824585
    4. '(
' → logprob: -8.955171585083008
    5. ' (' → logprob: -10.330171585083008
    6. 'self' → logprob: -10.830171585083008
    7. '   ' → logprob: -12.205171585083008
    8. '       ' → logprob: -12.330171585083008
    9. '(

' → logprob: -12.330171585083008
    10. ' self' → logprob: -13.705171585083008

Token 192: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009067253209650517
    2. '):' → logprob: -4.884067058563232
    3. '()' → logprob: -7.509067058563232
    4. ' )' → logprob: -7.634067058563232
    5. '   ' → logprob: -9.13406753540039
    6. ' ' → logprob: -9.25906753540039
    7. '):
' → logprob: -9.50906753540039
    8. '():' → logprob: -10.00906753540039
    9. ' ):' → logprob: -10.13406753540039
    10. '       ' → logprob: -10.88406753540039

Token 193: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001970150275155902
    2. ' ->' → logprob: -7.501970291137695
    3. '       ' → logprob: -7.876970291137695
    4. '(' → logprob: -8.126970291137695
    5. 'self' → logprob: -8.251970291137695
    6. ' (' → logprob: -8.751970291137695
    7. ' self' → logprob: -9.376970291137695
    8. ')' → logprob: -9.626970291137695
    9. ':' → logprob: -9.751970291137695
    10. '->' → logprob: -10.001970291137695

Token 194: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1004842147231102
    2. 'int' → logprob: -2.3504841327667236
    3. ' self' → logprob: -8.350483894348145
    4. 'self' → logprob: -10.225483894348145
    5. '   ' → logprob: -13.475483894348145
    6. ' ' → logprob: -13.475483894348145
    7. '(int' → logprob: -14.475483894348145
    8. ' 
' → logprob: -14.725483894348145
    9. ':int' → logprob: -15.100483894348145
    10. ' (' → logprob: -15.225483894348145

Token 195: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003018114482983947
    2. ':
' → logprob: -5.878017902374268
    3. '():' → logprob: -9.503018379211426
    4. '       ' → logprob: -10.003018379211426
    5. '):' → logprob: -10.503018379211426
    6. ':return' → logprob: -10.503018379211426
    7. '():
' → logprob: -11.378018379211426
    8. ' :' → logprob: -11.628018379211426
    9. '   ' → logprob: -11.753018379211426
    10. '):
' → logprob: -12.628018379211426

Token 196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008358351769857109
    2. 'return' → logprob: -7.50083589553833
    3. ' return' → logprob: -8.250835418701172
    4. '
' → logprob: -11.000835418701172
    5. '        
' → logprob: -13.250835418701172
    6. ':' → logprob: -13.625835418701172
    7. '```' → logprob: -14.625835418701172
    8. '   ' → logprob: -15.500835418701172
    9. ':return' → logprob: -15.500835418701172
    10. '9' → logprob: -15.750835418701172

Token 197: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.021270837634801865
    2. '       ' → logprob: -4.021270751953125
    3. ' return' → logprob: -5.771270751953125
    4. '	return' → logprob: -15.521270751953125
    5. '   ' → logprob: -17.271270751953125
    6. '{return' → logprob: -18.146270751953125
    7. '_return' → logprob: -18.271270751953125
    8. 'eturn' → logprob: -18.271270751953125
    9. '	' → logprob: -18.521270751953125
    10. 'ret' → logprob: -18.646270751953125

Token 198: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3868711292743683
    2. 'self' → logprob: -1.136871099472046
    3. '(self' → logprob: -16.636871337890625
    4. '       ' → logprob: -17.886871337890625
    5. '	self' → logprob: -18.011871337890625
    6. '   ' → logprob: -18.636871337890625
    7. ' ' → logprob: -19.136871337890625
    8. ' ' → logprob: -20.136871337890625
    9. '_self' → logprob: -21.886871337890625
    10. '*self' → logprob: -22.511871337890625

Token 199: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00021033499797340482
    2. '.' → logprob: -8.500210762023926
    3. ' .' → logprob: -12.125210762023926
    4. '   ' → logprob: -14.500210762023926
    5. ' ' → logprob: -14.750210762023926
    6. '_' → logprob: -15.625210762023926
    7. 'self' → logprob: -15.750210762023926
    8. '.__' → logprob: -16.25020980834961
    9. '.
' → logprob: -17.75020980834961
    10. '._
' → logprob: -17.75020980834961

Token 200: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -6.704273118884885e-07
    2. '_w' → logprob: -15.000000953674316
    3. ' w' → logprob: -15.375000953674316
    4. '	w' → logprob: -16.75
    5. ''w' → logprob: -18.125
    6. '-w' → logprob: -19.0
    7. '*w' → logprob: -19.125
    8. 'd' → logprob: -19.5
    9. '```' → logprob: -19.625
    10. 'ｗ' → logprob: -20.125

Token 201: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.018195830285549164
    2. '*' → logprob: -4.018195629119873
    3. '*self' → logprob: -10.143196105957031
    4. ' ' → logprob: -12.143196105957031
    5. ' ' → logprob: -14.268196105957031
    6. '*d' → logprob: -14.768196105957031
    7. '   ' → logprob: -15.893196105957031
    8. '*object' → logprob: -16.01819610595703
    9. '  ' → logprob: -17.51819610595703
    10. '*this' → logprob: -17.89319610595703

Token 202: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5759710669517517
    2. 'self' → logprob: -0.8259710669517517
    3. '_self' → logprob: -10.700970649719238
    4. '_d' → logprob: -12.325970649719238
    5. '	self' → logprob: -13.700970649719238
    6. '_' → logprob: -13.950970649719238
    7. '(self' → logprob: -14.200970649719238
    8. ' ' → logprob: -14.325970649719238
    9. ' ' → logprob: -14.575970649719238
    10. ' _' → logprob: -14.700970649719238

Token 203: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.005051117856055498
    2. '_' → logprob: -5.380051136016846
    3. '_d' → logprob: -7.880051136016846
    4. '.' → logprob: -10.505050659179688
    5. ' _' → logprob: -11.630050659179688
    6. '_.' → logprob: -12.380050659179688
    7. '   ' → logprob: -12.630050659179688
    8. '._
' → logprob: -13.130050659179688
    9. '_w' → logprob: -13.380050659179688
    10. ' ' → logprob: -14.005050659179688

Token 204: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3856492842023727e-06
    2. '_d' → logprob: -13.625000953674316
    3. '	d' → logprob: -16.375001907348633
    4. ' d' → logprob: -17.000001907348633
    5. 'w' → logprob: -17.625001907348633
    6. '.d' → logprob: -18.250001907348633
    7. 'д' → logprob: -18.625001907348633
    8. '_' → logprob: -19.250001907348633
    9. 'depth' → logprob: -19.375001907348633
    10. '"d' → logprob: -19.500001907348633

Token 205: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7400240302085876
    2. '<|end|>' → logprob: -1.3650240898132324
    3. '
' → logprob: -1.7400240898132324
    4. '```' → logprob: -2.7400240898132324
    5. ' ' → logprob: -5.115024089813232
    6. 'newline' → logprob: -5.365024089813232
    7. '    
' → logprob: -5.740024089813232
    8. '  ' → logprob: -6.365024089813232
    9. '<|end|>' → logprob: -6.365024089813232
    10. '\n' → logprob: -6.365024089813232

Token 207: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0028332918882369995
    2. ' def' → logprob: -6.127833366394043
    3. '   ' → logprob: -7.627833366394043
    4. ' ' → logprob: -9.752833366394043
    5. '```' → logprob: -10.252833366394043
    6. '
' → logprob: -10.377833366394043
    7. '    
' → logprob: -11.752833366394043
    8. ')' → logprob: -12.252833366394043
    9. 'newline' → logprob: -12.502833366394043
    10. ' 
' → logprob: -12.627833366394043

Token 208: ' width' (ID: 4345)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.6774111986160278
    2. ' perimeter' → logprob: -0.9274111986160278
    3. ' per' → logprob: -2.4274110794067383
    4. '_per' → logprob: -5.052411079406738
    5. ' space' → logprob: -7.052411079406738
    6. '_' → logprob: -8.177411079406738
    7. 'space' → logprob: -8.427411079406738
    8. ' def' → logprob: -8.927411079406738
    9. ' perí' → logprob: -9.302411079406738
    10. 'peri' → logprob: -9.927411079406738

Token 209: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00837237760424614
    2. '(' → logprob: -5.5083723068237305
    3. '(self' → logprob: -5.7583723068237305
    4. ' ()' → logprob: -6.8833723068237305
    5. ' (' → logprob: -10.63337230682373
    6. '(
' → logprob: -10.75837230682373
    7. '()
' → logprob: -11.38337230682373
    8. '())' → logprob: -11.63337230682373
    9. '()(' → logprob: -12.00837230682373
    10. '<|end|>' → logprob: -12.25837230682373

Token 210: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00822435598820448
    2. ' )' → logprob: -5.0082244873046875
    3. '()' → logprob: -7.1332244873046875
    4. ' ' → logprob: -8.133224487304688
    5. '<|end|>' → logprob: -8.758224487304688
    6. '   ' → logprob: -10.008224487304688
    7. '    ' → logprob: -10.133224487304688
    8. '<|end|>' → logprob: -10.758224487304688
    9. '())' → logprob: -10.883224487304688
    10. ')return' → logprob: -11.008224487304688

Token 211: ' ->' (ID: 2747)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01940876804292202
    2. '(' → logprob: -4.769408702850342
    3. '(self' → logprob: -5.019408702850342
    4. ' ()' → logprob: -5.644408702850342
    5. '():' → logprob: -8.2694091796875
    6. ' (' → logprob: -8.8944091796875
    7. ')' → logprob: -9.5194091796875
    8. '(
' → logprob: -10.8944091796875
    9. ' ->' → logprob: -11.0194091796875
    10. '   ' → logprob: -11.0194091796875

Token 212: ' int' (ID: 677)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0007730722427368
    2. 'int' → logprob: -1.0007730722427368
    3. ' int' → logprob: -2.5007729530334473
    4. ')' → logprob: -2.8757729530334473
    5. 'self' → logprob: -2.8757729530334473
    6. ' self' → logprob: -3.2507729530334473
    7. ' ()' → logprob: -4.500772953033447
    8. ' ' → logprob: -4.625772953033447
    9. '():' → logprob: -6.125772953033447
    10. ' )' → logprob: -6.125772953033447

Token 213: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3857414722442627
    2. '()' → logprob: -1.5107414722442627
    3. ':' → logprob: -2.3857414722442627
    4. '():
' → logprob: -5.010741233825684
    5. '(' → logprob: -8.135741233825684
    6. ':
' → logprob: -9.010741233825684
    7. '()
' → logprob: -9.385741233825684
    8. '   ' → logprob: -10.760741233825684
    9. ')' → logprob: -10.760741233825684
    10. '):' → logprob: -11.135741233825684

Token 214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005439727567136288
    2. 'return' → logprob: -5.255439758300781
    3. ' return' → logprob: -8.505439758300781
    4. '   ' → logprob: -13.505439758300781
    5. '
' → logprob: -14.255439758300781
    6. '	' → logprob: -14.505439758300781
    7. ':' → logprob: -15.505439758300781
    8. '	return' → logprob: -15.880439758300781
    9. '```' → logprob: -15.880439758300781
    10. ':return' → logprob: -16.00543975830078

Token 215: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002490641549229622
    2. ' return' → logprob: -6.002490520477295
    3. '       ' → logprob: -11.502490997314453
    4. 'self' → logprob: -12.252490997314453
    5. '   ' → logprob: -16.752490997314453
    6. '	return' → logprob: -18.627490997314453
    7. ' self' → logprob: -18.627490997314453
    8. '```' → logprob: -20.127490997314453
    9. '{return' → logprob: -20.502490997314453
    10. '        
' → logprob: -20.627490997314453

Token 216: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5759395360946655
    2. 'self' → logprob: -0.8259395360946655
    3. '	self' → logprob: -16.825939178466797
    4. ' ' → logprob: -17.325939178466797
    5. ' ' → logprob: -17.700939178466797
    6. '_self' → logprob: -17.700939178466797
    7. '(self' → logprob: -17.950939178466797
    8. '   ' → logprob: -18.450939178466797
    9. 'sel' → logprob: -19.700939178466797
    10. 'se' → logprob: -19.700939178466797

Token 217: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00010962257510982454
    2. '.' → logprob: -9.125109672546387
    3. '_' → logprob: -15.125109672546387
    4. ' .' → logprob: -15.500109672546387
    5. '.__' → logprob: -16.75010871887207
    6. '   ' → logprob: -17.75010871887207
    7. ')._' → logprob: -17.75010871887207
    8. ' ' → logprob: -17.87510871887207
    9. '."_' → logprob: -18.25010871887207
    10. ']._' → logprob: -18.37510871887207

Token 218: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.0325924449716695e-05
    2. '_w' → logprob: -11.50001049041748
    3. '	w' → logprob: -16.875009536743164
    4. ' w' → logprob: -16.875009536743164
    5. ''w' → logprob: -17.000009536743164
    6. '-w' → logprob: -17.375009536743164
    7. 'd' → logprob: -17.500009536743164
    8. '.w' → logprob: -17.500009536743164
    9. '_' → logprob: -18.500009536743164
    10. '

' → logprob: -19.562509536743164

Token 219: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 221: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007784157060086727
    2. ' def' → logprob: -7.2507781982421875
    3. '   ' → logprob: -9.625778198242188
    4. 'd' → logprob: -14.250778198242188
    5. ')' → logprob: -14.625778198242188
    6. '```' → logprob: -14.750778198242188
    7. '
' → logprob: -15.250778198242188
    8. '	def' → logprob: -15.500778198242188
    9. '    
' → logprob: -16.125778198242188
    10. ' 
' → logprob: -16.125778198242188

Token 222: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.2018960565328598
    2. ' depth' → logprob: -1.701896071434021
    3. 'def' → logprob: -8.326895713806152
    4. '_depth' → logprob: -8.451895713806152
    5. ' def' → logprob: -11.451895713806152
    6. 'deep' → logprob: -11.701895713806152
    7. 'd' → logprob: -12.326895713806152
    8. '   ' → logprob: -14.326895713806152
    9. 'Depth' → logprob: -14.451895713806152
    10. ' deep' → logprob: -14.826895713806152

Token 223: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.034670449793338776
    2. '(self' → logprob: -3.534670352935791
    3. '(' → logprob: -5.409670352935791
    4. '()
' → logprob: -9.03467082977295
    5. '   ' → logprob: -9.03467082977295
    6. '(
' → logprob: -9.90967082977295
    7. '())' → logprob: -10.90967082977295
    8. ' ()' → logprob: -11.03467082977295
    9. '<|end|>' → logprob: -11.03467082977295
    10. '():' → logprob: -11.15967082977295

Token 224: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31623706221580505
    2. ')' → logprob: -1.3162370920181274
    3. ' ()' → logprob: -6.816236972808838
    4. '   ' → logprob: -7.066236972808838
    5. ' )' → logprob: -8.316237449645996
    6. '())' → logprob: -8.566237449645996
    7. ' ' → logprob: -8.566237449645996
    8. '(' → logprob: -8.566237449645996
    9. '    ' → logprob: -10.191237449645996
    10. '():' → logprob: -10.441237449645996

Token 225: ' ->' (ID: 2747)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0021905910689383745
    2. '():' → logprob: -7.252190589904785
    3. ' ()' → logprob: -7.627190589904785
    4. '(' → logprob: -8.252190589904785
    5. ')' → logprob: -8.377190589904785
    6. '   ' → logprob: -8.752190589904785
    7. '(self' → logprob: -9.377190589904785
    8. '())' → logprob: -9.627190589904785
    9. '():
' → logprob: -9.877190589904785
    10. '()
' → logprob: -10.627190589904785

Token 226: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5760142803192139
    2. ' int' → logprob: -0.8260142803192139
    3. 'self' → logprob: -10.201014518737793
    4. ' self' → logprob: -10.576014518737793
    5. '(int' → logprob: -11.826014518737793
    6. ' ' → logprob: -12.576014518737793
    7. '1' → logprob: -14.201014518737793
    8. '_int' → logprob: -15.576014518737793
    9. '   ' → logprob: -16.201013565063477
    10. ' def' → logprob: -16.326013565063477

Token 227: ':
' (ID: 734)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2955891191959381
    2. 'return' → logprob: -2.6705892086029053
    3. '       ' → logprob: -2.7955892086029053
    4. ' return' → logprob: -2.9205892086029053
    5. '   ' → logprob: -3.4205892086029053
    6. ':' → logprob: -4.170588970184326
    7. '():' → logprob: -4.545588970184326
    8. ':return' → logprob: -5.670588970184326
    9. '()
' → logprob: -5.920588970184326
    10. '():
' → logprob: -6.170588970184326

Token 228: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5970094799995422
    2. 'return' → logprob: -1.0970094203948975
    3. '       ' → logprob: -2.3470094203948975
    4. ' self' → logprob: -4.347009658813477
    5. 'self' → logprob: -4.972009658813477
    6. '   ' → logprob: -9.222009658813477
    7. '(self' → logprob: -10.722009658813477
    8. '	return' → logprob: -11.597009658813477
    9. ' ' → logprob: -12.597009658813477
    10. ':return' → logprob: -12.972009658813477

Token 229: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3890504837036133
    2. 'return' (adapté à ' return') → logprob: -1.1390504837036133
    3. ' self' → logprob: -6.639050483703613
    4. ' return' → logprob: -7.139050483703613
    5. '       ' → logprob: -9.514050483703613
    6. '   ' → logprob: -13.514050483703613
    7. '(self' → logprob: -17.139049530029297
    8. '	self' → logprob: -17.264049530029297
    9. '[self' → logprob: -17.639049530029297
    10. '```' → logprob: -17.639049530029297

Token 230: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.38687169551849365
    2. 'self' → logprob: -1.1368716955184937
    3. '_self' → logprob: -14.886871337890625
    4. '       ' → logprob: -15.886871337890625
    5. '(self' → logprob: -16.761871337890625
    6. '	self' → logprob: -16.761871337890625
    7. ' ' → logprob: -17.011871337890625
    8. ' ' → logprob: -17.511871337890625
    9. ' _' → logprob: -17.511871337890625
    10. '   ' → logprob: -17.636871337890625

Token 231: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.7014437364414334e-05
    2. '.' → logprob: -11.37502670288086
    3. '   ' → logprob: -12.00002670288086
    4. '_d' → logprob: -12.12502670288086
    5. '_' → logprob: -13.00002670288086
    6. ' .' → logprob: -15.00002670288086
    7. ' ' → logprob: -15.00002670288086
    8. '_w' → logprob: -15.37502670288086
    9. '._
' → logprob: -15.75002670288086
    10. '."_' → logprob: -15.75002670288086

Token 232: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.8789383830153383e-05
    2. '_d' → logprob: -11.625019073486328
    3. 'w' → logprob: -11.625019073486328
    4. ' d' → logprob: -14.875019073486328
    5. '1' → logprob: -16.125019073486328
    6. '_' → logprob: -16.250019073486328
    7. 'д' → logprob: -16.875019073486328
    8. '2' → logprob: -17.125019073486328
    9. ' ' → logprob: -17.250019073486328
    10. '_w' → logprob: -17.375019073486328

Token 233: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15936121344566345
    2. 'def' → logprob: -2.1593611240386963
    3. '<|end|>' → logprob: -4.159361362457275
    4. ' def' → logprob: -5.159361362457275
    5. '```' → logprob: -5.284361362457275
    6. '
' → logprob: -5.534361362457275
    7. '    
' → logprob: -7.409361362457275
    8. '	def' → logprob: -8.034360885620117
    9. '<|end|>' → logprob: -8.784360885620117
    10. ')' → logprob: -9.034360885620117

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6010389924049377
    2. 'def' → logprob: -0.9760389924049377
    3. ' def' → logprob: -3.101038932800293
    4. '
' → logprob: -3.601038932800293
    5. '```' → logprob: -6.726038932800293
    6. '<|end|>' → logprob: -7.601038932800293
    7. '    
' → logprob: -7.726038932800293
    8. ' ' → logprob: -8.976038932800293
    9. '	def' → logprob: -9.101038932800293
    10. ' 
' → logprob: -9.226038932800293

Token 235: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00011832444579340518
    2. ' def' → logprob: -9.500118255615234
    3. '   ' → logprob: -10.125118255615234
    4. '
' → logprob: -12.875118255615234
    5. '```' → logprob: -14.625118255615234
    6. '    
' → logprob: -15.875118255615234
    7. '	def' → logprob: -16.250118255615234
    8. ' ' → logprob: -17.500118255615234
    9. 'de' → logprob: -18.125118255615234
    10. ' 
' → logprob: -18.375118255615234

Token 236: ' perimeter' (ID: 89600)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.06567055732011795
    2. ' perimeter' → logprob: -2.8156704902648926
    3. ' per' → logprob: -5.690670490264893
    4. 'def' → logprob: -8.56567096710205
    5. ' def' → logprob: -10.19067096710205
    6. 'peri' → logprob: -10.31567096710205
    7. '_per' → logprob: -10.44067096710205
    8. ' perí' → logprob: -12.31567096710205
    9. '	per' → logprob: -12.44067096710205
    10. 'space' → logprob: -12.69067096710205

Token 237: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00010735770774772391
    2. '(' → logprob: -9.250107765197754
    3. '()' → logprob: -11.500107765197754
    4. 'self' → logprob: -14.750107765197754
    5. ' (' → logprob: -15.125107765197754
    6. '(s' → logprob: -15.750107765197754
    7. '(
' → logprob: -16.000106811523438
    8. '   ' → logprob: -16.875106811523438
    9. ' ' → logprob: -17.500106811523438
    10. 's' → logprob: -18.500106811523438

Token 238: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20150727033615112
    2. '()' → logprob: -1.701507329940796
    3. '())' → logprob: -10.076507568359375
    4. '(' → logprob: -10.951507568359375
    5. ' ()' → logprob: -11.076507568359375
    6. ' )' → logprob: -11.201507568359375
    7. '   ' → logprob: -13.076507568359375
    8. ' ' → logprob: -14.326507568359375
    9. '():' → logprob: -14.576507568359375
    10. '()
' → logprob: -15.076507568359375

Token 239: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.3699544072151184
    2. '->' → logprob: -1.6199543476104736
    3. ')' → logprob: -2.2449543476104736
    4. ':' → logprob: -5.744954586029053
    5. ')->' → logprob: -6.869954586029053
    6. ' ' → logprob: -8.494954109191895
    7. '   ' → logprob: -8.494954109191895
    8. '(' → logprob: -8.619954109191895
    9. '()' → logprob: -8.619954109191895
    10. '()->' → logprob: -9.244954109191895

Token 240: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.03821878135204315
    2. 'int' → logprob: -3.2882187366485596
    3. ' ' → logprob: -9.16321849822998
    4. '   ' → logprob: -10.41321849822998
    5. ' return' → logprob: -10.66321849822998
    6. '2' → logprob: -11.28821849822998
    7. ' (' → logprob: -12.66321849822998
    8. ' self' → logprob: -13.91321849822998
    9. '(int' → logprob: -14.41321849822998
    10. '4' → logprob: -14.66321849822998

Token 241: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08934814482927322
    2. '(self' → logprob: -2.714348077774048
    3. ':
' → logprob: -5.089348316192627
    4. '       ' → logprob: -5.339348316192627
    5. '():' → logprob: -5.339348316192627
    6. '(' → logprob: -6.714348316192627
    7. '   ' → logprob: -6.964348316192627
    8. 'self' → logprob: -7.839348316192627
    9. ' :' → logprob: -7.964348316192627
    10. '):' → logprob: -8.964347839355469

Token 242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04524663835763931
    2. ' return' → logprob: -3.7952466011047363
    3. 'return' → logprob: -3.9202466011047363
    4. '   ' → logprob: -6.920246601104736
    5. '2' → logprob: -7.045246601104736
    6. '	return' → logprob: -10.795247077941895
    7. ' ' → logprob: -11.045247077941895
    8. '4' → logprob: -11.420247077941895
    9. '0' → logprob: -12.420247077941895
    10. '```' → logprob: -12.670247077941895

Token 243: ' #' (ID: 1069)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1584412008523941
    2. 'return' → logprob: -2.4084413051605225
    3. ' return' → logprob: -2.9084413051605225
    4. ' ' → logprob: -7.158441066741943
    5. '   ' → logprob: -7.283441066741943
    6. '       ' → logprob: -7.533441066741943
    7. '```' → logprob: -11.908441543579102
    8. '	return' → logprob: -13.408441543579102
    9. '4' → logprob: -14.033441543579102
    10. '           ' → logprob: -14.908441543579102

Token 244: ' Per' (ID: 4651)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4763522446155548
    2. ' return' → logprob: -0.9763522148132324
    3. '2' → logprob: -6.851352214813232
    4. '   ' → logprob: -7.476352214813232
    5. ' ' → logprob: -7.601352214813232
    6. '       ' → logprob: -8.85135269165039
    7. '1' → logprob: -13.60135269165039
    8. '	return' → logprob: -13.60135269165039
    9. 'Return' → logprob: -14.35135269165039
    10. '  ' → logprob: -14.72635269165039

Token 245: 'imeter' (ID: 35068)
  Prédit: 'imeter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imeter' → logprob: -0.005645763128995895
    2. 'imiter' → logprob: -6.005645751953125
    3. '2' → logprob: -7.005645751953125
    4. '   ' → logprob: -7.130645751953125
    5. 'im' → logprob: -7.630645751953125
    6. ' ' → logprob: -7.755645751953125
    7. '  ' → logprob: -8.755645751953125
    8. '       ' → logprob: -9.255645751953125
    9. '1' → logprob: -9.380645751953125
    10. '```' → logprob: -9.755645751953125

Token 246: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3901226818561554
    2. '=' → logprob: -1.140122652053833
    3. ' ' → logprob: -6.765122890472412
    4. ' return' → logprob: -7.265122890472412
    5. '       ' → logprob: -7.265122890472412
    6. ':' → logprob: -7.890122890472412
    7. '   ' → logprob: -8.890122413635254
    8. 'return' → logprob: -9.140122413635254
    9. '()' → logprob: -11.265122413635254
    10. '2' → logprob: -11.640122413635254

Token 247: ' top' (ID: 2344)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5770183801651001
    2. ' ' → logprob: -0.8270183801651001
    3. 'rect' → logprob: -8.077018737792969
    4. 'self' → logprob: -8.452018737792969
    5. ' rectangle' → logprob: -8.702018737792969
    6. ' self' → logprob: -9.327018737792969
    7. '   ' → logprob: -9.702018737792969
    8. ' (' → logprob: -9.952018737792969
    9. ' a' → logprob: -10.077018737792969
    10. 'rectangle' → logprob: -10.202018737792969

Token 248: ' view' (ID: 2325)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4228766858577728
    2. '+' → logprob: -1.5478767156600952
    3. ' and' → logprob: -3.4228765964508057
    4. '2' → logprob: -3.7978765964508057
    5. ' ' → logprob: -4.172876834869385
    6. '*' → logprob: -4.422876834869385
    7. ')' → logprob: -4.922876834869385
    8. '   ' → logprob: -4.922876834869385
    9. ' =' → logprob: -5.172876834869385
    10. '=' → logprob: -5.547876834869385

Token 249: ' rectangle' (ID: 45808)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06974200904369354
    2. ' =' → logprob: -3.31974196434021
    3. ' return' → logprob: -4.944742202758789
    4. 'return' → logprob: -5.069742202758789
    5. '       ' → logprob: -5.319742202758789
    6. '   ' → logprob: -5.569742202758789
    7. ':' → logprob: -5.944742202758789
    8. ' ' → logprob: -6.194742202758789
    9. '2' → logprob: -6.194742202758789
    10. '(' → logprob: -6.944742202758789

Token 250: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5311508774757385
    2. ' return' → logprob: -1.4061508178710938
    3. 'return' → logprob: -2.1561508178710938
    4. '=' → logprob: -3.6561508178710938
    5. ' =' → logprob: -4.156150817871094
    6. '   ' → logprob: -5.031150817871094
    7. ':' → logprob: -6.156150817871094
    8. '
' → logprob: -8.406150817871094
    9. '2' → logprob: -8.656150817871094
    10. ' ' → logprob: -8.656150817871094

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9322560429573059
    2. ' return' → logprob: -1.0572559833526611
    3. 'return' → logprob: -2.057255983352661
    4. '   ' → logprob: -2.307255983352661
    5. '=' → logprob: -4.30725622177124
    6. '2' → logprob: -5.18225622177124
    7. ' =' → logprob: -5.18225622177124
    8. ' ' → logprob: -5.43225622177124
    9. ':' → logprob: -7.68225622177124
    10. '
' → logprob: -7.93225622177124

Token 252: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5781845450401306
    2. 'return' (adapté à ' return') → logprob: -0.8281845450401306
    3. '       ' → logprob: -6.578184604644775
    4. '2' → logprob: -7.328184604644775
    5. '   ' → logprob: -8.703184127807617
    6. ' ' → logprob: -10.828184127807617
    7. '4' → logprob: -12.828184127807617
    8. '	return' → logprob: -13.453184127807617
    9. '1' → logprob: -13.953184127807617
    10. '0' → logprob: -14.078184127807617

Token 253: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4740840494632721
    2. ' ' → logprob: -0.9740840196609497
    3. '   ' → logprob: -12.34908390045166
    4. ' (' → logprob: -13.34908390045166
    5. '(' → logprob: -14.22408390045166
    6. '  ' → logprob: -15.72408390045166
    7. 'self' → logprob: -16.099084854125977
    8. '       ' → logprob: -16.349084854125977
    9. ' self' → logprob: -16.849084854125977
    10. '```' → logprob: -16.974084854125977

Token 254: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.52919222577475e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.375075340270996
    4. '(' → logprob: -16.37507438659668
    5. 'self' → logprob: -16.75007438659668
    6. ' (' → logprob: -18.87507438659668
    7. '  ' → logprob: -19.00007438659668
    8. '```' → logprob: -19.25007438659668
    9. '       ' → logprob: -19.93757438659668
    10. '۲' → logprob: -20.00007438659668

Token 255: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.048684220761060715
    2. '*' → logprob: -3.0486841201782227
    3. '*(' → logprob: -9.298684120178223
    4. '(' → logprob: -12.923684120178223
    5. '*self' → logprob: -13.673684120178223
    6. ' ' → logprob: -13.923684120178223
    7. ' ' → logprob: -15.048684120178223
    8. ' **' → logprob: -15.548684120178223
    9. '**' → logprob: -15.798684120178223
    10. ' (' → logprob: -16.54868507385254

Token 256: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.8074162653647363e-05
    2. '(' → logprob: -11.250018119812012
    3. 'self' → logprob: -12.750018119812012
    4. ' (' → logprob: -13.125018119812012
    5. '(s' → logprob: -18.125017166137695
    6. '*self' → logprob: -18.375017166137695
    7. '(Self' → logprob: -18.500017166137695
    8. '(
' → logprob: -18.625017166137695
    9. '(sel' → logprob: -18.875017166137695
    10. ' self' → logprob: -19.125017166137695

Token 257: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001505578518845141
    2. ' self' → logprob: -6.751505374908447
    3. '(self' → logprob: -8.001505851745605
    4. ' (' → logprob: -16.12650489807129
    5. '
' → logprob: -16.25150489807129
    6. '	self' → logprob: -16.87650489807129
    7. '       ' → logprob: -16.87650489807129
    8. '(' → logprob: -17.87650489807129
    9. '[self' → logprob: -18.37650489807129
    10. '   ' → logprob: -19.25150489807129

Token 258: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.282920129597187e-05
    2. '.' → logprob: -12.125012397766113
    3. ' .' → logprob: -12.375012397766113
    4. '   ' → logprob: -13.125012397766113
    5. ' ' → logprob: -14.000012397766113
    6. '._
' → logprob: -16.25001335144043
    7. '.__' → logprob: -16.87501335144043
    8. '  ' → logprob: -17.37501335144043
    9. ']._' → logprob: -17.75001335144043
    10. ')._' → logprob: -17.75001335144043

Token 259: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.981667537620524e-06
    2. '_w' → logprob: -13.375001907348633
    3. ' w' → logprob: -15.500001907348633
    4. '(w' → logprob: -16.375001907348633
    5. 'width' → logprob: -16.625001907348633
    6. '	w' → logprob: -17.750001907348633
    7. 'd' → logprob: -18.375001907348633
    8. '.w' → logprob: -18.875001907348633
    9. ''w' → logprob: -19.750001907348633
    10. '-w' → logprob: -20.375001907348633

Token 260: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.004084455315023661
    2. '+' → logprob: -5.504084587097168
    3. ' ' → logprob: -12.129084587097168
    4. ' +
' → logprob: -15.254084587097168
    5. ' ' → logprob: -15.754084587097168
    6. '+self' → logprob: -15.879084587097168
    7. ' plus' → logprob: -16.62908363342285
    8. '  ' → logprob: -18.75408363342285
    9. '   ' → logprob: -18.75408363342285
    10. '    ' → logprob: -19.00408363342285

Token 261: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889342308044434
    2. ' self' → logprob: -2.5788934230804443
    3. ' ' → logprob: -12.953893661499023
    4. '       ' → logprob: -15.078893661499023
    5. '   ' → logprob: -15.453893661499023
    6. '	self' → logprob: -15.578893661499023
    7. '
' → logprob: -15.953893661499023
    8. '_self' → logprob: -16.078893661499023
    9. '(self' → logprob: -16.328893661499023
    10. ' 
' → logprob: -16.453893661499023

Token 262: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0004377022560220212
    2. '_d' → logprob: -7.7504377365112305
    3. '_' → logprob: -12.75043773651123
    4. '.' → logprob: -13.37543773651123
    5. ' ' → logprob: -14.00043773651123
    6. ' .' → logprob: -15.00043773651123
    7. ' _' → logprob: -15.25043773651123
    8. '_r' → logprob: -15.50043773651123
    9. '   ' → logprob: -15.62543773651123
    10. '.d' → logprob: -15.87543773651123

Token 263: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0006504826596938074
    2. '_d' → logprob: -7.375650405883789
    3. 'self' → logprob: -10.750650405883789
    4. ' d' → logprob: -13.375650405883789
    5. 'depth' → logprob: -15.250650405883789
    6. '	d' → logprob: -15.375650405883789
    7. '.d' → logprob: -15.625650405883789
    8. ')d' → logprob: -15.875650405883789
    9. '_depth' → logprob: -17.12565040588379
    10. 'д' → logprob: -17.25065040588379

Token 264: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5928495486150496e-05
    2. ' )' → logprob: -11.125016212463379
    3. ')
' → logprob: -13.750016212463379
    4. ')

' → logprob: -17.500015258789062
    5. '))' → logprob: -17.750015258789062
    6. ')}' → logprob: -18.125015258789062
    7. ')#' → logprob: -18.625015258789062
    8. ')return' → logprob: -18.625015258789062
    9. ')`' → logprob: -19.250015258789062
    10. '}' → logprob: -19.500015258789062

Token 265: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10230691730976105
    2. '   ' → logprob: -2.727306842803955
    3. ' def' → logprob: -3.477306842803955
    4. '
' → logprob: -7.352306842803955
    5. ' ' → logprob: -9.602307319641113
    6. '<|end|>' → logprob: -9.852307319641113
    7. '    
' → logprob: -10.102307319641113
    8. ')' → logprob: -10.227307319641113
    9. ' 
' → logprob: -10.227307319641113
    10. '```' → logprob: -10.602307319641113

Token 266: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00012999906903132796
    2. ' def' → logprob: -9.000129699707031
    3. '
' → logprob: -12.125129699707031
    4. '   ' → logprob: -13.875129699707031
    5. '

' → logprob: -16.75012969970703
    6. '    
' → logprob: -16.87512969970703
    7. '```' → logprob: -16.87512969970703
    8. '	def' → logprob: -17.37512969970703
    9. ' 
' → logprob: -19.00012969970703
    10. '  
' → logprob: -19.37512969970703

Token 267: ' edges' (ID: 22569)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -1.130279302597046
    2. ' edges' → logprob: -1.380279302597046
    3. 'edges' → logprob: -1.380279302597046
    4. ' cut' → logprob: -1.755279302597046
    5. 'cuts' → logprob: -8.005279541015625
    6. 'def' → logprob: -8.255279541015625
    7. ' cuts' → logprob: -8.505279541015625
    8. ' def' → logprob: -8.880279541015625
    9. '_cut' → logprob: -9.380279541015625
    10. '_edges' → logprob: -9.505279541015625

Token 268: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002481078845448792
    2. '(' → logprob: -8.500247955322266
    3. '()' → logprob: -10.375247955322266
    4. '(
' → logprob: -11.875247955322266
    5. ' (' → logprob: -12.500247955322266
    6. '(s' → logprob: -13.750247955322266
    7. 'self' → logprob: -14.375247955322266
    8. '   ' → logprob: -14.625247955322266
    9. 's' → logprob: -15.250247955322266
    10. ' ' → logprob: -15.875247955322266

Token 269: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2428291141986847
    2. '()' → logprob: -1.6178290843963623
    3. '())' → logprob: -4.117829322814941
    4. ' )' → logprob: -7.867829322814941
    5. ' ()' → logprob: -8.242829322814941
    6. '(' → logprob: -8.867829322814941
    7. '(self' → logprob: -9.992829322814941
    8. ' ())' → logprob: -9.992829322814941
    9. '   ' → logprob: -10.617829322814941
    10. '`()' → logprob: -10.992829322814941

Token 270: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.016412273049354553
    2. '(' → logprob: -4.266412258148193
    3. '()' → logprob: -6.516412258148193
    4. ' (' → logprob: -7.516412258148193
    5. 'self' → logprob: -9.266412734985352
    6. '(
' → logprob: -9.516412734985352
    7. ')' → logprob: -11.266412734985352
    8. ' ->' → logprob: -11.516412734985352
    9. ' self' → logprob: -12.016412734985352
    10. '():' → logprob: -12.141412734985352

Token 271: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.35924991965293884
    2. ' List' → logprob: -1.6092499494552612
    3. '[List' → logprob: -2.4842498302459717
    4. ' [' → logprob: -5.234250068664551
    5. ' list' → logprob: -5.734250068664551
    6. '[]' → logprob: -5.859250068664551
    7. '[int' → logprob: -5.984250068664551
    8. '[' → logprob: -6.359250068664551
    9. 'list' → logprob: -6.859250068664551
    10. ' return' → logprob: -7.234250068664551

Token 272: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -9.960946772480384e-05
    2. '[' → logprob: -10.000099182128906
    3. '<int' → logprob: -10.000099182128906
    4. '[Int' → logprob: -12.375099182128906
    5. '[List' → logprob: -13.375099182128906
    6. '[
' → logprob: -13.875099182128906
    7. '(int' → logprob: -14.375099182128906
    8. 'int' → logprob: -14.625099182128906
    9. ' [' → logprob: -15.125099182128906
    10. '<|end|>' → logprob: -15.750099182128906

Token 273: ']:
' (ID: 22152)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.05603814870119095
    2. ']:' → logprob: -3.5560381412506104
    3. '():
' → logprob: -4.0560383796691895
    4. '()' → logprob: -5.4310383796691895
    5. ':' → logprob: -6.5560383796691895
    6. '):' → logprob: -6.6810383796691895
    7. ']' → logprob: -7.1810383796691895
    8. ']:
' → logprob: -8.056037902832031
    9. '   ' → logprob: -8.806037902832031
    10. '():
' → logprob: -9.556037902832031

Token 274: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005786820314824581
    2. ' return' → logprob: -5.505786895751953
    3. 'return' → logprob: -6.505786895751953
    4. '[' → logprob: -9.255786895751953
    5. '   ' → logprob: -9.255786895751953
    6. '[]' → logprob: -11.380786895751953
    7. '	return' → logprob: -12.505786895751953
    8. '[
' → logprob: -13.130786895751953
    9. ' [' → logprob: -13.130786895751953
    10. '```' → logprob: -14.505786895751953

Token 275: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.027120204642415047
    2. '       ' → logprob: -3.6521201133728027
    3. '[' → logprob: -7.902120113372803
    4. ' return' → logprob: -8.027120590209961
    5. '   ' → logprob: -9.152120590209961
    6. '[
' → logprob: -11.777120590209961
    7. '#' (adapté à ' #') → logprob: -12.902120590209961
    8. '	return' → logprob: -13.527120590209961
    9. '[w' → logprob: -14.027120590209961
    10. '```' → logprob: -14.027120590209961

Token 276: ' Ed' (ID: 6117)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0007952123996801674
    2. ' return' → logprob: -7.250795364379883
    3. '   ' → logprob: -10.000795364379883
    4. '#' → logprob: -10.500795364379883
    5. '       ' → logprob: -11.625795364379883
    6. 'Return' → logprob: -13.625795364379883
    7. '	return' → logprob: -13.625795364379883
    8. 'edges' → logprob: -14.875795364379883
    9. '[' → logprob: -15.750795364379883
    10. 'w' → logprob: -16.250795364379883

Token 277: 'ges' (ID: 4431)
  Prédit: 'eturn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eturn' → logprob: -0.31459471583366394
    2. '       ' → logprob: -1.4395947456359863
    3. 'urn' → logprob: -4.064594745635986
    4. 'return' → logprob: -4.564594745635986
    5. 'turn' → logprob: -5.689594745635986
    6. '   ' → logprob: -6.814594745635986
    7. '[' → logprob: -7.939594745635986
    8. ' return' → logprob: -8.564594268798828
    9. '      ' → logprob: -9.439594268798828
    10. '     ' → logprob: -9.689594268798828

Token 278: ' lengths' (ID: 51957)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8012104630470276
    2. '=' → logprob: -1.4262104034423828
    3. 'return' → logprob: -2.051210403442383
    4. '       ' → logprob: -2.301210403442383
    5. ' return' → logprob: -2.676210403442383
    6. '   ' → logprob: -4.926210403442383
    7. '[' → logprob: -5.801210403442383
    8. ':' → logprob: -6.676210403442383
    9. ' [' → logprob: -7.301210403442383
    10. '=[' → logprob: -7.426210403442383

Token 279: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08793024718761444
    2. 'return' → logprob: -2.837930202484131
    3. ' return' → logprob: -3.962930202484131
    4. '[' → logprob: -6.087930202484131
    5. ' =' → logprob: -6.087930202484131
    6. '=' → logprob: -6.462930202484131
    7. ':' → logprob: -8.837930679321289
    8. ' [' → logprob: -9.212930679321289
    9. '[]' → logprob: -9.587930679321289
    10. '   ' → logprob: -10.087930679321289

Token 280: ' order' (ID: 2569)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.22058916091918945
    2. '[' → logprob: -1.7205891609191895
    3. ' [' → logprob: -5.2205891609191895
    4. 'self' → logprob: -5.4705891609191895
    5. 'the' → logprob: -5.8455891609191895
    6. 'order' → logprob: -5.8455891609191895
    7. '[top' → logprob: -6.5955891609191895
    8. '[int' → logprob: -7.5955891609191895
    9. ' order' → logprob: -7.7205891609191895
    10. ' the' → logprob: -7.9705891609191895

Token 281: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7359129786491394
    2. '[' → logprob: -1.1109130382537842
    3. ':' → logprob: -2.735913038253784
    4. 'return' → logprob: -3.110913038253784
    5. '[
' → logprob: -3.360913038253784
    6. '=' → logprob: -3.860913038253784
    7. ' [' → logprob: -4.235912799835205
    8. ' =' → logprob: -5.235912799835205
    9. ' return' → logprob: -5.610912799835205
    10. ',' → logprob: -6.860912799835205

Token 282: ' top' (ID: 2344)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[self' → logprob: -7.755678961984813e-05
    2. '[
' → logprob: -10.375077247619629
    3. 'self' → logprob: -10.750077247619629
    4. '[' → logprob: -10.875077247619629
    5. '[w' → logprob: -12.500077247619629
    6. ' [' → logprob: -13.375077247619629
    7. '   ' → logprob: -15.125077247619629
    8. '       ' → logprob: -16.250078201293945
    9. '[top' → logprob: -16.250078201293945
    10. ' self' → logprob: -17.125078201293945

Token 283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006588232354260981
    2. '[' → logprob: -7.750658988952637
    3. ' ,' → logprob: -8.500658988952637
    4. '(),' → logprob: -12.125658988952637
    5. '[],' → logprob: -12.500658988952637
    6. '   ' → logprob: -12.625658988952637
    7. ',left' → logprob: -13.000658988952637
    8. 'self' → logprob: -13.125658988952637
    9. ',
' → logprob: -13.250658988952637
    10. 'left' → logprob: -13.750658988952637

Token 284: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.09363265335559845
    2. ' right' → logprob: -3.093632698059082
    3. 'self' → logprob: -3.343632698059082
    4. 'bottom' → logprob: -5.218632698059082
    5. ' self' → logprob: -5.968632698059082
    6. ' bottom' → logprob: -7.468632698059082
    7. 'left' → logprob: -8.593632698059082
    8. '_right' → logprob: -12.218632698059082
    9. ' left' → logprob: -13.718632698059082
    10. 'Right' → logprob: -14.093632698059082

Token 285: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.47626737493556e-05
    2. ' ,' → logprob: -10.50003433227539
    3. ',
' → logprob: -12.12503433227539
    4. '   ' → logprob: -13.50003433227539
    5. ',b' → logprob: -15.87503433227539
    6. 'bottom' → logprob: -17.25003433227539
    7. ',self' → logprob: -17.25003433227539
    8. '=' → logprob: -17.50003433227539
    9. ',\
' → logprob: -17.62503433227539
    10. '<|end|>' → logprob: -17.87503433227539

Token 286: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.03814419358968735
    2. ' bottom' → logprob: -3.288144111633301
    3. 'self' → logprob: -9.7881441116333
    4. 'down' → logprob: -10.6631441116333
    5. ' self' → logprob: -11.0381441116333
    6. 'bot' → logprob: -12.9131441116333
    7. '_bottom' → logprob: -13.5381441116333
    8. '   ' → logprob: -13.7881441116333
    9. 'left' → logprob: -14.0381441116333
    10. ' ' → logprob: -14.2881441116333

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003086486831307411
    2. ' ,' → logprob: -8.125308990478516
    3. ',
' → logprob: -11.750308990478516
    4. ',self' → logprob: -13.125308990478516
    5. '       ' → logprob: -13.500308990478516
    6. '[' → logprob: -14.750308990478516
    7. 'self' → logprob: -15.125308990478516
    8. '   ' → logprob: -15.250308990478516
    9. ' self' → logprob: -15.625308990478516
    10. '<|end|>' → logprob: -16.000308990478516

Token 288: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.388274222612381
    2. ' left' → logprob: -1.1382741928100586
    3. 'self' → logprob: -6.888274192810059
    4. ' self' → logprob: -7.888274192810059
    5. '_left' → logprob: -13.138274192810059
    6. '   ' → logprob: -13.138274192810059
    7. '	left' → logprob: -13.513274192810059
    8. '       ' → logprob: -14.013274192810059
    9. ' ' → logprob: -14.138274192810059
    10. 'bottom' → logprob: -15.013274192810059

Token 289: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5897966027259827
    2. 'return' → logprob: -1.839796543121338
    3. '       ' → logprob: -2.089796543121338
    4. '
' → logprob: -2.464796543121338
    5. ':' → logprob: -4.089796543121338
    6. '[' → logprob: -4.214796543121338
    7. ':
' → logprob: -4.339796543121338
    8. ' return' → logprob: -4.464796543121338
    9. '[
' → logprob: -4.589796543121338
    10. ',' → logprob: -5.214796543121338

Token 290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14805056154727936
    2. '   ' → logprob: -2.398050546646118
    3. 'return' → logprob: -4.273050785064697
    4. ':
' → logprob: -4.398050785064697
    5. '
' → logprob: -5.023050785064697
    6. ':' → logprob: -5.273050785064697
    7. '[
' → logprob: -5.648050785064697
    8. '[' → logprob: -5.773050785064697
    9. ' return' → logprob: -6.898050785064697
    10. '[]' → logprob: -8.023050308227539

Token 291: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00151831132825464
    2. ' return' → logprob: -6.501518249511719
    3. '   ' → logprob: -11.251518249511719
    4. '[' → logprob: -13.251518249511719
    5. '       ' → logprob: -14.126518249511719
    6. '[self' → logprob: -15.251518249511719
    7. '[w' → logprob: -16.12651824951172
    8. '	return' → logprob: -16.12651824951172
    9. '[
' → logprob: -17.12651824951172
    10. '[top' → logprob: -17.75151824951172

Token 292: ' [' (ID: 723)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.00013691288768313825
    2. ' [' → logprob: -9.000137329101562
    3. '[' → logprob: -11.250137329101562
    4. '[int' → logprob: -15.375137329101562
    5. '[
' → logprob: -16.375137329101562
    6. '   ' → logprob: -16.625137329101562
    7. '[this' → logprob: -18.000137329101562
    8. '[top' → logprob: -18.750137329101562
    9. '[len' → logprob: -19.750137329101562
    10. '[List' → logprob: -20.125137329101562

Token 293: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.061054359131958e-06
    2. ' self' → logprob: -11.750007629394531
    3. '       ' → logprob: -17.12500762939453
    4. '   ' → logprob: -17.37500762939453
    5. '(self' → logprob: -17.75000762939453
    6. '	self' → logprob: -18.25000762939453
    7. '[self' → logprob: -18.50000762939453
    8. '           ' → logprob: -19.50000762939453
    9. '0' → logprob: -20.25000762939453
    10. '$self' → logprob: -21.00000762939453

Token 294: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.981667537620524e-06
    2. ']._' → logprob: -14.625001907348633
    3. '_w' → logprob: -14.750001907348633
    4. '   ' → logprob: -14.750001907348633
    5. '_' → logprob: -15.375001907348633
    6. ' .' → logprob: -16.000001907348633
    7. '.' → logprob: -16.000001907348633
    8. '.w' → logprob: -16.625001907348633
    9. ' ' → logprob: -16.750001907348633
    10. ')._' → logprob: -17.000001907348633

Token 295: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -3.7697225252486533e-06
    2. ' w' → logprob: -13.250003814697266
    3. 'd' → logprob: -13.875003814697266
    4. '_w' → logprob: -14.000003814697266
    5. '	w' → logprob: -15.625003814697266
    6. 'width' → logprob: -17.875003814697266
    7. ''w' → logprob: -18.250003814697266
    8. '-w' → logprob: -18.375003814697266
    9. 'W' → logprob: -19.000003814697266
    10. '   ' → logprob: -19.250003814697266

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000476786372018978
    2. ' ,' → logprob: -7.750476837158203
    3. ',
' → logprob: -10.000476837158203
    4. ',self' → logprob: -15.000476837158203
    5. ',

' → logprob: -15.500476837158203
    6. ' ,
' → logprob: -16.625476837158203
    7. '   ' → logprob: -16.875476837158203
    8. '<|end|>' → logprob: -17.000476837158203
    9. 'self' → logprob: -17.500476837158203
    10. '‌,' → logprob: -18.375476837158203

Token 297: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007113590254448354
    2. ' self' → logprob: -7.250711441040039
    3. '1' → logprob: -13.625711441040039
    4. '	self' → logprob: -17.25071144104004
    5. '(self' → logprob: -17.25071144104004
    6. ' ' → logprob: -17.37571144104004
    7. '[self' → logprob: -17.50071144104004
    8. '
' → logprob: -17.62571144104004
    9. '   ' → logprob: -18.00071144104004
    10. '=self' → logprob: -18.12571144104004

Token 298: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -8.180258191714529e-06
    2. '_d' → logprob: -12.500008583068848
    3. '.' → logprob: -13.375008583068848
    4. '_w' → logprob: -13.500008583068848
    5. ' .' → logprob: -14.375008583068848
    6. '_' → logprob: -14.750008583068848
    7. ' ' → logprob: -15.625008583068848
    8. '.d' → logprob: -16.25000762939453
    9. '   ' → logprob: -16.37500762939453
    10. '.w' → logprob: -17.25000762939453

Token 299: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -8.537868779967539e-06
    2. '_d' → logprob: -12.125008583068848
    3. '	d' → logprob: -13.875008583068848
    4. ' d' → logprob: -13.875008583068848
    5. 'depth' → logprob: -14.625008583068848
    6. '.d' → logprob: -15.250008583068848
    7. 'w' → logprob: -16.25000762939453
    8. 'д' → logprob: -16.75000762939453
    9. ')d' → logprob: -16.75000762939453
    10. '
' → logprob: -17.25000762939453

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004907185211777687
    2. ' ,' → logprob: -7.625490665435791
    3. ',
' → logprob: -13.12549114227295
    4. '   ' → logprob: -14.62549114227295
    5. ',self' → logprob: -15.37549114227295
    6. '       ' → logprob: -17.000490188598633
    7. 'self' → logprob: -17.625490188598633
    8. ',

' → logprob: -18.000490188598633
    9. ']' → logprob: -18.000490188598633
    10. '‌,' → logprob: -18.500490188598633

Token 301: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004324573092162609
    2. ' self' → logprob: -7.75043249130249
    3. '(self' → logprob: -14.125432014465332
    4. '[self' → logprob: -14.500432014465332
    5. '	self' → logprob: -15.750432014465332
    6. '       ' → logprob: -15.875432014465332
    7. '=self' → logprob: -16.62543296813965
    8. '   ' → logprob: -17.37543296813965
    9. 'w' → logprob: -17.50043296813965
    10. 's' → logprob: -17.87543296813965

Token 302: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -3.35706390615087e-05
    2. '_w' → logprob: -10.500033378601074
    3. '.' → logprob: -12.750033378601074
    4. '_' → logprob: -13.000033378601074
    5. '.w' → logprob: -14.625033378601074
    6. ' .' → logprob: -15.750033378601074
    7. ' _' → logprob: -17.37503433227539
    8. ']._' → logprob: -17.37503433227539
    9. ' ' → logprob: -17.75003433227539
    10. '_.' → logprob: -18.12503433227539

Token 303: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -5.080963092041202e-06
    2. '_w' → logprob: -12.500004768371582
    3. ' w' → logprob: -14.375004768371582
    4. '	w' → logprob: -14.500004768371582
    5. 'd' → logprob: -15.750004768371582
    6. ''w' → logprob: -17.1250057220459
    7. '-w' → logprob: -17.7500057220459
    8. '.w' → logprob: -19.3750057220459
    9. 'width' → logprob: -19.5000057220459
    10. '_' → logprob: -19.5000057220459

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014656837447546422
    2. ' ,' → logprob: -8.875146865844727
    3. ',
' → logprob: -12.000146865844727
    4. ',self' → logprob: -15.375146865844727
    5. ',d' → logprob: -15.875146865844727
    6. '   ' → logprob: -16.000146865844727
    7. 'self' → logprob: -17.250146865844727
    8. 'd' → logprob: -17.375146865844727
    9. ',

' → logprob: -17.375146865844727
    10. '‌,' → logprob: -17.625146865844727

Token 305: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07888989895582199
    2. ' self' → logprob: -2.578889846801758
    3. '	self' → logprob: -17.328889846801758
    4. ' ' → logprob: -17.703889846801758
    5. '   ' → logprob: -18.578889846801758
    6. '(self' → logprob: -18.703889846801758
    7. '       ' → logprob: -18.703889846801758
    8. '_self' → logprob: -19.078889846801758
    9. '[self' → logprob: -19.078889846801758
    10. '
' → logprob: -19.203889846801758

Token 306: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -3.47626737493556e-05
    2. '_d' → logprob: -10.37503433227539
    3. '.' → logprob: -12.87503433227539
    4. '_' → logprob: -14.37503433227539
    5. ' .' → logprob: -15.62503433227539
    6. ' ' → logprob: -16.25003433227539
    7. '   ' → logprob: -16.50003433227539
    8. '.d' → logprob: -17.25003433227539
    9. '_.' → logprob: -17.75003433227539
    10. ' _' → logprob: -17.87503433227539

Token 307: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0001410850090906024
    2. '_d' → logprob: -8.875141143798828
    3. 'д' → logprob: -14.625141143798828
    4. '	d' → logprob: -14.750141143798828
    5. ' d' → logprob: -15.250141143798828
    6. '_' → logprob: -16.500141143798828
    7. 's' → logprob: -18.125141143798828
    8. '.d' → logprob: -18.125141143798828
    9. ')d' → logprob: -18.250141143798828
    10. 'د' → logprob: -18.500141143798828

Token 308: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -4.3822154111694545e-05
    2. ' ]' → logprob: -10.125043869018555
    3. '   ' → logprob: -13.250043869018555
    4. ']
' → logprob: -13.375043869018555
    5. ')' → logprob: -15.250043869018555
    6. '<|end|>' → logprob: -15.875043869018555
    7. '}' → logprob: -17.125043869018555
    8. '']' → logprob: -17.250043869018555
    9. '       ' → logprob: -17.750043869018555
    10. ' ' → logprob: -18.000043869018555

Token 309: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.032457541674375534
    2. '   ' → logprob: -4.15745735168457
    3. ' def' → logprob: -4.15745735168457
    4. '<|end|>' → logprob: -7.65745735168457
    5. '	def' → logprob: -9.90745735168457
    6. '
' → logprob: -10.15745735168457
    7. ')' → logprob: -10.53245735168457
    8. '```' → logprob: -10.78245735168457
    9. '    
' → logprob: -11.90745735168457
    10. ' ' → logprob: -12.40745735168457

Token 310: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.941850526549388e-06
    2. ' def' → logprob: -11.750007629394531
    3. '   ' → logprob: -19.00000762939453
    4. '
' → logprob: -21.75000762939453
    5. '	def' → logprob: -21.75000762939453
    6. 'de' → logprob: -22.00000762939453
    7. '    
' → logprob: -23.12500762939453
    8. '```' → logprob: -23.50000762939453
    9. 'from' → logprob: -23.62500762939453
    10. ' ' → logprob: -23.62500762939453

Token 311: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.0160658098757267
    2. ' cut' → logprob: -4.14106559753418
    3. 'def' → logprob: -10.39106559753418
    4. ' def' → logprob: -14.76606559753418
    5. '_cut' → logprob: -15.01606559753418
    6. '.cut' → logprob: -17.14106559753418
    7. 'cuts' → logprob: -17.51606559753418
    8. 'Cut' → logprob: -17.51606559753418
    9. '-cut' → logprob: -18.14106559753418
    10. 'copy' → logprob: -18.26606559753418

Token 312: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009775686077773571
    2. '(' → logprob: -4.634775638580322
    3. '(
' → logprob: -11.63477611541748
    4. ' (' → logprob: -12.00977611541748
    5. 'self' → logprob: -12.75977611541748
    6. '(s' → logprob: -13.88477611541748
    7. '_(' → logprob: -15.00977611541748
    8. '_' → logprob: -15.50977611541748
    9. ' self' → logprob: -16.634775161743164
    10. '   ' → logprob: -16.759775161743164

Token 313: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.015545421279966831
    2. 'self' → logprob: -4.64054536819458
    3. ')' → logprob: -6.01554536819458
    4. '(' → logprob: -6.39054536819458
    5. ',' → logprob: -6.76554536819458
    6. '   ' → logprob: -9.265545845031738
    7. '_start' → logprob: -9.390545845031738
    8. ' self' → logprob: -9.515545845031738
    9. '_' → logprob: -9.640545845031738
    10. '       ' → logprob: -10.515545845031738

Token 314: ' cut' (ID: 6092)
  Prédit: ' cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cut' → logprob: -0.21999333798885345
    2. 'cut' → logprob: -1.7199933528900146
    3. ' self' → logprob: -4.3449931144714355
    4. 'self' → logprob: -5.2199931144714355
    5. '       ' → logprob: -11.719993591308594
    6. ' ' → logprob: -11.969993591308594
    7. '   ' → logprob: -12.094993591308594
    8. ' cutoff' → logprob: -12.469993591308594
    9. '_cut' → logprob: -13.907493591308594
    10. '=cut' → logprob: -14.469993591308594

Token 315: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.000632139970548451
    2. '_' → logprob: -7.375632286071777
    3. ' _' → logprob: -13.000632286071777
    4. ')_' → logprob: -14.375632286071777
    5. ')' → logprob: -14.625632286071777
    6. '_START' → logprob: -14.750632286071777
    7. '_s' → logprob: -15.125632286071777
    8. '_
' → logprob: -15.250632286071777
    9. 'start' → logprob: -15.500632286071777
    10. '_)' → logprob: -15.875632286071777

Token 316: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010795372509164736
    2. ',' → logprob: -9.750107765197754
    3. ' :' → logprob: -10.125107765197754
    4. ':int' → logprob: -12.000107765197754
    5. ')' → logprob: -13.250107765197754
    6. '):' → logprob: -13.875107765197754
    7. ' ,' → logprob: -14.875107765197754
    8. '   ' → logprob: -16.25010871887207
    9. ' ):' → logprob: -16.87510871887207
    10. 'self' → logprob: -17.00010871887207

Token 317: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.617603600025177
    2. ' int' → logprob: -1.2426035404205322
    3. ')' → logprob: -2.9926035404205322
    4. '0' → logprob: -3.2426035404205322
    5. ':int' → logprob: -3.6176035404205322
    6. ':' → logprob: -3.7426035404205322
    7. ' w' → logprob: -4.117603778839111
    8. 'w' → logprob: -5.242603778839111
    9. ' ' → logprob: -5.742603778839111
    10. ' )' → logprob: -5.742603778839111

Token 318: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014013137842994183
    2. ' )' → logprob: -9.375140190124512
    3. ':' → logprob: -10.375140190124512
    4. '):' → logprob: -11.000140190124512
    5. '):
' → logprob: -12.375140190124512
    6. '   ' → logprob: -12.875140190124512
    7. '       ' → logprob: -15.500140190124512
    8. ',' → logprob: -15.750140190124512
    9. '`)' → logprob: -16.375139236450195
    10. ')->' → logprob: -16.625139236450195

Token 319: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008870415040291846
    2. ':
' → logprob: -7.250886917114258
    3. ')' → logprob: -9.500886917114258
    4. ' ->' → logprob: -10.125886917114258
    5. '       ' → logprob: -10.500886917114258
    6. '   ' → logprob: -10.875886917114258
    7. '->' → logprob: -12.000886917114258
    8. '):' → logprob: -12.250886917114258
    9. ' :' → logprob: -13.125886917114258
    10. '):
' → logprob: -13.500886917114258

Token 320: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.9901551008224487
    2. ''' → logprob: -1.1151551008224487
    3. ' '' → logprob: -1.8651551008224487
    4. ' Tuple' → logprob: -2.1151552200317383
    5. ''T' → logprob: -3.8651552200317383
    6. ''t' → logprob: -6.365155220031738
    7. ' ' → logprob: -7.240155220031738
    8. 'Piece' → logprob: -8.115155220031738
    9. 'Rect' → logprob: -8.365155220031738
    10. ''s' → logprob: -8.365155220031738

Token 321: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.05491161718964577
    2. '[' → logprob: -2.9299116134643555
    3. '[['' → logprob: -11.179911613464355
    4. '('' → logprob: -12.179911613464355
    5. '[
' → logprob: -13.054911613464355
    6. ' ['' → logprob: -13.179911613464355
    7. '[`' → logprob: -13.179911613464355
    8. '["' → logprob: -13.554911613464355
    9. '[int' → logprob: -13.929911613464355
    10. '[(' → logprob: -14.929911613464355

Token 322: 'Rect' (ID: 7872)
  Prédit: 'Rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rect' → logprob: -0.04304269701242447
    2. 'Piece' → logprob: -3.1680426597595215
    3. ' Rect' → logprob: -10.79304313659668
    4. '	Rect' → logprob: -11.79304313659668
    5. 'Rectangle' → logprob: -12.41804313659668
    6. 'Pie' → logprob: -13.29304313659668
    7. ' Piece' → logprob: -13.54304313659668
    8. '(Rect' → logprob: -13.91804313659668
    9. 'rect' → logprob: -14.04304313659668
    10. '_Rect' → logprob: -14.16804313659668

Token 323: 'angular' (ID: 8802)
  Prédit: 'angular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angular' → logprob: -9.088346359931165e-07
    2. 'ang' → logprob: -15.125000953674316
    3. 'angu' → logprob: -16.0
    4. 'Angular' → logprob: -16.375
    5. 'a' → logprob: -16.5
    6. 'Rect' → logprob: -16.625
    7. 'ular' → logprob: -17.125
    8. 'angle' → logprob: -17.375
    9. 'angled' → logprob: -18.0
    10. 'angulo' → logprob: -18.125

Token 324: 'Piece' (ID: 36823)
  Prédit: 'Piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Piece' → logprob: -1.8624639324116288e-06
    2. ' Piece' → logprob: -14.125001907348633
    3. 'Pie' → logprob: -15.125001907348633
    4. '_piece' → logprob: -15.875001907348633
    5. 'piece' → logprob: -16.125001907348633
    6. ''' → logprob: -16.375001907348633
    7. '```' → logprob: -16.375001907348633
    8. 'iece' → logprob: -16.375001907348633
    9. '[' → logprob: -16.500001907348633
    10. 'Pieces' → logprob: -17.375001907348633

Token 325: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07889242470264435
    2. '',' → logprob: -2.578892469406128
    3. ' ,' → logprob: -13.828892707824707
    4. ',
' → logprob: -15.078892707824707
    5. ',int' → logprob: -15.078892707824707
    6. ' ',' → logprob: -15.203892707824707
    7. '`,' → logprob: -15.453892707824707
    8. '[' → logprob: -15.828892707824707
    9. '",' → logprob: -16.20389175415039
    10. 'int' → logprob: -16.32889175415039

Token 326: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18013885617256165
    2. ' '' → logprob: -1.8051388263702393
    3. 'Rect' → logprob: -8.18013858795166
    4. ''Re' → logprob: -10.43013858795166
    5. ' Rect' → logprob: -11.18013858795166
    6. ' ' → logprob: -11.30513858795166
    7. ''re' → logprob: -11.93013858795166
    8. '   ' → logprob: -12.05513858795166
    9. '_Rect' → logprob: -12.30513858795166
    10. '(Rect' → logprob: -12.43013858795166

Token 327: 'Rect' (ID: 7872)
  Prédit: 'Rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rect' → logprob: -1.771655115589965e-05
    2. '	Rect' → logprob: -12.250018119812012
    3. '_Rect' → logprob: -12.750018119812012
    4. ' Rect' → logprob: -12.750018119812012
    5. 'Piece' → logprob: -13.125018119812012
    6. 'rect' → logprob: -13.500018119812012
    7. '.Rect' → logprob: -13.750018119812012
    8. 'Rectangle' → logprob: -14.125018119812012
    9. '_rect' → logprob: -14.750018119812012
    10. '
' → logprob: -15.000018119812012

Token 328: 'angular' (ID: 8802)
  Prédit: 'angular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angular' → logprob: -5.512236498361744e-07
    2. 'ang' → logprob: -14.750000953674316
    3. 'Angular' → logprob: -15.875000953674316
    4. 'angle' → logprob: -17.875
    5. 'angu' → logprob: -18.25
    6. 'angled' → logprob: -18.5
    7. 'angulo' → logprob: -19.0
    8. 'angler' → logprob: -19.25
    9. ' angular' → logprob: -19.375
    10. 'ular' → logprob: -19.75

Token 329: 'Piece' (ID: 36823)
  Prédit: 'Piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Piece' → logprob: -2.15310683415737e-05
    2. ' Piece' → logprob: -11.250021934509277
    3. '_piece' → logprob: -12.500021934509277
    4. 'Rect' → logprob: -13.375021934509277
    5. 'iece' → logprob: -14.500021934509277
    6. 'piece' → logprob: -14.500021934509277
    7. 'Cut' → logprob: -14.875021934509277
    8. ' piece' → logprob: -15.000021934509277
    9. 'Pie' → logprob: -15.375021934509277
    10. '```' → logprob: -15.562521934509277

Token 330: '']:
' (ID: 44766)
  Prédit: '']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']:
' → logprob: -0.056436289101839066
    2. '']:' → logprob: -3.55643630027771
    3. ']:
' → logprob: -4.181436061859131
    4. ']:' → logprob: -5.181436061859131
    5. '']' → logprob: -5.306436061859131
    6. ']' → logprob: -7.806436061859131
    7. '):
' → logprob: -10.306436538696289
    8. '"]:
' → logprob: -11.931436538696289
    9. ''):
' → logprob: -11.931436538696289
    10. ':' → logprob: -12.056436538696289

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010824259370565414
    2. ' if' → logprob: -4.635824203491211
    3. 'if' → logprob: -6.885824203491211
    4. '
' → logprob: -11.135824203491211
    5. '   ' → logprob: -11.135824203491211
    6. '```' → logprob: -12.135824203491211
    7. '        
' → logprob: -13.385824203491211
    8. ',' → logprob: -13.510824203491211
    9. '1' → logprob: -13.885824203491211
    10. '0' → logprob: -14.010824203491211

Token 332: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03627490997314453
    2. ' if' → logprob: -3.5362749099731445
    3. '       ' → logprob: -5.0362749099731445
    4. '
' → logprob: -13.036274909973145
    5. '#' (adapté à ' #') → logprob: -13.161274909973145
    6. 'w' → logprob: -14.786274909973145
    7. 'assert' → logprob: -15.286274909973145
    8. 'If' → logprob: -15.661274909973145
    9. '0' → logprob: -16.161273956298828
    10. '1' → logprob: -16.286273956298828

Token 333: ' Sim' (ID: 7973)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.9888433093437925e-05
    2. ' if' → logprob: -10.250040054321289
    3. '       ' → logprob: -13.500040054321289
    4. '#' → logprob: -13.750040054321289
    5. 'cut' → logprob: -14.375040054321289
    6. 'If' → logprob: -14.875040054321289
    7. '"""' → logprob: -15.125040054321289
    8. 'assert' → logprob: -15.250040054321289
    9. '   ' → logprob: -15.375040054321289
    10. 'Cut' → logprob: -16.75004005432129

Token 334: 'ulates' (ID: 52494)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17945943772792816
    2. 'ple' → logprob: -1.9294594526290894
    3. 'ply' → logprob: -4.679459571838379
    4. 'pl' → logprob: -4.929459571838379
    5. ' if' → logprob: -7.179459571838379
    6. 'ulate' → logprob: -7.429459571838379
    7. '       ' → logprob: -7.554459571838379
    8. '   ' → logprob: -9.304459571838379
    9. 'plement' → logprob: -9.304459571838379
    10. '#' → logprob: -9.554459571838379

Token 335: ' cutting' (ID: 19412)
  Prédit: ' cutting'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cutting' → logprob: -0.4227598011493683
    2. 'cut' → logprob: -1.297759771347046
    3. 'a' → logprob: -3.672759771347046
    4. ' a' → logprob: -4.172760009765625
    5. 'if' → logprob: -4.297760009765625
    6. 'horizontal' → logprob: -4.797760009765625
    7. ' if' → logprob: -5.547760009765625
    8. ' horizontal' → logprob: -5.672760009765625
    9. ' cut' → logprob: -7.422760009765625
    10. 'vertical' → logprob: -8.547760009765625

Token 336: ' this' (ID: 495)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4665723741054535
    2. 'self' → logprob: -1.9665724039077759
    3. ' if' → logprob: -2.4665722846984863
    4. ' self' → logprob: -2.9665722846984863
    5. ' along' → logprob: -3.2165722846984863
    6. ' a' → logprob: -3.8415722846984863
    7. 'if' → logprob: -4.466572284698486
    8. ' horizontally' → logprob: -4.966572284698486
    9. 'the' → logprob: -5.091572284698486
    10. '(self' → logprob: -5.966572284698486

Token 337: ' piece' (ID: 9047)
  Prédit: ' piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' piece' → logprob: -0.6147335767745972
    2. 'piece' → logprob: -0.8647335767745972
    3. ' rectangle' → logprob: -4.489733695983887
    4. 'rectangle' → logprob: -4.739733695983887
    5. ' rectangular' → logprob: -5.239733695983887
    6. ' at' → logprob: -5.614733695983887
    7. 'rect' → logprob: -5.864733695983887
    8. ' into' → logprob: -6.114733695983887
    9. ' along' → logprob: -7.239733695983887
    10. 'at' → logprob: -7.364733695983887

Token 338: ' starting' (ID: 8601)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.27722248435020447
    2. 'if' → logprob: -1.5272225141525269
    3. ' at' → logprob: -3.9022223949432373
    4. ' into' → logprob: -6.277222633361816
    5. ' along' → logprob: -6.777222633361816
    6. 'at' → logprob: -7.777222633361816
    7. '       ' → logprob: -7.902222633361816
    8. ' in' → logprob: -8.277222633361816
    9. 'from' → logprob: -8.777222633361816
    10. ' on' → logprob: -8.902222633361816

Token 339: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.7622564435005188
    2. 'from' → logprob: -1.137256383895874
    3. 'at' → logprob: -1.637256383895874
    4. ' from' → logprob: -4.012256622314453
    5. 'cut' → logprob: -10.637256622314453
    6. '_at' → logprob: -11.762256622314453
    7. 'along' → logprob: -12.012256622314453
    8. '=cut' → logprob: -12.137256622314453
    9. ' along' → logprob: -12.387256622314453
    10. ' ' → logprob: -12.512256622314453

Token 340: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.25199875235557556
    2. ' cut' → logprob: -1.501998782157898
    3. 'the' → logprob: -10.251998901367188
    4. ' the' → logprob: -11.001998901367188
    5. '=cut' → logprob: -11.751998901367188
    6. ' a' → logprob: -13.001998901367188
    7. 'a' → logprob: -13.126998901367188
    8. 'cutaneous' → logprob: -13.251998901367188
    9. '_cut' → logprob: -14.126998901367188
    10. '0' → logprob: -14.251998901367188

Token 341: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.002361021237447858
    2. '_' → logprob: -6.127360820770264
    3. ' _' → logprob: -9.627361297607422
    4. '_cut' → logprob: -10.377361297607422
    5. 'start' → logprob: -10.877361297607422
    6. '_position' → logprob: -11.377361297607422
    7. '_point' → logprob: -11.377361297607422
    8. 'cut' → logprob: -12.002361297607422
    9. '       ' → logprob: -12.502361297607422
    10. 'point' → logprob: -12.752361297607422

Token 342: ' distance' (ID: 9324)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7226341366767883
    2. ':' → logprob: -1.3476340770721436
    3. ':
' → logprob: -2.3476340770721436
    4. '       ' → logprob: -2.3476340770721436
    5. ' and' → logprob: -4.222634315490723
    6. ' on' → logprob: -4.597634315490723
    7. '
' → logprob: -4.597634315490723
    8. ' in' → logprob: -4.847634315490723
    9. ',' → logprob: -5.097634315490723
    10. 'if' → logprob: -5.347634315490723

Token 343: ' clockwise' (ID: 141888)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3540678918361664
    2. ' from' → logprob: -1.2290679216384888
    3. ' if' → logprob: -6.354067802429199
    4. '       ' → logprob: -6.729067802429199
    5. 'if' → logprob: -6.979067802429199
    6. ',' → logprob: -6.979067802429199
    7. ' along' → logprob: -7.979067802429199
    8. ':' → logprob: -9.3540678024292
    9. '   ' → logprob: -9.8540678024292
    10. 'along' → logprob: -10.1040678024292

Token 344: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.19459640979766846
    2. ' from' → logprob: -1.8195964097976685
    3. ',' → logprob: -5.444596290588379
    4. ' along' → logprob: -5.694596290588379
    5. '       ' → logprob: -5.819596290588379
    6. ' around' → logprob: -6.319596290588379
    7. 'around' → logprob: -6.944596290588379
    8. 'along' → logprob: -7.694596290588379
    9. '   ' → logprob: -7.819596290588379
    10. '.' → logprob: -9.069596290588379

Token 345: ' NW' (ID: 58124)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4417709708213806
    2. 'the' → logprob: -1.4417710304260254
    3. 'top' → logprob: -2.1917710304260254
    4. 'self' → logprob: -5.941771030426025
    5. '12' → logprob: -5.941771030426025
    6. ' the' → logprob: -6.316771030426025
    7. '(' → logprob: -7.316771030426025
    8. ' ' → logprob: -7.816771030426025
    9. 'left' → logprob: -8.566770553588867
    10. ' top' → logprob: -8.691770553588867

Token 346: ' corner' (ID: 14194)
  Prédit: ' corner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' corner' → logprob: -0.47794586420059204
    2. 'corner' → logprob: -0.977945864200592
    3. '_corner' → logprob: -6.477945804595947
    4. ' edge' → logprob: -7.852945804595947
    5. ' point' → logprob: -7.852945804595947
    6. ')' → logprob: -8.602946281433105
    7. 'point' → logprob: -8.602946281433105
    8. 'edge' → logprob: -8.727946281433105
    9. '#' → logprob: -8.852946281433105
    10. ' (' → logprob: -9.602946281433105

Token 347: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009165062569081783
    2. ':' → logprob: -5.509165287017822
    3. ',' → logprob: -6.509165287017822
    4. ' if' → logprob: -6.634165287017822
    5. '
' → logprob: -7.134165287017822
    6. ':
' → logprob: -7.634165287017822
    7. '        
' → logprob: -8.509164810180664
    8. ' and' → logprob: -8.634164810180664
    9. '.' → logprob: -9.509164810180664
    10. ' in' → logprob: -9.759164810180664

Token 348: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1410636156797409
    2. ' if' → logprob: -2.266063690185547
    3. 'if' → logprob: -3.641063690185547
    4. ':' → logprob: -7.766063690185547
    5. ',' → logprob: -8.016063690185547
    6. '        
' → logprob: -8.391063690185547
    7. '#' → logprob: -8.516063690185547
    8. 'w' → logprob: -9.266063690185547
    9. '
' → logprob: -10.016063690185547
    10. '.' → logprob: -10.141063690185547

Token 349: ' per' (ID: 777)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2180749624967575
    2. 'total' → logprob: -2.3430750370025635
    3. 'cut' → logprob: -2.5930750370025635
    4. 'per' (adapté à ' per') → logprob: -4.343074798583984
    5. '       ' → logprob: -5.593074798583984
    6. 'length' → logprob: -5.843074798583984
    7. 'w' → logprob: -6.343074798583984
    8. 'edges' → logprob: -6.843074798583984
    9. 'c' → logprob: -7.468074798583984
    10. ' perimeter' → logprob: -7.593074798583984

Token 350: 'im' (ID: 321)
  Prédit: 'imeter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imeter' → logprob: -0.0031476542353630066
    2. 'im' → logprob: -6.003147602081299
    3. 'i' → logprob: -7.753147602081299
    4. 'ime' → logprob: -8.878148078918457
    5. 'imiter' → logprob: -9.503148078918457
    6. 'imet' → logprob: -10.753148078918457
    7. 'ip' → logprob: -13.753148078918457
    8. 'iphery' → logprob: -14.128148078918457
    9. 'imeters' → logprob: -14.253148078918457
    10. 'imer' → logprob: -14.378148078918457

Token 351: ' =' (ID: 314)
  Prédit: 'eter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eter' → logprob: -0.00015205175441224128
    2. '=' → logprob: -9.500151634216309
    3. ' =' → logprob: -9.875151634216309
    4. 'etter' → logprob: -11.250151634216309
    5. 'eters' → logprob: -12.625151634216309
    6. '   ' → logprob: -13.125151634216309
    7. 'et' → logprob: -13.375151634216309
    8. 'ter' → logprob: -13.750151634216309
    9. 'iter' → logprob: -14.000151634216309
    10. '```' → logprob: -14.250151634216309

Token 352: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00287619954906404
    2. ' self' → logprob: -6.002876281738281
    3. '2' → logprob: -7.877876281738281
    4. '(self' → logprob: -11.627876281738281
    5. '       ' → logprob: -11.627876281738281
    6. ' ' → logprob: -13.752876281738281
    7. '   ' → logprob: -13.877876281738281
    8. '4' → logprob: -14.377876281738281
    9. '           ' → logprob: -15.377876281738281
    10. '
' → logprob: -16.00287628173828

Token 353: '.per' (ID: 18361)
  Prédit: '.per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.per' → logprob: -0.0036181241739541292
    2. 'per' → logprob: -6.003618240356445
    3. '._' → logprob: -7.003618240356445
    4. ' .' → logprob: -9.253618240356445
    5. '.' → logprob: -9.878618240356445
    6. '_.' → logprob: -10.628618240356445
    7. '.width' → logprob: -10.753618240356445
    8. '().' → logprob: -11.503618240356445
    9. '_per' → logprob: -11.503618240356445
    10. '   ' → logprob: -12.253618240356445

Token 354: 'imeter' (ID: 35068)
  Prédit: 'imeter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imeter' → logprob: -1.0087516784551553e-05
    2. 'im' → logprob: -11.75001049041748
    3. 'imiter' → logprob: -13.87501049041748
    4. 'imet' → logprob: -14.87501049041748
    5. 'eter' → logprob: -15.25001049041748
    6. '```' → logprob: -15.75001049041748
    7. 'ieter' → logprob: -15.87501049041748
    8. 'i' → logprob: -16.000009536743164
    9. 'iphery' → logprob: -17.000009536743164
    10. '()' → logprob: -17.250009536743164

Token 355: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6507374048233032
    2. '       ' → logprob: -1.1507374048233032
    3. '()
' → logprob: -1.9007374048233032
    4. '
' → logprob: -4.525737285614014
    5. ')' → logprob: -7.400737285614014
    6. '        
' → logprob: -7.650737285614014
    7. '()
' → logprob: -9.275737762451172
    8. ')
' → logprob: -9.400737762451172
    9. '   ' → logprob: -9.400737762451172
    10. ',' → logprob: -9.775737762451172

Token 356: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4223672151565552
    2. '       ' → logprob: -1.4223672151565552
    3. 'if' → logprob: -2.2973670959472656
    4. '
' → logprob: -6.172367095947266
    5. '        
' → logprob: -7.797367095947266
    6. ' cut' → logprob: -8.797367095947266
    7. ',' → logprob: -10.672367095947266
    8. ' 
' → logprob: -10.922367095947266
    9. '\n' → logprob: -11.047367095947266
    10. '\' → logprob: -11.172367095947266

Token 357: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1604042649269104
    2. 'cut' → logprob: -1.9104042053222656
    3. ' if' → logprob: -9.160404205322266
    4. '       ' → logprob: -9.910404205322266
    5. ' cut' → logprob: -11.035404205322266
    6. '        
' → logprob: -12.660404205322266
    7. 'c' → logprob: -13.285404205322266
    8. '#' → logprob: -13.535404205322266
    9. '
' → logprob: -13.785404205322266
    10. '```' → logprob: -14.285404205322266

Token 358: ' cut' (ID: 6092)
  Prédit: ' cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cut' → logprob: -0.06639567762613297
    2. 'cut' → logprob: -3.1913957595825195
    3. ' not' → logprob: -3.8163957595825195
    4. 'not' → logprob: -6.8163957595825195
    5. ' ' → logprob: -11.94139575958252
    6. ' (' → logprob: -12.31639575958252
    7. '0' → logprob: -13.31639575958252
    8. '(not' → logprob: -13.31639575958252
    9. '   ' → logprob: -13.69139575958252
    10. '(' → logprob: -13.75389575958252

Token 359: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.875
    3. '_star' → logprob: -16.125
    4. 'start' → logprob: -16.5
    5. '_START' → logprob: -17.875
    6. '_s' → logprob: -19.25
    7. '_st' → logprob: -19.375
    8. '_Start' → logprob: -19.375
    9. '_
' → logprob: -19.5
    10. 'Start' → logprob: -20.25

Token 360: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04230193421244621
    2. '<' → logprob: -3.417301893234253
    3. ' <=' → logprob: -4.792302131652832
    4. ' >=' → logprob: -9.417302131652832
    5. '<=' → logprob: -9.417302131652832
    6. ' %' → logprob: -9.917302131652832
    7. ' >' → logprob: -9.917302131652832
    8. '%' → logprob: -10.292302131652832
    9. ' ==' → logprob: -11.417302131652832
    10. ' ' → logprob: -11.542302131652832

Token 361: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47408992052078247
    2. ' ' → logprob: -0.9740899205207825
    3. 'per' → logprob: -12.224089622497559
    4. 'self' → logprob: -13.349089622497559
    5. ' self' → logprob: -13.474089622497559
    6. '   ' → logprob: -13.474089622497559
    7. '  ' → logprob: -13.974089622497559
    8. ' per' → logprob: -14.161589622497559
    9. ' ' → logprob: -14.286589622497559
    10. '1' → logprob: -14.911589622497559

Token 362: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006001320667564869
    2. ' ' → logprob: -5.1310014724731445
    3. 'per' → logprob: -10.631001472473145
    4. 'self' → logprob: -10.631001472473145
    5. '   ' → logprob: -11.381001472473145
    6. ' self' → logprob: -12.381001472473145
    7. '  ' → logprob: -12.818501472473145
    8. '
' → logprob: -13.818501472473145
    9. '       ' → logprob: -14.381001472473145
    10. ' per' → logprob: -14.568501472473145

Token 363: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0013363128527998924
    2. 'or' → logprob: -6.626336097717285
    3. ':' → logprob: -11.751336097717285
    4. ' ' → logprob: -13.126336097717285
    5. '	or' → logprob: -14.751336097717285
    6. ':
' → logprob: -16.8763370513916
    7. '0' → logprob: -18.1263370513916
    8. ' ' → logprob: -18.2513370513916
    9. ' and' → logprob: -18.3763370513916
    10. '   ' → logprob: -18.6263370513916

Token 364: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.005233882926404476
    2. ' cut' → logprob: -5.2552337646484375
    3. '=cut' → logprob: -17.380233764648438
    4. '_cut' → logprob: -17.630233764648438
    5. 'cutaneous' → logprob: -17.630233764648438
    6. '   ' → logprob: -17.880233764648438
    7. 'Cut' → logprob: -19.130233764648438
    8. '.cut' → logprob: -19.505233764648438
    9. 'c' → logprob: -19.755233764648438
    10. ' ' → logprob: -20.505233764648438

Token 365: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -5.9153885558771435e-06
    2. 'start' → logprob: -12.375005722045898
    3. '_cut' → logprob: -13.500005722045898
    4. '_' → logprob: -15.875005722045898
    5. 'Start' → logprob: -16.5000057220459
    6. '_START' → logprob: -17.2500057220459
    7. 'cut' → logprob: -17.7500057220459
    8. '_star' → logprob: -18.7500057220459
    9. '_Start' → logprob: -19.2500057220459
    10. '-start' → logprob: -19.7500057220459

Token 366: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.20737530291080475
    2. ' >=' → logprob: -1.7073752880096436
    3. '>' → logprob: -5.207375526428223
    4. ' >' → logprob: -7.707375526428223
    5. ' or' → logprob: -11.582375526428223
    6. ')>=' → logprob: -12.707375526428223
    7. ']>=' → logprob: -13.457375526428223
    8. '≥' → logprob: -13.707375526428223
    9. '%' → logprob: -13.707375526428223
    10. 'or' → logprob: -14.207375526428223

Token 367: ' per' (ID: 777)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.007607100997120142
    2. ' per' → logprob: -4.8826069831848145
    3. '           ' → logprob: -15.132607460021973
    4. '	per' → logprob: -15.632607460021973
    5. '(per' → logprob: -16.257606506347656
    6. '       ' → logprob: -16.382606506347656
    7. 'self' → logprob: -16.382606506347656
    8. ' ' → logprob: -16.632606506347656
    9. '   ' → logprob: -16.632606506347656
    10. '_per' → logprob: -17.007606506347656

Token 368: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.13218145072460175
    2. 'imeter' → logprob: -2.132181406021118
    3. 'er' → logprob: -6.132181644439697
    4. 'imet' → logprob: -6.382181644439697
    5. 'imiter' → logprob: -6.757181644439697
    6. 'em' → logprob: -9.257181167602539
    7. 'rim' → logprob: -9.382181167602539
    8. 'imer' → logprob: -10.757181167602539
    9. 'ime' → logprob: -13.507181167602539
    10. 'r' → logprob: -13.507181167602539

Token 369: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008659250102937222
    2. ':
' → logprob: -4.758659362792969
    3. ' :' → logprob: -10.633659362792969
    4. ':return' → logprob: -11.758659362792969
    5. ' or' → logprob: -12.008659362792969
    6. '       ' → logprob: -13.008659362792969
    7. ' :
' → logprob: -13.633659362792969
    8. '):' → logprob: -13.758659362792969
    9. ':
' → logprob: -13.758659362792969
    10. '   ' → logprob: -15.258659362792969

Token 370: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.047782618552446365
    2. ':' → logprob: -3.1727826595306396
    3. ':
' → logprob: -6.0477824211120605
    4. '       ' → logprob: -6.7977824211120605
    5. ' raise' → logprob: -7.2977824211120605
    6. 'raise' → logprob: -8.797782897949219
    7. '            ' → logprob: -9.297782897949219
    8. '):' → logprob: -9.797782897949219
    9. ',' → logprob: -9.922782897949219
    10. '        ' → logprob: -10.047782897949219

Token 371: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.5976269841194153
    2. 'raise' (adapté à ' raise') → logprob: -0.8476269841194153
    3. '           ' → logprob: -3.8476269245147705
    4. '	raise' → logprob: -9.722626686096191
    5. '
' → logprob: -9.847626686096191
    6. '```' → logprob: -12.972626686096191
    7. 'Raise' → logprob: -13.222626686096191
    8. '_raise' → logprob: -13.472626686096191
    9. '   ' → logprob: -13.597626686096191
    10. '            ' → logprob: -13.972626686096191

Token 372: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.5759403109550476
    2. ' Value' → logprob: -0.8259403109550476
    3. '	Value' → logprob: -14.700940132141113
    4. '_value' → logprob: -15.325940132141113
    5. '_Value' → logprob: -15.700940132141113
    6. 'value' → logprob: -17.32594108581543
    7. '(Value' → logprob: -17.45094108581543
    8. '<Value' → logprob: -17.82594108581543
    9. ' value' → logprob: -18.07594108581543
    10. '.Value' → logprob: -18.70094108581543

Token 373: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0034170090220868587
    2. 'rror' → logprob: -5.753417015075684
    3. 'ror' → logprob: -8.378417015075684
    4. 'Value' → logprob: -12.253417015075684
    5. 'r' → logprob: -13.003417015075684
    6. 'or' → logprob: -13.503417015075684
    7. 'alue' → logprob: -15.128417015075684
    8. '   ' → logprob: -15.378417015075684
    9. 'SError' → logprob: -15.753417015075684
    10. '       ' → logprob: -15.878417015075684

Token 374: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.625001907348633
    3. '(f' → logprob: -13.875001907348633
    4. '('' → logprob: -17.000001907348633
    5. '(
' → logprob: -19.000001907348633
    6. '("'' → logprob: -19.125001907348633
    7. 'f' → logprob: -22.000001907348633
    8. '(("' → logprob: -22.375001907348633
    9. '()' → logprob: -22.750001907348633
    10. '("")' → logprob: -22.875001907348633

Token 375: 'cut' (ID: 9804)
  Prédit: 'cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.012524491176009178
    2. ' cut' → logprob: -5.137524604797363
    3. '"' → logprob: -5.387524604797363
    4. 'Cut' → logprob: -6.262524604797363
    5. 'Invalid' → logprob: -9.887524604797363
    6. 'The' → logprob: -11.387524604797363
    7. '`' → logprob: -11.887524604797363
    8. ''' → logprob: -12.137524604797363
    9. '"The' → logprob: -12.387524604797363
    10. ' "' → logprob: -13.200024604797363

Token 376: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.00023500648967456073
    2. '_' → logprob: -8.375234603881836
    3. ' _' → logprob: -12.625234603881836
    4. ')_' → logprob: -15.000234603881836
    5. '_
' → logprob: -15.250234603881836
    6. '_START' → logprob: -15.750234603881836
    7. '_

' → logprob: -16.625234603881836
    8. '_st' → logprob: -17.125234603881836
    9. '_started' → logprob: -17.250234603881836
    10. '_s' → logprob: -17.500234603881836

Token 377: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.0010463856160640717
    2. 'must' → logprob: -6.876046180725098
    3. ' should' → logprob: -12.251046180725098
    4. ' out' → logprob: -12.751046180725098
    5. ')' → logprob: -13.001046180725098
    6. ' >' → logprob: -14.126046180725098
    7. 'Must' → logprob: -14.126046180725098
    8. ' )' → logprob: -14.126046180725098
    9. '>' → logprob: -14.251046180725098
    10. ' Must' → logprob: -15.626046180725098

Token 378: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0009862465085461736
    2. ' >' → logprob: -7.125986099243164
    3. '>' → logprob: -9.375986099243164
    4. ' ' → logprob: -10.125986099243164
    5. '<|end|>' → logprob: -10.750986099243164
    6. ' provide' → logprob: -11.875986099243164
    7. ' strictly' → logprob: -11.875986099243164
    8. ' not' → logprob: -12.375986099243164
    9. ')' → logprob: -12.750986099243164
    10. '0' → logprob: -13.000986099243164

Token 379: ' within' (ID: 3518)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.15970104932785034
    2. '>' → logprob: -3.284701108932495
    3. ' within' → logprob: -3.659701108932495
    4. 'between' → logprob: -3.784701108932495
    5. ' greater' → logprob: -3.784701108932495
    6. '1' → logprob: -4.284700870513916
    7. 'greater' → logprob: -4.409700870513916
    8. ' ' → logprob: -5.659700870513916
    9. '0' → logprob: -5.784700870513916
    10. ' positive' → logprob: -6.159700870513916

Token 380: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5415289402008057
    2. ' the' → logprob: -1.5415289402008057
    3. 'per' → logprob: -1.6665289402008057
    4. ' (' → logprob: -1.7915289402008057
    5. ' ' → logprob: -2.5415289402008057
    6. '(' → logprob: -2.7915289402008057
    7. ' per' → logprob: -2.9165289402008057
    8. '1' → logprob: -4.791528701782227
    9. 'the' → logprob: -4.916528701782227
    10. 'cut' → logprob: -6.041528701782227

Token 381: ' perimeter' (ID: 89600)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.38855239748954773
    2. ' per' → logprob: -2.26355242729187
    3. ' perimeter' → logprob: -2.51355242729187
    4. ' ' → logprob: -3.38855242729187
    5. '1' → logprob: -3.38855242729187
    6. '0' → logprob: -3.38855242729187
    7. ' (' → logprob: -4.388552188873291
    8. 'cut' → logprob: -4.763552188873291
    9. ' cut' → logprob: -5.013552188873291
    10. '(' → logprob: -5.263552188873291

Token 382: ',' (ID: 11)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.2604054808616638
    2. ' length' → logprob: -1.6354055404663086
    3. 'length' → logprob: -4.385405540466309
    4. '")
' → logprob: -4.885405540466309
    5. '.")' → logprob: -4.885405540466309
    6. ')' → logprob: -6.510405540466309
    7. ' of' → logprob: -6.510405540466309
    8. ' and' → logprob: -6.885405540466309
    9. ')")' → logprob: -7.385405540466309
    10. '"' → logprob: -8.260405540466309

Token 383: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.1988929510116577
    2. ')' → logprob: -1.3238929510116577
    3. ' ' → logprob: -1.6988929510116577
    4. '0' → logprob: -2.5738930702209473
    5. ' excluding' → logprob: -2.8238930702209473
    6. ' got' → logprob: -3.0738930702209473
    7. 'not' → logprob: -3.8238930702209473
    8. '")' → logprob: -4.698893070220947
    9. 'excluding' → logprob: -4.823893070220947
    10. ' exclusive' → logprob: -5.073893070220947

Token 384: ' at' (ID: 540)
  Prédit: ' equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' equal' → logprob: -0.8905566930770874
    2. 'equal' → logprob: -1.1405566930770874
    3. '0' → logprob: -1.8905566930770874
    4. ' ' → logprob: -3.015556812286377
    5. ' at' → logprob: -3.015556812286377
    6. 'at' → logprob: -4.640556812286377
    7. ' on' → logprob: -5.265556812286377
    8. 'inclusive' → logprob: -5.765556812286377
    9. 'per' → logprob: -6.640556812286377
    10. 'exclusive' → logprob: -7.765556812286377

Token 385: ' corners' (ID: 39479)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16500389575958252
    2. ' the' → logprob: -2.790003776550293
    3. ' ' → logprob: -3.665003776550293
    4. 'the' → logprob: -3.915003776550293
    5. ' edges' → logprob: -4.915003776550293
    6. 'edges' → logprob: -5.290003776550293
    7. ' an' → logprob: -5.290003776550293
    8. ' endpoints' → logprob: -5.290003776550293
    9. 'boundary' → logprob: -5.540003776550293
    10. ' boundaries' → logprob: -5.540003776550293

Token 386: '.")

' (ID: 79197)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.05095459148287773
    2. '.' → logprob: -3.550954580307007
    3. '.")' → logprob: -4.675954818725586
    4. ')' → logprob: -5.550954818725586
    5. ',' → logprob: -5.925954818725586
    6. 'or' → logprob: -6.050954818725586
    7. '")' → logprob: -6.175954818725586
    8. ' ' → logprob: -8.925954818725586
    9. '"' → logprob: -9.175954818725586
    10. ' )' → logprob: -9.550954818725586

Token 387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19046710431575775
    2. ' if' → logprob: -2.940467119216919
    3. ' ' → logprob: -3.315467119216919
    4. '<|end|>' → logprob: -3.315467119216919
    5. '        ' → logprob: -3.815467119216919
    6. ' cut' → logprob: -4.56546688079834
    7. 'if' → logprob: -5.31546688079834
    8. '        
' → logprob: -6.19046688079834
    9. ')' → logprob: -6.19046688079834
    10. ' 
' → logprob: -6.81546688079834

Token 388: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3115578889846802
    2. 'w' → logprob: -1.9365578889846802
    3. '#' (adapté à ' #') → logprob: -2.3115577697753906
    4. 'points' → logprob: -4.811557769775391
    5. 'cut' → logprob: -5.811557769775391
    6. 'cuts' → logprob: -6.186557769775391
    7. 'edges' → logprob: -6.311557769775391
    8. 'segments' → logprob: -6.311557769775391
    9. '       ' → logprob: -6.686557769775391
    10. 'x' → logprob: -7.561557769775391

Token 389: ' Determine' (ID: 57076)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05979011952877045
    2. '#' → logprob: -3.4347901344299316
    3. 'w' → logprob: -4.184790134429932
    4. 'points' → logprob: -6.184790134429932
    5. 'top' → logprob: -6.309790134429932
    6. 'edges' → logprob: -6.559790134429932
    7. 'width' → logprob: -7.059790134429932
    8. 'segments' → logprob: -7.309790134429932
    9. 'cut' → logprob: -7.434790134429932
    10. 'cuts' → logprob: -7.434790134429932

Token 390: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3752422034740448
    2. ' if' → logprob: -2.250242233276367
    3. ' which' → logprob: -2.875242233276367
    4. 'which' → logprob: -3.000242233276367
    5. 'cut' → logprob: -3.500242233276367
    6. '#' → logprob: -3.875242233276367
    7. 'w' → logprob: -4.000242233276367
    8. 'the' → logprob: -4.875242233276367
    9. 'first' → logprob: -5.375242233276367
    10. 'points' → logprob: -5.500242233276367

Token 391: ' which' (ID: 1118)
  Prédit: ' which'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' which' → logprob: -0.08089842647314072
    2. 'which' → logprob: -3.0808985233306885
    3. 'e' → logprob: -3.4558985233306885
    4. 'self' → logprob: -10.08089828491211
    5. 'w' → logprob: -10.45589828491211
    6. 'Which' → logprob: -10.70589828491211
    7. 'line' → logprob: -10.95589828491211
    8. '#' → logprob: -11.20589828491211
    9. ' hvilken' → logprob: -11.45589828491211
    10. 'es' → logprob: -11.58089828491211

Token 392: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.4297027587890625
    2. ' edge' → logprob: -1.0547027587890625
    3. 'side' → logprob: -7.6797027587890625
    4. ' side' → logprob: -8.179702758789062
    5. 'segment' → logprob: -8.429702758789062
    6. ' segment' → logprob: -10.554702758789062
    7. '_edge' → logprob: -12.179702758789062
    8. '(edge' → logprob: -13.304702758789062
    9. 'edges' → logprob: -13.804702758789062
    10. '#' → logprob: -13.804702758789062

Token 393: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6252700686454773
    2. ' cut' → logprob: -1.125270128250122
    3. 'cut' → logprob: -2.250270128250122
    4. ' and' → logprob: -3.625270128250122
    5. ' edge' → logprob: -5.750269889831543
    6. 'the' → logprob: -6.750269889831543
    7. ' if' → logprob: -7.000269889831543
    8. '_cut' → logprob: -7.250269889831543
    9. 'edge' → logprob: -7.875269889831543
    10. '=cut' → logprob: -8.125269889831543

Token 394: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.3148781359195709
    2. ' cut' → logprob: -1.3148781061172485
    3. 'if' → logprob: -7.189877986907959
    4. ' if' → logprob: -7.689877986907959
    5. '_cut' → logprob: -9.439878463745117
    6. '#' → logprob: -9.939878463745117
    7. ' remaining' → logprob: -9.939878463745117
    8. '=cut' → logprob: -10.314878463745117
    9. 'remaining' → logprob: -10.689878463745117
    10. '       ' → logprob: -10.814878463745117

Token 395: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.7618049383163452
    2. ' is' → logprob: -1.6368049383163452
    3. ' occurs' → logprob: -1.7618049383163452
    4. '_' → logprob: -2.5118050575256348
    5. 'point' → logprob: -3.5118050575256348
    6. ' point' → logprob: -3.8868050575256348
    7. '_point' → logprob: -4.511805057525635
    8. '_position' → logprob: -4.761805057525635
    9. '_location' → logprob: -5.511805057525635
    10. '_index' → logprob: -5.636805057525635

Token 396: ' lies' (ID: 24384)
  Prédit: ' lies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lies' → logprob: -0.36107996106147766
    2. ' is' → logprob: -1.4860799312591553
    3. ' falls' → logprob: -3.4860799312591553
    4. 'is' → logprob: -3.8610799312591553
    5. ' occurs' → logprob: -4.736080169677734
    6. 'lies' → logprob: -5.361080169677734
    7. 'point' → logprob: -5.486080169677734
    8. 'falls' → logprob: -6.611080169677734
    9. 'position' → logprob: -6.986080169677734
    10. ' resides' → logprob: -7.111080169677734

Token 397: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48381203413009644
    2. ' if' → logprob: -1.1088120937347412
    3. 'if' → logprob: -3.733812093734741
    4. ' and' → logprob: -4.983811855316162
    5. ' edges' → logprob: -5.108811855316162
    6. '
' → logprob: -5.858811855316162
    7. ',' → logprob: -6.108811855316162
    8. ' length' → logprob: -6.608811855316162
    9. '#' → logprob: -6.733811855316162
    10. ':' → logprob: -7.233811855316162

Token 398: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27368754148483276
    2. 'cut' → logprob: -3.2736876010894775
    3. ')
' → logprob: -3.6486876010894775
    4. '       ' → logprob: -3.8986876010894775
    5. ' cut' → logprob: -4.023687362670898
    6. ' remaining' → logprob: -4.148687362670898
    7. 'remaining' → logprob: -4.148687362670898
    8. 'distance' → logprob: -4.273687362670898
    9. ' )' → logprob: -4.523687362670898
    10. ' if' → logprob: -4.898687362670898

Token 399: '-based' (ID: 8235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12532442808151245
    2. ' <=' → logprob: -2.7503244876861572
    3. ':' → logprob: -4.250324249267578
    4. ',' → logprob: -4.625324249267578
    5. '<=' → logprob: -4.625324249267578
    6. ' if' → logprob: -4.625324249267578
    7. '):' → logprob: -5.750324249267578
    8. 'if' → logprob: -6.500324249267578
    9. ' )' → logprob: -6.625324249267578
    10. '
' → logprob: -7.250324249267578

Token 400: ' index' (ID: 3472)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010235036723315716
    2. ')
' → logprob: -5.260234832763672
    3. '):' → logprob: -6.510234832763672
    4. 'index' → logprob: -6.760234832763672
    5. ' )' → logprob: -7.010234832763672
    6. ' index' → logprob: -7.385234832763672
    7. '):
' → logprob: -8.760234832763672
    8. ',' → logprob: -8.885234832763672
    9. ':' → logprob: -9.385234832763672
    10. '_index' → logprob: -10.135234832763672

Token 401: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04467795416712761
    2. ' )' → logprob: -3.794677972793579
    3. ',' → logprob: -4.919677734375
    4. '):' → logprob: -5.169677734375
    5. ':' → logprob: -6.044677734375
    6. ')
' → logprob: -6.169677734375
    7. '):
' → logprob: -6.544677734375
    8. '       ' → logprob: -6.669677734375
    9. ' )
' → logprob: -8.044677734375
    10. ' ,' → logprob: -8.794677734375

Token 402: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11300364136695862
    2. ' ' → logprob: -2.988003730773926
    3. ' edge' → logprob: -3.863003730773926
    4. 'edge' → logprob: -3.863003730773926
    5. ')' → logprob: -4.988003730773926
    6. ' edges' → logprob: -6.863003730773926
    7. ' cut' → logprob: -7.238003730773926
    8. 'cut' → logprob: -7.363003730773926
    9. '       ' → logprob: -7.363003730773926
    10. '   ' → logprob: -7.488003730773926

Token 403: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015121731848921627
    2. ' ' → logprob: -9.250151634216309
    3. 'edge' → logprob: -10.125151634216309
    4. '
' → logprob: -12.375151634216309
    5. 'edges' → logprob: -13.000151634216309
    6. '[' → logprob: -13.625151634216309
    7. ')' → logprob: -13.750151634216309
    8. ' edge' → logprob: -14.125151634216309
    9. '```' → logprob: -14.750151634216309
    10. 'cut' → logprob: -14.875151634216309

Token 404: ' top' (ID: 2344)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.060674868524074554
    2. ' =' → logprob: -3.9356749057769775
    3. ' )' → logprob: -4.185674667358398
    4. ',' → logprob: -4.560674667358398
    5. '=' → logprob: -5.060674667358398
    6. ':' → logprob: -5.935674667358398
    7. ' for' → logprob: -6.310674667358398
    8. '):' → logprob: -7.185674667358398
    9. ' to' → logprob: -8.060674667358398
    10. ' ' → logprob: -8.185674667358398

Token 405: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4074188470840454
    2. ',' → logprob: -1.1574188470840454
    3. '),' → logprob: -5.157418727874756
    4. ' edge' → logprob: -5.407418727874756
    5. 'edge' → logprob: -5.907418727874756
    6. ' )' → logprob: -6.782418727874756
    7. '_edge' → logprob: -6.782418727874756
    8. ' ,' → logprob: -6.907418727874756
    9. ' or' → logprob: -7.032418727874756
    10. ' edges' → logprob: -7.532418727874756

Token 406: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1798083633184433
    2. ' ' → logprob: -1.8048083782196045
    3. ')' → logprob: -10.429808616638184
    4. ',' → logprob: -11.804808616638184
    5. ' )' → logprob: -11.804808616638184
    6. '<|end|>' → logprob: -11.804808616638184
    7. '0' → logprob: -13.054808616638184
    8. '```' → logprob: -13.492308616638184
    9. ' 
' → logprob: -13.804808616638184
    10. ' ,' → logprob: -13.929808616638184

Token 407: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '0' → logprob: -16.625003814697266
    4. '
' → logprob: -18.437503814697266
    5. '```' → logprob: -18.687503814697266
    6. '3' → logprob: -18.937503814697266
    7. '   ' → logprob: -19.375003814697266
    8. ')' → logprob: -19.437503814697266
    9. '`' → logprob: -19.875003814697266
    10. '>' → logprob: -20.062503814697266

Token 408: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.22324742376804352
    2. ',' → logprob: -1.8482474088668823
    3. 'right' → logprob: -3.973247528076172
    4. ':right' → logprob: -5.098247528076172
    5. ',right' → logprob: -5.223247528076172
    6. ')' → logprob: -5.473247528076172
    7. '=' → logprob: -5.473247528076172
    8. ':' → logprob: -5.848247528076172
    9. ' =' → logprob: -8.473247528076172
    10. '	right' → logprob: -8.598247528076172

Token 409: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006171276327222586
    2. ')' → logprob: -8.250617027282715
    3. ' ,' → logprob: -8.375617027282715
    4. '),' → logprob: -9.625617027282715
    5. ',
' → logprob: -10.375617027282715
    6. ' edge' → logprob: -11.500617027282715
    7. 'edge' → logprob: -12.000617027282715
    8. ' ' → logprob: -13.125617027282715
    9. '   ' → logprob: -13.250617027282715
    10. '):' → logprob: -13.875617027282715

Token 410: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12692947685718536
    2. ' ' → logprob: -2.126929521560669
    3. ',' → logprob: -13.87692928314209
    4. '   ' → logprob: -15.37692928314209
    5. '    ' → logprob: -16.126930236816406
    6. '  ' → logprob: -16.376930236816406
    7. ')' → logprob: -17.189430236816406
    8. '1' → logprob: -17.376930236816406
    9. '
' → logprob: -17.564430236816406
    10. '<|end|>' → logprob: -17.626930236816406

Token 411: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004319804720580578
    2. ' ' → logprob: -7.750432014465332
    3. '1' → logprob: -13.875432014465332
    4. ',' → logprob: -15.625432014465332
    5. '   ' → logprob: -16.750431060791016
    6. '...' → logprob: -17.750431060791016
    7. '0' → logprob: -17.750431060791016
    8. ')' → logprob: -17.875431060791016
    9. '  ' → logprob: -17.875431060791016
    10. '<|end|>' → logprob: -17.875431060791016

Token 412: ' bottom' (ID: 8725)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020192870870232582
    2. ' bottom' → logprob: -4.895193099975586
    3. ' top' → logprob: -5.395193099975586
    4. ')' → logprob: -5.520193099975586
    5. ' ,' → logprob: -6.020193099975586
    6. ' ' → logprob: -7.645193099975586
    7. ' )' → logprob: -8.020193099975586
    8. 'bottom' → logprob: -8.770193099975586
    9. ' side' → logprob: -8.895193099975586
    10. '<|end|>' → logprob: -9.145193099975586

Token 413: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007567389984615147
    2. ')' → logprob: -7.375756740570068
    3. ' ,' → logprob: -9.50075626373291
    4. ']' → logprob: -10.62575626373291
    5. ',
' → logprob: -10.87575626373291
    6. ' or' → logprob: -12.25075626373291
    7. '),' → logprob: -13.25075626373291
    8. '):' → logprob: -13.37575626373291
    9. ' )' → logprob: -14.12575626373291
    10. ',)' → logprob: -14.62575626373291

Token 414: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5760466456413269
    2. ' ' → logprob: -0.8260466456413269
    3. ')' → logprob: -9.45104694366455
    4. '<|end|>' → logprob: -11.45104694366455
    5. ' or' → logprob: -11.82604694366455
    6. ',' → logprob: -12.82604694366455
    7. '...' → logprob: -13.45104694366455
    8. '3' → logprob: -13.70104694366455
    9. ' and' → logprob: -14.20104694366455
    10. '1' → logprob: -14.20104694366455

Token 415: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007972388411872089
    2. ' ' → logprob: -7.250797271728516
    3. '3' → logprob: -9.375797271728516
    4. 'and' → logprob: -13.875797271728516
    5. 'or' → logprob: -14.750797271728516
    6. ' or' → logprob: -15.625797271728516
    7. '1' → logprob: -15.625797271728516
    8. '   ' → logprob: -15.750797271728516
    9. '```' → logprob: -15.875797271728516
    10. ',' → logprob: -16.000797271728516

Token 416: ' left' (ID: 3561)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09475144743919373
    2. ',' → logprob: -2.7197513580322266
    3. '):' → logprob: -3.8447513580322266
    4. ' )' → logprob: -6.094751358032227
    5. '):
' → logprob: -8.219751358032227
    6. ')
' → logprob: -8.594751358032227
    7. '):

' → logprob: -8.844751358032227
    8. ' ):' → logprob: -9.969751358032227
    9. ' top' → logprob: -10.594751358032227
    10. ' edges' → logprob: -10.719751358032227

Token 417: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022212084382772446
    2. ')
' → logprob: -4.022212028503418
    3. '):' → logprob: -6.022212028503418
    4. '):
' → logprob: -7.147212028503418
    5. '       ' → logprob: -8.022212028503418
    6. ',' → logprob: -8.522212028503418
    7. ')
' → logprob: -9.397212028503418
    8. ')

' → logprob: -9.397212028503418
    9. ' )' → logprob: -9.647212028503418
    10. '):

' → logprob: -10.772212028503418

Token 418: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3495784997940063
    2. ' edge' → logprob: -1.7245784997940063
    3. ' edges' → logprob: -1.9745784997940063
    4. 'edges' → logprob: -2.724578380584717
    5. 'edge' → logprob: -2.849578380584717
    6. ' length' → logprob: -3.224578380584717
    7. ' remaining' → logprob: -3.224578380584717
    8. 'length' → logprob: -3.349578380584717
    9. ' lengths' → logprob: -3.474578380584717
    10. 'remaining' → logprob: -3.474578380584717

Token 419: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.47392332553863525
    2. 'edge' → logprob: -2.4739232063293457
    3. ' edges' → logprob: -2.7239232063293457
    4. 'length' → logprob: -2.9739232063293457
    5. 'remaining' → logprob: -3.3489232063293457
    6. 'w' → logprob: -3.5989232063293457
    7. 'pos' → logprob: -4.223923206329346
    8. 'dist' → logprob: -4.223923206329346
    9. ' lengths' → logprob: -4.348923206329346
    10. 'offset' → logprob: -4.473923206329346

Token 420: ' =' (ID: 314)
  Prédit: '_lengths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -0.07538028806447983
    2. ' =' → logprob: -2.950380325317383
    3. '=' → logprob: -5.075380325317383
    4. '_length' → logprob: -5.200380325317383
    5. '_' → logprob: -5.700380325317383
    6. '_l' → logprob: -6.075380325317383
    7. 'length' → logprob: -6.950380325317383
    8. '_edges' → logprob: -6.950380325317383
    9. '_len' → logprob: -7.575380325317383
    10. '   ' → logprob: -8.950380325317383

Token 421: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005338519695214927
    2. '[self' → logprob: -8.125534057617188
    3. ' self' → logprob: -8.375534057617188
    4. '[' → logprob: -12.000534057617188
    5. '(self' → logprob: -15.000534057617188
    6. ' [' → logprob: -15.000534057617188
    7. '[
' → logprob: -15.750534057617188
    8. '
' → logprob: -16.000534057617188
    9. '   ' → logprob: -16.375534057617188
    10. '	self' → logprob: -16.625534057617188

Token 422: '.edges' (ID: 102481)
  Prédit: '.edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edges' → logprob: -7.703443770878948e-06
    2. '.ed' → logprob: -12.750007629394531
    3. 'edges' → logprob: -13.500007629394531
    4. '._' → logprob: -13.750007629394531
    5. ' .' → logprob: -13.875007629394531
    6. '.' → logprob: -14.000007629394531
    7. '.edge' → logprob: -16.25000762939453
    8. '_.' → logprob: -16.25000762939453
    9. '(edges' → logprob: -16.37500762939453
    10. ' edges' → logprob: -17.37500762939453

Token 423: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3214263916015625
    2. '       ' → logprob: -2.3214263916015625
    3. ' =' → logprob: -3.1964263916015625
    4. '()
' → logprob: -3.3214263916015625
    5. '_lengths' → logprob: -3.3214263916015625
    6. '        
' → logprob: -3.6964263916015625
    7. '=' → logprob: -4.0714263916015625
    8. ' lengths' → logprob: -5.3214263916015625
    9. 'length' → logprob: -5.6964263916015625
    10. 'Lengths' → logprob: -5.8214263916015625

Token 424: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6497361063957214
    2. ' cumulative' → logprob: -2.149736166000366
    3. ' length' → logprob: -2.274736166000366
    4. 'length' → logprob: -3.149736166000366
    5. ' lengths' → logprob: -3.399736166000366
    6. 'cum' → logprob: -3.774736166000366
    7. 'current' → logprob: -4.024735927581787
    8. 'total' → logprob: -4.149735927581787
    9. '
' → logprob: -4.274735927581787
    10. 'remaining' → logprob: -4.274735927581787

Token 425: ' accumulated' (ID: 64757)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.40887200832366943
    2. 'pos' → logprob: -1.9088720083236694
    3. 'length' → logprob: -3.033872127532959
    4. 'offset' → logprob: -3.783872127532959
    5. 'edge' → logprob: -4.158872127532959
    6. 'dist' → logprob: -4.158872127532959
    7. 'cum' → logprob: -4.158872127532959
    8. 'c' → logprob: -4.283872127532959
    9. 'current' → logprob: -4.533872127532959
    10. ' remaining' → logprob: -4.658872127532959

Token 426: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4308544099330902
    2. ' =' → logprob: -1.1808544397354126
    3. '_length' → logprob: -3.555854320526123
    4. '_lengths' → logprob: -4.680854320526123
    5. '_' → logprob: -5.305854320526123
    6. '_len' → logprob: -9.680854797363281
    7. '_distance' → logprob: -10.055854797363281
    8. 'length' → logprob: -10.555854797363281
    9. '_l' → logprob: -10.555854797363281
    10. ' ' → logprob: -10.555854797363281

Token 427: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007135047344490886
    2. ' ' → logprob: -7.250713348388672
    3. '[' → logprob: -13.000713348388672
    4. 'cut' → logprob: -15.063213348388672
    5. '   ' → logprob: -15.750713348388672
    6. '[]
' → logprob: -15.750713348388672
    7. '[]' → logprob: -15.938213348388672
    8. '
' → logprob: -16.500713348388672
    9. '=' → logprob: -16.500713348388672
    10. ' [' → logprob: -16.813213348388672

Token 428: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008112939540296793
    2. ' ' → logprob: -7.1258111000061035
    3. '[' → logprob: -12.125811576843262
    4. 'cut' → logprob: -14.375811576843262
    5. ' [' → logprob: -15.500811576843262
    6. '[]' → logprob: -15.875811576843262
    7. '[]
' → logprob: -16.063310623168945
    8. '   ' → logprob: -16.188310623168945
    9. '  ' → logprob: -16.875810623168945
    10. '[
' → logprob: -17.063310623168945

Token 429: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8859556317329407
    2. 'for' → logprob: -1.010955572128296
    3. ' for' → logprob: -1.510955572128296
    4. '
' → logprob: -6.135955810546875
    5. ',' → logprob: -7.510955810546875
    6. '	for' → logprob: -9.135955810546875
    7. '        
' → logprob: -9.135955810546875
    8. '<|end|>' → logprob: -10.385955810546875
    9. ',
' → logprob: -10.760955810546875
    10. '   ' → logprob: -11.135955810546875

Token 430: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20515787601470947
    2. 'for' → logprob: -2.33015775680542
    3. '       ' → logprob: -2.58015775680542
    4. '
' → logprob: -4.58015775680542
    5. ',' → logprob: -6.95515775680542
    6. '        
' → logprob: -8.705158233642578
    7. 'current' → logprob: -8.830158233642578
    8. '<|end|>' → logprob: -9.080158233642578
    9. ' current' → logprob: -9.205158233642578
    10. '   ' → logprob: -9.205158233642578

Token 431: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' (adapté à ' edge') → logprob: -0.2407159060239792
    2. 'cut' → logprob: -1.8657158613204956
    3. 'for' → logprob: -2.865715980529785
    4. 'index' → logprob: -7.490715980529785
    5. '       ' → logprob: -7.865715980529785
    6. ' edge' → logprob: -7.990715980529785
    7. 'current' → logprob: -8.615715980529785
    8. 'on' → logprob: -9.115715980529785
    9. 'i' → logprob: -9.115715980529785
    10. ' cut' → logprob: -9.240715980529785

Token 432: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.14947235584259033
    2. '_idx' → logprob: -2.024472236633301
    3. '_' → logprob: -5.399472236633301
    4. '_lengths' → logprob: -6.774472236633301
    5. ' =' → logprob: -7.649472236633301
    6. 's' → logprob: -8.3994722366333
    7. '_i' → logprob: -8.5244722366333
    8. '_length' → logprob: -9.6494722366333
    9. '=' → logprob: -9.7744722366333
    10. 'Index' → logprob: -10.3994722366333

Token 433: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4287744164466858
    2. ' =' → logprob: -1.053774356842041
    3. ' ' → logprob: -10.3037748336792
    4. '<|end|>' → logprob: -10.5537748336792
    5. ',' → logprob: -11.6787748336792
    6. ':' → logprob: -13.5537748336792
    7. ' =
' → logprob: -13.8037748336792
    8. '=
' → logprob: -13.9287748336792
    9. 'for' → logprob: -14.8037748336792
    10. '0' → logprob: -14.9287748336792

Token 434: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023553038015961647
    2. ' ' → logprob: -3.7735531330108643
    3. '-' → logprob: -9.148552894592285
    4. ' -' → logprob: -9.273552894592285
    5. ' None' → logprob: -9.523552894592285
    6. 'None' → logprob: -10.398552894592285
    7. ' next' → logprob: -13.148552894592285
    8. 'next' → logprob: -13.523552894592285
    9. '   ' → logprob: -15.523552894592285
    10. ' none' → logprob: -17.3985538482666

Token 435: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '2' → logprob: -19.562501907348633
    4. '```' → logprob: -19.625001907348633
    5. '=' → logprob: -20.000001907348633
    6. '   ' → logprob: -20.125001907348633
    7. '<|end|>' → logprob: -20.125001907348633
    8. '-' → logprob: -20.312501907348633
    9. '۱' → logprob: -20.562501907348633
    10. '১' → logprob: -20.875001907348633

Token 436: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 437: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2629816234111786
    2. 'for' → logprob: -1.637981653213501
    3. '<|end|>' → logprob: -4.012981414794922
    4. '
' → logprob: -4.137981414794922
    5. '       ' → logprob: -6.262981414794922
    6. ' 
' → logprob: -7.762981414794922
    7. '<|end|>' → logprob: -8.387981414794922
    8. ' ' → logprob: -9.262981414794922
    9. '	for' → logprob: -10.262981414794922
    10. ',' → logprob: -10.637981414794922

Token 438: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006009025499224663
    2. ' for' → logprob: -5.131009101867676
    3. '       ' → logprob: -9.506009101867676
    4. '
' → logprob: -13.131009101867676
    5. '0' → logprob: -13.881009101867676
    6. 'while' → logprob: -14.006009101867676
    7. '	for' → logprob: -14.256009101867676
    8. '        
' → logprob: -14.756009101867676
    9. '```' → logprob: -15.506009101867676
    10. ' ' → logprob: -16.50600814819336

Token 439: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010997127741575241
    2. ' i' → logprob: -4.635997295379639
    3. 'idx' → logprob: -7.010997295379639
    4. 'e' → logprob: -9.13599681854248
    5. 'edge' → logprob: -9.51099681854248
    6. ' idx' → logprob: -9.76099681854248
    7. 'length' → logprob: -9.76099681854248
    8. 'ei' → logprob: -11.51099681854248
    9. 'index' → logprob: -11.63599681854248
    10. '   ' → logprob: -12.01099681854248

Token 440: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018261153250932693
    2. 'in' → logprob: -4.268260955810547
    3. ',' → logprob: -5.518260955810547
    4. ' ' → logprob: -9.893260955810547
    5. ' ,' → logprob: -10.643260955810547
    6. '	in' → logprob: -14.018260955810547
    7. 'range' → logprob: -15.018260955810547
    8. ',in' → logprob: -15.268260955810547
    9. ' range' → logprob: -16.268260955810547
    10. '0' → logprob: -16.393260955810547

Token 441: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.020364003255963326
    2. 'edge' → logprob: -4.020363807678223
    3. ' length' → logprob: -7.020363807678223
    4. 'e' → logprob: -7.145363807678223
    5. 'l' → logprob: -7.645363807678223
    6. ' edge' → logprob: -10.770363807678223
    7. 'leng' → logprob: -11.145363807678223
    8. 'el' → logprob: -12.520363807678223
    9. 'ength' → logprob: -13.395363807678223
    10. 'L' → logprob: -13.395363807678223

Token 442: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04863846302032471
    2. 'in' → logprob: -3.048638343811035
    3. ',' → logprob: -10.548638343811035
    4. ' ' → logprob: -11.798638343811035
    5. '_in' → logprob: -12.423638343811035
    6. '	in' → logprob: -12.423638343811035
    7. '
' → logprob: -12.673638343811035
    8. 's' → logprob: -14.548638343811035
    9. 'In' → logprob: -14.861138343811035
    10. 'e' → logprob: -14.923638343811035

Token 443: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0002613358374219388
    2. ' enumerate' → logprob: -8.250261306762695
    3. 'enum' → logprob: -17.375261306762695
    4. 'en' → logprob: -17.875261306762695
    5. '```' → logprob: -19.000261306762695
    6. '
' → logprob: -20.250261306762695
    7. 'list' → logprob: -20.750261306762695
    8. '   ' → logprob: -20.875261306762695
    9. ' ' → logprob: -21.000261306762695
    10. '.enumer' → logprob: -21.250261306762695

Token 444: '(edges' (ID: 185298)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.08510096371173859
    2. '(edges' → logprob: -2.5851008892059326
    3. ' edges' → logprob: -5.085101127624512
    4. '(' → logprob: -13.960101127624512
    5. '.edges' → logprob: -14.085101127624512
    6. '_edges' → logprob: -14.585101127624512
    7. '(edge' → logprob: -15.460101127624512
    8. 'edge' → logprob: -15.460101127624512
    9. '   ' → logprob: -15.585101127624512
    10. 'Edges' → logprob: -15.710101127624512

Token 445: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.008951232768595219
    2. '):' → logprob: -4.758951187133789
    3. '):
' → logprob: -8.508951187133789
    4. ':' → logprob: -9.383951187133789
    5. ':
' → logprob: -10.383951187133789
    6. ' ):
' → logprob: -11.383951187133789
    7. '       ' → logprob: -12.508951187133789
    8. '():
' → logprob: -12.758951187133789
    9. '   ' → logprob: -13.883951187133789
    10. '):

' → logprob: -14.508951187133789

Token 446: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14053091406822205
    2. ':
' → logprob: -2.640530824661255
    3. '
' → logprob: -3.765530824661255
    4. ':' → logprob: -3.890530824661255
    5. '):
' → logprob: -4.890531063079834
    6. '<|end|>' → logprob: -5.765531063079834
    7. '            
' → logprob: -6.390531063079834
    8. '<|end|>' → logprob: -7.015531063079834
    9. '       ' → logprob: -7.265531063079834
    10. ' 
' → logprob: -8.140530586242676

Token 447: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3140661120414734
    2. 'acc' → logprob: -1.5640661716461182
    3. ' accumulated' → logprob: -2.939066171646118
    4. 'if' (adapté à ' if') → logprob: -5.564065933227539
    5. ' if' → logprob: -5.814065933227539
    6. '
' → logprob: -8.189065933227539
    7. '            
' → logprob: -9.939065933227539
    8. '	acc' → logprob: -10.189065933227539
    9. '   ' → logprob: -10.439065933227539
    10. '_acc' → logprob: -11.189065933227539

Token 448: ' accumulated' (ID: 64757)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.002988278865814209
    2. ' accumulated' → logprob: -6.002988338470459
    3. 'cut' → logprob: -7.627988338470459
    4. ' cut' → logprob: -11.1279878616333
    5. '	acc' → logprob: -12.8779878616333
    6. '(acc' → logprob: -13.1279878616333
    7. ' accum' → logprob: -13.5029878616333
    8. '   ' → logprob: -13.5029878616333
    9. ' ' → logprob: -13.8779878616333
    10. 'ac' → logprob: -14.3779878616333

Token 449: ' <' (ID: 464)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16028748452663422
    2. '+' → logprob: -1.9102874994277954
    3. ' <=' → logprob: -10.285287857055664
    4. '<=' → logprob: -10.535287857055664
    5. ' plus' → logprob: -14.285287857055664
    6. '<' → logprob: -14.410287857055664
    7. ' ' → logprob: -14.910287857055664
    8. ' <' → logprob: -15.535287857055664
    9. '+
' → logprob: -15.535287857055664
    10. ' +
' → logprob: -15.785287857055664

Token 450: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.010246247984468937
    2. ' cut' → logprob: -4.760246276855469
    3. 'acc' → logprob: -6.635246276855469
    4. '=' → logprob: -8.510246276855469
    5. '=cut' → logprob: -9.635246276855469
    6. ' accumulated' → logprob: -10.510246276855469
    7. '_cut' → logprob: -12.010246276855469
    8. 'cutaneous' → logprob: -12.510246276855469
    9. '
' → logprob: -12.760246276855469
    10. 'c' → logprob: -13.385246276855469

Token 451: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -5.2524021157296374e-05
    2. 'start' → logprob: -10.500052452087402
    3. '_' → logprob: -10.750052452087402
    4. '_START' → logprob: -13.500052452087402
    5. 'Start' → logprob: -13.750052452087402
    6. ' _' → logprob: -15.000052452087402
    7. '_star' → logprob: -15.375052452087402
    8. '
' → logprob: -16.62505340576172
    9. '_
' → logprob: -16.75005340576172
    10. '_s' → logprob: -16.75005340576172

Token 452: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4747385084629059
    2. ' <=' → logprob: -0.9747384786605835
    3. 'and' → logprob: -7.849738597869873
    4. ' and' → logprob: -8.224738121032715
    5. '≤' → logprob: -13.849738121032715
    6. 'le' → logprob: -14.224738121032715
    7. ' ' → logprob: -14.474738121032715
    8. ' ≤' → logprob: -14.724738121032715
    9. '<' → logprob: -15.349738121032715
    10. ')<=' → logprob: -16.22473907470703

Token 453: ' accumulated' (ID: 64757)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.016852157190442085
    2. ' accumulated' → logprob: -4.141852378845215
    3. '=' → logprob: -7.141852378845215
    4. '
' → logprob: -11.641852378845215
    5. '	acc' → logprob: -12.766852378845215
    6. '   ' → logprob: -12.891852378845215
    7. '(acc' → logprob: -13.141852378845215
    8. '_acc' → logprob: -13.141852378845215
    9. ' ' → logprob: -13.266852378845215
    10. ' =' → logprob: -13.391852378845215

Token 454: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16023346781730652
    2. ' +' → logprob: -1.910233497619629
    3. '+i' → logprob: -12.660233497619629
    4. '+=' → logprob: -13.160233497619629
    5. '+
' → logprob: -13.285233497619629
    6. ' ' → logprob: -14.535233497619629
    7. ' +
' → logprob: -14.910233497619629
    8. '＋' → logprob: -15.035233497619629
    9. '+c' → logprob: -15.410233497619629
    10. ' plus' → logprob: -15.660233497619629

Token 455: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0007100477814674377
    2. ' length' → logprob: -7.2507100105285645
    3. 'leng' → logprob: -17.250709533691406
    4. '(length' → logprob: -17.750709533691406
    5. 'ength' → logprob: -18.250709533691406
    6. '[length' → logprob: -18.625709533691406
    7. 'l' → logprob: -18.875709533691406
    8. 'len' → logprob: -19.125709533691406
    9. '	length' → logprob: -19.250709533691406
    10. '   ' → logprob: -20.125709533691406

Token 456: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.31385669112205505
    2. ':' → logprob: -1.3138567209243774
    3. '               ' → logprob: -8.063857078552246
    4. '           ' → logprob: -8.438857078552246
    5. ' :
' → logprob: -10.938857078552246
    6. ':
' → logprob: -11.063857078552246
    7. '):
' → logprob: -11.438857078552246
    8. ':

' → logprob: -12.188857078552246
    9. ':return' → logprob: -12.938857078552246
    10. ' and' → logprob: -13.313857078552246

Token 457: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009211953729391098
    2. '           ' → logprob: -5.384212017059326
    3. ':' → logprob: -6.509212017059326
    4. ':
' → logprob: -6.509212017059326
    5. 'edge' → logprob: -7.884212017059326
    6. ' edge' → logprob: -8.009211540222168
    7. '                
' → logprob: -8.259211540222168
    8. '
' → logprob: -8.384211540222168
    9. '):
' → logprob: -9.384211540222168
    10. ',' → logprob: -10.509211540222168

Token 458: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' (adapté à ' edge') → logprob: -0.24530839920043945
    2. ' edge' → logprob: -1.9953083992004395
    3. '           ' → logprob: -2.7453083992004395
    4. '               ' → logprob: -4.1203083992004395
    5. '                   ' → logprob: -7.2453083992004395
    6. '   ' → logprob: -8.245307922363281
    7. '=edge' → logprob: -10.745307922363281
    8. '(edge' → logprob: -11.245307922363281
    9. ' ' → logprob: -11.370307922363281
    10. '            ' → logprob: -11.370307922363281

Token 459: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.625
    3. ' _' → logprob: -16.75
    4. 'index' → logprob: -17.0
    5. '
' → logprob: -17.875
    6. ' =' → logprob: -18.25
    7. '=' → logprob: -18.25
    8. '           ' → logprob: -18.375
    9. '_i' → logprob: -19.0
    10. '=index' → logprob: -19.25

Token 460: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020549481734633446
    2. '=' → logprob: -3.8955495357513428
    3. '=i' → logprob: -12.520549774169922
    4. ' ' → logprob: -12.520549774169922
    5. ' =
' → logprob: -15.895549774169922
    6. '<|end|>' → logprob: -16.395549774169922
    7. '=
' → logprob: -17.520549774169922
    8. '
' → logprob: -18.020549774169922
    9. ',' → logprob: -18.145549774169922
    10. '＝' → logprob: -19.020549774169922

Token 461: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011047814972698689
    2. ' i' → logprob: -4.511047840118408
    3. '	i' → logprob: -18.26104736328125
    4. '           ' → logprob: -20.76104736328125
    5. ' ' → logprob: -21.38604736328125
    6. '{i' → logprob: -21.38604736328125
    7. '$i' → logprob: -21.63604736328125
    8. ')i' → logprob: -21.63604736328125
    9. '=i' → logprob: -21.76104736328125
    10. '_i' → logprob: -21.88604736328125

Token 462: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00027111053350381553
    2. '
' → logprob: -8.87527084350586
    3. '                
' → logprob: -9.62527084350586
    4. '           ' → logprob: -10.50027084350586
    5. '                ' → logprob: -11.75027084350586
    6. '                   ' → logprob: -11.87527084350586
    7. '<|end|>' → logprob: -12.00027084350586
    8. '              ' → logprob: -12.50027084350586
    9. '            
' → logprob: -13.12527084350586
    10. '       ' → logprob: -13.50027084350586

Token 463: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.7848862373502925e-05
    2. ' break' → logprob: -11.375027656555176
    3. '           ' → logprob: -11.500027656555176
    4. 'break' → logprob: -13.000027656555176
    5. '
' → logprob: -13.375027656555176
    6. '              ' → logprob: -14.375027656555176
    7. '                
' → logprob: -14.625027656555176
    8. '                   ' → logprob: -15.000027656555176
    9. '                ' → logprob: -15.000027656555176
    10. '       ' → logprob: -15.500027656555176

Token 464: ' offset' (ID: 8985)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.23026081919670105
    2. 'break' → logprob: -2.1052608489990234
    3. '               ' → logprob: -2.4802608489990234
    4. '           ' → logprob: -9.355260848999023
    5. ' accumulated' → logprob: -10.730260848999023
    6. '	break' → logprob: -11.855260848999023
    7. '       ' → logprob: -12.480260848999023
    8. ' cut' → logprob: -12.480260848999023
    9. 'acc' → logprob: -12.605260848999023
    10. '
' → logprob: -12.730260848999023

Token 465: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868771195411682
    2. ' =' → logprob: -1.1368770599365234
    3. 's' → logprob: -12.761877059936523
    4. '=cut' → logprob: -13.136877059936523
    5. ' ' → logprob: -14.761877059936523
    6. '_in' → logprob: -15.636877059936523
    7. '_' → logprob: -15.761877059936523
    8. 'cut' → logprob: -16.386877059936523
    9. '＝' → logprob: -16.511877059936523
    10. '_cut' → logprob: -16.511877059936523

Token 466: ' cut' (ID: 6092)
  Prédit: ' cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cut' → logprob: -0.2014296054840088
    2. 'cut' → logprob: -1.7014296054840088
    3. '   ' → logprob: -11.82642936706543
    4. ' ' → logprob: -12.82642936706543
    5. '=cut' → logprob: -12.82642936706543
    6. 'int' → logprob: -14.63892936706543
    7. '
' → logprob: -14.76392936706543
    8. ' cutoff' → logprob: -15.13892936706543
    9. 'cutaneous' → logprob: -15.32642936706543
    10. '_cut' → logprob: -15.32642936706543

Token 467: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -3.7697225252486533e-06
    2. '_' → logprob: -13.750003814697266
    3. 'start' → logprob: -13.875003814697266
    4. '-' → logprob: -14.250003814697266
    5. '-start' → logprob: -15.000003814697266
    6. '_star' → logprob: -15.375003814697266
    7. 'Start' → logprob: -15.750003814697266
    8. ' _' → logprob: -16.250003814697266
    9. '_START' → logprob: -16.750003814697266
    10. '```' → logprob: -17.125003814697266

Token 468: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.020550651475787163
    2. '-' → logprob: -3.8955507278442383
    3. ' ' → logprob: -12.145550727844238
    4. '               ' → logprob: -14.020550727844238
    5. '   ' → logprob: -14.395550727844238
    6. ' ' → logprob: -14.645550727844238
    7. '           ' → logprob: -15.020550727844238
    8. '
' → logprob: -15.520550727844238
    9. ' –' → logprob: -15.520550727844238
    10. '	' → logprob: -16.145549774169922

Token 469: ' accumulated' (ID: 64757)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.01252683810889721
    2. ' accumulated' → logprob: -4.387526988983154
    3. '(acc' → logprob: -11.262526512145996
    4. '_acc' → logprob: -14.137526512145996
    5. '	acc' → logprob: -14.262526512145996
    6. ' accum' → logprob: -14.262526512145996
    7. ' (' → logprob: -14.387526512145996
    8. '   ' → logprob: -15.137526512145996
    9. '.acc' → logprob: -15.637526512145996
    10. 'ac' → logprob: -15.887526512145996

Token 470: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1279553291387856e-05
    2. '<|end|>' → logprob: -11.875011444091797
    3. '           ' → logprob: -13.250011444091797
    4. '                
' → logprob: -13.875011444091797
    5. '                ' → logprob: -14.500011444091797
    6. '              ' → logprob: -14.875011444091797
    7. '<|end|>' → logprob: -16.000011444091797
    8. '       ' → logprob: -16.375011444091797
    9. '		       ' → logprob: -16.375011444091797
    10. '                   ' → logprob: -16.500011444091797

Token 471: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.8789383830153383e-05
    2. '           ' → logprob: -11.000019073486328
    3. '                
' → logprob: -14.500019073486328
    4. '              ' → logprob: -14.625019073486328
    5. '                ' → logprob: -15.375019073486328
    6. ' break' → logprob: -15.500019073486328
    7. '       ' → logprob: -16.375019073486328
    8. ',' → logprob: -16.500019073486328
    9. '                   ' → logprob: -16.500019073486328
    10. 'break' → logprob: -16.625019073486328

Token 472: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06093611940741539
    2. 'break' (adapté à ' break') → logprob: -3.310936212539673
    3. ' break' → logprob: -3.810936212539673
    4. '           ' → logprob: -7.685935974121094
    5. '	break' → logprob: -10.560935974121094
    6. '              ' → logprob: -12.060935974121094
    7. '
' → logprob: -12.435935974121094
    8. '             ' → logprob: -13.060935974121094
    9. '                ' → logprob: -13.060935974121094
    10. '       ' → logprob: -13.560935974121094

Token 473: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005129986093379557
    2. '
' → logprob: -8.625513076782227
    3. '1' → logprob: -9.375513076782227
    4. '0' → logprob: -9.375513076782227
    5. '<|end|>' → logprob: -9.750513076782227
    6. '       ' → logprob: -10.625513076782227
    7. ' ' → logprob: -11.000513076782227
    8. '               ' → logprob: -11.500513076782227
    9. '<|end|>' → logprob: -11.750513076782227
    10. '   ' → logprob: -11.750513076782227

Token 474: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008626267081126571
    2. '       ' → logprob: -7.7508625984191895
    3. '   ' → logprob: -8.750863075256348
    4. '<|end|>' → logprob: -8.875863075256348
    5. '               ' → logprob: -10.500863075256348
    6. ' ' → logprob: -10.750863075256348
    7. '0' → logprob: -11.000863075256348
    8. 'else' → logprob: -11.875863075256348
    9. '<|end|>' → logprob: -11.875863075256348
    10. '1' → logprob: -12.000863075256348

Token 475: ' accumulated' (ID: 64757)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24789772927761078
    2. 'acc' → logprob: -1.622897744178772
    3. '       ' → logprob: -4.247897624969482
    4. '   ' → logprob: -5.622897624969482
    5. ' accumulated' → logprob: -6.122897624969482
    6. 'else' → logprob: -6.872897624969482
    7. '
' → logprob: -7.747897624969482
    8. ' ' → logprob: -8.87289810180664
    9. '         ' → logprob: -8.87289810180664
    10. '          ' → logprob: -9.62289810180664

Token 476: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.048669349402189255
    2. ' +=' → logprob: -3.0486693382263184
    3. '=' → logprob: -9.423669815063477
    4. '+' → logprob: -14.048669815063477
    5. '+=(' → logprob: -15.798669815063477
    6. ' =' → logprob: -16.298669815063477
    7. ' ' → logprob: -16.548669815063477
    8. ']+=' → logprob: -17.048669815063477
    9. '   ' → logprob: -19.173669815063477
    10. ' +' → logprob: -19.298669815063477

Token 477: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0007099286303855479
    2. ' length' → logprob: -7.2507100105285645
    3. 'leng' → logprob: -18.625709533691406
    4. 'len' → logprob: -19.375709533691406
    5. '(length' → logprob: -19.375709533691406
    6. '	length' → logprob: -20.250709533691406
    7. 'l' → logprob: -20.750709533691406
    8. ' ' → logprob: -21.125709533691406
    9. '[length' → logprob: -21.125709533691406
    10. '1' → logprob: -21.375709533691406

Token 478: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02546774595975876
    2. '
' → logprob: -4.400467872619629
    3. ' if' → logprob: -5.400467872619629
    4. '<|end|>' → logprob: -5.775467872619629
    5. '        
' → logprob: -6.025467872619629
    6. 'if' → logprob: -6.650467872619629
    7. ',' → logprob: -8.025467872619629
    8. 'else' → logprob: -8.025467872619629
    9. ' else' → logprob: -8.400467872619629
    10. '.' → logprob: -9.025467872619629

Token 479: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3333513140678406
    2. ' if' → logprob: -1.7083513736724854
    3. 'if' → logprob: -2.3333513736724854
    4. '
' → logprob: -6.583351135253906
    5. ')' → logprob: -7.083351135253906
    6. '        
' → logprob: -7.083351135253906
    7. '<|end|>' → logprob: -7.333351135253906
    8. '#' → logprob: -7.708351135253906
    9. '```' → logprob: -7.833351135253906
    10. 'If' → logprob: -8.958351135253906

Token 480: ' else' (ID: 1203)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08164479583501816
    2. ' if' → logprob: -2.8316447734832764
    3. '       ' → logprob: -4.0816450119018555
    4. '#' → logprob: -6.7066450119018555
    5. 'assert' → logprob: -7.7066450119018555
    6. '```' → logprob: -8.581645011901855
    7. '        
' → logprob: -8.706645011901855
    8. 'from' → logprob: -9.081645011901855
    9. 'else' (adapté à ' else') → logprob: -9.456645011901855
    10. 'w' → logprob: -9.706645011901855

Token 481: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2822987735271454
    2. ':' → logprob: -1.4072988033294678
    3. '       ' → logprob: -6.907298564910889
    4. ':return' → logprob: -9.907299041748047
    5. '           ' → logprob: -10.282299041748047
    6. '   ' → logprob: -10.907299041748047
    7. ':

' → logprob: -11.407299041748047
    8. ' :
' → logprob: -11.407299041748047
    9. ':
' → logprob: -12.282299041748047
    10. '        ' → logprob: -12.282299041748047

Token 482: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024223605170845985
    2. 'raise' → logprob: -3.774223566055298
    3. ' raise' → logprob: -7.524223804473877
    4. '       ' → logprob: -8.149223327636719
    5. 'return' → logprob: -9.024223327636719
    6. '   ' → logprob: -11.024223327636719
    7. '	raise' → logprob: -12.524223327636719
    8. '               ' → logprob: -12.774223327636719
    9. '#' → logprob: -13.274223327636719
    10. '```' → logprob: -13.524223327636719

Token 483: ' #' (ID: 1069)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.0016245952574536204
    2. '           ' → logprob: -6.751624584197998
    3. ' raise' → logprob: -8.251625061035156
    4. 'return' → logprob: -8.751625061035156
    5. '#' (adapté à ' #') → logprob: -10.501625061035156
    6. '       ' → logprob: -12.126625061035156
    7. '```' → logprob: -13.751625061035156
    8. '
' → logprob: -14.751625061035156
    9. '   ' → logprob: -14.876625061035156
    10. '	raise' → logprob: -15.126625061035156

Token 484: ' cut' (ID: 6092)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.002699662698432803
    2. '#' → logprob: -6.002699851989746
    3. 'return' → logprob: -8.752699851989746
    4. ' raise' → logprob: -9.877699851989746
    5. '           ' → logprob: -11.627699851989746
    6. '       ' → logprob: -13.002699851989746
    7. 'Raise' → logprob: -13.502699851989746
    8. 'edge' → logprob: -14.127699851989746
    9. '   ' → logprob: -15.127699851989746
    10. 'continue' → logprob: -15.377699851989746

Token 485: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0030395053327083588
    2. '       ' → logprob: -6.753039360046387
    3. '_raise' → logprob: -7.753039360046387
    4. 'raise' → logprob: -7.878039360046387
    5. 'start' → logprob: -7.878039360046387
    6. ' raise' → logprob: -8.128039360046387
    7. 'Start' → logprob: -9.253039360046387
    8. ' raises' → logprob: -9.378039360046387
    9. '_' → logprob: -10.378039360046387
    10. '#' → logprob: -10.503039360046387

Token 486: ' cannot' (ID: 6284)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.33876773715019226
    2. ' ==' → logprob: -1.3387677669525146
    3. '=' → logprob: -3.8387677669525146
    4. ' is' → logprob: -6.7137675285339355
    5. ' not' → logprob: -7.4637675285339355
    6. '>=' → logprob: -7.5887675285339355
    7. ' =' → logprob: -7.8387675285339355
    8. ' must' → logprob: -8.713768005371094
    9. ' >=' → logprob: -8.713768005371094
    10. ' should' → logprob: -9.088768005371094

Token 487: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.5312918424606323
    2. 'be' → logprob: -0.9062918424606323
    3. '==' → logprob: -6.156291961669922
    4. 'equal' → logprob: -6.156291961669922
    5. ' lie' → logprob: -6.781291961669922
    6. 'lie' → logprob: -6.781291961669922
    7. 'occur' → logprob: -7.406291961669922
    8. ' equal' → logprob: -7.781291961669922
    9. 'exact' → logprob: -8.406291961669922
    10. ' ==' → logprob: -9.406291961669922

Token 488: ' a' (ID: 261)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.3673853874206543
    2. 'equal' → logprob: -2.3673853874206543
    3. ' on' → logprob: -2.4923853874206543
    4. 'exact' → logprob: -2.7423853874206543
    5. 'at' → logprob: -3.3673853874206543
    6. ' exactly' → logprob: -4.117385387420654
    7. '0' → logprob: -5.492385387420654
    8. ' at' → logprob: -5.617385387420654
    9. ' equal' → logprob: -5.992385387420654
    10. 'greater' → logprob: -7.117385387420654

Token 489: ' corner' (ID: 14194)
  Prédit: 'corner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'corner' → logprob: -0.006798021495342255
    2. ' corner' → logprob: -5.381797790527344
    3. 'cut' → logprob: -7.256797790527344
    4. 'per' → logprob: -8.006797790527344
    5. 't' → logprob: -8.631797790527344
    6. 'n' → logprob: -8.881797790527344
    7. 'length' → logprob: -8.881797790527344
    8. 'edge' → logprob: -9.131797790527344
    9. 'point' → logprob: -9.131797790527344
    10. 'corn' → logprob: -9.381797790527344

Token 490: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18563905358314514
    2. ' or' → logprob: -3.1856391429901123
    3. ',' → logprob: -3.6856391429901123
    4. ' raise' → logprob: -3.8106391429901123
    5. 'raise' → logprob: -4.185638904571533
    6. '
' → logprob: -4.310638904571533
    7. '.' → logprob: -4.560638904571533
    8. ':' → logprob: -4.810638904571533
    9. ' because' → logprob: -4.810638904571533
    10. '        
' → logprob: -4.935638904571533

Token 491: ' this' (ID: 495)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.13471484184265137
    2. ' raise' → logprob: -2.2597148418426514
    3. 'continue' → logprob: -4.5097150802612305
    4. '           ' → logprob: -4.7597150802612305
    5. ' continue' → logprob: -7.2597150802612305
    6. '       ' → logprob: -8.50971508026123
    7. '#' → logprob: -8.50971508026123
    8. 'pass' → logprob: -8.88471508026123
    9. '	raise' → logprob: -8.88471508026123
    10. 'return' → logprob: -9.13471508026123

Token 492: ' should' (ID: 1757)
  Prédit: 'should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'should' → logprob: -1.1214097738265991
    2. ' should' → logprob: -1.8714097738265991
    3. 'return' → logprob: -1.9964097738265991
    4. '       ' → logprob: -2.2464098930358887
    5. '           ' → logprob: -2.2464098930358887
    6. 'raise' → logprob: -3.3714098930358887
    7. ' return' → logprob: -3.6214098930358887
    8. ' is' → logprob: -4.246409893035889
    9. 'def' → logprob: -4.246409893035889
    10. ' raise' → logprob: -4.371409893035889

Token 493: ' never' (ID: 3779)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.06306837499141693
    2. ' not' → logprob: -3.063068389892578
    3. 'never' → logprob: -4.938068389892578
    4. 'raise' → logprob: -5.438068389892578
    5. ' never' → logprob: -6.063068389892578
    6. ' raise' → logprob: -7.813068389892578
    7. 'continue' → logprob: -9.438068389892578
    8. 'n't' → logprob: -10.063068389892578
    9. '
' → logprob: -13.563068389892578
    10. '```' → logprob: -13.688068389892578

Token 494: ' happen' (ID: 5659)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.40630078315734863
    2. ' happen' → logprob: -1.1563007831573486
    3. 'raise' → logprob: -4.1563005447387695
    4. 'occur' → logprob: -6.0313005447387695
    5. 'be' → logprob: -7.7813005447387695
    6. ' raise' → logprob: -8.28130054473877
    7. ' be' → logprob: -8.78130054473877
    8. ' occur' → logprob: -9.03130054473877
    9. 'reach' → logprob: -9.90630054473877
    10. 'fail' → logprob: -10.03130054473877

Token 495: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026665038894861937
    2. '       ' → logprob: -6.752666473388672
    3. ' raise' → logprob: -7.002666473388672
    4. ',' → logprob: -8.002666473388672
    5. 'raise' → logprob: -8.752666473388672
    6. '               ' → logprob: -9.877666473388672
    7. '   ' → logprob: -10.752666473388672
    8. '          ' → logprob: -12.752666473388672
    9. '            ' → logprob: -13.002666473388672
    10. '```' → logprob: -13.377666473388672

Token 496: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014543168246746063
    2. ' raise' → logprob: -4.889543056488037
    3. 'raise' → logprob: -5.264543056488037
    4. '       ' → logprob: -6.389543056488037
    5. '   ' → logprob: -10.014543533325195
    6. '               ' → logprob: -11.889543533325195
    7. '	raise' → logprob: -12.139543533325195
    8. '```' → logprob: -13.764543533325195
    9. ' ' → logprob: -14.139543533325195
    10. 'return' → logprob: -14.389543533325195

Token 497: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -4.668304245569743e-05
    2. ' raise' → logprob: -10.000046730041504
    3. '   ' → logprob: -14.500046730041504
    4. 'return' → logprob: -14.625046730041504
    5. '           ' → logprob: -15.625046730041504
    6. '       ' → logprob: -16.125045776367188
    7. 'assert' → logprob: -16.750045776367188
    8. '
' → logprob: -18.375045776367188
    9. '	raise' → logprob: -19.375045776367188
    10. 'pass' → logprob: -19.750045776367188

Token 498: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.06291983276605606
    2. ' Value' → logprob: -2.812919855117798
    3. 'Runtime' → logprob: -7.187919616699219
    4. ' Runtime' → logprob: -8.687919616699219
    5. 'Assertion' → logprob: -11.062919616699219
    6. ' Assertion' → logprob: -11.437919616699219
    7. '_value' → logprob: -15.062919616699219
    8. 'Not' → logprob: -15.562919616699219
    9. '_Value' → logprob: -15.937919616699219
    10. 'Exception' → logprob: -16.18791961669922

Token 499: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.000227496653678827
    2. 'rror' → logprob: -8.750227928161621
    3. 'Value' → logprob: -9.625227928161621
    4. 'LError' → logprob: -14.375227928161621
    5. 'SError' → logprob: -14.500227928161621
    6. 'ror' → logprob: -15.000227928161621
    7. 'alue' → logprob: -15.125227928161621
    8. '   ' → logprob: -15.250227928161621
    9. 'ation' → logprob: -15.750227928161621
    10. '       ' → logprob: -16.125226974487305

Token 500: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -9.722539834911004e-05
    2. '(' → logprob: -9.250097274780273
    3. '()' → logprob: -14.625097274780273
    4. '('' → logprob: -15.000097274780273
    5. '(
' → logprob: -15.375097274780273
    6. '("_' → logprob: -16.750097274780273
    7. '(f' → logprob: -16.875097274780273
    8. '("")' → logprob: -17.375097274780273
    9. '("'' → logprob: -17.750097274780273
    10. '(">' → logprob: -19.250097274780273

Token 501: 'cut' (ID: 9804)
  Prédit: 'Invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Invalid' → logprob: -0.035503774881362915
    2. 'cut' → logprob: -3.41050386428833
    3. '"' → logprob: -7.28550386428833
    4. ' Invalid' → logprob: -7.66050386428833
    5. 'Cut' → logprob: -7.91050386428833
    6. 'Unexpected' → logprob: -8.535503387451172
    7. ' cut' → logprob: -10.285503387451172
    8. 'Internal' → logprob: -10.910503387451172
    9. 'Impossible' → logprob: -11.035503387451172
    10. 'invalid' → logprob: -11.035503387451172

Token 502: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -2.4034345187828876e-05
    2. '_' → logprob: -10.87502384185791
    3. 'start' → logprob: -13.25002384185791
    4. ' _' → logprob: -14.12502384185791
    5. 'Start' → logprob: -14.37502384185791
    6. '_started' → logprob: -15.25002384185791
    7. '_START' → logprob: -15.50002384185791
    8. 's' → logprob: -15.50002384185791
    9. '_finish' → logprob: -15.75002384185791
    10. '"_' → logprob: -15.75002384185791

Token 503: ' cannot' (ID: 6284)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.07388321310281754
    2. ' not' → logprob: -3.573883295059204
    3. ' cannot' → logprob: -4.073883056640625
    4. ' is' → logprob: -4.198883056640625
    5. 'must' → logprob: -5.448883056640625
    6. ' invalid' → logprob: -6.198883056640625
    7. ' out' → logprob: -6.573883056640625
    8. ' lies' → logprob: -6.573883056640625
    9. ' outside' → logprob: -7.448883056640625
    10. ' position' → logprob: -8.198883056640625

Token 504: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.03544141724705696
    2. 'be' → logprob: -3.6604413986206055
    3. ' lie' → logprob: -4.7854413986206055
    4. 'equal' → logprob: -8.535441398620605
    5. ' equal' → logprob: -9.160441398620605
    6. 'exact' → logprob: -9.410441398620605
    7. ' fall' → logprob: -9.910441398620605
    8. ' coincide' → logprob: -9.910441398620605
    9. 'lie' → logprob: -10.035441398620605
    10. '	be' → logprob: -10.160441398620605

Token 505: ' at' (ID: 540)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.9194406270980835
    2. 'on' → logprob: -1.5444406270980835
    3. 'at' → logprob: -2.044440746307373
    4. ' at' → logprob: -2.044440746307373
    5. 'exact' → logprob: -2.544440746307373
    6. ' exactly' → logprob: -3.419440746307373
    7. 'a' → logprob: -4.794440746307373
    8. 'equal' → logprob: -5.044440746307373
    9. ' a' → logprob: -6.294440746307373
    10. ' equal' → logprob: -7.169440746307373

Token 506: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25168007612228394
    2. 'corner' → logprob: -2.2516801357269287
    3. ' a' → logprob: -2.3766801357269287
    4. 'corn' → logprob: -4.50167989730835
    5. ' corner' → logprob: -5.12667989730835
    6. 'an' → logprob: -5.75167989730835
    7. ' corners' → logprob: -6.75167989730835
    8. ' an' → logprob: -7.00167989730835
    9. 'the' → logprob: -7.12667989730835
    10. ' the' → logprob: -7.12667989730835

Token 507: ' corner' (ID: 14194)
  Prédit: 'corner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'corner' → logprob: -0.02069498412311077
    2. ' corner' → logprob: -3.8956949710845947
    3. 'per' → logprob: -9.270694732666016
    4. 'corn' → logprob: -9.895694732666016
    5. '_corner' → logprob: -12.895694732666016
    6. 'n' → logprob: -13.145694732666016
    7. 'vertex' → logprob: -14.270694732666016
    8. 'c' → logprob: -14.395694732666016
    9. 'cor' → logprob: -14.770694732666016
    10. 'Corner' → logprob: -15.145694732666016

Token 508: '.")

' (ID: 79197)
  Prédit: '.")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.")' → logprob: -0.015263106673955917
    2. '")' → logprob: -4.765263080596924
    3. ' or' → logprob: -5.765263080596924
    4. '.")

' → logprob: -6.140263080596924
    5. '.")
' → logprob: -6.765263080596924
    6. ')")' → logprob: -9.140263557434082
    7. '.' → logprob: -10.765263557434082
    8. ')' → logprob: -10.890263557434082
    9. '.)' → logprob: -11.765263557434082
    10. '.")
' → logprob: -12.015263557434082

Token 509: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10176903009414673
    2. ' if' → logprob: -2.476768970489502
    3. ' cut' → logprob: -5.476768970489502
    4. 'if' → logprob: -5.976768970489502
    5. '        ' → logprob: -6.476768970489502
    6. '<|end|>' → logprob: -6.851768970489502
    7. '        
' → logprob: -7.476768970489502
    8. 'n' → logprob: -7.851768970489502
    9. '#' → logprob: -8.47676944732666
    10. ' i' → logprob: -8.72676944732666

Token 510: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.040056262165308
    2. '       ' → logprob: -4.415056228637695
    3. '#' (adapté à ' #') → logprob: -4.540056228637695
    4. 'new' → logprob: -5.540056228637695
    5. 'cut' → logprob: -5.540056228637695
    6. 'w' → logprob: -5.665056228637695
    7. ' if' → logprob: -6.040056228637695
    8. 'x' → logprob: -7.290056228637695
    9. 'n' → logprob: -8.040056228637695
    10. 'points' → logprob: -8.415056228637695

Token 511: ' The' (ID: 623)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09430666267871857
    2. '#' → logprob: -2.719306707382202
    3. 'cut' → logprob: -4.844306468963623
    4. 'cuts' → logprob: -4.969306468963623
    5. 'w' → logprob: -5.094306468963623
    6. 'new' → logprob: -6.719306468963623
    7. ' if' → logprob: -7.469306468963623
    8. 'width' → logprob: -8.594306945800781
    9. 'x' → logprob: -8.844306945800781
    10. 'pieces' → logprob: -9.094306945800781

Token 512: ' cut' (ID: 6092)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7270747423171997
    2. 'w' → logprob: -1.1020747423171997
    3. 'cut' → logprob: -2.72707462310791
    4. '
' → logprob: -3.60207462310791
    5. '#' → logprob: -3.97707462310791
    6. ' cut' → logprob: -4.47707462310791
    7. 'cuts' → logprob: -4.72707462310791
    8. ' if' → logprob: -4.72707462310791
    9. 'def' → logprob: -5.10207462310791
    10. 'x' → logprob: -5.35207462310791

Token 513: ' surface' (ID: 9753)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.7414751052856445
    2. 'line' → logprob: -1.9914751052856445
    3. '_line' → logprob: -2.8664751052856445
    4. 'start' → logprob: -3.3664751052856445
    5. 's' → logprob: -3.4914751052856445
    6. 'point' → logprob: -3.4914751052856445
    7. '#' → logprob: -3.8664751052856445
    8. '_position' → logprob: -3.9914751052856445
    9. 'cuts' → logprob: -4.1164751052856445
    10. 'length' → logprob: -4.4914751052856445

Token 514: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4308549463748932
    2. 'length' → logprob: -2.3058550357818604
    3. 's' → logprob: -2.8058550357818604
    4. ' will' → logprob: -3.5558550357818604
    5. ' length' → logprob: -3.5558550357818604
    6. ' starts' → logprob: -3.9308550357818604
    7. '_length' → logprob: -4.055854797363281
    8. '#' → logprob: -4.555854797363281
    9. 'is' → logprob: -4.805854797363281
    10. '=' → logprob: -4.930854797363281

Token 515: ' orth' (ID: 35656)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.8481138944625854
    2. 'offset' → logprob: -1.8481138944625854
    3. ' offset' → logprob: -2.348114013671875
    4. 'edge' → logprob: -2.473114013671875
    5. '(' → logprob: -2.598114013671875
    6. ' perpendicular' → logprob: -2.723114013671875
    7. ' edge' → logprob: -2.973114013671875
    8. ' at' → logprob: -3.473114013671875
    9. 'per' → logprob: -3.473114013671875
    10. 'cut' → logprob: -3.598114013671875

Token 516: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -4.8232690460281447e-05
    2. 'ogon' → logprob: -10.000048637390137
    3. 'agonal' → logprob: -13.750048637390137
    4. 'og' → logprob: -14.375048637390137
    5. 'ogona' → logprob: -14.375048637390137
    6. 'ogo' → logprob: -15.125048637390137
    7. '```' → logprob: -16.12504768371582
    8. 'ogan' → logprob: -16.62504768371582
    9. '   ' → logprob: -17.25004768371582
    10. 'ogal' → logprob: -17.62504768371582

Token 517: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.04894750192761421
    2. 'to' → logprob: -3.04894757270813
    3. '<|end|>' → logprob: -8.79894733428955
    4. ',' → logprob: -9.42394733428955
    5. ' and' → logprob: -9.67394733428955
    6. '.' → logprob: -11.17394733428955
    7. '       ' → logprob: -11.42394733428955
    8. '#' → logprob: -12.17394733428955
    9. ' at' → logprob: -12.17394733428955
    10. 'and' → logprob: -12.17394733428955

Token 518: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6837137937545776
    2. ' the' → logprob: -0.9337137937545776
    3. 'edges' → logprob: -2.808713912963867
    4. ' edges' → logprob: -3.308713912963867
    5. 'self' → logprob: -5.433713912963867
    6. '[' → logprob: -8.308713912963867
    7. ' self' → logprob: -8.308713912963867
    8. '[
' → logprob: -8.933713912963867
    9. 'that' → logprob: -10.058713912963867
    10. 'edge' → logprob: -10.183713912963867

Token 519: ' side' (ID: 4307)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.917204737663269
    2. 'edges' → logprob: -1.542204737663269
    3. ' edge' → logprob: -2.4172048568725586
    4. 'cut' → logprob: -2.5422048568725586
    5. 'top' → logprob: -2.7922048568725586
    6. ' edges' → logprob: -3.1672048568725586
    7. 'direction' → logprob: -3.1672048568725586
    8. 'piece' → logprob: -3.6672048568725586
    9. ' direction' → logprob: -4.792204856872559
    10. 'current' → logprob: -5.042204856872559

Token 520: ' face' (ID: 4950)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.653516411781311
    2. ',' → logprob: -1.778516411781311
    3. ' at' → logprob: -2.0285162925720215
    4. ' and' → logprob: -2.1535162925720215
    5. ' of' → logprob: -2.7785162925720215
    6. 'and' → logprob: -3.1535162925720215
    7. '.' → logprob: -3.6535162925720215
    8. ' on' → logprob: -3.7785162925720215
    9. 'of' → logprob: -3.9035162925720215
    10. 'length' → logprob: -3.9035162925720215

Token 521: ' on' (ID: 402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7214223742485046
    2. '.' → logprob: -1.7214224338531494
    3. ' and' → logprob: -1.7214224338531494
    4. '       ' → logprob: -2.5964224338531494
    5. ',
' → logprob: -3.8464224338531494
    6. '.
' → logprob: -4.34642219543457
    7. '<|end|>' → logprob: -4.59642219543457
    8. '#' → logprob: -4.84642219543457
    9. 's' → logprob: -4.97142219543457
    10. ' (' → logprob: -5.47142219543457

Token 522: ' which' (ID: 1118)
  Prédit: 'which'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'which' → logprob: -0.5618749260902405
    2. ' which' → logprob: -1.3118748664855957
    3. 'the' → logprob: -2.4368748664855957
    4. 'edge' → logprob: -3.1868748664855957
    5. ' the' → logprob: -4.061874866485596
    6. ' edge' → logprob: -5.311874866485596
    7. 'self' → logprob: -6.311874866485596
    8. 'that' → logprob: -6.686874866485596
    9. 'cut' → logprob: -6.936874866485596
    10. 'this' → logprob: -6.936874866485596

Token 523: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3480212986469269
    2. ' the' → logprob: -1.5980212688446045
    3. 'cut' → logprob: -2.5980212688446045
    4. 'we' → logprob: -5.348021507263184
    5. 'it' → logprob: -5.973021507263184
    6. ' cut' → logprob: -5.973021507263184
    7. 'edge' → logprob: -6.098021507263184
    8. ' it' → logprob: -6.598021507263184
    9. 'self' → logprob: -6.598021507263184
    10. '       ' → logprob: -7.223021507263184

Token 524: ' starting' (ID: 8601)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.1798727810382843
    2. ' cut' → logprob: -1.804872751235962
    3. ')' → logprob: -11.054872512817383
    4. '_cut' → logprob: -11.054872512817383
    5. 'edge' → logprob: -11.179872512817383
    6. 'token' → logprob: -11.554872512817383
    7. ' edge' → logprob: -11.679872512817383
    8. ' cutting' → logprob: -12.054872512817383
    9. 'break' → logprob: -12.054872512817383
    10. '=cut' → logprob: -12.179872512817383

Token 525: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.20067274570465088
    2. ' point' → logprob: -1.9506727457046509
    3. 'edge' → logprob: -4.075672626495361
    4. ' edge' → logprob: -4.325672626495361
    5. 'cut' → logprob: -5.575672626495361
    6. 'position' → logprob: -5.950672626495361
    7. ' cut' → logprob: -7.075672626495361
    8. '#' → logprob: -7.825672626495361
    9. ' position' → logprob: -8.07567310333252
    10. ')' → logprob: -8.57567310333252

Token 526: ' exists' (ID: 13031)
  Prédit: ' lies'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lies' → logprob: -0.06355992704629898
    2. 'lies' → logprob: -2.9385600090026855
    3. ' is' → logprob: -5.5635600090026855
    4. ' of' → logprob: -5.6885600090026855
    5. 'is' → logprob: -7.4385600090026855
    6. 'of' → logprob: -7.9385600090026855
    7. ' falls' → logprob: -9.813559532165527
    8. ' rests' → logprob: -9.938559532165527
    9. 'lie' → logprob: -10.063559532165527
    10. '   ' → logprob: -10.626059532165527

Token 527: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7324306964874268
    2. ',' → logprob: -1.7324306964874268
    3. '.' → logprob: -1.7324306964874268
    4. ' if' → logprob: -2.7324306964874268
    5. ' and' → logprob: -2.8574306964874268
    6. '#' → logprob: -4.107430458068848
    7. ' cut' → logprob: -5.482430458068848
    8. '.
' → logprob: -5.857430458068848
    9. '<|end|>' → logprob: -5.982430458068848
    10. '        
' → logprob: -6.107430458068848

Token 528: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02788970246911049
    2. ' if' → logprob: -4.402889728546143
    3. '<|end|>' → logprob: -5.152889728546143
    4. ',' → logprob: -5.527889728546143
    5. '.' → logprob: -6.152889728546143
    6. '        
' → logprob: -6.527889728546143
    7. ' and' → logprob: -7.027889728546143
    8. '#' → logprob: -8.777889251708984
    9. '        ' → logprob: -8.902889251708984
    10. ' cut' → logprob: -9.277889251708984

Token 529: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2834388017654419
    2. ' if' → logprob: -1.783438801765442
    3. '       ' → logprob: -3.0334386825561523
    4. '#' (adapté à ' #') → logprob: -4.033438682556152
    5. 'cut' → logprob: -5.658438682556152
    6. 'next' → logprob: -6.408438682556152
    7. ' next' → logprob: -6.533438682556152
    8. 'w' → logprob: -6.783438682556152
    9. ' cut' → logprob: -7.033438682556152
    10. 'new' → logprob: -7.033438682556152

Token 530: ' That' (ID: 4569)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05122248828411102
    2. '#' → logprob: -3.676222562789917
    3. 'cut' → logprob: -4.926222324371338
    4. ' if' → logprob: -5.301222324371338
    5. 'x' → logprob: -5.676222324371338
    6. 'w' → logprob: -6.176222324371338
    7. '       ' → logprob: -6.176222324371338
    8. 'new' → logprob: -6.551222324371338
    9. 'next' → logprob: -6.801222324371338
    10. 'from' → logprob: -8.301222801208496

Token 531: ' means' (ID: 4748)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.44164618849754333
    2. '#' → logprob: -1.5666462182998657
    3. ' is' → logprob: -3.191646099090576
    4. '
' → logprob: -3.316646099090576
    5. ' if' → logprob: -3.441646099090576
    6. 'w' → logprob: -4.316646099090576
    7. 'is' → logprob: -4.941646099090576
    8. 'cut' → logprob: -5.191646099090576
    9. ''s' → logprob: -5.816646099090576
    10. ' #' → logprob: -6.441646099090576

Token 532: ' we' (ID: 581)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6097949743270874
    2. 'if' → logprob: -0.8597949743270874
    3. '
' → logprob: -4.109795093536377
    4. 'cut' → logprob: -4.484795093536377
    5. '       ' → logprob: -6.734795093536377
    6. ' cut' → logprob: -6.859795093536377
    7. 'the' → logprob: -6.984795093536377
    8. ' the' → logprob: -6.984795093536377
    9. '#' → logprob: -7.234795093536377
    10. ' that' → logprob: -8.484794616699219

Token 533: ' cut' (ID: 6092)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -1.4474424123764038
    2. ' cut' → logprob: -1.5724424123764038
    3. ' can' → logprob: -1.6974424123764038
    4. ' continue' → logprob: -2.5724425315856934
    5. ' will' → logprob: -2.9474425315856934
    6. ' have' → logprob: -3.0724425315856934
    7. ' should' → logprob: -3.8224425315856934
    8. 'cut' → logprob: -3.8224425315856934
    9. '_cut' → logprob: -4.072442531585693
    10. '_' → logprob: -4.197442531585693

Token 534: ' perpendicular' (ID: 137754)
  Prédit: ' along'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' along' → logprob: -0.7222226858139038
    2. ' the' → logprob: -1.3472226858139038
    3. ' into' → logprob: -2.4722228050231934
    4. ' across' → logprob: -3.4722228050231934
    5. 'along' → logprob: -3.9722228050231934
    6. 'per' → logprob: -4.097222805023193
    7. ' at' → logprob: -4.222222805023193
    8. ' per' → logprob: -4.347222805023193
    9. ' perpendicular' → logprob: -4.347222805023193
    10. ' through' → logprob: -4.597222805023193

Token 535: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.018302347511053085
    2. 'to' → logprob: -4.0183024406433105
    3. '<|end|>' → logprob: -9.143301963806152
    4. '<|end|>' → logprob: -12.018301963806152
    5. ',' → logprob: -12.393301963806152
    6. '```' → logprob: -12.518301963806152
    7. ' ' → logprob: -12.643301963806152
    8. '#' → logprob: -12.768301963806152
    9. 's' → logprob: -12.893301963806152
    10. '_to' → logprob: -13.143301963806152

Token 536: ' that' (ID: 484)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3271951675415039
    2. ' the' → logprob: -1.327195167541504
    3. 'edges' → logprob: -4.952195167541504
    4. 'self' → logprob: -5.702195167541504
    5. ' edges' → logprob: -6.327195167541504
    6. 'that' → logprob: -7.077195167541504
    7. ' that' → logprob: -7.452195167541504
    8. ' self' → logprob: -9.327195167541504
    9. 'this' → logprob: -10.452195167541504
    10. '...' → logprob: -10.952195167541504

Token 537: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.24714526534080505
    2. 'edge' → logprob: -2.247145175933838
    3. ' side' → logprob: -2.497145175933838
    4. 'side' → logprob: -3.497145175933838
    5. 'face' → logprob: -8.122145652770996
    6. ' face' → logprob: -8.497145652770996
    7. ' surface' → logprob: -11.122145652770996
    8. 'surface' → logprob: -11.122145652770996
    9. '(edge' → logprob: -11.122145652770996
    10. '	side' → logprob: -11.247145652770996

Token 538: ' inside' (ID: 6772)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6611160039901733
    2. '.' → logprob: -1.1611160039901733
    3. '       ' → logprob: -3.036116123199463
    4. ' at' → logprob: -3.536116123199463
    5. ' if' → logprob: -3.786116123199463
    6. ',
' → logprob: -3.911116123199463
    7. ' and' → logprob: -4.286116123199463
    8. ' in' → logprob: -4.286116123199463
    9. '.
' → logprob: -4.536116123199463
    10. '<|end|>' → logprob: -6.036116123199463

Token 539: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2295082062482834
    2. 'the' → logprob: -1.6045081615447998
    3. '       ' → logprob: -6.479508399963379
    4. 'self' → logprob: -6.729508399963379
    5. '   ' → logprob: -7.729508399963379
    6. ' of' → logprob: -7.854508399963379
    7. ' self' → logprob: -8.979508399963379
    8. 'def' → logprob: -9.854508399963379
    9. ' this' → logprob: -10.229508399963379
    10. '           ' → logprob: -10.354508399963379

Token 540: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.033998578786849976
    2. ' piece' → logprob: -3.908998489379883
    3. 'rectangle' → logprob: -5.283998489379883
    4. 'plane' → logprob: -6.033998489379883
    5. 'rect' → logprob: -6.533998489379883
    6. ' rectangle' → logprob: -7.283998489379883
    7. 'top' → logprob: -7.408998489379883
    8. 'surface' → logprob: -7.533998489379883
    9. 'self' → logprob: -7.658998489379883
    10. 'material' → logprob: -8.033998489379883

Token 541: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05732077732682228
    2. ' if' → logprob: -3.0573208332061768
    3. ',' → logprob: -5.557320594787598
    4. '.' → logprob: -5.807320594787598
    5. '        
' → logprob: -7.557320594787598
    6. 'if' → logprob: -7.932320594787598
    7. ' and' → logprob: -8.557320594787598
    8. ' to' → logprob: -8.682320594787598
    9. ' in' → logprob: -9.307320594787598
    10. ' at' → logprob: -9.557320594787598

Token 542: ' splitting' (ID: 87130)
  Prédit: ' creating'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' creating' → logprob: -0.998587429523468
    2. '       ' → logprob: -1.2485873699188232
    3. ' so' → logprob: -1.8735873699188232
    4. ' which' → logprob: -2.7485873699188232
    5. ' and' → logprob: -3.4985873699188232
    6. '        
' → logprob: -3.6235873699188232
    7. ' splitting' → logprob: -4.248587608337402
    8. ' resulting' → logprob: -4.998587608337402
    9. ' perpendicular' → logprob: -5.123587608337402
    10. ' making' → logprob: -5.248587608337402

Token 543: ' it' (ID: 480)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7186340093612671
    2. 'the' → logprob: -0.9686340093612671
    3. 'self' → logprob: -2.4686341285705566
    4. '       ' → logprob: -4.843634128570557
    5. 'w' → logprob: -4.968634128570557
    6. ' self' → logprob: -5.093634128570557
    7. 'if' → logprob: -5.093634128570557
    8. ' into' → logprob: -5.218634128570557
    9. ' at' → logprob: -5.718634128570557
    10. ' if' → logprob: -6.093634128570557

Token 544: ' into' (ID: 1511)
  Prédit: ' into'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' into' → logprob: -0.4025828242301941
    2. ' along' → logprob: -1.5275828838348389
    3. 'into' → logprob: -2.902582883834839
    4. ' at' → logprob: -3.402582883834839
    5. 'along' → logprob: -4.77758264541626
    6. ' in' → logprob: -5.27758264541626
    7. 'self' → logprob: -6.27758264541626
    8. 'in' → logprob: -6.27758264541626
    9. ' vertically' → logprob: -6.77758264541626
    10. '_into' → logprob: -7.15258264541626

Token 545: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.20371997356414795
    2. '[
' → logprob: -2.7037200927734375
    3. ' two' → logprob: -2.8287200927734375
    4. '[' → logprob: -3.0787200927734375
    5. 'Rect' → logprob: -5.9537200927734375
    6. '2' → logprob: -6.5787200927734375
    7. '(
' → logprob: -6.5787200927734375
    8. '#' → logprob: -6.7037200927734375
    9. 'if' → logprob: -6.8287200927734375
    10. '(' → logprob: -6.8287200927734375

Token 546: '.
' (ID: 558)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.3299252688884735
    2. ' pieces' → logprob: -1.829925298690796
    3. 'rect' → logprob: -3.079925298690796
    4. 'w' → logprob: -4.079925060272217
    5. ' lines' → logprob: -4.204925060272217
    6. 'lines' → logprob: -4.579925060272217
    7. '.' → logprob: -5.204925060272217
    8. '#' → logprob: -5.204925060272217
    9. 'if' → logprob: -5.454925060272217
    10. ' if' → logprob: -5.704925060272217

Token 547: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23755866289138794
    2. 'if' → logprob: -2.237558603286743
    3. ' if' → logprob: -2.362558603286743
    4. '
' → logprob: -5.987558841705322
    5. 'new' → logprob: -6.612558841705322
    6. ' new' → logprob: -6.737558841705322
    7. '#' → logprob: -7.112558841705322
    8. 'w' → logprob: -7.237558841705322
    9. '        
' → logprob: -7.237558841705322
    10. 'cut' → logprob: -7.237558841705322

Token 548: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0755850076675415
    2. ' if' → logprob: -3.200584888458252
    3. '       ' → logprob: -3.575584888458252
    4. '#' (adapté à ' #') → logprob: -6.825584888458252
    5. 'w' → logprob: -6.825584888458252
    6. 'new' → logprob: -7.200584888458252
    7. 'cut' → logprob: -7.450584888458252
    8. 'x' → logprob: -9.07558536529541
    9. 'next' → logprob: -9.07558536529541
    10. 'n' → logprob: -9.82558536529541

Token 549: ' Since' (ID: 12265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0760635957121849
    2. ' if' → logprob: -2.701063632965088
    3. '       ' → logprob: -5.576063632965088
    4. '#' → logprob: -6.951063632965088
    5. 'w' → logprob: -8.20106315612793
    6. 'cut' → logprob: -8.20106315612793
    7. 'If' → logprob: -8.32606315612793
    8. 'new' → logprob: -8.57606315612793
    9. 'next' → logprob: -9.45106315612793
    10. ' next' → logprob: -10.20106315612793

Token 550: ' the' (ID: 290)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.4968026876449585
    2. ' the' → logprob: -1.8718026876449585
    3. ' edges' → logprob: -1.9968026876449585
    4. 'edge' → logprob: -2.996802806854248
    5. 'the' → logprob: -3.621802806854248
    6. 'edges' → logprob: -4.496802806854248
    7. 'self' → logprob: -4.871802806854248
    8. ' self' → logprob: -5.121802806854248
    9. 'we' → logprob: -9.49680233001709
    10. ' this' → logprob: -9.74680233001709

Token 551: ' cake' (ID: 22162)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.8932843804359436
    2. ' edge' → logprob: -2.018284320831299
    3. 'if' → logprob: -2.268284320831299
    4. 'w' → logprob: -2.643284320831299
    5. '_w' → logprob: -2.893284320831299
    6. 'edges' → logprob: -2.893284320831299
    7. ' edges' → logprob: -3.018284320831299
    8. 'cut' → logprob: -3.143284320831299
    9. '#' → logprob: -3.893284320831299
    10. ' cut' → logprob: -4.143284320831299

Token 552: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.08011750131845474
    2. 'is' → logprob: -3.3301174640655518
    3. ' has' → logprob: -4.080117702484131
    4. ' can' → logprob: -4.330117702484131
    5. 'has' → logprob: -5.830117702484131
    6. 'can' → logprob: -6.705117702484131
    7. ' consists' → logprob: -6.830117702484131
    8. ''s' → logprob: -7.080117702484131
    9. 'depth' → logprob: -7.205117702484131
    10. ' lies' → logprob: -7.705117702484131

Token 553: ' always' (ID: 3324)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.21052365005016327
    2. 'a' → logprob: -2.3355236053466797
    3. ' rectangular' → logprob: -2.7105236053466797
    4. '3' → logprob: -4.71052360534668
    5. 'represented' → logprob: -6.08552360534668
    6. 'Rect' → logprob: -6.08552360534668
    7. 'flat' → logprob: -6.21052360534668
    8. ' a' → logprob: -6.21052360534668
    9. 'horizontal' → logprob: -6.71052360534668
    10. '2' → logprob: -7.08552360534668

Token 554: ' rectangular' (ID: 79707)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.6378306150436401
    2. ' rectangular' → logprob: -1.0128306150436401
    3. 'a' → logprob: -2.5128307342529297
    4. ' a' → logprob: -4.26283073425293
    5. 'Rect' → logprob: -6.01283073425293
    6. 'uniform' → logprob: -6.88783073425293
    7. ' rect' → logprob: -7.01283073425293
    8. 'ass' → logprob: -7.01283073425293
    9. ' assumed' → logprob: -7.26283073425293
    10. ' uniform' → logprob: -7.38783073425293

Token 555: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03490613028407097
    2. ',
' → logprob: -3.9099061489105225
    3. ' in' → logprob: -5.284905910491943
    4. ' and' → logprob: -5.534905910491943
    5. '       ' → logprob: -6.659905910491943
    6. 'and' → logprob: -7.534905910491943
    7. 'self' → logprob: -7.534905910491943
    8. ' ,' → logprob: -7.534905910491943
    9. ' self' → logprob: -7.784905910491943
    10. ' we' → logprob: -8.284906387329102

Token 556: ' vertical' (ID: 17679)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8533143997192383
    2. ' the' → logprob: -2.2283143997192383
    3. 'cut' → logprob: -2.3533143997192383
    4. 'we' → logprob: -2.6033143997192383
    5. 'rect' → logprob: -3.1033143997192383
    6. 'has' → logprob: -3.6033143997192383
    7. 'flat' → logprob: -3.6033143997192383
    8. '       ' → logprob: -3.8533143997192383
    9. ' rectangular' → logprob: -4.228314399719238
    10. '#' → logprob: -4.228314399719238

Token 557: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015019581653177738
    2. ',
' → logprob: -4.765019416809082
    3. ' in' → logprob: -7.265019416809082
    4. 'cut' → logprob: -7.265019416809082
    5. ' cut' → logprob: -7.390019416809082
    6. '#' → logprob: -7.515019416809082
    7. '       ' → logprob: -7.765019416809082
    8. 'layers' → logprob: -7.890019416809082
    9. 'ly' → logprob: -8.140019416809082
    10. ' to' → logprob: -8.265019416809082

Token 558: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018547531217336655
    2. '#' → logprob: -4.268547534942627
    3. ' the' → logprob: -6.018547534942627
    4. ' if' → logprob: -6.893547534942627
    5. ' we' → logprob: -7.518547534942627
    6. 'the' → logprob: -9.268547058105469
    7. ' #' → logprob: -9.893547058105469
    8. 'we' → logprob: -10.143547058105469
    9. '   ' → logprob: -10.268547058105469
    10. 'if' → logprob: -10.893547058105469

Token 559: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.8084598779678345
    2. '       ' → logprob: -0.8084598779678345
    3. ' if' → logprob: -2.433459758758545
    4. 'if' → logprob: -4.058459758758545
    5. ' #' → logprob: -6.683459758758545
    6. ' the' → logprob: -7.433459758758545
    7. 'w' → logprob: -8.058460235595703
    8. '   ' → logprob: -8.183460235595703
    9. 'cut' → logprob: -8.683460235595703
    10. 'self' → logprob: -8.808460235595703

Token 560: ' the' (ID: 290)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7197352051734924
    2. 'if' → logprob: -1.0947351455688477
    3. ' if' → logprob: -1.8447351455688477
    4. '       ' → logprob: -4.719735145568848
    5. 'w' → logprob: -5.469735145568848
    6. 'cut' → logprob: -6.219735145568848
    7. ' #' → logprob: -6.594735145568848
    8. ' cut' → logprob: -6.969735145568848
    9. 'the' → logprob: -7.594735145568848
    10. ' w' → logprob: -7.844735145568848

Token 561: ' cut' (ID: 6092)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5265546441078186
    2. 'cut' → logprob: -1.4015545845031738
    3. ' cut' → logprob: -2.151554584503174
    4. '#' → logprob: -4.026554584503174
    5. ' if' → logprob: -4.026554584503174
    6. 'x' → logprob: -6.026554584503174
    7. 'direction' → logprob: -6.776554584503174
    8. '
' → logprob: -7.401554584503174
    9. ' direction' → logprob: -7.401554584503174
    10. 'def' → logprob: -7.651554584503174

Token 562: ' line' (ID: 2543)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6648220419883728
    2. ' will' → logprob: -1.9148221015930176
    3. ' direction' → logprob: -2.4148221015930176
    4. ' line' → logprob: -2.7898221015930176
    5. 'per' → logprob: -3.4148221015930176
    6. 'is' → logprob: -3.5398221015930176
    7. ' continues' → logprob: -4.414822101593018
    8. 's' → logprob: -4.414822101593018
    9. 'will' → logprob: -4.539822101593018
    10. ' splits' → logprob: -4.664822101593018

Token 563: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4325903356075287
    2. ' will' → logprob: -1.307590365409851
    3. ' runs' → logprob: -2.9325902462005615
    4. 'will' → logprob: -5.432590484619141
    5. ' must' → logprob: -5.682590484619141
    6. ' goes' → logprob: -5.682590484619141
    7. ' splits' → logprob: -5.932590484619141
    8. 's' → logprob: -6.182590484619141
    9. ' can' → logprob: -6.182590484619141
    10. ' ' → logprob: -6.932590484619141

Token 564: ' aligned' (ID: 48224)
  Prédit: ' parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parallel' → logprob: -0.37703293561935425
    2. ' either' → logprob: -1.627032995223999
    3. 'parallel' → logprob: -2.877032995223999
    4. ' perpendicular' → logprob: -3.877032995223999
    5. ' always' → logprob: -4.12703275680542
    6. ' vertical' → logprob: -4.50203275680542
    7. 'either' → logprob: -5.75203275680542
    8. ' horizontal' → logprob: -5.87703275680542
    9. 'vertical' → logprob: -6.25203275680542
    10. 'horizontal' → logprob: -6.75203275680542

Token 565: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.09628861397504807
    2. ' vertically' → logprob: -3.5962886810302734
    3. 'with' → logprob: -3.7212886810302734
    4. ' along' → logprob: -4.721288681030273
    5. ' either' → logprob: -4.846288681030273
    6. ' to' → logprob: -5.346288681030273
    7. ' perpendicular' → logprob: -5.346288681030273
    8. ' horizontally' → logprob: -5.596288681030273
    9. ' parallel' → logprob: -6.221288681030273
    10. ' vertical' → logprob: -6.221288681030273

Token 566: ' edges' (ID: 22569)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3100917339324951
    2. ' the' → logprob: -1.8100917339324951
    3. 'either' → logprob: -3.060091733932495
    4. ' either' → logprob: -3.685091733932495
    5. ' one' → logprob: -4.560091972351074
    6. 'one' → logprob: -5.435091972351074
    7. 'x' → logprob: -5.435091972351074
    8. 'self' → logprob: -5.685091972351074
    9. 'an' → logprob: -6.060091972351074
    10. ' an' → logprob: -7.185091972351074

Token 567: ' either' (ID: 4784)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2508752644062042
    2. '[line' → logprob: -2.000875234603882
    3. '[next' → logprob: -4.000875473022461
    4. '(edge' → logprob: -4.250875473022461
    5. '[self' → logprob: -4.250875473022461
    6. '=edge' → logprob: -5.250875473022461
    7. '[
' → logprob: -5.500875473022461
    8. ' at' → logprob: -5.500875473022461
    9. ' edges' → logprob: -6.250875473022461
    10. '[in' → logprob: -6.375875473022461

Token 568: ' vertical' (ID: 17679)
  Prédit: ' horizontally'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' horizontally' → logprob: -1.4272700548171997
    2. 'h' → logprob: -2.05226993560791
    3. 'vert' → logprob: -2.30226993560791
    4. ' along' → logprob: -2.42726993560791
    5. 'per' → logprob: -2.42726993560791
    6. ' vertically' → logprob: -2.55226993560791
    7. 'parallel' → logprob: -2.55226993560791
    8. ' parallel' → logprob: -2.67726993560791
    9. 'along' → logprob: -3.42726993560791
    10. 'horizontal' → logprob: -3.92726993560791

Token 569: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.07001524418592453
    2. 'or' → logprob: -2.6950151920318604
    3. ' if' → logprob: -10.695014953613281
    4. ',' → logprob: -10.695014953613281
    5. ' (' → logprob: -11.445014953613281
    6. 'if' → logprob: -11.445014953613281
    7. ' to' → logprob: -13.320014953613281
    8. '	or' → logprob: -13.320014953613281
    9. '```' → logprob: -13.695014953613281
    10. '(or' → logprob: -13.820014953613281

Token 570: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.5760087370872498
    2. ' horizontal' → logprob: -0.8260087370872498
    3. '(horizontal' → logprob: -11.201008796691895
    4. '_horizontal' → logprob: -11.201008796691895
    5. 'hor' → logprob: -11.326008796691895
    6. 'orizontal' → logprob: -11.451008796691895
    7. ' horiz' → logprob: -12.451008796691895
    8. '.horizontal' → logprob: -12.576008796691895
    9. ' горизонт' → logprob: -12.826008796691895
    10. 'vertical' → logprob: -13.076008796691895

Token 571: '
' (ID: 198)
  Prédit: ' depending'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' depending' → logprob: -1.2766358852386475
    2. ',' → logprob: -1.4016358852386475
    3. '.' → logprob: -1.7766358852386475
    4. ' if' → logprob: -2.4016358852386475
    5. '       ' → logprob: -2.5266358852386475
    6. ' lines' → logprob: -3.6516358852386475
    7. 'if' → logprob: -3.9016358852386475
    8. ' to' → logprob: -4.026636123657227
    9. ' and' → logprob: -4.526636123657227
    10. ' in' → logprob: -4.776636123657227

Token 572: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0049922894686460495
    2. ' if' → logprob: -6.004992485046387
    3. ',' → logprob: -7.004992485046387
    4. '        
' → logprob: -7.129992485046387
    5. '
' → logprob: -8.129992485046387
    6. '<|end|>' → logprob: -8.754992485046387
    7. '.' → logprob: -9.004992485046387
    8. 'if' → logprob: -9.879992485046387
    9. ' and' → logprob: -10.379992485046387
    10. '#' → logprob: -11.254992485046387

Token 573: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0327640771865845
    2. '       ' → logprob: -1.1577640771865845
    3. ' if' → logprob: -1.1577640771865845
    4. '
' → logprob: -4.532763957977295
    5. '#' (adapté à ' #') → logprob: -5.907763957977295
    6. '        
' → logprob: -6.907763957977295
    7. 'new' → logprob: -8.907764434814453
    8. 'x' → logprob: -9.032764434814453
    9. 'cut' → logprob: -9.032764434814453
    10. 'w' → logprob: -9.032764434814453

Token 574: ' Compute' (ID: 45438)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.578555166721344
    2. ' if' → logprob: -1.0785551071166992
    3. '       ' → logprob: -2.328555107116699
    4. '#' → logprob: -7.453555107116699
    5. 'cut' → logprob: -7.953555107116699
    6. 'If' → logprob: -8.7035551071167
    7. ' cut' → logprob: -9.2035551071167
    8. '
' → logprob: -9.5785551071167
    9. 'new' → logprob: -9.8285551071167
    10. ' next' → logprob: -9.8285551071167

Token 575: ' new' (ID: 620)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.8416023254394531
    2. 'if' → logprob: -0.9666023254394531
    3. 'new' → logprob: -2.466602325439453
    4. 'x' → logprob: -2.841602325439453
    5. 'w' → logprob: -4.091602325439453
    6. ' cut' → logprob: -5.091602325439453
    7. '#' → logprob: -5.091602325439453
    8. 'the' → logprob: -5.591602325439453
    9. ' new' → logprob: -5.591602325439453
    10. ' if' → logprob: -5.841602325439453

Token 576: ' sub' (ID: 1543)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.2834491729736328
    2. ' pieces' → logprob: -1.6584491729736328
    3. ' cut' → logprob: -2.533449172973633
    4. ' dimensions' → logprob: -2.783449172973633
    5. ' coordinates' → logprob: -2.908449172973633
    6. ' piece' → logprob: -3.283449172973633
    7. ' widths' → logprob: -3.283449172973633
    8. 'pieces' → logprob: -3.533449172973633
    9. '_w' → logprob: -3.658449172973633
    10. 'cut' → logprob: -3.908449172973633

Token 577: 'pieces' (ID: 71596)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.2206113338470459
    2. 'w' → logprob: -2.095611333847046
    3. 'pieces' → logprob: -3.470611333847046
    4. 'width' → logprob: -3.845611333847046
    5. '_width' → logprob: -4.470611572265625
    6. '_p' → logprob: -6.095611572265625
    7. 'piece' → logprob: -6.220611572265625
    8. '   ' → logprob: -6.470611572265625
    9. 'rect' → logprob: -6.970611572265625
    10. 'sizes' → logprob: -6.970611572265625

Token 578: ' dimensions' (ID: 23995)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6545243263244629
    2. '       ' → logprob: -0.9045243263244629
    3. 'if' → logprob: -3.029524326324463
    4. ',' → logprob: -5.029524326324463
    5. 's' → logprob: -5.279524326324463
    6. '
' → logprob: -6.029524326324463
    7. '        
' → logprob: -6.779524326324463
    8. 'w' → logprob: -6.904524326324463
    9. '[
' → logprob: -6.904524326324463
    10. '[' → logprob: -6.904524326324463

Token 579: ' depending' (ID: 14537)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006072063930332661
    2. '
' → logprob: -5.881072044372559
    3. 'if' → logprob: -6.631072044372559
    4. '        
' → logprob: -7.381072044372559
    5. ' if' → logprob: -7.506072044372559
    6. ',' → logprob: -7.881072044372559
    7. ':' → logprob: -9.006072044372559
    8. '<|end|>' → logprob: -9.506072044372559
    9. '#' → logprob: -10.381072044372559
    10. 'w' → logprob: -10.506072044372559

Token 580: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.5761880278587341
    2. ' on' → logprob: -0.8261880278587341
    3. '	on' → logprob: -8.451188087463379
    4. '<|end|>' → logprob: -11.576188087463379
    5. '   ' → logprob: -11.826188087463379
    6. '       ' → logprob: -12.201188087463379
    7. '<|end|>' → logprob: -12.951188087463379
    8. 'upon' → logprob: -14.076188087463379
    9. ' ' → logprob: -14.201188087463379
    10. 'import' → logprob: -14.451188087463379

Token 581: ' the' (ID: 290)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.25314462184906006
    2. 'edge' → logprob: -1.50314462184906
    3. ' the' → logprob: -7.12814474105835
    4. 'the' → logprob: -8.378144264221191
    5. ' which' → logprob: -9.378144264221191
    6. ' edges' → logprob: -10.753144264221191
    7. '(edge' → logprob: -10.753144264221191
    8. 'which' → logprob: -11.003144264221191
    9. '=edge' → logprob: -11.253144264221191
    10. 'edges' → logprob: -11.878144264221191

Token 582: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.3524966835975647
    2. ' edge' → logprob: -1.22749662399292
    3. 'cut' → logprob: -6.10249662399292
    4. ' cut' → logprob: -7.60249662399292
    5. 'orientation' → logprob: -8.102497100830078
    6. ' orientation' → logprob: -8.227497100830078
    7. ' cutting' → logprob: -8.602497100830078
    8. 'direction' → logprob: -8.977497100830078
    9. 'side' → logprob: -9.102497100830078
    10. ' side' → logprob: -9.477497100830078

Token 583: ' cut' (ID: 6092)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3644569516181946
    2. ' if' → logprob: -1.2394568920135498
    3. 'if' → logprob: -4.364457130432129
    4. ',' → logprob: -7.114457130432129
    5. ':' → logprob: -7.489457130432129
    6. '        
' → logprob: -7.614457130432129
    7. '
' → logprob: -8.614457130432129
    8. '=' → logprob: -8.989457130432129
    9. ' =' → logprob: -9.114457130432129
    10. '```' → logprob: -9.239457130432129

Token 584: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042815785855054855
    2. ' if' → logprob: -3.292815685272217
    3. 'if' → logprob: -5.667815685272217
    4. '        
' → logprob: -7.417815685272217
    5. ',' → logprob: -7.917815685272217
    6. 's' → logprob: -9.042816162109375
    7. '<|end|>' → logprob: -10.167816162109375
    8. 'from' → logprob: -10.667816162109375
    9. ':' → logprob: -11.167816162109375
    10. '        ' → logprob: -11.417816162109375

Token 585: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13658830523490906
    2. ' if' → logprob: -2.2615883350372314
    3. 'if' → logprob: -3.7615883350372314
    4. '
' → logprob: -9.011588096618652
    5. '        
' → logprob: -10.136588096618652
    6. 'n' → logprob: -11.386588096618652
    7. 'w' → logprob: -11.761588096618652
    8. '```' → logprob: -12.011588096618652
    9. 'i' → logprob: -12.261588096618652
    10. ' ' → logprob: -12.511588096618652

Token 586: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0032929708249866962
    2. '       ' → logprob: -6.253293037414551
    3. 'w' → logprob: -7.253293037414551
    4. ' if' → logprob: -7.753293037414551
    5. 'i' → logprob: -8.62829303741455
    6. 'n' → logprob: -11.25329303741455
    7. 'new' → logprob: -11.62829303741455
    8. '#' (adapté à ' #') → logprob: -11.75329303741455
    9. 'cut' → logprob: -11.75329303741455
    10. 'x' → logprob: -12.75329303741455

Token 587: ' For' (ID: 2214)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.012349771335721016
    2. ' if' → logprob: -4.637349605560303
    3. '       ' → logprob: -6.262349605560303
    4. 'w' → logprob: -7.512349605560303
    5. '#' → logprob: -9.762350082397461
    6. 'cut' → logprob: -10.137350082397461
    7. 'new' → logprob: -11.637350082397461
    8. 'x' → logprob: -11.762350082397461
    9. 'width' → logprob: -12.637350082397461
    10. 'i' → logprob: -12.637350082397461

Token 588: ' edges' (ID: 22569)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.16426020860671997
    2. ' edge' → logprob: -1.9142601490020752
    3. 'i' → logprob: -6.164260387420654
    4. 'edges' → logprob: -7.164260387420654
    5. ' edges' → logprob: -8.539259910583496
    6. '0' → logprob: -8.789259910583496
    7. 'cut' → logprob: -8.914259910583496
    8. '(edge' → logprob: -9.164259910583496
    9. ' i' → logprob: -9.289259910583496
    10. 'top' → logprob: -9.289259910583496

Token 589: ':
' (ID: 734)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13697631657123566
    2. '[' → logprob: -2.7619762420654297
    3. ' ' → logprob: -3.2619762420654297
    4. ' in' → logprob: -4.76197624206543
    5. ' ==' → logprob: -4.88697624206543
    6. '==' → logprob: -5.26197624206543
    7. 'in' → logprob: -5.88697624206543
    8. 'if' → logprob: -7.51197624206543
    9. 's' → logprob: -8.26197624206543
    10. 'index' → logprob: -8.26197624206543

Token 590: '       ' (ID: 309)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.394174724817276
    2. ' if' → logprob: -1.5191746950149536
    3. ' ' → logprob: -2.519174814224243
    4. 'if' → logprob: -3.769174814224243
    5. '       ' → logprob: -6.894174575805664
    6. '#' → logprob: -7.269174575805664
    7. '[' → logprob: -7.769174575805664
    8. ' #' → logprob: -7.769174575805664
    9. ' =' → logprob: -8.644174575805664
    10. '=' → logprob: -8.644174575805664

Token 591: ' #' (ID: 1069)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25111424922943115
    2. '#' (adapté à ' #') → logprob: -1.8761142492294312
    3. 'if' → logprob: -3.2511143684387207
    4. ' if' → logprob: -4.501114368438721
    5. ' ' → logprob: -5.001114368438721
    6. '       ' → logprob: -5.001114368438721
    7. ' #' → logprob: -5.376114368438721
    8. '[' → logprob: -7.251114368438721
    9. '   ' → logprob: -9.251113891601562
    10. '[
' → logprob: -11.001113891601562

Token 592: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12565375864505768
    2. '#' → logprob: -2.3756537437438965
    3. 'if' → logprob: -4.0006537437438965
    4. ' ' → logprob: -5.6256537437438965
    5. ' if' → logprob: -6.2506537437438965
    6. '       ' → logprob: -7.7506537437438965
    7. ' #' → logprob: -8.000654220581055
    8. 'top' → logprob: -8.875654220581055
    9. '   ' → logprob: -9.125654220581055
    10. 'If' → logprob: -10.000654220581055

Token 593: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.048318661749362946
    2. '#' → logprob: -3.42331862449646
    3. 'if' → logprob: -4.298318862915039
    4. 'top' → logprob: -8.173318862915039
    5. ' ' → logprob: -8.798318862915039
    6. '[' → logprob: -9.673318862915039
    7. 'Top' → logprob: -9.798318862915039
    8. ' if' → logprob: -9.923318862915039
    9. 'If' → logprob: -9.923318862915039
    10. 'cut' → logprob: -10.173318862915039

Token 594: ':' (ID: 25)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.2953386306762695
    2. ' ==' → logprob: -1.2953386306762695
    3. ':' → logprob: -1.4203386306762695
    4. '(top' → logprob: -2.5453386306762695
    5. 'top' → logprob: -3.0453386306762695
    6. '#' → logprob: -3.9203386306762695
    7. ' top' → logprob: -4.2953386306762695
    8. '==' → logprob: -4.5453386306762695
    9. ' #' → logprob: -4.6703386306762695
    10. ' =' → logprob: -4.9203386306762695

Token 595: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.20779888331890106
    2. 'if' → logprob: -2.832798957824707
    3. '#' → logprob: -3.082798957824707
    4. 'self' → logprob: -3.332798957824707
    5. ' top' → logprob: -4.207798957824707
    6. 'w' → logprob: -4.707798957824707
    7. 'Top' → logprob: -4.957798957824707
    8. '0' → logprob: -5.707798957824707
    9. 'horizontal' → logprob: -5.832798957824707
    10. 'width' → logprob: -6.207798957824707

Token 596: ' edge' (ID: 11165)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5563511252403259
    2. 'if' → logprob: -2.0563511848449707
    3. '
' → logprob: -2.5563511848449707
    4. ':' → logprob: -2.8063511848449707
    5. ',' → logprob: -2.9313511848449707
    6. ' if' → logprob: -3.0563511848449707
    7. 'w' → logprob: -3.8063511848449707
    8. 'width' → logprob: -4.431351184844971
    9. ' (' → logprob: -5.556351184844971
    10. ',
' → logprob: -6.056351184844971

Token 597: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3175027370452881
    2. ':' → logprob: -2.192502737045288
    3. ',' → logprob: -2.442502737045288
    4. ' if' → logprob: -3.442502737045288
    5. ':
' → logprob: -4.567502975463867
    6. '
' → logprob: -4.567502975463867
    7. 'if' → logprob: -5.067502975463867
    8. ',
' → logprob: -5.442502975463867
    9. '<|end|>' → logprob: -5.817502975463867
    10. '<|end|>' → logprob: -6.442502975463867

Token 598: 'cut' (ID: 9804)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5615150928497314
    2. 'self' → logprob: -2.0615150928497314
    3. 'if' → logprob: -2.4365150928497314
    4. 'width' → logprob: -2.9365150928497314
    5. 'horizontal' → logprob: -3.0615150928497314
    6. 'w' → logprob: -3.6865150928497314
    7. '),' → logprob: -4.061514854431152
    8. 'cut' → logprob: -4.436514854431152
    9. '#' → logprob: -4.561514854431152
    10. ' self' → logprob: -4.936514854431152

Token 599: ' surface' (ID: 9753)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.3091455399990082
    2. ' along' → logprob: -2.809145450592041
    3. 'along' → logprob: -3.184145450592041
    4. 'from' → logprob: -3.684145450592041
    5. 'horizontal' → logprob: -4.434145450592041
    6. 'per' → logprob: -4.559145450592041
    7. ' is' → logprob: -4.559145450592041
    8. ')' → logprob: -4.684145450592041
    9. ' at' → logprob: -5.309145450592041
    10. ' from' → logprob: -5.309145450592041

Token 600: ' vertical' (ID: 17679)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3485938310623169
    2. ' runs' → logprob: -2.7235937118530273
    3. 'is' → logprob: -2.8485937118530273
    4. ' goes' → logprob: -3.4735937118530273
    5. ' cuts' → logprob: -3.4735937118530273
    6. ' vertical' → logprob: -4.223593711853027
    7. 'vertical' → logprob: -4.348593711853027
    8. ' at' → logprob: -4.598593711853027
    9. ' perpendicular' → logprob: -4.973593711853027
    10. ' along' → logprob: -5.223593711853027

Token 601: ' line' (ID: 2543)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3246431350708008
    2. ')
' → logprob: -1.4496431350708008
    3. ',' → logprob: -3.824643135070801
    4. '),' → logprob: -4.699643135070801
    5. ' line' → logprob: -5.449643135070801
    6. '):
' → logprob: -6.949643135070801
    7. ' or' → logprob: -7.199643135070801
    8. ')
' → logprob: -7.449643135070801
    9. '),
' → logprob: -7.574643135070801
    10. ' cut' → logprob: -7.574643135070801

Token 602: ' parallel' (ID: 26697)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.77192622423172
    2. ')' → logprob: -1.0219261646270752
    3. ',' → logprob: -2.521926164627075
    4. ' at' → logprob: -3.146926164627075
    5. ' along' → logprob: -4.271926403045654
    6. '),' → logprob: -4.646926403045654
    7. '):
' → logprob: -4.896926403045654
    8. '       ' → logprob: -5.021926403045654
    9. '):' → logprob: -6.146926403045654
    10. ' if' → logprob: -6.271926403045654

Token 603: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1602993607521057
    2. 'to' → logprob: -1.910299301147461
    3. '=' → logprob: -10.410299301147461
    4. ')' → logprob: -11.035299301147461
    5. '   ' → logprob: -11.035299301147461
    6. '#' → logprob: -12.785299301147461
    7. ' ' → logprob: -13.160299301147461
    8. '_to' → logprob: -13.285299301147461
    9. '<|end|>' → logprob: -13.785299301147461
    10. '    ' → logprob: -14.285299301147461

Token 604: ' vertical' (ID: 17679)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13199415802955627
    2. 'depth' → logprob: -2.2569942474365234
    3. 'the' → logprob: -5.131994247436523
    4. 'd' → logprob: -5.131994247436523
    5. ' self' → logprob: -5.631994247436523
    6. ' depth' → logprob: -6.256994247436523
    7. ' the' → logprob: -7.881994247436523
    8. 'y' → logprob: -8.381994247436523
    9. '[self' → logprob: -8.756994247436523
    10. '[' → logprob: -9.006994247436523

Token 605: ' edges' (ID: 22569)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.672422468662262
    2. 'edge' → logprob: -0.922422468662262
    3. ' side' → logprob: -3.797422409057617
    4. 'side' → logprob: -3.797422409057617
    5. ' edges' → logprob: -4.047422409057617
    6. 'edges' → logprob: -4.297422409057617
    7. ')' → logprob: -5.297422409057617
    8. 'axis' → logprob: -5.797422409057617
    9. ' axis' → logprob: -5.922422409057617
    10. 'wall' → logprob: -7.047422409057617

Token 606: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6444301009178162
    2. ')
' → logprob: -0.7694301009178162
    3. ',' → logprob: -5.144430160522461
    4. '       ' → logprob: -6.394430160522461
    5. ' at' → logprob: -6.644430160522461
    6. '),' → logprob: -7.144430160522461
    7. '):
' → logprob: -7.644430160522461
    8. '):' → logprob: -8.144430160522461
    9. ')
' → logprob: -8.519430160522461
    10. ')

' → logprob: -8.644430160522461

Token 607: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013812736608088017
    2. ' if' → logprob: -4.38881254196167
    3. ',' → logprob: -7.76381254196167
    4. '<|end|>' → logprob: -8.138813018798828
    5. 'if' → logprob: -8.388813018798828
    6. ')' → logprob: -10.013813018798828
    7. '           ' → logprob: -10.138813018798828
    8. '        
' → logprob: -10.263813018798828
    9. ' (' → logprob: -11.013813018798828
    10. ' and' → logprob: -11.013813018798828

Token 608: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8966597318649292
    2. '       ' → logprob: -1.0216597318649292
    3. 'if' → logprob: -1.5216597318649292
    4. ',' → logprob: -5.771659851074219
    5. 'w' → logprob: -6.146659851074219
    6. '
' → logprob: -6.396659851074219
    7. ')' → logprob: -6.771659851074219
    8. ' w' → logprob: -6.896659851074219
    9. ':' → logprob: -6.896659851074219
    10. ' =' → logprob: -7.521659851074219

Token 609: ' ' (ID: 220)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4968670606613159
    2. '1' → logprob: -1.746867060661316
    3. 'if' → logprob: -1.746867060661316
    4. '       ' → logprob: -3.4968671798706055
    5. ' ' → logprob: -5.8718671798706055
    6. '0' → logprob: -6.2468671798706055
    7. 'w' → logprob: -6.7468671798706055
    8. ' w' → logprob: -6.8718671798706055
    9. ' self' → logprob: -6.9968671798706055
    10. ')' → logprob: -7.3718671798706055

Token 610: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35348424315452576
    2. 'if' → logprob: -1.4784842729568481
    3. ' if' → logprob: -3.6034841537475586
    4. 'self' → logprob: -4.603484153747559
    5. 'offset' → logprob: -4.978484153747559
    6. '#' → logprob: -5.228484153747559
    7. '0' → logprob: -5.603484153747559
    8. 'w' → logprob: -5.728484153747559
    9. '   ' → logprob: -6.228484153747559
    10. '       ' → logprob: -6.478484153747559

Token 611: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002383441897109151
    2. ' :' → logprob: -8.375238418579102
    3. ',' → logprob: -13.375238418579102
    4. ')' → logprob: -13.500238418579102
    5. '#' → logprob: -13.625238418579102
    6. ':right' → logprob: -13.750238418579102
    7. ' ' → logprob: -14.750238418579102
    8. ' #' → logprob: -14.875238418579102
    9. '):' → logprob: -15.250238418579102
    10. '.' → logprob: -15.750238418579102

Token 612: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5436815619468689
    2. ' right' → logprob: -0.9186815619468689
    3. 'depth' → logprob: -4.668681621551514
    4. '1' → logprob: -5.793681621551514
    5. 'left' → logprob: -5.793681621551514
    6. ' depth' → logprob: -6.168681621551514
    7. 'Right' → logprob: -6.918681621551514
    8. 'd' → logprob: -7.168681621551514
    9. ' ' → logprob: -8.418681144714355
    10. '0' → logprob: -8.793681144714355

Token 613: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.023327002301812172
    2. 'edge' → logprob: -3.773327112197876
    3. '_edge' → logprob: -9.898326873779297
    4. ' ' → logprob: -12.023326873779297
    5. ' side' → logprob: -12.648326873779297
    6. '<|end|>' → logprob: -12.648326873779297
    7. '=edge' → logprob: -12.773326873779297
    8. 'depth' → logprob: -12.898326873779297
    9. ' depth' → logprob: -13.148326873779297
    10. '   ' → logprob: -13.148326873779297

Token 614: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30583176016807556
    2. ' (' → logprob: -2.1808316707611084
    3. ':' → logprob: -2.6808316707611084
    4. ',' → logprob: -3.8058316707611084
    5. '
' → logprob: -4.5558319091796875
    6. '<|end|>' → logprob: -4.5558319091796875
    7. '<|end|>' → logprob: -4.5558319091796875
    8. '#' → logprob: -5.4308319091796875
    9. ')' → logprob: -5.4308319091796875
    10. '        ' → logprob: -5.8058319091796875

Token 615: 'cut' (ID: 9804)
  Prédit: 'cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -1.3279857635498047
    2. '#' → logprob: -1.5779857635498047
    3. ' cut' → logprob: -1.9529857635498047
    4. ' vertical' → logprob: -2.0779857635498047
    5. 'vertical' → logprob: -2.2029857635498047
    6. ' horizontal' → logprob: -2.9529857635498047
    7. 'horizontal' → logprob: -3.4529857635498047
    8. 'depth' → logprob: -4.452985763549805
    9. ' depth' → logprob: -4.827985763549805
    10. '
' → logprob: -5.077985763549805

Token 616: ' surface' (ID: 9753)
  Prédit: ' surface'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' surface' → logprob: -0.030986852943897247
    2. 'surface' → logprob: -3.780986785888672
    3. '_surface' → logprob: -5.655986785888672
    4. ' line' → logprob: -5.905986785888672
    5. '_start' → logprob: -7.280986785888672
    6. ' vertical' → logprob: -7.905986785888672
    7. 'line' → logprob: -9.280986785888672
    8. ')' → logprob: -9.780986785888672
    9. ' perpendicular' → logprob: -9.780986785888672
    10. '       ' → logprob: -10.155986785888672

Token 617: ' horizontal' (ID: 25511)
  Prédit: ' horizontal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' horizontal' → logprob: -0.05522492900490761
    2. 'horizontal' → logprob: -3.680224895477295
    3. ' is' → logprob: -4.055224895477295
    4. ' vertical' → logprob: -4.680224895477295
    5. 'vertical' → logprob: -7.430224895477295
    6. ' perpendicular' → logprob: -7.680224895477295
    7. ' parallel' → logprob: -8.055225372314453
    8. 'is' → logprob: -8.305225372314453
    9. ' depth' → logprob: -10.680225372314453
    10. ' ' → logprob: -10.805225372314453

Token 618: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.004058451857417822
    2. 'line' → logprob: -5.754058361053467
    3. ')' → logprob: -8.004058837890625
    4. '   ' → logprob: -8.379058837890625
    5. ' edge' → logprob: -9.129058837890625
    6. ' ' → logprob: -9.379058837890625
    7. ' surface' → logprob: -10.629058837890625
    8. '_line' → logprob: -10.629058837890625
    9. '	line' → logprob: -11.379058837890625
    10. '    ' → logprob: -11.504058837890625

Token 619: ' parallel' (ID: 26697)
  Prédit: ' parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parallel' → logprob: -0.04281909391283989
    2. ' perpendicular' → logprob: -3.667819023132324
    3. 'parallel' → logprob: -4.292819023132324
    4. ')' → logprob: -6.292819023132324
    5. 'per' → logprob: -8.542819023132324
    6. '<|end|>' → logprob: -9.417819023132324
    7. ' ' → logprob: -9.542819023132324
    8. ',' → logprob: -9.792819023132324
    9. ' across' → logprob: -9.917819023132324
    10. ')
' → logprob: -10.042819023132324

Token 620: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4741123914718628
    2. ' to' → logprob: -0.9741123914718628
    3. '=' → logprob: -10.474112510681152
    4. '   ' → logprob: -12.724112510681152
    5. ')' → logprob: -13.224112510681152
    6. '_to' → logprob: -14.224112510681152
    7. ' ' → logprob: -14.599112510681152
    8. '	to' → logprob: -14.599112510681152
    9. 'cut' → logprob: -16.349111557006836
    10. ' cut' → logprob: -16.349111557006836

Token 621: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.06766390055418015
    2. 'depth' → logprob: -2.9426639080047607
    3. ' horizontal' → logprob: -5.067663669586182
    4. 'top' → logprob: -5.942663669586182
    5. 'self' → logprob: -6.442663669586182
    6. ' depth' → logprob: -7.067663669586182
    7. 'width' → logprob: -7.067663669586182
    8. 'h' → logprob: -8.94266414642334
    9. 'the' → logprob: -9.19266414642334
    10. 'Rect' → logprob: -9.31766414642334

Token 622: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.47486522793769836
    2. ' edges' → logprob: -0.974865198135376
    3. '_edges' → logprob: -7.224865436553955
    4. ')' → logprob: -11.099864959716797
    5. 'edge' → logprob: -11.224864959716797
    6. '
' → logprob: -12.349864959716797
    7. ' ' → logprob: -12.474864959716797
    8. '   ' → logprob: -12.724864959716797
    9. '.edges' → logprob: -12.849864959716797
    10. ' edge' → logprob: -13.099864959716797

Token 623: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.11613569408655167
    2. ')' → logprob: -2.616135597229004
    3. '       ' → logprob: -3.366135597229004
    4. '#' → logprob: -6.366135597229004
    5. ')
' → logprob: -8.866135597229004
    6. '0' → logprob: -9.741135597229004
    7. ' )
' → logprob: -9.866135597229004
    8. '   ' → logprob: -10.616135597229004
    9. ')

' → logprob: -11.241135597229004
    10. '           ' → logprob: -12.241135597229004

Token 624: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006746393628418446
    2. '2' → logprob: -5.131746292114258
    3. '        ' → logprob: -8.256746292114258
    4. ',' → logprob: -9.381746292114258
    5. '    ' → logprob: -9.506746292114258
    6. ' ' → logprob: -9.631746292114258
    7. '0' → logprob: -9.631746292114258
    8. '           ' → logprob: -9.881746292114258
    9. '   ' → logprob: -10.381746292114258
    10. '<|end|>' → logprob: -10.381746292114258

Token 625: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32712408900260925
    2. '2' → logprob: -1.4521241188049316
    3. ' ' → logprob: -3.2021241188049316
    4. '   ' → logprob: -6.202124118804932
    5. '    ' → logprob: -7.452124118804932
    6. ',' → logprob: -7.827124118804932
    7. '        ' → logprob: -8.452123641967773
    8. '           ' → logprob: -8.577123641967773
    9. '     ' → logprob: -9.452123641967773
    10. ')' → logprob: -9.452123641967773

Token 626: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1272149235010147
    2. ' ' → logprob: -2.1272149085998535
    3. '       ' → logprob: -8.877215385437012
    4. '1' → logprob: -10.002215385437012
    5. ' if' → logprob: -10.627215385437012
    6. '   ' → logprob: -10.752215385437012
    7. '
' → logprob: -10.877215385437012
    8. 'if' → logprob: -11.377215385437012
    9. '    ' → logprob: -11.502215385437012
    10. 'elif' → logprob: -12.877215385437012

Token 627: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006353077478706837
    2. '#' → logprob: -6.50635290145874
    3. '3' → logprob: -6.50635290145874
    4. '
' → logprob: -6.88135290145874
    5. 'if' → logprob: -7.00635290145874
    6. 'def' → logprob: -8.006353378295898
    7. 'depth' → logprob: -8.006353378295898
    8. 'cut' → logprob: -8.256353378295898
    9. 'd' → logprob: -9.506353378295898
    10. '1' → logprob: -9.631353378295898

Token 628: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.45848218582978e-06
    2. ' :' → logprob: -13.87500286102295
    3. '#' → logprob: -14.12500286102295
    4. '0' → logprob: -15.62500286102295
    5. '   ' → logprob: -16.000001907348633
    6. ')' → logprob: -16.000001907348633
    7. ',' → logprob: -16.250001907348633
    8. ':return' → logprob: -17.000001907348633
    9. ':
' → logprob: -17.125001907348633
    10. ' ' → logprob: -17.750001907348633

Token 629: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.028802581131458282
    2. 'left' → logprob: -4.153802394866943
    3. ' bottom' → logprob: -4.403802394866943
    4. ' left' → logprob: -7.778802394866943
    5. 'top' → logprob: -10.528802871704102
    6. ' ' → logprob: -12.528802871704102
    7. 'bot' → logprob: -12.778802871704102
    8. '0' → logprob: -13.778802871704102
    9. 'b' → logprob: -14.278802871704102
    10. '(bottom' → logprob: -14.528802871704102

Token 630: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.00529933487996459
    2. 'edge' → logprob: -5.2552995681762695
    3. '_edge' → logprob: -9.75529956817627
    4. '(edge' → logprob: -13.75529956817627
    5. ' edges' → logprob: -13.88029956817627
    6. '       ' → logprob: -14.00529956817627
    7. ' ' → logprob: -14.13029956817627
    8. ':' → logprob: -14.13029956817627
    9. '   ' → logprob: -14.25529956817627
    10. 'Edge' → logprob: -14.38029956817627

Token 631: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0805106833577156
    2. '       ' → logprob: -3.2055106163024902
    3. ':' → logprob: -3.4555106163024902
    4. '(' → logprob: -6.70551061630249
    5. ' if' → logprob: -6.70551061630249
    6. ',' → logprob: -6.83051061630249
    7. '<|end|>' → logprob: -8.455511093139648
    8. '   ' → logprob: -8.705511093139648
    9. ')' → logprob: -8.955511093139648
    10. '        ' → logprob: -9.080511093139648

Token 632: 'same' (ID: 48581)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.6461413502693176
    2. ' top' → logprob: -0.7711413502693176
    3. ' vertical' → logprob: -5.646141529083252
    4. 'vertical' → logprob: -5.896141529083252
    5. '0' → logprob: -6.521141529083252
    6. ' horizontal' → logprob: -6.771141529083252
    7. 'horizontal' → logprob: -6.896141529083252
    8. ')' → logprob: -7.521141529083252
    9. 'self' → logprob: -7.646141529083252
    10. ' self' → logprob: -7.771141529083252

Token 633: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.08609927445650101
    2. 'as' → logprob: -3.08609938621521
    3. ' line' → logprob: -3.58609938621521
    4. 'line' → logprob: -5.836099147796631
    5. 'vertical' → logprob: -6.711099147796631
    6. ' vertical' → logprob: -6.836099147796631
    7. ':' → logprob: -7.586099147796631
    8. ' edge' → logprob: -7.586099147796631
    9. ')' → logprob: -7.711099147796631
    10. '   ' → logprob: -8.086099624633789

Token 634: ' top' (ID: 2344)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07400774955749512
    2. 'top' → logprob: -2.824007749557495
    3. 'edge' → logprob: -5.324007987976074
    4. ' ' → logprob: -5.449007987976074
    5. ' top' → logprob: -6.074007987976074
    6. ' edge' → logprob: -8.074007987976074
    7. '   ' → logprob: -9.199007987976074
    8. '#' → logprob: -9.949007987976074
    9. '
' → logprob: -11.699007987976074
    10. 'edges' → logprob: -12.324007987976074

Token 635: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.08478252589702606
    2. 'edge' → logprob: -2.834782600402832
    3. ')' → logprob: -4.084782600402832
    4. ' line' → logprob: -6.209782600402832
    5. ')
' → logprob: -6.584782600402832
    6. '
' → logprob: -7.584782600402832
    7. '   ' → logprob: -7.959782600402832
    8. 'line' → logprob: -8.084782600402832
    9. ',' → logprob: -8.209782600402832
    10. '_edge' → logprob: -8.709782600402832

Token 636: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1805458664894104
    2. ')' → logprob: -2.6805458068847656
    3. '       ' → logprob: -3.0555458068847656
    4. ' )
' → logprob: -3.3055458068847656
    5. ',' → logprob: -4.805545806884766
    6. ')
' → logprob: -6.430545806884766
    7. ' )' → logprob: -6.805545806884766
    8. '#' → logprob: -8.180545806884766
    9. ')

' → logprob: -8.305545806884766
    10. ' but' → logprob: -8.305545806884766

Token 637: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023136703297495842
    2. '3' → logprob: -4.148136615753174
    3. ' ' → logprob: -5.148136615753174
    4. '<|end|>' → logprob: -7.898136615753174
    5. '   ' → logprob: -8.398137092590332
    6. ',' → logprob: -8.773137092590332
    7. '1' → logprob: -9.273137092590332
    8. '4' → logprob: -9.398137092590332
    9. '0' → logprob: -9.398137092590332
    10. ')' → logprob: -9.898137092590332

Token 638: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13468284904956818
    2. '3' → logprob: -2.8846828937530518
    3. ' ' → logprob: -2.8846828937530518
    4. '4' → logprob: -4.509682655334473
    5. '   ' → logprob: -7.384682655334473
    6. ' if' → logprob: -8.009682655334473
    7. ',' → logprob: -8.009682655334473
    8. '        ' → logprob: -8.009682655334473
    9. '1' → logprob: -8.384682655334473
    10. ' elif' → logprob: -8.759682655334473

Token 639: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03804516792297363
    2. ' ' → logprob: -3.2880451679229736
    3. '       ' → logprob: -12.663044929504395
    4. '   ' → logprob: -14.663044929504395
    5. '```' → logprob: -18.41304588317871
    6. '
' → logprob: -18.66304588317871
    7. ' ' → logprob: -18.78804588317871
    8. '    ' → logprob: -18.78804588317871
    9. '     ' → logprob: -19.03804588317871
    10. 'if' → logprob: -19.16304588317871

Token 640: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '３' → logprob: -20.25
    4. '۳' → logprob: -20.75
    5. '```' → logprob: -22.6875
    6. '   ' → logprob: -22.875
    7. '٣' → logprob: -23.125
    8. '
' → logprob: -23.25
    9. '৩' → logprob: -23.4375
    10. '३' → logprob: -23.5

Token 641: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.5776860184123507e-06
    2. ' :' → logprob: -13.12500286102295
    3. '   ' → logprob: -15.50000286102295
    4. ':left' → logprob: -15.87500286102295
    5. '#' → logprob: -16.250001907348633
    6. '4' → logprob: -18.375001907348633
    7. ':
' → logprob: -18.625001907348633
    8. ' ' → logprob: -18.625001907348633
    9. '=' → logprob: -18.875001907348633
    10. ':right' → logprob: -19.000001907348633

Token 642: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.6931522488594055
    2. 'left' → logprob: -0.6931522488594055
    3. '0' → logprob: -13.06815242767334
    4. '3' → logprob: -13.56815242767334
    5. '	left' → logprob: -14.06815242767334
    6. 'Left' → logprob: -15.81815242767334
    7. '_left' → logprob: -15.94315242767334
    8. '(left' → logprob: -16.193151473999023
    9. ' lef' → logprob: -16.318151473999023
    10. '1' → logprob: -16.318151473999023

Token 643: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.0125663997605443
    2. 'edge' → logprob: -4.387566566467285
    3. ':' → logprob: -10.262566566467285
    4. '_edge' → logprob: -11.137566566467285
    5. '(edge' → logprob: -12.387566566467285
    6. '   ' → logprob: -14.137566566467285
    7. ' ' → logprob: -14.262566566467285
    8. '=edge' → logprob: -15.012566566467285
    9. '.edge' → logprob: -15.387566566467285
    10. '-edge' → logprob: -15.512566566467285

Token 644: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24969764053821564
    2. ' if' → logprob: -2.249697685241699
    3. ':' → logprob: -2.499697685241699
    4. 'if' → logprob: -4.249697685241699
    5. '
' → logprob: -5.249697685241699
    6. ',' → logprob: -5.624697685241699
    7. '        
' → logprob: -6.374697685241699
    8. '<|end|>' → logprob: -6.374697685241699
    9. '=' → logprob: -6.499697685241699
    10. ' =' → logprob: -6.999697685241699

Token 645: 'same' (ID: 48581)
  Prédit: ' same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' same' → logprob: -0.23831067979335785
    2. 'same' → logprob: -1.613310694694519
    3. '1' → logprob: -5.488310813903809
    4. ')' → logprob: -6.363310813903809
    5. ' horizontal' → logprob: -6.488310813903809
    6. ' right' → logprob: -6.738310813903809
    7. '   ' → logprob: -7.238310813903809
    8. 'right' → logprob: -7.363310813903809
    9. 'horizontal' → logprob: -7.363310813903809
    10. ' like' → logprob: -7.988310813903809

Token 646: ' as' (ID: 472)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.22637489438056946
    2. ' as' → logprob: -1.601374864578247
    3. ':' → logprob: -6.976375102996826
    4. ')' → logprob: -11.851374626159668
    5. '```' → logprob: -12.101374626159668
    6. 'As' → logprob: -12.851374626159668
    7. '	as' → logprob: -12.976374626159668
    8. '   ' → logprob: -13.351374626159668
    9. '#' → logprob: -13.601374626159668
    10. '0' → logprob: -13.851374626159668

Token 647: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0276970025151968
    2. ' right' → logprob: -3.9026970863342285
    3. '1' → logprob: -5.1526970863342285
    4. 'top' → logprob: -7.0276970863342285
    5. '0' → logprob: -8.40269660949707
    6. ' top' → logprob: -9.15269660949707
    7. ' ' → logprob: -9.40269660949707
    8. 'bottom' → logprob: -10.77769660949707
    9. 'left' → logprob: -11.02769660949707
    10. 'edge' → logprob: -13.15269660949707

Token 648: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.050915397703647614
    2. 'edge' → logprob: -3.050915479660034
    3. ')' → logprob: -6.175915241241455
    4. ')
' → logprob: -9.175915718078613
    5. '_edge' → logprob: -9.425915718078613
    6. '   ' → logprob: -10.800915718078613
    7. '-edge' → logprob: -11.550915718078613
    8. 'Edge' → logprob: -12.425915718078613
    9. '(edge' → logprob: -12.425915718078613
    10. ' edges' → logprob: -12.675915718078613

Token 649: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007867693901062012
    2. ')

' → logprob: -5.507867813110352
    3. '       ' → logprob: -6.757867813110352
    4. ')
' → logprob: -7.007867813110352
    5. ' )' → logprob: -7.007867813110352
    6. '):' → logprob: -7.507867813110352
    7. '):

' → logprob: -9.757867813110352
    8. ')
' → logprob: -9.882867813110352
    9. ')

' → logprob: -9.882867813110352
    10. '   ' → logprob: -10.507867813110352

Token 650: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11036955565214157
    2. 'if' → logprob: -2.4853694438934326
    3. ' if' → logprob: -3.8603694438934326
    4. 'w' → logprob: -10.235369682312012
    5. 'cut' → logprob: -10.485369682312012
    6. '#' → logprob: -10.985369682312012
    7. '        
' → logprob: -11.110369682312012
    8. '   ' → logprob: -11.735369682312012
    9. ' cut' → logprob: -12.235369682312012
    10. 'x' → logprob: -12.610369682312012

Token 651: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0997796356678009
    2. '       ' → logprob: -2.7247796058654785
    3. ' if' → logprob: -3.7247796058654785
    4. 'w' → logprob: -5.3497796058654785
    5. 'cut' → logprob: -8.599780082702637
    6. '
' → logprob: -9.599780082702637
    7. ' w' → logprob: -9.724780082702637
    8. 'i' → logprob: -10.099780082702637
    9. 'h' → logprob: -10.224780082702637
    10. 'n' → logprob: -10.849780082702637

Token 652: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.5231424570083618
    2. ' edge' → logprob: -0.8981424570083618
    3. 'edges' → logprob: -12.39814281463623
    4. '(edge' → logprob: -12.39814281463623
    5. ' ' → logprob: -12.77314281463623
    6. '   ' → logprob: -13.14814281463623
    7. '    ' → logprob: -13.89814281463623
    8. ' edges' → logprob: -14.27314281463623
    9. '
' → logprob: -14.27314281463623
    10. '0' → logprob: -14.39814281463623

Token 653: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -5.9153885558771435e-06
    2. '_' → logprob: -12.250005722045898
    3. ' _' → logprob: -13.875005722045898
    4. '_
' → logprob: -16.7500057220459
    5. 'Index' → logprob: -18.0000057220459
    6. 'index' → logprob: -18.0000057220459
    7. '_INDEX' → logprob: -19.0000057220459
    8. '_ind' → logprob: -19.1250057220459
    9. '_

' → logprob: -19.1250057220459
    10. '_indices' → logprob: -19.2500057220459

Token 654: ' ==' (ID: 951)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06950360536575317
    2. ' ==' → logprob: -3.1945035457611084
    3. 'in' → logprob: -4.1945037841796875
    4. '==' → logprob: -4.5695037841796875
    5. ' ' → logprob: -7.3195037841796875
    6. '0' → logprob: -10.319503784179688
    7. '[' → logprob: -12.694503784179688
    8. ' ' → logprob: -13.069503784179688
    9. '   ' → logprob: -13.319503784179688
    10. '1' → logprob: -13.694503784179688

Token 655: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20141343772411346
    2. ' ' → logprob: -1.7014133930206299
    3. '   ' → logprob: -16.701414108276367
    4. '  ' → logprob: -17.451414108276367
    5. '1' → logprob: -17.701414108276367
    6. '(' → logprob: -17.701414108276367
    7. '۰' → logprob: -17.951414108276367
    8. '[' → logprob: -18.201414108276367
    9. '{' → logprob: -18.763914108276367
    10. '	' → logprob: -18.888914108276367

Token 656: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.518582762917504e-05
    2. ' ' → logprob: -9.37508487701416
    3. '1' → logprob: -15.87508487701416
    4. '   ' → logprob: -16.750085830688477
    5. '3' → logprob: -17.875085830688477
    6. '[' → logprob: -18.687585830688477
    7. '۰' → logprob: -18.875085830688477
    8. '  ' → logprob: -19.062585830688477
    9. '(' → logprob: -19.125085830688477
    10. '{' → logprob: -19.562585830688477

Token 657: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2856787145137787
    2. ':
' → logprob: -1.535678744316101
    3. ' or' → logprob: -3.4106786251068115
    4. ' and' → logprob: -10.16067886352539
    5. ' :' → logprob: -10.16067886352539
    6. ':
' → logprob: -10.16067886352539
    7. ' :
' → logprob: -10.41067886352539
    8. 'or' → logprob: -11.41067886352539
    9. ':

' → logprob: -12.03567886352539
    10. 'and' → logprob: -13.03567886352539

Token 658: ' ' (ID: 220)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.9274708032608032
    2. ' w' → logprob: -1.1774708032608032
    3. '           ' → logprob: -2.4274706840515137
    4. 'w' → logprob: -2.8024706840515137
    5. '#' → logprob: -3.4274706840515137
    6. 'new' → logprob: -3.4274706840515137
    7. ' cut' → logprob: -3.9274706840515137
    8. ' #' → logprob: -4.427470684051514
    9. ' x' → logprob: -4.427470684051514
    10. '
' → logprob: -4.802470684051514

Token 659: ' #' (ID: 1069)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.1997243165969849
    2. '#' → logprob: -1.3247243165969849
    3. 'new' → logprob: -1.5747243165969849
    4. 'if' → logprob: -2.0747241973876953
    5. '           ' → logprob: -3.5747241973876953
    6. ' new' → logprob: -4.074724197387695
    7. 'cut' → logprob: -4.199724197387695
    8. ' if' → logprob: -4.699724197387695
    9. 'x' → logprob: -4.824724197387695
    10. 'width' → logprob: -5.324724197387695

Token 660: ' top' (ID: 2344)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.37213748693466187
    2. 'w' → logprob: -1.6221375465393066
    3. ' w' → logprob: -3.1221375465393066
    4. ' #' → logprob: -3.9971375465393066
    5. ' new' → logprob: -4.247137546539307
    6. ' cut' → logprob: -4.872137546539307
    7. 'new' → logprob: -4.997137546539307
    8. 'x' → logprob: -5.497137546539307
    9. 'cut' → logprob: -5.872137546539307
    10. 'vertical' → logprob: -6.372137546539307

Token 661: ' edge' (ID: 11165)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1531862020492554
    2. ' line' → logprob: -2.278186321258545
    3. '_edge' → logprob: -2.403186321258545
    4. 'line' → logprob: -2.653186321258545
    5. '       ' → logprob: -2.903186321258545
    6. ' edge' → logprob: -3.028186321258545
    7. '_line' → logprob: -3.028186321258545
    8. 'edge' → logprob: -3.028186321258545
    9. '_w' → logprob: -3.653186321258545
    10. 'w' → logprob: -3.778186321258545

Token 662: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5149469971656799
    2. ':
' → logprob: -1.1399469375610352
    3. '           ' → logprob: -3.139946937561035
    4. ' and' → logprob: -3.389946937561035
    5. 'and' → logprob: -6.139946937561035
    6. '):
' → logprob: -7.389946937561035
    7. ',' → logprob: -7.389946937561035
    8. 'w' → logprob: -8.139946937561035
    9. ':
' → logprob: -8.264946937561035
    10. '       ' → logprob: -8.514946937561035

Token 663: '           ' (ID: 352)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.14404547214508057
    2. '           ' → logprob: -3.019045352935791
    3. ' w' → logprob: -3.019045352935791
    4. 'new' → logprob: -4.519045352935791
    5. 'left' → logprob: -4.769045352935791
    6. '       ' → logprob: -5.894045352935791
    7. 'cut' → logprob: -6.019045352935791
    8. 'x' → logprob: -6.144045352935791
    9. '_w' → logprob: -6.394045352935791
    10. ' new' → logprob: -6.644045352935791

Token 664: ' #' (ID: 1069)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.17694179713726044
    2. 'new' → logprob: -2.5519418716430664
    3. 'cut' → logprob: -3.8019418716430664
    4. 'left' → logprob: -4.301941871643066
    5. 'x' → logprob: -4.426941871643066
    6. ' w' → logprob: -4.551941871643066
    7. 'if' → logprob: -4.926941871643066
    8. ' new' → logprob: -5.176941871643066
    9. '           ' → logprob: -5.426941871643066
    10. ' cut' → logprob: -5.926941871643066

Token 665: ' cut' (ID: 6092)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.12889792025089264
    2. 'left' → logprob: -3.0038979053497314
    3. 'new' → logprob: -3.7538979053497314
    4. 'cut' → logprob: -3.7538979053497314
    5. 'x' → logprob: -4.1288981437683105
    6. 'return' → logprob: -5.7538981437683105
    7. 'if' → logprob: -6.6288981437683105
    8. 'part' → logprob: -6.6288981437683105
    9. 'piece' → logprob: -7.2538981437683105
    10. '   ' → logprob: -7.2538981437683105

Token 666: ' perpendicular' (ID: 137754)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.4254744350910187
    2. '_x' → logprob: -1.5504744052886963
    3. '_pos' → logprob: -2.8004744052886963
    4. 'w' → logprob: -3.4254744052886963
    5. '_width' → logprob: -3.6754744052886963
    6. '_depth' → logprob: -5.550474643707275
    7. 'pos' → logprob: -5.675474643707275
    8. '_line' → logprob: -5.925474643707275
    9. 'x' → logprob: -5.925474643707275
    10. '1' → logprob: -7.550474643707275

Token 667: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.16036659479141235
    2. 'to' → logprob: -1.9103665351867676
    3. 'vertical' → logprob: -10.035367012023926
    4. ' vertical' → logprob: -10.535367012023926
    5. '           ' → logprob: -11.160367012023926
    6. '_to' → logprob: -11.785367012023926
    7. 'x' → logprob: -11.910367012023926
    8. '=' → logprob: -12.160367012023926
    9. ' at' → logprob: -12.160367012023926
    10. ' ' → logprob: -12.285367012023926

Token 668: ' top' (ID: 2344)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3717413544654846
    2. 'the' → logprob: -1.8717412948608398
    3. 'vertical' → logprob: -2.74674129486084
    4. 'depth' → logprob: -2.99674129486084
    5. 'width' → logprob: -3.87174129486084
    6. 'horizontal' → logprob: -4.49674129486084
    7. 'top' → logprob: -5.74674129486084
    8. 'y' → logprob: -5.87174129486084
    9. ' self' → logprob: -7.12174129486084
    10. 'x' → logprob: -7.37174129486084

Token 669: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.16083602607250214
    2. 'edge' → logprob: -2.5358359813690186
    3. ' edges' → logprob: -4.035836219787598
    4. ' line' → logprob: -4.160836219787598
    5. '           ' → logprob: -4.410836219787598
    6. 'line' → logprob: -5.035836219787598
    7. ' to' → logprob: -5.785836219787598
    8. 'edges' → logprob: -5.910836219787598
    9. '_edge' → logprob: -6.410836219787598
    10. ' =' → logprob: -6.535836219787598

Token 670: ' ->' (ID: 2747)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8719702363014221
    2. '_x' → logprob: -2.1219701766967773
    3. ' =' → logprob: -2.2469701766967773
    4. ' at' → logprob: -3.1219701766967773
    5. '           ' → logprob: -3.2469701766967773
    6. 'vertical' → logprob: -3.2469701766967773
    7. 'w' → logprob: -3.3719701766967773
    8. ',' → logprob: -3.3719701766967773
    9. '_vertical' → logprob: -3.7469701766967773
    10. '_w' → logprob: -3.9969701766967773

Token 671: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.5382867455482483
    2. ' vertical' → logprob: -1.0382866859436035
    3. 'self' → logprob: -3.7882866859436035
    4. ' self' → logprob: -4.6632866859436035
    5. 'horizontal' → logprob: -5.1632866859436035
    6. 'x' → logprob: -5.1632866859436035
    7. ' a' → logprob: -5.2882866859436035
    8. ' x' → logprob: -6.5382866859436035
    9. 'a' → logprob: -6.7882866859436035
    10. ' depth' → logprob: -6.9132866859436035

Token 672: ' cut' (ID: 6092)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5848876237869263
    2. ' line' → logprob: -0.8348876237869263
    3. '_line' → logprob: -5.459887504577637
    4. ' cut' → logprob: -6.459887504577637
    5. 'cut' → logprob: -6.459887504577637
    6. '_cut' → logprob: -8.459887504577637
    7. 'lines' → logprob: -8.959887504577637
    8. 'x' → logprob: -8.959887504577637
    9. 'split' → logprob: -8.959887504577637
    10. ' lines' → logprob: -9.084887504577637

Token 673: ' at' (ID: 540)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3272541761398315
    2. '           ' → logprob: -1.3272541761398315
    3. ' =' → logprob: -2.202254295349121
    4. '
' → logprob: -2.577254295349121
    5. 'w' → logprob: -2.952254295349121
    6. 'new' → logprob: -3.327254295349121
    7. ' x' → logprob: -3.702254295349121
    8. '_x' → logprob: -4.202254295349121
    9. 'left' → logprob: -4.452254295349121
    10. 'line' → logprob: -4.452254295349121

Token 674: ' position' (ID: 4010)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.033573318272829056
    2. 'int' → logprob: -3.9085733890533447
    3. 'cut' → logprob: -4.908573150634766
    4. ' offset' → logprob: -5.283573150634766
    5. 'self' → logprob: -8.783573150634766
    6. ' cut' → logprob: -8.908573150634766
    7. ' int' → logprob: -8.908573150634766
    8. '
' → logprob: -10.908573150634766
    9. 'x' → logprob: -11.533573150634766
    10. 'round' → logprob: -12.158573150634766

Token 675: ' offset' (ID: 8985)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.34403857588768005
    2. 'int' → logprob: -2.469038486480713
    3. ' offset' → logprob: -2.469038486480713
    4. '=int' → logprob: -3.094038486480713
    5. ' int' → logprob: -3.719038486480713
    6. '=' → logprob: -3.719038486480713
    7. 'self' → logprob: -4.594038486480713
    8. ' =' → logprob: -4.594038486480713
    9. ' self' → logprob: -5.844038486480713
    10. 'cut' → logprob: -6.469038486480713

Token 676: ' from' (ID: 591)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8151218891143799
    2. ',' → logprob: -1.6901218891143799
    3. '           ' → logprob: -1.6901218891143799
    4. ' =' → logprob: -2.81512188911438
    5. 'from' → logprob: -3.06512188911438
    6. '<|end|>' → logprob: -3.81512188911438
    7. ' from' → logprob: -4.315121650695801
    8. ' +' → logprob: -5.065121650695801
    9. ',
' → logprob: -5.065121650695801
    10. '            
' → logprob: -5.440121650695801

Token 677: ' NW' (ID: 58124)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.3589847981929779
    2. '0' → logprob: -1.2339848279953003
    3. ' left' → logprob: -5.10898494720459
    4. 'the' → logprob: -5.85898494720459
    5. 'self' → logprob: -6.85898494720459
    6. ' ' → logprob: -8.73398494720459
    7. 'top' → logprob: -8.85898494720459
    8. ' the' → logprob: -8.98398494720459
    9. '   ' → logprob: -10.35898494720459
    10. '_left' → logprob: -11.48398494720459

Token 678: ' corner' (ID: 14194)
  Prédit: 'corner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'corner' → logprob: -0.5143879652023315
    2. ' corner' → logprob: -1.0143879652023315
    3. ' edge' → logprob: -4.514388084411621
    4. 'edge' → logprob: -4.764388084411621
    5. '+' → logprob: -5.139388084411621
    6. ' +' → logprob: -5.639388084411621
    7. ' point' → logprob: -5.764388084411621
    8. 'point' → logprob: -6.264388084411621
    9. '_corner' → logprob: -6.389388084411621
    10. ')' → logprob: -7.514388084411621

Token 679: ' east' (ID: 23557)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38948631286621094
    2. '           ' → logprob: -1.639486312866211
    3. '            
' → logprob: -3.389486312866211
    4. ' =' → logprob: -3.639486312866211
    5. ',' → logprob: -4.014486312866211
    6. 'self' → logprob: -4.389486312866211
    7. ' 
' → logprob: -5.264486312866211
    8. 'return' → logprob: -5.514486312866211
    9. '<|end|>' → logprob: -5.514486312866211
    10. ' along' → logprob: -5.764486312866211

Token 680: 'wards' (ID: 5323)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.5684185028076172
    2. ' =' → logprob: -1.5684185028076172
    3. ' +' → logprob: -1.6934185028076172
    4. '=' → logprob: -2.693418502807617
    5. '           ' → logprob: -2.818418502807617
    6. ':' → logprob: -3.568418502807617
    7. 'wards' → logprob: -3.568418502807617
    8. '               ' → logprob: -3.818418502807617
    9. '       ' → logprob: -3.818418502807617
    10. 'ward' → logprob: -3.943418502807617

Token 681: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5044214725494385
    2. '           ' → logprob: -1.5044214725494385
    3. 'return' → logprob: -2.5044214725494385
    4. ':' → logprob: -3.6294214725494385
    5. ' return' → logprob: -4.254421234130859
    6. ':
' → logprob: -4.504421234130859
    7. '
' → logprob: -4.754421234130859
    8. 'self' → logprob: -5.004421234130859
    9. ' =' → logprob: -5.504421234130859
    10. '            
' → logprob: -5.629421234130859

Token 682: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.036540210247039795
    2. 'return' → logprob: -4.2865400314331055
    3. '
' → logprob: -4.4115400314331055
    4. ' return' → logprob: -5.1615400314331055
    5. ':' → logprob: -7.1615400314331055
    6. 'self' → logprob: -7.2865400314331055
    7. ' =' → logprob: -7.4115400314331055
    8. ':
' → logprob: -7.5365400314331055
    9. ',' → logprob: -7.9115400314331055
    10. '       ' → logprob: -8.536540031433105

Token 683: ' cut' (ID: 6092)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.5476133227348328
    2. 'left' → logprob: -1.6726133823394775
    3. 'x' → logprob: -2.0476133823394775
    4. 'new' → logprob: -3.0476133823394775
    5. 'cut' (adapté à ' cut') → logprob: -3.4226133823394775
    6. 'return' → logprob: -4.547613143920898
    7. '           ' → logprob: -5.922613143920898
    8. 'pos' → logprob: -6.047613143920898
    9. ' left' → logprob: -6.172613143920898
    10. ' w' → logprob: -6.547613143920898

Token 684: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.05965986102819443
    2. '_position' → logprob: -3.059659957885742
    3. '_x' → logprob: -4.559659957885742
    4. '_line' → logprob: -8.434659957885742
    5. 'pos' → logprob: -8.559659957885742
    6. '_start' → logprob: -9.559659957885742
    7. 'Pos' → logprob: -11.059659957885742
    8. ' =' → logprob: -11.559659957885742
    9. '_offset' → logprob: -11.809659957885742
    10. 'x' → logprob: -11.934659957885742

Token 685: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021809488534927
    2. '=' → logprob: -2.3502180576324463
    3. ' ' → logprob: -12.475217819213867
    4. 'x' → logprob: -13.850217819213867
    5. 'ion' → logprob: -13.975217819213867
    6. '   ' → logprob: -14.225217819213867
    7. 'n' → logprob: -14.475217819213867
    8. ',' → logprob: -14.725217819213867
    9. 'on' → logprob: -14.725217819213867
    10. '=int' → logprob: -14.850217819213867

Token 686: ' offset' (ID: 8985)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.02446490153670311
    2. ' offset' → logprob: -3.7744648456573486
    3. 'int' → logprob: -6.774465084075928
    4. ' int' → logprob: -10.14946460723877
    5. 'self' → logprob: -10.39946460723877
    6. '	offset' → logprob: -13.14946460723877
    7. ' self' → logprob: -13.52446460723877
    8. '   ' → logprob: -13.89946460723877
    9. ' ' → logprob: -13.89946460723877
    10. '
' → logprob: -15.52446460723877

Token 687: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005234475247561932
    2. '           ' → logprob: -5.630234241485596
    3. '<|end|>' → logprob: -7.630234241485596
    4. '            
' → logprob: -8.380234718322754
    5. '<|end|>' → logprob: -8.380234718322754
    6. ' 
' → logprob: -8.505234718322754
    7. '  
' → logprob: -8.880234718322754
    8. '
' → logprob: -9.005234718322754
    9. ',' → logprob: -9.880234718322754
    10. '               ' → logprob: -10.130234718322754

Token 688: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009060868062078953
    2. '
' → logprob: -4.884060859680176
    3. 'return' → logprob: -7.509060859680176
    4. ' return' → logprob: -8.134060859680176
    5. ',' → logprob: -8.384060859680176
    6. '            
' → logprob: -8.634060859680176
    7. '  
' → logprob: -10.259060859680176
    8. '
' → logprob: -10.509060859680176
    9. ' if' → logprob: -10.884060859680176
    10. ' 
' → logprob: -10.884060859680176

Token 689: ' if' (ID: 538)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.7425276041030884
    2. 'return' → logprob: -1.7425276041030884
    3. 'left' → logprob: -1.7425276041030884
    4. 'p' → logprob: -1.9925276041030884
    5. 'w' → logprob: -4.117527484893799
    6. 'if' (adapté à ' if') → logprob: -4.742527484893799
    7. '           ' → logprob: -5.492527484893799
    8. 'new' → logprob: -5.617527484893799
    9. 'rect' → logprob: -6.492527484893799
    10. 'part' → logprob: -6.492527484893799

Token 690: ' cut' (ID: 6092)
  Prédit: ' cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cut' → logprob: -0.043020542711019516
    2. 'cut' → logprob: -3.168020486831665
    3. '1' → logprob: -12.168020248413086
    4. ' not' → logprob: -12.168020248413086
    5. '   ' → logprob: -13.043020248413086
    6. '0' → logprob: -13.168020248413086
    7. ' ' → logprob: -13.168020248413086
    8. 'not' → logprob: -13.418020248413086
    9. '=cut' → logprob: -13.668020248413086
    10. '_cut' → logprob: -14.543020248413086

Token 691: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -2.935296834039036e-06
    2. 'pos' → logprob: -13.25000286102295
    3. '_' → logprob: -14.37500286102295
    4. '_start' → logprob: -14.75000286102295
    5. '_p' → logprob: -17.125003814697266
    6. '	pos' → logprob: -17.750003814697266
    7. '_position' → logprob: -17.875003814697266
    8. '=' → logprob: -18.000003814697266
    9. ' _' → logprob: -18.000003814697266
    10. '>' → logprob: -18.250003814697266

Token 692: ' <=' (ID: 5017)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.9457253217697144
    2. '>=' → logprob: -1.1957253217697144
    3. '<=' → logprob: -1.9457253217697144
    4. ' <=' → logprob: -2.070725440979004
    5. '==' → logprob: -3.695725440979004
    6. ' ==' → logprob: -4.195725440979004
    7. '<' → logprob: -9.195725440979004
    8. '>' → logprob: -9.945725440979004
    9. ' <' → logprob: -10.070725440979004
    10. ' >' → logprob: -10.570725440979004

Token 693: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016040820628404617
    2. ' ' → logprob: -4.141040802001953
    3. '   ' → logprob: -12.766040802001953
    4. 'self' → logprob: -13.641040802001953
    5. '1' → logprob: -13.766040802001953
    6. '```' → logprob: -14.953540802001953
    7. '  ' → logprob: -15.078540802001953
    8. ' ' → logprob: -15.328540802001953
    9. '۰' → logprob: -15.578540802001953
    10. ' self' → logprob: -16.203540802001953

Token 694: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.618001053633634e-05
    2. ' ' → logprob: -10.625025749206543
    3. 'self' → logprob: -14.125025749206543
    4. '1' → logprob: -14.375025749206543
    5. '   ' → logprob: -16.00002670288086
    6. '```' → logprob: -16.00002670288086
    7. '
' → logprob: -16.31252670288086
    8. '۰' → logprob: -16.56252670288086
    9. ' ' → logprob: -18.62502670288086
    10. '﻿' → logprob: -18.62502670288086

Token 695: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.01630133017897606
    2. 'or' → logprob: -4.266301155090332
    3. ':' → logprob: -6.266301155090332
    4. ':
' → logprob: -8.641301155090332
    5. '           ' → logprob: -10.516301155090332
    6. ' ' → logprob: -10.766301155090332
    7. '	or' → logprob: -12.516301155090332
    8. '   ' → logprob: -13.391301155090332
    9. ':return' → logprob: -13.891301155090332
    10. '<|end|>' → logprob: -14.016301155090332

Token 696: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.014163747429847717
    2. ' cut' → logprob: -4.264163970947266
    3. '_cut' → logprob: -16.264163970947266
    4. '=cut' → logprob: -16.889163970947266
    5. '           ' → logprob: -17.264163970947266
    6. 'self' → logprob: -18.014163970947266
    7. 'Cut' → logprob: -18.764163970947266
    8. ' cutoff' → logprob: -18.764163970947266
    9. 'cutaneous' → logprob: -18.889163970947266
    10. '               ' → logprob: -18.889163970947266

Token 697: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -7.822646693966817e-06
    2. 'pos' → logprob: -11.875007629394531
    3. '>=' → logprob: -14.375007629394531
    4. 'Pos' → logprob: -16.37500762939453
    5. '	pos' → logprob: -16.62500762939453
    6. '>' → logprob: -17.62500762939453
    7. ' >=' → logprob: -17.75000762939453
    8. '_' → logprob: -17.75000762939453
    9. '_p' → logprob: -19.25000762939453
    10. '_position' → logprob: -19.25000762939453

Token 698: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.03808315470814705
    2. ' >=' → logprob: -3.288083076477051
    3. '>' → logprob: -10.28808307647705
    4. ')>=' → logprob: -12.53808307647705
    5. ']>=' → logprob: -12.66308307647705
    6. '≥' → logprob: -15.41308307647705
    7. ' >' → logprob: -15.91308307647705
    8. '   ' → logprob: -15.91308307647705
    9. '```' → logprob: -16.538084030151367
    10. '	' → logprob: -16.538084030151367

Token 699: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004319804720580578
    2. ' self' → logprob: -7.750432014465332
    3. '           ' → logprob: -14.125432014465332
    4. '(self' → logprob: -15.125432014465332
    5. '       ' → logprob: -15.250432014465332
    6. '=self' → logprob: -16.750431060791016
    7. '	self' → logprob: -17.125431060791016
    8. '   ' → logprob: -17.875431060791016
    9. '```' → logprob: -18.250431060791016
    10. '[self' → logprob: -18.500431060791016

Token 700: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -7.107425062713446e-06
    2. '_w' → logprob: -12.750006675720215
    3. '   ' → logprob: -12.875006675720215
    4. '       ' → logprob: -14.750006675720215
    5. '.' → logprob: -15.500006675720215
    6. '_width' → logprob: -15.500006675720215
    7. ' .' → logprob: -15.750006675720215
    8. '
' → logprob: -15.750006675720215
    9. '.width' → logprob: -16.12500762939453
    10. '_' → logprob: -16.25000762939453

Token 701: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -3.531315314830863e-06
    2. '_w' → logprob: -12.750003814697266
    3. ' w' → logprob: -15.000003814697266
    4. '-w' → logprob: -16.000003814697266
    5. '	w' → logprob: -16.375003814697266
    6. ''w' → logprob: -17.000003814697266
    7. 'width' → logprob: -18.750003814697266
    8. 'ｗ' → logprob: -18.875003814697266
    9. '```' → logprob: -19.000003814697266
    10. '.w' → logprob: -19.250003814697266

Token 702: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020575758069753647
    2. ':
' → logprob: -3.895575761795044
    3. ':return' → logprob: -11.520575523376465
    4. ':
' → logprob: -11.770575523376465
    5. ' :' → logprob: -12.270575523376465
    6. '           ' → logprob: -12.770575523376465
    7. '):' → logprob: -12.895575523376465
    8. ' or' → logprob: -13.520575523376465
    9. ':

' → logprob: -13.770575523376465
    10. '):
' → logprob: -13.770575523376465

Token 703: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010607372038066387
    2. '           ' → logprob: -4.8856072425842285
    3. ':' → logprob: -6.5106072425842285
    4. ':
' → logprob: -6.6356072425842285
    5. ' raise' → logprob: -9.385607719421387
    6. ',' → logprob: -10.135607719421387
    7. '):
' → logprob: -11.260607719421387
    8. '              ' → logprob: -11.385607719421387
    9. ' :
' → logprob: -12.010607719421387
    10. ' :' → logprob: -12.260607719421387

Token 704: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.6944228410720825
    2. 'raise' (adapté à ' raise') → logprob: -0.6944228410720825
    3. '           ' → logprob: -6.819422721862793
    4. '	raise' → logprob: -9.194422721862793
    5. '               ' → logprob: -9.694422721862793
    6. '                   ' → logprob: -12.319422721862793
    7. '   ' → logprob: -12.444422721862793
    8. '```' → logprob: -13.194422721862793
    9. '            ' → logprob: -13.319422721862793
    10. 'Raise' → logprob: -13.444422721862793

Token 705: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.38688185811042786
    2. ' Value' → logprob: -1.1368818283081055
    3. '	Value' → logprob: -12.261881828308105
    4. '_value' → logprob: -12.886881828308105
    5. '_Value' → logprob: -13.011881828308105
    6. ' value' → logprob: -14.761881828308105
    7. ' ' → logprob: -15.261881828308105
    8. '.Value' → logprob: -15.511881828308105
    9. 'value' → logprob: -15.511881828308105
    10. '```' → logprob: -16.636882781982422

Token 706: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -3.500108141452074e-05
    2. 'rror' → logprob: -10.750035285949707
    3. 'alue' → logprob: -12.250035285949707
    4. 'Value' → logprob: -12.375035285949707
    5. 'l' → logprob: -12.500035285949707
    6. 'LError' → logprob: -14.875035285949707
    7. 'al' → logprob: -15.250035285949707
    8. 'e' → logprob: -17.37503433227539
    9. 'error' → logprob: -17.37503433227539
    10. 'SError' → logprob: -17.75003433227539

Token 707: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0011703446507453918
    2. '(' → logprob: -6.7511701583862305
    3. '(
' → logprob: -16.376171112060547
    4. '('' → logprob: -17.126171112060547
    5. '("")' → logprob: -17.251171112060547
    6. '(f' → logprob: -17.376171112060547
    7. '()' → logprob: -18.001171112060547
    8. ' ("' → logprob: -19.251171112060547
    9. '("'' → logprob: -19.876171112060547
    10. '(("' → logprob: -20.251171112060547

Token 708: 'Invalid' (ID: 12278)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.2886314392089844
    2. ' cut' → logprob: -1.5386314392089844
    3. 'Cut' → logprob: -3.7886314392089844
    4. 'Invalid' → logprob: -5.163631439208984
    5. '"' → logprob: -5.288631439208984
    6. 'Width' → logprob: -7.288631439208984
    7. 'Cannot' → logprob: -7.288631439208984
    8. ' Cut' → logprob: -8.538631439208984
    9. 'Value' → logprob: -8.788631439208984
    10. ' Invalid' → logprob: -9.413631439208984

Token 709: ' cut' (ID: 6092)
  Prédit: ' cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cut' → logprob: -0.0025709024630486965
    2. 'cut' → logprob: -6.002571105957031
    3. '_cut' → logprob: -10.002571105957031
    4. ' position' → logprob: -10.752571105957031
    5. ' cutting' → logprob: -11.252571105957031
    6. '=cut' → logprob: -12.377571105957031
    7. ' cutoff' → logprob: -13.002571105957031
    8. 'Cut' → logprob: -13.127571105957031
    9. ' ' → logprob: -13.627571105957031
    10. ' split' → logprob: -13.752571105957031

Token 710: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.051053375005722046
    2. '_pos' → logprob: -3.301053285598755
    3. 'position' → logprob: -5.051053524017334
    4. '_start' → logprob: -5.676053524017334
    5. '_' → logprob: -6.801053524017334
    6. '_position' → logprob: -7.176053524017334
    7. 'pos' → logprob: -7.176053524017334
    8. '   ' → logprob: -8.926053047180176
    9. ' _' → logprob: -9.676053047180176
    10. ')' → logprob: -10.176053047180176

Token 711: ' along' (ID: 4251)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32144299149513245
    2. '")' → logprob: -2.1964430809020996
    3. ' on' → logprob: -2.1964430809020996
    4. ' along' → logprob: -3.8214430809020996
    5. '.")' → logprob: -4.0714430809021
    6. ' ")' → logprob: -4.8214430809021
    7. ' inside' → logprob: -6.3214430809021
    8. ':' → logprob: -6.6964430809021
    9. ' within' → logprob: -7.3214430809021
    10. ' in' → logprob: -8.196442604064941

Token 712: ' width' (ID: 4345)
  Prédit: ' width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.3453914225101471
    2. ' the' → logprob: -1.7203913927078247
    3. 'width' → logprob: -2.4703915119171143
    4. 'the' → logprob: -4.220391273498535
    5. ' self' → logprob: -5.220391273498535
    6. ' top' → logprob: -5.720391273498535
    7. 'self' → logprob: -6.095391273498535
    8. 'top' → logprob: -7.095391273498535
    9. ' edge' → logprob: -7.470391273498535
    10. ' cut' → logprob: -7.720391273498535

Token 713: '.")
' (ID: 27834)
  Prédit: '.")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.")' → logprob: -0.263863205909729
    2. '")' → logprob: -1.638863205909729
    3. '.")
' → logprob: -3.5138630867004395
    4. '")
' → logprob: -5.1388630867004395
    5. ' ")' → logprob: -7.2638630867004395
    6. ' for' → logprob: -7.2638630867004395
    7. ' .' → logprob: -8.013863563537598
    8. ')")' → logprob: -9.388863563537598
    9. '.' → logprob: -9.513863563537598
    10. ' ")
' → logprob: -9.888863563537598

Token 714: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020747212693095207
    2. '
' → logprob: -6.502074718475342
    3. 'return' → logprob: -7.752074718475342
    4. '            
' → logprob: -9.7520751953125
    5. ' return' → logprob: -10.3770751953125
    6. '       ' → logprob: -11.0020751953125
    7. 'left' → logprob: -11.6270751953125
    8. '    
' → logprob: -12.2520751953125
    9. '
' → logprob: -12.3770751953125
    10. '1' → logprob: -12.5020751953125

Token 715: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.6700781583786011
    2. 'return' → logprob: -1.170078158378601
    3. '           ' → logprob: -1.795078158378601
    4. 'piece' → logprob: -5.920078277587891
    5. ' return' → logprob: -6.045078277587891
    6. 'new' → logprob: -6.295078277587891
    7. ' left' → logprob: -6.420078277587891
    8. 'part' → logprob: -6.920078277587891
    9. 'p' → logprob: -7.045078277587891
    10. 'first' → logprob: -7.420078277587891

Token 716: '_piece' (ID: 126000)
  Prédit: '_piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -0.000945876759942621
    2. '_part' → logprob: -7.750946044921875
    3. ' =' → logprob: -8.125946044921875
    4. '_rect' → logprob: -9.125946044921875
    5. '_p' → logprob: -9.375946044921875
    6. '_sub' → logprob: -11.625946044921875
    7. '_w' → logprob: -12.250946044921875
    8. '_' → logprob: -12.375946044921875
    9. '_width' → logprob: -12.875946044921875
    10. '_side' → logprob: -13.625946044921875

Token 717: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0430457778275013
    2. '=' → logprob: -3.16804575920105
    3. ' ' → logprob: -11.043045997619629
    4. ',' → logprob: -11.043045997619629
    5. '_width' → logprob: -11.918045997619629
    6. 'w' → logprob: -13.668045997619629
    7. '_' → logprob: -13.793045997619629
    8. '_w' → logprob: -13.918045997619629
    9. 's' → logprob: -14.043045997619629
    10. '	' → logprob: -14.168045997619629

Token 718: ' Rect' (ID: 22765)
  Prédit: 'Rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rect' → logprob: -0.020588021725416183
    2. ' Rect' → logprob: -3.895587921142578
    3. '	Rect' → logprob: -11.145587921142578
    4. '   ' → logprob: -11.395587921142578
    5. 'self' → logprob: -11.520587921142578
    6. ' ' → logprob: -12.020587921142578
    7. '  ' → logprob: -13.770587921142578
    8. '(Rect' → logprob: -14.270587921142578
    9. ' ' → logprob: -14.270587921142578
    10. 'Rectangle' → logprob: -15.145587921142578

Token 719: 'angular' (ID: 8802)
  Prédit: 'angular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angular' → logprob: 0.0
    2. 'Angular' → logprob: -17.25
    3. 'ang' → logprob: -17.375
    4. 'angu' → logprob: -19.125
    5. 'angulo' → logprob: -19.625
    6. 'ular' → logprob: -19.75
    7. 'angle' → logprob: -20.125
    8. 'angled' → logprob: -20.375
    9. ' angular' → logprob: -20.5
    10. '```' → logprob: -21.0

Token 720: 'Piece' (ID: 36823)
  Prédit: 'Piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Piece' → logprob: -7.896309739408025e-07
    2. ' Piece' → logprob: -14.750000953674316
    3. 'Pie' → logprob: -15.500000953674316
    4. '_piece' → logprob: -16.75
    5. '```' → logprob: -18.125
    6. 'Pieces' → logprob: -18.25
    7. '(' → logprob: -18.375
    8. '   ' → logprob: -18.625
    9. 'piece' → logprob: -18.625
    10. ' piece' → logprob: -18.875

Token 721: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.20536361634731293
    2. '(int' → logprob: -1.7053636312484741
    3. '(' → logprob: -5.580363750457764
    4. '(round' → logprob: -9.455363273620605
    5. ' (' → logprob: -9.705363273620605
    6. 'int' → logprob: -10.830363273620605
    7. '(
' → logprob: -12.080363273620605
    8. '=cut' → logprob: -13.330363273620605
    9. '(w' → logprob: -13.955363273620605
    10. ' int' → logprob: -15.080363273620605

Token 722: 'ut' (ID: 339)
  Prédit: 'ut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.0004844154173042625
    2. '=cut' → logprob: -7.875484466552734
    3. 'cut' → logprob: -10.000484466552734
    4. '(' → logprob: -10.875484466552734
    5. 'at' → logprob: -11.875484466552734
    6. '(c' → logprob: -12.500484466552734
    7. '   ' → logprob: -12.750484466552734
    8. '{' → logprob: -12.875484466552734
    9. '_cut' → logprob: -12.875484466552734
    10. ' cut' → logprob: -13.000484466552734

Token 723: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -3.173704271830502e-06
    2. 'pos' → logprob: -13.12500286102295
    3. '_' → logprob: -14.25000286102295
    4. '_p' → logprob: -15.37500286102295
    5. '_start' → logprob: -15.87500286102295
    6. ' _' → logprob: -18.000003814697266
    7. '	pos' → logprob: -18.375003814697266
    8. 'Pos' → logprob: -18.500003814697266
    9. '_po' → logprob: -18.750003814697266
    10. '   ' → logprob: -19.125003814697266

Token 724: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5716304410016164e-05
    2. ' ,' → logprob: -11.000035285949707
    3. ',self' → logprob: -11.125035285949707
    4. ',
' → logprob: -13.000035285949707
    5. '           ' → logprob: -14.125035285949707
    6. 'self' → logprob: -14.375035285949707
    7. ',d' → logprob: -15.750035285949707
    8. '```' → logprob: -16.375036239624023
    9. '‌,' → logprob: -16.375036239624023
    10. ')' → logprob: -16.625036239624023

Token 725: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014204874634742737
    2. ' self' → logprob: -4.264204978942871
    3. '           ' → logprob: -10.264204978942871
    4. '               ' → logprob: -12.514204978942871
    5. '(self' → logprob: -14.264204978942871
    6. '
' → logprob: -14.764204978942871
    7. 'd' → logprob: -14.889204978942871
    8. '	self' → logprob: -15.014204978942871
    9. '[self' → logprob: -15.014204978942871
    10. '=self' → logprob: -15.639204978942871

Token 726: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0052514225244522095
    2. '_d' → logprob: -5.255251407623291
    3. '.d' → logprob: -12.00525188446045
    4. '.' → logprob: -12.63025188446045
    5. 'self' → logprob: -12.88025188446045
    6. '   ' → logprob: -13.13025188446045
    7. 'd' → logprob: -13.88025188446045
    8. ' .' → logprob: -15.38025188446045
    9. ' ' → logprob: -15.50525188446045
    10. '_self' → logprob: -15.50525188446045

Token 727: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -4.203409844194539e-05
    2. '_d' → logprob: -10.375041961669922
    3. 'depth' → logprob: -12.500041961669922
    4. ' d' → logprob: -12.500041961669922
    5. '	d' → logprob: -13.625041961669922
    6. '.d' → logprob: -14.375041961669922
    7. '
' → logprob: -15.000041961669922
    8. 'д' → logprob: -16.000041961669922
    9. '$d' → logprob: -16.000041961669922
    10. ')d' → logprob: -16.000041961669922

Token 728: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25208455324172974
    2. ')' → logprob: -1.502084493637085
    3. ')
' → logprob: -8.877084732055664
    4. '       ' → logprob: -12.002084732055664
    5. ')

' → logprob: -12.252084732055664
    6. '           ' → logprob: -12.752084732055664
    7. ' )
' → logprob: -13.502084732055664
    8. '   ' → logprob: -15.377084732055664
    9. '),' → logprob: -15.627084732055664
    10. ' )' → logprob: -16.002084732055664

Token 729: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2754892110824585
    2. 'right' → logprob: -1.6504892110824585
    3. ' right' → logprob: -3.025489330291748
    4. '	right' → logprob: -9.27548885345459
    5. ',right' → logprob: -9.27548885345459
    6. ',' → logprob: -10.65048885345459
    7. '.right' → logprob: -11.02548885345459
    8. '		' → logprob: -11.15048885345459
    9. '       ' → logprob: -11.27548885345459
    10. ')' → logprob: -11.40048885345459

Token 730: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -5.860340752406046e-05
    2. ' right' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.000059127807617
    4. '	right' → logprob: -16.250059127807617
    5. '       ' → logprob: -18.250059127807617
    6. ' ' → logprob: -18.375059127807617
    7. 'r' → logprob: -18.625059127807617
    8. '```' → logprob: -19.125059127807617
    9. '  ' → logprob: -19.625059127807617
    10. '
' → logprob: -20.125059127807617

Token 731: '_piece' (ID: 126000)
  Prédit: '_piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -2.8206473871250637e-05
    2. '_' → logprob: -11.250028610229492
    3. 'Piece' → logprob: -12.125028610229492
    4. '_p' → logprob: -12.375028610229492
    5. 'piece' → logprob: -13.000028610229492
    6. '```' → logprob: -13.500028610229492
    7. ' _' → logprob: -14.875028610229492
    8. ' piece' → logprob: -15.250028610229492
    9. '_side' → logprob: -15.625028610229492
    10. ' =' → logprob: -15.875028610229492

Token 732: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0485873706638813
    2. ' =' → logprob: -3.0485873222351074
    3. ')' → logprob: -17.298587799072266
    4. ',' → logprob: -17.673587799072266
    5. ' ' → logprob: -17.673587799072266
    6. '＝' → logprob: -18.298587799072266
    7. '=
' → logprob: -18.548587799072266
    8. 's' → logprob: -18.923587799072266
    9. '=}' → logprob: -19.423587799072266
    10. ')=' → logprob: -19.548587799072266

Token 733: ' Rect' (ID: 22765)
  Prédit: 'Rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rect' → logprob: -0.12721030414104462
    2. ' Rect' → logprob: -2.1272103786468506
    3. '	Rect' → logprob: -8.75221061706543
    4. '   ' → logprob: -9.50221061706543
    5. ' ' → logprob: -10.75221061706543
    6. '  ' → logprob: -11.37721061706543
    7. '    ' → logprob: -12.50221061706543
    8. '       ' → logprob: -12.75221061706543
    9. ' ' → logprob: -13.25221061706543
    10. '.Rect' → logprob: -13.37721061706543

Token 734: 'angular' (ID: 8802)
  Prédit: 'angular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angular' → logprob: -1.5690089639974758e-05
    2. 'ular' → logprob: -12.125015258789062
    3. 'angu' → logprob: -12.500015258789062
    4. 'ang' → logprob: -12.750015258789062
    5. 'Angular' → logprob: -12.750015258789062
    6. 'angle' → logprob: -15.750015258789062
    7. 't' → logprob: -16.000015258789062
    8. '```' → logprob: -16.125015258789062
    9. 'cular' → logprob: -16.250015258789062
    10. 'angulo' → logprob: -17.000015258789062

Token 735: 'Piece' (ID: 36823)
  Prédit: 'Piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Piece' → logprob: -7.896309739408025e-07
    2. 'piece' → logprob: -15.375000953674316
    3. ' Piece' → logprob: -16.125
    4. '_piece' → logprob: -16.5
    5. 'Pieces' → logprob: -16.625
    6. 'Rect' → logprob: -16.875
    7. 'Pie' → logprob: -17.25
    8. '[' → logprob: -17.625
    9. '```' → logprob: -17.75
    10. '(' → logprob: -17.75

Token 736: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.52788148727268e-05
    2. '(' → logprob: -9.750064849853516
    3. ' (' → logprob: -12.625064849853516
    4. 'self' → logprob: -13.500064849853516
    5. ' self' → logprob: -13.750064849853516
    6. '(
' → logprob: -14.250064849853516
    7. '(s' → logprob: -15.000064849853516
    8. '((' → logprob: -15.625064849853516
    9. '
' → logprob: -18.375064849853516
    10. '(sel' → logprob: -18.750064849853516

Token 737: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.001328095211647451
    2. '_w' → logprob: -6.626327991485596
    3. '.w' → logprob: -13.626328468322754
    4. '.' → logprob: -15.126328468322754
    5. '   ' → logprob: -15.126328468322754
    6. ' ' → logprob: -15.876328468322754
    7. 'self' → logprob: -16.376327514648438
    8. ' _' → logprob: -17.626327514648438
    9. ' .' → logprob: -18.001327514648438
    10. '       ' → logprob: -18.001327514648438

Token 738: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -3.173704271830502e-06
    2. '_w' → logprob: -13.37500286102295
    3. ' w' → logprob: -13.62500286102295
    4. '(w' → logprob: -16.375003814697266
    5. '	w' → logprob: -16.625003814697266
    6. '-w' → logprob: -17.000003814697266
    7. '
' → logprob: -17.625003814697266
    8. '.w' → logprob: -18.000003814697266
    9. ''w' → logprob: -18.000003814697266
    10. '   ' → logprob: -18.625003814697266

Token 739: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008624386973679066
    2. '-' → logprob: -4.75862455368042
    3. '-cut' → logprob: -12.133624076843262
    4. '-c' → logprob: -12.383624076843262
    5. ' ' → logprob: -16.383625030517578
    6. ' cut' → logprob: -17.758625030517578
    7. ' ' → logprob: -18.258625030517578
    8. ',' → logprob: -18.758625030517578
    9. '   ' → logprob: -18.758625030517578
    10. '-ex' → logprob: -18.883625030517578

Token 740: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -7.493430894101039e-05
    2. ' cut' → logprob: -9.500075340270996
    3. '_cut' → logprob: -18.25007438659668
    4. '=cut' → logprob: -19.00007438659668
    5. 'cutaneous' → logprob: -20.50007438659668
    6. 'Cut' → logprob: -20.62507438659668
    7. '   ' → logprob: -20.87507438659668
    8. '.cut' → logprob: -21.00007438659668
    9. '-cut' → logprob: -21.50007438659668
    10. 'cuts' → logprob: -22.37507438659668

Token 741: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -7.505351095460355e-05
    2. 'pos' → logprob: -9.500075340270996
    3. '	pos' → logprob: -16.12507438659668
    4. 'Pos' → logprob: -17.25007438659668
    5. '_' → logprob: -18.25007438659668
    6. '_p' → logprob: -18.75007438659668
    7. ' pos' → logprob: -18.87507438659668
    8. 'ing' → logprob: -19.12507438659668
    9. 's' → logprob: -19.25007438659668
    10. '[pos' → logprob: -19.62507438659668

Token 742: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.253090865968261e-06
    2. ' ,' → logprob: -11.625009536743164
    3. ',
' → logprob: -15.375009536743164
    4. '‌,' → logprob: -18.375009536743164
    5. '),' → logprob: -18.875009536743164
    6. '_,' → logprob: -18.875009536743164
    7. ',d' → logprob: -19.125009536743164
    8. ')' → logprob: -19.625009536743164
    9. ',self' → logprob: -19.875009536743164
    10. 's' → logprob: -20.000009536743164

Token 743: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004078758880496025
    2. ' self' → logprob: -5.5040788650512695
    3. '           ' → logprob: -15.87907886505127
    4. '       ' → logprob: -16.629077911376953
    5. '	self' → logprob: -17.129077911376953
    6. '(self' → logprob: -17.254077911376953
    7. '         ' → logprob: -17.254077911376953
    8. ' ' → logprob: -17.879077911376953
    9. '               ' → logprob: -17.879077911376953
    10. '   ' → logprob: -18.379077911376953

Token 744: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -6.988221684878226e-06
    2. '_d' → logprob: -12.000006675720215
    3. '.' → logprob: -14.500006675720215
    4. '_' → logprob: -17.25000762939453
    5. '.d' → logprob: -17.25000762939453
    6. ' _' → logprob: -17.75000762939453
    7. '   ' → logprob: -18.12500762939453
    8. '_depth' → logprob: -18.12500762939453
    9. ' ' → logprob: -18.37500762939453
    10. '_.' → logprob: -18.50000762939453

Token 745: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0006416652468033135
    2. '_d' → logprob: -7.375641822814941
    3. 'д' → logprob: -12.625641822814941
    4. 'w' → logprob: -12.750641822814941
    5. 'depth' → logprob: -13.000641822814941
    6. '.d' → logprob: -13.250641822814941
    7. '	d' → logprob: -13.750641822814941
    8. 'د' → logprob: -13.875641822814941
    9. ' d' → logprob: -13.875641822814941
    10. '­d' → logprob: -15.000641822814941

Token 746: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.518582762917504e-05
    2. ')
' → logprob: -9.37508487701416
    3. ' )' → logprob: -15.12508487701416
    4. '       ' → logprob: -16.625085830688477
    5. ')

' → logprob: -16.875085830688477
    6. ')
' → logprob: -18.000085830688477
    7. '   ' → logprob: -18.250085830688477
    8. ')return' → logprob: -18.375085830688477
    9. '),' → logprob: -19.750085830688477
    10. ' ' → logprob: -20.375085830688477

Token 747: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06282816082239151
    2. '       ' → logprob: -2.9378280639648438
    3. 'return' → logprob: -4.937828063964844
    4. ' return' → logprob: -7.812828063964844
    5. '
' → logprob: -8.687828063964844
    6. '		' → logprob: -9.437828063964844
    7. '	       ' → logprob: -10.312828063964844
    8. '	return' → logprob: -10.687828063964844
    9. '	' → logprob: -11.562828063964844
    10. '<|end|>' → logprob: -11.937828063964844

Token 748: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.1827482283115387
    2. '       ' → logprob: -1.9327481985092163
    3. ' elif' → logprob: -3.807748317718506
    4. '	elif' → logprob: -9.932747840881348
    5. 'else' → logprob: -11.057747840881348
    6. '<|end|>' → logprob: -12.557747840881348
    7. '   ' → logprob: -12.682747840881348
    8. '#elif' → logprob: -13.932747840881348
    9. ' else' → logprob: -14.432747840881348
    10. ')' → logprob: -15.432747840881348

Token 749: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.01605595462024212
    2. 'edge' → logprob: -4.141056060791016
    3. '(edge' → logprob: -11.641056060791016
    4. ' ' → logprob: -12.016056060791016
    5. '1' → logprob: -13.391056060791016
    6. '   ' → logprob: -13.766056060791016
    7. '=edge' → logprob: -13.766056060791016
    8. '    ' → logprob: -14.453556060791016
    9. '0' → logprob: -14.453556060791016
    10. '.edge' → logprob: -15.078556060791016

Token 750: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.014803254045546055
    2. ' ==' → logprob: -4.764803409576416
    3. '==' → logprob: -5.139803409576416
    4. 'index' → logprob: -8.264802932739258
    5. 'Index' → logprob: -11.264802932739258
    6. '   ' → logprob: -11.389802932739258
    7. '=' → logprob: -11.889802932739258
    8. '_' → logprob: -12.264802932739258
    9. '_INDEX' → logprob: -12.764802932739258
    10. '```' → logprob: -12.889802932739258

Token 751: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03365088626742363
    2. '==' → logprob: -3.4086508750915527
    3. ' ' → logprob: -13.408651351928711
    4. '=' → logprob: -13.533651351928711
    5. ' =' → logprob: -13.658651351928711
    6. ' ' → logprob: -14.908651351928711
    7. '==
' → logprob: -15.533651351928711
    8. ' ===' → logprob: -15.783651351928711
    9. ' ==
' → logprob: -16.15865135192871
    10. '===' → logprob: -16.15865135192871

Token 752: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0037041159812361
    2. ' ' → logprob: -5.628704071044922
    3. '3' → logprob: -9.253704071044922
    4. '2' → logprob: -12.128704071044922
    5. '   ' → logprob: -13.503704071044922
    6. '...' → logprob: -15.128704071044922
    7. '  ' → logprob: -15.128704071044922
    8. '[' → logprob: -15.941204071044922
    9. '0' → logprob: -16.003704071044922
    10. '```' → logprob: -16.066204071044922

Token 753: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. '2' → logprob: -10.875045776367188
    3. '3' → logprob: -11.250045776367188
    4. ' ' → logprob: -11.250045776367188
    5. '   ' → logprob: -16.750045776367188
    6. '```' → logprob: -16.875045776367188
    7. '１' → logprob: -17.187545776367188
    8. '...' → logprob: -17.312545776367188
    9. '0' → logprob: -17.812545776367188
    10. '
' → logprob: -17.875045776367188

Token 754: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.3458322731312364e-06
    2. ':
' → logprob: -12.375007629394531
    3. ' :' → logprob: -13.125007629394531
    4. '   ' → logprob: -15.125007629394531
    5. '#' → logprob: -15.500007629394531
    6. ':#' → logprob: -15.750007629394531
    7. ' ' → logprob: -16.37500762939453
    8. '       ' → logprob: -16.50000762939453
    9. '==' → logprob: -17.25000762939453
    10. ' ==' → logprob: -17.62500762939453

Token 755: ' ' (ID: 220)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' #' → logprob: -0.7363162636756897
    2. ' ' → logprob: -1.236316204071045
    3. '#' → logprob: -1.486316204071045
    4. '   ' → logprob: -6.111316204071045
    5. '           ' → logprob: -6.611316204071045
    6. '  ' → logprob: -7.986316204071045
    7. '       ' → logprob: -8.486316680908203
    8. '
' → logprob: -8.611316680908203
    9. '0' → logprob: -10.236316680908203
    10. ')' → logprob: -10.611316680908203

Token 756: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.009206168353557587
    2. ' #' → logprob: -5.259206295013428
    3. ' ' → logprob: -5.634206295013428
    4. '   ' → logprob: -8.13420581817627
    5. '       ' → logprob: -10.25920581817627
    6. ':' → logprob: -11.13420581817627
    7. 'cut' → logprob: -11.38420581817627
    8. '           ' → logprob: -11.50920581817627
    9. '  ' → logprob: -12.00920581817627
    10. '
' → logprob: -12.00920581817627

Token 757: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.4749993085861206
    2. 'right' → logprob: -0.9749993085861206
    3. ' bottom' → logprob: -7.34999942779541
    4. 'bottom' → logprob: -8.22499942779541
    5. '#' → logprob: -11.72499942779541
    6. 'Right' → logprob: -13.59999942779541
    7. 'top' → logprob: -14.97499942779541
    8. '	right' → logprob: -15.22499942779541
    9. ' ' → logprob: -15.34999942779541
    10. '_right' → logprob: -15.47499942779541

Token 758: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.25284120440483093
    2. 'edge' → logprob: -1.5028412342071533
    3. '_edge' → logprob: -7.002840995788574
    4. ' ' → logprob: -13.627840995788574
    5. '   ' → logprob: -15.002840995788574
    6. '=edge' → logprob: -15.252840995788574
    7. '(edge' → logprob: -15.377840995788574
    8. '_' → logprob: -15.627840995788574
    9. '.edge' → logprob: -16.12784194946289
    10. '-edge' → logprob: -17.37784194946289

Token 759: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20793066918849945
    2. ':
' → logprob: -1.7079306840896606
    3. '           ' → logprob: -5.457930564880371
    4. '=' → logprob: -6.957930564880371
    5. '       ' → logprob: -7.957930564880371
    6. ',' → logprob: -8.082930564880371
    7. ':
' → logprob: -8.582930564880371
    8. '#' → logprob: -8.957930564880371
    9. '   ' → logprob: -9.082930564880371
    10. '):
' → logprob: -9.957930564880371

Token 760: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10526850819587708
    2. '#' → logprob: -2.8552684783935547
    3. ' cut' → logprob: -3.6052684783935547
    4. 'cut' → logprob: -5.105268478393555
    5. '
' → logprob: -5.355268478393555
    6. ' #' → logprob: -6.605268478393555
    7. '   ' → logprob: -6.855268478393555
    8. '       ' → logprob: -6.855268478393555
    9. ':' → logprob: -7.855268478393555
    10. ',' → logprob: -9.230268478393555

Token 761: ' #' (ID: 1069)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.5726836919784546
    2. ' cut' → logprob: -0.9476836919784546
    3. '#' (adapté à ' #') → logprob: -3.072683811187744
    4. ' #' → logprob: -6.697683811187744
    5. '           ' → logprob: -7.447683811187744
    6. '       ' → logprob: -9.322683334350586
    7. '   ' → logprob: -9.572683334350586
    8. '
' → logprob: -10.697683334350586
    9. ' ' → logprob: -11.697683334350586
    10. 'if' → logprob: -11.885183334350586

Token 762: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.3159365653991699
    2. ' cut' → logprob: -1.31593656539917
    3. '#' → logprob: -5.94093656539917
    4. ' #' → logprob: -11.440937042236328
    5. '   ' → logprob: -11.815937042236328
    6. '       ' → logprob: -12.940937042236328
    7. 'offset' → logprob: -13.003437042236328
    8. '
' → logprob: -13.128437042236328
    9. '_cut' → logprob: -13.315937042236328
    10. 'The' → logprob: -13.440937042236328

Token 763: ' perpendicular' (ID: 137754)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.1122535765171051
    2. ' perpendicular' → logprob: -2.9872536659240723
    3. 'per' → logprob: -3.1122536659240723
    4. 'pos' → logprob: -4.862253665924072
    5. '_per' → logprob: -6.112253665924072
    6. 'vertical' → logprob: -8.362253189086914
    7. 'position' → logprob: -8.862253189086914
    8. '           ' → logprob: -8.987253189086914
    9. 'horizontal' → logprob: -8.987253189086914
    10. ' per' → logprob: -9.362253189086914

Token 764: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.06197720766067505
    2. 'to' → logprob: -2.8119771480560303
    3. '           ' → logprob: -12.06197738647461
    4. '_to' → logprob: -13.06197738647461
    5. '	to' → logprob: -14.68697738647461
    6. ' ' → logprob: -14.93697738647461
    7. '=' → logprob: -15.68697738647461
    8. '<|end|>' → logprob: -15.68697738647461
    9. ' =' → logprob: -16.31197738647461
    10. '   ' → logprob: -16.43697738647461

Token 765: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0062982309609651566
    2. ' right' → logprob: -5.881298065185547
    3. 'the' → logprob: -6.131298065185547
    4. 'top' → logprob: -6.881298065185547
    5. 'depth' → logprob: -9.756298065185547
    6. 'this' → logprob: -9.881298065185547
    7. ' the' → logprob: -10.131298065185547
    8. 'bottom' → logprob: -10.381298065185547
    9. 'self' → logprob: -10.881298065185547
    10. 'd' → logprob: -11.131298065185547

Token 766: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.07934797555208206
    2. 'edge' → logprob: -2.579348087310791
    3. '_edge' → logprob: -7.704348087310791
    4. '(edge' → logprob: -13.829347610473633
    5. ' side' → logprob: -13.954347610473633
    6. '   ' → logprob: -13.954347610473633
    7. ' edges' → logprob: -14.204347610473633
    8. 'edges' → logprob: -14.204347610473633
    9. ' ' → logprob: -14.454347610473633
    10. 'depth' → logprob: -14.829347610473633

Token 767: ' ->' (ID: 2747)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.02510717883706093
    2. ' =' → logprob: -4.275107383728027
    3. ':' → logprob: -5.775107383728027
    4. '=' → logprob: -5.900107383728027
    5. '           ' → logprob: -6.025107383728027
    6. ',' → logprob: -7.025107383728027
    7. ' line' → logprob: -8.025107383728027
    8. ' (' → logprob: -8.025107383728027
    9. '_pos' → logprob: -8.150107383728027
    10. 'at' → logprob: -8.275107383728027

Token 768: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.18184083700180054
    2. ' horizontal' → logprob: -1.8068408966064453
    3. 'vertical' → logprob: -6.806840896606445
    4. 'cut' → logprob: -7.681840896606445
    5. ' cut' → logprob: -8.181840896606445
    6. ' vertical' → logprob: -8.931840896606445
    7. 'offset' → logprob: -10.556840896606445
    8. 'depth' → logprob: -10.681840896606445
    9. '
' → logprob: -11.056840896606445
    10. '(horizontal' → logprob: -11.556840896606445

Token 769: ' cut' (ID: 6092)
  Prédit: ' cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cut' → logprob: -0.23978158831596375
    2. 'cut' → logprob: -1.7397816181182861
    3. ' line' → logprob: -3.864781618118286
    4. 'line' → logprob: -4.114781379699707
    5. '_cut' → logprob: -8.614781379699707
    6. '           ' → logprob: -9.364781379699707
    7. '   ' → logprob: -10.989781379699707
    8. ' ' → logprob: -11.364781379699707
    9. '_line' → logprob: -11.739781379699707
    10. '       ' → logprob: -12.114781379699707

Token 770: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.004219436086714268
    2. 'at' → logprob: -5.5042195320129395
    3. '           ' → logprob: -9.504219055175781
    4. '_at' → logprob: -11.004219055175781
    5. '(' → logprob: -11.254219055175781
    6. '   ' → logprob: -11.629219055175781
    7. ' ' → logprob: -12.129219055175781
    8. ' (' → logprob: -12.129219055175781
    9. ' line' → logprob: -12.504219055175781
    10. '	at' → logprob: -13.004219055175781

Token 771: ' position' (ID: 4010)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.23490828275680542
    2. ' offset' → logprob: -1.6099083423614502
    3. 'position' → logprob: -4.984908103942871
    4. ' position' → logprob: -6.109908103942871
    5. 'self' → logprob: -8.484908103942871
    6. 'distance' → logprob: -9.859908103942871
    7. 'depth' → logprob: -10.234908103942871
    8. 'the' → logprob: -10.609908103942871
    9. '(offset' → logprob: -11.109908103942871
    10. 'cut' → logprob: -11.234908103942871

Token 772: ' offset' (ID: 8985)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.01627400331199169
    2. ' offset' → logprob: -4.1412739753723145
    3. 'self' → logprob: -8.641274452209473
    4. '=' → logprob: -10.891274452209473
    5. 'ffset' → logprob: -11.141274452209473
    6. '(offset' → logprob: -11.391274452209473
    7. '_offset' → logprob: -12.016274452209473
    8. ' self' → logprob: -12.516274452209473
    9. '=self' → logprob: -13.141274452209473
    10. '           ' → logprob: -13.641274452209473

Token 773: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5311039090156555
    2. ' from' → logprob: -0.9061039090156555
    3. '<|end|>' → logprob: -5.15610408782959
    4. '_from' → logprob: -6.65610408782959
    5. '<|end|>' → logprob: -8.28110408782959
    6. ',' → logprob: -8.28110408782959
    7. '=' → logprob: -9.65610408782959
    8. '	from' → logprob: -9.65610408782959
    9. ' =' → logprob: -10.03110408782959
    10. '
' → logprob: -10.15610408782959

Token 774: ' NE' (ID: 10920)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.49879661202430725
    2. 'north' → logprob: -1.8737965822219849
    3. 'self' → logprob: -1.9987965822219849
    4. 'NW' → logprob: -2.4987967014312744
    5. 'nw' → logprob: -4.498796463012695
    6. '
' → logprob: -5.498796463012695
    7. ' ' → logprob: -6.248796463012695
    8. 'North' → logprob: -6.998796463012695
    9. 'n' → logprob: -6.998796463012695
    10. ' self' → logprob: -7.748796463012695

Token 775: ' corner' (ID: 14194)
  Prédit: 'corner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'corner' → logprob: -0.43391090631484985
    2. ' corner' → logprob: -1.058910846710205
    3. ' top' → logprob: -6.433910846710205
    4. 'top' → logprob: -6.558910846710205
    5. ' edge' → logprob: -7.308910846710205
    6. 'edge' → logprob: -8.308911323547363
    7. '0' → logprob: -8.433911323547363
    8. ' ' → logprob: -8.683911323547363
    9. 'depth' → logprob: -8.683911323547363
    10. '_corner' → logprob: -9.183911323547363

Token 776: ' south' (ID: 15019)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.13448892533779144
    2. 'from' → logprob: -3.384488821029663
    3. '           ' → logprob: -3.634488821029663
    4. ' down' → logprob: -4.009489059448242
    5. 'north' → logprob: -4.509489059448242
    6. 'up' → logprob: -5.259489059448242
    7. ',' → logprob: -5.509489059448242
    8. 'top' → logprob: -5.634489059448242
    9. 'depth' → logprob: -5.759489059448242
    10. 'd' → logprob: -5.884489059448242

Token 777: 'wards' (ID: 5323)
  Prédit: 'wards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wards' → logprob: -0.0015499753644689918
    2. 'ward' → logprob: -6.501550197601318
    3. 'west' → logprob: -10.75154972076416
    4. 'w' → logprob: -11.12654972076416
    5. '       ' → logprob: -12.75154972076416
    6. 'east' → logprob: -13.00154972076416
    7. 'ards' → logprob: -13.62654972076416
    8. '           ' → logprob: -14.00154972076416
    9. 'words' → logprob: -14.37654972076416
    10. '=' → logprob: -14.50154972076416

Token 778: '
' (ID: 198)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.8128386735916138
    2. ' cut' → logprob: -1.1878386735916138
    3. '           ' → logprob: -1.4378386735916138
    4. '
' → logprob: -4.687838554382324
    5. ',' → logprob: -6.187838554382324
    6. '       ' → logprob: -7.437838554382324
    7. '_cut' → logprob: -7.687838554382324
    8. '   ' → logprob: -8.062838554382324
    9. '            
' → logprob: -8.062838554382324
    10. '<|end|>' → logprob: -8.812838554382324

Token 779: '           ' (ID: 352)
  Prédit: ' cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cut' → logprob: -0.7309566736221313
    2. 'cut' → logprob: -0.9809566736221313
    3. '           ' → logprob: -1.9809566736221313
    4. '
' → logprob: -5.605956554412842
    5. '   ' → logprob: -7.355956554412842
    6. '       ' → logprob: -8.10595703125
    7. 'depth' → logprob: -8.35595703125
    8. '_cut' → logprob: -8.48095703125
    9. ',' → logprob: -8.98095703125
    10. '=cut' → logprob: -9.60595703125

Token 780: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' (adapté à ' cut') → logprob: -0.033735718578100204
    2. ' cut' → logprob: -3.408735752105713
    3. 'depth' → logprob: -9.408735275268555
    4. 'deep' → logprob: -13.158735275268555
    5. ' depth' → logprob: -13.283735275268555
    6. '_cut' → logprob: -14.033735275268555
    7. '
' → logprob: -14.283735275268555
    8. '=cut' → logprob: -14.283735275268555
    9. 'd' → logprob: -14.783735275268555
    10. '   ' → logprob: -15.658735275268555

Token 781: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00010628487507347018
    2. 'pos' → logprob: -9.250105857849121
    3. '_position' → logprob: -12.000105857849121
    4. '_' → logprob: -13.750105857849121
    5. '_start' → logprob: -14.125105857849121
    6. '_positions' → logprob: -14.500105857849121
    7. 's' → logprob: -14.875105857849121
    8. 'Pos' → logprob: -15.125105857849121
    9. '	pos' → logprob: -15.875105857849121
    10. '=' → logprob: -16.000106811523438

Token 782: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326231360435486
    2. '=' → logprob: -1.3132623434066772
    3. '=cut' → logprob: -15.188261985778809
    4. ' ' → logprob: -15.938261985778809
    5. ',' → logprob: -16.688262939453125
    6. ':' → logprob: -16.938262939453125
    7. '=
' → logprob: -17.313262939453125
    8. 's' → logprob: -17.813262939453125
    9. ')' → logprob: -18.438262939453125
    10. '<|end|>' → logprob: -18.438262939453125

Token 783: ' offset' (ID: 8985)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.00023166877508629113
    2. ' offset' → logprob: -8.375231742858887
    3. 'ffset' → logprob: -14.250231742858887
    4. 'off' → logprob: -15.875231742858887
    5. '	offset' → logprob: -16.37523078918457
    6. 'int' → logprob: -16.87523078918457
    7. '
' → logprob: -17.00023078918457
    8. '   ' → logprob: -17.50023078918457
    9. '_offset' → logprob: -17.87523078918457
    10. ' ' → logprob: -17.87523078918457

Token 784: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03212929889559746
    2. '
' → logprob: -3.5321292877197266
    3. 'if' → logprob: -6.532129287719727
    4. ',' → logprob: -7.782129287719727
    5. ' if' → logprob: -8.657129287719727
    6. '<|end|>' → logprob: -10.282129287719727
    7. ')
' → logprob: -10.532129287719727
    8. 'return' → logprob: -10.782129287719727
    9. 'def' → logprob: -10.907129287719727
    10. 'from' → logprob: -10.907129287719727

Token 785: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.054894693195819855
    2. 'if' → logprob: -3.4298946857452393
    3. ' if' → logprob: -4.179894924163818
    4. 'top' → logprob: -5.804894924163818
    5. '
' → logprob: -6.429894924163818
    6. '<|end|>' → logprob: -8.30489444732666
    7. 'cut' → logprob: -8.55489444732666
    8. ' top' → logprob: -8.67989444732666
    9. ' cut' → logprob: -8.92989444732666
    10. 'left' → logprob: -9.55489444732666

Token 786: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2845732569694519
    2. 'top' → logprob: -1.4095733165740967
    3. ' if' → logprob: -6.909573078155518
    4. 'cut' → logprob: -7.159573078155518
    5. '           ' → logprob: -7.409573078155518
    6. ' top' → logprob: -7.659573078155518
    7. 'upper' → logprob: -7.659573078155518
    8. 'up' → logprob: -9.784573554992676
    9. ' cut' → logprob: -11.409573554992676
    10. 'left' → logprob: -11.534573554992676

Token 787: ' cut' (ID: 6092)
  Prédit: ' cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cut' → logprob: -0.4741056561470032
    2. 'cut' → logprob: -0.9741056561470032
    3. '=cut' → logprob: -11.974105834960938
    4. '0' → logprob: -12.224105834960938
    5. '           ' → logprob: -12.349105834960938
    6. '1' → logprob: -12.474105834960938
    7. '   ' → logprob: -13.474105834960938
    8. '_cut' → logprob: -13.474105834960938
    9. '```' → logprob: -13.474105834960938
    10. ' ' → logprob: -13.724105834960938

Token 788: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -4.656383680412546e-05
    2. 'pos' → logprob: -10.000046730041504
    3. 'Pos' → logprob: -13.875046730041504
    4. '_start' → logprob: -16.375045776367188
    5. '	pos' → logprob: -17.000045776367188
    6. '_' → logprob: -17.500045776367188
    7. '>' → logprob: -18.250045776367188
    8. ' pos' → logprob: -18.250045776367188
    9. '```' → logprob: -18.250045776367188
    10. '<=' → logprob: -18.500045776367188

Token 789: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.023273780941963196
    2. ' <=' → logprob: -3.7732737064361572
    3. '>=' → logprob: -10.523273468017578
    4. ' >=' → logprob: -14.648273468017578
    5. '```' → logprob: -14.898273468017578
    6. '==' → logprob: -15.773273468017578
    7. ' ' → logprob: -16.023273468017578
    8. '<' → logprob: -16.273273468017578
    9. '   ' → logprob: -16.398273468017578
    10. '>' → logprob: -16.773273468017578

Token 790: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -18.250179290771484
    4. '=' → logprob: -18.875179290771484
    5. '۰' → logprob: -18.875179290771484
    6. '1' → logprob: -19.875179290771484
    7. '<|end|>' → logprob: -20.125179290771484
    8. '
' → logprob: -20.125179290771484
    9. '00' → logprob: -20.375179290771484
    10. '  ' → logprob: -20.500179290771484

Token 791: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '1' → logprob: -17.000051498413086
    4. '   ' → logprob: -18.250051498413086
    5. '۰' → logprob: -18.250051498413086
    6. '00' → logprob: -19.687551498413086
    7. '=' → logprob: -20.250051498413086
    8. '  ' → logprob: -20.562551498413086
    9. '
' → logprob: -20.625051498413086
    10. ' ' → logprob: -20.625051498413086

Token 792: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0009120595059357584
    2. 'or' → logprob: -7.000912189483643
    3. ' ' → logprob: -15.125911712646484
    4. '<|end|>' → logprob: -16.000911712646484
    5. '	or' → logprob: -16.000911712646484
    6. '           ' → logprob: -18.500911712646484
    7. ',' → logprob: -18.875911712646484
    8. ' ' → logprob: -18.875911712646484
    9. '[' → logprob: -19.000911712646484
    10. '```' → logprob: -19.250911712646484

Token 793: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.14267855882644653
    2. ' cut' → logprob: -2.0176784992218018
    3. '=cut' → logprob: -13.892678260803223
    4. '           ' → logprob: -14.267678260803223
    5. '_cut' → logprob: -14.642678260803223
    6. ' cutoff' → logprob: -15.517678260803223
    7. 'cutaneous' → logprob: -15.642678260803223
    8. ' ' → logprob: -15.642678260803223
    9. '```' → logprob: -15.767678260803223
    10. '   ' → logprob: -15.892678260803223

Token 794: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.005035813897848129
    2. 'pos' → logprob: -6.005035877227783
    3. 'cut' → logprob: -6.630035877227783
    4. '_cut' → logprob: -7.255035877227783
    5. '>=' → logprob: -8.255035400390625
    6. '_start' → logprob: -9.255035400390625
    7. ' cut' → logprob: -9.380035400390625
    8. 'Pos' → logprob: -10.130035400390625
    9. '_' → logprob: -11.505035400390625
    10. ' >=' → logprob: -11.630035400390625

Token 795: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.016045628115534782
    2. ' >=' → logprob: -4.141045570373535
    3. '>' → logprob: -11.766045570373535
    4. ']>=' → logprob: -12.766045570373535
    5. ')>=' → logprob: -14.391045570373535
    6. '≥' → logprob: -16.39104652404785
    7. '==' → logprob: -16.89104652404785
    8. '<|end|>' → logprob: -18.76604652404785
    9. '	' → logprob: -19.26604652404785
    10. '```' → logprob: -19.51604652404785

Token 796: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004082078114151955
    2. ' self' → logprob: -5.504082202911377
    3. '(self' → logprob: -13.754081726074219
    4. '           ' → logprob: -14.754081726074219
    5. '=self' → logprob: -14.879081726074219
    6. '[self' → logprob: -14.879081726074219
    7. ' ' → logprob: -15.254081726074219
    8. '   ' → logprob: -15.379081726074219
    9. '       ' → logprob: -15.504081726074219
    10. '	self' → logprob: -15.754081726074219

Token 797: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.004139549098908901
    2. '_d' → logprob: -5.504139423370361
    3. 'self' → logprob: -10.62913990020752
    4. '   ' → logprob: -10.87913990020752
    5. '_w' → logprob: -12.00413990020752
    6. '_.' → logprob: -13.00413990020752
    7. '       ' → logprob: -13.37913990020752
    8. '_' → logprob: -13.37913990020752
    9. '.' → logprob: -13.75413990020752
    10. 'd' → logprob: -13.75413990020752

Token 798: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -4.215330409351736e-05
    2. '_d' → logprob: -11.125041961669922
    3. 'depth' → logprob: -11.375041961669922
    4. 'w' → logprob: -12.125041961669922
    5. '```' → logprob: -12.625041961669922
    6. '
' → logprob: -13.250041961669922
    7. '	d' → logprob: -13.375041961669922
    8. '`' → logprob: -14.312541961669922
    9. '_depth' → logprob: -14.562541961669922
    10. ' d' → logprob: -14.750041961669922

Token 799: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6328333020210266
    2. ':
' → logprob: -0.7578333020210266
    3. '):
' → logprob: -9.382833480834961
    4. '           ' → logprob: -10.007833480834961
    5. '       ' → logprob: -10.257833480834961
    6. '<|end|>' → logprob: -10.382833480834961
    7. ':

' → logprob: -11.507833480834961
    8. '):' → logprob: -11.882833480834961
    9. ':
' → logprob: -12.507833480834961
    10. '               ' → logprob: -12.757833480834961

Token 800: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.048966456204652786
    2. '               ' → logprob: -3.048966407775879
    3. ' raise' → logprob: -9.423966407775879
    4. ':' → logprob: -9.673966407775879
    5. '          ' → logprob: -9.923966407775879
    6. ':
' → logprob: -10.173966407775879
    7. '       ' → logprob: -10.548966407775879
    8. '            ' → logprob: -10.673966407775879
    9. '   ' → logprob: -10.798966407775879
    10. ' ' → logprob: -10.923966407775879

Token 801: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.16031470894813538
    2. 'raise' (adapté à ' raise') → logprob: -1.910314679145813
    3. '           ' → logprob: -9.410314559936523
    4. '	raise' → logprob: -12.035314559936523
    5. '            ' → logprob: -13.535314559936523
    6. '               ' → logprob: -14.035314559936523
    7. 'Raise' → logprob: -14.660314559936523
    8. '   ' → logprob: -16.410314559936523
    9. '_raise' → logprob: -16.785314559936523
    10. '             ' → logprob: -17.660314559936523

Token 802: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0007127894787117839
    2. ' Value' → logprob: -7.250712871551514
    3. '	Value' → logprob: -13.500712394714355
    4. '_value' → logprob: -13.750712394714355
    5. '_Value' → logprob: -14.875712394714355
    6. '(Value' → logprob: -17.500713348388672
    7. '.Value' → logprob: -18.000713348388672
    8. 'value' → logprob: -18.250713348388672
    9. 'Val' → logprob: -18.375713348388672
    10. '<Value' → logprob: -18.875713348388672

Token 803: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -2.1054253011243418e-05
    2. 'Value' → logprob: -11.125020980834961
    3. 'rror' → logprob: -12.000020980834961
    4. 'SError' → logprob: -17.50002098083496
    5. 'error' → logprob: -18.25002098083496
    6. 'alue' → logprob: -18.25002098083496
    7. 'Val' → logprob: -19.75002098083496
    8. 'LError' → logprob: -20.25002098083496
    9. '
' → logprob: -21.12502098083496
    10. '(Value' → logprob: -21.50002098083496

Token 804: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.5094070477061905e-05
    2. '(' → logprob: -11.125015258789062
    3. '(
' → logprob: -15.375015258789062
    4. '('' → logprob: -17.375015258789062
    5. ' ("' → logprob: -17.750015258789062
    6. '(f' → logprob: -20.250015258789062
    7. '("
' → logprob: -20.500015258789062
    8. '("_' → logprob: -21.125015258789062
    9. '("("' → logprob: -21.375015258789062
    10. ' (' → logprob: -21.625015258789062

Token 805: 'Invalid' (ID: 12278)
  Prédit: 'Invalid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Invalid' → logprob: -0.000931825372390449
    2. ' Invalid' → logprob: -7.375931739807129
    3. 'cut' → logprob: -8.125931739807129
    4. ' cut' → logprob: -12.000931739807129
    5. 'Valid' → logprob: -13.500931739807129
    6. 'False' → logprob: -14.875931739807129
    7. '_invalid' → logprob: -15.125931739807129
    8. 'Value' → logprob: -15.250931739807129
    9. '.Invalid' → logprob: -15.500931739807129
    10. '<|end|>' → logprob: -15.875931739807129

Token 806: ' cut' (ID: 6092)
  Prédit: ' cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cut' → logprob: -0.006749124266207218
    2. 'cut' → logprob: -5.006749153137207
    3. '_cut' → logprob: -10.506749153137207
    4. ' depth' → logprob: -13.256749153137207
    5. '_' → logprob: -13.881749153137207
    6. ' cutoff' → logprob: -14.006749153137207
    7. ' ' → logprob: -14.131749153137207
    8. 'depth' → logprob: -14.381749153137207
    9. ' ' → logprob: -14.756749153137207
    10. '=cut' → logprob: -14.756749153137207

Token 807: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.05555235967040062
    2. 'position' → logprob: -2.9305522441864014
    3. '_position' → logprob: -7.4305524826049805
    4. '_pos' → logprob: -10.43055248260498
    5. 'pos' → logprob: -10.80555248260498
    6. '	position' → logprob: -11.30555248260498
    7. ' ' → logprob: -13.05555248260498
    8. '   ' → logprob: -13.55555248260498
    9. 'osition' → logprob: -13.68055248260498
    10. ' ' → logprob: -13.68055248260498

Token 808: ' along' (ID: 4251)
  Prédit: ' along'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' along' → logprob: -0.008621785789728165
    2. 'along' → logprob: -4.758621692657471
    3. 'Along' → logprob: -12.383622169494629
    4. ' ' → logprob: -13.883622169494629
    5. '<|end|>' → logprob: -14.633622169494629
    6. '           ' → logprob: -14.883622169494629
    7. ' Along' → logprob: -15.508622169494629
    8. '
' → logprob: -15.883622169494629
    9. ' ' → logprob: -16.008621215820312
    10. '```' → logprob: -16.133621215820312

Token 809: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.4744724631309509
    2. ' depth' → logprob: -0.9744724631309509
    3. 'height' → logprob: -8.099472045898438
    4. ' height' → logprob: -10.349472045898438
    5. 'width' → logprob: -10.474472045898438
    6. ' the' → logprob: -11.474472045898438
    7. 'length' → logprob: -11.974472045898438
    8. 'the' → logprob: -12.474472045898438
    9. ' width' → logprob: -12.849472045898438
    10. '(depth' → logprob: -13.099472045898438

Token 810: '.")
' (ID: 27834)
  Prédit: '.")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.")
' → logprob: -0.10027427226305008
    2. '.")' → logprob: -2.3502743244171143
    3. '.")
' → logprob: -9.975274085998535
    4. '.");' → logprob: -11.850274085998535
    5. '.")

' → logprob: -11.975274085998535
    6. '."' → logprob: -12.850274085998535
    7. '.' → logprob: -13.225274085998535
    8. '.)' → logprob: -13.600274085998535
    9. ' .' → logprob: -14.600274085998535
    10. '.')
' → logprob: -14.850274085998535

Token 811: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35957998037338257
    2. 'top' → logprob: -1.7345800399780273
    3. ' top' → logprob: -2.1095800399780273
    4. '
' → logprob: -6.734580039978027
    5. 'upper' → logprob: -6.984580039978027
    6. ' upper' → logprob: -7.109580039978027
    7. ' up' → logprob: -7.609580039978027
    8. 'up' → logprob: -8.609580039978027
    9. '	top' → logprob: -8.734580039978027
    10. '_top' → logprob: -8.984580039978027

Token 812: ' upper' (ID: 13057)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.002427144441753626
    2. ' top' → logprob: -6.502427101135254
    3. 'upper' (adapté à ' upper') → logprob: -7.002427101135254
    4. ' upper' → logprob: -12.127427101135254
    5. 'left' → logprob: -12.252427101135254
    6. 'up' → logprob: -13.127427101135254
    7. 'bottom' → logprob: -14.127427101135254
    8. '   ' → logprob: -14.252427101135254
    9. '	top' → logprob: -14.502427101135254
    10. '           ' → logprob: -15.127427101135254

Token 813: '_piece' (ID: 126000)
  Prédit: '_piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -5.5577775128767826e-06
    2. '_p' → logprob: -13.000005722045898
    3. '_left' → logprob: -13.750005722045898
    4. '_' → logprob: -13.750005722045898
    5. '_part' → logprob: -14.250005722045898
    6. 'piece' → logprob: -15.250005722045898
    7. ' =' → logprob: -16.2500057220459
    8. '=' → logprob: -17.1250057220459
    9. '_cut' → logprob: -17.5000057220459
    10. '_side' → logprob: -17.7500057220459

Token 814: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931489109992981
    2. ' =' → logprob: -0.6931489109992981
    3. ' ' → logprob: -14.193148612976074
    4. ',' → logprob: -15.318148612976074
    5. '<|end|>' → logprob: -15.943148612976074
    6. '   ' → logprob: -16.06814956665039
    7. 's' → logprob: -16.06814956665039
    8. '	' → logprob: -16.56814956665039
    9. '=
' → logprob: -16.56814956665039
    10. '1' → logprob: -16.81814956665039

Token 815: ' Rect' (ID: 22765)
  Prédit: 'Rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rect' → logprob: -0.0011791547294706106
    2. ' Rect' → logprob: -6.751179218292236
    3. '	Rect' → logprob: -11.751178741455078
    4. '           ' → logprob: -14.876178741455078
    5. 'Rects' → logprob: -15.626178741455078
    6. '   ' → logprob: -15.751178741455078
    7. '(Rect' → logprob: -16.001178741455078
    8. '.Rect' → logprob: -16.126178741455078
    9. '_Rect' → logprob: -16.376178741455078
    10. '  ' → logprob: -18.001178741455078

Token 816: 'angular' (ID: 8802)
  Prédit: 'angular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angular' → logprob: -0.09245295077562332
    2. '_rect' → logprob: -2.5924530029296875
    3. 'Rect' → logprob: -5.0924530029296875
    4. ' rectangular' → logprob: -6.2174530029296875
    5. 'agonal' → logprob: -6.7174530029296875
    6. 'ular' → logprob: -7.0924530029296875
    7. '(Rect' → logprob: -7.4674530029296875
    8. 'icular' → logprob: -8.217453002929688
    9. '_Rect' → logprob: -8.342453002929688
    10. 'inal' → logprob: -8.467453002929688

Token 817: 'Piece' (ID: 36823)
  Prédit: 'Piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Piece' → logprob: -3.650518920039758e-06
    2. '_piece' → logprob: -12.750003814697266
    3. ' Piece' → logprob: -14.500003814697266
    4. 'piece' → logprob: -16.000003814697266
    5. ' piece' → logprob: -16.750003814697266
    6. 'Pie' → logprob: -17.875003814697266
    7. 'Pieces' → logprob: -18.875003814697266
    8. '-piece' → logprob: -19.500003814697266
    9. 'iece' → logprob: -20.375003814697266
    10. '(piece' → logprob: -20.375003814697266

Token 818: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000307575857732445
    2. ' self' → logprob: -8.2503080368042
    3. '(self' → logprob: -10.0003080368042
    4. '           ' → logprob: -14.8753080368042
    5. '	self' → logprob: -16.000307083129883
    6. '   ' → logprob: -16.250307083129883
    7. '=self' → logprob: -16.500307083129883
    8. 's' → logprob: -16.625307083129883
    9. '
' → logprob: -17.250307083129883
    10. '       ' → logprob: -17.750307083129883

Token 819: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.012834995053708553
    2. '_w' → logprob: -4.3878350257873535
    3. 'self' → logprob: -8.387834548950195
    4. '.w' → logprob: -9.887834548950195
    5. '_width' → logprob: -11.137834548950195
    6. 'w' → logprob: -11.387834548950195
    7. '_self' → logprob: -12.262834548950195
    8. 's' → logprob: -13.012834548950195
    9. '       ' → logprob: -13.012834548950195
    10. '   ' → logprob: -13.137834548950195

Token 820: 'w' (ID: 86)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.0029879247304052114
    2. 'w' → logprob: -5.877987861633301
    3. 'self' → logprob: -8.6279878616333
    4. '.w' → logprob: -12.7529878616333
    5. '_width' → logprob: -15.3779878616333
    6. '._' → logprob: -15.5029878616333
    7. '_' → logprob: -15.8779878616333
    8. 'd' → logprob: -16.127988815307617
    9. '_d' → logprob: -16.127988815307617
    10. '_self' → logprob: -16.252988815307617

Token 821: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.500108141452074e-05
    2. ',self' → logprob: -11.000035285949707
    3. ' ,' → logprob: -11.500035285949707
    4. ',
' → logprob: -11.875035285949707
    5. 'self' → logprob: -14.375035285949707
    6. ',d' → logprob: -16.00003433227539
    7. ',int' → logprob: -16.00003433227539
    8. 's' → logprob: -16.12503433227539
    9. ',s' → logprob: -17.37503433227539
    10. ' self' → logprob: -17.37503433227539

Token 822: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.00020354038861114532
    2. ' cut' → logprob: -8.500203132629395
    3. '
' → logprob: -18.25020408630371
    4. '   ' → logprob: -19.37520408630371
    5. '=cut' → logprob: -20.00020408630371
    6. '_cut' → logprob: -20.12520408630371
    7. 'c' → logprob: -20.25020408630371
    8. 'cutaneous' → logprob: -20.87520408630371
    9. 'cuts' → logprob: -21.62520408630371
    10. '.cut' → logprob: -21.87520408630371

Token 823: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -5.796184723294573e-06
    2. 'pos' → logprob: -12.750005722045898
    3. '_start' → logprob: -12.875005722045898
    4. '_p' → logprob: -16.1250057220459
    5. '_' → logprob: -16.6250057220459
    6. 'Pos' → logprob: -17.5000057220459
    7. '
' → logprob: -18.2500057220459
    8. '_
' → logprob: -18.8750057220459
    9. 'd' → logprob: -19.2500057220459
    10. '```' → logprob: -19.2500057220459

Token 824: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03813834488391876
    2. ')' → logprob: -3.2881383895874023
    3. '           ' → logprob: -9.538138389587402
    4. ')
' → logprob: -10.788138389587402
    5. ' )
' → logprob: -13.288138389587402
    6. '       ' → logprob: -13.413138389587402
    7. ')

' → logprob: -14.163138389587402
    8. ' )' → logprob: -16.538137435913086
    9. '          ' → logprob: -16.663137435913086
    10. '),' → logprob: -17.163137435913086

Token 825: '           ' (ID: 352)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.3900761306285858
    2. '           ' → logprob: -1.1400761604309082
    3. ' lower' → logprob: -5.765076160430908
    4. 'bottom' → logprob: -11.14007568359375
    5. '       ' → logprob: -11.39007568359375
    6. '_lower' → logprob: -11.51507568359375
    7. '.lower' → logprob: -11.89007568359375
    8. '(lower' → logprob: -12.01507568359375
    9. '   ' → logprob: -12.51507568359375
    10. '
' → logprob: -12.51507568359375

Token 826: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' (adapté à ' lower') → logprob: -6.12258882028982e-05
    2. 'bottom' → logprob: -9.75006103515625
    3. ' lower' → logprob: -12.75006103515625
    4. '_lower' → logprob: -18.87506103515625
    5. 'Lower' → logprob: -19.75006103515625
    6. 'below' → logprob: -20.00006103515625
    7. '(lower' → logprob: -20.25006103515625
    8. 'down' → logprob: -20.50006103515625
    9. '```' → logprob: -21.00006103515625
    10. '.lower' → logprob: -21.50006103515625

Token 827: '_piece' (ID: 126000)
  Prédit: '_piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -8.828512363834307e-05
    2. 'Piece' → logprob: -9.500088691711426
    3. '_p' → logprob: -11.875088691711426
    4. '```' → logprob: -12.625088691711426
    5. '_' → logprob: -13.500088691711426
    6. '_P' → logprob: -14.875088691711426
    7. 'piece' → logprob: -15.250088691711426
    8. ' Piece' → logprob: -15.375088691711426
    9. ' =' → logprob: -15.625088691711426
    10. '=' → logprob: -15.625088691711426

Token 828: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. ' ' → logprob: -17.061967849731445
    4. ')' → logprob: -17.686967849731445
    5. ',' → logprob: -18.561967849731445
    6. '<|end|>' → logprob: -19.061967849731445
    7. 's' → logprob: -19.686967849731445
    8. ':' → logprob: -19.811967849731445
    9. '=
' → logprob: -19.936967849731445
    10. '   ' → logprob: -20.061967849731445

Token 829: ' Rect' (ID: 22765)
  Prédit: 'Rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rect' → logprob: -0.03805388882756233
    2. ' Rect' → logprob: -3.2880539894104004
    3. '	Rect' → logprob: -11.413053512573242
    4. '   ' → logprob: -15.163053512573242
    5. '(Rect' → logprob: -15.413053512573242
    6. ' ' → logprob: -15.413053512573242
    7. '.Rect' → logprob: -15.788053512573242
    8. '    ' → logprob: -16.163053512573242
    9. '_Rect' → logprob: -16.288053512573242
    10. '       ' → logprob: -16.413053512573242

Token 830: 'angular' (ID: 8802)
  Prédit: 'angular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angular' → logprob: -0.27456262707710266
    2. 'Rect' → logprob: -2.1495625972747803
    3. 'ular' → logprob: -2.1495625972747803
    4. 'Angular' → logprob: -5.149562835693359
    5. ' rectangular' → logprob: -7.274562835693359
    6. 'cular' → logprob: -8.89956283569336
    7. 'icular' → logprob: -9.02456283569336
    8. '_rect' → logprob: -10.02456283569336
    9. 'ect' → logprob: -10.52456283569336
    10. '(Rect' → logprob: -10.52456283569336

Token 831: 'Piece' (ID: 36823)
  Prédit: 'Piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Piece' → logprob: -5.438573680294212e-06
    2. '(self' → logprob: -12.250005722045898
    3. 'self' → logprob: -15.250005722045898
    4. ' Piece' → logprob: -16.0000057220459
    5. '_piece' → logprob: -16.3750057220459
    6. 'Point' → logprob: -16.7500057220459
    7. 'Pie' → logprob: -17.7500057220459
    8. 'piece' → logprob: -17.8750057220459
    9. '(' → logprob: -17.8750057220459
    10. 'Pieces' → logprob: -18.5000057220459

Token 832: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002609309973195195
    2. 'self' → logprob: -6.0026092529296875
    3. '(' → logprob: -9.627609252929688
    4. ' self' → logprob: -9.627609252929688
    5. '(
' → logprob: -14.127609252929688
    6. '[self' → logprob: -14.377609252929688
    7. ' (' → logprob: -15.252609252929688
    8. '=self' → logprob: -16.002609252929688
    9. '	self' → logprob: -17.002609252929688
    10. '       ' → logprob: -17.127609252929688

Token 833: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00017040544480551034
    2. '_w' → logprob: -8.875170707702637
    3. 'self' → logprob: -10.500170707702637
    4. '(self' → logprob: -14.000170707702637
    5. '.' → logprob: -14.250170707702637
    6. '.w' → logprob: -15.000170707702637
    7. 'w' → logprob: -15.625170707702637
    8. '   ' → logprob: -15.750170707702637
    9. '
' → logprob: -15.875170707702637
    10. '_' → logprob: -16.00016975402832

Token 834: 'w' (ID: 86)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0005207431968301535
    2. '_d' → logprob: -7.625520706176758
    3. 'w' → logprob: -10.750520706176758
    4. '
' → logprob: -12.625520706176758
    5. 'depth' → logprob: -13.000520706176758
    6. ' d' → logprob: -13.750520706176758
    7. '_w' → logprob: -14.250520706176758
    8. '	d' → logprob: -14.500520706176758
    9. '```' → logprob: -14.750520706176758
    10. '-d' → logprob: -14.938020706176758

Token 835: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02975558675825596
    2. '-' → logprob: -3.5297555923461914
    3. ' ' → logprob: -12.529755592346191
    4. ',' → logprob: -14.779755592346191
    5. '-d' → logprob: -14.779755592346191
    6. ' ' → logprob: -15.279755592346191
    7. ' -
' → logprob: -15.404755592346191
    8. '-
' → logprob: -16.154754638671875
    9. '-self' → logprob: -16.154754638671875
    10. '-cut' → logprob: -17.654754638671875

Token 836: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06197071075439453
    2. ' self' → logprob: -2.8119707107543945
    3. '(self' → logprob: -12.811970710754395
    4. '[self' → logprob: -15.936970710754395
    5. 'd' → logprob: -16.061969757080078
    6. '           ' → logprob: -16.811969757080078
    7. '=self' → logprob: -17.436969757080078
    8. '       ' → logprob: -18.061969757080078
    9. '	self' → logprob: -18.186969757080078
    10. '
' → logprob: -18.436969757080078

Token 837: '._' (ID: 2697)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.5759772658348083
    2. '._' → logprob: -0.8259772658348083
    3. '.d' → logprob: -10.950977325439453
    4. ' _' → logprob: -11.450977325439453
    5. '_' → logprob: -12.575977325439453
    6. ' -' → logprob: -13.575977325439453
    7. '   ' → logprob: -13.700977325439453
    8. '.' → logprob: -14.200977325439453
    9. ' ' → logprob: -14.325977325439453
    10. 'd' → logprob: -14.575977325439453

Token 838: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2113979209971149e-05
    2. '_d' → logprob: -11.375012397766113
    3. ' d' → logprob: -15.375012397766113
    4. '.d' → logprob: -16.000011444091797
    5. 'w' → logprob: -16.125011444091797
    6. '	d' → logprob: -16.500011444091797
    7. 'depth' → logprob: -17.375011444091797
    8. '­d' → logprob: -17.375011444091797
    9. '-d' → logprob: -17.875011444091797
    10. '$d' → logprob: -18.125011444091797

Token 839: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.004087305162101984
    2. '-' → logprob: -5.504087448120117
    3. ' ' → logprob: -11.754087448120117
    4. '-cut' → logprob: -14.504087448120117
    5. ' -
' → logprob: -15.379087448120117
    6. ' cut' → logprob: -15.879087448120117
    7. ' ' → logprob: -16.129087448120117
    8. 'cut' → logprob: -18.254087448120117
    9. '-
' → logprob: -18.254087448120117
    10. ' –' → logprob: -19.504087448120117

Token 840: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.029750604182481766
    2. ' cut' → logprob: -3.5297505855560303
    3. '_cut' → logprob: -16.52975082397461
    4. 'cutaneous' → logprob: -18.02975082397461
    5. '=cut' → logprob: -18.77975082397461
    6. '.cut' → logprob: -19.15475082397461
    7. '           ' → logprob: -19.90475082397461
    8. ' ' → logprob: -20.15475082397461
    9. ' ' → logprob: -20.15475082397461
    10. 'Cut' → logprob: -20.27975082397461

Token 841: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.9266199160483666e-05
    2. 'pos' → logprob: -10.875019073486328
    3. '_start' → logprob: -16.500019073486328
    4. 'Pos' → logprob: -16.500019073486328
    5. '	pos' → logprob: -17.500019073486328
    6. 's' → logprob: -18.000019073486328
    7. '_' → logprob: -18.375019073486328
    8. '[' → logprob: -18.875019073486328
    9. '_p' → logprob: -19.125019073486328
    10. 'ing' → logprob: -19.750019073486328

Token 842: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00408397801220417
    2. ')
' → logprob: -5.50408411026001
    3. '           ' → logprob: -12.629083633422852
    4. '       ' → logprob: -13.754083633422852
    5. ' )' → logprob: -14.004083633422852
    6. ')
' → logprob: -15.754083633422852
    7. ')

' → logprob: -16.50408363342285
    8. ')return' → logprob: -17.25408363342285
    9. '),' → logprob: -17.25408363342285
    10. '   ' → logprob: -18.00408363342285

Token 843: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011461924761533737
    2. 'return' → logprob: -4.5114617347717285
    3. ' return' → logprob: -7.8864617347717285
    4. '       ' → logprob: -10.511462211608887
    5. '		' → logprob: -12.386462211608887
    6. '
' → logprob: -13.011462211608887
    7. '   ' → logprob: -13.386462211608887
    8. '	return' → logprob: -13.886462211608887
    9. '	       ' → logprob: -14.136462211608887
    10. '{return' → logprob: -15.261462211608887

Token 844: ' left' (ID: 3561)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02867204137146473
    2. '       ' → logprob: -3.778671979904175
    3. '           ' → logprob: -5.403672218322754
    4. ' return' → logprob: -7.403672218322754
    5. 'left' (adapté à ' left') → logprob: -8.278672218322754
    6. 'cut' → logprob: -10.153672218322754
    7. '
' → logprob: -12.028672218322754
    8. '	return' → logprob: -13.528672218322754
    9. '   ' → logprob: -13.778672218322754
    10. ' left' → logprob: -14.778672218322754

Token 845: '_piece' (ID: 126000)
  Prédit: '_piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -0.022580672055482864
    2. ',' → logprob: -4.022580623626709
    3. '_' → logprob: -6.022580623626709
    4. 'Piece' → logprob: -7.772580623626709
    5. '=' → logprob: -8.522581100463867
    6. '_p' → logprob: -8.647581100463867
    7. '_,' → logprob: -8.772581100463867
    8. ',_' → logprob: -8.772581100463867
    9. ' =' → logprob: -9.022581100463867
    10. ' _' → logprob: -9.272581100463867

Token 846: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09372448176145554
    2. ' =' → logprob: -2.593724489212036
    3. ',' → logprob: -4.218724250793457
    4. ' ,' → logprob: -12.843724250793457
    5. '=

' → logprob: -12.968724250793457
    6. ',left' → logprob: -13.843724250793457
    7. '=
' → logprob: -14.593724250793457
    8. ',right' → logprob: -14.843724250793457
    9. '<|end|>' → logprob: -15.468724250793457
    10. '=center' → logprob: -16.343725204467773

Token 847: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0007099286303855479
    2. ' right' → logprob: -7.2507100105285645
    3. '	right' → logprob: -17.750709533691406
    4. '   ' → logprob: -18.500709533691406
    5. '
' → logprob: -19.625709533691406
    6. '           ' → logprob: -19.875709533691406
    7. 'Right' → logprob: -20.250709533691406
    8. ',right' → logprob: -20.750709533691406
    9. 'rig' → logprob: -21.000709533691406
    10. 'left' → logprob: -21.375709533691406

Token 848: '_piece' (ID: 126000)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889143377542496
    2. ' =' → logprob: -2.5788915157318115
    3. '_=' → logprob: -14.82889175415039
    4. '<|end|>' → logprob: -15.20389175415039
    5. '_' → logprob: -15.32889175415039
    6. ' ' → logprob: -15.45389175415039
    7. ',' → logprob: -15.57889175415039
    8. '=_' → logprob: -15.82889175415039
    9. '=
' → logprob: -15.95389175415039
    10. 's' → logprob: -17.57889175415039

Token 849: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163628220558167
    2. ' =' → logprob: -4.264163494110107
    3. '=
' → logprob: -15.889163970947266
    4. '=

' → logprob: -17.514163970947266
    5. ',' → logprob: -18.139163970947266
    6. '＝' → logprob: -18.264163970947266
    7. ' =
' → logprob: -19.389163970947266
    8. '=*/' → logprob: -19.389163970947266
    9. '=}' → logprob: -19.514163970947266
    10. '<|end|>' → logprob: -20.014163970947266

Token 850: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.005169600713998079
    2. ' upper' → logprob: -5.38016939163208
    3. '(' → logprob: -7.88016939163208
    4. 'lower' → logprob: -9.005169868469238
    5. ' (' → logprob: -11.005169868469238
    6. '   ' → logprob: -11.380169868469238
    7. '           ' → logprob: -11.505169868469238
    8. '(lower' → logprob: -12.255169868469238
    9. ' lower' → logprob: -14.130169868469238
    10. '
' → logprob: -14.255169868469238

Token 851: '_piece' (ID: 126000)
  Prédit: '_piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -6.611323624383658e-05
    2. '_p' → logprob: -9.750065803527832
    3. '_' → logprob: -12.375065803527832
    4. ',_' → logprob: -14.000065803527832
    5. ',' → logprob: -14.875065803527832
    6. 'piece' → logprob: -15.000065803527832
    7. '_,' → logprob: -15.000065803527832
    8. ' _' → logprob: -15.125065803527832
    9. '```' → logprob: -15.125065803527832
    10. '
' → logprob: -15.250065803527832

Token 852: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.507972572464496e-05
    2. ' ,' → logprob: -10.00009536743164
    3. ',
' → logprob: -10.12509536743164
    4. 'lower' → logprob: -13.12509536743164
    5. ',l' → logprob: -13.62509536743164
    6. ',right' → logprob: -13.87509536743164
    7. ',None' → logprob: -14.00009536743164
    8. ',\' → logprob: -14.62509536743164
    9. ',left' → logprob: -14.62509536743164
    10. '(lower' → logprob: -15.00009536743164

Token 853: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.0005530327325686812
    2. ' lower' → logprob: -7.500553131103516
    3. '(lower' → logprob: -18.375553131103516
    4. '.lower' → logprob: -19.875553131103516
    5. '   ' → logprob: -20.250553131103516
    6. 'low' → logprob: -20.375553131103516
    7. ' ' → logprob: -21.000553131103516
    8. 'Lower' → logprob: -21.375553131103516
    9. '_lower' → logprob: -21.750553131103516
    10. 'bottom' → logprob: -22.000553131103516

Token 854: '_piece' (ID: 126000)
  Prédit: '_piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -2.141186450899113e-05
    2. 'piece' → logprob: -11.125020980834961
    3. 'lower' → logprob: -12.125020980834961
    4. '_p' → logprob: -14.500020980834961
    5. 'Piece' → logprob: -15.500020980834961
    6. 'piec' → logprob: -15.750020980834961
    7. '```' → logprob: -16.00002098083496
    8. '-piece' → logprob: -17.12502098083496
    9. '_' → logprob: -17.37502098083496
    10. '_part' → logprob: -18.12502098083496

Token 855: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016074994346126914
    2. '<|end|>' → logprob: -9.500161170959473
    3. 'else' → logprob: -10.000161170959473
    4. ' else' → logprob: -10.875161170959473
    5. 'return' → logprob: -11.875161170959473
    6. 'elif' → logprob: -12.625161170959473
    7. '   ' → logprob: -12.875161170959473
    8. ')' → logprob: -12.875161170959473
    9. '           ' → logprob: -13.750161170959473
    10. '.' → logprob: -13.750161170959473

Token 856: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06544603407382965
    2. 'else' → logprob: -3.190446138381958
    3. 'elif' → logprob: -3.815446138381958
    4. ' else' → logprob: -9.065445899963379
    5. 'return' → logprob: -10.565445899963379
    6. ' elif' → logprob: -10.815445899963379
    7. '   ' → logprob: -12.315445899963379
    8. '	elif' → logprob: -13.690445899963379
    9. '```' → logprob: -14.565445899963379
    10. ')' → logprob: -14.940445899963379

Token 857: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2860812246799469
    2. '       ' → logprob: -1.5360811948776245
    3. 'elif' (adapté à ' elif') → logprob: -3.661081314086914
    4. ' else' → logprob: -4.911081314086914
    5. 'return' → logprob: -8.286081314086914
    6. '   ' → logprob: -8.911081314086914
    7. ' elif' → logprob: -9.161081314086914
    8. '	else' → logprob: -12.411081314086914
    9. '	elif' → logprob: -12.911081314086914
    10. '```' → logprob: -13.286081314086914

Token 858: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.12721922993659973
    2. 'edge' → logprob: -2.1272192001342773
    3. '2' → logprob: -8.752219200134277
    4. ' ' → logprob: -9.127219200134277
    5. '(edge' → logprob: -11.127219200134277
    6. '   ' → logprob: -12.502219200134277
    7. '=edge' → logprob: -14.064719200134277
    8. '.edge' → logprob: -14.189719200134277
    9. '_edge' → logprob: -14.377219200134277
    10. 'Edge' → logprob: -14.564719200134277

Token 859: '_index' (ID: 7748)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.19204893708229065
    2. ' ==' → logprob: -1.8170489072799683
    3. '_index' → logprob: -4.442049026489258
    4. '_' → logprob: -9.067049026489258
    5. 'index' → logprob: -9.067049026489258
    6. ']==' → logprob: -9.817049026489258
    7. '===' → logprob: -10.067049026489258
    8. '==
' → logprob: -10.817049026489258
    9. '=' → logprob: -10.942049026489258
    10. '   ' → logprob: -11.067049026489258

Token 860: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1602274775505066
    2. '==' → logprob: -1.9102275371551514
    3. '==
' → logprob: -13.91022777557373
    4. '=' → logprob: -14.16022777557373
    5. ' ' → logprob: -14.16022777557373
    6. '===' → logprob: -15.28522777557373
    7. ' ==
' → logprob: -15.66022777557373
    8. ' =' → logprob: -16.160226821899414
    9. ']==' → logprob: -16.410226821899414
    10. ')==' → logprob: -16.535226821899414

Token 861: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.596781946020201e-05
    2. ' ' → logprob: -10.000045776367188
    3. '3' → logprob: -15.000045776367188
    4. '۲' → logprob: -17.062545776367188
    5. '２' → logprob: -17.750045776367188
    6. '   ' → logprob: -17.875045776367188
    7. '```' → logprob: -18.500045776367188
    8. '[' → logprob: -18.687545776367188
    9. '#' → logprob: -19.187545776367188
    10. '२' → logprob: -19.187545776367188

Token 862: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.375001907348633
    3. '3' → logprob: -14.250001907348633
    4. '
' → logprob: -17.625001907348633
    5. '２' → logprob: -18.375001907348633
    6. '۲' → logprob: -18.500001907348633
    7. '-' → logprob: -19.125001907348633
    8. '```' → logprob: -19.187501907348633
    9. '   ' → logprob: -19.312501907348633
    10. '

' → logprob: -19.687501907348633

Token 863: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.200166469876422e-06
    2. '==' → logprob: -12.750004768371582
    3. ' ==' → logprob: -13.500004768371582
    4. '#' → logprob: -15.000004768371582
    5. ' :' → logprob: -15.500004768371582
    6. ':
' → logprob: -15.500004768371582
    7. ' ' → logprob: -16.2500057220459
    8. '   ' → logprob: -16.6250057220459
    9. '[' → logprob: -17.2500057220459
    10. '=' → logprob: -17.5000057220459

Token 864: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16420456767082214
    2. ' #' → logprob: -2.6642045974731445
    3. ' ' → logprob: -2.7892045974731445
    4. '   ' → logprob: -4.5392045974731445
    5. ' bottom' → logprob: -5.0392045974731445
    6. 'bottom' → logprob: -6.0392045974731445
    7. '0' → logprob: -8.414204597473145
    8. '       ' → logprob: -9.039204597473145
    9. ' cut' → logprob: -9.539204597473145
    10. '  ' → logprob: -9.664204597473145

Token 865: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4298200011253357
    2. ' ' → logprob: -1.5548200607299805
    3. 'bottom' → logprob: -2.6798200607299805
    4. ' #' → logprob: -3.6798200607299805
    5. '   ' → logprob: -3.9298200607299805
    6. ' bottom' → logprob: -4.0548200607299805
    7. '0' → logprob: -5.6798200607299805
    8. '2' → logprob: -6.5548200607299805
    9. '(bottom' → logprob: -6.9298200607299805
    10. '  ' → logprob: -7.0548200607299805

Token 866: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.014175030402839184
    2. ' bottom' → logprob: -4.264174938201904
    3. 'top' → logprob: -12.139175415039062
    4. '#' → logprob: -13.139175415039062
    5. '(bottom' → logprob: -13.889175415039062
    6. 'left' → logprob: -14.014175415039062
    7. '0' → logprob: -14.514175415039062
    8. ' ' → logprob: -15.014175415039062
    9. 'bot' → logprob: -15.014175415039062
    10. 'Bottom' → logprob: -15.264175415039062

Token 867: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.03804803267121315
    2. 'edge' → logprob: -3.288048028945923
    3. '_edge' → logprob: -12.038047790527344
    4. '   ' → logprob: -14.663047790527344
    5. '(edge' → logprob: -16.788047790527344
    6. ' ' → logprob: -16.913047790527344
    7. '_' → logprob: -17.163047790527344
    8. ' ' → logprob: -17.788047790527344
    9. '.edge' → logprob: -17.788047790527344
    10. '=edge' → logprob: -18.163047790527344

Token 868: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6966372728347778
    2. ':
' → logprob: -0.6966372728347778
    3. '           ' → logprob: -6.571637153625488
    4. '       ' → logprob: -6.696637153625488
    5. '   ' → logprob: -8.071637153625488
    6. '#' → logprob: -8.321637153625488
    7. '=' → logprob: -8.696637153625488
    8. '):
' → logprob: -10.821637153625488
    9. ':
' → logprob: -10.821637153625488
    10. ' =' → logprob: -10.946637153625488

Token 869: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31758084893226624
    2. '       ' → logprob: -2.3175809383392334
    3. '#' → logprob: -2.4425809383392334
    4. ':' → logprob: -2.8175809383392334
    5. ':
' → logprob: -4.067580699920654
    6. '   ' → logprob: -5.067580699920654
    7. '=' → logprob: -6.567580699920654
    8. 'cut' → logprob: -7.817580699920654
    9. ' #' → logprob: -7.942580699920654
    10. '```' → logprob: -8.567581176757812

Token 870: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.0317993201315403
    2. 'cut' → logprob: -3.78179931640625
    3. '           ' → logprob: -5.28179931640625
    4. ' cut' → logprob: -6.40679931640625
    5. ' #' → logprob: -6.53179931640625
    6. '       ' → logprob: -9.15679931640625
    7. '   ' → logprob: -9.40679931640625
    8. '
' → logprob: -9.65679931640625
    9. '```' → logprob: -10.15679931640625
    10. '``' → logprob: -12.03179931640625

Token 871: ' bottom' (ID: 8725)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.09700551629066467
    2. ' cut' → logprob: -2.472005605697632
    3. '#' → logprob: -4.847005367279053
    4. 'bottom' → logprob: -9.347005844116211
    5. '   ' → logprob: -9.972005844116211
    6. ' #' → logprob: -11.347005844116211
    7. ' bottom' → logprob: -11.597005844116211
    8. '
' → logprob: -11.847005844116211
    9. '       ' → logprob: -12.222005844116211
    10. '```' → logprob: -12.222005844116211

Token 872: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.20029804110527039
    2. ' edge' → logprob: -1.8252980709075928
    3. '_edge' → logprob: -3.9502980709075928
    4. 'cut' → logprob: -7.700297832489014
    5. 'elif' → logprob: -8.825298309326172
    6. 'pos' → logprob: -8.825298309326172
    7. '_pos' → logprob: -9.575298309326172
    8. 'if' → logprob: -9.575298309326172
    9. '_' → logprob: -10.200298309326172
    10. '   ' → logprob: -10.450298309326172

Token 873: ' counted' (ID: 60500)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.6699268817901611
    2. ' cut' → logprob: -1.6699268817901611
    3. ':
' → logprob: -2.794926881790161
    4. ' (' → logprob: -3.169926881790161
    5. '           ' → logprob: -3.169926881790161
    6. '#' → logprob: -3.419926881790161
    7. ':' → logprob: -3.419926881790161
    8. '
' → logprob: -3.794926881790161
    9. '       ' → logprob: -4.294926643371582
    10. '   ' → logprob: -4.919926643371582

Token 874: ' cw' (ID: 72592)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2229974269866943
    2. ' (' → logprob: -1.5979974269866943
    3. ':' → logprob: -2.7229974269866943
    4. ' is' → logprob: -2.7229974269866943
    5. 'from' → logprob: -2.9729974269866943
    6. ' same' → logprob: -3.0979974269866943
    7. ' from' → logprob: -3.4729974269866943
    8. ' =' → logprob: -3.8479974269866943
    9. ' at' → logprob: -3.9729974269866943
    10. '(top' → logprob: -3.9729974269866943

Token 875: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6378780007362366
    2. ' from' → logprob: -1.7628779411315918
    3. ':' → logprob: -1.8878779411315918
    4. ',' → logprob: -3.137877941131592
    5. ' (' → logprob: -3.387877941131592
    6. '#' → logprob: -3.887877941131592
    7. '(' → logprob: -5.012877941131592
    8. '   ' → logprob: -5.137877941131592
    9. '
' → logprob: -5.762877941131592
    10. 'edge' → logprob: -6.137877941131592

Token 876: ' NW' (ID: 58124)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.24814248085021973
    2. 'self' → logprob: -1.9981424808502197
    3. 'right' → logprob: -3.9981424808502197
    4. '0' → logprob: -3.9981424808502197
    5. 'NW' → logprob: -3.9981424808502197
    6. 'left' → logprob: -4.623142242431641
    7. 'NE' → logprob: -5.248142242431641
    8. '2' → logprob: -5.623142242431641
    9. '3' → logprob: -6.498142242431641
    10. 'bottom' → logprob: -6.873142242431641

Token 877: ' corner' (ID: 14194)
  Prédit: 'corner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'corner' → logprob: -0.10088787972927094
    2. ' corner' → logprob: -2.3508877754211426
    3. 'edge' → logprob: -7.975887775421143
    4. ',' → logprob: -9.3508882522583
    5. '2' → logprob: -9.6008882522583
    6. '_corner' → logprob: -10.4758882522583
    7. ' edge' → logprob: -10.9758882522583
    8. '#' → logprob: -10.9758882522583
    9. ':' → logprob: -11.1008882522583
    10. ' ' → logprob: -11.1008882522583

Token 878: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8201673626899719
    2. ':' → logprob: -1.8201673030853271
    3. 'cut' → logprob: -1.8201673030853271
    4. ':
' → logprob: -2.570167303085327
    5. '#' → logprob: -2.945167303085327
    6. '
' → logprob: -3.570167303085327
    7. ' cut' → logprob: -3.570167303085327
    8. ',' → logprob: -3.820167303085327
    9. ' (' → logprob: -4.945167541503906
    10. '=' → logprob: -5.320167541503906

Token 879: ' starting' (ID: 8601)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.05057092756032944
    2. ' cut' → logprob: -3.4255709648132324
    3. '#' → logprob: -4.300570964813232
    4. 'offset' → logprob: -6.175570964813232
    5. '
' → logprob: -7.550570964813232
    6. '   ' → logprob: -9.425570487976074
    7. ' offset' → logprob: -9.550570487976074
    8. '           ' → logprob: -9.613070487976074
    9. 'The' → logprob: -9.925570487976074
    10. '       ' → logprob: -10.175570487976074

Token 880: ' point' (ID: 2438)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.223825603723526
    2. 'at' → logprob: -2.098825693130493
    3. 'point' → logprob: -3.473825693130493
    4. ' at' → logprob: -3.723825693130493
    5. ' from' → logprob: -4.348825454711914
    6. 'offset' → logprob: -5.223825454711914
    7. ' point' → logprob: -6.848825454711914
    8. 'edge' → logprob: -6.848825454711914
    9. '#' → logprob: -7.098825454711914
    10. 'position' → logprob: -7.973825454711914

Token 881: ' from' (ID: 591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23804163932800293
    2. ' =' → logprob: -1.738041639328003
    3. '=cut' → logprob: -4.363041877746582
    4. 'offset' → logprob: -4.988041877746582
    5. ' is' → logprob: -5.488041877746582
    6. 'is' → logprob: -6.363041877746582
    7. 'from' → logprob: -6.488041877746582
    8. 'cut' → logprob: -6.488041877746582
    9. '+=' → logprob: -6.863041877746582
    10. '+' → logprob: -6.863041877746582

Token 882: ' SE' (ID: 6542)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.28425249457359314
    2. '0' → logprob: -1.7842525243759155
    3. 'bottom' → logprob: -4.034252643585205
    4. 'offset' → logprob: -4.159252643585205
    5. '(self' → logprob: -4.409252643585205
    6. 'SE' → logprob: -4.784252643585205
    7. 'top' → logprob: -5.284252643585205
    8. 'NW' → logprob: -5.534252643585205
    9. 'west' → logprob: -6.284252643585205
    10. 'acc' → logprob: -6.534252643585205

Token 883: ' corner' (ID: 14194)
  Prédit: ' corner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' corner' → logprob: -0.4292193651199341
    2. 'corner' → logprob: -1.054219365119934
    3. ' edge' → logprob: -8.679219245910645
    4. '_corner' → logprob: -9.179219245910645
    5. 'edge' → logprob: -9.429219245910645
    6. 'orner' → logprob: -10.179219245910645
    7. ',' → logprob: -10.929219245910645
    8. ' to' → logprob: -11.179219245910645
    9. 'erm' → logprob: -11.804219245910645
    10. '#' → logprob: -11.804219245910645

Token 884: ' going' (ID: 2966)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5979747772216797
    2. ' =' → logprob: -1.7229747772216797
    3. '
' → logprob: -3.0979747772216797
    4. '=' → logprob: -3.3479747772216797
    5. ' cut' → logprob: -3.4729747772216797
    6. ' -' → logprob: -3.5979747772216797
    7. ':' → logprob: -3.5979747772216797
    8. ' +' → logprob: -3.8479747772216797
    9. ',' → logprob: -4.34797477722168
    10. '+' → logprob: -4.34797477722168

Token 885: ' west' (ID: 14078)
  Prédit: 'west'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'west' → logprob: -0.002287164330482483
    2. ' west' → logprob: -6.6272873878479
    3. 'north' → logprob: -7.3772873878479
    4. 'east' → logprob: -9.002286911010742
    5. 'tow' → logprob: -9.127286911010742
    6. 'left' → logprob: -9.627286911010742
    7. 'back' → logprob: -11.127286911010742
    8. '0' → logprob: -11.502286911010742
    9. 'offset' → logprob: -12.127286911010742
    10. 'up' → logprob: -13.877286911010742

Token 886: 'ward' (ID: 2076)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1134021282196045
    2. ':' → logprob: -1.3634021282196045
    3. '           ' → logprob: -2.1134021282196045
    4. ' =' → logprob: -2.2384021282196045
    5. 'cut' → logprob: -2.9884021282196045
    6. ':
' → logprob: -3.7384021282196045
    7. ',' → logprob: -3.8634021282196045
    8. ' cut' → logprob: -3.9884021282196045
    9. '       ' → logprob: -4.488402366638184
    10. '+' → logprob: -4.488402366638184

Token 887: ' 
' (ID: 793)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.2972641885280609
    2. '           ' → logprob: -2.4222640991210938
    3. '
' → logprob: -2.5472640991210938
    4. ' cut' → logprob: -2.6722640991210938
    5. '=' → logprob: -5.547264099121094
    6. ':' → logprob: -5.672264099121094
    7. ',' → logprob: -5.797264099121094
    8. ':
' → logprob: -5.922264099121094
    9. ' =' → logprob: -6.422264099121094
    10. '#' → logprob: -6.422264099121094

Token 888: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6495321393013
    2. ' =' → logprob: -1.6495320796966553
    3. '=' → logprob: -2.0245320796966553
    4. ':' → logprob: -2.6495320796966553
    5. '       ' → logprob: -3.5245320796966553
    6. ':
' → logprob: -3.5245320796966553
    7. '```' → logprob: -5.399532318115234
    8. ' cut' → logprob: -5.649532318115234
    9. 'cut' → logprob: -6.024532318115234
    10. '
' → logprob: -6.024532318115234

Token 889: ' #' (ID: 1069)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.2078397423028946
    2. ' cut' → logprob: -1.7078397274017334
    3. '=' → logprob: -6.7078399658203125
    4. 'offset' → logprob: -6.9578399658203125
    5. '           ' → logprob: -7.0828399658203125
    6. '
' → logprob: -7.0828399658203125
    7. '=cut' → logprob: -7.7078399658203125
    8. ' =' → logprob: -8.332839965820312
    9. ':' → logprob: -8.457839965820312
    10. ':
' → logprob: -8.582839965820312

Token 890: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.003626558231189847
    2. ' cut' → logprob: -5.628626346588135
    3. '           ' → logprob: -11.753626823425293
    4. '#' → logprob: -11.878626823425293
    5. '
' → logprob: -12.253626823425293
    6. 'offset' → logprob: -13.253626823425293
    7. '   ' → logprob: -13.253626823425293
    8. 'bottom' → logprob: -14.503626823425293
    9. '       ' → logprob: -14.628626823425293
    10. '=cut' → logprob: -15.003626823425293

Token 891: ' perpendicular' (ID: 137754)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -4.596781946020201e-05
    2. '_start' → logprob: -10.875045776367188
    3. 'pos' → logprob: -11.125045776367188
    4. '_' → logprob: -11.750045776367188
    5. '_position' → logprob: -13.750045776367188
    6. 'Pos' → logprob: -14.000045776367188
    7. '_positions' → logprob: -15.000045776367188
    8. '_p' → logprob: -15.125045776367188
    9. 's' → logprob: -15.250045776367188
    10. '_surface' → logprob: -15.500045776367188

Token 892: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2811938226222992
    2. 'to' → logprob: -1.4061938524246216
    3. '<|end|>' → logprob: -11.281193733215332
    4. '_to' → logprob: -11.406193733215332
    5. '           ' → logprob: -11.531193733215332
    6. '#' → logprob: -13.531193733215332
    7. ',' → logprob: -13.656193733215332
    8. '=' → logprob: -14.031193733215332
    9. ' ' → logprob: -14.031193733215332
    10. '   ' → logprob: -14.031193733215332

Token 893: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.0018114368431270123
    2. ' bottom' → logprob: -6.876811504364014
    3. 'self' → logprob: -8.126811027526855
    4. 'top' → logprob: -8.251811027526855
    5. 'left' → logprob: -9.626811027526855
    6. 'the' → logprob: -10.126811027526855
    7. 'right' → logprob: -10.251811027526855
    8. '(bottom' → logprob: -10.876811027526855
    9. '0' → logprob: -11.376811027526855
    10. 'bot' → logprob: -11.751811027526855

Token 894: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.4741464853286743
    2. ' edge' → logprob: -0.9741464853286743
    3. '_edge' → logprob: -9.974146842956543
    4. '(edge' → logprob: -10.974146842956543
    5. 'line' → logprob: -13.599146842956543
    6. '=edge' → logprob: -13.849146842956543
    7. '   ' → logprob: -14.099146842956543
    8. ' line' → logprob: -14.349146842956543
    9. '.edge' → logprob: -14.474146842956543
    10. ' ' → logprob: -14.724146842956543

Token 895: ' ->' (ID: 2747)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28418880701065063
    2. '=' → logprob: -1.4091887474060059
    3. ':' → logprob: -6.409188747406006
    4. '           ' → logprob: -7.159188747406006
    5. ' at' → logprob: -8.534189224243164
    6. ':
' → logprob: -8.784189224243164
    7. ',' → logprob: -9.534189224243164
    8. '=cut' → logprob: -9.784189224243164
    9. ' cut' → logprob: -10.909189224243164
    10. '       ' → logprob: -11.284189224243164

Token 896: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.25467827916145325
    2. 'horizontal' → logprob: -1.5046782493591309
    3. ' vertical' → logprob: -6.129678249359131
    4. ' horizontal' → logprob: -7.504678249359131
    5. '#' → logprob: -11.129678726196289
    6. 'a' → logprob: -14.004678726196289
    7. '(vertical' → logprob: -14.504678726196289
    8. '   ' → logprob: -15.129678726196289
    9. 'Vertical' → logprob: -15.379678726196289
    10. '(horizontal' → logprob: -15.629678726196289

Token 897: ' cut' (ID: 6092)
  Prédit: ' cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cut' → logprob: -0.6390640735626221
    2. 'cut' → logprob: -0.7640640735626221
    3. '_cut' → logprob: -5.139063835144043
    4. '_' → logprob: -8.514063835144043
    5. '```' → logprob: -9.139063835144043
    6. '(' → logprob: -10.014063835144043
    7. 'line' → logprob: -10.014063835144043
    8. '   ' → logprob: -10.139063835144043
    9. ' line' → logprob: -10.389063835144043
    10. ' (' → logprob: -10.639063835144043

Token 898: ' similar' (ID: 6771)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.003926656674593687
    2. 'at' → logprob: -5.878926753997803
    3. '           ' → logprob: -6.878926753997803
    4. '   ' → logprob: -10.378926277160645
    5. '_at' → logprob: -10.503926277160645
    6. ' =' → logprob: -12.003926277160645
    7. '       ' → logprob: -12.003926277160645
    8. ' ' → logprob: -12.128926277160645
    9. '=' → logprob: -12.503926277160645
    10. '  ' → logprob: -12.878926277160645

Token 899: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.1602357029914856
    2. ' to' → logprob: -1.9102356433868408
    3. ' logic' → logprob: -12.660235404968262
    4. '	to' → logprob: -13.785235404968262
    5. '   ' → logprob: -13.910235404968262
    6. ' ' → logprob: -14.035235404968262
    7. '_to' → logprob: -14.035235404968262
    8. 'if' → logprob: -14.160235404968262
    9. 'position' → logprob: -14.160235404968262
    10. '
' → logprob: -14.160235404968262

Token 900: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.01773287169635296
    2. 'self' → logprob: -4.767733097076416
    3. 'edge' → logprob: -5.017733097076416
    4. '0' → logprob: -7.142733097076416
    5. ' top' → logprob: -7.142733097076416
    6. 'the' → logprob: -8.392732620239258
    7. 'left' → logprob: -8.642732620239258
    8. '(top' → logprob: -8.892732620239258
    9. 'if' → logprob: -9.142732620239258
    10. 'elif' → logprob: -10.392732620239258

Token 901: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.43318483233451843
    2. 'edge' → logprob: -1.0581848621368408
    3. '_edge' → logprob: -5.933184623718262
    4. '           ' → logprob: -6.933184623718262
    5. '       ' → logprob: -8.058184623718262
    6. '(edge' → logprob: -8.808184623718262
    7. ' cut' → logprob: -9.808184623718262
    8. '```' → logprob: -9.933184623718262
    9. 'elif' → logprob: -10.183184623718262
    10. 'cut' → logprob: -10.433184623718262

Token 902: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020965851843357086
    2. ' =' → logprob: -4.895966053009033
    3. '=' → logprob: -5.395966053009033
    4. '
' → logprob: -5.895966053009033
    5. '       ' → logprob: -6.145966053009033
    6. ' cut' → logprob: -6.770966053009033
    7. ',' → logprob: -6.895966053009033
    8. ':' → logprob: -8.020965576171875
    9. ' at' → logprob: -8.020965576171875
    10. '   ' → logprob: -8.395965576171875

Token 903: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01669812761247158
    2. '
' → logprob: -4.891698360443115
    3. '       ' → logprob: -5.641698360443115
    4. 'cut' → logprob: -5.891698360443115
    5. ' cut' → logprob: -6.766698360443115
    6. '   ' → logprob: -8.016697883605957
    7. '               ' → logprob: -8.016697883605957
    8. '=' → logprob: -8.266697883605957
    9. '```' → logprob: -9.016697883605957
    10. ' =' → logprob: -9.141697883605957

Token 904: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' (adapté à ' cut') → logprob: -0.029945673421025276
    2. ' cut' → logprob: -3.5299456119537354
    3. '           ' → logprob: -8.654945373535156
    4. 'offset' → logprob: -12.029945373535156
    5. '```' → logprob: -12.779945373535156
    6. '       ' → logprob: -13.279945373535156
    7. '
' → logprob: -13.279945373535156
    8. '   ' → logprob: -13.529945373535156
    9. '=cut' → logprob: -13.654945373535156
    10. '#' → logprob: -13.904945373535156

Token 905: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.747814349073451e-05
    2. '_start' → logprob: -11.250017166137695
    3. 'pos' → logprob: -13.125017166137695
    4. 'Pos' → logprob: -14.000017166137695
    5. '_position' → logprob: -14.000017166137695
    6. '_' → logprob: -14.500017166137695
    7. '_p' → logprob: -16.250017166137695
    8. '_positions' → logprob: -17.125017166137695
    9. 'start' → logprob: -17.750017166137695
    10. '_offset' → logprob: -18.125017166137695

Token 906: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692831456661224
    2. ' =' → logprob: -2.1269283294677734
    3. '=cut' → logprob: -16.126928329467773
    4. '=}' → logprob: -16.626928329467773
    5. ':' → logprob: -17.376928329467773
    6. '＝' → logprob: -17.501928329467773
    7. ',' → logprob: -17.501928329467773
    8. ' ' → logprob: -18.126928329467773
    9. '=

' → logprob: -18.626928329467773
    10. '.=' → logprob: -18.626928329467773

Token 907: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11686841398477554
    2. 'offset' → logprob: -2.491868495941162
    3. 'edges' → logprob: -3.616868495941162
    4. ' self' → logprob: -7.991868495941162
    5. 'edge' → logprob: -8.866868019104004
    6. '(self' → logprob: -9.741868019104004
    7. ' edges' → logprob: -9.991868019104004
    8. ' offset' → logprob: -10.866868019104004
    9. 'cut' → logprob: -11.616868019104004
    10. 'length' → logprob: -12.054368019104004

Token 908: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.008700020611286163
    2. '_w' → logprob: -4.758699893951416
    3. '.w' → logprob: -10.383700370788574
    4. '_' → logprob: -11.008700370788574
    5. '.' → logprob: -11.633700370788574
    6. '_edges' → logprob: -12.258700370788574
    7. 'self' → logprob: -12.383700370788574
    8. '
' → logprob: -12.883700370788574
    9. '_width' → logprob: -13.133700370788574
    10. ' ' → logprob: -13.133700370788574

Token 909: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -4.787507714354433e-05
    2. 'd' → logprob: -10.00004768371582
    3. '
' → logprob: -14.12504768371582
    4. '_w' → logprob: -14.25004768371582
    5. ' w' → logprob: -15.62504768371582
    6. '```' → logprob: -16.25004768371582
    7. '	w' → logprob: -16.25004768371582
    8. '   ' → logprob: -16.31254768371582
    9. '``' → logprob: -16.31254768371582
    10. ' ' → logprob: -16.50004768371582

Token 910: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2014141082763672
    2. '-' → logprob: -1.7014141082763672
    3. ' ' → logprob: -14.201414108276367
    4. '-offset' → logprob: -16.701414108276367
    5. ' ' → logprob: -16.826414108276367
    6. '-
' → logprob: -18.201414108276367
    7. '\-' → logprob: -18.451414108276367
    8. '−' → logprob: -18.951414108276367
    9. '‌' → logprob: -19.326414108276367
    10. ' -
' → logprob: -20.076414108276367

Token 911: ' offset' (ID: 8985)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -1.700132997939363e-05
    2. ' offset' → logprob: -11.000017166137695
    3. '(offset' → logprob: -15.500017166137695
    4. '	offset' → logprob: -20.375017166137695
    5. '_offset' → logprob: -21.125017166137695
    6. '(' → logprob: -21.250017166137695
    7. '.offset' → logprob: -21.250017166137695
    8. ' (' → logprob: -21.875017166137695
    9. ' ' → logprob: -22.250017166137695
    10. 'abs' → logprob: -22.375017166137695

Token 912: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3581981956958771
    2. '
' → logprob: -1.2331981658935547
    3. '<|end|>' → logprob: -5.233198165893555
    4. ' if' → logprob: -6.483198165893555
    5. 'if' → logprob: -6.608198165893555
    6. '       ' → logprob: -6.983198165893555
    7. '            
' → logprob: -8.608198165893555
    8. '<|end|>' → logprob: -9.733198165893555
    9. '   ' → logprob: -10.108198165893555
    10. '               ' → logprob: -10.108198165893555

Token 913: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007992943748831749
    2. '
' → logprob: -5.132992744445801
    3. ' if' → logprob: -6.757992744445801
    4. 'if' → logprob: -7.257992744445801
    5. '            
' → logprob: -9.7579927444458
    6. '       ' → logprob: -9.8829927444458
    7. '   ' → logprob: -10.7579927444458
    8. 'left' → logprob: -11.2579927444458
    9. ',' → logprob: -11.6329927444458
    10. '<|end|>' → logprob: -11.6329927444458

Token 914: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00515085831284523
    2. 'left' → logprob: -5.50515079498291
    3. ' if' → logprob: -7.13015079498291
    4. '           ' → logprob: -8.25515079498291
    5. ' left' → logprob: -12.50515079498291
    6. '   ' → logprob: -12.88015079498291
    7. '       ' → logprob: -12.88015079498291
    8. 'right' → logprob: -14.00515079498291
    9. '```' → logprob: -14.25515079498291
    10. 'cut' → logprob: -14.75515079498291

Token 915: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.38687509298324585
    2. ' cut' → logprob: -1.1368751525878906
    3. '0' → logprob: -14.01187515258789
    4. '   ' → logprob: -14.38687515258789
    5. ' ' → logprob: -14.38687515258789
    6. '=cut' → logprob: -14.88687515258789
    7. '1' → logprob: -15.38687515258789
    8. '(' → logprob: -15.63687515258789
    9. '_cut' → logprob: -15.63687515258789
    10. 'not' → logprob: -15.63687515258789

Token 916: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.0445127372804563e-05
    2. 'pos' → logprob: -11.50001049041748
    3. 'Pos' → logprob: -16.375009536743164
    4. '	pos' → logprob: -16.750009536743164
    5. 's' → logprob: -19.125009536743164
    6. '```' → logprob: -19.500009536743164
    7. '_p' → logprob: -19.625009536743164
    8. '_' → logprob: -19.750009536743164
    9. '_start' → logprob: -19.875009536743164
    10. ' pos' → logprob: -19.875009536743164

Token 917: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03804286941885948
    2. '<=' → logprob: -3.2880427837371826
    3. ' >=' → logprob: -14.538043022155762
    4. ' ' → logprob: -15.038043022155762
    5. '==' → logprob: -15.788043022155762
    6. '>=' → logprob: -16.038042068481445
    7. '```' → logprob: -16.038042068481445
    8. ')<=' → logprob: -16.163042068481445
    9. ' ==' → logprob: -16.288042068481445
    10. '<|end|>' → logprob: -17.288042068481445

Token 918: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. '   ' → logprob: -17.128177642822266
    4. ' ' → logprob: -18.378177642822266
    5. '۰' → logprob: -18.503177642822266
    6. '=' → logprob: -18.878177642822266
    7. '  ' → logprob: -19.503177642822266
    8. '```' → logprob: -19.753177642822266
    9. '00' → logprob: -20.753177642822266
    10. '1' → logprob: -20.878177642822266

Token 919: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '۰' → logprob: -19.75023078918457
    4. '=' → logprob: -21.12523078918457
    5. '   ' → logprob: -21.25023078918457
    6. ' ' → logprob: -22.00023078918457
    7. '  ' → logprob: -22.25023078918457
    8. '1' → logprob: -22.50023078918457
    9. '<|end|>' → logprob: -22.68773078918457
    10. '```' → logprob: -22.75023078918457

Token 920: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0004884536610916257
    2. 'or' → logprob: -7.62548828125
    3. ' ' → logprob: -14.75048828125
    4. '	or' → logprob: -16.12548828125
    5. '<|end|>' → logprob: -16.87548828125
    6. ' ' → logprob: -18.50048828125
    7. ' and' → logprob: -19.12548828125
    8. '           ' → logprob: -19.25048828125
    9. ',' → logprob: -19.37548828125
    10. '```' → logprob: -19.50048828125

Token 921: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.20141616463661194
    2. ' cut' → logprob: -1.7014161348342896
    3. '   ' → logprob: -14.326416015625
    4. '=cut' → logprob: -14.451416015625
    5. ' ' → logprob: -14.826416015625
    6. '_cut' → logprob: -15.076416015625
    7. '           ' → logprob: -15.451416015625
    8. '       ' → logprob: -15.826416015625
    9. '```' → logprob: -15.951416015625
    10. ' ' → logprob: -16.076416015625

Token 922: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.1916252076625824
    2. 'cut' → logprob: -1.8166252374649048
    3. ' cut' → logprob: -4.691625118255615
    4. '_cut' → logprob: -6.566625118255615
    5. 'pos' → logprob: -7.066625118255615
    6. '>=' → logprob: -9.316625595092773
    7. '_' → logprob: -9.441625595092773
    8. 'Pos' → logprob: -9.816625595092773
    9. '=cut' → logprob: -10.316625595092773
    10. '   ' → logprob: -10.566625595092773

Token 923: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5759503245353699
    2. ' >=' → logprob: -0.8259503245353699
    3. '>' → logprob: -11.700950622558594
    4. ']>=' → logprob: -13.950950622558594
    5. ')>=' → logprob: -13.950950622558594
    6. ' ' → logprob: -15.200950622558594
    7. ' >' → logprob: -16.075950622558594
    8. '   ' → logprob: -16.325950622558594
    9. '	' → logprob: -16.575950622558594
    10. '≥' → logprob: -16.825950622558594

Token 924: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002186426194384694
    2. ' self' → logprob: -6.127186298370361
    3. '           ' → logprob: -14.25218677520752
    4. '=self' → logprob: -15.37718677520752
    5. '(self' → logprob: -15.87718677520752
    6. '[self' → logprob: -16.752185821533203
    7. '	self' → logprob: -17.002185821533203
    8. ' ' → logprob: -17.252185821533203
    9. 'w' → logprob: -17.627185821533203
    10. '   ' → logprob: -17.752185821533203

Token 925: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.003217045683413744
    2. '_w' → logprob: -5.7532172203063965
    3. '   ' → logprob: -11.253216743469238
    4. 'self' → logprob: -11.503216743469238
    5. '.w' → logprob: -11.503216743469238
    6. '.' → logprob: -13.753216743469238
    7. '```' → logprob: -13.878216743469238
    8. '       ' → logprob: -14.253216743469238
    9. ' ' → logprob: -14.378216743469238
    10. ' .' → logprob: -14.503216743469238

Token 926: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -3.03521392197581e-05
    2. '_w' → logprob: -10.750030517578125
    3. 'd' → logprob: -12.375030517578125
    4. 'width' → logprob: -13.500030517578125
    5. ' w' → logprob: -13.500030517578125
    6. '	w' → logprob: -15.000030517578125
    7. 'depth' → logprob: -15.437530517578125
    8. '-w' → logprob: -15.625030517578125
    9. '```' → logprob: -16.062530517578125
    10. ''w' → logprob: -16.125030517578125

Token 927: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12709610164165497
    2. ':' → logprob: -2.127096176147461
    3. '           ' → logprob: -9.002096176147461
    4. '       ' → logprob: -11.252096176147461
    5. '):
' → logprob: -11.502096176147461
    6. ':
' → logprob: -11.877096176147461
    7. '               ' → logprob: -12.002096176147461
    8. ':

' → logprob: -12.252096176147461
    9. ' :
' → logprob: -14.002096176147461
    10. ',' → logprob: -14.252096176147461

Token 928: '               ' (ID: 506)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5110383033752441
    2. '           ' → logprob: -1.3860383033752441
    3. ':' → logprob: -2.011038303375244
    4. '               ' → logprob: -4.136038303375244
    5. '):
' → logprob: -9.761037826538086
    6. ',' → logprob: -10.011037826538086
    7. '       ' → logprob: -10.386037826538086
    8. ':
' → logprob: -10.886037826538086
    9. ':

' → logprob: -11.261037826538086
    10. '          ' → logprob: -11.386037826538086

Token 929: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.023273084312677383
    2. 'raise' (adapté à ' raise') → logprob: -3.77327299118042
    3. '           ' → logprob: -11.023273468017578
    4. '               ' → logprob: -11.898273468017578
    5. '	raise' → logprob: -12.523273468017578
    6. '            ' → logprob: -14.773273468017578
    7. '   ' → logprob: -15.898273468017578
    8. 'Raise' → logprob: -15.898273468017578
    9. '_raise' → logprob: -16.523273468017578
    10. '             ' → logprob: -17.523273468017578

Token 930: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0007124318508431315
    2. ' Value' → logprob: -7.2507123947143555
    3. '_Value' → logprob: -14.000712394714355
    4. '_value' → logprob: -14.250712394714355
    5. '	Value' → logprob: -14.500712394714355
    6. 'Val' → logprob: -15.125712394714355
    7. '(Value' → logprob: -16.125713348388672
    8. '.Value' → logprob: -16.750713348388672
    9. '<Value' → logprob: -16.875713348388672
    10. 'Va' → logprob: -18.000713348388672

Token 931: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -6.704273118884885e-07
    2. 'rror' → logprob: -14.500000953674316
    3. 'Value' → logprob: -16.75
    4. '("' → logprob: -17.5
    5. 'SError' → logprob: -19.125
    6. 'error' → logprob: -19.375
    7. 'LError' → logprob: -21.0
    8. 'Er' → logprob: -21.375
    9. 'Err' → logprob: -21.625
    10. '               ' → logprob: -21.625

Token 932: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -2.7848862373502925e-05
    2. '(' → logprob: -10.500027656555176
    3. '(
' → logprob: -15.125027656555176
    4. '('' → logprob: -17.500028610229492
    5. '("("' → logprob: -20.000028610229492
    6. '("
' → logprob: -20.000028610229492
    7. ' ("' → logprob: -20.250028610229492
    8. '("_' → logprob: -20.375028610229492
    9. '           ' → logprob: -21.000028610229492
    10. '       ' → logprob: -21.250028610229492

Token 933: 'Invalid' (ID: 12278)
  Prédit: 'Invalid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Invalid' → logprob: -0.2329254150390625
    2. 'Value' → logprob: -1.6079254150390625
    3. ' raise' → logprob: -5.7329254150390625
    4. 'raise' → logprob: -6.4829254150390625
    5. ' Invalid' → logprob: -7.2329254150390625
    6. 'left' → logprob: -7.2329254150390625
    7. ' Value' → logprob: -7.6079254150390625
    8. 'Valid' → logprob: -8.482925415039062
    9. 'Rect' → logprob: -8.857925415039062
    10. ' left' → logprob: -9.232925415039062

Token 934: ' cut' (ID: 6092)
  Prédit: ' cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cut' → logprob: -0.012510355561971664
    2. 'cut' → logprob: -4.387510299682617
    3. '_cut' → logprob: -15.262510299682617
    4. '=cut' → logprob: -16.012510299682617
    5. ' code' → logprob: -16.262510299682617
    6. ' cutoff' → logprob: -16.262510299682617
    7. ' ' → logprob: -16.512510299682617
    8. 'Cut' → logprob: -17.387510299682617
    9. '```' → logprob: -17.512510299682617
    10. ' ' → logprob: -17.512510299682617

Token 935: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.038652289658784866
    2. 'position' → logprob: -3.288652181625366
    3. '_position' → logprob: -7.663652420043945
    4. '           ' → logprob: -10.413652420043945
    5. '_pos' → logprob: -10.538652420043945
    6. '(position' → logprob: -10.663652420043945
    7. ' positions' → logprob: -11.163652420043945
    8. '	position' → logprob: -11.538652420043945
    9. 'pos' → logprob: -11.788652420043945
    10. '   ' → logprob: -11.913652420043945

Token 936: ' along' (ID: 4251)
  Prédit: ' along'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' along' → logprob: -0.002544631715863943
    2. 'along' → logprob: -6.002544403076172
    3. 'Along' → logprob: -9.752544403076172
    4. '```' → logprob: -13.252544403076172
    5. '           ' → logprob: -13.752544403076172
    6. ' (' → logprob: -14.065044403076172
    7. ' ' → logprob: -14.315044403076172
    8. '(' → logprob: -14.315044403076172
    9. '   ' → logprob: -14.440044403076172
    10. ' ' → logprob: -14.815044403076172

Token 937: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.0027386622969061136
    2. ' width' → logprob: -6.3777384757995605
    3. 'self' → logprob: -6.8777384757995605
    4. 'w' → logprob: -13.127738952636719
    5. ' self' → logprob: -13.502738952636719
    6. 'the' → logprob: -14.252738952636719
    7. 'depth' → logprob: -14.502738952636719
    8. 'length' → logprob: -15.002738952636719
    9. 'Width' → logprob: -15.252738952636719
    10. '_width' → logprob: -16.00273895263672

Token 938: '.")
' (ID: 27834)
  Prédit: '.")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.")
' → logprob: -0.01818026416003704
    2. '.")' → logprob: -4.0181803703308105
    3. '.")
' → logprob: -10.518179893493652
    4. '.")

' → logprob: -13.518179893493652
    5. ' .' → logprob: -13.893179893493652
    6. '.)' → logprob: -14.893179893493652
    7. '.')
' → logprob: -15.518179893493652
    8. '."' → logprob: -15.768179893493652
    9. '       ' → logprob: -16.01818084716797
    10. '.' → logprob: -16.51818084716797

Token 939: '           ' (ID: 352)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.24652883410453796
    2. 'left' → logprob: -1.6215288639068604
    3. '           ' → logprob: -3.8715288639068604
    4. '	left' → logprob: -10.871528625488281
    5. '   ' → logprob: -10.996528625488281
    6. '       ' → logprob: -11.996528625488281
    7. ' right' → logprob: -12.621528625488281
    8. '_left' → logprob: -12.746528625488281
    9. 'right' → logprob: -12.871528625488281
    10. ' bottom' → logprob: -12.996528625488281

Token 940: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.0005006087594665587
    2. ' left' → logprob: -7.625500679016113
    3. '   ' → logprob: -11.750500679016113
    4. 'right' → logprob: -13.375500679016113
    5. '       ' → logprob: -13.500500679016113
    6. '	left' → logprob: -13.625500679016113
    7. '           ' → logprob: -14.875500679016113
    8. 'bottom' → logprob: -17.750499725341797
    9. 'first' → logprob: -17.750499725341797
    10. 'l' → logprob: -17.875499725341797

Token 941: '_piece' (ID: 126000)
  Prédit: '_piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -3.650518920039758e-06
    2. '_' → logprob: -13.125003814697266
    3. '_p' → logprob: -13.750003814697266
    4. 'piece' → logprob: -15.875003814697266
    5. '_left' → logprob: -16.625003814697266
    6. 'Piece' → logprob: -16.625003814697266
    7. ' =' → logprob: -16.625003814697266
    8. '_side' → logprob: -17.000003814697266
    9. '_part' → logprob: -17.000003814697266
    10. '_cut' → logprob: -17.125003814697266

Token 942: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858794063329697
    2. ' =' → logprob: -3.0485880374908447
    3. ',' → logprob: -14.673587799072266
    4. ')' → logprob: -17.423587799072266
    5. ' ' → logprob: -17.673587799072266
    6. '<|end|>' → logprob: -18.173587799072266
    7. '=
' → logprob: -18.798587799072266
    8. '=cut' → logprob: -18.923587799072266
    9. '```' → logprob: -18.923587799072266
    10. 's' → logprob: -18.923587799072266

Token 943: ' Rect' (ID: 22765)
  Prédit: 'Rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rect' → logprob: -0.003181994194164872
    2. ' Rect' → logprob: -5.7531819343566895
    3. '	Rect' → logprob: -12.503182411193848
    4. '.Rect' → logprob: -15.628182411193848
    5. '(Rect' → logprob: -16.50318145751953
    6. '   ' → logprob: -16.50318145751953
    7. '_Rect' → logprob: -16.75318145751953
    8. 'rect' → logprob: -17.50318145751953
    9. 'Rects' → logprob: -17.50318145751953
    10. '_rect' → logprob: -17.62818145751953

Token 944: 'angular' (ID: 8802)
  Prédit: 'angular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angular' → logprob: -0.0004844154173042625
    2. 'Rect' → logprob: -8.250484466552734
    3. 'ular' → logprob: -9.000484466552734
    4. 'Angular' → logprob: -9.750484466552734
    5. '_rect' → logprob: -11.875484466552734
    6. 'cular' → logprob: -12.000484466552734
    7. 'ang' → logprob: -12.250484466552734
    8. '(Rect' → logprob: -12.375484466552734
    9. 'ct' → logprob: -12.875484466552734
    10. 'angu' → logprob: -12.875484466552734

Token 945: 'Piece' (ID: 36823)
  Prédit: 'Piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Piece' → logprob: -4.008129963040119e-06
    2. 'piece' → logprob: -13.125003814697266
    3. 'Pie' → logprob: -13.500003814697266
    4. 'iece' → logprob: -15.750003814697266
    5. ' Piece' → logprob: -15.750003814697266
    6. '_piece' → logprob: -16.125003814697266
    7. 'Pieces' → logprob: -16.250003814697266
    8. 'Rect' → logprob: -17.375003814697266
    9. 'P' → logprob: -18.375003814697266
    10. 'e' → logprob: -18.625003814697266

Token 946: '(c' (ID: 2410)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.3137345612049103
    2. '(c' → logprob: -1.313734531402588
    3. ' cut' → logprob: -7.938734531402588
    4. '(' → logprob: -9.938735008239746
    5. '=cut' → logprob: -10.063735008239746
    6. 'c' → logprob: -11.563735008239746
    7. '   ' → logprob: -11.938735008239746
    8. ' (' → logprob: -12.813735008239746
    9. '.cut' → logprob: -13.188735008239746
    10. '```' → logprob: -13.813735008239746

Token 947: 'ut' (ID: 339)
  Prédit: 'ut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.007753907237201929
    2. 'cut' → logprob: -4.882753849029541
    3. '=cut' → logprob: -9.1327543258667
    4. ' cut' → logprob: -10.3827543258667
    5. '   ' → logprob: -13.0077543258667
    6. '```' → logprob: -13.6327543258667
    7. '(' → logprob: -13.7577543258667
    8. '_cut' → logprob: -14.1327543258667
    9. '.cut' → logprob: -14.1327543258667
    10. '
' → logprob: -15.1327543258667

Token 948: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.9266199160483666e-05
    2. 'pos' → logprob: -10.875019073486328
    3. 'Pos' → logprob: -15.250019073486328
    4. '_' → logprob: -17.875019073486328
    5. '_p' → logprob: -18.000019073486328
    6. '	pos' → logprob: -18.000019073486328
    7. '_start' → logprob: -19.750019073486328
    8. ' pos' → logprob: -20.000019073486328
    9. 's' → logprob: -20.125019073486328
    10. '_piece' → logprob: -20.250019073486328

Token 949: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.676981345459353e-06
    2. ' ,' → logprob: -12.375005722045898
    3. ',self' → logprob: -13.750005722045898
    4. ',
' → logprob: -15.625005722045898
    5. 'self' → logprob: -16.1250057220459
    6. ',d' → logprob: -18.6250057220459
    7. '‌,' → logprob: -19.0000057220459
    8. '<|end|>' → logprob: -19.2500057220459
    9. '           ' → logprob: -19.5000057220459
    10. '   ' → logprob: -19.7500057220459

Token 950: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011727249948307872
    2. ' self' → logprob: -6.7511725425720215
    3. '       ' → logprob: -13.37617301940918
    4. '           ' → logprob: -15.00117301940918
    5. '	self' → logprob: -15.87617301940918
    6. '   ' → logprob: -16.00117301940918
    7. '(self' → logprob: -16.12617301940918
    8. '
' → logprob: -16.75117301940918
    9. ' ' → logprob: -17.12617301940918
    10. '[self' → logprob: -17.12617301940918

Token 951: '._' (ID: 2697)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.5761145949363708
    2. '._' → logprob: -0.8261145949363708
    3. 'self' → logprob: -9.326114654541016
    4. '.d' → logprob: -9.701114654541016
    5. '   ' → logprob: -11.576114654541016
    6. '_s' → logprob: -12.576114654541016
    7. ' _' → logprob: -13.076114654541016
    8. 'd' → logprob: -13.201114654541016
    9. '       ' → logprob: -13.201114654541016
    10. '_self' → logprob: -13.201114654541016

Token 952: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005959495436400175
    2. '_d' → logprob: -5.130959510803223
    3. 'self' → logprob: -10.880959510803223
    4. 'depth' → logprob: -11.630959510803223
    5. '.d' → logprob: -14.130959510803223
    6. ' d' → logprob: -14.380959510803223
    7. '	d' → logprob: -14.380959510803223
    8. '_depth' → logprob: -15.380959510803223
    9. '$d' → logprob: -15.880959510803223
    10. 'д' → logprob: -16.130958557128906

Token 953: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.033384013921022415
    2. ')' → logprob: -3.533384084701538
    3. '           ' → logprob: -5.658383846282959
    4. ',' → logprob: -9.283384323120117
    5. '       ' → logprob: -10.783384323120117
    6. '),' → logprob: -11.283384323120117
    7. '               ' → logprob: -12.658384323120117
    8. ')
' → logprob: -13.283384323120117
    9. ' )
' → logprob: -13.408384323120117
    10. 'right' → logprob: -13.908384323120117

Token 954: '           ' (ID: 352)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.22612029314041138
    2. '           ' → logprob: -1.7261202335357666
    3. ' right' → logprob: -3.7261202335357666
    4. ',right' → logprob: -8.851119995117188
    5. ',' → logprob: -9.726119995117188
    6. '       ' → logprob: -10.226119995117188
    7. '.right' → logprob: -10.601119995117188
    8. '	right' → logprob: -10.851119995117188
    9. '(right' → logprob: -11.851119995117188
    10. '   ' → logprob: -11.851119995117188

Token 955: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -4.5491004129871726e-05
    2. ' right' → logprob: -10.000045776367188
    3. '           ' → logprob: -18.750045776367188
    4. '	right' → logprob: -19.625045776367188
    5. '       ' → logprob: -20.625045776367188
    6. 'Right' → logprob: -20.875045776367188
    7. '.right' → logprob: -22.375045776367188
    8. ' ' → logprob: -22.500045776367188
    9. 'r' → logprob: -22.875045776367188
    10. '   ' → logprob: -23.000045776367188

Token 956: '_piece' (ID: 126000)
  Prédit: '_piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -0.0002602629829198122
    2. '_p' → logprob: -8.625260353088379
    3. '_' → logprob: -10.250260353088379
    4. 'Piece' → logprob: -10.625260353088379
    5. '```' → logprob: -12.250260353088379
    6. '_P' → logprob: -12.500260353088379
    7. ')_' → logprob: -12.500260353088379
    8. ' _' → logprob: -12.625260353088379
    9. '._' → logprob: -13.125260353088379
    10. '   ' → logprob: -14.250260353088379

Token 957: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868977725505829
    2. ' =' → logprob: -1.1368978023529053
    3. ')' → logprob: -11.261898040771484
    4. '(Rect' → logprob: -12.511898040771484
    5. ',' → logprob: -13.011898040771484
    6. 'Rect' → logprob: -13.136898040771484
    7. 'Piece' → logprob: -13.511898040771484
    8. ':' → logprob: -13.886898040771484
    9. '-' → logprob: -14.261898040771484
    10. '   ' → logprob: -14.636898040771484

Token 958: ' Rect' (ID: 22765)
  Prédit: 'Rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rect' → logprob: -0.20143720507621765
    2. ' Rect' → logprob: -1.70143723487854
    3. '	Rect' → logprob: -10.951436996459961
    4. ' ' → logprob: -13.201436996459961
    5. '   ' → logprob: -13.701436996459961
    6. ' ' → logprob: -14.326436996459961
    7. '.Rect' → logprob: -14.701436996459961
    8. '(Rect' → logprob: -14.826436996459961
    9. '       ' → logprob: -15.201436996459961
    10. '    ' → logprob: -15.326436996459961

Token 959: 'angular' (ID: 8802)
  Prédit: 'angular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angular' → logprob: -0.00020544764993246645
    2. 'ular' → logprob: -8.625205039978027
    3. 'Angular' → logprob: -11.375205039978027
    4. 'cular' → logprob: -12.000205039978027
    5. 'ang' → logprob: -12.375205039978027
    6. 'angu' → logprob: -13.625205039978027
    7. '```' → logprob: -14.500205039978027
    8. '(self' → logprob: -14.875205039978027
    9. 'angle' → logprob: -14.875205039978027
    10. 'icular' → logprob: -15.375205039978027

Token 960: 'Piece' (ID: 36823)
  Prédit: 'Piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Piece' → logprob: -1.8624639324116288e-06
    2. ' Piece' → logprob: -14.500001907348633
    3. 'iece' → logprob: -14.500001907348633
    4. '_piece' → logprob: -14.500001907348633
    5. '_P' → logprob: -16.875001907348633
    6. 'piece' → logprob: -17.000001907348633
    7. 'P' → logprob: -17.250001907348633
    8. 'Pie' → logprob: -17.625001907348633
    9. 'Pieces' → logprob: -17.875001907348633
    10. 'o' → logprob: -18.250001907348633

Token 961: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0032483008690178394
    2. 'self' → logprob: -5.75324821472168
    3. '(' → logprob: -10.62824821472168
    4. ' (' → logprob: -10.62824821472168
    5. ' self' → logprob: -10.75324821472168
    6. '(
' → logprob: -14.50324821472168
    7. '[self' → logprob: -15.75324821472168
    8. '0' → logprob: -17.62824821472168
    9. '	self' → logprob: -17.87824821472168
    10. '       ' → logprob: -18.00324821472168

Token 962: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -9.65101717156358e-05
    2. '_w' → logprob: -9.250096321105957
    3. '.w' → logprob: -16.250097274780273
    4. '_' → logprob: -17.250097274780273
    5. 'self' → logprob: -17.250097274780273
    6. '.' → logprob: -17.375097274780273
    7. '_.' → logprob: -18.000097274780273
    8. '_self' → logprob: -18.000097274780273
    9. ']._' → logprob: -18.250097274780273
    10. ')._' → logprob: -18.625097274780273

Token 963: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.008639981970191002
    2. '_w' → logprob: -4.758639812469482
    3. 'd' → logprob: -10.75864028930664
    4. '_d' → logprob: -13.50864028930664
    5. '-w' → logprob: -14.13364028930664
    6. '	w' → logprob: -14.88364028930664
    7. '.w' → logprob: -15.00864028930664
    8. 'width' → logprob: -15.00864028930664
    9. ' w' → logprob: -15.38364028930664
    10. ''w' → logprob: -15.50864028930664

Token 964: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.029773514717817307
    2. '-' → logprob: -3.529773473739624
    3. '-cut' → logprob: -11.029773712158203
    4. ' ' → logprob: -12.154773712158203
    5. ' cut' → logprob: -14.654773712158203
    6. '-c' → logprob: -14.779773712158203
    7. ' -
' → logprob: -15.404773712158203
    8. ' ' → logprob: -15.654773712158203
    9. 'cut' → logprob: -16.154773712158203
    10. '   ' → logprob: -16.529773712158203

Token 965: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.00015860427811276168
    2. ' cut' → logprob: -8.750158309936523
    3. '=cut' → logprob: -16.750158309936523
    4. 'c' → logprob: -17.250158309936523
    5. '_cut' → logprob: -18.625158309936523
    6. 'Cut' → logprob: -18.625158309936523
    7. 'cat' → logprob: -19.250158309936523
    8. '   ' → logprob: -20.125158309936523
    9. 'cutaneous' → logprob: -20.250158309936523
    10. '.cut' → logprob: -21.125158309936523

Token 966: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -3.15441757265944e-05
    2. 'pos' → logprob: -10.375031471252441
    3. 'Pos' → logprob: -16.125032424926758
    4. '	pos' → logprob: -16.500032424926758
    5. '_piece' → logprob: -16.750032424926758
    6. 'piece' → logprob: -18.500032424926758
    7. ' pos' → logprob: -18.625032424926758
    8. 'ing' → logprob: -18.875032424926758
    9. '_' → logprob: -19.875032424926758
    10. '_position' → logprob: -20.250032424926758

Token 967: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.0948158382670954e-05
    2. ' ,' → logprob: -10.750030517578125
    3. ',self' → logprob: -12.125030517578125
    4. 'self' → logprob: -13.375030517578125
    5. ',
' → logprob: -14.250030517578125
    6. ')' → logprob: -14.625030517578125
    7. ',right' → logprob: -14.875030517578125
    8. '),' → logprob: -15.625030517578125
    9. ',c' → logprob: -15.750030517578125
    10. '_,' → logprob: -16.000030517578125

Token 968: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005929154809564352
    2. ' self' → logprob: -5.130928993225098
    3. '
' → logprob: -15.755928993225098
    4. '(self' → logprob: -16.505929946899414
    5. '       ' → logprob: -16.755929946899414
    6. '           ' → logprob: -16.880929946899414
    7. '	self' → logprob: -16.880929946899414
    8. ' ' → logprob: -17.130929946899414
    9. '   ' → logprob: -17.630929946899414
    10. '[self' → logprob: -17.880929946899414

Token 969: '._' (ID: 2697)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.2529197037220001
    2. '._' → logprob: -1.5029196739196777
    3. ')' → logprob: -7.502919673919678
    4. ' _' → logprob: -9.127920150756836
    5. 'd' → logprob: -9.752920150756836
    6. 'self' → logprob: -9.877920150756836
    7. '_w' → logprob: -10.002920150756836
    8. '_cut' → logprob: -10.377920150756836
    9. ')_' → logprob: -10.627920150756836
    10. '```' → logprob: -10.752920150756836

Token 970: 'd' (ID: 67)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.5237365365028381
    2. 'd' → logprob: -0.8987365365028381
    3. 'w' → logprob: -7.523736476898193
    4. 'self' → logprob: -10.023736953735352
    5. '_w' → logprob: -11.023736953735352
    6. 'width' → logprob: -12.898736953735352
    7. 'д' → logprob: -12.898736953735352
    8. '
' → logprob: -13.398736953735352
    9. '	d' → logprob: -13.898736953735352
    10. 'wd' → logprob: -14.523736953735352

Token 971: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03805101290345192
    2. ')
' → logprob: -3.288051128387451
    3. '       ' → logprob: -11.913050651550293
    4. ')
' → logprob: -12.913050651550293
    5. ')

' → logprob: -15.288050651550293
    6. ' )' → logprob: -15.913050651550293
    7. '   ' → logprob: -16.53805160522461
    8. ')`
' → logprob: -17.66305160522461
    9. '           ' → logprob: -17.91305160522461
    10. ')return' → logprob: -18.03805160522461

Token 972: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021551379468292
    2. 'elif' → logprob: -6.252155303955078
    3. 'else' → logprob: -9.127155303955078
    4. ' elif' → logprob: -9.252155303955078
    5. ' else' → logprob: -11.252155303955078
    6. ')' → logprob: -12.502155303955078
    7. 'return' → logprob: -13.377155303955078
    8. '```' → logprob: -13.627155303955078
    9. '	elif' → logprob: -14.377155303955078
    10. '<|end|>' → logprob: -14.377155303955078

Token 973: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0794047936797142
    2. 'elif' → logprob: -2.829404830932617
    3. 'else' (adapté à ' else') → logprob: -4.079404830932617
    4. ' elif' → logprob: -8.579404830932617
    5. 'return' → logprob: -9.579404830932617
    6. ' else' → logprob: -9.704404830932617
    7. '   ' → logprob: -9.954404830932617
    8. '```' → logprob: -13.704404830932617
    9. '	elif' → logprob: -14.454404830932617
    10. ' return' → logprob: -14.704404830932617

Token 974: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3663626305060461e-05
    2. ':
' → logprob: -11.50001335144043
    3. '   ' → logprob: -14.00001335144043
    4. ' :' → logprob: -14.12501335144043
    5. '==' → logprob: -15.00001335144043
    6. '4' → logprob: -15.12501335144043
    7. '0' → logprob: -15.25001335144043
    8. 'if' → logprob: -15.37501335144043
    9. ':#' → logprob: -15.37501335144043
    10. ' ==' → logprob: -15.75001335144043

Token 975: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8940184712409973
    2. '#' → logprob: -1.2690184116363525
    3. ' #' → logprob: -1.2690184116363525
    4. '   ' → logprob: -3.7690184116363525
    5. '           ' → logprob: -6.769018650054932
    6. '0' → logprob: -6.769018650054932
    7. '1' → logprob: -7.019018650054932
    8. '       ' → logprob: -7.144018650054932
    9. '3' → logprob: -7.144018650054932
    10. '  ' → logprob: -7.769018650054932

Token 976: ' #' (ID: 1069)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.032853636890649796
    2. '#' → logprob: -3.532853603363037
    3. '   ' → logprob: -6.407853603363037
    4. '1' → logprob: -7.157853603363037
    5. ' ' → logprob: -7.532853603363037
    6. ' #' → logprob: -10.157854080200195
    7. '       ' → logprob: -10.532854080200195
    8. '           ' → logprob: -10.907854080200195
    9. 'if' → logprob: -11.032854080200195
    10. '(' → logprob: -11.282854080200195

Token 977: ' edge' (ID: 11165)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.010031001642346382
    2. 'edge' → logprob: -5.135031223297119
    3. ' ' → logprob: -5.885031223297119
    4. ' edge' → logprob: -7.010031223297119
    5. '   ' → logprob: -8.135030746459961
    6. '#' → logprob: -9.260030746459961
    7. '(edge' → logprob: -12.010030746459961
    8. '  ' → logprob: -12.510030746459961
    9. ' #' → logprob: -13.135030746459961
    10. 'elif' → logprob: -13.760030746459961

Token 978: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.053404055535793304
    2. '3' → logprob: -3.4284040927886963
    3. ' ==' → logprob: -4.803403854370117
    4. '==' → logprob: -5.053403854370117
    5. '   ' → logprob: -6.053403854370117
    6. ' ' → logprob: -6.678403854370117
    7. 'index' → logprob: -6.678403854370117
    8. '  ' → logprob: -10.303403854370117
    9. '=' → logprob: -10.803403854370117
    10. '(' → logprob: -11.178403854370117

Token 979: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759517550468445
    2. '==' → logprob: -0.8259517550468445
    3. '=' → logprob: -12.20095157623291
    4. '==
' → logprob: -13.20095157623291
    5. ' ' → logprob: -13.45095157623291
    6. '===' → logprob: -13.82595157623291
    7. '   ' → logprob: -14.45095157623291
    8. ' ==
' → logprob: -14.70095157623291
    9. '0' → logprob: -14.82595157623291
    10. ')==' → logprob: -15.07595157623291

Token 980: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '   ' → logprob: -19.75
    4. '３' → logprob: -21.5
    5. '۳' → logprob: -21.75
    6. '٣' → logprob: -23.125
    7. '#' → logprob: -23.375
    8. '```' → logprob: -23.5
    9. '৩' → logprob: -23.875
    10. '{
' → logprob: -24.375

Token 981: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '３' → logprob: -20.75
    4. '۳' → logprob: -20.875
    5. '   ' → logprob: -21.875
    6. '٣' → logprob: -22.125
    7. '৩' → logprob: -22.5
    8. '```' → logprob: -23.125
    9. '३' → logprob: -23.375
    10. '[' → logprob: -24.0

Token 982: ' left' (ID: 3561)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002766240620985627
    2. ':
' → logprob: -6.752766132354736
    3. '   ' → logprob: -7.002766132354736
    4. ' ' → logprob: -7.877766132354736
    5. '#' → logprob: -9.002766609191895
    6. '           ' → logprob: -9.252766609191895
    7. '       ' → logprob: -9.752766609191895
    8. ':#' → logprob: -11.877766609191895
    9. '  ' → logprob: -12.252766609191895
    10. ' #' → logprob: -12.502766609191895

Token 983: ' edge' (ID: 11165)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05467981845140457
    2. ':
' → logprob: -3.0546798706054688
    3. '   ' → logprob: -5.554679870605469
    4. '           ' → logprob: -6.304679870605469
    5. '#' → logprob: -8.429679870605469
    6. '       ' → logprob: -9.304679870605469
    7. 'edge' → logprob: -11.429679870605469
    8. ':#' → logprob: -11.554679870605469
    9. ' ' → logprob: -11.804679870605469
    10. ' :' → logprob: -12.054679870605469

Token 984: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33194419741630554
    2. ':
' → logprob: -1.706944227218628
    3. '           ' → logprob: -2.456944227218628
    4. '#' → logprob: -4.456943988800049
    5. '   ' → logprob: -5.956943988800049
    6. '       ' → logprob: -6.956943988800049
    7. '=' → logprob: -9.206944465637207
    8. '):
' → logprob: -10.956944465637207
    9. '
' → logprob: -11.081944465637207
    10. ':#' → logprob: -11.206944465637207

Token 985: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17443934082984924
    2. '#' → logprob: -1.9244393110275269
    3. '       ' → logprob: -5.299439430236816
    4. 'cut' → logprob: -5.299439430236816
    5. '   ' → logprob: -6.299439430236816
    6. '
' → logprob: -6.299439430236816
    7. '```' → logprob: -8.549439430236816
    8. ' #' → logprob: -9.424439430236816
    9. ' cut' → logprob: -9.799439430236816
    10. '          ' → logprob: -10.424439430236816

Token 986: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.037985943257808685
    2. 'cut' → logprob: -3.4129860401153564
    3. '           ' → logprob: -5.537985801696777
    4. ' cut' → logprob: -8.662985801696777
    5. '       ' → logprob: -9.162985801696777
    6. ' #' → logprob: -9.287985801696777
    7. '   ' → logprob: -10.787985801696777
    8. '
' → logprob: -13.412985801696777
    9. '               ' → logprob: -13.787985801696777
    10. '          ' → logprob: -14.287985801696777

Token 987: ' cut' (ID: 6092)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4184980094432831
    2. 'cut' → logprob: -1.1684980392456055
    3. ' cut' → logprob: -3.5434980392456055
    4. '           ' → logprob: -6.7934980392456055
    5. ' #' → logprob: -7.0434980392456055
    6. '       ' → logprob: -9.043498039245605
    7. '   ' → logprob: -9.543498039245605
    8. '
' → logprob: -11.293498039245605
    9. '```' → logprob: -12.418498039245605
    10. '=cut' → logprob: -12.918498039245605

Token 988: ' perpendicular' (ID: 137754)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0005773392622359097
    2. 'pos' → logprob: -8.375576972961426
    3. '_per' → logprob: -8.625576972961426
    4. 'per' → logprob: -9.000576972961426
    5. '           ' → logprob: -10.750576972961426
    6. ' perpendicular' → logprob: -10.875576972961426
    7. '_position' → logprob: -13.375576972961426
    8. '   ' → logprob: -14.875576972961426
    9. '_start' → logprob: -14.875576972961426
    10. '       ' → logprob: -15.125576972961426

Token 989: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.12693944573402405
    2. 'to' → logprob: -2.126939535140991
    3. '           ' → logprob: -11.62693977355957
    4. '_to' → logprob: -13.37693977355957
    5. '   ' → logprob: -15.37693977355957
    6. '	to' → logprob: -15.37693977355957
    7. '<|end|>' → logprob: -15.87693977355957
    8. ' ' → logprob: -15.87693977355957
    9. '       ' → logprob: -16.25193977355957
    10. '               ' → logprob: -17.25193977355957

Token 990: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.04580961540341377
    2. 'the' → logprob: -3.920809507369995
    3. ' left' → logprob: -4.295809745788574
    4. '3' → logprob: -4.920809745788574
    5. 'self' → logprob: -6.170809745788574
    6. ' the' → logprob: -6.795809745788574
    7. 'edge' → logprob: -8.170809745788574
    8. ' ' → logprob: -8.545809745788574
    9. ' self' → logprob: -10.045809745788574
    10. ' edge' → logprob: -10.295809745788574

Token 991: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.10023956745862961
    2. 'edge' → logprob: -2.3502395153045654
    3. '_edge' → logprob: -10.350239753723145
    4. '(edge' → logprob: -14.975239753723145
    5. '   ' → logprob: -15.600239753723145
    6. '.edge' → logprob: -16.100238800048828
    7. ' ' → logprob: -16.475238800048828
    8. '=edge' → logprob: -16.725238800048828
    9. 'edges' → logprob: -17.350238800048828
    10. '_' → logprob: -18.100238800048828

Token 992: ' ->' (ID: 2747)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2609672248363495
    2. '=' → logprob: -2.010967254638672
    3. '           ' → logprob: -3.135967254638672
    4. ' ->' → logprob: -3.385967254638672
    5. ':' → logprob: -4.760967254638672
    6. '#' → logprob: -6.135967254638672
    7. ' =>' → logprob: -6.510967254638672
    8. '->' → logprob: -6.635967254638672
    9. '=>' → logprob: -6.885967254638672
    10. '       ' → logprob: -7.135967254638672

Token 993: ' horizontal' (ID: 25511)
  Prédit: ' horizontal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' horizontal' → logprob: -0.20147600769996643
    2. 'horizontal' → logprob: -1.701475977897644
    3. ' vertical' → logprob: -10.576476097106934
    4. 'vertical' → logprob: -10.701476097106934
    5. 'Horizontal' → logprob: -11.951476097106934
    6. '#' → logprob: -12.201476097106934
    7. '_horizontal' → logprob: -13.576476097106934
    8. ' horiz' → logprob: -14.451476097106934
    9. '.horizontal' → logprob: -14.451476097106934
    10. ' горизонт' → logprob: -15.576476097106934

Token 994: ' cut' (ID: 6092)
  Prédit: ' cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cut' → logprob: -0.31358811259269714
    2. 'cut' → logprob: -1.3135881423950195
    3. '_cut' → logprob: -8.06358814239502
    4. '   ' → logprob: -12.93858814239502
    5. 'line' → logprob: -12.93858814239502
    6. ' line' → logprob: -13.18858814239502
    7. '#' → logprob: -13.81358814239502
    8. '=cut' → logprob: -13.93858814239502
    9. ' ' → logprob: -14.56358814239502
    10. '_' → logprob: -14.93858814239502

Token 995: ' similar' (ID: 6771)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.0015586663503199816
    2. 'at' → logprob: -6.751558780670166
    3. '           ' → logprob: -7.876558780670166
    4. '_at' → logprob: -12.751558303833008
    5. '       ' → logprob: -12.876558303833008
    6. '   ' → logprob: -13.001558303833008
    7. '	at' → logprob: -15.001558303833008
    8. ' ' → logprob: -15.126558303833008
    9. ' =' → logprob: -16.001558303833008
    10. '(at' → logprob: -16.376558303833008

Token 996: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.10022381693124771
    2. ' to' → logprob: -2.3502237796783447
    3. '   ' → logprob: -11.600223541259766
    4. '_to' → logprob: -12.850223541259766
    5. ' cut' → logprob: -13.475223541259766
    6. 'cut' → logprob: -13.725223541259766
    7. '           ' → logprob: -13.725223541259766
    8. '
' → logprob: -14.975223541259766
    9. ' ' → logprob: -14.975223541259766
    10. '#' → logprob: -15.100223541259766

Token 997: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.02801710180938244
    2. 'top' → logprob: -3.653017044067383
    3. ' right' → logprob: -7.403017044067383
    4. 'left' → logprob: -7.528017044067383
    5. 'bottom' → logprob: -8.153017044067383
    6. 'edge' → logprob: -9.278017044067383
    7. ' top' → logprob: -9.528017044067383
    8. '1' → logprob: -9.528017044067383
    9. 'the' → logprob: -10.778017044067383
    10. '(right' → logprob: -12.403017044067383

Token 998: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.07975510507822037
    2. ' edge' → logprob: -2.5797550678253174
    3. '_edge' → logprob: -7.0797553062438965
    4. '   ' → logprob: -11.704754829406738
    5. '(edge' → logprob: -11.704754829406738
    6. '
' → logprob: -13.204754829406738
    7. 'edges' → logprob: -13.329754829406738
    8. ' ' → logprob: -14.204754829406738
    9. '.edge' → logprob: -14.204754829406738
    10. '-edge' → logprob: -15.079754829406738

Token 999: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019122159108519554
    2. ' at' → logprob: -5.144122123718262
    3. ' cut' → logprob: -5.144122123718262
    4. '       ' → logprob: -5.894122123718262
    5. '   ' → logprob: -6.519122123718262
    6. '
' → logprob: -6.519122123718262
    7. 'cut' → logprob: -7.019122123718262
    8. ' =' → logprob: -8.019122123718262
    9. ',' → logprob: -9.769122123718262
    10. '          ' → logprob: -9.769122123718262

Token 1000: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8202325701713562
    2. 'cut' → logprob: -0.8202325701713562
    3. ' cut' → logprob: -2.195232629776001
    4. '   ' → logprob: -5.820232391357422
    5. '       ' → logprob: -5.820232391357422
    6. '
' → logprob: -6.945232391357422
    7. '```' → logprob: -7.945232391357422
    8. '               ' → logprob: -8.320232391357422
    9. '=cut' → logprob: -9.195232391357422
    10. '          ' → logprob: -9.195232391357422

Token 1001: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' (adapté à ' cut') → logprob: -0.0019308974733576179
    2. ' cut' → logprob: -6.2519307136535645
    3. '
' → logprob: -14.001931190490723
    4. '           ' → logprob: -14.126931190490723
    5. '   ' → logprob: -15.126931190490723
    6. '       ' → logprob: -15.376931190490723
    7. '=cut' → logprob: -16.626930236816406
    8. '```' → logprob: -16.626930236816406
    9. '_cut' → logprob: -16.876930236816406
    10. '.cut' → logprob: -17.876930236816406

Token 1002: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -2.963691804325208e-05
    2. 'pos' → logprob: -10.500029563903809
    3. '_start' → logprob: -14.000029563903809
    4. 'Pos' → logprob: -14.625029563903809
    5. '_position' → logprob: -14.750029563903809
    6. '_positions' → logprob: -15.875029563903809
    7. '           ' → logprob: -17.125030517578125
    8. 'position' → logprob: -17.875030517578125
    9. '```' → logprob: -18.000030517578125
    10. '       ' → logprob: -18.750030517578125

Token 1003: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07888978719711304
    2. '=' → logprob: -2.578889846801758
    3. ' ' → logprob: -17.828889846801758
    4. 's' → logprob: -19.453889846801758
    5. ':' → logprob: -19.578889846801758
    6. ',' → logprob: -19.703889846801758
    7. '＝' → logprob: -19.703889846801758
    8. '=cut' → logprob: -20.078889846801758
    9. '=self' → logprob: -20.328889846801758
    10. '=
' → logprob: -20.828889846801758

Token 1004: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2520473003387451
    2. ' self' → logprob: -1.5020473003387451
    3. 'offset' → logprob: -9.252047538757324
    4. ' offset' → logprob: -10.877047538757324
    5. '(self' → logprob: -13.377047538757324
    6. ' ' → logprob: -15.002047538757324
    7. '=self' → logprob: -15.252047538757324
    8. '   ' → logprob: -15.377047538757324
    9. '	self' → logprob: -15.627047538757324
    10. '`' → logprob: -15.752047538757324

Token 1005: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.013534756377339363
    2. '_d' → logprob: -4.5135345458984375
    3. 'offset' → logprob: -6.3885345458984375
    4. '.' → logprob: -8.638534545898438
    5. '_offset' → logprob: -8.763534545898438
    6. 'self' → logprob: -8.888534545898438
    7. 'd' → logprob: -9.388534545898438
    8. '
' → logprob: -9.638534545898438
    9. '   ' → logprob: -10.138534545898438
    10. '.offset' → logprob: -10.263534545898438

Token 1006: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00030948311905376613
    2. 'depth' → logprob: -8.500309944152832
    3. 'w' → logprob: -10.000309944152832
    4. '_d' → logprob: -10.125309944152832
    5. '
' → logprob: -12.250309944152832
    6. 'offset' → logprob: -12.250309944152832
    7. ' d' → logprob: -13.125309944152832
    8. 'deep' → logprob: -13.625309944152832
    9. '	d' → logprob: -13.687809944152832
    10. 'int' → logprob: -14.375309944152832

Token 1007: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4740842878818512
    2. '-' → logprob: -0.9740842580795288
    3. '-offset' → logprob: -12.47408390045166
    4. '-
' → logprob: -13.09908390045166
    5. ' ' → logprob: -14.47408390045166
    6. ' -
' → logprob: -14.59908390045166
    7. 'offset' → logprob: -15.34908390045166
    8. ' ' → logprob: -16.599084854125977
    9. ' offset' → logprob: -17.349084854125977
    10. '−' → logprob: -17.474084854125977

Token 1008: ' offset' (ID: 8985)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.00861456897109747
    2. ' offset' → logprob: -4.758614540100098
    3. '	offset' → logprob: -16.883615493774414
    4. '(offset' → logprob: -18.383615493774414
    5. '_offset' → logprob: -18.758615493774414
    6. 'ffset' → logprob: -19.758615493774414
    7. '[offset' → logprob: -20.008615493774414
    8. '.offset' → logprob: -20.133615493774414
    9. 'Offset' → logprob: -21.258615493774414
    10. ' ' → logprob: -22.008615493774414

Token 1009: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07026217877864838
    2. '
' → logprob: -2.6952621936798096
    3. '       ' → logprob: -8.94526195526123
    4. ' if' → logprob: -9.94526195526123
    5. 'if' → logprob: -10.32026195526123
    6. '<|end|>' → logprob: -10.69526195526123
    7. '          ' → logprob: -10.94526195526123
    8. '   ' → logprob: -11.07026195526123
    9. '               ' → logprob: -11.44526195526123
    10. '            
' → logprob: -11.44526195526123

Token 1010: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.044790469110012054
    2. 'if' → logprob: -3.169790506362915
    3. '
' → logprob: -7.044790267944336
    4. ' if' → logprob: -7.044790267944336
    5. '       ' → logprob: -11.169790267944336
    6. '   ' → logprob: -11.294790267944336
    7. '            
' → logprob: -12.419790267944336
    8. '```' → logprob: -12.419790267944336
    9. '          ' → logprob: -12.919790267944336
    10. '               ' → logprob: -13.294790267944336

Token 1011: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00578409293666482
    2. ' if' → logprob: -5.255784034729004
    3. '           ' → logprob: -7.505784034729004
    4. '       ' → logprob: -15.505784034729004
    5. '   ' → logprob: -17.38078498840332
    6. '	if' → logprob: -18.50578498840332
    7. '```' → logprob: -18.75578498840332
    8. ' ' → logprob: -18.88078498840332
    9. '         ' → logprob: -19.13078498840332
    10. '          ' → logprob: -19.38078498840332

Token 1012: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.25192928314208984
    2. ' cut' → logprob: -1.5019292831420898
    3. ' ' → logprob: -16.626930236816406
    4. '0' → logprob: -17.251930236816406
    5. '=cut' → logprob: -18.001930236816406
    6. 'not' → logprob: -18.001930236816406
    7. '   ' → logprob: -18.001930236816406
    8. '```' → logprob: -18.251930236816406
    9. 'cutaneous' → logprob: -18.751930236816406
    10. '_cut' → logprob: -18.876930236816406

Token 1013: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0037740739062428474
    2. 'pos' → logprob: -5.628774166107178
    3. 'cut' → logprob: -8.75377368927002
    4. ' cut' → logprob: -11.75377368927002
    5. 'Pos' → logprob: -12.12877368927002
    6. ' pos' → logprob: -13.75377368927002
    7. '_cut' → logprob: -14.25377368927002
    8. '```' → logprob: -15.12877368927002
    9. '_positions' → logprob: -15.25377368927002
    10. '	pos' → logprob: -16.503774642944336

Token 1014: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.006715728435665369
    2. '<=' → logprob: -5.006715774536133
    3. ' ' → logprob: -15.631715774536133
    4. ')<=' → logprob: -17.506715774536133
    5. ' <' → logprob: -17.631715774536133
    6. ' >=' → logprob: -17.756715774536133
    7. ' >' → logprob: -17.881715774536133
    8. '```' → logprob: -18.131715774536133
    9. '   ' → logprob: -18.256715774536133
    10. '>' → logprob: -18.381715774536133

Token 1015: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07889044284820557
    2. ' ' → logprob: -2.578890323638916
    3. '   ' → logprob: -14.578890800476074
    4. '1' → logprob: -16.328889846801758
    5. '  ' → logprob: -16.828889846801758
    6. '<|end|>' → logprob: -17.328889846801758
    7. '=' → logprob: -17.453889846801758
    8. '       ' → logprob: -18.453889846801758
    9. '[' → logprob: -18.703889846801758
    10. '00' → logprob: -18.828889846801758

Token 1016: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005234002135694027
    2. ' ' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.130233764648438
    4. '1' → logprob: -16.755233764648438
    5. '  ' → logprob: -18.130233764648438
    6. '=' → logprob: -18.755233764648438
    7. '00' → logprob: -19.255233764648438
    8. '<|end|>' → logprob: -19.505233764648438
    9. '۰' → logprob: -19.755233764648438
    10. '    ' → logprob: -19.880233764648438

Token 1017: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -3.190178904333152e-05
    2. 'or' → logprob: -10.375031471252441
    3. ' ' → logprob: -15.000031471252441
    4. '	or' → logprob: -16.000032424926758
    5. '<|end|>' → logprob: -16.250032424926758
    6. ' ' → logprob: -17.250032424926758
    7. '  ' → logprob: -18.375032424926758
    8. '   ' → logprob: -18.750032424926758
    9. ' and' → logprob: -18.750032424926758
    10. ',' → logprob: -18.875032424926758

Token 1018: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.31331363320350647
    2. ' cut' → logprob: -1.313313603401184
    3. '0' → logprob: -10.188313484191895
    4. '=cut' → logprob: -11.813313484191895
    5. ' or' → logprob: -12.438313484191895
    6. 'or' → logprob: -14.188313484191895
    7. '           ' → logprob: -14.688313484191895
    8. '_cut' → logprob: -15.063313484191895
    9. '```' → logprob: -15.313313484191895
    10. 'c' → logprob: -15.313313484191895

Token 1019: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0048546879552304745
    2. 'pos' → logprob: -6.254854679107666
    3. 'Pos' → logprob: -6.379854679107666
    4. ' ' → logprob: -7.504854679107666
    5. ' cut' → logprob: -8.129855155944824
    6. ' pos' → logprob: -9.379855155944824
    7. '<' → logprob: -9.879855155944824
    8. ' <' → logprob: -10.129855155944824
    9. '   ' → logprob: -10.754855155944824
    10. '_positions' → logprob: -10.879855155944824

Token 1020: ' >=' (ID: 5064)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.048792995512485504
    2. '<' → logprob: -4.048792839050293
    3. ' <' → logprob: -4.548792839050293
    4. ' >=' → logprob: -4.673792839050293
    5. 'or' → logprob: -5.298792839050293
    6. '>=' → logprob: -5.298792839050293
    7. '<|end|>' → logprob: -8.923792839050293
    8. ' ' → logprob: -10.423792839050293
    9. ' ' → logprob: -10.798792839050293
    10. '[' → logprob: -11.048792839050293

Token 1021: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.043009355664253235
    2. ' self' → logprob: -3.1680092811584473
    3. '           ' → logprob: -12.168009757995605
    4. '(self' → logprob: -13.168009757995605
    5. ' ' → logprob: -14.418009757995605
    6. '=self' → logprob: -14.418009757995605
    7. '	self' → logprob: -15.293009757995605
    8. '0' → logprob: -15.418009757995605
    9. '       ' → logprob: -15.418009757995605
    10. '               ' → logprob: -15.418009757995605

Token 1022: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.11552470177412033
    2. 'self' → logprob: -2.3655247688293457
    3. '_w' → logprob: -4.740524768829346
    4. '_d' → logprob: -5.240524768829346
    5. '   ' → logprob: -8.240524291992188
    6. '_self' → logprob: -8.240524291992188
    7. '[self' → logprob: -8.990524291992188
    8. '_.' → logprob: -9.240524291992188
    9. ' self' → logprob: -9.365524291992188
    10. '.w' → logprob: -9.490524291992188

Token 1023: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.5577775128767826e-06
    2. 'depth' → logprob: -12.500005722045898
    3. 'w' → logprob: -14.250005722045898
    4. '
' → logprob: -15.000005722045898
    5. '```' → logprob: -15.125005722045898
    6. ' d' → logprob: -15.500005722045898
    7. '_d' → logprob: -15.875005722045898
    8. 'h' → logprob: -16.7500057220459
    9. ' ' → logprob: -17.2500057220459
    10. '   ' → logprob: -17.5000057220459

Token 1024: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04878459498286247
    2. ':' → logprob: -3.0487844944000244
    3. '           ' → logprob: -9.423784255981445
    4. '               ' → logprob: -9.423784255981445
    5. '):
' → logprob: -10.548784255981445
    6. ':

' → logprob: -12.673784255981445
    7. ':
' → logprob: -12.923784255981445
    8. '       ' → logprob: -13.798784255981445
    9. ' :
' → logprob: -14.423784255981445
    10. '):' → logprob: -14.673784255981445

Token 1025: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34865424036979675
    2. '               ' → logprob: -1.2236542701721191
    3. ':
' → logprob: -9.723653793334961
    4. ' raise' → logprob: -10.223653793334961
    5. '            ' → logprob: -10.723653793334961
    6. '
' → logprob: -10.723653793334961
    7. '              ' → logprob: -10.973653793334961
    8. '          ' → logprob: -11.348653793334961
    9. 'raise' → logprob: -11.848653793334961
    10. '   ' → logprob: -11.848653793334961

Token 1026: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.0002036595979006961
    2. 'raise' (adapté à ' raise') → logprob: -8.500204086303711
    3. '               ' → logprob: -16.62520408630371
    4. '	raise' → logprob: -17.00020408630371
    5. '           ' → logprob: -17.25020408630371
    6. '            ' → logprob: -17.87520408630371
    7. '                ' → logprob: -19.00020408630371
    8. '_raise' → logprob: -19.50020408630371
    9. ' ' → logprob: -20.50020408630371
    10. 'Raise' → logprob: -20.50020408630371

Token 1027: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.10023525357246399
    2. ' Value' → logprob: -2.3502352237701416
    3. '	Value' → logprob: -11.100234985351562
    4. '_value' → logprob: -11.725234985351562
    5. '_Value' → logprob: -12.350234985351562
    6. '.Value' → logprob: -14.600234985351562
    7. ' value' → logprob: -15.600234985351562
    8. '(Value' → logprob: -15.725234985351562
    9. 'Val' → logprob: -16.225234985351562
    10. ' ' → logprob: -16.350234985351562

Token 1028: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -2.2200749754119897e-06
    2. 'Value' → logprob: -13.125001907348633
    3. 'rror' → logprob: -15.750001907348633
    4. 'SError' → logprob: -18.625001907348633
    5. '   ' → logprob: -20.500001907348633
    6. '```' → logprob: -20.625001907348633
    7. '                   ' → logprob: -20.750001907348633
    8. ' Error' → logprob: -20.750001907348633
    9. 'Val' → logprob: -20.750001907348633
    10. '               ' → logprob: -20.750001907348633

Token 1029: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.2113979209971149e-05
    2. '(' → logprob: -11.375012397766113
    3. '(
' → logprob: -14.625012397766113
    4. '('' → logprob: -16.500011444091797
    5. ' ("' → logprob: -19.875011444091797
    6. '("
' → logprob: -20.875011444091797
    7. '(f' → logprob: -21.250011444091797
    8. '("("' → logprob: -21.375011444091797
    9. '(">' → logprob: -22.125011444091797
    10. '(
' → logprob: -22.375011444091797

Token 1030: 'Invalid' (ID: 12278)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.00070397206582129
    2. 'Invalid' → logprob: -7.500703811645508
    3. 'raise' → logprob: -9.125703811645508
    4. ' Value' → logprob: -10.500703811645508
    5. ' raise' → logprob: -11.500703811645508
    6. '
' → logprob: -13.375703811645508
    7. 'Valid' → logprob: -13.375703811645508
    8. 'cut' → logprob: -14.125703811645508
    9. '_Value' → logprob: -16.250703811645508
    10. '_value' → logprob: -16.375703811645508

Token 1031: ' cut' (ID: 6092)
  Prédit: ' cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cut' → logprob: -0.061967913061380386
    2. 'cut' → logprob: -2.8119678497314453
    3. 'Value' → logprob: -16.436967849731445
    4. '=cut' → logprob: -16.686967849731445
    5. ' cutoff' → logprob: -17.061967849731445
    6. '_cut' → logprob: -17.436967849731445
    7. 'Cut' → logprob: -18.061967849731445
    8. ' ' → logprob: -19.311967849731445
    9. 'c' → logprob: -19.936967849731445
    10. '.cut' → logprob: -20.061967849731445

Token 1032: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.029813669621944427
    2. 'position' → logprob: -3.529813766479492
    3. '_position' → logprob: -10.529813766479492
    4. '           ' → logprob: -11.029813766479492
    5. '(position' → logprob: -11.904813766479492
    6. 'Position' → logprob: -12.529813766479492
    7. '	position' → logprob: -12.654813766479492
    8. ' positions' → logprob: -13.779813766479492
    9. '.position' → logprob: -14.029813766479492
    10. '       ' → logprob: -14.029813766479492

Token 1033: ' along' (ID: 4251)
  Prédit: ' along'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' along' → logprob: -0.09514032304286957
    2. 'along' → logprob: -2.470140218734741
    3. '")' → logprob: -5.72014045715332
    4. '"' → logprob: -6.34514045715332
    5. 'Along' → logprob: -7.84514045715332
    6. ')' → logprob: -8.59514045715332
    7. '("' → logprob: -9.09514045715332
    8. '")
' → logprob: -9.34514045715332
    9. '   ' → logprob: -9.47014045715332
    10. '.")
' → logprob: -9.59514045715332

Token 1034: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.2025018036365509
    2. ' depth' → logprob: -1.7025017738342285
    3. '_depth' → logprob: -6.9525017738342285
    4. 'self' → logprob: -9.077502250671387
    5. '(depth' → logprob: -12.077502250671387
    6. ' self' → logprob: -12.327502250671387
    7. '-depth' → logprob: -13.202502250671387
    8. '.depth' → logprob: -13.327502250671387
    9. 'width' → logprob: -13.827502250671387
    10. 'length' → logprob: -14.077502250671387

Token 1035: '.")
' (ID: 27834)
  Prédit: '.")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.")
' → logprob: -0.6625742316246033
    2. '           ' → logprob: -0.9125742316246033
    3. '")
' → logprob: -3.287574291229248
    4. ')
' → logprob: -3.537574291229248
    5. ')")
' → logprob: -4.662574291229248
    6. '       ' → logprob: -5.162574291229248
    7. ')' → logprob: -7.162574291229248
    8. '               ' → logprob: -8.28757381439209
    9. '   ' → logprob: -9.16257381439209
    10. ':")
' → logprob: -9.78757381439209

Token 1036: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08114863187074661
    2. 'left' → logprob: -2.706148624420166
    3. 'upper' → logprob: -5.206148624420166
    4. '
' → logprob: -6.331148624420166
    5. ' left' → logprob: -6.331148624420166
    6. '       ' → logprob: -6.831148624420166
    7. '   ' → logprob: -7.331148624420166
    8. 'lower' → logprob: -9.206149101257324
    9. ' upper' → logprob: -9.581149101257324
    10. '	left' → logprob: -9.956149101257324

Token 1037: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' (adapté à ' upper') → logprob: -0.027065208181738853
    2. 'left' → logprob: -3.7770652770996094
    3. 'top' → logprob: -5.652065277099609
    4. ' upper' → logprob: -8.27706527709961
    5. 'up' → logprob: -10.52706527709961
    6. '           ' → logprob: -11.90206527709961
    7. 'lower' → logprob: -12.02706527709961
    8. ' left' → logprob: -12.15206527709961
    9. 'bottom' → logprob: -13.52706527709961
    10. ' top' → logprob: -14.02706527709961

Token 1038: '_piece' (ID: 126000)
  Prédit: '_piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -7.32654589228332e-05
    2. '_p' → logprob: -9.625073432922363
    3. '_' → logprob: -12.375073432922363
    4. ' =' → logprob: -13.625073432922363
    5. 'piece' → logprob: -14.250073432922363
    6. '=' → logprob: -14.375073432922363
    7. '=_' → logprob: -16.375072479248047
    8. 'Piece' → logprob: -16.500072479248047
    9. '```' → logprob: -16.875072479248047
    10. '_part' → logprob: -17.000072479248047

Token 1039: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519291639328003
    2. ' =' → logprob: -1.5019291639328003
    3. ',' → logprob: -16.251928329467773
    4. ')' → logprob: -17.876928329467773
    5. ' ' → logprob: -18.001928329467773
    6. 's' → logprob: -18.251928329467773
    7. '<|end|>' → logprob: -18.751928329467773
    8. '＝' → logprob: -19.001928329467773
    9. '	' → logprob: -19.626928329467773
    10. '>' → logprob: -20.251928329467773

Token 1040: ' Rect' (ID: 22765)
  Prédit: 'Rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rect' → logprob: -9.639096970204264e-05
    2. ' Rect' → logprob: -9.250096321105957
    3. '	Rect' → logprob: -15.250096321105957
    4. '.Rect' → logprob: -17.625097274780273
    5. '           ' → logprob: -18.125097274780273
    6. '(Rect' → logprob: -18.250097274780273
    7. '_Rect' → logprob: -19.250097274780273
    8. '_rect' → logprob: -19.750097274780273
    9. '   ' → logprob: -19.750097274780273
    10. 'Rects' → logprob: -19.875097274780273

Token 1041: 'angular' (ID: 8802)
  Prédit: 'angular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angular' → logprob: -0.0002494191285222769
    2. 'Rect' → logprob: -8.875249862670898
    3. 'ular' → logprob: -9.750249862670898
    4. 'Angular' → logprob: -10.125249862670898
    5. ' rectangular' → logprob: -12.375249862670898
    6. 'rect' → logprob: -13.125249862670898
    7. 'icular' → logprob: -13.375249862670898
    8. '_rect' → logprob: -13.500249862670898
    9. 'angu' → logprob: -14.500249862670898
    10. '```' → logprob: -15.125249862670898

Token 1042: 'Piece' (ID: 36823)
  Prédit: 'Piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Piece' → logprob: -7.226628895296017e-06
    2. 'Rect' → logprob: -12.375007629394531
    3. '_piece' → logprob: -13.250007629394531
    4. ' Piece' → logprob: -14.750007629394531
    5. 'Pie' → logprob: -15.125007629394531
    6. '```' → logprob: -15.625007629394531
    7. 'Pieces' → logprob: -16.25000762939453
    8. 'Paper' → logprob: -16.87500762939453
    9. 'piece' → logprob: -17.37500762939453
    10. '_P' → logprob: -17.37500762939453

Token 1043: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0087516784551553e-05
    2. 'self' → logprob: -11.75001049041748
    3. '(' → logprob: -13.25001049041748
    4. '           ' → logprob: -15.62501049041748
    5. ' self' → logprob: -15.75001049041748
    6. '(s' → logprob: -17.000009536743164
    7. ' (' → logprob: -17.250009536743164
    8. '(
' → logprob: -17.875009536743164
    9. '       ' → logprob: -18.500009536743164
    10. '               ' → logprob: -19.625009536743164

Token 1044: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.492776483297348
    2. 'self' → logprob: -0.9927765130996704
    3. '(self' → logprob: -4.242776393890381
    4. '.w' → logprob: -6.492776393890381
    5. '           ' → logprob: -7.492776393890381
    6. ' self' → logprob: -7.492776393890381
    7. '_w' → logprob: -7.492776393890381
    8. '.self' → logprob: -7.867776393890381
    9. '       ' → logprob: -8.742776870727539
    10. '_self' → logprob: -8.992776870727539

Token 1045: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.07973870635032654
    2. '_w' → logprob: -2.5797386169433594
    3. 'self' → logprob: -7.079738616943359
    4. ' w' → logprob: -12.70473861694336
    5. 'width' → logprob: -13.32973861694336
    6. '_width' → logprob: -14.57973861694336
    7. '.w' → logprob: -14.70473861694336
    8. '	w' → logprob: -14.82973861694336
    9. ''w' → logprob: -15.82973861694336
    10. '-w' → logprob: -16.07973861694336

Token 1046: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6537622034084052e-05
    2. 'cut' → logprob: -11.37502670288086
    3. ' ,' → logprob: -11.62502670288086
    4. ',
' → logprob: -12.62502670288086
    5. '           ' → logprob: -13.12502670288086
    6. ' cut' → logprob: -15.00002670288086
    7. ',c' → logprob: -15.37502670288086
    8. '=cut' → logprob: -15.87502670288086
    9. '`,' → logprob: -17.75002670288086
    10. '               ' → logprob: -17.87502670288086

Token 1047: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.004078758880496025
    2. ' cut' → logprob: -5.5040788650512695
    3. '   ' → logprob: -16.504077911376953
    4. '=cut' → logprob: -16.629077911376953
    5. '           ' → logprob: -16.754077911376953
    6. ' ' → logprob: -17.629077911376953
    7. '_cut' → logprob: -18.504077911376953
    8. '.cut' → logprob: -18.629077911376953
    9. '         ' → logprob: -18.879077911376953
    10. '  ' → logprob: -18.879077911376953

Token 1048: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0010380487656220794
    2. 'pos' → logprob: -6.876038074493408
    3. 'd' → logprob: -12.37603759765625
    4. 'Pos' → logprob: -14.50103759765625
    5. 'self' → logprob: -16.37603759765625
    6. 's' → logprob: -16.87603759765625
    7. 'depth' → logprob: -16.87603759765625
    8. '_p' → logprob: -17.12603759765625
    9. '	pos' → logprob: -17.12603759765625
    10. '=' → logprob: -17.37603759765625

Token 1049: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7988283634185791
    2. '           ' → logprob: -1.048828363418579
    3. ')
' → logprob: -1.798828363418579
    4. ',' → logprob: -3.423828363418579
    5. '       ' → logprob: -7.048828125
    6. '   ' → logprob: -8.923828125
    7. '          ' → logprob: -8.923828125
    8. '               ' → logprob: -9.173828125
    9. ',right' → logprob: -9.298828125
    10. '),' → logprob: -9.423828125

Token 1050: '           ' (ID: 352)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.266384482383728
    2. '           ' → logprob: -1.516384482383728
    3. ' lower' → logprob: -4.266384601593018
    4. ',' → logprob: -9.39138412475586
    5. 'bottom' → logprob: -9.89138412475586
    6. '(lower' → logprob: -10.01638412475586
    7. '_lower' → logprob: -10.51638412475586
    8. '            ' → logprob: -10.76638412475586
    9. '.lower' → logprob: -10.89138412475586
    10. '               ' → logprob: -11.26638412475586

Token 1051: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' (adapté à ' lower') → logprob: -5.943783253314905e-05
    2. ' lower' → logprob: -9.750059127807617
    3. 'bottom' → logprob: -13.750059127807617
    4. 'right' → logprob: -17.000059127807617
    5. 'left' → logprob: -20.000059127807617
    6. '           ' → logprob: -20.625059127807617
    7. 'down' → logprob: -20.625059127807617
    8. '.lower' → logprob: -21.250059127807617
    9. '   ' → logprob: -21.750059127807617
    10. '```' → logprob: -21.750059127807617

Token 1052: '_piece' (ID: 126000)
  Prédit: '_piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -0.00011367550177965313
    2. '_p' → logprob: -9.500113487243652
    3. '=' → logprob: -10.500113487243652
    4. 'Piece' → logprob: -11.750113487243652
    5. '```' → logprob: -13.625113487243652
    6. ' =' → logprob: -13.875113487243652
    7. '_P' → logprob: -14.750113487243652
    8. '   ' → logprob: -15.500113487243652
    9. '=_' → logprob: -15.500113487243652
    10. '_' → logprob: -16.37511444091797

Token 1053: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324547804892063
    2. ' =' → logprob: -3.7732455730438232
    3. ' ' → logprob: -17.773244857788086
    4. '   ' → logprob: -18.023244857788086
    5. ')' → logprob: -18.773244857788086
    6. ',' → logprob: -19.648244857788086
    7. '(Rect' → logprob: -19.898244857788086
    8. 'Rect' → logprob: -20.023244857788086
    9. '       ' → logprob: -20.523244857788086
    10. '           ' → logprob: -20.523244857788086

Token 1054: ' Rect' (ID: 22765)
  Prédit: 'Rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rect' → logprob: -0.008615515194833279
    2. ' Rect' → logprob: -4.758615493774414
    3. '	Rect' → logprob: -14.008615493774414
    4. '   ' → logprob: -16.633615493774414
    5. '(Rect' → logprob: -17.758615493774414
    6. ' ' → logprob: -18.133615493774414
    7. '.Rect' → logprob: -18.508615493774414
    8. '       ' → logprob: -18.633615493774414
    9. '_Rect' → logprob: -19.008615493774414
    10. '_rect' → logprob: -19.258615493774414

Token 1055: 'angular' (ID: 8802)
  Prédit: 'angular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angular' → logprob: -0.014396192505955696
    2. 'Rect' → logprob: -5.0143961906433105
    3. '(self' → logprob: -5.7643961906433105
    4. 'Angular' → logprob: -6.0143961906433105
    5. 'ular' → logprob: -7.1393961906433105
    6. '_rect' → logprob: -8.139396667480469
    7. 'Piece' → logprob: -8.264396667480469
    8. '```' → logprob: -9.139396667480469
    9. ' rectangular' → logprob: -9.264396667480469
    10. '_Rect' → logprob: -9.514396667480469

Token 1056: 'Piece' (ID: 36823)
  Prédit: 'Piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Piece' → logprob: -3.8889261304575484e-06
    2. '_piece' → logprob: -13.000003814697266
    3. '_P' → logprob: -14.250003814697266
    4. ' Piece' → logprob: -14.750003814697266
    5. 'Pieces' → logprob: -15.250003814697266
    6. 'Pie' → logprob: -16.125003814697266
    7. '```' → logprob: -16.750003814697266
    8. '               ' → logprob: -17.000003814697266
    9. '           ' → logprob: -17.500003814697266
    10. 'Point' → logprob: -17.750003814697266

Token 1057: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0052373106591403484
    2. 'self' → logprob: -5.255237102508545
    3. ' self' → logprob: -12.755237579345703
    4. '(' → logprob: -14.630237579345703
    5. '[self' → logprob: -16.130237579345703
    6. '(
' → logprob: -16.505237579345703
    7. '	self' → logprob: -18.005237579345703
    8. '=self' → logprob: -18.380237579345703
    9. ' (' → logprob: -19.255237579345703
    10. '           ' → logprob: -19.630237579345703

Token 1058: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.011740128509700298
    2. '_w' → logprob: -4.511740207672119
    3. 'self' → logprob: -7.511740207672119
    4. '.w' → logprob: -9.011739730834961
    5. '.' → logprob: -12.136739730834961
    6. '_self' → logprob: -12.261739730834961
    7. '(self' → logprob: -13.011739730834961
    8. '_.' → logprob: -13.011739730834961
    9. '_' → logprob: -13.386739730834961
    10. '   ' → logprob: -13.761739730834961

Token 1059: 'w' (ID: 86)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.009861858561635017
    2. '_d' → logprob: -4.634861946105957
    3. 'w' → logprob: -9.384861946105957
    4. '_w' → logprob: -11.384861946105957
    5. '
' → logprob: -12.384861946105957
    6. 'depth' → logprob: -12.884861946105957
    7. '.d' → logprob: -13.759861946105957
    8. 'self' → logprob: -14.509861946105957
    9. '	d' → logprob: -14.634861946105957
    10. ' d' → logprob: -15.259861946105957

Token 1060: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039039674447849393
    2. ' ,' → logprob: -8.00039005279541
    3. ' -' → logprob: -10.62539005279541
    4. '-' → logprob: -11.00039005279541
    5. ',d' → logprob: -11.37539005279541
    6. ',self' → logprob: -13.50039005279541
    7. ',
' → logprob: -14.62539005279541
    8. ' ' → logprob: -15.00039005279541
    9. 'self' → logprob: -15.87539005279541
    10. '   ' → logprob: -17.000391006469727

Token 1061: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029751067981123924
    2. ' self' → logprob: -3.5297510623931885
    3. ' ' → logprob: -15.02975082397461
    4. '(self' → logprob: -16.15475082397461
    5. '   ' → logprob: -16.40475082397461
    6. 'd' → logprob: -16.40475082397461
    7. '	self' → logprob: -17.27975082397461
    8. '       ' → logprob: -17.90475082397461
    9. '
' → logprob: -18.02975082397461
    10. '  ' → logprob: -18.27975082397461

Token 1062: '._' (ID: 2697)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0003096023283433169
    2. '._' → logprob: -8.125309944152832
    3. ' -' → logprob: -12.250309944152832
    4. ' _' → logprob: -13.000309944152832
    5. '_' → logprob: -13.500309944152832
    6. '-' → logprob: -13.875309944152832
    7. '.d' → logprob: -14.000309944152832
    8. '   ' → logprob: -14.000309944152832
    9. ' ' → logprob: -14.125309944152832
    10. '-d' → logprob: -14.500309944152832

Token 1063: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00010413920972496271
    2. '_d' → logprob: -9.250103950500488
    3. ' d' → logprob: -12.625103950500488
    4. '	d' → logprob: -13.125103950500488
    5. '.d' → logprob: -14.250103950500488
    6. 'depth' → logprob: -14.250103950500488
    7. '"d' → logprob: -15.375103950500488
    8. ''d' → logprob: -15.625103950500488
    9. '­d' → logprob: -15.625103950500488
    10. '
' → logprob: -15.687603950500488

Token 1064: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0380568690598011
    2. '-' → logprob: -3.2880568504333496
    3. '-cut' → logprob: -11.288057327270508
    4. ' ' → logprob: -13.038057327270508
    5. ' cut' → logprob: -14.788057327270508
    6. ' ' → logprob: -15.788057327270508
    7. 'cut' → logprob: -16.288057327270508
    8. ' -
' → logprob: -17.163057327270508
    9. ')' → logprob: -17.788057327270508
    10. 'Cut' → logprob: -18.788057327270508

Token 1065: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.005233882926404476
    2. ' cut' → logprob: -5.2552337646484375
    3. '_cut' → logprob: -17.505233764648438
    4. ' ' → logprob: -18.880233764648438
    5. '   ' → logprob: -19.130233764648438
    6. '.cut' → logprob: -19.505233764648438
    7. 'cutaneous' → logprob: -19.630233764648438
    8. 'c' → logprob: -20.005233764648438
    9. '=cut' → logprob: -20.130233764648438
    10. '
' → logprob: -20.755233764648438

Token 1066: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -4.36574100604048e-06
    2. 'pos' → logprob: -12.375004768371582
    3. '_p' → logprob: -17.375003814697266
    4. '	pos' → logprob: -17.375003814697266
    5. '_start' → logprob: -18.000003814697266
    6. '_' → logprob: -19.000003814697266
    7. '_cut' → logprob: -19.125003814697266
    8. 'Pos' → logprob: -19.375003814697266
    9. '_c' → logprob: -19.625003814697266
    10. '_op' → logprob: -19.750003814697266

Token 1067: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31358253955841064
    2. ')
' → logprob: -1.3135825395584106
    3. '       ' → logprob: -8.563582420349121
    4. '           ' → logprob: -9.188582420349121
    5. ')
' → logprob: -10.813582420349121
    6. ')return' → logprob: -12.438582420349121
    7. ')

' → logprob: -13.438582420349121
    8. ' )' → logprob: -14.438582420349121
    9. '   ' → logprob: -15.313582420349121
    10. '),' → logprob: -15.313582420349121

Token 1068: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5431060791015625
    2. '       ' → logprob: -1.1681060791015625
    3. 'left' → logprob: -2.9181060791015625
    4. ' left' → logprob: -3.5431060791015625
    5. '	left' → logprob: -4.7931060791015625
    6. '[left' → logprob: -5.1681060791015625
    7. '           ' → logprob: -5.2931060791015625
    8. '   ' → logprob: -5.6681060791015625
    9. ')
' → logprob: -7.5431060791015625
    10. ',left' → logprob: -7.6681060791015625

Token 1069: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.0004309076175559312
    2. ' left' → logprob: -7.750431060791016
    3. 'right' → logprob: -16.000431060791016
    4. '(left' → logprob: -16.000431060791016
    5. 'lef' → logprob: -18.000431060791016
    6. '
' → logprob: -19.000431060791016
    7. '	left' → logprob: -19.125431060791016
    8. 'return' → logprob: -19.125431060791016
    9. '[left' → logprob: -19.375431060791016
    10. ' lef' → logprob: -21.375431060791016

Token 1070: '_piece' (ID: 126000)
  Prédit: '_piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -0.0013309523928910494
    2. '_p' → logprob: -6.626330852508545
    3. '_' → logprob: -13.001331329345703
    4. ',' → logprob: -13.376331329345703
    5. '_,' → logprob: -14.376331329345703
    6. ',_' → logprob: -14.876331329345703
    7. ' _' → logprob: -16.126331329345703
    8. '_
' → logprob: -17.501331329345703
    9. '_pi' → logprob: -17.626331329345703
    10. '_item' → logprob: -17.626331329345703

Token 1071: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024001303245313466
    2. '=' → logprob: -8.375240325927734
    3. ' ,' → logprob: -11.625240325927734
    4. ' =' → logprob: -15.250240325927734
    5. '‌,' → logprob: -16.375240325927734
    6. '<|end|>' → logprob: -16.875240325927734
    7. ',
' → logprob: -17.750240325927734
    8. ',right' → logprob: -17.875240325927734
    9. ',\
' → logprob: -19.000240325927734
    10. ',user' → logprob: -19.125240325927734

Token 1072: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.2519291639328003
    2. ' right' → logprob: -1.5019291639328003
    3. '	right' → logprob: -16.626928329467773
    4. '   ' → logprob: -18.251928329467773
    5. '[right' → logprob: -18.626928329467773
    6. 'Right' → logprob: -19.001928329467773
    7. '(right' → logprob: -19.126928329467773
    8. '           ' → logprob: -19.501928329467773
    9. ' ' → logprob: -19.626928329467773
    10. '_right' → logprob: -20.376928329467773

Token 1073: '_piece' (ID: 126000)
  Prédit: '_piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -0.001760029001161456
    2. '_p' → logprob: -6.376760005950928
    3. '_' → logprob: -10.501760482788086
    4. ' _' → logprob: -11.376760482788086
    5. '=' → logprob: -11.751760482788086
    6. '=_' → logprob: -13.001760482788086
    7. ' =' → logprob: -13.126760482788086
    8. '```' → logprob: -13.751760482788086
    9. '_=' → logprob: -14.001760482788086
    10. '_pair' → logprob: -14.376760482788086

Token 1074: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015023599844425917
    2. ' =' → logprob: -6.501502513885498
    3. '=
' → logprob: -19.626502990722656
    4. '=

' → logprob: -19.876502990722656
    5. '=}' → logprob: -21.501502990722656
    6. '<|end|>' → logprob: -21.626502990722656
    7. '＝' → logprob: -21.876502990722656
    8. ',' → logprob: -22.126502990722656
    9. ' ' → logprob: -22.251502990722656
    10. ')' → logprob: -22.626502990722656

Token 1075: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.014656426385045052
    2. ' upper' → logprob: -4.2646565437316895
    3. 'lower' → logprob: -7.6396565437316895
    4. '   ' → logprob: -12.014656066894531
    5. ' lower' → logprob: -12.764656066894531
    6. ' ' → logprob: -14.514656066894531
    7. 'up' → logprob: -14.639656066894531
    8. 'left' → logprob: -15.014656066894531
    9. '  ' → logprob: -15.139656066894531
    10. '    ' → logprob: -15.264656066894531

Token 1076: '_piece' (ID: 126000)
  Prédit: '_piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -8.061054359131958e-06
    2. '_p' → logprob: -12.000007629394531
    3. 'piece' → logprob: -13.750007629394531
    4. '_point' → logprob: -15.750007629394531
    5. 'Piece' → logprob: -16.25000762939453
    6. '```' → logprob: -16.37500762939453
    7. '_pair' → logprob: -16.50000762939453
    8. '_side' → logprob: -16.87500762939453
    9. 'piec' → logprob: -17.12500762939453
    10. '   ' → logprob: -17.25000762939453

Token 1077: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.723352049040841e-06
    2. ' ,' → logprob: -12.875004768371582
    3. ',right' → logprob: -13.375004768371582
    4. ',
' → logprob: -15.000004768371582
    5. '<|end|>' → logprob: -15.875004768371582
    6. ',r' → logprob: -17.250003814697266
    7. ',

' → logprob: -18.000003814697266
    8. ',\
' → logprob: -18.250003814697266
    9. '.' → logprob: -18.375003814697266
    10. '‌,' → logprob: -18.375003814697266

Token 1078: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.005233882926404476
    2. ' lower' → logprob: -5.2552337646484375
    3. '.lower' → logprob: -18.755233764648438
    4. '(lower' → logprob: -18.755233764648438
    5. 'Lower' → logprob: -20.005233764648438
    6. '_lower' → logprob: -20.880233764648438
    7. ' ' → logprob: -21.130233764648438
    8. 'low' → logprob: -21.255233764648438
    9. '   ' → logprob: -21.505233764648438
    10. 'l' → logprob: -23.255233764648438

Token 1079: '_piece' (ID: 126000)
  Prédit: '_piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -2.069664333248511e-05
    2. '_p' → logprob: -11.125020980834961
    3. '._' → logprob: -12.250020980834961
    4. 'piec' → logprob: -15.125020980834961
    5. '_' → logprob: -15.250020980834961
    6. 'Piece' → logprob: -15.625020980834961
    7. 'piece' → logprob: -15.875020980834961
    8. '.p' → logprob: -16.12502098083496
    9. '.' → logprob: -16.25002098083496
    10. '__' → logprob: -17.25002098083496

Token 1080: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002663765801116824
    2. 'return' → logprob: -6.377663612365723
    3. '
' → logprob: -7.752663612365723
    4. ' return' → logprob: -7.877663612365723
    5. '   ' → logprob: -9.127663612365723
    6. '        
' → logprob: -11.377663612365723
    7. '<|end|>' → logprob: -11.502663612365723
    8. '	' → logprob: -11.877663612365723
    9. '	return' → logprob: -12.002663612365723
    10. '
' → logprob: -13.377663612365723

Token 1081: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01869906485080719
    2. 'return' → logprob: -4.0186991691589355
    3. ' return' → logprob: -7.5186991691589355
    4. '   ' → logprob: -12.143698692321777
    5. '
' → logprob: -15.643698692321777
    6. '	return' → logprob: -15.893698692321777
    7. '{return' → logprob: -15.893698692321777
    8. ':return' → logprob: -16.143699645996094
    9. '           ' → logprob: -16.518699645996094
    10. '```' → logprob: -16.518699645996094

Token 1082: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20151451230049133
    2. '       ' → logprob: -1.701514482498169
    3. ' return' → logprob: -9.20151424407959
    4. '{return' → logprob: -16.326515197753906
    5. ':return' → logprob: -16.576515197753906
    6. '   ' → logprob: -16.701515197753906
    7. '	return' → logprob: -16.701515197753906
    8. ')return' → logprob: -17.451515197753906
    9. '
' → logprob: -17.826515197753906
    10. '```' → logprob: -18.201515197753906

Token 1083: ' Return' (ID: 6318)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -2.339278580620885e-06
    2. '       ' → logprob: -13.000001907348633
    3. ' return' → logprob: -16.750001907348633
    4. '   ' → logprob: -21.250001907348633
    5. '
' → logprob: -24.375001907348633
    6. '#' → logprob: -25.625001907348633
    7. '	return' → logprob: -26.000001907348633
    8. '        
' → logprob: -26.125001907348633
    9. 'self' → logprob: -26.625001907348633
    10. '           ' → logprob: -26.750001907348633

Token 1084: ' pieces' (ID: 12762)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.30797818303108215
    2. '(left' → logprob: -1.8079781532287598
    3. ' left' → logprob: -2.3079781532287598
    4. ' (' → logprob: -6.43297815322876
    5. '   ' → logprob: -11.932978630065918
    6. '[left' → logprob: -12.682978630065918
    7. '	left' → logprob: -13.307978630065918
    8. '(' → logprob: -14.182978630065918
    9. '(
' → logprob: -15.057978630065918
    10. 'return' → logprob: -15.432978630065918

Token 1085: ' such' (ID: 2238)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39911001920700073
    2. 'return' → logprob: -1.6491100788116455
    3. '(left' → logprob: -2.5241100788116455
    4. '
' → logprob: -4.399109840393066
    5. 'left' → logprob: -4.399109840393066
    6. ' return' → logprob: -4.524109840393066
    7. ',' → logprob: -4.649109840393066
    8. '[left' → logprob: -5.399109840393066
    9. ' left' → logprob: -6.149109840393066
    10. '        
' → logprob: -6.524109840393066

Token 1086: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.0679253563284874
    2. '       ' → logprob: -3.692925453186035
    3. ' that' → logprob: -3.692925453186035
    4. 'tuple' → logprob: -5.067925453186035
    5. 'a' → logprob: -5.817925453186035
    6. ',' → logprob: -6.317925453186035
    7. '   ' → logprob: -7.192925453186035
    8. 'return' → logprob: -7.817925453186035
    9. '_tuple' → logprob: -8.067925453186035
    10. 'the' → logprob: -8.192925453186035

Token 1087: ' the' (ID: 290)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.36375346779823303
    2. 'left' → logprob: -1.3637534379959106
    3. '(left' → logprob: -3.1137535572052
    4. ' return' → logprob: -6.238753318786621
    5. ' left' → logprob: -6.613753318786621
    6. ' (' → logprob: -6.738753318786621
    7. '       ' → logprob: -8.488753318786621
    8. '(return' → logprob: -9.863753318786621
    9. '(' → logprob: -10.613753318786621
    10. 'right' → logprob: -10.988753318786621

Token 1088: ' smaller' (ID: 13679)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.07740817219018936
    2. 'first' → logprob: -2.8274080753326416
    3. 'return' → logprob: -4.327408313751221
    4. ' left' → logprob: -6.577408313751221
    5. '(left' → logprob: -8.452407836914062
    6. ' first' → logprob: -8.577407836914062
    7. 'right' → logprob: -8.577407836914062
    8. 'cut' → logprob: -10.452407836914062
    9. '(' → logprob: -10.702407836914062
    10. 'Tuple' → logprob: -10.952407836914062

Token 1089: ' area' (ID: 3624)
  Prédit: '_piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_piece' → logprob: -0.013881630264222622
    2. 'piece' → logprob: -4.388881683349609
    3. '=' → logprob: -7.388881683349609
    4. ' piece' → logprob: -7.513881683349609
    5. ',' → logprob: -9.51388168334961
    6. '_p' → logprob: -10.38888168334961
    7. 'Piece' → logprob: -10.76388168334961
    8. 'piec' → logprob: -10.76388168334961
    9. ' =' → logprob: -11.01388168334961
    10. 'left' → logprob: -11.38888168334961

Token 1090: ' piece' (ID: 9047)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15671755373477936
    2. '=' → logprob: -2.906717538833618
    3. '_piece' → logprob: -3.281717538833618
    4. ' =' → logprob: -3.656717538833618
    5. 'if' → logprob: -4.281717777252197
    6. '       ' → logprob: -5.906717777252197
    7. '_area' → logprob: -6.156717777252197
    8. 'piece' → logprob: -6.531717777252197
    9. '<=' → logprob: -6.656717777252197
    10. ' if' → logprob: -6.906717777252197

Token 1091: ' has' (ID: 853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003068860387429595
    2. 'if' → logprob: -6.503068923950195
    3. '       ' → logprob: -7.253068923950195
    4. ' if' → logprob: -8.003068923950195
    5. ' is' → logprob: -8.753068923950195
    6. ' ,' → logprob: -9.253068923950195
    7. 'return' → logprob: -9.878068923950195
    8. 's' → logprob: -10.253068923950195
    9. '<|end|>' → logprob: -10.378068923950195
    10. '   ' → logprob: -10.753068923950195

Token 1092: ' smaller' (ID: 13679)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.17292848229408264
    2. 'the' → logprob: -2.04792857170105
    3. 'area' → logprob: -4.422928333282471
    4. 'first' → logprob: -5.297928333282471
    5. ' the' → logprob: -5.422928333282471
    6. ' left' → logprob: -6.422928333282471
    7. 'cut' → logprob: -6.672928333282471
    8. 'index' → logprob: -7.047928333282471
    9. 'right' → logprob: -7.172928333282471
    10. ',' → logprob: -7.172928333282471

Token 1093: ' ID' (ID: 4170)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.020033035427331924
    2. '_area' → logprob: -5.02003288269043
    3. 'width' → logprob: -5.02003288269043
    4. ' area' → logprob: -5.39503288269043
    5. '.area' → logprob: -7.02003288269043
    6. '(area' → logprob: -8.64503288269043
    7. '
' → logprob: -9.02003288269043
    8. 'edge' → logprob: -9.39503288269043
    9. '_rect' → logprob: -9.39503288269043
    10. '_w' → logprob: -9.64503288269043

Token 1094: ' later' (ID: 4849)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6154321432113647
    2. '
' → logprob: -0.9904321432113647
    3. 'return' → logprob: -3.3654322624206543
    4. ' if' → logprob: -3.9904322624206543
    5. ',' → logprob: -4.490432262420654
    6. '(' → logprob: -5.615432262420654
    7. '(
' → logprob: -5.615432262420654
    8. ',
' → logprob: -5.865432262420654
    9. 'if' → logprob: -6.115432262420654
    10. ':' → logprob: -6.240432262420654

Token 1095: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027109991759061813
    2. '
' → logprob: -4.4021100997924805
    3. 'return' → logprob: -5.0271100997924805
    4. ',' → logprob: -5.9021100997924805
    5. ' if' → logprob: -6.7771100997924805
    6. ' return' → logprob: -7.4021100997924805
    7. '()
' → logprob: -7.6521100997924805
    8. ',
' → logprob: -7.9021100997924805
    9. ':' → logprob: -7.9021100997924805
    10. '(' → logprob: -8.02711009979248

Token 1096: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039057403802871704
    2. '
' → logprob: -3.914057493209839
    3. ',' → logprob: -5.16405725479126
    4. 'return' → logprob: -5.28905725479126
    5. '()
' → logprob: -6.41405725479126
    6. ' if' → logprob: -6.53905725479126
    7. ':' → logprob: -7.53905725479126
    8. '(
' → logprob: -7.78905725479126
    9. ',
' → logprob: -7.91405725479126
    10. ' =' → logprob: -7.91405725479126

Token 1097: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036883170250803232
    2. 'return' → logprob: -5.753688335418701
    3. ' return' → logprob: -7.628688335418701
    4. ',' → logprob: -11.378687858581543
    5. '        
' → logprob: -12.878687858581543
    6. '
' → logprob: -13.128687858581543
    7. '      ' → logprob: -13.628687858581543
    8. '   ' → logprob: -13.878687858581543
    9. ' if' → logprob: -14.253687858581543
    10. '(' → logprob: -14.253687858581543

Token 1098: ' pieces' (ID: 12762)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8779538869857788
    2. 'return' → logprob: -1.1279538869857788
    3. '       ' → logprob: -1.3779538869857788
    4. 'left' → logprob: -5.252954006195068
    5. ' if' → logprob: -6.127954006195068
    6. 'area' → logprob: -7.127954006195068
    7. 'areas' → logprob: -8.75295352935791
    8. ' return' → logprob: -8.87795352935791
    9. '```' → logprob: -11.37795352935791
    10. ' left' → logprob: -11.50295352935791

Token 1099: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048614393919706345
    2. ' =' → logprob: -3.048614501953125
    3. '[' → logprob: -10.923614501953125
    4. '   ' → logprob: -12.798614501953125
    5. ',' → logprob: -13.298614501953125
    6. '=[' → logprob: -13.298614501953125
    7. 'return' → logprob: -14.673614501953125
    8. '       ' → logprob: -14.673614501953125
    9. ':' → logprob: -14.798614501953125
    10. ')' → logprob: -14.798614501953125

Token 1100: ' [' (ID: 723)
  Prédit: '[left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -0.0027310517616569996
    2. '(left' → logprob: -6.252730846405029
    3. ' [' → logprob: -7.877730846405029
    4. '[' → logprob: -8.752731323242188
    5. '(sorted' → logprob: -8.877731323242188
    6. ' (' → logprob: -10.127731323242188
    7. 'sorted' → logprob: -10.377731323242188
    8. '[right' → logprob: -10.877731323242188
    9. ' sorted' → logprob: -11.002731323242188
    10. '   ' → logprob: -11.752731323242188

Token 1101: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -2.5776860184123507e-06
    2. '   ' → logprob: -13.62500286102295
    3. ' left' → logprob: -13.75000286102295
    4. '(left' → logprob: -15.87500286102295
    5. 'right' → logprob: -16.000001907348633
    6. '       ' → logprob: -17.875001907348633
    7. '           ' → logprob: -18.250001907348633
    8. '[left' → logprob: -18.750001907348633
    9. '	left' → logprob: -19.125001907348633
    10. '(' → logprob: -19.625001907348633

Token 1102: '_piece' (ID: 126000)
  Prédit: '_piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -1.0325924449716695e-05
    2. '_p' → logprob: -11.50001049041748
    3. ',_' → logprob: -17.250009536743164
    4. '```' → logprob: -17.375009536743164
    5. ' _' → logprob: -17.500009536743164
    6. '_' → logprob: -17.500009536743164
    7. ',' → logprob: -19.000009536743164
    8. '_part' → logprob: -19.250009536743164
    9. ''_' → logprob: -19.250009536743164
    10. '_,' → logprob: -19.500009536743164

Token 1103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013505916576832533
    2. ',right' → logprob: -6.626350402832031
    3. ',
' → logprob: -10.876350402832031
    4. ',left' → logprob: -12.626350402832031
    5. ' ,' → logprob: -13.251350402832031
    6. ',r' → logprob: -15.501350402832031
    7. '[right' → logprob: -15.626350402832031
    8. ',p' → logprob: -15.626350402832031
    9. 'right' → logprob: -15.876350402832031
    10. '       ' → logprob: -17.00135040283203

Token 1104: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.06196768581867218
    2. ' right' → logprob: -2.811967611312866
    3. '	right' → logprob: -17.936967849731445
    4. 'Right' → logprob: -19.311967849731445
    5. '   ' → logprob: -19.686967849731445
    6. ',right' → logprob: -19.811967849731445
    7. '       ' → logprob: -20.311967849731445
    8. '(right' → logprob: -20.311967849731445
    9. '[right' → logprob: -20.311967849731445
    10. '           ' → logprob: -20.436967849731445

Token 1105: '_piece' (ID: 126000)
  Prédit: '_piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -0.00020389800192788243
    2. '_p' → logprob: -8.500204086303711
    3. ')_' → logprob: -15.625204086303711
    4. '_' → logprob: -16.37520408630371
    5. ' _' → logprob: -16.87520408630371
    6. '```' → logprob: -17.00020408630371
    7. ']_' → logprob: -17.12520408630371
    8. ')' → logprob: -18.00020408630371
    9. 'piece' → logprob: -18.37520408630371
    10. '   ' → logprob: -18.50020408630371

Token 1106: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3139916658401489
    2. ']' → logprob: -1.313991665840149
    3. ',' → logprob: -8.06399154663086
    4. '       ' → logprob: -8.31399154663086
    5. ']
' → logprob: -9.56399154663086
    6. ']

' → logprob: -9.68899154663086
    7. ',
' → logprob: -10.68899154663086
    8. '[' → logprob: -11.81399154663086
    9. '],' → logprob: -13.31399154663086
    10. ' ]
' → logprob: -13.93899154663086

Token 1107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0060269152745604515
    2. 'pieces' → logprob: -5.256026744842529
    3. ' pieces' → logprob: -7.881026744842529
    4. 'areas' → logprob: -8.631027221679688
    5. 'return' → logprob: -8.756027221679688
    6. 'if' → logprob: -11.006027221679688
    7. '   ' → logprob: -11.131027221679688
    8. '
' → logprob: -11.256027221679688
    9. '[' → logprob: -11.881027221679688
    10. '        
' → logprob: -12.006027221679688

Token 1108: ' pieces' (ID: 12762)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0520081520080566
    2. 'pieces' (adapté à ' pieces') → logprob: -1.0520081520080566
    3. 'if' → logprob: -1.3020081520080566
    4. 'areas' → logprob: -4.302008152008057
    5. 'return' → logprob: -5.177008152008057
    6. ' pieces' → logprob: -5.177008152008057
    7. ' if' → logprob: -5.427008152008057
    8. 'area' → logprob: -9.427007675170898
    9. '   ' → logprob: -10.177007675170898
    10. '#' → logprob: -10.427007675170898

Token 1109: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -6.468279752880335e-05
    2. '=' → logprob: -9.875064849853516
    3. '.' → logprob: -11.375064849853516
    4. 'sort' → logprob: -13.750064849853516
    5. '[' → logprob: -15.750064849853516
    6. 'sorted' → logprob: -15.750064849853516
    7. '_sorted' → logprob: -16.000064849853516
    8. '       ' → logprob: -16.500064849853516
    9. '   ' → logprob: -17.250064849853516
    10. ' =' → logprob: -17.625064849853516

Token 1110: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -9.85366350505501e-05
    2. '()' → logprob: -9.50009822845459
    3. '(reverse' → logprob: -11.12509822845459
    4. 'key' → logprob: -12.00009822845459
    5. '(' → logprob: -13.37509822845459
    6. ' key' → logprob: -15.12509822845459
    7. '(lambda' → logprob: -15.62509822845459
    8. ',key' → logprob: -15.87509822845459
    9. '	key' → logprob: -16.000099182128906
    10. '(
' → logprob: -16.000099182128906

Token 1111: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -9.662937372922897e-05
    2. '=' → logprob: -9.250096321105957
    3. '=len' → logprob: -15.125096321105957
    4. 'lambda' → logprob: -15.500096321105957
    5. '=
' → logprob: -17.375097274780273
    6. '(lambda' → logprob: -19.375097274780273
    7. '=_' → logprob: -19.875097274780273
    8. ' lambda' → logprob: -20.375097274780273
    9. '=item' → logprob: -20.375097274780273
    10. '=a' → logprob: -20.625097274780273

Token 1112: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.09442251920700073
    2. ' p' → logprob: -2.5944225788116455
    3. 'piece' → logprob: -4.594422340393066
    4. 'x' → logprob: -5.969422340393066
    5. ' piece' → logprob: -5.969422340393066
    6. ' x' → logprob: -8.594422340393066
    7. '(piece' → logprob: -12.969422340393066
    8. 'pi' → logprob: -13.094422340393066
    9. '   ' → logprob: -14.344422340393066
    10. 'pie' → logprob: -14.469422340393066

Token 1113: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023399698548018932
    2. 'p' → logprob: -6.252339839935303
    3. ' p' → logprob: -7.877339839935303
    4. ':p' → logprob: -11.002340316772461
    5. ' :' → logprob: -11.127340316772461
    6. 'area' → logprob: -16.00234031677246
    7. '.p' → logprob: -16.00234031677246
    8. '_:' → logprob: -16.12734031677246
    9. 'a' → logprob: -16.50234031677246
    10. '   ' → logprob: -17.12734031677246

Token 1114: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00671584764495492
    2. ' p' → logprob: -5.006715774536133
    3. '(p' → logprob: -14.756715774536133
    4. '(' → logprob: -17.131715774536133
    5. ' (' → logprob: -17.131715774536133
    6. '	p' → logprob: -17.756715774536133
    7. ')p' → logprob: -17.881715774536133
    8. 'piece' → logprob: -18.381715774536133
    9. '   ' → logprob: -18.756715774536133
    10. '_.' → logprob: -18.881715774536133

Token 1115: '.area' (ID: 78128)
  Prédit: '.area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.area' → logprob: -1.981667537620524e-06
    2. '.' → logprob: -13.375001907348633
    3. 'area' → logprob: -15.375001907348633
    4. ':' → logprob: -16.500001907348633
    5. '.Area' → logprob: -17.500001907348633
    6. ' area' → logprob: -17.625001907348633
    7. '.are' → logprob: -18.000001907348633
    8. ' .' → logprob: -19.125001907348633
    9. '(area' → logprob: -19.500001907348633
    10. '.size' → logprob: -19.625001907348633

Token 1116: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.024085013195872307
    2. '()' → logprob: -3.77408504486084
    3. '(),' → logprob: -7.52408504486084
    4. '()]' → logprob: -8.39908504486084
    5. ')' → logprob: -11.27408504486084
    6. '())
' → logprob: -11.39908504486084
    7. '()[' → logprob: -11.52408504486084
    8. '();)' → logprob: -11.52408504486084
    9. '()>' → logprob: -11.64908504486084
    10. '()
' → logprob: -12.27408504486084

Token 1117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0698356106877327
    2. 'return' → logprob: -2.819835662841797
    3. ' return' → logprob: -5.319835662841797
    4. '
' → logprob: -6.194835662841797
    5. '        
' → logprob: -7.944835662841797
    6. '[' → logprob: -8.819835662841797
    7. '   ' → logprob: -9.194835662841797
    8. '<|end|>' → logprob: -9.194835662841797
    9. '  
' → logprob: -10.069835662841797
    10. ',' → logprob: -10.194835662841797

Token 1118: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003209680551663041
    2. '       ' → logprob: -5.753209590911865
    3. ' return' → logprob: -10.378210067749023
    4. '
' → logprob: -15.128210067749023
    5. ':return' → logprob: -15.878210067749023
    6. '	return' → logprob: -16.253210067749023
    7. '```' → logprob: -16.253210067749023
    8. '{return' → logprob: -16.378210067749023
    9. ')return' → logprob: -17.003210067749023
    10. '[' → logprob: -17.003210067749023

Token 1119: ' pieces' (ID: 12762)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.19625967741012573
    2. ' pieces' → logprob: -2.3212597370147705
    3. '(p' → logprob: -2.6962597370147705
    4. 'tuple' → logprob: -4.696259498596191
    5. ' tuple' → logprob: -6.446259498596191
    6. ' (' → logprob: -6.571259498596191
    7. '(tuple' → logprob: -8.571259498596191
    8. '(piece' → logprob: -9.321259498596191
    9. 'piece' → logprob: -9.696259498596191
    10. 'p' → logprob: -10.071259498596191

Token 1120: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '-' → logprob: -17.875
    4. '2' → logprob: -18.875
    5. '   ' → logprob: -19.0
    6. '1' → logprob: -19.625
    7. ':' → logprob: -19.6875
    8. '[' → logprob: -20.125
    9. '۰' → logprob: -20.1875
    10. ']' → logprob: -20.25

Token 1122: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.3458322731312364e-06
    2. ' ,' → logprob: -12.500007629394531
    3. ',p' → logprob: -12.875007629394531
    4. ',
' → logprob: -14.625007629394531
    5. '],' → logprob: -14.875007629394531
    6. '‌,' → logprob: -15.875007629394531
    7. '<|end|>' → logprob: -17.37500762939453
    8. '},' → logprob: -18.37500762939453
    9. '>,' → logprob: -18.50000762939453
    10. '),' → logprob: -18.62500762939453

Token 1123: ' pieces' (ID: 12762)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.3868711292743683
    2. ' pieces' → logprob: -1.136871099472046
    3. 'piece' → logprob: -17.261871337890625
    4. 'piec' → logprob: -17.636871337890625
    5. 'pie' → logprob: -18.136871337890625
    6. ' piezas' → logprob: -20.011871337890625
    7. 'pies' → logprob: -20.011871337890625
    8. 'Pieces' → logprob: -20.136871337890625
    9. ' pie' → logprob: -20.261871337890625
    10. ' ' → logprob: -20.511871337890625

Token 1124: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010425841173855588
    2. '1' → logprob: -9.250103950500488
    3. ' [' → logprob: -12.625103950500488
    4. '```' → logprob: -13.500103950500488
    5. 's' → logprob: -13.625103950500488
    6. '[
' → logprob: -14.125103950500488
    7. '`' → logprob: -14.625103950500488
    8. '
' → logprob: -15.625103950500488
    9. '][' → logprob: -16.375104904174805
    10. ']' → logprob: -16.625104904174805

Token 1125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -17.0
    3. '   ' → logprob: -17.75
    4. '
' → logprob: -18.375
    5. ' ' → logprob: -18.5
    6. '' → logprob: -18.625
    7. '0' → logprob: -18.75
    8. ']' → logprob: -18.75
    9. '```' → logprob: -18.75
    10. '‌' → logprob: -19.8125

Token 1126: ']


' (ID: 52447)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006765736034139991
    2. ')' → logprob: -7.37567663192749
    3. ']
' → logprob: -10.750676155090332
    4. '<|end|>' → logprob: -11.500676155090332
    5. '}' → logprob: -12.000676155090332
    6. ' ]' → logprob: -12.125676155090332
    7. '']' → logprob: -12.375676155090332
    8. '])' → logprob: -14.250676155090332
    9. '[' → logprob: -14.250676155090332
    10. ')]' → logprob: -14.875676155090332

Token 1127: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11626093834638596
    2. 'class' → logprob: -3.1162610054016113
    3. '<|end|>' → logprob: -3.4912610054016113
    4. '```' → logprob: -3.8662610054016113
    5. 'def' → logprob: -5.116261005401611
    6. 'a' → logprob: -5.866261005401611
    7. 'n' → logprob: -6.741261005401611
    8. '[' → logprob: -7.366261005401611
    9. ')' → logprob: -7.991261005401611
    10. '@pytest' → logprob: -7.991261005401611

Token 1128: ' Cake' (ID: 51982)
  Prédit: 'Circular'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Circular' → logprob: -0.9180963039398193
    2. 'Square' → logprob: -1.1680963039398193
    3. ' Circular' → logprob: -1.9180963039398193
    4. ' Square' → logprob: -2.9180963039398193
    5. 'Circle' → logprob: -3.5430963039398193
    6. 'L' → logprob: -4.668096542358398
    7. ' Circle' → logprob: -4.793096542358398
    8. 'Round' → logprob: -5.043096542358398
    9. ' L' → logprob: -5.293096542358398
    10. 'Rect' → logprob: -5.543096542358398

Token 1129: 'Cut' (ID: 35952)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7274206280708313
    2. '(P' → logprob: -0.7274206280708313
    3. '(' → logprob: -3.8524205684661865
    4. 'Piece' → logprob: -4.727420806884766
    5. '(Rect' → logprob: -6.352420806884766
    6. ':
' → logprob: -7.227420806884766
    7. '():' → logprob: -8.352420806884766
    8. '):' → logprob: -8.602420806884766
    9. '(object' → logprob: -8.602420806884766
    10. '(C' → logprob: -8.727420806884766

Token 1130: 'ting' (ID: 1744)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.10643716156482697
    2. 'ter' → logprob: -2.9814372062683105
    3. '(' → logprob: -3.7314372062683105
    4. ':' → logprob: -3.9814372062683105
    5. '(C' → logprob: -5.6064372062683105
    6. '(P' → logprob: -5.8564372062683105
    7. 'Piece' → logprob: -7.8564372062683105
    8. 'Cut' → logprob: -8.981436729431152
    9. ':
' → logprob: -9.231436729431152
    10. '():' → logprob: -9.231436729431152

Token 1131: 'Simulator' (ID: 120745)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028702387586236
    2. '(P' → logprob: -3.9037024974823
    3. '(' → logprob: -4.903702259063721
    4. ':
' → logprob: -7.403702259063721
    5. '():' → logprob: -10.778702735900879
    6. '(object' → logprob: -11.028702735900879
    7. ':

' → logprob: -11.903702735900879
    8. '<|end|>' → logprob: -12.028702735900879
    9. ' :' → logprob: -12.278702735900879
    10. ':P' → logprob: -12.528702735900879

Token 1132: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006589424447156489
    2. '(P' → logprob: -8.000658988952637
    3. ':
' → logprob: -8.625658988952637
    4. '(' → logprob: -9.625658988952637
    5. '():' → logprob: -9.875658988952637
    6. ' :' → logprob: -12.125658988952637
    7. '):' → logprob: -12.125658988952637
    8. '<|end|>' → logprob: -12.625658988952637
    9. '(object' → logprob: -12.750658988952637
    10. ':def' → logprob: -12.875658988952637

Token 1133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001931696751853451
    2. 'def' → logprob: -9.37519359588623
    3. ' def' → logprob: -9.75019359588623
    4. '	def' → logprob: -10.62519359588623
    5. '    
' → logprob: -10.87519359588623
    6. '```' → logprob: -13.00019359588623
    7. '   ' → logprob: -13.37519359588623
    8. '<|end|>' → logprob: -13.62519359588623
    9. 'class' → logprob: -14.75019359588623
    10. '
' → logprob: -15.00019359588623

Token 1134: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.05420633777976036
    2. ' def' → logprob: -3.804206371307373
    3. 'class' → logprob: -3.804206371307373
    4. '   ' → logprob: -4.804206371307373
    5. '	def' → logprob: -11.679205894470215
    6. '```' → logprob: -12.804205894470215
    7. ' class' → logprob: -13.054205894470215
    8. ':def' → logprob: -14.554205894470215
    9. ':' → logprob: -15.179205894470215
    10. '
' → logprob: -17.17920684814453

Token 1135: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.44779783487319946
    2. '__' → logprob: -1.1977977752685547
    3. 'def' → logprob: -3.1977977752685547
    4. ' __' → logprob: -4.322797775268555
    5. '_init' → logprob: -5.447797775268555
    6. ' def' → logprob: -7.572797775268555
    7. ' init' → logprob: -9.822797775268555
    8. '```' → logprob: -9.947797775268555
    9. '___' → logprob: -10.447797775268555
    10. 'int' → logprob: -11.572797775268555

Token 1136: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -16.125
    3. 'class' → logprob: -17.0
    4. 'def' → logprob: -17.0
    5. 'new' → logprob: -17.125
    6. ' init' → logprob: -18.5
    7. '_init' → logprob: -19.5
    8. '   ' → logprob: -19.875
    9. '(init' → logprob: -20.0
    10. 'name' → logprob: -20.25

Token 1137: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03486987575888634
    2. '__(' → logprob: -3.409869909286499
    3. '(' → logprob: -6.90986967086792
    4. ' (' → logprob: -9.034870147705078
    5. 'self' → logprob: -9.534870147705078
    6. '__(
' → logprob: -11.784870147705078
    7. '   ' → logprob: -11.909870147705078
    8. '__' → logprob: -12.284870147705078
    9. '
' → logprob: -12.409870147705078
    10. '```' → logprob: -12.659870147705078

Token 1138: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.166338137816638e-05
    2. ' self' → logprob: -10.875031471252441
    3. '   ' → logprob: -12.125031471252441
    4. '
' → logprob: -12.500031471252441
    5. '       ' → logprob: -13.375031471252441
    6. ')' → logprob: -13.750031471252441
    7. 'piece' → logprob: -15.250031471252441
    8. '(self' → logprob: -15.500031471252441
    9. '):
' → logprob: -15.625031471252441
    10. ',' → logprob: -16.375032424926758

Token 1139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.202022984623909
    2. 'self' → logprob: -1.7020230293273926
    3. '(self' → logprob: -8.202022552490234
    4. ' self' → logprob: -9.327022552490234
    5. ',self' → logprob: -9.327022552490234
    6. '
' → logprob: -9.577022552490234
    7. ')' → logprob: -10.327022552490234
    8. '   ' → logprob: -11.077022552490234
    9. ' ,' → logprob: -11.202022552490234
    10. ',
' → logprob: -11.952022552490234

Token 1140: ' initial' (ID: 4871)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.5529949069023132
    2. 'width' → logprob: -1.677994966506958
    3. 'initial' → logprob: -2.052994966506958
    4. 'w' → logprob: -2.677994966506958
    5. ' initial' → logprob: -4.427994728088379
    6. 'rect' → logprob: -4.552994728088379
    7. 'cake' → logprob: -4.802994728088379
    8. ' piece' → logprob: -5.677994728088379
    9. ' width' → logprob: -5.927994728088379
    10. ' cake' → logprob: -6.052994728088379

Token 1141: '_width' (ID: 17595)
  Prédit: '_piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -0.0029721148312091827
    2. '_p' → logprob: -6.25297212600708
    3. 'piece' → logprob: -7.25297212600708
    4. ':' → logprob: -8.877971649169922
    5. '_width' → logprob: -9.377971649169922
    6. '_w' → logprob: -9.627971649169922
    7. '_size' → logprob: -11.627971649169922
    8. ' piece' → logprob: -11.627971649169922
    9. '_shape' → logprob: -12.127971649169922
    10. '_depth' → logprob: -12.252971649169922

Token 1142: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2696521282196045
    2. ',' → logprob: -1.6446521282196045
    3. ':' → logprob: -3.1446521282196045
    4. ':int' → logprob: -9.144652366638184
    5. '=int' → logprob: -10.019652366638184
    6. ' ,' → logprob: -10.394652366638184
    7. ')' → logprob: -12.269652366638184
    8. '   ' → logprob: -13.394652366638184
    9. ' =' → logprob: -13.894652366638184
    10. '=None' → logprob: -14.144652366638184

Token 1143: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16362324357032776
    2. ' int' → logprob: -1.9136232137680054
    3. '10' → logprob: -5.913623332977295
    4. '100' → logprob: -8.663622856140137
    5. ')' → logprob: -9.413622856140137
    6. ' ' → logprob: -9.663622856140137
    7. ':int' → logprob: -9.788622856140137
    8. '20' → logprob: -10.038622856140137
    9. '=int' → logprob: -10.163622856140137
    10. '1' → logprob: -10.163622856140137

Token 1144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.054500666621607e-06
    2. ' ,' → logprob: -13.25000286102295
    3. ',
' → logprob: -13.75000286102295
    4. '   ' → logprob: -16.750003814697266
    5. ',int' → logprob: -17.250003814697266
    6. '‌,' → logprob: -18.250003814697266
    7. '،' → logprob: -19.125003814697266
    8. ',

' → logprob: -19.375003814697266
    9. '=' → logprob: -20.000003814697266
    10. '‍,' → logprob: -20.375003814697266

Token 1145: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.1269306242465973
    2. ' initial' → logprob: -2.1269307136535645
    3. '   ' → logprob: -13.251930236816406
    4. '	initial' → logprob: -15.126930236816406
    5. ' ' → logprob: -15.626930236816406
    6. ' inicial' → logprob: -16.001930236816406
    7. '_initial' → logprob: -16.876930236816406
    8. 'depth' → logprob: -17.001930236816406
    9. '.initial' → logprob: -17.001930236816406
    10. '(initial' → logprob: -17.001930236816406

Token 1146: '_depth' (ID: 44220)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.038102999329566956
    2. '_depth' → logprob: -3.2881031036376953
    3. ' depth' → logprob: -9.788103103637695
    4. '-depth' → logprob: -12.913103103637695
    5. 'Depth' → logprob: -13.288103103637695
    6. '_DEPTH' → logprob: -15.038103103637695
    7. '(depth' → logprob: -15.413103103637695
    8. '.depth' → logprob: -15.913103103637695
    9. '   ' → logprob: -16.163103103637695
    10. '
' → logprob: -16.163103103637695

Token 1147: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.421908958349377e-05
    2. ':int' → logprob: -10.00007438659668
    3. '):' → logprob: -10.75007438659668
    4. ')' → logprob: -12.37507438659668
    5. '):
' → logprob: -13.25007438659668
    6. '=' → logprob: -14.25007438659668
    7. '   ' → logprob: -15.12507438659668
    8. ',' → logprob: -15.12507438659668
    9. ' :' → logprob: -15.87507438659668
    10. '):

' → logprob: -16.87507438659668

Token 1148: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.000937547127250582
    2. ' int' → logprob: -7.000937461853027
    3. ')' → logprob: -10.625937461853027
    4. ':int' → logprob: -13.625937461853027
    5. '   ' → logprob: -15.875937461853027
    6. '=int' → logprob: -15.875937461853027
    7. '(int' → logprob: -16.750938415527344
    8. '):
' → logprob: -17.125938415527344
    9. '):' → logprob: -17.375938415527344
    10. '[int' → logprob: -17.500938415527344

Token 1149: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5760341882705688
    2. '):
' → logprob: -0.8260341882705688
    3. '):
' → logprob: -10.076034545898438
    4. '   ' → logprob: -10.576034545898438
    5. ')' → logprob: -10.701034545898438
    6. '       ' → logprob: -12.701034545898438
    7. ':' → logprob: -14.076034545898438
    8. ',' → logprob: -15.326034545898438
    9. '):

' → logprob: -15.576034545898438
    10. ' ):
' → logprob: -16.076034545898438

Token 1150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020950057660229504
    2. 'self' → logprob: -9.00020980834961
    3. '   ' → logprob: -9.87520980834961
    4. ' self' → logprob: -10.37520980834961
    5. '```' → logprob: -13.37520980834961
    6. ',' → logprob: -14.25020980834961
    7. ' ' → logprob: -15.75020980834961
    8. '	' → logprob: -15.75020980834961
    9. '	self' → logprob: -15.87520980834961
    10. '      ' → logprob: -16.12520980834961

Token 1151: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -2.4391956685576588e-05
    2. '       ' → logprob: -10.750024795532227
    3. ' self' → logprob: -12.750024795532227
    4. '   ' → logprob: -20.250024795532227
    5. '	self' → logprob: -21.000024795532227
    6. '(self' → logprob: -22.375024795532227
    7. '
' → logprob: -23.250024795532227
    8. 'from' → logprob: -23.750024795532227
    9. '```' → logprob: -23.875024795532227
    10. 'super' → logprob: -24.375024795532227

Token 1152: '.p' (ID: 1201)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.01838054321706295
    2. '.p' → logprob: -4.018380641937256
    3. '.initial' → logprob: -9.268380165100098
    4. '_p' → logprob: -9.393380165100098
    5. '.current' → logprob: -10.518380165100098
    6. '.c' → logprob: -10.643380165100098
    7. '_initial' → logprob: -14.518380165100098
    8. '.' → logprob: -14.893380165100098
    9. '.remaining' → logprob: -15.518380165100098
    10. '.parts' → logprob: -15.893380165100098

Token 1153: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -0.0007170771714299917
    2. '_' → logprob: -7.6257171630859375
    3. '_p' → logprob: -9.375717163085938
    4. '_ie' → logprob: -9.375717163085938
    5. '_ro' → logprob: -11.125717163085938
    6. 'ices' → logprob: -11.625717163085938
    7. '_i' → logprob: -11.750717163085938
    8. '_e' → logprob: -12.125717163085938
    9. 'ie' → logprob: -12.250717163085938
    10. '__' → logprob: -12.500717163085938

Token 1154: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.052472975105047226
    2. ' =' → logprob: -3.0524730682373047
    3. ':' → logprob: -5.552473068237305
    4. '=[]' → logprob: -15.802473068237305
    5. '   ' → logprob: -16.302473068237305
    6. '=[' → logprob: -17.427473068237305
    7. '[' → logprob: -17.927473068237305
    8. ' :' → logprob: -18.552473068237305
    9. '.append' → logprob: -18.802473068237305
    10. ' ' → logprob: -18.802473068237305

Token 1155: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -8.196732960641384e-05
    2. '[List' → logprob: -10.000082015991211
    3. ' List' → logprob: -10.250082015991211
    4. 'dict' → logprob: -14.500082015991211
    5. '	List' → logprob: -15.250082015991211
    6. 'Dict' → logprob: -15.500082015991211
    7. 'list' → logprob: -16.25008201599121
    8. '   ' → logprob: -16.37508201599121
    9. '(List' → logprob: -19.50008201599121
    10. '_list' → logprob: -20.00008201599121

Token 1156: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00018530222587287426
    2. '['' → logprob: -8.625185012817383
    3. '[
' → logprob: -12.625185012817383
    4. '[int' → logprob: -13.375185012817383
    5. '=' → logprob: -14.875185012817383
    6. ' =' → logprob: -15.125185012817383
    7. '[List' → logprob: -16.625185012817383
    8. '[C' → logprob: -16.625185012817383
    9. '[(' → logprob: -17.125185012817383
    10. '[...]' → logprob: -17.250185012817383

Token 1157: 'Piece' (ID: 36823)
  Prédit: 'Rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rect' → logprob: -0.6931865215301514
    2. 'Piece' → logprob: -0.6931865215301514
    3. 'Tuple' → logprob: -11.31818675994873
    4. 'Pie' → logprob: -11.81818675994873
    5. ' Piece' → logprob: -12.19318675994873
    6. 'Rectangle' → logprob: -12.56818675994873
    7. '[' → logprob: -12.94318675994873
    8. ' Rect' → logprob: -13.19318675994873
    9. ''' → logprob: -13.94318675994873
    10. 'Pair' → logprob: -14.06818675994873

Token 1158: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.096126576769166e-05
    2. ']=' → logprob: -10.500041007995605
    3. '=' → logprob: -11.375041007995605
    4. '[' → logprob: -13.875041007995605
    5. '']' → logprob: -14.125041007995605
    6. ' =' → logprob: -16.62504005432129
    7. ' ]' → logprob: -17.00004005432129
    8. '`]' → logprob: -17.12504005432129
    9. '"]' → logprob: -17.37504005432129
    10. ')' → logprob: -17.62504005432129

Token 1159: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001170225441455841
    2. ' =' → logprob: -6.7511701583862305
    3. '=[]' → logprob: -18.626171112060547
    4. '＝' → logprob: -20.376171112060547
    5. '[' → logprob: -21.126171112060547
    6. ']' → logprob: -21.626171112060547
    7. '	' → logprob: -21.626171112060547
    8. '<|end|>' → logprob: -21.626171112060547
    9. '[]' → logprob: -21.876171112060547
    10. ')' → logprob: -21.876171112060547

Token 1160: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00017410075815860182
    2. '[C' → logprob: -8.875174522399902
    3. '[self' → logprob: -12.375174522399902
    4. '[List' → logprob: -12.500174522399902
    5. '[int' → logprob: -12.750174522399902
    6. ' [' → logprob: -12.750174522399902
    7. '[new' → logprob: -12.875174522399902
    8. '[Int' → logprob: -13.000174522399902
    9. '(Rect' → logprob: -13.000174522399902
    10. '[left' → logprob: -13.125174522399902

Token 1161: 'Rect' (ID: 7872)
  Prédit: 'Rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rect' → logprob: -5.512236498361744e-07
    2. ' Rect' → logprob: -14.500000953674316
    3. '   ' → logprob: -19.625
    4. '	Rect' → logprob: -19.625
    5. '(Rect' → logprob: -21.5
    6. 'rect' → logprob: -23.375
    7. 'Rects' → logprob: -24.0
    8. '       ' → logprob: -24.0
    9. '_rect' → logprob: -24.625
    10. 'Rec' → logprob: -24.75

Token 1162: 'angular' (ID: 8802)
  Prédit: 'angular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angular' → logprob: 0.0
    2. 'Angular' → logprob: -17.25
    3. 'ang' → logprob: -18.125
    4. 'angu' → logprob: -18.5
    5. 'angled' → logprob: -19.125
    6. 'angle' → logprob: -19.375
    7. ' angular' → logprob: -19.75
    8. 'ular' → logprob: -19.875
    9. 'a' → logprob: -20.0
    10. 'angulo' → logprob: -20.25

Token 1163: 'Piece' (ID: 36823)
  Prédit: 'Piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Piece' → logprob: -9.088346359931165e-07
    2. ' Piece' → logprob: -14.875000953674316
    3. 'Pie' → logprob: -15.625000953674316
    4. '_piece' → logprob: -15.625000953674316
    5. 'Pieces' → logprob: -17.5
    6. '```' → logprob: -17.625
    7. '(' → logprob: -18.625
    8. 'Point' → logprob: -18.875
    9. '(initial' → logprob: -19.125
    10. '(P' → logprob: -19.375

Token 1164: '(initial' (ID: 63456)
  Prédit: '(initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(initial' → logprob: -4.320199877838604e-07
    2. 'initial' → logprob: -15.0
    3. '(' → logprob: -18.125
    4. ' (' → logprob: -20.25
    5. '(
' → logprob: -20.625
    6. '(original' → logprob: -21.375
    7. '(init' → logprob: -21.625
    8. '.initial' → logprob: -22.0
    9. '	initial' → logprob: -22.0
    10. '```' → logprob: -22.0

Token 1165: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -6.749814019713085e-06
    2. '_depth' → logprob: -12.500006675720215
    3. ' _' → logprob: -13.875006675720215
    4. '_' → logprob: -14.000006675720215
    5. '_w' → logprob: -14.500006675720215
    6. '_
' → logprob: -15.875006675720215
    7. '   ' → logprob: -16.00000762939453
    8. 'width' → logprob: -16.37500762939453
    9. 'Width' → logprob: -16.50000762939453
    10. '`' → logprob: -16.50000762939453

Token 1166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3902033970225602e-05
    2. ',
' → logprob: -11.500014305114746
    3. '<|end|>' → logprob: -13.375014305114746
    4. ' ,' → logprob: -13.625014305114746
    5. ',

' → logprob: -15.375014305114746
    6. ')' → logprob: -16.00001335144043
    7. ',current' → logprob: -16.00001335144043
    8. 'initial' → logprob: -16.12501335144043
    9. '‌,' → logprob: -16.25001335144043
    10. '<|end|>' → logprob: -16.25001335144043

Token 1167: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.004078997299075127
    2. ' initial' → logprob: -5.5040788650512695
    3. '	initial' → logprob: -15.25407886505127
    4. '   ' → logprob: -16.254079818725586
    5. ' ' → logprob: -16.754079818725586
    6. '(initial' → logprob: -17.254079818725586
    7. '           ' → logprob: -18.004079818725586
    8. '       ' → logprob: -18.004079818725586
    9. '.initial' → logprob: -18.004079818725586
    10. ' inicial' → logprob: -18.254079818725586

Token 1168: '_depth' (ID: 44220)
  Prédit: '_depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depth' → logprob: -0.0004597439547069371
    2. 'initial' → logprob: -8.250459671020508
    3. 'Depth' → logprob: -9.250459671020508
    4. 'depth' → logprob: -9.250459671020508
    5. '_initial' → logprob: -12.250459671020508
    6. ' Depth' → logprob: -14.375459671020508
    7. '_DEPTH' → logprob: -15.125459671020508
    8. ' initial' → logprob: -15.125459671020508
    9. ' depth' → logprob: -15.375459671020508
    10. '_' → logprob: -16.375459671020508

Token 1169: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.6405310816480778e-05
    2. ')' → logprob: -11.125016212463379
    3. ')]
' → logprob: -13.875016212463379
    4. ' )' → logprob: -14.875016212463379
    5. ']' → logprob: -15.250016212463379
    6. '   ' → logprob: -17.375017166137695
    7. '))' → logprob: -17.625017166137695
    8. ')}' → logprob: -17.875017166137695
    9. '       ' → logprob: -18.000017166137695
    10. ')]

' → logprob: -18.125017166137695

Token 1170: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1171: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.025324905291199684
    2. 'self' → logprob: -3.775324821472168
    3. '<|end|>' → logprob: -7.025324821472168
    4. '   ' → logprob: -7.275324821472168
    5. ' def' → logprob: -8.775324821472168
    6. '
' → logprob: -8.775324821472168
    7. '       ' → logprob: -9.150324821472168
    8. ' self' → logprob: -10.150324821472168
    9. '```' → logprob: -11.900324821472168
    10. '<|end|>' → logprob: -12.025324821472168

Token 1172: ' Initially' (ID: 96924)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00017708084487821907
    2. '       ' → logprob: -9.875177383422852
    3. ' self' → logprob: -10.250177383422852
    4. '#' → logprob: -10.250177383422852
    5. 'def' → logprob: -11.000177383422852
    6. 'from' → logprob: -11.125177383422852
    7. 'pass' → logprob: -12.000177383422852
    8. '
' → logprob: -12.125177383422852
    9. 'import' → logprob: -13.000177383422852
    10. '   ' → logprob: -13.250177383422852

Token 1173: ' only' (ID: 1606)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001823812141083181
    2. '
' → logprob: -7.126823902130127
    3. ' self' → logprob: -7.251823902130127
    4. '       ' → logprob: -8.251823425292969
    5. 'from' → logprob: -10.751823425292969
    6. 'next' → logprob: -11.626823425292969
    7. '#' → logprob: -11.876823425292969
    8. '   ' → logprob: -13.001823425292969
    9. '```' → logprob: -13.501823425292969
    10. 'the' → logprob: -13.751823425292969

Token 1174: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.31858327984809875
    2. ' one' → logprob: -1.3185832500457764
    3. 'self' → logprob: -5.3185834884643555
    4. 'the' → logprob: -8.193583488464355
    5. '_one' → logprob: -10.193583488464355
    6. ' the' → logprob: -10.943583488464355
    7. 'a' → logprob: -10.943583488464355
    8. ' self' → logprob: -11.568583488464355
    9. 'piece' → logprob: -11.568583488464355
    10. '1' → logprob: -11.568583488464355

Token 1175: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.08956026285886765
    2. ' piece' → logprob: -2.4645602703094482
    3. '_piece' → logprob: -8.714560508728027
    4. 'cake' → logprob: -9.089560508728027
    5. 'self' → logprob: -9.214560508728027
    6. 'cut' → logprob: -9.339560508728027
    7. ' cake' → logprob: -9.714560508728027
    8. 'piec' → logprob: -10.089560508728027
    9. '(piece' → logprob: -11.464560508728027
    10. '-piece' → logprob: -12.089560508728027

Token 1176: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1177: ' ID' (ID: 4170)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.5084511637687683
    2. 'ID' → logprob: -1.508451223373413
    3. '_id' → logprob: -1.883451223373413
    4. 'the' → logprob: -4.258450984954834
    5. 'width' → logprob: -6.008450984954834
    6. 'all' → logprob: -6.133450984954834
    7. 'no' → logprob: -6.383450984954834
    8. 'full' → logprob: -7.133450984954834
    9. ' id' → logprob: -7.258450984954834
    10. 'area' → logprob: -7.508450984954834

Token 1178: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06836554408073425
    2. ' ' → logprob: -3.8183655738830566
    3. 'self' → logprob: -4.318365573883057
    4. '=' → logprob: -4.568365573883057
    5. ' self' → logprob: -4.568365573883057
    6. ' =' → logprob: -4.818365573883057
    7. 's' → logprob: -7.193365573883057
    8. '1' → logprob: -7.193365573883057
    9. 'counter' → logprob: -8.568365097045898
    10. '_counter' → logprob: -9.568365097045898

Token 1179: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09018164873123169
    2. '1' → logprob: -2.465181589126587
    3. '=' → logprob: -7.465181827545166
    4. ' ' → logprob: -7.840181827545166
    5. 'self' → logprob: -8.340181350708008
    6. ' =' → logprob: -10.715181350708008
    7. ' self' → logprob: -12.090181350708008
    8. 's' → logprob: -12.965181350708008
    9. '[' → logprob: -13.090181350708008
    10. '
' → logprob: -13.215181350708008

Token 1180: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008371546864509583
    2. '<|end|>' → logprob: -5.383371353149414
    3. '
' → logprob: -6.383371353149414
    4. 'self' → logprob: -6.508371353149414
    5. '   ' → logprob: -8.133371353149414
    6. ' self' → logprob: -8.758371353149414
    7. 'def' → logprob: -10.508371353149414
    8. '```' → logprob: -10.633371353149414
    9. '(self' → logprob: -11.008371353149414
    10. '<|end|>' → logprob: -11.258371353149414

Token 1181: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1405208855867386
    2. 'self' → logprob: -2.1405208110809326
    3. '   ' → logprob: -4.515521049499512
    4. 'def' → logprob: -6.140521049499512
    5. ' self' → logprob: -7.890521049499512
    6. '<|end|>' → logprob: -11.390521049499512
    7. '```' → logprob: -12.015521049499512
    8. ' ' → logprob: -12.265521049499512
    9. '	self' → logprob: -12.765521049499512
    10. ' def' → logprob: -13.015521049499512

Token 1182: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.25194430351257324
    2. 'self' → logprob: -1.5019443035125732
    3. '   ' → logprob: -11.626944541931152
    4. ' def' → logprob: -12.501944541931152
    5. '       ' → logprob: -13.626944541931152
    6. ' self' → logprob: -13.876944541931152
    7. '@property' → logprob: -15.876944541931152
    8. '
' → logprob: -16.126943588256836
    9. '```' → logprob: -16.126943588256836
    10. ' ' → logprob: -17.501943588256836

Token 1183: ' perform' (ID: 3347)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.6346794366836548
    2. ' cut' → logprob: -0.7596794366836548
    3. '_cut' → logprob: -7.134679317474365
    4. ' get' → logprob: -7.509679317474365
    5. 'get' → logprob: -8.009679794311523
    6. 'def' → logprob: -9.384679794311523
    7. 'pieces' → logprob: -9.634679794311523
    8. '_' → logprob: -10.009679794311523
    9. 'piece' → logprob: -10.134679794311523
    10. ' pieces' → logprob: -10.134679794311523

Token 1184: '_cut' (ID: 81399)
  Prédit: '_cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cut' → logprob: -3.047134305234067e-05
    2. 'cut' → logprob: -10.500030517578125
    3. '_c' → logprob: -13.000030517578125
    4. ' cut' → logprob: -15.500030517578125
    5. '_' → logprob: -16.250030517578125
    6. 'Cut' → logprob: -16.500030517578125
    7. '=cut' → logprob: -16.625030517578125
    8. '_move' → logprob: -17.000030517578125
    9. 'cuts' → logprob: -17.250030517578125
    10. '_step' → logprob: -17.375030517578125

Token 1185: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014202527701854706
    2. '(' → logprob: -4.26420259475708
    3. ' (' → logprob: -10.639202117919922
    4. 'self' → logprob: -11.514202117919922
    5. '(
' → logprob: -12.514202117919922
    6. '(s' → logprob: -14.389202117919922
    7. '   ' → logprob: -15.264202117919922
    8. 's' → logprob: -15.514202117919922
    9. ' self' → logprob: -16.264202117919922
    10. '_(' → logprob: -16.639202117919922

Token 1186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030619686003774405
    2. 'self' → logprob: -6.003061771392822
    3. '(self' → logprob: -7.503061771392822
    4. '   ' → logprob: -11.62806224822998
    5. ' ,' → logprob: -11.87806224822998
    6. ',index' → logprob: -12.87806224822998
    7. ',self' → logprob: -12.87806224822998
    8. 's' → logprob: -13.00306224822998
    9. 'ation' → logprob: -13.25306224822998
    10. '_,' → logprob: -13.50306224822998

Token 1187: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.028331294655799866
    2. ' piece' → logprob: -3.6533312797546387
    3. 'self' → logprob: -6.278331279754639
    4. ' self' → logprob: -9.403331756591797
    5. 'index' → logprob: -10.028331756591797
    6. 'cut' → logprob: -12.278331756591797
    7. 'id' → logprob: -12.403331756591797
    8. 'idx' → logprob: -13.153331756591797
    9. 'pieces' → logprob: -13.153331756591797
    10. ' index' → logprob: -13.278331756591797

Token 1188: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.06403391063213348
    2. '_index' → logprob: -2.8140339851379395
    3. '_idx' → logprob: -6.1890339851379395
    4. '_' → logprob: -12.189033508300781
    5. '_i' → logprob: -13.064033508300781
    6. 'index' → logprob: -13.689033508300781
    7. '_ind' → logprob: -14.564033508300781
    8. 's' → logprob: -14.814033508300781
    9. '_ix' → logprob: -14.939033508300781
    10. '_ids' → logprob: -15.064033508300781

Token 1189: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006647797417826951
    2. ',' → logprob: -7.375664710998535
    3. ':int' → logprob: -10.750664710998535
    4. ' :' → logprob: -11.500664710998535
    5. 'self' → logprob: -12.875664710998535
    6. '   ' → logprob: -13.000664710998535
    7. '       ' → logprob: -14.500664710998535
    8. ' ,' → logprob: -14.875664710998535
    9. '1' → logprob: -15.625664710998535
    10. '(self' → logprob: -15.750664710998535

Token 1190: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20141665637493134
    2. ' int' → logprob: -1.7014166116714478
    3. '1' → logprob: -13.076416969299316
    4. '0' → logprob: -14.451416969299316
    5. ' ' → logprob: -14.826416969299316
    6. '(int' → logprob: -15.951416969299316
    7. 'piece' → logprob: -16.451416015625
    8. '   ' → logprob: -16.576416015625
    9. ':int' → logprob: -16.576416015625
    10. ' piece' → logprob: -17.326416015625

Token 1191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2664456789934775e-06
    2. ' ,' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.625001907348633
    4. ':' → logprob: -17.375001907348633
    5. '       ' → logprob: -17.750001907348633
    6. ',
' → logprob: -17.750001907348633
    7. '‌,' → logprob: -18.250001907348633
    8. '،' → logprob: -19.375001907348633
    9. ')' → logprob: -19.375001907348633
    10. '1' → logprob: -20.125001907348633

Token 1192: ' cut' (ID: 6092)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.023249439895153046
    2. ' cut' → logprob: -3.773249387741089
    3. '   ' → logprob: -13.023249626159668
    4. ' ' → logprob: -14.648249626159668
    5. '=cut' → logprob: -15.773249626159668
    6. '       ' → logprob: -16.02324867248535
    7. 'start' → logprob: -16.02324867248535
    8. 'c' → logprob: -16.14824867248535
    9. '
' → logprob: -16.27324867248535
    10. '    ' → logprob: -16.27324867248535

Token 1193: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -15.000000953674316
    3. 'start' → logprob: -15.250000953674316
    4. '_position' → logprob: -15.625000953674316
    5. '_START' → logprob: -16.625001907348633
    6. '_pos' → logprob: -16.750001907348633
    7. 'Start' → logprob: -17.375001907348633
    8. ')_' → logprob: -17.750001907348633
    9. '_point' → logprob: -17.875001907348633
    10. '_location' → logprob: -18.375001907348633

Token 1194: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002534720697440207
    2. ')' → logprob: -8.625253677368164
    3. ':int' → logprob: -10.250253677368164
    4. ',' → logprob: -11.000253677368164
    5. '):' → logprob: -11.125253677368164
    6. ' :' → logprob: -12.500253677368164
    7. '   ' → logprob: -14.000253677368164
    8. '):
' → logprob: -14.125253677368164
    9. ' )' → logprob: -14.750253677368164
    10. '1' → logprob: -15.250253677368164

Token 1195: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00029852005536668
    2. ' int' → logprob: -8.125298500061035
    3. ')' → logprob: -13.500298500061035
    4. '[int' → logprob: -14.250298500061035
    5. ':int' → logprob: -15.125298500061035
    6. '<int' → logprob: -16.50029945373535
    7. '(int' → logprob: -17.50029945373535
    8. '...' → logprob: -17.75029945373535
    9. ']int' → logprob: -17.75029945373535
    10. '=int' → logprob: -17.87529945373535

Token 1196: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021653673611581326
    2. '):' → logprob: -6.2521653175354
    3. '):
' → logprob: -8.377165794372559
    4. '   ' → logprob: -13.252165794372559
    5. ':' → logprob: -13.377165794372559
    6. ' )' → logprob: -13.502165794372559
    7. '):
' → logprob: -13.627165794372559
    8. ')->' → logprob: -14.502165794372559
    9. '):

' → logprob: -16.502164840698242
    10. '       ' → logprob: -17.127164840698242

Token 1197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004012984223663807
    2. ' if' → logprob: -6.3790130615234375
    3. 'if' → logprob: -6.3790130615234375
    4. 'self' → logprob: -8.504013061523438
    5. 'piece' → logprob: -8.754013061523438
    6. '   ' → logprob: -9.004013061523438
    7. '```' → logprob: -10.129013061523438
    8. ' piece' → logprob: -10.504013061523438
    9. ' self' → logprob: -10.754013061523438
    10. '
' → logprob: -11.004013061523438

Token 1198: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31988614797592163
    2. 'piece' → logprob: -1.3198862075805664
    3. '       ' → logprob: -5.444886207580566
    4. '#' (adapté à ' #') → logprob: -7.569886207580566
    5. 'original' → logprob: -7.569886207580566
    6. 'self' → logprob: -7.694886207580566
    7. 'old' → logprob: -8.069886207580566
    8. ' if' → logprob: -8.444886207580566
    9. 'current' → logprob: -9.194886207580566
    10. 'existing' → logprob: -9.319886207580566

Token 1199: ' piece' (ID: 9047)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6936579942703247
    2. 'piece' → logprob: -0.6936579942703247
    3. 'original' → logprob: -8.943657875061035
    4. 'self' → logprob: -9.318657875061035
    5. '#' → logprob: -9.318657875061035
    6. 'current' → logprob: -9.818657875061035
    7. 'old' → logprob: -10.568657875061035
    8. 'index' → logprob: -10.943657875061035
    9. 'pieces' → logprob: -11.068657875061035
    10. ' if' → logprob: -11.068657875061035

Token 1200: '_id' (ID: 1537)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1676514744758606
    2. '=' → logprob: -2.292651414871216
    3. '_id' → logprob: -3.292651414871216
    4. 's' → logprob: -4.417651653289795
    5. '_index' → logprob: -6.542651653289795
    6. '_' → logprob: -6.542651653289795
    7. '=_' → logprob: -7.167651653289795
    8. '_idx' → logprob: -8.667651176452637
    9. '_to' → logprob: -9.542651176452637
    10. '   ' → logprob: -10.167651176452637

Token 1201: ' ' (ID: 220)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.6969139575958252
    2. '-=' → logprob: -0.6969139575958252
    3. '=' → logprob: -6.321913719177246
    4. '-' → logprob: -6.696913719177246
    5. ' =' → logprob: -7.321913719177246
    6. ' -' → logprob: -10.071913719177246
    7. '   ' → logprob: -12.571913719177246
    8. ' ' → logprob: -12.821913719177246
    9. ')' → logprob: -12.821913719177246
    10. '<=' → logprob: -13.071913719177246

Token 1202: '1' (ID: 16)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.478270560503006
    2. '=' → logprob: -1.7282705307006836
    3. ' -=' → logprob: -1.8532705307006836
    4. '-' → logprob: -3.4782705307006836
    5. ' =' → logprob: -4.728270530700684
    6. '<=' → logprob: -6.228270530700684
    7. ')' → logprob: -6.728270530700684
    8. ' -' → logprob: -7.478270530700684
    9. '   ' → logprob: -7.603270530700684
    10. '>' → logprob: -7.978270530700684

Token 1203: '-based' (ID: 8235)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9227086901664734
    2. '-' → logprob: -1.0477087497711182
    3. ' <=' → logprob: -2.172708749771118
    4. ' -=' → logprob: -2.672708749771118
    5. '<=' → logprob: -3.547708749771118
    6. '-based' → logprob: -4.297708511352539
    7. '-=' → logprob: -5.172708511352539
    8. ')' → logprob: -5.797708511352539
    9. ' ' → logprob: -5.797708511352539
    10. ':' → logprob: -6.422708511352539

Token 1204: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06092322617769241
    2. ' if' → logprob: -4.185923099517822
    3. ':' → logprob: -4.435923099517822
    4. '        
' → logprob: -4.560923099517822
    5. '
' → logprob: -5.310923099517822
    6. '):
' → logprob: -5.435923099517822
    7. ':
' → logprob: -5.685923099517822
    8. ')' → logprob: -6.185923099517822
    9. ' =' → logprob: -6.560923099517822
    10. ',' → logprob: -6.935923099517822

Token 1205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000251326389843598
    2. ' if' → logprob: -8.750251770019531
    3. '
' → logprob: -10.125251770019531
    4. 'if' → logprob: -10.500251770019531
    5. ',' → logprob: -11.750251770019531
    6. '        
' → logprob: -11.875251770019531
    7. '   ' → logprob: -12.750251770019531
    8. '```' → logprob: -12.875251770019531
    9. '	' → logprob: -14.250251770019531
    10. '#' → logprob: -14.500251770019531

Token 1206: ' idx' (ID: 14016)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1334543526172638
    2. 'piece' → logprob: -2.1334543228149414
    3. '       ' → logprob: -5.383454322814941
    4. 'index' → logprob: -6.508454322814941
    5. 'self' → logprob: -8.258454322814941
    6. ' if' → logprob: -9.383454322814941
    7. 'idx' (adapté à ' idx') → logprob: -10.258454322814941
    8. ' piece' → logprob: -11.258454322814941
    9. 'pieces' → logprob: -11.633454322814941
    10. 'old' → logprob: -12.008454322814941

Token 1207: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192973017692566
    2. '=' → logprob: -1.501929759979248
    3. ' =
' → logprob: -15.50192928314209
    4. '=
' → logprob: -16.001930236816406
    5. 's' → logprob: -16.126930236816406
    6. ' ' → logprob: -16.751930236816406
    7. '=int' → logprob: -16.876930236816406
    8. '=user' → logprob: -17.126930236816406
    9. '=index' → logprob: -17.251930236816406
    10. '＝' → logprob: -17.876930236816406

Token 1208: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -3.547789674485102e-05
    2. ' piece' → logprob: -10.250035285949707
    3. '(piece' → logprob: -16.875036239624023
    4. 'pie' → logprob: -17.625036239624023
    5. '   ' → logprob: -19.500036239624023
    6. 'piec' → logprob: -19.750036239624023
    7. '-piece' → logprob: -22.000036239624023
    8. 'pieces' → logprob: -22.125036239624023
    9. 'self' → logprob: -22.750036239624023
    10. '_piece' → logprob: -22.875036239624023

Token 1209: '_id' (ID: 1537)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5776352286338806
    2. '_id' → logprob: -0.8276352286338806
    3. 'nt' → logprob: -6.702635288238525
    4. 'r' → logprob: -9.327634811401367
    5. '_d' → logprob: -9.452634811401367
    6. 'f' → logprob: -9.702634811401367
    7. 'dx' → logprob: -10.327634811401367
    8. 'def' → logprob: -10.452634811401367
    9. 't' → logprob: -10.452634811401367
    10. 'piece' → logprob: -10.452634811401367

Token 1210: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47407740354537964
    2. '-' → logprob: -0.9740774035453796
    3. ' ' → logprob: -16.349077224731445
    4. '−' → logprob: -16.349077224731445
    5. '   ' → logprob: -16.599077224731445
    6. '–' → logprob: -17.099077224731445
    7. ' ' → logprob: -17.849077224731445
    8. '[' → logprob: -17.974077224731445
    9. '-
' → logprob: -18.974077224731445
    10. '1' → logprob: -19.224077224731445

Token 1211: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -19.375
    4. '<|end|>' → logprob: -20.25
    5. '```' → logprob: -21.125
    6. 'to' → logprob: -21.875
    7. '       ' → logprob: -22.875
    8. '۱' → logprob: -22.875
    9. '=' → logprob: -23.0
    10. '
' → logprob: -23.0

Token 1212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -20.75
    4. '```' → logprob: -21.0
    5. '<|end|>' → logprob: -22.0
    6. '2' → logprob: -22.75
    7. 'to' → logprob: -22.75
    8. '۱' → logprob: -23.125
    9. '
' → logprob: -23.125
    10. '১' → logprob: -23.6875

Token 1213: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10444725304841995
    2. '
' → logprob: -3.104447364807129
    3. '<|end|>' → logprob: -3.604447364807129
    4. '        
' → logprob: -4.354447364807129
    5. ' if' → logprob: -5.479447364807129
    6. 'self' → logprob: -6.229447364807129
    7. 'if' → logprob: -6.479447364807129
    8. ')' → logprob: -6.729447364807129
    9. '  
' → logprob: -6.854447364807129
    10. '        ' → logprob: -7.229447364807129

Token 1214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13922379910945892
    2. ' if' → logprob: -2.26422381401062
    3. '<|end|>' → logprob: -3.88922381401062
    4. '        
' → logprob: -6.014223575592041
    5. 'if' → logprob: -6.264223575592041
    6. '
' → logprob: -8.5142240524292
    7. ',' → logprob: -8.7642240524292
    8. '<|end|>' → logprob: -8.8892240524292
    9. '  
' → logprob: -9.0142240524292
    10. ' 
' → logprob: -9.2642240524292

Token 1215: ' target' (ID: 3783)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3952544927597046
    2. 'piece' → logprob: -1.2702544927597046
    3. ' if' → logprob: -4.020254611968994
    4. 'old' → logprob: -4.270254611968994
    5. 'self' → logprob: -4.645254611968994
    6. ' piece' → logprob: -6.520254611968994
    7. '       ' → logprob: -6.770254611968994
    8. 'original' → logprob: -6.895254611968994
    9. 'current' → logprob: -8.145254135131836
    10. 'existing' → logprob: -9.395254135131836

Token 1216: '_piece' (ID: 126000)
  Prédit: '_piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -0.0011059214593842626
    2. ' =' → logprob: -7.501105785369873
    3. '_' → logprob: -8.251106262207031
    4. '=' → logprob: -8.501106262207031
    5. 'piece' → logprob: -10.001106262207031
    6. '_p' → logprob: -10.251106262207031
    7. ' piece' → logprob: -12.876106262207031
    8. '   ' → logprob: -13.376106262207031
    9. '=_' → logprob: -13.626106262207031
    10. ' _' → logprob: -14.251106262207031

Token 1217: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061967913061380386
    2. '=' → logprob: -2.8119678497314453
    3. ' ' → logprob: -15.686967849731445
    4. '.' → logprob: -16.936967849731445
    5. ')' → logprob: -17.561967849731445
    6. '	' → logprob: -18.186967849731445
    7. '    ' → logprob: -18.561967849731445
    8. ',' → logprob: -18.811967849731445
    9. '＝' → logprob: -19.311967849731445
    10. ' =
' → logprob: -19.436967849731445

Token 1218: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.306760805164231e-05
    2. ' self' → logprob: -11.25001335144043
    3. '(self' → logprob: -21.00001335144043
    4. '       ' → logprob: -21.50001335144043
    5. '	self' → logprob: -21.62501335144043
    6. '
' → logprob: -22.00001335144043
    7. '=self' → logprob: -22.25001335144043
    8. '[self' → logprob: -22.37501335144043
    9. 's' → logprob: -22.75001335144043
    10. '   ' → logprob: -22.75001335144043

Token 1219: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -6.630610641877865e-06
    2. 'self' → logprob: -12.875006675720215
    3. '.' → logprob: -13.000006675720215
    4. ' .' → logprob: -14.375006675720215
    5. 'pieces' → logprob: -15.250006675720215
    6. '.s' → logprob: -15.375006675720215
    7. '.self' → logprob: -15.625006675720215
    8. 'ieces' → logprob: -15.875006675720215
    9. 's' → logprob: -16.6250057220459
    10. '       ' → logprob: -17.2500057220459

Token 1220: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -7.896309739408025e-07
    2. 'pieces' → logprob: -14.500000953674316
    3. 'ices' → logprob: -16.375
    4. 'iece' → logprob: -16.875
    5. 'ie' → logprob: -17.625
    6. '#' → logprob: -18.0
    7. '```' → logprob: -18.625
    8. 'ies' → logprob: -19.0
    9. '``' → logprob: -19.25
    10. '[' → logprob: -19.375

Token 1221: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.688212614681106e-05
    2. '.pop' → logprob: -11.000017166137695
    3. 'idx' → logprob: -16.250017166137695
    4. '(idx' → logprob: -18.500017166137695
    5. ' idx' → logprob: -18.875017166137695
    6. 'pop' → logprob: -18.875017166137695
    7. '```' → logprob: -19.000017166137695
    8. '[
' → logprob: -19.000017166137695
    9. '[' → logprob: -19.375017166137695
    10. '
' → logprob: -19.500017166137695

Token 1222: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.536768913269043
    2. ')
' → logprob: -0.911768913269043
    3. ']' → logprob: -4.911768913269043
    4. ']
' → logprob: -5.411768913269043
    5. '       ' → logprob: -7.161768913269043
    6. ').' → logprob: -8.036768913269043
    7. ')
' → logprob: -8.161768913269043
    8. '.cut' → logprob: -8.536768913269043
    9. '=cut' → logprob: -10.411768913269043
    10. 'cut' → logprob: -10.536768913269043

Token 1223: '       ' (ID: 309)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6382552981376648
    2. '       ' → logprob: -1.2632553577423096
    3. 'cut' → logprob: -2.5132553577423096
    4. 'new' → logprob: -2.6382553577423096
    5. 'first' → logprob: -4.1382551193237305
    6. 'pieces' → logprob: -4.7632551193237305
    7. 'cuts' → logprob: -5.7632551193237305
    8. ' left' → logprob: -6.1382551193237305
    9. 'p' → logprob: -6.5132551193237305
    10. ' cut' → logprob: -6.7632551193237305

Token 1224: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.03014441765844822
    2. 'piece' → logprob: -4.280144214630127
    3. 'new' → logprob: -4.780144214630127
    4. 'p' → logprob: -5.030144214630127
    5. 'first' → logprob: -7.280144214630127
    6. 'cut' → logprob: -8.530144691467285
    7. 'pieces' → logprob: -11.280144691467285
    8. '(left' → logprob: -12.155144691467285
    9. ' left' → logprob: -12.530144691467285
    10. 'self' → logprob: -12.530144691467285

Token 1225: ' Cut' (ID: 28849)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.05511561036109924
    2. 'new' → logprob: -3.3051156997680664
    3. 'piece' → logprob: -4.430115699768066
    4. 'p' → logprob: -5.555115699768066
    5. 'pieces' → logprob: -7.805115699768066
    6. 'first' → logprob: -7.930115699768066
    7. 'cut' → logprob: -8.180115699768066
    8. 'self' → logprob: -10.430115699768066
    9. ' left' → logprob: -11.305115699768066
    10. '(left' → logprob: -11.430115699768066

Token 1226: ' the' (ID: 290)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.04805136099457741
    2. 'pieces' → logprob: -4.298051357269287
    3. 'p' → logprob: -4.423051357269287
    4. 'piece' → logprob: -4.548051357269287
    5. 'first' → logprob: -5.548051357269287
    6. '       ' → logprob: -5.798051357269287
    7. 'new' → logprob: -6.923051357269287
    8. 'a' → logprob: -7.173051357269287
    9. '(left' → logprob: -7.923051357269287
    10. 'part' → logprob: -8.173051834106445

Token 1227: ' target' (ID: 3783)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.4039984941482544
    2. 'target' → logprob: -1.2789984941482544
    3. 'piece' → logprob: -3.278998374938965
    4. 'two' → logprob: -5.028998374938965
    5. 'p' → logprob: -5.403998374938965
    6. ' pieces' → logprob: -5.778998374938965
    7. 'self' → logprob: -6.653998374938965
    8. ' target' → logprob: -8.528998374938965
    9. 'left' → logprob: -9.028998374938965
    10. ' two' → logprob: -9.153998374938965

Token 1228: ' piece' (ID: 9047)
  Prédit: '_piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -0.007984781637787819
    2. 'piece' → logprob: -5.007984638214111
    3. '_p' → logprob: -6.882984638214111
    4. 'pieces' → logprob: -8.63298511505127
    5. '_' → logprob: -10.63298511505127
    6. '_surface' → logprob: -11.63298511505127
    7. ' piece' → logprob: -11.75798511505127
    8. '```' → logprob: -12.63298511505127
    9. '
' → logprob: -12.75798511505127
    10. '_point' → logprob: -12.88298511505127

Token 1229: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4995317757129669
    2. 'left' → logprob: -1.9995317459106445
    3. 'pieces' → logprob: -2.1245317459106445
    4. ',' → logprob: -2.6245317459106445
    5. 'new' → logprob: -4.9995317459106445
    6. ')' → logprob: -5.1245317459106445
    7. 'first' → logprob: -5.2495317459106445
    8. 'sm' → logprob: -5.6245317459106445
    9. ' left' → logprob: -5.7495317459106445
    10. ' pieces' → logprob: -5.7495317459106445

Token 1230: '       ' (ID: 309)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -1.0328316688537598
    2. '       ' → logprob: -1.4078316688537598
    3. ',' → logprob: -1.5328316688537598
    4. 'left' → logprob: -2.4078316688537598
    5. ' =' → logprob: -3.6578316688537598
    6. '=' → logprob: -3.9078316688537598
    7. ' pieces' → logprob: -4.53283166885376
    8. 's' → logprob: -5.53283166885376
    9. 'new' → logprob: -5.53283166885376
    10. 'result' → logprob: -6.28283166885376

Token 1231: ' p' (ID: 275)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.08137360960245132
    2. 'piece' → logprob: -2.831373691558838
    3. 'new' → logprob: -4.706373691558838
    4. 'p' (adapté à ' p') → logprob: -4.831373691558838
    5. 'first' → logprob: -6.706373691558838
    6. 'pieces' → logprob: -7.831373691558838
    7. 'part' → logprob: -8.58137321472168
    8. 'cut' → logprob: -8.83137321472168
    9. 'sm' → logprob: -9.33137321472168
    10. '(left' → logprob: -9.58137321472168

Token 1232: '1' (ID: 16)
  Prédit: 'iece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iece' → logprob: -0.6476178765296936
    2. 'ieces' → logprob: -1.1476178169250488
    3. '1' → logprob: -1.8976178169250488
    4. 'art' → logprob: -4.897617816925049
    5. 'r' → logprob: -7.147617816925049
    6. 'ie' → logprob: -8.397618293762207
    7. 'ice' → logprob: -8.772618293762207
    8. 'iec' → logprob: -8.897618293762207
    9. 'ices' → logprob: -9.022618293762207
    10. 'arts' → logprob: -9.147618293762207

Token 1233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010151672904612496
    2. ',p' → logprob: -9.250101089477539
    3. ' ,' → logprob: -12.625101089477539
    4. 'p' → logprob: -13.500101089477539
    5. '1' → logprob: -15.250101089477539
    6. 'ieces' → logprob: -15.875101089477539
    7. '‌,' → logprob: -16.12510108947754
    8. ',
' → logprob: -16.50010108947754
    9. ' p' → logprob: -17.50010108947754
    10. 's' → logprob: -17.87510108947754

Token 1234: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01814994215965271
    2. ' p' → logprob: -4.0181498527526855
    3. '       ' → logprob: -16.643150329589844
    4. '	p' → logprob: -18.393150329589844
    5. '   ' → logprob: -18.768150329589844
    6. '_p' → logprob: -18.893150329589844
    7. '    ' → logprob: -19.893150329589844
    8. '        ' → logprob: -20.268150329589844
    9. '  ' → logprob: -20.768150329589844
    10. '
' → logprob: -20.768150329589844

Token 1235: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.162282367469743e-05
    2. 'ieces' → logprob: -9.375091552734375
    3. 'iece' → logprob: -12.000091552734375
    4. '<|end|>' → logprob: -16.125091552734375
    5. '_' → logprob: -16.625091552734375
    6. ' ' → logprob: -17.125091552734375
    7. '₂' → logprob: -17.125091552734375
    8. '<|end|>' → logprob: -17.250091552734375
    9. '.' → logprob: -17.625091552734375
    10. '...' → logprob: -17.625091552734375

Token 1236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575941264629364
    2. '=' → logprob: -0.825941264629364
    3. ')' → logprob: -13.57594108581543
    4. '<|end|>' → logprob: -15.20094108581543
    5. '=
' → logprob: -16.20094108581543
    6. ',' → logprob: -16.32594108581543
    7. '=p' → logprob: -16.70094108581543
    8. ')=' → logprob: -16.82594108581543
    9. ' =
' → logprob: -16.95094108581543
    10. '=

' → logprob: -17.82594108581543

Token 1237: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -1.306760805164231e-05
    2. ' target' → logprob: -11.25001335144043
    3. '(target' → logprob: -20.50001335144043
    4. '	target' → logprob: -22.00001335144043
    5. '[target' → logprob: -22.12501335144043
    6. 't' → logprob: -22.75001335144043
    7. 'arget' → logprob: -23.37501335144043
    8. '
' → logprob: -23.50001335144043
    9. '.target' → logprob: -24.12501335144043
    10. '   ' → logprob: -24.75001335144043

Token 1238: '_piece' (ID: 126000)
  Prédit: '_piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -0.0002821928064804524
    2. '_cut' → logprob: -9.250282287597656
    3. '_p' → logprob: -9.625282287597656
    4. 'piece' → logprob: -10.250282287597656
    5. 'ed' → logprob: -11.000282287597656
    6. '.p' → logprob: -11.375282287597656
    7. '._' → logprob: -12.125282287597656
    8. 's' → logprob: -12.125282287597656
    9. '_start' → logprob: -12.125282287597656
    10. 'start' → logprob: -12.125282287597656

Token 1239: '.cut' (ID: 168032)
  Prédit: '.cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cut' → logprob: -1.1756367712223437e-05
    2. '.' → logprob: -11.500011444091797
    3. '=cut' → logprob: -13.625011444091797
    4. '.c' → logprob: -15.250011444091797
    5. ' .' → logprob: -16.250011444091797
    6. '.crop' → logprob: -18.500011444091797
    7. '.cool' → logprob: -18.875011444091797
    8. 'cut' → logprob: -20.125011444091797
    9. '.cover' → logprob: -21.000011444091797
    10. '.clip' → logprob: -21.000011444091797

Token 1240: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -6.158350151963532e-05
    2. '(' → logprob: -9.750061988830566
    3. '(
' → logprob: -13.000061988830566
    4. ' (' → logprob: -14.750061988830566
    5. 'cut' → logprob: -15.000061988830566
    6. '=cut' → logprob: -16.37506103515625
    7. ' cut' → logprob: -17.00006103515625
    8. '(p' → logprob: -17.12506103515625
    9. 'c' → logprob: -17.87506103515625
    10. '()' → logprob: -18.25006103515625

Token 1241: 'ut' (ID: 339)
  Prédit: 'ut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -3.6550729419104755e-05
    2. '_ut' → logprob: -11.125036239624023
    3. '_start' → logprob: -11.375036239624023
    4. '_' → logprob: -12.625036239624023
    5. '_cut' → logprob: -12.750036239624023
    6. 't' → logprob: -13.875036239624023
    7. 'cut' → logprob: -14.750036239624023
    8. 'uts' → logprob: -14.750036239624023
    9. '=cut' → logprob: -15.000036239624023
    10. 'u' → logprob: -15.250036239624023

Token 1242: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -4.320199877838604e-07
    2. 'start' → logprob: -15.875
    3. '_' → logprob: -17.0
    4. '_START' → logprob: -17.125
    5. '_star' → logprob: -17.75
    6. ' _' → logprob: -18.25
    7. 'Start' → logprob: -18.5
    8. ')_' → logprob: -18.75
    9. '_Start' → logprob: -19.0
    10. '_
' → logprob: -19.125

Token 1243: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007141007808968425
    2. ')
' → logprob: -7.250714302062988
    3. ')

' → logprob: -12.750714302062988
    4. ' )' → logprob: -14.500714302062988
    5. ')
' → logprob: -14.750714302062988
    6. '       ' → logprob: -14.875714302062988
    7. ')`' → logprob: -17.500713348388672
    8. '   ' → logprob: -17.875713348388672
    9. ')

' → logprob: -19.625713348388672
    10. '),' → logprob: -20.000713348388672

Token 1244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008332127472385764
    2. 'self' → logprob: -7.750833034515381
    3. '        
' → logprob: -8.500833511352539
    4. '<|end|>' → logprob: -9.500833511352539
    5. '[' → logprob: -10.375833511352539
    6. '
' → logprob: -10.500833511352539
    7. '```' → logprob: -10.500833511352539
    8. ' self' → logprob: -11.375833511352539
    9. '[
' → logprob: -12.500833511352539
    10. '[self' → logprob: -12.500833511352539

Token 1245: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0073981452733278275
    2. '#' (adapté à ' #') → logprob: -5.0073981285095215
    3. 'del' → logprob: -8.00739860534668
    4. '       ' → logprob: -8.00739860534668
    5. '```' → logprob: -11.13239860534668
    6. ' self' → logprob: -13.38239860534668
    7. '	self' → logprob: -16.38239860534668
    8. '``' → logprob: -16.63239860534668
    9. '   ' → logprob: -16.63239860534668
    10. '        
' → logprob: -17.13239860534668

Token 1246: ' Replace' (ID: 54839)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10445606708526611
    2. '#' → logprob: -2.3544559478759766
    3. 'del' → logprob: -5.479455947875977
    4. '       ' → logprob: -10.104455947875977
    5. ' self' → logprob: -10.729455947875977
    6. ' #' → logprob: -13.229455947875977
    7. ' del' → logprob: -13.604455947875977
    8. 'new' → logprob: -13.729455947875977
    9. '   ' → logprob: -14.354455947875977
    10. '```' → logprob: -15.354455947875977

Token 1247: ' target' (ID: 3783)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.048774607479572296
    2. ' self' → logprob: -3.0487747192382812
    3. '       ' → logprob: -8.923774719238281
    4. '(self' → logprob: -10.173774719238281
    5. '[self' → logprob: -11.673774719238281
    6. '	self' → logprob: -13.298774719238281
    7. '
' → logprob: -13.548774719238281
    8. '=self' → logprob: -13.798774719238281
    9. ' the' → logprob: -13.923774719238281
    10. '        
' → logprob: -14.423774719238281

Token 1248: ' piece' (ID: 9047)
  Prédit: '_piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -0.044137462973594666
    2. 'self' → logprob: -3.919137477874756
    3. 'piece' → logprob: -4.044137477874756
    4. '       ' → logprob: -5.794137477874756
    5. '   ' → logprob: -7.544137477874756
    6. '_p' → logprob: -7.919137477874756
    7. '```' → logprob: -8.169137001037598
    8. ' piece' → logprob: -8.419137001037598
    9. 's' → logprob: -8.794137001037598
    10. '=self' → logprob: -8.919137001037598

Token 1249: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6261656284332275
    2. '[idx' → logprob: -1.6261656284332275
    3. ' with' → logprob: -2.2511656284332275
    4. 'self' → logprob: -2.7511656284332275
    5. ' at' → logprob: -3.0011656284332275
    6. '(idx' → logprob: -4.001165390014648
    7. 'with' → logprob: -4.751165390014648
    8. ' idx' → logprob: -5.126165390014648
    9. ' in' → logprob: -5.501165390014648
    10. 'idx' → logprob: -5.876165390014648

Token 1250: ' the' (ID: 290)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.006272170692682266
    2. '[p' → logprob: -5.256272315979004
    3. ' p' → logprob: -6.881272315979004
    4. '[' → logprob: -12.381272315979004
    5. ' [' → logprob: -12.881272315979004
    6. '   ' → logprob: -13.506272315979004
    7. '(p' → logprob: -13.631272315979004
    8. '	p' → logprob: -14.881272315979004
    9. 'the' → logprob: -15.006272315979004
    10. '
' → logprob: -15.381272315979004

Token 1251: ' two' (ID: 1920)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01857982948422432
    2. 'two' → logprob: -4.268579959869385
    3. ' p' → logprob: -5.768579959869385
    4. ' two' → logprob: -7.018579959869385
    5. 'first' → logprob: -8.268579483032227
    6. '[p' → logprob: -9.768579483032227
    7. 'pieces' → logprob: -10.893579483032227
    8. ' first' → logprob: -11.018579483032227
    9. '#' → logprob: -11.268579483032227
    10. 'last' → logprob: -11.768579483032227

Token 1252: ' new' (ID: 620)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.2020079642534256
    2. 'p' → logprob: -2.077008008956909
    3. ' pieces' → logprob: -2.952008008956909
    4. ' p' → logprob: -5.45200777053833
    5. ' new' → logprob: -7.70200777053833
    6. 'new' → logprob: -8.202008247375488
    7. '[p' → logprob: -8.577008247375488
    8. '_p' → logprob: -9.327008247375488
    9. '       ' → logprob: -10.952008247375488
    10. '   ' → logprob: -11.202008247375488

Token 1253: ' pieces' (ID: 12762)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.20554746687412262
    2. ' pieces' → logprob: -1.7055474519729614
    3. 'p' → logprob: -5.580547332763672
    4. ' p' → logprob: -8.580547332763672
    5. '_p' → logprob: -8.955547332763672
    6. '_piece' → logprob: -10.580547332763672
    7. '[p' → logprob: -12.205547332763672
    8. '[' → logprob: -12.955547332763672
    9. '	p' → logprob: -14.330547332763672
    10. 'piece' → logprob: -14.330547332763672

Token 1254: ' maintaining' (ID: 26513)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004418743774294853
    2. 'self' → logprob: -8.000441551208496
    3. ' self' → logprob: -9.250441551208496
    4. ',' → logprob: -11.875441551208496
    5. '        
' → logprob: -13.750441551208496
    6. '```' → logprob: -14.000441551208496
    7. ' del' → logprob: -14.875441551208496
    8. '           ' → logprob: -15.375441551208496
    9. '
' → logprob: -15.625441551208496
    10. 'del' → logprob: -15.875441551208496

Token 1255: ' ID' (ID: 4170)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1180773451924324
    2. ' self' → logprob: -3.118077278137207
    3. ' order' → logprob: -4.118077278137207
    4. 'idx' → logprob: -4.368077278137207
    5. ' the' → logprob: -4.743077278137207
    6. 'the' → logprob: -4.743077278137207
    7. ' idx' → logprob: -4.868077278137207
    8. 'pieces' → logprob: -5.368077278137207
    9. ' pieces' → logprob: -5.993077278137207
    10. '[idx' → logprob: -6.118077278137207

Token 1256: ' assignment' (ID: 24618)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2208513766527176
    2. ' order' → logprob: -1.7208514213562012
    3. 'order' → logprob: -4.470851421356201
    4. '_list' → logprob: -6.220851421356201
    5. ' s' → logprob: -6.470851421356201
    6. '   ' → logprob: -6.845851421356201
    7. ' list' → logprob: -6.970851421356201
    8. '_order' → logprob: -7.595851421356201
    9. 'list' → logprob: -7.720851421356201
    10. ' ' → logprob: -8.595850944519043

Token 1257: ' policy' (ID: 7562)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012652561068534851
    2. 'self' → logprob: -4.637652397155762
    3. ' self' → logprob: -5.887652397155762
    4. ',' → logprob: -10.012652397155762
    5. '```' → logprob: -10.512652397155762
    6. '[self' → logprob: -11.012652397155762
    7. '        
' → logprob: -11.512652397155762
    8. '(self' → logprob: -12.512652397155762
    9. ' in' → logprob: -12.637652397155762
    10. '[' → logprob: -13.012652397155762

Token 1258: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02622552216053009
    2. 'self' → logprob: -3.7762255668640137
    3. ' self' → logprob: -6.151225566864014
    4. '```' → logprob: -7.651225566864014
    5. ',' → logprob: -8.276225090026855
    6. '[self' → logprob: -10.276225090026855
    7. '        
' → logprob: -10.901225090026855
    8. '[' → logprob: -11.026225090026855
    9. '(self' → logprob: -11.776225090026855
    10. '<|end|>' → logprob: -12.151225090026855

Token 1259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000750663282815367
    2. 'self' → logprob: -7.375750541687012
    3. ' self' → logprob: -9.375750541687012
    4. '```' → logprob: -10.250750541687012
    5. '   ' → logprob: -13.750750541687012
    6. '        
' → logprob: -14.000750541687012
    7. ',' → logprob: -14.250750541687012
    8. '           ' → logprob: -14.500750541687012
    9. ' ' → logprob: -16.125751495361328
    10. '[' → logprob: -16.250751495361328

Token 1260: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003980566281825304
    2. '       ' → logprob: -5.62898063659668
    3. 'del' → logprob: -8.00398063659668
    4. ' self' → logprob: -10.50398063659668
    5. '```' → logprob: -11.62898063659668
    6. 'new' → logprob: -12.00398063659668
    7. '#' (adapté à ' #') → logprob: -13.12898063659668
    8. ' del' → logprob: -13.62898063659668
    9. '	self' → logprob: -15.50398063659668
    10. '   ' → logprob: -16.25398063659668

Token 1261: ' Remove' (ID: 18141)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002263046189909801
    2. '       ' → logprob: -9.000226020812988
    3. 'del' → logprob: -9.250226020812988
    4. '#' → logprob: -12.000226020812988
    5. ' self' → logprob: -14.500226020812988
    6. '   ' → logprob: -18.000226974487305
    7. 'new' → logprob: -18.125226974487305
    8. ' del' → logprob: -18.375226974487305
    9. '```' → logprob: -18.750226974487305
    10. '	self' → logprob: -19.375226974487305

Token 1262: ' old' (ID: 2890)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018780725076794624
    2. '       ' → logprob: -4.268780708312988
    3. ' self' → logprob: -5.393780708312988
    4. '[self' → logprob: -10.643780708312988
    5. 'target' → logprob: -10.893780708312988
    6. 'del' → logprob: -12.518780708312988
    7. '(self' → logprob: -12.643780708312988
    8. '   ' → logprob: -12.893780708312988
    9. '           ' → logprob: -13.268780708312988
    10. '	self' → logprob: -13.643780708312988

Token 1263: ' piece' (ID: 9047)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4229366183280945
    2. 'self' → logprob: -1.4229366779327393
    3. '_piece' → logprob: -2.9229366779327393
    4. ' self' → logprob: -3.2979366779327393
    5. ' piece' → logprob: -5.42293643951416
    6. 'target' → logprob: -5.54793643951416
    7. 'piece' → logprob: -6.04793643951416
    8. '           ' → logprob: -7.17293643951416
    9. ' target' → logprob: -7.54793643951416
    10. '_target' → logprob: -8.29793643951416

Token 1264: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014782238751649857
    2. ' del' → logprob: -4.639782428741455
    3. 'self' → logprob: -5.764782428741455
    4. ' self' → logprob: -6.389782428741455
    5. 'del' → logprob: -9.139781951904297
    6. '.pop' → logprob: -10.014781951904297
    7. '```' → logprob: -10.639781951904297
    8. ',' → logprob: -11.639781951904297
    9. ' =' → logprob: -12.014781951904297
    10. '[self' → logprob: -13.389781951904297

Token 1265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003460712905507535
    2. 'self' → logprob: -8.125346183776855
    3. ' self' → logprob: -11.000346183776855
    4. ' del' → logprob: -11.125346183776855
    5. ',' → logprob: -11.750346183776855
    6. '```' → logprob: -12.125346183776855
    7. 'del' → logprob: -13.000346183776855
    8. '[self' → logprob: -14.375346183776855
    9. ' =' → logprob: -15.125346183776855
    10. '           ' → logprob: -15.125346183776855

Token 1266: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03395214304327965
    2. '       ' → logprob: -3.533952236175537
    3. ' self' → logprob: -6.158952236175537
    4. 'del' → logprob: -6.283952236175537
    5. '```' → logprob: -8.783951759338379
    6. ' del' → logprob: -9.783951759338379
    7. '``' → logprob: -13.533951759338379
    8. '	self' → logprob: -14.658951759338379
    9. 'import' → logprob: -15.408951759338379
    10. '   ' → logprob: -15.533951759338379

Token 1267: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -6.630610641877865e-06
    2. '.' → logprob: -12.250006675720215
    3. ' .' → logprob: -13.875006675720215
    4. '       ' → logprob: -15.125006675720215
    5. '   ' → logprob: -15.750006675720215
    6. '```' → logprob: -15.875006675720215
    7. ').' → logprob: -16.5000057220459
    8. '.п' → logprob: -16.7500057220459
    9. '._' → logprob: -17.1250057220459
    10. 'p' → logprob: -17.6250057220459

Token 1268: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -0.00025001514586620033
    2. 'pieces' → logprob: -8.375249862670898
    3. 'ices' → logprob: -11.125249862670898
    4. '   ' → logprob: -13.000249862670898
    5. '_' → logprob: -14.000249862670898
    6. 'ies' → logprob: -14.875249862670898
    7. 'iece' → logprob: -15.250249862670898
    8. ' pieces' → logprob: -15.500249862670898
    9. '#' → logprob: -16.1252498626709
    10. '       ' → logprob: -16.2502498626709

Token 1269: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -6.8497312895488e-05
    2. '[idx' → logprob: -10.125068664550781
    3. 'pop' → logprob: -10.625068664550781
    4. '.' → logprob: -13.000068664550781
    5. '	pop' → logprob: -14.250068664550781
    6. ' pop' → logprob: -15.250068664550781
    7. '```' → logprob: -15.375068664550781
    8. ' .' → logprob: -15.500068664550781
    9. '       ' → logprob: -15.750068664550781
    10. '[' → logprob: -16.25006866455078

Token 1270: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -7.493430894101039e-05
    2. 'idx' → logprob: -9.500075340270996
    3. '[idx' → logprob: -16.75007438659668
    4. '	idx' → logprob: -17.75007438659668
    5. '(index' → logprob: -18.87507438659668
    6. '(' → logprob: -19.00007438659668
    7. ' idx' → logprob: -20.25007438659668
    8. '   ' → logprob: -21.75007438659668
    9. '```' → logprob: -22.00007438659668
    10. '(
' → logprob: -22.25007438659668

Token 1271: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004790022503584623
    2. ')
' → logprob: -5.37978982925415
    3. '       ' → logprob: -8.754790306091309
    4. '<|end|>' → logprob: -12.004790306091309
    5. ')
' → logprob: -13.504790306091309
    6. ')

' → logprob: -14.004790306091309
    7. ',' → logprob: -14.129790306091309
    8. '),' → logprob: -14.754790306091309
    9. '```' → logprob: -15.129790306091309
    10. ' )' → logprob: -15.379790306091309

Token 1272: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012221322394907475
    2. 'self' → logprob: -6.876222133636475
    3. '```' → logprob: -9.251221656799316
    4. ' self' → logprob: -9.501221656799316
    5. '        
' → logprob: -11.626221656799316
    6. '	self' → logprob: -13.501221656799316
    7. ',' → logprob: -13.501221656799316
    8. '   ' → logprob: -13.626221656799316
    9. '``' → logprob: -13.626221656799316
    10. '[self' → logprob: -14.126221656799316

Token 1273: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023624179884791374
    2. '       ' → logprob: -3.7736241817474365
    3. '```' → logprob: -8.023624420166016
    4. ' self' → logprob: -10.898624420166016
    5. '``' → logprob: -11.523624420166016
    6. '#' (adapté à ' #') → logprob: -11.648624420166016
    7. '	self' → logprob: -11.898624420166016
    8. '[self' → logprob: -12.898624420166016
    9. '        
' → logprob: -13.648624420166016
    10. '(self' → logprob: -13.898624420166016

Token 1274: ' Add' (ID: 4063)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011094938963651657
    2. '#' → logprob: -7.001109600067139
    3. 'import' → logprob: -9.00110912322998
    4. '       ' → logprob: -10.12610912322998
    5. 'from' → logprob: -11.12610912322998
    6. 'insert' → logprob: -11.50110912322998
    7. 'for' → logprob: -11.75110912322998
    8. 'left' → logprob: -14.00110912322998
    9. ' self' → logprob: -14.25110912322998
    10. 'first' → logprob: -15.75110912322998

Token 1275: ' new' (ID: 620)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.002972710644826293
    2. '(p' → logprob: -5.877972602844238
    3. ' p' → logprob: -8.752972602844238
    4. '   ' → logprob: -11.627972602844238
    5. '	p' → logprob: -14.627972602844238
    6. '       ' → logprob: -15.377972602844238
    7. '[p' → logprob: -16.627973556518555
    8. '```' → logprob: -17.127973556518555
    9. ')p' → logprob: -17.502973556518555
    10. 'two' → logprob: -17.502973556518555

Token 1276: ' pieces' (ID: 12762)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.01778615452349186
    2. ' pieces' → logprob: -4.142786026000977
    3. '(p' → logprob: -7.142786026000977
    4. 'p' → logprob: -7.642786026000977
    5. 'piece' → logprob: -8.642786026000977
    6. '_p' → logprob: -9.017786026000977
    7. '_piece' → logprob: -10.142786026000977
    8. '   ' → logprob: -10.392786026000977
    9. '       ' → logprob: -10.642786026000977
    10. 'piec' → logprob: -11.142786026000977

Token 1277: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.358645498752594
    2. '.append' → logprob: -1.3586454391479492
    3. 'append' → logprob: -3.608645439147949
    4. '.extend' → logprob: -4.483645439147949
    5. 'insert' → logprob: -5.983645439147949
    6. '.insert' → logprob: -5.983645439147949
    7. ',' → logprob: -8.23364543914795
    8. '(p' → logprob: -8.85864543914795
    9. 'p' → logprob: -9.23364543914795
    10. ',p' → logprob: -9.35864543914795

Token 1278: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6335910558700562
    2. '.append' → logprob: -1.1335910558700562
    3. 'append' → logprob: -2.1335911750793457
    4. '.extend' → logprob: -4.008591175079346
    5. 'insert' → logprob: -5.008591175079346
    6. '.insert' → logprob: -6.383591175079346
    7. '(p' → logprob: -6.633591175079346
    8. 'p' → logprob: -7.633591175079346
    9. 'extend' → logprob: -8.508590698242188
    10. ' at' → logprob: -9.008590698242188

Token 1279: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0007419686880894005
    2. '       ' → logprob: -7.250741958618164
    3. ' self' → logprob: -10.625741958618164
    4. 'p' → logprob: -12.250741958618164
    5. 'for' → logprob: -13.250741958618164
    6. '```' → logprob: -14.875741958618164
    7. 'import' → logprob: -15.625741958618164
    8. 'insert' → logprob: -15.750741958618164
    9. '	self' → logprob: -16.500741958618164
    10. '[self' → logprob: -16.750741958618164

Token 1280: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -7.195421494543552e-05
    2. '.' → logprob: -11.25007152557373
    3. ').' → logprob: -11.25007152557373
    4. '```' → logprob: -11.62507152557373
    5. '   ' → logprob: -11.87507152557373
    6. '.insert' → logprob: -12.00007152557373
    7. '.append' → logprob: -12.12507152557373
    8. 'p' → logprob: -12.87507152557373
    9. '._' → logprob: -13.12507152557373
    10. ' .' → logprob: -13.37507152557373

Token 1281: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -8.804671233519912e-05
    2. 'pieces' → logprob: -9.62508773803711
    3. 'ices' → logprob: -11.00008773803711
    4. '_' → logprob: -13.12508773803711
    5. '   ' → logprob: -14.25008773803711
    6. '1' → logprob: -14.37508773803711
    7. '```' → logprob: -14.62508773803711
    8. '.append' → logprob: -15.62508773803711
    9. '#' → logprob: -15.62508773803711
    10. '_p' → logprob: -15.75008773803711

Token 1282: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.202203169465065
    2. '.extend' → logprob: -1.7022031545639038
    3. '.' → logprob: -7.452203273773193
    4. '.insert' → logprob: -9.202202796936035
    5. 'append' → logprob: -9.202202796936035
    6. 'extend' → logprob: -12.327202796936035
    7. '+=' → logprob: -12.952202796936035
    8. '_append' → logprob: -15.827202796936035
    9. '   ' → logprob: -15.952202796936035
    10. '+.' → logprob: -15.952202796936035

Token 1283: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: 0.0
    2. 'p' → logprob: -18.25
    3. '(' → logprob: -18.375
    4. '(
' → logprob: -20.625
    5. ' (' → logprob: -21.375
    6. '	p' → logprob: -22.75
    7. '(c' → logprob: -22.875
    8. '   ' → logprob: -23.0
    9. '((' → logprob: -23.0
    10. ' p' → logprob: -23.625

Token 1284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003849133790936321
    2. '2' → logprob: -7.87538480758667
    3. 'iece' → logprob: -12.750385284423828
    4. 'ieces' → logprob: -13.250385284423828
    5. '```' → logprob: -16.875385284423828
    6. ')' → logprob: -16.875385284423828
    7. '
' → logprob: -19.125385284423828
    8. '``' → logprob: -19.312885284423828
    9. 'I' → logprob: -19.687885284423828
    10. 'ie' → logprob: -19.750385284423828

Token 1285: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5139595866203308
    2. '       ' → logprob: -1.5139596462249756
    3. ')' → logprob: -1.7639596462249756
    4. ',' → logprob: -5.1389594078063965
    5. 'p' → logprob: -6.3889594078063965
    6. ')p' → logprob: -6.8889594078063965
    7. ',p' → logprob: -7.7639594078063965
    8. '),' → logprob: -8.388959884643555
    9. '<|end|>' → logprob: -8.513959884643555
    10. ' and' → logprob: -8.513959884643555

Token 1286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012257046764716506
    2. 'self' → logprob: -6.876225471496582
    3. '<|end|>' → logprob: -9.501225471496582
    4. '   ' → logprob: -9.876225471496582
    5. ' self' → logprob: -10.751225471496582
    6. ',' → logprob: -11.251225471496582
    7. '        
' → logprob: -11.876225471496582
    8. '           ' → logprob: -12.126225471496582
    9. '      ' → logprob: -12.376225471496582
    10. ',self' → logprob: -12.626225471496582

Token 1287: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006800390779972076
    2. '       ' → logprob: -5.006800174713135
    3. ' self' → logprob: -9.381800651550293
    4. '	self' → logprob: -14.256800651550293
    5. '   ' → logprob: -16.631799697875977
    6. '      ' → logprob: -18.381799697875977
    7. '           ' → logprob: -18.631799697875977
    8. '               ' → logprob: -18.756799697875977
    9. '[self' → logprob: -18.881799697875977
    10. '(self' → logprob: -19.506799697875977

Token 1288: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.07117150723934174
    2. 'pieces' → logprob: -3.321171522140503
    3. '.' → logprob: -4.446171283721924
    4. '.append' → logprob: -5.071171283721924
    5. 'p' → logprob: -5.321171283721924
    6. '_p' → logprob: -5.321171283721924
    7. 'ieces' → logprob: -6.071171283721924
    8. 'Pieces' → logprob: -7.071171283721924
    9. ' pieces' → logprob: -7.696171283721924
    10. '._' → logprob: -7.821171283721924

Token 1289: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -0.201437309384346
    2. '2' → logprob: -1.7014373540878296
    3. 'ices' → logprob: -11.201436996459961
    4. 'pieces' → logprob: -11.701436996459961
    5. '_' → logprob: -14.076436996459961
    6. '```' → logprob: -14.701436996459961
    7. '1' → logprob: -14.826436996459961
    8. 'iece' → logprob: -16.07643699645996
    9. '[' → logprob: -16.82643699645996
    10. '.append' → logprob: -17.20143699645996

Token 1290: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.6789137084269896e-05
    2. 'append' → logprob: -11.37503719329834
    3. '.extend' → logprob: -11.50003719329834
    4. '.app' → logprob: -11.75003719329834
    5. '.' → logprob: -12.25003719329834
    6. '.insert' → logprob: -13.25003719329834
    7. ' .' → logprob: -15.62503719329834
    8. '_append' → logprob: -15.75003719329834
    9. 'appen' → logprob: -16.000036239624023
    10. '	append' → logprob: -16.125036239624023

Token 1291: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -13.00000286102295
    3. '(
' → logprob: -14.12500286102295
    4. ' (' → logprob: -17.625003814697266
    5. 'p' → logprob: -17.750003814697266
    6. '(q' → logprob: -18.125003814697266
    7. '(s' → logprob: -19.500003814697266
    8. '((' → logprob: -20.375003814697266
    9. '(

' → logprob: -20.500003814697266
    10. ' p' → logprob: -20.625003814697266

Token 1292: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '２' → logprob: -20.375
    3. '۲' → logprob: -20.625
    4. '₂' → logprob: -20.875
    5. ' ' → logprob: -23.5
    6. 'ieces' → logprob: -23.875
    7. 'o' → logprob: -24.0
    8. '٢' → logprob: -24.25
    9. '२' → logprob: -24.375
    10. '```' → logprob: -24.625

Token 1293: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01424883771687746
    2. '<|end|>' → logprob: -4.264248847961426
    3. '<|end|>' → logprob: -10.264248847961426
    4. ']' → logprob: -11.264248847961426
    5. '}' → logprob: -11.639248847961426
    6. ')
' → logprob: -11.639248847961426
    7. ' )' → logprob: -12.389248847961426
    8. ')}' → logprob: -13.014248847961426
    9. '()' → logprob: -13.139248847961426
    10. ')return' → logprob: -13.139248847961426

Token 1294: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1295: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1296: ' Re' (ID: 907)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5370044708251953
    2. '#' → logprob: -0.9120044708251953
    3. 'def' → logprob: -4.662004470825195
    4. 'return' → logprob: -6.412004470825195
    5. '       ' → logprob: -6.412004470825195
    6. 'sorted' → logprob: -7.662004470825195
    7. 'pass' → logprob: -8.537004470825195
    8. '   ' → logprob: -8.787004470825195
    9. '```' → logprob: -9.537004470825195
    10. '
' → logprob: -10.287004470825195

Token 1297: 'assign' (ID: 14297)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.5789687037467957
    2. 'turn' → logprob: -0.8289687037467957
    3. 'order' → logprob: -6.953968524932861
    4. 'assign' → logprob: -7.203968524932861
    5. 'index' → logprob: -7.328968524932861
    6. 'arr' → logprob: -8.45396900177002
    7. 'self' → logprob: -8.57896900177002
    8. 'move' → logprob: -9.32896900177002
    9. 'size' → logprob: -9.57896900177002
    10. 's' → logprob: -11.32896900177002

Token 1298: ' IDs' (ID: 58321)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00010330478107789531
    2. 'ids' → logprob: -9.750102996826172
    3. ' self' → logprob: -11.125102996826172
    4. 'id' → logprob: -11.375102996826172
    5. '```' → logprob: -12.000102996826172
    6. 'sorted' → logprob: -12.375102996826172
    7. 'sizes' → logprob: -12.750102996826172
    8. '       ' → logprob: -12.875102996826172
    9. '
' → logprob: -13.875102996826172
    10. '#' → logprob: -15.125102996826172

Token 1299: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0679171085357666
    2. '.sort' → logprob: -3.4429171085357666
    3. 'self' → logprob: -4.6929168701171875
    4. '(self' → logprob: -4.6929168701171875
    5. ' =' → logprob: -5.5679168701171875
    6. '(sorted' → logprob: -6.3179168701171875
    7. '(sort' → logprob: -6.4429168701171875
    8. '=' → logprob: -6.6929168701171875
    9. 'sort' → logprob: -6.9429168701171875
    10. '   ' → logprob: -7.1929168701171875

Token 1300: ' sorting' (ID: 51375)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08020596206188202
    2. 'sorting' → logprob: -2.5802059173583984
    3. ' sorting' → logprob: -7.580205917358398
    4. 'def' → logprob: -8.080205917358398
    5. '
' → logprob: -8.455205917358398
    6. ' self' → logprob: -9.705205917358398
    7. '       ' → logprob: -9.955205917358398
    8. 'sorted' → logprob: -10.080205917358398
    9. '```' → logprob: -10.580205917358398
    10. 'length' → logprob: -10.705205917358398

Token 1301: ' pieces' (ID: 12762)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20318220555782318
    2. '(self' → logprob: -1.7031822204589844
    3. 'key' → logprob: -6.828182220458984
    4. '       ' → logprob: -7.578182220458984
    5. '(key' → logprob: -9.578182220458984
    6. ' self' → logprob: -10.078182220458984
    7. 'def' → logprob: -10.703182220458984
    8. '   ' → logprob: -10.703182220458984
    9. '```' → logprob: -12.453182220458984
    10. '=self' → logprob: -12.703182220458984

Token 1302: ' by' (ID: 656)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.8400521874427795
    2. '       ' → logprob: -1.0900521278381348
    3. 'self' → logprob: -1.8400521278381348
    4. '(key' → logprob: -3.8400521278381348
    5. 'key' → logprob: -3.9650521278381348
    6. '=' → logprob: -4.340052127838135
    7. '=self' → logprob: -4.840052127838135
    8. '(' → logprob: -5.590052127838135
    9. ' =' → logprob: -5.715052127838135
    10. ' key' → logprob: -7.090052127838135

Token 1303: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.25402122735977173
    2. 'lambda' → logprob: -1.504021167755127
    3. 'p' → logprob: -7.004021167755127
    4. ' lambda' → logprob: -7.129021167755127
    5. '=lambda' → logprob: -8.879021644592285
    6. ' area' → logprob: -9.004021644592285
    7. 'their' → logprob: -10.004021644592285
    8. 'piece' → logprob: -10.129021644592285
    9. '(lambda' → logprob: -10.879021644592285
    10. 'a' → logprob: -11.629021644592285

Token 1304: ' ascending' (ID: 75564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38865017890930176
    2. 'self' → logprob: -1.8886501789093018
    3. '(self' → logprob: -2.3886501789093018
    4. '=' → logprob: -3.2636501789093018
    5. ' =' → logprob: -4.013649940490723
    6. '=self' → logprob: -4.638649940490723
    7. ',' → logprob: -5.763649940490723
    8. '(' → logprob: -5.888649940490723
    9. ' self' → logprob: -6.138649940490723
    10. '=
' → logprob: -6.513649940490723

Token 1305: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011874432675540447
    2. ',' → logprob: -5.261874198913574
    3. 'self' → logprob: -5.386874198913574
    4. '(self' → logprob: -6.636874198913574
    5. ' self' → logprob: -8.886874198913574
    6. ',
' → logprob: -9.261874198913574
    7. '()
' → logprob: -9.261874198913574
    8. '
' → logprob: -9.386874198913574
    9. '()' → logprob: -9.511874198913574
    10. '.
' → logprob: -9.761874198913574

Token 1306: ' stable' (ID: 22105)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.11317888647317886
    2. ' key' → logprob: -2.3631789684295654
    3. 'self' → logprob: -4.363178730010986
    4. ' self' → logprob: -9.238179206848145
    5. '       ' → logprob: -10.238179206848145
    6. 'lambda' → logprob: -11.988179206848145
    7. 'reverse' → logprob: -12.113179206848145
    8. '
' → logprob: -13.363179206848145
    9. '           ' → logprob: -13.613179206848145
    10. ' lambda' → logprob: -14.113179206848145

Token 1307: ' for' (ID: 395)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.08841408789157867
    2. '_sort' → logprob: -2.963414192199707
    3. ' sort' → logprob: -3.588414192199707
    4. 'sorted' → logprob: -5.588414192199707
    5. '_sorted' → logprob: -6.838414192199707
    6. '.sort' → logprob: -8.963414192199707
    7. '(sort' → logprob: -9.088414192199707
    8. '(sorted' → logprob: -9.213414192199707
    9. '-sort' → logprob: -10.088414192199707
    10. 'self' → logprob: -10.213414192199707

Token 1308: ' same' (ID: 2684)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.47615399956703186
    2. 'lambda' → logprob: -1.6011539697647095
    3. 'self' → logprob: -2.851154088973999
    4. 'existing' → logprob: -3.351154088973999
    5. 'equal' → logprob: -3.726154088973999
    6. ' area' → logprob: -3.851154088973999
    7. 'id' → logprob: -4.97615385055542
    8. 'piece' → logprob: -5.10115385055542
    9. 'stable' → logprob: -5.22615385055542
    10. ' lambda' → logprob: -5.35115385055542

Token 1309: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.323840469121933
    2. '```' → logprob: -2.073840379714966
    3. '   ' → logprob: -2.948840379714966
    4. ' area' → logprob: -3.323840379714966
    5. '.area' → logprob: -3.698840379714966
    6. '_area' → logprob: -3.948840379714966
    7. 'areas' → logprob: -4.823840618133545
    8. '-area' → logprob: -6.448840618133545
    9. '(area' → logprob: -6.573840618133545
    10. 'def' → logprob: -6.573840618133545

Token 1310: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03685208410024643
    2. '(self' → logprob: -4.41185188293457
    3. 'self' → logprob: -4.41185188293457
    4. '.sort' → logprob: -5.53685188293457
    5. ',' → logprob: -5.78685188293457
    6. ' self' → logprob: -6.78685188293457
    7. '()' → logprob: -6.91185188293457
    8. 'sort' → logprob: -7.03685188293457
    9. ' sort' → logprob: -8.16185188293457
    10. '()
' → logprob: -8.66185188293457

Token 1311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010568645084276795
    2. 'self' → logprob: -6.876056671142578
    3. ' self' → logprob: -12.001056671142578
    4. '        
' → logprob: -12.251056671142578
    5. '   ' → logprob: -12.376056671142578
    6. '	' → logprob: -13.001056671142578
    7. '```' → logprob: -13.376056671142578
    8. '
' → logprob: -14.001056671142578
    9. ',' → logprob: -14.251056671142578
    10. '(self' → logprob: -14.376056671142578

Token 1312: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.003184244269505143
    2. '       ' → logprob: -6.0031843185424805
    3. ' self' → logprob: -7.2531843185424805
    4. '   ' → logprob: -14.87818431854248
    5. '	self' → logprob: -16.628183364868164
    6. '```' → logprob: -17.503183364868164
    7. '        
' → logprob: -19.003183364868164
    8. '(self' → logprob: -19.503183364868164
    9. ' ' → logprob: -20.128183364868164
    10. '           ' → logprob: -20.253183364868164

Token 1313: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -2.999452772201039e-05
    2. '.' → logprob: -10.750029563903809
    3. ' .' → logprob: -12.375029563903809
    4. '.s' → logprob: -12.875029563903809
    5. '   ' → logprob: -14.875029563903809
    6. '       ' → logprob: -14.875029563903809
    7. '```' → logprob: -15.250029563903809
    8. ').' → logprob: -15.875029563903809
    9. '.py' → logprob: -16.500030517578125
    10. '`.' → logprob: -16.500030517578125

Token 1314: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -2.9040898880339228e-05
    2. 'pieces' → logprob: -10.500028610229492
    3. '_' → logprob: -14.375028610229492
    4. 'ie' → logprob: -15.625028610229492
    5. 'ices' → logprob: -15.625028610229492
    6. '#' → logprob: -16.500028610229492
    7. 'iece' → logprob: -16.500028610229492
    8. '```' → logprob: -16.625028610229492
    9. 'ies' → logprob: -16.750028610229492
    10. '_p' → logprob: -17.000028610229492

Token 1315: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0017733541317284107
    2. '=' → logprob: -6.501773357391357
    3. '.' → logprob: -8.2517728805542
    4. '.=' → logprob: -12.6267728805542
    5. '.s' → logprob: -12.7517728805542
    6. 'sort' → logprob: -13.2517728805542
    7. ' .' → logprob: -14.1267728805542
    8. '=.' → logprob: -14.6267728805542
    9. '	sort' → logprob: -14.8767728805542
    10. ' sort' → logprob: -15.2517728805542

Token 1316: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.0001785112835932523
    2. '()' → logprob: -8.750178337097168
    3. '(reverse' → logprob: -11.500178337097168
    4. '(' → logprob: -11.875178337097168
    5. '(lambda' → logprob: -13.625178337097168
    6. '(
' → logprob: -14.125178337097168
    7. 'key' → logprob: -14.750178337097168
    8. ' key' → logprob: -15.875178337097168
    9. ',key' → logprob: -16.500179290771484
    10. '	key' → logprob: -16.750179290771484

Token 1317: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -1.8670179997570813e-05
    2. '=' → logprob: -11.000019073486328
    3. 'lambda' → logprob: -13.250019073486328
    4. '(lambda' → logprob: -15.875019073486328
    5. ' lambda' → logprob: -19.000019073486328
    6. '_lambda' → logprob: -21.250019073486328
    7. '=
' → logprob: -22.125019073486328
    8. '=len' → logprob: -22.250019073486328
    9. 'operator' → logprob: -22.375019073486328
    10. '=\' → logprob: -23.250019073486328

Token 1318: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01537591964006424
    2. ' p' → logprob: -4.265376091003418
    3. 'piece' → logprob: -6.765376091003418
    4. ' piece' → logprob: -9.890376091003418
    5. 'x' → logprob: -12.015376091003418
    6. ' x' → logprob: -14.140376091003418
    7. 'pi' → logprob: -14.265376091003418
    8. 'lambda' → logprob: -15.265376091003418
    9. 'pie' → logprob: -16.2653751373291
    10. '   ' → logprob: -16.7653751373291

Token 1319: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012665153481066227
    2. ':p' → logprob: -4.887665271759033
    3. 'p' → logprob: -5.387665271759033
    4. ' p' → logprob: -7.762665271759033
    5. ' :' → logprob: -10.762664794921875
    6. 'a' → logprob: -11.637664794921875
    7. ':
' → logprob: -12.262664794921875
    8. 's' → logprob: -12.512664794921875
    9. 'e' → logprob: -13.512664794921875
    10. '(p' → logprob: -13.762664794921875

Token 1320: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002613358374219388
    2. ' p' → logprob: -8.250261306762695
    3. '(p' → logprob: -19.875261306762695
    4. 'lambda' → logprob: -20.000261306762695
    5. '	p' → logprob: -21.125261306762695
    6. '(' → logprob: -21.625261306762695
    7. 'piece' → logprob: -22.125261306762695
    8. ' lambda' → logprob: -23.000261306762695
    9. ')p' → logprob: -23.375261306762695
    10. '   ' → logprob: -23.375261306762695

Token 1321: '.area' (ID: 78128)
  Prédit: '.area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.area' → logprob: -7.52919222577475e-05
    2. '.p' → logprob: -9.875075340270996
    3. 'area' → logprob: -10.750075340270996
    4. '.' → logprob: -13.625075340270996
    5. '.Area' → logprob: -14.875075340270996
    6. ':' → logprob: -15.500075340270996
    7. ' area' → logprob: -15.625075340270996
    8. 'p' → logprob: -15.625075340270996
    9. ' p' → logprob: -16.00007438659668
    10. '.are' → logprob: -16.75007438659668

Token 1322: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0009530289680697024
    2. ')' → logprob: -7.000953197479248
    3. '())
' → logprob: -11.00095272064209
    4. '()' → logprob: -11.00095272064209
    5. '(),' → logprob: -12.37595272064209
    6. ' ())' → logprob: -13.12595272064209
    7. '())

' → logprob: -14.75095272064209
    8. '());' → logprob: -14.87595272064209
    9. '();)' → logprob: -15.12595272064209
    10. '()
' → logprob: -15.12595272064209

Token 1323: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1324: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0022611175663769245
    2. '   ' → logprob: -6.502261161804199
    3. ' def' → logprob: -7.252261161804199
    4. '	def' → logprob: -10.3772611618042
    5. '<|end|>' → logprob: -11.7522611618042
    6. '```' → logprob: -11.8772611618042
    7. '#' → logprob: -13.5022611618042
    8. ' ' → logprob: -14.7522611618042
    9. 'from' → logprob: -14.8772611618042
    10. '       ' → logprob: -15.5022611618042

Token 1325: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.045450665056705475
    2. ' get' → logprob: -3.2954506874084473
    3. 'list' → logprob: -5.045450687408447
    4. ' list' → logprob: -7.545450687408447
    5. 'query' → logprob: -8.420450210571289
    6. 'current' → logprob: -9.920450210571289
    7. 'print' → logprob: -10.170450210571289
    8. 'total' → logprob: -10.295450210571289
    9. 'pieces' → logprob: -10.545450210571289
    10. 'piece' → logprob: -11.045450210571289

Token 1326: '_sorted' (ID: 104993)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.31544676423072815
    2. '_piece' → logprob: -1.3154467344284058
    3. '_remaining' → logprob: -7.065446853637695
    4. '_all' → logprob: -7.815446853637695
    5. '_num' → logprob: -8.190446853637695
    6. 'piece' → logprob: -8.565446853637695
    7. '_current' → logprob: -9.315446853637695
    8. '_sizes' → logprob: -9.565446853637695
    9. '_state' → logprob: -9.565446853637695
    10. 'pieces' → logprob: -9.815446853637695

Token 1327: '_' (ID: 62)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.05393858253955841
    2. '_piece' → logprob: -3.053938627243042
    3. '_ids' → logprob: -5.553938388824463
    4. '_' → logprob: -6.803938388824463
    5. '_sizes' → logprob: -8.178938865661621
    6. 'pieces' → logprob: -10.803938865661621
    7. 'piece' → logprob: -11.303938865661621
    8. '_area' → logprob: -11.678938865661621
    9. '_lengths' → logprob: -11.928938865661621
    10. '_list' → logprob: -12.428938865661621

Token 1328: 'areas' (ID: 69250)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.04056235030293465
    2. 'areas' → logprob: -3.540562391281128
    3. 'piece' → logprob: -4.540562152862549
    4. 'sizes' → logprob: -9.790562629699707
    5. 'ids' → logprob: -10.915562629699707
    6. 'edges' → logprob: -13.040562629699707
    7. 'width' → logprob: -13.290562629699707
    8. ' pieces' → logprob: -13.540562629699707
    9. '_piece' → logprob: -13.540562629699707
    10. 'area' → logprob: -13.665562629699707

Token 1329: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00023369524569716305
    2. '(' → logprob: -8.37523365020752
    3. ' (' → logprob: -13.87523365020752
    4. '   ' → logprob: -14.00023365020752
    5. 'self' → logprob: -14.37523365020752
    6. '(
' → logprob: -15.62523365020752
    7. '(s' → logprob: -15.87523365020752
    8. 's' → logprob: -16.000234603881836
    9. '```' → logprob: -16.000234603881836
    10. '()' → logprob: -16.250234603881836

Token 1330: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004897146485745907
    2. '()' → logprob: -5.629897117614746
    3. ')' → logprob: -6.879897117614746
    4. 'self' → logprob: -8.879897117614746
    5. '())' → logprob: -9.504897117614746
    6. '(' → logprob: -10.629897117614746
    7. '   ' → logprob: -11.754897117614746
    8. ' (' → logprob: -12.004897117614746
    9. '       ' → logprob: -13.004897117614746
    10. '()->' → logprob: -13.004897117614746

Token 1331: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00021796036162413657
    2. '(' → logprob: -9.000218391418457
    3. '->' → logprob: -9.875218391418457
    4. 'self' → logprob: -10.375218391418457
    5. ' ->' → logprob: -12.375218391418457
    6. '   ' → logprob: -12.750218391418457
    7. '```' → logprob: -13.500218391418457
    8. ' (' → logprob: -13.750218391418457
    9. '       ' → logprob: -14.000218391418457
    10. ')' → logprob: -14.750218391418457

Token 1332: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -3.166338137816638e-05
    2. '[List' → logprob: -10.750031471252441
    3. ' List' → logprob: -11.500031471252441
    4. '   ' → logprob: -20.125032424926758
    5. '[' → logprob: -20.375032424926758
    6. '	List' → logprob: -21.500032424926758
    7. 'list' → logprob: -22.000032424926758
    8. '```' → logprob: -22.125032424926758
    9. '
' → logprob: -22.500032424926758
    10. '       ' → logprob: -23.375032424926758

Token 1333: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.5120287066092715e-05
    2. 'int' → logprob: -10.375035285949707
    3. '[' → logprob: -13.625035285949707
    4. '<int' → logprob: -13.875035285949707
    5. '(int' → logprob: -14.375035285949707
    6. '[Int' → logprob: -14.375035285949707
    7. '[
' → logprob: -15.875035285949707
    8. '[in' → logprob: -15.875035285949707
    9. ']int' → logprob: -16.62503433227539
    10. '   ' → logprob: -17.12503433227539

Token 1334: ']:
' (ID: 22152)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0584668405354023
    2. '():
' → logprob: -2.933466911315918
    3. '(' → logprob: -6.683466911315918
    4. '()' → logprob: -6.808466911315918
    5. '():' → logprob: -7.433466911315918
    6. '       ' → logprob: -8.183466911315918
    7. '   ' → logprob: -8.308466911315918
    8. '(
' → logprob: -9.933466911315918
    9. 'self' → logprob: -10.058466911315918
    10. '():
' → logprob: -12.558466911315918

Token 1335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08187757432460785
    2. 'return' → logprob: -2.5818774700164795
    3. ' return' → logprob: -5.831877708435059
    4. '```' → logprob: -10.706877708435059
    5. '[' → logprob: -11.331877708435059
    6. '[]' → logprob: -12.831877708435059
    7. '{return' → logprob: -12.956877708435059
    8. '(' → logprob: -13.081877708435059
    9. '   ' → logprob: -13.331877708435059
    10. 'self' → logprob: -13.956877708435059

Token 1336: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005340963136404753
    2. '       ' → logprob: -5.255341053009033
    3. ' return' → logprob: -9.255340576171875
    4. '   ' → logprob: -12.255340576171875
    5. '[' → logprob: -12.380340576171875
    6. '```' → logprob: -13.005340576171875
    7. '	return' → logprob: -15.880340576171875
    8. '[
' → logprob: -17.505340576171875
    9. '
' → logprob: -17.630340576171875
    10. '{return' → logprob: -18.255340576171875

Token 1337: ' sorted' (ID: 20099)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0004062434600200504
    2. '[' → logprob: -8.000406265258789
    3. ' [' → logprob: -10.750406265258789
    4. '[self' → logprob: -10.750406265258789
    5. 'sorted' → logprob: -11.375406265258789
    6. '[i' → logprob: -11.750406265258789
    7. '[s' → logprob: -12.125406265258789
    8. '[item' → logprob: -13.750406265258789
    9. '[int' → logprob: -14.875406265258789
    10. '[list' → logprob: -15.000406265258789

Token 1338: '(p' (ID: 2407)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.07903255522251129
    2. '(p' → logprob: -2.5790326595306396
    3. '(piece' → logprob: -8.954032897949219
    4. '((' → logprob: -11.829032897949219
    5. '(' → logprob: -12.454032897949219
    6. '[p' → logprob: -13.579032897949219
    7. '(self' → logprob: -14.579032897949219
    8. '([(' → logprob: -14.954032897949219
    9. 'p' → logprob: -16.20403289794922
    10. '[' → logprob: -16.70403289794922

Token 1339: '.area' (ID: 78128)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.476031094789505
    2. '([' → logprob: -0.9760310649871826
    3. '(piece' → logprob: -6.476031303405762
    4. 'iece' → logprob: -8.476031303405762
    5. '[p' → logprob: -8.726031303405762
    6. '(' → logprob: -10.851031303405762
    7. 'p' → logprob: -11.726031303405762
    8. '[' → logprob: -12.226031303405762
    9. '((' → logprob: -12.351031303405762
    10. '.p' → logprob: -14.351031303405762

Token 1340: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07899686694145203
    2. '())' → logprob: -2.5789968967437744
    3. '(),' → logprob: -9.328996658325195
    4. '()]' → logprob: -11.703996658325195
    5. 'for' → logprob: -12.953996658325195
    6. ')' → logprob: -12.953996658325195
    7. '(' → logprob: -13.828996658325195
    8. ' ()' → logprob: -13.828996658325195
    9. ' ())' → logprob: -14.078996658325195
    10. '());' → logprob: -14.453996658325195

Token 1341: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4988243877887726
    2. '())' → logprob: -0.9988243579864502
    3. ')' → logprob: -3.74882435798645
    4. 'for' → logprob: -7.123824596405029
    5. '(),' → logprob: -9.998824119567871
    6. ' for' → logprob: -11.373824119567871
    7. '()]' → logprob: -11.498824119567871
    8. '()))' → logprob: -11.748824119567871
    9. '(' → logprob: -12.498824119567871
    10. ' ())' → logprob: -12.748824119567871

Token 1342: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0001234428636962548
    2. ' p' → logprob: -9.000123023986816
    3. '	p' → logprob: -18.875123977661133
    4. '_p' → logprob: -19.625123977661133
    5. ')p' → logprob: -20.750123977661133
    6. 'self' → logprob: -20.750123977661133
    7. ' п' → logprob: -22.500123977661133
    8. 'pett' → logprob: -23.125123977661133
    9. '<|end|>' → logprob: -23.500123977661133
    10. '<|end|>' → logprob: -23.750123977661133

Token 1343: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00071553117595613
    2. 'in' → logprob: -7.250715732574463
    3. 'p' → logprob: -13.375715255737305
    4. ' p' → logprob: -13.625715255737305
    5. 'self' → logprob: -13.875715255737305
    6. 'ieces' → logprob: -14.375715255737305
    7. ' ' → logprob: -14.750715255737305
    8. 'i' → logprob: -15.000715255737305
    9. 'iece' → logprob: -15.250715255737305
    10. ' ' → logprob: -16.375715255737305

Token 1344: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.1424973713001236e-05
    2. ' self' → logprob: -10.375031471252441
    3. '(self' → logprob: -16.250030517578125
    4. 'elf' → logprob: -18.125030517578125
    5. '
' → logprob: -18.375030517578125
    6. '[self' → logprob: -19.375030517578125
    7. '	self' → logprob: -19.375030517578125
    8. '   ' → logprob: -20.250030517578125
    9. '=self' → logprob: -20.500030517578125
    10. '       ' → logprob: -21.875030517578125

Token 1345: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.008524621836841106
    2. 'ieces' → logprob: -4.883524417877197
    3. 'pieces' → logprob: -7.133524417877197
    4. 'self' → logprob: -9.883524894714355
    5. '.' → logprob: -9.883524894714355
    6. 'ices' → logprob: -12.008524894714355
    7. 'p' → logprob: -12.133524894714355
    8. '.user' → logprob: -12.508524894714355
    9. '.s' → logprob: -14.383524894714355
    10. ' pieces' → logprob: -14.633524894714355

Token 1346: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -0.00010402000043541193
    2. 'pieces' → logprob: -9.750103950500488
    3. 'self' → logprob: -10.125103950500488
    4. 'ices' → logprob: -13.250103950500488
    5. '(self' → logprob: -14.750103950500488
    6. 'e' → logprob: -14.750103950500488
    7. '.' → logprob: -14.750103950500488
    8. '   ' → logprob: -15.000103950500488
    9. '```' → logprob: -15.000103950500488
    10. 'iece' → logprob: -15.250103950500488

Token 1347: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014379269443452358
    2. '())' → logprob: -4.639379501342773
    3. '()' → logprob: -5.389379501342773
    4. '])' → logprob: -10.639379501342773
    5. ']' → logprob: -12.014379501342773
    6. ' )' → logprob: -12.389379501342773
    7. '()]' → logprob: -12.639379501342773
    8. '))' → logprob: -13.264379501342773
    9. '）' → logprob: -13.514379501342773
    10. '   ' → logprob: -13.639379501342773

Token 1348: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.24995167553424835
    2. '<|end|>' → logprob: -1.624951720237732
    3. '```' → logprob: -4.2499518394470215
    4. 'def' → logprob: -4.9999518394470215
    5. '<|end|>' → logprob: -5.9999518394470215
    6. '[' → logprob: -8.374951362609863
    7. ')' → logprob: -8.999951362609863
    8. 'a' → logprob: -9.749951362609863
    9. '...' → logprob: -9.749951362609863
    10. '``' → logprob: -10.874951362609863

Token 1349: ' Input' (ID: 10090)
  Prédit: ' Cake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Cake' → logprob: -0.8850429654121399
    2. 'Cake' → logprob: -1.1350429058074951
    3. 'Solution' → logprob: -3.260042905807495
    4. ' Solution' → logprob: -3.385042905807495
    5. 'Test' → logprob: -3.510042905807495
    6. ' Rectangle' → logprob: -3.760042905807495
    7. ' Test' → logprob: -4.260043144226074
    8. 'Cut' → logprob: -4.385043144226074
    9. ' Piece' → logprob: -4.760043144226074
    10. 'Rectangle' → logprob: -4.760043144226074

Token 1350: 'Parser' (ID: 9231)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.7269080877304077
    2. 'Parser' → logprob: -1.6019080877304077
    3. 'Processor' → logprob: -1.7269080877304077
    4. 'Output' → logprob: -2.7269082069396973
    5. 'Reader' → logprob: -2.8519082069396973
    6. 'Simulator' → logprob: -5.351908206939697
    7. 'Provider' → logprob: -6.101908206939697
    8. ':' → logprob: -6.101908206939697
    9. 'Data' → logprob: -6.601908206939697
    10. ':
' → logprob: -7.351908206939697

Token 1351: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005622077151201665
    2. ':
' → logprob: -7.5005621910095215
    3. '():' → logprob: -13.00056266784668
    4. '<|end|>' → logprob: -13.12556266784668
    5. ':def' → logprob: -13.50056266784668
    6. '(object' → logprob: -13.87556266784668
    7. '):' → logprob: -14.00056266784668
    8. ' :' → logprob: -14.62556266784668
    9. ':

' → logprob: -14.87556266784668
    10. '(' → logprob: -15.37556266784668

Token 1352: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015599739272147417
    2. ' def' → logprob: -7.126560211181641
    3. 'def' → logprob: -7.501560211181641
    4. 'class' → logprob: -9.12656021118164
    5. '```' → logprob: -10.37656021118164
    6. '<|end|>' → logprob: -11.50156021118164
    7. '	def' → logprob: -11.62656021118164
    8. 'staticmethod' → logprob: -11.75156021118164
    9. 'import' → logprob: -11.87656021118164
    10. 'classmethod' → logprob: -12.12656021118164

Token 1353: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.20241554081439972
    2. ' def' → logprob: -1.7024155855178833
    3. 'class' → logprob: -6.952415466308594
    4. '@' → logprob: -10.827415466308594
    5. '```' → logprob: -11.827415466308594
    6. '   ' → logprob: -11.952415466308594
    7. ' class' → logprob: -12.452415466308594
    8. 'staticmethod' → logprob: -12.827415466308594
    9. ' @' → logprob: -13.202415466308594
    10. 'import' → logprob: -13.452415466308594

Token 1354: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.0004303116293158382
    2. 'def' → logprob: -8.2504301071167
    3. 'classmethod' → logprob: -9.5004301071167
    4. 'static' → logprob: -9.7504301071167
    5. '__' → logprob: -10.8754301071167
    6. 'init' → logprob: -11.2504301071167
    7. ' def' → logprob: -13.5004301071167
    8. ' static' → logprob: -14.1254301071167
    9. '```' → logprob: -14.3754301071167
    10. ' __' → logprob: -15.2504301071167

Token 1355: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -16.875
    3. 'call' → logprob: -17.0
    4. 'inite' → logprob: -18.25
    5. 'ini' → logprob: -18.75
    6. '_init' → logprob: -19.375
    7. 'initi' → logprob: -20.25
    8. '(init' → logprob: -20.625
    9. 'staticmethod' → logprob: -21.25
    10. 'in' → logprob: -21.5

Token 1356: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.018338404595851898
    2. '(self' → logprob: -4.018338203430176
    3. '__(
' → logprob: -9.018338203430176
    4. 'self' → logprob: -10.643338203430176
    5. '(' → logprob: -10.893338203430176
    6. '__' → logprob: -11.018338203430176
    7. ' (' → logprob: -12.893338203430176
    8. '<>(' → logprob: -13.768338203430176
    9. '__((' → logprob: -13.768338203430176
    10. '_(' → logprob: -14.393338203430176

Token 1357: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001048646867275238
    2. ')' → logprob: -6.876048564910889
    3. '):
' → logprob: -11.876049041748047
    4. ' self' → logprob: -12.251049041748047
    5. '(self' → logprob: -13.751049041748047
    6. '   ' → logprob: -14.001049041748047
    7. '
' → logprob: -14.251049041748047
    8. '	self' → logprob: -14.626049041748047
    9. '):' → logprob: -15.376049041748047
    10. '       ' → logprob: -16.251049041748047

Token 1358: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3854203224182129
    2. ',' → logprob: -1.635420322418213
    3. '(self' → logprob: -2.760420322418213
    4. '):
' → logprob: -3.635420322418213
    5. '):' → logprob: -3.760420322418213
    6. '   ' → logprob: -5.510420322418213
    7. ')' → logprob: -5.635420322418213
    8. ' self' → logprob: -5.760420322418213
    9. ' (' → logprob: -7.260420322418213
    10. ',self' → logprob: -9.135419845581055

Token 1359: ' lines' (ID: 8698)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.22554172575473785
    2. 'lines' → logprob: -2.100541830062866
    3. 'self' → logprob: -3.350541830062866
    4. ')' → logprob: -3.975541830062866
    5. '):
' → logprob: -4.475541591644287
    6. '):' → logprob: -5.600541591644287
    7. 'data' → logprob: -6.100541591644287
    8. ' input' → logprob: -6.225541591644287
    9. 'raw' → logprob: -6.350541591644287
    10. ' lines' → logprob: -6.725541591644287

Token 1360: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004992871079593897
    2. '):' → logprob: -5.379992961883545
    3. '=None' → logprob: -8.754992485046387
    4. '):
' → logprob: -9.004992485046387
    5. '=' → logprob: -10.004992485046387
    6. ')' → logprob: -10.379992485046387
    7. '=[]' → logprob: -11.504992485046387
    8. ',' → logprob: -13.629992485046387
    9. '```' → logprob: -13.754992485046387
    10. ':list' → logprob: -14.004992485046387

Token 1361: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.006763564422726631
    2. 'list' → logprob: -5.006763458251953
    3. ' List' → logprob: -10.506763458251953
    4. 'iter' → logprob: -11.506763458251953
    5. '[List' → logprob: -12.381763458251953
    6. ' list' → logprob: -13.381763458251953
    7. '   ' → logprob: -13.381763458251953
    8. ')' → logprob: -14.006763458251953
    9. 'Iterable' → logprob: -14.256763458251953
    10. 'Iterator' → logprob: -14.256763458251953

Token 1362: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.676292231422849e-05
    2. 'str' → logprob: -11.000017166137695
    3. '=str' → logprob: -17.750017166137695
    4. '
' → logprob: -19.250017166137695
    5. '	str' → logprob: -19.875017166137695
    6. '```' → logprob: -20.000017166137695
    7. ':str' → logprob: -20.875017166137695
    8. '   ' → logprob: -21.000017166137695
    9. '[' → logprob: -21.000017166137695
    10. 'Str' → logprob: -21.125017166137695

Token 1363: ']):
' (ID: 51989)
  Prédit: ']):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.177872434258461
    2. '):
' → logprob: -2.4278724193573
    3. ']):' → logprob: -2.8028724193573
    4. '):' → logprob: -4.427872657775879
    5. ')' → logprob: -7.177872657775879
    6. '])' → logprob: -7.677872657775879
    7. ']' → logprob: -7.927872657775879
    8. '']):
' → logprob: -8.052872657775879
    9. '   ' → logprob: -8.802872657775879
    10. '       ' → logprob: -10.677872657775879

Token 1364: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030396245419979095
    2. 'self' → logprob: -6.003039836883545
    3. '   ' → logprob: -8.128039360046387
    4. 'def' → logprob: -8.628039360046387
    5. '	' → logprob: -10.003039360046387
    6. ' self' → logprob: -10.753039360046387
    7. '	   ' → logprob: -11.753039360046387
    8. '	self' → logprob: -12.253039360046387
    9. ' ' → logprob: -13.378039360046387
    10. '```' → logprob: -13.503039360046387

Token 1365: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0002210596576333046
    2. '       ' → logprob: -8.500221252441406
    3. ' self' → logprob: -11.000221252441406
    4. '   ' → logprob: -14.500221252441406
    5. '	self' → logprob: -15.375221252441406
    6. 'def' → logprob: -16.500221252441406
    7. ' ' → logprob: -18.125221252441406
    8. '(self' → logprob: -18.375221252441406
    9. '[self' → logprob: -19.125221252441406
    10. '	' → logprob: -19.250221252441406

Token 1366: '.lines' (ID: 96601)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.4560527801513672
    2. '._' → logprob: -1.2060527801513672
    3. '.lines' → logprob: -2.706052780151367
    4. '	lines' → logprob: -10.831052780151367
    5. '_line' → logprob: -11.706052780151367
    6. 'lines' → logprob: -12.081052780151367
    7. '_raw' → logprob: -13.206052780151367
    8. '_input' → logprob: -13.581052780151367
    9. '_LINES' → logprob: -13.581052780151367
    10. '.' → logprob: -13.956052780151367

Token 1367: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08038242906332016
    2. ' =' → logprob: -2.5803823471069336
    3. '[' → logprob: -7.705382347106934
    4. '.' → logprob: -8.205382347106934
    5. '   ' → logprob: -8.830382347106934
    6. '.pop' → logprob: -8.955382347106934
    7. ')' → logprob: -9.330382347106934
    8. '.append' → logprob: -9.580382347106934
    9. ':' → logprob: -9.705382347106934
    10. '.extend' → logprob: -10.580382347106934

Token 1368: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -1.7432603272027336e-06
    2. ' lines' → logprob: -13.500001907348633
    3. '(lines' → logprob: -15.375001907348633
    4. '[' → logprob: -16.750001907348633
    5. '	lines' → logprob: -18.125001907348633
    6. 'line' → logprob: -18.625001907348633
    7. '[line' → logprob: -18.750001907348633
    8. 'list' → logprob: -19.000001907348633
    9. '   ' → logprob: -19.750001907348633
    10. '.lines' → logprob: -20.250001907348633

Token 1369: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20294038951396942
    2. '
' → logprob: -2.0779404640197754
    3. 'def' → logprob: -2.9529404640197754
    4. ' def' → logprob: -5.327940464019775
    5. '    
' → logprob: -7.327940464019775
    6. '<|end|>' → logprob: -8.827939987182617
    7. '[' → logprob: -9.077939987182617
    8. '       ' → logprob: -9.327939987182617
    9. ',' → logprob: -9.327939987182617
    10. '	def' → logprob: -9.452939987182617

Token 1370: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07685627788305283
    2. '       ' → logprob: -3.4518563747406006
    3. 'self' → logprob: -3.5768563747406006
    4. 'def' → logprob: -4.3268561363220215
    5. '
' → logprob: -7.2018561363220215
    6. ' self' → logprob: -8.32685661315918
    7. ' def' → logprob: -9.82685661315918
    8. '	self' → logprob: -10.57685661315918
    9. '    
' → logprob: -11.45185661315918
    10. '	def' → logprob: -11.82685661315918

Token 1371: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.05796467885375023
    2. 'def' → logprob: -3.682964563369751
    3. '
' → logprob: -3.932964563369751
    4. '   ' → logprob: -5.05796480178833
    5. '       ' → logprob: -5.55796480178833
    6. ' self' → logprob: -6.68296480178833
    7. ' def' → logprob: -10.807964324951172
    8. '	self' → logprob: -10.932964324951172
    9. '0' → logprob: -11.057964324951172
    10. 'import' → logprob: -11.182964324951172

Token 1372: '.index' (ID: 9736)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.04161160811781883
    2. '_current' → logprob: -3.291611671447754
    3. '_pos' → logprob: -6.291611671447754
    4. 'index' → logprob: -7.041611671447754
    5. '_idx' → logprob: -7.791611671447754
    6. '_pointer' → logprob: -8.541611671447754
    7. '_cursor' → logprob: -9.541611671447754
    8. 'current' → logprob: -9.666611671447754
    9. '_line' → logprob: -10.291611671447754
    10. '_position' → logprob: -10.791611671447754

Token 1373: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3941248059272766
    2. ' =' → logprob: -1.1441247463226318
    3. ' +=' → logprob: -5.394124984741211
    4. '+=' → logprob: -6.019124984741211
    5. '<|end|>' → logprob: -9.394124984741211
    6. '_' → logprob: -9.519124984741211
    7. '_=' → logprob: -10.394124984741211
    8. ' ' → logprob: -10.394124984741211
    9. '+' → logprob: -12.519124984741211
    10. '0' → logprob: -12.644124984741211

Token 1374: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '<|end|>' → logprob: -19.875335693359375
    4. '   ' → logprob: -20.125335693359375
    5. '۰' → logprob: -20.625335693359375
    6. '1' → logprob: -21.375335693359375
    7. '=' → logprob: -21.625335693359375
    8. '  ' → logprob: -22.375335693359375
    9. ' ' → logprob: -22.500335693359375
    10. '```' → logprob: -22.875335693359375

Token 1375: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '=' → logprob: -17.8750057220459
    4. '۰' → logprob: -19.0000057220459
    5. '1' → logprob: -19.1250057220459
    6. '   ' → logprob: -19.5000057220459
    7. 'self' → logprob: -19.7500057220459
    8. '```' → logprob: -20.3125057220459
    9. '[' → logprob: -20.4375057220459
    10. '-' → logprob: -20.5625057220459

Token 1376: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03424743562936783
    2. 'def' → logprob: -3.784247398376465
    3. '
' → logprob: -4.784247398376465
    4. '    
' → logprob: -6.159247398376465
    5. ' def' → logprob: -7.909247398376465
    6. '```' → logprob: -10.659247398376465
    7. '	def' → logprob: -11.034247398376465
    8. ' ' → logprob: -11.284247398376465
    9. '        
' → logprob: -11.284247398376465
    10. ' 
' → logprob: -11.784247398376465

Token 1377: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3109147846698761
    2. '   ' → logprob: -1.4359147548675537
    3. ' def' → logprob: -3.5609147548675537
    4. '    
' → logprob: -7.685914993286133
    5. '```' → logprob: -8.185914993286133
    6. '	def' → logprob: -9.060914993286133
    7. ' ' → logprob: -10.435914993286133
    8. '        
' → logprob: -12.310914993286133
    9. '<|end|>' → logprob: -12.560914993286133
    10. '
' → logprob: -12.560914993286133

Token 1378: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001188445370644331
    2. ' def' → logprob: -6.751188278198242
    3. '   ' → logprob: -11.001188278198242
    4. '	def' → logprob: -13.626188278198242
    5. '
' → logprob: -15.376188278198242
    6. '```' → logprob: -16.126188278198242
    7. 'de' → logprob: -17.251188278198242
    8. ':def' → logprob: -18.501188278198242
    9. '    
' → logprob: -18.751188278198242
    10. ' ' → logprob: -19.376188278198242

Token 1379: ' __' (ID: 2516)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.0123483557254076
    2. 'next' → logprob: -4.512348175048828
    3. 'read' → logprob: -6.762348175048828
    4. 'parse' → logprob: -9.012348175048828
    5. '__' → logprob: -11.887348175048828
    6. ' has' → logprob: -12.262348175048828
    7. 'get' → logprob: -12.762348175048828
    8. '_has' → logprob: -12.762348175048828
    9. 'have' → logprob: -13.387348175048828
    10. 'peek' → logprob: -13.762348175048828

Token 1380: 'iter' (ID: 2340)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.008817359805107117
    2. 'iter' → logprob: -4.758817195892334
    3. 'init' → logprob: -8.508817672729492
    4. ' next' → logprob: -14.133817672729492
    5. 'len' → logprob: -15.883817672729492
    6. '_next' → logprob: -16.383817672729492
    7. 'Next' → logprob: -17.258817672729492
    8. 'getitem' → logprob: -17.883817672729492
    9. 'call' → logprob: -18.008817672729492
    10. 'has' → logprob: -18.633817672729492

Token 1381: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02355850487947464
    2. '(' → logprob: -3.7735586166381836
    3. '__(' → logprob: -8.648558616638184
    4. '(
' → logprob: -9.398558616638184
    5. '(s' → logprob: -11.398558616638184
    6. ' (' → logprob: -11.523558616638184
    7. 'self' → logprob: -11.773558616638184
    8. '
' → logprob: -11.898558616638184
    9. ')(' → logprob: -12.648558616638184
    10. '(sel' → logprob: -12.773558616638184

Token 1382: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029880540445446968
    2. ')' → logprob: -3.5298805236816406
    3. '(self' → logprob: -10.27988052368164
    4. '
' → logprob: -10.27988052368164
    5. '):
' → logprob: -11.02988052368164
    6. ' self' → logprob: -11.15488052368164
    7. 's' → logprob: -11.77988052368164
    8. '):' → logprob: -11.90488052368164
    9. '   ' → logprob: -12.27988052368164
    10. ')(' → logprob: -12.65488052368164

Token 1383: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.17434269189834595
    2. ')' → logprob: -2.674342632293701
    3. '):
' → logprob: -2.924342632293701
    4. '):' → logprob: -4.299342632293701
    5. 'self' → logprob: -4.424342632293701
    6. '(' → logprob: -5.299342632293701
    7. ')(' → logprob: -5.299342632293701
    8. ')(
' → logprob: -8.04934310913086
    9. ' ' → logprob: -8.17434310913086
    10. '   ' → logprob: -8.29934310913086

Token 1384: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37331074476242065
    2. '   ' → logprob: -1.7483108043670654
    3. 'self' → logprob: -3.1233108043670654
    4. '    
' → logprob: -3.3733108043670654
    5. '(self' → logprob: -4.498310565948486
    6. '
' → logprob: -4.748310565948486
    7. '        
' → logprob: -5.248310565948486
    8. ' self' → logprob: -5.373310565948486
    9. ' return' → logprob: -5.373310565948486
    10. 'return' → logprob: -5.498310565948486

Token 1385: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01987341232597828
    2. 'self' → logprob: -4.01987361907959
    3. '   ' → logprob: -7.14487361907959
    4. '       ' → logprob: -7.51987361907959
    5. ' return' → logprob: -8.01987361907959
    6. 'def' → logprob: -9.89487361907959
    7. '
' → logprob: -11.76987361907959
    8. '{return' → logprob: -14.14487361907959
    9. ' self' → logprob: -14.26987361907959
    10. '    
' → logprob: -14.26987361907959

Token 1386: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.836499985889532e-05
    2. ' self' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.375059127807617
    4. '(self' → logprob: -18.000059127807617
    5. '
' → logprob: -18.750059127807617
    6. '	self' → logprob: -19.375059127807617
    7. '[self' → logprob: -20.750059127807617
    8. ' ' → logprob: -20.875059127807617
    9. 's' → logprob: -20.875059127807617
    10. 'iter' → logprob: -21.875059127807617

Token 1387: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05701927840709686
    2. '

' → logprob: -2.9320192337036133
    3. '<|end|>' → logprob: -7.807019233703613
    4. 'def' → logprob: -7.932019233703613
    5. '   ' → logprob: -8.182019233703613
    6. '    
' → logprob: -8.432019233703613
    7. '
' → logprob: -8.432019233703613
    8. '.next' → logprob: -9.057019233703613
    9. ':' → logprob: -9.307019233703613
    10. ':
' → logprob: -9.682019233703613

Token 1388: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4987679421901703
    2. '
' → logprob: -1.4987679719924927
    3. '   ' → logprob: -2.123767852783203
    4. ' def' → logprob: -3.748767852783203
    5. '    
' → logprob: -4.248767852783203
    6. '```' → logprob: -5.748767852783203
    7. ' 
' → logprob: -5.873767852783203
    8. '  
' → logprob: -6.123767852783203
    9. ':' → logprob: -6.998767852783203
    10. ':
' → logprob: -7.373767852783203

Token 1389: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00759538821876049
    2. '
' → logprob: -5.257595539093018
    3. '   ' → logprob: -6.132595539093018
    4. ' def' → logprob: -8.88259506225586
    5. '    
' → logprob: -10.63259506225586
    6. '[' → logprob: -12.13259506225586
    7. '```' → logprob: -12.13259506225586
    8. '@' → logprob: -12.25759506225586
    9. '	def' → logprob: -12.50759506225586
    10. ':def' → logprob: -14.00759506225586

Token 1390: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.433829159708694e-05
    2. 'next' → logprob: -9.75007438659668
    3. '.__' → logprob: -11.87507438659668
    4. 'def' → logprob: -12.37507438659668
    5. '_next' → logprob: -13.25007438659668
    6. '
' → logprob: -13.87507438659668
    7. ' __' → logprob: -13.87507438659668
    8. '___' → logprob: -14.12507438659668
    9. '**' → logprob: -16.75007438659668
    10. '```' → logprob: -16.87507438659668

Token 1391: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -4.008129963040119e-06
    2. ' next' → logprob: -12.500003814697266
    3. 'iter' → logprob: -15.250003814697266
    4. '_next' → logprob: -18.750003814697266
    5. '(next' → logprob: -19.500003814697266
    6. 'Next' → logprob: -20.125003814697266
    7. '.next' → logprob: -20.750003814697266
    8. '	next' → logprob: -21.750003814697266
    9. '-next' → logprob: -22.500003814697266
    10. ',next' → logprob: -23.625003814697266

Token 1392: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.030141523107886314
    2. '(self' → logprob: -3.530141592025757
    3. '__' → logprob: -8.280141830444336
    4. '(' → logprob: -9.405141830444336
    5. '()(' → logprob: -10.655141830444336
    6. '__(
' → logprob: -11.155141830444336
    7. '()' → logprob: -12.155141830444336
    8. ' (' → logprob: -12.405141830444336
    9. '__('' → logprob: -12.655141830444336
    10. ')(' → logprob: -13.780141830444336

Token 1393: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023777034133672714
    2. ')' → logprob: -3.7737770080566406
    3. '):
' → logprob: -7.773777008056641
    4. '):' → logprob: -9.52377700805664
    5. '
' → logprob: -11.52377700805664
    6. ')
' → logprob: -11.77377700805664
    7. ' self' → logprob: -12.02377700805664
    8. '   ' → logprob: -12.02377700805664
    9. '(self' → logprob: -12.52377700805664
    10. '	self' → logprob: -13.14877700805664

Token 1394: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05209215357899666
    2. ')' → logprob: -3.5520920753479004
    3. '):
' → logprob: -4.1770920753479
    4. '):' → logprob: -5.8020920753479
    5. 'self' → logprob: -5.9270920753479
    6. ')(' → logprob: -7.1770920753479
    7. '(' → logprob: -8.677092552185059
    8. ' self' → logprob: -10.427092552185059
    9. ')(
' → logprob: -10.677092552185059
    10. '   ' → logprob: -11.052092552185059

Token 1395: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003549105254933238
    2. '(' → logprob: -6.128549098968506
    3. '():
' → logprob: -7.378549098968506
    4. 'self' → logprob: -7.878549098968506
    5. '():' → logprob: -9.378549575805664
    6. '(
' → logprob: -9.503549575805664
    7. '()' → logprob: -9.503549575805664
    8. '       ' → logprob: -9.628549575805664
    9. '   ' → logprob: -10.753549575805664
    10. ' (' → logprob: -11.003549575805664

Token 1396: ' Tuple' (ID: 50841)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.18444693088531494
    2. 'Tuple' → logprob: -1.934446930885315
    3. 'List' → logprob: -4.434446811676025
    4. 'int' → logprob: -4.434446811676025
    5. 'tuple' → logprob: -8.809447288513184
    6. ' str' → logprob: -10.184447288513184
    7. ' Tuple' → logprob: -11.059447288513184
    8. 'list' → logprob: -13.059447288513184
    9. '[str' → logprob: -13.059447288513184
    10. ' List' → logprob: -14.684447288513184

Token 1397: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.18228399753570557
    2. '(int' → logprob: -2.182283878326416
    3. 'int' → logprob: -2.932283878326416
    4. '[' → logprob: -8.432284355163574
    5. '[str' → logprob: -9.057284355163574
    6. '(' → logprob: -9.182284355163574
    7. '[
' → logprob: -10.182284355163574
    8. '   ' → logprob: -10.182284355163574
    9. '[List' → logprob: -11.307284355163574
    10. '()' → logprob: -11.432284355163574

Token 1398: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01613759435713291
    2. ',int' → logprob: -4.141137599945068
    3. '[int' → logprob: -9.39113712310791
    4. 'int' → logprob: -11.39113712310791
    5. ' ,' → logprob: -13.01613712310791
    6. ',Integer' → logprob: -13.76613712310791
    7. '‌,' → logprob: -13.76613712310791
    8. '[' → logprob: -13.89113712310791
    9. ',List' → logprob: -14.26613712310791
    10. ']int' → logprob: -14.39113712310791

Token 1399: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4792587161064148
    2. 'List' → logprob: -0.9792587161064148
    3. 'str' → logprob: -6.1042585372924805
    4. '...' → logprob: -6.8542585372924805
    5. ' List' → logprob: -6.9792585372924805
    6. '...]' → logprob: -8.22925853729248
    7. '[int' → logprob: -8.22925853729248
    8. ' int' → logprob: -8.72925853729248
    9. '[List' → logprob: -9.35425853729248
    10. ']' → logprob: -9.47925853729248

Token 1400: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018327576981391758
    2. ']' → logprob: -9.25018310546875
    3. ',int' → logprob: -9.87518310546875
    4. ' ,' → logprob: -10.75018310546875
    5. ']:' → logprob: -12.12518310546875
    6. '<|end|>' → logprob: -13.12518310546875
    7. ']>' → logprob: -13.37518310546875
    8. '‌,' → logprob: -13.62518310546875
    9. ']int' → logprob: -13.87518310546875
    10. '   ' → logprob: -14.12518310546875

Token 1401: ' int' (ID: 677)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.11374739557504654
    2. 'int' → logprob: -2.2387473583221436
    3. ' List' → logprob: -7.988747596740723
    4. '[List' → logprob: -8.238747596740723
    5. '[int' → logprob: -8.863747596740723
    6. 'list' → logprob: -9.238747596740723
    7. ' int' → logprob: -10.363747596740723
    8. 'str' → logprob: -10.363747596740723
    9. '   ' → logprob: -12.363747596740723
    10. '	List' → logprob: -12.488747596740723

Token 1402: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22988492250442505
    2. ']:
' → logprob: -2.2298848628997803
    3. ']:' → logprob: -2.3548848628997803
    4. ']:
' → logprob: -6.479885101318359
    5. ',int' → logprob: -7.104885101318359
    6. ']' → logprob: -7.979885101318359
    7. 'int' → logprob: -9.72988510131836
    8. ']:

' → logprob: -9.85488510131836
    9. ' ,' → logprob: -10.47988510131836
    10. '[int' → logprob: -10.97988510131836

Token 1403: ' List' (ID: 2655)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001996066712308675
    2. 'List' → logprob: -9.000199317932129
    3. 'str' → logprob: -10.125199317932129
    4. '[int' → logprob: -10.875199317932129
    5. ' int' → logprob: -11.375199317932129
    6. ']int' → logprob: -13.875199317932129
    7. 'list' → logprob: -14.250199317932129
    8. '<int' → logprob: -14.625199317932129
    9. '
' → logprob: -14.750199317932129
    10. '   ' → logprob: -14.875199317932129

Token 1404: '[' (ID: 58)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0019349466310814023
    2. '[' → logprob: -6.251935005187988
    3. '[str' → logprob: -12.001935005187988
    4. '[List' → logprob: -16.001934051513672
    5. '[
' → logprob: -16.501934051513672
    6. 'int' → logprob: -16.751934051513672
    7. '[Int' → logprob: -17.001934051513672
    8. '<int' → logprob: -19.626934051513672
    9. '
' → logprob: -20.501934051513672
    10. ',int' → logprob: -20.751934051513672

Token 1405: 'Tuple' (ID: 40048)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7816897630691528
    2. 'Tuple' → logprob: -0.7816897630691528
    3. '[int' → logprob: -2.7816896438598633
    4. 'int' → logprob: -3.7816896438598633
    5. ' Tuple' → logprob: -12.031689643859863
    6. ']' → logprob: -12.156689643859863
    7. '[str' → logprob: -13.281689643859863
    8. '[List' → logprob: -13.781689643859863
    9. '   ' → logprob: -13.906689643859863
    10. 'List' → logprob: -14.406689643859863

Token 1406: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -4.429896944202483e-05
    2. 'int' → logprob: -10.625043869018555
    3. '[str' → logprob: -10.875043869018555
    4. '[' → logprob: -14.500043869018555
    5. ',int' → logprob: -15.625043869018555
    6. '(int' → logprob: -15.750043869018555
    7. ']int' → logprob: -16.750043869018555
    8. '<int' → logprob: -17.625043869018555
    9. '[
' → logprob: -17.750043869018555
    10. ' int' → logprob: -18.000043869018555

Token 1407: ',int' (ID: 20909)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.6434000134468079
    2. ',' → logprob: -1.143399953842163
    3. ',int' → logprob: -1.893399953842163
    4. 'int' → logprob: -5.268400192260742
    5. ']int' → logprob: -11.268400192260742
    6. '   ' → logprob: -11.518400192260742
    7. '[' → logprob: -11.643400192260742
    8. ' ,' → logprob: -11.768400192260742
    9. '(int' → logprob: -12.518400192260742
    10. '<int' → logprob: -13.268400192260742

Token 1408: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.029150333255529404
    2. ']]]' → logprob: -3.6541502475738525
    3. ']]:
' → logprob: -6.029150485992432
    4. ']' → logprob: -8.279150009155273
    5. ',' → logprob: -9.529150009155273
    6. ']],' → logprob: -10.404150009155273
    7. ']])' → logprob: -11.154150009155273
    8. ')]' → logprob: -11.154150009155273
    9. '])]' → logprob: -11.279150009155273
    10. ')' → logprob: -11.404150009155273

Token 1409: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.0018842538120225072
    2. ']:' → logprob: -6.751884460449219
    3. '):
' → logprob: -8.126884460449219
    4. ',' → logprob: -9.251884460449219
    5. '():
' → logprob: -9.626884460449219
    6. ']:
' → logprob: -9.626884460449219
    7. '']:
' → logprob: -9.751884460449219
    8. '   ' → logprob: -10.001884460449219
    9. ']]:
' → logprob: -10.376884460449219
    10. ']' → logprob: -10.751884460449219

Token 1410: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007482792134396732
    2. '```' → logprob: -7.375748157501221
    3. '        
' → logprob: -10.250748634338379
    4. '   ' → logprob: -11.500748634338379
    5. '``' → logprob: -11.500748634338379
    6. ':' → logprob: -11.500748634338379
    7. ' line' → logprob: -12.375748634338379
    8. ',' → logprob: -12.375748634338379
    9. '<|end|>' → logprob: -12.375748634338379
    10. '():' → logprob: -12.500748634338379

Token 1411: ' if' (ID: 538)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4845845401287079
    2. 'if' (adapté à ' if') → logprob: -1.2345845699310303
    3. 'while' → logprob: -2.7345845699310303
    4. '       ' → logprob: -3.8595845699310303
    5. ' if' → logprob: -5.859584331512451
    6. ' line' → logprob: -6.484584331512451
    7. '   ' → logprob: -7.484584331512451
    8. ' while' → logprob: -7.484584331512451
    9. 'n' → logprob: -7.609584331512451
    10. 'header' → logprob: -8.35958480834961

Token 1412: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0017027945723384619
    2. ' self' → logprob: -6.376702785491943
    3. '
' → logprob: -14.876703262329102
    4. '	self' → logprob: -16.0017032623291
    5. '(self' → logprob: -16.6267032623291
    6. '<|end|>' → logprob: -16.6267032623291
    7. 'not' → logprob: -18.3767032623291
    8. '[self' → logprob: -18.3767032623291
    9. '=self' → logprob: -18.6267032623291
    10. '   ' → logprob: -18.6267032623291

Token 1413: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.0047547840513288975
    2. 'index' → logprob: -5.879755020141602
    3. '.' → logprob: -6.379755020141602
    4. '>=' → logprob: -8.754755020141602
    5. ' >=' → logprob: -10.254755020141602
    6. '.idx' → logprob: -11.129755020141602
    7. '_index' → logprob: -11.379755020141602
    8. 'self' → logprob: -11.879755020141602
    9. ' .' → logprob: -11.879755020141602
    10. ' index' → logprob: -12.129755020141602

Token 1414: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.2525308430194855
    2. '>=' → logprob: -1.502530813217163
    3. '==' → logprob: -8.002531051635742
    4. ' ==' → logprob: -9.377531051635742
    5. ' <' → logprob: -9.752531051635742
    6. ' ' → logprob: -10.002531051635742
    7. '<' → logprob: -10.377531051635742
    8. '   ' → logprob: -11.252531051635742
    9. ']>=' → logprob: -11.502531051635742
    10. ')>=' → logprob: -11.877531051635742

Token 1415: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -5.512236498361744e-07
    2. ' len' → logprob: -14.625000953674316
    3. '	len' → logprob: -19.375
    4. '=len' → logprob: -19.375
    5. 'length' → logprob: -20.125
    6. '(len' → logprob: -20.25
    7. '
' → logprob: -20.875
    8. 'self' → logprob: -21.0
    9. '<len' → logprob: -21.0
    10. ',len' → logprob: -21.5

Token 1416: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011033779446734115
    2. 'self' → logprob: -9.125110626220703
    3. '(' → logprob: -13.750110626220703
    4. '
' → logprob: -16.125110626220703
    5. '(
' → logprob: -16.250110626220703
    6. ' self' → logprob: -16.250110626220703
    7. '[self' → logprob: -17.500110626220703
    8. '```' → logprob: -18.125110626220703
    9. '=self' → logprob: -18.375110626220703
    10. 's' → logprob: -18.625110626220703

Token 1417: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -1.1160349458805285e-05
    2. 'lines' → logprob: -11.750011444091797
    3. '(lines' → logprob: -13.125011444091797
    4. 'self' → logprob: -14.375011444091797
    5. '	lines' → logprob: -14.750011444091797
    6. ' lines' → logprob: -16.750011444091797
    7. ' .' → logprob: -17.125011444091797
    8. '.layers' → logprob: -17.750011444091797
    9. '.' → logprob: -17.875011444091797
    10. '_lines' → logprob: -18.000011444091797

Token 1418: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2865733802318573
    2. ':' → logprob: -1.5365734100341797
    3. '):
' → logprob: -3.7865734100341797
    4. ':return' → logprob: -5.91157341003418
    5. '):' → logprob: -6.03657341003418
    6. '():
' → logprob: -6.16157341003418
    7. '       ' → logprob: -6.78657341003418
    8. ' and' → logprob: -7.03657341003418
    9. ' or' → logprob: -7.16157341003418
    10. 'and' → logprob: -8.03657341003418

Token 1419: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025455426424741745
    2. '
' → logprob: -4.275455474853516
    3. 'raise' → logprob: -5.275455474853516
    4. ' raise' → logprob: -5.400455474853516
    5. ' ' → logprob: -7.900455474853516
    6. '```' → logprob: -8.525455474853516
    7. '       ' → logprob: -8.775455474853516
    8. '   ' → logprob: -8.900455474853516
    9. '          ' → logprob: -9.025455474853516
    10. '  ' → logprob: -9.400455474853516

Token 1420: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.024265723302960396
    2. '           ' → logprob: -3.899265766143799
    3. ' raise' → logprob: -5.649265766143799
    4. 'Raise' → logprob: -9.27426528930664
    5. '	raise' → logprob: -9.89926528930664
    6. '```' → logprob: -10.64926528930664
    7. '
' → logprob: -11.64926528930664
    8. ' ' → logprob: -12.14926528930664
    9. '       ' → logprob: -12.39926528930664
    10. '   ' → logprob: -13.39926528930664

Token 1421: ' Stop' (ID: 22535)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -1.981667537620524e-06
    2. ' Stop' → logprob: -13.250001907348633
    3. '_Stop' → logprob: -16.500001907348633
    4. 'STOP' → logprob: -16.750001907348633
    5. '.Stop' → logprob: -17.750001907348633
    6. '_stop' → logprob: -18.125001907348633
    7. '
' → logprob: -18.500001907348633
    8. 'EOF' → logprob: -20.500001907348633
    9. 'Stopped' → logprob: -20.750001907348633
    10. '   ' → logprob: -20.875001907348633

Token 1422: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: 0.0
    2. 'Iterator' → logprob: -17.375
    3. 'iteration' → logprob: -17.875
    4. ' iteration' → logprob: -19.0
    5. 'Async' → logprob: -19.375
    6. 'Iterations' → logprob: -20.25
    7. 'Iter' → logprob: -20.375
    8. '
' → logprob: -20.625
    9. '_iteration' → logprob: -20.625
    10. 'Error' → logprob: -22.375

Token 1423: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037877827882766724
    2. '
' → logprob: -3.4128777980804443
    3. '        
' → logprob: -6.162878036499023
    4. '  
' → logprob: -7.037878036499023
    5. '    
' → logprob: -7.912878036499023
    6. '<|end|>' → logprob: -9.037878036499023
    7. '   ' → logprob: -9.162878036499023
    8. 'tokens' → logprob: -9.287878036499023
    9. ',' → logprob: -9.287878036499023
    10. 'token' → logprob: -9.537878036499023

Token 1424: '       ' (ID: 309)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4909037947654724
    2. '       ' → logprob: -0.9909037947654724
    3. '        
' → logprob: -5.115903854370117
    4. ' line' → logprob: -5.365903854370117
    5. '
' → logprob: -5.740903854370117
    6. '```' → logprob: -6.740903854370117
    7. 'params' → logprob: -8.115903854370117
    8. '   ' → logprob: -8.490903854370117
    9. '    
' → logprob: -8.490903854370117
    10. '            
' → logprob: -9.115903854370117

Token 1425: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.6725311875343323
    2. 'first' → logprob: -2.2975311279296875
    3. 'initial' → logprob: -2.4225311279296875
    4. 'w' → logprob: -2.6725311279296875
    5. 'parts' → logprob: -2.6725311279296875
    6. 'n' → logprob: -3.0475311279296875
    7. 'dims' → logprob: -3.4225311279296875
    8. 'params' → logprob: -4.4225311279296875
    9. 'init' → logprob: -4.4225311279296875
    10. 'tokens' → logprob: -4.6725311279296875

Token 1426: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20226868987083435
    2. '=' → logprob: -1.7022687196731567
    3. '_tokens' → logprob: -7.827268600463867
    4. '       ' → logprob: -8.327268600463867
    5. '=line' → logprob: -9.077268600463867
    6. 'tokens' → logprob: -9.702268600463867
    7. '=
' → logprob: -11.202268600463867
    8. '   ' → logprob: -12.077268600463867
    9. ',' → logprob: -12.452268600463867
    10. '=self' → logprob: -12.827268600463867

Token 1427: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015024791937321424
    2. ' self' → logprob: -6.501502513885498
    3. '       ' → logprob: -17.126502990722656
    4. '(self' → logprob: -17.626502990722656
    5. '           ' → logprob: -18.501502990722656
    6. '	self' → logprob: -20.001502990722656
    7. '        
' → logprob: -20.126502990722656
    8. '
' → logprob: -20.251502990722656
    9. '=self' → logprob: -20.251502990722656
    10. '[self' → logprob: -20.251502990722656

Token 1428: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.00029625516617670655
    2. '.' → logprob: -8.250296592712402
    3. 'lines' → logprob: -10.750296592712402
    4. ' .' → logprob: -12.750296592712402
    5. '_lines' → logprob: -13.125296592712402
    6. '	lines' → logprob: -13.250296592712402
    7. '.index' → logprob: -13.375296592712402
    8. '.strip' → logprob: -14.000296592712402
    9. ' lines' → logprob: -14.000296592712402
    10. '[index' → logprob: -14.000296592712402

Token 1429: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.01689998246729374
    2. '.strip' → logprob: -4.391900062561035
    3. 'self' → logprob: -5.766900062561035
    4. '       ' → logprob: -7.016900062561035
    5. '
' → logprob: -8.891900062561035
    6. ' =' → logprob: -9.641900062561035
    7. '=self' → logprob: -9.766900062561035
    8. ' self' → logprob: -10.641900062561035
    9. '.split' → logprob: -10.766900062561035
    10. 'strip' → logprob: -11.516900062561035

Token 1430: '.index' (ID: 9736)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.705925703048706
    2. '.index' → logprob: -0.705925703048706
    3. 'self' → logprob: -4.830925941467285
    4. '_index' → logprob: -5.455925941467285
    5. '[self' → logprob: -7.955925941467285
    6. ' index' → logprob: -10.455925941467285
    7. '[index' → logprob: -10.705925941467285
    8. ' self' → logprob: -11.330925941467285
    9. '@index' → logprob: -12.330925941467285
    10. 'Index' → logprob: -12.580925941467285

Token 1431: '].' (ID: 1651)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.3948241174221039
    2. '
' → logprob: -1.5198241472244263
    3. '       ' → logprob: -2.8948240280151367
    4. '].' → logprob: -3.6448240280151367
    5. ').' → logprob: -4.769824028015137
    6. '.split' → logprob: -5.019824028015137
    7. '.rstrip' → logprob: -5.644824028015137
    8. '        
' → logprob: -5.769824028015137
    9. '.' → logprob: -6.394824028015137
    10. ')
' → logprob: -7.644824028015137

Token 1432: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -5.796184723294573e-06
    2. 'split' → logprob: -12.750005722045898
    3. 'rstrip' → logprob: -12.750005722045898
    4. ' strip' → logprob: -18.0000057220459
    5. '.strip' → logprob: -20.6250057220459
    6. '_strip' → logprob: -22.0000057220459
    7. 'str' → logprob: -22.3750057220459
    8. '-strip' → logprob: -23.5000057220459
    9. 'Strip' → logprob: -24.2500057220459
    10. '
' → logprob: -24.5000057220459

Token 1433: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21590480208396912
    2. '()
' → logprob: -1.9659048318862915
    3. 'self' → logprob: -4.090904712677002
    4. 'if' → logprob: -4.590904712677002
    5. '
' → logprob: -4.840904712677002
    6. '()' → logprob: -5.215904712677002
    7. '        
' → logprob: -5.840904712677002
    8. 'tokens' → logprob: -6.340904712677002
    9. '<|end|>' → logprob: -6.465904712677002
    10. '<|end|>' → logprob: -6.465904712677002

Token 1434: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7319737672805786
    2. 'self' → logprob: -1.2319737672805786
    3. '       ' → logprob: -1.4819737672805786
    4. ' if' → logprob: -10.106973648071289
    5. '```' → logprob: -10.106973648071289
    6. '   ' → logprob: -11.356973648071289
    7. 'tokens' → logprob: -11.481973648071289
    8. ' self' → logprob: -11.731973648071289
    9. 'token' → logprob: -12.106973648071289
    10. 'If' → logprob: -12.981973648071289

Token 1435: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25272253155708313
    2. 'if' (adapté à ' if') → logprob: -1.5027225017547607
    3. 'parts' → logprob: -7.62772274017334
    4. '       ' → logprob: -8.75272274017334
    5. 'n' → logprob: -9.62772274017334
    6. 'tokens' → logprob: -9.87772274017334
    7. 'params' → logprob: -11.25272274017334
    8. 'values' → logprob: -11.62772274017334
    9. ' self' → logprob: -12.62772274017334
    10. ' if' → logprob: -13.00272274017334

Token 1436: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.08107609301805496
    2. 'not' → logprob: -2.581076145172119
    3. 'line' → logprob: -6.331076145172119
    4. ' line' → logprob: -7.831076145172119
    5. 'len' → logprob: -12.831075668334961
    6. ' len' → logprob: -13.456075668334961
    7. 'self' → logprob: -13.581075668334961
    8. ' ' → logprob: -14.956075668334961
    9. '!' → logprob: -15.081075668334961
    10. ' self' → logprob: -15.331075668334961

Token 1437: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0002613358374219388
    2. ' line' → logprob: -8.250261306762695
    3. '
' → logprob: -17.500261306762695
    4. '(line' → logprob: -20.250261306762695
    5. 'l' → logprob: -20.500261306762695
    6. '	line' → logprob: -20.500261306762695
    7. 'self' → logprob: -20.625261306762695
    8. 'lines' → logprob: -21.000261306762695
    9. 'len' → logprob: -21.125261306762695
    10. '#line' → logprob: -21.375261306762695

Token 1438: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14411544799804688
    2. ':' → logprob: -2.019115447998047
    3. ' or' → logprob: -7.144115447998047
    4. '.startswith' → logprob: -8.019115447998047
    5. 'or' → logprob: -8.394115447998047
    6. ':return' → logprob: -10.144115447998047
    7. '   ' → logprob: -11.144115447998047
    8. '[' → logprob: -11.894115447998047
    9. '==' → logprob: -12.019115447998047
    10. '       ' → logprob: -12.144115447998047

Token 1439: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007553862873464823
    2. ':' → logprob: -5.132554054260254
    3. ':
' → logprob: -6.757554054260254
    4. '       ' → logprob: -8.382554054260254
    5. ' or' → logprob: -9.007554054260254
    6. '               ' → logprob: -10.632554054260254
    7. 'self' → logprob: -11.257554054260254
    8. '```' → logprob: -11.382554054260254
    9. '          ' → logprob: -11.507554054260254
    10. '   ' → logprob: -11.757554054260254

Token 1440: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00042412037146277726
    2. ' self' → logprob: -8.0004243850708
    3. '       ' → logprob: -10.0004243850708
    4. 'raise' → logprob: -10.5004243850708
    5. '           ' → logprob: -11.6254243850708
    6. '
' → logprob: -13.0004243850708
    7. ' raise' → logprob: -13.3754243850708
    8. '   ' → logprob: -13.6254243850708
    9. '        
' → logprob: -14.3754243850708
    10. ' ' → logprob: -15.5004243850708

Token 1441: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.006167678628116846
    2. 'index' → logprob: -5.131167888641357
    3. ':index' → logprob: -9.3811674118042
    4. '.' → logprob: -9.7561674118042
    5. '_index' → logprob: -10.1311674118042
    6. '=index' → logprob: -11.0061674118042
    7. ' index' → logprob: -11.3811674118042
    8. ' .' → logprob: -12.0061674118042
    9. '.code' → logprob: -12.1311674118042
    10. '.next' → logprob: -12.8811674118042

Token 1442: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0002036595979006961
    2. ' +=' → logprob: -8.500204086303711
    3. '=' → logprob: -15.750204086303711
    4. ']+=' → logprob: -16.75020408630371
    5. '   ' → logprob: -18.87520408630371
    6. '```' → logprob: -20.62520408630371
    7. '-=' → logprob: -21.87520408630371
    8. '+' → logprob: -22.00020408630371
    9. '       ' → logprob: -22.12520408630371
    10. '  ' → logprob: -22.12520408630371

Token 1443: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '
' → logprob: -20.125
    4. '```' → logprob: -21.0
    5. '   ' → logprob: -21.125
    6. '+' → logprob: -22.875
    7. '۱' → logprob: -23.25
    8. '=' → logprob: -23.625
    9. '１' → logprob: -24.0
    10. '<|end|>' → logprob: -24.375

Token 1444: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -20.000003814697266
    4. '
' → logprob: -20.125003814697266
    5. '```' → logprob: -20.375003814697266
    6. '１' → logprob: -22.000003814697266
    7. '2' → logprob: -22.062503814697266
    8. '۱' → logprob: -22.125003814697266
    9. '+' → logprob: -22.437503814697266
    10. '=' → logprob: -22.625003814697266

Token 1445: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005992617807351053
    2. '
' → logprob: -7.875599384307861
    3. 'return' → logprob: -9.750598907470703
    4. '       ' → logprob: -10.250598907470703
    5. '            
' → logprob: -10.375598907470703
    6. ' and' → logprob: -10.625598907470703
    7. ',' → logprob: -11.000598907470703
    8. '               ' → logprob: -11.250598907470703
    9. '<|end|>' → logprob: -11.500598907470703
    10. ' 
' → logprob: -12.625598907470703

Token 1446: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007578118238598108
    2. '       ' → logprob: -7.500757694244385
    3. 'raise' → logprob: -9.625758171081543
    4. 'return' → logprob: -10.000758171081543
    5. '
' → logprob: -10.375758171081543
    6. '            
' → logprob: -11.500758171081543
    7. 'self' → logprob: -11.625758171081543
    8. '               ' → logprob: -11.750758171081543
    9. ' raise' → logprob: -12.125758171081543
    10. '<|end|>' → logprob: -12.500758171081543

Token 1447: ' return' (ID: 622)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.06625624001026154
    2. 'return' (adapté à ' return') → logprob: -2.816256284713745
    3. ' raise' → logprob: -5.691256046295166
    4. 'continue' → logprob: -7.441256046295166
    5. '           ' → logprob: -8.316256523132324
    6. '       ' → logprob: -10.566256523132324
    7. 'self' → logprob: -10.816256523132324
    8. ' return' → logprob: -11.816256523132324
    9. '	raise' → logprob: -12.566256523132324
    10. '```' → logprob: -12.566256523132324

Token 1448: ' self' (ID: 1051)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.1472214162349701
    2. '0' → logprob: -2.647221326828003
    3. 'self' → logprob: -3.147221326828003
    4. ' None' → logprob: -4.397221565246582
    5. '()' → logprob: -5.522221565246582
    6. '(None' → logprob: -5.897221565246582
    7. '(' → logprob: -6.147221565246582
    8. ' ' → logprob: -7.897221565246582
    9. ' self' → logprob: -8.272221565246582
    10. '(self' → logprob: -8.522221565246582

Token 1449: '.__' (ID: 10210)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.26996463537216187
    2. ',' → logprob: -2.3949646949768066
    3. ' None' → logprob: -2.7699646949768066
    4. '(None' → logprob: -3.5199646949768066
    5. ',None' → logprob: -4.394964694976807
    6. '
' → logprob: -4.394964694976807
    7. '(' → logprob: -5.019964694976807
    8. '\n' → logprob: -5.394964694976807
    9. '()' → logprob: -5.519964694976807
    10. ' (' → logprob: -5.769964694976807

Token 1450: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: 0.0
    2. '
' → logprob: -17.5
    3. '_next' → logprob: -18.375
    4. ' next' → logprob: -18.5
    5. '(next' → logprob: -19.125
    6. '.next' → logprob: -20.625
    7. '	next' → logprob: -21.0
    8. 'iter' → logprob: -21.0
    9. 'not' → logprob: -21.25
    10. 'none' → logprob: -22.0

Token 1451: '__()

' (ID: 165037)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16034018993377686
    2. '()
' → logprob: -1.9103401899337769
    3. '()

' → logprob: -9.285340309143066
    4. '(
' → logprob: -12.160340309143066
    5. '()`' → logprob: -12.160340309143066
    6. '()
' → logprob: -12.285340309143066
    7. '__()
' → logprob: -12.785340309143066
    8. '(' → logprob: -12.785340309143066
    9. ' ()' → logprob: -14.285340309143066
    10. '|()
' → logprob: -14.535340309143066

Token 1452: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002992678200826049
    2. 'if' → logprob: -6.002992630004883
    3. 'self' → logprob: -8.627992630004883
    4. '```' → logprob: -8.627992630004883
    5. 'tokens' → logprob: -10.127992630004883
    6. '        
' → logprob: -10.877992630004883
    7. ' if' → logprob: -11.252992630004883
    8. 'token' → logprob: -11.377992630004883
    9. 'line' → logprob: -11.502992630004883
    10. 'piece' → logprob: -11.877992630004883

Token 1453: ' n' (ID: 297)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.9611150622367859
    2. 'parts' → logprob: -1.2111151218414307
    3. 'n' (adapté à ' n') → logprob: -1.8361151218414307
    4. 'W' → logprob: -2.9611151218414307
    5. 'width' → logprob: -3.0861151218414307
    6. 'initial' → logprob: -3.2111151218414307
    7. 'tokens' → logprob: -4.961114883422852
    8. 'if' → logprob: -5.211114883422852
    9. 'dims' → logprob: -5.836114883422852
    10. '       ' → logprob: -6.211114883422852

Token 1454: 'wd' (ID: 11252)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21421770751476288
    2. ' =' → logprob: -1.9642176628112793
    3. '=' → logprob: -3.7142176628112793
    4. ' ,' → logprob: -4.839217662811279
    5. '_' → logprob: -5.089217662811279
    6. '_,' → logprob: -5.589217662811279
    7. ')' → logprob: -6.339217662811279
    8. '   ' → logprob: -6.589217662811279
    9. '_lines' → logprob: -6.714217662811279
    10. '_parts' → logprob: -6.964217662811279

Token 1455: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07305892556905746
    2. ' =' → logprob: -2.823058843612671
    3. '=' → logprob: -4.82305908203125
    4. '_tokens' → logprob: -6.32305908203125
    5. '_str' → logprob: -8.19805908203125
    6. '_line' → logprob: -8.57305908203125
    7. '_parts' → logprob: -8.57305908203125
    8. '_,' → logprob: -8.57305908203125
    9. ' ,' → logprob: -9.57305908203125
    10. 's' → logprob: -9.82305908203125

Token 1456: ' line' (ID: 2543)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.05045679956674576
    2. 'line' → logprob: -3.0504567623138428
    3. 'tuple' → logprob: -6.550457000732422
    4. ' list' → logprob: -7.925457000732422
    5. '[line' → logprob: -9.925457000732422
    6. ' line' → logprob: -11.175457000732422
    7. ' tuple' → logprob: -11.550457000732422
    8. '[list' → logprob: -12.925457000732422
    9. '[' → logprob: -13.675457000732422
    10. 'self' → logprob: -14.925457000732422

Token 1457: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.4798229932785034
    2. ' =' → logprob: -1.2298229932785034
    3. '=' → logprob: -2.479823112487793
    4. '.' → logprob: -5.354823112487793
    5. '_tokens' → logprob: -9.479823112487793
    6. 'split' → logprob: -9.479823112487793
    7. ' .' → logprob: -10.229823112487793
    8. 'tokens' → logprob: -10.479823112487793
    9. '.strip' → logprob: -11.354823112487793
    10. '[' → logprob: -11.604823112487793

Token 1458: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002286886883666739
    2. '()
' → logprob: -8.875228881835938
    3. '('' → logprob: -9.500228881835938
    4. '()[' → logprob: -12.125228881835938
    5. '()]' → logprob: -12.500228881835938
    6. '(' → logprob: -13.250228881835938
    7. '())' → logprob: -13.750228881835938
    8. '()

' → logprob: -14.375228881835938
    9. '();' → logprob: -15.375228881835938
    10. '()=>' → logprob: -15.375228881835938

Token 1459: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16154341399669647
    2. '[' → logprob: -2.661543369293213
    3. '[n' → logprob: -3.661543369293213
    4. '       ' → logprob: -4.161543369293213
    5. ' =' → logprob: -4.411543369293213
    6. 'n' → logprob: -5.286543369293213
    7. 'if' → logprob: -5.286543369293213
    8. '[int' → logprob: -5.286543369293213
    9. ':' → logprob: -6.286543369293213
    10. '        
' → logprob: -6.661543369293213

Token 1460: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05876520276069641
    2. 'if' (adapté à ' if') → logprob: -3.933765172958374
    3. 'N' → logprob: -4.058765411376953
    4. 'self' → logprob: -4.683765411376953
    5. '       ' → logprob: -4.933765411376953
    6. 'w' → logprob: -5.808765411376953
    7. 'num' → logprob: -7.933765411376953
    8. 'return' → logprob: -8.683765411376953
    9. 'initial' → logprob: -9.433765411376953
    10. 'W' → logprob: -9.808765411376953

Token 1461: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00024263552040793002
    2. ' len' → logprob: -8.500242233276367
    3. 'self' → logprob: -10.375242233276367
    4. 'n' → logprob: -12.125242233276367
    5. '(len' → logprob: -13.625242233276367
    6. '	len' → logprob: -14.250242233276367
    7. 'not' → logprob: -15.125242233276367
    8. '           ' → logprob: -15.500242233276367
    9. '       ' → logprob: -16.375242233276367
    10. '=len' → logprob: -17.375242233276367

Token 1462: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.014592514373362064
    2. 'n' → logprob: -4.26459264755249
    3. '<n' → logprob: -7.88959264755249
    4. '==' → logprob: -10.639592170715332
    5. '!=' → logprob: -11.639592170715332
    6. '(' → logprob: -12.264592170715332
    7. '	n' → logprob: -12.514592170715332
    8. '[n' → logprob: -12.639592170715332
    9. ')n' → logprob: -13.264592170715332
    10. '<' → logprob: -13.639592170715332

Token 1463: 'wd' (ID: 11252)
  Prédit: 'wd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wd' → logprob: -0.4443797767162323
    2. 'w' → logprob: -1.1943798065185547
    3. '==' → logprob: -3.3193798065185547
    4. 'n' → logprob: -4.069379806518555
    5. '[' → logprob: -7.444379806518555
    6. '[n' → logprob: -8.069379806518555
    7. ')' → logprob: -8.194379806518555
    8. '!=' → logprob: -8.319379806518555
    9. '=' → logprob: -8.569379806518555
    10. '>' → logprob: -8.694379806518555

Token 1464: ')' (ID: 8)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.2872048318386078
    2. '==' → logprob: -1.5372048616409302
    3. ' !=' → logprob: -3.6622047424316406
    4. '[' → logprob: -5.287204742431641
    5. '<' → logprob: -6.537204742431641
    6. ' ==' → logprob: -6.912204742431641
    7. '>' → logprob: -8.66220474243164
    8. ')' → logprob: -8.78720474243164
    9. ')!=' → logprob: -8.78720474243164
    10. '<=' → logprob: -8.91220474243164

Token 1465: ' <' (ID: 464)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.024749871343374252
    2. '==' → logprob: -4.524749755859375
    3. ' !=' → logprob: -4.899749755859375
    4. '<' → logprob: -5.149749755859375
    5. '[' → logprob: -8.274749755859375
    6. '!==' → logprob: -10.524749755859375
    7. '<=' → logprob: -11.524749755859375
    8. ' ==' → logprob: -11.524749755859375
    9. ')!=' → logprob: -11.649749755859375
    10. '```' → logprob: -11.774749755859375

Token 1466: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00034380643046461046
    2. '2' → logprob: -8.250344276428223
    3. '1' → logprob: -10.000344276428223
    4. ' ' → logprob: -10.375344276428223
    5. '4' → logprob: -12.375344276428223
    6. '=' → logprob: -13.625344276428223
    7. '
' → logprob: -15.250344276428223
    8. '>' → logprob: -16.000343322753906
    9. '```' → logprob: -16.937843322753906
    10. 'n' → logprob: -17.187843322753906

Token 1467: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.001985852373763919
    2. '1' → logprob: -6.251986026763916
    3. '2' → logprob: -10.126985549926758
    4. ' ' → logprob: -11.501985549926758
    5. '=' → logprob: -12.626985549926758
    6. '4' → logprob: -12.876985549926758
    7. '>' → logprob: -14.751985549926758
    8. '```' → logprob: -15.689485549926758
    9. 'n' → logprob: -15.814485549926758
    10. '
' → logprob: -16.501985549926758

Token 1468: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.557714581489563
    2. ':' → logprob: -1.057714581489563
    3. ' or' → logprob: -2.9327144622802734
    4. '           ' → logprob: -3.9327144622802734
    5. ' and' → logprob: -5.932714462280273
    6. '       ' → logprob: -6.557714462280273
    7. ':return' → logprob: -6.807714462280273
    8. 'and' → logprob: -7.307714462280273
    9. 'or' → logprob: -7.432714462280273
    10. '[' → logprob: -7.932714462280273

Token 1469: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011362569406628609
    2. 'self' → logprob: -4.886362552642822
    3. 'return' → logprob: -6.511362552642822
    4. 'w' → logprob: -7.136362552642822
    5. 'n' → logprob: -7.261362552642822
    6. 'raise' → logprob: -8.01136302947998
    7. '       ' → logprob: -9.13636302947998
    8. '   ' → logprob: -9.38636302947998
    9. ' self' → logprob: -9.88636302947998
    10. '               ' → logprob: -10.13636302947998

Token 1470: ' self' (ID: 1051)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.4787612855434418
    2. 'self' (adapté à ' self') → logprob: -0.9787613153457642
    3. '           ' → logprob: -5.853761196136475
    4. 'return' → logprob: -6.478761196136475
    5. 'continue' → logprob: -8.853761672973633
    6. ' raise' → logprob: -9.228761672973633
    7. 'break' → logprob: -11.228761672973633
    8. '               ' → logprob: -11.978761672973633
    9. ' self' → logprob: -12.603761672973633
    10. '       ' → logprob: -13.228761672973633

Token 1471: '.index' (ID: 9736)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3722948133945465
    2. '+=' → logprob: -2.3722949028015137
    3. '.raise' → logprob: -2.8722949028015137
    4. 'index' → logprob: -3.8722949028015137
    5. '._' → logprob: -3.8722949028015137
    6. '.return' → logprob: -3.9972949028015137
    7. '   ' → logprob: -4.122294902801514
    8. '.index' → logprob: -4.372294902801514
    9. 'return' → logprob: -4.497294902801514
    10. '=' → logprob: -4.872294902801514

Token 1472: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.25420302152633667
    2. ' +=' → logprob: -1.5042030811309814
    3. '           ' → logprob: -6.129202842712402
    4. '               ' → logprob: -10.129202842712402
    5. '            ' → logprob: -10.379202842712402
    6. '```' → logprob: -12.379202842712402
    7. '+' → logprob: -12.879202842712402
    8. '          ' → logprob: -13.004202842712402
    9. 'continue' → logprob: -13.004202842712402
    10. 'raise' → logprob: -13.254202842712402

Token 1473: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '
' → logprob: -17.375001907348633
    4. '3' → logprob: -17.875001907348633
    5. '   ' → logprob: -18.375001907348633
    6. '           ' → logprob: -18.875001907348633
    7. '       ' → logprob: -19.375001907348633
    8. 'return' → logprob: -20.125001907348633
    9. 'len' → logprob: -21.125001907348633
    10. 'continue' → logprob: -21.125001907348633

Token 1474: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. '
' → logprob: -15.875011444091797
    4. '3' → logprob: -16.000011444091797
    5. '2' → logprob: -17.000011444091797
    6. '   ' → logprob: -18.375011444091797
    7. 'len' → logprob: -18.625011444091797
    8. 'continue' → logprob: -19.375011444091797
    9. '0' → logprob: -19.500011444091797
    10. 'return' → logprob: -19.562511444091797

Token 1475: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001479625003412366
    2. '       ' → logprob: -7.126479625701904
    3. '               ' → logprob: -7.751479625701904
    4. 'return' → logprob: -9.001479148864746
    5. '
' → logprob: -10.876479148864746
    6. '		' → logprob: -11.001479148864746
    7. '          ' → logprob: -11.001479148864746
    8. '   ' → logprob: -11.126479148864746
    9. '	       ' → logprob: -12.001479148864746
    10. 'raise' → logprob: -12.001479148864746

Token 1476: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.433829159708694e-05
    2. '       ' → logprob: -10.75007438659668
    3. '               ' → logprob: -10.87507438659668
    4. 'return' → logprob: -11.37507438659668
    5. 'continue' → logprob: -12.00007438659668
    6. 'raise' → logprob: -12.25007438659668
    7. '```' → logprob: -12.75007438659668
    8. '          ' → logprob: -13.12507438659668
    9. '   ' → logprob: -13.62507438659668
    10. '         ' → logprob: -13.87507438659668

Token 1477: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25320979952812195
    2. 'raise' → logprob: -1.5032098293304443
    3. 'continue' → logprob: -6.753209590911865
    4. '           ' → logprob: -9.253210067749023
    5. ' raise' → logprob: -11.253210067749023
    6. ' return' → logprob: -12.753210067749023
    7. '       ' → logprob: -14.378210067749023
    8. '
' → logprob: -15.378210067749023
    9. '```' → logprob: -16.003210067749023
    10. '            
' → logprob: -17.253210067749023

Token 1478: ' self' (ID: 1051)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.7494242191314697
    2. 'self' → logprob: -1.1244242191314697
    3. '0' → logprob: -1.7494242191314697
    4. '(' → logprob: -3.7494242191314697
    5. '(None' → logprob: -6.124423980712891
    6. '
' → logprob: -7.249423980712891
    7. ' None' → logprob: -7.374423980712891
    8. 'next' → logprob: -7.499423980712891
    9. '(self' → logprob: -7.749423980712891
    10. ' self' → logprob: -7.999423980712891

Token 1479: '.__' (ID: 10210)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2392040342092514
    2. '.__' → logprob: -2.114203929901123
    3. '0' → logprob: -2.489203929901123
    4. ' ' → logprob: -6.364203929901123
    5. ' __' → logprob: -6.364203929901123
    6. '(' → logprob: -6.489203929901123
    7. 'None' → logprob: -6.614203929901123
    8. 'next' → logprob: -6.989203929901123
    9. ' next' → logprob: -8.114204406738281
    10. '.next' → logprob: -8.489204406738281

Token 1480: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -9.253090865968261e-06
    2. 'Next' → logprob: -12.750009536743164
    3. ' next' → logprob: -13.000009536743164
    4. '(next' → logprob: -13.375009536743164
    5. 'continue' → logprob: -13.750009536743164
    6. '_next' → logprob: -14.750009536743164
    7. 'None' → logprob: -15.000009536743164
    8. '
' → logprob: -15.375009536743164
    9. 'none' → logprob: -15.875009536743164
    10. '.next' → logprob: -15.875009536743164

Token 1481: '__()

' (ID: 165037)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009764790302142501
    2. '()
' → logprob: -7.1259765625
    3. '()

' → logprob: -8.7509765625
    4. '()`' → logprob: -12.0009765625
    5. '()"' → logprob: -13.3759765625
    6. '()]' → logprob: -13.3759765625
    7. '(' → logprob: -13.5009765625
    8. '()[' → logprob: -14.3759765625
    9. ' ()' → logprob: -14.8759765625
    10. '__()
' → logprob: -15.2509765625

Token 1482: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038786965887993574
    2. 'self' → logprob: -7.378878593444824
    3. '```' → logprob: -7.378878593444824
    4. ',' → logprob: -7.628878593444824
    5. 'n' → logprob: -7.628878593444824
    6. '[
' → logprob: -8.003878593444824
    7. '        
' → logprob: -8.378878593444824
    8. '[' → logprob: -8.628878593444824
    9. '``' → logprob: -9.128878593444824
    10. ' ' → logprob: -9.253878593444824

Token 1483: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.05158858373761177
    2. 'N' → logprob: -3.676588535308838
    3. 'w' → logprob: -4.176588535308838
    4. '       ' → logprob: -5.551588535308838
    5. 'width' → logprob: -6.301588535308838
    6. 'W' → logprob: -6.676588535308838
    7. 'initial' → logprob: -6.801588535308838
    8. '           ' → logprob: -7.051588535308838
    9. 'self' → logprob: -8.926589012145996
    10. ' n' → logprob: -9.051589012145996

Token 1484: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4762265086174011
    2. '=' → logprob: -1.226226568222046
    3. ' =' → logprob: -2.476226568222046
    4. '=int' → logprob: -8.101226806640625
    5. ' ,' → logprob: -8.976226806640625
    6. '_,' → logprob: -8.976226806640625
    7. '_' → logprob: -9.351226806640625
    8. 'w' → logprob: -9.351226806640625
    9. '   ' → logprob: -9.351226806640625
    10. '=
' → logprob: -9.726226806640625

Token 1485: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.023052936419844627
    2. ' w' → logprob: -3.898052930831909
    3. 'wd' → logprob: -6.523053169250488
    4. 'initial' → logprob: -7.148053169250488
    5. ' initial' → logprob: -9.023053169250488
    6. 'W' → logprob: -10.148053169250488
    7. '   ' → logprob: -10.398053169250488
    8. ' wd' → logprob: -11.023053169250488
    9. 'self' → logprob: -11.148053169250488
    10. '       ' → logprob: -12.273053169250488

Token 1486: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008726324886083603
    2. '=' → logprob: -8.125872611999512
    3. ' ,' → logprob: -8.125872611999512
    4. ',d' → logprob: -8.375872611999512
    5. '<|end|>' → logprob: -11.250872611999512
    6. ' =' → logprob: -11.375872611999512
    7. ',
' → logprob: -11.750872611999512
    8. 'd' → logprob: -12.375872611999512
    9. ',int' → logprob: -12.625872611999512
    10. ',n' → logprob: -13.500872611999512

Token 1487: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00462154159322381
    2. ' d' → logprob: -5.379621505737305
    3. '   ' → logprob: -14.504621505737305
    4. ' ' → logprob: -15.254621505737305
    5. '=' → logprob: -15.379621505737305
    6. '       ' → logprob: -16.129621505737305
    7. ' =' → logprob: -16.254621505737305
    8. '
' → logprob: -17.504621505737305
    9. '  ' → logprob: -17.629621505737305
    10. 'depth' → logprob: -17.629621505737305

Token 1488: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47413164377212524
    2. ' =' → logprob: -0.9741316437721252
    3. ',' → logprob: -10.09913158416748
    4. '=int' → logprob: -12.59913158416748
    5. '=
' → logprob: -12.84913158416748
    6. '=self' → logprob: -13.47413158416748
    7. ' =
' → logprob: -13.59913158416748
    8. '<|end|>' → logprob: -13.59913158416748
    9. ')' → logprob: -13.84913158416748
    10. ' ' → logprob: -14.72413158416748

Token 1489: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.14502295851707458
    2. ' map' → logprob: -2.3950228691101074
    3. 'int' → logprob: -3.1450228691101074
    4. ' int' → logprob: -7.895022869110107
    5. '[int' → logprob: -8.020023345947266
    6. '(map' → logprob: -9.895023345947266
    7. '(int' → logprob: -11.770023345947266
    8. 'list' → logprob: -15.145023345947266
    9. '[' → logprob: -15.395023345947266
    10. 'n' → logprob: -15.645023345947266

Token 1490: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3132651150226593
    2. 'int' → logprob: -1.313265085220337
    3. '[int' → logprob: -12.938264846801758
    4. '   ' → logprob: -14.813264846801758
    5. ' int' → logprob: -15.438264846801758
    6. '(' → logprob: -16.313264846801758
    7. '
' → logprob: -16.438264846801758
    8. '=int' → logprob: -16.563264846801758
    9. '```' → logprob: -16.563264846801758
    10. '(
' → logprob: -16.688264846801758

Token 1491: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06835518777370453
    2. 'n' → logprob: -2.818355083465576
    3. ',' → logprob: -5.318355083465576
    4. ',n' → logprob: -6.693355083465576
    5. ')' → logprob: -8.693355560302734
    6. ')n' → logprob: -10.568355560302734
    7. '(' → logprob: -10.943355560302734
    8. '[n' → logprob: -12.318355560302734
    9. ' n' → logprob: -12.693355560302734
    10. ')(' → logprob: -13.068355560302734

Token 1492: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001589618914294988
    2. ' n' → logprob: -8.75015926361084
    3. '(n' → logprob: -16.000158309936523
    4. '	n' → logprob: -16.250158309936523
    5. '
' → logprob: -16.625158309936523
    6. '[n' → logprob: -16.625158309936523
    7. '   ' → logprob: -17.500158309936523
    8. ')n' → logprob: -18.250158309936523
    9. '       ' → logprob: -18.875158309936523
    10. '_n' → logprob: -19.125158309936523

Token 1493: 'wd' (ID: 11252)
  Prédit: 'wd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wd' → logprob: -0.12302204966545105
    2. '(self' → logprob: -3.2480220794677734
    3. ')' → logprob: -4.123022079467773
    4. '(n' → logprob: -4.248022079467773
    5. 'w' → logprob: -4.373022079467773
    6. 'WD' → logprob: -4.623022079467773
    7. '_w' → logprob: -5.248022079467773
    8. '[n' → logprob: -5.373022079467773
    9. '[' → logprob: -5.498022079467773
    10. 'Wd' → logprob: -5.998022079467773

Token 1494: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013409387320280075
    2. '[:' → logprob: -4.638409614562988
    3. ')
' → logprob: -6.138409614562988
    4. '[self' → logprob: -7.638409614562988
    5. '[n' → logprob: -7.888409614562988
    6. 'self' → logprob: -8.638409614562988
    7. '[' → logprob: -8.638409614562988
    8. ')n' → logprob: -8.638409614562988
    9. '),' → logprob: -10.263409614562988
    10. '(n' → logprob: -11.013409614562988

Token 1495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014001218369230628
    2. 'self' → logprob: -9.250140190124512
    3. '```' → logprob: -10.625140190124512
    4. '   ' → logprob: -12.500140190124512
    5. '<|end|>' → logprob: -12.750140190124512
    6. '        
' → logprob: -12.750140190124512
    7. '
' → logprob: -12.875140190124512
    8. ',' → logprob: -13.000140190124512
    9. '           ' → logprob: -13.625140190124512
    10. '[self' → logprob: -14.500140190124512

Token 1496: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7342590093612671
    2. 'self' (adapté à ' self') → logprob: -0.7342590093612671
    3. 'if' → logprob: -3.9842591285705566
    4. 'cuts' → logprob: -4.359259128570557
    5. 'cut' → logprob: -6.484259128570557
    6. 'ops' → logprob: -6.609259128570557
    7. '```' → logprob: -6.609259128570557
    8. 'instructions' → logprob: -6.859259128570557
    9. 'commands' → logprob: -7.109259128570557
    10. 'cmd' → logprob: -7.359259128570557

Token 1497: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.0013197619700804353
    2. 'index' → logprob: -6.751319885253906
    3. '.' → logprob: -9.626319885253906
    4. '.lines' → logprob: -10.251319885253906
    5. ':index' → logprob: -10.876319885253906
    6. '	index' → logprob: -12.126319885253906
    7. '_index' → logprob: -12.376319885253906
    8. '```' → logprob: -12.501319885253906
    9. '=index' → logprob: -12.501319885253906
    10. '   ' → logprob: -12.876319885253906

Token 1498: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.026310166344046593
    2. ' +=' → logprob: -3.6513102054595947
    3. ']+=' → logprob: -12.276309967041016
    4. '       ' → logprob: -13.276309967041016
    5. '   ' → logprob: -13.776309967041016
    6. '+' → logprob: -14.026309967041016
    7. '=' → logprob: -14.651309967041016
    8. '```' → logprob: -15.276309967041016
    9. '    ' → logprob: -15.526309967041016
    10. '<|end|>' → logprob: -15.901309967041016

Token 1499: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.849109119386412e-06
    2. ' ' → logprob: -11.875009536743164
    3. '0' → logprob: -12.875009536743164
    4. '3' → logprob: -16.750009536743164
    5. '```' → logprob: -16.875009536743164
    6. '
' → logprob: -17.000009536743164
    7. '   ' → logprob: -17.250009536743164
    8. 'n' → logprob: -17.500009536743164
    9. '2' → logprob: -18.000009536743164
    10. '#' → logprob: -19.750009536743164

Token 1500: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '0' → logprob: -14.500000953674316
    3. ' ' → logprob: -15.875000953674316
    4. '```' → logprob: -19.0
    5. '3' → logprob: -19.625
    6. '
' → logprob: -19.75
    7. '2' → logprob: -20.25
    8. 'n' → logprob: -20.25
    9. 'len' → logprob: -20.75
    10. '   ' → logprob: -21.25

Token 1501: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06259807199239731
    2. 'cuts' → logprob: -2.9375979900360107
    3. 'cut' → logprob: -5.56259822845459
    4. 'if' → logprob: -7.31259822845459
    5. 'instructions' → logprob: -7.31259822845459
    6. 'commands' → logprob: -8.06259822845459
    7. 'moves' → logprob: -8.18759822845459
    8. 'actions' → logprob: -8.18759822845459
    9. 'c' → logprob: -8.43759822845459
    10. '
' → logprob: -8.56259822845459

Token 1502: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16105015575885773
    2. 'cuts' → logprob: -2.0360500812530518
    3. '```' → logprob: -5.036050319671631
    4. 'cut' → logprob: -5.161050319671631
    5. 'commands' → logprob: -6.911050319671631
    6. 'actions' → logprob: -7.286050319671631
    7. 'ops' → logprob: -7.286050319671631
    8. 'q' → logprob: -7.661050319671631
    9. 'moves' → logprob: -7.661050319671631
    10. 'instructions' → logprob: -7.786050319671631

Token 1503: ' if' (ID: 538)
  Prédit: 'cuts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cuts' → logprob: -0.2879719138145447
    2. '       ' → logprob: -2.1629719734191895
    3. 'm' → logprob: -2.9129719734191895
    4. 'k' → logprob: -3.4129719734191895
    5. 'commands' → logprob: -4.4129719734191895
    6. 'cut' → logprob: -4.6629719734191895
    7. 'q' → logprob: -4.7879719734191895
    8. 'operations' → logprob: -5.6629719734191895
    9. 'instructions' → logprob: -5.6629719734191895
    10. 'queries' → logprob: -6.1629719734191895

Token 1504: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0027272517327219248
    2. ' n' → logprob: -6.002727031707764
    3. 'self' → logprob: -9.377727508544922
    4. 'not' → logprob: -9.502727508544922
    5. '   ' → logprob: -10.252727508544922
    6. ' not' → logprob: -10.877727508544922
    7. '
' → logprob: -11.877727508544922
    8. 'w' → logprob: -11.877727508544922
    9. '       ' → logprob: -12.002727508544922
    10. 'cut' → logprob: -12.752727508544922

Token 1505: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.26630914211273193
    2. '==' → logprob: -1.641309142112732
    3. ' <=' → logprob: -4.2663092613220215
    4. '>' → logprob: -4.7663092613220215
    5. ' >' → logprob: -5.0163092613220215
    6. '<=' → logprob: -5.1413092613220215
    7. ' <' → logprob: -6.1413092613220215
    8. '=' → logprob: -7.3913092613220215
    9. '   ' → logprob: -7.5163092613220215
    10. '       ' → logprob: -7.6413092613220215

Token 1506: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.815280696377158e-05
    2. ' ' → logprob: -9.500078201293945
    3. '1' → logprob: -12.875078201293945
    4. '>' → logprob: -15.125078201293945
    5. '   ' → logprob: -15.625078201293945
    6. '-' → logprob: -16.625078201293945
    7. '2' → logprob: -17.500078201293945
    8. ')' → logprob: -17.500078201293945
    9. '```' → logprob: -17.625078201293945
    10. '  ' → logprob: -18.000078201293945

Token 1507: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.6060808522743173e-05
    2. ' ' → logprob: -10.875025749206543
    3. '-' → logprob: -11.875025749206543
    4. '1' → logprob: -16.62502670288086
    5. ' -' → logprob: -16.87502670288086
    6. '۰' → logprob: -19.06252670288086
    7. '   ' → logprob: -19.12502670288086
    8. '_' → logprob: -19.31252670288086
    9. '00' → logprob: -19.50002670288086
    10. '  ' → logprob: -19.62502670288086

Token 1508: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.19330447912216187
    2. ':' → logprob: -1.8183045387268066
    3. ':return' → logprob: -5.193304538726807
    4. '   ' → logprob: -5.693304538726807
    5. '       ' → logprob: -6.318304538726807
    6. ' and' → logprob: -6.568304538726807
    7. '           ' → logprob: -6.943304538726807
    8. ' or' → logprob: -8.318304061889648
    9. 'and' → logprob: -9.943304061889648
    10. ' ' → logprob: -10.568304061889648

Token 1509: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0040785204619169235
    2. ' w' → logprob: -5.504078388214111
    3. '0' → logprob: -16.879077911376953
    4. '	w' → logprob: -17.129077911376953
    5. '   ' → logprob: -17.629077911376953
    6. ' ' → logprob: -18.754077911376953
    7. '(w' → logprob: -19.379077911376953
    8. 'W' → logprob: -19.379077911376953
    9. '  ' → logprob: -19.754077911376953
    10. '
' → logprob: -19.754077911376953

Token 1510: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3868943452835083
    2. '==' → logprob: -1.1368943452835083
    3. ',' → logprob: -11.761894226074219
    4. ' ' → logprob: -11.761894226074219
    5. '=' → logprob: -13.261894226074219
    6. '0' → logprob: -13.261894226074219
    7. 'and' → logprob: -13.761894226074219
    8. '==
' → logprob: -14.136894226074219
    9. '===' → logprob: -14.261894226074219
    10. ' ' → logprob: -14.636894226074219

Token 1511: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.000123977661133
    3. 'd' → logprob: -16.000123977661133
    4. 'and' → logprob: -18.000123977661133
    5. '<|end|>' → logprob: -18.500123977661133
    6. ' and' → logprob: -19.062623977661133
    7. '   ' → logprob: -19.125123977661133
    8. '۰' → logprob: -19.375123977661133
    9. '<|end|>' → logprob: -19.375123977661133
    10. '  ' → logprob: -19.437623977661133

Token 1512: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. 'd' → logprob: -16.000009536743164
    4. '۰' → logprob: -17.875009536743164
    5. 'and' → logprob: -18.125009536743164
    6. '<|end|>' → logprob: -18.375009536743164
    7. '০' → logprob: -19.625009536743164
    8. ' and' → logprob: -19.687509536743164
    9. 'depth' → logprob: -19.812509536743164
    10. '   ' → logprob: -19.812509536743164

Token 1513: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25194087624549866
    2. 'and' → logprob: -1.5019408464431763
    3. '0' → logprob: -11.626940727233887
    4. ' ' → logprob: -13.501940727233887
    5. '==' → logprob: -14.001940727233887
    6. ',' → logprob: -15.876940727233887
    7. '	and' → logprob: -16.001941680908203
    8. '&&' → logprob: -16.376941680908203
    9. '   ' → logprob: -16.626941680908203
    10. '           ' → logprob: -16.626941680908203

Token 1514: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02976958453655243
    2. ' d' → logprob: -3.5297696590423584
    3. '0' → logprob: -10.904769897460938
    4. ' ' → logprob: -14.154769897460938
    5. '	d' → logprob: -18.779769897460938
    6. '_d' → logprob: -19.904769897460938
    7. '   ' → logprob: -20.029769897460938
    8. ' ' → logprob: -20.779769897460938
    9. '  ' → logprob: -21.279769897460938
    10. '
' → logprob: -21.654769897460938

Token 1515: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1602439284324646
    2. ' ==' → logprob: -1.9102439880371094
    3. '0' → logprob: -11.66024398803711
    4. '=' → logprob: -12.28524398803711
    5. ')==' → logprob: -12.66024398803711
    6. ' ' → logprob: -13.53524398803711
    7. '()==' → logprob: -14.28524398803711
    8. '==
' → logprob: -14.66024398803711
    9. ']==' → logprob: -14.78524398803711
    10. '===' → logprob: -15.53524398803711

Token 1516: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '<|end|>' → logprob: -20.75
    4. '۰' → logprob: -21.25
    5. '<|end|>' → logprob: -21.5
    6. '   ' → logprob: -22.875
    7. '০' → logprob: -24.0
    8. '  ' → logprob: -24.125
    9. '०' → logprob: -24.875
    10. '０' → logprob: -25.0

Token 1517: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '<|end|>' → logprob: -18.500001907348633
    4. '<|end|>' → logprob: -19.625001907348633
    5. '۰' → logprob: -19.875001907348633
    6. '   ' → logprob: -21.125001907348633
    7. ')' → logprob: -21.812501907348633
    8. '০' → logprob: -21.812501907348633
    9. '
' → logprob: -22.062501907348633
    10. '00' → logprob: -22.125001907348633

Token 1518: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03889070451259613
    2. '           ' → logprob: -3.7888906002044678
    3. ':' → logprob: -4.413890838623047
    4. ':return' → logprob: -6.038890838623047
    5. '       ' → logprob: -7.038890838623047
    6. ' and' → logprob: -9.538890838623047
    7. '   ' → logprob: -10.038890838623047
    8. 'return' → logprob: -11.288890838623047
    9. '():
' → logprob: -12.163890838623047
    10. '):
' → logprob: -12.163890838623047

Token 1519: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.392824874026701e-05
    2. '       ' → logprob: -11.00003433227539
    3. '          ' → logprob: -12.50003433227539
    4. '   ' → logprob: -12.75003433227539
    5. 'return' → logprob: -12.75003433227539
    6. '		' → logprob: -13.12503433227539
    7. ':
' → logprob: -13.50003433227539
    8. '               ' → logprob: -13.62503433227539
    9. '         ' → logprob: -14.12503433227539
    10. '                   ' → logprob: -14.75003433227539

Token 1520: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.0016318554989993572
    2. ' raise' → logprob: -6.751631736755371
    3. '           ' → logprob: -7.751631736755371
    4. 'return' → logprob: -10.751631736755371
    5. '	raise' → logprob: -12.001631736755371
    6. '
' → logprob: -12.501631736755371
    7. 'Raise' → logprob: -15.751631736755371
    8. '_raise' → logprob: -16.876632690429688
    9. 'raises' → logprob: -17.626632690429688
    10. '#' → logprob: -17.751632690429688

Token 1521: ' Stop' (ID: 22535)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -1.3306015716807451e-05
    2. ' Stop' → logprob: -11.25001335144043
    3. 'EOF' → logprob: -15.50001335144043
    4. 'Value' → logprob: -19.37501335144043
    5. '_Stop' → logprob: -19.50001335144043
    6. 'STOP' → logprob: -19.75001335144043
    7. '
' → logprob: -20.25001335144043
    8. 'System' → logprob: -20.50001335144043
    9. '_stop' → logprob: -20.62501335144043
    10. '   ' → logprob: -21.12501335144043

Token 1522: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -3.128163257315464e-07
    2. 'Iterator' → logprob: -15.875
    3. 'iteration' → logprob: -16.5
    4. 'Iter' → logprob: -17.375
    5. 'Iterations' → logprob: -17.5
    6. ' iteration' → logprob: -17.625
    7. '_iteration' → logprob: -17.75
    8. 'Exception' → logprob: -19.375
    9. 'Execution' → logprob: -19.5
    10. 'ter' → logprob: -19.875

Token 1523: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020917287096381187
    2. 'cuts' → logprob: -4.0209174156188965
    3. 'cut' → logprob: -6.2709174156188965
    4. '
' → logprob: -9.145916938781738
    5. 'ops' → logprob: -9.270916938781738
    6. '        
' → logprob: -9.270916938781738
    7. '```' → logprob: -9.270916938781738
    8. '   ' → logprob: -9.395916938781738
    9. 'n' → logprob: -9.770916938781738
    10. 'pieces' → logprob: -10.020916938781738

Token 1524: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29256248474121094
    2. 'cuts' → logprob: -1.417562484741211
    3. 'cut' → logprob: -5.292562484741211
    4. 'q' → logprob: -6.917562484741211
    5. 'instructions' → logprob: -6.917562484741211
    6. 'commands' → logprob: -7.167562484741211
    7. 'queries' → logprob: -7.417562484741211
    8. 'c' → logprob: -7.667562484741211
    9. 'n' → logprob: -7.917562484741211
    10. 'ops' → logprob: -8.042562484741211

Token 1525: ' cuts' (ID: 29505)
  Prédit: 'cuts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cuts' (adapté à ' cuts') → logprob: -0.058288946747779846
    2. '       ' → logprob: -3.558289051055908
    3. 'commands' → logprob: -4.308289051055908
    4. 'cut' → logprob: -5.308289051055908
    5. 'instructions' → logprob: -5.683289051055908
    6. 'operations' → logprob: -5.933289051055908
    7. 'ops' → logprob: -6.808289051055908
    8. 'queries' → logprob: -7.433289051055908
    9. 'moves' → logprob: -7.433289051055908
    10. 'actions' → logprob: -7.933289051055908

Token 1526: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0022699201945215464
    2. '=' → logprob: -6.127269744873047
    3. '=[]' → logprob: -9.877269744873047
    4. ':' → logprob: -11.252269744873047
    5. '       ' → logprob: -11.502269744873047
    6. '   ' → logprob: -12.377269744873047
    7. '        ' → logprob: -13.002269744873047
    8. '=[]
' → logprob: -13.377269744873047
    9. '    ' → logprob: -13.752269744873047
    10. '_list' → logprob: -15.127269744873047

Token 1527: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.47409260272979736
    2. '[]' → logprob: -0.9740926027297974
    3. ' []
' → logprob: -11.974092483520508
    4. ' []' → logprob: -12.224092483520508
    5. '[]

' → logprob: -12.724092483520508
    6. '[' → logprob: -13.974092483520508
    7. '[])
' → logprob: -15.974092483520508
    8. '[]"' → logprob: -16.099092483520508
    9. '[])' → logprob: -16.224092483520508
    10. '[
' → logprob: -16.474092483520508

Token 1528: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037395067047327757
    2. 'for' → logprob: -6.253739356994629
    3. 'while' → logprob: -6.503739356994629
    4. ' for' → logprob: -8.253739356994629
    5. ' while' → logprob: -11.253739356994629
    6. '   ' → logprob: -11.378739356994629
    7. '```' → logprob: -11.503739356994629
    8. '<|end|>' → logprob: -12.003739356994629
    9. '	while' → logprob: -12.878739356994629
    10. '	for' → logprob: -13.128739356994629

Token 1529: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002070206217467785
    2. '       ' → logprob: -6.502070426940918
    3. 'while' → logprob: -8.002070426940918
    4. ' for' → logprob: -8.377070426940918
    5. 'i' → logprob: -13.627070426940918
    6. 'count' → logprob: -14.252070426940918
    7. '	for' → logprob: -14.502070426940918
    8. 'num' → logprob: -15.252070426940918
    9. 'n' → logprob: -16.0020694732666
    10. ' while' → logprob: -17.5020694732666

Token 1530: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008639862760901451
    2. '_i' → logprob: -4.758639812469482
    3. 'i' → logprob: -11.25864028930664
    4. '_
' → logprob: -12.63364028930664
    5. '_range' → logprob: -12.75864028930664
    6. '_in' → logprob: -12.75864028930664
    7. ' _' → logprob: -14.00864028930664
    8. '_j' → logprob: -14.00864028930664
    9. '_=' → logprob: -15.63364028930664
    10. '_self' → logprob: -15.88364028930664

Token 1531: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.45700401067733765
    2. '_' → logprob: -1.2070040702819824
    3. 'in' → logprob: -2.7070040702819824
    4. 'i' → logprob: -6.957004070281982
    5. '_in' → logprob: -11.332003593444824
    6. 'range' → logprob: -11.707003593444824
    7. '_i' → logprob: -11.707003593444824
    8. ' ' → logprob: -12.207003593444824
    9. ' i' → logprob: -12.832003593444824
    10. '
' → logprob: -13.207003593444824

Token 1532: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.710618905955926e-05
    2. ' range' → logprob: -9.250097274780273
    3. '_' → logprob: -14.000097274780273
    4. '_range' → logprob: -16.500097274780273
    5. '
' → logprob: -17.250097274780273
    6. ' ' → logprob: -17.750097274780273
    7. '   ' → logprob: -17.875097274780273
    8. '  ' → logprob: -19.125097274780273
    9. '	range' → logprob: -19.250097274780273
    10. ')' → logprob: -21.125097274780273

Token 1533: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00020354038861114532
    2. 'n' → logprob: -8.500203132629395
    3. '(' → logprob: -17.37520408630371
    4. ' n' → logprob: -17.50020408630371
    5. '	n' → logprob: -18.37520408630371
    6. 'int' → logprob: -18.62520408630371
    7. ' (' → logprob: -18.87520408630371
    8. '   ' → logprob: -19.00020408630371
    9. '       ' → logprob: -19.62520408630371
    10. '_n' → logprob: -19.87520408630371

Token 1534: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20435269176959991
    2. '):' → logprob: -1.7043527364730835
    3. '       ' → logprob: -6.954352855682373
    4. '<|end|>' → logprob: -7.704352855682373
    5. ':' → logprob: -7.829352855682373
    6. '):
' → logprob: -8.079352378845215
    7. '   ' → logprob: -8.329352378845215
    8. ',' → logprob: -9.329352378845215
    9. ')' → logprob: -9.454352378845215
    10. '():
' → logprob: -9.704352378845215

Token 1535: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02999136969447136
    2. ' line' → logprob: -3.904991388320923
    3. 'line' → logprob: -4.779991149902344
    4. '	       ' → logprob: -8.279991149902344
    5. '	line' → logprob: -8.404991149902344
    6. '```' → logprob: -8.904991149902344
    7. '#line' → logprob: -9.279991149902344
    8. '_line' → logprob: -9.279991149902344
    9. '(line' → logprob: -9.529991149902344
    10. '[line' → logprob: -10.029991149902344

Token 1536: ' p' (ID: 275)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.056165166199207306
    2. 'cut' → logprob: -2.9311652183532715
    3. ' line' → logprob: -7.4311652183532715
    4. '           ' → logprob: -7.6811652183532715
    5. '	line' → logprob: -10.306164741516113
    6. ' cut' → logprob: -10.556164741516113
    7. '            
' → logprob: -10.806164741516113
    8. '(line' → logprob: -10.806164741516113
    9. '_line' → logprob: -10.931164741516113
    10. 'cuts' → logprob: -10.931164741516113

Token 1537: '_s' (ID: 1278)
  Prédit: 'iece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iece' → logprob: -0.2997771203517914
    2. '_id' → logprob: -1.9247771501541138
    3. '_line' → logprob: -3.174777030944824
    4. 'line' → logprob: -3.299777030944824
    5. ',' → logprob: -3.924777030944824
    6. 'id' → logprob: -5.424777030944824
    7. ' =' → logprob: -5.549777030944824
    8. 'piece' → logprob: -6.924777030944824
    9. '=line' → logprob: -7.174777030944824
    10. 'ie' → logprob: -7.424777030944824

Token 1538: '_line' (ID: 14418)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22653648257255554
    2. 'iece' → logprob: -2.851536512374878
    3. ' =' → logprob: -3.351536512374878
    4. '_id' → logprob: -3.601536512374878
    5. '_line' → logprob: -3.851536512374878
    6. 'line' → logprob: -3.851536512374878
    7. 'ie' → logprob: -4.601536273956299
    8. 'id' → logprob: -4.726536273956299
    9. '=' → logprob: -4.851536273956299
    10. '_,' → logprob: -5.976536273956299

Token 1539: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020782437175512314
    2. '=' → logprob: -3.895782470703125
    3. '=line' → logprob: -8.395782470703125
    4. '       ' → logprob: -12.270782470703125
    5. '=self' → logprob: -13.145782470703125
    6. '           ' → logprob: -13.395782470703125
    7. '	' → logprob: -13.770782470703125
    8. 'line' → logprob: -13.770782470703125
    9. '   ' → logprob: -14.020782470703125
    10. ' ' → logprob: -14.145782470703125

Token 1540: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007632889784872532
    2. ' self' → logprob: -4.882632732391357
    3. '           ' → logprob: -11.132633209228516
    4. '       ' → logprob: -11.757633209228516
    5. '
' → logprob: -13.382633209228516
    6. '   ' → logprob: -13.757633209228516
    7. 'input' → logprob: -15.007633209228516
    8. '(self' → logprob: -15.132633209228516
    9. '	self' → logprob: -15.632633209228516
    10. '               ' → logprob: -15.757633209228516

Token 1541: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.018178390339016914
    2. 'lines' → logprob: -4.018178462982178
    3. '	lines' → logprob: -10.89317798614502
    4. '(lines' → logprob: -12.14317798614502
    5. '.readlines' → logprob: -13.76817798614502
    6. '.' → logprob: -14.14317798614502
    7. ' lines' → logprob: -14.14317798614502
    8. '_lines' → logprob: -14.64317798614502
    9. '.readline' → logprob: -14.89317798614502
    10. '
' → logprob: -15.14317798614502

Token 1542: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.023281004279851913
    2. 'self' → logprob: -3.7732810974121094
    3. '           ' → logprob: -11.52328109741211
    4. '       ' → logprob: -11.52328109741211
    5. ' self' → logprob: -12.14828109741211
    6. '
' → logprob: -12.77328109741211
    7. '(self' → logprob: -12.89828109741211
    8. '   ' → logprob: -13.77328109741211
    9. '=self' → logprob: -13.89828109741211
    10. '               ' → logprob: -14.02328109741211

Token 1543: '.index' (ID: 9736)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.16043655574321747
    2. '.index' → logprob: -1.9104365110397339
    3. 'self' → logprob: -9.035436630249023
    4. '_index' → logprob: -9.410436630249023
    5. '	index' → logprob: -12.785436630249023
    6. ' index' → logprob: -12.910436630249023
    7. '```' → logprob: -13.910436630249023
    8. '
' → logprob: -14.035436630249023
    9. '__' → logprob: -14.160436630249023
    10. '   ' → logprob: -14.410436630249023

Token 1544: '].' (ID: 1651)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.4060470163822174
    2. '].' → logprob: -2.0310471057891846
    3. '[self' → logprob: -2.0310471057891846
    4. '           ' → logprob: -3.0310471057891846
    5. 'self' → logprob: -4.5310468673706055
    6. '.split' → logprob: -4.9060468673706055
    7. '.readline' → logprob: -5.9060468673706055
    8. '().' → logprob: -7.5310468673706055
    9. '.rstrip' → logprob: -7.9060468673706055
    10. '               ' → logprob: -7.9060468673706055

Token 1545: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -6.153795766294934e-06
    2. 'rstrip' → logprob: -12.750005722045898
    3. 'split' → logprob: -13.250005722045898
    4. '_strip' → logprob: -13.625005722045898
    5. ' strip' → logprob: -15.625005722045898
    6. '.strip' → logprob: -18.5000057220459
    7. 'index' → logprob: -19.0000057220459
    8. '-strip' → logprob: -19.6250057220459
    9. '
' → logprob: -19.8750057220459
    10. 'self' → logprob: -20.0000057220459

Token 1546: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008185334503650665
    2. '.split' → logprob: -5.633185386657715
    3. 'p' → logprob: -6.633185386657715
    4. ',' → logprob: -7.258185386657715
    5. '().' → logprob: -7.633185386657715
    6. '	       ' → logprob: -8.258185386657715
    7. '		' → logprob: -8.383185386657715
    8. '<|end|>' → logprob: -8.383185386657715
    9. '<|end|>' → logprob: -8.508185386657715
    10. ',p' → logprob: -8.633185386657715

Token 1547: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011246218346059322
    2. 'p' → logprob: -7.126124858856201
    3. 'self' → logprob: -8.126124382019043
    4. 'parts' → logprob: -11.251124382019043
    5. 'tokens' → logprob: -12.376124382019043
    6. '		' → logprob: -13.751124382019043
    7. '	       ' → logprob: -13.751124382019043
    8. '       ' → logprob: -14.376124382019043
    9. ' p' → logprob: -14.376124382019043
    10. ' self' → logprob: -14.501124382019043

Token 1548: ' self' (ID: 1051)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.028423873707652092
    2. 'piece' → logprob: -3.77842378616333
    3. '           ' → logprob: -5.65342378616333
    4. 'pid' → logprob: -7.15342378616333
    5. 'pi' → logprob: -8.278424263000488
    6. 'pieces' → logprob: -8.403424263000488
    7. 'self' (adapté à ' self') → logprob: -8.653424263000488
    8. 'parts' → logprob: -8.778424263000488
    9. 'idx' → logprob: -10.778424263000488
    10. 'pc' → logprob: -11.778424263000488

Token 1549: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.38707002997398376
    2. 'index' → logprob: -1.1370700597763062
    3. '_index' → logprob: -9.012069702148438
    4. '=index' → logprob: -9.887069702148438
    5. '	index' → logprob: -11.887069702148438
    6. '.' → logprob: -12.262069702148438
    7. ' index' → logprob: -12.637069702148438
    8. ':index' → logprob: -12.762069702148438
    9. ',index' → logprob: -13.512069702148438
    10. '._' → logprob: -13.637069702148438

Token 1550: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.010931799188256264
    2. ' +=' → logprob: -4.635931968688965
    3. '           ' → logprob: -6.760931968688965
    4. ']+=' → logprob: -12.135931968688965
    5. '+' → logprob: -13.135931968688965
    6. '            ' → logprob: -13.260931968688965
    7. '               ' → logprob: -13.260931968688965
    8. '            
' → logprob: -13.635931968688965
    9. '          ' → logprob: -13.760931968688965
    10. '		' → logprob: -13.760931968688965

Token 1551: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '
' → logprob: -18.875
    4. ')' → logprob: -20.5
    5. 'p' → logprob: -21.125
    6. '```' → logprob: -21.375
    7. '   ' → logprob: -21.5
    8. ',' → logprob: -23.25
    9. '=' → logprob: -23.25
    10. 'def' → logprob: -23.375

Token 1552: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '
' → logprob: -19.625
    4. '```' → logprob: -20.625
    5. '１' → logprob: -21.5
    6. '   ' → logprob: -21.625
    7. '=' → logprob: -22.25
    8. '۱' → logprob: -22.3125
    9. ')' → logprob: -22.5
    10. 's' → logprob: -22.75

Token 1553: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007305434555746615
    2. 'p' → logprob: -7.250730514526367
    3. ',' → logprob: -12.000730514526367
    4. '       ' → logprob: -12.125730514526367
    5. ',p' → logprob: -13.500730514526367
    6. 'tokens' → logprob: -13.750730514526367
    7. 'parts' → logprob: -13.875730514526367
    8. '		' → logprob: -14.000730514526367
    9. ' p' → logprob: -14.250730514526367
    10. '            
' → logprob: -14.500730514526367

Token 1554: '           ' (ID: 352)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.20353034138679504
    2. '           ' → logprob: -1.7035303115844727
    3. 'parts' → logprob: -6.703530311584473
    4. ' p' → logprob: -7.703530311584473
    5. '(p' → logprob: -8.953530311584473
    6. '       ' → logprob: -8.953530311584473
    7. ',p' → logprob: -10.328530311584473
    8. '```' → logprob: -10.703530311584473
    9. 'pieces' → logprob: -11.078530311584473
    10. 't' → logprob: -11.453530311584473

Token 1555: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.0182791780680418
    2. 'piece' → logprob: -4.393279075622559
    3. 'pi' → logprob: -5.643279075622559
    4. 'pid' → logprob: -6.143279075622559
    5. 'pie' → logprob: -11.018279075622559
    6. '           ' → logprob: -11.018279075622559
    7. 'pieces' → logprob: -11.268279075622559
    8. 'pc' → logprob: -12.268279075622559
    9. 'piec' → logprob: -12.393279075622559
    10. 'ps' → logprob: -13.518279075622559

Token 1556: '_i' (ID: 10853)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.3575221002101898
    2. ',' → logprob: -1.2325221300125122
    3. 's' → logprob: -5.357522010803223
    4. 'iece' → logprob: -5.982522010803223
    5. ',s' → logprob: -7.107522010803223
    6. 'ieces' → logprob: -7.482522010803223
    7. '_,' → logprob: -8.607522010803223
    8. '_id' → logprob: -8.982522010803223
    9. 'os' → logprob: -10.732522010803223
    10. '_str' → logprob: -10.857522010803223

Token 1557: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025008674710989
    2. ',s' → logprob: -6.627501010894775
    3. ' ,' → logprob: -7.502501010894775
    4. ',p' → logprob: -7.502501010894775
    5. '_,' → logprob: -10.502500534057617
    6. 's' → logprob: -11.252500534057617
    7. '_s' → logprob: -11.377500534057617
    8. ',
' → logprob: -12.752500534057617
    9. ',n' → logprob: -12.877500534057617
    10. ',t' → logprob: -13.377500534057617

Token 1558: ' s' (ID: 265)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.09185121208429337
    2. 'cut' → logprob: -2.966851234436035
    3. 'cs' → logprob: -3.966851234436035
    4. 's' → logprob: -4.091851234436035
    5. ' c' → logprob: -7.841851234436035
    6. ' cut' → logprob: -9.216851234436035
    7. 'start' → logprob: -9.466851234436035
    8. ' s' → logprob: -10.216851234436035
    9. ' cs' → logprob: -11.341851234436035
    10. 'pos' → logprob: -11.841851234436035

Token 1559: '_i' (ID: 10853)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3234163522720337
    2. ' =' → logprob: -1.8234163522720337
    3. '=' → logprob: -2.823416233062744
    4. '_start' → logprob: -3.948416233062744
    5. '_cut' → logprob: -4.073416233062744
    6. 'cut' → logprob: -4.573416233062744
    7. 'start' → logprob: -5.698416233062744
    8. ',' → logprob: -6.323416233062744
    9. '=cut' → logprob: -6.448416233062744
    10. '_' → logprob: -7.448416233062744

Token 1560: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01814994215965271
    2. ' =' → logprob: -4.0181498527526855
    3. ' ' → logprob: -17.643150329589844
    4. '＝' → logprob: -17.893150329589844
    5. '=line' → logprob: -18.018150329589844
    6. '=
' → logprob: -18.268150329589844
    7. ',' → logprob: -18.768150329589844
    8. '=int' → logprob: -19.018150329589844
    9. ')' → logprob: -19.268150329589844
    10. ')=' → logprob: -19.768150329589844

Token 1561: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0024756586644798517
    2. ' map' → logprob: -6.002475738525391
    3. 'tuple' → logprob: -18.50247573852539
    4. '           ' → logprob: -18.87747573852539
    5. 'p' → logprob: -19.25247573852539
    6. 'm' → logprob: -19.50247573852539
    7. '(map' → logprob: -19.87747573852539
    8. '	map' → logprob: -20.50247573852539
    9. '_map' → logprob: -20.87747573852539
    10. '
' → logprob: -21.25247573852539

Token 1562: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002614550176076591
    2. 'int' → logprob: -8.250261306762695
    3. '[int' → logprob: -15.750261306762695
    4. '=int' → logprob: -17.000261306762695
    5. '(
' → logprob: -17.875261306762695
    6. ' int' → logprob: -18.250261306762695
    7. '	int' → logprob: -18.875261306762695
    8. '```' → logprob: -19.000261306762695
    9. '<int' → logprob: -19.375261306762695
    10. '(' → logprob: -19.375261306762695

Token 1563: ',' (ID: 11)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.31878167390823364
    2. '(self' → logprob: -1.6937816143035889
    3. ',' → logprob: -2.568781614303589
    4. '           ' → logprob: -5.193781852722168
    5. ',p' → logprob: -5.693781852722168
    6. 'self' → logprob: -6.193781852722168
    7. '(' → logprob: -8.193781852722168
    8. '               ' → logprob: -8.193781852722168
    9. ',self' → logprob: -8.568781852722168
    10. 'p' → logprob: -8.568781852722168

Token 1564: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.512236498361744e-07
    2. ' p' → logprob: -14.500000953674316
    3. ')p' → logprob: -22.75
    4. '           ' → logprob: -22.875
    5. '_p' → logprob: -24.0
    6. '$p' → logprob: -24.875
    7. '(p' → logprob: -25.0
    8. ')' → logprob: -25.125
    9. '   ' → logprob: -25.5
    10. '
' → logprob: -26.125

Token 1565: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0029913706239312887
    2. '(p' → logprob: -6.377991199493408
    3. '_i' → logprob: -6.752991199493408
    4. 'p' → logprob: -9.877991676330566
    5. '_p' → logprob: -11.002991676330566
    6. 's' → logprob: -11.252991676330566
    7. '(_' → logprob: -11.877991676330566
    8. ')' → logprob: -12.002991676330566
    9. '(' → logprob: -12.252991676330566
    10. '._' → logprob: -12.627991676330566

Token 1566: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0047597684897482395
    2. 'line' → logprob: -5.629759788513184
    3. ')' → logprob: -8.004759788513184
    4. '_i' → logprob: -8.254759788513184
    5. ')_' → logprob: -8.379759788513184
    6. '_lines' → logprob: -8.504759788513184
    7. 'ine' → logprob: -10.129759788513184
    8. 'Line' → logprob: -10.629759788513184
    9. '           ' → logprob: -11.629759788513184
    10. 'i' → logprob: -12.129759788513184

Token 1567: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.03557810187339783
    2. '().' → logprob: -3.5355780124664307
    3. '.strip' → logprob: -5.16057825088501
    4. '.' → logprob: -10.035577774047852
    5. ' .' → logprob: -10.785577774047852
    6. '           ' → logprob: -12.785577774047852
    7. '.rstrip' → logprob: -13.410577774047852
    8. 'split' → logprob: -14.160577774047852
    9. '.readline' → logprob: -14.160577774047852
    10. '()
' → logprob: -15.035577774047852

Token 1568: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0313020758330822
    2. '())
' → logprob: -3.781301975250244
    3. ')' → logprob: -5.531301975250244
    4. '()' → logprob: -5.531301975250244
    5. '(' → logprob: -10.156302452087402
    6. ')
' → logprob: -10.281302452087402
    7. '()
' → logprob: -11.031302452087402
    8. '('' → logprob: -12.031302452087402
    9. '())
' → logprob: -12.406302452087402
    10. ' ())' → logprob: -14.281302452087402

Token 1569: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.7372048862162046e-05
    2. '       ' → logprob: -10.875027656555176
    3. '          ' → logprob: -13.250027656555176
    4. '<|end|>' → logprob: -13.250027656555176
    5. '               ' → logprob: -13.750027656555176
    6. 'cuts' → logprob: -14.000027656555176
    7. '		' → logprob: -14.125027656555176
    8. '   ' → logprob: -14.250027656555176
    9. '         ' → logprob: -15.000027656555176
    10. '<|end|>' → logprob: -15.125027656555176

Token 1570: ' cuts' (ID: 29505)
  Prédit: 'cuts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cuts' (adapté à ' cuts') → logprob: -0.01702292263507843
    2. '           ' → logprob: -4.142023086547852
    3. ' cuts' → logprob: -7.017023086547852
    4. '       ' → logprob: -9.517023086547852
    5. 'cut' → logprob: -11.142023086547852
    6. '   ' → logprob: -13.517023086547852
    7. '
' → logprob: -14.642023086547852
    8. '               ' → logprob: -14.892023086547852
    9. 'c' → logprob: -15.267023086547852
    10. '          ' → logprob: -15.267023086547852

Token 1571: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001589618914294988
    2. '.' → logprob: -9.00015926361084
    3. 'append' → logprob: -10.75015926361084
    4. '           ' → logprob: -11.62515926361084
    5. '.app' → logprob: -13.25015926361084
    6. ').' → logprob: -14.00015926361084
    7. '       ' → logprob: -14.50015926361084
    8. ' .' → logprob: -14.75015926361084
    9. 'Append' → logprob: -15.00015926361084
    10. '.Append' → logprob: -15.25015926361084

Token 1572: '((' (ID: 2054)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.02329404465854168
    2. '((' → logprob: -4.023293972015381
    3. '(' → logprob: -5.273293972015381
    4. ' (' → logprob: -13.023294448852539
    5. '   ' → logprob: -13.398294448852539
    6. '(
' → logprob: -14.773294448852539
    7. '(P' → logprob: -16.89829444885254
    8. '       ' → logprob: -17.52329444885254
    9. '[(' → logprob: -17.77329444885254
    10. '  ' → logprob: -18.27329444885254

Token 1573: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.9361264946837764e-07
    2. ' p' → logprob: -15.75
    3. '(p' → logprob: -20.125
    4. '_p' → logprob: -20.375
    5. '
' → logprob: -20.875
    6. '           ' → logprob: -21.375
    7. '	p' → logprob: -21.625
    8. ')p' → logprob: -22.0
    9. 'pi' → logprob: -22.125
    10. '   ' → logprob: -22.625

Token 1574: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.001711709308438003
    2. 'i' → logprob: -6.376711845397949
    3. ',' → logprob: -12.50171184539795
    4. 's' → logprob: -12.75171184539795
    5. '_s' → logprob: -14.50171184539795
    6. 'p' → logprob: -14.75171184539795
    7. '
' → logprob: -14.87671184539795
    8. 'I' → logprob: -15.12671184539795
    9. ',i' → logprob: -15.25171184539795
    10. '[' → logprob: -15.62671184539795

Token 1575: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015142656629905105
    2. ',s' → logprob: -6.501514434814453
    3. ' ,' → logprob: -12.126514434814453
    4. ',p' → logprob: -12.376514434814453
    5. 's' → logprob: -13.251514434814453
    6. ',
' → logprob: -14.876514434814453
    7. ',i' → logprob: -17.001514434814453
    8. '
' → logprob: -17.876514434814453
    9. ' s' → logprob: -18.001514434814453
    10. '           ' → logprob: -18.126514434814453

Token 1576: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2664456789934775e-06
    2. ' s' → logprob: -13.625000953674316
    3. '   ' → logprob: -21.750001907348633
    4. '       ' → logprob: -22.250001907348633
    5. '_s' → logprob: -22.375001907348633
    6. '
' → logprob: -23.625001907348633
    7. '	s' → logprob: -23.625001907348633
    8. '           ' → logprob: -23.750001907348633
    9. '     ' → logprob: -24.000001907348633
    10. '  ' → logprob: -24.000001907348633

Token 1577: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00014013137842994183
    2. 'i' → logprob: -8.875140190124512
    3. ')' → logprob: -16.125139236450195
    4. 's' → logprob: -17.000139236450195
    5. 'I' → logprob: -17.125139236450195
    6. ')_' → logprob: -17.375139236450195
    7. '_s' → logprob: -17.500139236450195
    8. '_' → logprob: -18.375139236450195
    9. '```' → logprob: -19.125139236450195
    10. '   ' → logprob: -19.125139236450195

Token 1578: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519393861293793
    2. '))' → logprob: -1.5019394159317017
    3. '))
' → logprob: -12.37693977355957
    4. ')
' → logprob: -12.50193977355957
    5. ')}' → logprob: -13.50193977355957
    6. ' )' → logprob: -14.75193977355957
    7. ')]' → logprob: -16.00193977355957
    8. ')))' → logprob: -16.12693977355957
    9. '       ' → logprob: -16.62693977355957
    10. ' ))' → logprob: -16.75193977355957

Token 1579: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014284093864262104
    2. 'return' → logprob: -4.264284133911133
    3. '
' → logprob: -9.764284133911133
    4. '```' → logprob: -10.889284133911133
    5. '<|end|>' → logprob: -11.014284133911133
    6. '   ' → logprob: -11.389284133911133
    7. '        
' → logprob: -12.014284133911133
    8. ' return' → logprob: -12.139284133911133
    9. '           ' → logprob: -13.514284133911133
    10. '<|end|>' → logprob: -14.764284133911133

Token 1580: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.000444850797066465
    2. '       ' → logprob: -7.7504448890686035
    3. ' return' → logprob: -11.250444412231445
    4. '
' → logprob: -14.375444412231445
    5. '   ' → logprob: -15.750444412231445
    6. '	return' → logprob: -16.000444412231445
    7. '{return' → logprob: -16.500444412231445
    8. '        
' → logprob: -16.500444412231445
    9. '@return' → logprob: -17.125444412231445
    10. '```' → logprob: -17.250444412231445

Token 1581: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.038043901324272156
    2. '(n' → logprob: -3.288043975830078
    3. ' n' → logprob: -13.288043975830078
    4. ' (' → logprob: -14.788043975830078
    5. '   ' → logprob: -14.788043975830078
    6. '	n' → logprob: -17.038043975830078
    7. '(' → logprob: -17.288043975830078
    8. '_n' → logprob: -17.913043975830078
    9. '(
' → logprob: -18.788043975830078
    10. '
' → logprob: -19.038043975830078

Token 1582: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006724014529027045
    2. ',w' → logprob: -7.875672340393066
    3. ' ,' → logprob: -8.250672340393066
    4. ',
' → logprob: -11.375672340393066
    5. 'w' → logprob: -12.375672340393066
    6. ',n' → logprob: -12.625672340393066
    7. '<|end|>' → logprob: -12.625672340393066
    8. '_,' → logprob: -12.875672340393066
    9. ',None' → logprob: -14.000672340393066
    10. '   ' → logprob: -14.375672340393066

Token 1583: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.006715370807796717
    2. ' w' → logprob: -5.006715297698975
    3. '   ' → logprob: -18.256715774536133
    4. '    ' → logprob: -18.506715774536133
    5. '	w' → logprob: -18.756715774536133
    6. '       ' → logprob: -20.006715774536133
    7. ' ' → logprob: -20.006715774536133
    8. '```' → logprob: -20.256715774536133
    9. '<w' → logprob: -21.131715774536133
    10. '
' → logprob: -21.381715774536133

Token 1584: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01275684405118227
    2. ',d' → logprob: -4.387756824493408
    3. ' ,' → logprob: -8.387757301330566
    4. 'd' → logprob: -11.137757301330566
    5. '`,' → logprob: -13.262757301330566
    6. ',
' → logprob: -14.012757301330566
    7. '',' → logprob: -14.137757301330566
    8. ' d' → logprob: -14.637757301330566
    9. '",' → logprob: -15.262757301330566
    10. '
' → logprob: -15.762757301330566

Token 1585: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -7.505351095460355e-05
    2. ' d' → logprob: -9.500075340270996
    3. '
' → logprob: -15.625075340270996
    4. '   ' → logprob: -18.00007438659668
    5. '       ' → logprob: -18.12507438659668
    6. ' ' → logprob: -19.50007438659668
    7. '	d' → logprob: -19.87507438659668
    8. '```' → logprob: -20.37507438659668
    9. '
' → logprob: -20.50007438659668
    10. '    ' → logprob: -20.50007438659668

Token 1586: ',' (ID: 11)
  Prédit: 'cuts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cuts' → logprob: -0.3243951201438904
    2. ',' → logprob: -1.3243951797485352
    3. '<|end|>' → logprob: -5.699395179748535
    4. ' cuts' → logprob: -6.074395179748535
    5. 'def' → logprob: -6.324395179748535
    6. '```' → logprob: -7.324395179748535
    7. 'cut' → logprob: -7.449395179748535
    8. '
' → logprob: -7.449395179748535
    9. ',
' → logprob: -7.699395179748535
    10. ',c' → logprob: -7.699395179748535

Token 1587: ' cuts' (ID: 29505)
  Prédit: 'cuts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cuts' → logprob: -1.688212614681106e-05
    2. ' cuts' → logprob: -11.000017166137695
    3. 'cut' → logprob: -16.625017166137695
    4. 'copies' → logprob: -22.625017166137695
    5. 'Cuts' → logprob: -23.000017166137695
    6. '
' → logprob: -23.250017166137695
    7. '   ' → logprob: -23.625017166137695
    8. 'cou' → logprob: -24.250017166137695
    9. 'cups' → logprob: -24.375017166137695
    10. 'clips' → logprob: -24.875017166137695

Token 1588: '


' (ID: 2499)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014713985845446587
    2. '```' → logprob: -4.389713764190674
    3. 'class' → logprob: -6.514713764190674
    4. 'import' → logprob: -7.889713764190674
    5. 'from' → logprob: -8.389714241027832
    6. '#' → logprob: -9.889714241027832
    7. 'if' → logprob: -10.014714241027832
    8. '<|end|>' → logprob: -11.139714241027832
    9. '
' → logprob: -12.389714241027832
    10. '``' → logprob: -13.389714241027832

Token 1589: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00045617512660101056
    2. 'if' → logprob: -7.7504563331604
    3. '```' → logprob: -10.750455856323242
    4. 'import' → logprob: -12.875455856323242
    5. '#' → logprob: -14.000455856323242
    6. 'from' → logprob: -15.000455856323242
    7. 'class' → logprob: -15.500455856323242
    8. ' def' → logprob: -17.750455856323242
    9. ' if' → logprob: -18.375455856323242
    10. '``' → logprob: -19.250455856323242

Token 1590: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.061972279101610184
    2. ' main' → logprob: -2.8119723796844482
    3. 'run' → logprob: -12.936972618103027
    4. 'simulate' → logprob: -13.936972618103027
    5. 'solve' → logprob: -14.561972618103027
    6. ' run' → logprob: -14.811972618103027
    7. 'def' → logprob: -15.561972618103027
    8. 'process' → logprob: -15.686972618103027
    9. ' solve' → logprob: -16.56197166442871
    10. '	main' → logprob: -18.06197166442871

Token 1591: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00046141279744915664
    2. '():
' → logprob: -7.750461578369141
    3. '()' → logprob: -10.62546157836914
    4. ' ():' → logprob: -12.00046157836914
    5. '():
' → logprob: -15.50046157836914
    6. '(' → logprob: -17.50046157836914
    7. '():

' → logprob: -17.75046157836914
    8. 'def' → logprob: -17.87546157836914
    9. '().' → logprob: -18.00046157836914
    10. '_' → logprob: -18.12546157836914

Token 1592: '   ' (ID: 271)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2693544328212738
    2. '   ' → logprob: -2.0193543434143066
    3. ' import' → logprob: -2.2693543434143066
    4. '```' → logprob: -12.269354820251465
    5. '	import' → logprob: -13.019354820251465
    6. '   ' → logprob: -15.894354820251465
    7. ' lines' → logprob: -16.26935386657715
    8. 'from' → logprob: -16.39435386657715
    9. 'lines' → logprob: -16.89435386657715
    10. 'input' → logprob: -16.89435386657715

Token 1593: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.008874786086380482
    2. ' import' → logprob: -4.758874893188477
    3. '   ' → logprob: -8.258874893188477
    4. '```' → logprob: -14.883874893188477
    5. 'input' → logprob: -15.008874893188477
    6. 'from' → logprob: -15.383874893188477
    7. 'lines' → logprob: -15.383874893188477
    8. '	import' → logprob: -15.883874893188477
    9. ' ' → logprob: -18.383874893188477
    10. ' lines' → logprob: -18.758874893188477

Token 1594: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.1472419600977446e-06
    2. ' sys' → logprob: -13.750000953674316
    3. '=sys' → logprob: -20.125001907348633
    4. '	sys' → logprob: -21.875001907348633
    5. '(sys' → logprob: -22.000001907348633
    6. 'io' → logprob: -22.000001907348633
    7. '```' → logprob: -22.250001907348633
    8. 'math' → logprob: -23.625001907348633
    9. '.sys' → logprob: -23.875001907348633
    10. 'stdin' → logprob: -24.000001907348633

Token 1595: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006279678200371563
    2. ' lines' → logprob: -8.000627517700195
    3. 'lines' → logprob: -8.875627517700195
    4. 'for' → logprob: -9.500627517700195
    5. 'input' → logprob: -10.625627517700195
    6. '	lines' → logprob: -10.625627517700195
    7. '    
' → logprob: -11.625627517700195
    8. ' for' → logprob: -11.875627517700195
    9. '```' → logprob: -12.125627517700195
    10. '
' → logprob: -12.375627517700195

Token 1596: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11825559288263321
    2. 'lines' → logprob: -2.368255615234375
    3. 'for' → logprob: -4.993255615234375
    4. 'input' → logprob: -5.118255615234375
    5. ' lines' → logprob: -5.368255615234375
    6. ' for' → logprob: -8.493255615234375
    7. ' input' → logprob: -9.243255615234375
    8. '	lines' → logprob: -9.868255615234375
    9. '```' → logprob: -9.868255615234375
    10. 'def' → logprob: -11.243255615234375

Token 1597: ' input' (ID: 3422)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.6396665573120117
    2. 'input' (adapté à ' input') → logprob: -0.8896665573120117
    3. '   ' → logprob: -2.8896665573120117
    4. 'for' → logprob: -5.139666557312012
    5. 'reader' → logprob: -9.139666557312012
    6. 'data' → logprob: -9.764666557312012
    7. ' lines' → logprob: -9.889666557312012
    8. 'def' → logprob: -10.764666557312012
    9. ' input' → logprob: -11.014666557312012
    10. 'inputs' → logprob: -11.389666557312012

Token 1598: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.31979796290397644
    2. '_line' → logprob: -1.9447979927062988
    3. '_data' → logprob: -2.944797992706299
    4. '_' → logprob: -3.319797992706299
    5. '()' → logprob: -3.319797992706299
    6. ' =' → logprob: -5.569797992706299
    7. '()
' → logprob: -7.444797992706299
    8. '=' → logprob: -7.694797992706299
    9. '().' → logprob: -8.31979751586914
    10. 'data' → logprob: -8.94479751586914

Token 1599: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815205067396164
    2. ' =' → logprob: -4.018152236938477
    3. '=sys' → logprob: -13.143152236938477
    4. '=
' → logprob: -16.393152236938477
    5. '=[]' → logprob: -16.893152236938477
    6. '＝' → logprob: -17.143152236938477
    7. '   ' → logprob: -18.143152236938477
    8. '=[]
' → logprob: -18.143152236938477
    9. ' ' → logprob: -18.268152236938477
    10. '	' → logprob: -18.643152236938477

Token 1600: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.1269298940896988
    2. ' sys' → logprob: -2.126929998397827
    3. '[' → logprob: -13.501930236816406
    4. ' [' → logprob: -15.001930236816406
    5. '(sys' → logprob: -17.001930236816406
    6. '=sys' → logprob: -17.251930236816406
    7. '	sys' → logprob: -17.376930236816406
    8. 'list' → logprob: -18.751930236816406
    9. '   ' → logprob: -20.626930236816406
    10. ' list' → logprob: -20.876930236816406

Token 1601: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.01693795621395111
    2. '   ' → logprob: -5.516937732696533
    3. '.stdout' → logprob: -5.641937732696533
    4. 'stdin' → logprob: -5.766937732696533
    5. 'd' → logprob: -5.891937732696533
    6. ' =' → logprob: -7.641937732696533
    7. '=' → logprob: -7.766937732696533
    8. 's' → logprob: -8.141938209533691
    9. '().' → logprob: -8.266938209533691
    10. 'td' → logprob: -8.391938209533691

Token 1602: '.read' (ID: 7211)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.02037615329027176
    2. 'read' → logprob: -4.020376205444336
    3. '.readline' → logprob: -6.270376205444336
    4. '.read' → logprob: -8.145376205444336
    5. '.' → logprob: -10.895376205444336
    6. '_read' → logprob: -11.270376205444336
    7. 'lines' → logprob: -11.770376205444336
    8. '   ' → logprob: -13.645376205444336
    9. 'buffer' → logprob: -14.770376205444336
    10. '_lines' → logprob: -14.770376205444336

Token 1603: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0013415542198345065
    2. '()' → logprob: -6.626341342926025
    3. 'lines' → logprob: -11.501341819763184
    4. '()
' → logprob: -13.001341819763184
    5. 'split' → logprob: -13.376341819763184
    6. '(' → logprob: -14.251341819763184
    7. '.split' → logprob: -15.126341819763184
    8. '_lines' → logprob: -15.376341819763184
    9. '()).' → logprob: -15.751341819763184
    10. ' ().' → logprob: -16.001340866088867

Token 1604: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.5769657492637634
    2. 'strip' → logprob: -0.8269657492637634
    3. 'read' → logprob: -7.326965808868408
    4. 'decode' → logprob: -8.07696533203125
    5. 'lines' → logprob: -9.95196533203125
    6. 'rstrip' → logprob: -11.57696533203125
    7. '(split' → logprob: -15.57696533203125
    8. 'plit' → logprob: -15.95196533203125
    9. ' split' → logprob: -16.32696533203125
    10. 'replace' → logprob: -16.45196533203125

Token 1605: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.0009152670972980559
    2. '('\' → logprob: -7.000915050506592
    3. '()' → logprob: -12.87591552734375
    4. '()
' → logprob: -14.25091552734375
    5. '("\' → logprob: -14.75091552734375
    6. '()\' → logprob: -16.50091552734375
    7. 'line' → logprob: -17.00091552734375
    8. ''\' → logprob: -19.25091552734375
    9. '()[' → logprob: -20.12591552734375
    10. '(' → logprob: -21.00091552734375

Token 1606: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004001703578978777
    2. '    
' → logprob: -5.629001617431641
    3. '
' → logprob: -7.879001617431641
    4. 'for' → logprob: -11.00400161743164
    5. ')' → logprob: -13.75400161743164
    6. '   
' → logprob: -13.87900161743164
    7. '    ' → logprob: -14.12900161743164
    8. ' for' → logprob: -14.25400161743164
    9. '        
' → logprob: -14.25400161743164
    10. ',' → logprob: -14.37900161743164

Token 1607: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016200727550312877
    2. 'parser' → logprob: -6.501620292663574
    3. 'sim' → logprob: -9.251620292663574
    4. '
' → logprob: -12.126620292663574
    5. ' parser' → logprob: -12.126620292663574
    6. '```' → logprob: -12.126620292663574
    7. '    
' → logprob: -12.626620292663574
    8. '   ' → logprob: -14.251620292663574
    9. '	parser' → logprob: -14.501620292663574
    10. 'for' → logprob: -14.876620292663574

Token 1608: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -0.00020520923135336488
    2. '   ' → logprob: -8.500205039978027
    3. 'for' → logprob: -13.875205039978027
    4. ' parser' → logprob: -14.250205039978027
    5. '
' → logprob: -16.750205993652344
    6. 'input' → logprob: -17.125205993652344
    7. '	parser' → logprob: -17.750205993652344
    8. 'if' → logprob: -18.375205993652344
    9. 'def' → logprob: -18.500205993652344
    10. 'parsed' → logprob: -18.875205993652344

Token 1609: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889033854007721
    2. ' =' → logprob: -2.578890323638916
    3. '   ' → logprob: -15.578890800476074
    4. '=
' → logprob: -15.578890800476074
    5. 'parser' → logprob: -15.953890800476074
    6. '=parse' → logprob: -16.453889846801758
    7. '_parser' → logprob: -17.578889846801758
    8. '＝' → logprob: -17.578889846801758
    9. ' parser' → logprob: -18.078889846801758
    10. '<|end|>' → logprob: -18.953889846801758

Token 1610: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: 0.0
    2. ' Input' → logprob: -18.5
    3. 'input' → logprob: -20.875
    4. '_input' → logprob: -22.5
    5. '<Input' → logprob: -22.75
    6. '	Input' → logprob: -23.0
    7. 'Parser' → logprob: -23.5
    8. '\Input' → logprob: -24.0
    9. '   ' → logprob: -24.125
    10. 'INPUT' → logprob: -25.375

Token 1611: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -1.9361264946837764e-07
    2. 'parser' → logprob: -15.75
    3. 'Parse' → logprob: -19.75
    4. 'Processor' → logprob: -20.0
    5. 'Iterator' → logprob: -20.125
    6. '_parser' → logprob: -20.25
    7. 'Input' → logprob: -20.625
    8. 'Parsed' → logprob: -21.375
    9. '-parser' → logprob: -21.375
    10. '(Parser' → logprob: -21.375

Token 1612: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.3306015716807451e-05
    2. '(lines' → logprob: -11.87501335144043
    3. '   ' → logprob: -12.50001335144043
    4. 'input' → logprob: -13.00001335144043
    5. '[input' → logprob: -16.00001335144043
    6. '(' → logprob: -17.12501335144043
    7. ' (' → logprob: -17.25001335144043
    8. '(
' → logprob: -18.00001335144043
    9. '(line' → logprob: -18.87501335144043
    10. '(list' → logprob: -19.25001335144043

Token 1613: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: 0.0
    2. 'lines' → logprob: -17.375
    3. '=' → logprob: -17.625
    4. 's' → logprob: -19.75
    5. '_LINES' → logprob: -19.875
    6. '_layers' → logprob: -20.0
    7. 'Lines' → logprob: -20.125
    8. '_' → logprob: -20.375
    9. '   ' → logprob: -20.75
    10. '=_' → logprob: -21.125

Token 1614: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5776039361953735
    2. '   ' → logprob: -0.8276039361953735
    3. ')
' → logprob: -7.702603816986084
    4. '()' → logprob: -7.952603816986084
    5. '(' → logprob: -8.077604293823242
    6. '(parser' → logprob: -8.952604293823242
    7. '(input' → logprob: -9.452604293823242
    8. '())' → logprob: -10.077604293823242
    9. '(
' → logprob: -10.327604293823242
    10. '[' → logprob: -10.452604293823242

Token 1615: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012624307535588741
    2. 'for' → logprob: -4.512624263763428
    3. 'sim' → logprob: -6.637624263763428
    4. ' for' → logprob: -9.262624740600586
    5. '
' → logprob: -9.387624740600586
    6. '    
' → logprob: -9.512624740600586
    7. '```' → logprob: -12.387624740600586
    8. 'simulate' → logprob: -13.512624740600586
    9. 's' → logprob: -13.762624740600586
    10. '   ' → logprob: -13.887624740600586

Token 1616: ' try' (ID: 2075)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03108450211584568
    2. '   ' → logprob: -3.5310845375061035
    3. 'try' (adapté à ' try') → logprob: -6.6560845375061035
    4. 'while' → logprob: -10.406084060668945
    5. '
' → logprob: -11.656084060668945
    6. '```' → logprob: -12.531084060668945
    7. ' for' → logprob: -13.031084060668945
    8. '    
' → logprob: -13.781084060668945
    9. 'sim' → logprob: -14.031084060668945
    10. 'def' → logprob: -15.906084060668945

Token 1617: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33671677112579346
    2. ':
' → logprob: -1.5867167711257935
    3. '       ' → logprob: -2.711716651916504
    4. '   ' → logprob: -4.211716651916504
    5. '    ' → logprob: -11.086716651916504
    6. '):
' → logprob: -11.961716651916504
    7. '           ' → logprob: -12.711716651916504
    8. 'ing' → logprob: -12.836716651916504
    9. '<|end|>' → logprob: -13.086716651916504
    10. '  ' → logprob: -13.211716651916504

Token 1618: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.6166903151315637e-05
    2. '   ' → logprob: -11.125016212463379
    3. 'while' → logprob: -14.750016212463379
    4. ':' → logprob: -15.375016212463379
    5. '#' → logprob: -16.000015258789062
    6. '           ' → logprob: -16.125015258789062
    7. '```' → logprob: -16.125015258789062
    8. '      ' → logprob: -16.125015258789062
    9. ' for' → logprob: -16.250015258789062
    10. 'for' → logprob: -16.500015258789062

Token 1619: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.39690062403678894
    2. '       ' → logprob: -1.1469006538391113
    3. ' while' → logprob: -4.646900653839111
    4. '   ' → logprob: -7.896900653839111
    5. 'for' → logprob: -11.271900177001953
    6. '           ' → logprob: -13.271900177001953
    7. '	while' → logprob: -13.646900177001953
    8. 'While' → logprob: -15.396900177001953
    9. '     ' → logprob: -15.771900177001953
    10. ' for' → logprob: -16.146900177001953

Token 1620: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.12769734859466553
    2. ' True' → logprob: -2.127697467803955
    3. '   ' → logprob: -8.377696990966797
    4. '       ' → logprob: -8.627696990966797
    5. '           ' → logprob: -8.627696990966797
    6. '(True' → logprob: -8.627696990966797
    7. '1' → logprob: -14.752696990966797
    8. 'true' → logprob: -15.002696990966797
    9. '=True' → logprob: -15.002696990966797
    10. ' ' → logprob: -15.377696990966797

Token 1621: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2646915912628174
    2. ':
' → logprob: -1.5146915912628174
    3. '           ' → logprob: -4.514691352844238
    4. '():
' → logprob: -7.514691352844238
    5. '       ' → logprob: -7.639691352844238
    6. '<|end|>' → logprob: -8.264691352844238
    7. '<|end|>' → logprob: -8.389691352844238
    8. '):
' → logprob: -9.264691352844238
    9. '():' → logprob: -10.264691352844238
    10. '```' → logprob: -11.264691352844238

Token 1622: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020661000162363052
    2. '       ' → logprob: -3.8956611156463623
    3. 'n' → logprob: -9.395661354064941
    4. '(n' → logprob: -11.145661354064941
    5. '	       ' → logprob: -11.770661354064941
    6. '```' → logprob: -12.895661354064941
    7. '         ' → logprob: -13.395661354064941
    8. '		' → logprob: -13.520661354064941
    9. '#' → logprob: -13.645661354064941
    10. '        
' → logprob: -13.770661354064941

Token 1623: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0008642955799587071
    2. '           ' → logprob: -7.375864505767822
    3. ' n' → logprob: -9.250864028930664
    4. '               ' → logprob: -9.500864028930664
    5. 'params' → logprob: -11.000864028930664
    6. '   ' → logprob: -11.125864028930664
    7. 'args' → logprob: -11.625864028930664
    8. 'data' → logprob: -11.625864028930664
    9. 'num' → logprob: -12.250864028930664
    10. 'ndata' → logprob: -12.375864028930664

Token 1624: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004024018533527851
    2. '==' → logprob: -7.379024028778076
    3. ' ,' → logprob: -7.504024028778076
    4. '=' → logprob: -7.629024028778076
    5. '<|end|>' → logprob: -7.754024028778076
    6. ')' → logprob: -8.004023551940918
    7. '>' → logprob: -8.129023551940918
    8. ' ==' → logprob: -8.379023551940918
    9. ' >' → logprob: -8.504023551940918
    10. ',n' → logprob: -8.754023551940918

Token 1625: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.38687145709991455
    2. ' w' → logprob: -1.1368714570999146
    3. '<|end|>' → logprob: -15.011871337890625
    4. ' ' → logprob: -16.761871337890625
    5. '    ' → logprob: -17.511871337890625
    6. '	w' → logprob: -17.886871337890625
    7. ',w' → logprob: -18.136871337890625
    8. ' ' → logprob: -18.261871337890625
    9. '   ' → logprob: -19.136871337890625
    10. 'W' → logprob: -19.261871337890625

Token 1626: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015514736878685653
    2. ',d' → logprob: -9.125155448913574
    3. ' ,' → logprob: -10.000155448913574
    4. 'd' → logprob: -15.000155448913574
    5. '=' → logprob: -15.875155448913574
    6. '_,' → logprob: -17.000154495239258
    7. ',
' → logprob: -17.125154495239258
    8. '‌,' → logprob: -17.250154495239258
    9. '`,' → logprob: -17.625154495239258
    10. '   ' → logprob: -17.875154495239258

Token 1627: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0008045066497288644
    2. ' d' → logprob: -7.125804424285889
    3. '           ' → logprob: -16.875804901123047
    4. '   ' → logprob: -17.875804901123047
    5. '       ' → logprob: -18.625804901123047
    6. ' ' → logprob: -18.625804901123047
    7. '    ' → logprob: -19.375804901123047
    8. '
' → logprob: -19.750804901123047
    9. '               ' → logprob: -19.875804901123047
    10. '     ' → logprob: -19.875804901123047

Token 1628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.804671233519912e-05
    2. '=' → logprob: -10.00008773803711
    3. '<|end|>' → logprob: -10.87508773803711
    4. ' ,' → logprob: -11.25008773803711
    5. ' =' → logprob: -12.37508773803711
    6. '           ' → logprob: -13.12508773803711
    7. ',
' → logprob: -13.25008773803711
    8. '   ' → logprob: -15.00008773803711
    9. '‌,' → logprob: -15.25008773803711
    10. '_,' → logprob: -15.50008773803711

Token 1629: ' cuts' (ID: 29505)
  Prédit: 'cuts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cuts' → logprob: -6.289473822107539e-05
    2. ' cuts' → logprob: -10.000062942504883
    3. 'cut' → logprob: -11.000062942504883
    4. 'c' → logprob: -15.750062942504883
    5. 'clips' → logprob: -16.000062942504883
    6. '
' → logprob: -16.375062942504883
    7. '   ' → logprob: -16.375062942504883
    8. '           ' → logprob: -17.000062942504883
    9. 'Cuts' → logprob: -17.125062942504883
    10. '       ' → logprob: -17.250062942504883

Token 1630: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47417035698890686
    2. ' =' → logprob: -0.9741703271865845
    3. '           ' → logprob: -9.974170684814453
    4. '<|end|>' → logprob: -10.974170684814453
    5. ',' → logprob: -11.599170684814453
    6. '		' → logprob: -12.474170684814453
    7. ')' → logprob: -12.599170684814453
    8. '            ' → logprob: -12.724170684814453
    9. '               ' → logprob: -13.099170684814453
    10. '       ' → logprob: -13.849170684814453

Token 1631: ' next' (ID: 2613)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.014745463617146015
    2. 'n' → logprob: -5.014745235443115
    3. ' parser' → logprob: -5.014745235443115
    4. '           ' → logprob: -7.389745235443115
    5. 'w' → logprob: -8.264745712280273
    6. '(parser' → logprob: -8.889745712280273
    7. 'next' → logprob: -8.889745712280273
    8. ' n' → logprob: -9.264745712280273
    9. '   ' → logprob: -10.389745712280273
    10. '(n' → logprob: -10.764745712280273

Token 1632: '(parser' (ID: 82535)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.002488618716597557
    2. '(parser' → logprob: -6.002488613128662
    3. ' parser' → logprob: -11.25248908996582
    4. '	parser' → logprob: -17.50248908996582
    5. '/parser' → logprob: -19.87748908996582
    6. '_parser' → logprob: -19.87748908996582
    7. 'parse' → logprob: -20.37748908996582
    8. '.parser' → logprob: -20.50248908996582
    9. '   ' → logprob: -22.12748908996582
    10. 'Parser' → logprob: -22.50248908996582

Token 1633: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6365838646888733
    2. '           ' → logprob: -0.7615838646888733
    3. ')
' → logprob: -6.2615838050842285
    4. '):
' → logprob: -7.0115838050842285
    5. '       ' → logprob: -7.5115838050842285
    6. '):' → logprob: -8.511584281921387
    7. '<|end|>' → logprob: -8.636584281921387
    8. '<|end|>' → logprob: -8.886584281921387
    9. '   ' → logprob: -10.761584281921387
    10. '
' → logprob: -11.261584281921387

Token 1634: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025667413137853146
    2. '           ' → logprob: -6.002566814422607
    3. '   ' → logprob: -9.50256633758545
    4. '        
' → logprob: -11.87756633758545
    5. 'sim' → logprob: -12.75256633758545
    6. 's' → logprob: -13.50256633758545
    7. '<|end|>' → logprob: -13.50256633758545
    8. '     ' → logprob: -14.25256633758545
    9. '
' → logprob: -14.50256633758545
    10. ',' → logprob: -14.62756633758545

Token 1635: ' simulator' (ID: 71288)
  Prédit: 'sim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sim' → logprob: -0.055235084146261215
    2. '   ' → logprob: -2.9302351474761963
    3. ' simulator' → logprob: -8.555234909057617
    4. '       ' → logprob: -9.180234909057617
    5. ' sim' → logprob: -10.180234909057617
    6. 'simulation' → logprob: -11.930234909057617
    7. '           ' → logprob: -12.430234909057617
    8. '(sim' → logprob: -13.680234909057617
    9. 's' → logprob: -14.055234909057617
    10. 'solver' → logprob: -14.180234909057617

Token 1636: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001527717337012291
    2. '=' → logprob: -6.501527786254883
    3. '   ' → logprob: -10.626527786254883
    4. '    ' → logprob: -15.126527786254883
    5. '       ' → logprob: -15.376527786254883
    6. ' =
' → logprob: -15.626527786254883
    7. ' ' → logprob: -16.251527786254883
    8. '<|end|>' → logprob: -16.501527786254883
    9. '.' → logprob: -16.626527786254883
    10. '           ' → logprob: -16.751527786254883

Token 1637: ' Cake' (ID: 51982)
  Prédit: 'Cake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cake' → logprob: -1.0206720617134124e-05
    2. ' Cake' → logprob: -11.50001049041748
    3. 'Cube' → logprob: -18.000009536743164
    4. '   ' → logprob: -20.000009536743164
    5. 'Candy' → logprob: -20.375009536743164
    6. 'C' → logprob: -22.750009536743164
    7. '```' → logprob: -22.750009536743164
    8. 'Cup' → logprob: -23.125009536743164
    9. 'Castle' → logprob: -23.250009536743164
    10. ' cake' → logprob: -23.250009536743164

Token 1638: 'Cut' (ID: 35952)
  Prédit: 'Cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cut' → logprob: -7.896309739408025e-07
    2. ' Cutting' → logprob: -15.125000953674316
    3. ' cutting' → logprob: -15.625000953674316
    4. 'cut' → logprob: -15.750000953674316
    5. '_cut' → logprob: -16.0
    6. 'Cuts' → logprob: -18.0
    7. '-cut' → logprob: -18.125
    8. '   ' → logprob: -18.625
    9. '```' → logprob: -19.5
    10. 'CUT' → logprob: -19.5

Token 1639: 'ting' (ID: 1744)
  Prédit: 'utting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utting' → logprob: -0.7722949385643005
    2. 'ting' → logprob: -0.8972949385643005
    3. 'ing' → logprob: -2.3972949981689453
    4. 'tting' → logprob: -3.5222949981689453
    5. 'uting' → logprob: -5.022294998168945
    6. 'Cut' → logprob: -6.647294998168945
    7. 'cut' → logprob: -7.147294998168945
    8. 'ut' → logprob: -7.397294998168945
    9. 'itting' → logprob: -8.147294998168945
    10. 'ng' → logprob: -9.647294998168945

Token 1640: 'Simulator' (ID: 120745)
  Prédit: 'Simulator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Simulator' → logprob: -7.896309739408025e-07
    2. 'imulator' → logprob: -14.500000953674316
    3. ' Simulator' → logprob: -15.875000953674316
    4. 'sim' → logprob: -16.75
    5. ' simulator' → logprob: -18.0
    6. 'Sim' → logprob: -18.125
    7. '
' → logprob: -18.625
    8. 'Solver' → logprob: -19.75
    9. 'Sampler' → logprob: -20.0
    10. '_sim' → logprob: -20.875

Token 1641: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -7.862962229410186e-05
    2. 'w' → logprob: -9.500078201293945
    3. '           ' → logprob: -12.750078201293945
    4. '       ' → logprob: -14.875078201293945
    5. '(' → logprob: -15.500078201293945
    6. '   ' → logprob: -16.250078201293945
    7. '```' → logprob: -16.375078201293945
    8. ' w' → logprob: -16.750078201293945
    9. '	w' → logprob: -17.500078201293945
    10. '(W' → logprob: -18.000078201293945

Token 1642: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009771554730832577
    2. ',d' → logprob: -4.634771347045898
    3. ' ,' → logprob: -11.259771347045898
    4. 'd' → logprob: -13.634771347045898
    5. ',
' → logprob: -13.884771347045898
    6. '```' → logprob: -15.384771347045898
    7. '   ' → logprob: -15.884771347045898
    8. '
' → logprob: -16.5097713470459
    9. ',D' → logprob: -16.7597713470459
    10. '           ' → logprob: -17.6347713470459

Token 1643: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.8624639324116288e-06
    2. ' d' → logprob: -13.250001907348633
    3. '           ' → logprob: -20.750001907348633
    4. '       ' → logprob: -22.125001907348633
    5. '   ' → logprob: -22.750001907348633
    6. '               ' → logprob: -23.250001907348633
    7. '
' → logprob: -23.750001907348633
    8. ')d' → logprob: -24.125001907348633
    9. '          ' → logprob: -24.250001907348633
    10. '                   ' → logprob: -24.500001907348633

Token 1644: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006939699524082243
    2. ')' → logprob: -7.3756937980651855
    3. '       ' → logprob: -10.125694274902344
    4. ')
' → logprob: -10.875694274902344
    5. '<|end|>' → logprob: -12.125694274902344
    6. '   ' → logprob: -14.000694274902344
    7. '          ' → logprob: -14.750694274902344
    8. '		' → logprob: -15.125694274902344
    9. 'for' → logprob: -15.500694274902344
    10. ').' → logprob: -15.625694274902344

Token 1645: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003585840167943388
    2. 'for' → logprob: -8.125358581542969
    3. '       ' → logprob: -9.750358581542969
    4. ' for' → logprob: -13.000358581542969
    5. '   ' → logprob: -13.375358581542969
    6. '```' → logprob: -15.875358581542969
    7. '	       ' → logprob: -16.12535858154297
    8. '	   ' → logprob: -16.12535858154297
    9. '          ' → logprob: -17.37535858154297
    10. '		' → logprob: -18.00035858154297

Token 1646: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003237601602450013
    2. '           ' → logprob: -5.753237724304199
    3. ' for' → logprob: -10.0032377243042
    4. '       ' → logprob: -11.3782377243042
    5. '   ' → logprob: -13.3782377243042
    6. '```' → logprob: -13.3782377243042
    7. '``' → logprob: -16.503236770629883
    8. '
' → logprob: -17.003236770629883
    9. '	for' → logprob: -17.628236770629883
    10. '               ' → logprob: -18.128236770629883

Token 1647: ' idx' (ID: 14016)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10456644743680954
    2. 'piece' → logprob: -2.3545663356781006
    3. '(p' → logprob: -5.60456657409668
    4. ' p' → logprob: -8.35456657409668
    5. '(piece' → logprob: -8.85456657409668
    6. 'pi' → logprob: -8.97956657409668
    7. '           ' → logprob: -9.47956657409668
    8. '   ' → logprob: -10.72956657409668
    9. '       ' → logprob: -11.10456657409668
    10. ' piece' → logprob: -11.22956657409668

Token 1648: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12819337844848633
    2. 'in' → logprob: -2.3781933784484863
    3. ',p' → logprob: -4.378193378448486
    4. ' in' → logprob: -4.503193378448486
    5. '_,' → logprob: -6.253193378448486
    6. 'p' → logprob: -6.878193378448486
    7. '(p' → logprob: -7.128193378448486
    8. ' ,' → logprob: -9.878192901611328
    9. '(' → logprob: -10.128192901611328
    10. ',(' → logprob: -10.753192901611328

Token 1649: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.06402473896741867
    2. '(c' → logprob: -3.0640246868133545
    3. ' (' → logprob: -4.189024925231934
    4. '(' → logprob: -9.939024925231934
    5. '(pc' → logprob: -10.439024925231934
    6. '   ' → logprob: -10.939024925231934
    7. '(piece' → logprob: -11.314024925231934
    8. '(s' → logprob: -12.064024925231934
    9. '           ' → logprob: -12.189024925231934
    10. '(ci' → logprob: -12.439024925231934

Token 1650: 'pi' (ID: 3455)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0014033254701644182
    2. 'piece' → logprob: -6.626403331756592
    3. 'pi' → logprob: -9.751402854919434
    4. '(p' → logprob: -11.626402854919434
    5. ' p' → logprob: -12.376402854919434
    6. '           ' → logprob: -13.001402854919434
    7. 'pie' → logprob: -13.876402854919434
    8. 'pid' → logprob: -14.501402854919434
    9. '(piece' → logprob: -14.501402854919434
    10. '_p' → logprob: -14.876402854919434

Token 1651: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4081762731075287
    2. 'ece' → logprob: -1.283176302909851
    3. 'e' → logprob: -3.2831761837005615
    4. 'ce' → logprob: -4.783176422119141
    5. '_e' → logprob: -5.533176422119141
    6. ',e' → logprob: -5.658176422119141
    7. 'ec' → logprob: -5.658176422119141
    8. '_,' → logprob: -7.533176422119141
    9. '_ec' → logprob: -8.78317642211914
    10. 'iece' → logprob: -8.90817642211914

Token 1652: ' si' (ID: 1784)
  Prédit: 'si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'si' → logprob: -2.558399319241289e-05
    2. ' si' → logprob: -10.750025749206543
    3. 's' → logprob: -13.125025749206543
    4. 'ci' → logprob: -13.875025749206543
    5. 'cut' → logprob: -13.875025749206543
    6. '_si' → logprob: -16.375024795532227
    7. '   ' → logprob: -17.125024795532227
    8. 'start' → logprob: -17.375024795532227
    9. 'ssi' → logprob: -17.625024795532227
    10. ' cut' → logprob: -18.000024795532227

Token 1653: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. ' )' → logprob: -13.125003814697266
    3. 'in' → logprob: -14.000003814697266
    4. '   ' → logprob: -15.125003814697266
    5. '       ' → logprob: -15.250003814697266
    6. ' in' → logprob: -15.375003814697266
    7. '           ' → logprob: -15.625003814697266
    8. ')
' → logprob: -16.250003814697266
    9. '               ' → logprob: -16.750003814697266
    10. '        ' → logprob: -17.500003814697266

Token 1654: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16026809811592102
    2. 'in' → logprob: -1.9102680683135986
    3. ')' → logprob: -10.41026782989502
    4. '	in' → logprob: -12.03526782989502
    5. '_in' → logprob: -12.91026782989502
    6. '   ' → logprob: -13.91026782989502
    7. '<|end|>' → logprob: -14.41026782989502
    8. ' ' → logprob: -14.78526782989502
    9. ',' → logprob: -14.91026782989502
    10. '<|end|>' → logprob: -14.91026782989502

Token 1655: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0006569160032086074
    2. ' enumerate' → logprob: -7.375657081604004
    3. 'cuts' → logprob: -10.500657081604004
    4. '   ' → logprob: -13.500657081604004
    5. '       ' → logprob: -14.000657081604004
    6. '           ' → logprob: -16.125656127929688
    7. '.enumer' → logprob: -16.500656127929688
    8. 'in' → logprob: -16.625656127929688
    9. 'cut' → logprob: -16.750656127929688
    10. '
' → logprob: -17.125656127929688

Token 1656: '(c' (ID: 2410)
  Prédit: 'cuts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cuts' → logprob: -0.018014846369624138
    2. '(c' → logprob: -4.143014907836914
    3. ' cuts' → logprob: -6.393014907836914
    4. '   ' → logprob: -8.643014907836914
    5. 'cut' → logprob: -10.018014907836914
    6. ')' → logprob: -10.768014907836914
    7. '           ' → logprob: -10.893014907836914
    8. '       ' → logprob: -11.018014907836914
    9. ' (' → logprob: -11.518014907836914
    10. '
' → logprob: -12.393014907836914

Token 1657: 'uts' (ID: 4639)
  Prédit: 'uts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uts' → logprob: -0.00011021859245374799
    2. 'ut' → logprob: -9.875110626220703
    3. 'cuts' → logprob: -10.500110626220703
    4. '   ' → logprob: -12.125110626220703
    5. 'utter' → logprob: -12.250110626220703
    6. 'ts' → logprob: -12.375110626220703
    7. '           ' → logprob: -13.000110626220703
    8. 'its' → logprob: -13.000110626220703
    9. '       ' → logprob: -13.250110626220703
    10. '               ' → logprob: -14.000110626220703

Token 1658: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.41859203577041626
    2. '               ' → logprob: -1.1685919761657715
    3. ':
' → logprob: -4.2935919761657715
    4. ',' → logprob: -4.7935919761657715
    5. '           ' → logprob: -5.2935919761657715
    6. '):' → logprob: -6.2935919761657715
    7. ':' → logprob: -6.2935919761657715
    8. ')' → logprob: -9.04359245300293
    9. '       ' → logprob: -9.16859245300293
    10. '):
' → logprob: -9.79359245300293

Token 1659: ' start' (ID: 1604)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5771352648735046
    2. 'start' → logprob: -0.8271352648735046
    3. '0' → logprob: -7.32713508605957
    4. ' ' → logprob: -9.07713508605957
    5. '   ' → logprob: -9.07713508605957
    6. ' start' → logprob: -9.32713508605957
    7. '           ' → logprob: -9.57713508605957
    8. '):
' → logprob: -9.70213508605957
    9. '):' → logprob: -10.20213508605957
    10. '       ' → logprob: -10.70213508605957

Token 1660: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00023894020705483854
    2. '1' → logprob: -8.375239372253418
    3. '           ' → logprob: -12.125239372253418
    4. '(' → logprob: -13.250239372253418
    5. '               ' → logprob: -14.250239372253418
    6. '0' → logprob: -15.625239372253418
    7. '       ' → logprob: -16.2502384185791
    8. ')' → logprob: -16.3752384185791
    9. '):
' → logprob: -16.8752384185791
    10. '   ' → logprob: -16.8752384185791

Token 1661: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '0' → logprob: -16.375
    3. ' ' → logprob: -16.625
    4. '=' → logprob: -17.0
    5. '   ' → logprob: -17.25
    6. '           ' → logprob: -17.5
    7. ')' → logprob: -19.125
    8. '       ' → logprob: -20.75
    9. '```' → logprob: -20.875
    10. '               ' → logprob: -21.125

Token 1662: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.00489168893545866
    2. '               ' → logprob: -5.754891872406006
    3. '           ' → logprob: -7.129891872406006
    4. '):' → logprob: -7.629891872406006
    5. ':
' → logprob: -8.254891395568848
    6. '():
' → logprob: -9.504891395568848
    7. ':' → logprob: -10.129891395568848
    8. '):
' → logprob: -10.629891395568848
    9. '       ' → logprob: -11.754891395568848
    10. ',' → logprob: -12.629891395568848

Token 1663: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.8206473871250637e-05
    2. '           ' → logprob: -11.250028610229492
    3. '```' → logprob: -12.625028610229492
    4. '       ' → logprob: -12.750028610229492
    5. 'sim' → logprob: -13.000028610229492
    6. '	           ' → logprob: -13.500028610229492
    7. '   ' → logprob: -13.500028610229492
    8. '              ' → logprob: -13.625028610229492
    9. '		       ' → logprob: -14.625028610229492
    10. '                   ' → logprob: -14.625028610229492

Token 1664: ' simulator' (ID: 71288)
  Prédit: 'sim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sim' → logprob: -0.1137581393122673
    2. '               ' → logprob: -2.238758087158203
    3. '                   ' → logprob: -7.363758087158203
    4. '   ' → logprob: -8.988758087158203
    5. '           ' → logprob: -9.488758087158203
    6. ' sim' → logprob: -9.988758087158203
    7. ' simulator' → logprob: -10.863758087158203
    8. '(sim' → logprob: -10.863758087158203
    9. '       ' → logprob: -11.988758087158203
    10. '```' → logprob: -12.863758087158203

Token 1665: '.perform' (ID: 54724)
  Prédit: '.perform'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.perform' → logprob: -3.650518920039758e-06
    2. 'perform' → logprob: -12.875003814697266
    3. '.' → logprob: -13.875003814697266
    4. '.Perform' → logprob: -17.000003814697266
    5. '   ' → logprob: -17.125003814697266
    6. ' .' → logprob: -18.500003814697266
    7. 'Perform' → logprob: -20.000003814697266
    8. '           ' → logprob: -20.125003814697266
    9. '       ' → logprob: -20.250003814697266
    10. '.performance' → logprob: -21.250003814697266

Token 1666: '_cut' (ID: 81399)
  Prédit: '_cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cut' → logprob: -0.00012356207298580557
    2. 'cut' → logprob: -9.000123977661133
    3. '_c' → logprob: -15.625123977661133
    4. ' cut' → logprob: -18.000123977661133
    5. '=cut' → logprob: -18.000123977661133
    6. '_cast' → logprob: -19.500123977661133
    7. 'Cut' → logprob: -19.750123977661133
    8. '   ' → logprob: -20.125123977661133
    9. 'cuts' → logprob: -20.375123977661133
    10. '(p' → logprob: -20.500123977661133

Token 1667: '(pi' (ID: 128494)
  Prédit: '(pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pi' → logprob: -4.692145012086257e-05
    2. 'pi' → logprob: -10.250046730041504
    3. '(' → logprob: -11.875046730041504
    4. '(p' → logprob: -12.750046730041504
    5. '(
' → logprob: -14.125046730041504
    6. ' pi' → logprob: -15.375046730041504
    7. '(pid' → logprob: -15.875046730041504
    8. '   ' → logprob: -16.12504768371582
    9. '((' → logprob: -16.75004768371582
    10. '(piece' → logprob: -17.12504768371582

Token 1668: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.65707261255011e-06
    2. ' ,' → logprob: -11.750008583068848
    3. '               ' → logprob: -15.125008583068848
    4. ',
' → logprob: -15.375008583068848
    5. '                   ' → logprob: -16.000009536743164
    6. '           ' → logprob: -16.875009536743164
    7. ',s' → logprob: -17.250009536743164
    8. '   ' → logprob: -17.875009536743164
    9. ' si' → logprob: -19.375009536743164
    10. '                ' → logprob: -19.375009536743164

Token 1669: ' si' (ID: 1784)
  Prédit: 'si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'si' → logprob: -9.627176768844947e-05
    2. ' si' → logprob: -9.250096321105957
    3. '(si' → logprob: -17.00009536743164
    4. '_si' → logprob: -19.37509536743164
    5. '               ' → logprob: -20.12509536743164
    6. 'Si' → logprob: -20.25009536743164
    7. '                   ' → logprob: -20.50009536743164
    8. ')' → logprob: -20.50009536743164
    9. 's' → logprob: -20.87509536743164
    10. 'se' → logprob: -21.00009536743164

Token 1670: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003418793436139822
    2. '<|end|>' → logprob: -6.628418922424316
    3. '           ' → logprob: -7.253418922424316
    4. ')
' → logprob: -7.253418922424316
    5. '               ' → logprob: -7.378418922424316
    6. '<|end|>' → logprob: -11.128418922424316
    7. '       ' → logprob: -11.503418922424316
    8. '                   ' → logprob: -12.253418922424316
    9. '   ' → logprob: -13.003418922424316
    10. '
' → logprob: -13.003418922424316

Token 1671: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006113886367529631
    2. '       ' → logprob: -5.3811140060424805
    3. '   ' → logprob: -7.0061140060424805
    4. '
' → logprob: -7.6311140060424805
    5. '```' → logprob: -9.63111400604248
    6. 'print' → logprob: -10.88111400604248
    7. '<|end|>' → logprob: -12.25611400604248
    8. '               ' → logprob: -13.00611400604248
    9. ' print' → logprob: -13.13111400604248
    10. 'output' → logprob: -13.88111400604248

Token 1672: ' areas' (ID: 6723)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.715950071811676
    2. 'areas' (adapté à ' areas') → logprob: -1.0909500122070312
    3. '       ' → logprob: -1.8409500122070312
    4. '           ' → logprob: -5.340950012207031
    5. ' areas' → logprob: -5.590950012207031
    6. 'print' → logprob: -5.590950012207031
    7. 'for' → logprob: -6.215950012207031
    8. 'output' → logprob: -7.215950012207031
    9. '```' → logprob: -7.590950012207031
    10. 'result' → logprob: -7.840950012207031

Token 1673: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016694026067852974
    2. '=' → logprob: -4.141694068908691
    3. '   ' → logprob: -7.391694068908691
    4. '()' → logprob: -10.891694068908691
    5. '	' → logprob: -11.891694068908691
    6. '    ' → logprob: -12.766694068908691
    7. '(' → logprob: -12.766694068908691
    8. '       ' → logprob: -12.891694068908691
    9. 's' → logprob: -13.766694068908691
    10. ' ' → logprob: -13.766694068908691

Token 1674: ' simulator' (ID: 71288)
  Prédit: 'sim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sim' → logprob: -0.0019647935405373573
    2. ' simulator' → logprob: -6.251964569091797
    3. '(sim' → logprob: -10.626964569091797
    4. 'sorted' → logprob: -11.751964569091797
    5. ' sim' → logprob: -13.501964569091797
    6. '   ' → logprob: -13.501964569091797
    7. 'simulation' → logprob: -14.626964569091797
    8. ' simul' → logprob: -15.251964569091797
    9. '[' → logprob: -15.376964569091797
    10. 'simulate' → logprob: -16.251964569091797

Token 1675: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -5.7053759519476444e-05
    2. '.' → logprob: -10.000057220458984
    3. 'get' → logprob: -11.500057220458984
    4. '_get' → logprob: -14.625057220458984
    5. '   ' → logprob: -14.875057220458984
    6. '
' → logprob: -15.375057220458984
    7. ' .' → logprob: -15.625057220458984
    8. '._' → logprob: -16.625057220458984
    9. '.perform' → logprob: -17.125057220458984
    10. 'areas' → logprob: -17.375057220458984

Token 1676: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -3.128163257315464e-07
    2. '_s' → logprob: -16.125
    3. 'sorted' → logprob: -16.875
    4. '_' → logprob: -17.5
    5. '_scaled' → logprob: -18.0
    6. '```' → logprob: -20.0
    7. '_saved' → logprob: -20.5
    8. '_squared' → logprob: -21.0
    9. '_filtered' → logprob: -21.0
    10. '_sort' → logprob: -21.25

Token 1677: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.227250610711053e-05
    2. 'areas' → logprob: -10.125041961669922
    3. '()' → logprob: -14.625041961669922
    4. 'Areas' → logprob: -14.750041961669922
    5. '()[' → logprob: -15.250041961669922
    6. '[' → logprob: -15.500041961669922
    7. '([' → logprob: -15.750041961669922
    8. '_area' → logprob: -15.750041961669922
    9. '```' → logprob: -15.750041961669922
    10. '(' → logprob: -16.625041961669922

Token 1678: 'areas' (ID: 69250)
  Prédit: 'areas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'areas' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.375000953674316
    3. 'area' → logprob: -18.125
    4. 'ages' → logprob: -18.5
    5. 'Areas' → logprob: -20.125
    6. ' areas' → logprob: -20.25
    7. 'angles' → logprob: -22.0
    8. 'a' → logprob: -22.75
    9. 'sizes' → logprob: -22.875
    10. '[' → logprob: -23.0

Token 1679: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012136146426200867
    2. '()
' → logprob: -5.012135982513428
    3. '
' → logprob: -5.637135982513428
    4. '()' → logprob: -7.012135982513428
    5. '   ' → logprob: -7.762135982513428
    6. '       ' → logprob: -8.512136459350586
    7. '(' → logprob: -9.887136459350586
    8. '<|end|>' → logprob: -10.137136459350586
    9. '[' → logprob: -10.387136459350586
    10. '[]
' → logprob: -10.512136459350586

Token 1680: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13370488584041595
    2. '       ' → logprob: -2.133704900741577
    3. '           ' → logprob: -5.008704662322998
    4. 'for' → logprob: -9.883705139160156
    5. '```' → logprob: -10.758705139160156
    6. 'print' → logprob: -14.008705139160156
    7. ' for' → logprob: -14.508705139160156
    8. '	   ' → logprob: -15.508705139160156
    9. '`' → logprob: -15.758705139160156
    10. '
' → logprob: -16.258705139160156

Token 1681: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22223001718521118
    2. 'print' (adapté à ' print') → logprob: -1.7222299575805664
    3. '   ' → logprob: -3.9722299575805664
    4. '           ' → logprob: -6.722229957580566
    5. '       ' → logprob: -7.722229957580566
    6. ' for' → logprob: -9.222229957580566
    7. '```' → logprob: -10.722229957580566
    8. ' print' → logprob: -13.097229957580566
    9. '
' → logprob: -15.972229957580566
    10. '               ' → logprob: -16.222230911254883

Token 1682: '('' (ID: 706)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.18303436040878296
    2. '('' → logprob: -2.1830344200134277
    3. '("' → logprob: -2.9330344200134277
    4. '(len' → logprob: -6.933034420013428
    5. '(' → logprob: -9.05803394317627
    6. '*' → logprob: -9.18303394317627
    7. ''' → logprob: -9.68303394317627
    8. '"' → logprob: -9.93303394317627
    9. 'len' → logprob: -11.93303394317627
    10. '(*(' → logprob: -12.30803394317627

Token 1683: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.030812671408057213
    2. '"' → logprob: -3.6558127403259277
    3. '('' → logprob: -5.655812740325928
    4. '(*' → logprob: -7.405812740325928
    5. '*' → logprob: -9.03081226348877
    6. 'len' → logprob: -9.78081226348877
    7. '(len' → logprob: -9.90581226348877
    8. ' '' → logprob: -10.03081226348877
    9. ''\' → logprob: -10.03081226348877
    10. '("' → logprob: -10.28081226348877

Token 1684: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.0017630017828196287
    2. 'print' → logprob: -6.376762866973877
    3. ''' → logprob: -10.501763343811035
    4. ''.' → logprob: -11.501763343811035
    5. 'write' → logprob: -11.501763343811035
    6. '.join' → logprob: -12.376763343811035
    7. '```' → logprob: -12.876763343811035
    8. '.' → logprob: -13.251763343811035
    9. 'sep' → logprob: -13.751763343811035
    10. ' join' → logprob: -14.126763343811035

Token 1685: '(map' (ID: 16946)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.018383705988526344
    2. '(map' → logprob: -4.018383502960205
    3. 'str' → logprob: -8.768383979797363
    4. 'map' → logprob: -9.518383979797363
    5. '[str' → logprob: -12.268383979797363
    6. '=str' → logprob: -17.393383026123047
    7. ' map' → logprob: -18.893383026123047
    8. ' str' → logprob: -18.893383026123047
    9. '	str' → logprob: -19.018383026123047
    10. '(f' → logprob: -19.393383026123047

Token 1686: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0014227337669581175
    2. 'str' → logprob: -6.626422882080078
    3. '```' → logprob: -9.626422882080078
    4. '=str' → logprob: -11.126422882080078
    5. '[str' → logprob: -11.876422882080078
    6. ')' → logprob: -12.501422882080078
    7. '
' → logprob: -13.751422882080078
    8. '(' → logprob: -13.751422882080078
    9. '   ' → logprob: -13.876422882080078
    10. ' str' → logprob: -14.501422882080078

Token 1687: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6932019591331482
    2. ',' → logprob: -0.6932019591331482
    3. 'areas' → logprob: -10.693202018737793
    4. ')' → logprob: -11.193202018737793
    5. '),' → logprob: -11.943202018737793
    6. ',
' → logprob: -12.693202018737793
    7. ')(' → logprob: -13.193202018737793
    8. '
' → logprob: -13.193202018737793
    9. '))' → logprob: -13.568202018737793
    10. ',(' → logprob: -14.068202018737793

Token 1688: ' areas' (ID: 6723)
  Prédit: 'areas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'areas' → logprob: -3.547789674485102e-05
    2. ' areas' → logprob: -10.250035285949707
    3. 'area' → logprob: -18.750036239624023
    4. 'Areas' → logprob: -20.000036239624023
    5. '[' → logprob: -21.000036239624023
    6. '   ' → logprob: -21.250036239624023
    7. '           ' → logprob: -21.875036239624023
    8. 'angles' → logprob: -22.750036239624023
    9. '       ' → logprob: -22.750036239624023
    10. '```' → logprob: -23.250036239624023

Token 1689: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0010978339705616236
    2. ')))' → logprob: -7.001097679138184
    3. '))
' → logprob: -8.751097679138184
    4. '   ' → logprob: -11.751097679138184
    5. '()))' → logprob: -11.751097679138184
    6. '           ' → logprob: -12.126097679138184
    7. '       ' → logprob: -12.626097679138184
    8. ')' → logprob: -13.001097679138184
    9. ' ))' → logprob: -14.751097679138184
    10. '))))' → logprob: -15.376097679138184

Token 1690: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07969290763139725
    2. '<|end|>' → logprob: -2.704692840576172
    3. '```' → logprob: -5.454692840576172
    4. '
' → logprob: -5.454692840576172
    5. ' if' → logprob: -7.329692840576172
    6. '#' → logprob: -8.829692840576172
    7. '<|end|>' → logprob: -9.079692840576172
    8. '...' → logprob: -9.829692840576172
    9. ')' → logprob: -10.579692840576172
    10. '``' → logprob: -10.704692840576172

Token 1691: ' except' (ID: 6384)
  Prédit: 'except'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' (adapté à ' except') → logprob: -0.28305956721305847
    2. '   ' → logprob: -1.6580595970153809
    3. ' except' → logprob: -2.908059597015381
    4. '           ' → logprob: -7.033059597015381
    5. '	except' → logprob: -8.783059120178223
    6. '       ' → logprob: -8.908059120178223
    7. '
' → logprob: -9.033059120178223
    8. ' ' → logprob: -9.283059120178223
    9. '    
' → logprob: -11.908059120178223
    10. '<|end|>' → logprob: -12.033059120178223

Token 1692: ' Stop' (ID: 22535)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -0.011141783557832241
    2. 'EOF' → logprob: -4.511141777038574
    3. ' Stop' → logprob: -9.386141777038574
    4. 'STOP' → logprob: -12.386141777038574
    5. ' EOF' → logprob: -12.886141777038574
    6. '(' → logprob: -13.011141777038574
    7. '_stop' → logprob: -14.761141777038574
    8. '_Stop' → logprob: -15.761141777038574
    9. 'Stopping' → logprob: -15.761141777038574
    10. '(stop' → logprob: -16.13614273071289

Token 1693: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -0.00015205175441224128
    2. 'Iterator' → logprob: -9.625151634216309
    3. 'Stop' → logprob: -10.625151634216309
    4. 'Exception' → logprob: -10.625151634216309
    5. 'iteration' → logprob: -11.000151634216309
    6. '   ' → logprob: -12.875151634216309
    7. 'Iter' → logprob: -13.125151634216309
    8. 'Error' → logprob: -13.250151634216309
    9. 'Instruction' → logprob: -13.375151634216309
    10. 'Continue' → logprob: -13.500151634216309

Token 1694: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08694601058959961
    2. ':
' → logprob: -2.5869460105895996
    3. '   ' → logprob: -4.9619460105896
    4. '():
' → logprob: -7.9619460105896
    5. '<|end|>' → logprob: -8.336946487426758
    6. ':return' → logprob: -8.586946487426758
    7. '():' → logprob: -8.711946487426758
    8. '       ' → logprob: -10.211946487426758
    9. '<|end|>' → logprob: -11.336946487426758
    10. ':void' → logprob: -12.211946487426758

Token 1695: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016328091733157635
    2. '       ' → logprob: -6.5016326904296875
    3. 'pass' → logprob: -9.376632690429688
    4. 'return' → logprob: -10.251632690429688
    5. ' pass' → logprob: -12.001632690429688
    6. '```' → logprob: -13.751632690429688
    7. ' return' → logprob: -14.251632690429688
    8. '    ' → logprob: -14.501632690429688
    9. ':return' → logprob: -14.501632690429688
    10. '	pass' → logprob: -14.626632690429688

Token 1696: ' pass' (ID: 1853)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07106148451566696
    2. 'pass' (adapté à ' pass') → logprob: -3.071061372756958
    3. '   ' → logprob: -3.821061372756958
    4. ' return' → logprob: -8.571061134338379
    5. ' pass' → logprob: -9.071061134338379
    6. '       ' → logprob: -11.571061134338379
    7. 'break' → logprob: -13.446061134338379
    8. '    ' → logprob: -13.696061134338379
    9. '
' → logprob: -14.321061134338379
    10. '```' → logprob: -14.571061134338379

Token 1697: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005731347948312759
    2. '<|end|>' → logprob: -5.505731582641602
    3. '
' → logprob: -6.630731582641602
    4. ' if' → logprob: -8.380731582641602
    5. '```' → logprob: -9.755731582641602
    6. '#' → logprob: -10.380731582641602
    7. '<|end|>' → logprob: -12.255731582641602
    8. 'If' → logprob: -13.380731582641602
    9. '__' → logprob: -13.505731582641602
    10. '...' → logprob: -13.755731582641602

Token 1698: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -8.625866030342877e-05
    2. '```' → logprob: -10.250085830688477
    3. ' if' → logprob: -10.375085830688477
    4. '<|end|>' → logprob: -11.125085830688477
    5. '#' → logprob: -12.375085830688477
    6. '@if' → logprob: -15.625085830688477
    7. '__' → logprob: -16.125085830688477
    8. 'If' → logprob: -16.375085830688477
    9. '	if' → logprob: -16.625085830688477
    10. '
' → logprob: -16.750085830688477

Token 1699: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5761620998382568
    2. '__' → logprob: -0.8261620998382568
    3. '_' → logprob: -8.826162338256836
    4. '_name' → logprob: -9.951162338256836
    5. '___' → logprob: -10.826162338256836
    6. ' _' → logprob: -12.576162338256836
    7. 'name' → logprob: -13.326162338256836
    8. '____' → logprob: -14.076162338256836
    9. ' ___' → logprob: -14.701162338256836
    10. '_main' → logprob: -14.951162338256836

Token 1700: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12557584047317505
    2. '==' → logprob: -2.2505757808685303
    3. ' ==' → logprob: -4.625576019287109
    4. 'if' → logprob: -6.250576019287109
    5. '=="' → logprob: -7.750576019287109
    6. '```' → logprob: -9.00057601928711
    7. ' __' → logprob: -9.25057601928711
    8. '=='' → logprob: -9.50057601928711
    9. 'name' → logprob: -9.87557601928711
    10. '__.__' → logprob: -9.87557601928711

Token 1701: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00030733743915334344
    2. '__.__' → logprob: -8.125307083129883
    3. '__.' → logprob: -12.500307083129883
    4. '__[' → logprob: -13.375307083129883
    5. '__
' → logprob: -13.625307083129883
    6. '__["' → logprob: -13.625307083129883
    7. '==' → logprob: -13.625307083129883
    8. '__('' → logprob: -13.750307083129883
    9. '```' → logprob: -15.375307083129883
    10. '=="' → logprob: -15.375307083129883

Token 1702: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08308001607656479
    2. '==' → logprob: -2.5830800533294678
    3. ' ==' → logprob: -5.583079814910889
    4. '=="' → logprob: -8.208080291748047
    5. '=='' → logprob: -8.958080291748047
    6. '__.__' → logprob: -11.583080291748047
    7. '.__' → logprob: -13.208080291748047
    8. '===' → logprob: -13.333080291748047
    9. '__.' → logprob: -13.333080291748047
    10. '==
' → logprob: -13.708080291748047

Token 1703: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.38688987493515015
    2. ''' → logprob: -1.136889934539795
    3. '__' → logprob: -11.136889457702637
    4. ' "__' → logprob: -12.511889457702637
    5. ' '__' → logprob: -14.636889457702637
    6. ''"' → logprob: -16.761890411376953
    7. '"name' → logprob: -17.386890411376953
    8. ''name' → logprob: -17.511890411376953
    9. '('__' → logprob: -18.011890411376953
    10. '   ' → logprob: -18.386890411376953

Token 1704: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.038180455565452576
    2. '__' → logprob: -3.288180351257324
    3. '"' → logprob: -9.413180351257324
    4. '_main' → logprob: -10.163180351257324
    5. ''' → logprob: -11.788180351257324
    6. ' main' → logprob: -12.288180351257324
    7. '__":
' → logprob: -12.913180351257324
    8. 'name' → logprob: -13.288180351257324
    9. '___' → logprob: -14.413180351257324
    10. '-main' → logprob: -15.038180351257324

Token 1705: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.04962677136063576
    2. '__' → logprob: -3.0496268272399902
    3. '__':
' → logprob: -6.92462682723999
    4. '__
' → logprob: -10.674626350402832
    5. '__.' → logprob: -11.174626350402832
    6. '__.__' → logprob: -12.299626350402832
    7. '__["' → logprob: -12.299626350402832
    8. '__
' → logprob: -12.799626350402832
    9. '__:' → logprob: -13.174626350402832
    10. '__",' → logprob: -13.674626350402832

Token 1706: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00591196957975626
    2. '   ' → logprob: -5.255911827087402
    3. ' main' → logprob: -7.505911827087402
    4. '	main' → logprob: -9.255911827087402
    5. '```' → logprob: -11.755911827087402
    6. '__' → logprob: -11.880911827087402
    7. '    
' → logprob: -11.880911827087402
    8. '_main' → logprob: -12.130911827087402
    9. '(main' → logprob: -12.630911827087402
    10. '
' → logprob: -13.755911827087402

Token 1707: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -16.75
    3. '   ' → logprob: -18.75
    4. '	main' → logprob: -19.75
    5. 'import' → logprob: -22.0
    6. '(main' → logprob: -24.125
    7. '.main' → logprob: -25.0
    8. '_main' → logprob: -26.0
    9. '```' → logprob: -28.5
    10. '  ' → logprob: -29.125

Token 1708: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1706
Tokens correctement prédits (1ère position, stricte): 713
Tokens correctement prédits (1ère position, avec adaptation): 792
Tokens correctement prédits (top 10): 1451
Précision stricte (1ère position): 41.79%
Précision adaptée (1ère position): 46.42%
Précision (top 10): 85.05%
================================================================================
