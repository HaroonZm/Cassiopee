================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:25:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import Optional, List, Iterator
import sys
import math

class PhysicsModel(ABC):
    @abstractmethod
    def velocity_after(self, time: float) -> float:
        pass

    @abstractmethod
    def drop_after(self, time: float) -> float:
        pass

class FreeFallModel(PhysicsModel):
    GRAVITY: float = 9.8
    
    def velocity_after(self, time: float) -> float:
        return self.GRAVITY * time
    
    def drop_after(self, time: float) -> float:
        return 0.5 * self.GRAVITY * time**2

class FloorHeightModel(ABC):
    @abstractmethod
    def height_of_floor(self, floor: int) -> float:
        pass

class LinearFloorHeightModel(FloorHeightModel):
    def height_of_floor(self, floor: int) -> float:
        # height = 5 * N - 5 according to problem statement
        return 5 * floor - 5

class CrackVelocityDeterminer:
    def __init__(self, physics_model: PhysicsModel, height_model: FloorHeightModel) -> None:
        self.physics_model = physics_model
        self.height_model = height_model

    def minimal_floor_to_crack(self, crack_velocity: float) -> Optional[int]:
        """
        Determine minimal floor number where the ball cracks.

        Given minimum velocity to crack, find smallest floor N such that
        velocity on hitting that floor is at least crack_velocity.
        """
        if crack_velocity <= 0:
            return None  # Invalid input based on problem constraints

        # Use velocity = g * t
        # height = 5*N - 5 = 0.5 * g * t^2
        # solve t from height: t = sqrt(2*height/g)
        # velocity at hitting floor: v = g * t = g * sqrt(2*height/g) = sqrt(2*g*height)
        # Need smallest N s.t sqrt(2*g*height) >= crack_velocity
        # i.e. height >= (crack_velocity^2) / (2*g)
        threshold_height = (crack_velocity**2) / (2 * self.physics_model.GRAVITY)

        # Now find minimal floor N s.t 5*N - 5 >= threshold_height => N >= (threshold_height + 5)/5
        floor = math.ceil((threshold_height + 5) / 5)

        # Floor number must be positive integer; if result < 1, return 1
        return max(floor, 1)

class InputProcessor:
    def __init__(self, crack_handler: CrackVelocityDeterminer) -> None:
        self.crack_handler = crack_handler

    def process_stream(self, input_stream: Iterator[str]) -> List[int]:
        results = []
        for line in input_stream:
            line = line.strip()
            if not line:
                continue
            try:
                crack_velocity = float(line)
                # Constraints: 0 < v < 200 (handled implicitly, but we skip invalid input)
                if crack_velocity <= 0 or crack_velocity >= 200:
                    continue
            except ValueError:
                continue
            floor = self.crack_handler.minimal_floor_to_crack(crack_velocity)
            if floor is not None:
                results.append(floor)
        return results

def main():
    physics_model = FreeFallModel()
    floor_model = LinearFloorHeightModel()
    crack_handler = CrackVelocityDeterminer(physics_model, floor_model)
    input_processor = InputProcessor(crack_handler)
    results = input_processor.process_stream(sys.stdin)
    for result in results:
        print(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.42944446206092834
    2. 'ABC' → logprob: -1.054444432258606
    3. 'AB' → logprob: -7.804444313049316
    4. ' A' → logprob: -9.179444313049316
    5. 'ABCDE' → logprob: -9.429444313049316
    6. 'import' → logprob: -9.929444313049316
    7. 'abstract' → logprob: -10.554444313049316
    8. 'A' → logprob: -10.679444313049316
    9. 'abc' → logprob: -10.929444313049316
    10. 'ABS' → logprob: -12.054444313049316

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.28183513879776
    2. ',' → logprob: -1.4068350791931152
    3. 'import' → logprob: -8.156835556030273
    4. '```' → logprob: -9.406835556030273
    5. ' ,' → logprob: -9.906835556030273
    6. '' → logprob: -10.156835556030273
    7. ' ' → logprob: -10.281835556030273
    8. ',
' → logprob: -10.281835556030273
    9. ':' → logprob: -10.406835556030273
    10. ' .' → logprob: -10.781835556030273

Token 5: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.5760498642921448
    2. ' abstract' → logprob: -0.8260498642921448
    3. 'Abstract' → logprob: -9.2010498046875
    4. ' ' → logprob: -12.5760498046875
    5. '.abstract' → logprob: -13.2010498046875
    6. ' Abstract' → logprob: -13.4510498046875
    7. ' ABC' → logprob: -14.5760498046875
    8. 'abc' → logprob: -14.8260498046875
    9. ' A' → logprob: -14.9510498046875
    10. '123' → logprob: -15.2010498046875

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00019889144459739327
    2. 'classmethod' → logprob: -9.000199317932129
    3. 'm' → logprob: -10.000199317932129
    4. '_method' → logprob: -11.250199317932129
    5. 'staticmethod' → logprob: -11.750199317932129
    6. 'meth' → logprob: -12.375199317932129
    7. ' method' → logprob: -13.750199317932129
    8. '```' → logprob: -13.875199317932129
    9. 'ethod' → logprob: -14.125199317932129
    10. 'abstract' → logprob: -14.375199317932129

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19592909514904022
    2. '```' → logprob: -2.4459290504455566
    3. '

' → logprob: -3.3209290504455566
    4. '\n' → logprob: -4.195929050445557
    5. 'class' → logprob: -4.570929050445557
    6. '
' → logprob: -4.820929050445557
    7. '' → logprob: -5.320929050445557
    8. '\' → logprob: -5.445929050445557
    9. '``' → logprob: -5.445929050445557
    10. '<|end|>' → logprob: -6.570929050445557

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08355175703763962
    2. '

' → logprob: -3.4585516452789307
    3. 'class' → logprob: -3.8335516452789307
    4. '
' → logprob: -4.83355188369751
    5. '```' → logprob: -4.83355188369751
    6. '' → logprob: -5.08355188369751
    7. '\n' → logprob: -6.20855188369751
    8. ' 

' → logprob: -7.45855188369751
    9. ' 
' → logprob: -7.45855188369751
    10. '``' → logprob: -8.208551406860352

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.02580157481133938
    2. ' collections' → logprob: -4.025801658630371
    3. ' dat' → logprob: -5.525801658630371
    4. 'typing' → logprob: -6.525801658630371
    5. ' io' → logprob: -7.650801658630371
    6. ' abc' → logprob: -8.025801658630371
    7. ' os' → logprob: -8.275801658630371
    8. ' sys' → logprob: -8.400801658630371
    9. 'collections' → logprob: -8.650801658630371
    10. ' math' → logprob: -8.775801658630371

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.13478213548660278
    2. 'import' → logprob: -2.134782075881958
    3. '.' → logprob: -5.259782314300537
    4. '<|end|>' → logprob: -7.009782314300537
    5. '.import' → logprob: -7.884782314300537
    6. '[' → logprob: -8.009781837463379
    7. '```' → logprob: -8.384781837463379
    8. ' as' → logprob: -8.509781837463379
    9. '_import' → logprob: -9.509781837463379
    10. '.space' → logprob: -9.509781837463379

Token 11: ' Optional' (ID: 19351)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.35420724749565125
    2. 'Any' → logprob: -1.4792072772979736
    3. ' List' → logprob: -3.8542072772979736
    4. ' Union' → logprob: -4.1042070388793945
    5. ' Protocol' → logprob: -4.3542070388793945
    6. ' Callable' → logprob: -4.7292070388793945
    7. 'List' → logprob: -5.8542070388793945
    8. 'Protocol' → logprob: -6.3542070388793945
    9. ' Optional' → logprob: -6.3542070388793945
    10. 'Union' → logprob: -6.4792070388793945

Token 12: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.13201254606246948
    2. '
' → logprob: -2.1320126056671143
    3. 'class' → logprob: -6.007012367248535
    4. '```' → logprob: -6.632012367248535
    5. '\n' → logprob: -7.757012367248535
    6. '


' → logprob: -8.007012367248535
    7. '
' → logprob: -9.132012367248535
    8. ' 

' → logprob: -9.257012367248535
    9. ',' → logprob: -9.507012367248535
    10. '<|end|>' → logprob: -9.882012367248535

Token 13: ' List' (ID: 2655)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Union' → logprob: -0.7616702318191528
    2. ' List' → logprob: -1.8866702318191528
    3. 'Union' → logprob: -2.1366701126098633
    4. ' Callable' → logprob: -2.1366701126098633
    5. ' Any' → logprob: -3.1366701126098633
    6. 'Any' → logprob: -3.2616701126098633
    7. 'List' → logprob: -3.3866701126098633
    8. 'Callable' → logprob: -4.011670112609863
    9. ' Protocol' → logprob: -5.761670112609863
    10. ' Type' → logprob: -6.386670112609863

Token 14: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8778963685035706
    2. '

' → logprob: -0.8778963685035706
    3. 'class' → logprob: -2.002896308898926
    4. '```' → logprob: -3.627896308898926
    5. '\n' → logprob: -5.127896308898926
    6. '


' → logprob: -8.002896308898926
    7. '``' → logprob: -8.002896308898926
    8. ' class' → logprob: -8.502896308898926
    9. '
' → logprob: -9.127896308898926
    10. '<class' → logprob: -9.752896308898926

Token 15: ' Iterator' (ID: 41994)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Union' → logprob: -0.13065309822559357
    2. 'Union' → logprob: -3.130653142929077
    3. ' Callable' → logprob: -3.505653142929077
    4. ' Tuple' → logprob: -4.630652904510498
    5. ' Any' → logprob: -4.630652904510498
    6. ' Dict' → logprob: -4.755652904510498
    7. 'Any' → logprob: -5.380652904510498
    8. 'Tuple' → logprob: -5.380652904510498
    9. 'Dict' → logprob: -5.505652904510498
    10. 'Callable' → logprob: -6.380652904510498

Token 16: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5009334087371826
    2. 'class' → logprob: -1.2509334087371826
    3. '

' → logprob: -2.3759334087371826
    4. '```' → logprob: -4.500933647155762
    5. '\n' → logprob: -6.125933647155762
    6. '
' → logprob: -7.500933647155762
    7. ' class' → logprob: -8.125933647155762
    8. '


' → logprob: -8.625933647155762
    9. '' → logprob: -8.750933647155762
    10. '<class' → logprob: -9.250933647155762

Token 17: 'import' (ID: 561)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.11713457107543945
    2. '
' → logprob: -2.3671345710754395
    3. '```' → logprob: -4.3671345710754395
    4. '

' → logprob: -5.7421345710754395
    5. '\n' → logprob: -7.9921345710754395
    6. '``' → logprob: -8.742134094238281
    7. '
' → logprob: -8.867134094238281
    8. '' → logprob: -9.492134094238281
    9. '<class' → logprob: -9.867134094238281
    10. '


' → logprob: -10.492134094238281

Token 18: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.2471308559179306
    2. ' typing' → logprob: -1.9971308708190918
    3. ' collections' → logprob: -3.122130870819092
    4. ' abc' → logprob: -4.622130870819092
    5. ' sys' → logprob: -4.872130870819092
    6. ' io' → logprob: -4.997130870819092
    7. ' re' → logprob: -5.372130870819092
    8. ' pathlib' → logprob: -5.497130870819092
    9. ' itertools' → logprob: -6.622130870819092
    10. ' threading' → logprob: -6.997130870819092

Token 19: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7381162047386169
    2. '

' → logprob: -0.9881162047386169
    3. 'class' → logprob: -1.9881162643432617
    4. '\n' → logprob: -5.113116264343262
    5. '```' → logprob: -5.238116264343262
    6. '' → logprob: -7.988116264343262
    7. '
' → logprob: -8.238116264343262
    8. '


' → logprob: -8.363116264343262
    9. ' class' → logprob: -8.613116264343262
    10. '\' → logprob: -9.488116264343262

Token 20: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49372145533561707
    2. 'class' → logprob: -1.4937214851379395
    3. '

' → logprob: -2.1187214851379395
    4. '```' → logprob: -3.2437214851379395
    5. '\n' → logprob: -5.3687214851379395
    6. '``' → logprob: -7.9937214851379395
    7. '' → logprob: -8.118721008300781
    8. '<class' → logprob: -8.993721008300781
    9. ' class' → logprob: -9.118721008300781
    10. '<|end|>' → logprob: -9.618721008300781

Token 21: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.05486828833818436
    2. ' io' → logprob: -3.054868221282959
    3. 'os' → logprob: -5.804868221282959
    4. ' typing' → logprob: -6.679868221282959
    5. 'io' → logprob: -6.929868221282959
    6. ' pathlib' → logprob: -7.679868221282959
    7. ' traceback' → logprob: -8.179868698120117
    8. ' threading' → logprob: -9.429868698120117
    9. ' re' → logprob: -9.679868698120117
    10. ' logging' → logprob: -10.179868698120117

Token 22: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.20040634274482727
    2. '
' → logprob: -2.200406312942505
    3. 'class' → logprob: -2.700406312942505
    4. '```' → logprob: -5.950406551361084
    5. '\n' → logprob: -7.575406551361084
    6. '


' → logprob: -8.450406074523926
    7. '
' → logprob: -9.200406074523926
    8. ' class' → logprob: -9.700406074523926
    9. '' → logprob: -9.950406074523926
    10. '<class' → logprob: -10.200406074523926

Token 23: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.06677467375993729
    2. '
' → logprob: -3.316774606704712
    3. 'c' → logprob: -3.691774606704712
    4. '\n' → logprob: -6.941774845123291
    5. '

' → logprob: -7.191774845123291
    6. '```' → logprob: -7.441774845123291
    7. '' → logprob: -7.691774845123291
    8. 'cla' → logprob: -8.941774368286133
    9. '@' → logprob: -9.191774368286133
    10. '
' → logprob: -9.316774368286133

Token 24: ' Physics' (ID: 48711)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00638446444645524
    2. ' Abstract' → logprob: -5.506384372711182
    3. ' Basic' → logprob: -6.881384372711182
    4. ' Base' → logprob: -8.13138484954834
    5. ' Shape' → logprob: -8.88138484954834
    6. ' My' → logprob: -9.00638484954834
    7. ' ' → logprob: -9.13138484954834
    8. ' Space' → logprob: -9.25638484954834
    9. ' Object' → logprob: -9.38138484954834
    10. ' ABC' → logprob: -9.63138484954834

Token 25: 'Model' (ID: 2239)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.034770287573337555
    2. ':' → logprob: -3.4097702503204346
    3. 'Physics' → logprob: -8.784770011901855
    4. '():' → logprob: -9.409770011901855
    5. '(Abstract' → logprob: -9.659770011901855
    6. 'Engine' → logprob: -9.659770011901855
    7. 'Space' → logprob: -9.784770011901855
    8. 'Base' → logprob: -9.909770011901855
    9. 'Calculator' → logprob: -10.159770011901855
    10. 'Component' → logprob: -10.409770011901855

Token 26: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25267842411994934
    2. ':' → logprob: -1.502678394317627
    3. '(Abstract' → logprob: -7.252678394317627
    4. '():' → logprob: -11.502678871154785
    5. ' :' → logprob: -12.002678871154785
    6. ':**' → logprob: -12.502678871154785
    7. '```' → logprob: -12.627678871154785
    8. '(:' → logprob: -12.752678871154785
    9. ':
' → logprob: -12.877678871154785
    10. ' (' → logprob: -13.377678871154785

Token 27: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.31327947974205017
    2. ' ABC' → logprob: -1.3132795095443726
    3. ')' → logprob: -11.813279151916504
    4. 'abc' → logprob: -12.938279151916504
    5. 'ABCDE' → logprob: -13.188279151916504
    6. 'AB' → logprob: -13.438279151916504
    7. 'Abstract' → logprob: -13.813279151916504
    8. ' ' → logprob: -13.938279151916504
    9. '   ' → logprob: -13.938279151916504
    10. ' abc' → logprob: -14.813279151916504

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0034016903955489397
    2. ')' → logprob: -5.753401756286621
    3. ':' → logprob: -8.503401756286621
    4. ' ):' → logprob: -11.253401756286621
    5. '):
' → logprob: -12.378401756286621
    6. ',' → logprob: -13.253401756286621
    7. '):

' → logprob: -14.378401756286621
    8. '():' → logprob: -14.753401756286621
    9. ':)' → logprob: -15.003401756286621
    10. '):
' → logprob: -16.003400802612305

Token 29: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005623358301818371
    2. '   ' → logprob: -5.8806233406066895
    3. ' :' → logprob: -6.6306233406066895
    4. ':
' → logprob: -8.130623817443848
    5. ' ' → logprob: -8.380623817443848
    6. '    ' → logprob: -8.505623817443848
    7. '\' → logprob: -8.880623817443848
    8. '.' → logprob: -8.880623817443848
    9. '<|end|>' → logprob: -9.255623817443848
    10. '
' → logprob: -9.505623817443848

Token 30: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1254980564117432
    2. '    
' → logprob: -1.3754980564117432
    3. '    ' → logprob: -1.5004980564117432
    4. 'def' → logprob: -2.500498056411743
    5. '
' → logprob: -2.875498056411743
    6. ' def' → logprob: -3.750498056411743
    7. ' 
' → logprob: -4.375497817993164
    8. ' ' → logprob: -4.500497817993164
    9. '@' (adapté à ' @') → logprob: -5.250497817993164
    10. '\n' → logprob: -6.125497817993164

Token 31: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -3.173704271830502e-06
    2. 'ab' → logprob: -13.37500286102295
    3. 'abs' → logprob: -14.00000286102295
    4. 'abc' → logprob: -15.37500286102295
    5. 'staticmethod' → logprob: -15.50000286102295
    6. 'property' → logprob: -15.87500286102295
    7. ' abstract' → logprob: -16.750003814697266
    8. 'classmethod' → logprob: -17.125003814697266
    9. '.abstract' → logprob: -17.125003814697266
    10. 'a' → logprob: -17.625003814697266

Token 32: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -1.9862216504407115e-05
    2. '_method' → logprob: -11.000020027160645
    3. 'classmethod' → logprob: -13.750020027160645
    4. 'meth' → logprob: -14.000020027160645
    5. '.method' → logprob: -14.375020027160645
    6. 'staticmethod' → logprob: -15.375020027160645
    7. 'property' → logprob: -16.500019073486328
    8. 'abstract' → logprob: -16.625019073486328
    9. ' method' → logprob: -16.750019073486328
    10. 'met' → logprob: -17.250019073486328

Token 33: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7820108532905579
    2. 'def' → logprob: -1.157010793685913
    3. ' def' → logprob: -1.657010793685913
    4. '
' → logprob: -4.532011032104492
    5. '\' → logprob: -5.032011032104492
    6. ' ' → logprob: -5.157011032104492
    7. '<|end|>' → logprob: -6.157011032104492
    8. '    ' → logprob: -6.282011032104492
    9. ')' → logprob: -6.407011032104492
    10. '   ' → logprob: -6.407011032104492

Token 34: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4236477017402649
    2. ' def' → logprob: -1.2986476421356201
    3. '(' → logprob: -2.67364764213562
    4. '   ' → logprob: -7.548647880554199
    5. '(def' → logprob: -7.798647880554199
    6. ' (' → logprob: -7.923647880554199
    7. ')' → logprob: -8.1736478805542
    8. '(
' → logprob: -8.1736478805542
    9. '
' → logprob: -8.2986478805542
    10. ' ' → logprob: -8.6736478805542

Token 35: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008620958775281906
    2. ' def' → logprob: -4.758620738983154
    3. '   ' → logprob: -13.133621215820312
    4. 'd' → logprob: -13.758621215820312
    5. 'de' → logprob: -13.883621215820312
    6. '```' → logprob: -14.133621215820312
    7. '  ' → logprob: -15.008621215820312
    8. ' ' → logprob: -15.008621215820312
    9. 'classmethod' → logprob: -15.508621215820312
    10. 'define' → logprob: -15.633621215820312

Token 36: ' velocity' (ID: 30061)
  Prédit: ' simulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' simulate' → logprob: -0.4723951518535614
    2. ' calculate' → logprob: -1.3473951816558838
    3. ' predict' → logprob: -2.847395181655884
    4. ' compute' → logprob: -4.097394943237305
    5. ' apply' → logprob: -4.597394943237305
    6. ' solve' → logprob: -4.972394943237305
    7. 'simulate' → logprob: -4.972394943237305
    8. ' update' → logprob: -5.472394943237305
    9. ' evaluate' → logprob: -5.847394943237305
    10. ' ' → logprob: -6.097394943237305

Token 37: '_after' (ID: 46788)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1603270024061203
    2. '(' → logprob: -1.9103269577026367
    3. ' (' → logprob: -10.535326957702637
    4. '_(' → logprob: -10.910326957702637
    5. '_' → logprob: -11.160326957702637
    6. '(s' → logprob: -11.285326957702637
    7. '_at' → logprob: -11.410326957702637
    8. 's' → logprob: -12.035326957702637
    9. 'self' → logprob: -12.785326957702637
    10. '(
' → logprob: -13.285326957702637

Token 38: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7446284890174866
    2. '_' → logprob: -1.6196284294128418
    3. '_time' → logprob: -1.8696284294128418
    4. '(self' → logprob: -1.9946284294128418
    5. '_collision' → logprob: -4.369628429412842
    6. 'time' → logprob: -5.244628429412842
    7. '(time' → logprob: -5.369628429412842
    8. '_space' → logprob: -5.744628429412842
    9. '```' → logprob: -6.494628429412842
    10. '(space' → logprob: -6.619628429412842

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017719989642500877
    2. '):' → logprob: -4.6427202224731445
    3. ' ,' → logprob: -5.8927202224731445
    4. 'self' → logprob: -6.2677202224731445
    5. '_' → logprob: -6.7677202224731445
    6. ')' → logprob: -7.1427202224731445
    7. '_time' → logprob: -8.392720222473145
    8. ' ):' → logprob: -8.642720222473145
    9. '_,' → logprob: -9.017720222473145
    10. ',time' → logprob: -9.267720222473145

Token 40: ' time' (ID: 1058)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.13197869062423706
    2. 'self' → logprob: -2.131978750228882
    3. ' time' → logprob: -6.381978511810303
    4. ' )' → logprob: -6.381978511810303
    5. 'time' → logprob: -7.756978511810303
    6. ' object' → logprob: -8.131978988647461
    7. ')' → logprob: -8.506978988647461
    8. ' initial' → logprob: -9.006978988647461
    9. ' ' → logprob: -9.381978988647461
    10. 'object' → logprob: -9.631978988647461

Token 41: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016543013975024223
    2. '):' → logprob: -4.266542911529541
    3. ')' → logprob: -6.516542911529541
    4. ',' → logprob: -7.391542911529541
    5. '_seconds' → logprob: -9.1415433883667
    6. '_elapsed' → logprob: -10.0165433883667
    7. ' :' → logprob: -10.5165433883667
    8. '_time' → logprob: -10.6415433883667
    9. 's' → logprob: -10.8915433883667
    10. ' ):' → logprob: -11.6415433883667

Token 42: ' float' (ID: 4428)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.5912506580352783
    2. ' ' → logprob: -1.0912506580352783
    3. ' float' → logprob: -2.4662506580352783
    4. ')' → logprob: -3.8412506580352783
    5. ':' → logprob: -6.966250419616699
    6. 'float' → logprob: -6.966250419616699
    7. ' )->' → logprob: -7.216250419616699
    8. ' ):' → logprob: -7.466250419616699
    9. '  ' → logprob: -8.5912504196167
    10. '_float' → logprob: -9.0912504196167

Token 43: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006254400126636028
    2. ',' → logprob: -5.381254196166992
    3. '):' → logprob: -6.506254196166992
    4. ' )' → logprob: -9.881254196166992
    5. ')->' → logprob: -10.131254196166992
    6. '   ' → logprob: -10.256254196166992
    7. ':' → logprob: -11.756254196166992
    8. ',)' → logprob: -13.631254196166992
    9. ' ,' → logprob: -14.256254196166992
    10. '       ' → logprob: -14.506254196166992

Token 44: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.48861926794052124
    2. ' ->' → logprob: -1.113619327545166
    3. ')' → logprob: -2.863619327545166
    4. ')->' → logprob: -7.113619327545166
    5. ':' → logprob: -8.988618850708008
    6. '   ' → logprob: -9.113618850708008
    7. ',' → logprob: -10.988618850708008
    8. ' ' → logprob: -11.488618850708008
    9. '>' → logprob: -12.488618850708008
    10. '  ' → logprob: -12.613618850708008

Token 45: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.010943355970084667
    2. 'float' → logprob: -4.885943412780762
    3. ' Optional' → logprob: -5.760943412780762
    4. ' None' → logprob: -9.135943412780762
    5. 'Optional' → logprob: -9.760943412780762
    6. ' ' → logprob: -11.385943412780762
    7. '	float' → logprob: -12.760943412780762
    8. 'None' → logprob: -13.260943412780762
    9. ' ' → logprob: -14.010943412780762
    10. ' List' → logprob: -14.760943412780762

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.420598219847307e-05
    2. '<|end|>' → logprob: -10.8750638961792
    3. ':return' → logprob: -11.0000638961792
    4. '):' → logprob: -11.2500638961792
    5. ':
' → logprob: -11.8750638961792
    6. ' :' → logprob: -12.8750638961792
    7. ')' → logprob: -13.5000638961792
    8. '   ' → logprob: -13.8750638961792
    9. ':**' → logprob: -14.2500638961792
    10. ':def' → logprob: -14.3750638961792

Token 47: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.08013302087783813
    2. '       ' → logprob: -3.3301329612731934
    3. ' pass' → logprob: -3.5801329612731934
    4. '...' → logprob: -4.330132961273193
    5. '   ' → logprob: -9.205133438110352
    6. '	pass' → logprob: -11.205133438110352
    7. '    ' → logprob: -11.330133438110352
    8. '```' → logprob: -11.455133438110352
    9. ' ...' → logprob: -11.705133438110352
    10. '        ' → logprob: -11.705133438110352

Token 49: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07743354886770248
    2. '<|end|>' → logprob: -3.3274335861206055
    3. '

' → logprob: -3.5774335861206055
    4. '   ' → logprob: -5.7024335861206055
    5. '\n' → logprob: -5.9524335861206055
    6. '<|end|>' → logprob: -6.9524335861206055
    7. 'class' → logprob: -7.0774335861206055
    8. '```' → logprob: -7.0774335861206055
    9. '    
' → logprob: -7.4524335861206055
    10. ' 
' → logprob: -8.077433586120605

Token 50: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.240279883146286
    2. 'class' → logprob: -1.7402799129486084
    3. '

' → logprob: -3.7402799129486084
    4. '<|end|>' → logprob: -4.990279674530029
    5. '   ' → logprob: -6.365279674530029
    6. ' class' → logprob: -6.490279674530029
    7. '\n' → logprob: -6.615279674530029
    8. '    
' → logprob: -7.240279674530029
    9. '```' → logprob: -7.240279674530029
    10. '<|end|>' → logprob: -7.740279674530029

Token 51: ' @' (ID: 759)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0006984960054978728
    2. '
' → logprob: -7.750698566436768
    3. '   ' → logprob: -8.87569808959961
    4. ' class' → logprob: -9.62569808959961
    5. '

' → logprob: -10.75069808959961
    6. '    
' → logprob: -11.37569808959961
    7. ' ' → logprob: -11.50069808959961
    8. '<|end|>' → logprob: -12.12569808959961
    9. '```' → logprob: -12.75069808959961
    10. '  ' → logprob: -13.00069808959961

Token 52: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.006133671849966049
    2. 'property' → logprob: -5.131133556365967
    3. 'staticmethod' → logprob: -8.881134033203125
    4. 'classmethod' → logprob: -9.881134033203125
    5. 'abc' → logprob: -12.006134033203125
    6. 'abs' → logprob: -12.256134033203125
    7. 'dat' → logprob: -13.756134033203125
    8. ' abstract' → logprob: -13.881134033203125
    9. 'velocity' → logprob: -14.881134033203125
    10. 'ab' → logprob: -14.881134033203125

Token 53: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.001760148094035685
    2. 'def' → logprob: -6.376760005950928
    3. '_method' → logprob: -10.001760482788086
    4. 'token' → logprob: -12.876760482788086
    5. ' ' → logprob: -13.376760482788086
    6. ' method' → logprob: -13.501760482788086
    7. '.method' → logprob: -13.751760482788086
    8. 'classmethod' → logprob: -13.876760482788086
    9. 'staticmethod' → logprob: -14.251760482788086
    10. ' def' → logprob: -14.376760482788086

Token 54: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31313514709472656
    2. 'def' → logprob: -1.4381351470947266
    3. ' def' → logprob: -3.5631351470947266
    4. '
' → logprob: -5.938135147094727
    5. '   ' → logprob: -8.688135147094727
    6. '<|end|>' → logprob: -9.188135147094727
    7. '\' → logprob: -9.813135147094727
    8. '	def' → logprob: -10.438135147094727
    9. ' 
' → logprob: -10.438135147094727
    10. '```' → logprob: -10.688135147094727

Token 55: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02917441353201866
    2. '
' → logprob: -3.779174327850342
    3. 'method' → logprob: -5.279174327850342
    4. ' def' → logprob: -7.529174327850342
    5. '   ' → logprob: -8.9041748046875
    6. '
' → logprob: -9.4041748046875
    7. 'staticmethod' → logprob: -10.7791748046875
    8. 'classmethod' → logprob: -11.4041748046875
    9. '```' → logprob: -12.2791748046875
    10. 'property' → logprob: -12.7791748046875

Token 56: ' def' (ID: 1056)
  Prédit: 'method'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.8940227031707764
    2. 'float' → logprob: -1.6440227031707764
    3. 'property' → logprob: -2.2690227031707764
    4. 'velocity' → logprob: -2.2690227031707764
    5. 'def' (adapté à ' def') → logprob: -2.3940227031707764
    6. 'classmethod' → logprob: -3.7690227031707764
    7. 'Optional' → logprob: -4.0190229415893555
    8. 'optional' → logprob: -4.2690229415893555
    9. 'staticmethod' → logprob: -4.2690229415893555
    10. 'class' → logprob: -5.5190229415893555

Token 57: ' drop' (ID: 9440)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.21305236220359802
    2. ' acceleration' → logprob: -1.8380523920059204
    3. ' displacement' → logprob: -3.838052272796631
    4. ' distance' → logprob: -4.838052272796631
    5. 'acc' → logprob: -6.463052272796631
    6. 'position' → logprob: -6.838052272796631
    7. 'distance' → logprob: -8.838052749633789
    8. ' def' → logprob: -9.338052749633789
    9. ' energy' → logprob: -9.588052749633789
    10. ' initial' → logprob: -9.838052749633789

Token 58: '_after' (ID: 46788)
  Prédit: '_height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.06166018173098564
    2. '_time' → logprob: -3.1866602897644043
    3. '_distance' → logprob: -4.311660289764404
    4. '_position' → logprob: -6.811660289764404
    5. '_duration' → logprob: -7.311660289764404
    6. '_angle' → logprob: -7.436660289764404
    7. 'height' → logprob: -7.561660289764404
    8. 'out' → logprob: -7.811660289764404
    9. '_point' → logprob: -8.436659812927246
    10. '   ' → logprob: -8.561659812927246

Token 59: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0070691280998289585
    2. '(' → logprob: -5.007069110870361
    3. 'self' → logprob: -8.50706958770752
    4. '<|end|>' → logprob: -10.25706958770752
    5. ' (' → logprob: -10.75706958770752
    6. ')' → logprob: -11.00706958770752
    7. '_time' → logprob: -11.00706958770752
    8. 'time' → logprob: -11.13206958770752
    9. '```' → logprob: -11.50706958770752
    10. '<|end|>' → logprob: -11.75706958770752

Token 60: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05415903404355049
    2. ')' → logprob: -3.054158926010132
    3. ',' → logprob: -5.929159164428711
    4. ')(' → logprob: -6.679159164428711
    5. '(' → logprob: -7.554159164428711
    6. 'time' → logprob: -7.679159164428711
    7. ' (' → logprob: -8.554159164428711
    8. '<|end|>' → logprob: -9.304159164428711
    9. 'self' → logprob: -9.679159164428711
    10. '_time' → logprob: -9.679159164428711

Token 61: ' time' (ID: 1058)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1832515299320221
    2. 'self' → logprob: -1.9332515001296997
    3. ' time' → logprob: -4.05825138092041
    4. 'time' → logprob: -5.30825138092041
    5. ')' → logprob: -8.30825138092041
    6. '(self' → logprob: -9.18325138092041
    7. ' ' → logprob: -9.68325138092041
    8. '<|end|>' → logprob: -10.68325138092041
    9. ' space' → logprob: -11.30825138092041
    10. 'space' → logprob: -11.55825138092041

Token 62: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012349952012300491
    2. ' :' → logprob: -7.376235008239746
    3. ')' → logprob: -7.501235008239746
    4. '):' → logprob: -10.376235008239746
    5. ' )' → logprob: -11.126235008239746
    6. ' ):' → logprob: -12.876235008239746
    7. ':int' → logprob: -13.876235008239746
    8. '<|end|>' → logprob: -14.001235008239746
    9. '   ' → logprob: -14.126235008239746
    10. ',' → logprob: -14.126235008239746

Token 63: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.03131062537431717
    2. 'float' → logprob: -4.031310558319092
    3. ')' → logprob: -4.406310558319092
    4. ' )' → logprob: -8.03131103515625
    5. '=float' → logprob: -8.65631103515625
    6. '(float' → logprob: -9.03131103515625
    7. ' ' → logprob: -9.28131103515625
    8. ',float' → logprob: -9.40631103515625
    9. '<float' → logprob: -11.28131103515625
    10. ' Optional' → logprob: -11.53131103515625

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1160349458805285e-05
    2. ' )' → logprob: -12.000011444091797
    3. '):' → logprob: -13.250011444091797
    4. '   ' → logprob: -13.250011444091797
    5. ':' → logprob: -13.875011444091797
    6. ',' → logprob: -15.875011444091797
    7. '`)' → logprob: -16.125011444091797
    8. ')->' → logprob: -16.250011444091797
    9. ' ' → logprob: -17.375011444091797
    10. '```' → logprob: -17.625011444091797

Token 65: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.4389945864677429
    2. ')' → logprob: -1.0639946460723877
    3. '->' → logprob: -4.688994407653809
    4. ')->' → logprob: -7.063994407653809
    5. ':' → logprob: -9.688994407653809
    6. '   ' → logprob: -9.938994407653809
    7. ' )' → logprob: -10.188994407653809
    8. ' ' → logprob: -10.688994407653809
    9. ' )->' → logprob: -12.188994407653809
    10. '):' → logprob: -12.563994407653809

Token 66: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.010298757813870907
    2. 'float' → logprob: -4.635298728942871
    3. ' Optional' → logprob: -8.010298728942871
    4. ' ' → logprob: -9.385298728942871
    5. 'Optional' → logprob: -10.010298728942871
    6. ' ' → logprob: -10.385298728942871
    7. '	float' → logprob: -11.385298728942871
    8. ' None' → logprob: -11.510298728942871
    9. '(float' → logprob: -11.635298728942871
    10. '=float' → logprob: -11.885298728942871

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004891689168289304
    2. ':
' → logprob: -9.000489234924316
    3. '):' → logprob: -9.125489234924316
    4. '<|end|>' → logprob: -9.375489234924316
    5. ':return' → logprob: -9.500489234924316
    6. '():' → logprob: -10.000489234924316
    7. ' :' → logprob: -11.250489234924316
    8. '   ' → logprob: -11.750489234924316
    9. ':def' → logprob: -11.750489234924316
    10. '       ' → logprob: -12.375489234924316

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01122854184359312
    2. '<|end|>' → logprob: -5.011228561401367
    3. ' pass' → logprob: -6.011228561401367
    4. '   ' → logprob: -6.761228561401367
    5. 'pass' → logprob: -7.761228561401367
    6. '\n' → logprob: -8.261228561401367
    7. ' ' → logprob: -9.761228561401367
    8. ':' → logprob: -10.761228561401367
    9. '```' → logprob: -10.886228561401367
    10. '    ' → logprob: -11.261228561401367

Token 69: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.017244987189769745
    2. '       ' → logprob: -4.767244815826416
    3. ' pass' → logprob: -4.767244815826416
    4. '   ' → logprob: -10.142245292663574
    5. '<|end|>' → logprob: -10.267245292663574
    6. '	pass' → logprob: -12.017245292663574
    7. ' ' → logprob: -13.392245292663574
    8. '
' → logprob: -13.517245292663574
    9. '```' → logprob: -13.517245292663574
    10. '\n' → logprob: -13.892245292663574

Token 70: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44866999983787537
    2. 'class' → logprob: -1.1986700296401978
    3. '

' → logprob: -2.823669910430908
    4. ' class' → logprob: -8.573670387268066
    5. '


' → logprob: -9.198670387268066
    6. '
' → logprob: -9.448670387268066
    7. '```' → logprob: -9.448670387268066
    8. '<|end|>' → logprob: -10.073670387268066
    9. '\n' → logprob: -11.073670387268066
    10. '
    
' → logprob: -11.823670387268066

Token 71: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05360429361462593
    2. 'class' → logprob: -3.3036043643951416
    3. '

' → logprob: -4.1786041259765625
    4. '
' → logprob: -9.803604125976562
    5. '


' → logprob: -10.928604125976562
    6. '```' → logprob: -11.303604125976562
    7. ' class' → logprob: -11.428604125976562
    8. '\n' → logprob: -12.053604125976562
    9. '    
' → logprob: -12.178604125976562
    10. '
    
' → logprob: -12.678604125976562

Token 72: ' Free' (ID: 5358)
  Prédit: ' Projectile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Projectile' → logprob: -0.6079465746879578
    2. ' Free' → logprob: -1.8579466342926025
    3. ' Constant' → logprob: -1.9829466342926025
    4. ' Gravity' → logprob: -2.1079466342926025
    5. ' Ball' → logprob: -4.607946395874023
    6. ' Simple' → logprob: -4.857946395874023
    7. ' Uniform' → logprob: -5.107946395874023
    8. ' Newton' → logprob: -5.482946395874023
    9. 'Projectile' → logprob: -6.107946395874023
    10. ' Particle' → logprob: -6.357946395874023

Token 73: 'Fall' (ID: 69961)
  Prédit: 'Fall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fall' → logprob: -0.0003346314188092947
    2. 'F' → logprob: -8.500334739685059
    3. 'fall' → logprob: -9.000334739685059
    4. 'Drop' → logprob: -12.750334739685059
    5. 'Fal' → logprob: -13.000334739685059
    6. 'Falls' → logprob: -13.500334739685059
    7. ' fall' → logprob: -14.125334739685059
    8. '_f' → logprob: -15.750334739685059
    9. '```' → logprob: -16.125333786010742
    10. 'Free' → logprob: -16.625333786010742

Token 74: 'Model' (ID: 2239)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2976776361465454
    2. 'Physics' → logprob: -2.047677516937256
    3. 'Model' → logprob: -2.172677516937256
    4. ':' → logprob: -4.547677516937256
    5. '(Model' → logprob: -6.797677516937256
    6. '():' → logprob: -7.047677516937256
    7. 'Motion' → logprob: -7.422677516937256
    8. '(Motion' → logprob: -7.547677516937256
    9. '(Gravity' → logprob: -8.047677993774414
    10. ')' → logprob: -8.922677993774414

Token 75: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013009627349674702
    2. ':' → logprob: -4.388009548187256
    3. '():' → logprob: -8.513010025024414
    4. '):' → logprob: -9.388010025024414
    5. '<|end|>' → logprob: -9.888010025024414
    6. 'Physics' → logprob: -10.138010025024414
    7. ' :' → logprob: -10.763010025024414
    8. '(F' → logprob: -11.263010025024414
    9. '(QWidget' → logprob: -11.513010025024414
    10. '(P' → logprob: -12.013010025024414

Token 76: 'Physics' (ID: 54195)
  Prédit: 'Physics'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Physics' → logprob: -0.0501798577606678
    2. ' Physics' → logprob: -3.050179958343506
    3. '):' → logprob: -6.675179958343506
    4. ')' → logprob: -8.550179481506348
    5. ' ):' → logprob: -10.175179481506348
    6. ' physics' → logprob: -10.175179481506348
    7. 'Phys' → logprob: -10.675179481506348
    8. ' )' → logprob: -11.675179481506348
    9. '   ' → logprob: -11.675179481506348
    10. 'physics' → logprob: -12.300179481506348

Token 77: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -2.6537622034084052e-05
    2. ')' → logprob: -10.75002670288086
    3. '	Model' → logprob: -13.00002670288086
    4. ' Model' → logprob: -13.50002670288086
    5. '<Model' → logprob: -14.37502670288086
    6. '(Model' → logprob: -14.62502670288086
    7. '_Model' → logprob: -16.12502670288086
    8. 'model' → logprob: -16.50002670288086
    9. 'Mode' → logprob: -16.87502670288086
    10. '(' → logprob: -16.87502670288086

Token 78: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -2.5941604690160602e-05
    2. ':' → logprob: -11.500025749206543
    3. '):
' → logprob: -11.625025749206543
    4. ')' → logprob: -12.375025749206543
    5. ',' → logprob: -14.125025749206543
    6. '   ' → logprob: -14.125025749206543
    7. '():' → logprob: -14.750025749206543
    8. ' ):' → logprob: -15.000025749206543
    9. '):
' → logprob: -16.00002670288086
    10. ']:' → logprob: -16.00002670288086

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0054653361439704895
    2. '    
' → logprob: -5.880465507507324
    3. '
' → logprob: -6.130465507507324
    4. '    ' → logprob: -9.005465507507324
    5. 'def' → logprob: -9.130465507507324
    6. '```' → logprob: -9.505465507507324
    7. ' def' → logprob: -9.630465507507324
    8. ')' → logprob: -11.005465507507324
    9. ' 
' → logprob: -11.130465507507324
    10. '4' → logprob: -11.630465507507324

Token 80: ' GR' (ID: 19142)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.19980773329734802
    2. 'def' → logprob: -1.8248077630996704
    3. '   ' → logprob: -3.949807643890381
    4. ' g' → logprob: -8.324808120727539
    5. ' GR' → logprob: -9.074808120727539
    6. '    ' → logprob: -9.449808120727539
    7. 'g' → logprob: -9.699808120727539
    8. 'GR' (adapté à ' GR') → logprob: -9.824808120727539
    9. 'gravity' → logprob: -10.949808120727539
    10. ' gravity' → logprob: -11.324808120727539

Token 81: 'AV' (ID: 5345)
  Prédit: 'AV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AV' → logprob: -9.317247167928144e-05
    2. 'avity' → logprob: -9.750093460083008
    3. 'AVI' → logprob: -10.625093460083008
    4. 'A' → logprob: -12.500093460083008
    5. '   ' → logprob: -13.000093460083008
    6. '9' → logprob: -13.875093460083008
    7. '=' → logprob: -14.000093460083008
    8. '_' → logprob: -14.875093460083008
    9. '_AV' → logprob: -14.875093460083008
    10. 'avit' → logprob: -15.000093460083008

Token 82: 'ITY' (ID: 6161)
  Prédit: 'ITY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ITY' → logprob: -0.002175362315028906
    2. 'IT' → logprob: -6.252175331115723
    3. 'AV' → logprob: -9.377175331115723
    4. '9' → logprob: -10.127175331115723
    5. '=' → logprob: -10.252175331115723
    6. '   ' → logprob: -10.877175331115723
    7. '_' → logprob: -11.002175331115723
    8. 'ity' → logprob: -11.627175331115723
    9. '1' → logprob: -12.252175331115723
    10. 'AL' → logprob: -12.627175331115723

Token 83: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06200263649225235
    2. '=' → logprob: -2.812002658843994
    3. '   ' → logprob: -10.937002182006836
    4. ':' → logprob: -11.312002182006836
    5. '_ACCEL' → logprob: -12.812002182006836
    6. '  ' → logprob: -14.562002182006836
    7. '_' → logprob: -14.937002182006836
    8. '_GR' → logprob: -14.937002182006836
    9. ' ' → logprob: -15.062002182006836
    10. '_CONSTANT' → logprob: -15.562002182006836

Token 84: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.028674587607383728
    2. 'float' → logprob: -3.778674602508545
    3. ' =' → logprob: -5.653674602508545
    4. '=' → logprob: -7.403674602508545
    5. ' ' → logprob: -7.403674602508545
    6. '=float' → logprob: -7.403674602508545
    7. '	float' → logprob: -10.903674125671387
    8. '9' → logprob: -11.403674125671387
    9. '   ' → logprob: -11.528674125671387
    10. '<float' → logprob: -12.278674125671387

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005238975863903761
    2. '=' → logprob: -5.255239009857178
    3. '   ' → logprob: -12.88023853302002
    4. ' ' → logprob: -13.50523853302002
    5. '<|end|>' → logprob: -14.50523853302002
    6. '    ' → logprob: -15.00523853302002
    7. ' =)' → logprob: -15.25523853302002
    8. ':' → logprob: -16.130239486694336
    9. '  ' → logprob: -16.130239486694336
    10. ' ' → logprob: -18.005239486694336

Token 86: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3868713676929474
    2. '9' → logprob: -1.136871337890625
    3. ' ' → logprob: -16.886871337890625
    4. '<|end|>' → logprob: -17.261871337890625
    5. '0' → logprob: -17.449371337890625
    6. '```' → logprob: -17.511871337890625
    7. '981' → logprob: -17.636871337890625
    8. ' -' → logprob: -17.824371337890625
    9. '   ' → logprob: -18.074371337890625
    10. '  ' → logprob: -18.199371337890625

Token 87: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -18.875011444091797
    4. '```' → logprob: -18.875011444091797
    5. '=' → logprob: -19.812511444091797
    6. '  ' → logprob: -20.187511444091797
    7. '-' → logprob: -20.375011444091797
    8. ' -' → logprob: -20.625011444091797
    9. '`' → logprob: -20.750011444091797
    10. '	' → logprob: -20.812511444091797

Token 88: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00013727048644796014
    2. '8' → logprob: -9.250137329101562
    3. '7' → logprob: -11.000137329101562
    4. '6' → logprob: -12.250137329101562
    5. ' .' → logprob: -12.250137329101562
    6. '\.' → logprob: -12.750137329101562
    7. '.

' → logprob: -13.250137329101562
    8. 'point' → logprob: -13.250137329101562
    9. '0' → logprob: -14.062637329101562
    10. '[' → logprob: -14.187637329101562

Token 89: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.7148941159248352
    2. '81' → logprob: -0.7148941159248352
    3. '806' → logprob: -3.8398940563201904
    4. '807' → logprob: -11.21489429473877
    5. '82' → logprob: -13.21489429473877
    6. '810' → logprob: -15.33989429473877
    7. '```' → logprob: -15.46489429473877
    8. 'eight' → logprob: -15.46489429473877
    9. '805' → logprob: -15.58989429473877
    10. '811' → logprob: -16.714893341064453

Token 90: '
    
' (ID: 15698)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.398948609828949
    2. '<|end|>' → logprob: -2.2739486694335938
    3. '   ' → logprob: -2.6489486694335938
    4. '
' → logprob: -3.0239486694335938
    5. '    ' → logprob: -3.2739486694335938
    6. '

' → logprob: -3.8989486694335938
    7. '    
' → logprob: -4.148948669433594
    8. '    

' → logprob: -5.523948669433594
    9. '<|end|>' → logprob: -5.523948669433594
    10. ' 

' → logprob: -5.773948669433594

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5384185910224915
    2. 'def' → logprob: -1.6634185314178467
    3. ' def' → logprob: -1.7884185314178467
    4. '
' → logprob: -3.0384185314178467
    5. '    
' → logprob: -5.288418769836426
    6. ' ' → logprob: -5.788418769836426
    7. '0' → logprob: -6.663418769836426
    8. ' 
' → logprob: -7.038418769836426
    9. '    ' → logprob: -7.788418769836426
    10. '  ' → logprob: -8.538418769836426

Token 92: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0003559615579433739
    2. ' def' → logprob: -8.12535572052002
    3. 'initial' → logprob: -9.87535572052002
    4. 'velocity' → logprob: -12.37535572052002
    5. '   ' → logprob: -12.75035572052002
    6. 'INITIAL' → logprob: -14.87535572052002
    7. '```' → logprob: -15.75035572052002
    8. ' initial' → logprob: -16.000356674194336
    9. 'Initial' → logprob: -16.375356674194336
    10. '    
' → logprob: -16.750356674194336

Token 93: ' velocity' (ID: 30061)
  Prédit: ' velocity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' velocity' → logprob: -0.019365502521395683
    2. '_velocity' → logprob: -4.644365310668945
    3. ' ' → logprob: -5.144365310668945
    4. ' def' → logprob: -6.394365310668945
    5. 'velocity' → logprob: -6.644365310668945
    6. ' _' → logprob: -7.644365310668945
    7. '_' → logprob: -8.269365310668945
    8. ' space' → logprob: -12.019365310668945
    9. ' __' → logprob: -12.769365310668945
    10. '.velocity' → logprob: -12.894365310668945

Token 94: '_after' (ID: 46788)
  Prédit: '_after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_after' → logprob: -0.0003148472751490772
    2. '_' → logprob: -8.375314712524414
    3. '_at' → logprob: -10.375314712524414
    4. '(self' → logprob: -10.375314712524414
    5. '(' → logprob: -11.750314712524414
    6. '_before' → logprob: -12.625314712524414
    7. '_(' → logprob: -13.125314712524414
    8. '   ' → logprob: -13.125314712524414
    9. '_AFTER' → logprob: -13.750314712524414
    10. 'After' → logprob: -13.875314712524414

Token 95: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06216273456811905
    2. '(' → logprob: -2.8121626377105713
    3. ' (' → logprob: -8.687162399291992
    4. 'self' → logprob: -11.687162399291992
    5. '(
' → logprob: -11.687162399291992
    6. ' ' → logprob: -12.687162399291992
    7. ' self' → logprob: -12.812162399291992
    8. '(s' → logprob: -13.062162399291992
    9. '<|end|>' → logprob: -14.687162399291992
    10. '(

' → logprob: -15.062162399291992

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007110013975761831
    2. ' ,' → logprob: -7.500710964202881
    3. '<|end|>' → logprob: -9.375711441040039
    4. ')' → logprob: -10.000711441040039
    5. 'self' → logprob: -11.875711441040039
    6. ':' → logprob: -12.125711441040039
    7. '=' → logprob: -12.375711441040039
    8. '<|end|>' → logprob: -12.625711441040039
    9. ' ' → logprob: -13.125711441040039
    10. ',time' → logprob: -14.125711441040039

Token 97: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.016051849350333214
    2. 'time' → logprob: -4.266051769256592
    3. ' self' → logprob: -6.391051769256592
    4. 'self' → logprob: -8.64105224609375
    5. ')' → logprob: -11.51605224609375
    6. ' ' → logprob: -12.01605224609375
    7. '	time' → logprob: -12.51605224609375
    8. '   ' → logprob: -12.76605224609375
    9. '    ' → logprob: -13.01605224609375
    10. 't' → logprob: -13.26605224609375

Token 98: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002422779070911929
    2. ' :' → logprob: -8.625242233276367
    3. ')' → logprob: -10.125242233276367
    4. '):' → logprob: -11.000242233276367
    5. ' ):' → logprob: -12.875242233276367
    6. ' )' → logprob: -12.875242233276367
    7. '<|end|>' → logprob: -15.375242233276367
    8. '   ' → logprob: -15.500242233276367
    9. ' ' → logprob: -16.125242233276367
    10. '<|end|>' → logprob: -16.500242233276367

Token 99: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.030141174793243408
    2. 'float' → logprob: -4.030141353607178
    3. ' ' → logprob: -4.780141353607178
    4. ' )' → logprob: -6.280141353607178
    5. ')' → logprob: -6.530141353607178
    6. '(float' → logprob: -9.28014087677002
    7. '0' → logprob: -10.53014087677002
    8. ' ):' → logprob: -11.03014087677002
    9. '=float' → logprob: -12.03014087677002
    10. ',float' → logprob: -12.28014087677002

Token 100: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003698973741848022
    2. ' )' → logprob: -8.000370025634766
    3. '):' → logprob: -10.375370025634766
    4. '   ' → logprob: -13.250370025634766
    5. ')->' → logprob: -14.500370025634766
    6. ':' → logprob: -14.750370025634766
    7. '):
' → logprob: -15.125370025634766
    8. ' ):' → logprob: -15.250370025634766
    9. ' )->' → logprob: -16.375370025634766
    10. ' ' → logprob: -17.125370025634766

Token 101: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7980263233184814
    2. ' ->' → logprob: -0.7980263233184814
    3. '->' → logprob: -3.0480263233184814
    4. ')' → logprob: -3.1730263233184814
    5. ')->' → logprob: -4.923026084899902
    6. ' :' → logprob: -6.923026084899902
    7. '):' → logprob: -7.298026084899902
    8. ':return' → logprob: -7.298026084899902
    9. '   ' → logprob: -7.923026084899902
    10. ' )->' → logprob: -9.173026084899902

Token 102: ' float' (ID: 4428)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.17525042593479156
    2. ' Free' → logprob: -2.42525053024292
    3. 'self' → logprob: -2.67525053024292
    4. 'Free' → logprob: -5.80025053024292
    5. ' free' → logprob: -8.550250053405762
    6. ' ' → logprob: -9.675250053405762
    7. ' time' → logprob: -10.175250053405762
    8. ' return' → logprob: -10.800250053405762
    9. '_Free' → logprob: -11.050250053405762
    10. ' super' → logprob: -11.675250053405762

Token 103: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003787184541579336
    2. ':
' → logprob: -8.375378608703613
    3. ':return' → logprob: -9.500378608703613
    4. '):' → logprob: -9.625378608703613
    5. ' :' → logprob: -13.000378608703613
    6. '       ' → logprob: -13.125378608703613
    7. '):
' → logprob: -13.750378608703613
    8. '   ' → logprob: -14.625378608703613
    9. '():' → logprob: -14.750378608703613
    10. ':**' → logprob: -14.875378608703613

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005307526444084942
    2. ' return' → logprob: -8.250531196594238
    3. 'return' → logprob: -8.375531196594238
    4. '   ' → logprob: -11.875531196594238
    5. '        
' → logprob: -12.000531196594238
    6. '0' → logprob: -12.250531196594238
    7. '```' → logprob: -12.625531196594238
    8. '    ' → logprob: -12.750531196594238
    9. '        ' → logprob: -12.750531196594238
    10. '      ' → logprob: -13.500531196594238

Token 105: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007018941454589367
    2. ' return' → logprob: -5.00701904296875
    3. '       ' → logprob: -8.13201904296875
    4. 'self' → logprob: -11.63201904296875
    5. '```' → logprob: -15.25701904296875
    6. '   ' → logprob: -15.63201904296875
    7. 'result' → logprob: -16.38201904296875
    8. '        
' → logprob: -16.75701904296875
    9. '	return' → logprob: -16.88201904296875
    10. ' self' → logprob: -17.00701904296875

Token 106: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4465920031070709
    2. ' self' → logprob: -1.8215919733047485
    3. ' Free' → logprob: -1.8215919733047485
    4. 'Free' → logprob: -3.321592092514038
    5. 'time' → logprob: -8.321592330932617
    6. ' time' → logprob: -8.321592330932617
    7. 'Self' → logprob: -10.696592330932617
    8. ' free' → logprob: -11.696592330932617
    9. '_Free' → logprob: -11.821592330932617
    10. '   ' → logprob: -11.821592330932617

Token 107: '.GR' (ID: 121864)
  Prédit: '.GR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.GR' → logprob: -0.0025548539124429226
    2. '.G' → logprob: -6.002554893493652
    3. '.' → logprob: -9.502554893493652
    4. '.Gravity' → logprob: -13.252554893493652
    5. 'GR' → logprob: -13.627554893493652
    6. ' .' → logprob: -14.752554893493652
    7. '.velocity' → logprob: -14.877554893493652
    8. '.GL' → logprob: -15.502554893493652
    9. '.gravity' → logprob: -15.877554893493652
    10. '.FR' → logprob: -16.127553939819336

Token 108: 'AV' (ID: 5345)
  Prédit: 'AV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AV' → logprob: -6.360996485454962e-05
    2. 'ITY' → logprob: -10.2500638961792
    3. 'avity' → logprob: -11.3750638961792
    4. '_AV' → logprob: -12.3750638961792
    5. 'V' → logprob: -12.5000638961792
    6. 'AL' → logprob: -13.1250638961792
    7. 'A' → logprob: -13.2500638961792
    8. ' AV' → logprob: -13.3750638961792
    9. 'IVITY' → logprob: -14.0000638961792
    10. '   ' → logprob: -14.1250638961792

Token 109: 'ITY' (ID: 6161)
  Prédit: 'ITY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ITY' → logprob: -2.2200749754119897e-06
    2. 'IT' → logprob: -13.375001907348633
    3. 'ity' → logprob: -15.250001907348633
    4. '   ' → logprob: -15.500001907348633
    5. 'I' → logprob: -16.625001907348633
    6. ' ity' → logprob: -17.750001907348633
    7. 'ITI' → logprob: -17.875001907348633
    8. '\' → logprob: -17.875001907348633
    9. '  ' → logprob: -18.500001907348633
    10. 'ITIES' → logprob: -18.500001907348633

Token 110: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0001249925117008388
    2. '*' → logprob: -9.00012493133545
    3. ' ' → logprob: -13.75012493133545
    4. ' ' → logprob: -14.62512493133545
    5. '*time' → logprob: -17.125125885009766
    6. '*object' → logprob: -17.250125885009766
    7. ' **' → logprob: -18.000125885009766
    8. '*t' → logprob: -20.000125885009766
    9. '*self' → logprob: -20.125125885009766
    10. 's' → logprob: -20.500125885009766

Token 111: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.061967913061380386
    2. 'time' → logprob: -2.8119678497314453
    3. '	time' → logprob: -15.561967849731445
    4. ' ' → logprob: -17.686967849731445
    5. ' t' → logprob: -17.811967849731445
    6. '(time' → logprob: -17.936967849731445
    7. '*time' → logprob: -17.936967849731445
    8. 't' → logprob: -18.186967849731445
    9. '"time' → logprob: -18.436967849731445
    10. 'space' → logprob: -19.186967849731445

Token 112: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10309670120477676
    2. '    
' → logprob: -2.4780967235565186
    3. '
' → logprob: -4.3530964851379395
    4. 'def' → logprob: -7.1030964851379395
    5. '```' → logprob: -8.978096961975098
    6. ' def' → logprob: -9.478096961975098
    7. '<|end|>' → logprob: -9.978096961975098
    8. '        
' → logprob: -9.978096961975098
    9. '  
' → logprob: -10.478096961975098
    10. '   
' → logprob: -11.353096961975098

Token 114: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0004797664878424257
    2. ' def' → logprob: -7.750479698181152
    3. '   ' → logprob: -10.000479698181152
    4. '    
' → logprob: -12.625479698181152
    5. '
' → logprob: -15.500479698181152
    6. ' ' → logprob: -16.37548065185547
    7. '	def' → logprob: -17.37548065185547
    8. '  ' → logprob: -17.50048065185547
    9. '        
' → logprob: -18.00048065185547
    10. '  
' → logprob: -18.12548065185547

Token 115: ' drop' (ID: 9440)
  Prédit: ' drop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' drop' → logprob: -0.0003936152206733823
    2. 'drop' → logprob: -8.375393867492676
    3. ' def' → logprob: -8.750393867492676
    4. '_drop' → logprob: -13.125393867492676
    5. ' dropout' → logprob: -13.750393867492676
    6. ' ' → logprob: -14.250393867492676
    7. ' ' → logprob: -15.125393867492676
    8. '.drop' → logprob: -15.125393867492676
    9. 'def' → logprob: -15.500393867492676
    10. '   ' → logprob: -16.12539291381836

Token 116: '_after' (ID: 46788)
  Prédit: '_after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_after' → logprob: -1.6240566083070007e-06
    2. '_a' → logprob: -13.875001907348633
    3. '_' → logprob: -15.000001907348633
    4. '_af' → logprob: -15.500001907348633
    5. '_before' → logprob: -15.750001907348633
    6. ' _' → logprob: -18.125001907348633
    7. '_AFTER' → logprob: -18.250001907348633
    8. '_at' → logprob: -19.250001907348633
    9. '_as' → logprob: -20.000001907348633
    10. '_under' → logprob: -20.250001907348633

Token 117: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005252137780189514
    2. '(' → logprob: -5.255252361297607
    3. ' (' → logprob: -11.00525188446045
    4. 'self' → logprob: -14.25525188446045
    5. '(
' → logprob: -14.38025188446045
    6. ' ' → logprob: -15.25525188446045
    7. ' self' → logprob: -15.88025188446045
    8. '   ' → logprob: -16.380252838134766
    9. ',' → logprob: -17.380252838134766
    10. '(s' → logprob: -17.505252838134766

Token 118: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23844189941883087
    2. ',' → logprob: -1.6134419441223145
    3. ')' → logprob: -4.6134419441223145
    4. ' :' → logprob: -6.4884419441223145
    5. ' ,' → logprob: -7.4884419441223145
    6. ' ' → logprob: -7.8634419441223145
    7. '   ' → logprob: -8.613441467285156
    8. ' *' → logprob: -8.738441467285156
    9. ' )' → logprob: -9.113441467285156
    10. '  ' → logprob: -10.363441467285156

Token 119: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.0031827057246118784
    2. 'time' → logprob: -5.753182888031006
    3. ' ' → logprob: -13.003182411193848
    4. ')' → logprob: -14.128182411193848
    5. ' self' → logprob: -14.503182411193848
    6. '(time' → logprob: -14.503182411193848
    7. '	time' → logprob: -15.128182411193848
    8. '   ' → logprob: -15.253182411193848
    9. '    ' → logprob: -16.253183364868164
    10. 'self' → logprob: -16.378183364868164

Token 120: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004395817406475544
    2. ')' → logprob: -6.004395961761475
    3. ' :' → logprob: -6.379395961761475
    4. ' )' → logprob: -9.004395484924316
    5. '   ' → logprob: -10.004395484924316
    6. ' ' → logprob: -10.254395484924316
    7. '):' → logprob: -11.504395484924316
    8. ' ):' → logprob: -12.504395484924316
    9. '  ' → logprob: -13.254395484924316
    10. ' *' → logprob: -13.504395484924316

Token 121: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.009583605453372002
    2. 'float' → logprob: -4.884583473205566
    3. ')' → logprob: -6.509583473205566
    4. '(float' → logprob: -8.259583473205566
    5. ' ' → logprob: -9.009583473205566
    6. ',float' → logprob: -10.134583473205566
    7. '=float' → logprob: -11.384583473205566
    8. ' self' → logprob: -11.634583473205566
    9. ' time' → logprob: -11.884583473205566
    10. ' )' → logprob: -11.884583473205566

Token 122: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007831838447600603
    2. ' )' → logprob: -7.2507829666137695
    3. ':' → logprob: -10.12578296661377
    4. '   ' → logprob: -10.50078296661377
    5. '):' → logprob: -12.87578296661377
    6. ' ' → logprob: -13.75078296661377
    7. '    ' → logprob: -14.62578296661377
    8. '       ' → logprob: -14.75078296661377
    9. '`)' → logprob: -15.37578296661377
    10. '):
' → logprob: -15.50078296661377

Token 123: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.028082702308893204
    2. ')' → logprob: -3.9030826091766357
    3. '->' → logprob: -5.028082847595215
    4. ')->' → logprob: -8.028082847595215
    5. '   ' → logprob: -8.278082847595215
    6. ' ' → logprob: -8.403082847595215
    7. ':' → logprob: -9.153082847595215
    8. ' *' → logprob: -11.028082847595215
    9. '(' → logprob: -12.028082847595215
    10. ' )->' → logprob: -12.278082847595215

Token 124: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3506525158882141
    2. '0' → logprob: -1.3506524562835693
    3. ' self' → logprob: -3.3506524562835693
    4. ' (' → logprob: -7.225652694702148
    5. ' return' → logprob: -7.725652694702148
    6. ' float' → logprob: -8.600652694702148
    7. 'self' → logprob: -8.850652694702148
    8. '(' → logprob: -10.225652694702148
    9. ' .' → logprob: -11.100652694702148
    10. '  ' → logprob: -11.350652694702148

Token 125: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46731269359588623
    2. ' ->' → logprob: -1.3423126935958862
    3. ')' → logprob: -2.342312812805176
    4. ' :' → logprob: -5.092312812805176
    5. '   ' → logprob: -5.092312812805176
    6. '->' → logprob: -6.217312812805176
    7. '       ' → logprob: -7.342312812805176
    8. ':return' → logprob: -8.092312812805176
    9. '()' → logprob: -8.592312812805176
    10. ')->' → logprob: -8.967312812805176

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7162021398544312
    2. ' return' → logprob: -0.9662021398544312
    3. '0' → logprob: -2.8412022590637207
    4. '   ' → logprob: -3.5912022590637207
    5. 'return' → logprob: -3.7162022590637207
    6. ' ' → logprob: -4.341202259063721
    7. '    ' → logprob: -4.966202259063721
    8. '        ' → logprob: -8.841201782226562
    9. '     ' → logprob: -8.966201782226562
    10. '1' → logprob: -9.591201782226562

Token 127: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3192489445209503
    2. ' ' → logprob: -1.319248914718628
    3. ' return' → logprob: -5.319249153137207
    4. 'return' (adapté à ' return') → logprob: -6.944249153137207
    5. '   ' → logprob: -9.194249153137207
    6. '  ' → logprob: -12.319249153137207
    7. ' self' → logprob: -13.944249153137207
    8. '    ' → logprob: -13.944249153137207
    9. '       ' → logprob: -15.319249153137207
    10. 'self' → logprob: -15.694249153137207

Token 128: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47408178448677063
    2. ' ' → logprob: -0.9740817546844482
    3. ' self' → logprob: -13.599081993103027
    4. 'self' → logprob: -13.599081993103027
    5. ' ' → logprob: -13.849081993103027
    6. '   ' → logprob: -14.474081993103027
    7. '  ' → logprob: -15.224081993103027
    8. '.' → logprob: -15.599081993103027
    9. '1' → logprob: -16.41158103942871
    10. '```' → logprob: -17.22408103942871

Token 129: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.500015258789062
    3. 'self' → logprob: -12.250015258789062
    4. '(' → logprob: -16.125015258789062
    5. '.' → logprob: -16.250015258789062
    6. '   ' → logprob: -16.750015258789062
    7. '1' → logprob: -16.875015258789062
    8. '```' → logprob: -17.250015258789062
    9. '
' → logprob: -17.750015258789062
    10. '\' → logprob: -17.750015258789062

Token 130: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.7432603272027336e-06
    2. '.
' → logprob: -14.000001907348633
    3. '0' → logprob: -14.375001907348633
    4. '5' → logprob: -15.875001907348633
    5. '   ' → logprob: -17.375001907348633
    6. '
' → logprob: -17.375001907348633
    7. '.

' → logprob: -18.375001907348633
    8. ' .' → logprob: -18.375001907348633
    9. ' +' → logprob: -18.812501907348633
    10. '9' → logprob: -19.000001907348633

Token 131: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -2.5776860184123507e-06
    2. '```' → logprob: -14.00000286102295
    3. '05' → logprob: -14.87500286102295
    4. 'five' → logprob: -15.25000286102295
    5. '
' → logprob: -15.37500286102295
    6. '.' → logprob: -15.62500286102295
    7. '

' → logprob: -15.75000286102295
    8. '   ' → logprob: -16.375001907348633
    9. '**' → logprob: -16.625001907348633
    10. '``' → logprob: -16.687501907348633

Token 132: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.31367653608322144
    2. ' *' → logprob: -1.3136765956878662
    3. '*self' → logprob: -7.938676357269287
    4. '<|end|>' → logprob: -10.313676834106445
    5. '**' → logprob: -11.688676834106445
    6. '   ' → logprob: -12.188676834106445
    7. '*object' → logprob: -12.313676834106445
    8. ' ' → logprob: -12.938676834106445
    9. '*(' → logprob: -14.313676834106445
    10. '    ' → logprob: -14.563676834106445

Token 133: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20157618820667267
    2. ' self' → logprob: -1.7015762329101562
    3. '<|end|>' → logprob: -8.826576232910156
    4. ' Free' → logprob: -12.076576232910156
    5. 'Free' → logprob: -12.201576232910156
    6. '*self' → logprob: -12.701576232910156
    7. '	self' → logprob: -14.076576232910156
    8. 'Self' → logprob: -14.701576232910156
    9. ' ' → logprob: -14.951576232910156
    10. '(self' → logprob: -15.451576232910156

Token 134: '.GR' (ID: 121864)
  Prédit: '.GR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.GR' → logprob: -0.0013880894985049963
    2. '.G' → logprob: -6.626388072967529
    3. '.' → logprob: -10.251388549804688
    4. 'GR' → logprob: -10.876388549804688
    5. '.Gravity' → logprob: -12.126388549804688
    6. '_GR' → logprob: -14.376388549804688
    7. ' .' → logprob: -14.501388549804688
    8. '.GRAY' → logprob: -15.001388549804688
    9. '.FR' → logprob: -15.376388549804688
    10. ' GR' → logprob: -15.876388549804688

Token 135: 'AV' (ID: 5345)
  Prédit: 'AV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AV' → logprob: -0.0009543364867568016
    2. 'ITY' → logprob: -7.0009541511535645
    3. 'V' → logprob: -11.125954627990723
    4. 'avity' → logprob: -11.125954627990723
    5. 'IVITY' → logprob: -11.500954627990723
    6. 'A' → logprob: -14.375954627990723
    7. 'ACITY' → logprob: -14.500954627990723
    8. ' AV' → logprob: -14.750954627990723
    9. '_AV' → logprob: -14.750954627990723
    10. 'Av' → logprob: -15.125954627990723

Token 136: 'ITY' (ID: 6161)
  Prédit: 'ITY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ITY' → logprob: -5.512236498361744e-07
    2. 'IT' → logprob: -15.000000953674316
    3. 'ity' → logprob: -16.25
    4. 'I' → logprob: -17.75
    5. 'ITI' → logprob: -20.25
    6. ' ity' → logprob: -20.5
    7. '   ' → logprob: -20.75
    8. 'TY' → logprob: -20.75
    9. '\' → logprob: -21.25
    10. 'ETY' → logprob: -21.375

Token 137: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.038061000406742096
    2. '*' → logprob: -3.2880609035491943
    3. '*time' → logprob: -11.163061141967773
    4. ' ' → logprob: -13.288061141967773
    5. '   ' → logprob: -13.788061141967773
    6. '<|end|>' → logprob: -13.913061141967773
    7. '*(' → logprob: -14.538061141967773
    8. '**' → logprob: -15.163061141967773
    9. '*object' → logprob: -15.288061141967773
    10. '```' → logprob: -15.413061141967773

Token 138: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.029905755072832108
    2. 'time' → logprob: -3.5299057960510254
    3. ' t' → logprob: -9.904905319213867
    4. ' (' → logprob: -10.029905319213867
    5. '(time' → logprob: -10.154905319213867
    6. '*time' → logprob: -11.654905319213867
    7. ' times' → logprob: -12.279905319213867
    8. ' math' → logprob: -12.404905319213867
    9. '	time' → logprob: -13.154905319213867
    10. 't' → logprob: -13.279905319213867

Token 139: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0009726829594001174
    2. '*' → logprob: -7.125972747802734
    3. '2' → logprob: -9.375972747802734
    4. ' **' → logprob: -9.500972747802734
    5. '*time' → logprob: -11.875972747802734
    6. '*t' → logprob: -14.750972747802734
    7. '²' → logprob: -15.125972747802734
    8. '*object' → logprob: -15.125972747802734
    9. ' *' → logprob: -15.375972747802734
    10. '***' → logprob: -15.750972747802734

Token 140: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '²' → logprob: -17.250085830688477
    4. '۲' → logprob: -17.750085830688477
    5. '   ' → logprob: -17.875085830688477
    6. '```' → logprob: -17.875085830688477
    7. '  ' → logprob: -19.000085830688477
    8. '２' → logprob: -19.250085830688477
    9. '٢' → logprob: -19.750085830688477
    10. '{' → logprob: -19.812585830688477

Token 141: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07457216084003448
    2. '<|end|>' → logprob: -2.6995720863342285
    3. '

' → logprob: -5.9495720863342285
    4. 'class' → logprob: -6.6995720863342285
    5. '\n' → logprob: -8.199572563171387
    6. '<|end|>' → logprob: -8.324572563171387
    7. '```' → logprob: -9.324572563171387
    8. '  
' → logprob: -10.324572563171387
    9. ' 
' → logprob: -10.574572563171387
    10. '#' → logprob: -10.824572563171387

Token 142: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14944936335086823
    2. 'class' → logprob: -2.024449348449707
    3. '<|end|>' → logprob: -5.524449348449707
    4. '

' → logprob: -7.149449348449707
    5. '\n' → logprob: -7.524449348449707
    6. '#' → logprob: -8.024449348449707
    7. ' class' → logprob: -8.149449348449707
    8. 'n' → logprob: -8.274449348449707
    9. '```' → logprob: -8.649449348449707
    10. '' → logprob: -9.399449348449707

Token 143: ' Floor' (ID: 25610)
  Prédit: ' Projectile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Projectile' → logprob: -0.15273326635360718
    2. 'Projectile' → logprob: -2.902733325958252
    3. ' Constant' → logprob: -3.527733325958252
    4. ' Air' → logprob: -3.902733325958252
    5. ' Drag' → logprob: -5.152733325958252
    6. 'Constant' → logprob: -5.777733325958252
    7. ' Simple' → logprob: -5.777733325958252
    8. ' Pend' → logprob: -5.902733325958252
    9. ' Par' → logprob: -5.902733325958252
    10. ' Uniform' → logprob: -6.152733325958252

Token 144: 'Height' (ID: 5817)
  Prédit: 'Model'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Model' → logprob: -0.1480475813150406
    2. '(' → logprob: -2.398047685623169
    3. 'Physics' → logprob: -4.39804744720459
    4. '()' → logprob: -4.77304744720459
    5. 'Stop' → logprob: -5.52304744720459
    6. 'Detector' → logprob: -5.52304744720459
    7. 'Manager' → logprob: -6.14804744720459
    8. 'Collision' → logprob: -6.52304744720459
    9. 'Drop' → logprob: -6.64804744720459
    10. 'Simulator' → logprob: -6.89804744720459

Token 145: 'Model' (ID: 2239)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3992171883583069
    2. ':' → logprob: -1.149217128753662
    3. '(Model' → logprob: -5.149217128753662
    4. 'Physics' → logprob: -5.899217128753662
    5. '(F' → logprob: -7.274217128753662
    6. 'Calculator' → logprob: -7.399217128753662
    7. 'Model' → logprob: -7.524217128753662
    8. ':
' → logprob: -8.02421760559082
    9. '():' → logprob: -8.14921760559082
    10. 's' → logprob: -8.77421760559082

Token 146: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004948906716890633
    2. '(F' → logprob: -7.625494956970215
    3. ' (' → logprob: -12.250494956970215
    4. ':' → logprob: -13.750494956970215
    5. '(Abstract' → logprob: -15.125494956970215
    6. '(
' → logprob: -15.500494956970215
    7. '(P' → logprob: -16.3754940032959
    8. '(Optional' → logprob: -16.6254940032959
    9. '(S' → logprob: -16.8754940032959
    10. '(Gravity' → logprob: -17.6254940032959

Token 147: 'ABC' (ID: 44197)
  Prédit: 'Physics'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Physics' → logprob: -0.06229379028081894
    2. ' Physics' → logprob: -2.812293767929077
    3. '(' → logprob: -9.312294006347656
    4. ')' → logprob: -9.562294006347656
    5. 'Floor' → logprob: -10.312294006347656
    6. 'Physical' → logprob: -10.312294006347656
    7. ' physics' → logprob: -10.687294006347656
    8. 'Phys' → logprob: -11.187294006347656
    9. '):
' → logprob: -11.312294006347656
    10. '):' → logprob: -11.562294006347656

Token 148: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003790760529227555
    2. ')' → logprob: -8.625378608703613
    3. '):
' → logprob: -8.750378608703613
    4. ',' → logprob: -10.625378608703613
    5. ':' → logprob: -11.875378608703613
    6. '):

' → logprob: -12.625378608703613
    7. '(' → logprob: -13.000378608703613
    8. ' ):' → logprob: -13.625378608703613
    9. '):
' → logprob: -13.875378608703613
    10. '   ' → logprob: -14.000378608703613

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5526173710823059
    2. '):' → logprob: -1.3026173114776611
    3. '):
' → logprob: -2.177617311477661
    4. ':' → logprob: -3.427617311477661
    5. ')' → logprob: -5.67761754989624
    6. ':
' → logprob: -5.80261754989624
    7. ',' → logprob: -8.427617073059082
    8. '(' → logprob: -9.177617073059082
    9. '  ' → logprob: -9.802617073059082
    10. '):

' → logprob: -10.552617073059082

Token 150: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18340396881103516
    2. '@' (adapté à ' @') → logprob: -1.9334039688110352
    3. ' @' → logprob: -3.808403968811035
    4. 'def' → logprob: -7.808403968811035
    5. ' def' → logprob: -8.183403968811035
    6. '    
' → logprob: -11.308403968811035
    7. '
' → logprob: -11.558403968811035
    8. '    ' → logprob: -12.058403968811035
    9. '@property' → logprob: -12.183403968811035
    10. ' ' → logprob: -12.308403968811035

Token 151: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.011059137992560863
    2. 'property' → logprob: -4.511059284210205
    3. 'staticmethod' → logprob: -12.136058807373047
    4. 'abc' → logprob: -12.761058807373047
    5. 'classmethod' → logprob: -13.261058807373047
    6. ' abstract' → logprob: -14.011058807373047
    7. 'ab' → logprob: -14.636058807373047
    8. 'abs' → logprob: -16.761058807373047
    9. '.abstract' → logprob: -16.761058807373047
    10. '@property' → logprob: -17.761058807373047

Token 152: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -2.339278580620885e-06
    2. 'classmethod' → logprob: -13.500001907348633
    3. '_method' → logprob: -14.000001907348633
    4. 'meth' → logprob: -16.875001907348633
    5. 'property' → logprob: -17.500001907348633
    6. 'staticmethod' → logprob: -17.500001907348633
    7. 'def' → logprob: -17.625001907348633
    8. 'ethod' → logprob: -18.500001907348633
    9. ' method' → logprob: -18.500001907348633
    10. '	method' → logprob: -19.250001907348633

Token 153: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03092212788760662
    2. 'def' → logprob: -3.5309221744537354
    3. ' def' → logprob: -7.155921936035156
    4. '   ' → logprob: -8.030921936035156
    5. '<|end|>' → logprob: -10.030921936035156
    6. '
' → logprob: -11.405921936035156
    7. '    
' → logprob: -12.280921936035156
    8. '<|end|>' → logprob: -13.530921936035156
    9. '	def' → logprob: -13.905921936035156
    10. ' 
' → logprob: -14.280921936035156

Token 154: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37176254391670227
    2. '   ' → logprob: -1.7467625141143799
    3. 'def' → logprob: -1.9967625141143799
    4. ' def' → logprob: -7.996762752532959
    5. '
' → logprob: -11.7467622756958
    6. '<|end|>' → logprob: -11.8717622756958
    7. '    
' → logprob: -11.9967622756958
    8. '  ' → logprob: -12.3717622756958
    9. '	def' → logprob: -13.2467622756958
    10. ' ' → logprob: -13.2467622756958

Token 155: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.059657614678144455
    2. 'property' → logprob: -3.184657573699951
    3. '
' → logprob: -4.184657573699951
    4. ' def' → logprob: -6.809657573699951
    5. '   ' → logprob: -8.93465805053711
    6. 'classmethod' → logprob: -10.68465805053711
    7. 'staticmethod' → logprob: -11.43465805053711
    8. 'class' → logprob: -12.18465805053711
    9. '```' → logprob: -12.55965805053711
    10. '    
' → logprob: -13.05965805053711

Token 156: ' height' (ID: 4679)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.7258843779563904
    2. ' height' → logprob: -1.3508844375610352
    3. ' floor' → logprob: -1.7258844375610352
    4. ' def' → logprob: -2.600884437561035
    5. ' current' → logprob: -6.350884437561035
    6. ' level' → logprob: -7.600884437561035
    7. ' heights' → logprob: -7.600884437561035
    8. 'get' → logprob: -7.725884437561035
    9. 'floor' → logprob: -8.225884437561035
    10. 'height' → logprob: -8.475884437561035

Token 157: '_of' (ID: 8023)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.37921562790870667
    2. '_after' → logprob: -1.5042155981063843
    3. '_at' → logprob: -2.379215717315674
    4. '(' → logprob: -7.629215717315674
    5. ' (' → logprob: -9.254215240478516
    6. '_before' → logprob: -9.504215240478516
    7. '_for' → logprob: -10.504215240478516
    8. '_ab' → logprob: -10.879215240478516
    9. '   ' → logprob: -11.004215240478516
    10. '_(' → logprob: -11.379215240478516

Token 158: '_floor' (ID: 152330)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02191086858510971
    2. '(' → logprob: -4.021910667419434
    3. '_floor' → logprob: -6.396910667419434
    4. 'self' → logprob: -6.771910667419434
    5. 'floor' → logprob: -7.271910667419434
    6. '_' → logprob: -8.646910667419434
    7. ' (' → logprob: -10.271910667419434
    8. ' self' → logprob: -11.521910667419434
    9. '(
' → logprob: -11.896910667419434
    10. ' floor' → logprob: -12.646910667419434

Token 159: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001137947037932463
    2. '(' → logprob: -9.125113487243652
    3. ' (' → logprob: -12.625113487243652
    4. 'self' → logprob: -14.000113487243652
    5. 's' → logprob: -15.375113487243652
    6. '(s' → logprob: -15.625113487243652
    7. '(
' → logprob: -16.37511444091797
    8. ' self' → logprob: -17.37511444091797
    9. '(this' → logprob: -18.50011444091797
    10. '_at' → logprob: -18.62511444091797

Token 160: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0029674768447875977
    2. ')' → logprob: -6.752967357635498
    3. ' (' → logprob: -7.002967357635498
    4. ',' → logprob: -7.252967357635498
    5. 'self' → logprob: -9.252967834472656
    6. ')(' → logprob: -10.127967834472656
    7. '(' → logprob: -10.752967834472656
    8. ' self' → logprob: -11.877967834472656
    9. '   ' → logprob: -12.252967834472656
    10. '       ' → logprob: -13.377967834472656

Token 161: ' floor' (ID: 8350)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.584138035774231
    2. 'self' → logprob: -0.834138035774231
    3. 'floor' → logprob: -5.209137916564941
    4. ' floor' → logprob: -5.959137916564941
    5. '   ' → logprob: -10.084137916564941
    6. ' ' → logprob: -10.959137916564941
    7. '(self' → logprob: -11.209137916564941
    8. '	self' → logprob: -11.459137916564941
    9. 'flo' → logprob: -12.334137916564941
    10. '       ' → logprob: -12.584137916564941

Token 162: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006438109558075666
    2. '_number' → logprob: -7.500643730163574
    3. 'number' → logprob: -10.750643730163574
    4. ':int' → logprob: -11.250643730163574
    5. ')' → logprob: -11.375643730163574
    6. '_index' → logprob: -11.500643730163574
    7. '   ' → logprob: -11.625643730163574
    8. 'index' → logprob: -11.875643730163574
    9. ' :' → logprob: -12.000643730163574
    10. '_num' → logprob: -13.125643730163574

Token 163: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05500505119562149
    2. 'int' → logprob: -2.9300050735473633
    3. ' Optional' → logprob: -9.305005073547363
    4. ')' → logprob: -11.680005073547363
    5. ' ' → logprob: -11.805005073547363
    6. 'Optional' → logprob: -12.305005073547363
    7. ':int' → logprob: -12.305005073547363
    8. '[int' → logprob: -12.430005073547363
    9. ' )' → logprob: -13.930005073547363
    10. '	int' → logprob: -14.680005073547363

Token 164: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001242772996192798
    2. ' )' → logprob: -9.000123977661133
    3. ',' → logprob: -14.750123977661133
    4. ':' → logprob: -15.125123977661133
    5. ',)' → logprob: -15.625123977661133
    6. '`)' → logprob: -16.875123977661133
    7. '   ' → logprob: -16.875123977661133
    8. '')' → logprob: -18.000123977661133
    9. '")' → logprob: -18.125123977661133
    10. '```' → logprob: -18.250123977661133

Token 165: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005737271625548601
    2. ' ->' → logprob: -5.2557373046875
    3. ' )' → logprob: -8.1307373046875
    4. '->' → logprob: -8.8807373046875
    5. ')->' → logprob: -9.6307373046875
    6. ' )->' → logprob: -13.0057373046875
    7. ' ' → logprob: -13.6307373046875
    8. ':' → logprob: -15.2557373046875
    9. '):' → logprob: -15.8807373046875
    10. '   ' → logprob: -15.8807373046875

Token 166: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.039598267525434494
    2. ' Optional' → logprob: -3.414598226547241
    3. 'float' → logprob: -5.28959846496582
    4. 'Optional' → logprob: -7.41459846496582
    5. ' int' → logprob: -8.28959846496582
    6. ' ' → logprob: -11.03959846496582
    7. 'int' → logprob: -11.16459846496582
    8. ' None' → logprob: -12.91459846496582
    9. '	float' → logprob: -13.16459846496582
    10. ':' → logprob: -14.78959846496582

Token 167: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012852331856265664
    2. '):' → logprob: -7.001285076141357
    3. ':
' → logprob: -8.751285552978516
    4. ')' → logprob: -9.501285552978516
    5. '   ' → logprob: -10.251285552978516
    6. ':return' → logprob: -10.251285552978516
    7. '<|end|>' → logprob: -10.501285552978516
    8. '():' → logprob: -11.001285552978516
    9. ',' → logprob: -12.376285552978516
    10. ' :' → logprob: -12.626285552978516

Token 168: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05594572424888611
    2. ' pass' → logprob: -3.680945634841919
    3. '<|end|>' → logprob: -3.680945634841919
    4. ':' → logprob: -6.680945873260498
    5. 'pass' → logprob: -6.930945873260498
    6. '   ' → logprob: -7.055945873260498
    7. ')' → logprob: -7.805945873260498
    8. ' ' → logprob: -9.30594539642334
    9. ':
' → logprob: -9.30594539642334
    10. '
' → logprob: -9.43094539642334

Token 169: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.5240161418914795
    2. 'pass' (adapté à ' pass') → logprob: -1.0240161418914795
    3. '       ' → logprob: -3.0240161418914795
    4. '   ' → logprob: -9.274016380310059
    5. '	pass' → logprob: -11.399016380310059
    6. '    ' → logprob: -14.649016380310059
    7. ' ' → logprob: -14.774016380310059
    8. '      ' → logprob: -14.774016380310059
    9. '  ' → logprob: -14.899016380310059
    10. '     ' → logprob: -15.774016380310059

Token 170: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7175621390342712
    2. '
' → logprob: -1.342562198638916
    3. '<|end|>' → logprob: -1.467562198638916
    4. '

' → logprob: -3.967562198638916
    5. '<|end|>' → logprob: -7.217562198638916
    6. ' class' → logprob: -7.717562198638916
    7. ' 
' → logprob: -9.467561721801758
    8. '  
' → logprob: -9.967561721801758
    9. '<class' → logprob: -9.967561721801758
    10. '```' → logprob: -10.217561721801758

Token 171: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.04177317023277283
    2. '
' → logprob: -3.5417730808258057
    3. '<|end|>' → logprob: -4.541773319244385
    4. '

' → logprob: -7.166773319244385
    5. ' class' → logprob: -7.916773319244385
    6. '   ' → logprob: -10.416772842407227
    7. ' 
' → logprob: -10.541772842407227
    8. '    
' → logprob: -10.791772842407227
    9. '  
' → logprob: -10.916772842407227
    10. '<class' → logprob: -11.041772842407227

Token 172: ' Linear' (ID: 29092)
  Prédit: 'Constant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Constant' → logprob: -0.5955960154533386
    2. ' Constant' → logprob: -2.0955960750579834
    3. 'Simple' → logprob: -2.3455960750579834
    4. 'Building' → logprob: -2.7205960750579834
    5. ' Simple' → logprob: -2.9705960750579834
    6. 'Single' → logprob: -3.9705960750579834
    7. ' Building' → logprob: -4.220595836639404
    8. ' Single' → logprob: -4.345595836639404
    9. 'Uniform' → logprob: -4.345595836639404
    10. 'Linear' → logprob: -4.470595836639404

Token 173: 'Floor' (ID: 47596)
  Prédit: 'Floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Floor' → logprob: -0.038177017122507095
    2. 'Height' → logprob: -3.288177013397217
    3. 'Flo' → logprob: -9.663177490234375
    4. ' Floor' → logprob: -10.413177490234375
    5. ' floor' → logprob: -11.038177490234375
    6. 'floor' → logprob: -11.663177490234375
    7. '_floor' → logprob: -12.163177490234375
    8. 'height' → logprob: -13.413177490234375
    9. 'Building' → logprob: -13.788177490234375
    10. ' ' → logprob: -14.038177490234375

Token 174: 'Height' (ID: 5817)
  Prédit: 'Height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Height' → logprob: -6.153795766294934e-06
    2. 'He' → logprob: -13.125005722045898
    3. 'height' → logprob: -13.500005722045898
    4. 'Floor' → logprob: -13.500005722045898
    5. ' Height' → logprob: -14.125005722045898
    6. 'Model' → logprob: -15.250005722045898
    7. ' ' → logprob: -16.0000057220459
    8. ' height' → logprob: -16.6250057220459
    9. 'H' → logprob: -17.3750057220459
    10. '_height' → logprob: -17.8750057220459

Token 175: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -6.034592388459714e-06
    2. 'model' → logprob: -12.250005722045898
    3. 'Height' → logprob: -14.500005722045898
    4. 'Floor' → logprob: -15.125005722045898
    5. 'Mode' → logprob: -15.875005722045898
    6. ' Model' → logprob: -16.0000057220459
    7. ' model' → logprob: -17.2500057220459
    8. '	Model' → logprob: -17.3750057220459
    9. 'MODEL' → logprob: -18.2500057220459
    10. 'Mod' → logprob: -18.2500057220459

Token 176: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.018166331574320793
    2. '(' → logprob: -4.018166542053223
    3. ':' → logprob: -11.268166542053223
    4. ' (' → logprob: -12.768166542053223
    5. '(f' → logprob: -15.518166542053223
    6. '(
' → logprob: -16.018165588378906
    7. ' :' → logprob: -16.768165588378906
    8. '):' → logprob: -17.018165588378906
    9. '(Float' → logprob: -17.018165588378906
    10. '(Abstract' → logprob: -17.268165588378906

Token 177: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.0003977800370194018
    2. 'lo' → logprob: -8.375397682189941
    3. 'loo' → logprob: -9.750397682189941
    4. 'oor' → logprob: -10.125397682189941
    5. '```' → logprob: -10.875397682189941
    6. 'loat' → logprob: -11.250397682189941
    7. '(' → logprob: -12.125397682189941
    8. 'Floor' → logprob: -12.250397682189941
    9. 'l' → logprob: -12.250397682189941
    10. 'floor' → logprob: -12.625397682189941

Token 178: 'Height' (ID: 5817)
  Prédit: 'Height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Height' → logprob: -3.4285862057004124e-05
    2. 'He' → logprob: -10.50003433227539
    3. 'height' → logprob: -13.00003433227539
    4. 'Hei' → logprob: -13.37503433227539
    5. 'H' → logprob: -14.12503433227539
    6. ' Height' → logprob: -15.00003433227539
    7. '_height' → logprob: -15.25003433227539
    8. ')' → logprob: -15.37503433227539
    9. '-' → logprob: -15.50003433227539
    10. '
' → logprob: -15.75003433227539

Token 179: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -0.00022022522171027958
    2. 'odel' → logprob: -8.75022029876709
    3. 'Height' → logprob: -10.12522029876709
    4. '	Model' → logprob: -11.75022029876709
    5. 'model' → logprob: -12.12522029876709
    6. '   ' → logprob: -13.12522029876709
    7. ' Model' → logprob: -13.75022029876709
    8. ')' → logprob: -13.87522029876709
    9. ' ' → logprob: -14.81272029876709
    10. '_Model' → logprob: -15.37522029876709

Token 180: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012574518099427223
    2. '):
' → logprob: -4.387574672698975
    3. ')' → logprob: -10.262574195861816
    4. '   ' → logprob: -11.387574195861816
    5. ' ):' → logprob: -11.512574195861816
    6. '):
' → logprob: -12.012574195861816
    7. ':' → logprob: -13.762574195861816
    8. '):

' → logprob: -14.262574195861816
    9. ',' → logprob: -15.637574195861816
    10. '    ' → logprob: -15.887574195861816

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006681174854747951
    2. 'def' → logprob: -7.750668048858643
    3. ' def' → logprob: -8.3756685256958
    4. ':' → logprob: -13.1256685256958
    5. '    
' → logprob: -13.3756685256958
    6. '	def' → logprob: -13.3756685256958
    7. ')' → logprob: -14.2506685256958
    8. '   ' → logprob: -15.0006685256958
    9. '):
' → logprob: -15.5006685256958
    10. '
' → logprob: -15.7506685256958

Token 182: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.189085453748703
    2. 'def' (adapté à ' def') → logprob: -1.9390854835510254
    3. '   ' → logprob: -3.5640854835510254
    4. ' height' → logprob: -9.814085006713867
    5. 'height' → logprob: -11.064085006713867
    6. ' HEIGHT' → logprob: -11.439085006713867
    7. ' _' → logprob: -11.439085006713867
    8. 'HEIGHT' → logprob: -11.564085006713867
    9. ' __' → logprob: -12.564085006713867
    10. ' ' → logprob: -13.126585006713867

Token 183: ' height' (ID: 4679)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00014823723176959902
    2. '__' → logprob: -9.500147819519043
    3. ' height' → logprob: -9.750147819519043
    4. ' def' → logprob: -11.375147819519043
    5. ' ' → logprob: -13.750147819519043
    6. ' _' → logprob: -14.125147819519043
    7. 'height' → logprob: -14.500147819519043
    8. '_height' → logprob: -14.625147819519043
    9. ' init' → logprob: -15.125147819519043
    10. ' ' → logprob: -15.375147819519043

Token 184: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -5.200166469876422e-06
    2. '   ' → logprob: -12.500004768371582
    3. '_after' → logprob: -14.625004768371582
    4. '_' → logprob: -15.500004768371582
    5. '_between' → logprob: -15.625004768371582
    6. '_for' → logprob: -15.750004768371582
    7. '_at' → logprob: -16.1250057220459
    8. 's' → logprob: -16.3750057220459
    9. 'def' → logprob: -16.8750057220459
    10. 'of' → logprob: -16.8750057220459

Token 185: '_floor' (ID: 152330)
  Prédit: '_floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_floor' → logprob: -0.0002158146962756291
    2. 'floor' → logprob: -9.250215530395508
    3. '_' → logprob: -9.750215530395508
    4. '(self' → logprob: -10.125215530395508
    5. '_f' → logprob: -11.625215530395508
    6. 'self' → logprob: -12.125215530395508
    7. '_height' → logprob: -13.500215530395508
    8. '   ' → logprob: -14.375215530395508
    9. '_the' → logprob: -14.500215530395508
    10. '_(' → logprob: -14.500215530395508

Token 186: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00017231269157491624
    2. '(' → logprob: -8.75017261505127
    3. ' (' → logprob: -11.25017261505127
    4. '   ' → logprob: -15.62517261505127
    5. 'self' → logprob: -15.62517261505127
    6. '(s' → logprob: -15.75017261505127
    7. '(
' → logprob: -16.000171661376953
    8. '(f' → logprob: -16.875171661376953
    9. ' ' → logprob: -17.125171661376953
    10. ' self' → logprob: -17.250171661376953

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27345892786979675
    2. 'self' → logprob: -2.148458957672119
    3. '(self' → logprob: -2.398458957672119
    4. ' self' → logprob: -3.648458957672119
    5. '   ' → logprob: -5.898458957672119
    6. ')' → logprob: -6.648458957672119
    7. ',self' → logprob: -7.523458957672119
    8. ' ,' → logprob: -7.898458957672119
    9. '       ' → logprob: -8.398458480834961
    10. ')(' → logprob: -9.023458480834961

Token 188: ' floor' (ID: 8350)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4598419666290283
    2. ' floor' → logprob: -1.0848419666290283
    3. 'self' → logprob: -3.8348419666290283
    4. 'floor' → logprob: -4.709841728210449
    5. ' ' → logprob: -10.95984172821045
    6. '       ' → logprob: -11.33484172821045
    7. '    ' → logprob: -12.20984172821045
    8. '   ' → logprob: -12.20984172821045
    9. '(self' → logprob: -12.95984172821045
    10. '_floor' → logprob: -13.08484172821045

Token 189: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002613358374219388
    2. ')' → logprob: -8.500261306762695
    3. ':int' → logprob: -10.750261306762695
    4. '   ' → logprob: -11.500261306762695
    5. ' :' → logprob: -11.750261306762695
    6. '):' → logprob: -11.875261306762695
    7. 'self' → logprob: -12.000261306762695
    8. ' )' → logprob: -12.750261306762695
    9. ' self' → logprob: -14.375261306762695
    10. '(self' → logprob: -14.500261306762695

Token 190: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.01424460206180811
    2. 'int' → logprob: -4.264244556427002
    3. ')' → logprob: -10.01424503326416
    4. ' ' → logprob: -10.88924503326416
    5. ' float' → logprob: -11.88924503326416
    6. ':int' → logprob: -12.26424503326416
    7. ' )' → logprob: -13.13924503326416
    8. '(int' → logprob: -13.88924503326416
    9. '1' → logprob: -14.13924503326416
    10. '   ' → logprob: -14.26424503326416

Token 191: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024081121664494276
    2. ' )' → logprob: -6.127408027648926
    3. ':' → logprob: -8.502408027648926
    4. '   ' → logprob: -10.877408027648926
    5. '):' → logprob: -14.502408027648926
    6. ' ' → logprob: -15.002408027648926
    7. '    ' → logprob: -16.502408981323242
    8. '       ' → logprob: -17.502408981323242
    9. '  ' → logprob: -17.627408981323242
    10. ' ):' → logprob: -17.627408981323242

Token 192: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.11596649885177612
    2. ':' → logprob: -2.740966558456421
    3. '->' → logprob: -3.240966558456421
    4. ')' → logprob: -5.240966320037842
    5. ' ' → logprob: -8.490966796875
    6. ')->' → logprob: -8.615966796875
    7. '   ' → logprob: -8.865966796875
    8. ' )->' → logprob: -11.115966796875
    9. ' :' → logprob: -12.490966796875
    10. ':return' → logprob: -12.615966796875

Token 193: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.013105044141411781
    2. 'float' → logprob: -4.5131049156188965
    3. ' ' → logprob: -7.5131049156188965
    4. ' return' → logprob: -7.6381049156188965
    5. '(float' → logprob: -7.8881049156188965
    6. ' floor' → logprob: -8.388105392456055
    7. ' int' → logprob: -8.638105392456055
    8. 'floor' → logprob: -9.388105392456055
    9. 'flo' → logprob: -9.388105392456055
    10. ' (' → logprob: -10.513105392456055

Token 194: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06792590767145157
    2. ' ->' → logprob: -3.0679259300231934
    3. '->' → logprob: -4.317925930023193
    4. ')' → logprob: -5.317925930023193
    5. '   ' → logprob: -7.942925930023193
    6. ':
' → logprob: -8.442925453186035
    7. ')->' → logprob: -9.067925453186035
    8. ':return' → logprob: -9.067925453186035
    9. '       ' → logprob: -10.067925453186035
    10. ' :' → logprob: -10.442925453186035

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08689848333597183
    2. ' return' → logprob: -2.7118985652923584
    3. 'return' → logprob: -4.086898326873779
    4. '   ' → logprob: -10.836898803710938
    5. '	return' → logprob: -13.211898803710938
    6. '0' → logprob: -13.461898803710938
    7. ' ' → logprob: -14.211898803710938
    8. '     ' → logprob: -14.461898803710938
    9. '{return' → logprob: -14.711898803710938
    10. '      ' → logprob: -14.961898803710938

Token 196: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.633240818977356
    2. 'return' → logprob: -0.758240818977356
    3. '   ' → logprob: -8.008240699768066
    4. ' ' → logprob: -8.883240699768066
    5. '       ' → logprob: -10.508240699768066
    6. '0' → logprob: -10.633240699768066
    7. '
' → logprob: -10.758240699768066
    8. '9' → logprob: -10.758240699768066
    9. '10' → logprob: -10.758240699768066
    10. '8' → logprob: -11.633240699768066

Token 197: ' height' (ID: 4679)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1271311640739441
    2. 'return' → logprob: -2.127131223678589
    3. '   ' → logprob: -8.752131462097168
    4. '       ' → logprob: -10.252131462097168
    5. ' ' → logprob: -12.752131462097168
    6. '	return' → logprob: -13.002131462097168
    7. '    ' → logprob: -13.502131462097168
    8. 'Return' → logprob: -14.127131462097168
    9. ' #' → logprob: -15.252131462097168
    10. ':return' → logprob: -15.252131462097168

Token 198: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.856945812702179
    2. ' *' → logprob: -1.1069457530975342
    3. '=' → logprob: -1.9819457530975342
    4. ' return' → logprob: -2.731945753097534
    5. '<|end|>' → logprob: -4.356945991516113
    6. '   ' → logprob: -4.481945991516113
    7. 'return' → logprob: -5.481945991516113
    8. ' ' → logprob: -5.606945991516113
    9. '_' → logprob: -6.231945991516113
    10. '       ' → logprob: -6.356945991516113

Token 199: ' ' (ID: 220)
  Prédit: ' floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' floor' → logprob: -0.17391011118888855
    2. ' ' → logprob: -2.548910140991211
    3. 'floor' → logprob: -2.548910140991211
    4. '3' → logprob: -5.798910140991211
    5. '2' → logprob: -9.923910140991211
    6. '1' → logprob: -9.923910140991211
    7. ' (' → logprob: -10.048910140991211
    8. '0' → logprob: -10.673910140991211
    9. '4' → logprob: -10.861410140991211
    10. '   ' → logprob: -11.173910140991211

Token 200: '5' (ID: 20)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.3087247908115387
    2. '3' → logprob: -1.5587247610092163
    3. ' floor' → logprob: -3.183724880218506
    4. ' ' → logprob: -4.308724880218506
    5. '2' → logprob: -9.308724403381348
    6. 'flo' → logprob: -10.058724403381348
    7. '(' → logprob: -10.121224403381348
    8. '   ' → logprob: -10.558724403381348
    9. ' (' → logprob: -10.871224403381348
    10. '  ' → logprob: -11.308724403381348

Token 201: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0885358601808548
    2. '.' → logprob: -2.588535785675049
    3. '*' → logprob: -4.713535785675049
    4. '0' → logprob: -7.463535785675049
    5. ' +' → logprob: -10.338536262512207
    6. ' ' → logprob: -11.588536262512207
    7. ' ' → logprob: -12.713536262512207
    8. '00' → logprob: -13.588536262512207
    9. '*object' → logprob: -13.588536262512207
    10. '   ' → logprob: -13.713536262512207

Token 202: ' N' (ID: 478)
  Prédit: ' floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' floor' → logprob: -0.03807580843567848
    2. 'floor' → logprob: -3.2880759239196777
    3. ' (' → logprob: -11.28807544708252
    4. ' ' → logprob: -11.91307544708252
    5. ' float' → logprob: -12.53807544708252
    6. '(' → logprob: -13.16307544708252
    7. 'flo' → logprob: -13.16307544708252
    8. '_floor' → logprob: -13.41307544708252
    9. ' flo' → logprob: -13.53807544708252
    10. '0' → logprob: -14.03807544708252

Token 203: ' -' (ID: 533)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.1420289278030396
    2. '<|end|>' → logprob: -1.2670289278030396
    3. ' +' → logprob: -1.6420289278030396
    4. 'floor' → logprob: -2.14202880859375
    5. ' ' → logprob: -3.64202880859375
    6. '_floor' → logprob: -4.14202880859375
    7. ' floor' → logprob: -4.89202880859375
    8. '(f' → logprob: -4.89202880859375
    9. '*' → logprob: -5.14202880859375
    10. 'f' → logprob: -5.51702880859375

Token 204: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5408011674880981
    2. '1' → logprob: -1.0408011674880981
    3. '2' → logprob: -3.2908010482788086
    4. '0' → logprob: -3.9158010482788086
    5. '4' → logprob: -5.415801048278809
    6. '3' → logprob: -6.165801048278809
    7. '5' → logprob: -7.415801048278809
    8. '   ' → logprob: -9.415801048278809
    9. '  ' → logprob: -10.478301048278809
    10. '(' → logprob: -10.853301048278809

Token 205: '5' (ID: 20)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.556934118270874
    2. '2' → logprob: -1.681934118270874
    3. ' ' → logprob: -2.056934118270874
    4. '0' → logprob: -3.306934118270874
    5. '4' → logprob: -3.431934118270874
    6. '3' → logprob: -3.556934118270874
    7. '5' → logprob: -4.181934356689453
    8. '   ' → logprob: -9.369434356689453
    9. 'floor' → logprob: -9.806934356689453
    10. '-' → logprob: -10.056934356689453

Token 206: ' according' (ID: 7065)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 207: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.038296233862638474
    2. 'to' → logprob: -3.2882962226867676
    3. ' ' → logprob: -8.788296699523926
    4. '_to' → logprob: -9.913296699523926
    5. 't' → logprob: -10.788296699523926
    6. '   ' → logprob: -11.913296699523926
    7. ')' → logprob: -12.038296699523926
    8. '    ' → logprob: -12.538296699523926
    9. 'To' → logprob: -12.663296699523926
    10. '	to' → logprob: -13.038296699523926

Token 208: ' problem' (ID: 4792)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.14684921503067017
    2. ' floor' → logprob: -2.8968491554260254
    3. 'the' → logprob: -3.3968491554260254
    4. 'floor' → logprob: -4.771849155426025
    5. ' your' → logprob: -4.896849155426025
    6. ' problem' → logprob: -5.146849155426025
    7. ' range' → logprob: -5.271849155426025
    8. ' previous' → logprob: -5.771849155426025
    9. 'range' → logprob: -5.896849155426025
    10. ' self' → logprob: -6.521849155426025

Token 209: ' statement' (ID: 9710)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6440528035163879
    2. ' return' → logprob: -1.3940527439117432
    3. '
' → logprob: -2.644052743911743
    4. '   ' → logprob: -3.019052743911743
    5. 'return' → logprob: -3.394052743911743
    6. ' ' → logprob: -4.269052982330322
    7. ' +' → logprob: -4.769052982330322
    8. '        
' → logprob: -4.769052982330322
    9. ' *' → logprob: -4.894052982330322
    10. '    
' → logprob: -5.269052982330322

Token 210: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07102251797914505
    2. '
' → logprob: -3.4460225105285645
    3. ' return' → logprob: -3.5710225105285645
    4. 'return' → logprob: -5.0710225105285645
    5. '        
' → logprob: -7.0710225105285645
    6. '   ' → logprob: -8.571022987365723
    7. '	return' → logprob: -8.571022987365723
    8. ' 
' → logprob: -8.821022987365723
    9. '<|end|>' → logprob: -8.946022987365723
    10. ' +' → logprob: -9.071022987365723

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005828064400702715
    2. ' return' → logprob: -5.255827903747559
    3. 'return' → logprob: -7.505827903747559
    4. '   ' → logprob: -11.255827903747559
    5. '<|end|>' → logprob: -11.755827903747559
    6. ' ' → logprob: -12.130827903747559
    7. '      ' → logprob: -12.630827903747559
    8. '	return' → logprob: -12.630827903747559
    9. '	' → logprob: -13.005827903747559
    10. ' if' → logprob: -13.255827903747559

Token 212: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16491353511810303
    2. ' return' → logprob: -1.914913535118103
    3. '       ' → logprob: -5.414913654327393
    4. 'if' → logprob: -9.164913177490234
    5. ' if' → logprob: -9.664913177490234
    6. '   ' → logprob: -10.039913177490234
    7. ' ' → logprob: -12.039913177490234
    8. '	return' → logprob: -12.039913177490234
    9. 'height' → logprob: -12.789913177490234
    10. ' height' → logprob: -14.664913177490234

Token 213: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.6931689381599426
    2. ' ' → logprob: -0.6931689381599426
    3. '(' → logprob: -12.068168640136719
    4. ' (' → logprob: -12.193168640136719
    5. '   ' → logprob: -12.818168640136719
    6. ' max' → logprob: -12.818168640136719
    7. 'floor' → logprob: -13.693168640136719
    8. 'max' → logprob: -13.943168640136719
    9. '4' → logprob: -14.193168640136719
    10. '       ' → logprob: -14.318168640136719

Token 214: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00030293059535324574
    2. ' ' → logprob: -8.125303268432617
    3. '(' → logprob: -12.000303268432617
    4. '4' → logprob: -14.875303268432617
    5. '   ' → logprob: -15.500303268432617
    6. 'max' → logprob: -16.375303268432617
    7. 'float' → logprob: -17.125303268432617
    8. ' (' → logprob: -17.250303268432617
    9. 'floor' → logprob: -17.500303268432617
    10. '6' → logprob: -18.250303268432617

Token 215: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.31328731775283813
    2. '*' → logprob: -1.3132872581481934
    3. '*(' → logprob: -11.688287734985352
    4. ' ' → logprob: -12.063287734985352
    5. '*f' → logprob: -12.438287734985352
    6. '.' → logprob: -12.813287734985352
    7. ' ' → logprob: -12.938287734985352
    8. '**' → logprob: -14.688287734985352
    9. '```' → logprob: -15.063287734985352
    10. '0' → logprob: -15.313287734985352

Token 216: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.4750749170780182
    2. ' floor' → logprob: -0.9750748872756958
    3. '(f' → logprob: -6.975074768066406
    4. ' (' → logprob: -10.475074768066406
    5. '(' → logprob: -10.975074768066406
    6. 'f' → logprob: -11.850074768066406
    7. 'flo' → logprob: -12.350074768066406
    8. '_floor' → logprob: -12.850074768066406
    9. '.floor' → logprob: -14.100074768066406
    10. ' flo' → logprob: -14.975074768066406

Token 217: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.011094861663877964
    2. '-' → logprob: -4.51109504699707
    3. ' ' → logprob: -10.51109504699707
    4. '<|end|>' → logprob: -10.88609504699707
    5. '   ' → logprob: -14.76109504699707
    6. ' ' → logprob: -15.76109504699707
    7. '  ' → logprob: -16.13609504699707
    8. ' +' → logprob: -16.51109504699707
    9. '
' → logprob: -16.63609504699707
    10. ' –' → logprob: -17.01109504699707

Token 218: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.004078639671206474
    2. ' ' → logprob: -5.5040788650512695
    3. '   ' → logprob: -15.50407886505127
    4. '```' → logprob: -17.254077911376953
    5. '<|end|>' → logprob: -17.379077911376953
    6. '  ' → logprob: -17.754077911376953
    7. '1' → logprob: -18.879077911376953
    8. ' five' → logprob: -19.254077911376953
    9. '0' → logprob: -19.254077911376953
    10. ' ' → logprob: -19.504077911376953

Token 219: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -18.875011444091797
    4. '   ' → logprob: -19.500011444091797
    5. '<|end|>' → logprob: -20.250011444091797
    6. '1' → logprob: -20.500011444091797
    7. '  ' → logprob: -21.500011444091797
    8. '0' → logprob: -21.562511444091797
    9. '۵' → logprob: -21.812511444091797
    10. '٥' → logprob: -22.062511444091797

Token 220: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 221: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.2764190435409546
    2. '
' → logprob: -1.5264190435409546
    3. '<|end|>' → logprob: -3.776419162750244
    4. '

' → logprob: -6.901419162750244
    5. '<|end|>' → logprob: -9.151418685913086
    6. ' class' → logprob: -9.276418685913086
    7. '  
' → logprob: -10.526418685913086
    8. '```' → logprob: -11.026418685913086
    9. '\n' → logprob: -11.651418685913086
    10. '    
' → logprob: -11.651418685913086

Token 222: ' Crack' (ID: 70002)
  Prédit: ' Physics'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Physics' → logprob: -1.3590887784957886
    2. ' Elevator' → logprob: -1.6090887784957886
    3. ' Building' → logprob: -2.109088897705078
    4. 'Physics' → logprob: -2.484088897705078
    5. 'Building' → logprob: -2.734088897705078
    6. ' Optional' → logprob: -3.609088897705078
    7. ' Drop' → logprob: -3.609088897705078
    8. 'Drop' → logprob: -4.109088897705078
    9. ' Floor' → logprob: -4.234088897705078
    10. ' Stair' → logprob: -4.609088897705078

Token 223: 'Velocity' (ID: 34616)
  Prédit: 'Propagation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Propagation' → logprob: -0.855267345905304
    2. 'Model' → logprob: -1.6052672863006592
    3. 'Growth' → logprob: -2.230267286300659
    4. 'Width' → logprob: -2.355267286300659
    5. 'Height' → logprob: -3.105267286300659
    6. 'Detector' → logprob: -3.355267286300659
    7. 'Detection' → logprob: -3.855267286300659
    8. 'Damage' → logprob: -4.980267524719238
    9. 'Length' → logprob: -4.980267524719238
    10. 'Monitor' → logprob: -5.480267524719238

Token 224: 'Determ' (ID: 130588)
  Prédit: 'Model'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Model' → logprob: -0.5247707962989807
    2. '(' → logprob: -1.024770736694336
    3. 'Calculator' → logprob: -3.649770736694336
    4. ':' → logprob: -5.024770736694336
    5. 'Estimator' → logprob: -5.524770736694336
    6. 'Detector' → logprob: -5.899770736694336
    7. '(F' → logprob: -6.024770736694336
    8. '(Model' → logprob: -6.149770736694336
    9. 'Threshold' → logprob: -6.274770736694336
    10. '(C' → logprob: -6.774770736694336

Token 225: 'iner' (ID: 6010)
  Prédit: 'iner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iner' → logprob: -0.0613379068672657
    2. 'ination' → logprob: -3.686337947845459
    3. 'inator' → logprob: -4.436337947845459
    4. 'er' → logprob: -4.811337947845459
    5. 'ining' → logprob: -5.561337947845459
    6. 'in' → logprob: -5.561337947845459
    7. 'ined' → logprob: -5.811337947845459
    8. 'ine' → logprob: -6.561337947845459
    9. 'iter' → logprob: -8.4363374710083
    10. 'ing' → logprob: -8.4988374710083

Token 226: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008908935822546482
    2. ':' → logprob: -4.758908748626709
    3. '(F' → logprob: -8.383909225463867
    4. '(Abstract' → logprob: -9.883909225463867
    5. '():' → logprob: -12.133909225463867
    6. ':
' → logprob: -13.258909225463867
    7. '(P' → logprob: -13.758909225463867
    8. '(
' → logprob: -13.883909225463867
    9. '(:' → logprob: -14.383909225463867
    10. '(Process' → logprob: -14.383909225463867

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05012667924165726
    2. ' def' → logprob: -3.050126791000366
    3. '    
' → logprob: -7.300126552581787
    4. 'def' → logprob: -7.800126552581787
    5. '
' → logprob: -8.550127029418945
    6. ' 
' → logprob: -9.050127029418945
    7. ':' → logprob: -10.300127029418945
    8. '	def' → logprob: -11.425127029418945
    9. 'class' → logprob: -11.675127029418945
    10. '   ' → logprob: -11.675127029418945

Token 228: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5036813020706177
    2. 'def' (adapté à ' def') → logprob: -1.1286813020706177
    3. '   ' → logprob: -2.628681182861328
    4. 'class' → logprob: -11.253681182861328
    5. ' MAX' → logprob: -11.878681182861328
    6. ' ' → logprob: -12.128681182861328
    7. ' GR' → logprob: -12.253681182861328
    8. 'DEFAULT' → logprob: -12.503681182861328
    9. 'MAX' → logprob: -12.503681182861328
    10. 'GR' → logprob: -12.878681182861328

Token 229: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0012597566237673163
    2. ' _' → logprob: -7.876259803771973
    3. ' init' → logprob: -8.251259803771973
    4. ' def' → logprob: -8.251259803771973
    5. '__' → logprob: -8.501259803771973
    6. ' velocity' → logprob: -9.501259803771973
    7. ' calculate' → logprob: -10.751259803771973
    8. ' ' → logprob: -10.751259803771973
    9. 'init' → logprob: -11.126259803771973
    10. '_init' → logprob: -11.376259803771973

Token 230: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.1008713702030946e-06
    2. ' init' → logprob: -13.125001907348633
    3. ' ' → logprob: -18.125001907348633
    4. '   ' → logprob: -18.625001907348633
    5. '	init' → logprob: -18.625001907348633
    6. 'inite' → logprob: -19.500001907348633
    7. '```' → logprob: -19.500001907348633
    8. '(init' → logprob: -19.750001907348633
    9. 'int' → logprob: -19.875001907348633
    10. '_init' → logprob: -19.875001907348633

Token 231: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -8.196732960641384e-05
    2. '(self' → logprob: -10.250082015991211
    3. '__' → logprob: -10.375082015991211
    4. '__(
' → logprob: -11.125082015991211
    5. '_(' → logprob: -15.875082015991211
    6. '__('' → logprob: -15.875082015991211
    7. '(' → logprob: -16.00008201599121
    8. '__((' → logprob: -16.00008201599121
    9. '__("' → logprob: -17.25008201599121
    10. '__(*' → logprob: -18.00008201599121

Token 232: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006939613725990057
    2. ' self' → logprob: -5.00693941116333
    3. '
' → logprob: -9.131939888000488
    4. ')' → logprob: -9.256939888000488
    5. '(self' → logprob: -11.756939888000488
    6. ',' → logprob: -12.256939888000488
    7. '   ' → logprob: -12.506939888000488
    8. ' ' → logprob: -13.006939888000488
    9. '):
' → logprob: -14.381939888000488
    10. ')(' → logprob: -15.506939888000488

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008257066365331411
    2. 'self' → logprob: -7.375825881958008
    3. ' ,' → logprob: -9.875825881958008
    4. ')' → logprob: -10.125825881958008
    5. '):' → logprob: -10.250825881958008
    6. '(self' → logprob: -10.750825881958008
    7. ',
' → logprob: -11.250825881958008
    8. ' self' → logprob: -11.375825881958008
    9. ' (' → logprob: -11.750825881958008
    10. '<|end|>' → logprob: -12.375825881958008

Token 234: ' physics' (ID: 35438)
  Prédit: 'model'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'model' → logprob: -1.2300001382827759
    2. 'physics' → logprob: -1.3550001382827759
    3. ' physics' → logprob: -1.8550001382827759
    4. 'floor' → logprob: -2.4800000190734863
    5. ' model' → logprob: -2.6050000190734863
    6. ' crack' → logprob: -3.1050000190734863
    7. ' floor' → logprob: -3.8550000190734863
    8. 'self' → logprob: -4.480000019073486
    9. 'velocity' → logprob: -5.105000019073486
    10. 'height' → logprob: -5.230000019073486

Token 235: '_model' (ID: 10928)
  Prédit: '_model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_model' → logprob: -0.0092268455773592
    2. 'Model' → logprob: -4.7592267990112305
    3. ':' → logprob: -7.8842267990112305
    4. 'model' → logprob: -9.25922679901123
    5. ')' → logprob: -10.50922679901123
    6. '_' → logprob: -10.88422679901123
    7. '_models' → logprob: -10.88422679901123
    8. '_Model' → logprob: -11.13422679901123
    9. ' Model' → logprob: -11.13422679901123
    10. ' _' → logprob: -11.38422679901123

Token 236: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001106755924411118
    2. ',' → logprob: -7.5011067390441895
    3. '):' → logprob: -7.6261067390441895
    4. ' :' → logprob: -9.751107215881348
    5. ')' → logprob: -12.126107215881348
    6. ' ):' → logprob: -13.751107215881348
    7. '=' → logprob: -14.626107215881348
    8. '}:' → logprob: -15.626107215881348
    9. '_:' → logprob: -16.00110626220703
    10. ' ,' → logprob: -16.25110626220703

Token 237: ' Physics' (ID: 48711)
  Prédit: ' Physics'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Physics' → logprob: -0.001020067255012691
    2. 'Physics' → logprob: -7.0010199546813965
    3. ' physics' → logprob: -9.251020431518555
    4. ' Free' → logprob: -11.376020431518555
    5. ' Physical' → logprob: -14.251020431518555
    6. ' Phys' → logprob: -14.876020431518555
    7. ')' → logprob: -16.501020431518555
    8. 'Free' → logprob: -16.626020431518555
    9. ' Optional' → logprob: -17.376020431518555
    10. ' )' → logprob: -18.751020431518555

Token 238: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -0.0005722135538235307
    2. '_model' → logprob: -7.500572204589844
    3. '_Model' → logprob: -11.000572204589844
    4. ')' → logprob: -13.500572204589844
    5. '	Model' → logprob: -14.125572204589844
    6. '_MODEL' → logprob: -16.000572204589844
    7. ' Model' → logprob: -16.000572204589844
    8. 'model' → logprob: -16.500572204589844
    9. '_' → logprob: -16.625572204589844
    10. '   ' → logprob: -17.125572204589844

Token 239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06819696724414825
    2. '):' → logprob: -3.068197011947632
    3. ')' → logprob: -3.943197011947632
    4. ' ):' → logprob: -11.318197250366211
    5. ' ,' → logprob: -12.068197250366211
    6. ' )' → logprob: -12.693197250366211
    7. '):
' → logprob: -12.693197250366211
    8. ' ' → logprob: -13.193197250366211
    9. ':' → logprob: -13.443197250366211
    10. '   ' → logprob: -13.443197250366211

Token 240: ' height' (ID: 4679)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.43305402994155884
    2. ' floor' → logprob: -1.058053970336914
    3. 'height' → logprob: -6.433053970336914
    4. ' height' → logprob: -7.183053970336914
    5. 'max' → logprob: -7.933053970336914
    6. ' max' → logprob: -8.058053970336914
    7. 'linear' → logprob: -8.183053970336914
    8. 'initial' → logprob: -8.933053970336914
    9. ' crack' → logprob: -9.183053970336914
    10. ' linear' → logprob: -9.183053970336914

Token 241: '_model' (ID: 10928)
  Prédit: '_model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_model' → logprob: -0.0010423363419249654
    2. '_of' → logprob: -7.126042366027832
    3. 's' → logprob: -8.751042366027832
    4. 'model' → logprob: -10.501042366027832
    5. 'Model' → logprob: -11.001042366027832
    6. ':' → logprob: -11.376042366027832
    7. 'of' → logprob: -11.751042366027832
    8. '   ' → logprob: -12.876042366027832
    9. '_models' → logprob: -12.876042366027832
    10. '_height' → logprob: -13.251042366027832

Token 242: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5451681974809617e-05
    2. ' :' → logprob: -12.000015258789062
    3. ')' → logprob: -12.250015258789062
    4. '):' → logprob: -12.500015258789062
    5. '):
' → logprob: -15.750015258789062
    6. ',' → logprob: -15.875015258789062
    7. ':model' → logprob: -16.000015258789062
    8. '_:' → logprob: -16.250015258789062
    9. '_floor' → logprob: -16.500015258789062
    10. '=' → logprob: -16.875015258789062

Token 243: ' Floor' (ID: 25610)
  Prédit: 'Floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Floor' → logprob: -0.22549158334732056
    2. ' Floor' → logprob: -1.6004915237426758
    3. 'Optional' → logprob: -10.350491523742676
    4. ' Optional' → logprob: -11.100491523742676
    5. 'Flo' → logprob: -11.725491523742676
    6. 'Linear' → logprob: -11.850491523742676
    7. ')' → logprob: -12.225491523742676
    8. ' ' → logprob: -12.725491523742676
    9. ' floor' → logprob: -12.850491523742676
    10. 'Height' → logprob: -13.225491523742676

Token 244: 'Height' (ID: 5817)
  Prédit: 'Height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Height' → logprob: -8.061054359131958e-06
    2. '   ' → logprob: -13.000007629394531
    3. ')' → logprob: -13.250007629394531
    4. ':' → logprob: -13.375007629394531
    5. 'height' → logprob: -14.375007629394531
    6. 'He' → logprob: -15.000007629394531
    7. '       ' → logprob: -15.625007629394531
    8. '):' → logprob: -15.750007629394531
    9. '_height' → logprob: -15.750007629394531
    10. ' Height' → logprob: -15.750007629394531

Token 245: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -2.069664333248511e-05
    2. ')' → logprob: -11.625020980834961
    3. '   ' → logprob: -12.625020980834961
    4. 'Height' → logprob: -12.750020980834961
    5. ',' → logprob: -13.375020980834961
    6. 'model' → logprob: -13.625020980834961
    7. '_model' → logprob: -14.250020980834961
    8. ':' → logprob: -15.000020980834961
    9. '	Model' → logprob: -15.125020980834961
    10. '):
' → logprob: -15.625020980834961

Token 246: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07314124703407288
    2. ')' → logprob: -2.69814133644104
    3. '):
' → logprob: -6.073141098022461
    4. ',' → logprob: -7.073141098022461
    5. ' ):' → logprob: -10.948141098022461
    6. '   ' → logprob: -11.323141098022461
    7. ':' → logprob: -11.573141098022461
    8. '):
' → logprob: -12.448141098022461
    9. ' )' → logprob: -12.698141098022461
    10. ')->' → logprob: -14.823141098022461

Token 247: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004875315818935633
    2. ':
' → logprob: -5.629875183105469
    3. '):' → logprob: -7.004875183105469
    4. '):
' → logprob: -8.879875183105469
    5. ',' → logprob: -9.129875183105469
    6. ')' → logprob: -10.379875183105469
    7. '():' → logprob: -10.504875183105469
    8. '   ' → logprob: -10.629875183105469
    9. '       ' → logprob: -11.004875183105469
    10. '():
' → logprob: -12.254875183105469

Token 248: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.0788901224732399
    2. 'None' → logprob: -2.578890085220337
    3. ' ' → logprob: -15.328889846801758
    4. '_None' → logprob: -16.953889846801758
    5. '=None' → logprob: -17.453889846801758
    6. ' none' → logprob: -18.078889846801758
    7. ' object' → logprob: -19.203889846801758
    8. ' Optional' → logprob: -19.203889846801758
    9. '_none' → logprob: -19.328889846801758
    10. ')' → logprob: -19.328889846801758

Token 249: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019197179935872555
    2. ':
' → logprob: -6.376919746398926
    3. '       ' → logprob: -9.251919746398926
    4. '):' → logprob: -9.626919746398926
    5. '():' → logprob: -10.501919746398926
    6. '   ' → logprob: -11.001919746398926
    7. '(self' → logprob: -12.876919746398926
    8. '):
' → logprob: -13.001919746398926
    9. ',' → logprob: -13.501919746398926
    10. ')' → logprob: -13.751919746398926

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010890735575230792
    2. 'self' → logprob: -9.37510871887207
    3. ' self' → logprob: -11.00010871887207
    4. '   ' → logprob: -12.12510871887207
    5. '```' → logprob: -13.75010871887207
    6. '        
' → logprob: -15.25010871887207
    7. '      ' → logprob: -15.75010871887207
    8. '     ' → logprob: -16.50010871887207
    9. '	self' → logprob: -16.75010871887207
    10. '           ' → logprob: -17.00010871887207

Token 251: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.14426684379577637
    2. '       ' → logprob: -2.3942668437957764
    3. ' self' → logprob: -3.1442668437957764
    4. '   ' → logprob: -12.519267082214355
    5. '	self' → logprob: -13.644267082214355
    6. ' ' → logprob: -15.894267082214355
    7. '(self' → logprob: -17.26926612854004
    8. '      ' → logprob: -17.26926612854004
    9. '     ' → logprob: -17.51926612854004
    10. '```' → logprob: -17.51926612854004

Token 252: '.physics' (ID: 121488)
  Prédit: '.physics'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.physics' → logprob: -0.47441160678863525
    2. '.' → logprob: -0.9744116067886353
    3. ' .' → logprob: -8.724411964416504
    4. '.ph' → logprob: -9.474411964416504
    5. 'physics' → logprob: -10.224411964416504
    6. ' physics' → logprob: -10.349411964416504
    7. '.geometry' → logprob: -11.474411964416504
    8. '.python' → logprob: -12.474411964416504
    9. '.py' → logprob: -12.599411964416504
    10. 'Physics' → logprob: -13.099411964416504

Token 253: '_model' (ID: 10928)
  Prédit: '_model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_model' → logprob: -2.696889623621246e-06
    2. '_' → logprob: -13.62500286102295
    3. '_models' → logprob: -14.00000286102295
    4. ' _' → logprob: -15.37500286102295
    5. 'model' → logprob: -16.125001907348633
    6. '_mode' → logprob: -16.250001907348633
    7. '_Model' → logprob: -16.500001907348633
    8. '_MODEL' → logprob: -16.875001907348633
    9. 'Model' → logprob: -17.750001907348633
    10. '_method' → logprob: -18.375001907348633

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02636265568435192
    2. '=' → logprob: -3.651362657546997
    3. ' ' → logprob: -9.776362419128418
    4. ':' → logprob: -13.526362419128418
    5. ',' → logprob: -13.651362419128418
    6. '    ' → logprob: -13.901362419128418
    7. '   ' → logprob: -13.901362419128418
    8. '.' → logprob: -14.651362419128418
    9. '  ' → logprob: -15.901362419128418
    10. '_' → logprob: -16.026363372802734

Token 255: ' physics' (ID: 35438)
  Prédit: ' physics'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' physics' → logprob: -0.02975141443312168
    2. 'physics' → logprob: -3.5297513008117676
    3. '.physics' → logprob: -14.404751777648926
    4. ' physic' → logprob: -15.404751777648926
    5. 'Physics' → logprob: -15.654751777648926
    6. ' Physics' → logprob: -16.90475082397461
    7. ' ' → logprob: -18.27975082397461
    8. 'phys' → logprob: -18.52975082397461
    9. ' physical' → logprob: -19.15475082397461
    10. 'python' → logprob: -19.15475082397461

Token 256: '_model' (ID: 10928)
  Prédit: '_model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_model' → logprob: -4.36574100604048e-06
    2. 'model' → logprob: -12.750004768371582
    3. '._' → logprob: -14.000004768371582
    4. '_' → logprob: -15.625004768371582
    5. 'Model' → logprob: -16.000003814697266
    6. '_MODEL' → logprob: -16.250003814697266
    7. ' _' → logprob: -16.500003814697266
    8. '_mode' → logprob: -17.000003814697266
    9. '_Model' → logprob: -17.375003814697266
    10. '_models' → logprob: -17.875003814697266

Token 257: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023441045777872205
    2. 'self' → logprob: -8.875234603881836
    3. ' self' → logprob: -9.500234603881836
    4. '
' → logprob: -11.000234603881836
    5. ',' → logprob: -13.375234603881836
    6. '   ' → logprob: -14.375234603881836
    7. '<|end|>' → logprob: -14.750234603881836
    8. '	self' → logprob: -16.125234603881836
    9. '	' → logprob: -16.375234603881836
    10. ',self' → logprob: -16.500234603881836

Token 258: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001882823125924915
    2. 'self' → logprob: -8.750187873840332
    3. ' self' → logprob: -10.625187873840332
    4. '<|end|>' → logprob: -13.625187873840332
    5. '
' → logprob: -13.750187873840332
    6. '   ' → logprob: -13.750187873840332
    7. '	' → logprob: -14.000187873840332
    8. '	self' → logprob: -14.875187873840332
    9. '      ' → logprob: -15.125187873840332
    10. ',' → logprob: -15.250187873840332

Token 259: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.014538837596774101
    2. ' self' → logprob: -4.264538764953613
    3. '       ' → logprob: -8.014538764953613
    4. 'height' → logprob: -10.139538764953613
    5. '   ' → logprob: -12.639538764953613
    6. ' height' → logprob: -13.764538764953613
    7. '	self' → logprob: -14.639538764953613
    8. '
' → logprob: -15.764538764953613
    9. ' ' → logprob: -16.26453971862793
    10. '        ' → logprob: -17.26453971862793

Token 260: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -1.9981420336989686e-05
    2. '.' → logprob: -11.000020027160645
    3. 'height' → logprob: -13.500020027160645
    4. '.floor' → logprob: -13.875020027160645
    5. ' .' → logprob: -14.250020027160645
    6. '.width' → logprob: -15.875020027160645
    7. '.he' → logprob: -17.250019073486328
    8. '.Height' → logprob: -17.375019073486328
    9. ' height' → logprob: -17.625019073486328
    10. '.health' → logprob: -17.750019073486328

Token 261: '_model' (ID: 10928)
  Prédit: '_model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_model' → logprob: -3.173704271830502e-06
    2. '_' → logprob: -13.00000286102295
    3. '_mode' → logprob: -15.00000286102295
    4. ' _' → logprob: -15.25000286102295
    5. '_models' → logprob: -15.87500286102295
    6. 'model' → logprob: -16.875003814697266
    7. 'Model' → logprob: -17.000003814697266
    8. '_MODEL' → logprob: -17.875003814697266
    9. '_Model' → logprob: -18.125003814697266
    10. '=_' → logprob: -18.250003814697266

Token 262: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34845227003097534
    2. '=' → logprob: -1.2234523296356201
    3. ' ' → logprob: -13.0984525680542
    4. '<|end|>' → logprob: -13.3484525680542
    5. '_' → logprob: -13.9734525680542
    6. '.' → logprob: -14.2234525680542
    7. '_height' → logprob: -14.7234525680542
    8. '=model' → logprob: -14.9734525680542
    9. ',' → logprob: -15.0984525680542
    10. 'height' → logprob: -15.0984525680542

Token 263: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.20141421258449554
    2. ' height' → logprob: -1.7014142274856567
    3. '(height' → logprob: -14.576414108276367
    4. '_height' → logprob: -15.451414108276367
    5. '	height' → logprob: -15.951414108276367
    6. '.height' → logprob: -16.701414108276367
    7. 'floor' → logprob: -17.201414108276367
    8. '   ' → logprob: -18.451414108276367
    9. ',height' → logprob: -18.451414108276367
    10. ';height' → logprob: -18.451414108276367

Token 264: '_model' (ID: 10928)
  Prédit: '_model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_model' → logprob: -0.0011729635298252106
    2. 'model' → logprob: -6.75117301940918
    3. 'Model' → logprob: -13.25117301940918
    4. '_height' → logprob: -14.75117301940918
    5. 'height' → logprob: -14.87617301940918
    6. ' model' → logprob: -16.00117301940918
    7. '_MODEL' → logprob: -17.50117301940918
    8. '_' → logprob: -17.75117301940918
    9. '	model' → logprob: -18.12617301940918
    10. '   ' → logprob: -18.25117301940918

Token 265: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01319282129406929
    2. '   ' → logprob: -5.513192653656006
    3. '<|end|>' → logprob: -5.513192653656006
    4. '    
' → logprob: -5.638192653656006
    5. 'def' → logprob: -7.013192653656006
    6. '  
' → logprob: -8.513193130493164
    7. '<|end|>' → logprob: -9.263193130493164
    8. '

' → logprob: -9.513193130493164
    9. '```' → logprob: -9.638193130493164
    10. ' def' → logprob: -10.138193130493164

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04067349061369896
    2. 'def' → logprob: -3.9156734943389893
    3. '
' → logprob: -4.54067325592041
    4. ' def' → logprob: -4.79067325592041
    5. '    
' → logprob: -7.16567325592041
    6. ' ' → logprob: -10.04067325592041
    7. '```' → logprob: -10.04067325592041
    8. '  ' → logprob: -10.41567325592041
    9. '        
' → logprob: -10.91567325592041
    10. '   
' → logprob: -11.04067325592041

Token 267: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.961759259458631e-06
    2. ' def' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.0000057220459
    4. 'class' → logprob: -17.8750057220459
    5. 'from' → logprob: -18.0000057220459
    6. 'de' → logprob: -18.7500057220459
    7. '```' → logprob: -20.2500057220459
    8. 'import' → logprob: -20.3750057220459
    9. '@' → logprob: -20.6250057220459
    10. '
' → logprob: -20.8750057220459

Token 268: ' minimal' (ID: 19957)
  Prédit: ' crack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' crack' → logprob: -0.7865131497383118
    2. 'det' → logprob: -2.036513090133667
    3. 'cr' → logprob: -2.286513090133667
    4. ' determine' → logprob: -2.286513090133667
    5. ' find' → logprob: -2.911513090133667
    6. ' velocity' → logprob: -3.286513090133667
    7. 'def' → logprob: -3.536513090133667
    8. ' get' → logprob: -4.161513328552246
    9. 'find' → logprob: -4.411513328552246
    10. 'velocity' → logprob: -4.411513328552246

Token 269: '_floor' (ID: 152330)
  Prédit: '_velocity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_velocity' → logprob: -0.4589822292327881
    2. '_cr' → logprob: -1.083982229232788
    3. '_time' → logprob: -4.333982467651367
    4. '_floor' → logprob: -4.958982467651367
    5. '_drop' → logprob: -5.583982467651367
    6. '_safe' → logprob: -6.208982467651367
    7. '_' → logprob: -7.333982467651367
    8. '_break' → logprob: -7.833982467651367
    9. '_speed' → logprob: -8.083982467651367
    10. '_vel' → logprob: -8.083982467651367

Token 270: '_to' (ID: 5089)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.056250590831041336
    2. '_for' → logprob: -3.80625057220459
    3. '_to' → logprob: -4.05625057220459
    4. '(' → logprob: -4.93125057220459
    5. 's' → logprob: -6.55625057220459
    6. '_that' → logprob: -6.68125057220459
    7. '_with' → logprob: -6.80625057220459
    8. '_cr' → logprob: -7.05625057220459
    9. '_at' → logprob: -7.43125057220459
    10. '_drop' → logprob: -7.55625057220459

Token 271: '_cr' (ID: 41408)
  Prédit: '_break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_break' → logprob: -0.6426650285720825
    2. '_cr' → logprob: -0.8926650285720825
    3. 'cr' → logprob: -4.267664909362793
    4. '_stop' → logprob: -4.642664909362793
    5. '_' → logprob: -4.642664909362793
    6. '_drop' → logprob: -4.892664909362793
    7. 'break' → logprob: -5.267664909362793
    8. '_c' → logprob: -6.767664909362793
    9. '_jump' → logprob: -6.767664909362793
    10. 'r' → logprob: -7.017664909362793

Token 272: 'ack' (ID: 552)
  Prédit: 'ack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ack' → logprob: -0.05191889405250549
    2. 'e' → logprob: -3.0519189834594727
    3. 'ash' → logprob: -6.551918983459473
    4. 'a' → logprob: -7.051918983459473
    5. 'ach' → logprob: -7.926918983459473
    6. 'ac' → logprob: -9.551918983459473
    7. 'ackle' → logprob: -9.676918983459473
    8. 'acks' → logprob: -9.739418983459473
    9. 'each' → logprob: -9.989418983459473
    10. '```' → logprob: -10.051918983459473

Token 273: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015112892724573612
    2. '(' → logprob: -6.501511096954346
    3. 'self' → logprob: -12.376511573791504
    4. '(
' → logprob: -13.251511573791504
    5. ' (' → logprob: -13.751511573791504
    6. '_at' → logprob: -14.376511573791504
    7. '(s' → logprob: -14.876511573791504
    8. '_after' → logprob: -15.501511573791504
    9. 's' → logprob: -16.251510620117188
    10. '_velocity' → logprob: -16.251510620117188

Token 274: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006047414499334991
    2. '(' → logprob: -8.125604629516602
    3. ' (' → logprob: -9.250604629516602
    4. ',' → logprob: -9.250604629516602
    5. ')' → logprob: -9.500604629516602
    6. 'self' → logprob: -10.750604629516602
    7. ')(' → logprob: -11.500604629516602
    8. '(
' → logprob: -12.250604629516602
    9. '   ' → logprob: -13.250604629516602
    10. ' self' → logprob: -13.625604629516602

Token 275: ' crack' (ID: 29931)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0672701597213745
    2. 'cr' → logprob: -2.067270278930664
    3. ' crack' → logprob: -2.067270278930664
    4. 'drop' → logprob: -2.817270278930664
    5. 'height' → logprob: -2.942270278930664
    6. 'initial' → logprob: -2.942270278930664
    7. ' self' → logprob: -3.192270278930664
    8. 'velocity' → logprob: -3.192270278930664
    9. 'max' → logprob: -3.692270278930664
    10. ' drop' → logprob: -3.942270278930664

Token 276: '_velocity' (ID: 96187)
  Prédit: '_velocity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_velocity' → logprob: -0.09175235033035278
    2. ':' → logprob: -2.591752290725708
    3. '_height' → logprob: -5.591752529144287
    4. '_speed' → logprob: -5.591752529144287
    5. 'ed' → logprob: -6.091752529144287
    6. '_time' → logprob: -6.716752529144287
    7. '_vel' → logprob: -7.716752529144287
    8. 'velocity' → logprob: -8.341752052307129
    9. '_distance' → logprob: -8.466752052307129
    10. 'ing' → logprob: -8.716752052307129

Token 277: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006424036342650652
    2. '(self' → logprob: -5.7564239501953125
    3. 'self' → logprob: -6.0064239501953125
    4. ',' → logprob: -7.8814239501953125
    5. ')' → logprob: -9.006423950195312
    6. ' :' → logprob: -9.756423950195312
    7. '   ' → logprob: -9.756423950195312
    8. ':self' → logprob: -9.756423950195312
    9. ' self' → logprob: -10.131423950195312
    10. '       ' → logprob: -10.756423950195312

Token 278: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.31329846382141113
    2. ' float' → logprob: -1.3132984638214111
    3. ')' → logprob: -11.313298225402832
    4. 'int' → logprob: -11.938298225402832
    5. '=float' → logprob: -12.188298225402832
    6. ',float' → logprob: -12.313298225402832
    7. '	float' → logprob: -12.938298225402832
    8. 'flo' → logprob: -13.563298225402832
    9. '(float' → logprob: -13.813298225402832
    10. ':' → logprob: -14.313298225402832

Token 279: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.089267797768116
    2. ')' → logprob: -2.4642677307128906
    3. ' )' → logprob: -8.58926773071289
    4. ' ,' → logprob: -8.96426773071289
    5. '   ' → logprob: -11.71426773071289
    6. ',
' → logprob: -12.96426773071289
    7. ',)' → logprob: -13.83926773071289
    8. '       ' → logprob: -14.46426773071289
    9. ' ' → logprob: -14.58926773071289
    10. '  ' → logprob: -14.71426773071289

Token 280: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.04515742510557175
    2. '->' → logprob: -3.1701574325561523
    3. ')' → logprob: -6.545157432556152
    4. ':' → logprob: -7.420157432556152
    5. '   ' → logprob: -9.795157432556152
    6. ' ' → logprob: -9.920157432556152
    7. ',' → logprob: -11.920157432556152
    8. ')->' → logprob: -12.420157432556152
    9. '  ' → logprob: -13.295157432556152
    10. '       ' → logprob: -14.170157432556152

Token 281: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.33572646975517273
    2. ' Optional' → logprob: -1.7107264995574951
    3. 'int' → logprob: -2.460726499557495
    4. ' int' → logprob: -3.960726499557495
    5. 'float' → logprob: -11.335726737976074
    6. ' float' → logprob: -12.585726737976074
    7. '	Optional' → logprob: -13.085726737976074
    8. 'optional' → logprob: -13.460726737976074
    9. '(Optional' → logprob: -13.585726737976074
    10. 'Iterator' → logprob: -13.960726737976074

Token 282: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -6.2729995988775045e-06
    2. 'int' → logprob: -12.625006675720215
    3. '[' → logprob: -13.125006675720215
    4. '[
' → logprob: -14.500006675720215
    5. '<int' → logprob: -16.0000057220459
    6. ' [' → logprob: -16.1250057220459
    7. '[in' → logprob: -16.6250057220459
    8. '   ' → logprob: -17.3750057220459
    9. ' int' → logprob: -18.3750057220459
    10. '[Int' → logprob: -18.3750057220459

Token 283: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1619175225496292
    2. ':' → logprob: -2.0369174480438232
    3. ')' → logprob: -4.036917686462402
    4. '):
' → logprob: -7.161917686462402
    5. '   ' → logprob: -8.161917686462402
    6. ']:' → logprob: -8.411917686462402
    7. '       ' → logprob: -10.411917686462402
    8. ':
' → logprob: -10.411917686462402
    9. '):
' → logprob: -11.161917686462402
    10. '>:' → logprob: -11.661917686462402

Token 284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0047787572257220745
    2. ' for' → logprob: -5.504778861999512
    3. 'for' → logprob: -7.379778861999512
    4. '```' → logprob: -10.629778861999512
    5. 'floor' → logprob: -11.254778861999512
    6. '   ' → logprob: -11.254778861999512
    7. ' floor' → logprob: -11.754778861999512
    8. 'n' → logprob: -11.754778861999512
    9. 'def' → logprob: -13.254778861999512
    10. ' max' → logprob: -14.004778861999512

Token 285: ' """
' (ID: 7037)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.11313629150390625
    2. 'for' → logprob: -2.6131362915039062
    3. '       ' → logprob: -3.6131362915039062
    4. 'low' → logprob: -5.988136291503906
    5. 'current' → logprob: -6.363136291503906
    6. 'max' → logprob: -6.863136291503906
    7. 'lower' → logprob: -7.863136291503906
    8. '   ' → logprob: -8.238136291503906
    9. 'min' → logprob: -8.613136291503906
    10. 'left' → logprob: -8.988136291503906

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027657469734549522
    2. 'for' → logprob: -4.652657508850098
    3. ' for' → logprob: -5.402657508850098
    4. 'max' → logprob: -5.652657508850098
    5. 'floor' → logprob: -5.777657508850098
    6. 'min' → logprob: -6.152657508850098
    7. ' max' → logprob: -6.777657508850098
    8. 'n' → logprob: -7.152657508850098
    9. ' min' → logprob: -7.277657508850098
    10. 'lowest' → logprob: -7.777657508850098

Token 287: ' Determine' (ID: 57076)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.471364974975586
    2. '       ' → logprob: -1.721364974975586
    3. 'max' → logprob: -1.846364974975586
    4. '#' → logprob: -1.846364974975586
    5. 'min' → logprob: -1.971364974975586
    6. 'def' → logprob: -3.221364974975586
    7. 'low' → logprob: -3.846364974975586
    8. 'left' → logprob: -3.971364974975586
    9. 'lowest' → logprob: -4.096364974975586
    10. 'floor' → logprob: -4.346364974975586

Token 288: ' minimal' (ID: 19957)
  Prédit: ' floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' floor' → logprob: -0.9875039458274841
    2. ' the' → logprob: -1.362504005432129
    3. ' minimal' → logprob: -1.862504005432129
    4. ' for' → logprob: -2.362504005432129
    5. 'floor' → logprob: -2.612504005432129
    6. ' min' → logprob: -4.237504005432129
    7. 'for' → logprob: -4.987504005432129
    8. '       ' → logprob: -5.112504005432129
    9. '   ' → logprob: -5.362504005432129
    10. ' current' → logprob: -5.737504005432129

Token 289: ' floor' (ID: 8350)
  Prédit: ' floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' floor' → logprob: -0.14300532639026642
    2. 'floor' → logprob: -2.01800537109375
    3. '_floor' → logprob: -8.89300537109375
    4. '   ' → logprob: -9.64300537109375
    5. '```' → logprob: -9.64300537109375
    6. ' the' → logprob: -10.89300537109375
    7. '       ' → logprob: -11.39300537109375
    8. ' possible' → logprob: -12.14300537109375
    9. '`' → logprob: -13.01800537109375
    10. ' ' → logprob: -13.14300537109375

Token 290: ' number' (ID: 2086)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7069807648658752
    2. ' to' → logprob: -1.3319807052612305
    3. ' that' → logprob: -2.5819807052612305
    4. ' for' → logprob: -2.8319807052612305
    5. ' number' → logprob: -3.4569807052612305
    6. 'number' → logprob: -4.4569807052612305
    7. ' where' → logprob: -4.5819807052612305
    8. '_number' → logprob: -4.7069807052612305
    9. 'to' → logprob: -5.2069807052612305
    10. '   ' → logprob: -5.2069807052612305

Token 291: ' where' (ID: 1919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3507540225982666
    2. ' that' → logprob: -1.3507540225982666
    3. ' to' → logprob: -3.8507540225982666
    4. ' for' → logprob: -4.3507537841796875
    5. ' with' → logprob: -6.6007537841796875
    6. ' where' → logprob: -7.6007537841796875
    7. ' starting' → logprob: -8.850753784179688
    8. 'that' → logprob: -9.350753784179688
    9. '   ' → logprob: -9.600753784179688
    10. ',' → logprob: -9.600753784179688

Token 292: ' the' (ID: 290)
  Prédit: ' velocity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' velocity' → logprob: -0.9841172695159912
    2. ' the' → logprob: -1.2341172695159912
    3. 'velocity' → logprob: -1.3591172695159912
    4. 'the' → logprob: -2.609117269515991
    5. ' a' → logprob: -6.60911750793457
    6. 'a' → logprob: -7.48411750793457
    7. 'cr' → logprob: -7.60911750793457
    8. '       ' → logprob: -7.73411750793457
    9. ' an' → logprob: -7.85911750793457
    10. '   ' → logprob: -8.10911750793457

Token 293: ' ball' (ID: 7880)
  Prédit: 'velocity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'velocity' → logprob: -0.7185415625572205
    2. ' velocity' → logprob: -1.0935416221618652
    3. ' drop' → logprob: -2.8435416221618652
    4. ' object' → logprob: -3.3435416221618652
    5. ' ball' → logprob: -3.4685416221618652
    6. 'drop' → logprob: -4.218541622161865
    7. 'ball' → logprob: -4.843541622161865
    8. 'object' → logprob: -4.843541622161865
    9. '   ' → logprob: -5.093541622161865
    10. 'cr' → logprob: -5.468541622161865

Token 294: ' cracks' (ID: 65753)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.058556079864502
    2. ' cracks' → logprob: -1.558556079864502
    3. ' velocity' → logprob: -2.183556079864502
    4. ' can' → logprob: -2.683556079864502
    5. 'velocity' → logprob: -2.808556079864502
    6. ''s' → logprob: -2.933556079864502
    7. ' will' → logprob: -3.183556079864502
    8. ' breaks' → logprob: -3.558556079864502
    9. 'cr' → logprob: -3.683556079864502
    10. ' would' → logprob: -4.058556079864502

Token 295: '.

' (ID: 364)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2035610675811768
    2. ' given' → logprob: -1.4535610675811768
    3. ' the' → logprob: -1.7035610675811768
    4. '       ' → logprob: -2.2035610675811768
    5. ' while' → logprob: -2.8285610675811768
    6. ' with' → logprob: -3.3285610675811768
    7. ' after' → logprob: -4.078560829162598
    8. ' when' → logprob: -4.203560829162598
    9. 'while' → logprob: -4.953560829162598
    10. ' for' → logprob: -4.953560829162598

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17579923570156097
    2. ' for' → logprob: -1.9257992506027222
    3. 'for' → logprob: -4.300799369812012
    4. ' max' → logprob: -7.050799369812012
    5. 'max' → logprob: -7.800799369812012
    6. '   ' → logprob: -9.050799369812012
    7. 'floor' → logprob: -9.175799369812012
    8. ' floor' → logprob: -9.300799369812012
    9. 'n' → logprob: -9.550799369812012
    10. '```' → logprob: -9.550799369812012

Token 297: ' Given' (ID: 29844)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8884114027023315
    2. 'for' → logprob: -0.8884114027023315
    3. 'max' → logprob: -2.263411521911621
    4. ' for' → logprob: -2.888411521911621
    5. 'floor' → logprob: -5.013411521911621
    6. ' max' → logprob: -6.013411521911621
    7. 'n' → logprob: -6.388411521911621
    8. 'min' → logprob: -6.388411521911621
    9. 'def' → logprob: -6.513411521911621
    10. '   ' → logprob: -7.263411521911621

Token 298: ' minimum' (ID: 11085)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6605342626571655
    2. ' a' → logprob: -1.2855342626571655
    3. 'cr' → logprob: -2.535534381866455
    4. ' crack' → logprob: -2.535534381866455
    5. 'a' → logprob: -4.160534381866455
    6. ' that' → logprob: -4.535534381866455
    7. ' velocity' → logprob: -5.160534381866455
    8. 'the' → logprob: -5.160534381866455
    9. ' an' → logprob: -6.160534381866455
    10. '       ' → logprob: -6.660534381866455

Token 299: ' velocity' (ID: 30061)
  Prédit: ' velocity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' velocity' → logprob: -0.34129494428634644
    2. 'velocity' → logprob: -1.7162950038909912
    3. '_velocity' → logprob: -2.341295003890991
    4. ' crack' → logprob: -5.716294765472412
    5. 'cr' → logprob: -6.591294765472412
    6. ' the' → logprob: -6.591294765472412
    7. '   ' → logprob: -6.841294765472412
    8. '_cr' → logprob: -6.841294765472412
    9. ' cracking' → logprob: -7.216294765472412
    10. ' floor' → logprob: -7.216294765472412

Token 300: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7920752167701721
    2. ' that' → logprob: -1.2920751571655273
    3. ' ' → logprob: -1.7920751571655273
    4. ' required' → logprob: -2.9170751571655273
    5. ' at' → logprob: -4.417075157165527
    6. ',' → logprob: -4.417075157165527
    7. ' for' → logprob: -5.042075157165527
    8. ' threshold' → logprob: -5.042075157165527
    9. ' the' → logprob: -6.167075157165527
    10. 'to' → logprob: -6.292075157165527

Token 301: ' crack' (ID: 29931)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.35317814350128174
    2. ' crack' → logprob: -1.2281781435012817
    3. 'cause' → logprob: -6.103178024291992
    4. ' cause' → logprob: -6.228178024291992
    5. 'break' → logprob: -8.103178024291992
    6. ' break' → logprob: -9.228178024291992
    7. ' ' → logprob: -11.103178024291992
    8. '_cr' → logprob: -11.228178024291992
    9. 'make' → logprob: -11.353178024291992
    10. ' cr' → logprob: -11.478178024291992

Token 302: ',' (ID: 11)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8159772157669067
    2. ' at' → logprob: -1.1909772157669067
    3. ',' → logprob: -1.5659772157669067
    4. 'the' → logprob: -4.565977096557617
    5. ' for' → logprob: -4.815977096557617
    6. '       ' → logprob: -4.940977096557617
    7. ' a' → logprob: -5.190977096557617
    8. ' to' → logprob: -6.190977096557617
    9. ' (' → logprob: -6.190977096557617
    10. 'at' → logprob: -6.440977096557617

Token 303: ' find' (ID: 1646)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3566826581954956
    2. '       ' → logprob: -1.6066826581954956
    3. 'for' → logprob: -3.231682777404785
    4. ' max' → logprob: -3.731682777404785
    5. 'max' → logprob: -4.356682777404785
    6. 'n' → logprob: -5.106682777404785
    7. ' n' → logprob: -5.606682777404785
    8. ' floor' → logprob: -5.606682777404785
    9. 'floor' → logprob: -5.981682777404785
    10. ' current' → logprob: -6.606682777404785

Token 304: ' smallest' (ID: 42173)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.005115988198667765
    2. ' a' → logprob: -5.755115985870361
    3. 'the' → logprob: -6.630115985870361
    4. ' floor' → logprob: -7.630115985870361
    5. ' for' → logprob: -10.63011646270752
    6. ' first' → logprob: -10.88011646270752
    7. ' an' → logprob: -10.88011646270752
    8. ' minimal' → logprob: -11.00511646270752
    9. 'floor' → logprob: -11.38011646270752
    10. ' that' → logprob: -12.25511646270752

Token 305: ' floor' (ID: 8350)
  Prédit: ' floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' floor' → logprob: -0.06338237226009369
    2. 'floor' → logprob: -2.813382387161255
    3. '_floor' → logprob: -7.688382148742676
    4. '       ' → logprob: -8.313382148742676
    5. 'f' → logprob: -9.063382148742676
    6. ' f' → logprob: -9.188382148742676
    7. 'n' → logprob: -9.688382148742676
    8. ' n' → logprob: -9.813382148742676
    9. 'int' → logprob: -9.813382148742676
    10. ' possible' → logprob: -10.063382148742676

Token 306: ' N' (ID: 478)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -1.0919904708862305
    2. ' that' → logprob: -1.4669904708862305
    3. '       ' → logprob: -1.7169904708862305
    4. 'number' → logprob: -2.3419904708862305
    5. ' where' → logprob: -2.4669904708862305
    6. ' such' → logprob: -3.5919904708862305
    7. ' for' → logprob: -3.9669904708862305
    8. ' with' → logprob: -4.4669904708862305
    9. 'that' → logprob: -5.8419904708862305
    10. ' to' → logprob: -6.4669904708862305

Token 307: ' such' (ID: 2238)
  Prédit: ' such'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' such' → logprob: -0.4028722941875458
    2. '       ' → logprob: -1.9028723239898682
    3. ' that' → logprob: -2.152872323989868
    4. ' where' → logprob: -3.277872323989868
    5. ' for' → logprob: -4.027872085571289
    6. '   ' → logprob: -6.027872085571289
    7. '
' → logprob: -6.402872085571289
    8. ' with' → logprob: -6.402872085571289
    9. ':' → logprob: -7.027872085571289
    10. ' to' → logprob: -7.277872085571289

Token 308: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.1799008846282959
    2. ' that' → logprob: -1.804900884628296
    3. '       ' → logprob: -9.554901123046875
    4. 'at' → logprob: -10.179901123046875
    5. '_that' → logprob: -10.679901123046875
    6. 'That' → logprob: -11.804901123046875
    7. '<|end|>' → logprob: -12.429901123046875
    8. ')' → logprob: -12.554901123046875
    9. '	that' → logprob: -13.304901123046875
    10. ',' → logprob: -13.679901123046875

Token 309: '
' (ID: 198)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4464380443096161
    2. 'self' → logprob: -1.5714380741119385
    3. 'velocity' → logprob: -2.8214380741119385
    4. ' velocity' → logprob: -3.0714380741119385
    5. '       ' → logprob: -3.6964380741119385
    6. ' the' → logprob: -4.071437835693359
    7. 'abs' → logprob: -6.946437835693359
    8. ' abs' → logprob: -7.196437835693359
    9. 'the' → logprob: -7.946437835693359
    10. '```' → logprob: -7.946437835693359

Token 310: '       ' (ID: 309)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.30890607833862305
    2. '       ' → logprob: -2.683906078338623
    3. ' velocity' → logprob: -2.683906078338623
    4. 'velocity' → logprob: -2.933906078338623
    5. 'the' → logprob: -3.183906078338623
    6. ' self' → logprob: -4.183906078338623
    7. ' for' → logprob: -4.683906078338623
    8. 'self' → logprob: -5.558906078338623
    9. ' drop' → logprob: -6.683906078338623
    10. 'for' → logprob: -6.683906078338623

Token 311: ' velocity' (ID: 30061)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14839664101600647
    2. 'velocity' (adapté à ' velocity') → logprob: -2.6483967304229736
    3. ' self' → logprob: -3.0233967304229736
    4. ' the' → logprob: -5.0233964920043945
    5. 'the' → logprob: -5.0233964920043945
    6. ' velocity' → logprob: -5.5233964920043945
    7. '       ' → logprob: -7.6483964920043945
    8. 'math' → logprob: -8.398396492004395
    9. '```' → logprob: -9.023396492004395
    10. 'abs' → logprob: -9.273396492004395

Token 312: ' on' (ID: 402)
  Prédit: '_after'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_after' → logprob: -0.004740314558148384
    2. ' after' → logprob: -5.754740238189697
    3. ' >=' → logprob: -7.754740238189697
    4. ' =' → logprob: -8.379740715026855
    5. '>=' → logprob: -8.754740715026855
    6. '_at' → logprob: -8.879740715026855
    7. '=' → logprob: -9.004740715026855
    8. '   ' → logprob: -9.379740715026855
    9. 'After' → logprob: -9.504740715026855
    10. 'after' → logprob: -9.879740715026855

Token 313: ' hitting' (ID: 34749)
  Prédit: ' drop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' drop' → logprob: -1.6042916774749756
    2. ' landing' → logprob: -1.8542916774749756
    3. 'drop' → logprob: -1.8542916774749756
    4. ' the' → logprob: -2.3542916774749756
    5. ' floor' → logprob: -2.4792916774749756
    6. ' self' → logprob: -2.9792916774749756
    7. ' impact' → logprob: -3.3542916774749756
    8. 'floor' → logprob: -3.6042916774749756
    9. 'landing' → logprob: -3.9792916774749756
    10. ' free' → logprob: -4.104291915893555

Token 314: ' that' (ID: 484)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.06240500509738922
    2. 'the' → logprob: -3.4374051094055176
    3. ' that' → logprob: -4.562405109405518
    4. ' floor' → logprob: -4.937405109405518
    5. ' N' → logprob: -6.062405109405518
    6. ' at' → logprob: -6.187405109405518
    7. 'floor' → logprob: -6.312405109405518
    8. 'N' → logprob: -6.437405109405518
    9. ' is' → logprob: -7.562405109405518
    10. ' it' → logprob: -7.812405109405518

Token 315: ' floor' (ID: 8350)
  Prédit: ' floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' floor' → logprob: -0.10301099717617035
    2. 'floor' → logprob: -2.353010892868042
    3. ' N' → logprob: -6.728011131286621
    4. ' ground' → logprob: -7.853011131286621
    5. '_floor' → logprob: -7.853011131286621
    6. 'N' → logprob: -8.228011131286621
    7. ' the' → logprob: -8.853011131286621
    8. ' is' → logprob: -9.353011131286621
    9. 'ground' → logprob: -9.603011131286621
    10. '   ' → logprob: -9.853011131286621

Token 316: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.37492042779922485
    2. ' >=' → logprob: -1.24992036819458
    3. ' exceeds' → logprob: -4.62492036819458
    4. '>=' → logprob: -5.24992036819458
    5. ' after' → logprob: -6.12492036819458
    6. '       ' → logprob: -6.24992036819458
    7. 'is' → logprob: -6.24992036819458
    8. '<|end|>' → logprob: -6.87492036819458
    9. ' >' → logprob: -6.99992036819458
    10. ' at' → logprob: -7.12492036819458

Token 317: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.39875057339668274
    2. ' greater' → logprob: -2.2737505435943604
    3. 'greater' → logprob: -2.3987505435943604
    4. ' >=' → logprob: -2.5237505435943604
    5. '>=' → logprob: -3.0237505435943604
    6. 'at' → logprob: -5.2737507820129395
    7. '```' → logprob: -7.6487507820129395
    8. '>' → logprob: -8.523750305175781
    9. '≥' → logprob: -8.773750305175781
    10. '   ' → logprob: -9.148750305175781

Token 318: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.048817407339811325
    2. ' least' → logprob: -3.0488173961639404
    3. '_le' → logprob: -8.42381763458252
    4. '   ' → logprob: -12.67381763458252
    5. 'le' → logprob: -12.92381763458252
    6. ' ' → logprob: -13.92381763458252
    7. 'Least' → logprob: -14.04881763458252
    8. '```' → logprob: -14.42381763458252
    9. 'lest' → logprob: -14.67381763458252
    10. 'lease' → logprob: -14.79881763458252

Token 319: ' crack' (ID: 29931)
  Prédit: ' crack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' crack' → logprob: -0.3147616386413574
    2. 'cr' → logprob: -1.3147616386413574
    3. ' cr' → logprob: -7.314761638641357
    4. ' the' → logprob: -7.689761638641357
    5. 'the' → logprob: -8.564762115478516
    6. '```' → logprob: -9.689762115478516
    7. ' cracking' → logprob: -9.689762115478516
    8. '       ' → logprob: -11.064762115478516
    9. ' cracked' → logprob: -11.189762115478516
    10. '	cr' → logprob: -11.814762115478516

Token 320: '_velocity' (ID: 96187)
  Prédit: '_velocity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_velocity' → logprob: -1.0087516784551553e-05
    2. '_' → logprob: -12.00001049041748
    3. ' velocity' → logprob: -13.12501049041748
    4. 'velocity' → logprob: -14.25001049041748
    5. '   ' → logprob: -14.37501049041748
    6. ' _' → logprob: -14.75001049041748
    7. ' ' → logprob: -16.875009536743164
    8. '_vel' → logprob: -17.000009536743164
    9. 'Velocity' → logprob: -17.125009536743164
    10. '```' → logprob: -17.875009536743164

Token 321: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.32700589299201965
    2. '       ' → logprob: -1.3270058631896973
    3. '.
' → logprob: -4.952005863189697
    4. ':' → logprob: -6.327005863189697
    5. ',' → logprob: -6.452005863189697
    6. '
' → logprob: -6.577005863189697
    7. '        
' → logprob: -7.827005863189697
    8. '<|end|>' → logprob: -7.827005863189697
    9. '```' → logprob: -8.202006340026855
    10. '   ' → logprob: -8.702006340026855

Token 322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024997904896736145
    2. '
' → logprob: -3.7749979496002197
    3. '        
' → logprob: -7.024997711181641
    4. '<|end|>' → logprob: -7.524997711181641
    5. '```' → logprob: -8.77499771118164
    6. '"""' → logprob: -9.89999771118164
    7. '<|end|>' → logprob: -10.77499771118164
    8. ')' → logprob: -11.27499771118164
    9. 'newline' → logprob: -11.64999771118164
    10. 'import' → logprob: -11.77499771118164

Token 323: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02130001224577427
    2. '
' → logprob: -3.8963000774383545
    3. '        
' → logprob: -7.771299839019775
    4. ' for' → logprob: -9.021300315856934
    5. 'n' → logprob: -9.646300315856934
    6. '```' → logprob: -9.896300315856934
    7. 'for' → logprob: -11.021300315856934
    8. '
' → logprob: -11.271300315856934
    9. '   ' → logprob: -11.646300315856934
    10. ' floor' → logprob: -11.646300315856934

Token 324: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002465582510922104
    2. 'for' → logprob: -9.12524700164795
    3. 'floor' → logprob: -9.25024700164795
    4. ' for' → logprob: -11.00024700164795
    5. 'n' → logprob: -11.25024700164795
    6. ' floor' → logprob: -12.75024700164795
    7. 'def' → logprob: -12.87524700164795
    8. '```' → logprob: -13.12524700164795
    9. '   ' → logprob: -13.75024700164795
    10. 'flo' → logprob: -14.62524700164795

Token 325: ' if' (ID: 538)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.037653982639312744
    2. '       ' → logprob: -3.412653923034668
    3. 'for' → logprob: -6.287653923034668
    4. 'current' → logprob: -7.162653923034668
    5. 'def' → logprob: -7.662653923034668
    6. 'n' → logprob: -7.912653923034668
    7. 'low' → logprob: -8.537653923034668
    8. ' floor' → logprob: -9.162653923034668
    9. 'flo' → logprob: -9.787653923034668
    10. 'lower' → logprob: -9.787653923034668

Token 326: ' crack' (ID: 29931)
  Prédit: ' crack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' crack' → logprob: -0.004934158641844988
    2. 'cr' → logprob: -5.629934310913086
    3. ' self' → logprob: -7.254934310913086
    4. ' not' → logprob: -8.004934310913086
    5. ' ' → logprob: -9.754934310913086
    6. ' crater' → logprob: -10.004934310913086
    7. ' isinstance' → logprob: -10.254934310913086
    8. 'self' → logprob: -10.504934310913086
    9. ' math' → logprob: -10.504934310913086
    10. '	cr' → logprob: -10.629934310913086

Token 327: '_velocity' (ID: 96187)
  Prédit: '_velocity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_velocity' → logprob: -1.9361264946837764e-07
    2. 'velocity' → logprob: -16.375
    3. '_' → logprob: -17.5
    4. '_vel' → logprob: -18.125
    5. '_voltage' → logprob: -19.125
    6. ' velocity' → logprob: -19.375
    7. 'Velocity' → logprob: -21.0
    8. '_visibility' → logprob: -21.5
    9. '_v' → logprob: -21.625
    10. '_
' → logprob: -21.625

Token 328: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4740857183933258
    2. ' <=' → logprob: -0.9740856885910034
    3. '<' → logprob: -12.474085807800293
    4. '==' → logprob: -13.099085807800293
    5. ' <' → logprob: -13.849085807800293
    6. '>' → logprob: -14.599085807800293
    7. '```' → logprob: -14.849085807800293
    8. ' ' → logprob: -14.974085807800293
    9. ' ==' → logprob: -15.474085807800293
    10. ')<=' → logprob: -15.599085807800293

Token 329: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015034328680485487
    2. ' ' → logprob: -6.5015034675598145
    3. '   ' → logprob: -14.501502990722656
    4. '1' → logprob: -14.751502990722656
    5. 'self' → logprob: -16.626502990722656
    6. '    ' → logprob: -17.626502990722656
    7. '  ' → logprob: -18.064002990722656
    8. '```' → logprob: -18.189002990722656
    9. '۰' → logprob: -18.564002990722656
    10. ' self' → logprob: -18.814002990722656

Token 330: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9981420336989686e-05
    2. ' ' → logprob: -10.875020027160645
    3. '1' → logprob: -14.000020027160645
    4. '   ' → logprob: -17.125019073486328
    5. '=' → logprob: -18.250019073486328
    6. '```' → logprob: -18.687519073486328
    7. '۰' → logprob: -18.750019073486328
    8. 'self' → logprob: -18.875019073486328
    9. '
' → logprob: -19.125019073486328
    10. '

' → logprob: -19.187519073486328

Token 331: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3870322108268738
    2. ':
' → logprob: -1.1370322704315186
    3. ' or' → logprob: -9.387032508850098
    4. ':return' → logprob: -10.137032508850098
    5. ':
' → logprob: -10.887032508850098
    6. '       ' → logprob: -11.262032508850098
    7. ' :' → logprob: -13.012032508850098
    8. ' :
' → logprob: -13.387032508850098
    9. '   ' → logprob: -13.887032508850098
    10. '           ' → logprob: -14.137032508850098

Token 332: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03571246564388275
    2. ' return' → logprob: -3.535712480545044
    3. 'return' → logprob: -5.535712242126465
    4. '0' → logprob: -6.910712242126465
    5. '       ' → logprob: -7.035712242126465
    6. '   ' → logprob: -10.410712242126465
    7. ' for' → logprob: -10.785712242126465
    8. ':return' → logprob: -10.910712242126465
    9. '	return' → logprob: -11.285712242126465
    10. ',' → logprob: -12.035712242126465

Token 333: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2084936648607254
    2. ' return' → logprob: -1.708493709564209
    3. '           ' → logprob: -4.958493709564209
    4. '       ' → logprob: -11.45849323272705
    5. '0' → logprob: -11.95849323272705
    6. 'raise' → logprob: -12.20849323272705
    7. '   ' → logprob: -12.83349323272705
    8. ' ' → logprob: -13.08349323272705
    9. '	return' → logprob: -13.70849323272705
    10. '               ' → logprob: -13.83349323272705

Token 334: ' None' (ID: 4662)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4803454279899597
    2. 'None' → logprob: -1.1053454875946045
    3. '0' → logprob: -3.1053454875946045
    4. ' None' → logprob: -5.480345249176025
    5. ' ' → logprob: -7.230345249176025
    6. '5' → logprob: -7.605345249176025
    7. '   ' → logprob: -9.230345726013184
    8. '  ' → logprob: -11.855345726013184
    9. '       ' → logprob: -11.980345726013184
    10. '(None' → logprob: -11.980345726013184

Token 335: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04592336714267731
    2. '       ' → logprob: -3.2959234714508057
    3. '        
' → logprob: -4.920923233032227
    4. '
        
' → logprob: -8.670923233032227
    5. '
' → logprob: -8.920923233032227
    6. '<|end|>' → logprob: -9.545923233032227
    7. '\n' → logprob: -9.795923233032227
    8. '    
' → logprob: -10.045923233032227
    9. '  
' → logprob: -10.545923233032227
    10. '

' → logprob: -11.920923233032227

Token 336: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4201989471912384
    2. '       ' → logprob: -1.170198917388916
    3. '        
' → logprob: -3.545198917388916
    4. ' for' → logprob: -7.045198917388916
    5. '
        
' → logprob: -7.045198917388916
    6. ' floor' → logprob: -7.420198917388916
    7. 'for' → logprob: -7.795198917388916
    8. '
' → logprob: -7.920198917388916
    9. 'floor' → logprob: -7.920198917388916
    10. '

' → logprob: -9.545199394226074

Token 337: ' Invalid' (ID: 26430)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6109553575515747
    2. '#' → logprob: -1.1109553575515747
    3. 'return' → logprob: -2.610955238342285
    4. ' return' → logprob: -3.360955238342285
    5. 'No' → logprob: -5.235955238342285
    6. 'Because' → logprob: -6.110955238342285
    7. 'None' → logprob: -6.360955238342285
    8. '0' → logprob: -6.485955238342285
    9. ' No' → logprob: -6.485955238342285
    10. ' #' → logprob: -6.610955238342285

Token 338: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6254518628120422
    2. ' velocity' → logprob: -2.0004518032073975
    3. 'input' → logprob: -2.1254518032073975
    4. 'velocity' → logprob: -2.2504518032073975
    5. '       ' → logprob: -3.5004518032073975
    6. 'cr' → logprob: -3.6254518032073975
    7. ' crack' → logprob: -4.000452041625977
    8. ' value' → logprob: -4.750452041625977
    9. 'value' → logprob: -5.125452041625977
    10. '
' → logprob: -5.125452041625977

Token 339: ' based' (ID: 4122)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10060721635818481
    2. '
' → logprob: -2.47560715675354
    3. '        
' → logprob: -4.600607395172119
    4. ' for' → logprob: -7.100607395172119
    5. ' floor' → logprob: -8.350606918334961
    6. '    
' → logprob: -9.600606918334961
    7. 'n' → logprob: -9.725606918334961
    8. '
' → logprob: -10.100606918334961
    9. 'for' → logprob: -10.350606918334961
    10. '
        
' → logprob: -10.350606918334961

Token 340: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.06995943933725357
    2. ' on' → logprob: -2.6949594020843506
    3. '       ' → logprob: -12.19495964050293
    4. 'None' → logprob: -12.56995964050293
    5. 'to' → logprob: -12.56995964050293
    6. '   ' → logprob: -13.31995964050293
    7. '        ' → logprob: -13.69495964050293
    8. '           ' → logprob: -13.94495964050293
    9. '```' → logprob: -14.06995964050293
    10. '	on' → logprob: -14.31995964050293

Token 341: ' problem' (ID: 4792)
  Prédit: ' physics'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' physics' → logprob: -0.6311138272285461
    2. ' problem' → logprob: -1.5061137676239014
    3. ' physical' → logprob: -2.2561137676239014
    4. ' the' → logprob: -3.5061137676239014
    5. ' context' → logprob: -3.7561137676239014
    6. 'physics' → logprob: -4.0061140060424805
    7. 'problem' → logprob: -4.2561140060424805
    8. 'the' → logprob: -4.3811140060424805
    9. 'physical' → logprob: -4.3811140060424805
    10. 'context' → logprob: -4.6311140060424805

Token 342: ' constraints' (ID: 31060)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16197529435157776
    2. ' statement' → logprob: -2.911975383758545
    3. '        
' → logprob: -3.161975383758545
    4. ' logic' → logprob: -3.536975383758545
    5. '
' → logprob: -4.161975383758545
    6. ' description' → logprob: -6.786975383758545
    7. ' conditions' → logprob: -6.786975383758545
    8. ' condition' → logprob: -7.036975383758545
    9. '<|end|>' → logprob: -7.411975383758545
    10. ' definition' → logprob: -7.536975383758545

Token 343: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12044959515333176
    2. '
' → logprob: -2.2454495429992676
    3. '        
' → logprob: -5.370449542999268
    4. ' floor' → logprob: -6.620449542999268
    5. ' for' → logprob: -7.370449542999268
    6. 'floor' → logprob: -8.120450019836426
    7. '    
' → logprob: -8.495450019836426
    8. '   ' → logprob: -8.995450019836426
    9. '
' → logprob: -9.495450019836426
    10. 'for' → logprob: -9.745450019836426

Token 344: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005311785265803337
    2. 'floor' → logprob: -5.630311965942383
    3. ' floor' → logprob: -6.505311965942383
    4. 'n' → logprob: -10.005311965942383
    5. ' for' → logprob: -10.380311965942383
    6. '        
' → logprob: -10.380311965942383
    7. 'for' → logprob: -10.505311965942383
    8. '
' → logprob: -10.505311965942383
    9. 'current' → logprob: -11.755311965942383
    10. '```' → logprob: -12.130311965942383

Token 345: ' #' (ID: 1069)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.02609974890947342
    2. 'low' → logprob: -4.526099681854248
    3. 'for' → logprob: -5.026099681854248
    4. '       ' → logprob: -5.276099681854248
    5. 'lower' → logprob: -6.901099681854248
    6. 'current' → logprob: -7.151099681854248
    7. 'n' → logprob: -7.776099681854248
    8. 'left' → logprob: -8.401100158691406
    9. 'lo' → logprob: -8.651100158691406
    10. 'min' → logprob: -9.151100158691406

Token 346: ' Use' (ID: 7649)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.20048613846302032
    2. 'low' → logprob: -2.575486183166504
    3. 'for' → logprob: -3.325486183166504
    4. 'current' → logprob: -3.950486183166504
    5. '#' → logprob: -4.450486183166504
    6. 'time' → logprob: -4.575486183166504
    7. 'min' → logprob: -5.325486183166504
    8. 'left' → logprob: -5.450486183166504
    9. 'max' → logprob: -5.575486183166504
    10. 'N' → logprob: -5.575486183166504

Token 347: ' velocity' (ID: 30061)
  Prédit: ' binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.46338993310928345
    2. 'binary' → logprob: -1.3383898735046387
    3. 'low' → logprob: -3.2133898735046387
    4. '       ' → logprob: -4.088389873504639
    5. ' low' → logprob: -4.588389873504639
    6. ' a' → logprob: -4.838389873504639
    7. 'lower' → logprob: -5.213389873504639
    8. 'floor' → logprob: -5.213389873504639
    9. 'a' → logprob: -5.338389873504639
    10. ' math' → logprob: -5.588389873504639

Token 348: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09631102532148361
    2. '=' → logprob: -2.721311092376709
    3. '       ' → logprob: -4.596311092376709
    4. '_after' → logprob: -4.846311092376709
    5. '_threshold' → logprob: -5.721311092376709
    6. '   ' → logprob: -6.596311092376709
    7. '_target' → logprob: -7.096311092376709
    8. ':' → logprob: -8.34631061553955
    9. '_limit' → logprob: -8.34631061553955
    10. '_at' → logprob: -8.59631061553955

Token 349: ' g' (ID: 329)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.21935491263866425
    2. 'self' → logprob: -1.7193548679351807
    3. 'sqrt' → logprob: -4.71935510635376
    4. ' math' → logprob: -5.84435510635376
    5. 'lambda' → logprob: -6.21935510635376
    6. '(math' → logprob: -6.71935510635376
    7. ' self' → logprob: -7.09435510635376
    8. '0' → logprob: -7.84435510635376
    9. 'Free' → logprob: -8.219354629516602
    10. 'cmath' → logprob: -8.219354629516602

Token 350: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02197546884417534
    2. '*' → logprob: -4.021975517272949
    3. '*time' → logprob: -5.646975517272949
    4. '*t' → logprob: -8.39697551727295
    5. '*object' → logprob: -10.77197551727295
    6. 'r' → logprob: -12.02197551727295
    7. '*r' → logprob: -12.02197551727295
    8. 't' → logprob: -12.27197551727295
    9. '*self' → logprob: -12.64697551727295
    10. '*m' → logprob: -12.64697551727295

Token 351: ' t' (ID: 260)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.18221943080425262
    2. 't' → logprob: -2.8072195053100586
    3. 'math' → logprob: -2.8072195053100586
    4. ' time' → logprob: -3.8072195053100586
    5. '(time' → logprob: -4.432219505310059
    6. '(math' → logprob: -5.182219505310059
    7. ' math' → logprob: -5.557219505310059
    8. ' t' → logprob: -6.932219505310059
    9. ' (' → logprob: -8.057219505310059
    10. '(' → logprob: -8.182219505310059

Token 352: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5526207685470581
    2. '
' → logprob: -1.677620768547058
    3. ' for' → logprob: -1.802620768547058
    4. ',' → logprob: -3.5526208877563477
    5. '\n' → logprob: -4.052620887756348
    6. '        
' → logprob: -4.677620887756348
    7. ' to' → logprob: -5.927620887756348
    8. 'for' → logprob: -6.302620887756348
    9. '<|end|>' → logprob: -6.552620887756348
    10. 'n' → logprob: -6.677620887756348

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027750570327043533
    2. ' for' → logprob: -3.7777504920959473
    3. 'n' → logprob: -6.902750492095947
    4. '
' → logprob: -7.402750492095947
    5. 'import' → logprob: -7.402750492095947
    6. ',' → logprob: -7.652750492095947
    7. '        
' → logprob: -7.777750492095947
    8. 'for' → logprob: -7.902750492095947
    9. ' to' → logprob: -8.902750968933105
    10. ' from' → logprob: -9.652750968933105

Token 354: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5613328814506531
    2. 'low' → logprob: -1.0613329410552979
    3. 'left' → logprob: -3.936332941055298
    4. 'min' → logprob: -4.186332702636719
    5. 'for' → logprob: -4.436332702636719
    6. 'lo' → logprob: -4.561332702636719
    7. 'import' → logprob: -5.061332702636719
    8. 'lower' → logprob: -5.311332702636719
    9. 'floor' → logprob: -5.436332702636719
    10. '#' (adapté à ' #') → logprob: -5.436332702636719

Token 355: ' height' (ID: 4679)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3486520051956177
    2. '       ' → logprob: -1.7236520051956177
    3. 'floor' → logprob: -1.7236520051956177
    4. '#' → logprob: -2.348651885986328
    5. 'low' → logprob: -2.473651885986328
    6. 'n' → logprob: -3.223651885986328
    7. 'min' → logprob: -3.223651885986328
    8. 'left' → logprob: -3.848651885986328
    9. 'lower' → logprob: -3.973651885986328
    10. 'from' → logprob: -4.098651885986328

Token 356: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32785525918006897
    2. '=' → logprob: -1.3278552293777466
    3. '       ' → logprob: -5.077855110168457
    4. '_of' → logprob: -6.327855110168457
    5. '   ' → logprob: -6.702855110168457
    6. 's' → logprob: -6.702855110168457
    7. '_model' → logprob: -7.577855110168457
    8. '_to' → logprob: -7.827855110168457
    9. 'def' → logprob: -7.952855110168457
    10. '0' → logprob: -8.077855110168457

Token 357: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8722328543663025
    2. '5' → logprob: -1.1222329139709473
    3. '0' → logprob: -1.4972329139709473
    4. ' self' → logprob: -3.9972329139709473
    5. ' ' → logprob: -5.247232913970947
    6. '(self' → logprob: -6.247232913970947
    7. 'cr' → logprob: -6.622232913970947
    8. 'h' → logprob: -6.872232913970947
    9. 'v' → logprob: -7.122232913970947
    10. 's' → logprob: -7.372232913970947

Token 358: '5' (ID: 20)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2624496817588806
    2. '5' → logprob: -1.6374497413635254
    3. '0' → logprob: -3.3874497413635254
    4. ' self' → logprob: -6.512449741363525
    5. '(self' → logprob: -7.887449741363525
    6. ' ' → logprob: -8.262449264526367
    7. '   ' → logprob: -9.762449264526367
    8. '(' → logprob: -9.949949264526367
    9. 'cr' → logprob: -10.074949264526367
    10. 'lambda' → logprob: -10.387449264526367

Token 359: '*N' (ID: 107360)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.030586393550038338
    2. '*' → logprob: -3.5305864810943604
    3. '*N' → logprob: -7.905586242675781
    4. '*f' → logprob: -7.905586242675781
    5. '*n' → logprob: -9.405586242675781
    6. 'def' → logprob: -12.905586242675781
    7. '*object' → logprob: -12.905586242675781
    8. 'N' → logprob: -13.155586242675781
    9. '<|end|>' → logprob: -13.655586242675781
    10. 'f' → logprob: -13.905586242675781

Token 360: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04685325175523758
    2. '-' → logprob: -3.1718533039093018
    3. '       ' → logprob: -5.671853065490723
    4. '   ' → logprob: -8.671853065490723
    5. ' ' → logprob: -9.171853065490723
    6. '
' → logprob: -9.921853065490723
    7. ',' → logprob: -11.421853065490723
    8. '0' → logprob: -11.859353065490723
    9. '```' → logprob: -11.984353065490723
    10. '  ' → logprob: -11.984353065490723

Token 361: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0004885728703811765
    2. ' ' → logprob: -7.625488758087158
    3. ' five' → logprob: -15.25048828125
    4. '<|end|>' → logprob: -15.50048828125
    5. '   ' → logprob: -16.62548828125
    6. '<|end|>' → logprob: -17.00048828125
    7. '```' → logprob: -17.25048828125
    8. '۵' → logprob: -17.62548828125
    9. 'five' → logprob: -18.12548828125
    10. '
' → logprob: -18.37548828125

Token 362: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.1398757123970427e-05
    2. ' ' → logprob: -11.500011444091797
    3. '<|end|>' → logprob: -14.500011444091797
    4. '<|end|>' → logprob: -15.375011444091797
    5. ' five' → logprob: -15.875011444091797
    6. 'five' → logprob: -16.875011444091797
    7. '```' → logprob: -17.062511444091797
    8. '۵' → logprob: -17.062511444091797
    9. '५' → logprob: -17.625011444091797
    10. '৫' → logprob: -18.000011444091797

Token 363: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3014461398124695
    2. '
' → logprob: -1.4264461994171143
    3. ' for' → logprob: -4.426445960998535
    4. ',' → logprob: -6.176445960998535
    5. '        
' → logprob: -6.551445960998535
    6. 'n' → logprob: -6.801445960998535
    7. 'import' → logprob: -7.051445960998535
    8. '<|end|>' → logprob: -7.676445960998535
    9. 'for' → logprob: -7.801445960998535
    10. '   ' → logprob: -8.176445960998535

Token 364: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15185962617397308
    2. 'self' → logprob: -2.4018595218658447
    3. ' self' → logprob: -4.526859760284424
    4. 'h' → logprob: -4.526859760284424
    5. '5' → logprob: -4.901859760284424
    6. ' ' → logprob: -4.901859760284424
    7. 's' → logprob: -5.651859760284424
    8. ' h' → logprob: -5.901859760284424
    9. 't' → logprob: -6.901859760284424
    10. '       ' → logprob: -7.526859760284424

Token 365: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09088823199272156
    2. 'self' → logprob: -2.590888261795044
    3. '5' → logprob: -4.965888023376465
    4. '(' → logprob: -6.840888023376465
    5. '(self' → logprob: -7.090888023376465
    6. 'cr' → logprob: -7.465888023376465
    7. 'velocity' → logprob: -7.715888023376465
    8. ' ' → logprob: -8.590888023376465
    9. ' self' → logprob: -8.715888023376465
    10. 't' → logprob: -8.715888023376465

Token 366: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1731947809457779
    2. '
' → logprob: -2.6731948852539062
    3. '.' → logprob: -3.6731948852539062
    4. ' for' → logprob: -3.9231948852539062
    5. 'for' → logprob: -4.173194885253906
    6. ',' → logprob: -4.798194885253906
    7. 'import' → logprob: -5.173194885253906
    8. '   ' → logprob: -5.798194885253906
    9. '0' → logprob: -6.298194885253906
    10. 'class' → logprob: -6.548194885253906

Token 367: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0002434699417790398
    2. '0' → logprob: -9.625243186950684
    3. '```' → logprob: -10.562743186950684
    4. '.' → logprob: -10.687743186950684
    5. '(' → logprob: -10.750243186950684
    6. 'sqrt' → logprob: -11.000243186950684
    7. '   ' → logprob: -11.750243186950684
    8. '       ' → logprob: -12.000243186950684
    9. 's' → logprob: -12.062743186950684
    10. 't' → logprob: -12.312743186950684

Token 368: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6327723860740662
    2. ' *' → logprob: -0.7577723860740662
    3. '*self' → logprob: -8.757772445678711
    4. ' ' → logprob: -12.632772445678711
    5. ' ' → logprob: -12.757772445678711
    6. '   ' → logprob: -12.757772445678711
    7. '**' → logprob: -13.507772445678711
    8. 'self' → logprob: -13.882772445678711
    9. '*g' → logprob: -13.882772445678711
    10. '*object' → logprob: -14.257772445678711

Token 369: ' g' (ID: 329)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09183186292648315
    2. ' self' → logprob: -3.341831922531128
    3. 'Free' → logprob: -3.341831922531128
    4. '9' → logprob: -4.591831684112549
    5. ' Free' → logprob: -5.716831684112549
    6. 'Physics' → logprob: -5.716831684112549
    7. 'Gravity' → logprob: -9.841832160949707
    8. '   ' → logprob: -9.841832160949707
    9. ' Physics' → logprob: -10.466832160949707
    10. 'Self' → logprob: -10.716832160949707

Token 370: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06713924556970596
    2. ' *' → logprob: -3.067139148712158
    3. '*time' → logprob: -4.317139148712158
    4. '*(' → logprob: -5.692139148712158
    5. '*t' → logprob: -6.442139148712158
    6. 'time' → logprob: -10.567139625549316
    7. 't' → logprob: -10.817139625549316
    8. '*self' → logprob: -11.942139625549316
    9. '*((' → logprob: -12.067139625549316
    10. ' ' → logprob: -12.817139625549316

Token 371: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6285164952278137
    2. '(time' → logprob: -1.253516435623169
    3. '(' → logprob: -2.878516435623169
    4. 'time' → logprob: -3.003516435623169
    5. '(t' → logprob: -3.253516435623169
    6. '((' → logprob: -4.253516674041748
    7. '(math' → logprob: -4.378516674041748
    8. ' (' → logprob: -5.253516674041748
    9. 'math' → logprob: -6.128516674041748
    10. '(self' → logprob: -6.753516674041748

Token 372: '^' (ID: 61)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9678128957748413
    2. '       ' → logprob: -1.3428128957748413
    3. '**' → logprob: -1.9678128957748413
    4. '2' → logprob: -2.092813014984131
    5. '^' → logprob: -3.467813014984131
    6. '        
' → logprob: -4.467813014984131
    7. '\n' → logprob: -4.592813014984131
    8. '   ' → logprob: -5.342813014984131
    9. '

' → logprob: -5.467813014984131
    10. '
' → logprob: -5.592813014984131

Token 373: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '²' → logprob: -16.125009536743164
    4. '**' → logprob: -16.625009536743164
    5. '۲' → logprob: -16.750009536743164
    6. '```' → logprob: -18.250009536743164
    7. '₂' → logprob: -18.625009536743164
    8. '２' → logprob: -18.687509536743164
    9. '   ' → logprob: -18.937509536743164
    10. '٢' → logprob: -19.062509536743164

Token 374: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35746073722839355
    2. '       ' → logprob: -1.3574607372283936
    3. '\n' → logprob: -3.4824607372283936
    4. '        
' → logprob: -5.357460975646973
    5. '\
' → logprob: -6.232460975646973
    6. '<|end|>' → logprob: -6.482460975646973
    7. '\' → logprob: -7.232460975646973
    8. '
' → logprob: -7.357460975646973
    9. '    
' → logprob: -7.732460975646973
    10. '  
' → logprob: -7.857460975646973

Token 375: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2570226788520813
    2. '       ' → logprob: -1.5070226192474365
    3. '\n' → logprob: -6.382022857666016
    4. '        
' → logprob: -6.632022857666016
    5. 'import' → logprob: -7.507022857666016
    6. '<|end|>' → logprob: -8.257022857666016
    7. 'n' → logprob: -8.507022857666016
    8. '
' → logprob: -8.632022857666016
    9. '

' → logprob: -8.757022857666016
    10. 'def' → logprob: -9.632022857666016

Token 376: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14963392913341522
    2. 'import' → logprob: -2.1496338844299316
    3. 'from' → logprob: -4.399633884429932
    4. 'n' → logprob: -5.149633884429932
    5. ' from' → logprob: -6.274633884429932
    6. ' import' → logprob: -7.649633884429932
    7. 't' → logprob: -7.649633884429932
    8. ' for' → logprob: -8.52463436126709
    9. '```' → logprob: -8.64963436126709
    10. 'def' → logprob: -8.77463436126709

Token 377: ' solve' (ID: 17722)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8265278339385986
    2. 'from' → logprob: -0.9515278339385986
    3. 'low' → logprob: -2.0765278339385986
    4. 'left' → logprob: -4.7015275955200195
    5. '#' → logprob: -4.8265275955200195
    6. 't' → logprob: -5.3265275955200195
    7. '       ' → logprob: -5.5765275955200195
    8. 'def' → logprob: -5.5765275955200195
    9. 'lo' → logprob: -5.5765275955200195
    10. 'N' → logprob: -5.8265275955200195

Token 378: ' t' (ID: 260)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5244005918502808
    2. ' for' → logprob: -0.8994005918502808
    3. ' t' → logprob: -7.64940071105957
    4. 't' → logprob: -8.02440071105957
    5. '       ' → logprob: -8.77440071105957
    6. '   ' → logprob: -8.89940071105957
    7. 'time' → logprob: -9.64940071105957
    8. ' time' → logprob: -10.14940071105957
    9. '_for' → logprob: -10.27440071105957
    10. '```' → logprob: -11.27440071105957

Token 379: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22646167874336243
    2. '=' → logprob: -1.60146164894104
    3. 'for' → logprob: -7.476461887359619
    4. ' for' → logprob: -7.726461887359619
    5. '^' → logprob: -10.976461410522461
    6. '_for' → logprob: -11.851461410522461
    7. 's' → logprob: -12.351461410522461
    8. '_squared' → logprob: -12.976461410522461
    9. '_' → logprob: -13.601461410522461
    10. '=s' → logprob: -13.851461410522461

Token 380: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.1360187828540802
    2. '5' → logprob: -3.386018753051758
    3. ' height' → logprob: -3.511018753051758
    4. 'self' → logprob: -4.011018753051758
    5. '(' → logprob: -4.261018753051758
    6. '(height' → logprob: -4.511018753051758
    7. '0' → logprob: -5.386018753051758
    8. ' (' → logprob: -5.636018753051758
    9. 'math' → logprob: -5.636018753051758
    10. '   ' → logprob: -5.636018753051758

Token 381: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.816874086856842
    2. '       ' → logprob: -0.941874086856842
    3. '=' → logprob: -2.3168740272521973
    4. ':' → logprob: -4.066874027252197
    5. '**' → logprob: -4.191874027252197
    6. 'import' → logprob: -4.316874027252197
    7. '
' → logprob: -4.941874027252197
    8. ',' → logprob: -5.691874027252197
    9. '   ' → logprob: -6.566874027252197
    10. 'sqrt' → logprob: -7.191874027252197

Token 382: ' t' (ID: 260)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.216523289680481
    2. ' t' → logprob: -1.341523289680481
    3. '       ' → logprob: -1.716523289680481
    4. 't' → logprob: -1.966523289680481
    5. 'from' → logprob: -3.0915231704711914
    6. ' import' → logprob: -4.091523170471191
    7. '5' → logprob: -4.216523170471191
    8. ' from' → logprob: -4.341523170471191
    9. '```' → logprob: -4.716523170471191
    10. 'sqrt' → logprob: -5.841523170471191

Token 383: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193020701408386
    2. '=' → logprob: -1.5019302368164062
    3. ':' → logprob: -15.501930236816406
    4. 's' → logprob: -15.751930236816406
    5. '```' → logprob: -16.001930236816406
    6. 'import' → logprob: -16.376930236816406
    7. ')' → logprob: -16.501930236816406
    8. ' ' → logprob: -16.626930236816406
    9. ' =
' → logprob: -16.626930236816406
    10. ' ' → logprob: -16.751930236816406

Token 384: ' sqrt' (ID: 44237)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.006841468624770641
    2. ' math' → logprob: -5.006841659545898
    3. '(math' → logprob: -9.006841659545898
    4. 'sqrt' → logprob: -13.006841659545898
    5. '   ' → logprob: -14.256841659545898
    6. '(' → logprob: -15.256841659545898
    7. '\' → logprob: -16.1318416595459
    8. '((' → logprob: -16.8818416595459
    9. '```' → logprob: -16.8818416595459
    10. 'Math' → logprob: -17.0068416595459

Token 385: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38738682866096497
    2. '((' → logprob: -1.1373867988586426
    3. '(height' → logprob: -8.1373872756958
    4. '(self' → logprob: -8.7623872756958
    5. '(
' → logprob: -10.8873872756958
    6. ' (' → logprob: -11.1373872756958
    7. '   ' → logprob: -11.7623872756958
    8. '2' → logprob: -11.7623872756958
    9. '```' → logprob: -12.5123872756958
    10. '
' → logprob: -13.0123872756958

Token 386: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06275336444377899
    2. '2' → logprob: -2.812753438949585
    3. ' (' → logprob: -7.312753200531006
    4. '((' → logprob: -9.937753677368164
    5. '   ' → logprob: -10.562753677368164
    6. 'height' → logprob: -11.187753677368164
    7. ' ' → logprob: -11.187753677368164
    8. '(height' → logprob: -12.312753677368164
    9. ')' → logprob: -13.062753677368164
    10. '
' → logprob: -13.312753677368164

Token 387: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6327922344207764
    2. '*' → logprob: -0.7577922344207764
    3. '*h' → logprob: -9.632792472839355
    4. 'height' → logprob: -10.382792472839355
    5. ' ' → logprob: -10.382792472839355
    6. '*(' → logprob: -10.882792472839355
    7. '   ' → logprob: -11.007792472839355
    8. '*self' → logprob: -11.632792472839355
    9. '*object' → logprob: -12.882792472839355
    10. ' ' → logprob: -13.007792472839355

Token 388: 'height' (ID: 5097)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.23229758441448212
    2. '(' → logprob: -1.9822975397109985
    3. '(self' → logprob: -2.982297658920288
    4. 'height' → logprob: -4.857297420501709
    5. ' (' → logprob: -5.857297420501709
    6. '(height' → logprob: -6.232297420501709
    7. '*self' → logprob: -6.357297420501709
    8. ' self' → logprob: -6.357297420501709
    9. '*' → logprob: -6.982297420501709
    10. '   ' → logprob: -7.482297420501709

Token 389: '/g' (ID: 11328)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.22576594352722168
    2. '/' → logprob: -1.6007659435272217
    3. ')' → logprob: -8.9757661819458
    4. '   ' → logprob: -9.3507661819458
    5. ' ' → logprob: -10.3507661819458
    6. '/math' → logprob: -10.7257661819458
    7. ' ' → logprob: -11.2257661819458
    8. '/
' → logprob: -11.4757661819458
    9. '       ' → logprob: -11.6007661819458
    10. '/(' → logprob: -11.6007661819458

Token 390: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015941266901791096
    2. ')
' → logprob: -6.501594066619873
    3. '       ' → logprob: -10.251594543457031
    4. ' )' → logprob: -10.501594543457031
    5. '   ' → logprob: -11.251594543457031
    6. ')
' → logprob: -11.501594543457031
    7. '))' → logprob: -13.376594543457031
    8. ')

' → logprob: -14.126594543457031
    9. ')`' → logprob: -14.251594543457031
    10. '),' → logprob: -14.626594543457031

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029213670641183853
    2. '
' → logprob: -3.6542136669158936
    3. '        
' → logprob: -6.279213905334473
    4. '<|end|>' → logprob: -7.779213905334473
    5. 'import' → logprob: -8.279213905334473
    6. '<|end|>' → logprob: -9.654213905334473
    7. ' for' → logprob: -10.279213905334473
    8. ',' → logprob: -10.279213905334473
    9. '\n' → logprob: -10.529213905334473
    10. 'n' → logprob: -10.779213905334473

Token 392: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30925142765045166
    2. 'floor' → logprob: -1.4342514276504517
    3. 'n' → logprob: -4.184251308441162
    4. 'for' → logprob: -5.434251308441162
    5. ' floor' → logprob: -6.059251308441162
    6. 'N' → logprob: -6.059251308441162
    7. 'import' → logprob: -6.309251308441162
    8. 'flo' → logprob: -8.05925178527832
    9. ' for' → logprob: -8.55925178527832
    10. 'f' → logprob: -8.80925178527832

Token 393: ' velocity' (ID: 30061)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6886307597160339
    2. 'floor' → logprob: -1.5636308193206787
    3. 'n' → logprob: -2.1886308193206787
    4. 'for' → logprob: -2.5636308193206787
    5. 'N' → logprob: -2.8136308193206787
    6. 'import' → logprob: -3.8136308193206787
    7. 'from' → logprob: -4.9386305809021
    8. 'def' → logprob: -5.8136305809021
    9. 'low' → logprob: -6.3136305809021
    10. 'min' → logprob: -7.0636305809021

Token 394: ' at' (ID: 540)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35063356161117554
    2. '=' → logprob: -1.2256336212158203
    3. '_after' → logprob: -6.22563362121582
    4. '>=' → logprob: -9.47563362121582
    5. '_on' → logprob: -9.85063362121582
    6. '_at' → logprob: -10.85063362121582
    7. ' >=' → logprob: -11.35063362121582
    8. 'after' → logprob: -11.97563362121582
    9. '   ' → logprob: -12.47563362121582
    10. '_' → logprob: -12.47563362121582

Token 395: ' hitting' (ID: 34749)
  Prédit: 'impact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'impact' → logprob: -0.6379678249359131
    2. 'floor' → logprob: -1.637967824935913
    3. 'time' → logprob: -1.887967824935913
    4. 't' → logprob: -2.762967824935913
    5. 'landing' → logprob: -3.762967824935913
    6. 'h' → logprob: -4.387968063354492
    7. '       ' → logprob: -5.387968063354492
    8. 'fall' → logprob: -5.512968063354492
    9. 'hit' → logprob: -5.512968063354492
    10. '   ' → logprob: -5.637968063354492

Token 396: ' floor' (ID: 8350)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.6024494171142578
    2. '=' → logprob: -1.9774494171142578
    3. 'time' → logprob: -1.9774494171142578
    4. ' =' → logprob: -2.352449417114258
    5. 'floor' → logprob: -2.352449417114258
    6. 'the' → logprob: -2.602449417114258
    7. '   ' → logprob: -2.727449417114258
    8. ' the' → logprob: -3.102449417114258
    9. '       ' → logprob: -3.477449417114258
    10. 'N' → logprob: -3.727449417114258

Token 397: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3348980247974396
    2. '=' → logprob: -1.3348979949951172
    3. '       ' → logprob: -3.959897994995117
    4. ':' → logprob: -6.709897994995117
    5. '   ' → logprob: -8.334897994995117
    6. '        ' → logprob: -8.959897994995117
    7. ' is' → logprob: -9.084897994995117
    8. '```' → logprob: -9.084897994995117
    9. '_after' → logprob: -9.584897994995117
    10. ' after' → logprob: -9.834897994995117

Token 398: ' v' (ID: 323)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.9130402207374573
    2. ' math' → logprob: -1.0380401611328125
    3. ' velocity' → logprob: -2.2880401611328125
    4. 'math' → logprob: -3.1630401611328125
    5. 'velocity' → logprob: -3.6630401611328125
    6. 'self' → logprob: -3.9130401611328125
    7. ' crack' → logprob: -4.2880401611328125
    8. ' (' → logprob: -5.0380401611328125
    9. ' sqrt' → logprob: -5.1630401611328125
    10. ' v' → logprob: -5.2880401611328125

Token 399: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07021640241146088
    2. '=' → logprob: -2.695216417312622
    3. '_after' → logprob: -8.695216178894043
    4. '_' → logprob: -9.320216178894043
    5. '   ' → logprob: -12.320216178894043
    6. ' ' → logprob: -12.820216178894043
    7. ',' → logprob: -12.945216178894043
    8. ':' → logprob: -13.320216178894043
    9. '_=' → logprob: -13.445216178894043
    10. ' after' → logprob: -13.695216178894043

Token 400: ' g' (ID: 329)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09645739942789078
    2. 'math' → logprob: -2.7214574813842773
    3. ' self' → logprob: -4.096457481384277
    4. ' math' → logprob: -5.596457481384277
    5. 'Free' → logprob: -5.721457481384277
    6. 'cr' → logprob: -6.846457481384277
    7. ' Free' → logprob: -7.471457481384277
    8. '   ' → logprob: -8.721457481384277
    9. ' crack' → logprob: -8.721457481384277
    10. 'Physics' → logprob: -8.721457481384277

Token 401: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0337117500603199
    2. '*' → logprob: -3.4087116718292236
    3. '*t' → logprob: -9.908711433410645
    4. '*time' → logprob: -11.783711433410645
    5. ' ' → logprob: -13.033711433410645
    6. ' ' → logprob: -13.533711433410645
    7. 'times' → logprob: -14.158711433410645
    8. 't' → logprob: -14.658711433410645
    9. '*object' → logprob: -14.783711433410645
    10. '```' → logprob: -14.783711433410645

Token 402: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.44351282715797424
    2. 'math' → logprob: -1.6935127973556519
    3. ' math' → logprob: -2.5685129165649414
    4. 'sqrt' → logprob: -3.0685129165649414
    5. ' t' → logprob: -3.1935129165649414
    6. '(math' → logprob: -5.443512916564941
    7. ' sqrt' → logprob: -5.693512916564941
    8. ' (' → logprob: -7.318512916564941
    9. '(' → logprob: -7.443512916564941
    10. 'time' → logprob: -7.568512916564941

Token 403: ' =' (ID: 314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6514847278594971
    2. '       ' → logprob: -0.7764847278594971
    3. '        
' → logprob: -4.401484489440918
    4. '<|end|>' → logprob: -6.026484489440918
    5. '<|end|>' → logprob: -6.401484489440918
    6. '\n' → logprob: -7.026484489440918
    7. '    
' → logprob: -8.276484489440918
    8. ' for' → logprob: -8.526484489440918
    9. '
' → logprob: -8.776484489440918
    10. '  
' → logprob: -8.901484489440918

Token 404: ' g' (ID: 329)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.7072411179542542
    2. 'self' → logprob: -0.8322411179542542
    3. ' math' → logprob: -3.5822410583496094
    4. 'cr' → logprob: -3.7072410583496094
    5. ' crack' → logprob: -4.707241058349609
    6. ' self' → logprob: -5.082241058349609
    7. 'Free' → logprob: -5.832241058349609
    8. '   ' → logprob: -7.457241058349609
    9. ' Free' → logprob: -8.70724105834961
    10. 'Physics' → logprob: -9.20724105834961

Token 405: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.003605297766625881
    2. '*' → logprob: -5.628605365753174
    3. ' ' → logprob: -13.253604888916016
    4. ' ' → logprob: -14.253604888916016
    5. 'times' → logprob: -14.503604888916016
    6. '**' → logprob: -15.128604888916016
    7. '<|end|>' → logprob: -15.128604888916016
    8. '*object' → logprob: -15.253604888916016
    9. '*Math' → logprob: -15.753604888916016
    10. '*t' → logprob: -15.878604888916016

Token 406: ' sqrt' (ID: 44237)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.43965601921081543
    2. ' math' → logprob: -1.0646560192108154
    3. '(math' → logprob: -4.5646562576293945
    4. 'sqrt' → logprob: -8.439656257629395
    5. ' (' → logprob: -8.564656257629395
    6. '(' → logprob: -10.314656257629395
    7. ' sqrt' → logprob: -10.814656257629395
    8. '(s' → logprob: -11.814656257629395
    9. '((' → logprob: -13.314656257629395
    10. 'sys' → logprob: -13.689656257629395

Token 407: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010127831774298102
    2. '(
' → logprob: -9.625101089477539
    3. '((' → logprob: -11.125101089477539
    4. '\(' → logprob: -11.500101089477539
    5. '2' → logprob: -11.875101089477539
    6. '{' → logprob: -13.500101089477539
    7. '\' → logprob: -14.125101089477539
    8. ' (' → logprob: -14.250101089477539
    9. '```' → logprob: -16.50010108947754
    10. '()' → logprob: -16.62510108947754

Token 408: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.34866762161254883
    2. '(' → logprob: -1.2236676216125488
    3. ' (' → logprob: -9.22366714477539
    4. ' ' → logprob: -9.59866714477539
    5. '((' → logprob: -11.22366714477539
    6. '{' → logprob: -11.34866714477539
    7. '   ' → logprob: -12.09866714477539
    8. '\(' → logprob: -12.22366714477539
    9. '(
' → logprob: -12.47366714477539
    10. '\' → logprob: -12.59866714477539

Token 409: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.008637497201561928
    2. ' *' → logprob: -4.758637428283691
    3. '*(' → logprob: -10.883637428283691
    4. '   ' → logprob: -13.758637428283691
    5. 'height' → logprob: -13.758637428283691
    6. ' ' → logprob: -14.508637428283691
    7. '*object' → logprob: -14.633637428283691
    8. '*self' → logprob: -15.133637428283691
    9. '**' → logprob: -15.133637428283691
    10. '*((' → logprob: -16.133638381958008

Token 410: 'height' (ID: 5097)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7896445989608765
    2. 'height' → logprob: -0.7896445989608765
    3. 'self' → logprob: -3.164644718170166
    4. '(height' → logprob: -3.789644718170166
    5. ' (' → logprob: -4.039644718170166
    6. '5' → logprob: -5.914644718170166
    7. ' height' → logprob: -6.164644718170166
    8. '(self' → logprob: -6.164644718170166
    9. '((' → logprob: -6.539644718170166
    10. '   ' → logprob: -8.039644241333008

Token 411: '/g' (ID: 11328)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.7617314457893372
    2. '/g' → logprob: -1.2617313861846924
    3. ' /' → logprob: -1.3867313861846924
    4. '/
' → logprob: -10.886731147766113
    5. '/gr' → logprob: -11.261731147766113
    6. '/math' → logprob: -11.511731147766113
    7. '   ' → logprob: -12.011731147766113
    8. '/(' → logprob: -12.136731147766113
    9. '/self' → logprob: -12.136731147766113
    10. '       ' → logprob: -12.511731147766113

Token 412: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004972710739821196
    2. ' )' → logprob: -7.750497341156006
    3. '))' → logprob: -11.000496864318848
    4. ')*' → logprob: -11.500496864318848
    5. '   ' → logprob: -11.625496864318848
    6. ')**' → logprob: -11.750496864318848
    7. ')/' → logprob: -12.500496864318848
    8. '*' → logprob: -12.625496864318848
    9. ')
' → logprob: -12.875496864318848
    10. ' ' → logprob: -13.125496864318848

Token 413: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04136001318693161
    2. '<|end|>' → logprob: -4.166359901428223
    3. ')' → logprob: -4.666359901428223
    4. '
' → logprob: -5.541359901428223
    5. '\n' → logprob: -5.791359901428223
    6. '        
' → logprob: -6.291359901428223
    7. '\' → logprob: -6.416359901428223
    8. ',' → logprob: -6.666359901428223
    9. '\
' → logprob: -7.666359901428223
    10. '(' → logprob: -7.791359901428223

Token 414: ' sqrt' (ID: 44237)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.47934091091156006
    2. 'math' → logprob: -1.72934091091156
    3. ' Free' → logprob: -2.4793410301208496
    4. 'Free' → logprob: -3.2293410301208496
    5. 'Physics' → logprob: -3.8543410301208496
    6. 'self' → logprob: -4.10434103012085
    7. ' Physics' → logprob: -4.22934103012085
    8. '9' → logprob: -4.35434103012085
    9. ' self' → logprob: -4.47934103012085
    10. ' physics' → logprob: -6.97934103012085

Token 415: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.0126840758603066e-05
    2. '2' → logprob: -10.250040054321289
    3. ' (' → logprob: -12.500040054321289
    4. '{' → logprob: -14.125040054321289
    5. '(
' → logprob: -16.12504005432129
    6. '   ' → logprob: -17.00004005432129
    7. ' ' → logprob: -17.00004005432129
    8. '\(' → logprob: -17.87504005432129
    9. '（' → logprob: -18.75004005432129
    10. '    ' → logprob: -18.87504005432129

Token 416: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.248469718324486e-05
    2. ' ' → logprob: -11.000022888183594
    3. '
' → logprob: -13.000022888183594
    4. '(' → logprob: -13.500022888183594
    5. '   ' → logprob: -13.875022888183594
    6. '```' → logprob: -15.125022888183594
    7. '``' → logprob: -16.250022888183594
    8. ')' → logprob: -16.375022888183594
    9. '    
' → logprob: -16.500022888183594
    10. '  ' → logprob: -16.625022888183594

Token 417: '*g' (ID: 189048)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4028373062610626
    2. ' *' → logprob: -1.1528372764587402
    3. '*self' → logprob: -4.15283727645874
    4. 'self' → logprob: -10.277837753295898
    5. ' ' → logprob: -10.402837753295898
    6. '*g' → logprob: -10.652837753295898
    7. ' ' → logprob: -11.152837753295898
    8. '   ' → logprob: -12.277837753295898
    9. ' self' → logprob: -12.652837753295898
    10. '**' → logprob: -13.902837753295898

Token 418: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.045290958136320114
    2. 'self' → logprob: -3.795290946960449
    3. '*self' → logprob: -4.420290946960449
    4. ' *' → logprob: -5.045290946960449
    5. '5' → logprob: -6.420290946960449
    6. 'height' → logprob: -7.295290946960449
    7. ' self' → logprob: -8.42029094696045
    8. 'math' → logprob: -8.79529094696045
    9. ' ' → logprob: -8.92029094696045
    10. '   ' → logprob: -8.92029094696045

Token 419: 'height' (ID: 5097)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.30076754093170166
    2. '5' → logprob: -2.675767421722412
    3. 'height' → logprob: -2.675767421722412
    4. '(' → logprob: -2.925767421722412
    5. 'Free' → logprob: -3.425767421722412
    6. '(self' → logprob: -3.800767421722412
    7. '(height' → logprob: -5.050767421722412
    8. ' (' → logprob: -6.300767421722412
    9. ' self' → logprob: -6.550767421722412
    10. '   ' → logprob: -6.800767421722412

Token 420: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021230189595371485
    2. ' )' → logprob: -6.25212287902832
    3. '       ' → logprob: -9.25212287902832
    4. ')
' → logprob: -10.25212287902832
    5. '   ' → logprob: -10.87712287902832
    6. ')**' → logprob: -11.37712287902832
    7. '))' → logprob: -11.62712287902832
    8. ' ' → logprob: -12.50212287902832
    9. ')`' → logprob: -12.87712287902832
    10. '**' → logprob: -12.87712287902832

Token 421: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027866870164871216
    2. '
' → logprob: -3.652866840362549
    3. '        
' → logprob: -6.777866840362549
    4. '<|end|>' → logprob: -8.527867317199707
    5. 'import' → logprob: -9.277867317199707
    6. ',' → logprob: -10.152867317199707
    7. '<|end|>' → logprob: -10.652867317199707
    8. ' for' → logprob: -11.527867317199707
    9. '
' → logprob: -11.902867317199707
    10. '#' → logprob: -12.027867317199707

Token 422: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04171910136938095
    2. 'n' → logprob: -4.66671895980835
    3. 'floor' → logprob: -4.91671895980835
    4. 'import' → logprob: -5.16671895980835
    5. ' floor' → logprob: -5.29171895980835
    6. '
' → logprob: -5.29171895980835
    7. ' for' → logprob: -5.66671895980835
    8. '#' (adapté à ' #') → logprob: -7.29171895980835
    9. '_floor' → logprob: -7.66671895980835
    10. '        
' → logprob: -7.66671895980835

Token 423: ' Need' (ID: 19792)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2028825879096985
    2. 'import' → logprob: -2.8278825283050537
    3. '#' → logprob: -3.4528825283050537
    4. 'from' → logprob: -4.077882766723633
    5. 'min' → logprob: -4.077882766723633
    6. ' min' → logprob: -4.452882766723633
    7. 'n' → logprob: -5.077882766723633
    8. 'low' → logprob: -5.077882766723633
    9. 'for' → logprob: -5.452882766723633
    10. 'floor' → logprob: -5.452882766723633

Token 424: ' smallest' (ID: 42173)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.11917173862457275
    2. 'to' → logprob: -2.619171619415283
    3. ' minimal' → logprob: -4.744171619415283
    4. ' height' → logprob: -4.744171619415283
    5. '       ' → logprob: -4.869171619415283
    6. ' velocity' → logprob: -5.494171619415283
    7. '   ' → logprob: -6.244171619415283
    8. 'height' → logprob: -6.244171619415283
    9. 'velocity' → logprob: -6.744171619415283
    10. '  ' → logprob: -7.119171619415283

Token 425: ' N' (ID: 478)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.6787900328636169
    2. ' floor' → logprob: -0.8037900328636169
    3. ' N' → logprob: -3.8037900924682617
    4. 'N' → logprob: -4.053790092468262
    5. '_floor' → logprob: -5.553790092468262
    6. 'n' → logprob: -7.678790092468262
    7. 'flo' → logprob: -8.178790092468262
    8. ' n' → logprob: -9.053790092468262
    9. 'space' → logprob: -9.428790092468262
    10. 'int' → logprob: -9.553790092468262

Token 426: ' s' (ID: 265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05481536686420441
    2. '
' → logprob: -3.8048152923583984
    3. ' for' → logprob: -4.304815292358398
    4. 'n' → logprob: -5.304815292358398
    5. 'import' → logprob: -5.929815292358398
    6. ' =' → logprob: -5.929815292358398
    7. '        
' → logprob: -6.554815292358398
    8. 'for' → logprob: -6.554815292358398
    9. 'floor' → logprob: -6.679815292358398
    10. ' floor' → logprob: -7.304815292358398

Token 427: '.t' (ID: 1370)
  Prédit: 'uch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uch' → logprob: -0.11810149252414703
    2. 'atisf' → logprob: -2.4931015968322754
    3. 't' → logprob: -4.243101596832275
    4. '.t' → logprob: -4.368101596832275
    5. 'such' → logprob: -6.868101596832275
    6. '>=' → logprob: -9.743101119995117
    7. '```' → logprob: -9.743101119995117
    8. '   ' → logprob: -10.243101119995117
    9. '>' → logprob: -10.368101119995117
    10. 'at' → logprob: -10.368101119995117

Token 428: ' sqrt' (ID: 44237)
  Prédit: ' sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.25110703706741333
    2. '       ' → logprob: -2.6261069774627686
    3. 'sqrt' → logprob: -2.7511069774627686
    4. ' ' → logprob: -4.126107215881348
    5. ' (' → logprob: -4.126107215881348
    6. ':' → logprob: -4.251107215881348
    7. 'qrt' → logprob: -4.626107215881348
    8. '2' → logprob: -4.876107215881348
    9. ' that' → logprob: -5.751107215881348
    10. '        ' → logprob: -5.751107215881348

Token 429: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.758300438988954e-05
    2. '(
' → logprob: -9.250097274780273
    3. '\(' → logprob: -13.875097274780273
    4. ' (' → logprob: -15.875097274780273
    5. '(

' → logprob: -16.000097274780273
    6. '{' → logprob: -16.125097274780273
    7. '(
' → logprob: -16.750097274780273
    8. '2' → logprob: -17.250097274780273
    9. '((' → logprob: -17.375097274780273
    10. '（' → logprob: -18.250097274780273

Token 430: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5232104659080505
    2. '2' → logprob: -0.8982104659080505
    3. '(
' → logprob: -10.273210525512695
    4. ' ' → logprob: -11.023210525512695
    5. '{' → logprob: -11.148210525512695
    6. '\(' → logprob: -11.648210525512695
    7. ' (' → logprob: -11.773210525512695
    8. ')' → logprob: -13.398210525512695
    9. '   ' → logprob: -14.023210525512695
    10. '0' → logprob: -14.523210525512695

Token 431: '*g' (ID: 189048)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.026385527104139328
    2. ' *' → logprob: -3.776385545730591
    3. '*g' → logprob: -5.776385307312012
    4. '*self' → logprob: -11.526385307312012
    5. ' ' → logprob: -12.151385307312012
    6. '**' → logprob: -12.276385307312012
    7. '*object' → logprob: -13.276385307312012
    8. '   ' → logprob: -13.276385307312012
    9. ' ' → logprob: -13.651385307312012
    10. '*np' → logprob: -14.026385307312012

Token 432: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -8.923874702304602e-05
    2. ' *' → logprob: -9.375089645385742
    3. '**' → logprob: -13.125089645385742
    4. '*
' → logprob: -14.250089645385742
    5. '*(' → logprob: -15.375089645385742
    6. '*self' → logprob: -15.375089645385742
    7. '*object' → logprob: -15.375089645385742
    8. '*\' → logprob: -15.500089645385742
    9. ' ' → logprob: -15.875089645385742
    10. '*h' → logprob: -16.125089645385742

Token 433: 'height' (ID: 5097)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.021779527887701988
    2. 'height' → logprob: -4.896779537200928
    3. '(self' → logprob: -5.271779537200928
    4. 'Free' → logprob: -5.646779537200928
    5. '(' → logprob: -6.271779537200928
    6. '5' → logprob: -6.521779537200928
    7. ' self' → logprob: -6.771779537200928
    8. ' (' → logprob: -8.77177906036377
    9. '   ' → logprob: -8.89677906036377
    10. ' Free' → logprob: -9.27177906036377

Token 434: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014627386117354035
    2. ')>=' → logprob: -6.626462936401367
    3. '(N' → logprob: -10.501462936401367
    4. ')>' → logprob: -10.626462936401367
    5. '_floor' → logprob: -11.751462936401367
    6. ')
' → logprob: -11.876462936401367
    7. '(f' → logprob: -11.876462936401367
    8. ' )' → logprob: -12.001462936401367
    9. '))' → logprob: -12.126462936401367
    10. '[' → logprob: -12.251462936401367

Token 435: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.127065971493721
    2. '>=' → logprob: -2.127065896987915
    3. ')>=' → logprob: -9.627065658569336
    4. ')' → logprob: -10.627065658569336
    5. '```' → logprob: -11.502065658569336
    6. ']>=' → logprob: -11.627065658569336
    7. '**' → logprob: -11.627065658569336
    8. '       ' → logprob: -12.502065658569336
    9. '   ' → logprob: -12.752065658569336
    10. '>' → logprob: -12.752065658569336

Token 436: ' crack' (ID: 29931)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.16037625074386597
    2. ' crack' → logprob: -1.9103763103485107
    3. ' cr' → logprob: -9.03537654876709
    4. '	cr' → logprob: -11.78537654876709
    5. '   ' → logprob: -12.16037654876709
    6. 'cracker' → logprob: -12.53537654876709
    7. ' cracking' → logprob: -13.16037654876709
    8. ' ' → logprob: -13.28537654876709
    9. ' ' → logprob: -13.53537654876709
    10. ' crank' → logprob: -13.78537654876709

Token 437: '_velocity' (ID: 96187)
  Prédit: '_velocity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_velocity' → logprob: -6.289473822107539e-05
    2. '_' → logprob: -10.125062942504883
    3. '_vel' → logprob: -12.250062942504883
    4. '_v' → logprob: -12.625062942504883
    5. '\' → logprob: -12.750062942504883
    6. 'velocity' → logprob: -12.875062942504883
    7. ' velocity' → logprob: -12.875062942504883
    8. ' _' → logprob: -12.875062942504883
    9. 'Velocity' → logprob: -14.000062942504883
    10. '   ' → logprob: -14.375062942504883

Token 438: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11173250526189804
    2. '       ' → logprob: -2.3617324829101562
    3. '        
' → logprob: -4.986732482910156
    4. 'import' → logprob: -6.236732482910156
    5. '
' → logprob: -7.236732482910156
    6. '\n' → logprob: -7.611732482910156
    7. ',' → logprob: -7.861732482910156
    8. '<|end|>' → logprob: -8.111732482910156
    9. '<|end|>' → logprob: -8.861732482910156
    10. ',
' → logprob: -8.986732482910156

Token 439: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5589227080345154
    2. '       ' → logprob: -0.9339227080345154
    3. '        
' → logprob: -4.18392276763916
    4. '\n' → logprob: -4.43392276763916
    5. ' 
' → logprob: -6.05892276763916
    6. 'n' → logprob: -6.43392276763916
    7. '  
' → logprob: -7.05892276763916
    8. '\' → logprob: -7.30892276763916
    9. '
' → logprob: -7.43392276763916
    10. '    
' → logprob: -7.68392276763916

Token 440: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03516523540019989
    2. 'import' → logprob: -3.660165309906006
    3. 'n' → logprob: -5.785165309906006
    4. 'from' → logprob: -6.285165309906006
    5. ' from' → logprob: -6.410165309906006
    6. ' import' → logprob: -7.160165309906006
    7. ' n' → logprob: -8.160164833068848
    8. ' for' → logprob: -8.285164833068848
    9. '        
' → logprob: -9.035164833068848
    10. '```' → logprob: -9.160164833068848

Token 441: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2618803083896637
    2. 'import' → logprob: -1.8868802785873413
    3. 'from' → logprob: -3.636880397796631
    4. ' from' → logprob: -4.386880397796631
    5. 'low' → logprob: -4.511880397796631
    6. 'n' → logprob: -4.761880397796631
    7. ' import' → logprob: -5.386880397796631
    8. ' low' → logprob: -5.511880397796631
    9. ' lo' → logprob: -6.386880397796631
    10. ' for' → logprob: -6.386880397796631

Token 442: '.e' (ID: 2560)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5179368853569031
    2. 'n' → logprob: -1.2679369449615479
    3. 'f' → logprob: -3.142936944961548
    4. '   ' → logprob: -3.142936944961548
    5. 'mp' → logprob: -4.392936706542969
    6. '       ' → logprob: -4.642936706542969
    7. 't' → logprob: -6.017936706542969
    8. '#' → logprob: -6.142936706542969
    9. '     ' → logprob: -6.142936706542969
    10. 'ndef' → logprob: -6.392936706542969

Token 443: '.' (ID: 13)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.9190581440925598
    2. 'n' → logprob: -2.044058084487915
    3. ' for' → logprob: -2.544058084487915
    4. ' f' → logprob: -2.669058084487915
    5. '       ' → logprob: -2.794058084487915
    6. '   ' → logprob: -3.044058084487915
    7. 'for' → logprob: -3.169058084487915
    8. 't' → logprob: -3.544058084487915
    9. ' ' → logprob: -4.044058322906494
    10. ' n' → logprob: -4.169058322906494

Token 444: ' height' (ID: 4679)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.008010983467102
    2. '2' → logprob: -1.133010983467102
    3. 'self' → logprob: -2.7580108642578125
    4. ' self' → logprob: -2.8830108642578125
    5. ' height' → logprob: -3.1330108642578125
    6. 'height' → logprob: -3.2580108642578125
    7. ' (' → logprob: -3.5080108642578125
    8. '(' → logprob: -4.0080108642578125
    9. '       ' → logprob: -4.0080108642578125
    10. 'cr' → logprob: -4.6330108642578125

Token 445: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.23070332407951355
    2. '>=' → logprob: -1.605703353881836
    3. '=' → logprob: -6.355703353881836
    4. ' =' → logprob: -6.855703353881836
    5. ' *' → logprob: -7.105703353881836
    6. '*' → logprob: -7.230703353881836
    7. '**' → logprob: -8.355703353881836
    8. '>' → logprob: -9.105703353881836
    9. '   ' → logprob: -9.105703353881836
    10. ')' → logprob: -9.105703353881836

Token 446: ' (' (ID: 350)
  Prédit: '(cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cr' → logprob: -0.4045647382736206
    2. ' (' → logprob: -1.1545647382736206
    3. 'cr' → logprob: -4.65456485748291
    4. ' crack' → logprob: -5.27956485748291
    5. '(' → logprob: -6.15456485748291
    6. '   ' → logprob: -7.65456485748291
    7. '(c' → logprob: -9.15456485748291
    8. ' cr' → logprob: -9.65456485748291
    9. '0' → logprob: -9.77956485748291
    10. '(com' → logprob: -10.77956485748291

Token 447: 'cr' (ID: 798)
  Prédit: '(cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cr' → logprob: -0.5880473852157593
    2. 'cr' → logprob: -0.8380473852157593
    3. ' (' → logprob: -5.338047504425049
    4. ' crack' → logprob: -5.338047504425049
    5. '   ' → logprob: -6.588047504425049
    6. '(' → logprob: -7.838047504425049
    7. '0' → logprob: -9.33804702758789
    8. '(c' → logprob: -9.58804702758789
    9. ' cr' → logprob: -9.83804702758789
    10. '       ' → logprob: -10.27554702758789

Token 448: 'ack' (ID: 552)
  Prédit: 'ack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ack' → logprob: -0.005026205908507109
    2. 'it' → logprob: -7.005026340484619
    3. '```' → logprob: -7.005026340484619
    4. ' crack' → logprob: -7.880026340484619
    5. 'ac' → logprob: -8.005025863647461
    6. '**' → logprob: -8.255025863647461
    7. '{' → logprob: -8.380025863647461
    8. 'a' → logprob: -8.692525863647461
    9. '   ' → logprob: -9.130025863647461
    10. '(' → logprob: -9.192525863647461

Token 449: '_velocity' (ID: 96187)
  Prédit: '_velocity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_velocity' → logprob: -7.107425062713446e-06
    2. 'velocity' → logprob: -13.000006675720215
    3. '_' → logprob: -13.250006675720215
    4. '\' → logprob: -14.625006675720215
    5. '   ' → logprob: -14.750006675720215
    6. '_v' → logprob: -15.000006675720215
    7. 'Velocity' → logprob: -15.000006675720215
    8. ' velocity' → logprob: -15.000006675720215
    9. '_voltage' → logprob: -15.250006675720215
    10. '_vel' → logprob: -15.500006675720215

Token 450: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.047900013625621796
    2. '/' → logprob: -3.9228999614715576
    3. ' /' → logprob: -3.9228999614715576
    4. ' **' → logprob: -5.172900199890137
    5. ')**' → logprob: -7.297900199890137
    6. ')' → logprob: -7.672900199890137
    7. '/(' → logprob: -8.172900199890137
    8. '/s' → logprob: -10.047900199890137
    9. '```' → logprob: -10.172900199890137
    10. '**)' → logprob: -12.297900199890137

Token 451: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004903609515167773
    2. ' ' → logprob: -7.625490188598633
    3. '```' → logprob: -13.875490188598633
    4. '   ' → logprob: -15.125490188598633
    5. ')' → logprob: -15.375490188598633
    6. '
' → logprob: -15.500490188598633
    7. '**' → logprob: -15.500490188598633
    8. ' /' → logprob: -15.750490188598633
    9. '/' → logprob: -15.750490188598633
    10. '²' → logprob: -17.250490188598633

Token 452: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00520707480609417
    2. ')/(' → logprob: -5.755207061767578
    3. ' /' → logprob: -6.755207061767578
    4. ' )' → logprob: -7.380207061767578
    5. '/' → logprob: -8.630207061767578
    6. '/(' → logprob: -10.880207061767578
    7. ')/' → logprob: -11.005207061767578
    8. '   ' → logprob: -11.005207061767578
    9. '       ' → logprob: -13.130207061767578
    10. ' ' → logprob: -14.255207061767578

Token 453: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.6255177855491638
    2. '       ' → logprob: -1.0005178451538086
    3. ' *' → logprob: -3.2505178451538086
    4. '/' → logprob: -4.125517845153809
    5. ' ' → logprob: -4.250517845153809
    6. '*' → logprob: -4.750517845153809
    7. '   ' → logprob: -4.875517845153809
    8. 'def' → logprob: -5.875517845153809
    9. '**' → logprob: -6.000517845153809
    10. 'import' → logprob: -6.750517845153809

Token 454: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010115911572938785
    2. ' (' → logprob: -9.250101089477539
    3. '2' → logprob: -12.250101089477539
    4. ' ' → logprob: -16.50010108947754
    5. '   ' → logprob: -16.50010108947754
    6. '  ' → logprob: -19.12510108947754
    7. '(
' → logprob: -20.37510108947754
    8. '{' → logprob: -20.62510108947754
    9. '    ' → logprob: -20.87510108947754
    10. '(float' → logprob: -20.87510108947754

Token 455: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006109735928475857
    2. '2' → logprob: -5.131109714508057
    3. ' (' → logprob: -8.631110191345215
    4. ' ' → logprob: -13.381110191345215
    5. '   ' → logprob: -14.381110191345215
    6. '  ' → logprob: -16.5061092376709
    7. '{' → logprob: -16.6311092376709
    8. '(
' → logprob: -16.7561092376709
    9. '\(' → logprob: -17.2561092376709
    10. '
' → logprob: -17.3811092376709

Token 456: '*g' (ID: 189048)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.36384305357933044
    2. '*self' → logprob: -1.6138430833816528
    3. '*' → logprob: -2.6138429641723633
    4. 'Free' → logprob: -3.8638429641723633
    5. ' self' → logprob: -4.988842964172363
    6. ' *' → logprob: -5.738842964172363
    7. '   ' → logprob: -7.613842964172363
    8. ' Free' → logprob: -7.738842964172363
    9. '(self' → logprob: -8.613842964172363
    10. 'free' → logprob: -9.488842964172363

Token 457: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008114131633192301
    2. ')
' → logprob: -7.500811576843262
    3. ' )' → logprob: -8.625811576843262
    4. '       ' → logprob: -10.000811576843262
    5. '*' → logprob: -11.750811576843262
    6. '   ' → logprob: -12.125811576843262
    7. '))' → logprob: -12.375811576843262
    8. '),' → logprob: -13.000811576843262
    9. ')

' → logprob: -13.375811576843262
    10. ')
' → logprob: -13.375811576843262

Token 458: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06725627928972244
    2. '
' → logprob: -3.067256212234497
    3. '        
' → logprob: -4.317256450653076
    4. '  
' → logprob: -7.442256450653076
    5. ' 
' → logprob: -7.567256450653076
    6. 'import' → logprob: -7.567256450653076
    7. 'n' → logprob: -7.817256450653076
    8. ' target' → logprob: -8.192255973815918
    9. '
' → logprob: -8.442255973815918
    10. ' minimum' → logprob: -8.442255973815918

Token 459: ' threshold' (ID: 24313)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7062220573425293
    2. ' min' → logprob: -1.0812220573425293
    3. ' target' → logprob: -2.7062220573425293
    4. 'target' → logprob: -3.5812220573425293
    5. 'min' → logprob: -4.081222057342529
    6. ' required' → logprob: -4.081222057342529
    7. ' threshold' → logprob: -4.706222057342529
    8. 'threshold' (adapté à ' threshold') → logprob: -5.081222057342529
    9. 'required' → logprob: -5.706222057342529
    10. ' max' → logprob: -5.956222057342529

Token 460: '_height' (ID: 21576)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39389583468437195
    2. '_height' → logprob: -1.1438958644866943
    3. '=' → logprob: -5.018895626068115
    4. '_' → logprob: -8.018896102905273
    5. '_floor' → logprob: -10.393896102905273
    6. 'Height' → logprob: -12.143896102905273
    7. '   ' → logprob: -12.393896102905273
    8. ':' → logprob: -12.518896102905273
    9. '_distance' → logprob: -13.268896102905273
    10. 'height' → logprob: -13.518896102905273

Token 461: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005930931773036718
    2. '=' → logprob: -5.1309309005737305
    3. ':' → logprob: -13.38093090057373
    4. ' ' → logprob: -14.25593090057373
    5. ' :' → logprob: -17.380931854248047
    6. ' ' → logprob: -17.505931854248047
    7. 's' → logprob: -18.255931854248047
    8. ')' → logprob: -18.505931854248047
    9. ' =
' → logprob: -18.630931854248047
    10. ' =(' → logprob: -18.880931854248047

Token 462: ' (' (ID: 350)
  Prédit: '(cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cr' → logprob: -0.16182099282741547
    2. ' (' → logprob: -1.9118210077285767
    3. '   ' → logprob: -6.911820888519287
    4. 'cr' → logprob: -7.911820888519287
    5. ' crack' → logprob: -9.536821365356445
    6. '(c' → logprob: -9.786821365356445
    7. '(cur' → logprob: -10.786821365356445
    8. '(math' → logprob: -11.411821365356445
    9. '
' → logprob: -11.786821365356445
    10. ' cr' → logprob: -12.161821365356445

Token 463: 'cr' (ID: 798)
  Prédit: 'cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -9.491498531133402e-06
    2. ' crack' → logprob: -11.750009536743164
    3. '   ' → logprob: -13.500009536743164
    4. '(cr' → logprob: -16.000009536743164
    5. 'cracker' → logprob: -17.875009536743164
    6. '       ' → logprob: -18.125009536743164
    7. '	cr' → logprob: -20.125009536743164
    8. '           ' → logprob: -20.375009536743164
    9. '```' → logprob: -20.750009536743164
    10. '               ' → logprob: -21.125009536743164

Token 464: 'ack' (ID: 552)
  Prédit: 'ack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ack' → logprob: -9.007317567011341e-05
    2. 'a' → logprob: -10.250089645385742
    3. 'ak' → logprob: -11.000089645385742
    4. 'e' → logprob: -11.875089645385742
    5. 'ck' → logprob: -12.250089645385742
    6. ' crack' → logprob: -12.500089645385742
    7. 'ac' → logprob: -12.625089645385742
    8. '```' → logprob: -12.750089645385742
    9. 'acks' → logprob: -13.125089645385742
    10. 'acking' → logprob: -13.375089645385742

Token 465: '_velocity' (ID: 96187)
  Prédit: '_velocity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_velocity' → logprob: -5.200166469876422e-06
    2. 'Velocity' → logprob: -12.750004768371582
    3. 'velocity' → logprob: -13.125004768371582
    4. '_voltage' → logprob: -16.2500057220459
    5. 'ocity' → logprob: -16.6250057220459
    6. '.velocity' → logprob: -16.7500057220459
    7. '_vel' → logprob: -16.8750057220459
    8. ' velocity' → logprob: -17.1250057220459
    9. '```' → logprob: -17.8750057220459
    10. '   ' → logprob: -17.8750057220459

Token 466: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.06197306513786316
    2. ' **' → logprob: -2.8119730949401855
    3. ')**' → logprob: -12.686972618103027
    4. ' **)' → logprob: -14.186972618103027
    5. ')' → logprob: -14.686972618103027
    6. '**)' → logprob: -14.686972618103027
    7. '*' → logprob: -14.811972618103027
    8. '```' → logprob: -15.311972618103027
    9. ' ' → logprob: -16.311973571777344
    10. ' ' → logprob: -17.811973571777344

Token 467: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023119196703191847
    2. ' ' → logprob: -8.37523078918457
    3. '```' → logprob: -15.12523078918457
    4. '   ' → logprob: -15.37523078918457
    5. '  ' → logprob: -17.18773078918457
    6. ')' → logprob: -18.25023078918457
    7. '``' → logprob: -18.62523078918457
    8. '=' → logprob: -18.68773078918457
    9. '**' → logprob: -19.00023078918457
    10. '    ' → logprob: -19.12523078918457

Token 468: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00046975704026408494
    2. ' )' → logprob: -8.000470161437988
    3. ')/(' → logprob: -9.625470161437988
    4. '   ' → logprob: -10.625470161437988
    5. ' /' → logprob: -10.625470161437988
    6. '       ' → logprob: -11.125470161437988
    7. '/' → logprob: -13.625470161437988
    8. ')/' → logprob: -13.875470161437988
    9. '    ' → logprob: -14.250470161437988
    10. '        ' → logprob: -14.250470161437988

Token 469: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.12720075249671936
    2. '/' → logprob: -2.1272008419036865
    3. '/(' → logprob: -8.377201080322266
    4. ' /(' → logprob: -10.252201080322266
    5. '/
' → logprob: -13.252201080322266
    6. ' /
' → logprob: -13.377201080322266
    7. ')' → logprob: -13.502201080322266
    8. '   ' → logprob: -13.627201080322266
    9. ' ' → logprob: -14.377201080322266
    10. '```' → logprob: -15.377201080322266

Token 470: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029751643538475037
    2. ' (' → logprob: -3.5297515392303467
    3. '2' → logprob: -14.404751777648926
    4. ' ' → logprob: -15.404751777648926
    5. '   ' → logprob: -15.529751777648926
    6. '(
' → logprob: -15.654751777648926
    7. '  ' → logprob: -18.02975082397461
    8. ',' → logprob: -18.52975082397461
    9. '0' → logprob: -19.27975082397461
    10. '```' → logprob: -19.40475082397461

Token 471: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03872545808553696
    2. '(' → logprob: -3.2887253761291504
    3. ' ' → logprob: -7.41372537612915
    4. '   ' → logprob: -10.038725852966309
    5. ' (' → logprob: -10.538725852966309
    6. '  ' → logprob: -12.663725852966309
    7. '           ' → logprob: -13.788725852966309
    8. '       ' → logprob: -14.288725852966309
    9. '    ' → logprob: -14.413725852966309
    10. '     ' → logprob: -14.413725852966309

Token 472: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.14812026917934418
    2. '*' → logprob: -2.148120164871216
    3. '*self' → logprob: -3.898120164871216
    4. 'self' → logprob: -7.773120403289795
    5. '   ' → logprob: -9.148119926452637
    6. ' self' → logprob: -9.648119926452637
    7. ')' → logprob: -10.523119926452637
    8. 'Free' → logprob: -10.898119926452637
    9. '.' → logprob: -11.023119926452637
    10. '*object' → logprob: -11.898119926452637

Token 473: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009187239338643849
    2. ' self' → logprob: -7.250918865203857
    3. 'Free' → logprob: -8.6259183883667
    4. '   ' → logprob: -11.5009183883667
    5. '           ' → logprob: -11.8759183883667
    6. '       ' → logprob: -12.5009183883667
    7. '                   ' → logprob: -12.8759183883667
    8. 'Self' → logprob: -13.3759183883667
    9. '               ' → logprob: -13.6259183883667
    10. '(self' → logprob: -13.7509183883667

Token 474: '.physics' (ID: 121488)
  Prédit: '.physics'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.physics' → logprob: -4.727905979962088e-05
    2. 'physics' → logprob: -10.00004768371582
    3. '.' → logprob: -13.62504768371582
    4. '.geometry' → logprob: -15.12504768371582
    5. 'Physics' → logprob: -15.75004768371582
    6. ' physics' → logprob: -15.75004768371582
    7. ' .' → logprob: -16.50004768371582
    8. '.gravity' → logprob: -17.50004768371582
    9. '.free' → logprob: -18.12504768371582
    10. '.graphics' → logprob: -18.25004768371582

Token 475: '_model' (ID: 10928)
  Prédit: '_model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_model' → logprob: -1.0445127372804563e-05
    2. 'model' → logprob: -11.87501049041748
    3. 'Model' → logprob: -12.62501049041748
    4. 'physics' → logprob: -17.500009536743164
    5. '_MODEL' → logprob: -18.000009536743164
    6. 'MODEL' → logprob: -18.125009536743164
    7. '   ' → logprob: -18.500009536743164
    8. '_mode' → logprob: -18.625009536743164
    9. '._' → logprob: -19.500009536743164
    10. ' model' → logprob: -19.625009536743164

Token 476: '.GR' (ID: 121864)
  Prédit: '.GR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.GR' → logprob: -0.0001254693343071267
    2. '.G' → logprob: -9.000125885009766
    3. '.' → logprob: -13.875125885009766
    4. ' .' → logprob: -14.250125885009766
    5. 'GR' → logprob: -15.250125885009766
    6. '.GL' → logprob: -16.500125885009766
    7. ').' → logprob: -16.750125885009766
    8. '.FR' → logprob: -17.000125885009766
    9. '.CR' → logprob: -18.375125885009766
    10. '   ' → logprob: -19.000125885009766

Token 477: 'AV' (ID: 5345)
  Prédit: 'AV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AV' → logprob: -1.8789383830153383e-05
    2. 'avity' → logprob: -11.000019073486328
    3. 'A' → logprob: -13.750019073486328
    4. 'ITY' → logprob: -15.250019073486328
    5. 'IVITY' → logprob: -15.500019073486328
    6. 'ACITY' → logprob: -15.875019073486328
    7. 'Av' → logprob: -16.875019073486328
    8. '   ' → logprob: -17.125019073486328
    9. '#' → logprob: -17.375019073486328
    10. 'GR' → logprob: -17.500019073486328

Token 478: 'ITY' (ID: 6161)
  Prédit: 'ITY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ITY' → logprob: -1.9361264946837764e-07
    2. 'IT' → logprob: -16.25
    3. 'ity' → logprob: -16.875
    4. '**' → logprob: -18.875
    5. '   ' → logprob: -19.375
    6. '\' → logprob: -19.5
    7. '```' → logprob: -19.75
    8. 'AL' → logprob: -19.875
    9. '\
' → logprob: -19.875
    10. 'IDAD' → logprob: -20.125

Token 479: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017112065688706934
    2. ')
' → logprob: -9.250170707702637
    3. ' )' → logprob: -9.875170707702637
    4. '       ' → logprob: -10.750170707702637
    5. '   ' → logprob: -13.375170707702637
    6. ')

' → logprob: -15.750170707702637
    7. ')
' → logprob: -15.750170707702637
    8. '))' → logprob: -16.750171661376953
    9. ' )
' → logprob: -16.875171661376953
    10. ')`' → logprob: -17.250171661376953

Token 480: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01682273857295513
    2. 'floor' → logprob: -5.016822814941406
    3. ' floor' → logprob: -5.516822814941406
    4. 'n' → logprob: -6.391822814941406
    5. 'import' → logprob: -6.391822814941406
    6. '```' → logprob: -6.391822814941406
    7. '_floor' → logprob: -8.016822814941406
    8. '        
' → logprob: -9.016822814941406
    9. '
' → logprob: -9.266822814941406
    10. ' for' → logprob: -9.391822814941406

Token 481: ' #' (ID: 1069)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.01709592714905739
    2. 'for' → logprob: -4.642096042633057
    3. 'low' → logprob: -5.642096042633057
    4. '       ' → logprob: -6.267096042633057
    5. 'current' → logprob: -7.517096042633057
    6. 'import' → logprob: -8.017095565795898
    7. 'lower' → logprob: -8.267095565795898
    8. 'n' → logprob: -8.642095565795898
    9. 'min' → logprob: -8.642095565795898
    10. 'N' → logprob: -8.892095565795898

Token 482: ' Now' (ID: 6549)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.7661066055297852
    2. 'low' → logprob: -1.2661066055297852
    3. 'import' → logprob: -2.266106605529785
    4. 'from' → logprob: -2.266106605529785
    5. 'left' → logprob: -3.391106605529785
    6. 'n' → logprob: -6.141106605529785
    7. '       ' → logprob: -6.391106605529785
    8. 'lower' → logprob: -6.391106605529785
    9. 'for' → logprob: -6.391106605529785
    10. 'current' → logprob: -6.516106605529785

Token 483: ' find' (ID: 1646)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.612585723400116
    2. 'low' → logprob: -1.2375857830047607
    3. 'floor' → logprob: -2.4875857830047607
    4. 'left' → logprob: -3.6125857830047607
    5. 'n' → logprob: -3.8625857830047607
    6. ' low' → logprob: -4.737585544586182
    7. 'lo' → logprob: -5.237585544586182
    8. '   ' → logprob: -5.362585544586182
    9. 'import' → logprob: -5.487585544586182
    10. 'N' → logprob: -5.987585544586182

Token 484: ' minimal' (ID: 19957)
  Prédit: ' minimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.9748826622962952
    2. 'floor' → logprob: -1.5998826026916504
    3. 'minimal' → logprob: -1.8498826026916504
    4. '       ' → logprob: -2.4748826026916504
    5. ' floor' → logprob: -2.5998826026916504
    6. ' the' → logprob: -3.2248826026916504
    7. 'n' → logprob: -3.7248826026916504
    8. 'the' → logprob: -4.72488260269165
    9. 'lowest' → logprob: -4.72488260269165
    10. 'min' → logprob: -5.34988260269165

Token 485: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.05729927867650986
    2. ' floor' → logprob: -2.9322993755340576
    3. 'N' → logprob: -6.3072991371154785
    4. ' N' → logprob: -8.432299613952637
    5. 'n' → logprob: -8.682299613952637
    6. '_floor' → logprob: -9.557299613952637
    7. '   ' → logprob: -9.682299613952637
    8. 'flo' → logprob: -9.807299613952637
    9. ' n' → logprob: -12.557299613952637
    10. '       ' → logprob: -13.057299613952637

Token 486: ' N' (ID: 478)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020047994330525398
    2. ' floor' → logprob: -5.145048141479492
    3. 'floor' → logprob: -5.270048141479492
    4. '_floor' → logprob: -5.395048141479492
    5. ' =' → logprob: -6.520048141479492
    6. ' for' → logprob: -6.770048141479492
    7. 'n' → logprob: -7.895048141479492
    8. ',' → logprob: -8.270048141479492
    9. ' to' → logprob: -8.645048141479492
    10. 'loor' → logprob: -9.020048141479492

Token 487: ' s' (ID: 265)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5469452738761902
    2. '       ' → logprob: -0.9219452738761902
    3. '=' → logprob: -4.171945095062256
    4. ' for' → logprob: -5.296945095062256
    5. ',' → logprob: -7.421945095062256
    6. ':' → logprob: -7.546945095062256
    7. 'n' → logprob: -8.046945571899414
    8. 'for' → logprob: -8.171945571899414
    9. ' to' → logprob: -8.546945571899414
    10. ' floor' → logprob: -8.796945571899414

Token 488: '.t' (ID: 1370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001978237647563219
    2. 'uch' → logprob: -6.751978397369385
    3. 't' → logprob: -7.876978397369385
    4. 'atisf' → logprob: -8.251977920532227
    5. 'for' → logprob: -10.376977920532227
    6. '   ' → logprob: -10.876977920532227
    7. 'e' → logprob: -11.126977920532227
    8. 'at' → logprob: -11.501977920532227
    9. 'with' → logprob: -11.501977920532227
    10. '       ' → logprob: -11.626977920532227

Token 489: ' ' (ID: 220)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3955572843551636
    2. 'self' → logprob: -1.1455572843551636
    3. '       ' → logprob: -4.770557403564453
    4. '(self' → logprob: -10.145557403564453
    5. ' linear' → logprob: -10.270557403564453
    6. '5' → logprob: -10.520557403564453
    7. ' ' → logprob: -10.645557403564453
    8. '        ' → logprob: -11.145557403564453
    9. 'linear' → logprob: -12.020557403564453
    10. '   ' → logprob: -12.395557403564453

Token 490: '5' (ID: 20)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0026445025578141212
    2. ' self' → logprob: -6.2526445388793945
    3. '5' → logprob: -7.5026445388793945
    4. '       ' → logprob: -8.752644538879395
    5. '(self' → logprob: -12.627644538879395
    6. '   ' → logprob: -14.127644538879395
    7. ' ' → logprob: -14.627644538879395
    8. '
' → logprob: -14.752644538879395
    9. 'return' → logprob: -15.252644538879395
    10. '`' → logprob: -16.127643585205078

Token 491: '*N' (ID: 107360)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.44113171100616455
    2. '*' → logprob: -1.1911317110061646
    3. '*N' → logprob: -2.941131591796875
    4. 'N' → logprob: -12.191131591796875
    5. '*n' → logprob: -13.441131591796875
    6. '*f' → logprob: -13.566131591796875
    7. '*self' → logprob: -15.816131591796875
    8. '*num' → logprob: -15.816131591796875
    9. '*object' → logprob: -16.066131591796875
    10. '   ' → logprob: -16.316131591796875

Token 492: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.026311790570616722
    2. '-' → logprob: -3.6513118743896484
    3. ' >=' → logprob: -12.276311874389648
    4. ' ' → logprob: -12.776311874389648
    5. '>=' → logprob: -12.776311874389648
    6. '>' → logprob: -14.651311874389648
    7. '```' → logprob: -15.526311874389648
    8. ' >' → logprob: -16.15131187438965
    9. '   ' → logprob: -16.27631187438965
    10. 'minus' → logprob: -16.65131187438965

Token 493: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.001702675479464233
    2. ' ' → logprob: -6.376702785491943
    3. '>' → logprob: -16.0017032623291
    4. '```' → logprob: -16.2517032623291
    5. '<|end|>' → logprob: -16.5017032623291
    6. '   ' → logprob: -16.8767032623291
    7. ' five' → logprob: -17.0017032623291
    8. '  ' → logprob: -18.1892032623291
    9. '<|end|>' → logprob: -18.2517032623291
    10. '
' → logprob: -18.6892032623291

Token 494: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -8.537868779967539e-06
    2. ' ' → logprob: -11.875008583068848
    3. '<|end|>' → logprob: -13.750008583068848
    4. '```' → logprob: -15.625008583068848
    5. '>' → logprob: -16.00000762939453
    6. '<|end|>' → logprob: -16.12500762939453
    7. '...' → logprob: -16.37500762939453
    8. ' five' → logprob: -18.00000762939453
    9. 'five' → logprob: -18.25000762939453
    10. '   ' → logprob: -18.25000762939453

Token 495: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.4741109013557434
    2. '>=' → logprob: -0.9741109013557434
    3. ')>=' → logprob: -11.09911060333252
    4. ']>=' → logprob: -11.34911060333252
    5. ')' → logprob: -12.72411060333252
    6. '   ' → logprob: -13.34911060333252
    7. ' ' → logprob: -13.72411060333252
    8. '>' → logprob: -14.84911060333252
    9. '≥' → logprob: -14.97411060333252
    10. '```' → logprob: -15.72411060333252

Token 496: ' threshold' (ID: 24313)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.1602243334054947
    2. ' threshold' → logprob: -1.9102243185043335
    3. '       ' → logprob: -17.16022491455078
    4. '.threshold' → logprob: -17.78522491455078
    5. '_threshold' → logprob: -18.66022491455078
    6. '   ' → logprob: -18.66022491455078
    7. 'th' → logprob: -19.03522491455078
    8. 'thr' → logprob: -19.41022491455078
    9. 'Threshold' → logprob: -19.78522491455078
    10. ' ' → logprob: -19.78522491455078

Token 497: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.0022314980160444975
    2. 'height' → logprob: -6.252231597900391
    3. ' height' → logprob: -9.00223159790039
    4. '_floor' → logprob: -9.00223159790039
    5. '       ' → logprob: -10.87723159790039
    6. 'floor' → logprob: -11.50223159790039
    7. 'Height' → logprob: -11.87723159790039
    8. '   ' → logprob: -12.12723159790039
    9. '
' → logprob: -12.25223159790039
    10. '_HEIGHT' → logprob: -13.25223159790039

Token 498: ' =>' (ID: 871)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6713652014732361
    2. '       ' → logprob: -0.7963652014732361
    3. '<|end|>' → logprob: -4.296365261077881
    4. ',' → logprob: -4.796365261077881
    5. '        
' → logprob: -5.671365261077881
    6. '<|end|>' → logprob: -6.046365261077881
    7. ' for' → logprob: -6.546365261077881
    8. '\n' → logprob: -6.921365261077881
    9. 'n' → logprob: -6.921365261077881
    10. 'floor' → logprob: -6.921365261077881

Token 499: ' N' (ID: 478)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.859228789806366
    2. ' math' → logprob: -1.7342288494110107
    3. ' (' → logprob: -1.8592288494110107
    4. 'math' → logprob: -2.1092288494110107
    5. '(' → logprob: -3.6092288494110107
    6. ' ' → logprob: -3.8592288494110107
    7. '       ' → logprob: -4.109228610992432
    8. '(math' → logprob: -4.234228610992432
    9. ' N' → logprob: -4.359228610992432
    10. 'N' → logprob: -4.859228610992432

Token 500: ' >=' (ID: 5064)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25329360365867615
    2. '=' → logprob: -1.5032936334609985
    3. ' >=' → logprob: -7.003293514251709
    4. '>=' → logprob: -7.878293514251709
    5. 'import' → logprob: -9.753293991088867
    6. '=int' → logprob: -11.378293991088867
    7. ' math' → logprob: -13.378293991088867
    8. ' ' → logprob: -13.753293991088867
    9. ':' → logprob: -14.128293991088867
    10. '≥' → logprob: -14.128293991088867

Token 501: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4025813639163971
    2. '(th' → logprob: -1.1525813341140747
    3. 'threshold' → logprob: -4.777581214904785
    4. '(math' → logprob: -5.402581214904785
    5. '(' → logprob: -7.402581214904785
    6. 'math' → logprob: -7.527581214904785
    7. ' threshold' → logprob: -7.652581214904785
    8. ' math' → logprob: -7.902581214904785
    9. '(self' → logprob: -8.027581214904785
    10. '(int' → logprob: -9.152581214904785

Token 502: 'threshold' (ID: 67677)
  Prédit: 'threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.0007983117830008268
    2. ' threshold' → logprob: -7.625798225402832
    3. '(th' → logprob: -8.125798225402832
    4. ' (' → logprob: -11.625798225402832
    5. 'th' → logprob: -12.625798225402832
    6. 'thr' → logprob: -13.250798225402832
    7. '(' → logprob: -15.625798225402832
    8. '_threshold' → logprob: -15.625798225402832
    9. '.threshold' → logprob: -16.75079917907715
    10. 'reshold' → logprob: -17.00079917907715

Token 503: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -5.931863051955588e-05
    2. '_he' → logprob: -10.375059127807617
    3. '_floor' → logprob: -10.875059127807617
    4. 'height' → logprob: -12.375059127807617
    5. '_' → logprob: -13.250059127807617
    6. '
' → logprob: -13.875059127807617
    7. ' _' → logprob: -14.625059127807617
    8. '   ' → logprob: -15.000059127807617
    9. '```' → logprob: -15.250059127807617
    10. 'he' → logprob: -15.875059127807617

Token 504: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.029833100736141205
    2. '+' → logprob: -3.5298330783843994
    3. ' ' → logprob: -10.02983283996582
    4. ' /' → logprob: -10.52983283996582
    5. '/' → logprob: -11.77983283996582
    6. ')' → logprob: -13.77983283996582
    7. '   ' → logprob: -14.15483283996582
    8. '       ' → logprob: -14.52983283996582
    9. '<|end|>' → logprob: -15.15483283996582
    10. '    ' → logprob: -15.27983283996582

Token 505: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0017023178515955806
    2. ' ' → logprob: -6.376702308654785
    3. '   ' → logprob: -17.1267032623291
    4. '```' → logprob: -17.2517032623291
    5. ' five' → logprob: -17.5017032623291
    6. '۵' → logprob: -19.6267032623291
    7. '  ' → logprob: -19.6267032623291
    8. '`' → logprob: -19.9392032623291
    9. '    ' → logprob: -20.2517032623291
    10. ' cinco' → logprob: -20.5642032623291

Token 506: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. ' five' → logprob: -18.125001907348633
    4. '۵' → logprob: -18.125001907348633
    5. '```' → logprob: -18.875001907348633
    6. '৫' → logprob: -19.125001907348633
    7. 'five' → logprob: -19.125001907348633
    8. '５' → logprob: -19.250001907348633
    9. '५' → logprob: -19.375001907348633
    10. '   ' → logprob: -19.500001907348633

Token 507: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016653041820973158
    2. ')/' → logprob: -6.501665115356445
    3. ' )' → logprob: -8.751665115356445
    4. '   ' → logprob: -13.001665115356445
    5. '       ' → logprob: -14.376665115356445
    6. ')
' → logprob: -14.626665115356445
    7. '")' → logprob: -15.126665115356445
    8. '```' → logprob: -15.126665115356445
    9. '`)' → logprob: -15.251665115356445
    10. '')' → logprob: -15.751665115356445

Token 508: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -15.37500286102295
    4. '```' → logprob: -18.000001907348633
    5. '۵' → logprob: -18.375001907348633
    6. '  ' → logprob: -20.000001907348633
    7. '٥' → logprob: -20.250001907348633
    8. '    ' → logprob: -20.625001907348633
    9. '
' → logprob: -20.750001907348633
    10. '５' → logprob: -20.875001907348633

Token 509: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07912584394216537
    2. '       ' → logprob: -2.7041258811950684
    3. '\n' → logprob: -4.954125881195068
    4. '<|end|>' → logprob: -7.579125881195068
    5. '        
' → logprob: -7.704125881195068
    6. '
' → logprob: -7.829125881195068
    7. '  
' → logprob: -9.07912540435791
    8. '<|end|>' → logprob: -9.07912540435791
    9. ',' → logprob: -9.32912540435791
    10. '\' → logprob: -9.45412540435791

Token 510: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018077615823131055
    2. '
' → logprob: -9.000181198120117
    3. '        
' → logprob: -10.875181198120117
    4. 'import' → logprob: -11.125181198120117
    5. 'n' → logprob: -11.125181198120117
    6. '```' → logprob: -12.000181198120117
    7. 'return' → logprob: -14.125181198120117
    8. ',' → logprob: -14.500181198120117
    9. '           ' → logprob: -14.875181198120117
    10. '   ' → logprob: -15.500181198120117

Token 511: ' floor' (ID: 8350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10838473588228226
    2. 'n' → logprob: -2.608384847640991
    3. 'import' → logprob: -4.858384609222412
    4. 'floor' (adapté à ' floor') → logprob: -4.983384609222412
    5. 'min' → logprob: -5.608384609222412
    6. 'ceil' → logprob: -6.358384609222412
    7. '```' → logprob: -6.733384609222412
    8. 'return' → logprob: -6.858384609222412
    9. ' min' → logprob: -6.858384609222412
    10. 'int' → logprob: -7.233384609222412

Token 512: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028004121035337448
    2. '=' → logprob: -4.153004169464111
    3. '_number' → logprob: -5.278004169464111
    4. '_' → logprob: -5.528004169464111
    5. '_num' → logprob: -6.403004169464111
    6. '_to' → logprob: -8.278003692626953
    7. '_min' → logprob: -8.528003692626953
    8. '_required' → logprob: -8.528003692626953
    9. '_candidate' → logprob: -8.528003692626953
    10. '_needed' → logprob: -8.903003692626953

Token 513: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6941489577293396
    2. 'math' → logprob: -0.6941489577293396
    3. 'int' → logprob: -7.319149017333984
    4. ' int' → logprob: -8.069149017333984
    5. 'max' → logprob: -11.569149017333984
    6. '   ' → logprob: -12.069149017333984
    7. '(math' → logprob: -12.569149017333984
    8. ' max' → logprob: -12.694149017333984
    9. ' ' → logprob: -12.694149017333984
    10. ' ' → logprob: -15.444149017333984

Token 514: '.ceil' (ID: 60295)
  Prédit: '.ceil'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ceil' → logprob: -0.0002610974188428372
    2. '.' → logprob: -8.375261306762695
    3. 'ceil' → logprob: -10.500261306762695
    4. '.floor' → logprob: -13.750261306762695
    5. ' ceil' → logprob: -14.250261306762695
    6. '.ce' → logprob: -14.500261306762695
    7. 'import' → logprob: -14.750261306762695
    8. '```' → logprob: -15.125261306762695
    9. '.c' → logprob: -17.000261306762695
    10. ' .' → logprob: -17.375261306762695

Token 515: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.500001907348633
    3. '(th' → logprob: -15.250001907348633
    4. '(
' → logprob: -15.375001907348633
    5. '   ' → logprob: -15.625001907348633
    6. ' ((' → logprob: -17.250001907348633
    7. '[(' → logprob: -18.375001907348633
    8. '	' → logprob: -18.625001907348633
    9. '(((' → logprob: -18.875001907348633
    10. '  ' → logprob: -19.375001907348633

Token 516: 'threshold' (ID: 67677)
  Prédit: 'threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.00015920029545668513
    2. ' threshold' → logprob: -8.75015926361084
    3. '   ' → logprob: -14.37515926361084
    4. '           ' → logprob: -16.875158309936523
    5. '       ' → logprob: -17.375158309936523
    6. '               ' → logprob: -19.125158309936523
    7. 'th' → logprob: -19.375158309936523
    8. '_threshold' → logprob: -20.125158309936523
    9. ' ' → logprob: -20.125158309936523
    10. '.threshold' → logprob: -20.250158309936523

Token 517: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -4.60414821645827e-06
    2. 'height' → logprob: -12.625004768371582
    3. '_threshold' → logprob: -14.250004768371582
    4. 't' → logprob: -16.000003814697266
    5. 'e' → logprob: -16.500003814697266
    6. '_HEIGHT' → logprob: -16.625003814697266
    7. '_floor' → logprob: -16.625003814697266
    8. '```' → logprob: -16.625003814697266
    9. '_' → logprob: -16.750003814697266
    10. 's' → logprob: -16.750003814697266

Token 518: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.008614808320999146
    2. '+' → logprob: -4.758615016937256
    3. ' ' → logprob: -15.633614540100098
    4. ' +
' → logprob: -16.758615493774414
    5. '   ' → logprob: -17.258615493774414
    6. ' ' → logprob: -17.633615493774414
    7. ')' → logprob: -19.133615493774414
    8. '+
' → logprob: -19.258615493774414
    9. '    ' → logprob: -19.633615493774414
    10. '  ' → logprob: -19.633615493774414

Token 519: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4740782678127289
    2. '5' → logprob: -0.9740782976150513
    3. ' ' → logprob: -14.599078178405762
    4. '   ' → logprob: -15.599078178405762
    5. '    ' → logprob: -16.036579132080078
    6. ')' → logprob: -16.099079132080078
    7. '```' → logprob: -16.224079132080078
    8. ' five' → logprob: -16.661579132080078
    9. '  ' → logprob: -16.786579132080078
    10. '`' → logprob: -16.849079132080078

Token 520: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00029613598599098623
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -17.000295639038086
    4. '```' → logprob: -17.750295639038086
    5. '  ' → logprob: -19.125295639038086
    6. ' five' → logprob: -20.000295639038086
    7. '۵' → logprob: -20.062795639038086
    8. '    ' → logprob: -20.125295639038086
    9. ')' → logprob: -20.187795639038086
    10. '`' → logprob: -20.312795639038086

Token 521: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00320563861168921
    2. ')/' → logprob: -5.7532057762146
    3. ' )' → logprob: -10.503205299377441
    4. '   ' → logprob: -15.253205299377441
    5. ')
' → logprob: -16.253206253051758
    6. ')/(' → logprob: -16.753206253051758
    7. '）' → logprob: -17.253206253051758
    8. '/' → logprob: -17.253206253051758
    9. '`)' → logprob: -17.628206253051758
    10. '```' → logprob: -18.128206253051758

Token 522: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.6292167901992798
    2. ')' → logprob: -1.1292167901992798
    3. ' /' → logprob: -2.0042166709899902
    4. ')/' → logprob: -4.75421667098999
    5. '   ' → logprob: -9.004217147827148
    6. ' )' → logprob: -9.004217147827148
    7. '/
' → logprob: -10.504217147827148
    8. '```' → logprob: -11.254217147827148
    9. '/)' → logprob: -11.629217147827148
    10. '
' → logprob: -12.629217147827148

Token 523: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0005533903022296727
    2. ' ' → logprob: -7.500553607940674
    3. '   ' → logprob: -15.500553131103516
    4. '```' → logprob: -16.500553131103516
    5. '۵' → logprob: -17.375553131103516
    6. '  ' → logprob: -17.750553131103516
    7. ' ' → logprob: -17.875553131103516
    8. '٥' → logprob: -18.125553131103516
    9. '５' → logprob: -18.625553131103516
    10. '`' → logprob: -19.063053131103516

Token 524: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -19.0
    4. '   ' → logprob: -19.75
    5. '۵' → logprob: -20.0
    6. '５' → logprob: -21.125
    7. '٥' → logprob: -21.125
    8. '
' → logprob: -21.75
    9. '५' → logprob: -22.625
    10. 'five' → logprob: -22.625

Token 525: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.250000953674316
    3. ' )' → logprob: -15.625000953674316
    4. '       ' → logprob: -18.625
    5. '))' → logprob: -18.875
    6. '   ' → logprob: -19.125
    7. ')
' → logprob: -19.625
    8. ')return' → logprob: -19.75
    9. ')`' → logprob: -19.875
    10. '),' → logprob: -19.875

Token 526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25579431653022766
    2. 'return' → logprob: -1.5057942867279053
    3. ' return' → logprob: -5.755794525146484
    4. 'if' → logprob: -7.505794525146484
    5. ' if' → logprob: -9.255794525146484
    6. '```' → logprob: -11.255794525146484
    7. '<|end|>' → logprob: -11.380794525146484
    8. '   ' → logprob: -11.505794525146484
    9. '	return' → logprob: -11.755794525146484
    10. ':return' → logprob: -13.255794525146484

Token 527: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.014693068340420723
    2. 'if' → logprob: -4.264693260192871
    3. '       ' → logprob: -8.264693260192871
    4. ' return' → logprob: -8.264693260192871
    5. ' if' → logprob: -11.139693260192871
    6. 'while' → logprob: -17.139692306518555
    7. '	return' → logprob: -17.514692306518555
    8. '   ' → logprob: -18.639692306518555
    9. '{return' → logprob: -18.764692306518555
    10. '#' (adapté à ' #') → logprob: -18.889692306518555

Token 528: ' Floor' (ID: 25610)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01817498914897442
    2. 'if' → logprob: -4.01817512512207
    3. '       ' → logprob: -11.26817512512207
    4. ' return' → logprob: -11.39317512512207
    5. ' if' → logprob: -13.89317512512207
    6. 'while' → logprob: -16.64317512512207
    7. '#' → logprob: -17.01817512512207
    8. '   ' → logprob: -18.89317512512207
    9. '{return' → logprob: -19.01817512512207
    10. '```' → logprob: -19.01817512512207

Token 529: ' number' (ID: 2086)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0973079651594162
    2. ' =' → logprob: -2.4723079204559326
    3. 'if' → logprob: -5.222308158874512
    4. 'return' → logprob: -7.097308158874512
    5. '>=' → logprob: -7.222308158874512
    6. '<|end|>' → logprob: -7.347308158874512
    7. ' if' → logprob: -7.722308158874512
    8. '+=' → logprob: -9.472308158874512
    9. 'floor' → logprob: -9.722308158874512
    10. '       ' → logprob: -10.597308158874512

Token 530: ' must' (ID: 2804)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4633735716342926
    2. 'if' → logprob: -1.4633735418319702
    3. ' =' → logprob: -2.4633736610412598
    4. 'return' → logprob: -3.5883736610412598
    5. ' if' → logprob: -4.33837366104126
    6. '>=' → logprob: -4.96337366104126
    7. '<|end|>' → logprob: -5.58837366104126
    8. '       ' → logprob: -6.58837366104126
    9. '<=' → logprob: -7.71337366104126
    10. ' return' → logprob: -8.338373184204102

Token 531: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.006848927121609449
    2. 'be' → logprob: -5.0068488121032715
    3. '>' → logprob: -9.63184928894043
    4. '>=' → logprob: -10.25684928894043
    5. 'not' → logprob: -11.00684928894043
    6. ' not' → logprob: -11.38184928894043
    7. ' >=' → logprob: -12.88184928894043
    8. ' >' → logprob: -14.13184928894043
    9. '	be' → logprob: -14.50684928894043
    10. '_be' → logprob: -15.25684928894043

Token 532: ' positive' (ID: 8841)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.8957098722457886
    2. '>=' → logprob: -1.1457098722457886
    3. '1' → logprob: -1.6457098722457886
    4. ' at' → logprob: -3.270709991455078
    5. 'max' → logprob: -3.270709991455078
    6. '>' → logprob: -6.020709991455078
    7. 'greater' → logprob: -6.270709991455078
    8. ' >=' → logprob: -8.645709991455078
    9. ' max' → logprob: -9.145709991455078
    10. 'positive' → logprob: -9.520709991455078

Token 533: ' integer' (ID: 16336)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.048176322132349014
    2. 'if' → logprob: -3.2981762886047363
    3. '       ' → logprob: -4.923176288604736
    4. ' and' → logprob: -6.298176288604736
    5. '<|end|>' → logprob: -7.173176288604736
    6. ',' → logprob: -9.423176765441895
    7. '
' → logprob: -9.673176765441895
    8. ' or' → logprob: -10.798176765441895
    9. 'and' → logprob: -11.048176765441895
    10. '.' → logprob: -11.923176765441895

Token 534: ';' (ID: 26)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.44690388441085815
    2. '       ' → logprob: -1.196903944015503
    3. '
' → logprob: -3.196903944015503
    4. 'if' → logprob: -4.571903705596924
    5. '<|end|>' → logprob: -5.696903705596924
    6. ' and' → logprob: -5.946903705596924
    7. ' or' → logprob: -7.696903705596924
    8. ',' → logprob: -8.571904182434082
    9. '.' → logprob: -8.821904182434082
    10. ':' → logprob: -10.196904182434082

Token 535: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8090707659721375
    2. ' if' → logprob: -1.0590708255767822
    3. 'return' → logprob: -2.0590708255767822
    4. ' return' → logprob: -2.5590708255767822
    5. '       ' → logprob: -5.809070587158203
    6. ' floor' → logprob: -14.809070587158203
    7. 'floor' → logprob: -15.559070587158203
    8. '        
' → logprob: -16.184070587158203
    9. '```' → logprob: -16.309070587158203
    10. 'while' → logprob: -16.434070587158203

Token 536: ' result' (ID: 1534)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.1602245420217514
    2. ' floor' → logprob: -1.9102245569229126
    3. 'flo' → logprob: -15.660224914550781
    4. '_floor' → logprob: -16.53522491455078
    5. 'f' → logprob: -18.41022491455078
    6. 'Floor' → logprob: -19.41022491455078
    7. '.floor' → logprob: -19.91022491455078
    8. ' ' → logprob: -20.41022491455078
    9. '   ' → logprob: -21.28522491455078
    10. '<' → logprob: -21.41022491455078

Token 537: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6972141265869141
    2. ' <' → logprob: -0.6972141265869141
    3. ' <=' → logprob: -5.822214126586914
    4. '<=' → logprob: -6.822214126586914
    5. '<int' → logprob: -13.197214126586914
    6. '<|end|>' → logprob: -13.197214126586914
    7. '<f' → logprob: -13.822214126586914
    8. 'floor' → logprob: -14.322214126586914
    9. '<class' → logprob: -14.822214126586914
    10. '<size' → logprob: -15.072214126586914

Token 538: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002615966834127903
    2. ' ' → logprob: -6.127615928649902
    3. '=' → logprob: -7.752615928649902
    4. ' =' → logprob: -14.127615928649902
    5. '   ' → logprob: -15.252615928649902
    6. '0' → logprob: -15.877615928649902
    7. '```' → logprob: -16.50261688232422
    8. 'floor' → logprob: -17.75261688232422
    9. '2' → logprob: -18.12761688232422
    10. '<=' → logprob: -18.62761688232422

Token 539: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003407071635592729
    2. '=' → logprob: -8.000340461730957
    3. ' ' → logprob: -12.375340461730957
    4. 'floor' → logprob: -14.625340461730957
    5. '0' → logprob: -15.625340461730957
    6. ' =' → logprob: -16.250341415405273
    7. '```' → logprob: -16.250341415405273
    8. '2' → logprob: -16.250341415405273
    9. '   ' → logprob: -16.875341415405273
    10. '<=' → logprob: -18.187841415405273

Token 540: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3886105716228485
    2. ':
' → logprob: -1.138610601425171
    3. ',' → logprob: -6.888610363006592
    4. ':return' → logprob: -7.638610363006592
    5. '       ' → logprob: -8.63861083984375
    6. '           ' → logprob: -10.88861083984375
    7. '   ' → logprob: -11.38861083984375
    8. 'return' → logprob: -12.26361083984375
    9. 'floor' → logprob: -12.26361083984375
    10. ' or' → logprob: -12.51361083984375

Token 541: ' return' (ID: 622)
  Prédit: ' floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' floor' → logprob: -0.7012748718261719
    2. ' return' → logprob: -1.4512748718261719
    3. 'return' → logprob: -1.7012748718261719
    4. 'floor' → logprob: -2.451274871826172
    5. '       ' → logprob: -6.826274871826172
    6. '_floor' → logprob: -11.076274871826172
    7. '           ' → logprob: -11.326274871826172
    8. '   ' → logprob: -11.826274871826172
    9. '.floor' → logprob: -11.826274871826172
    10. '	return' → logprob: -12.701274871826172

Token 542: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029048321768641472
    2. ' ' → logprob: -3.904048204421997
    3. 'None' → logprob: -5.404048442840576
    4. ' None' → logprob: -5.529048442840576
    5. '   ' → logprob: -14.029047966003418
    6. '(None' → logprob: -15.279047966003418
    7. '0' → logprob: -15.279047966003418
    8. '=None' → logprob: -15.654047966003418
    9. '```' → logprob: -15.779047966003418
    10. '
' → logprob: -16.029048919677734

Token 543: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00523612555116415
    2. 'None' → logprob: -5.2552361488342285
    3. ' None' → logprob: -13.25523567199707
    4. '0' → logprob: -15.13023567199707
    5. ' ' → logprob: -15.88023567199707
    6. '```' → logprob: -16.13023567199707
    7. '(None' → logprob: -17.13023567199707
    8. 'none' → logprob: -17.25523567199707
    9. '=None' → logprob: -17.75523567199707
    10. '`' → logprob: -17.88023567199707

Token 544: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4083518087863922
    2. '
' → logprob: -1.1583517789840698
    3. 'if' → logprob: -3.9083518981933594
    4. '       ' → logprob: -7.033351898193359
    5. ' or' → logprob: -8.90835189819336
    6. '        
' → logprob: -10.28335189819336
    7. '
' → logprob: -10.40835189819336
    8. '  
' → logprob: -10.40835189819336
    9. 'return' → logprob: -11.15835189819336
    10. '	if' → logprob: -11.40835189819336

Token 545: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025544915348291397
    2. ' if' → logprob: -3.7755448818206787
    3. 'if' → logprob: -6.275545120239258
    4. '
' → logprob: -8.400545120239258
    5. 'return' → logprob: -9.525545120239258
    6. '        
' → logprob: -10.525545120239258
    7. '	' → logprob: -10.650545120239258
    8. '	if' → logprob: -10.900545120239258
    9. ' return' → logprob: -11.025545120239258
    10. '<|end|>' → logprob: -11.150545120239258

Token 546: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.28165489435195923
    2. 'return' (adapté à ' return') → logprob: -1.5316548347473145
    3. ' if' → logprob: -4.0316548347473145
    4. '       ' → logprob: -4.5316548347473145
    5. ' return' → logprob: -7.1566548347473145
    6. '	if' → logprob: -14.906655311584473
    7. '	return' → logprob: -15.406655311584473
    8. ':return' → logprob: -16.406654357910156
    9. 'If' → logprob: -17.031654357910156
    10. '{return' → logprob: -17.031654357910156

Token 547: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3904692828655243
    2. 'max' → logprob: -1.2654693126678467
    3. ' floor' → logprob: -4.015469074249268
    4. 'floor' → logprob: -4.265469074249268
    5. '1' → logprob: -4.765469074249268
    6. ' ' → logprob: -7.515469074249268
    7. '   ' → logprob: -12.515469551086426
    8. '	max' → logprob: -13.015469551086426
    9. '(max' → logprob: -13.515469551086426
    10. 'min' → logprob: -14.015469551086426

Token 548: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015035520773380995
    2. '(f' → logprob: -6.5015034675598145
    3. '1' → logprob: -13.876503944396973
    4. 'floor' → logprob: -15.251503944396973
    5. ' (' → logprob: -18.501502990722656
    6. '(
' → logprob: -19.126502990722656
    7. ' floor' → logprob: -20.626502990722656
    8. '_floor' → logprob: -20.626502990722656
    9. 'f' → logprob: -20.751502990722656
    10. '(F' → logprob: -21.251502990722656

Token 549: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.00043472214019857347
    2. '1' → logprob: -8.500434875488281
    3. 'oor' → logprob: -8.625434875488281
    4. 'or' → logprob: -10.250434875488281
    5. 'floor' → logprob: -11.625434875488281
    6. 'lor' → logprob: -12.875434875488281
    7. '(' → logprob: -13.000434875488281
    8. 'lo' → logprob: -14.125434875488281
    9. '[' → logprob: -14.250434875488281
    10. 'l' → logprob: -15.500434875488281

Token 550: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9266199160483666e-05
    2. '1' → logprob: -11.125019073486328
    3. ' ,' → logprob: -12.375019073486328
    4. ')' → logprob: -16.125019073486328
    5. '<|end|>' → logprob: -16.375019073486328
    6. '(' → logprob: -17.750019073486328
    7. ',
' → logprob: -18.500019073486328
    8. ' ' → logprob: -19.125019073486328
    9. '   ' → logprob: -20.125019073486328
    10. '0' → logprob: -21.125019073486328

Token 551: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -17.750003814697266
    4. '```' → logprob: -20.000003814697266
    5. ')' → logprob: -20.625003814697266
    6. '0' → logprob: -21.437503814697266
    7. '  ' → logprob: -21.875003814697266
    8. '
' → logprob: -22.125003814697266
    9. '۱' → logprob: -22.187503814697266
    10. '１' → logprob: -22.500003814697266

Token 552: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -19.875
    4. '   ' → logprob: -20.125
    5. ')' → logprob: -21.25
    6. '0' → logprob: -21.5
    7. '۱' → logprob: -22.625
    8. '=' → logprob: -22.75
    9. '2' → logprob: -23.0625
    10. '' → logprob: -23.1875

Token 553: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00030674142180942
    2. '<|end|>' → logprob: -8.125307083129883
    3. ')
' → logprob: -11.750307083129883
    4. '}' → logprob: -14.000307083129883
    5. '```' → logprob: -14.750307083129883
    6. ')return' → logprob: -14.750307083129883
    7. '<|end|>' → logprob: -15.125307083129883
    8. ' )' → logprob: -15.500307083129883
    9. '       ' → logprob: -15.625307083129883
    10. '   ' → logprob: -15.625307083129883

Token 554: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 555: ' Input' (ID: 10090)
  Prédit: 'Ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Ball' → logprob: -0.5997039675712585
    2. 'Floor' → logprob: -2.3497040271759033
    3. 'Cr' → logprob: -2.9747040271759033
    4. 'Physics' → logprob: -3.0997040271759033
    5. 'Impact' → logprob: -3.3497040271759033
    6. ' Ball' → logprob: -3.4747040271759033
    7. 'Input' → logprob: -3.7247040271759033
    8. 'Drop' → logprob: -3.7247040271759033
    9. 'Test' → logprob: -4.099703788757324
    10. 'Velocity' → logprob: -4.099703788757324

Token 556: 'Processor' (ID: 22334)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.41813480854034424
    2. 'Handler' → logprob: -1.4181348085403442
    3. 'Processor' → logprob: -3.0431346893310547
    4. 'Parser' → logprob: -3.0431346893310547
    5. 'Iterator' → logprob: -6.668134689331055
    6. 'Provider' → logprob: -6.793134689331055
    7. 'Data' → logprob: -7.293134689331055
    8. 'Output' → logprob: -8.043134689331055
    9. 'Validator' → logprob: -8.418134689331055
    10. 'Generator' → logprob: -8.418134689331055

Token 557: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016337241686414927
    2. ':
' → logprob: -8.750163078308105
    3. ':

' → logprob: -13.875163078308105
    4. '(' → logprob: -14.000163078308105
    5. ':def' → logprob: -14.250163078308105
    6. '<|end|>' → logprob: -14.250163078308105
    7. ' :' → logprob: -14.750163078308105
    8. '):' → logprob: -14.750163078308105
    9. ':**' → logprob: -15.250163078308105
    10. '```' → logprob: -15.875163078308105

Token 558: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06701751053333282
    2. ' def' → logprob: -3.3170175552368164
    3. 'def' → logprob: -3.5670175552368164
    4. 'class' → logprob: -8.192017555236816
    5. '	def' → logprob: -10.942017555236816
    6. '```' → logprob: -10.942017555236816
    7. ' class' → logprob: -12.442017555236816
    8. '   ' → logprob: -13.567017555236816
    9. ' ' → logprob: -14.317017555236816
    10. 'import' → logprob: -14.817017555236816

Token 559: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005309181287884712
    2. ' def' → logprob: -5.255309104919434
    3. '@' → logprob: -9.630309104919434
    4. '   ' → logprob: -11.630309104919434
    5. 'class' → logprob: -14.380309104919434
    6. '	def' → logprob: -16.38031005859375
    7. ' @' → logprob: -16.50531005859375
    8. '```' → logprob: -17.00531005859375
    9. 'import' → logprob: -17.88031005859375
    10. '@dat' → logprob: -18.25531005859375

Token 560: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.04435916990041733
    2. 'def' → logprob: -3.2943592071533203
    3. '__' → logprob: -5.66935920715332
    4. ' __' → logprob: -6.66935920715332
    5. 'it' → logprob: -7.41935920715332
    6. 'nit' → logprob: -7.79435920715332
    7. 'iter' → logprob: -8.54435920715332
    8. ' def' → logprob: -8.91935920715332
    9. '_init' → logprob: -9.04435920715332
    10. 'int' → logprob: -9.91935920715332

Token 561: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.04573880881071091
    2. 'it' → logprob: -3.170738697052002
    3. 'nit' → logprob: -6.295738697052002
    4. 'iter' → logprob: -7.545738697052002
    5. 'int' → logprob: -8.29573917388916
    6. '```' → logprob: -9.92073917388916
    7. 'new' → logprob: -10.67073917388916
    8. 'in' → logprob: -11.54573917388916
    9. '``' → logprob: -12.42073917388916
    10. 'None' → logprob: -12.42073917388916

Token 562: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.008582662791013718
    2. '(self' → logprob: -5.008582592010498
    3. '(' → logprob: -7.133582592010498
    4. '__(
' → logprob: -7.258582592010498
    5. '__' → logprob: -8.008583068847656
    6. '_(' → logprob: -12.258583068847656
    7. '<>(' → logprob: -12.258583068847656
    8. 'self' → logprob: -12.508583068847656
    9. ')(' → logprob: -12.633583068847656
    10. ' (' → logprob: -12.758583068847656

Token 563: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.980854959692806e-05
    2. ')' → logprob: -9.750069618225098
    3. ' self' → logprob: -11.625069618225098
    4. '
' → logprob: -13.750069618225098
    5. '   ' → logprob: -13.875069618225098
    6. '(self' → logprob: -15.750069618225098
    7. '):
' → logprob: -16.000070571899414
    8. '	self' → logprob: -16.250070571899414
    9. '  ' → logprob: -17.125070571899414
    10. 'sel' → logprob: -17.250070571899414

Token 564: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7639512419700623
    2. 'self' → logprob: -0.8889512419700623
    3. '(self' → logprob: -2.388951301574707
    4. '   ' → logprob: -4.513951301574707
    5. '):' → logprob: -4.513951301574707
    6. ')' → logprob: -5.763951301574707
    7. '       ' → logprob: -6.013951301574707
    8. '):
' → logprob: -6.513951301574707
    9. ' self' → logprob: -6.763951301574707
    10. ' (' → logprob: -7.888951301574707

Token 565: ' crack' (ID: 29931)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7718367576599121
    2. 'physics' → logprob: -1.271836757659912
    3. 'lines' → logprob: -2.271836757659912
    4. ')' → logprob: -2.521836757659912
    5. 'sys' → logprob: -3.521836757659912
    6. ' lines' → logprob: -4.771836757659912
    7. 'cr' → logprob: -5.146836757659912
    8. ' input' → logprob: -5.271836757659912
    9. ' physics' → logprob: -5.396836757659912
    10. 'inputs' → logprob: -5.396836757659912

Token 566: '_handler' (ID: 23758)
  Prédit: '_velocity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_velocity' → logprob: -6.611323624383658e-05
    2. 'velocity' → logprob: -10.250065803527832
    3. '_vel' → logprob: -11.125065803527832
    4. 'Velocity' → logprob: -12.000065803527832
    5. '_' → logprob: -12.875065803527832
    6. '_threshold' → logprob: -13.375065803527832
    7. ' velocity' → logprob: -13.500065803527832
    8. '   ' → logprob: -13.500065803527832
    9. '_speed' → logprob: -14.750065803527832
    10. '_input' → logprob: -14.750065803527832

Token 567: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04759940505027771
    2. ',' → logprob: -3.5475993156433105
    3. '):' → logprob: -4.1725993156433105
    4. '=' → logprob: -6.5475993156433105
    5. '=None' → logprob: -7.7975993156433105
    6. ')' → logprob: -8.172599792480469
    7. '):
' → logprob: -9.547599792480469
    8. '   ' → logprob: -11.172599792480469
    9. ' :' → logprob: -11.297599792480469
    10. '<|end|>' → logprob: -11.797599792480469

Token 568: ' Crack' (ID: 70002)
  Prédit: 'Cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cr' → logprob: -5.9153885558771435e-06
    2. ' Crack' → logprob: -13.000005722045898
    3. ')' → logprob: -13.250005722045898
    4. 'Crash' → logprob: -14.250005722045898
    5. '   ' → logprob: -15.125005722045898
    6. ' Cr' → logprob: -15.625005722045898
    7. 'cr' → logprob: -16.1250057220459
    8. ''' → logprob: -16.1250057220459
    9. '
' → logprob: -16.2500057220459
    10. 'Optional' → logprob: -16.7500057220459

Token 569: 'Velocity' (ID: 34616)
  Prédit: 'Velocity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Velocity' → logprob: -3.531315314830863e-06
    2. 'Vel' → logprob: -13.500003814697266
    3. '_velocity' → logprob: -13.500003814697266
    4. ' Velocity' → logprob: -15.125003814697266
    5. 'velocity' → logprob: -15.250003814697266
    6. ' velocity' → logprob: -16.625003814697266
    7. 'Handler' → logprob: -17.250003814697266
    8. 'Voltage' → logprob: -19.750003814697266
    9. '```' → logprob: -19.875003814697266
    10. '   ' → logprob: -20.250003814697266

Token 570: 'Determ' (ID: 130588)
  Prédit: 'Determ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Determ' → logprob: -1.9361264946837764e-07
    2. ')' → logprob: -17.125
    3. 'D' → logprob: -17.5
    4. 'Handler' → logprob: -17.625
    5. ' Determ' → logprob: -18.0
    6. 'determ' → logprob: -18.0
    7. '   ' → logprob: -18.5
    8. ' determ' → logprob: -19.125
    9. ' ' → logprob: -19.75
    10. 'Det' → logprob: -19.875

Token 571: 'iner' (ID: 6010)
  Prédit: 'iner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iner' → logprob: -0.00011272187111899257
    2. 'er' → logprob: -9.125112533569336
    3. ' iner' → logprob: -13.625112533569336
    4. 'ener' → logprob: -15.000112533569336
    5. 'mer' → logprob: -15.125112533569336
    6. 'in' → logprob: -15.250112533569336
    7. 'miner' → logprob: -15.375112533569336
    8. '{' → logprob: -15.500112533569336
    9. 'imer' → logprob: -16.125112533569336
    10. '   ' → logprob: -16.125112533569336

Token 572: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23666875064373016
    2. '):' → logprob: -1.6116687059402466
    3. ',' → logprob: -4.986668586730957
    4. '):
' → logprob: -5.486668586730957
    5. '   ' → logprob: -8.611668586730957
    6. ':' → logprob: -11.111668586730957
    7. '):
' → logprob: -11.611668586730957
    8. ' )' → logprob: -12.111668586730957
    9. '       ' → logprob: -13.111668586730957
    10. '):

' → logprob: -13.361668586730957

Token 573: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08545595407485962
    2. ':
' → logprob: -2.960455894470215
    3. '       ' → logprob: -3.960455894470215
    4. '   ' → logprob: -4.710455894470215
    5. ')' → logprob: -7.210455894470215
    6. '):
' → logprob: -8.085455894470215
    7. ',' → logprob: -8.210455894470215
    8. ' ->' → logprob: -8.460455894470215
    9. '->' → logprob: -8.710455894470215
    10. 'def' → logprob: -9.335455894470215

Token 574: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -9.615255839889869e-05
    2. ' None' → logprob: -9.250096321105957
    3. '   ' → logprob: -18.75009536743164
    4. '_None' → logprob: -18.75009536743164
    5. '(None' → logprob: -20.37509536743164
    6. '=None' → logprob: -21.12509536743164
    7. '_none' → logprob: -22.00009536743164
    8. ',None' → logprob: -22.25009536743164
    9. 'none' → logprob: -22.50009536743164
    10. 'void' → logprob: -22.62509536743164

Token 575: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06943787634372711
    2. '       ' → logprob: -2.9444379806518555
    3. ':
' → logprob: -4.3194379806518555
    4. '<|end|>' → logprob: -7.5694379806518555
    5. '   ' → logprob: -7.9444379806518555
    6. ',' → logprob: -8.819437980651855
    7. '):
' → logprob: -10.444437980651855
    8. '<|end|>' → logprob: -10.944437980651855
    9. '):' → logprob: -11.569437980651855
    10. '```' → logprob: -11.819437980651855

Token 576: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004433011345099658
    2. '   ' → logprob: -8.375443458557129
    3. 'self' → logprob: -8.625443458557129
    4. 'def' → logprob: -10.375443458557129
    5. ' self' → logprob: -13.750443458557129
    6. '	' → logprob: -14.875443458557129
    7. '	   ' → logprob: -15.625443458557129
    8. ' def' → logprob: -15.875443458557129
    9. '	self' → logprob: -15.875443458557129
    10. '```' → logprob: -16.000442504882812

Token 577: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00017469677550252527
    2. '       ' → logprob: -8.750174522399902
    3. ' self' → logprob: -11.375174522399902
    4. '   ' → logprob: -12.375174522399902
    5. 'def' → logprob: -14.875174522399902
    6. '	self' → logprob: -15.500174522399902
    7. 'import' → logprob: -18.75017547607422
    8. 'pass' → logprob: -19.12517547607422
    9. '	' → logprob: -19.37517547607422
    10. 's' → logprob: -19.87517547607422

Token 578: '.cr' (ID: 38964)
  Prédit: '.cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cr' → logprob: -0.0004909569397568703
    2. '.' → logprob: -7.625491142272949
    3. ' .' → logprob: -14.00049114227295
    4. 'cr' → logprob: -14.75049114227295
    5. '	cr' → logprob: -14.75049114227295
    6. '.CR' → logprob: -15.00049114227295
    7. '.c' → logprob: -15.50049114227295
    8. '.crm' → logprob: -15.87549114227295
    9. '.cre' → logprob: -16.375490188598633
    10. '.cod' → logprob: -16.625490188598633

Token 579: 'ack' (ID: 552)
  Prédit: 'ack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ack' → logprob: -0.00011284107313258573
    2. 'e' → logprob: -10.375112533569336
    3. 'a' → logprob: -10.750112533569336
    4. '   ' → logprob: -11.000112533569336
    5. 'ac' → logprob: -11.500112533569336
    6. '```' → logprob: -12.125112533569336
    7. '       ' → logprob: -12.375112533569336
    8. 'acks' → logprob: -12.500112533569336
    9. 'acking' → logprob: -12.500112533569336
    10. '
' → logprob: -13.750112533569336

Token 580: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -1.1756367712223437e-05
    2. 'handler' → logprob: -11.875011444091797
    3. '_velocity' → logprob: -12.375011444091797
    4. '   ' → logprob: -15.125011444091797
    5. '_handle' → logprob: -15.625011444091797
    6. 'Handler' → logprob: -17.625011444091797
    7. '_handlers' → logprob: -17.625011444091797
    8. '_HANDLER' → logprob: -18.125011444091797
    9. '	handler' → logprob: -18.625011444091797
    10. '       ' → logprob: -18.875011444091797

Token 581: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03365457430481911
    2. ' =' → logprob: -3.4086546897888184
    3. '.' → logprob: -12.90865421295166
    4. '=self' → logprob: -13.03365421295166
    5. '   ' → logprob: -13.65865421295166
    6. '.cr' → logprob: -14.03365421295166
    7. '       ' → logprob: -14.28365421295166
    8. '.=' → logprob: -14.78365421295166
    9. '.py' → logprob: -16.033655166625977
    10. '    ' → logprob: -16.033655166625977

Token 582: ' crack' (ID: 29931)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.023249205201864243
    2. ' crack' → logprob: -3.7732491493225098
    3. 'cracker' → logprob: -12.773249626159668
    4. '	cr' → logprob: -15.023249626159668
    5. ' cr' → logprob: -16.52324867248535
    6. ' cracks' → logprob: -16.52324867248535
    7. ' cracking' → logprob: -16.64824867248535
    8. '_cr' → logprob: -16.64824867248535
    9. 'Cr' → logprob: -17.02324867248535
    10. 'crate' → logprob: -17.02324867248535

Token 583: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -2.463036435074173e-05
    2. 'handler' → logprob: -11.125024795532227
    3. 'Handler' → logprob: -12.125024795532227
    4. '_velocity' → logprob: -12.625024795532227
    5. 'andler' → logprob: -14.625024795532227
    6. '_handle' → logprob: -14.875024795532227
    7. '_HANDLER' → logprob: -16.125024795532227
    8. '_' → logprob: -17.125024795532227
    9. 'Velocity' → logprob: -17.375024795532227
    10. '_hand' → logprob: -17.500024795532227

Token 584: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06366563588380814
    2. 'def' → logprob: -3.4386656284332275
    3. '
' → logprob: -3.5636656284332275
    4. '    
' → logprob: -7.563665866851807
    5. '<|end|>' → logprob: -7.938665866851807
    6. ' def' → logprob: -8.063665390014648
    7. '<|end|>' → logprob: -10.938665390014648
    8. '	def' → logprob: -11.188665390014648
    9. '

' → logprob: -12.688665390014648
    10. '```' → logprob: -12.813665390014648

Token 585: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01783018559217453
    2. 'def' → logprob: -4.1428303718566895
    3. '
' → logprob: -6.5178303718566895
    4. ' def' → logprob: -8.142829895019531
    5. '    
' → logprob: -11.017829895019531
    6. '	def' → logprob: -12.017829895019531
    7. '```' → logprob: -12.767829895019531
    8. '<|end|>' → logprob: -14.517829895019531
    9. '

' → logprob: -15.767829895019531
    10. '        
' → logprob: -16.26782989501953

Token 586: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.935296834039036e-06
    2. ' def' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.250003814697266
    4. '	def' → logprob: -23.875003814697266
    5. 'import' → logprob: -24.000003814697266
    6. '
' → logprob: -24.750003814697266
    7. 'class' → logprob: -24.875003814697266
    8. 'from' → logprob: -25.375003814697266
    9. ' ' → logprob: -25.625003814697266
    10. '```' → logprob: -26.250003814697266

Token 587: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.022187238559126854
    2. 'read' → logprob: -3.8971872329711914
    3. ' process' → logprob: -6.522187232971191
    4. 'run' → logprob: -9.022187232971191
    5. ' read' → logprob: -10.897187232971191
    6. 'parse' → logprob: -11.272187232971191
    7. 'get' → logprob: -11.772187232971191
    8. 'solve' → logprob: -12.647187232971191
    9. 'handle' → logprob: -13.647187232971191
    10. 'input' → logprob: -13.897187232971191

Token 588: '_stream' (ID: 29670)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06554507464170456
    2. '(' → logprob: -3.065545082092285
    3. '_input' → logprob: -4.440545082092285
    4. '_line' → logprob: -5.690545082092285
    5. '_inputs' → logprob: -7.065545082092285
    6. '_lines' → logprob: -7.940545082092285
    7. '_' → logprob: -8.565545082092285
    8. 'self' → logprob: -9.440545082092285
    9. '()' → logprob: -9.690545082092285
    10. ' (' → logprob: -11.190545082092285

Token 589: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.074907287256792e-05
    2. '(' → logprob: -9.75006103515625
    3. '(s' → logprob: -14.00006103515625
    4. ' (' → logprob: -14.00006103515625
    5. 'self' → logprob: -15.37506103515625
    6. '(stream' → logprob: -15.87506103515625
    7. '_line' → logprob: -16.12506103515625
    8. '(sel' → logprob: -16.62506103515625
    9. '(input' → logprob: -17.37506103515625
    10. '   ' → logprob: -17.50006103515625

Token 590: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023074723780155182
    2. '(self' → logprob: -3.8980746269226074
    3. 'self' → logprob: -6.523074626922607
    4. ')' → logprob: -7.023074626922607
    5. '   ' → logprob: -10.898075103759766
    6. ',self' → logprob: -10.898075103759766
    7. '):' → logprob: -11.023075103759766
    8. ')(' → logprob: -11.023075103759766
    9. ',input' → logprob: -11.023075103759766
    10. '(stream' → logprob: -11.273075103759766

Token 591: ' input' (ID: 3422)
  Prédit: 'stream'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stream' → logprob: -0.38338276743888855
    2. 'input' → logprob: -1.633382797241211
    3. 'lines' → logprob: -2.258382797241211
    4. 'self' → logprob: -4.383382797241211
    5. ' stream' → logprob: -6.258382797241211
    6. 'line' → logprob: -6.508382797241211
    7. ' lines' → logprob: -7.258382797241211
    8. 'istream' → logprob: -7.508382797241211
    9. ' input' → logprob: -7.633382797241211
    10. 'inputs' → logprob: -8.258382797241211

Token 592: '_stream' (ID: 29670)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9607225656509399
    2. '):' → logprob: -1.71072256565094
    3. ':' → logprob: -2.2107224464416504
    4. '():' → logprob: -2.3357224464416504
    5. '()' → logprob: -2.5857224464416504
    6. '_stream' → logprob: -2.9607224464416504
    7. '())' → logprob: -3.4607224464416504
    8. '_iterator' → logprob: -3.8357224464416504
    9. '_line' → logprob: -4.58572244644165
    10. '_lines' → logprob: -4.71072244644165

Token 593: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01637778989970684
    2. ')' → logprob: -4.141377925872803
    3. '):' → logprob: -8.766377449035645
    4. ' :' → logprob: -9.516377449035645
    5. '(self' → logprob: -10.516377449035645
    6. '   ' → logprob: -10.766377449035645
    7. ',' → logprob: -10.891377449035645
    8. 'self' → logprob: -11.391377449035645
    9. ' )' → logprob: -12.016377449035645
    10. '=sys' → logprob: -12.016377449035645

Token 594: ' Iterator' (ID: 41994)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.047636352479457855
    2. ' sys' → logprob: -3.2976362705230713
    3. 'Iterator' → logprob: -4.67263650894165
    4. '(sys' → logprob: -9.547636032104492
    5. ')' → logprob: -9.922636032104492
    6. ' Iterator' → logprob: -9.922636032104492
    7. 'iter' → logprob: -10.797636032104492
    8. '=sys' → logprob: -12.547636032104492
    9. 'Iterable' → logprob: -12.797636032104492
    10. '	sys' → logprob: -13.172636032104492

Token 595: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.0012276082998141646
    2. '[int' → logprob: -6.751227378845215
    3. '[' → logprob: -10.126227378845215
    4. ')' → logprob: -11.001227378845215
    5. '):' → logprob: -15.626227378845215
    6. '[[' → logprob: -15.876227378845215
    7. '):
' → logprob: -16.00122833251953
    8. '
' → logprob: -16.37622833251953
    9. ' [' → logprob: -16.75122833251953
    10. '[
' → logprob: -17.12622833251953

Token 596: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6933135986328125
    2. '])' → logprob: -0.6933135986328125
    3. ']' → logprob: -9.193313598632812
    4. '>)' → logprob: -10.943313598632812
    5. '[str' → logprob: -11.568313598632812
    6. ' ])' → logprob: -11.818313598632812
    7. '`)' → logprob: -12.068313598632812
    8. ' )' → logprob: -12.443313598632812
    9. '[' → logprob: -12.568313598632812
    10. ''])' → logprob: -12.943313598632812

Token 597: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4729081094264984
    2. '->' → logprob: -1.0979081392288208
    3. ' ->' → logprob: -3.4729080200195312
    4. ')' → logprob: -4.597908020019531
    5. ')->' → logprob: -6.597908020019531
    6. '   ' → logprob: -7.472908020019531
    7. '       ' → logprob: -9.222908020019531
    8. '()->' → logprob: -9.847908020019531
    9. ':
' → logprob: -10.847908020019531
    10. '-' → logprob: -11.722908020019531

Token 598: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.09026771038770676
    2. 'Iterator' → logprob: -2.9652676582336426
    3. 'None' → logprob: -3.9652676582336426
    4. ' List' → logprob: -4.465267658233643
    5. ' Iterator' → logprob: -6.090267658233643
    6. ' None' → logprob: -6.590267658233643
    7. 'Optional' → logprob: -7.715267658233643
    8. 'int' → logprob: -8.9652681350708
    9. '   ' → logprob: -10.0902681350708
    10. ' Optional' → logprob: -10.8402681350708

Token 599: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.005234356038272381
    2. '[' → logprob: -5.255234241485596
    3. '[str' → logprob: -15.130234718322754
    4. '<int' → logprob: -15.880234718322754
    5. '[Int' → logprob: -16.005233764648438
    6. 'int' → logprob: -16.630233764648438
    7. '[
' → logprob: -17.755233764648438
    8. ' [' → logprob: -19.380233764648438
    9. '[in' → logprob: -20.130233764648438
    10. '[List' → logprob: -20.255233764648438

Token 600: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.17622439563274384
    2. ']:
' → logprob: -1.9262243509292603
    3. ']' → logprob: -5.051224231719971
    4. ':' → logprob: -5.176224231719971
    5. ']:
' → logprob: -5.676224231719971
    6. ':
' → logprob: -8.551224708557129
    7. '   ' → logprob: -9.176224708557129
    8. '[' → logprob: -10.551224708557129
    9. '[int' → logprob: -10.926224708557129
    10. ']:

' → logprob: -10.926224708557129

Token 601: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010827097576111555
    2. 'result' → logprob: -7.376082897186279
    3. ' result' → logprob: -8.251082420349121
    4. ' results' → logprob: -9.251082420349121
    5. 'results' → logprob: -9.501082420349121
    6. 'output' → logprob: -11.626082420349121
    7. 'outputs' → logprob: -11.876082420349121
    8. ' output' → logprob: -12.626082420349121
    9. '[]' → logprob: -13.501082420349121
    10. ' outputs' → logprob: -14.001082420349121

Token 602: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.3441898226737976
    2. 'result' → logprob: -1.8441898822784424
    3. ' results' → logprob: -2.5941898822784424
    4. '       ' → logprob: -3.0941898822784424
    5. ' result' → logprob: -4.344189643859863
    6. 'output' → logprob: -11.344189643859863
    7. 'outputs' → logprob: -11.469189643859863
    8. 'cr' → logprob: -11.719189643859863
    9. 'res' → logprob: -11.719189643859863
    10. 'flo' → logprob: -12.094189643859863

Token 603: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07892823219299316
    2. '=' → logprob: -2.578928232192993
    3. ':' → logprob: -10.328927993774414
    4. '=[]' → logprob: -12.078927993774414
    5. '=[]
' → logprob: -15.953927993774414
    6. ' :' → logprob: -17.578927993774414
    7. '[]' → logprob: -17.828927993774414
    8. ' ' → logprob: -18.453927993774414
    9. ' ' → logprob: -18.578927993774414
    10. '   ' → logprob: -18.578927993774414

Token 604: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -8.125210297293961e-05
    2. '[]
' → logprob: -10.000081062316895
    3. ' []' → logprob: -10.250081062316895
    4. '[' → logprob: -14.875081062316895
    5. '[]

' → logprob: -18.25008201599121
    6. ' []
' → logprob: -19.12508201599121
    7. '[]"' → logprob: -19.37508201599121
    8. '[])' → logprob: -19.75008201599121
    9. '[]}' → logprob: -19.75008201599121
    10. 'list' → logprob: -19.87508201599121

Token 605: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002370329457335174
    2. ' for' → logprob: -8.500237464904785
    3. 'for' → logprob: -10.375237464904785
    4. '        
' → logprob: -14.375237464904785
    5. '
' → logprob: -14.625237464904785
    6. '	' → logprob: -14.750237464904785
    7. '   ' → logprob: -14.875237464904785
    8. '```' → logprob: -15.500237464904785
    9. '	for' → logprob: -16.00023651123047
    10. '	   ' → logprob: -17.37523651123047

Token 606: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005493783857673407
    2. '       ' → logprob: -5.255493640899658
    3. ' for' → logprob: -8.255494117736816
    4. '	for' → logprob: -16.6304931640625
    5. '   ' → logprob: -17.2554931640625
    6. '
' → logprob: -18.3804931640625
    7. '```' → logprob: -18.5054931640625
    8. 'try' → logprob: -18.8804931640625
    9. 'while' → logprob: -19.8804931640625
    10. ' ' → logprob: -20.2554931640625

Token 607: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.005234475247561932
    2. ' line' → logprob: -5.255234241485596
    3. 'raw' → logprob: -15.505234718322754
    4. '	line' → logprob: -15.630234718322754
    5. 'input' → logprob: -15.880234718322754
    6. '_line' → logprob: -16.005233764648438
    7. '   ' → logprob: -17.005233764648438
    8. '(line' → logprob: -17.630233764648438
    9. 'value' → logprob: -18.380233764648438
    10. 'cr' → logprob: -18.880233764648438

Token 608: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014173151925206184
    2. 'in' → logprob: -4.2641730308532715
    3. '_in' → logprob: -13.26417350769043
    4. ' ' → logprob: -13.38917350769043
    5. 's' → logprob: -13.76417350769043
    6. 'line' → logprob: -13.76417350769043
    7. '	in' → logprob: -14.01417350769043
    8. 'import' → logprob: -14.13917350769043
    9. '_' → logprob: -15.01417350769043
    10. '
' → logprob: -15.38917350769043

Token 609: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0001398929744027555
    2. ' input' → logprob: -8.875140190124512
    3. '(input' → logprob: -17.625139236450195
    4. 'map' → logprob: -18.750139236450195
    5. '	input' → logprob: -18.875139236450195
    6. '=input' → logprob: -19.000139236450195
    7. '<input' → logprob: -19.125139236450195
    8. 'import' → logprob: -19.500139236450195
    9. '   ' → logprob: -19.875139236450195
    10. ' ' → logprob: -19.875139236450195

Token 610: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -2.3915141355246305e-05
    2. 'stream' → logprob: -11.25002384185791
    3. '_line' → logprob: -11.87502384185791
    4. 'Stream' → logprob: -13.75002384185791
    5. '_STREAM' → logprob: -13.87502384185791
    6. '_strip' → logprob: -14.25002384185791
    7. '_' → logprob: -15.62502384185791
    8. 'line' → logprob: -15.75002384185791
    9. '_lines' → logprob: -15.87502384185791
    10. '_st' → logprob: -16.125024795532227

Token 611: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028493056073784828
    2. ':
' → logprob: -3.6534931659698486
    3. '.strip' → logprob: -6.2784929275512695
    4. '.rstrip' → logprob: -9.02849292755127
    5. '.' → logprob: -9.65349292755127
    6. '):' → logprob: -10.15349292755127
    7. ',' → logprob: -10.77849292755127
    8. '=' → logprob: -11.02849292755127
    9. '):
' → logprob: -11.02849292755127
    10. '.readline' → logprob: -11.27849292755127

Token 612: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00047964724944904447
    2. '       ' → logprob: -8.625479698181152
    3. 'line' → logprob: -9.000479698181152
    4. ' line' → logprob: -9.625479698181152
    5. '```' → logprob: -10.875479698181152
    6. '            
' → logprob: -11.000479698181152
    7. 'strip' → logprob: -11.375479698181152
    8. '#line' → logprob: -11.500479698181152
    9. ' stripped' → logprob: -11.500479698181152
    10. '   ' → logprob: -11.750479698181152

Token 613: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6639703512191772
    2. 'line' (adapté à ' line') → logprob: -1.4139703512191772
    3. '           ' → logprob: -1.5389703512191772
    4. 'cr' → logprob: -4.663970470428467
    5. ' stripped' → logprob: -4.913970470428467
    6. ' crack' → logprob: -5.413970470428467
    7. 'value' → logprob: -6.038970470428467
    8. 'strip' → logprob: -6.663970470428467
    9. ' value' → logprob: -6.788970470428467
    10. ' cr' → logprob: -7.913970470428467

Token 614: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008646479807794094
    2. ' =' → logprob: -4.758646488189697
    3. '=line' → logprob: -10.633646011352539
    4. '.strip' → logprob: -11.883646011352539
    5. '_strip' → logprob: -14.633646011352539
    6. '.' → logprob: -15.008646011352539
    7. '.=' → logprob: -16.00864601135254
    8. 'strip' → logprob: -17.00864601135254
    9. '.rstrip' → logprob: -17.13364601135254
    10. '=
' → logprob: -17.25864601135254

Token 615: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0002613358374219388
    2. ' line' → logprob: -8.250261306762695
    3. '(line' → logprob: -19.500261306762695
    4. '=line' → logprob: -19.875261306762695
    5. 'lin' → logprob: -20.625261306762695
    6. '#line' → logprob: -20.875261306762695
    7. '	line' → logprob: -21.000261306762695
    8. '[line' → logprob: -22.000261306762695
    9. 'Line' → logprob: -22.625261306762695
    10. 'li' → logprob: -23.000261306762695

Token 616: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0032410474959760904
    2. '.' → logprob: -5.753241062164307
    3. '.rstrip' → logprob: -9.753240585327148
    4. 'strip' → logprob: -12.253240585327148
    5. '.trim' → logprob: -14.878240585327148
    6. '.readline' → logprob: -17.50324058532715
    7. ' .' → logprob: -18.12824058532715
    8. '.l' → logprob: -18.62824058532715
    9. ' strip' → logprob: -18.62824058532715
    10. 'rstrip' → logprob: -19.12824058532715

Token 617: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.048597704619169235
    2. '()
' → logprob: -3.048597812652588
    3. '()

' → logprob: -12.17359733581543
    4. '()
' → logprob: -12.42359733581543
    5. '()\' → logprob: -14.17359733581543
    6. '())' → logprob: -15.67359733581543
    7. '()`' → logprob: -16.54859733581543
    8. '(' → logprob: -17.04859733581543
    9. '()</' → logprob: -17.04859733581543
    10. '():
' → logprob: -17.67359733581543

Token 618: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003569065360352397
    2. 'if' → logprob: -6.12856912612915
    3. ' if' → logprob: -6.75356912612915
    4. '<|end|>' → logprob: -8.753568649291992
    5. '       ' → logprob: -10.378568649291992
    6. '            
' → logprob: -11.628568649291992
    7. ',' → logprob: -12.253568649291992
    8. '<|end|>' → logprob: -12.503568649291992
    9. '   ' → logprob: -12.628568649291992
    10. '		' → logprob: -13.753568649291992

Token 619: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -3.249780638725497e-05
    2. '           ' → logprob: -11.125032424926758
    3. 'try' → logprob: -11.250032424926758
    4. ' if' → logprob: -12.375032424926758
    5. '       ' → logprob: -14.375032424926758
    6. '   ' → logprob: -18.250032424926758
    7. 'If' → logprob: -18.625032424926758
    8. '```' → logprob: -19.375032424926758
    9. '	if' → logprob: -19.500032424926758
    10. '               ' → logprob: -19.750032424926758

Token 620: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3545464873313904
    2. 'not' → logprob: -1.2295465469360352
    3. 'line' → logprob: -5.354546546936035
    4. ' line' → logprob: -6.604546546936035
    5. ' ' → logprob: -14.229546546936035
    6. '	not' → logprob: -14.729546546936035
    7. '```' → logprob: -15.354546546936035
    8. 'len' → logprob: -15.479546546936035
    9. '   ' → logprob: -15.854546546936035
    10. '!' → logprob: -15.979546546936035

Token 621: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0013259568950161338
    2. ' line' → logprob: -6.626326084136963
    3. '	line' → logprob: -18.626325607299805
    4. '(line' → logprob: -19.126325607299805
    5. '
' → logprob: -19.501325607299805
    6. 'li' → logprob: -19.751325607299805
    7. 'len' → logprob: -19.876325607299805
    8. 'Line' → logprob: -19.876325607299805
    9. '#line' → logprob: -19.876325607299805
    10. ' ' → logprob: -20.001325607299805

Token 622: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30434632301330566
    2. ' or' → logprob: -1.6793463230133057
    3. ':
' → logprob: -2.9293463230133057
    4. 'or' → logprob: -3.8043463230133057
    5. '<|end|>' → logprob: -9.179346084594727
    6. ':return' → logprob: -10.179346084594727
    7. '.startswith' → logprob: -11.179346084594727
    8. '```' → logprob: -11.929346084594727
    9. '   ' → logprob: -11.929346084594727
    10. '	or' → logprob: -11.929346084594727

Token 623: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05246663838624954
    2. ':' → logprob: -3.427466630935669
    3. '           ' → logprob: -4.052466869354248
    4. 'continue' → logprob: -7.427466869354248
    5. ' continue' → logprob: -7.927466869354248
    6. ' or' → logprob: -8.42746639251709
    7. ':
' → logprob: -10.55246639251709
    8. '                   ' → logprob: -11.55246639251709
    9. '              ' → logprob: -11.67746639251709
    10. '.' → logprob: -11.92746639251709

Token 624: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.6953364610671997
    2. 'break' → logprob: -1.6953364610671997
    3. ' continue' → logprob: -1.6953364610671997
    4. ' break' → logprob: -2.19533634185791
    5. '               ' → logprob: -4.07033634185791
    6. '           ' → logprob: -5.19533634185791
    7. '                   ' → logprob: -9.94533634185791
    8. '	continue' → logprob: -11.44533634185791
    9. '	break' → logprob: -11.69533634185791
    10. '   ' → logprob: -12.57033634185791

Token 625: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010780644370242953
    2. '            
' → logprob: -7.876078128814697
    3. '
' → logprob: -8.001077651977539
    4. '<|end|>' → logprob: -8.251077651977539
    5. '    
' → logprob: -10.251077651977539
    6. 'tokens' → logprob: -11.626077651977539
    7. '<|end|>' → logprob: -11.876077651977539
    8. '          ' → logprob: -12.001077651977539
    9. 'try' → logprob: -12.251077651977539
    10. '```' → logprob: -12.376077651977539

Token 626: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.555654105497524e-05
    2. '            
' → logprob: -9.75009536743164
    3. ' try' → logprob: -11.12509536743164
    4. 'try' → logprob: -11.25009536743164
    5. '
' → logprob: -12.37509536743164
    6. '```' → logprob: -13.87509536743164
    7. ',' → logprob: -14.12509536743164
    8. '    
' → logprob: -14.12509536743164
    9. '<|end|>' → logprob: -14.25009536743164
    10. '       ' → logprob: -14.75009536743164

Token 627: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' (adapté à ' try') → logprob: -0.1091528832912445
    2. 'cr' → logprob: -2.3591527938842773
    3. '           ' → logprob: -5.234152793884277
    4. 'velocity' → logprob: -5.984152793884277
    5. 'value' → logprob: -7.984152793884277
    6. '       ' → logprob: -8.609152793884277
    7. '   ' → logprob: -8.734152793884277
    8. ' crack' → logprob: -8.859152793884277
    9. ' try' → logprob: -8.984152793884277
    10. 'vel' → logprob: -10.484152793884277

Token 628: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07058638334274292
    2. ':
' → logprob: -2.6955864429473877
    3. '               ' → logprob: -7.445586204528809
    4. '):
' → logprob: -10.445586204528809
    5. '):' → logprob: -11.820586204528809
    6. '       ' → logprob: -11.945586204528809
    7. '           ' → logprob: -12.070586204528809
    8. '<|end|>' → logprob: -12.320586204528809
    9. ':
' → logprob: -12.445586204528809
    10. ',' → logprob: -13.445586204528809

Token 629: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7574389576911926
    2. 'cr' → logprob: -0.7574389576911926
    3. '   ' → logprob: -3.257438898086548
    4. '       ' → logprob: -4.507439136505127
    5. '           ' → logprob: -4.632439136505127
    6. '	cr' → logprob: -6.757439136505127
    7. ' crack' → logprob: -7.882439136505127
    8. '	           ' → logprob: -8.257438659667969
    9. 'value' → logprob: -8.507438659667969
    10. ' cr' → logprob: -9.007438659667969

Token 630: ' crack' (ID: 29931)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.017757583409547806
    2. '               ' → logprob: -4.767757415771484
    3. '                   ' → logprob: -5.392757415771484
    4. 'velocity' → logprob: -6.142757415771484
    5. '   ' → logprob: -6.392757415771484
    6. 'value' → logprob: -7.892757415771484
    7. ' crack' → logprob: -9.392757415771484
    8. '           ' → logprob: -9.642757415771484
    9. 'v' → logprob: -9.642757415771484
    10. 'cracker' → logprob: -10.517757415771484

Token 631: '_velocity' (ID: 96187)
  Prédit: '_velocity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_velocity' → logprob: -5.741137283621356e-05
    2. '_value' → logprob: -9.875057220458984
    3. '_vel' → logprob: -13.500057220458984
    4. 'velocity' → logprob: -13.625057220458984
    5. '_val' → logprob: -14.000057220458984
    6. '_speed' → logprob: -14.125057220458984
    7. ' =' → logprob: -14.500057220458984
    8. '   ' → logprob: -15.250057220458984
    9. 'Velocity' → logprob: -15.375057220458984
    10. '=' → logprob: -15.500057220458984

Token 632: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694133818149567
    2. '=' → logprob: -2.126941442489624
    3. '=float' → logprob: -11.751941680908203
    4. '=int' → logprob: -13.251941680908203
    5. ')' → logprob: -13.626941680908203
    6. ':' → logprob: -13.751941680908203
    7. ',' → logprob: -14.876941680908203
    8. ' ' → logprob: -15.251941680908203
    9. '_value' → logprob: -15.876941680908203
    10. '   ' → logprob: -16.376941680908203

Token 633: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.3425219549390022e-05
    2. ' float' → logprob: -11.25001335144043
    3. 'int' → logprob: -14.87501335144043
    4. 'flo' → logprob: -17.37501335144043
    5. '=float' → logprob: -18.37501335144043
    6. '	float' → logprob: -19.00001335144043
    7. '(float' → logprob: -19.12501335144043
    8. '   ' → logprob: -19.50001335144043
    9. 'f' → logprob: -21.00001335144043
    10. 'fl' → logprob: -21.37501335144043

Token 634: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -13.625000953674316
    3. 'line' → logprob: -16.875001907348633
    4. '[line' → logprob: -17.000001907348633
    5. '=line' → logprob: -17.375001907348633
    6. '(
' → logprob: -18.250001907348633
    7. '#line' → logprob: -18.250001907348633
    8. ',line' → logprob: -18.375001907348633
    9. ' line' → logprob: -19.500001907348633
    10. '(lines' → logprob: -20.125001907348633

Token 635: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.179569077678025e-05
    2. ')
' → logprob: -10.125041961669922
    3. ' )' → logprob: -13.500041961669922
    4. ')#' → logprob: -16.625041961669922
    5. '               ' → logprob: -17.125041961669922
    6. ')`' → logprob: -17.250041961669922
    7. ')
' → logprob: -17.375041961669922
    8. '))' → logprob: -17.625041961669922
    9. '           ' → logprob: -17.625041961669922
    10. ')

' → logprob: -18.500041961669922

Token 636: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11718568950891495
    2. '           ' → logprob: -2.242185592651367
    3. '<|end|>' → logprob: -6.117185592651367
    4. '                
' → logprob: -7.367185592651367
    5. '                ' → logprob: -7.617185592651367
    6. '            
' → logprob: -7.992185592651367
    7. '            ' → logprob: -8.617185592651367
    8. ')' → logprob: -9.117185592651367
    9. '              ' → logprob: -9.367185592651367
    10. '                   ' → logprob: -9.492185592651367

Token 637: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5227550864219666
    2. '               ' → logprob: -1.2727551460266113
    3. ' result' → logprob: -2.8977551460266113
    4. 'floor' → logprob: -3.1477551460266113
    5. 'res' → logprob: -4.272755146026611
    6. ' floor' → logprob: -4.897755146026611
    7. 'minimal' → logprob: -5.772755146026611
    8. ' minimal' → logprob: -6.772755146026611
    9. 'min' → logprob: -7.272755146026611
    10. 'if' → logprob: -7.272755146026611

Token 638: ' Constraints' (ID: 189637)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9309939742088318
    2. 'minimal' → logprob: -1.0559940338134766
    3. 'floor' → logprob: -2.4309940338134766
    4. 'res' → logprob: -2.6809940338134766
    5. 'if' → logprob: -2.8059940338134766
    6. 'min' → logprob: -3.4309940338134766
    7. '               ' → logprob: -5.430994033813477
    8. ' minimal' → logprob: -5.930994033813477
    9. ' floor' → logprob: -8.055994033813477
    10. ' result' → logprob: -8.055994033813477

Token 639: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006262935232371092
    2. ' if' → logprob: -5.38126277923584
    3. 'if' → logprob: -6.88126277923584
    4. '           ' → logprob: -8.13126277923584
    5. '                ' → logprob: -9.13126277923584
    6. '<|end|>' → logprob: -9.63126277923584
    7. ':' → logprob: -10.00626277923584
    8. ' ' → logprob: -10.25626277923584
    9. '              ' → logprob: -11.25626277923584
    10. '            ' → logprob: -11.25626277923584

Token 640: ' ' (ID: 220)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1388590335845947
    2. ' crack' → logprob: -1.1388590335845947
    3. 'if' → logprob: -1.7638590335845947
    4. 'cr' → logprob: -1.8888590335845947
    5. '               ' → logprob: -3.7638590335845947
    6. ' cr' → logprob: -4.888858795166016
    7. '0' → logprob: -5.388858795166016
    8. ' ' → logprob: -7.513858795166016
    9. '                ' → logprob: -8.263858795166016
    10. '           ' → logprob: -8.388858795166016

Token 641: '0' (ID: 15)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.08122061938047409
    2. '0' → logprob: -2.9562206268310547
    3. 'if' → logprob: -4.331220626831055
    4. ' crack' → logprob: -4.456220626831055
    5. ' ' → logprob: -7.831220626831055
    6. ' if' → logprob: -8.081220626831055
    7. ' cr' → logprob: -8.706220626831055
    8. '   ' → logprob: -9.206220626831055
    9. '1' → logprob: -10.018720626831055
    10. '           ' → logprob: -10.831220626831055

Token 642: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4811762869358063
    2. '<' → logprob: -0.9811762571334839
    3. '.' → logprob: -4.981176376342773
    4. ' <=' → logprob: -8.981176376342773
    5. '<=' → logprob: -9.856176376342773
    6. '0' → logprob: -10.981176376342773
    7. '<
' → logprob: -13.356176376342773
    8. ')' → logprob: -13.356176376342773
    9. '<|end|>' → logprob: -13.356176376342773
    10. ',' → logprob: -13.606176376342773

Token 643: ' v' (ID: 323)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.011052182875573635
    2. ' crack' → logprob: -4.511052131652832
    3. 'cracker' → logprob: -13.011052131652832
    4. '	cr' → logprob: -13.636052131652832
    5. '=' → logprob: -15.636052131652832
    6. ' crash' → logprob: -16.38605308532715
    7. ' cr' → logprob: -16.38605308532715
    8. ' cracking' → logprob: -16.63605308532715
    9. '```' → logprob: -16.63605308532715
    10. '   ' → logprob: -16.76105308532715

Token 644: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5750117301940918
    2. ' <' → logprob: -1.2000117301940918
    3. '<=' → logprob: -2.575011730194092
    4. '<' → logprob: -2.950011730194092
    5. '<|end|>' → logprob: -5.200011730194092
    6. '<|end|>' → logprob: -7.575011730194092
    7. '_cr' → logprob: -8.20001220703125
    8. '               ' → logprob: -8.57501220703125
    9. '=' → logprob: -8.70001220703125
    10. ' and' → logprob: -8.82501220703125

Token 645: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.06761711090803146
    2. '200' → logprob: -4.442616939544678
    3. '50' → logprob: -4.567616939544678
    4. '150' → logprob: -5.192616939544678
    5. '500' → logprob: -5.192616939544678
    6. ' ' → logprob: -5.317616939544678
    7. '300' → logprob: -5.567616939544678
    8. '20' → logprob: -5.692616939544678
    9. 'math' → logprob: -5.942616939544678
    10. '10' → logprob: -6.442616939544678

Token 646: '200' (ID: 1179)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.03987883776426315
    2. '50' → logprob: -4.914878845214844
    3. '200' → logprob: -4.914878845214844
    4. '20' → logprob: -5.789878845214844
    5. 'math' → logprob: -5.789878845214844
    6. '150' → logprob: -5.914878845214844
    7. '500' → logprob: -6.039878845214844
    8. '10' → logprob: -6.664878845214844
    9. '300' → logprob: -6.664878845214844
    10. '120' → logprob: -6.789878845214844

Token 647: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007130279554985464
    2. '<|end|>' → logprob: -7.375712871551514
    3. '                ' → logprob: -10.875713348388672
    4. '                
' → logprob: -11.125713348388672
    5. '<|end|>' → logprob: -11.125713348388672
    6. ',' → logprob: -11.250713348388672
    7. '              ' → logprob: -11.875713348388672
    8. '           ' → logprob: -11.875713348388672
    9. '                   ' → logprob: -13.000713348388672
    10. ' if' → logprob: -13.250713348388672

Token 648: 'handled' (ID: 79840)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5622954368591309
    2. ')' → logprob: -1.4372954368591309
    3. '200' → logprob: -2.187295436859131
    4. '               ' → logprob: -2.937295436859131
    5. ' and' → logprob: -4.187295436859131
    6. 'and' → logprob: -5.312295436859131
    7. ' ' → logprob: -5.562295436859131
    8. 'if' → logprob: -6.562295436859131
    9. '           ' → logprob: -7.437295436859131
    10. '                   ' → logprob: -7.687295436859131

Token 649: ' implicitly' (ID: 133788)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.7841669917106628
    2. ')' → logprob: -1.6591670513153076
    3. ')
' → logprob: -1.6591670513153076
    4. '               ' → logprob: -3.0341670513153076
    5. '           ' → logprob: -3.5341670513153076
    6. 'by' → logprob: -3.7841670513153076
    7. 'if' → logprob: -4.6591668128967285
    8. ' in' → logprob: -4.9091668128967285
    9. ' explicitly' → logprob: -5.0341668128967285
    10. ' here' → logprob: -5.1591668128967285

Token 650: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15994754433631897
    2. ')' → logprob: -2.409947633743286
    3. ')
' → logprob: -3.034947633743286
    4. ' by' → logprob: -4.784947395324707
    5. ' and' → logprob: -7.284947395324707
    6. ' in' → logprob: -8.034947395324707
    7. ',' → logprob: -9.159947395324707
    8. ')

' → logprob: -9.159947395324707
    9. '),' → logprob: -9.784947395324707
    10. '           ' → logprob: -9.784947395324707

Token 651: ' but' (ID: 889)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.4494637250900269
    2. ' continue' → logprob: -1.9494637250900269
    3. ' if' → logprob: -2.1994638442993164
    4. 'if' → logprob: -2.4494638442993164
    5. ' or' → logprob: -2.6994638442993164
    6. ' not' → logprob: -2.9494638442993164
    7. ' as' → logprob: -2.9494638442993164
    8. ' crack' → logprob: -3.3244638442993164
    9. ' else' → logprob: -3.5744638442993164
    10. ' since' → logprob: -3.6994638442993164

Token 652: ' we' (ID: 581)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8015618324279785
    2. 'if' → logprob: -1.4265618324279785
    3. ' crack' → logprob: -2.3015618324279785
    4. ' not' → logprob: -2.8015618324279785
    5. ' self' → logprob: -2.8015618324279785
    6. ' continue' → logprob: -3.4265618324279785
    7. ' break' → logprob: -4.1765618324279785
    8. ' we' → logprob: -4.3015618324279785
    9. 'cr' → logprob: -5.4265618324279785
    10. 'self' → logprob: -5.5515618324279785

Token 653: ' skip' (ID: 16677)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.1749376356601715
    2. 'if' → logprob: -2.9249377250671387
    3. 'can' → logprob: -3.5499377250671387
    4. ' should' → logprob: -3.6749377250671387
    5. 'should' → logprob: -4.174937725067139
    6. 'continue' → logprob: -4.674937725067139
    7. ' check' → logprob: -5.049937725067139
    8. ' continue' → logprob: -5.299937725067139
    9. '               ' → logprob: -5.299937725067139
    10. 'check' → logprob: -5.924937725067139

Token 654: ' invalid' (ID: 15796)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.8250418305397034
    2. ' if' → logprob: -1.2000417709350586
    3. 'if' → logprob: -1.4500417709350586
    4. 'lines' → logprob: -4.075041770935059
    5. 'values' → logprob: -5.950041770935059
    6. ' velocities' → logprob: -6.075041770935059
    7. ' values' → logprob: -6.700041770935059
    8. ' invalid' → logprob: -7.325041770935059
    9. 'invalid' → logprob: -7.700041770935059
    10. ' the' → logprob: -7.825041770935059

Token 655: ' input' (ID: 3422)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.996514081954956
    2. ' lines' → logprob: -1.996514081954956
    3. 'values' → logprob: -1.996514081954956
    4. 'vel' → logprob: -2.371514081954956
    5. ' if' → logprob: -2.371514081954956
    6. ' velocities' → logprob: -2.996514081954956
    7. 'inputs' → logprob: -3.121514081954956
    8. 'lines' → logprob: -3.246514081954956
    9. ' inputs' → logprob: -3.871514081954956
    10. ' values' → logprob: -5.246514320373535

Token 656: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005882098339498043
    2. ' if' → logprob: -5.380882263183594
    3. '           ' → logprob: -7.755882263183594
    4. ')' → logprob: -7.880882263183594
    5. ' or' → logprob: -8.255882263183594
    6. '                   ' → logprob: -9.505882263183594
    7. 'if' → logprob: -9.505882263183594
    8. ',' → logprob: -11.380882263183594
    9. ')
' → logprob: -11.880882263183594
    10. ' by' → logprob: -12.630882263183594

Token 657: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.816093228830141e-06
    2. '           ' → logprob: -14.12500286102295
    3. '                
' → logprob: -14.75000286102295
    4. '                   ' → logprob: -14.87500286102295
    5. ' if' → logprob: -15.25000286102295
    6. '              ' → logprob: -15.37500286102295
    7. '                ' → logprob: -15.62500286102295
    8. 'if' → logprob: -16.000001907348633
    9. '	           ' → logprob: -16.125001907348633
    10. '<|end|>' → logprob: -16.750001907348633

Token 658: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024072328582406044
    2. 'if' (adapté à ' if') → logprob: -3.8990724086761475
    3. ' if' → logprob: -5.649072170257568
    4. '                   ' → logprob: -14.149072647094727
    5. '           ' → logprob: -14.274072647094727
    6. '              ' → logprob: -14.524072647094727
    7. '                ' → logprob: -14.774072647094727
    8. '   ' → logprob: -14.899072647094727
    9. ' ' → logprob: -15.649072647094727
    10. '	if' → logprob: -15.649072647094727

Token 659: ' crack' (ID: 29931)
  Prédit: ' crack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' crack' → logprob: -0.8424438834190369
    2. 'cr' → logprob: -1.0924439430236816
    3. ' not' → logprob: -1.7174439430236816
    4. ' ' → logprob: -3.5924439430236816
    5. 'not' → logprob: -4.217443943023682
    6. '0' → logprob: -4.467443943023682
    7. ' cr' → logprob: -9.217443466186523
    8. '1' → logprob: -9.279943466186523
    9. ' crash' → logprob: -9.467443466186523
    10. '   ' → logprob: -9.529943466186523

Token 660: '_velocity' (ID: 96187)
  Prédit: '_velocity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_velocity' → logprob: -4.320199877838604e-07
    2. 'velocity' → logprob: -14.875
    3. '_vel' → logprob: -17.625
    4. 'Velocity' → logprob: -19.125
    5. '_voltage' → logprob: -19.125
    6. '_visibility' → logprob: -20.0
    7. '_v' → logprob: -20.25
    8. ' velocity' → logprob: -20.375
    9. '.velocity' → logprob: -20.75
    10. '_vehicle' → logprob: -20.75

Token 661: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3132653534412384
    2. '<=' → logprob: -1.313265323638916
    3. '>' → logprob: -12.938265800476074
    4. ' >' → logprob: -14.313265800476074
    5. '```' → logprob: -15.313265800476074
    6. '   ' → logprob: -15.813265800476074
    7. ' ' → logprob: -16.063264846801758
    8. ')<=' → logprob: -16.313264846801758
    9. 'le' → logprob: -17.313264846801758
    10. ']<=' → logprob: -17.688264846801758

Token 662: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '۰' → logprob: -20.750431060791016
    4. '   ' → logprob: -20.875431060791016
    5. '<|end|>' → logprob: -20.875431060791016
    6. '00' → logprob: -21.625431060791016
    7. '  ' → logprob: -21.750431060791016
    8. '    ' → logprob: -22.250431060791016
    9. ' or' → logprob: -22.375431060791016
    10. '
' → logprob: -22.500431060791016

Token 663: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '۰' → logprob: -18.87507438659668
    4. '1' → logprob: -19.81257438659668
    5. 'zero' → logprob: -20.56257438659668
    6. '00' → logprob: -20.68757438659668
    7. '０' → logprob: -20.75007438659668
    8. '٠' → logprob: -21.12507438659668
    9. ' ' → logprob: -21.68757438659668
    10. '  ' → logprob: -21.75007438659668

Token 664: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0008423840627074242
    2. 'or' → logprob: -7.125842571258545
    3. '                   ' → logprob: -11.000842094421387
    4. '               ' → logprob: -11.000842094421387
    5. '           ' → logprob: -13.625842094421387
    6. '	or' → logprob: -13.875842094421387
    7. ' ' → logprob: -14.500842094421387
    8. '                ' → logprob: -14.625842094421387
    9. '              ' → logprob: -15.125842094421387
    10. '                  ' → logprob: -15.250842094421387

Token 665: ' crack' (ID: 29931)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.0019379158038645983
    2. ' crack' → logprob: -6.2519378662109375
    3. '   ' → logprob: -11.876937866210938
    4. 'cracker' → logprob: -14.376937866210938
    5. '	cr' → logprob: -14.751937866210938
    6. '           ' → logprob: -14.751937866210938
    7. '       ' → logprob: -15.251937866210938
    8. '               ' → logprob: -15.501937866210938
    9. '  ' → logprob: -16.376937866210938
    10. 'Cr' → logprob: -16.376937866210938

Token 666: '_velocity' (ID: 96187)
  Prédit: '_velocity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_velocity' → logprob: -6.869017852295656e-06
    2. 'velocity' → logprob: -12.000006675720215
    3. 'Velocity' → logprob: -14.375006675720215
    4. ' velocity' → logprob: -17.62500762939453
    5. 'cr' → logprob: -17.75000762939453
    6. '.velocity' → logprob: -18.12500762939453
    7. '_vel' → logprob: -18.12500762939453
    8. '_cr' → logprob: -18.50000762939453
    9. ' Velocity' → logprob: -19.12500762939453
    10. '>' → logprob: -19.37500762939453

Token 667: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.008623439818620682
    2. ' >=' → logprob: -4.7586236000061035
    3. '>' → logprob: -11.758623123168945
    4. '≥' → logprob: -14.883623123168945
    5. ')>=' → logprob: -15.133623123168945
    6. ']>=' → logprob: -15.133623123168945
    7. ' >' → logprob: -16.383623123168945
    8. '```' → logprob: -17.258623123168945
    9. ' ' → logprob: -18.883623123168945
    10. '==' → logprob: -19.008623123168945

Token 668: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.000015258789062
    4. '２００' → logprob: -16.750015258789062
    5. '```' → logprob: -16.875015258789062
    6. '  ' → logprob: -18.125015258789062
    7. '`' → logprob: -19.812515258789062
    8. '
' → logprob: -20.062515258789062
    9. '    ' → logprob: -20.250015258789062
    10. '2' → logprob: -20.250015258789062

Token 669: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -18.625
    4. '```' → logprob: -18.875
    5. '２００' → logprob: -19.5
    6. '2' → logprob: -19.75
    7. '
' → logprob: -19.75
    8. '300' → logprob: -20.0
    9. '  ' → logprob: -20.5
    10. '20' → logprob: -21.125

Token 670: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7020675539970398
    2. ':
' → logprob: -0.7020675539970398
    3. '               ' → logprob: -4.8270673751831055
    4. '                   ' → logprob: -7.3270673751831055
    5. '           ' → logprob: -8.702067375183105
    6. ':
' → logprob: -11.077067375183105
    7. '                       ' → logprob: -11.452067375183105
    8. 'continue' → logprob: -12.577067375183105
    9. ':return' → logprob: -13.077067375183105
    10. '):
' → logprob: -13.077067375183105

Token 671: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00034023032640106976
    2. '               ' → logprob: -8.125340461730957
    3. 'continue' → logprob: -10.250340461730957
    4. ' continue' → logprob: -12.375340461730957
    5. '                       ' → logprob: -13.500340461730957
    6. '   ' → logprob: -13.625340461730957
    7. '           ' → logprob: -13.750340461730957
    8. '                  ' → logprob: -15.000340461730957
    9. '		           ' → logprob: -15.625340461730957
    10. '	               ' → logprob: -16.00033950805664

Token 672: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.16612978279590607
    2. ' continue' → logprob: -1.9161298274993896
    3. '                   ' → logprob: -5.1661295890808105
    4. '               ' → logprob: -8.916130065917969
    5. '	continue' → logprob: -10.916130065917969
    6. '                       ' → logprob: -11.041130065917969
    7. '   ' → logprob: -11.666130065917969
    8. '           ' → logprob: -13.041130065917969
    9. '_continue' → logprob: -13.791130065917969
    10. ' ' → logprob: -13.916130065917969

Token 673: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010058967163786292
    2. '           ' → logprob: -8.126006126403809
    3. '                
' → logprob: -8.126006126403809
    4. '                   ' → logprob: -8.251006126403809
    5. '<|end|>' → logprob: -9.251006126403809
    6. '                ' → logprob: -11.376006126403809
    7. '       ' → logprob: -11.751006126403809
    8. '            
' → logprob: -11.876006126403809
    9. '
' → logprob: -12.126006126403809
    10. ',' → logprob: -12.251006126403809

Token 674: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00016361083544325083
    2. '                
' → logprob: -9.500164031982422
    3. '           ' → logprob: -10.000164031982422
    4. '                   ' → logprob: -10.375164031982422
    5. '              ' → logprob: -12.875164031982422
    6. '       ' → logprob: -13.250164031982422
    7. '                ' → logprob: -13.500164031982422
    8. '<|end|>' → logprob: -13.500164031982422
    9. 'continue' → logprob: -13.625164031982422
    10. '```' → logprob: -14.000164031982422

Token 675: ' except' (ID: 6384)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01108495518565178
    2. '               ' → logprob: -4.636085033416748
    3. '            
' → logprob: -7.386085033416748
    4. '
' → logprob: -8.38608455657959
    5. '       ' → logprob: -8.38608455657959
    6. 'result' → logprob: -8.88608455657959
    7. '        
' → logprob: -10.38608455657959
    8. '                
' → logprob: -11.13608455657959
    9. ' result' → logprob: -11.26108455657959
    10. 'results' → logprob: -11.63608455657959

Token 676: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0009829123737290502
    2. ' Value' → logprob: -7.250982761383057
    3. '(Value' → logprob: -8.250983238220215
    4. '	Value' → logprob: -11.875983238220215
    5. '_value' → logprob: -13.250983238220215
    6. '_Value' → logprob: -13.625983238220215
    7. '.Value' → logprob: -13.750983238220215
    8. '<Value' → logprob: -14.625983238220215
    9. 'Val' → logprob: -15.625983238220215
    10. '(' → logprob: -16.6259822845459

Token 677: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0002036595979006961
    2. 'rror' → logprob: -8.500204086303711
    3. 'error' → logprob: -16.50020408630371
    4. 'Value' → logprob: -17.75020408630371
    5. 'SError' → logprob: -18.50020408630371
    6. 'LError' → logprob: -18.75020408630371
    7. '	Error' → logprob: -19.50020408630371
    8. '_error' → logprob: -19.75020408630371
    9. '_Error' → logprob: -20.12520408630371
    10. 'Erro' → logprob: -21.00020408630371

Token 678: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008702974766492844
    2. ':
' → logprob: -4.758702754974365
    3. '               ' → logprob: -9.633703231811523
    4. '           ' → logprob: -10.883703231811523
    5. ':

' → logprob: -13.883703231811523
    6. '<|end|>' → logprob: -14.008703231811523
    7. '):' → logprob: -14.758703231811523
    8. '       ' → logprob: -14.883703231811523
    9. '):
' → logprob: -15.133703231811523
    10. ',' → logprob: -15.258703231811523

Token 679: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00022082125360611826
    2. '           ' → logprob: -9.375221252441406
    3. ' continue' → logprob: -9.500221252441406
    4. 'continue' → logprob: -10.000221252441406
    5. '	           ' → logprob: -11.750221252441406
    6. '                   ' → logprob: -13.000221252441406
    7. '		       ' → logprob: -13.375221252441406
    8. '			' → logprob: -13.500221252441406
    9. '	continue' → logprob: -13.750221252441406
    10. '   ' → logprob: -15.125221252441406

Token 680: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.06067464128136635
    2. '               ' → logprob: -3.0606746673583984
    3. ' continue' → logprob: -4.810674667358398
    4. '           ' → logprob: -5.560674667358398
    5. '                   ' → logprob: -11.060674667358398
    6. '	continue' → logprob: -12.185674667358398
    7. '   ' → logprob: -12.560674667358398
    8. '       ' → logprob: -14.810674667358398
    9. 'break' → logprob: -15.060674667358398
    10. '```' → logprob: -15.060674667358398

Token 681: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0048262071795761585
    2. '
' → logprob: -6.129826068878174
    3. '            
' → logprob: -6.129826068878174
    4. '       ' → logprob: -8.629826545715332
    5. '        
' → logprob: -9.129826545715332
    6. '<|end|>' → logprob: -9.504826545715332
    7. '    
' → logprob: -10.629826545715332
    8. '```' → logprob: -10.879826545715332
    9. '<|end|>' → logprob: -11.504826545715332
    10. '               ' → logprob: -11.629826545715332

Token 682: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006715670460835099
    2. '            
' → logprob: -7.75067138671875
    3. '
' → logprob: -8.87567138671875
    4. '       ' → logprob: -10.25067138671875
    5. '<|end|>' → logprob: -10.50067138671875
    6. '```' → logprob: -11.75067138671875
    7. '               ' → logprob: -12.00067138671875
    8. '        
' → logprob: -12.12567138671875
    9. '          ' → logprob: -12.37567138671875
    10. '<|end|>' → logprob: -12.75067138671875

Token 683: ' floor' (ID: 8350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1958913505077362
    2. 'result' → logprob: -1.8208913803100586
    3. 'floor' (adapté à ' floor') → logprob: -4.570891380310059
    4. ' result' → logprob: -5.695891380310059
    5. '       ' → logprob: -6.695891380310059
    6. 'results' → logprob: -7.320891380310059
    7. ' floor' → logprob: -8.695891380310059
    8. 'res' → logprob: -9.445891380310059
    9. 'flo' → logprob: -9.695891380310059
    10. ' results' → logprob: -10.945891380310059

Token 684: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07709721475839615
    2. '=' → logprob: -2.827097177505493
    3. '_to' → logprob: -4.577097415924072
    4. '_number' → logprob: -5.702097415924072
    5. '_floor' → logprob: -6.827097415924072
    6. '_num' → logprob: -8.202096939086914
    7. 'to' → logprob: -11.077096939086914
    8. '_' → logprob: -12.452096939086914
    9. '_no' → logprob: -13.077096939086914
    10. 'floor' → logprob: -13.452096939086914

Token 685: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.038047004491090775
    2. ' self' → logprob: -3.2880470752716064
    3. '           ' → logprob: -12.288046836853027
    4. '               ' → logprob: -14.788046836853027
    5. '	self' → logprob: -14.788046836853027
    6. '(self' → logprob: -16.288047790527344
    7. '       ' → logprob: -17.413047790527344
    8. '=self' → logprob: -18.038047790527344
    9. '   ' → logprob: -18.163047790527344
    10. '[self' → logprob: -18.163047790527344

Token 686: '.cr' (ID: 38964)
  Prédit: '.cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cr' → logprob: -0.007626388221979141
    2. 'cr' → logprob: -4.882626533508301
    3. ' crack' → logprob: -12.0076265335083
    4. '	cr' → logprob: -12.2576265335083
    5. '.' → logprob: -13.0076265335083
    6. ' .' → logprob: -13.1326265335083
    7. '```' → logprob: -13.5076265335083
    8. 'cracker' → logprob: -13.7576265335083
    9. ' cracks' → logprob: -14.5076265335083
    10. '.c' → logprob: -15.3826265335083

Token 687: 'ack' (ID: 552)
  Prédit: 'ack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ack' → logprob: -0.005462851375341415
    2. 'ak' → logprob: -5.630462646484375
    3. 'ck' → logprob: -6.630462646484375
    4. ' crack' → logprob: -9.005462646484375
    5. '```' → logprob: -9.130462646484375
    6. 'k' → logprob: -10.067962646484375
    7. 'cr' → logprob: -10.942962646484375
    8. 'acker' → logprob: -11.255462646484375
    9. 'ask' → logprob: -11.255462646484375
    10. 'a' → logprob: -11.442962646484375

Token 688: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -9.13388703338569e-06
    2. 'handler' → logprob: -11.625009536743164
    3. '_velocity' → logprob: -17.000009536743164
    4. 'Handler' → logprob: -18.125009536743164
    5. '_handlers' → logprob: -18.125009536743164
    6. '	handler' → logprob: -18.375009536743164
    7. '_handle' → logprob: -18.750009536743164
    8. ' handler' → logprob: -18.750009536743164
    9. '           ' → logprob: -19.125009536743164
    10. 'andler' → logprob: -19.125009536743164

Token 689: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -3.5716304410016164e-05
    2. 'minimal' → logprob: -10.250035285949707
    3. '.' → logprob: -15.875035285949707
    4. '.minimum' → logprob: -16.500036239624023
    5. ' minimal' → logprob: -17.125036239624023
    6. ' .' → logprob: -17.625036239624023
    7. 'Minimal' → logprob: -18.000036239624023
    8. 'min' → logprob: -18.875036239624023
    9. '.max' → logprob: -19.125036239624023
    10. '=min' → logprob: -19.375036239624023

Token 690: 'imal' (ID: 3882)
  Prédit: 'imal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -2.696889623621246e-06
    2. 'inal' → logprob: -13.12500286102295
    3. 'imum' → logprob: -15.25000286102295
    4. 'iminal' → logprob: -15.50000286102295
    5. 'im' → logprob: -17.125001907348633
    6. 'mal' → logprob: -17.250001907348633
    7. 'ical' → logprob: -17.625001907348633
    8. 'imals' → logprob: -17.625001907348633
    9. '_floor' → logprob: -17.625001907348633
    10. 'IMAL' → logprob: -18.000001907348633

Token 691: '_floor' (ID: 152330)
  Prédit: '_floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_floor' → logprob: -3.128163257315464e-07
    2. 'floor' → logprob: -15.375
    3. '```' → logprob: -18.875
    4. '_f' → logprob: -19.875
    5. ' floor' → logprob: -20.0
    6. '_' → logprob: -20.375
    7. '_float' → logprob: -20.75
    8. '\' → logprob: -21.0
    9. 'Floor' → logprob: -21.625
    10. ' _' → logprob: -21.75

Token 692: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.7432603272027336e-06
    2. 'to' → logprob: -13.375001907348633
    3. '_floor' → logprob: -16.750001907348633
    4. 'To' → logprob: -17.000001907348633
    5. '```' → logprob: -18.250001907348633
    6. 'floor' → logprob: -18.625001907348633
    7. '-to' → logprob: -19.000001907348633
    8. '_TO' → logprob: -19.125001907348633
    9. '\' → logprob: -19.500001907348633
    10. ' to' → logprob: -19.875001907348633

Token 693: '_cr' (ID: 41408)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.4741004407405853
    2. '_cr' → logprob: -0.9741004705429077
    3. 'cracker' → logprob: -11.099100112915039
    4. '	cr' → logprob: -12.724100112915039
    5. '```' → logprob: -13.724100112915039
    6. ' crack' → logprob: -14.349100112915039
    7. 'floor' → logprob: -14.599100112915039
    8. 'ck' → logprob: -14.599100112915039
    9. 'Cr' → logprob: -14.724100112915039
    10. '-cr' → logprob: -15.099100112915039

Token 694: 'ack' (ID: 552)
  Prédit: 'ack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ack' → logprob: -0.0006877713603898883
    2. 'rack' → logprob: -7.875687599182129
    3. 'a' → logprob: -9.375687599182129
    4. 'e' → logprob: -9.500687599182129
    5. 'ck' → logprob: -10.250687599182129
    6. 'ac' → logprob: -10.500687599182129
    7. '```' → logprob: -10.875687599182129
    8. 'r' → logprob: -11.125687599182129
    9. 'ackle' → logprob: -12.313187599182129
    10. ' crack' → logprob: -12.375687599182129

Token 695: '(cr' (ID: 46462)
  Prédit: '(cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cr' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -13.00000286102295
    3. '(
' → logprob: -15.50000286102295
    4. 'cr' → logprob: -16.000003814697266
    5. '(c' → logprob: -16.375003814697266
    6. '(crate' → logprob: -17.000003814697266
    7. '(cre' → logprob: -17.000003814697266
    8. '/cr' → logprob: -17.250003814697266
    9. '	cr' → logprob: -17.375003814697266
    10. '```' → logprob: -17.375003814697266

Token 696: 'ack' (ID: 552)
  Prédit: 'ack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ack' → logprob: -0.004291845951229334
    2. 'velocity' → logprob: -5.629292011260986
    3. '_velocity' → logprob: -9.004291534423828
    4. 'ak' → logprob: -9.254291534423828
    5. '```' → logprob: -9.504291534423828
    6. 'ach' → logprob: -9.629291534423828
    7. 'avity' → logprob: -10.254291534423828
    8. 'ash' → logprob: -10.379291534423828
    9. ' velocity' → logprob: -10.504291534423828
    10. 'ck' → logprob: -10.504291534423828

Token 697: '_velocity' (ID: 96187)
  Prédit: '_velocity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_velocity' → logprob: -0.0003000696888193488
    2. 'velocity' → logprob: -8.125300407409668
    3. 'ocity' → logprob: -13.000300407409668
    4. ' velocity' → logprob: -14.000300407409668
    5. 'Velocity' → logprob: -14.500300407409668
    6. '.velocity' → logprob: -15.750300407409668
    7. '```' → logprob: -16.50029945373535
    8. 'o' → logprob: -16.75029945373535
    9. '_voltage' → logprob: -16.87529945373535
    10. 'avity' → logprob: -16.87529945373535

Token 698: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48564454913139343
    2. ')
' → logprob: -0.9856445789337158
    3. '           ' → logprob: -4.485644340515137
    4. ')
' → logprob: -8.860644340515137
    5. '               ' → logprob: -9.860644340515137
    6. '       ' → logprob: -11.485644340515137
    7. '.append' → logprob: -12.110644340515137
    8. ')

' → logprob: -12.485644340515137
    9. ')add' → logprob: -12.610644340515137
    10. ')`
' → logprob: -13.235644340515137

Token 699: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.034592388459714e-06
    2. '```' → logprob: -12.750005722045898
    3. 'if' → logprob: -13.875005722045898
    4. '            
' → logprob: -14.500005722045898
    5. '
' → logprob: -14.750005722045898
    6. 'results' → logprob: -15.125005722045898
    7. ' if' → logprob: -15.125005722045898
    8. '       ' → logprob: -15.250005722045898
    9. '<|end|>' → logprob: -16.1250057220459
    10. '               ' → logprob: -16.6250057220459

Token 700: ' if' (ID: 538)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.28738927841186523
    2. '           ' → logprob: -1.7873892784118652
    3. 'if' (adapté à ' if') → logprob: -2.5373892784118652
    4. ' results' → logprob: -6.162389278411865
    5. ' if' → logprob: -6.787389278411865
    6. '       ' → logprob: -9.787389755249023
    7. '```' → logprob: -11.787389755249023
    8. '(results' → logprob: -12.537389755249023
    9. '	results' → logprob: -12.912389755249023
    10. '.results' → logprob: -13.412389755249023

Token 701: ' floor' (ID: 8350)
  Prédit: ' floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' floor' → logprob: -0.474077969789505
    2. 'floor' → logprob: -0.9740779399871826
    3. '_floor' → logprob: -14.599078178405762
    4. 'flo' → logprob: -15.474078178405762
    5. '           ' → logprob: -16.099077224731445
    6. 'f' → logprob: -16.724077224731445
    7. '   ' → logprob: -17.224077224731445
    8. '.floor' → logprob: -17.599077224731445
    9. 'Floor' → logprob: -18.099077224731445
    10. ' ' → logprob: -18.724077224731445

Token 702: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00976494513452053
    2. 'is' → logprob: -4.634765148162842
    3. '	is' → logprob: -12.009764671325684
    4. '<|end|>' → logprob: -13.384764671325684
    5. ')is' → logprob: -14.259764671325684
    6. ')' → logprob: -14.509764671325684
    7. '<|end|>' → logprob: -16.634765625
    8. ' ' → logprob: -17.259765625
    9. 'in' → logprob: -17.259765625
    10. '   ' → logprob: -17.884765625

Token 703: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.31453806161880493
    2. ' not' → logprob: -1.3145380020141602
    3. 'None' → logprob: -6.68953800201416
    4. ' None' → logprob: -10.68953800201416
    5. '	not' → logprob: -13.56453800201416
    6. '=None' → logprob: -13.68953800201416
    7. 'none' → logprob: -13.68953800201416
    8. '   ' → logprob: -13.81453800201416
    9. '           ' → logprob: -13.81453800201416
    10. 'Not' → logprob: -14.18953800201416

Token 704: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.318681188422488e-05
    2. ' None' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.37501335144043
    4. '(None' → logprob: -17.37501335144043
    5. '_None' → logprob: -17.50001335144043
    6. '```' → logprob: -18.12501335144043
    7. '       ' → logprob: -18.25001335144043
    8. '           ' → logprob: -18.50001335144043
    9. '=None' → logprob: -18.62501335144043
    10. 'none' → logprob: -19.00001335144043

Token 705: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4817159175872803
    2. ':' → logprob: -1.2317159175872803
    3. ':
' → logprob: -2.4817159175872803
    4. '           ' → logprob: -5.106716156005859
    5. '):
' → logprob: -8.48171615600586
    6. '<|end|>' → logprob: -8.73171615600586
    7. ',' → logprob: -8.85671615600586
    8. ' and' → logprob: -9.10671615600586
    9. ')' → logprob: -10.48171615600586
    10. '```' → logprob: -10.60671615600586

Token 706: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.5120287066092715e-05
    2. 'results' → logprob: -10.875035285949707
    3. ' results' → logprob: -11.250035285949707
    4. '           ' → logprob: -14.000035285949707
    5. '   ' → logprob: -14.500035285949707
    6. '              ' → logprob: -14.875035285949707
    7. '	           ' → logprob: -14.875035285949707
    8. '```' → logprob: -15.000035285949707
    9. '	results' → logprob: -15.500035285949707
    10. '                   ' → logprob: -15.625035285949707

Token 707: ' results' (ID: 4376)
  Prédit: ' results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.5975466370582581
    2. 'results' (adapté à ' results') → logprob: -0.8475466370582581
    3. '               ' → logprob: -3.8475465774536133
    4. '	results' → logprob: -10.722546577453613
    5. '                   ' → logprob: -11.597546577453613
    6. '   ' → logprob: -11.972546577453613
    7. '           ' → logprob: -13.472546577453613
    8. '.results' → logprob: -13.597546577453613
    9. '(results' → logprob: -13.847546577453613
    10. '_results' → logprob: -14.097546577453613

Token 708: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.3451433409936726e-05
    2. '.' → logprob: -10.375033378601074
    3. '.app' → logprob: -13.500033378601074
    4. '.ap' → logprob: -14.625033378601074
    5. '.extend' → logprob: -16.12503433227539
    6. '.Append' → logprob: -16.37503433227539
    7. 'append' → logprob: -16.50003433227539
    8. '.setdefault' → logprob: -16.50003433227539
    9. '.add' → logprob: -16.62503433227539
    10. ' .' → logprob: -17.62503433227539

Token 709: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -3.023293538717553e-05
    2. 'floor' → logprob: -10.500030517578125
    3. '(' → logprob: -13.000030517578125
    4. ' floor' → logprob: -14.875030517578125
    5. '(
' → logprob: -17.750030517578125
    6. '_floor' → logprob: -18.375030517578125
    7. 'f' → logprob: -18.875030517578125
    8. '	f' → logprob: -19.125030517578125
    9. ' (' → logprob: -19.625030517578125
    10. 'Floor' → logprob: -20.000030517578125

Token 710: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -9.491498531133402e-06
    2. 'oor' → logprob: -12.125009536743164
    3. 'floor' → logprob: -12.500009536743164
    4. 'lo' → logprob: -16.000009536743164
    5. 'loo' → logprob: -16.125009536743164
    6. 'loat' → logprob: -17.000009536743164
    7. '```' → logprob: -18.625009536743164
    8. '[' → logprob: -19.000009536743164
    9. 'l' → logprob: -19.000009536743164
    10. 'loot' → logprob: -19.125009536743164

Token 711: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09632045030593872
    2. '
' → logprob: -2.471320390701294
    3. '<|end|>' → logprob: -5.221320629119873
    4. '        
' → logprob: -6.846320629119873
    5. 'return' → logprob: -7.596320629119873
    6. '<|end|>' → logprob: -8.721320152282715
    7. ' return' → logprob: -8.846320152282715
    8. '
' → logprob: -10.971320152282715
    9. ')return' → logprob: -11.721320152282715
    10. '	return' → logprob: -11.971320152282715

Token 712: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00046713458141312003
    2. 'return' → logprob: -8.250467300415039
    3. '
' → logprob: -8.625467300415039
    4. ' return' → logprob: -10.625467300415039
    5. '	return' → logprob: -13.875467300415039
    6. '	' → logprob: -14.750467300415039
    7. '        
' → logprob: -15.125467300415039
    8. '```' → logprob: -15.250467300415039
    9. '   ' → logprob: -16.00046730041504
    10. '      ' → logprob: -16.12546730041504

Token 713: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017373859882354736
    2. 'return' (adapté à ' return') → logprob: -4.267374038696289
    3. '	' → logprob: -6.517374038696289
    4. ' return' → logprob: -7.142374038696289
    5. '	return' → logprob: -7.267374038696289
    6. '   ' → logprob: -8.642374038696289
    7. '        
' → logprob: -10.767374038696289
    8. '
' → logprob: -10.767374038696289
    9. '	   ' → logprob: -12.267374038696289
    10. '```' → logprob: -13.017374038696289

Token 714: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.005233763717114925
    2. ' results' → logprob: -5.2552337646484375
    3. '	results' → logprob: -17.505233764648438
    4. '(results' → logprob: -19.380233764648438
    5. '.results' → logprob: -21.505233764648438
    6. '[' → logprob: -22.505233764648438
    7. '   ' → logprob: -23.130233764648438
    8. 'Results' → logprob: -23.505233764648438
    9. '_results' → logprob: -23.630233764648438
    10. 'result' → logprob: -24.380233764648438

Token 715: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.234343409538269
    2. '<|end|>' → logprob: -1.234343409538269
    3. '```' → logprob: -1.359343409538269
    4. 'if' → logprob: -2.6093435287475586
    5. 'def' → logprob: -2.7343435287475586
    6. 'class' → logprob: -4.109343528747559
    7. 'import' → logprob: -5.484343528747559
    8. '
' → logprob: -7.609343528747559
    9. '<|end|>' → logprob: -7.984343528747559
    10. '#!/' → logprob: -8.359343528747559

Token 716: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.41671329736709595
    2. '```' → logprob: -1.7917132377624512
    3. 'def' → logprob: -2.416713237762451
    4. 'if' → logprob: -3.166713237762451
    5. '<|end|>' → logprob: -3.291713237762451
    6. 'import' → logprob: -5.666713237762451
    7. 'class' → logprob: -7.666713237762451
    8. '<|end|>' → logprob: -8.04171371459961
    9. 'for' → logprob: -8.29171371459961
    10. '#!/' → logprob: -8.66671371459961

Token 717: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.12693944573402405
    2. 'main' → logprob: -2.126939535140991
    3. ' run' → logprob: -11.62693977355957
    4. 'run' → logprob: -13.12693977355957
    5. ' solve' → logprob: -15.25193977355957
    6. '	main' → logprob: -16.25193977355957
    7. 'solve' → logprob: -17.00193977355957
    8. 'simulate' → logprob: -17.25193977355957
    9. '_main' → logprob: -17.50193977355957
    10. ' simulate' → logprob: -18.25193977355957

Token 718: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.9623810658231378e-05
    2. ' ():' → logprob: -11.250020027160645
    3. '():
' → logprob: -12.625020027160645
    4. '()' → logprob: -12.750020027160645
    5. '(' → logprob: -15.000020027160645
    6. '()>' → logprob: -17.250019073486328
    7. '():
' → logprob: -17.875019073486328
    8. '().' → logprob: -19.000019073486328
    9. '()">' → logprob: -19.000019073486328
    10. ':' → logprob: -19.125019073486328

Token 719: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5143198370933533
    2. ' physics' → logprob: -1.014319896697998
    3. 'physics' → logprob: -3.389319896697998
    4. ' import' → logprob: -6.014319896697998
    5. 'import' → logprob: -6.889319896697998
    6. ' crack' → logprob: -7.014319896697998
    7. '   ' → logprob: -7.764319896697998
    8. ' input' → logprob: -7.889319896697998
    9. 'cr' → logprob: -8.88931941986084
    10. 'input' → logprob: -9.26431941986084

Token 720: ' physics' (ID: 35438)
  Prédit: 'physics'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'physics' (adapté à ' physics') → logprob: -0.04345596581697464
    2. ' physics' → logprob: -3.6684560775756836
    3. 'free' → logprob: -4.918456077575684
    4. '   ' → logprob: -5.043456077575684
    5. 'import' → logprob: -6.168456077575684
    6. ' free' → logprob: -7.793456077575684
    7. 'model' → logprob: -8.543456077575684
    8. 'phys' → logprob: -9.043456077575684
    9. 'cr' → logprob: -9.168456077575684
    10. ' import' → logprob: -9.793456077575684

Token 721: '_model' (ID: 10928)
  Prédit: '_model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_model' → logprob: -4.723352049040841e-06
    2. '_' → logprob: -13.500004768371582
    3. ' =' → logprob: -13.625004768371582
    4. '=' → logprob: -14.000004768371582
    5. '=_' → logprob: -14.375004768371582
    6. 'model' → logprob: -14.750004768371582
    7. 'Model' → logprob: -16.500003814697266
    8. '_ph' → logprob: -16.500003814697266
    9. '_mode' → logprob: -17.375003814697266
    10. '_models' → logprob: -17.375003814697266

Token 722: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889111340045929
    2. '=' → logprob: -2.5788910388946533
    3. ' =
' → logprob: -14.453890800476074
    4. '   ' → logprob: -15.078890800476074
    5. ' ' → logprob: -15.578890800476074
    6. '=

' → logprob: -16.32889175415039
    7. ',' → logprob: -16.45389175415039
    8. '=
' → logprob: -17.20389175415039
    9. '=model' → logprob: -17.20389175415039
    10. '  ' → logprob: -17.32889175415039

Token 723: ' Free' (ID: 5358)
  Prédit: 'Free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Free' → logprob: -0.029750484973192215
    2. ' Free' → logprob: -3.5297505855560303
    3. '_Free' → logprob: -17.40475082397461
    4. 'Fre' → logprob: -19.40475082397461
    5. ' free' → logprob: -20.40475082397461
    6. '.Free' → logprob: -20.77975082397461
    7. '-Free' → logprob: -21.40475082397461
    8. 'FREE' → logprob: -21.90475082397461
    9. '   ' → logprob: -21.90475082397461
    10. ' Fre' → logprob: -21.90475082397461

Token 724: 'Fall' (ID: 69961)
  Prédit: 'Fall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fall' → logprob: -1.9361264946837764e-07
    2. 'Free' → logprob: -16.375
    3. 'Fail' → logprob: -17.375
    4. 'Fly' → logprob: -19.0
    5. ' Fall' → logprob: -19.0
    6. 'Drop' → logprob: -19.375
    7. 'fall' → logprob: -19.625
    8. 'Falls' → logprob: -19.75
    9. 'Fal' → logprob: -20.125
    10. 'Fill' → logprob: -20.25

Token 725: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -1.9361264946837764e-07
    2. 'model' → logprob: -17.0
    3. '(' → logprob: -17.125
    4. 'Mod' → logprob: -17.375
    5. '(Model' → logprob: -17.375
    6. 'odel' → logprob: -18.125
    7. '	Model' → logprob: -18.5
    8. 'Physics' → logprob: -18.625
    9. ' Model' → logprob: -19.125
    10. 'Mode' → logprob: -19.125

Token 726: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0031962506473064423
    2. '()
' → logprob: -5.7531962394714355
    3. '   ' → logprob: -11.003196716308594
    4. '()
' → logprob: -14.003196716308594
    5. ' ()' → logprob: -15.128196716308594
    6. '(' → logprob: -15.503196716308594
    7. '()

' → logprob: -15.503196716308594
    8. 'physics' → logprob: -15.878196716308594
    9. '()`' → logprob: -16.128196716308594
    10. '()\' → logprob: -16.253196716308594

Token 727: '   ' (ID: 271)
  Prédit: ' height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' height' → logprob: -0.3003353476524353
    2. 'height' → logprob: -1.92533540725708
    3. '   ' → logprob: -2.17533540725708
    4. '
' → logprob: -11.300334930419922
    5. ' floor' → logprob: -12.300334930419922
    6. 'floor' → logprob: -12.550334930419922
    7. '```' → logprob: -12.800334930419922
    8. ' ' → logprob: -13.425334930419922
    9. '_height' → logprob: -13.550334930419922
    10. '(height' → logprob: -13.675334930419922

Token 728: ' floor' (ID: 8350)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -3.619311974034645e-05
    2. ' height' → logprob: -10.500036239624023
    3. 'floor' (adapté à ' floor') → logprob: -11.750036239624023
    4. '   ' → logprob: -14.375036239624023
    5. 'linear' → logprob: -17.000036239624023
    6. 'cr' → logprob: -17.250036239624023
    7. '
' → logprob: -17.875036239624023
    8. 'input' → logprob: -18.125036239624023
    9. '```' → logprob: -18.500036239624023
    10. '    
' → logprob: -19.125036239624023

Token 729: '_model' (ID: 10928)
  Prédit: '_height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.01590438187122345
    2. '_model' → logprob: -5.015904426574707
    3. 'Height' → logprob: -5.390904426574707
    4. 'height' → logprob: -5.515904426574707
    5. 'model' → logprob: -7.515904426574707
    6. '   ' → logprob: -10.890904426574707
    7. 'Model' → logprob: -13.015904426574707
    8. ' height' → logprob: -14.765904426574707
    9. '=' → logprob: -15.015904426574707
    10. 'HEIGHT' → logprob: -15.390904426574707

Token 730: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192928314208984
    2. ' =' → logprob: -1.5019292831420898
    3. '   ' → logprob: -15.62692928314209
    4. '＝' → logprob: -19.251930236816406
    5. '=
' → logprob: -19.376930236816406
    6. ' ' → logprob: -19.501930236816406
    7. ':' → logprob: -20.251930236816406
    8. '=

' → logprob: -20.376930236816406
    9. '=line' → logprob: -20.626930236816406
    10. '=f' → logprob: -20.626930236816406

Token 731: ' Linear' (ID: 29092)
  Prédit: 'Linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Linear' → logprob: -0.10020752996206284
    2. ' Linear' → logprob: -2.350207567214966
    3. ' linear' → logprob: -14.350207328796387
    4. 'Line' → logprob: -16.600208282470703
    5. 'linear' → logprob: -16.725208282470703
    6. '   ' → logprob: -17.350208282470703
    7. '.Linear' → logprob: -17.350208282470703
    8. 'Lin' → logprob: -17.475208282470703
    9. '_linear' → logprob: -17.600208282470703
    10. ' ' → logprob: -18.600208282470703

Token 732: 'Floor' (ID: 47596)
  Prédit: 'Floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Floor' → logprob: -3.128163257315464e-07
    2. '_floor' → logprob: -15.625
    3. 'floor' → logprob: -16.625
    4. ' Floor' → logprob: -17.125
    5. 'Foot' → logprob: -19.0
    6. ' floor' → logprob: -19.125
    7. 'Flo' → logprob: -19.25
    8. 'Height' → logprob: -19.375
    9. '```' → logprob: -19.75
    10. '
' → logprob: -20.375

Token 733: 'Height' (ID: 5817)
  Prédit: 'Height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Height' → logprob: -7.896309739408025e-07
    2. 'height' → logprob: -15.000000953674316
    3. 'Model' → logprob: -15.500000953674316
    4. 'He' → logprob: -15.625000953674316
    5. '_height' → logprob: -18.0
    6. ' Height' → logprob: -18.25
    7. 'Hei' → logprob: -18.5
    8. ' height' → logprob: -18.625
    9. 'Floor' → logprob: -18.75
    10. '   ' → logprob: -19.375

Token 734: 'Model' (ID: 2239)
  Prédit: 'Model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Model' → logprob: -6.704273118884885e-07
    2. 'model' → logprob: -14.750000953674316
    3. '   ' → logprob: -16.25
    4. '	Model' → logprob: -16.75
    5. 'odel' → logprob: -17.375
    6. ' Model' → logprob: -18.875
    7. 'Mod' → logprob: -19.0
    8. 'Mode' → logprob: -19.125
    9. '```' → logprob: -19.125
    10. '_model' → logprob: -19.75

Token 735: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002004768932238221
    2. '
' → logprob: -7.127004623413086
    3. 'cr' → logprob: -7.752004623413086
    4. '()
' → logprob: -7.752004623413086
    5. '()' → logprob: -8.127004623413086
    6. '    
' → logprob: -11.002004623413086
    7. '(cr' → logprob: -11.377004623413086
    8. ' crack' → logprob: -12.502004623413086
    9. '	cr' → logprob: -12.627004623413086
    10. '  ' → logprob: -13.002004623413086

Token 736: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018670041114091873
    2. 'cr' → logprob: -4.518670082092285
    3. ' crack' → logprob: -4.893670082092285
    4. '
' → logprob: -11.018670082092285
    5. '	cr' → logprob: -11.143670082092285
    6. 'cracker' → logprob: -11.143670082092285
    7. ' cr' → logprob: -11.268670082092285
    8. ' cracking' → logprob: -11.393670082092285
    9. '```' → logprob: -11.768670082092285
    10. '   ' → logprob: -12.393670082092285

Token 737: ' crack' (ID: 29931)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.002342707710340619
    2. 'cracker' → logprob: -6.377342700958252
    3. 'determ' → logprob: -7.502342700958252
    4. ' crack' → logprob: -9.87734317779541
    5. '   ' → logprob: -10.50234317779541
    6. 'handler' → logprob: -13.50234317779541
    7. 'det' → logprob: -13.75234317779541
    8. '    
' → logprob: -14.12734317779541
    9. 'cra' → logprob: -14.37734317779541
    10. 'crate' → logprob: -14.50234317779541

Token 738: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -0.0003863438032567501
    2. '_velocity' → logprob: -8.125386238098145
    3. 'handler' → logprob: -9.500386238098145
    4. 'Handler' → logprob: -11.625386238098145
    5. '_handle' → logprob: -13.875386238098145
    6. '_detector' → logprob: -14.000386238098145
    7. '_model' → logprob: -14.125386238098145
    8. '_hand' → logprob: -14.375386238098145
    9. '=' → logprob: -14.375386238098145
    10. '   ' → logprob: -14.750386238098145

Token 739: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759401917457581
    2. ' =' → logprob: -0.8259401917457581
    3. '   ' → logprob: -14.450940132141113
    4. '<|end|>' → logprob: -16.70094108581543
    5. '=
' → logprob: -17.20094108581543
    6. 'Cr' → logprob: -17.20094108581543
    7. ' ' → logprob: -17.20094108581543
    8. ')' → logprob: -18.07594108581543
    9. '=create' → logprob: -18.20094108581543
    10. ' =
' → logprob: -18.20094108581543

Token 740: ' Crack' (ID: 70002)
  Prédit: 'Cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cr' → logprob: -0.02645019441843033
    2. ' Crack' → logprob: -3.6514501571655273
    3. ' Cr' → logprob: -8.901450157165527
    4. 'Crash' → logprob: -11.401450157165527
    5. '   ' → logprob: -14.026450157165527
    6. ' crack' → logprob: -14.901450157165527
    7. ' Crash' → logprob: -15.026450157165527
    8. 'Crunch' → logprob: -15.026450157165527
    9. 'Crystal' → logprob: -15.776450157165527
    10. 'C' → logprob: -15.776450157165527

Token 741: 'Velocity' (ID: 34616)
  Prédit: 'Velocity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Velocity' → logprob: -1.8624639324116288e-06
    2. '_velocity' → logprob: -13.500001907348633
    3. 'velocity' → logprob: -15.500001907348633
    4. 'Vel' → logprob: -16.750001907348633
    5. 'Voltage' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.250001907348633
    7. ' Velocity' → logprob: -17.375001907348633
    8. 's' → logprob: -18.875001907348633
    9. '-' → logprob: -19.125001907348633
    10. '       ' → logprob: -19.250001907348633

Token 742: 'Determ' (ID: 130588)
  Prédit: 'Determ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Determ' → logprob: -9.088346359931165e-07
    2. 'determ' → logprob: -14.500000953674316
    3. 'er' → logprob: -15.625000953674316
    4. ' Determ' → logprob: -17.0
    5. ' determ' → logprob: -17.5
    6. 'D' → logprob: -17.625
    7. '   ' → logprob: -18.0
    8. '_D' → logprob: -19.375
    9. '_d' → logprob: -19.875
    10. 'Differ' → logprob: -20.0

Token 743: 'iner' (ID: 6010)
  Prédit: 'iner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iner' → logprob: -0.012531901709735394
    2. 'er' → logprob: -4.387531757354736
    3. 'in' → logprob: -11.012532234191895
    4. 'ner' → logprob: -12.887532234191895
    5. 'oner' → logprob: -14.762532234191895
    6. 'ier' → logprob: -15.012532234191895
    7. 'her' → logprob: -15.262532234191895
    8. 'ver' → logprob: -15.387532234191895
    9. '   ' → logprob: -15.887532234191895
    10. '...' → logprob: -16.012531280517578

Token 744: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003186267102137208
    2. '(
' → logprob: -5.753186225891113
    3. '(
' → logprob: -12.253186225891113
    4. '(cr' → logprob: -13.128186225891113
    5. '   ' → logprob: -13.628186225891113
    6. '(

' → logprob: -15.128186225891113
    7. 'physics' → logprob: -16.00318717956543
    8. '(`' → logprob: -16.50318717956543
    9. ' (' → logprob: -16.87818717956543
    10. '(`
' → logprob: -17.75318717956543

Token 745: 'physics' (ID: 138014)
  Prédit: 'physics'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'physics' → logprob: -4.930552313453518e-05
    2. ' physics' → logprob: -10.500049591064453
    3. '   ' → logprob: -10.750049591064453
    4. 'phys' → logprob: -15.875049591064453
    5. 'Physics' → logprob: -17.250049591064453
    6. '       ' → logprob: -17.250049591064453
    7. 'physical' → logprob: -17.500049591064453
    8. '```' → logprob: -18.125049591064453
    9. 'python' → logprob: -18.250049591064453
    10. ')' → logprob: -18.500049591064453

Token 746: '_model' (ID: 10928)
  Prédit: '_model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_model' → logprob: -0.2519429922103882
    2. '_handler' → logprob: -1.5019429922103882
    3. '   ' → logprob: -12.50194263458252
    4. 'handler' → logprob: -12.75194263458252
    5. 'model' → logprob: -12.75194263458252
    6. '_handle' → logprob: -13.25194263458252
    7. 'Model' → logprob: -13.75194263458252
    8. 'Handler' → logprob: -14.12694263458252
    9. '_velocity' → logprob: -14.75194263458252
    10. '```' → logprob: -16.751943588256836

Token 747: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.081584716506768e-05
    2. ',
' → logprob: -10.875020980834961
    3. ',f' → logprob: -13.875020980834961
    4. ' ,' → logprob: -14.000020980834961
    5. ')' → logprob: -18.00002098083496
    6. ',

' → logprob: -18.25002098083496
    7. '‌,' → logprob: -18.87502098083496
    8. ',\
' → logprob: -19.25002098083496
    9. ',
' → logprob: -19.37502098083496
    10. 'floor' → logprob: -19.37502098083496

Token 748: ' floor' (ID: 8350)
  Prédit: ' floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' floor' → logprob: -0.6931473612785339
    2. 'floor' → logprob: -0.6931473612785339
    3. '   ' → logprob: -16.818147659301758
    4. '_floor' → logprob: -16.818147659301758
    5. 'f' → logprob: -16.943147659301758
    6. 'flo' → logprob: -18.318147659301758
    7. ' ' → logprob: -19.693147659301758
    8. 'Floor' → logprob: -19.818147659301758
    9. '.floor' → logprob: -19.943147659301758
    10. ' ' → logprob: -20.193147659301758

Token 749: '_model' (ID: 10928)
  Prédit: '_model'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_model' → logprob: -1.1472419600977446e-06
    2. 'model' → logprob: -14.000000953674316
    3. '_height' → logprob: -15.375000953674316
    4. '_mode' → logprob: -17.750001907348633
    5. 'Model' → logprob: -19.000001907348633
    6. '_' → logprob: -19.750001907348633
    7. ' model' → logprob: -19.875001907348633
    8. '_MODEL' → logprob: -20.125001907348633
    9. ' _' → logprob: -20.625001907348633
    10. '_floor' → logprob: -20.750001907348633

Token 750: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04870534688234329
    2. ')' → logprob: -3.2987053394317627
    3. '   ' → logprob: -4.548705577850342
    4. '
' → logprob: -10.673705101013184
    5. ')
' → logprob: -12.923705101013184
    6. '    
' → logprob: -15.423705101013184
    7. 'input' → logprob: -15.548705101013184
    8. ' )
' → logprob: -15.798705101013184
    9. ')

' → logprob: -15.923705101013184
    10. '  ' → logprob: -16.7987060546875

Token 751: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08617178350687027
    2. 'input' → logprob: -2.711171865463257
    3. ' input' → logprob: -4.211171627044678
    4. ' processor' → logprob: -7.336171627044678
    5. 'processor' → logprob: -7.461171627044678
    6. 'ip' → logprob: -11.211172103881836
    7. 'import' → logprob: -11.461172103881836
    8. ' ip' → logprob: -11.961172103881836
    9. 'process' → logprob: -12.086172103881836
    10. '    
' → logprob: -12.836172103881836

Token 752: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.19148743152618408
    2. 'import' → logprob: -2.4414873123168945
    3. 'processor' → logprob: -2.4414873123168945
    4. ' input' → logprob: -9.316487312316895
    5. '   ' → logprob: -9.691487312316895
    6. ' processor' → logprob: -10.566487312316895
    7. ' import' → logprob: -11.566487312316895
    8. 'ip' → logprob: -11.816487312316895
    9. 'proc' → logprob: -12.566487312316895
    10. 'inputs' → logprob: -12.816487312316895

Token 753: '_processor' (ID: 129611)
  Prédit: '_stream'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -0.0010220900876447558
    2. '_processor' → logprob: -7.376021862030029
    3. '_lines' → logprob: -7.876021862030029
    4. '_data' → logprob: -12.001022338867188
    5. '_iterator' → logprob: -13.126022338867188
    6. 'stream' → logprob: -13.751022338867188
    7. '_iter' → logprob: -14.126022338867188
    8. 'Stream' → logprob: -14.251022338867188
    9. '_reader' → logprob: -14.251022338867188
    10. '_source' → logprob: -14.376022338867188

Token 754: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519344687461853
    2. '=' → logprob: -1.50193452835083
    3. '.process' → logprob: -12.501934051513672
    4. 'process' → logprob: -14.376934051513672
    5. '(process' → logprob: -14.626934051513672
    6. '=input' → logprob: -14.876934051513672
    7. ' ' → logprob: -16.501934051513672
    8. '   ' → logprob: -16.876934051513672
    9. '.' → logprob: -17.376934051513672
    10. ' =
' → logprob: -18.126934051513672

Token 755: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -1.306760805164231e-05
    2. ' Input' → logprob: -11.25001335144043
    3. '	Input' → logprob: -21.62501335144043
    4. '   ' → logprob: -21.87501335144043
    5. '_input' → logprob: -25.00001335144043
    6. ' ' → logprob: -25.75001335144043
    7. '_Input' → logprob: -25.75001335144043
    8. '<Input' → logprob: -26.00001335144043
    9. 'input' → logprob: -26.50001335144043
    10. '\Input' → logprob: -27.50001335144043

Token 756: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: 0.0
    2. 'Process' → logprob: -18.5
    3. 'processor' → logprob: -19.125
    4. ' Processor' → logprob: -20.875
    5. '_processor' → logprob: -23.875
    6. 'Processors' → logprob: -24.125
    7. ' processor' → logprob: -24.25
    8. 'Processed' → logprob: -24.5
    9. 'Processing' → logprob: -24.5
    10. 'Proces' → logprob: -24.75

Token 757: '(cr' (ID: 46462)
  Prédit: '(cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cr' → logprob: -0.009106588549911976
    2. 'cr' → logprob: -5.259106636047363
    3. '   ' → logprob: -5.634106636047363
    4. '(' → logprob: -8.884106636047363
    5. '(
' → logprob: -9.384106636047363
    6. '	cr' → logprob: -10.509106636047363
    7. ' crack' → logprob: -11.009106636047363
    8. '(c' → logprob: -11.384106636047363
    9. '(crate' → logprob: -13.134106636047363
    10. 'Cr' → logprob: -13.384106636047363

Token 758: 'ack' (ID: 552)
  Prédit: 'ack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ack' → logprob: -0.00041279601282440126
    2. 'e' → logprob: -8.125412940979004
    3. 'a' → logprob: -9.750412940979004
    4. 'ach' → logprob: -11.125412940979004
    5. '```' → logprob: -11.750412940979004
    6. 'ac' → logprob: -11.875412940979004
    7. 'ak' → logprob: -11.875412940979004
    8. '
' → logprob: -12.375412940979004
    9. 'ck' → logprob: -13.437912940979004
    10. '{' → logprob: -13.750412940979004

Token 759: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -1.9361264946837764e-07
    2. '_handle' → logprob: -16.375
    3. 'handler' → logprob: -17.5
    4. '_hand' → logprob: -18.125
    5. 'Handler' → logprob: -19.5
    6. '_velocity' → logprob: -20.0
    7. '_HANDLER' → logprob: -20.25
    8. '_' → logprob: -20.5
    9. '_processor' → logprob: -21.125
    10. '-handler' → logprob: -21.125

Token 760: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11398941278457642
    2. ')' → logprob: -2.4889893531799316
    3. '
' → logprob: -3.9889893531799316
    4. ')
' → logprob: -5.738989353179932
    5. '    
' → logprob: -5.863989353179932
    6. 'import' → logprob: -9.48898983001709
    7. 'input' → logprob: -10.36398983001709
    8. ',
' → logprob: -11.36398983001709
    9. '  
' → logprob: -11.36398983001709
    10. ',' → logprob: -11.48898983001709

Token 761: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013195403851568699
    2. ' for' → logprob: -5.013195514678955
    3. 'import' → logprob: -5.763195514678955
    4. 'for' → logprob: -5.763195514678955
    5. ' import' → logprob: -9.888195037841797
    6. ' lines' → logprob: -10.013195037841797
    7. 'input' → logprob: -10.138195037841797
    8. ' input' → logprob: -11.138195037841797
    9. '    
' → logprob: -11.263195037841797
    10. '
' → logprob: -11.638195037841797

Token 762: ' results' (ID: 4376)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04042692482471466
    2. ' for' → logprob: -3.9154269695281982
    3. 'results' (adapté à ' results') → logprob: -4.290426731109619
    4. 'import' → logprob: -6.040426731109619
    5. '   ' → logprob: -6.790426731109619
    6. 'lines' → logprob: -7.290426731109619
    7. ' results' → logprob: -7.415426731109619
    8. 'input' → logprob: -7.790426731109619
    9. ' lines' → logprob: -7.790426731109619
    10. 'if' → logprob: -8.165427207946777

Token 763: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021023452281952
    2. '=' → logprob: -2.350210189819336
    3. '   ' → logprob: -13.475210189819336
    4. ':' → logprob: -14.725210189819336
    5. ' =
' → logprob: -14.975210189819336
    6. '	' → logprob: -15.100210189819336
    7. ' ' → logprob: -15.225210189819336
    8. '<|end|>' → logprob: -15.850210189819336
    9. ' =
' → logprob: -16.100210189819336
    10. '.' → logprob: -16.225210189819336

Token 764: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008614926598966122
    2. ' input' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.133614540100098
    4. '[]' → logprob: -17.383615493774414
    5. '[]
' → logprob: -17.508615493774414
    6. '[input' → logprob: -17.883615493774414
    7. 'Input' → logprob: -18.133615493774414
    8. '	input' → logprob: -18.383615493774414
    9. ' ' → logprob: -19.008615493774414
    10. '_input' → logprob: -19.633615493774414

Token 765: '_processor' (ID: 129611)
  Prédit: '_processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_processor' → logprob: -0.0005039428360760212
    2. '_stream' → logprob: -7.750504016876221
    3. '_processors' → logprob: -10.250503540039062
    4. '=sys' → logprob: -11.000503540039062
    5. 'processor' → logprob: -12.000503540039062
    6. '(sys' → logprob: -12.125503540039062
    7. 'Processor' → logprob: -12.750503540039062
    8. '_process' → logprob: -14.250503540039062
    9. 'sys' → logprob: -14.375503540039062
    10. '_source' → logprob: -14.375503540039062

Token 766: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -1.0280383548888494e-06
    2. '.' → logprob: -14.625000953674316
    3. 'process' → logprob: -14.625000953674316
    4. ' .' → logprob: -17.000001907348633
    5. '   ' → logprob: -18.250001907348633
    6. '(process' → logprob: -20.500001907348633
    7. '	process' → logprob: -20.750001907348633
    8. '.parse' → logprob: -21.250001907348633
    9. '
' → logprob: -21.375001907348633
    10. '.perform' → logprob: -21.625001907348633

Token 767: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -6.153795766294934e-06
    2. 'stream' → logprob: -12.750005722045898
    3. '(sys' → logprob: -13.125005722045898
    4. 'sys' → logprob: -14.625005722045898
    5. '_sys' → logprob: -15.375005722045898
    6. '(stream' → logprob: -15.750005722045898
    7. '_st' → logprob: -16.0000057220459
    8. '=sys' → logprob: -17.1250057220459
    9. '_string' → logprob: -17.7500057220459
    10. 's' → logprob: -17.7500057220459

Token 768: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.3869934678077698
    2. 'sys' → logprob: -1.136993408203125
    3. '(iter' → logprob: -9.761993408203125
    4. ' sys' → logprob: -10.386993408203125
    5. 'iter' → logprob: -10.636993408203125
    6. '=sys' → logprob: -12.386993408203125
    7. '	sys' → logprob: -12.386993408203125
    8. '   ' → logprob: -13.386993408203125
    9. '```' → logprob: -16.886993408203125
    10. ' iter' → logprob: -18.011993408203125

Token 769: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -6.704273118884885e-07
    2. '.std' → logprob: -14.750000953674316
    3. '.' → logprob: -16.625
    4. '.argv' → logprob: -17.375
    5. '.stdout' → logprob: -17.625
    6. '.__' → logprob: -17.875
    7. 'stdin' → logprob: -18.75
    8. '.st' → logprob: -19.25
    9. '```' → logprob: -20.375
    10. '.<' → logprob: -20.5

Token 770: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00318163656629622
    2. ')
' → logprob: -5.753181457519531
    3. ' )' → logprob: -13.253181457519531
    4. '.readlines' → logprob: -13.753181457519531
    5. '.readline' → logprob: -14.753181457519531
    6. ')

' → logprob: -15.128181457519531
    7. ')
' → logprob: -16.50318145751953
    8. '))' → logprob: -16.87818145751953
    9. '   ' → logprob: -17.12818145751953
    10. '())' → logprob: -17.62818145751953

Token 771: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038194917142391205
    2. 'for' → logprob: -3.2881948947906494
    3. ' for' → logprob: -8.78819465637207
    4. '
' → logprob: -14.66319465637207
    5. '```' → logprob: -15.16319465637207
    6. '    
' → logprob: -15.53819465637207
    7. '	for' → logprob: -15.91319465637207
    8. '       ' → logprob: -17.28819465637207
    9. '   ' → logprob: -19.78819465637207
    10. '
' → logprob: -20.16319465637207

Token 772: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.292907877039397e-06
    2. ' for' → logprob: -13.50000286102295
    3. '   ' → logprob: -13.75000286102295
    4. '
' → logprob: -14.12500286102295
    5. '```' → logprob: -17.625003814697266
    6. '	for' → logprob: -18.375003814697266
    7. '    
' → logprob: -18.500003814697266
    8. 'print' → logprob: -18.500003814697266
    9. '
' → logprob: -20.250003814697266
    10. '

' → logprob: -22.375003814697266

Token 773: ' result' (ID: 1534)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7257081866264343
    2. 'result' → logprob: -0.9757081866264343
    3. 'floor' → logprob: -1.975708246231079
    4. ' floor' → logprob: -8.7257080078125
    5. ' res' → logprob: -8.7257080078125
    6. 'r' → logprob: -9.4757080078125
    7. ' result' → logprob: -10.4757080078125
    8. 'flo' → logprob: -15.8507080078125
    9. '   ' → logprob: -16.9757080078125
    10. ' r' → logprob: -17.2257080078125

Token 774: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021990251261740923
    2. 'in' → logprob: -6.127199172973633
    3. '   ' → logprob: -11.627199172973633
    4. '```' → logprob: -13.127199172973633
    5. '_' → logprob: -14.502199172973633
    6. ':' → logprob: -14.877199172973633
    7. '_in' → logprob: -14.877199172973633
    8. ',' → logprob: -14.877199172973633
    9. '.' → logprob: -15.002199172973633
    10. '	in' → logprob: -15.877199172973633

Token 775: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0004306692280806601
    2. ' results' → logprob: -7.750430583953857
    3. '(results' → logprob: -18.625431060791016
    4. 'result' → logprob: -19.000431060791016
    5. '	results' → logprob: -19.625431060791016
    6. '
' → logprob: -20.250431060791016
    7. '   ' → logprob: -20.375431060791016
    8. '.results' → logprob: -22.500431060791016
    9. '_results' → logprob: -23.125431060791016
    10. 'Results' → logprob: -23.250431060791016

Token 776: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008907516486942768
    2. ':
' → logprob: -5.383907318115234
    3. '       ' → logprob: -5.508907318115234
    4. '   ' → logprob: -8.633907318115234
    5. 'print' → logprob: -11.508907318115234
    6. ',' → logprob: -11.758907318115234
    7. '):' → logprob: -12.133907318115234
    8. '.' → logprob: -12.383907318115234
    9. '<|end|>' → logprob: -12.383907318115234
    10. ' print' → logprob: -12.758907318115234

Token 777: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019722258730325848
    2. 'print' → logprob: -8.625197410583496
    3. ' print' → logprob: -11.000197410583496
    4. '   ' → logprob: -14.375197410583496
    5. '```' → logprob: -16.12519645690918
    6. '           ' → logprob: -16.62519645690918
    7. '      ' → logprob: -18.62519645690918
    8. '	print' → logprob: -18.87519645690918
    9. '     ' → logprob: -19.12519645690918
    10. '    ' → logprob: -19.87519645690918

Token 778: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.5
    3. '   ' → logprob: -17.0
    4. '       ' → logprob: -20.5
    5. '```' → logprob: -21.75
    6. 'println' → logprob: -22.125
    7. '	print' → logprob: -24.875
    8. 'printf' → logprob: -25.875
    9. '
' → logprob: -26.375
    10. '           ' → logprob: -26.75

Token 779: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -7.517272024415433e-05
    2. 'result' → logprob: -9.500075340270996
    3. '(' → logprob: -15.375075340270996
    4. ' result' → logprob: -18.75007438659668
    5. '=result' → logprob: -19.87507438659668
    6. '(
' → logprob: -20.62507438659668
    7. ',result' → logprob: -20.75007438659668
    8. '(f' → logprob: -20.75007438659668
    9. '[result' → logprob: -21.50007438659668
    10. '(results' → logprob: -21.62507438659668

Token 780: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -13.625001907348633
    3. '<|end|>' → logprob: -15.875001907348633
    4. '())' → logprob: -16.250001907348633
    5. ' )' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.875001907348633
    7. '()' → logprob: -18.125001907348633
    8. '),' → logprob: -18.500001907348633
    9. '```' → logprob: -18.500001907348633
    10. '}' → logprob: -18.875001907348633

Token 781: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.438573680294212e-06
    2. ' if' → logprob: -12.250005722045898
    3. '```' → logprob: -15.000005722045898
    4. '
' → logprob: -15.875005722045898
    5. '#' → logprob: -16.3750057220459
    6. '<|end|>' → logprob: -18.7500057220459
    7. '#if' → logprob: -19.0000057220459
    8. '__' → logprob: -19.3750057220459
    9. '	if' → logprob: -19.5000057220459
    10. '\n' → logprob: -19.8750057220459

Token 782: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.18133403360843658
    2. '__' → logprob: -1.8063340187072754
    3. '_name' → logprob: -6.681334018707275
    4. '_' → logprob: -8.556334495544434
    5. 'name' → logprob: -9.181334495544434
    6. ' ' → logprob: -11.306334495544434
    7. ' name' → logprob: -12.056334495544434
    8. ' ' → logprob: -12.056334495544434
    9. '___' → logprob: -12.556334495544434
    10. 'Name' → logprob: -12.556334495544434

Token 783: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0007118358626030385
    2. ' __' → logprob: -8.125711441040039
    3. '==' → logprob: -8.500711441040039
    4. ' ==' → logprob: -8.750711441040039
    5. 'name' → logprob: -10.750711441040039
    6. '_' → logprob: -11.750711441040039
    7. '__.__' → logprob: -11.750711441040039
    8. '_name' → logprob: -12.375711441040039
    9. '=="' → logprob: -12.875711441040039
    10. '___' → logprob: -13.000711441040039

Token 784: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.8889261304575484e-06
    2. '__.__' → logprob: -13.000003814697266
    3. '==' → logprob: -13.875003814697266
    4. '__
' → logprob: -15.875003814697266
    5. ' ==' → logprob: -16.500003814697266
    6. '___' → logprob: -16.750003814697266
    7. '__.' → logprob: -16.750003814697266
    8. '=="' → logprob: -17.125003814697266
    9. '__["' → logprob: -17.250003814697266
    10. '____' → logprob: -17.500003814697266

Token 785: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005994916893541813
    2. '==' → logprob: -5.25599479675293
    3. ' ==' → logprob: -7.38099479675293
    4. '=="' → logprob: -9.00599479675293
    5. '__.__' → logprob: -11.88099479675293
    6. '___' → logprob: -12.50599479675293
    7. '=='' → logprob: -13.75599479675293
    8. '_' → logprob: -13.88099479675293
    9. '===' → logprob: -14.50599479675293
    10. '____' → logprob: -14.50599479675293

Token 786: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.018162699416279793
    2. ''' → logprob: -4.018162727355957
    3. ' "__' → logprob: -11.643162727355957
    4. '__' → logprob: -12.518162727355957
    5. ' '__' → logprob: -16.14316177368164
    6. '"user' → logprob: -16.76816177368164
    7. '"name' → logprob: -17.01816177368164
    8. ''"' → logprob: -17.89316177368164
    9. '("__' → logprob: -18.26816177368164
    10. '   ' → logprob: -18.39316177368164

Token 787: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -9.674858301877975e-05
    2. '__' → logprob: -9.250096321105957
    3. '_main' → logprob: -15.625096321105957
    4. 'name' → logprob: -15.875096321105957
    5. ' main' → logprob: -16.500097274780273
    6. '"' → logprob: -16.750097274780273
    7. 'python' → logprob: -17.500097274780273
    8. 'built' → logprob: -17.875097274780273
    9. '-main' → logprob: -18.625097274780273
    10. '__":
' → logprob: -19.250097274780273

Token 788: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.1270715296268463
    2. '__' → logprob: -2.1270716190338135
    3. '__':
' → logprob: -8.877071380615234
    4. '__.' → logprob: -13.877071380615234
    5. '__["' → logprob: -13.877071380615234
    6. '__
' → logprob: -14.377071380615234
    7. '_' → logprob: -14.877071380615234
    8. '__.__' → logprob: -14.877071380615234
    9. '__",' → logprob: -15.002071380615234
    10. '__:' → logprob: -15.377071380615234

Token 789: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06890012323856354
    2. '__' → logprob: -3.1939001083374023
    3. ''' → logprob: -4.193900108337402
    4. 'main' → logprob: -4.568900108337402
    5. '   ' → logprob: -9.818900108337402
    6. ' main' → logprob: -10.068900108337402
    7. '	main' → logprob: -12.568900108337402
    8. '_main' → logprob: -12.818900108337402
    9. ' ' → logprob: -12.943900108337402
    10. ' "__' → logprob: -13.818900108337402

Token 790: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.25
    3. '	main' → logprob: -22.0
    4. '   ' → logprob: -25.375
    5. '.main' → logprob: -26.375
    6. '_main' → logprob: -27.5
    7. '(main' → logprob: -27.75
    8. 'mai' → logprob: -28.0
    9. 'ma' → logprob: -28.625
    10. '
' → logprob: -29.375

Token 791: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 789
Tokens correctement prédits (1ère position, stricte): 376
Tokens correctement prédits (1ère position, avec adaptation): 403
Tokens correctement prédits (top 10): 666
Précision stricte (1ère position): 47.66%
Précision adaptée (1ère position): 51.08%
Précision (top 10): 84.41%
================================================================================
