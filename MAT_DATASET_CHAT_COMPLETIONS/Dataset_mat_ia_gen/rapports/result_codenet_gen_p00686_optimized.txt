================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    line = ''
    while line.strip() == '':
        line = input()
    m, n = map(int, line.strip().split())
    if m == 0 and n == 0:
        break
    x, y = 1, 1
    # directions: 0-North,1-East,2-South,3-West
    direction = 0
    while True:
        cmd_line = ''
        while cmd_line.strip() == '':
            cmd_line = input()
        parts = cmd_line.strip().split()
        cmd = parts[0]
        if cmd == 'STOP':
            print(x, y)
            break
        if cmd == 'RIGHT':
            direction = (direction + 1) % 4
        elif cmd == 'LEFT':
            direction = (direction - 1) % 4
        else:
            k = int(parts[1])
            dx, dy = 0, 0
            if direction == 0:
                dx, dy = 0, 1
            elif direction == 1:
                dx, dy = 1, 0
            elif direction == 2:
                dx, dy = 0, -1
            else:
                dx, dy = -1, 0
            if cmd == 'FORWARD':
                for _ in range(k):
                    nx, ny = x + dx, y + dy
                    if nx < 1 or nx > m or ny < 1 or ny > n:
                        break
                    x, y = nx, ny
            elif cmd == 'BACKWARD':
                for _ in range(k):
                    nx, ny = x - dx, y - dy
                    if nx < 1 or nx > m or ny < 1 or ny > n:
                        break
                    x, y = nx, ny
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14202077686786652
    2. ' ' → logprob: -3.0170207023620605
    3. '    ' → logprob: -4.1420207023620605
    4. '\' → logprob: -4.2670207023620605
    5. ' 
' → logprob: -4.5170207023620605
    6. '    
' → logprob: -4.5170207023620605
    7. '\n' → logprob: -5.0170207023620605
    8. '```' → logprob: -5.0170207023620605
    9. ':' → logprob: -5.1420207023620605
    10. '  
' → logprob: -6.5170207023620605

Token 4: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4779955744743347
    2. '    ' → logprob: -1.7279956340789795
    3. ' ' → logprob: -1.9779956340789795
    4. '```' → logprob: -3.6029956340789795
    5. '       ' → logprob: -4.7279953956604
    6. '  ' → logprob: -5.3529953956604
    7. '    
' → logprob: -5.6029953956604
    8. '        
' → logprob: -6.6029953956604
    9. 'pass' → logprob: -6.7279953956604
    10. '`' → logprob: -6.7279953956604

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07796815037727356
    2. '=' → logprob: -2.702968120574951
    3. 's' → logprob: -5.327968120574951
    4. '.' → logprob: -6.952968120574951
    5. ' ' → logprob: -7.827968120574951
    6. '   ' → logprob: -8.07796859741211
    7. '.startswith' → logprob: -8.45296859741211
    8. '       ' → logprob: -8.57796859741211
    9. '[' → logprob: -8.70296859741211
    10. '_' → logprob: -8.70296859741211

Token 6: ' ''
' (ID: 25366)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.08903379738330841
    2. 'input' → logprob: -2.464033842086792
    3. ' ' → logprob: -9.714034080505371
    4. ' f' → logprob: -10.964034080505371
    5. '=input' → logprob: -12.589034080505371
    6. ' file' → logprob: -12.839034080505371
    7. ' readline' → logprob: -12.839034080505371
    8. '   ' → logprob: -13.589034080505371
    9. ' s' → logprob: -14.089034080505371
    10. 'file' → logprob: -14.339034080505371

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06648001819849014
    2. '    ' → logprob: -3.4414799213409424
    3. ' ' → logprob: -4.9414801597595215
    4. '<|end|>' → logprob: -4.9414801597595215
    5. '    
' → logprob: -5.1914801597595215
    6. '       ' → logprob: -5.4414801597595215
    7. '  ' → logprob: -6.8164801597595215
    8. ')' → logprob: -7.1914801597595215
    9. ' 
' → logprob: -7.3164801597595215
    10. ' if' → logprob: -7.5664801597595215

Token 8: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3386527895927429
    2. '    ' → logprob: -1.9636528491973877
    3. ' ' → logprob: -2.0886528491973877
    4. '       ' → logprob: -4.463652610778809
    5. '  ' → logprob: -5.338652610778809
    6. '<|end|>' → logprob: -6.838652610778809
    7. ' line' → logprob: -7.588652610778809
    8. 'i' → logprob: -7.713652610778809
    9. '    
' → logprob: -7.963652610778809
    10. ')' → logprob: -8.088652610778809

Token 9: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.1804010570049286
    2. ' not' → logprob: -2.555401086807251
    3. ' True' → logprob: -2.805401086807251
    4. ' ' → logprob: -3.805401086807251
    5. ' len' → logprob: -6.180400848388672
    6. 'line' → logprob: -6.305400848388672
    7. 'True' → logprob: -8.055400848388672
    8. ' char' → logprob: -9.180400848388672
    9. 'not' → logprob: -9.180400848388672
    10. ' input' → logprob: -9.680400848388672

Token 10: '.strip' (ID: 40613)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7516001462936401
    2. '.strip' → logprob: -1.6266001462936401
    3. '.' → logprob: -1.8766001462936401
    4. ' ==' → logprob: -2.5016002655029297
    5. '==' → logprob: -3.6266002655029297
    6. '.startswith' → logprob: -4.50160026550293
    7. ' not' → logprob: -4.75160026550293
    8. ' ' → logprob: -4.87660026550293
    9. ' <' → logprob: -5.00160026550293
    10. '!=' → logprob: -5.12660026550293

Token 11: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15807120501995087
    2. '()==' → logprob: -2.033071279525757
    3. '()!=' → logprob: -4.658071041107178
    4. '==' → logprob: -5.408071041107178
    5. '():' → logprob: -7.658071041107178
    6. ' ==' → logprob: -7.783071041107178
    7. ' !=' → logprob: -8.908071517944336
    8. '!=' → logprob: -9.283071517944336
    9. '()<' → logprob: -9.408071517944336
    10. '().' → logprob: -10.283071517944336

Token 12: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31396299600601196
    2. ' ==' → logprob: -1.3139629364013672
    3. ' !=' → logprob: -8.063962936401367
    4. '()==' → logprob: -8.688962936401367
    5. '!=' → logprob: -9.563962936401367
    6. '=' → logprob: -9.563962936401367
    7. ':' → logprob: -11.313962936401367
    8. '   ' → logprob: -11.688962936401367
    9. '()' → logprob: -11.813962936401367
    10. '=='' → logprob: -11.938962936401367

Token 13: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.006814827676862478
    2. ''' → logprob: -5.006814956665039
    3. '""' → logprob: -9.756814956665039
    4. ' ''' → logprob: -10.881814956665039
    5. '''''' → logprob: -11.756814956665039
    6. ''''' → logprob: -11.756814956665039
    7. '"":' → logprob: -13.756814956665039
    8. ' '' → logprob: -13.756814956665039
    9. ''s' → logprob: -13.881814956665039
    10. ''user' → logprob: -14.381814956665039

Token 14: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20249362289905548
    2. ' line' → logprob: -2.077493667602539
    3. '   ' → logprob: -3.327493667602539
    4. 'line' → logprob: -3.952493667602539
    5. '<|end|>' → logprob: -6.577493667602539
    6. ' readline' → logprob: -7.952493667602539
    7. 'input' → logprob: -8.452493667602539
    8. 'newline' → logprob: -9.077493667602539
    9. ' ' → logprob: -9.077493667602539
    10. '	line' → logprob: -9.702493667602539

Token 15: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.0027166646905243397
    2. 'try' → logprob: -6.627716541290283
    3. ' line' → logprob: -7.127716541290283
    4. '   ' → logprob: -7.627716541290283
    5. 'user' → logprob: -10.252717018127441
    6. 'input' → logprob: -10.502717018127441
    7. '```' → logprob: -11.127717018127441
    8. '       ' → logprob: -11.752717018127441
    9. 'text' → logprob: -12.627717018127441
    10. ' try' → logprob: -12.752717018127441

Token 16: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.054895371198654175
    2. ' =' → logprob: -2.9298954010009766
    3. '=input' → logprob: -11.554895401000977
    4. '=line' → logprob: -13.304895401000977
    5. '+=' → logprob: -14.179895401000977
    6. '```' → logprob: -15.179895401000977
    7. ' ' → logprob: -16.054895401000977
    8. '＝' → logprob: -16.429895401000977
    9. '   ' → logprob: -16.429895401000977
    10. 'input' → logprob: -16.679895401000977

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05489029362797737
    2. ' input' → logprob: -2.9298903942108154
    3. '   ' → logprob: -12.554890632629395
    4. '```' → logprob: -13.554890632629395
    5. 'sys' → logprob: -14.429890632629395
    6. '(input' → logprob: -14.554890632629395
    7. '=input' → logprob: -14.679890632629395
    8. ' ' → logprob: -14.679890632629395
    9. '<input' → logprob: -14.804890632629395
    10. 'raw' → logprob: -15.554890632629395

Token 18: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3294665813446045
    2. '('' → logprob: -1.3294665813446045
    3. '()' → logprob: -4.204466819763184
    4. '("("' → logprob: -6.954466819763184
    5. '("' → logprob: -10.204466819763184
    6. '('(' → logprob: -10.454466819763184
    7. '(`' → logprob: -10.579466819763184
    8. '("")' → logprob: -10.704466819763184
    9. '```' → logprob: -10.829466819763184
    10. ''' → logprob: -11.954466819763184

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08169257640838623
    2. '<|end|>' → logprob: -2.831692695617676
    3. ')' → logprob: -5.331692695617676
    4. ' if' → logprob: -5.456692695617676
    5. '<|end|>' → logprob: -6.206692695617676
    6. ' ' → logprob: -6.206692695617676
    7. '       ' → logprob: -6.456692695617676
    8. '```' → logprob: -6.956692695617676
    9. '    
' → logprob: -7.081692695617676
    10. '#' → logprob: -7.706692695617676

Token 20: ' m' (ID: 284)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6334887742996216
    2. '   ' → logprob: -1.5084887742996216
    3. ' if' → logprob: -2.758488655090332
    4. '.' → logprob: -3.258488655090332
    5. ' ' → logprob: -3.383488655090332
    6. ')' → logprob: -3.508488655090332
    7. 'if' → logprob: -4.508488655090332
    8. '#' → logprob: -4.508488655090332
    9. ',' → logprob: -4.633488655090332
    10. '    ' → logprob: -5.008488655090332

Token 21: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21619334816932678
    2. 'atch' → logprob: -2.466193437576294
    3. 'ath' → logprob: -3.216193437576294
    4. ' =' → logprob: -3.591193437576294
    5. 'at' → logprob: -4.216193199157715
    6. 'essage' → logprob: -4.841193199157715
    7. '=' → logprob: -5.091193199157715
    8. 'e' → logprob: -5.341193199157715
    9. 'atches' → logprob: -6.591193199157715
    10. 'atching' → logprob: -6.716193199157715

Token 22: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.43380609154701233
    2. ' n' → logprob: -1.05880606174469
    3. 's' → logprob: -6.5588059425354
    4. ' ' → logprob: -7.1838059425354
    5. 'line' → logprob: -7.6838059425354
    6. ' s' → logprob: -7.8088059425354
    7. ''' → logprob: -8.183806419372559
    8. '_' → logprob: -8.183806419372559
    9. ' line' → logprob: -8.433806419372559
    10. 'b' → logprob: -8.808806419372559

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1117406040430069
    2. '=' → logprob: -2.3617405891418457
    3. ',' → logprob: -4.486740589141846
    4. ')' → logprob: -9.361741065979004
    5. ' ,' → logprob: -9.861741065979004
    6. '<|end|>' → logprob: -10.111741065979004
    7. ' ' → logprob: -11.361741065979004
    8. '<|end|>' → logprob: -12.611741065979004
    9. '.' → logprob: -12.861741065979004
    10. '  ' → logprob: -13.111741065979004

Token 24: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0654129832983017
    2. ' line' → logprob: -3.440412998199463
    3. 'map' → logprob: -3.940412998199463
    4. ' m' → logprob: -4.815412998199463
    5. ' input' → logprob: -6.440412998199463
    6. 'line' → logprob: -6.565412998199463
    7. 'm' → logprob: -7.940412998199463
    8. 'input' → logprob: -8.440412521362305
    9. ' ' → logprob: -9.815412521362305
    10. ' [' → logprob: -10.190412521362305

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.009921827353537083
    2. '(' → logprob: -4.884922027587891
    3. '(lambda' → logprob: -6.634922027587891
    4. '(str' → logprob: -7.509922027587891
    5. '(input' → logprob: -8.13492202758789
    6. 'int' → logprob: -9.25992202758789
    7. '<int' → logprob: -10.88492202758789
    8. '[int' → logprob: -11.25992202758789
    9. '(list' → logprob: -12.13492202758789
    10. '(
' → logprob: -12.13492202758789

Token 26: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04245457798242569
    2. ')' → logprob: -4.167454719543457
    3. '(' → logprob: -4.667454719543457
    4. '(line' → logprob: -4.917454719543457
    5. ',' → logprob: -5.292454719543457
    6. ',input' → logprob: -5.792454719543457
    7. 'input' → logprob: -7.167454719543457
    8. '<|end|>' → logprob: -8.542454719543457
    9. '=input' → logprob: -9.417454719543457
    10. ' input' → logprob: -10.167454719543457

Token 27: ' line' (ID: 2543)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6662858128547668
    2. 'input' → logprob: -1.291285753250122
    3. ' line' → logprob: -1.791285753250122
    4. 'line' → logprob: -3.166285753250122
    5. ')' → logprob: -6.041285991668701
    6. '   ' → logprob: -9.791285514831543
    7. '(line' → logprob: -10.291285514831543
    8. '(input' → logprob: -10.541285514831543
    9. ' ' → logprob: -11.041285514831543
    10. ' )' → logprob: -11.166285514831543

Token 28: '.strip' (ID: 40613)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.10414008796215057
    2. '().' → logprob: -2.604140043258667
    3. '.strip' → logprob: -4.354140281677246
    4. '.' → logprob: -4.479140281677246
    5. ' .' → logprob: -8.104140281677246
    6. ')' → logprob: -8.729140281677246
    7. '   ' → logprob: -9.479140281677246
    8. 'split' → logprob: -9.854140281677246
    9. ').' → logprob: -9.979140281677246
    10. '.readline' → logprob: -10.104140281677246

Token 29: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03508363664150238
    2. '()' → logprob: -3.535083532333374
    3. '())' → logprob: -5.285083770751953
    4. '('' → logprob: -9.035083770751953
    5. ')' → logprob: -9.660083770751953
    6. '()))' → logprob: -10.660083770751953
    7. '()
' → logprob: -11.160083770751953
    8. '()='' → logprob: -12.410083770751953
    9. '().'' → logprob: -12.410083770751953
    10. ' ()' → logprob: -12.535083770751953

Token 30: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.292907877039397e-06
    2. '(split' → logprob: -13.75000286102295
    3. ' split' → logprob: -14.25000286102295
    4. ')' → logprob: -14.62500286102295
    5. '```' → logprob: -14.87500286102295
    6. 'spl' → logprob: -15.00000286102295
    7. 'strip' → logprob: -15.87500286102295
    8. 'rstrip' → logprob: -16.125003814697266
    9. 's' → logprob: -16.500003814697266
    10. 'startswith' → logprob: -16.875003814697266

Token 31: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.04572229087352753
    2. '())' → logprob: -4.170722484588623
    3. '(','' → logprob: -4.170722484588623
    4. '(' → logprob: -4.670722484588623
    5. '()' → logprob: -6.170722484588623
    6. ')' → logprob: -7.045722484588623
    7. '(',' → logprob: -7.170722484588623
    8. '')' → logprob: -8.295722007751465
    9. '("("' → logprob: -8.545722007751465
    10. '('='' → logprob: -9.920722007751465

Token 32: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3542034924030304
    2. ')' → logprob: -1.854203462600708
    3. '<|end|>' → logprob: -2.104203462600708
    4. ',' → logprob: -4.979203701019287
    5. ' ' → logprob: -5.604203701019287
    6. '<|end|>' → logprob: -5.729203701019287
    7. ' if' → logprob: -6.729203701019287
    8. '[' → logprob: -6.854203701019287
    9. '
' → logprob: -7.604203701019287
    10. '#' → logprob: -7.729203701019287

Token 33: ' if' (ID: 538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04895567148923874
    2. '<|end|>' → logprob: -3.9239556789398193
    3. ',' → logprob: -5.04895544052124
    4. ')' → logprob: -5.04895544052124
    5. ' ' → logprob: -5.54895544052124
    6. '#' → logprob: -5.79895544052124
    7. '[' → logprob: -5.92395544052124
    8. ' if' → logprob: -6.79895544052124
    9. '.' → logprob: -7.17395544052124
    10. '\n' → logprob: -7.67395544052124

Token 34: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.0025003906339406967
    2. ' n' → logprob: -6.502500534057617
    3. 'm' → logprob: -7.252500534057617
    4. ' ' → logprob: -9.002500534057617
    5. ' not' → logprob: -9.127500534057617
    6. ' ' → logprob: -10.377500534057617
    7. ' (' → logprob: -11.002500534057617
    8. '<|end|>' → logprob: -12.377500534057617
    9. 'n' → logprob: -13.627500534057617
    10. '(m' → logprob: -14.315000534057617

Token 35: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0997854545712471
    2. '==' → logprob: -2.474785566329956
    3. ' <=' → logprob: -4.974785327911377
    4. ' ' → logprob: -6.849785327911377
    5. ' <' → logprob: -6.849785327911377
    6. ' >' → logprob: -7.599785327911377
    7. '<=' → logprob: -7.974785327911377
    8. '<' → logprob: -8.724785804748535
    9. ' >=' → logprob: -8.724785804748535
    10. '>' → logprob: -8.974785804748535

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14285632967948914
    2. '0' → logprob: -2.0178563594818115
    3. ' n' → logprob: -9.14285659790039
    4. 'n' → logprob: -9.64285659790039
    5. '  ' → logprob: -12.76785659790039
    6. '   ' → logprob: -13.01785659790039
    7. '=' → logprob: -13.83035659790039
    8. '    ' → logprob: -14.39285659790039
    9. '-' → logprob: -14.95535659790039
    10. '<|end|>' → logprob: -15.01785659790039

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013327404158189893
    2. ' ' → logprob: -6.751332759857178
    3. 'n' → logprob: -8.87633228302002
    4. '-' → logprob: -11.37633228302002
    5. ' n' → logprob: -11.75133228302002
    6. '   ' → logprob: -13.75133228302002
    7. '  ' → logprob: -14.25133228302002
    8. '1' → logprob: -14.50133228302002
    9. ' -' → logprob: -15.18883228302002
    10. '```' → logprob: -15.50133228302002

Token 38: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00795509573072195
    2. 'and' → logprob: -4.882955074310303
    3. ' ' → logprob: -8.132955551147461
    4. ':' → logprob: -10.507955551147461
    5. ' or' → logprob: -11.132955551147461
    6. '   ' → logprob: -12.632955551147461
    7. ' a' → logprob: -12.882955551147461
    8. '  ' → logprob: -13.257955551147461
    9. '    ' → logprob: -13.507955551147461
    10. '	and' → logprob: -13.757955551147461

Token 39: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.01416398212313652
    2. 'n' → logprob: -4.264163970947266
    3. '	n' → logprob: -15.389163970947266
    4. ' ' → logprob: -16.014163970947266
    5. ' ' → logprob: -16.389163970947266
    6. '   ' → logprob: -17.514163970947266
    7. '    ' → logprob: -17.639163970947266
    8. '  ' → logprob: -18.264163970947266
    9. '_n' → logprob: -20.264163970947266
    10. '```' → logprob: -21.014163970947266

Token 40: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0138395382091403
    2. '==' → logprob: -5.0138397216796875
    3. ' ' → logprob: -5.1388397216796875
    4. '<|end|>' → logprob: -7.1388397216796875
    5. ' =' → logprob: -8.763839721679688
    6. '  ' → logprob: -9.013839721679688
    7. '=' → logprob: -9.388839721679688
    8. '<|end|>' → logprob: -10.513839721679688
    9. ')' → logprob: -11.263839721679688
    10. ' ' → logprob: -11.763839721679688

Token 41: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11282538622617722
    2. ' ' → logprob: -2.237825393676758
    3. '   ' → logprob: -13.487825393676758
    4. '  ' → logprob: -13.987825393676758
    5. ' ' → logprob: -14.800325393676758
    6. '<|end|>' → logprob: -16.612825393676758
    7. '```' → logprob: -16.862825393676758
    8. '1' → logprob: -17.175325393676758
    9. '۰' → logprob: -17.362825393676758
    10. '	' → logprob: -17.487825393676758

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001171056181192398
    2. ' ' → logprob: -6.751171112060547
    3. '  ' → logprob: -15.626171112060547
    4. '   ' → logprob: -15.688671112060547
    5. ' ' → logprob: -16.626171112060547
    6. '```' → logprob: -16.688671112060547
    7. '۰' → logprob: -17.063671112060547
    8. '1' → logprob: -17.188671112060547
    9. 'o' → logprob: -18.001171112060547
    10. 's' → logprob: -18.063671112060547

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017267030489165336
    2. ':
' → logprob: -8.75017261505127
    3. '   ' → logprob: -11.87517261505127
    4. ' :' → logprob: -12.62517261505127
    5. ':return' → logprob: -13.37517261505127
    6. '       ' → logprob: -13.62517261505127
    7. ' break' → logprob: -15.50017261505127
    8. '):' → logprob: -15.75017261505127
    9. '.' → logprob: -15.87517261505127
    10. '	break' → logprob: -16.000173568725586

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20437338948249817
    2. ':' → logprob: -1.7043733596801758
    3. '   ' → logprob: -6.079373359680176
    4. ':
' → logprob: -7.454373359680176
    5. '	break' → logprob: -10.829373359680176
    6. '.' → logprob: -11.454373359680176
    7. ' break' → logprob: -11.579373359680176
    8. '	' → logprob: -11.954373359680176
    9. '```' → logprob: -12.204373359680176
    10. '    ' → logprob: -12.829373359680176

Token 45: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.17144475877285004
    2. '       ' → logprob: -1.9214447736740112
    3. 'break' (adapté à ' break') → logprob: -4.796444892883301
    4. '   ' → logprob: -6.046444892883301
    5. '	break' → logprob: -7.796444892883301
    6. '           ' → logprob: -9.9214448928833
    7. '_break' → logprob: -10.9214448928833
    8. ' ' → logprob: -11.4214448928833
    9. '```' → logprob: -11.5464448928833
    10. '        
' → logprob: -11.7964448928833

Token 46: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19194760918617249
    2. '<|end|>' → logprob: -2.4419476985931396
    3. ':' → logprob: -3.6919476985931396
    4. ')' → logprob: -3.8169476985931396
    5. '    
' → logprob: -4.8169474601745605
    6. '#' → logprob: -4.8169474601745605
    7. ' ' → logprob: -5.1919474601745605
    8. '
' → logprob: -5.3169474601745605
    9. ',' → logprob: -5.8169474601745605
    10. '\n' → logprob: -6.1919474601745605

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32669270038604736
    2. '<|end|>' → logprob: -1.8266927003860474
    3. '
' → logprob: -3.701692581176758
    4. '    
' → logprob: -3.826692581176758
    5. ')' → logprob: -3.826692581176758
    6. ':' → logprob: -4.076692581176758
    7. '#' → logprob: -4.451692581176758
    8. ',' → logprob: -5.451692581176758
    9. '  
' → logprob: -5.701692581176758
    10. '```' → logprob: -6.076692581176758

Token 48: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07993604242801666
    2. '[' → logprob: -3.8299360275268555
    3. ' ' → logprob: -4.4549360275268555
    4. '    
' → logprob: -4.8299360275268555
    5. '    ' → logprob: -5.0799360275268555
    6. ' matrix' → logprob: -5.8299360275268555
    7. 'matrix' → logprob: -6.3299360275268555
    8. 'result' → logprob: -6.4549360275268555
    9. '```' → logprob: -6.5799360275268555
    10. 'data' → logprob: -6.7049360275268555

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6219723224639893
    2. ' =' → logprob: -0.9969723224639893
    3. '=' → logprob: -2.4969723224639893
    4. 's' → logprob: -5.37197208404541
    5. '_' → logprob: -5.62197208404541
    6. ' ,' → logprob: -6.12197208404541
    7. 'y' → logprob: -8.24697208404541
    8. ',y' → logprob: -8.49697208404541
    9. ')' → logprob: -9.12197208404541
    10. '_list' → logprob: -9.62197208404541

Token 50: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.11360269039869308
    2. 'y' → logprob: -2.238602638244629
    3. ' ' → logprob: -8.113602638244629
    4. '_' → logprob: -8.363602638244629
    5. ' =' → logprob: -9.738602638244629
    6. ',' → logprob: -10.738602638244629
    7. 'a' → logprob: -10.988602638244629
    8. '_y' → logprob: -11.113602638244629
    9. '	y' → logprob: -11.238602638244629
    10. '=' → logprob: -11.363602638244629

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07333368808031082
    2. '=' → logprob: -2.698333740234375
    3. ',' → logprob: -5.698333740234375
    4. '<|end|>' → logprob: -11.073333740234375
    5. ' ,' → logprob: -11.823333740234375
    6. '<|end|>' → logprob: -11.948333740234375
    7. ' ' → logprob: -12.698333740234375
    8. ')' → logprob: -13.198333740234375
    9. '=int' → logprob: -14.135833740234375
    10. 's' → logprob: -14.323333740234375

Token 52: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08556308597326279
    2. 'map' → logprob: -3.8355631828308105
    3. ' ' → logprob: -4.2105631828308105
    4. ' map' → logprob: -4.3355631828308105
    5. '[' → logprob: -4.4605631828308105
    6. '[]' → logprob: -4.5855631828308105
    7. '1' → logprob: -5.4605631828308105
    8. ' [' → logprob: -5.8355631828308105
    9. 'list' → logprob: -7.4605631828308105
    10. ' []' → logprob: -7.5855631828308105

Token 53: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6895327568054199
    2. 'map' → logprob: -0.8145327568054199
    3. 'm' → logprob: -4.18953275680542
    4. '1' → logprob: -4.31453275680542
    5. 'list' → logprob: -4.81453275680542
    6. '[' → logprob: -4.93953275680542
    7. ' map' → logprob: -5.43953275680542
    8. '[]' → logprob: -5.81453275680542
    9. '[],' → logprob: -6.31453275680542
    10. '[m' → logprob: -7.31453275680542

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05671633034944534
    2. ' ,' → logprob: -2.9317164421081543
    3. '0' → logprob: -7.431716442108154
    4. ' ' → logprob: -7.681716442108154
    5. '<|end|>' → logprob: -7.931716442108154
    6. '   ' → logprob: -9.306715965270996
    7. '1' → logprob: -9.431715965270996
    8. '    ' → logprob: -9.556715965270996
    9. '<|end|>' → logprob: -10.306715965270996
    10. '  ' → logprob: -10.806715965270996

Token 55: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005621942691504955
    2. '0' → logprob: -5.880621910095215
    3. ' ' → logprob: -5.880621910095215
    4. 'n' → logprob: -12.255621910095215
    5. '2' → logprob: -12.380621910095215
    6. '-' → logprob: -12.880621910095215
    7. '   ' → logprob: -12.880621910095215
    8. 'm' → logprob: -13.255621910095215
    9. '  ' → logprob: -13.755621910095215
    10. ' -' → logprob: -14.130621910095215

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002561268862336874
    2. ' ' → logprob: -6.627561092376709
    3. '0' → logprob: -6.752561092376709
    4. 'n' → logprob: -10.627561569213867
    5. '   ' → logprob: -11.252561569213867
    6. '-' → logprob: -11.752561569213867
    7. 'm' → logprob: -11.940061569213867
    8. '2' → logprob: -11.940061569213867
    9. '  ' → logprob: -12.877561569213867
    10. ' -' → logprob: -14.127561569213867

Token 57: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6439085602760315
    2. '<|end|>' → logprob: -0.7689085602760315
    3. '   ' → logprob: -5.393908500671387
    4. '<|end|>' → logprob: -5.643908500671387
    5. '    
' → logprob: -7.268908500671387
    6. '\n' → logprob: -7.393908500671387
    7. ':' → logprob: -7.893908500671387
    8. ' 
' → logprob: -8.018908500671387
    9. '  
' → logprob: -8.518908500671387
    10. ' ' → logprob: -9.018908500671387

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8109400272369385
    2. '<|end|>' → logprob: -0.8109400272369385
    3. '
' → logprob: -3.0609400272369385
    4. ' ' → logprob: -4.185939788818359
    5. ':' → logprob: -4.685939788818359
    6. '<|end|>' → logprob: -4.810939788818359
    7. ' for' → logprob: -5.310939788818359
    8. '    
' → logprob: -5.560939788818359
    9. ' while' → logprob: -5.810939788818359
    10. ' 
' → logprob: -5.810939788818359

Token 59: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30374065041542053
    2. '<|end|>' → logprob: -1.8037406206130981
    3. '
' → logprob: -3.0537407398223877
    4. ' for' → logprob: -4.428740501403809
    5. 'for' → logprob: -4.678740501403809
    6. 'while' → logprob: -5.303740501403809
    7. ':' → logprob: -5.428740501403809
    8. ' while' → logprob: -5.678740501403809
    9. '<|end|>' → logprob: -5.928740501403809
    10. '    
' → logprob: -6.053740501403809

Token 60: ' directions' (ID: 24921)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5625520944595337
    2. 'for' → logprob: -1.1875520944595337
    3. ' while' → logprob: -3.062551975250244
    4. 'while' → logprob: -3.312551975250244
    5. '   ' → logprob: -3.562551975250244
    6. '#' → logprob: -5.687551975250244
    7. '<|end|>' → logprob: -6.187551975250244
    8. ' if' → logprob: -6.437551975250244
    9. 'if' → logprob: -6.687551975250244
    10. ' code' → logprob: -7.437551975250244

Token 61: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04584456980228424
    2. 's' → logprob: -3.295844554901123
    3. '=' → logprob: -5.170844554901123
    4. '<|end|>' → logprob: -7.545844554901123
    5. ':' → logprob: -7.920844554901123
    6. ',' → logprob: -8.045845031738281
    7. '   ' → logprob: -8.545845031738281
    8. '[' → logprob: -9.295845031738281
    9. '[]' → logprob: -9.545845031738281
    10. 'd' → logprob: -9.545845031738281

Token 62: ' ' (ID: 220)
  Prédit: ' [('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [(' → logprob: -0.37119680643081665
    2. '[(' → logprob: -1.8711967468261719
    3. ' [' → logprob: -2.871196746826172
    4. '[' → logprob: -3.121196746826172
    5. ' directions' → logprob: -4.371196746826172
    6. ' ['' → logprob: -4.496196746826172
    7. '['' → logprob: -4.621196746826172
    8. ' [('' → logprob: -5.746196746826172
    9. '   ' → logprob: -5.996196746826172
    10. ' (' → logprob: -6.121196746826172

Token 63: '0' (ID: 15)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.11507014185190201
    2. '[' → logprob: -2.615070104598999
    3. ' [(' → logprob: -4.365070343017578
    4. 'dx' → logprob: -4.865070343017578
    5. '['' → logprob: -5.240070343017578
    6. '(' → logprob: -5.740070343017578
    7. '   ' → logprob: -6.740070343017578
    8. '(-' → logprob: -6.740070343017578
    9. '[-' → logprob: -7.115070343017578
    10. ' [' → logprob: -7.365070343017578

Token 64: '-N' (ID: 13833)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17171546816825867
    2. '<|end|>' → logprob: -2.671715497970581
    3. ' =' → logprob: -2.921715497970581
    4. '=' → logprob: -4.171715259552002
    5. ':' → logprob: -4.421715259552002
    6. ' ' → logprob: -6.046715259552002
    7. '#' → logprob: -6.171715259552002
    8. ' ,' → logprob: -7.171715259552002
    9. '<|end|>' → logprob: -7.421715259552002
    10. ' #' → logprob: -8.67171573638916

Token 65: 'orth' (ID: 2909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005831030197441578
    2. ',
' → logprob: -6.005831241607666
    3. 'orth' → logprob: -6.255831241607666
    4. ' ,' → logprob: -7.755831241607666
    5. '<|end|>' → logprob: -8.130830764770508
    6. 'w' → logprob: -8.755830764770508
    7. 'e' → logprob: -9.005830764770508
    8. ' ' → logprob: -9.880830764770508
    9. 'W' → logprob: -10.130830764770508
    10. 'o' → logprob: -10.255830764770508

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015514669939875603
    2. '<|end|>' → logprob: -4.640514850616455
    3. '   ' → logprob: -6.140514850616455
    4. ' ,' → logprob: -6.515514850616455
    5. '#' → logprob: -7.515514850616455
    6. '<|end|>' → logprob: -7.640514850616455
    7. '0' → logprob: -8.015514373779297
    8. ' ' → logprob: -9.015514373779297
    9. ')' → logprob: -9.265514373779297
    10. ',
' → logprob: -9.640514373779297

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.201519176363945
    2. ' ' → logprob: -1.7015191316604614
    3. '<|end|>' → logprob: -10.201519012451172
    4. '   ' → logprob: -10.576519012451172
    5. '90' → logprob: -11.826519012451172
    6. '  ' → logprob: -12.076519012451172
    7. 's' → logprob: -12.076519012451172
    8. '```' → logprob: -12.576519012451172
    9. '<|end|>' → logprob: -12.701519012451172
    10. 'east' → logprob: -12.701519012451172

Token 68: '-East' (ID: 187919)
  Prédit: '-East'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-East' → logprob: -0.2281481921672821
    2. '-' → logprob: -1.7281482219696045
    3. '-E' → logprob: -3.8531482219696045
    4. '=' → logprob: -6.103147983551025
    5. ' -' → logprob: -6.353147983551025
    6. '-S' → logprob: -7.353147983551025
    7. '-West' → logprob: -8.228148460388184
    8. '-N' → logprob: -8.978148460388184
    9. 'East' → logprob: -10.353148460388184
    10. '-east' → logprob: -10.603148460388184

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011718797497451305
    2. '   ' → logprob: -5.13671875
    3. '<|end|>' → logprob: -5.76171875
    4. '2' → logprob: -7.01171875
    5. ' ,' → logprob: -7.26171875
    6. ',
' → logprob: -7.63671875
    7. '0' → logprob: -9.01171875
    8. ' ' → logprob: -9.26171875
    9. '
' → logprob: -9.51171875
    10. '  ' → logprob: -10.13671875

Token 70: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04301197826862335
    2. ' ' → logprob: -3.1680119037628174
    3. '<|end|>' → logprob: -11.543011665344238
    4. '   ' → logprob: -14.043011665344238
    5. '  ' → logprob: -14.168011665344238
    6. '```' → logprob: -14.418011665344238
    7. '    ' → logprob: -14.918011665344238
    8. ',' → logprob: -15.043011665344238
    9. '۲' → logprob: -16.793012619018555
    10. ' ' → logprob: -17.043012619018555

Token 71: '-S' (ID: 6968)
  Prédit: '-S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-S' → logprob: -0.04475775361061096
    2. '-' → logprob: -3.294757843017578
    3. ',' → logprob: -5.169757843017578
    4. '-N' → logprob: -7.044757843017578
    5. '-,' → logprob: -10.044757843017578
    6. ' -' → logprob: -10.544757843017578
    7. '#' → logprob: -11.419757843017578
    8. ',S' → logprob: -11.794757843017578
    9. 'South' → logprob: -11.919757843017578
    10. '=' → logprob: -12.044757843017578

Token 72: 'outh' (ID: 4656)
  Prédit: 'outh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outh' → logprob: -0.1882934868335724
    2. 'o' → logprob: -2.31329345703125
    3. '0' → logprob: -3.18829345703125
    4. 'ou' → logprob: -4.06329345703125
    5. 'O' → logprob: -5.56329345703125
    6. '```' → logprob: -5.81329345703125
    7. '2' → logprob: -5.93829345703125
    8. 'out' → logprob: -6.68829345703125
    9. 'W' → logprob: -7.06329345703125
    10. 'OUTH' → logprob: -7.56329345703125

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6428451538085938
    2. '   ' → logprob: -0.7678451538085938
    3. '<|end|>' → logprob: -5.142845153808594
    4. 'while' → logprob: -6.767845153808594
    5. ' while' → logprob: -7.267845153808594
    6. ',
' → logprob: -7.642845153808594
    7. '```' → logprob: -7.767845153808594
    8. '4' → logprob: -8.267845153808594
    9. ' ,' → logprob: -8.392845153808594
    10. '  ' → logprob: -8.392845153808594

Token 74: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.0020742492051795e-05
    2. ' ' → logprob: -10.250049591064453
    3. '0' → logprob: -11.625049591064453
    4. '   ' → logprob: -13.125049591064453
    5. '#' → logprob: -13.625049591064453
    6. '```' → logprob: -13.625049591064453
    7. '1' → logprob: -14.500049591064453
    8. '...' → logprob: -15.625049591064453
    9. '    ' → logprob: -16.250049591064453
    10. '`' → logprob: -16.625049591064453

Token 75: '-West' (ID: 71616)
  Prédit: '-West'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-West' → logprob: -0.023408057168126106
    2. ',' → logprob: -4.273407936096191
    3. '-' → logprob: -5.023407936096191
    4. 'West' → logprob: -6.273407936096191
    5. '-W' → logprob: -8.398407936096191
    6. '-East' → logprob: -8.773407936096191
    7. ' West' → logprob: -9.148407936096191
    8. ' -' → logprob: -9.898407936096191
    9. 'west' → logprob: -10.148407936096191
    10. '-N' → logprob: -10.273407936096191

Token 76: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5565237402915955
    2. '<|end|>' → logprob: -1.3065237998962402
    3. '```' → logprob: -2.4315237998962402
    4. 'd' → logprob: -4.30652379989624
    5. '#' → logprob: -4.55652379989624
    6. ',' → logprob: -5.30652379989624
    7. '    
' → logprob: -5.43152379989624
    8. '
' → logprob: -5.55652379989624
    9. 'n' → logprob: -5.55652379989624
    10. 'newline' → logprob: -5.68152379989624

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15227310359477997
    2. 'd' → logprob: -3.277273178100586
    3. '<|end|>' → logprob: -3.277273178100586
    4. 'direction' → logprob: -3.902273178100586
    5. ',' → logprob: -4.777273178100586
    6. 'while' → logprob: -5.152273178100586
    7. 'dire' → logprob: -5.152273178100586
    8. ' while' → logprob: -5.402273178100586
    9. ' direction' → logprob: -5.777273178100586
    10. '```' → logprob: -5.777273178100586

Token 78: ' direction' (ID: 9262)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9742818474769592
    2. ' direction' → logprob: -1.2242817878723145
    3. 'direction' (adapté à ' direction') → logprob: -1.3492817878723145
    4. ' d' → logprob: -2.9742817878723145
    5. 'dire' → logprob: -5.2242817878723145
    6. '   ' → logprob: -5.7242817878723145
    7. ' directions' → logprob: -6.4742817878723145
    8. 'dir' → logprob: -6.5992817878723145
    9. ' current' → logprob: -7.0992817878723145
    10. 'current' → logprob: -7.2242817878723145

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003605416975915432
    2. '=' → logprob: -5.628605365753174
    3. ' ' → logprob: -13.253605842590332
    4. 's' → logprob: -14.128605842590332
    5. ' +=' → logprob: -14.503605842590332
    6. 'space' → logprob: -14.503605842590332
    7. ' =
' → logprob: -14.753605842590332
    8. ',' → logprob: -14.878605842590332
    9. '<|end|>' → logprob: -15.378605842590332
    10. ' =)' → logprob: -15.753605842590332

Token 80: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022119891364127398
    2. ' ' → logprob: -6.127212047576904
    3. '1' → logprob: -10.627211570739746
    4. '2' → logprob: -13.627211570739746
    5. '3' → logprob: -14.377211570739746
    6. '   ' → logprob: -15.189711570739746
    7. '۰' → logprob: -15.689711570739746
    8. '```' → logprob: -15.814711570739746
    9. 'north' → logprob: -17.377212524414062
    10. '  ' → logprob: -17.689712524414062

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00036263695801608264
    2. '1' → logprob: -8.000362396240234
    3. ' ' → logprob: -10.875362396240234
    4. '2' → logprob: -12.000362396240234
    5. '3' → logprob: -13.375362396240234
    6. '۰' → logprob: -15.625362396240234
    7. '   ' → logprob: -16.687862396240234
    8. '```' → logprob: -17.062862396240234
    9. '０' → logprob: -17.312862396240234
    10. 'east' → logprob: -17.375362396240234

Token 82: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2638598084449768
    2. '<|end|>' → logprob: -1.888859748840332
    3. '
' → logprob: -3.388859748840332
    4. ':' → logprob: -4.888859748840332
    5. '#' → logprob: -4.888859748840332
    6. 'while' → logprob: -5.013859748840332
    7. '```' → logprob: -5.013859748840332
    8. ' while' → logprob: -5.638859748840332
    9. '    
' → logprob: -5.888859748840332
    10. '<|end|>' → logprob: -6.263859748840332

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028820307925343513
    2. '<|end|>' → logprob: -4.028820514678955
    3. '    
' → logprob: -5.778820514678955
    4. 'while' → logprob: -6.153820514678955
    5. ' while' → logprob: -6.778820514678955
    6. 'for' → logprob: -7.028820514678955
    7. '
' → logprob: -7.528820514678955
    8. '<|end|>' → logprob: -7.903820514678955
    9. '\n' → logprob: -8.028820037841797
    10. ' for' → logprob: -8.153820037841797

Token 84: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.050577163696289
    2. 'for' → logprob: -1.550577163696289
    3. 'commands' → logprob: -1.800577163696289
    4. 's' → logprob: -2.675577163696289
    5. 'command' → logprob: -2.800577163696289
    6. 'c' → logprob: -2.800577163696289
    7. ' for' → logprob: -4.050577163696289
    8. 'i' → logprob: -4.550577163696289
    9. 'while' (adapté à ' while') → logprob: -4.675577163696289
    10. 'r' → logprob: -5.425577163696289

Token 85: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.17797528207302094
    2. ' n' → logprob: -2.8029751777648926
    3. 'True' → logprob: -3.4279751777648926
    4. ' m' → logprob: -3.8029751777648926
    5. ' x' → logprob: -4.052975177764893
    6. ' y' → logprob: -4.427975177764893
    7. ' (' → logprob: -4.552975177764893
    8. 'n' → logprob: -6.427975177764893
    9. '(True' → logprob: -6.677975177764893
    10. ' not' → logprob: -6.802975177764893

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008147373795509338
    2. '<|end|>' → logprob: -5.508147239685059
    3. ':
' → logprob: -6.008147239685059
    4. '   ' → logprob: -7.258147239685059
    5. '       ' → logprob: -7.508147239685059
    6. ',' → logprob: -8.883147239685059
    7. '<|end|>' → logprob: -9.133147239685059
    8. ':

' → logprob: -10.258147239685059
    9. '.' → logprob: -10.758147239685059
    10. ' :' → logprob: -11.133147239685059

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06066342443227768
    2. '<|end|>' → logprob: -2.9356634616851807
    3. '   ' → logprob: -6.060663223266602
    4. '<|end|>' → logprob: -6.685663223266602
    5. ' line' → logprob: -7.060663223266602
    6. ' ' → logprob: -8.560663223266602
    7. 'token' → logprob: -8.560663223266602
    8. ',' → logprob: -8.560663223266602
    9. 'line' → logprob: -8.935663223266602
    10. '```' → logprob: -9.435663223266602

Token 88: ' cmd' (ID: 11704)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.9532089233398438
    2. 'line' → logprob: -1.7032089233398438
    3. ' command' → logprob: -1.8282089233398438
    4. ' c' → logprob: -2.5782089233398438
    5. '       ' → logprob: -2.9532089233398438
    6. 'command' → logprob: -3.3282089233398438
    7. '   ' → logprob: -3.4532089233398438
    8. 'c' → logprob: -3.5782089233398438
    9. 'cmd' (adapté à ' cmd') → logprob: -4.953208923339844
    10. ' s' → logprob: -5.078208923339844

Token 89: '_line' (ID: 14418)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011896337382495403
    2. '=' → logprob: -4.511896133422852
    3. ' ' → logprob: -7.636896133422852
    4. 's' → logprob: -8.136896133422852
    5. '_' → logprob: -10.636896133422852
    6. ',' → logprob: -10.886896133422852
    7. '   ' → logprob: -11.886896133422852
    8. '  ' → logprob: -12.136896133422852
    9. '[' → logprob: -12.761896133422852
    10. '=line' → logprob: -13.136896133422852

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012657147832214832
    2. '=' → logprob: -4.387657165527344
    3. ' ' → logprob: -9.012657165527344
    4. 's' → logprob: -11.137657165527344
    5. '<|end|>' → logprob: -12.137657165527344
    6. ',' → logprob: -14.262657165527344
    7. '=line' → logprob: -14.637657165527344
    8. ')' → logprob: -14.762657165527344
    9. '  ' → logprob: -14.887657165527344
    10. ' =)' → logprob: -14.887657165527344

Token 91: ' ''
' (ID: 25366)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.033668868243694305
    2. 'input' → logprob: -3.4086687564849854
    3. ' ' → logprob: -10.908668518066406
    4. '	input' → logprob: -13.533668518066406
    5. '=input' → logprob: -14.033668518066406
    6. '_input' → logprob: -14.783668518066406
    7. '    ' → logprob: -15.158668518066406
    8. 'Input' → logprob: -15.283668518066406
    9. '(input' → logprob: -15.533668518066406
    10. '   ' → logprob: -15.533668518066406

Token 92: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11249808967113495
    2. 'while' (adapté à ' while') → logprob: -2.7374980449676514
    3. ' while' → logprob: -3.6124980449676514
    4. '<|end|>' → logprob: -4.3624982833862305
    5. '   ' → logprob: -6.7374982833862305
    6. '<|end|>' → logprob: -7.8624982833862305
    7. ' ' → logprob: -8.36249828338623
    8. '	while' → logprob: -10.73749828338623
    9. 'While' → logprob: -10.73749828338623
    10. '  ' → logprob: -10.86249828338623

Token 94: ' cmd' (ID: 11704)
  Prédit: ' cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cmd' → logprob: -0.3132671117782593
    2. 'cmd' → logprob: -1.3132671117782593
    3. '(cmd' → logprob: -13.18826675415039
    4. '	cmd' → logprob: -13.18826675415039
    5. ' ' → logprob: -14.81326675415039
    6. ' not' → logprob: -14.81326675415039
    7. 'not' → logprob: -15.68826675415039
    8. 'command' → logprob: -15.68826675415039
    9. ' command' → logprob: -15.93826675415039
    10. 'len' → logprob: -16.56326675415039

Token 95: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -2.2007883671903983e-05
    2. 'line' → logprob: -11.000021934509277
    3. '_' → logprob: -12.500021934509277
    4. ' _' → logprob: -14.250021934509277
    5. '_LINE' → logprob: -14.875021934509277
    6. '_lines' → logprob: -16.000022888183594
    7. 'Line' → logprob: -16.125022888183594
    8. '_Line' → logprob: -16.625022888183594
    9. '_lin' → logprob: -16.750022888183594
    10. '._' → logprob: -16.875022888183594

Token 96: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0006466718041338027
    2. '.' → logprob: -7.375646591186523
    3. ' .' → logprob: -11.000646591186523
    4. 'strip' → logprob: -12.750646591186523
    5. '==' → logprob: -15.375646591186523
    6. '.rstrip' → logprob: -16.375646591186523
    7. '.trim' → logprob: -16.875646591186523
    8. ' strip' → logprob: -17.375646591186523
    9. ' ==' → logprob: -17.500646591186523
    10. 's' → logprob: -17.875646591186523

Token 97: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0048820809461176395
    2. '()==' → logprob: -5.379881858825684
    3. '==' → logprob: -8.254881858825684
    4. ' ==' → logprob: -14.004881858825684
    5. '()='' → logprob: -15.129881858825684
    6. '()<' → logprob: -15.504881858825684
    7. '=' → logprob: -15.629881858825684
    8. ')' → logprob: -16.2548828125
    9. '```' → logprob: -16.6298828125
    10. '()=="' → logprob: -16.6298828125

Token 98: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03923061862587929
    2. ' ==' → logprob: -3.2892305850982666
    3. '()==' → logprob: -6.789230823516846
    4. '()' → logprob: -9.789230346679688
    5. ')==' → logprob: -13.164230346679688
    6. '=' → logprob: -13.289230346679688
    7. '=='' → logprob: -13.414230346679688
    8. '===' → logprob: -15.164230346679688
    9. ' ' → logprob: -15.289230346679688
    10. '  ' → logprob: -15.414230346679688

Token 99: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.011155937798321247
    2. ''' → logprob: -4.51115608215332
    3. ' '' → logprob: -10.01115608215332
    4. ' ''' → logprob: -10.26115608215332
    5. ' '':
' → logprob: -11.26115608215332
    6. ''''' → logprob: -12.13615608215332
    7. '''''' → logprob: -13.13615608215332
    8. '''.' → logprob: -13.76115608215332
    9. '':''' → logprob: -13.88615608215332
    10. ':''' → logprob: -14.01115608215332

Token 100: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7772321105003357
    2. '           ' → logprob: -1.1522321701049805
    3. '<|end|>' → logprob: -2.1522321701049805
    4. ':' → logprob: -2.7772321701049805
    5. '<|end|>' → logprob: -3.9022321701049805
    6. ':
' → logprob: -4.1522321701049805
    7. '   ' → logprob: -5.2772321701049805
    8. ' and' → logprob: -6.0272321701049805
    9. 'cmd' → logprob: -7.5272321701049805
    10. ',' → logprob: -7.7772321701049805

Token 101: ' cmd' (ID: 11704)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' (adapté à ' cmd') → logprob: -0.02327657863497734
    2. ' cmd' → logprob: -3.7732765674591064
    3. '           ' → logprob: -10.898276329040527
    4. '   ' → logprob: -11.898276329040527
    5. 'command' → logprob: -13.273276329040527
    6. '	cmd' → logprob: -13.523276329040527
    7. ' ' → logprob: -14.273276329040527
    8. '       ' → logprob: -14.648276329040527
    9. 'input' → logprob: -15.273276329040527
    10. 'try' → logprob: -15.398276329040527

Token 102: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0007979541551321745
    2. 'line' → logprob: -7.250797748565674
    3. '_' → logprob: -9.750798225402832
    4. '=' → logprob: -11.625798225402832
    5. '=line' → logprob: -11.875798225402832
    6. '   ' → logprob: -12.750798225402832
    7. '_LINE' → logprob: -13.000798225402832
    8. 'Line' → logprob: -13.125798225402832
    9. 'ine' → logprob: -13.500798225402832
    10. ' =' → logprob: -13.750798225402832

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141489803791046
    2. '=' → logprob: -1.701414942741394
    3. '=input' → logprob: -13.826415061950684
    4. ' ' → logprob: -14.451415061950684
    5. ' =
' → logprob: -16.951414108276367
    6. '   ' → logprob: -16.951414108276367
    7. '    ' → logprob: -17.951414108276367
    8. '  ' → logprob: -18.076414108276367
    9. '=
' → logprob: -18.201414108276367
    10. '=

' → logprob: -18.326414108276367

Token 104: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5231552124023438
    2. 'input' → logprob: -0.8981552124023438
    3. ' ' → logprob: -11.148155212402344
    4. '   ' → logprob: -12.523155212402344
    5. '(input' → logprob: -12.773155212402344
    6. '=input' → logprob: -12.835655212402344
    7. '	input' → logprob: -13.273155212402344
    8. '```' → logprob: -13.523155212402344
    9. '<input' → logprob: -13.960655212402344
    10. '  ' → logprob: -14.023155212402344

Token 105: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00042292833677493036
    2. '())' → logprob: -8.500422477722168
    3. '()
' → logprob: -8.750422477722168
    4. '(' → logprob: -11.125422477722168
    5. '().' → logprob: -11.125422477722168
    6. ')' → logprob: -11.125422477722168
    7. '()

' → logprob: -12.125422477722168
    8. '()>' → logprob: -12.875422477722168
    9. '()?>' → logprob: -13.500422477722168
    10. '()`' → logprob: -14.000422477722168

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013784486800432205
    2. '<|end|>' → logprob: -7.251378536224365
    3. '   ' → logprob: -8.501378059387207
    4. '<|end|>' → logprob: -9.126378059387207
    5. 's' → logprob: -9.501378059387207
    6. 'tokens' → logprob: -9.751378059387207
    7. ' ' → logprob: -10.126378059387207
    8. '        ' → logprob: -10.376378059387207
    9. '      ' → logprob: -10.626378059387207
    10. ' tokens' → logprob: -10.876378059387207

Token 107: ' parts' (ID: 7881)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4097755253314972
    2. 'if' → logprob: -1.7847754955291748
    3. 'cmd' → logprob: -2.409775495529175
    4. ' if' → logprob: -3.159775495529175
    5. 'for' → logprob: -4.159775733947754
    6. ' for' → logprob: -4.784775733947754
    7. ' cmd' → logprob: -5.534775733947754
    8. 'commands' → logprob: -5.909775733947754
    9. 'command' → logprob: -6.409775733947754
    10. '   ' → logprob: -6.409775733947754

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02325456403195858
    2. '=' → logprob: -3.773254632949829
    3. '[' → logprob: -12.14825439453125
    4. 'tokens' → logprob: -14.02325439453125
    5. 's' → logprob: -14.52325439453125
    6. ')' → logprob: -14.52325439453125
    7. ' ' → logprob: -14.52325439453125
    8. '<|end|>' → logprob: -14.64825439453125
    9. '.' → logprob: -15.14825439453125
    10. '   ' → logprob: -15.77325439453125

Token 109: ' cmd' (ID: 11704)
  Prédit: ' cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cmd' → logprob: -0.6931578516960144
    2. 'cmd' → logprob: -0.6931578516960144
    3. '(cmd' → logprob: -12.193158149719238
    4. '	cmd' → logprob: -12.818158149719238
    5. 'command' → logprob: -13.693158149719238
    6. ' ' → logprob: -15.068158149719238
    7. ' command' → logprob: -15.068158149719238
    8. 'list' → logprob: -15.193158149719238
    9. '[' → logprob: -15.193158149719238
    10. '.cmd' → logprob: -15.443158149719238

Token 110: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0019609862938523293
    2. '_parts' → logprob: -7.001960754394531
    3. '_LINE' → logprob: -7.376960754394531
    4. 'Line' → logprob: -9.501960754394531
    5. '.readline' → logprob: -10.001960754394531
    6. 'line' → logprob: -10.126960754394531
    7. '(parts' → logprob: -10.251960754394531
    8. 'parts' → logprob: -10.751960754394531
    9. 's' → logprob: -10.751960754394531
    10. '_lines' → logprob: -11.126960754394531

Token 111: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.02137785032391548
    2. '.' → logprob: -3.8963778018951416
    3. '.split' → logprob: -7.146378040313721
    4. ' .' → logprob: -10.771377563476562
    5. '().' → logprob: -11.396377563476562
    6. '.rstrip' → logprob: -11.521377563476562
    7. '.trim' → logprob: -12.271377563476562
    8. 'strip' → logprob: -14.771377563476562
    9. '[' → logprob: -15.896377563476562
    10. '.startswith' → logprob: -16.521377563476562

Token 112: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00015955790877342224
    2. '()' → logprob: -8.75015926361084
    3. ' ().' → logprob: -14.00015926361084
    4. '().'' → logprob: -16.500160217285156
    5. '.split' → logprob: -16.750160217285156
    6. '(' → logprob: -17.250160217285156
    7. '.' → logprob: -17.375160217285156
    8. ' .' → logprob: -18.125160217285156
    9. '().__' → logprob: -19.125160217285156
    10. '()).' → logprob: -19.125160217285156

Token 113: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.2994620242971e-06
    2. ' split' → logprob: -11.750008583068848
    3. 'startswith' → logprob: -15.875008583068848
    4. 'strip' → logprob: -16.50000762939453
    5. '(split' → logprob: -16.87500762939453
    6. 'plit' → logprob: -17.00000762939453
    7. 'rstrip' → logprob: -17.12500762939453
    8. '.split' → logprob: -17.50000762939453
    9. 'lower' → logprob: -18.00000762939453
    10. 'replace' → logprob: -18.00000762939453

Token 114: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14306814968585968
    2. '(' → logprob: -2.2680680751800537
    3. '('' → logprob: -3.5180680751800537
    4. '("("' → logprob: -9.643068313598633
    5. '('.')' → logprob: -11.268068313598633
    6. ''' → logprob: -11.393068313598633
    7. '(
' → logprob: -11.518068313598633
    8. '())' → logprob: -12.018068313598633
    9. '()]' → logprob: -12.768068313598633
    10. '(max' → logprob: -12.893068313598633

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0181704293936491
    2. '<|end|>' → logprob: -4.518170356750488
    3. 'token' → logprob: -5.768170356750488
    4. '   ' → logprob: -6.768170356750488
    5. 'if' → logprob: -6.893170356750488
    6. ' if' → logprob: -7.268170356750488
    7. '<|end|>' → logprob: -8.018170356750488
    8. ' for' → logprob: -8.143170356750488
    9. 'for' → logprob: -8.393170356750488
    10. 'tokens' → logprob: -9.643170356750488

Token 116: ' cmd' (ID: 11704)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' (adapté à ' cmd') → logprob: -0.3610009253025055
    2. 'if' → logprob: -1.736000895500183
    3. 'for' → logprob: -2.6110010147094727
    4. 'command' → logprob: -3.9860010147094727
    5. 'c' → logprob: -4.111001014709473
    6. '       ' → logprob: -4.361001014709473
    7. 'i' → logprob: -5.611001014709473
    8. 't' → logprob: -7.611001014709473
    9. ' cmd' → logprob: -7.736001014709473
    10. ' if' → logprob: -7.986001014709473

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08412113785743713
    2. '=' → logprob: -2.7091212272644043
    3. '[' → logprob: -4.459121227264404
    4. '_' → logprob: -6.584121227264404
    5. ' ' → logprob: -8.084120750427246
    6. 's' → logprob: -8.459120750427246
    7. '0' → logprob: -8.459120750427246
    8. ')' → logprob: -9.459120750427246
    9. ',' → logprob: -9.584120750427246
    10. '   ' → logprob: -10.084120750427246

Token 118: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.47449979186058044
    2. 'parts' → logprob: -0.9744998216629028
    3. 'int' → logprob: -8.224499702453613
    4. ' int' → logprob: -8.974499702453613
    5. ' ' → logprob: -11.349499702453613
    6. '(parts' → logprob: -11.349499702453613
    7. '  ' → logprob: -13.724499702453613
    8. '   ' → logprob: -13.974499702453613
    9. ' partes' → logprob: -14.349499702453613
    10. ' ' → logprob: -14.474499702453613

Token 119: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4617256056226324e-05
    2. '0' → logprob: -11.375014305114746
    3. ' [' → logprob: -13.000014305114746
    4. ' ' → logprob: -15.500014305114746
    5. '   ' → logprob: -15.625014305114746
    6. '[
' → logprob: -15.625014305114746
    7. '```' → logprob: -15.750014305114746
    8. '(' → logprob: -16.875015258789062
    9. '\[' → logprob: -17.125015258789062
    10. 'def' → logprob: -17.625015258789062

Token 120: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.250005722045898
    3. '[' → logprob: -14.500005722045898
    4. '1' → logprob: -15.750005722045898
    5. '-' → logprob: -17.2500057220459
    6. ']' → logprob: -18.1250057220459
    7. '   ' → logprob: -18.6250057220459
    8. ')' → logprob: -19.1250057220459
    9. '(' → logprob: -19.3750057220459
    10. '
' → logprob: -19.5625057220459

Token 121: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5783181190490723
    2. ']' → logprob: -0.8283181190490723
    3. '<|end|>' → logprob: -6.828318119049072
    4. ')]' → logprob: -7.953318119049072
    5. '])' → logprob: -8.453317642211914
    6. '']' → logprob: -8.703317642211914
    7. '[' → logprob: -8.953317642211914
    8. ' )' → logprob: -9.328317642211914
    9. '')' → logprob: -9.578317642211914
    10. ' ]' → logprob: -9.828317642211914

Token 122: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5785273313522339
    2. 'if' (adapté à ' if') → logprob: -0.9535273313522339
    3. ' ' → logprob: -2.9535274505615234
    4. '<|end|>' → logprob: -7.203527450561523
    5. 'args' → logprob: -8.828527450561523
    6. '    ' → logprob: -8.828527450561523
    7. '  ' → logprob: -8.953527450561523
    8. ' i' → logprob: -9.203527450561523
    9. 'i' → logprob: -9.828527450561523
    10. ' args' → logprob: -10.078527450561523

Token 124: ' cmd' (ID: 11704)
  Prédit: ' cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cmd' → logprob: -0.002817597473040223
    2. 'cmd' → logprob: -5.877817630767822
    3. ' ' → logprob: -11.627817153930664
    4. '	cmd' → logprob: -13.252817153930664
    5. '(cmd' → logprob: -13.877817153930664
    6. ' cmds' → logprob: -14.877817153930664
    7. ' not' → logprob: -15.127817153930664
    8. ' len' → logprob: -15.502817153930664
    9. '  ' → logprob: -16.377817153930664
    10. ' command' → logprob: -16.752817153930664

Token 125: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10053552687168121
    2. '==' → logprob: -2.3505356311798096
    3. '=' → logprob: -8.85053539276123
    4. '[' → logprob: -9.60053539276123
    5. ')' → logprob: -10.60053539276123
    6. '<|end|>' → logprob: -10.72553539276123
    7. ' ' → logprob: -10.85053539276123
    8. ' =' → logprob: -11.47553539276123
    9. '=='' → logprob: -11.97553539276123
    10. ' in' → logprob: -12.22553539276123

Token 126: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16686393320560455
    2. ' '' → logprob: -3.4168639183044434
    3. ''M' → logprob: -3.6668639183044434
    4. '"' → logprob: -3.7918639183044434
    5. ''L' → logprob: -4.041863918304443
    6. ''S' → logprob: -4.416863918304443
    7. ''U' → logprob: -4.916863918304443
    8. ''D' → logprob: -5.291863918304443
    9. ''C' → logprob: -5.416863918304443
    10. ''E' → logprob: -5.541863918304443

Token 127: 'STOP' (ID: 103454)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.22812770307064056
    2. '0' → logprob: -2.8531277179718018
    3. 'q' → logprob: -3.4781277179718018
    4. 'END' → logprob: -3.6031277179718018
    5. 'e' → logprob: -3.8531277179718018
    6. 'F' → logprob: -3.8531277179718018
    7. 'Q' → logprob: -4.978127479553223
    8. 'R' → logprob: -4.978127479553223
    9. 'MOVE' → logprob: -5.103127479553223
    10. 'N' → logprob: -5.478127479553223

Token 128: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.2953108549118042
    2. ':' → logprob: -1.4203108549118042
    3. '':
' → logprob: -4.420310974121094
    4. ':
' → logprob: -6.670310974121094
    5. ''' → logprob: -7.795310974121094
    6. '       ' → logprob: -9.045310974121094
    7. '           ' → logprob: -10.170310974121094
    8. '   ' → logprob: -10.170310974121094
    9. '':
' → logprob: -10.170310974121094
    10. '):' → logprob: -10.545310974121094

Token 129: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20963899791240692
    2. '           ' → logprob: -2.209639072418213
    3. '       ' → logprob: -2.709639072418213
    4. ':
' → logprob: -4.459639072418213
    5. '   ' → logprob: -6.834639072418213
    6. '               ' → logprob: -10.334638595581055
    7. ' :' → logprob: -10.834638595581055
    8. '          ' → logprob: -10.959638595581055
    9. ' break' → logprob: -11.209638595581055
    10. '.' → logprob: -11.209638595581055

Token 130: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3545067012310028
    2. ' break' → logprob: -1.4795067310333252
    3. '       ' → logprob: -2.854506731033325
    4. '               ' → logprob: -4.729506492614746
    5. '   ' → logprob: -6.229506492614746
    6. 'break' → logprob: -6.479506492614746
    7. '	break' → logprob: -7.854506492614746
    8. ' ' → logprob: -8.229506492614746
    9. '  ' → logprob: -10.729506492614746
    10. '          ' → logprob: -11.104506492614746

Token 131: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.03105168417096138
    2. 'x' → logprob: -4.5310516357421875
    3. '(' → logprob: -4.6560516357421875
    4. '(f' → logprob: -5.4060516357421875
    5. '(y' → logprob: -6.2810516357421875
    6. '(abs' → logprob: -6.9060516357421875
    7. '()' → logprob: -7.2810516357421875
    8. '('' → logprob: -7.4060516357421875
    9. '("' → logprob: -7.9060516357421875
    10. '((' → logprob: -8.031051635742188

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0042663197964429855
    2. ',y' → logprob: -5.504266262054443
    3. ',end' → logprob: -9.379266738891602
    4. '-' → logprob: -10.129266738891602
    5. ' ,' → logprob: -10.254266738891602
    6. ',n' → logprob: -11.629266738891602
    7. ')' → logprob: -11.754266738891602
    8. 'y' → logprob: -12.629266738891602
    9. ',
' → logprob: -13.129266738891602
    10. ',

' → logprob: -13.504266738891602

Token 133: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0006273718317970634
    2. ' y' → logprob: -7.375627517700195
    3. '   ' → logprob: -14.750627517700195
    4. '    ' → logprob: -15.750627517700195
    5. '  ' → logprob: -16.500627517700195
    6. ' ' → logprob: -16.500627517700195
    7. ''y' → logprob: -17.125627517700195
    8. '     ' → logprob: -17.375627517700195
    9. '       ' → logprob: -17.875627517700195
    10. ',' → logprob: -17.875627517700195

Token 134: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10028959065675735
    2. ')' → logprob: -2.3502895832061768
    3. ',' → logprob: -10.475289344787598
    4. ')
' → logprob: -10.475289344787598
    5. '           ' → logprob: -11.725289344787598
    6. '       ' → logprob: -11.850289344787598
    7. ')

' → logprob: -12.725289344787598
    8. ')`
' → logprob: -13.225289344787598
    9. '   ' → logprob: -13.350289344787598
    10. ' )
' → logprob: -13.475289344787598

Token 135: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.044478900730609894
    2. '       ' → logprob: -3.1694788932800293
    3. '               ' → logprob: -7.794478893280029
    4. '
' → logprob: -8.294479370117188
    5. '<|end|>' → logprob: -8.419479370117188
    6. '   ' → logprob: -9.044479370117188
    7. ')' → logprob: -9.044479370117188
    8. '\n' → logprob: -9.169479370117188
    9. ',' → logprob: -10.294479370117188
    10. 'break' → logprob: -10.419479370117188

Token 136: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.05290069803595543
    2. '           ' → logprob: -3.552900791168213
    3. ' break' → logprob: -4.302900791168213
    4. '       ' → logprob: -4.677900791168213
    5. '	break' → logprob: -10.802900314331055
    6. '   ' → logprob: -10.927900314331055
    7. 'return' → logprob: -11.802900314331055
    8. '               ' → logprob: -12.177900314331055
    9. 'continue' → logprob: -13.052900314331055
    10. '```' → logprob: -13.677900314331055

Token 137: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002347934525460005
    2. '<|end|>' → logprob: -6.377347946166992
    3. 'elif' → logprob: -8.252347946166992
    4. ',' → logprob: -9.502347946166992
    5. '   ' → logprob: -9.627347946166992
    6. '        ' → logprob: -9.877347946166992
    7. ')' → logprob: -10.002347946166992
    8. '      ' → logprob: -10.002347946166992
    9. ' elif' → logprob: -10.377347946166992
    10. '<|end|>' → logprob: -10.877347946166992

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010406357236206532
    2. '<|end|>' → logprob: -5.010406494140625
    3. '   ' → logprob: -6.510406494140625
    4. 'elif' → logprob: -6.885406494140625
    5. ' elif' → logprob: -7.885406494140625
    6. '        ' → logprob: -8.760406494140625
    7. ',' → logprob: -9.010406494140625
    8. '    ' → logprob: -9.010406494140625
    9. '      ' → logprob: -9.135406494140625
    10. '<|end|>' → logprob: -9.760406494140625

Token 139: ' if' (ID: 538)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.7492281198501587
    2. '       ' → logprob: -0.9992281198501587
    3. 'if' (adapté à ' if') → logprob: -2.124228000640869
    4. ' elif' → logprob: -3.499228000640869
    5. ' if' → logprob: -4.874228000640869
    6. '   ' → logprob: -7.249228000640869
    7. '	elif' → logprob: -8.874228477478027
    8. '    ' → logprob: -9.249228477478027
    9. '      ' → logprob: -9.374228477478027
    10. '        ' → logprob: -9.374228477478027

Token 140: ' cmd' (ID: 11704)
  Prédit: ' cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cmd' → logprob: -0.0068047791719436646
    2. 'cmd' → logprob: -5.006804943084717
    3. ' ' → logprob: -10.506804466247559
    4. ' parts' → logprob: -10.506804466247559
    5. ' len' → logprob: -10.631804466247559
    6. ' cmds' → logprob: -12.631804466247559
    7. '(cmd' → logprob: -13.006804466247559
    8. '	cmd' → logprob: -13.131804466247559
    9. ' '' → logprob: -14.381804466247559
    10. ' ' → logprob: -14.756804466247559

Token 141: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5287164449691772
    2. '==' → logprob: -0.9037164449691772
    3. '[' → logprob: -6.278716564178467
    4. ' in' → logprob: -6.278716564178467
    5. ' ' → logprob: -6.778716564178467
    6. '=' → logprob: -8.403716087341309
    7. '  ' → logprob: -8.778716087341309
    8. ')' → logprob: -9.528716087341309
    9. '   ' → logprob: -9.903716087341309
    10. '    ' → logprob: -10.278716087341309

Token 142: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.022791488096117973
    2. ' '' → logprob: -4.397791385650635
    3. ''M' → logprob: -5.397791385650635
    4. ''L' → logprob: -6.897791385650635
    5. ''D' → logprob: -7.522791385650635
    6. ''A' → logprob: -7.647791385650635
    7. ''m' → logprob: -7.647791385650635
    8. ''E' → logprob: -7.647791385650635
    9. ''T' → logprob: -7.772791385650635
    10. ''U' → logprob: -7.897791385650635

Token 143: 'RIGHT' (ID: 24822)
  Prédit: 'MOVE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOVE' → logprob: -0.3370917737483978
    2. 'FOR' → logprob: -2.3370916843414307
    3. 'TURN' → logprob: -2.4620916843414307
    4. 'RIGHT' → logprob: -3.4620916843414307
    5. 'GO' → logprob: -3.8370916843414307
    6. 'FD' → logprob: -4.08709192276001
    7. 'LEFT' → logprob: -4.33709192276001
    8. ' MOVE' → logprob: -5.21209192276001
    9. 'DES' → logprob: -5.58709192276001
    10. 'R' → logprob: -5.83709192276001

Token 144: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.6397730708122253
    2. '':' → logprob: -0.7647730708122253
    3. ''' → logprob: -5.014772891998291
    4. '):
' → logprob: -9.01477336883545
    5. '':
' → logprob: -9.13977336883545
    6. ''):
' → logprob: -9.26477336883545
    7. ':
' → logprob: -10.01477336883545
    8. ')' → logprob: -10.63977336883545
    9. ':' → logprob: -10.76477336883545
    10. '):' → logprob: -10.88977336883545

Token 145: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7929543256759644
    2. ':' → logprob: -1.4179543256759644
    3. '           ' → logprob: -1.6679543256759644
    4. ':
' → logprob: -3.292954444885254
    5. ' =' → logprob: -4.292954444885254
    6. '=' → logprob: -4.667954444885254
    7. '   ' → logprob: -4.792954444885254
    8. ' direction' → logprob: -4.792954444885254
    9. '):' → logprob: -5.042954444885254
    10. '
' → logprob: -5.042954444885254

Token 146: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.18220333755016327
    2. 'direction' (adapté à ' direction') → logprob: -1.8072032928466797
    3. '           ' → logprob: -6.05720329284668
    4. '   ' → logprob: -9.55720329284668
    5. '(direction' → logprob: -10.93220329284668
    6. '       ' → logprob: -11.43220329284668
    7. '    ' → logprob: -12.18220329284668
    8. '            ' → logprob: -12.68220329284668
    9. ' ' → logprob: -13.55720329284668
    10. '方向' → logprob: -14.18220329284668

Token 147: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47616705298423767
    2. '=' → logprob: -0.9761670827865601
    3. ' +=' → logprob: -6.60116720199585
    4. '+=' → logprob: -7.22616720199585
    5. '=(' → logprob: -13.976166725158691
    6. ' =(' → logprob: -14.726166725158691
    7. ')' → logprob: -15.476166725158691
    8. '+' → logprob: -15.726166725158691
    9. ' ' → logprob: -16.601167678833008
    10. '＝' → logprob: -16.851167678833008

Token 148: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.47499793767929077
    2. '(direction' → logprob: -0.9749979376792908
    3. '(dir' → logprob: -7.2249979972839355
    4. '(' → logprob: -9.974997520446777
    5. '(command' → logprob: -10.474997520446777
    6. '(next' → logprob: -10.599997520446777
    7. '(cmd' → logprob: -11.099997520446777
    8. '           ' → logprob: -11.599997520446777
    9. '(parts' → logprob: -11.974997520446777
    10. '(rotation' → logprob: -11.974997520446777

Token 149: 'direction' (ID: 43278)
  Prédit: 'direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.010306309908628464
    2. ' direction' → logprob: -4.635306358337402
    3. '(direction' → logprob: -7.510306358337402
    4. 'dire' → logprob: -14.260306358337402
    5. ' (' → logprob: -14.260306358337402
    6. 'direct' → logprob: -15.010306358337402
    7. '   ' → logprob: -15.260306358337402
    8. '_direction' → logprob: -15.635306358337402
    9. ' ' → logprob: -16.385305404663086
    10. '.direction' → logprob: -16.385305404663086

Token 150: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0017024369444698095
    2. '+' → logprob: -6.376702308654785
    3. ' ' → logprob: -15.751702308654785
    4. '1' → logprob: -16.5017032623291
    5. ')' → logprob: -17.5017032623291
    6. ' plus' → logprob: -18.3767032623291
    7. '    ' → logprob: -18.3767032623291
    8. ' ' → logprob: -18.7517032623291
    9. '[' → logprob: -19.1267032623291
    10. '2' → logprob: -19.5017032623291

Token 151: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004620710853487253
    2. ' ' → logprob: -5.379620552062988
    3. '   ' → logprob: -15.129620552062988
    4. '<|end|>' → logprob: -16.754621505737305
    5. ')' → logprob: -16.879621505737305
    6. '```' → logprob: -17.004621505737305
    7. '  ' → logprob: -17.129621505737305
    8. '    ' → logprob: -18.192121505737305
    9. '[' → logprob: -18.567121505737305
    10. '2' → logprob: -19.317121505737305

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.723973582556937e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.125017166137695
    4. ')' → logprob: -16.625017166137695
    5. '<|end|>' → logprob: -16.812517166137695
    6. '```' → logprob: -17.250017166137695
    7. '[' → logprob: -17.625017166137695
    8. '  ' → logprob: -18.187517166137695
    9. '90' → logprob: -18.250017166137695
    10. '{' → logprob: -18.250017166137695

Token 153: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.749814019713085e-06
    2. ')%' → logprob: -12.250006675720215
    3. ' )' → logprob: -13.250006675720215
    4. ')
' → logprob: -17.25000762939453
    5. '[' → logprob: -18.75000762939453
    6. '%' → logprob: -18.87500762939453
    7. '1' → logprob: -19.12500762939453
    8. ']' → logprob: -19.25000762939453
    9. '```' → logprob: -19.37500762939453
    10. '2' → logprob: -19.50000762939453

Token 154: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.31550657749176025
    2. '%' → logprob: -1.3155065774917603
    3. ')' → logprob: -6.565506458282471
    4. '<|end|>' → logprob: -7.190506458282471
    5. ')%' → logprob: -9.690506935119629
    6. ' ' → logprob: -12.065506935119629
    7. '<|end|>' → logprob: -12.065506935119629
    8. ' ' → logprob: -13.815506935119629
    9. ' )' → logprob: -13.815506935119629
    10. ' %)' → logprob: -13.940506935119629

Token 155: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '```' → logprob: -16.00000762939453
    4. '   ' → logprob: -16.25000762939453
    5. '۴' → logprob: -18.62500762939453
    6. '' → logprob: -18.75000762939453
    7. '٤' → logprob: -19.37500762939453
    8. '৪' → logprob: -19.62500762939453
    9. '४' → logprob: -19.75000762939453
    10. '  ' → logprob: -19.87500762939453

Token 156: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -17.125001907348633
    4. '' → logprob: -18.625001907348633
    5. '   ' → logprob: -19.000001907348633
    6. '۴' → logprob: -19.250001907348633
    7. '٤' → logprob: -19.625001907348633
    8. '৪' → logprob: -20.562501907348633
    9. '४' → logprob: -20.625001907348633
    10. '４' → logprob: -21.062501907348633

Token 157: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7637344002723694
    2. '
' → logprob: -1.3887343406677246
    3. '\n' → logprob: -2.0137343406677246
    4. '<|end|>' → logprob: -2.0137343406677246
    5. 'elif' → logprob: -4.388734340667725
    6. '   ' → logprob: -6.513734340667725
    7. '<|end|>' → logprob: -7.138734340667725
    8. ' elif' → logprob: -7.388734340667725
    9. '        
' → logprob: -7.888734340667725
    10. ')' → logprob: -7.888734340667725

Token 158: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2533833682537079
    2. 'elif' (adapté à ' elif') → logprob: -1.6283833980560303
    3. ' elif' → logprob: -3.7533833980560303
    4. '
' → logprob: -6.503383159637451
    5. '   ' → logprob: -6.878383159637451
    6. 'else' → logprob: -7.628383159637451
    7. ' if' → logprob: -8.00338363647461
    8. 'if' → logprob: -8.12838363647461
    9. ' else' → logprob: -8.37838363647461
    10. '        
' → logprob: -9.75338363647461

Token 160: ' cmd' (ID: 11704)
  Prédit: ' cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cmd' → logprob: -0.10022510588169098
    2. 'cmd' → logprob: -2.3502252101898193
    3. ' parts' → logprob: -11.600225448608398
    4. '(cmd' → logprob: -12.350225448608398
    5. '	cmd' → logprob: -13.350225448608398
    6. ' ' → logprob: -13.850225448608398
    7. ' cmds' → logprob: -13.850225448608398
    8. 'parts' → logprob: -14.225225448608398
    9. ' command' → logprob: -15.225225448608398
    10. 'command' → logprob: -16.2252254486084

Token 161: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31343135237693787
    2. '==' → logprob: -1.3134313821792603
    3. '[' → logprob: -9.313431739807129
    4. '=' → logprob: -9.813431739807129
    5. '=='' → logprob: -11.813431739807129
    6. ' =' → logprob: -11.938431739807129
    7. '[]' → logprob: -13.188431739807129
    8. '===' → logprob: -13.188431739807129
    9. ']==' → logprob: -13.313431739807129
    10. ' ' → logprob: -13.938431739807129

Token 162: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08920957148075104
    2. ' '' → logprob: -2.46420955657959
    3. ' ' → logprob: -9.08920955657959
    4. ''S' → logprob: -9.21420955657959
    5. '"' → logprob: -11.08920955657959
    6. '('' → logprob: -11.58920955657959
    7. ''s' → logprob: -12.08920955657959
    8. '   ' → logprob: -12.33920955657959
    9. ' ' → logprob: -12.58920955657959
    10. '	' → logprob: -12.58920955657959

Token 163: 'LEFT' (ID: 51729)
  Prédit: 'LEFT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LEFT' → logprob: -0.13064336776733398
    2. ''' → logprob: -2.130643367767334
    3. ' LEFT' → logprob: -5.880643367767334
    4. ' '' → logprob: -7.505643367767334
    5. ''S' → logprob: -9.505643844604492
    6. ''L' → logprob: -9.755643844604492
    7. ''D' → logprob: -10.505643844604492
    8. '"' → logprob: -10.630643844604492
    9. '_LEFT' → logprob: -10.880643844604492
    10. '['' → logprob: -10.880643844604492

Token 164: '':
' (ID: 7669)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0986083447933197
    2. '=' → logprob: -2.9736082553863525
    3. ':
' → logprob: -3.8486082553863525
    4. ' =' → logprob: -4.098608493804932
    5. '):
' → logprob: -6.348608493804932
    6. ':' → logprob: -7.098608493804932
    7. 'direction' → logprob: -7.223608493804932
    8. ')' → logprob: -7.473608493804932
    9. '(direction' → logprob: -7.723608493804932
    10. ' direction' → logprob: -9.223608016967773

Token 165: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1541416049003601
    2. ' =' → logprob: -2.404141664505005
    3. '=' → logprob: -3.404141664505005
    4. 'direction' → logprob: -4.279141426086426
    5. ' direction' → logprob: -5.279141426086426
    6. '(direction' → logprob: -8.779141426086426
    7. '            ' → logprob: -10.029141426086426
    8. ':' → logprob: -10.529141426086426
    9. ':
' → logprob: -10.654141426086426
    10. '	       ' → logprob: -11.404141426086426

Token 166: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.3879511058330536
    2. 'direction' (adapté à ' direction') → logprob: -1.137951135635376
    3. '           ' → logprob: -6.887950897216797
    4. '(direction' → logprob: -9.762950897216797
    5. '   ' → logprob: -14.012950897216797
    6. '       ' → logprob: -15.262950897216797
    7. '方向' → logprob: -15.512950897216797
    8. '               ' → logprob: -15.762950897216797
    9. '.direction' → logprob: -15.762950897216797
    10. ' ' → logprob: -16.637950897216797

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740770161151886
    2. '=' → logprob: -0.9740769863128662
    3. '           ' → logprob: -17.474077224731445
    4. '   ' → logprob: -17.474077224731445
    5. '       ' → logprob: -18.474077224731445
    6. ' ' → logprob: -18.849077224731445
    7. '＝' → logprob: -18.849077224731445
    8. '-=' → logprob: -19.474077224731445
    9. ' -=' → logprob: -19.974077224731445
    10. '```' → logprob: -20.224077224731445

Token 168: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.693223774433136
    2. '(direction' → logprob: -0.693223774433136
    3. '(dir' → logprob: -10.69322395324707
    4. '           ' → logprob: -11.19322395324707
    5. '(' → logprob: -11.19322395324707
    6. '       ' → logprob: -12.19322395324707
    7. ' ' → logprob: -12.81822395324707
    8. '   ' → logprob: -12.94322395324707
    9. '(d' → logprob: -13.19322395324707
    10. '(command' → logprob: -13.31822395324707

Token 169: 'direction' (ID: 43278)
  Prédit: '(direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(direction' → logprob: -0.07982422411441803
    2. 'direction' → logprob: -2.579824209213257
    3. ' (' → logprob: -7.079824447631836
    4. ' direction' → logprob: -9.704824447631836
    5. '   ' → logprob: -11.079824447631836
    6. '(d' → logprob: -12.204824447631836
    7. '       ' → logprob: -12.829824447631836
    8. ' ' → logprob: -13.579824447631836
    9. '.direction' → logprob: -14.329824447631836
    10. '0' → logprob: -14.329824447631836

Token 170: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008828587830066681
    2. '-' → logprob: -5.258828639984131
    3. ' +' → logprob: -6.008828639984131
    4. ' ' → logprob: -7.133828639984131
    5. '+' → logprob: -8.633828163146973
    6. ')' → logprob: -9.133828163146973
    7. '=' → logprob: -11.508828163146973
    8. '(' → logprob: -11.508828163146973
    9. ' (' → logprob: -12.008828163146973
    10. '   ' → logprob: -12.383828163146973

Token 171: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005929274018853903
    2. ' ' → logprob: -5.130929470062256
    3. '   ' → logprob: -15.005928993225098
    4. '```' → logprob: -15.630928993225098
    5. ')' → logprob: -16.630929946899414
    6. '           ' → logprob: -17.880929946899414
    7. '=' → logprob: -18.005929946899414
    8. '       ' → logprob: -18.130929946899414
    9. '  ' → logprob: -19.630929946899414
    10. '    ' → logprob: -19.755929946899414

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.180879816180095e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -15.625051498413086
    4. '       ' → logprob: -17.375051498413086
    5. '```' → logprob: -17.375051498413086
    6. '           ' → logprob: -17.750051498413086
    7. ')' → logprob: -17.875051498413086
    8. '<|end|>' → logprob: -18.500051498413086
    9. '=' → logprob: -20.187551498413086
    10. '    ' → logprob: -20.312551498413086

Token 173: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003716342616826296
    2. ' )' → logprob: -5.628716468811035
    3. ')%' → logprob: -9.753716468811035
    4. '1' → logprob: -9.878716468811035
    5. '+' → logprob: -12.878716468811035
    6. ' +' → logprob: -13.378716468811035
    7. ' ' → logprob: -13.628716468811035
    8. '       ' → logprob: -15.378716468811035
    9. '```' → logprob: -15.378716468811035
    10. '4' → logprob: -15.378716468811035

Token 174: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6338839530944824
    2. '%' → logprob: -0.7588839530944824
    3. ' ' → logprob: -7.133883953094482
    4. ')' → logprob: -7.883883953094482
    5. ')%' → logprob: -9.88388442993164
    6. '1' → logprob: -11.00888442993164
    7. '0' → logprob: -11.88388442993164
    8. '```' → logprob: -11.88388442993164
    9. '[' → logprob: -12.00888442993164
    10. '<|end|>' → logprob: -12.63388442993164

Token 175: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.003600901924073696
    2. ' ' → logprob: -5.62860107421875
    3. '   ' → logprob: -14.37860107421875
    4. '```' → logprob: -15.12860107421875
    5. '  ' → logprob: -17.87860107421875
    6. ' four' → logprob: -18.94110107421875
    7. '<|end|>' → logprob: -18.94110107421875
    8. '۴' → logprob: -19.19110107421875
    9. 'python' → logprob: -19.37860107421875
    10. '' → logprob: -19.44110107421875

Token 176: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -15.500015258789062
    4. '   ' → logprob: -16.625015258789062
    5. '' → logprob: -20.437515258789062
    6. '۴' → logprob: -20.687515258789062
    7. '  ' → logprob: -20.875015258789062
    8. 'python' → logprob: -20.937515258789062
    9. '٤' → logprob: -21.250015258789062
    10. '{' → logprob: -21.250015258789062

Token 177: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030213219579309225
    2. 'else' → logprob: -6.378021240234375
    3. 'elif' → logprob: -6.878021240234375
    4. ' else' → logprob: -8.628021240234375
    5. ' elif' → logprob: -10.003021240234375
    6. '<|end|>' → logprob: -10.503021240234375
    7. ',' → logprob: -11.628021240234375
    8. '	elif' → logprob: -11.753021240234375
    9. '```' → logprob: -11.878021240234375
    10. '   ' → logprob: -12.128021240234375

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0057229287922382355
    2. 'else' → logprob: -5.755722999572754
    3. 'elif' → logprob: -6.255722999572754
    4. ' else' → logprob: -7.880722999572754
    5. ' elif' → logprob: -9.005722999572754
    6. '<|end|>' → logprob: -10.130722999572754
    7. '   ' → logprob: -10.255722999572754
    8. '	elif' → logprob: -10.880722999572754
    9. '```' → logprob: -11.505722999572754
    10. '	' → logprob: -12.005722999572754

Token 179: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.25763368606567383
    2. ' elif' → logprob: -2.007633686065674
    3. 'else' (adapté à ' else') → logprob: -2.882633686065674
    4. '       ' → logprob: -3.632633686065674
    5. ' else' → logprob: -4.632633686065674
    6. '   ' → logprob: -7.632633686065674
    7. '	elif' → logprob: -9.007633209228516
    8. ' ' → logprob: -12.007633209228516
    9. ')' → logprob: -12.132633209228516
    10. ' or' → logprob: -12.507633209228516

Token 180: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13788577914237976
    2. ':
' → logprob: -2.387885808944702
    3. ' if' → logprob: -3.887885808944702
    4. 'if' → logprob: -4.387885570526123
    5. ' :' → logprob: -6.012885570526123
    6. '       ' → logprob: -7.387885570526123
    7. ' :
' → logprob: -7.512885570526123
    8. '           ' → logprob: -8.762886047363281
    9. '   ' → logprob: -8.887886047363281
    10. '        ' → logprob: -10.637886047363281

Token 181: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3687143921852112
    2. '           ' → logprob: -1.7437143325805664
    3. 'if' → logprob: -2.9937143325805664
    4. '       ' → logprob: -2.9937143325805664
    5. '        ' → logprob: -4.493714332580566
    6. ' ' → logprob: -4.743714332580566
    7. ' #' → logprob: -5.243714332580566
    8. '    ' → logprob: -6.243714332580566
    9. ':
' → logprob: -7.118714332580566
    10. ':' → logprob: -7.118714332580566

Token 182: ' k' (ID: 372)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.20757243037223816
    2. ' steps' → logprob: -2.0825724601745605
    3. 'step' → logprob: -3.8325724601745605
    4. 'dist' → logprob: -4.3325724601745605
    5. 'distance' → logprob: -4.3325724601745605
    6. 'value' → logprob: -5.3325724601745605
    7. ' step' → logprob: -6.3325724601745605
    8. ' dist' → logprob: -6.3325724601745605
    9. ' distance' → logprob: -6.7075724601745605
    10. 'val' → logprob: -6.8325724601745605

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12697209417819977
    2. '=' → logprob: -2.126972198486328
    3. '=int' → logprob: -10.126972198486328
    4. ' ' → logprob: -13.126972198486328
    5. ',' → logprob: -13.626972198486328
    6. ')' → logprob: -15.251972198486328
    7. ' ' → logprob: -16.001972198486328
    8. 'space' → logprob: -16.376972198486328
    9. '=parse' → logprob: -16.751972198486328
    10. '_' → logprob: -16.751972198486328

Token 184: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01814994215965271
    2. ' int' → logprob: -4.0181498527526855
    3. '(int' → logprob: -17.268150329589844
    4. '[int' → logprob: -18.018150329589844
    5. '<int' → logprob: -19.143150329589844
    6. '	int' → logprob: -19.268150329589844
    7. '=int' → logprob: -19.393150329589844
    8. ']int' → logprob: -20.393150329589844
    9. 'ints' → logprob: -20.768150329589844
    10. ' ' → logprob: -21.018150329589844

Token 185: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -6.897412822581828e-05
    2. '(' → logprob: -9.625068664550781
    3. '(cmd' → logprob: -13.375068664550781
    4. 'parts' → logprob: -13.750068664550781
    5. ' parts' → logprob: -15.750068664550781
    6. ' (' → logprob: -16.62506866455078
    7. '('' → logprob: -17.62506866455078
    8. '()' → logprob: -18.00006866455078
    9. '(k' → logprob: -18.50006866455078
    10. '(part' → logprob: -18.50006866455078

Token 186: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -14.250001907348633
    3. '1' → logprob: -14.250001907348633
    4. '[-' → logprob: -14.750001907348633
    5. ' [' → logprob: -15.875001907348633
    6. ')' → logprob: -17.625001907348633
    7. '   ' → logprob: -17.875001907348633
    8. '```' → logprob: -18.125001907348633
    9. '][' → logprob: -18.750001907348633
    10. '[
' → logprob: -18.875001907348633

Token 187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.375000953674316
    3. '[' → logprob: -16.375
    4. '   ' → logprob: -16.5
    5. '-' → logprob: -17.25
    6. '
' → logprob: -17.375
    7. ')' → logprob: -18.375
    8. '```' → logprob: -18.625
    9. '2' → logprob: -19.375
    10. '0' → logprob: -19.4375

Token 188: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38716959953308105
    2. ')
' → logprob: -1.137169599533081
    3. ' )' → logprob: -8.88716983795166
    4. ' )
' → logprob: -8.88716983795166
    5. ')
' → logprob: -11.01216983795166
    6. '       ' → logprob: -12.76216983795166
    7. ')

' → logprob: -13.88716983795166
    8. '   ' → logprob: -14.76216983795166
    9. '）' → logprob: -15.51216983795166
    10. ')`
' → logprob: -15.76216983795166

Token 189: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4287185668945312
    2. ' if' → logprob: -1.4287185668945312
    3. 'if' → logprob: -1.5537185668945312
    4. '           ' → logprob: -1.5537185668945312
    5. '
' → logprob: -3.3037185668945312
    6. '   ' → logprob: -3.3037185668945312
    7. ' for' → logprob: -4.803718566894531
    8. 'for' → logprob: -5.428718566894531
    9. '        
' → logprob: -5.803718566894531
    10. '            
' → logprob: -6.178718566894531

Token 190: ' dx' (ID: 29472)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25636154413223267
    2. ' if' → logprob: -1.631361484527588
    3. 'for' → logprob: -3.881361484527588
    4. ' for' → logprob: -5.131361484527588
    5. 'dx' (adapté à ' dx') → logprob: -6.256361484527588
    6. '       ' → logprob: -6.381361484527588
    7. '           ' → logprob: -9.131361961364746
    8. ' dx' → logprob: -9.256361961364746
    9. '   ' → logprob: -9.631361961364746
    10. '
' → logprob: -10.131361961364746

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021807879209518433
    2. '=' → logprob: -3.896807909011841
    3. ' =' → logprob: -6.771807670593262
    4. ' ,' → logprob: -10.021807670593262
    5. ',y' → logprob: -10.396807670593262
    6. 's' → logprob: -11.021807670593262
    7. ',d' → logprob: -11.771807670593262
    8. '[' → logprob: -11.896807670593262
    9. 'dx' → logprob: -12.646807670593262
    10. 'dy' → logprob: -12.646807670593262

Token 192: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.029793769121170044
    2. ' dy' → logprob: -3.5297937393188477
    3. '0' → logprob: -11.904793739318848
    4. ' ' → logprob: -12.029793739318848
    5. '=' → logprob: -12.154793739318848
    6. '<|end|>' → logprob: -12.154793739318848
    7. '   ' → logprob: -12.279793739318848
    8. ' =' → logprob: -12.279793739318848
    9. 'd' → logprob: -12.904793739318848
    10. '  ' → logprob: -13.154793739318848

Token 193: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741049110889435
    2. ' =' → logprob: -0.9741048812866211
    3. '<|end|>' → logprob: -11.099104881286621
    4. '[' → logprob: -12.724104881286621
    5. ')' → logprob: -12.724104881286621
    6. ' ' → logprob: -12.974104881286621
    7. ',' → logprob: -13.724104881286621
    8. ']' → logprob: -14.349104881286621
    9. ' =
' → logprob: -14.599104881286621
    10. '=
' → logprob: -14.599104881286621

Token 194: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018292054533958435
    2. ' ' → logprob: -4.14329195022583
    3. '(' → logprob: -6.64329195022583
    4. '[' → logprob: -8.393292427062988
    5. '{
' → logprob: -8.393292427062988
    6. '[(' → logprob: -8.643292427062988
    7. ' (' → logprob: -8.768292427062988
    8. '[
' → logprob: -9.518292427062988
    9. '{' → logprob: -10.018292427062988
    10. ' [(' → logprob: -10.768292427062988

Token 195: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01411449071019888
    2. '(' → logprob: -4.3891143798828125
    3. '[(' → logprob: -6.7641143798828125
    4. '[' → logprob: -8.264114379882812
    5. '{' → logprob: -9.514114379882812
    6. '{
' → logprob: -9.764114379882812
    7. ' ' → logprob: -10.389114379882812
    8. '[
' → logprob: -11.264114379882812
    9. ' (' → logprob: -11.764114379882812
    10. '
' → logprob: -13.014114379882812

Token 196: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47851333022117615
    2. '<|end|>' → logprob: -1.4785133600234985
    3. ',' → logprob: -2.103513240814209
    4. '<|end|>' → logprob: -4.728513240814209
    5. ',
' → logprob: -5.103513240814209
    6. ')' → logprob: -5.353513240814209
    7. '           ' → logprob: -5.853513240814209
    8. '0' → logprob: -6.353513240814209
    9. '   ' → logprob: -7.103513240814209
    10. 'if' → logprob: -7.103513240814209

Token 197: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.64708495605737e-05
    2. ' ' → logprob: -9.625066757202148
    3. '-' → logprob: -16.81256675720215
    4. '۰' → logprob: -16.93756675720215
    5. '<|end|>' → logprob: -17.12506675720215
    6. '1' → logprob: -17.93756675720215
    7. '```' → logprob: -17.93756675720215
    8. '   ' → logprob: -18.37506675720215
    9. ' -' → logprob: -18.50006675720215
    10. 'k' → logprob: -18.87506675720215

Token 198: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.125015258789062
    3. '-' → logprob: -15.000015258789062
    4. ' -' → logprob: -17.000015258789062
    5. '1' → logprob: -17.687515258789062
    6. '۰' → logprob: -18.000015258789062
    7. 'k' → logprob: -18.437515258789062
    8. '<|end|>' → logprob: -18.750015258789062
    9. '   ' → logprob: -19.000015258789062
    10. 's' → logprob: -19.187515258789062

Token 199: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.054258059710264206
    2. '           ' → logprob: -3.179258108139038
    3. '       ' → logprob: -5.554257869720459
    4. '<|end|>' → logprob: -5.804257869720459
    5. ' if' → logprob: -6.304257869720459
    6. 'if' → logprob: -6.679257869720459
    7. '   ' → logprob: -7.804257869720459
    8. '            
' → logprob: -8.929258346557617
    9. '
' → logprob: -9.054258346557617
    10. ' 
' → logprob: -9.179258346557617

Token 200: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6006251573562622
    2. '<|end|>' → logprob: -0.8506251573562622
    3. '           ' → logprob: -4.350625038146973
    4. '<|end|>' → logprob: -5.350625038146973
    5. '       ' → logprob: -5.975625038146973
    6. '  
' → logprob: -7.225625038146973
    7. ' 
' → logprob: -7.225625038146973
    8. '            
' → logprob: -7.600625038146973
    9. '   ' → logprob: -7.725625038146973
    10. '    
' → logprob: -7.725625038146973

Token 201: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5806251168251038
    2. 'if' (adapté à ' if') → logprob: -0.8306251168251038
    3. '           ' → logprob: -5.455625057220459
    4. '       ' → logprob: -8.580625534057617
    5. '<|end|>' → logprob: -9.455625534057617
    6. '
' → logprob: -10.205625534057617
    7. '   ' → logprob: -10.205625534057617
    8. '	if' → logprob: -10.830625534057617
    9. ' ' → logprob: -11.830625534057617
    10. '        ' → logprob: -12.205625534057617

Token 202: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.2014184147119522
    2. 'direction' → logprob: -1.701418399810791
    3. '(direction' → logprob: -12.57641887664795
    4. '   ' → logprob: -14.20141887664795
    5. ' ' → logprob: -14.82641887664795
    6. '  ' → logprob: -15.32641887664795
    7. 'dire' → logprob: -15.82641887664795
    8. '    ' → logprob: -16.076417922973633
    9. 'command' → logprob: -16.701417922973633
    10. '方向' → logprob: -17.201417922973633

Token 203: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3132665753364563
    2. ' ==' → logprob: -1.3132665157318115
    3. '=' → logprob: -13.31326675415039
    4. '==
' → logprob: -14.31326675415039
    5. ']==' → logprob: -14.68826675415039
    6. ' ' → logprob: -14.93826675415039
    7. ')==' → logprob: -15.18826675415039
    8. ')' → logprob: -15.31326675415039
    9. '===' → logprob: -15.31326675415039
    10. '   ' → logprob: -15.43826675415039

Token 204: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020544573664665222
    2. ' ' → logprob: -3.8955445289611816
    3. '   ' → logprob: -13.52054500579834
    4. '1' → logprob: -14.27054500579834
    5. '  ' → logprob: -15.58304500579834
    6. '    ' → logprob: -16.458044052124023
    7. '<|end|>' → logprob: -16.770544052124023
    8. '3' → logprob: -16.833044052124023
    9. '۰' → logprob: -17.208044052124023
    10. '```' → logprob: -17.833044052124023

Token 205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011723674833774567
    2. ' ' → logprob: -6.7511725425720215
    3. '1' → logprob: -13.251172065734863
    4. '   ' → logprob: -15.876172065734863
    5. '3' → logprob: -16.00117301940918
    6. '2' → logprob: -17.62617301940918
    7. '۰' → logprob: -17.68867301940918
    8. '```' → logprob: -17.75117301940918
    9. '  ' → logprob: -17.87617301940918
    10. '
' → logprob: -18.12617301940918

Token 206: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07899807393550873
    2. ':' → logprob: -2.57899808883667
    3. '           ' → logprob: -9.953997611999512
    4. ':

' → logprob: -10.953997611999512
    5. ' and' → logprob: -11.203997611999512
    6. ' :
' → logprob: -11.953997611999512
    7. ',' → logprob: -12.078997611999512
    8. '):
' → logprob: -12.203997611999512
    9. ':
' → logprob: -13.203997611999512
    10. '-' → logprob: -13.328997611999512

Token 207: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9387121200561523
    2. 'dy' → logprob: -1.8137121200561523
    3. ' dy' → logprob: -1.8137121200561523
    4. '           ' → logprob: -1.9387121200561523
    5. ',' → logprob: -3.4387121200561523
    6. '-' → logprob: -3.6887121200561523
    7. 'dx' → logprob: -3.6887121200561523
    8. '               ' → logprob: -4.188712120056152
    9. ' dx' → logprob: -4.563712120056152
    10. '0' → logprob: -5.313712120056152

Token 208: ' dx' (ID: 29472)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.1430155485868454
    2. 'dx' (adapté à ' dx') → logprob: -2.7680156230926514
    3. ' dy' → logprob: -2.7680156230926514
    4. 'y' → logprob: -5.143015384674072
    5. '0' → logprob: -7.518015384674072
    6. ' dx' → logprob: -7.643015384674072
    7. '-' → logprob: -7.768015384674072
    8. 'x' → logprob: -8.76801586151123
    9. '-d' → logprob: -9.26801586151123
    10. ' y' → logprob: -9.76801586151123

Token 209: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3949502110481262
    2. ',' → logprob: -1.6449501514434814
    3. ' =' → logprob: -2.0199501514434814
    4. ' ,' → logprob: -7.7699503898620605
    5. '0' → logprob: -9.269949913024902
    6. '=
' → logprob: -11.019949913024902
    7. ' =
' → logprob: -11.519949913024902
    8. '-=' → logprob: -11.644949913024902
    9. ',
' → logprob: -11.769949913024902
    10. ' -=' → logprob: -11.894949913024902

Token 210: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.7507756352424622
    2. '0' → logprob: -1.2507755756378174
    3. 'dy' → logprob: -1.5007755756378174
    4. ' ' → logprob: -4.1257758140563965
    5. '-' → logprob: -6.5007758140563965
    6. '=' → logprob: -7.0007758140563965
    7. '-d' → logprob: -9.125775337219238
    8. ' -' → logprob: -10.000775337219238
    9. ' =' → logprob: -11.375775337219238
    10. '-=' → logprob: -12.125775337219238

Token 211: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012511883862316608
    2. ' =' → logprob: -4.387511730194092
    3. '=
' → logprob: -13.76251220703125
    4. ',' → logprob: -14.51251220703125
    5. '0' → logprob: -14.76251220703125
    6. '-=' → logprob: -15.88751220703125
    7. '=-' → logprob: -16.88751220703125
    8. '-' → logprob: -16.88751220703125
    9. ' ' → logprob: -17.13751220703125
    10. '+=' → logprob: -17.51251220703125

Token 212: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012042523361742496
    2. ' ' → logprob: -4.51204252243042
    3. '-' → logprob: -7.26204252243042
    4. '(' → logprob: -8.262042999267578
    5. ' (' → logprob: -10.887042999267578
    6. ' -' → logprob: -11.387042999267578
    7. '(-' → logprob: -12.762042999267578
    8. ' (-' → logprob: -15.324542999267578
    9. '1' → logprob: -15.449542999267578
    10. '```' → logprob: -15.637042999267578

Token 213: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001333455671556294
    2. '-' → logprob: -6.751333236694336
    3. ' ' → logprob: -8.876333236694336
    4. '(' → logprob: -10.876333236694336
    5. '(-' → logprob: -13.501333236694336
    6. ' -' → logprob: -13.626333236694336
    7. '-(' → logprob: -13.751333236694336
    8. ' (' → logprob: -15.688833236694336
    9. '```' → logprob: -15.876333236694336
    10. '00' → logprob: -16.376333236694336

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011256909929215908
    2. ',-' → logprob: -7.376125812530518
    3. '-' → logprob: -8.12612533569336
    4. ' ,' → logprob: -9.00112533569336
    5. '0' → logprob: -10.37612533569336
    6. ',
' → logprob: -11.25112533569336
    7. '1' → logprob: -11.25112533569336
    8. '   ' → logprob: -11.75112533569336
    9. ' -' → logprob: -12.50112533569336
    10. ' ' → logprob: -13.50112533569336

Token 215: ' ' (ID: 220)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.6728169918060303
    2. '-' → logprob: -0.7978169918060303
    3. ' -' → logprob: -4.047817230224609
    4. 'k' → logprob: -4.547817230224609
    5. '1' → logprob: -4.547817230224609
    6. ' k' → logprob: -7.297817230224609
    7. ' ' → logprob: -9.67281723022461
    8. '-(' → logprob: -11.79781723022461
    9. '-m' → logprob: -12.17281723022461
    10. '-one' → logprob: -13.23531723022461

Token 216: '1' (ID: 16)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.29354986548423767
    2. '-' → logprob: -1.41854989528656
    3. 'k' → logprob: -4.91855001449585
    4. '1' → logprob: -5.79355001449585
    5. ' -' → logprob: -6.29355001449585
    6. ' k' → logprob: -9.668549537658691
    7. '-(' → logprob: -10.668549537658691
    8. ' ' → logprob: -12.543549537658691
    9. '-m' → logprob: -12.668549537658691
    10. '-n' → logprob: -13.168549537658691

Token 217: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09480609744787216
    2. '
' → logprob: -2.46980619430542
    3. 'elif' → logprob: -5.34480619430542
    4. '            
' → logprob: -7.71980619430542
    5. ' elif' → logprob: -7.84480619430542
    6. '<|end|>' → logprob: -9.594805717468262
    7. ' 
' → logprob: -10.344805717468262
    8. '    
' → logprob: -10.594805717468262
    9. '  
' → logprob: -10.719805717468262
    10. 'else' → logprob: -11.219805717468262

Token 218: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07051427662372589
    2. 'elif' → logprob: -3.32051420211792
    3. '
' → logprob: -3.69551420211792
    4. ' elif' → logprob: -5.07051420211792
    5. '            
' → logprob: -7.69551420211792
    6. '<|end|>' → logprob: -8.695514678955078
    7. ' 
' → logprob: -10.070514678955078
    8. '    
' → logprob: -10.320514678955078
    9. '\n' → logprob: -10.445514678955078
    10. '  
' → logprob: -10.945514678955078

Token 219: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.2544398605823517
    2. ' elif' → logprob: -2.1294398307800293
    3. '           ' → logprob: -2.2544398307800293
    4. 'else' → logprob: -7.629439830780029
    5. 'if' → logprob: -9.254440307617188
    6. '       ' → logprob: -9.504440307617188
    7. ' else' → logprob: -9.504440307617188
    8. ' if' → logprob: -10.504440307617188
    9. '
' → logprob: -10.879440307617188
    10. '   ' → logprob: -11.254440307617188

Token 220: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.31327390670776367
    2. ' direction' → logprob: -1.3132739067077637
    3. '(direction' → logprob: -12.063274383544922
    4. ' ' → logprob: -13.063274383544922
    5. '   ' → logprob: -13.063274383544922
    6. '           ' → logprob: -14.188274383544922
    7. '.direction' → logprob: -15.313274383544922
    8. '  ' → logprob: -15.313274383544922
    9. '方向' → logprob: -15.438274383544922
    10. '       ' → logprob: -15.688274383544922

Token 221: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07889595627784729
    2. '==' → logprob: -2.5788960456848145
    3. ' ' → logprob: -12.453895568847656
    4. '=' → logprob: -14.328895568847656
    5. '==
' → logprob: -14.328895568847656
    6. ']==' → logprob: -15.578895568847656
    7. ' =' → logprob: -15.953895568847656
    8. ')==' → logprob: -16.453895568847656
    9. '===' → logprob: -16.453895568847656
    10. 'elif' → logprob: -16.453895568847656

Token 222: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11366354674100876
    2. '2' → logprob: -2.8636634349823
    3. ' ' → logprob: -2.9886634349823
    4. '   ' → logprob: -11.738663673400879
    5. '3' → logprob: -11.988663673400879
    6. '       ' → logprob: -12.551163673400879
    7. '0' → logprob: -12.613663673400879
    8. '           ' → logprob: -13.863663673400879
    9. '  ' → logprob: -13.926163673400879
    10. '```' → logprob: -14.488663673400879

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006862067151814699
    2. '2' → logprob: -5.006862163543701
    3. ' ' → logprob: -8.881861686706543
    4. '3' → logprob: -12.381861686706543
    5. '0' → logprob: -13.256861686706543
    6. '   ' → logprob: -13.881861686706543
    7. '```' → logprob: -15.131861686706543
    8. '       ' → logprob: -15.569361686706543
    9. '[' → logprob: -16.31936264038086
    10. '(' → logprob: -16.69436264038086

Token 224: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6513364315032959
    2. ':
' → logprob: -0.7763364315032959
    3. '               ' → logprob: -4.026336669921875
    4. '           ' → logprob: -7.401336669921875
    5. ',' → logprob: -9.401336669921875
    6. ':

' → logprob: -11.526336669921875
    7. '):
' → logprob: -11.901336669921875
    8. '       ' → logprob: -12.651336669921875
    9. '              ' → logprob: -13.401336669921875
    10. '```' → logprob: -13.776336669921875

Token 225: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007914170622825623
    2. '0' → logprob: -5.507914066314697
    3. ' dx' → logprob: -6.132914066314697
    4. ',' → logprob: -7.257914066314697
    5. 'dx' → logprob: -7.757914066314697
    6. '           ' → logprob: -9.257914543151855
    7. ' ' → logprob: -9.257914543151855
    8. '              ' → logprob: -10.132914543151855
    9. '1' → logprob: -10.257914543151855
    10. '                ' → logprob: -10.257914543151855

Token 226: ' dx' (ID: 29472)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35637250542640686
    2. 'dx' (adapté à ' dx') → logprob: -1.4813724756240845
    3. 'k' → logprob: -2.731372594833374
    4. ' dx' → logprob: -5.606372356414795
    5. ' ' → logprob: -6.356372356414795
    6. '0' → logprob: -7.106372356414795
    7. 'kx' → logprob: -7.481372356414795
    8. ' k' → logprob: -7.731372356414795
    9. '           ' → logprob: -9.856372833251953
    10. '   ' → logprob: -11.481372833251953

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005775776808150113
    2. ' ,' → logprob: -7.500577449798584
    3. '=' → logprob: -11.250577926635742
    4. '               ' → logprob: -12.375577926635742
    5. '0' → logprob: -13.000577926635742
    6. '           ' → logprob: -13.125577926635742
    7. '```' → logprob: -13.750577926635742
    8. ',
' → logprob: -14.125577926635742
    9. '`,' → logprob: -15.375577926635742
    10. ' =' → logprob: -15.500577926635742

Token 228: ' dy' (ID: 11996)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016256680246442556
    2. ' ' → logprob: -6.5016255378723145
    3. '1' → logprob: -9.001626014709473
    4. '```' → logprob: -16.626625061035156
    5. '   ' → logprob: -17.126625061035156
    6. '<|end|>' → logprob: -17.626625061035156
    7. '+' → logprob: -18.501625061035156
    8. '  ' → logprob: -18.501625061035156
    9. 'dx' → logprob: -18.751625061035156
    10. ',' → logprob: -19.001625061035156

Token 229: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1742871254682541
    2. '=' → logprob: -1.9242870807647705
    3. ' =' → logprob: -4.79928731918335
    4. ' ,' → logprob: -5.17428731918335
    5. '               ' → logprob: -10.424286842346191
    6. '0' → logprob: -11.424286842346191
    7. '```' → logprob: -11.674286842346191
    8. '           ' → logprob: -12.049286842346191
    9. ' ' → logprob: -12.299286842346191
    10. '`,' → logprob: -13.549286842346191

Token 230: ' ' (ID: 220)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10355626791715622
    2. ' k' → logprob: -2.3535561561584473
    3. '1' → logprob: -6.228556156158447
    4. '0' → logprob: -6.728556156158447
    5. ' ' → logprob: -8.728556632995605
    6. '   ' → logprob: -12.666056632995605
    7. '```' → logprob: -13.166056632995605
    8. '(k' → logprob: -13.541056632995605
    9. 'kx' → logprob: -13.791056632995605
    10. 'n' → logprob: -13.791056632995605

Token 231: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0038737081922590733
    2. '1' → logprob: -6.253873825073242
    3. ' k' → logprob: -6.878873825073242
    4. '0' → logprob: -7.003873825073242
    5. ' ' → logprob: -12.378873825073242
    6. '```' → logprob: -15.378873825073242
    7. 'kx' → logprob: -15.503873825073242
    8. 'n' → logprob: -15.753873825073242
    9. '(k' → logprob: -16.003873825073242
    10. '   ' → logprob: -16.316373825073242

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011749001714633778
    2. '0' → logprob: -9.500117301940918
    3. ' ,' → logprob: -10.125117301940918
    4. ',
' → logprob: -13.375117301940918
    5. '```' → logprob: -15.000117301940918
    6. '           ' → logprob: -15.750117301940918
    7. '<|end|>' → logprob: -15.750117301940918
    8. ' ' → logprob: -15.750117301940918
    9. '`,' → logprob: -16.625118255615234
    10. '               ' → logprob: -16.750118255615234

Token 233: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004882152716163546
    2. ' ' → logprob: -7.62548828125
    3. '<|end|>' → logprob: -15.62548828125
    4. '   ' → logprob: -17.62548828125
    5. '۰' → logprob: -18.81298828125
    6. '  ' → logprob: -18.93798828125
    7. '```' → logprob: -19.25048828125
    8. '00' → logprob: -20.31298828125
    9. '    ' → logprob: -20.37548828125
    10. ' ' → logprob: -20.56298828125

Token 234: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '<|end|>' → logprob: -16.750003814697266
    4. '۰' → logprob: -19.000003814697266
    5. '```' → logprob: -20.562503814697266
    6. '   ' → logprob: -20.750003814697266
    7. '00' → logprob: -20.937503814697266
    8. '1' → logprob: -21.562503814697266
    9. 's' → logprob: -21.625003814697266
    10. '০' → logprob: -21.687503814697266

Token 235: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009498104336671531
    2. 'elif' → logprob: -7.000949859619141
    3. ' elif' → logprob: -11.25094985961914
    4. 'else' → logprob: -11.62594985961914
    5. '            
' → logprob: -12.25094985961914
    6. '       ' → logprob: -12.37594985961914
    7. '
' → logprob: -13.25094985961914
    8. ',' → logprob: -13.50094985961914
    9. '```' → logprob: -14.12594985961914
    10. '<|end|>' → logprob: -14.62594985961914

Token 236: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016312357038259506
    2. '            
' → logprob: -5.016312122344971
    3. '
' → logprob: -5.516312122344971
    4. 'elif' → logprob: -5.641312122344971
    5. '<|end|>' → logprob: -7.141312122344971
    6. '       ' → logprob: -8.141312599182129
    7. ' elif' → logprob: -8.141312599182129
    8. '               ' → logprob: -9.641312599182129
    9. '```' → logprob: -9.641312599182129
    10. ')' → logprob: -9.766312599182129

Token 237: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.1229163259267807
    2. '           ' → logprob: -3.3729162216186523
    3. ' elif' → logprob: -3.4979162216186523
    4. 'else' → logprob: -3.6229162216186523
    5. 'nx' → logprob: -5.497916221618652
    6. 'new' → logprob: -5.997916221618652
    7. ' else' → logprob: -5.997916221618652
    8. 'if' → logprob: -6.122916221618652
    9. 'for' → logprob: -6.122916221618652
    10. ' nx' → logprob: -6.122916221618652

Token 238: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.6932672262191772
    2. 'direction' → logprob: -0.6932672262191772
    3. '2' → logprob: -9.318266868591309
    4. '           ' → logprob: -11.193266868591309
    5. '(direction' → logprob: -11.818266868591309
    6. ' ' → logprob: -13.068266868591309
    7. '   ' → logprob: -13.568266868591309
    8. '               ' → logprob: -13.818266868591309
    9. '方向' → logprob: -13.943266868591309
    10. '_direction' → logprob: -14.193266868591309

Token 239: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6721306443214417
    2. '==' → logprob: -1.2971305847167969
    3. '2' → logprob: -1.7971305847167969
    4. ' ' → logprob: -3.047130584716797
    5. 'direction' → logprob: -6.172130584716797
    6. ' direction' → logprob: -8.297130584716797
    7. 'elif' → logprob: -9.172130584716797
    8. '           ' → logprob: -9.297130584716797
    9. '=' → logprob: -9.922130584716797
    10. '```' → logprob: -10.672130584716797

Token 240: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006717743817716837
    2. ' ' → logprob: -5.006717681884766
    3. '   ' → logprob: -13.506717681884766
    4. '  ' → logprob: -15.506717681884766
    5. '۲' → logprob: -15.569217681884766
    6. '       ' → logprob: -15.756717681884766
    7. '    ' → logprob: -16.506717681884766
    8. '```' → logprob: -16.881717681884766
    9. '           ' → logprob: -17.006717681884766
    10. '     ' → logprob: -17.194217681884766

Token 241: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.25001335144043
    3. '3' → logprob: -15.25001335144043
    4. '   ' → logprob: -16.25001335144043
    5. '```' → logprob: -17.06251335144043
    6. '0' → logprob: -17.37501335144043
    7. '  ' → logprob: -18.25001335144043
    8. '۲' → logprob: -18.37501335144043
    9. '
' → logprob: -18.87501335144043
    10. '２' → logprob: -19.12501335144043

Token 242: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7112383246421814
    2. ':
' → logprob: -0.9612383246421814
    3. ':' → logprob: -2.211238384246826
    4. '           ' → logprob: -4.461238384246826
    5. ',' → logprob: -5.336238384246826
    6. 'dx' → logprob: -8.086237907409668
    7. '```' → logprob: -9.461237907409668
    8. ':

' → logprob: -9.961237907409668
    9. ',
' → logprob: -10.711237907409668
    10. ' dx' → logprob: -10.836237907409668

Token 243: '               ' (ID: 506)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1943494826555252
    2. ' ' → logprob: -1.8193495273590088
    3. ' dx' → logprob: -4.69434928894043
    4. '           ' → logprob: -6.19434928894043
    5. 'dx' → logprob: -6.31934928894043
    6. '               ' → logprob: -6.56934928894043
    7. '   ' → logprob: -10.44434928894043
    8. ',' → logprob: -10.69434928894043
    9. '            ' → logprob: -11.44434928894043
    10. '```' → logprob: -11.69434928894043

Token 244: ' dx' (ID: 29472)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06993865221738815
    2. ' ' → logprob: -2.6949386596679688
    3. ' ' → logprob: -14.444938659667969
    4. 'dx' (adapté à ' dx') → logprob: -15.257438659667969
    5. ' dx' → logprob: -15.319938659667969
    6. '```' → logprob: -15.632438659667969
    7. '           ' → logprob: -15.694938659667969
    8. ',' → logprob: -15.882438659667969
    9. '   ' → logprob: -15.944938659667969
    10. '<|end|>' → logprob: -16.19493865966797

Token 245: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.957014556974173e-05
    2. ' ,' → logprob: -9.875069618225098
    3. '0' → logprob: -11.125069618225098
    4. '           ' → logprob: -13.375069618225098
    5. ' ' → logprob: -14.375069618225098
    6. ',
' → logprob: -15.500069618225098
    7. '=' → logprob: -15.750069618225098
    8. '<|end|>' → logprob: -15.750069618225098
    9. '```' → logprob: -15.875069618225098
    10. '               ' → logprob: -15.875069618225098

Token 246: ' dy' (ID: 11996)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005234594456851482
    2. ' ' → logprob: -5.255234718322754
    3. '```' → logprob: -16.005233764648438
    4. '   ' → logprob: -16.067733764648438
    5. '  ' → logprob: -16.255233764648438
    6. ' ' → logprob: -16.755233764648438
    7. '<|end|>' → logprob: -16.942733764648438
    8. '۰' → logprob: -17.005233764648438
    9. '    ' → logprob: -17.755233764648438
    10. '-' → logprob: -17.755233764648438

Token 247: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.245693176984787
    2. ',' → logprob: -1.6206932067871094
    3. '0' → logprob: -4.370693206787109
    4. ' =' → logprob: -4.995693206787109
    5. ' ,' → logprob: -7.745693206787109
    6. ' ' → logprob: -8.74569320678711
    7. '           ' → logprob: -10.24569320678711
    8. '               ' → logprob: -11.12069320678711
    9. '```' → logprob: -12.12069320678711
    10. '>' → logprob: -12.87069320678711

Token 248: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013270224444568157
    2. ' ' → logprob: -6.626327037811279
    3. '   ' → logprob: -14.501326560974121
    4. '(' → logprob: -15.626326560974121
    5. '  ' → logprob: -16.376327514648438
    6. '۰' → logprob: -16.563827514648438
    7. '00' → logprob: -16.688827514648438
    8. '```' → logprob: -17.063827514648438
    9. '000' → logprob: -17.251327514648438
    10. ' ' → logprob: -17.438827514648438

Token 249: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010962257510982454
    2. ' ' → logprob: -9.125109672546387
    3. '   ' → logprob: -15.125109672546387
    4. '۰' → logprob: -16.50010871887207
    5. '```' → logprob: -17.00010871887207
    6. '00' → logprob: -17.06260871887207
    7. '  ' → logprob: -17.25010871887207
    8. '000' → logprob: -17.75010871887207
    9. '=' → logprob: -17.87510871887207
    10. '０' → logprob: -18.18760871887207

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004310241900384426
    2. '-' → logprob: -6.004310131072998
    3. ',-' → logprob: -6.504310131072998
    4. '               ' → logprob: -9.004310607910156
    5. ' ,' → logprob: -9.254310607910156
    6. ' -' → logprob: -9.629310607910156
    7. '           ' → logprob: -11.254310607910156
    8. ',
' → logprob: -11.629310607910156
    9. ' ,-' → logprob: -12.004310607910156
    10. '-,' → logprob: -12.004310607910156

Token 251: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.0126840758603066e-05
    2. ' -' → logprob: -10.125040054321289
    3. '```' → logprob: -19.25004005432129
    4. '(-' → logprob: -19.87504005432129
    5. '−' → logprob: -20.25004005432129
    6. '   ' → logprob: -20.50004005432129
    7. '-m' → logprob: -20.62504005432129
    8. '–' → logprob: -20.75004005432129
    9. '-t' → logprob: -21.12504005432129
    10. '-f' → logprob: -21.12504005432129

Token 252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. 'k' → logprob: -18.875
    4. '   ' → logprob: -19.5
    5. '<|end|>' → logprob: -20.125
    6. '-' → logprob: -20.3125
    7. '```' → logprob: -20.375
    8. '           ' → logprob: -20.8125
    9. '       ' → logprob: -21.5
    10. '１' → logprob: -21.5

Token 253: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01312081515789032
    2. 'elif' → logprob: -4.388120651245117
    3. ' elif' → logprob: -7.638120651245117
    4. 'else' → logprob: -10.013120651245117
    5. 'dx' → logprob: -10.388120651245117
    6. '       ' → logprob: -11.263120651245117
    7. ' dx' → logprob: -11.763120651245117
    8. '		' → logprob: -12.013120651245117
    9. ',' → logprob: -12.013120651245117
    10. '	elif' → logprob: -12.638120651245117

Token 254: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08294013142585754
    2. 'elif' → logprob: -2.582940101623535
    3. ' elif' → logprob: -5.957940101623535
    4. 'else' → logprob: -6.832940101623535
    5. 'x' → logprob: -8.457940101623535
    6. ' x' → logprob: -9.832940101623535
    7. ' else' → logprob: -10.457940101623535
    8. '```' → logprob: -10.457940101623535
    9. '       ' → logprob: -10.832940101623535
    10. 'dx' → logprob: -11.832940101623535

Token 255: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.21868152916431427
    2. '           ' → logprob: -2.218681573867798
    3. ' elif' → logprob: -2.468681573867798
    4. 'else' (adapté à ' else') → logprob: -6.593681335449219
    5. 'dx' → logprob: -7.093681335449219
    6. '       ' → logprob: -8.468681335449219
    7. 'x' → logprob: -8.718681335449219
    8. ' else' → logprob: -9.093681335449219
    9. ' dx' → logprob: -9.218681335449219
    10. '	elif' → logprob: -9.343681335449219

Token 256: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.43866872787475586
    2. ':' → logprob: -1.0636687278747559
    3. '               ' → logprob: -4.938668727874756
    4. '           ' → logprob: -5.938668727874756
    5. ' :
' → logprob: -9.938669204711914
    6. ' :' → logprob: -11.188669204711914
    7. '          ' → logprob: -11.438669204711914
    8. '              ' → logprob: -11.938669204711914
    9. '                   ' → logprob: -12.188669204711914
    10. ':

' → logprob: -12.313669204711914

Token 257: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5538700819015503
    2. ' dx' → logprob: -0.9288700819015503
    3. 'dx' → logprob: -4.05387020111084
    4. '           ' → logprob: -4.42887020111084
    5. '   ' → logprob: -8.17887020111084
    6. '(dx' → logprob: -8.80387020111084
    7. ' ' → logprob: -8.92887020111084
    8. '            ' → logprob: -8.92887020111084
    9. '              ' → logprob: -9.30387020111084
    10. ' -' → logprob: -10.67887020111084

Token 258: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' (adapté à ' dx') → logprob: -0.13050329685211182
    2. ' dx' → logprob: -2.1305031776428223
    3. '-' → logprob: -5.880503177642822
    4. '-d' → logprob: -7.630503177642822
    5. ' -' → logprob: -8.63050365447998
    6. '           ' → logprob: -9.25550365447998
    7. '_dx' → logprob: -11.88050365447998
    8. '(-' → logprob: -13.25550365447998
    9. '(dx' → logprob: -13.50550365447998
    10. '.dx' → logprob: -13.50550365447998

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005647073267027736
    2. ' ,' → logprob: -7.8755645751953125
    3. '=' → logprob: -9.250564575195312
    4. '           ' → logprob: -10.000564575195312
    5. ',-' → logprob: -11.125564575195312
    6. '               ' → logprob: -11.500564575195312
    7. '<|end|>' → logprob: -12.125564575195312
    8. '-' → logprob: -13.250564575195312
    9. ',d' → logprob: -13.625564575195312
    10. '            ' → logprob: -13.625564575195312

Token 260: ' dy' (ID: 11996)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05185618996620178
    2. ' -' → logprob: -3.051856279373169
    3. '0' → logprob: -6.42685604095459
    4. 'dy' → logprob: -6.92685604095459
    5. ' dy' → logprob: -7.55185604095459
    6. '-d' → logprob: -9.80185604095459
    7. ' ' → logprob: -9.80185604095459
    8. '<|end|>' → logprob: -11.05185604095459
    9. '-=' → logprob: -12.67685604095459
    10. '=' → logprob: -13.67685604095459

Token 261: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03805079311132431
    2. ' =' → logprob: -3.288050889968872
    3. ',' → logprob: -11.913050651550293
    4. '=-' → logprob: -13.163050651550293
    5. ' ,' → logprob: -15.413050651550293
    6. '           ' → logprob: -16.16305160522461
    7. '=(-' → logprob: -16.41305160522461
    8. '```' → logprob: -16.78805160522461
    9. '=
' → logprob: -16.91305160522461
    10. ' ' → logprob: -17.03805160522461

Token 262: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0011711753904819489
    2. ' -' → logprob: -6.751171112060547
    3. '(-' → logprob: -13.876171112060547
    4. '   ' → logprob: -17.876171112060547
    5. '           ' → logprob: -18.126171112060547
    6. ' ' → logprob: -18.501171112060547
    7. '-p' → logprob: -19.126171112060547
    8. '−' → logprob: -19.251171112060547
    9. '-k' → logprob: -19.751171112060547
    10. '-w' → logprob: -19.876171112060547

Token 263: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -18.62502098083496
    4. '   ' → logprob: -19.62502098083496
    5. ',' → logprob: -20.00002098083496
    6. '<|end|>' → logprob: -20.12502098083496
    7. '0' → logprob: -20.50002098083496
    8. '           ' → logprob: -20.75002098083496
    9. '１' → logprob: -21.43752098083496
    10. '-' → logprob: -21.50002098083496

Token 264: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032390307751484215
    2. ' ,' → logprob: -8.125324249267578
    3. '0' → logprob: -10.750324249267578
    4. ',
' → logprob: -12.875324249267578
    5. ' ' → logprob: -13.000324249267578
    6. '```' → logprob: -14.000324249267578
    7. '<|end|>' → logprob: -15.250324249267578
    8. '           ' → logprob: -16.000324249267578
    9. '`,' → logprob: -16.500324249267578
    10. '1' → logprob: -16.625324249267578

Token 265: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0380416102707386
    2. ' ' → logprob: -3.288041591644287
    3. '   ' → logprob: -16.288042068481445
    4. ' ' → logprob: -16.788042068481445
    5. '<|end|>' → logprob: -17.725542068481445
    6. '  ' → logprob: -18.163042068481445
    7. '۰' → logprob: -18.225542068481445
    8. '           ' → logprob: -19.225542068481445
    9. '    ' → logprob: -19.350542068481445
    10. '```' → logprob: -19.350542068481445

Token 266: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -19.62509536743164
    4. '۰' → logprob: -20.12509536743164
    5. '00' → logprob: -21.25009536743164
    6. '  ' → logprob: -21.31259536743164
    7. ' ' → logprob: -21.81259536743164
    8. '<|end|>' → logprob: -21.93759536743164
    9. '    ' → logprob: -22.18759536743164
    10. '
' → logprob: -22.62509536743164

Token 267: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024924658238887787
    2. '
' → logprob: -3.7749247550964355
    3. '            
' → logprob: -6.8999247550964355
    4. ' for' → logprob: -7.8999247550964355
    5. '       ' → logprob: -9.399924278259277
    6. '    
' → logprob: -10.149924278259277
    7. 'n' → logprob: -10.399924278259277
    8. '  
' → logprob: -10.524924278259277
    9. '        
' → logprob: -10.899924278259277
    10. ' x' → logprob: -11.274924278259277

Token 268: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05515476316213608
    2. '
' → logprob: -3.305154800415039
    3. ' for' → logprob: -4.680154800415039
    4. '            
' → logprob: -5.680154800415039
    5. 'x' → logprob: -6.055154800415039
    6. ' x' → logprob: -6.555154800415039
    7. 'for' → logprob: -8.680154800415039
    8. '  
' → logprob: -9.555154800415039
    9. '<|end|>' → logprob: -9.805154800415039
    10. ' 
' → logprob: -9.805154800415039

Token 269: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21434365212917328
    2. ' for' → logprob: -2.214343547821045
    3. 'nx' → logprob: -3.589343547821045
    4. 'new' → logprob: -3.714343547821045
    5. '           ' → logprob: -3.964343547821045
    6. ' nx' → logprob: -5.214343547821045
    7. ' new' → logprob: -5.964343547821045
    8. 'x' → logprob: -6.464343547821045
    9. '   ' → logprob: -6.714343547821045
    10. '#' → logprob: -7.339343547821045

Token 270: ' cmd' (ID: 11704)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8517865538597107
    2. ' ' → logprob: -1.2267866134643555
    3. 'x' → logprob: -2.2267866134643555
    4. '1' → logprob: -2.3517866134643555
    5. ' x' → logprob: -3.3517866134643555
    6. ' not' → logprob: -3.7267866134643555
    7. ' (' → logprob: -5.2267866134643555
    8. '(x' → logprob: -5.3517866134643555
    9. 'not' → logprob: -5.8517866134643555
    10. 'k' → logprob: -6.2267866134643555

Token 271: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.024132482707500458
    2. '==' → logprob: -3.774132490158081
    3. '=='' → logprob: -7.274132251739502
    4. '=' → logprob: -9.64913272857666
    5. ''' → logprob: -10.02413272857666
    6. ' '' → logprob: -10.77413272857666
    7. 's' → logprob: -11.27413272857666
    8. ' =' → logprob: -11.52413272857666
    9. ' ' → logprob: -11.77413272857666
    10. ' =='' → logprob: -11.89913272857666

Token 272: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.641017735004425
    2. ''M' → logprob: -0.766017735004425
    3. ' '' → logprob: -5.016017913818359
    4. '"' → logprob: -7.516017913818359
    5. '"M' → logprob: -7.891017913818359
    6. ' ' → logprob: -8.14101791381836
    7. 'MOVE' → logprob: -9.14101791381836
    8. ''S' → logprob: -9.39101791381836
    9. ''T' → logprob: -9.51601791381836
    10. ''m' → logprob: -10.01601791381836

Token 273: 'FOR' (ID: 45276)
  Prédit: 'FOR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FOR' → logprob: -0.17000873386859894
    2. 'MOVE' → logprob: -2.045008659362793
    3. 'GO' → logprob: -4.295008659362793
    4. 'F' → logprob: -4.545008659362793
    5. 'MOV' → logprob: -7.295008659362793
    6. 'W' → logprob: -7.295008659362793
    7. 'M' → logprob: -7.670008659362793
    8. 'FD' → logprob: -8.170008659362793
    9. 'Forward' → logprob: -8.795008659362793
    10. 'BACK' → logprob: -9.545008659362793

Token 274: 'WARD' (ID: 61722)
  Prédit: 'WARD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WARD' → logprob: -8.721228368813172e-05
    2. 'W' → logprob: -9.500086784362793
    3. 'WORD' → logprob: -12.250086784362793
    4. 'ward' → logprob: -12.500086784362793
    5. 'WAR' → logprob: -13.250086784362793
    6. '```' → logprob: -14.500086784362793
    7. 'WA' → logprob: -15.125086784362793
    8. 'WD' → logprob: -15.375086784362793
    9. 'WARE' → logprob: -15.625086784362793
    10. 'MOVE' → logprob: -16.12508773803711

Token 275: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.6952263712882996
    2. '':
' → logprob: -0.6952263712882996
    3. ''' → logprob: -6.695226192474365
    4. ''):
' → logprob: -7.695226192474365
    5. '':
' → logprob: -8.820226669311523
    6. ' '' → logprob: -9.570226669311523
    7. '':

' → logprob: -9.945226669311523
    8. ''):' → logprob: -10.070226669311523
    9. '):
' → logprob: -10.820226669311523
    10. '__':
' → logprob: -11.570226669311523

Token 276: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2565205097198486
    2. '           ' → logprob: -1.6315205097198486
    3. ':
' → logprob: -1.7565205097198486
    4. '               ' → logprob: -1.8815205097198486
    5. ' x' → logprob: -2.0065205097198486
    6. 'x' → logprob: -4.2565202713012695
    7. ' for' → logprob: -4.2565202713012695
    8. '<|end|>' → logprob: -4.6315202713012695
    9. ' and' → logprob: -5.8815202713012695
    10. '
' → logprob: -5.8815202713012695

Token 277: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1259891986846924
    2. 'x' → logprob: -1.2509891986846924
    3. ' x' → logprob: -1.5009891986846924
    4. 'for' (adapté à ' for') → logprob: -2.0009891986846924
    5. ' nx' → logprob: -4.625988960266113
    6. ' new' → logprob: -4.750988960266113
    7. 'nx' → logprob: -4.750988960266113
    8. 'new' → logprob: -5.875988960266113
    9. '
' → logprob: -7.500988960266113
    10. '               ' → logprob: -8.625988960266113

Token 278: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.05809112265706062
    2. '_' → logprob: -3.058091163635254
    3. ' i' → logprob: -4.808091163635254
    4. 'i' → logprob: -7.058091163635254
    5. '_i' → logprob: -8.058091163635254
    6. '_step' → logprob: -9.183091163635254
    7. ' step' → logprob: -11.683091163635254
    8. 'step' → logprob: -12.683091163635254
    9. ' ' → logprob: -13.933091163635254
    10. '	i' → logprob: -14.433091163635254

Token 279: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0004141072859056294
    2. 'in' → logprob: -8.00041389465332
    3. ' ' → logprob: -9.50041389465332
    4. 'range' → logprob: -13.62541389465332
    5. ' _' → logprob: -14.12541389465332
    6. '_' → logprob: -14.25041389465332
    7. 's' → logprob: -14.62541389465332
    8. ' i' → logprob: -16.12541389465332
    9. ' range' → logprob: -16.12541389465332
    10. 'i' → logprob: -16.50041389465332

Token 280: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048587486147880554
    2. ' range' → logprob: -3.0485875606536865
    3. '	range' → logprob: -16.673587799072266
    4. '(range' → logprob: -16.798587799072266
    5. ' ' → logprob: -17.798587799072266
    6. '_range' → logprob: -18.298587799072266
    7. 'rang' → logprob: -18.548587799072266
    8. '  ' → logprob: -19.548587799072266
    9. '.range' → logprob: -19.798587799072266
    10. ' xrange' → logprob: -19.798587799072266

Token 281: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.0564331205387134e-05
    2. 'k' → logprob: -11.50001049041748
    3. '(' → logprob: -15.12501049041748
    4. ' k' → logprob: -15.75001049041748
    5. '{k' → logprob: -20.125011444091797
    6. ' (' → logprob: -20.250011444091797
    7. '	k' → logprob: -20.625011444091797
    8. '           ' → logprob: -21.875011444091797
    9. ',k' → logprob: -21.875011444091797
    10. '(n' → logprob: -23.500011444091797

Token 282: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.523292064666748
    2. '):
' → logprob: -0.898292064666748
    3. ' ):' → logprob: -9.648292541503906
    4. ' ):
' → logprob: -9.773292541503906
    5. '):
' → logprob: -11.148292541503906
    6. ':' → logprob: -11.398292541503906
    7. '<|end|>' → logprob: -12.523292541503906
    8. '):

' → logprob: -12.648292541503906
    9. '   ' → logprob: -12.648292541503906
    10. ')' → logprob: -12.648292541503906

Token 283: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012784389778971672
    2. '               ' → logprob: -5.137784481048584
    3. '<|end|>' → logprob: -5.637784481048584
    4. '           ' → logprob: -7.387784481048584
    5. '                    ' → logprob: -8.012784004211426
    6. '   ' → logprob: -8.262784004211426
    7. '<|end|>' → logprob: -8.387784004211426
    8. '                       ' → logprob: -8.512784004211426
    9. ' x' → logprob: -8.637784004211426
    10. '                    
' → logprob: -8.637784004211426

Token 284: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.8643704056739807
    2. 'nx' (adapté à ' nx') → logprob: -0.9893704056739807
    3. ' new' → logprob: -2.114370346069336
    4. ' if' → logprob: -2.739370346069336
    5. 'new' → logprob: -4.739370346069336
    6. '                       ' → logprob: -5.364370346069336
    7. 'x' → logprob: -5.739370346069336
    8. 'if' → logprob: -6.114370346069336
    9. '   ' → logprob: -7.114370346069336
    10. '                   ' → logprob: -7.989370346069336

Token 285: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32145026326179504
    2. '=' → logprob: -1.3214502334594727
    3. ',' → logprob: -4.821450233459473
    4. '=x' → logprob: -9.321450233459473
    5. 'x' → logprob: -12.071450233459473
    6. '<|end|>' → logprob: -13.571450233459473
    7. ',x' → logprob: -14.321450233459473
    8. '```' → logprob: -14.321450233459473
    9. ' x' → logprob: -14.821450233459473
    10. ')' → logprob: -15.196450233459473

Token 286: ' ny' (ID: 4423)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.530896782875061
    2. 'x' → logprob: -1.155896782875061
    3. '<|end|>' → logprob: -2.5308966636657715
    4. 'ny' → logprob: -5.2808966636657715
    5. '=' → logprob: -5.6558966636657715
    6. ' x' → logprob: -6.2808966636657715
    7. 'n' → logprob: -6.2808966636657715
    8. ' y' → logprob: -6.4058966636657715
    9. ' =' → logprob: -6.4058966636657715
    10. ' ' → logprob: -7.4058966636657715

Token 287: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142999291419983
    2. ' =' → logprob: -1.7014299631118774
    3. '=x' → logprob: -11.326430320739746
    4. 'x' → logprob: -13.576430320739746
    5. ',' → logprob: -14.201430320739746
    6. '<|end|>' → logprob: -14.201430320739746
    7. '=k' → logprob: -14.701430320739746
    8. ')' → logprob: -14.951430320739746
    9. ' ' → logprob: -15.201430320739746
    10. '=s' → logprob: -16.20142936706543

Token 288: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6931484937667847
    2. ' x' → logprob: -0.6931484937667847
    3. '(x' → logprob: -14.568148612976074
    4. '	x' → logprob: -14.693148612976074
    5. ' ' → logprob: -15.443148612976074
    6. '   ' → logprob: -16.443147659301758
    7. ')x' → logprob: -17.068147659301758
    8. '    ' → logprob: -17.068147659301758
    9. '<|end|>' → logprob: -17.193147659301758
    10. '>x' → logprob: -17.318147659301758

Token 289: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740789234638214
    2. '+' → logprob: -0.974078893661499
    3. '<|end|>' → logprob: -14.224079132080078
    4. ' +
' → logprob: -14.849079132080078
    5. '+x' → logprob: -15.224079132080078
    6. ',' → logprob: -15.349079132080078
    7. '＋' → logprob: -15.974079132080078
    8. ' plus' → logprob: -16.599079132080078
    9. '+
' → logprob: -16.599079132080078
    10. '+k' → logprob: -16.724079132080078

Token 290: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.001929228543303907
    2. ' dx' → logprob: -6.25192928314209
    3. '(dx' → logprob: -15.12692928314209
    4. '_dx' → logprob: -15.50192928314209
    5. '0' → logprob: -16.251928329467773
    6. '.dx' → logprob: -17.376928329467773
    7. '   ' → logprob: -17.501928329467773
    8. 'd' → logprob: -18.126928329467773
    9. '
' → logprob: -18.251928329467773
    10. 'Dx' → logprob: -18.251928329467773

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3915141355246305e-05
    2. ' ,' → logprob: -10.75002384185791
    3. ',y' → logprob: -13.87502384185791
    4. '‌,' → logprob: -14.75002384185791
    5. '_,' → logprob: -15.00002384185791
    6. ',n' → logprob: -15.00002384185791
    7. '                   ' → logprob: -15.75002384185791
    8. ',
' → logprob: -16.500024795532227
    9. ',k' → logprob: -16.625024795532227
    10. '*,' → logprob: -17.000024795532227

Token 292: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2519322335720062
    2. 'y' → logprob: -1.5019322633743286
    3. '                   ' → logprob: -14.126932144165039
    4. '<|end|>' → logprob: -14.126932144165039
    5. '   ' → logprob: -14.501932144165039
    6. '	y' → logprob: -14.626932144165039
    7. ' ' → logprob: -15.501932144165039
    8. '    ' → logprob: -16.00193214416504
    9. '                       ' → logprob: -16.62693214416504
    10. '(y' → logprob: -17.25193214416504

Token 293: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06841875612735748
    2. '+' → logprob: -2.8184187412261963
    3. '<|end|>' → logprob: -5.068418979644775
    4. '+y' → logprob: -8.943418502807617
    5. '<|end|>' → logprob: -13.443418502807617
    6. '+x' → logprob: -13.568418502807617
    7. '+k' → logprob: -14.818418502807617
    8. ' +
' → logprob: -14.818418502807617
    9. ')' → logprob: -14.818418502807617
    10. '```' → logprob: -14.943418502807617

Token 294: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.014193711802363396
    2. ' dy' → logprob: -4.264193534851074
    3. '1' → logprob: -10.514193534851074
    4. 'y' → logprob: -13.389193534851074
    5. '.dy' → logprob: -14.139193534851074
    6. 'Dy' → logprob: -15.139193534851074
    7. 'd' → logprob: -15.264193534851074
    8. ' ' → logprob: -16.51419448852539
    9. '0' → logprob: -17.13919448852539
    10. 'k' → logprob: -17.26419448852539

Token 295: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49316176772117615
    2. '                   ' → logprob: -0.9931617975234985
    3. '<|end|>' → logprob: -4.243161678314209
    4. '           ' → logprob: -6.118161678314209
    5. '               ' → logprob: -6.993161678314209
    6. '                    
' → logprob: -7.618161678314209
    7. '       ' → logprob: -8.118162155151367
    8. '
' → logprob: -8.993162155151367
    9. '  
' → logprob: -9.368162155151367
    10. '<|end|>' → logprob: -9.493162155151367

Token 296: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12619830667972565
    2. '
' → logprob: -2.8761982917785645
    3. '<|end|>' → logprob: -2.8761982917785645
    4. '           ' → logprob: -6.5011982917785645
    5. '                    
' → logprob: -6.7511982917785645
    6. '```' → logprob: -6.8761982917785645
    7. '<|end|>' → logprob: -7.5011982917785645
    8. '               ' → logprob: -7.7511982917785645
    9. '  
' → logprob: -8.251198768615723
    10. '       ' → logprob: -8.376198768615723

Token 297: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4218534827232361
    2. '                   ' → logprob: -1.2968535423278809
    3. 'if' (adapté à ' if') → logprob: -2.671853542327881
    4. '   ' → logprob: -7.421853542327881
    5. '           ' → logprob: -8.046853065490723
    6. ' ' → logprob: -8.421853065490723
    7. '       ' → logprob: -8.421853065490723
    8. '                    ' → logprob: -9.421853065490723
    9. '    ' → logprob: -9.796853065490723
    10. '               ' → logprob: -9.921853065490723

Token 298: ' nx' (ID: 50118)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7834104299545288
    2. ' ' → logprob: -1.1584104299545288
    3. ' nx' → logprob: -2.0334105491638184
    4. 'nx' → logprob: -2.4084105491638184
    5. ' not' → logprob: -4.908410549163818
    6. '(nx' → logprob: -7.533410549163818
    7. '0' → logprob: -8.78341007232666
    8. 'not' → logprob: -8.78341007232666
    9. '   ' → logprob: -10.65841007232666
    10. 'x' → logprob: -11.34591007232666

Token 299: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.22628580033779144
    2. '<' → logprob: -1.6012858152389526
    3. ' <=' → logprob: -7.851285934448242
    4. ' >' → logprob: -8.851285934448242
    5. '<|end|>' → logprob: -9.101285934448242
    6. '<=' → logprob: -9.726285934448242
    7. ' >=' → logprob: -9.976285934448242
    8. '0' → logprob: -10.226285934448242
    9. '>' → logprob: -10.476285934448242
    10. '>=' → logprob: -11.101285934448242

Token 300: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00032879042555578053
    2. ' ' → logprob: -8.12532901763916
    3. '=' → logprob: -10.75032901763916
    4. '   ' → logprob: -12.12532901763916
    5. '0' → logprob: -12.25032901763916
    6. '                   ' → logprob: -15.62532901763916
    7. '```' → logprob: -15.62532901763916
    8. '       ' → logprob: -15.87532901763916
    9. '           ' → logprob: -16.000328063964844
    10. '>' → logprob: -16.125328063964844

Token 301: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5928495486150496e-05
    2. ' ' → logprob: -11.875016212463379
    3. '0' → logprob: -12.000016212463379
    4. '=' → logprob: -13.500016212463379
    5. '   ' → logprob: -13.750016212463379
    6. 'x' → logprob: -16.250015258789062
    7. '           ' → logprob: -16.375015258789062
    8. '       ' → logprob: -16.625015258789062
    9. '```' → logprob: -17.000015258789062
    10. '>' → logprob: -17.875015258789062

Token 302: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.10029228776693344
    2. 'or' → logprob: -2.350292205810547
    3. '<|end|>' → logprob: -9.850292205810547
    4. '	or' → logprob: -10.350292205810547
    5. ' ' → logprob: -14.350292205810547
    6. '0' → logprob: -15.975292205810547
    7. '<|end|>' → logprob: -16.350292205810547
    8. ''or' → logprob: -16.850292205810547
    9. ' orun' → logprob: -17.225292205810547
    10. ' and' → logprob: -17.975292205810547

Token 303: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.49310731887817383
    2. ' nx' → logprob: -0.9931073188781738
    3. 'ny' → logprob: -4.368107318878174
    4. ' ny' → logprob: -5.118107318878174
    5. '(nx' → logprob: -9.493106842041016
    6. 'n' → logprob: -9.743106842041016
    7. '                   ' → logprob: -10.743106842041016
    8. '   ' → logprob: -12.493106842041016
    9. 'x' → logprob: -12.493106842041016
    10. '                       ' → logprob: -12.743106842041016

Token 304: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4740809500217438
    2. ' >' → logprob: -0.9740809202194214
    3. '>x' → logprob: -14.599081039428711
    4. '1' → logprob: -14.724081039428711
    5. ' >
' → logprob: -14.724081039428711
    6. '```' → logprob: -14.849081039428711
    7. '>
' → logprob: -15.224081039428711
    8. '<' → logprob: -15.224081039428711
    9. '<|end|>' → logprob: -15.224081039428711
    10. ' <' → logprob: -15.349081039428711

Token 305: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0008162968442775309
    2. ' m' → logprob: -7.125816345214844
    3. 'n' → logprob: -11.375816345214844
    4. '   ' → logprob: -15.375816345214844
    5. '	m' → logprob: -16.125816345214844
    6. ' n' → logprob: -16.750816345214844
    7. ' ' → logprob: -17.625816345214844
    8. '    ' → logprob: -17.750816345214844
    9. '```' → logprob: -18.375816345214844
    10. '  ' → logprob: -19.250816345214844

Token 306: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.011048054322600365
    2. 'or' → logprob: -4.511047840118408
    3. '	or' → logprob: -16.13604736328125
    4. ' ' → logprob: -16.38604736328125
    5. '                   ' → logprob: -17.01104736328125
    6. '           ' → logprob: -18.88604736328125
    7. '               ' → logprob: -19.13604736328125
    8. '```' → logprob: -19.26104736328125
    9. '   ' → logprob: -19.38604736328125
    10. '    ' → logprob: -19.51104736328125

Token 307: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.1002621054649353
    2. ' ny' → logprob: -2.35026216506958
    3. 'n' → logprob: -11.100261688232422
    4. '   ' → logprob: -11.100261688232422
    5. '                   ' → logprob: -12.350261688232422
    6. '           ' → logprob: -12.850261688232422
    7. '    ' → logprob: -12.975261688232422
    8. '  ' → logprob: -13.350261688232422
    9. 'nx' → logprob: -13.350261688232422
    10. '       ' → logprob: -13.475261688232422

Token 308: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.016613125801086426
    2. '<' → logprob: -4.141613006591797
    3. '<|end|>' → logprob: -7.641613006591797
    4. ' >' → logprob: -9.516613006591797
    5. '>' → logprob: -11.766613006591797
    6. ' ' → logprob: -11.891613006591797
    7. '1' → logprob: -12.391613006591797
    8. '<|end|>' → logprob: -13.516613006591797
    9. 'import' → logprob: -14.266613006591797
    10. ')' → logprob: -14.391613006591797

Token 309: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018852073117159307
    2. ' ' → logprob: -8.625188827514648
    3. '<|end|>' → logprob: -11.750188827514648
    4. '=' → logprob: -14.375188827514648
    5. '   ' → logprob: -15.625188827514648
    6. '0' → logprob: -16.50018882751465
    7. '<|end|>' → logprob: -17.00018882751465
    8. '...' → logprob: -17.56268882751465
    9. '>' → logprob: -17.75018882751465
    10. '.' → logprob: -17.75018882751465

Token 310: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.464347173576243e-05
    2. ' ' → logprob: -10.50003433227539
    3. '<|end|>' → logprob: -12.62503433227539
    4. '=' → logprob: -13.50003433227539
    5. '0' → logprob: -13.62503433227539
    6. 'n' → logprob: -14.25003433227539
    7. '   ' → logprob: -15.62503433227539
    8. '>' → logprob: -17.50003433227539
    9. 'm' → logprob: -17.50003433227539
    10. '.' → logprob: -18.06253433227539

Token 311: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.008617766201496124
    2. 'or' → logprob: -4.758617877960205
    3. '>' → logprob: -13.508617401123047
    4. ' ' → logprob: -14.008617401123047
    5. '	or' → logprob: -14.633617401123047
    6. '           ' → logprob: -15.633617401123047
    7. 'n' → logprob: -16.383617401123047
    8. ' >' → logprob: -16.383617401123047
    9. '                   ' → logprob: -16.508617401123047
    10. '               ' → logprob: -16.758617401123047

Token 312: ' ny' (ID: 4423)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006194456946104765
    2. ' n' → logprob: -5.131194591522217
    3. '<|end|>' → logprob: -8.256194114685059
    4. ' ' → logprob: -12.881194114685059
    5. ' or' → logprob: -13.381194114685059
    6. '<|end|>' → logprob: -14.631194114685059
    7. '...' → logprob: -14.756194114685059
    8. '	n' → logprob: -15.631194114685059
    9. '1' → logprob: -16.006195068359375
    10. '   ' → logprob: -16.131195068359375

Token 313: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.10040507465600967
    2. 'n' → logprob: -3.350404977798462
    3. ' >' → logprob: -3.350404977798462
    4. 'm' → logprob: -3.725404977798462
    5. ' n' → logprob: -6.850405216217041
    6. ' m' → logprob: -9.100404739379883
    7. '   ' → logprob: -10.100404739379883
    8. '           ' → logprob: -10.975404739379883
    9. ' ' → logprob: -11.225404739379883
    10. ' or' → logprob: -11.475404739379883

Token 314: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004903609515167773
    2. ' n' → logprob: -7.625490188598633
    3. '   ' → logprob: -14.250490188598633
    4. ' ' → logprob: -14.375490188598633
    5. 'm' → logprob: -14.500490188598633
    6. '1' → logprob: -16.250490188598633
    7. '<|end|>' → logprob: -16.375490188598633
    8. '0' → logprob: -16.625490188598633
    9. '	n' → logprob: -16.750490188598633
    10. '  ' → logprob: -16.875490188598633

Token 315: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03094143234193325
    2. ':' → logprob: -3.6559414863586426
    3. '                   ' → logprob: -6.280941486358643
    4. '                       ' → logprob: -6.530941486358643
    5. ' or' → logprob: -7.530941486358643
    6. '               ' → logprob: -7.780941486358643
    7. '           ' → logprob: -8.655941009521484
    8. '       ' → logprob: -9.155941009521484
    9. '                           ' → logprob: -10.905941009521484
    10. '   ' → logprob: -11.030941009521484

Token 316: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00715293362736702
    2. '                   ' → logprob: -5.757153034210205
    3. ' break' → logprob: -6.257153034210205
    4. 'break' → logprob: -6.382153034210205
    5. '       ' → logprob: -9.507152557373047
    6. '   ' → logprob: -9.757152557373047
    7. '               ' → logprob: -9.882152557373047
    8. '                           ' → logprob: -10.132152557373047
    9. ' ' → logprob: -10.507152557373047
    10. '	break' → logprob: -10.632152557373047

Token 317: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.15353702008724213
    2. ' break' → logprob: -2.2785370349884033
    3. '                   ' → logprob: -3.4035370349884033
    4. '                       ' → logprob: -5.153536796569824
    5. '               ' → logprob: -8.153536796569824
    6. '           ' → logprob: -8.903536796569824
    7. 'print' → logprob: -9.028536796569824
    8. '	break' → logprob: -9.153536796569824
    9. '                           ' → logprob: -9.403536796569824
    10. '   ' → logprob: -9.778536796569824

Token 318: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00184581708163023
    2. '           ' → logprob: -7.376845836639404
    3. '   ' → logprob: -7.626845836639404
    4. '               ' → logprob: -7.751845836639404
    5. 'else' → logprob: -8.751845359802246
    6. '
' → logprob: -9.876845359802246
    7. '       ' → logprob: -10.501845359802246
    8. ' else' → logprob: -10.751845359802246
    9. 'n' → logprob: -10.876845359802246
    10. 'x' → logprob: -12.126845359802246

Token 319: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0017809720011427999
    2. '           ' → logprob: -7.001780986785889
    3. 'else' → logprob: -8.25178050994873
    4. '   ' → logprob: -8.37678050994873
    5. '               ' → logprob: -8.87678050994873
    6. ' else' → logprob: -9.12678050994873
    7. '       ' → logprob: -10.00178050994873
    8. '
' → logprob: -10.12678050994873
    9. 'x' → logprob: -11.12678050994873
    10. 'n' → logprob: -11.50178050994873

Token 320: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.030140480026602745
    2. ' x' → logprob: -3.6551403999328613
    3. '                   ' → logprob: -6.030140399932861
    4. '               ' → logprob: -7.530140399932861
    5. 'else' → logprob: -7.530140399932861
    6. '   ' → logprob: -8.90514087677002
    7. ' else' → logprob: -9.15514087677002
    8. '           ' → logprob: -9.90514087677002
    9. '       ' → logprob: -10.03014087677002
    10. ' ' → logprob: -11.28014087677002

Token 321: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7318779230117798
    2. ' =' → logprob: -1.2318779230117798
    3. ',' → logprob: -1.4818779230117798
    4. ' +=' → logprob: -10.981878280639648
    5. '+=' → logprob: -12.106878280639648
    6. '<|end|>' → logprob: -12.231878280639648
    7. ' ,' → logprob: -12.481878280639648
    8. ',n' → logprob: -13.481878280639648
    9. ',y' → logprob: -13.731878280639648
    10. ' ' → logprob: -13.731878280639648

Token 322: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1269388198852539
    2. ' y' → logprob: -2.126938819885254
    3. 'ny' → logprob: -12.001938819885254
    4. ' ny' → logprob: -12.376938819885254
    5. '	y' → logprob: -15.501938819885254
    6. ' ' → logprob: -16.126937866210938
    7. '=' → logprob: -17.501937866210938
    8. '<|end|>' → logprob: -17.501937866210938
    9. '    ' → logprob: -17.751937866210938
    10. ',y' → logprob: -18.001937866210938

Token 323: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005234002135694027
    2. ' =' → logprob: -5.2552337646484375
    3. ',' → logprob: -16.630233764648438
    4. '=

' → logprob: -17.880233764648438
    5. '=}' → logprob: -18.130233764648438
    6. '＝' → logprob: -18.755233764648438
    7. '=
' → logprob: -18.880233764648438
    8. '.=' → logprob: -19.255233764648438
    9. '<|end|>' → logprob: -19.630233764648438
    10. ' ' → logprob: -19.755233764648438

Token 324: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.1602739840745926
    2. ' nx' → logprob: -1.9102740287780762
    3. '(nx' → logprob: -9.910273551940918
    4. 'n' → logprob: -16.285274505615234
    5. 'ny' → logprob: -17.285274505615234
    6. ' ' → logprob: -17.410274505615234
    7. '   ' → logprob: -17.785274505615234
    8. '    ' → logprob: -17.910274505615234
    9. 'x' → logprob: -17.910274505615234
    10. '
' → logprob: -18.160274505615234

Token 325: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008404768304899335
    2. ' ,' → logprob: -7.125840663909912
    3. ',y' → logprob: -10.875840187072754
    4. ',
' → logprob: -11.500840187072754
    5. ',n' → logprob: -12.000840187072754
    6. '<|end|>' → logprob: -14.875840187072754
    7. ',new' → logprob: -16.37584114074707
    8. '‌,' → logprob: -16.37584114074707
    9. '                   ' → logprob: -16.87584114074707
    10. ' ny' → logprob: -17.00084114074707

Token 326: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.2519298195838928
    2. ' ny' → logprob: -1.501929759979248
    3. 'nyi' → logprob: -15.626930236816406
    4. ' ' → logprob: -15.751930236816406
    5. 'nye' → logprob: -16.376930236816406
    6. ' ' → logprob: -16.376930236816406
    7. 'n' → logprob: -16.876930236816406
    8. ''ny' → logprob: -17.876930236816406
    9. '
' → logprob: -18.126930236816406
    10. 'iny' → logprob: -18.251930236816406

Token 327: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03858587518334389
    2. '<|end|>' → logprob: -3.538585901260376
    3. 'elif' → logprob: -5.288585662841797
    4. '       ' → logprob: -6.663585662841797
    5. ' elif' → logprob: -7.413585662841797
    6. '
' → logprob: -7.538585662841797
    7. '<|end|>' → logprob: -8.038585662841797
    8. '               ' → logprob: -8.038585662841797
    9. '\n' → logprob: -8.663585662841797
    10. 'else' → logprob: -9.413585662841797

Token 328: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008179894648492336
    2. 'elif' → logprob: -5.508179664611816
    3. '       ' → logprob: -5.633179664611816
    4. ' elif' → logprob: -8.008179664611816
    5. '	       ' → logprob: -10.258179664611816
    6. '	   ' → logprob: -10.258179664611816
    7. 'else' → logprob: -10.508179664611816
    8. '   ' → logprob: -10.633179664611816
    9. '	elif' → logprob: -11.133179664611816
    10. '<|end|>' → logprob: -11.133179664611816

Token 329: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.3289642035961151
    2. ' elif' → logprob: -1.8289642333984375
    3. '       ' → logprob: -2.4539642333984375
    4. '           ' → logprob: -3.5789642333984375
    5. 'else' → logprob: -5.4539642333984375
    6. ' else' → logprob: -7.0789642333984375
    7. 'if' → logprob: -7.9539642333984375
    8. ' if' → logprob: -8.828964233398438
    9. '   ' → logprob: -9.578964233398438
    10. '        ' → logprob: -9.828964233398438

Token 330: ' cmd' (ID: 11704)
  Prédit: ' cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cmd' → logprob: -0.003602917306125164
    2. 'cmd' → logprob: -5.628602981567383
    3. '(cmd' → logprob: -13.753602981567383
    4. '	cmd' → logprob: -13.878602981567383
    5. ' cmds' → logprob: -14.503602981567383
    6. ' ' → logprob: -15.878602981567383
    7. ' code' → logprob: -16.753602981567383
    8. '.cmd' → logprob: -17.128602981567383
    9. ' command' → logprob: -17.253602981567383
    10. ' btn' → logprob: -18.128602981567383

Token 331: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014194650575518608
    2. '==' → logprob: -4.264194488525391
    3. ' ' → logprob: -11.38919448852539
    4. '=' → logprob: -12.38919448852539
    5. '=='' → logprob: -12.38919448852539
    6. ' =' → logprob: -12.51419448852539
    7. ' =='' → logprob: -13.01419448852539
    8. '[' → logprob: -14.01419448852539
    9. '<|end|>' → logprob: -14.38919448852539
    10. ' =="' → logprob: -14.38919448852539

Token 332: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.17981025576591492
    2. ' '' → logprob: -1.8048102855682373
    3. '"' → logprob: -10.554810523986816
    4. ' ' → logprob: -11.179810523986816
    5. ''S' → logprob: -11.429810523986816
    6. ' "' → logprob: -12.304810523986816
    7. ''M' → logprob: -12.429810523986816
    8. '('' → logprob: -13.929810523986816
    9. '	' → logprob: -13.929810523986816
    10. '   ' → logprob: -14.054810523986816

Token 333: 'BACK' (ID: 33625)
  Prédit: 'BACK'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BACK' → logprob: -9.610702363715973e-06
    2. ' BACK' → logprob: -11.750009536743164
    3. '_BACK' → logprob: -14.250009536743164
    4. 'B' → logprob: -15.750009536743164
    5. 'back' → logprob: -15.750009536743164
    6. 'Back' → logprob: -16.125009536743164
    7. 'LEFT' → logprob: -16.375009536743164
    8. 'TURN' → logprob: -16.375009536743164
    9. 'Backward' → logprob: -16.500009536743164
    10. 'BACKGROUND' → logprob: -16.625009536743164

Token 334: 'WARD' (ID: 61722)
  Prédit: 'WARD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WARD' → logprob: -0.005016597919166088
    2. 'W' → logprob: -5.880016803741455
    3. 'ward' → logprob: -6.255016803741455
    4. ''' → logprob: -8.630016326904297
    5. '')' → logprob: -9.880016326904297
    6. 'WAR' → logprob: -10.505016326904297
    7. '']' → logprob: -12.255016326904297
    8. 'WA' → logprob: -12.505016326904297
    9. 'WORD' → logprob: -12.505016326904297
    10. 'Ward' → logprob: -12.755016326904297

Token 335: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.0168860275298357
    2. '':' → logprob: -4.391886234283447
    3. ':
' → logprob: -6.266886234283447
    4. ''' → logprob: -7.141886234283447
    5. ' '' → logprob: -7.391886234283447
    6. ':' → logprob: -7.891886234283447
    7. '               ' → logprob: -8.016885757446289
    8. '           ' → logprob: -8.641885757446289
    9. ''):
' → logprob: -9.766885757446289
    10. '       ' → logprob: -10.141885757446289

Token 336: '               ' (ID: 506)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11721283197402954
    2. '               ' → logprob: -2.3672127723693848
    3. 'for' → logprob: -4.617212772369385
    4. '           ' → logprob: -4.992212772369385
    5. ' ' → logprob: -9.492213249206543
    6. '            ' → logprob: -10.117213249206543
    7. '	for' → logprob: -10.992213249206543
    8. '   ' → logprob: -10.992213249206543
    9. '       ' → logprob: -12.117213249206543
    10. '                ' → logprob: -12.367213249206543

Token 337: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.43036332726478577
    2. 'for' (adapté à ' for') → logprob: -1.0553632974624634
    3. ' dx' → logprob: -7.180363178253174
    4. '           ' → logprob: -7.555363178253174
    5. 'dx' → logprob: -8.055363655090332
    6. '               ' → logprob: -10.555363655090332
    7. ' ' → logprob: -11.305363655090332
    8. '	for' → logprob: -12.555363655090332
    9. '   ' → logprob: -12.805363655090332
    10. '            ' → logprob: -13.055363655090332

Token 338: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1269298940896988
    2. ' _' → logprob: -2.126929998397827
    3. ' ' → logprob: -13.251930236816406
    4. ' i' → logprob: -18.376930236816406
    5. '_i' → logprob: -18.501930236816406
    6. '_in' → logprob: -18.751930236816406
    7. ' k' → logprob: -18.751930236816406
    8. ' _
' → logprob: -18.751930236816406
    9. '_=' → logprob: -18.876930236816406
    10. 'k' → logprob: -19.126930236816406

Token 339: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9168622493743896
    2. 'range' → logprob: -0.9168622493743896
    3. ' range' → logprob: -1.6668622493743896
    4. ' _' → logprob: -4.666862487792969
    5. ' in' → logprob: -6.166862487792969
    6. '_range' → logprob: -9.416862487792969
    7. 'in' → logprob: -10.541862487792969
    8. ' ' → logprob: -12.166862487792969
    9. 'rang' → logprob: -13.916862487792969
    10. '	range' → logprob: -14.541862487792969

Token 340: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019286326132714748
    2. ' range' → logprob: -6.251928806304932
    3. '(range' → logprob: -18.251928329467773
    4. '_range' → logprob: -19.376928329467773
    5. '	range' → logprob: -19.501928329467773
    6. '   ' → logprob: -21.001928329467773
    7. ' ' → logprob: -21.251928329467773
    8. 'rang' → logprob: -22.126928329467773
    9. '    ' → logprob: -22.501928329467773
    10. '_' → logprob: -22.876928329467773

Token 341: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.250001907348633
    3. 'k' → logprob: -16.625001907348633
    4. '(n' → logprob: -18.875001907348633
    5. ' (' → logprob: -19.750001907348633
    6. '(m' → logprob: -20.000001907348633
    7. '(K' → logprob: -20.250001907348633
    8. '(s' → logprob: -20.375001907348633
    9. '(q' → logprob: -20.375001907348633
    10. '(len' → logprob: -20.500001907348633

Token 342: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38695037364959717
    2. '):' → logprob: -1.1369503736495972
    3. '):
' → logprob: -10.761950492858887
    4. '):

' → logprob: -11.011950492858887
    5. ' ):
' → logprob: -11.511950492858887
    6. ' ):' → logprob: -11.886950492858887
    7. '               ' → logprob: -12.261950492858887
    8. '                   ' → logprob: -12.261950492858887
    9. ':' → logprob: -12.636950492858887
    10. '           ' → logprob: -12.886950492858887

Token 343: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007908020168542862
    2. '   ' → logprob: -5.007907867431641
    3. ' nx' → logprob: -7.257907867431641
    4. '               ' → logprob: -8.00790786743164
    5. '           ' → logprob: -10.38290786743164
    6. '       ' → logprob: -10.38290786743164
    7. ' ' → logprob: -10.38290786743164
    8. 'nx' → logprob: -10.50790786743164
    9. '                       ' → logprob: -11.00790786743164
    10. '    ' → logprob: -12.63290786743164

Token 344: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.22570782899856567
    2. 'nx' (adapté à ' nx') → logprob: -1.600707769393921
    3. '(nx' → logprob: -8.9757080078125
    4. 'n' → logprob: -9.7257080078125
    5. '                   ' → logprob: -9.8507080078125
    6. '<|end|>' → logprob: -11.3507080078125
    7. 'x' → logprob: -11.4757080078125
    8. ' ' → logprob: -11.6007080078125
    9. ' ntx' → logprob: -12.2257080078125
    10. 'xn' → logprob: -12.4757080078125

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027907906100153923
    2. '=' → logprob: -3.6529078483581543
    3. ' =' → logprob: -6.527907848358154
    4. ' ,' → logprob: -9.152908325195312
    5. '<|end|>' → logprob: -10.902908325195312
    6. 'x' → logprob: -11.402908325195312
    7. '-' → logprob: -13.527908325195312
    8. '```' → logprob: -13.777908325195312
    9. '=x' → logprob: -14.152908325195312
    10. ' ' → logprob: -14.277908325195312

Token 346: ' ny' (ID: 4423)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.17975109815597534
    2. 'x' → logprob: -1.8047511577606201
    3. ',' → logprob: -12.5547513961792
    4. ' ' → logprob: -14.0547513961792
    5. '<|end|>' → logprob: -14.6797513961792
    6. '	x' → logprob: -15.0547513961792
    7. '```' → logprob: -15.4297513961792
    8. '   ' → logprob: -16.179750442504883
    9. ' ' → logprob: -16.304750442504883
    10. '(x' → logprob: -16.429750442504883

Token 347: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740811586380005
    2. '=' → logprob: -0.9740811586380005
    3. ',' → logprob: -12.599081039428711
    4. 'x' → logprob: -14.224081039428711
    5. ' ' → logprob: -16.72408103942871
    6. ')' → logprob: -17.09908103942871
    7. '=x' → logprob: -17.34908103942871
    8. '```' → logprob: -17.84908103942871
    9. '＝' → logprob: -18.59908103942871
    10. '<|end|>' → logprob: -18.84908103942871

Token 348: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.061970602720975876
    2. ' x' → logprob: -2.8119707107543945
    3. '                   ' → logprob: -13.311970710754395
    4. '	x' → logprob: -14.561970710754395
    5. '(x' → logprob: -14.561970710754395
    6. '   ' → logprob: -15.686970710754395
    7. ' ' → logprob: -16.936969757080078
    8. '>x' → logprob: -17.686969757080078
    9. '<|end|>' → logprob: -17.936969757080078
    10. '"x' → logprob: -18.061969757080078

Token 349: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.001351306913420558
    2. '-' → logprob: -6.626351356506348
    3. ' ' → logprob: -11.251351356506348
    4. ',' → logprob: -12.001351356506348
    5. ' +' → logprob: -12.626351356506348
    6. '   ' → logprob: -13.751351356506348
    7. '<|end|>' → logprob: -14.251351356506348
    8. '+' → logprob: -14.876351356506348
    9. '  ' → logprob: -15.626351356506348
    10. '```' → logprob: -15.751351356506348

Token 350: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.014164448715746403
    2. ' dx' → logprob: -4.264164447784424
    3. '_dx' → logprob: -14.139164924621582
    4. '(dx' → logprob: -15.889164924621582
    5. '.dx' → logprob: -17.139163970947266
    6. ' ' → logprob: -17.764163970947266
    7. '   ' → logprob: -17.764163970947266
    8. 'd' → logprob: -18.139163970947266
    9. '<|end|>' → logprob: -18.389163970947266
    10. 'Dx' → logprob: -18.889163970947266

Token 351: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.531315314830863e-06
    2. ' ,' → logprob: -12.625003814697266
    3. ',y' → logprob: -16.875003814697266
    4. '‌,' → logprob: -17.375003814697266
    5. ',
' → logprob: -17.875003814697266
    6. '```' → logprob: -18.125003814697266
    7. ',n' → logprob: -18.250003814697266
    8. '_,' → logprob: -18.750003814697266
    9. '                   ' → logprob: -19.125003814697266
    10. '               ' → logprob: -19.500003814697266

Token 352: ' y' (ID: 342)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.014166681095957756
    2. ' dy' → logprob: -4.264166831970215
    3. '<|end|>' → logprob: -12.889166831970215
    4. 'dym' → logprob: -15.139166831970215
    5. 'd' → logprob: -15.264166831970215
    6. '.dy' → logprob: -16.5141658782959
    7. 'Dy' → logprob: -17.1391658782959
    8. ' ' → logprob: -17.2641658782959
    9. 'ddy' → logprob: -18.3891658782959
    10. '	d' → logprob: -18.7641658782959

Token 353: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -5.919942486798391e-05
    2. ' ,' → logprob: -10.250059127807617
    3. 'dy' → logprob: -11.375059127807617
    4. ',d' → logprob: -12.500059127807617
    5. '-' → logprob: -12.875059127807617
    6. '<|end|>' → logprob: -13.000059127807617
    7. ' dy' → logprob: -13.125059127807617
    8. ',y' → logprob: -15.125059127807617
    9. 'd' → logprob: -15.625059127807617
    10. 'def' → logprob: -15.625059127807617

Token 354: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.00044175516813993454
    2. ' dy' → logprob: -7.750441551208496
    3. '1' → logprob: -11.750441551208496
    4. '<|end|>' → logprob: -13.250441551208496
    5. 'dym' → logprob: -14.000441551208496
    6. 'd' → logprob: -16.000442504882812
    7. '.dy' → logprob: -16.875442504882812
    8. 'ny' → logprob: -17.000442504882812
    9. '0' → logprob: -17.375442504882812
    10. ',' → logprob: -17.500442504882812

Token 355: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005303600803017616
    2. '
' → logprob: -5.880303382873535
    3. '               ' → logprob: -7.630303382873535
    4. ',' → logprob: -7.630303382873535
    5. '           ' → logprob: -7.755303382873535
    6. '<|end|>' → logprob: -7.880303382873535
    7. '       ' → logprob: -8.130303382873535
    8. '                    
' → logprob: -9.130303382873535
    9. '   ' → logprob: -9.755303382873535
    10. '                       ' → logprob: -10.005303382873535

Token 356: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006118826568126678
    2. '               ' → logprob: -8.625612258911133
    3. '           ' → logprob: -8.750612258911133
    4. 'if' → logprob: -9.875612258911133
    5. ' if' → logprob: -9.875612258911133
    6. '<|end|>' → logprob: -10.125612258911133
    7. '
' → logprob: -10.750612258911133
    8. '                    
' → logprob: -11.000612258911133
    9. '   ' → logprob: -11.125612258911133
    10. '                  ' → logprob: -11.125612258911133

Token 357: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1755620241165161
    2. 'if' (adapté à ' if') → logprob: -2.1755619049072266
    3. '                   ' → logprob: -3.0505619049072266
    4. '   ' → logprob: -10.050561904907227
    5. ' ' → logprob: -10.550561904907227
    6. '               ' → logprob: -10.675561904907227
    7. '           ' → logprob: -11.050561904907227
    8. '       ' → logprob: -12.425561904907227
    9. '                    ' → logprob: -12.550561904907227
    10. '                  ' → logprob: -12.925561904907227

Token 358: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.009163404814898968
    2. 'nx' → logprob: -4.7591633796691895
    3. '(nx' → logprob: -7.5091633796691895
    4. 'n' → logprob: -15.009163856506348
    5. ' ' → logprob: -16.38416290283203
    6. ' ny' → logprob: -16.75916290283203
    7. '   ' → logprob: -17.50916290283203
    8. '    ' → logprob: -17.75916290283203
    9. ' ' → logprob: -18.00916290283203
    10. 'x' → logprob: -18.00916290283203

Token 359: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0006273718317970634
    2. '<' → logprob: -7.375627517700195
    3. '<|end|>' → logprob: -14.125627517700195
    4. ' ' → logprob: -17.375627517700195
    5. ' ' → logprob: -20.000627517700195
    6. '[' → logprob: -20.125627517700195
    7. '<int' → logprob: -20.375627517700195
    8. ' <",' → logprob: -20.375627517700195
    9. ' <
' → logprob: -20.750627517700195
    10. ')' → logprob: -20.750627517700195

Token 360: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031869823578745127
    2. ' ' → logprob: -5.75318717956543
    3. '   ' → logprob: -11.75318717956543
    4. '<|end|>' → logprob: -13.62818717956543
    5. '  ' → logprob: -16.25318717956543
    6. '```' → logprob: -16.50318717956543
    7. '    ' → logprob: -17.12818717956543
    8. '=' → logprob: -17.12818717956543
    9. '...' → logprob: -17.94068717956543
    10. '0' → logprob: -18.44068717956543

Token 361: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001825642102630809
    2. ' ' → logprob: -8.625182151794434
    3. '   ' → logprob: -12.875182151794434
    4. '<|end|>' → logprob: -15.875182151794434
    5. '```' → logprob: -16.75018310546875
    6. '=' → logprob: -17.25018310546875
    7. '  ' → logprob: -17.25018310546875
    8. '0' → logprob: -17.37518310546875
    9. '    ' → logprob: -18.37518310546875
    10. '[' → logprob: -18.43768310546875

Token 362: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0040785204619169235
    2. 'or' → logprob: -5.504078388214111
    3. '<|end|>' → logprob: -16.129077911376953
    4. ' ' → logprob: -17.004077911376953
    5. '	or' → logprob: -17.379077911376953
    6. '```' → logprob: -18.004077911376953
    7. ' and' → logprob: -19.379077911376953
    8. '0' → logprob: -19.879077911376953
    9. ')' → logprob: -20.254077911376953
    10. 'and' → logprob: -20.504077911376953

Token 363: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.6938557028770447
    2. ' nx' → logprob: -0.6938557028770447
    3. '(nx' → logprob: -7.4438557624816895
    4. '1' → logprob: -9.193855285644531
    5. 'x' → logprob: -11.693855285644531
    6. '0' → logprob: -12.318855285644531
    7. 'xn' → logprob: -12.818855285644531
    8. 'n' → logprob: -13.068855285644531
    9. 'Nx' → logprob: -13.943855285644531
    10. ' ' → logprob: -14.318855285644531

Token 364: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1255919337272644
    2. ' >' → logprob: -2.875591993331909
    3. '1' → logprob: -3.625591993331909
    4. ' or' → logprob: -4.00059175491333
    5. ' ' → logprob: -5.00059175491333
    6. 'or' → logprob: -5.25059175491333
    7. '```' → logprob: -7.00059175491333
    8. '           ' → logprob: -7.00059175491333
    9. '                   ' → logprob: -7.25059175491333
    10. '0' → logprob: -7.50059175491333

Token 365: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.029750484973192215
    2. ' m' → logprob: -3.5297505855560303
    3. '	m' → logprob: -18.02975082397461
    4. ' ' → logprob: -18.40475082397461
    5. '   ' → logprob: -18.77975082397461
    6. '    ' → logprob: -18.77975082397461
    7. '  ' → logprob: -19.65475082397461
    8. '```' → logprob: -20.02975082397461
    9. '           ' → logprob: -20.65475082397461
    10. ')m' → logprob: -21.65475082397461

Token 366: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.00029685118352063
    2. 'or' → logprob: -8.125296592712402
    3. '                   ' → logprob: -14.500296592712402
    4. '                    ' → logprob: -15.750296592712402
    5. 'n' → logprob: -16.75029754638672
    6. '                ' → logprob: -17.50029754638672
    7. '               ' → logprob: -18.00029754638672
    8. '                       ' → logprob: -18.62529754638672
    9. ' ' → logprob: -19.00029754638672
    10. '                  ' → logprob: -19.25029754638672

Token 367: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.12786300480365753
    2. ' ny' → logprob: -2.1278629302978516
    3. 'nx' → logprob: -7.127862930297852
    4. ' nx' → logprob: -9.252862930297852
    5. 'n' → logprob: -10.502862930297852
    6. '                   ' → logprob: -13.002862930297852
    7. '               ' → logprob: -13.502862930297852
    8. ' n' → logprob: -14.502862930297852
    9. '   ' → logprob: -14.627862930297852
    10. '                       ' → logprob: -14.752862930297852

Token 368: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.019486980512738228
    2. '>' → logprob: -4.019486904144287
    3. ' <' → logprob: -6.644486904144287
    4. '<' → logprob: -10.394487380981445
    5. ' ' → logprob: -12.644487380981445
    6. '1' → logprob: -14.144487380981445
    7. '[' → logprob: -15.894487380981445
    8. ' ' → logprob: -16.269487380981445
    9. ' >
' → logprob: -16.769487380981445
    10. '   ' → logprob: -16.769487380981445

Token 369: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029757322743535042
    2. ' ' → logprob: -3.529757261276245
    3. '   ' → logprob: -12.279757499694824
    4. '  ' → logprob: -14.654757499694824
    5. '<|end|>' → logprob: -14.904757499694824
    6. '```' → logprob: -15.029757499694824
    7. '...' → logprob: -15.404757499694824
    8. '           ' → logprob: -15.779757499694824
    9. '       ' → logprob: -16.467256546020508
    10. '    ' → logprob: -16.592256546020508

Token 370: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017102824058383703
    2. ' ' → logprob: -6.376710414886475
    3. '   ' → logprob: -12.251709938049316
    4. 'n' → logprob: -14.001709938049316
    5. '
' → logprob: -14.501709938049316
    6. '  ' → logprob: -15.251709938049316
    7. '           ' → logprob: -15.376709938049316
    8. '```' → logprob: -15.376709938049316
    9. '                   ' → logprob: -15.501709938049316
    10. '0' → logprob: -15.689209938049316

Token 371: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.1610085666179657
    2. 'or' → logprob: -1.911008596420288
    3. '1' → logprob: -7.286008358001709
    4. ' ' → logprob: -9.911008834838867
    5. '               ' → logprob: -10.911008834838867
    6. '                   ' → logprob: -11.911008834838867
    7. '   ' → logprob: -12.286008834838867
    8. 'n' → logprob: -12.411008834838867
    9. ' n' → logprob: -12.411008834838867
    10. '           ' → logprob: -12.536008834838867

Token 372: ' ny' (ID: 4423)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03807293251156807
    2. ' n' → logprob: -3.2880728244781494
    3. '1' → logprob: -10.53807258605957
    4. '   ' → logprob: -13.03807258605957
    5. ' ' → logprob: -13.28807258605957
    6. '	n' → logprob: -14.78807258605957
    7. '```' → logprob: -15.16307258605957
    8. '
' → logprob: -15.91307258605957
    9. '    ' → logprob: -16.28807258605957
    10. '  ' → logprob: -16.41307258605957

Token 373: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.030659573152661324
    2. ' >' → logprob: -3.5306596755981445
    3. '1' → logprob: -7.9056596755981445
    4. 'n' → logprob: -8.530659675598145
    5. ' n' → logprob: -8.655659675598145
    6. ' ' → logprob: -9.655659675598145
    7. '0' → logprob: -9.905659675598145
    8. '   ' → logprob: -10.530659675598145
    9. '           ' → logprob: -12.155659675598145
    10. '                   ' → logprob: -12.155659675598145

Token 374: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008617766201496124
    2. ' n' → logprob: -4.758617877960205
    3. '1' → logprob: -13.008617401123047
    4. '   ' → logprob: -14.633617401123047
    5. ' ' → logprob: -15.508617401123047
    6. '
' → logprob: -15.633617401123047
    7. '	n' → logprob: -16.008617401123047
    8. '  ' → logprob: -17.508617401123047
    9. '```' → logprob: -17.508617401123047
    10. '    ' → logprob: -18.133617401123047

Token 375: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7643216848373413
    2. ':' → logprob: -1.0143216848373413
    3. ':
' → logprob: -1.7643216848373413
    4. '                   ' → logprob: -8.264321327209473
    5. '):
' → logprob: -9.639321327209473
    6. ':

' → logprob: -10.514321327209473
    7. '               ' → logprob: -11.389321327209473
    8. '       ' → logprob: -11.764321327209473
    9. '                      ' → logprob: -12.139321327209473
    10. '                        ' → logprob: -12.639321327209473

Token 376: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0002439467643853277
    2. ' break' → logprob: -8.625244140625
    3. 'break' → logprob: -9.750244140625
    4. '                        ' → logprob: -13.375244140625
    5. '       ' → logprob: -13.875244140625
    6. '               ' → logprob: -14.000244140625
    7. '   ' → logprob: -14.125244140625
    8. '                      ' → logprob: -14.375244140625
    9. '                   ' → logprob: -14.875244140625
    10. '                        
' → logprob: -15.125244140625

Token 377: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.038927506655454636
    2. ' break' → logprob: -3.2889275550842285
    3. '                       ' → logprob: -7.0389275550842285
    4. '                           ' → logprob: -12.66392707824707
    5. '                   ' → logprob: -12.78892707824707
    6. '	break' → logprob: -14.28892707824707
    7. '               ' → logprob: -14.28892707824707
    8. '```' → logprob: -14.66392707824707
    9. '   ' → logprob: -15.16392707824707
    10. ' ' → logprob: -15.66392707824707

Token 378: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.0325924449716695e-05
    2. '               ' → logprob: -13.12501049041748
    3. '                       ' → logprob: -13.25001049041748
    4. '                  ' → logprob: -13.62501049041748
    5. '                    
' → logprob: -13.62501049041748
    6. '                    ' → logprob: -14.00001049041748
    7. '           ' → logprob: -14.12501049041748
    8. '   ' → logprob: -14.25001049041748
    9. '<|end|>' → logprob: -14.37501049041748
    10. '       ' → logprob: -15.12501049041748

Token 379: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00138118676841259
    2. '               ' → logprob: -7.7513813972473145
    3. 'x' → logprob: -7.8763813972473145
    4. '   ' → logprob: -8.501380920410156
    5. '           ' → logprob: -8.751380920410156
    6. '       ' → logprob: -9.126380920410156
    7. ' x' → logprob: -10.626380920410156
    8. '                       ' → logprob: -11.001380920410156
    9. ' ' → logprob: -11.126380920410156
    10. '```' → logprob: -11.376380920410156

Token 380: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.06201821193099022
    2. ' x' → logprob: -2.8120181560516357
    3. '                   ' → logprob: -10.062018394470215
    4. '   ' → logprob: -12.312018394470215
    5. '           ' → logprob: -13.937018394470215
    6. '       ' → logprob: -14.062018394470215
    7. ' ' → logprob: -14.187018394470215
    8. '               ' → logprob: -15.437018394470215
    9. '    ' → logprob: -15.562018394470215
    10. '	x' → logprob: -15.687018394470215

Token 381: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014239625306800008
    2. '=' → logprob: -9.000142097473145
    3. ' ,' → logprob: -11.500142097473145
    4. '<|end|>' → logprob: -13.000142097473145
    5. ',y' → logprob: -13.125142097473145
    6. '-=' → logprob: -13.875142097473145
    7. '```' → logprob: -14.125142097473145
    8. '                   ' → logprob: -14.375142097473145
    9. ',
' → logprob: -14.500142097473145
    10. ' -=' → logprob: -14.625142097473145

Token 382: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.31326186656951904
    2. ' y' → logprob: -1.313261866569519
    3. ',y' → logprob: -15.938261985778809
    4. '	y' → logprob: -16.688261032104492
    5. ' ' → logprob: -17.938261032104492
    6. 'x' → logprob: -18.688261032104492
    7. '    ' → logprob: -19.938261032104492
    8. '<|end|>' → logprob: -20.188261032104492
    9. ',' → logprob: -20.563261032104492
    10. '   ' → logprob: -20.688261032104492

Token 383: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132616877555847
    2. ' =' → logprob: -1.3132617473602295
    3. ',' → logprob: -18.188261032104492
    4. ' ' → logprob: -19.188261032104492
    5. ')' → logprob: -19.188261032104492
    6. '=

' → logprob: -19.688261032104492
    7. '＝' → logprob: -20.188261032104492
    8. '```' → logprob: -20.813261032104492
    9. '   ' → logprob: -20.938261032104492
    10. ' =
' → logprob: -21.063261032104492

Token 384: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.023382442072033882
    2. ' nx' → logprob: -3.7733824253082275
    3. '(nx' → logprob: -8.898382186889648
    4. 'n' → logprob: -16.77338218688965
    5. 'Nx' → logprob: -16.89838218688965
    6. '                   ' → logprob: -17.77338218688965
    7. '   ' → logprob: -17.77338218688965
    8. 'x' → logprob: -17.89838218688965
    9. 'nv' → logprob: -18.02338218688965
    10. ' ' → logprob: -18.02338218688965

Token 385: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005132827442139387
    2. '-' → logprob: -5.755132675170898
    3. ' -' → logprob: -6.380132675170898
    4. '+' → logprob: -8.630132675170898
    5. ' +' → logprob: -9.755132675170898
    6. ' ,' → logprob: -11.130132675170898
    7. '```' → logprob: -13.255132675170898
    8. '-,' → logprob: -13.380132675170898
    9. '+,' → logprob: -13.880132675170898
    10. '1' → logprob: -14.505132675170898

Token 386: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.055603548884391785
    2. 'y' → logprob: -3.305603504180908
    3. ' ny' → logprob: -4.055603504180908
    4. ' y' → logprob: -9.930603981018066
    5. 'yn' → logprob: -10.555603981018066
    6. 'nyi' → logprob: -12.930603981018066
    7. 'ay' → logprob: -13.555603981018066
    8. 'yny' → logprob: -14.055603981018066
    9. ' ' → logprob: -14.430603981018066
    10. '   ' → logprob: -14.430603981018066


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 384
Tokens correctement prédits (1ère position, stricte): 192
Tokens correctement prédits (1ère position, avec adaptation): 204
Tokens correctement prédits (top 10): 342
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 53.12%
Précision (top 10): 89.06%
================================================================================
