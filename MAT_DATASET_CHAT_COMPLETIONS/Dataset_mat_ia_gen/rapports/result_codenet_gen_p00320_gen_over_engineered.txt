================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:32:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Rectangle:
    def __init__(self, h: int, w: int):
        self.h = h
        self.w = w

    def normalized(self):
        return (min(self.h, self.w), max(self.h, self.w))

    def __eq__(self, other):
        if not isinstance(other, Rectangle):
            return False
        return self.normalized() == other.normalized()

    def __hash__(self):
        return hash(self.normalized())

    def __repr__(self):
        return f"Rectangle{self.normalized()}"


class RectanglesCollection:
    def __init__(self, rectangles):
        if len(rectangles) != 6:
            raise ValueError("Exactly 6 rectangles must be provided")
        self.rectangles = rectangles

    def normalized_counts(self):
        counts = {}
        for rect in self.rectangles:
            norm = rect.normalized()
            counts[norm] = counts.get(norm, 0) + 1
        return counts

    def can_form_cuboid(self):
        counts = self.normalized_counts()
        # There must be exactly 3 unique rectangles, each appearing twice
        if len(counts) != 3:
            return False
        if any(count != 2 for count in counts.values()):
            return False
        # Now the three rectangles represent the three pairs of faces of cuboid
        # The dimensions of the cuboid should be a tuple (a,b,c)
        # Each rectangle is one of (a,b), (b,c), (a,c)
        rects = list(counts.keys())
        # Extract all edge lengths and try to find if such a,b,c exist
        edges = []
        for r in rects:
            edges += r
        edges = set(edges)
        if len(edges) not in {2,3}:
            return False  # Impossible to form cuboid edges

        # For three unique edges a,b,c, their pairs should form rectangles
        # or for cube case when only one edge
        # We try to find a,b,c that satisfy the rectangle set
        # An algorithm:
        # Since we have 3 rectangles: r0,r1,r2
        # We try all permutations of edges assignment:

        from itertools import permutations

        # Try to interpret the three face rectangles as (a,b),(b,c),(a,c)

        for a,b,c in permutations(edges, 3):
            faces = {(min(a,b), max(a,b)), (min(b,c), max(b,c)), (min(a,c), max(a,c))}
            if set(rects) == faces:
                return True

        # Also handle cube case: all rectangles are same (a,a)
        # Then edges = {a}
        if len(edges) == 1:
            e = next(iter(edges))
            if all(r == (e,e) for r in rects):
                return True

        return False


class CuboidValidator:
    def __init__(self):
        pass

    def read_input(self):
        rectangles = []
        import sys
        for _ in range(6):
            h, w = map(int, sys.stdin.readline().strip().split())
            rectangles.append(Rectangle(h,w))
        return RectanglesCollection(rectangles)

    def validate(self):
        rc = self.read_input()
        if rc.can_form_cuboid():
            print("yes")
        else:
            print("no")


if __name__ == "__main__":
    validator = CuboidValidator()
    validator.validate()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Rectangle' (ID: 38728)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6380717158317566
    2. '(' → logprob: -1.3880717754364014
    3. '   ' → logprob: -2.2630717754364014
    4. '```' → logprob: -2.6380717754364014
    5. ''' → logprob: -4.638071537017822
    6. ' ' → logprob: -4.888071537017822
    7. '\' → logprob: -5.013071537017822
    8. '(
' → logprob: -5.638071537017822
    9. ':
' → logprob: -6.388071537017822
    10. '()' → logprob: -6.388071537017822

Token 4: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2205081731081009
    2. '   ' → logprob: -2.720508098602295
    3. '    ' → logprob: -3.095508098602295
    4. '(' → logprob: -3.345508098602295
    5. '_' → logprob: -3.720508098602295
    6. ''' → logprob: -5.220508098602295
    7. ' (' → logprob: -5.720508098602295
    8. '(space' → logprob: -5.720508098602295
    9. '```' → logprob: -5.845508098602295
    10. ' ```' → logprob: -6.720508098602295

Token 5: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003454668214544654
    2. ' ' → logprob: -7.753454685211182
    3. ' calculate' → logprob: -7.878454685211182
    4. '    ' → logprob: -8.003454208374023
    5. ' def' → logprob: -8.128454208374023
    6. ' __' → logprob: -8.253454208374023
    7. '<|end|>' → logprob: -8.378454208374023
    8. '_' → logprob: -8.503454208374023
    9. ' ```' → logprob: -8.753454208374023
    10. ' space' → logprob: -9.003454208374023

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.4021237802808173e-05
    2. ' init' → logprob: -11.875014305114746
    3. '_init' → logprob: -12.500014305114746
    4. 'i' → logprob: -13.625014305114746
    5. 'ini' → logprob: -13.625014305114746
    6. '_' → logprob: -14.500014305114746
    7. 'in' → logprob: -15.625014305114746
    8. '_i' → logprob: -16.00001335144043
    9. '	init' → logprob: -17.12501335144043
    10. 'inti' → logprob: -17.50001335144043

Token 7: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5680394768714905
    2. '__(' → logprob: -0.9430394768714905
    3. '(' → logprob: -3.4430394172668457
    4. '_' → logprob: -4.693039417266846
    5. '__(
' → logprob: -6.193039417266846
    6. '__((' → logprob: -7.943039417266846
    7. '__('' → logprob: -8.943039894104004
    8. '(self' → logprob: -9.318039894104004
    9. '_(' → logprob: -10.193039894104004
    10. '___' → logprob: -10.818039894104004

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0035080108791589737
    2. ' self' → logprob: -5.7535080909729
    3. ')' → logprob: -8.378507614135742
    4. ' )' → logprob: -10.128507614135742
    5. '(self' → logprob: -10.253507614135742
    6. ' ' → logprob: -11.503507614135742
    7. '_self' → logprob: -12.753507614135742
    8. ''s' → logprob: -13.253507614135742
    9. ' ' → logprob: -13.503507614135742
    10. 's' → logprob: -13.753507614135742

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8867628574371338
    2. ')' → logprob: -0.8867628574371338
    3. ' ' → logprob: -2.636762857437134
    4. ' )' → logprob: -3.386762857437134
    5. '_' → logprob: -3.886762857437134
    6. '<|end|>' → logprob: -4.011762619018555
    7. ' (' → logprob: -4.511762619018555
    8. '[' → logprob: -5.511762619018555
    9. ',' → logprob: -5.761762619018555
    10. 'self' → logprob: -5.886762619018555

Token 10: ' h' (ID: 312)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04786807671189308
    2. ' self' → logprob: -3.422868013381958
    3. ')' → logprob: -5.047868251800537
    4. ' )' → logprob: -5.422868251800537
    5. 's' → logprob: -6.922868251800537
    6. 'width' → logprob: -6.922868251800537
    7. 'x' → logprob: -7.047868251800537
    8. ' width' → logprob: -8.672867774963379
    9. ' ' → logprob: -9.297867774963379
    10. ' x' → logprob: -9.297867774963379

Token 11: ':' (ID: 25)
  Prédit: 'eight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eight' → logprob: -0.5766410231590271
    2. 'e' → logprob: -0.8266410231590271
    3. 'ight' → logprob: -7.951641082763672
    4. 'eig' → logprob: -9.576641082763672
    5. 't' → logprob: -9.701641082763672
    6. ')' → logprob: -10.076641082763672
    7. ',' → logprob: -10.201641082763672
    8. ' eight' → logprob: -10.326641082763672
    9. '):' → logprob: -10.701641082763672
    10. '_e' → logprob: -10.701641082763672

Token 12: ' int' (ID: 677)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.2471500635147095
    2. ' ,' → logprob: -1.9971500635147095
    3. ' ' → logprob: -2.12214994430542
    4. 'e' → logprob: -2.24714994430542
    5. ',' → logprob: -2.37214994430542
    6. ' )' → logprob: -2.87214994430542
    7. 'ight' → logprob: -2.99714994430542
    8. 'eight' → logprob: -3.24714994430542
    9. '   ' → logprob: -3.37214994430542
    10. ')' → logprob: -4.12214994430542

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01823773980140686
    2. ')' → logprob: -4.268237590789795
    3. '):' → logprob: -5.893237590789795
    4. ' ,' → logprob: -7.143237590789795
    5. ',width' → logprob: -8.268238067626953
    6. ',int' → logprob: -9.893238067626953
    7. ',height' → logprob: -10.018238067626953
    8. ' ' → logprob: -10.768238067626953
    9. ',)' → logprob: -10.768238067626953
    10. '   ' → logprob: -11.018238067626953

Token 14: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.7998793721199036
    2. ' w' → logprob: -0.7998793721199036
    3. ' ' → logprob: -2.424879312515259
    4. 'width' → logprob: -4.924879550933838
    5. ' width' → logprob: -5.799879550933838
    6. ' ,' → logprob: -7.424879550933838
    7. ' ' → logprob: -7.924879550933838
    8. ' )' → logprob: -8.54987907409668
    9. '   ' → logprob: -8.79987907409668
    10. ')' → logprob: -8.79987907409668

Token 15: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26529696583747864
    2. '):' → logprob: -1.5152969360351562
    3. '=' → logprob: -4.890296936035156
    4. ':' → logprob: -5.390296936035156
    5. ',' → logprob: -7.265296936035156
    6. 'idth' → logprob: -8.515296936035156
    7. 'ight' → logprob: -10.015296936035156
    8. 'e' → logprob: -10.015296936035156
    9. ' ):' → logprob: -10.640296936035156
    10. '**' → logprob: -11.140296936035156

Token 16: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31411486864089966
    2. ' int' → logprob: -1.3141148090362549
    3. ')' → logprob: -7.189115047454834
    4. ' )' → logprob: -10.564114570617676
    5. ':int' → logprob: -10.689114570617676
    6. '=int' → logprob: -10.939114570617676
    7. ' ' → logprob: -11.564114570617676
    8. 'i' → logprob: -12.439114570617676
    9. '<int' → logprob: -12.439114570617676
    10. '(int' → logprob: -12.564114570617676

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03393497318029404
    2. ')' → logprob: -3.408935070037842
    3. ':' → logprob: -8.658934593200684
    4. ',' → logprob: -9.283934593200684
    5. '):
' → logprob: -11.533934593200684
    6. ' ):' → logprob: -12.908934593200684
    7. '),' → logprob: -13.158934593200684
    8. ''):' → logprob: -13.533934593200684
    9. '   ' → logprob: -13.658934593200684
    10. ')：' → logprob: -14.408934593200684

Token 18: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29012399911880493
    2. '    ' → logprob: -2.16512393951416
    3. '   ' → logprob: -2.79012393951416
    4. ' ' → logprob: -2.79012393951416
    5. '        ' → logprob: -5.79012393951416
    6. '_' → logprob: -6.16512393951416
    7. '<|end|>' → logprob: -6.16512393951416
    8. '     ' → logprob: -6.29012393951416
    9. ')' → logprob: -7.29012393951416
    10. '  ' → logprob: -7.29012393951416

Token 19: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5078355669975281
    2. 's' → logprob: -1.0078356266021729
    3. ' ' → logprob: -3.882835626602173
    4. ' self' → logprob: -4.757835388183594
    5. '       ' → logprob: -6.132835388183594
    6. '   ' → logprob: -7.882835388183594
    7. '_' → logprob: -8.132835388183594
    8. '        ' → logprob: -8.132835388183594
    9. ' ' → logprob: -8.257835388183594
    10. '    ' → logprob: -8.382835388183594

Token 20: '.h' (ID: 1508)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003568231128156185
    2. '.height' → logprob: -5.753568172454834
    3. ' .' → logprob: -8.878568649291992
    4. '.h' → logprob: -9.128568649291992
    5. '.width' → logprob: -9.503568649291992
    6. 'height' → logprob: -10.253568649291992
    7. '._' → logprob: -11.503568649291992
    8. ' ' → logprob: -12.503568649291992
    9. '_height' → logprob: -12.878568649291992
    10. '.Height' → logprob: -13.503568649291992

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8270792961120605
    2. ',' → logprob: -1.8270792961120605
    3. '<|end|>' → logprob: -1.8270792961120605
    4. ')' → logprob: -2.9520792961120605
    5. '_' → logprob: -3.0770792961120605
    6. ' ' → logprob: -3.4520792961120605
    7. ' =' → logprob: -3.4520792961120605
    8. '.' → logprob: -3.8270792961120605
    9. '   ' → logprob: -3.9520792961120605
    10. '    ' → logprob: -4.3270792961120605

Token 22: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.3132675588130951
    2. ' h' → logprob: -1.3132675886154175
    3. ' ' → logprob: -12.313267707824707
    4. '	h' → logprob: -15.188267707824707
    5. ' ' → logprob: -15.438267707824707
    6. ')' → logprob: -15.438267707824707
    7. '    ' → logprob: -16.06326675415039
    8. '_h' → logprob: -16.06326675415039
    9. '<|end|>' → logprob: -16.31326675415039
    10. ' )' → logprob: -16.93826675415039

Token 23: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0459553524851799
    2. 'w' → logprob: -3.5459554195404053
    3. 'self' (adapté à ' self') → logprob: -5.420955181121826
    4. ' w' → logprob: -6.170955181121826
    5. '```' → logprob: -6.420955181121826
    6. '        ' → logprob: -6.545955181121826
    7. '        
' → logprob: -6.545955181121826
    8. '\n' → logprob: -6.920955181121826
    9. ' 
' → logprob: -7.170955181121826
    10. ',' → logprob: -7.920955181121826

Token 26: '.w' (ID: 2234)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0008140355930663645
    2. '.w' → logprob: -7.375813961029053
    3. ' .' → logprob: -8.625814437866211
    4. '.h' → logprob: -13.000814437866211
    5. 'w' → logprob: -13.500814437866211
    6. '​.' → logprob: -13.875814437866211
    7. '.​' → logprob: -14.500814437866211
    8. '._' → logprob: -14.750814437866211
    9. '.width' → logprob: -15.125814437866211
    10. '‌.' → logprob: -15.375814437866211

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38711243867874146
    2. '=' → logprob: -1.1371123790740967
    3. ' ' → logprob: -9.512112617492676
    4. '.' → logprob: -9.512112617492676
    5. '<|end|>' → logprob: -10.637112617492676
    6. ')' → logprob: -11.387112617492676
    7. '  ' → logprob: -11.512112617492676
    8. '   ' → logprob: -11.762112617492676
    9. ' ==' → logprob: -11.887112617492676
    10. ' =
' → logprob: -11.887112617492676

Token 28: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.5759401917457581
    2. 'w' → logprob: -0.8259401917457581
    3. ' ' → logprob: -14.325940132141113
    4. ' ' → logprob: -16.45094108581543
    5. '	w' → logprob: -17.07594108581543
    6. '=w' → logprob: -17.57594108581543
    7. '    ' → logprob: -18.45094108581543
    8. 'W' → logprob: -18.70094108581543
    9. '<|end|>' → logprob: -18.95094108581543
    10. '```' → logprob: -18.95094108581543

Token 29: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20226216316223145
    2. '   ' → logprob: -2.2022621631622314
    3. '    
' → logprob: -3.0772621631622314
    4. '<|end|>' → logprob: -4.577261924743652
    5. '\n' → logprob: -5.452261924743652
    6. '```' → logprob: -6.327261924743652
    7. '  
' → logprob: -6.452261924743652
    8. '\' → logprob: -6.702261924743652
    9. ' 
' → logprob: -6.827261924743652
    10. ':' → logprob: -7.077261924743652

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36349692940711975
    2. '    
' → logprob: -1.6134968996047974
    3. ' 
' → logprob: -3.488497018814087
    4. '
' → logprob: -3.738497018814087
    5. '  
' → logprob: -4.363496780395508
    6. ' ' → logprob: -4.613496780395508
    7. '```' → logprob: -5.488496780395508
    8. '\n' → logprob: -5.613496780395508
    9. '     
' → logprob: -5.863496780395508
    10. '\' → logprob: -6.113496780395508

Token 31: ' def' (ID: 1056)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02284298464655876
    2. '   ' → logprob: -4.272842884063721
    3. 'def' (adapté à ' def') → logprob: -4.897842884063721
    4. ' ' → logprob: -6.897842884063721
    5. ' d' → logprob: -10.397843360900879
    6. ' def' → logprob: -10.647843360900879
    7. '    
' → logprob: -10.647843360900879
    8. '    ' → logprob: -10.897843360900879
    9. '@' → logprob: -11.272843360900879
    10. ' 
' → logprob: -11.522843360900879

Token 32: ' normalized' (ID: 59625)
  Prédit: ' area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.5576133728027344
    2. ' ' → logprob: -0.9326133728027344
    3. ' space' → logprob: -4.182613372802734
    4. '_area' → logprob: -4.182613372802734
    5. 'area' → logprob: -6.307613372802734
    6. '_' → logprob: -7.182613372802734
    7. ' calculate' → logprob: -8.557613372802734
    8. ' _' → logprob: -8.807613372802734
    9. 'space' → logprob: -9.182613372802734
    10. ' a' → logprob: -9.307613372802734

Token 33: '(self' (ID: 2402)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.36071956157684326
    2. '(' → logprob: -1.2357195615768433
    3. '(self' → logprob: -5.735719680786133
    4. '_size' → logprob: -6.110719680786133
    5. '_area' → logprob: -6.735719680786133
    6. '_space' → logprob: -6.860719680786133
    7. '_height' → logprob: -6.860719680786133
    8. '()' → logprob: -7.610719680786133
    9. '_rectangle' → logprob: -7.735719680786133
    10. '_(' → logprob: -7.860719680786133

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.36974775791168213
    2. ')' → logprob: -1.2447477579116821
    3. ',' → logprob: -3.9947476387023926
    4. ' ):' → logprob: -7.244747638702393
    5. '_' → logprob: -7.494747638702393
    6. '(' → logprob: -7.494747638702393
    7. ' )' → logprob: -8.49474811553955
    8. '():' → logprob: -8.86974811553955
    9. ':' → logprob: -9.61974811553955
    10. ' ' → logprob: -9.74474811553955

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037680961191654205
    2. ':' → logprob: -4.1626811027526855
    3. '    ' → logprob: -5.0376811027526855
    4. '(' → logprob: -5.2876811027526855
    5. '   ' → logprob: -6.0376811027526855
    6. '        
' → logprob: -6.9126811027526855
    7. '        ' → logprob: -7.0376811027526855
    8. ':
' → logprob: -7.2876811027526855
    9. 'return' → logprob: -7.2876811027526855
    10. '\' → logprob: -7.4126811027526855

Token 36: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6440134644508362
    2. 'if' → logprob: -1.6440134048461914
    3. ' if' → logprob: -2.1440134048461914
    4. 'return' (adapté à ' return') → logprob: -2.8940134048461914
    5. 'r' → logprob: -3.2690134048461914
    6. 'n' → logprob: -4.144013404846191
    7. 'i' → logprob: -4.519013404846191
    8. ' return' → logprob: -5.019013404846191
    9. '```' → logprob: -5.019013404846191
    10. '        ' → logprob: -5.644013404846191

Token 37: ' (' (ID: 350)
  Prédit: ' Rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Rectangle' → logprob: -0.26008909940719604
    2. 'Rectangle' → logprob: -2.385089159011841
    3. ' min' → logprob: -2.635089159011841
    4. ' self' → logprob: -4.010088920593262
    5. 'self' → logprob: -4.135088920593262
    6. ' sorted' → logprob: -4.760088920593262
    7. ' max' → logprob: -5.135088920593262
    8. ' ' → logprob: -5.385088920593262
    9. 'min' → logprob: -5.760088920593262
    10. '(Rect' → logprob: -6.260088920593262

Token 38: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.18328776955604553
    2. 'self' → logprob: -2.0582878589630127
    3. ' min' → logprob: -3.3082878589630127
    4. ' self' → logprob: -6.433287620544434
    5. 'max' → logprob: -7.183287620544434
    6. '   ' → logprob: -8.308287620544434
    7. '0' → logprob: -8.558287620544434
    8. '(min' → logprob: -8.683287620544434
    9. 'sorted' → logprob: -9.433287620544434
    10. ')' → logprob: -10.433287620544434

Token 39: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002813909435644746
    2. '(' → logprob: -5.877813816070557
    3. '(s' → logprob: -12.377814292907715
    4. ' (' → logprob: -13.127814292907715
    5. 'self' → logprob: -13.252814292907715
    6. ',' → logprob: -14.877814292907715
    7. '(
' → logprob: -15.127814292907715
    8. ' self' → logprob: -16.0028133392334
    9. '(this' → logprob: -16.1278133392334
    10. ')' → logprob: -16.3778133392334

Token 40: '.h' (ID: 1508)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6215363144874573
    2. '.h' → logprob: -1.2465362548828125
    3. ' .' → logprob: -2.8715362548828125
    4. '(self' → logprob: -3.1215362548828125
    5. '.w' → logprob: -3.2465362548828125
    6. '.s' → logprob: -3.6215362548828125
    7. 'self' → logprob: -5.3715362548828125
    8. '.self' → logprob: -6.8715362548828125
    9. ' self' → logprob: -6.9965362548828125
    10. ',' → logprob: -7.2465362548828125

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024854077491909266
    2. ' ,' → logprob: -6.002485275268555
    3. ',
' → logprob: -11.752485275268555
    4. ',self' → logprob: -14.377485275268555
    5. 's' → logprob: -15.127485275268555
    6. ' ' → logprob: -15.377485275268555
    7. ',

' → logprob: -15.377485275268555
    8. ')' → logprob: -15.877485275268555
    9. '),' → logprob: -15.877485275268555
    10. '`,' → logprob: -16.002485275268555

Token 42: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16055504977703094
    2. 'self' → logprob: -1.9105550050735474
    3. ' ' → logprob: -8.410554885864258
    4. ' ' → logprob: -9.410554885864258
    5. '<|end|>' → logprob: -11.410554885864258
    6. '	self' → logprob: -12.035554885864258
    7. ')' → logprob: -12.785554885864258
    8. ' )' → logprob: -13.910554885864258
    9. '(self' → logprob: -13.910554885864258
    10. 's' → logprob: -14.035554885864258

Token 43: '.w' (ID: 2234)
  Prédit: '.w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.w' → logprob: -0.023323625326156616
    2. '.' → logprob: -3.7733235359191895
    3. ' .' → logprob: -10.398324012756348
    4. '.h' → logprob: -10.523324012756348
    5. ',' → logprob: -11.273324012756348
    6. 'w' → logprob: -12.273324012756348
    7. ',w' → logprob: -13.648324012756348
    8. '	w' → logprob: -15.273324012756348
    9. '.v' → logprob: -15.898324012756348
    10. '._' → logprob: -16.02332305908203

Token 44: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.013608372770249844
    2. ',' → logprob: -4.888608455657959
    3. ')' → logprob: -5.138608455657959
    4. ' ),' → logprob: -9.5136079788208
    5. '),
' → logprob: -10.7636079788208
    6. '))' → logprob: -11.5136079788208
    7. ' ,' → logprob: -12.8886079788208
    8. '),

' → logprob: -12.8886079788208
    9. '),(' → logprob: -13.2636079788208
    10. ',),' → logprob: -13.5136079788208

Token 45: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.20142367482185364
    2. 'max' → logprob: -1.7014236450195312
    3. ' ' → logprob: -12.576423645019531
    4. '(max' → logprob: -12.576423645019531
    5. '	max' → logprob: -14.076423645019531
    6. '   ' → logprob: -14.451423645019531
    7. '  ' → logprob: -14.701423645019531
    8. ')' → logprob: -14.826423645019531
    9. ',max' → logprob: -14.826423645019531
    10. '    ' → logprob: -15.076423645019531

Token 46: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006721995305269957
    2. '(' → logprob: -5.0067219734191895
    3. ' (' → logprob: -12.756722450256348
    4. 'self' → logprob: -13.256722450256348
    5. '(
' → logprob: -13.631722450256348
    6. '(s' → logprob: -14.631722450256348
    7. '(

' → logprob: -16.25672149658203
    8. '(this' → logprob: -16.75672149658203
    9. '(Self' → logprob: -16.88172149658203
    10. ')' → logprob: -17.00672149658203

Token 47: '.h' (ID: 1508)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3296559751033783
    2. '.h' → logprob: -1.8296560049057007
    3. '.s' → logprob: -3.079655885696411
    4. 'self' → logprob: -3.329655885696411
    5. '.self' → logprob: -3.704655885696411
    6. '.' → logprob: -4.70465612411499
    7. '(' → logprob: -5.57965612411499
    8. ')' → logprob: -8.329655647277832
    9. '(.' → logprob: -8.329655647277832
    10. ' .' → logprob: -9.204655647277832

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006844374001957476
    2. ',self' → logprob: -8.25068473815918
    3. 'self' → logprob: -8.50068473815918
    4. ' ,' → logprob: -9.12568473815918
    5. ')' → logprob: -10.25068473815918
    6. '.self' → logprob: -10.37568473815918
    7. ' self' → logprob: -10.87568473815918
    8. '.' → logprob: -11.25068473815918
    9. ',
' → logprob: -13.00068473815918
    10. '),' → logprob: -13.12568473815918

Token 49: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04863778129220009
    2. ' self' → logprob: -3.048637866973877
    3. '(self' → logprob: -10.923637390136719
    4. ' ' → logprob: -11.673637390136719
    5. ')' → logprob: -11.798637390136719
    6. '   ' → logprob: -11.923637390136719
    7. '	self' → logprob: -12.923637390136719
    8. '       ' → logprob: -13.548637390136719
    9. '[self' → logprob: -13.673637390136719
    10. '  ' → logprob: -14.548637390136719

Token 50: '.w' (ID: 2234)
  Prédit: '.w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.w' → logprob: -0.0010435284348204732
    2. '.' → logprob: -7.126043319702148
    3. ',' → logprob: -9.126043319702148
    4. '.h' → logprob: -9.501043319702148
    5. 'w' → logprob: -10.751043319702148
    6. ')' → logprob: -11.501043319702148
    7. ',w' → logprob: -11.626043319702148
    8. '	w' → logprob: -12.126043319702148
    9. '```' → logprob: -12.751043319702148
    10. '   ' → logprob: -13.876043319702148

Token 51: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02324908785521984
    2. '))' → logprob: -3.7732491493225098
    3. ')
' → logprob: -13.648248672485352
    4. ')))' → logprob: -13.648248672485352
    5. ' )' → logprob: -14.398248672485352
    6. '       ' → logprob: -14.648248672485352
    7. '   ' → logprob: -16.39824867248535
    8. ' ))' → logprob: -16.64824867248535
    9. '`)' → logprob: -16.89824867248535
    10. '))
' → logprob: -17.52324867248535

Token 52: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5882377028465271
    2. '<|end|>' → logprob: -0.9632377028465271
    3. 'def' → logprob: -3.338237762451172
    4. '   ' → logprob: -4.588237762451172
    5. '<|end|>' → logprob: -5.463237762451172
    6. '.' → logprob: -6.213237762451172
    7. 'class' → logprob: -6.213237762451172
    8. '```' → logprob: -6.463237762451172
    9. '    
' → logprob: -6.588237762451172
    10. ' def' → logprob: -7.338237762451172

Token 53: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6605713963508606
    2. '   ' → logprob: -1.2855713367462158
    3. '    
' → logprob: -2.410571336746216
    4. '<|end|>' → logprob: -3.535571336746216
    5. ' 
' → logprob: -4.035571575164795
    6. '\' → logprob: -4.660571575164795
    7. 'd' → logprob: -4.660571575164795
    8. 'n' → logprob: -4.660571575164795
    9. '
' → logprob: -4.660571575164795
    10. '  
' → logprob: -4.910571575164795

Token 54: ' __' (ID: 2516)
  Prédit: ' area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.10681197792291641
    2. ' space' → logprob: -3.356812000274658
    3. ' ' → logprob: -3.731812000274658
    4. ' is' → logprob: -4.231812000274658
    5. ' _' → logprob: -4.481812000274658
    6. ' __' → logprob: -4.606812000274658
    7. 'area' → logprob: -5.981812000274658
    8. ' equal' → logprob: -7.356812000274658
    9. ' equals' → logprob: -7.606812000274658
    10. '_area' → logprob: -7.606812000274658

Token 55: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0017035098280757666
    2. 'e' → logprob: -6.62670373916626
    3. 'lt' → logprob: -8.751703262329102
    4. 'q' → logprob: -9.001703262329102
    5. 'i' → logprob: -10.251703262329102
    6. 'repr' → logprob: -10.626703262329102
    7. 'le' → logprob: -11.751703262329102
    8. 'init' → logprob: -12.376703262329102
    9. '==' → logprob: -12.626703262329102
    10. 'a' → logprob: -12.626703262329102

Token 56: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13591443002223969
    2. '__(' → logprob: -2.1359143257141113
    3. '_' → logprob: -4.760914325714111
    4. '(' → logprob: -8.26091480255127
    5. '___' → logprob: -9.76091480255127
    6. '__((' → logprob: -10.63591480255127
    7. '_(' → logprob: -11.01091480255127
    8. '(self' → logprob: -11.51091480255127
    9. '__(
' → logprob: -11.51091480255127
    10. '__('' → logprob: -12.76091480255127

Token 57: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.827200897736475e-05
    2. ' self' → logprob: -9.750078201293945
    3. ' ' → logprob: -11.625078201293945
    4. 's' → logprob: -12.500078201293945
    5. 'other' → logprob: -12.750078201293945
    6. 'o' → logprob: -13.375078201293945
    7. ')' → logprob: -13.625078201293945
    8. '   ' → logprob: -14.500078201293945
    9. 'sel' → logprob: -14.750078201293945
    10. '0' → logprob: -15.375078201293945

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09313230961561203
    2. ')' → logprob: -2.843132257461548
    3. ' ,' → logprob: -3.843132257461548
    4. '<|end|>' → logprob: -5.593132495880127
    5. ' ' → logprob: -5.843132495880127
    6. ' )' → logprob: -7.093132495880127
    7. 'self' → logprob: -7.218132495880127
    8. '(' → logprob: -8.218132019042969
    9. ' self' → logprob: -8.718132019042969
    10. ')(' → logprob: -9.218132019042969

Token 59: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.4741763472557068
    2. 'other' → logprob: -0.9741763472557068
    3. ' o' → logprob: -9.474176406860352
    4. 'o' → logprob: -11.099176406860352
    5. ' oth' → logprob: -12.349176406860352
    6. 'oth' → logprob: -14.349176406860352
    7. 'self' → logprob: -14.349176406860352
    8. 'Other' → logprob: -14.474176406860352
    9. 'othe' → logprob: -15.099176406860352
    10. '(other' → logprob: -15.099176406860352

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10212234407663345
    2. ')' → logprob: -2.3521223068237305
    3. ' ):' → logprob: -6.6021223068237305
    4. ' )' → logprob: -7.9771223068237305
    5. ':' → logprob: -9.35212230682373
    6. ',' → logprob: -9.47712230682373
    7. '):
' → logprob: -10.60212230682373
    8. '   ' → logprob: -12.60212230682373
    9. ' ' → logprob: -12.72712230682373
    10. '),' → logprob: -12.97712230682373

Token 61: '       ' (ID: 309)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8452825546264648
    2. ' isinstance' → logprob: -1.0952825546264648
    3. ' (' → logprob: -1.9702825546264648
    4. 'self' → logprob: -3.095282554626465
    5. '       ' → logprob: -4.845282554626465
    6. '   ' → logprob: -4.970282554626465
    7. '<|end|>' → logprob: -4.970282554626465
    8. ' other' → logprob: -4.970282554626465
    9. ' ' → logprob: -5.345282554626465
    10. ' and' → logprob: -5.720282554626465

Token 62: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.030498171225190163
    2. 'if' (adapté à ' if') → logprob: -4.655498027801514
    3. 'return' → logprob: -4.905498027801514
    4. 'is' → logprob: -4.905498027801514
    5. ' self' → logprob: -6.155498027801514
    6. ' isinstance' → logprob: -6.655498027801514
    7. '       ' → logprob: -7.030498027801514
    8. 'other' → logprob: -7.780498027801514
    9. '(self' → logprob: -8.030498504638672
    10. ' if' → logprob: -8.280498504638672

Token 63: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.09414880722761154
    2. ' isinstance' → logprob: -2.594148874282837
    3. 'not' → logprob: -4.344148635864258
    4. ' self' → logprob: -6.219148635864258
    5. 'self' → logprob: -9.094148635864258
    6. ' (' → logprob: -10.844148635864258
    7. ' ' → logprob: -11.219148635864258
    8. ' ' → logprob: -11.969148635864258
    9. ' type' → logprob: -11.969148635864258
    10. 'is' → logprob: -12.719148635864258

Token 64: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.00020580526324920356
    2. 'is' → logprob: -8.500205993652344
    3. ' hasattr' → logprob: -13.125205993652344
    4. ' is' → logprob: -15.375205993652344
    5. ' ' → logprob: -18.000205993652344
    6. 'iss' → logprob: -18.750205993652344
    7. '(is' → logprob: -18.875205993652344
    8. ' iss' → logprob: -19.125205993652344
    9. ' isin' → logprob: -20.000205993652344
    10. '  ' → logprob: -20.250205993652344

Token 65: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0005075189401395619
    2. '(' → logprob: -7.625507354736328
    3. 'other' → logprob: -11.250507354736328
    4. ' (' → logprob: -12.750507354736328
    5. ' other' → logprob: -13.125507354736328
    6. '(object' → logprob: -14.250507354736328
    7. '(
' → logprob: -15.000507354736328
    8. '(o' → logprob: -15.375507354736328
    9. '.other' → logprob: -16.625507354736328
    10. '<|end|>' → logprob: -16.750507354736328

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004834617720916867
    2. ' ,' → logprob: -8.250483512878418
    3. '(other' → logprob: -8.750483512878418
    4. 'other' → logprob: -9.875483512878418
    5. '(self' → logprob: -12.125483512878418
    6. '(' → logprob: -12.500483512878418
    7. 'self' → logprob: -13.750483512878418
    8. ',self' → logprob: -14.375483512878418
    9. ' other' → logprob: -14.625483512878418
    10. 'Other' → logprob: -15.000483512878418

Token 67: ' Rectangle' (ID: 38728)
  Prédit: ' Rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Rectangle' → logprob: -0.00325222359970212
    2. 'Rectangle' → logprob: -5.753252029418945
    3. ' ' → logprob: -10.003252029418945
    4. ' Rect' → logprob: -11.253252029418945
    5. '(Rect' → logprob: -12.253252029418945
    6. ' ' → logprob: -12.378252029418945
    7. ' self' → logprob: -12.503252029418945
    8. 'Rect' → logprob: -13.878252029418945
    9. '.Rectangle' → logprob: -14.378252029418945
    10. 'self' → logprob: -14.378252029418945

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021556954830884933
    2. '):
' → logprob: -3.896556854248047
    3. ')' → logprob: -7.271556854248047
    4. ' ):' → logprob: -8.146556854248047
    5. '):
' → logprob: -11.646556854248047
    6. ':' → logprob: -11.896556854248047
    7. '   ' → logprob: -12.271556854248047
    8. '       ' → logprob: -12.896556854248047
    9. ' ):
' → logprob: -12.896556854248047
    10. '):

' → logprob: -13.021556854248047

Token 69: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6127263307571411
    2. '           ' → logprob: -1.2377263307571411
    3. ':return' → logprob: -2.7377262115478516
    4. ':
' → logprob: -2.8627262115478516
    5. '):' → logprob: -3.7377262115478516
    6. '):
' → logprob: -5.487726211547852
    7. '
' → logprob: -5.862726211547852
    8. '       ' → logprob: -5.987726211547852
    9. '\n' → logprob: -5.987726211547852
    10. ' return' → logprob: -6.237726211547852

Token 70: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2125757783651352
    2. '           ' → logprob: -2.087575674057007
    3. 'return' (adapté à ' return') → logprob: -2.712575674057007
    4. ':return' → logprob: -7.962575912475586
    5. '       ' → logprob: -8.337575912475586
    6. ' ' → logprob: -8.587575912475586
    7. '   ' → logprob: -9.337575912475586
    8. ' ' → logprob: -9.712575912475586
    9. ' 
' → logprob: -10.212575912475586
    10. '        ' → logprob: -10.337575912475586

Token 71: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.13142310082912445
    2. ' False' → logprob: -2.131422996520996
    3. 'Not' → logprob: -5.881422996520996
    4. ' Not' → logprob: -6.381422996520996
    5. '   ' → logprob: -14.381422996520996
    6. '(False' → logprob: -14.381422996520996
    7. '    ' → logprob: -15.381422996520996
    8. '=False' → logprob: -17.131423950195312
    9. '  ' → logprob: -17.756423950195312
    10. 'F' → logprob: -18.006423950195312

Token 72: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0290974248200655
    2. '       ' → logprob: -4.404097557067871
    3. '<|end|>' → logprob: -4.904097557067871
    4. '        
' → logprob: -5.529097557067871
    5. '\n' → logprob: -6.654097557067871
    6. ' 
' → logprob: -6.779097557067871
    7. '  
' → logprob: -7.154097557067871
    8. '' → logprob: -7.529097557067871
    9. '

' → logprob: -7.779097557067871
    10. '    
' → logprob: -8.029097557067871

Token 73: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04433705285191536
    2. '       ' → logprob: -3.669337034225464
    3. '\n' → logprob: -4.794337272644043
    4. '<|end|>' → logprob: -4.919337272644043
    5. '        
' → logprob: -6.669337272644043
    6. '' → logprob: -8.669337272644043
    7. '    
' → logprob: -8.669337272644043
    8. '  
' → logprob: -9.044337272644043
    9. '\' → logprob: -9.169337272644043
    10. '

' → logprob: -9.419337272644043

Token 74: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9400947690010071
    2. '
' → logprob: -1.0650947093963623
    3. 'return' (adapté à ' return') → logprob: -1.4400947093963623
    4. ' return' → logprob: -3.8150947093963623
    5. '        
' → logprob: -5.690094947814941
    6. '```' → logprob: -7.565094947814941
    7. '  
' → logprob: -7.940094947814941
    8. '\n' → logprob: -8.190094947814941
    9. '    
' → logprob: -8.190094947814941
    10. ' 
' → logprob: -8.315094947814941

Token 75: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.38687434792518616
    2. 'self' → logprob: -1.1368743181228638
    3. '(self' → logprob: -12.886874198913574
    4. '	self' → logprob: -15.136874198913574
    5. 'Self' → logprob: -15.636874198913574
    6. ' ' → logprob: -16.13687515258789
    7. '   ' → logprob: -16.63687515258789
    8. '[self' → logprob: -17.13687515258789
    9. '_self' → logprob: -17.13687515258789
    10. '$self' → logprob: -17.63687515258789

Token 76: '.normal' (ID: 41266)
  Prédit: '.normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.normal' → logprob: -2.3557529857498594e-05
    2. '.normalize' → logprob: -11.50002384185791
    3. '.norm' → logprob: -12.12502384185791
    4. '.' → logprob: -12.25002384185791
    5. ' .' → logprob: -13.75002384185791
    6. 'normalized' → logprob: -14.12502384185791
    7. '.h' → logprob: -14.62502384185791
    8. '.n' → logprob: -14.62502384185791
    9. '.Normal' → logprob: -16.125022888183594
    10. '   ' → logprob: -16.375022888183594

Token 77: 'ized' (ID: 2110)
  Prédit: 'ized'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ized' → logprob: -3.054500666621607e-06
    2. 'ize' → logprob: -12.87500286102295
    3. ' ' → logprob: -14.87500286102295
    4. '   ' → logprob: -17.625003814697266
    5. 'ixed' → logprob: -17.750003814697266
    6. 'iz' → logprob: -18.000003814697266
    7. 'IZED' → logprob: -18.250003814697266
    8. '()' → logprob: -18.750003814697266
    9. '```' → logprob: -18.875003814697266
    10. 'azed' → logprob: -20.750003814697266

Token 78: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.644463479053229e-05
    2. '()==' → logprob: -10.000046730041504
    3. '`()' → logprob: -14.250046730041504
    4. ' ()' → logprob: -15.750046730041504
    5. '()
' → logprob: -16.875045776367188
    6. '（）' → logprob: -17.875045776367188
    7. ']()' → logprob: -18.125045776367188
    8. '()

' → logprob: -18.500045776367188
    9. '()`' → logprob: -18.625045776367188
    10. '()!=' → logprob: -18.875045776367188

Token 79: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.13008995354175568
    2. ' ==' → logprob: -2.1300899982452393
    3. '()' → logprob: -6.25508975982666
    4. '()==' → logprob: -6.75508975982666
    5. '=' → logprob: -10.00508975982666
    6. ')' → logprob: -11.00508975982666
    7. ')==' → logprob: -12.13008975982666
    8. ' ()' → logprob: -13.50508975982666
    9. '==
' → logprob: -14.25508975982666
    10. ' =' → logprob: -14.63008975982666

Token 80: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.47407931089401245
    2. 'other' → logprob: -0.9740793108940125
    3. '(other' → logprob: -13.099079132080078
    4. '.other' → logprob: -15.974079132080078
    5. ' oth' → logprob: -16.474079132080078
    6. 'othe' → logprob: -17.474079132080078
    7. 'Other' → logprob: -17.724079132080078
    8. 'oth' → logprob: -17.974079132080078
    9. 'o' → logprob: -18.099079132080078
    10. '_other' → logprob: -18.224079132080078

Token 81: '.normal' (ID: 41266)
  Prédit: '.normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.normal' → logprob: -5.2524021157296374e-05
    2. '.' → logprob: -9.875052452087402
    3. ' .' → logprob: -14.500052452087402
    4. 'normalized' → logprob: -15.250052452087402
    5. '.normalize' → logprob: -15.750052452087402
    6. '.norm' → logprob: -16.87505340576172
    7. '(normal' → logprob: -17.50005340576172
    8. '.other' → logprob: -18.12505340576172
    9. ').' → logprob: -18.50005340576172
    10. '.Normal' → logprob: -18.62505340576172

Token 82: 'ized' (ID: 2110)
  Prédit: 'ized'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ized' → logprob: -5.538490950129926e-05
    2. 'ize' → logprob: -10.375055313110352
    3. ' ' → logprob: -10.750055313110352
    4. 'al' → logprob: -14.250055313110352
    5. 'iz' → logprob: -14.250055313110352
    6. 'azed' → logprob: -14.375055313110352
    7. '```' → logprob: -15.375055313110352
    8. 'ixed' → logprob: -15.750055313110352
    9. 'ormal' → logprob: -15.750055313110352
    10. '   ' → logprob: -16.25005531311035

Token 83: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.8444881536415778e-05
    2. ' ()' → logprob: -11.000028610229492
    3. '(' → logprob: -11.750028610229492
    4. '()`' → logprob: -13.875028610229492
    5. '`()' → logprob: -13.875028610229492
    6. '()
' → logprob: -14.500028610229492
    7. '()(' → logprob: -14.875028610229492
    8. '()

' → logprob: -15.500028610229492
    9. '（）' → logprob: -15.750028610229492
    10. '().__' → logprob: -16.125028610229492

Token 84: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12757626175880432
    2. 'def' (adapté à ' def') → logprob: -3.0025763511657715
    3. '    
' → logprob: -3.5025763511657715
    4. '
' → logprob: -4.1275763511657715
    5. '<|end|>' → logprob: -4.1275763511657715
    6. ' ' → logprob: -5.7525763511657715
    7. '  
' → logprob: -7.0025763511657715
    8. ' 
' → logprob: -7.2525763511657715
    9. ' def' → logprob: -7.3775763511657715
    10. '   
' → logprob: -7.7525763511657715

Token 86: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.055929943919181824
    2. ' ' → logprob: -3.0559298992156982
    3. ' ' → logprob: -5.180930137634277
    4. ' _' → logprob: -7.055930137634277
    5. ' <' → logprob: -8.430930137634277
    6. '__' → logprob: -8.930930137634277
    7. '_' → logprob: -9.055930137634277
    8. ' ```' → logprob: -9.305930137634277
    9. ' space' → logprob: -9.680930137634277
    10. ' `' → logprob: -9.805930137634277

Token 87: 'hash' (ID: 16909)
  Prédit: 'hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.10051202028989792
    2. 'lt' → logprob: -2.3505120277404785
    3. 'ne' → logprob: -8.22551155090332
    4. 'repr' → logprob: -10.60051155090332
    5. 'gt' → logprob: -11.97551155090332
    6. 'le' → logprob: -13.60051155090332
    7. 'str' → logprob: -13.85051155090332
    8. 'ge' → logprob: -13.97551155090332
    9. 'ha' → logprob: -14.10051155090332
    10. 'add' → logprob: -14.10051155090332

Token 88: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7803292274475098
    2. '(self' → logprob: -0.7803292274475098
    3. '__(' → logprob: -2.5303292274475098
    4. ')(' → logprob: -5.78032922744751
    5. ' (' → logprob: -8.405328750610352
    6. '   ' → logprob: -9.030328750610352
    7. '```' → logprob: -9.280328750610352
    8. '_(' → logprob: -9.655328750610352
    9. ')' → logprob: -9.780328750610352
    10. ' ' → logprob: -9.905328750610352

Token 89: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.5048530030981055e-06
    2. ' self' → logprob: -13.875001907348633
    3. ')' → logprob: -15.250001907348633
    4. 's' → logprob: -15.750001907348633
    5. '   ' → logprob: -16.000001907348633
    6. ' ' → logprob: -17.375001907348633
    7. '       ' → logprob: -19.375001907348633
    8. '0' → logprob: -19.875001907348633
    9. '(self' → logprob: -20.125001907348633
    10. 'sel' → logprob: -20.125001907348633

Token 90: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07494936883449554
    2. ',' → logprob: -2.699949264526367
    3. ')' → logprob: -5.449949264526367
    4. '   ' → logprob: -8.699949264526367
    5. '):
' → logprob: -8.699949264526367
    6. ':' → logprob: -9.199949264526367
    7. 'self' → logprob: -9.449949264526367
    8. '       ' → logprob: -9.824949264526367
    9. ' ):' → logprob: -10.074949264526367
    10. ' ' → logprob: -10.199949264526367

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006193030625581741
    2. '   ' → logprob: -5.881193161010742
    3. ' return' → logprob: -5.881193161010742
    4. '
' → logprob: -9.131193161010742
    5. 'return' → logprob: -9.131193161010742
    6. '    
' → logprob: -9.256193161010742
    7. '    ' → logprob: -9.631193161010742
    8. ' 
' → logprob: -9.756193161010742
    9. ' hash' → logprob: -9.756193161010742
    10. '      ' → logprob: -10.256193161010742

Token 92: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21682427823543549
    2. ' return' → logprob: -2.3418242931365967
    3. '   ' → logprob: -2.4668242931365967
    4. 'return' (adapté à ' return') → logprob: -4.466824054718018
    5. '
' → logprob: -6.716824054718018
    6. '        
' → logprob: -7.716824054718018
    7. '    
' → logprob: -7.841824054718018
    8. '     ' → logprob: -9.716824531555176
    9. ' 
' → logprob: -9.716824531555176
    10. '```' → logprob: -9.716824531555176

Token 93: ' hash' (ID: 10691)
  Prédit: ' hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hash' → logprob: -0.023341214284300804
    2. 'hash' → logprob: -3.773341178894043
    3. '   ' → logprob: -9.648341178894043
    4. ' ' → logprob: -11.148341178894043
    5. ' ha' → logprob: -12.148341178894043
    6. '	hash' → logprob: -12.148341178894043
    7. '(hash' → logprob: -13.148341178894043
    8. ' h' → logprob: -13.898341178894043
    9. '  ' → logprob: -14.148341178894043
    10. 'ha' → logprob: -14.648341178894043

Token 94: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2542766034603119
    2. '(' → logprob: -1.5042766332626343
    3. '((' → logprob: -6.254276752471924
    4. ' (' → logprob: -8.129276275634766
    5. '(s' → logprob: -9.129276275634766
    6. '(
' → logprob: -11.379276275634766
    7. '(tuple' → logprob: -12.879276275634766
    8. '(this' → logprob: -13.129276275634766
    9. '(

' → logprob: -13.504276275634766
    10. '(sel' → logprob: -15.129276275634766

Token 95: '.normal' (ID: 41266)
  Prédit: '.normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.normal' → logprob: -3.810037742368877e-05
    2. '.' → logprob: -10.500038146972656
    3. '.norm' → logprob: -12.250038146972656
    4. ' .' → logprob: -12.750038146972656
    5. '.normalize' → logprob: -13.250038146972656
    6. '.n' → logprob: -14.875038146972656
    7. ').' → logprob: -15.250038146972656
    8. '.Normal' → logprob: -15.500038146972656
    9. ')' → logprob: -16.375038146972656
    10. 'normalized' → logprob: -16.875038146972656

Token 96: 'ized' (ID: 2110)
  Prédit: 'ized'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ized' → logprob: -1.7120533811976202e-05
    2. 'ize' → logprob: -11.125017166137695
    3. 'al' → logprob: -13.250017166137695
    4. ' ' → logprob: -16.125017166137695
    5. 'ormal' → logprob: -16.375017166137695
    6. '(' → logprob: -16.750017166137695
    7. '()' → logprob: -17.000017166137695
    8. 'ixed' → logprob: -17.125017166137695
    9. '(self' → logprob: -17.375017166137695
    10. 'IZED' → logprob: -17.375017166137695

Token 97: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0789012461900711
    2. '()' → logprob: -2.5789012908935547
    3. ' ())' → logprob: -12.453901290893555
    4. ')' → logprob: -12.828901290893555
    5. '()
' → logprob: -13.078901290893555
    6. '())
' → logprob: -13.453901290893555
    7. '()))' → logprob: -14.578901290893555
    8. '();)' → logprob: -14.828901290893555
    9. '()]' → logprob: -15.703901290893555
    10. '())

' → logprob: -16.203901290893555

Token 98: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5569558143615723
    2. 'r' → logprob: -1.6819558143615723
    3. '#' → logprob: -2.5569558143615723
    4. '[' → logprob: -3.1819558143615723
    5. '.' → logprob: -3.4319558143615723
    6. '<|end|>' → logprob: -4.181955814361572
    7. '[
' → logprob: -4.681955814361572
    8. ' 
' → logprob: -4.681955814361572
    9. '*' → logprob: -4.931955814361572
    10. 'n' → logprob: -5.181955814361572

Token 99: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.33574411273002625
    2. '   ' → logprob: -1.3357441425323486
    3. 'class' → logprob: -4.3357439041137695
    4. '
' → logprob: -5.5857439041137695
    5. 'r' → logprob: -6.9607439041137695
    6. ' def' → logprob: -6.9607439041137695
    7. '    
' → logprob: -7.4607439041137695
    8. 'd' → logprob: -7.4607439041137695
    9. '#' → logprob: -7.8357439041137695
    10. '@' → logprob: -7.9607439041137695

Token 100: ' __' (ID: 2516)
  Prédit: ' area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.010891832411289215
    2. 'area' → logprob: -4.760891914367676
    3. ' space' → logprob: -7.010891914367676
    4. ' ' → logprob: -7.135891914367676
    5. '_area' → logprob: -8.510891914367676
    6. ' is' → logprob: -9.010891914367676
    7. ' calculate' → logprob: -9.385891914367676
    8. ' square' → logprob: -9.885891914367676
    9. ' def' → logprob: -10.760891914367676
    10. ' are' → logprob: -11.510891914367676

Token 101: 'repr' (ID: 67002)
  Prédit: 'lt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: -0.00976387970149517
    2. 'repr' → logprob: -4.884763717651367
    3. 'str' → logprob: -6.509763717651367
    4. 'le' → logprob: -7.384763717651367
    5. 'l' → logprob: -10.759763717651367
    6. 'len' → logprob: -11.509763717651367
    7. 'init' → logprob: -12.634763717651367
    8. 'gt' → logprob: -12.634763717651367
    9. 'add' → logprob: -13.509763717651367
    10. 'eq' → logprob: -13.759763717651367

Token 102: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.3154924213886261
    2. '__' → logprob: -1.3154923915863037
    3. '__(
' → logprob: -6.440492630004883
    4. '__('' → logprob: -7.940492630004883
    5. '__((' → logprob: -9.065492630004883
    6. '_' → logprob: -9.815492630004883
    7. '__("' → logprob: -9.815492630004883
    8. '(' → logprob: -10.815492630004883
    9. '___' → logprob: -11.065492630004883
    10. '__(*' → logprob: -11.815492630004883

Token 103: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.512236498361744e-07
    2. ' self' → logprob: -15.000000953674316
    3. ')' → logprob: -16.0
    4. 'sel' → logprob: -17.125
    5. 'Self' → logprob: -18.25
    6. 's' → logprob: -18.75
    7. '
' → logprob: -19.5
    8. '(self' → logprob: -19.5
    9. 'se' → logprob: -19.875
    10. '   ' → logprob: -20.375

Token 104: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4739263951778412
    2. '):' → logprob: -1.0989264249801636
    3. '__' → logprob: -3.348926305770874
    4. '__:' → logprob: -6.223926544189453
    5. '__)' → logprob: -6.348926544189453
    6. 'self' → logprob: -6.348926544189453
    7. '_' → logprob: -6.848926544189453
    8. ',' → logprob: -7.223926544189453
    9. ':' → logprob: -8.098926544189453
    10. ' ):' → logprob: -8.348926544189453

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00296914204955101
    2. 'self' → logprob: -6.002969264984131
    3. '   ' → logprob: -8.752968788146973
    4. ' self' → logprob: -9.002968788146973
    5. 'f' → logprob: -9.877968788146973
    6. ' f' → logprob: -10.127968788146973
    7. 'return' → logprob: -10.377968788146973
    8. '(self' → logprob: -10.502968788146973
    9. ''' → logprob: -10.877968788146973
    10. ' return' → logprob: -11.377968788146973

Token 106: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.9090113639831543
    2. 'return' (adapté à ' return') → logprob: -1.4090113639831543
    3. ' f' → logprob: -1.6590113639831543
    4. '       ' → logprob: -2.4090113639831543
    5. ' return' → logprob: -2.6590113639831543
    6. '   ' → logprob: -6.034011363983154
    7. '    ' → logprob: -11.659011840820312
    8. ' ' → logprob: -11.784011840820312
    9. '           ' → logprob: -11.909011840820312
    10. ''f' → logprob: -12.284011840820312

Token 107: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6931638121604919
    2. ' f' → logprob: -0.6931638121604919
    3. '   ' → logprob: -11.443163871765137
    4. ''f' → logprob: -13.193163871765137
    5. ' ' → logprob: -13.568163871765137
    6. '       ' → logprob: -13.943163871765137
    7. '	f' → logprob: -14.068163871765137
    8. '"' → logprob: -15.318163871765137
    9. '    ' → logprob: -15.568163871765137
    10. ''' → logprob: -15.818163871765137

Token 108: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02049797959625721
    2. ''Re' → logprob: -4.270497798919678
    3. ''' → logprob: -5.270497798919678
    4. 'f' → logprob: -7.520497798919678
    5. '"<' → logprob: -8.020498275756836
    6. '(Rect' → logprob: -9.270498275756836
    7. ''f' → logprob: -9.645498275756836
    8. 'Rectangle' → logprob: -10.020498275756836
    9. '"class' → logprob: -10.520498275756836
    10. ''<' → logprob: -10.645498275756836

Token 109: 'Rectangle' (ID: 34888)
  Prédit: 'Rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rectangle' → logprob: -0.00023393364972434938
    2. '"' → logprob: -9.12523365020752
    3. 'Rect' → logprob: -9.12523365020752
    4. ''Re' → logprob: -12.25023365020752
    5. ' Rectangle' → logprob: -13.00023365020752
    6. ''' → logprob: -13.00023365020752
    7. '.Rectangle' → logprob: -13.50023365020752
    8. 'Rec' → logprob: -13.75023365020752
    9. 'Re' → logprob: -13.75023365020752
    10. '(Rect' → logprob: -13.87523365020752

Token 110: '{' (ID: 90)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.3577656149864197
    2. '(' → logprob: -1.6077656745910645
    3. '(h' → logprob: -2.3577656745910645
    4. '(height' → logprob: -5.8577656745910645
    5. '{' → logprob: -6.3577656745910645
    6. '(self' → logprob: -7.6077656745910645
    7. '(width' → logprob: -8.357765197753906
    8. '(f' → logprob: -9.107765197753906
    9. '(rect' → logprob: -9.482765197753906
    10. '(
' → logprob: -9.607765197753906

Token 111: 'self' (ID: 1156)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.026748288422822952
    2. '(' → logprob: -3.6517481803894043
    3. 'self' → logprob: -8.776748657226562
    4. '{' → logprob: -9.401748657226562
    5. '((' → logprob: -9.651748657226562
    6. '(*' → logprob: -9.776748657226562
    7. '({' → logprob: -9.901748657226562
    8. '(normal' → logprob: -11.526748657226562
    9. '(tuple' → logprob: -11.651748657226562
    10. '}' → logprob: -11.901748657226562

Token 112: '.normal' (ID: 41266)
  Prédit: '.normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.normal' → logprob: -0.0005812693270854652
    2. '.' → logprob: -7.50058126449585
    3. 'normalized' → logprob: -11.750581741333008
    4. '(.' → logprob: -11.875581741333008
    5. '(normal' → logprob: -12.000581741333008
    6. ' .' → logprob: -13.250581741333008
    7. '.n' → logprob: -13.500581741333008
    8. '.norm' → logprob: -13.625581741333008
    9. '.
' → logprob: -13.750581741333008
    10. '.(' → logprob: -14.500581741333008

Token 113: 'ized' (ID: 2110)
  Prédit: 'ized'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ized' → logprob: -0.013539111241698265
    2. 'al' → logprob: -5.1385393142700195
    3. 'ated' → logprob: -5.2635393142700195
    4. 'zed' → logprob: -7.3885393142700195
    5. '   ' → logprob: -7.8885393142700195
    6. 'ed' → logprob: -8.26353931427002
    7. 'itized' → logprob: -8.26353931427002
    8. '(' → logprob: -8.38853931427002
    9. '(self' → logprob: -8.63853931427002
    10. 'azed' → logprob: -8.88853931427002

Token 114: '()' (ID: 416)
  Prédit: '()}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()}' → logprob: -0.009813938289880753
    2. '()' → logprob: -4.6348137855529785
    3. '(' → logprob: -10.759814262390137
    4. '()"' → logprob: -11.009814262390137
    5. '}' → logprob: -12.134814262390137
    6. '())' → logprob: -12.259814262390137
    7. '()}
' → logprob: -12.509814262390137
    8. ' ()' → logprob: -13.134814262390137
    9. '()]' → logprob: -13.759814262390137
    10. '（）' → logprob: -14.509814262390137

Token 115: '}"' (ID: 21503)
  Prédit: '}"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}"' → logprob: -0.006832825485616922
    2. '}' → logprob: -5.006832599639893
    3. ')"' → logprob: -9.50683307647705
    4. '}")' → logprob: -11.13183307647705
    5. '"}' → logprob: -11.63183307647705
    6. ' }' → logprob: -11.88183307647705
    7. '"' → logprob: -11.88183307647705
    8. '}"
' → logprob: -12.88183307647705
    9. '```' → logprob: -13.63183307647705
    10. '()' → logprob: -14.38183307647705

Token 116: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05601663514971733
    2. '<|end|>' → logprob: -3.306016683578491
    3. 'r' → logprob: -5.306016445159912
    4. ':' → logprob: -6.431016445159912
    5. ' 
' → logprob: -6.556016445159912
    6. '

' → logprob: -6.556016445159912
    7. '#' → logprob: -6.556016445159912
    8. '.' → logprob: -6.931016445159912
    9. '  
' → logprob: -7.181016445159912
    10. 'n' → logprob: -7.181016445159912

Token 117: 'class' (ID: 1444)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6550669074058533
    2. 'class' → logprob: -1.530066967010498
    3. 'c' → logprob: -2.655066967010498
    4. 'd' → logprob: -2.905066967010498
    5. 'def' → logprob: -3.030066967010498
    6. '[' → logprob: -3.405066967010498
    7. 'a' → logprob: -4.155066967010498
    8. '#' → logprob: -4.280066967010498
    9. 'n' → logprob: -4.905066967010498
    10. '
' → logprob: -5.030066967010498

Token 118: ' Rect' (ID: 22765)
  Prédit: ' Square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Square' → logprob: -0.25352558493614197
    2. ' ' → logprob: -1.7535256147384644
    3. ' Rectangle' → logprob: -4.128525733947754
    4. 'Square' → logprob: -4.128525733947754
    5. ' Circle' → logprob: -5.003525733947754
    6. ' Cube' → logprob: -5.628525733947754
    7. ' ' → logprob: -5.753525733947754
    8. ' Box' → logprob: -6.503525733947754
    9. ' square' → logprob: -7.003525733947754
    10. ' Rect' → logprob: -7.253525733947754

Token 119: 'angles' (ID: 34011)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.01795969158411026
    2. 'Set' → logprob: -4.1429595947265625
    3. 'Collection' → logprob: -7.8929595947265625
    4. 'angles' → logprob: -7.8929595947265625
    5. 'set' → logprob: -8.517959594726562
    6. 'Angle' → logprob: -8.642959594726562
    7. 'Group' → logprob: -8.892959594726562
    8. 'Pair' → logprob: -9.392959594726562
    9. 'Container' → logprob: -9.392959594726562
    10. 'List' → logprob: -9.517959594726562

Token 120: 'Collection' (ID: 4160)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008764470112510026
    2. ':
' → logprob: -7.500876426696777
    3. 'List' → logprob: -9.375876426696777
    4. '(List' → logprob: -10.000876426696777
    5. '(list' → logprob: -10.000876426696777
    6. '[List' → logprob: -10.625876426696777
    7. ':list' → logprob: -10.750876426696777
    8. 'Set' → logprob: -10.750876426696777
    9. '(set' → logprob: -11.125876426696777
    10. 'Collection' → logprob: -11.375876426696777

Token 121: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002101606223732233
    2. ':
' → logprob: -6.752101421356201
    3. ' :' → logprob: -7.002101421356201
    4. '(' → logprob: -12.00210189819336
    5. ' :
' → logprob: -12.75210189819336
    6. ':def' → logprob: -12.87710189819336
    7. '():' → logprob: -13.25210189819336
    8. ':

' → logprob: -13.25210189819336
    9. '<|end|>' → logprob: -13.62710189819336
    10. '):' → logprob: -13.62710189819336

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3626653254032135
    2. ' def' → logprob: -2.2376654148101807
    3. '    
' → logprob: -2.4876654148101807
    4. '
' → logprob: -3.2376654148101807
    5. ' 
' → logprob: -3.9876654148101807
    6. '<|end|>' → logprob: -3.9876654148101807
    7. '    ' → logprob: -4.737665176391602
    8. 'def' → logprob: -5.112665176391602
    9. ':' → logprob: -5.237665176391602
    10. '[' → logprob: -5.862665176391602

Token 123: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.052330099046230316
    2. '   ' → logprob: -3.5523300170898438
    3. 'def' (adapté à ' def') → logprob: -3.8023300170898438
    4. '	def' → logprob: -12.052330017089844
    5. ' ' → logprob: -14.302330017089844
    6. '    
' → logprob: -14.427330017089844
    7. ' __' → logprob: -15.677330017089844
    8. '   ' → logprob: -15.927330017089844
    9. '
' → logprob: -16.177330017089844
    10. '    ' → logprob: -16.427330017089844

Token 124: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.09942677617073059
    2. ' ' → logprob: -2.474426746368408
    3. ' _' → logprob: -5.349426746368408
    4. ' ' → logprob: -5.974426746368408
    5. '_' → logprob: -6.474426746368408
    6. '_init' → logprob: -7.724426746368408
    7. '__' → logprob: -7.849426746368408
    8. ' init' → logprob: -8.849427223205566
    9. ' ​' → logprob: -8.974427223205566
    10. ' ‌' → logprob: -9.099427223205566

Token 125: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0006777655798941851
    2. 'i' → logprob: -7.500677585601807
    3. 'ini' → logprob: -9.125678062438965
    4. 'in' → logprob: -11.250678062438965
    5. 'int' → logprob: -13.625678062438965
    6. 'nit' → logprob: -14.875678062438965
    7. 'iter' → logprob: -15.000678062438965
    8. 'innit' → logprob: -15.250678062438965
    9. 'new' → logprob: -16.00067710876465
    10. 'inn' → logprob: -16.12567710876465

Token 126: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.005826060194522142
    2. '__' → logprob: -5.255825996398926
    3. '__(
' → logprob: -7.630825996398926
    4. '(self' → logprob: -9.880825996398926
    5. '__((' → logprob: -10.255825996398926
    6. '_(' → logprob: -11.880825996398926
    7. '(' → logprob: -12.255825996398926
    8. '_' → logprob: -13.255825996398926
    9. '__(*' → logprob: -13.255825996398926
    10. '__[' → logprob: -13.380825996398926

Token 127: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002064852975308895
    2. ')' → logprob: -6.6270647048950195
    3. ' self' → logprob: -7.2520647048950195
    4. '):
' → logprob: -11.37706470489502
    5. '
' → logprob: -12.37706470489502
    6. ' ' → logprob: -12.50206470489502
    7. '   ' → logprob: -13.25206470489502
    8. '  ' → logprob: -13.50206470489502
    9. '[]' → logprob: -13.50206470489502
    10. '0' → logprob: -13.87706470489502

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37052473425865173
    2. '):' → logprob: -1.7455247640609741
    3. 'self' → logprob: -2.6205246448516846
    4. ')' → logprob: -3.4955246448516846
    5. '):
' → logprob: -4.620524883270264
    6. ' ,' → logprob: -4.620524883270264
    7. ' ' → logprob: -5.370524883270264
    8. ' ):' → logprob: -6.120524883270264
    9. ' self' → logprob: -6.495524883270264
    10. '(self' → logprob: -7.120524883270264

Token 129: ' rectangles' (ID: 164265)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.020949281752109528
    2. 'rect' → logprob: -4.645949363708496
    3. ')' → logprob: -5.145949363708496
    4. '):
' → logprob: -5.395949363708496
    5. ' self' → logprob: -7.770949363708496
    6. '   ' → logprob: -9.895949363708496
    7. ' rectangles' → logprob: -9.895949363708496
    8. 'items' → logprob: -10.020949363708496
    9. '):' → logprob: -10.020949363708496
    10. '):

' → logprob: -10.395949363708496

Token 130: '):
' (ID: 1883)
  Prédit: '=None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.06429318338632584
    2. '=' → logprob: -3.564293146133423
    3. '):' → logprob: -3.814293146133423
    4. ':' → logprob: -4.564293384552002
    5. '=[]' → logprob: -6.689293384552002
    6. '):
' → logprob: -8.939292907714844
    7. ')' → logprob: -9.689292907714844
    8. ' =' → logprob: -10.564292907714844
    9. ' ):' → logprob: -11.564292907714844
    10. ')=' → logprob: -12.439292907714844

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021092737093567848
    2. ':' → logprob: -4.146092891693115
    3. '[' → logprob: -6.896092891693115
    4. ',' → logprob: -7.271092891693115
    5. '   ' → logprob: -7.521092891693115
    6. '        
' → logprob: -7.896092891693115
    7. ' self' → logprob: -8.271092414855957
    8. '    ' → logprob: -8.521092414855957
    9. '      ' → logprob: -8.521092414855957
    10. ')' → logprob: -8.521092414855957

Token 132: ' if' (ID: 538)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6211466193199158
    2. 'self' → logprob: -0.8711466193199158
    3. '       ' → logprob: -3.1211466789245605
    4. '   ' → logprob: -9.996146202087402
    5. '	self' → logprob: -10.371146202087402
    6. ' ' → logprob: -11.371146202087402
    7. '[self' → logprob: -14.121146202087402
    8. '      ' → logprob: -14.121146202087402
    9. '(self' → logprob: -14.371146202087402
    10. ' ' → logprob: -14.371146202087402

Token 133: ' len' (ID: 4631)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.22613151371479034
    2. ' rectangles' → logprob: -1.851131558418274
    3. 'not' → logprob: -3.8511314392089844
    4. 'rect' → logprob: -4.476131439208984
    5. ' all' → logprob: -5.476131439208984
    6. ' any' → logprob: -5.601131439208984
    7. ' isinstance' → logprob: -5.726131439208984
    8. 'all' → logprob: -7.476131439208984
    9. ' rect' → logprob: -7.851131439208984
    10. ' len' → logprob: -8.476131439208984

Token 134: '(rect' (ID: 68123)
  Prédit: '(rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rect' → logprob: -0.003488057991489768
    2. '(' → logprob: -5.753488063812256
    3. 'rect' → logprob: -8.253487586975098
    4. '(set' → logprob: -10.628487586975098
    5. ' (' → logprob: -10.753487586975098
    6. ' rectangles' → logprob: -13.628487586975098
    7. '(
' → logprob: -13.878487586975098
    8. '	rect' → logprob: -14.253487586975098
    9. ' rect' → logprob: -14.753487586975098
    10. '(rec' → logprob: -15.628487586975098

Token 135: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -8.006006828509271e-05
    2. 'angle' → logprob: -9.625080108642578
    3. 's' → logprob: -11.875080108642578
    4. 'ang' → logprob: -12.750080108642578
    5. 'rect' → logprob: -14.125080108642578
    6. 'ANGLES' → logprob: -14.250080108642578
    7. '```' → logprob: -14.250080108642578
    8. 'anges' → logprob: -15.125080108642578
    9. '       ' → logprob: -15.125080108642578
    10. '   ' → logprob: -15.250080108642578

Token 136: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0116248968988657
    2. ' )' → logprob: -4.761624813079834
    3. ')==' → logprob: -6.011624813079834
    4. ' ==' → logprob: -7.761624813079834
    5. ')>' → logprob: -9.761625289916992
    6. '==' → logprob: -9.886625289916992
    7. '<|end|>' → logprob: -11.886625289916992
    8. ' ' → logprob: -12.761625289916992
    9. ' >' → logprob: -12.886625289916992
    10. '>' → logprob: -13.386625289916992

Token 137: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02410072460770607
    2. '==' → logprob: -4.7741007804870605
    3. ' >' → logprob: -4.8991007804870605
    4. ' ' → logprob: -5.0241007804870605
    5. ' <' → logprob: -7.6491007804870605
    6. ')' → logprob: -7.6491007804870605
    7. '<|end|>' → logprob: -9.149100303649902
    8. '>' → logprob: -9.274100303649902
    9. ' )' → logprob: -9.649100303649902
    10. ' !=' → logprob: -10.149100303649902

Token 138: ' ' (ID: 220)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -1.095871925354004
    2. 'len' → logprob: -1.345871925354004
    3. ' ' → logprob: -1.345871925354004
    4. '0' → logprob: -1.970871925354004
    5. '2' → logprob: -6.220871925354004
    6. ' sum' → logprob: -6.470871925354004
    7. 'sum' → logprob: -6.970871925354004
    8. '1' → logprob: -8.095871925354004
    9. '4' → logprob: -8.595871925354004
    10. '3' → logprob: -8.970871925354004

Token 139: '6' (ID: 21)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1507616639137268
    2. ' len' → logprob: -2.400761604309082
    3. '0' → logprob: -3.275761604309082
    4. ' ' → logprob: -4.525761604309082
    5. '2' → logprob: -8.400761604309082
    6. '1' → logprob: -8.900761604309082
    7. 'sum' → logprob: -9.650761604309082
    8. '	len' → logprob: -10.275761604309082
    9. '4' → logprob: -10.400761604309082
    10. '

' → logprob: -10.400761604309082

Token 140: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07859484106302261
    2. ' or' → logprob: -2.953594923019409
    3. ' :' → logprob: -4.07859468460083
    4. ' and' → logprob: -5.32859468460083
    5. ':
' → logprob: -6.70359468460083
    6. '):' → logprob: -8.578595161437988
    7. ' :
' → logprob: -9.578595161437988
    8. ' ' → logprob: -9.828595161437988
    9. ' ):' → logprob: -10.203595161437988
    10. 'and' → logprob: -10.703595161437988

Token 141: '           ' (ID: 352)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5658428072929382
    2. ':' → logprob: -1.315842866897583
    3. '           ' → logprob: -2.190842866897583
    4. ' and' → logprob: -3.315842866897583
    5. ':
' → logprob: -4.565842628479004
    6. ' ' → logprob: -6.815842628479004
    7. '            ' → logprob: -7.065842628479004
    8. ' :' → logprob: -7.315842628479004
    9. ' raise' → logprob: -7.440842628479004
    10. '       ' → logprob: -7.690842628479004

Token 142: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.02640526182949543
    2. 'raise' (adapté à ' raise') → logprob: -3.7764053344726562
    3. '	raise' → logprob: -6.151405334472656
    4. '           ' → logprob: -7.026405334472656
    5. '            ' → logprob: -9.776405334472656
    6. '_raise' → logprob: -11.026405334472656
    7. '               ' → logprob: -11.651405334472656
    8. ' ' → logprob: -11.651405334472656
    9. '        ' → logprob: -11.651405334472656
    10. '                ' → logprob: -12.026405334472656

Token 143: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.00030936390976421535
    2. ' ' → logprob: -8.375308990478516
    3. ' Val' → logprob: -9.750308990478516
    4. 'Value' → logprob: -11.250308990478516
    5. ' Va' → logprob: -13.000308990478516
    6. ' ' → logprob: -13.000308990478516
    7. '	Value' → logprob: -13.000308990478516
    8. '(Value' → logprob: -16.000308990478516
    9. ' Assertion' → logprob: -16.125308990478516
    10. '  ' → logprob: -16.250308990478516

Token 144: 'Error' (ID: 2255)
  Prédit: 'rror'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rror' → logprob: -0.10814564675092697
    2. 'Error' → logprob: -2.3581457138061523
    3. 'ror' → logprob: -4.858145713806152
    4. 'r' → logprob: -8.983145713806152
    5. 'rr' → logprob: -11.358145713806152
    6. 'Value' → logprob: -13.483145713806152
    7. 'ro' → logprob: -13.608145713806152
    8. 'error' → logprob: -13.858145713806152
    9. 'or' → logprob: -14.358145713806152
    10. '_error' → logprob: -15.358145713806152

Token 145: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.04929400980472565
    2. '(' → logprob: -3.0492939949035645
    3. '(
' → logprob: -7.5492939949035645
    4. '('' → logprob: -8.674294471740723
    5. '(f' → logprob: -12.549294471740723
    6. '"' → logprob: -12.799294471740723
    7. '       ' → logprob: -13.549294471740723
    8. '(

' → logprob: -14.674294471740723
    9. '(
' → logprob: -15.299294471740723
    10. '   ' → logprob: -15.299294471740723

Token 146: 'Exactly' (ID: 91021)
  Prédit: 'Exactly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Exactly' → logprob: -0.13528653979301453
    2. 'Expected' → logprob: -3.135286569595337
    3. 'Rect' → logprob: -3.510286569595337
    4. ' Exactly' → logprob: -4.260286331176758
    5. 'There' → logprob: -4.885286331176758
    6. 'The' → logprob: -5.385286331176758
    7. 'Must' → logprob: -5.385286331176758
    8. 'A' → logprob: -5.385286331176758
    9. 'rect' → logprob: -5.510286331176758
    10. 'Six' → logprob: -5.635286331176758

Token 147: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010556884109973907
    2. '6' → logprob: -5.135556697845459
    3. ' six' → logprob: -5.385556697845459
    4. 'six' → logprob: -11.010557174682617
    5. '   ' → logprob: -12.010557174682617
    6. '  ' → logprob: -12.385557174682617
    7. ' exactly' → logprob: -12.885557174682617
    8. ' rectangles' → logprob: -13.885557174682617
    9. ' ' → logprob: -14.073057174682617
    10. '    ' → logprob: -14.448057174682617

Token 148: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0007507824921049178
    2. ' ' → logprob: -7.37575101852417
    3. 'six' → logprob: -9.250750541687012
    4. ' six' → logprob: -10.500750541687012
    5. 'rect' → logprob: -15.250750541687012
    6. '   ' → logprob: -16.125751495361328
    7. 'exact' → logprob: -16.375751495361328
    8. '```' → logprob: -16.875751495361328
    9. '六' → logprob: -17.063251495361328
    10. '  ' → logprob: -17.438251495361328

Token 149: ' rectangles' (ID: 164265)
  Prédit: ' rectangles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rectangles' → logprob: -0.012343411333858967
    2. ' ' → logprob: -4.512343406677246
    3. ' rect' → logprob: -7.637343406677246
    4. ' rectangle' → logprob: -7.637343406677246
    5. ' rectangular' → logprob: -8.637343406677246
    6. ' Rect' → logprob: -10.387343406677246
    7. ' Rectangle' → logprob: -10.512343406677246
    8. 'rect' → logprob: -10.512343406677246
    9. ' unique' → logprob: -11.137343406677246
    10. ' squares' → logprob: -11.824843406677246

Token 150: ' must' (ID: 2804)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.03302965313196182
    2. ' must' → logprob: -3.658029556274414
    3. ' required' → logprob: -5.158029556274414
    4. 'required' → logprob: -7.533029556274414
    5. 'must' → logprob: -9.158029556274414
    6. 'are' → logprob: -9.158029556274414
    7. ' ' → logprob: -9.533029556274414
    8. ' is' → logprob: -10.533029556274414
    9. ' objects' → logprob: -10.783029556274414
    10. ')' → logprob: -10.908029556274414

Token 151: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -4.060365608893335e-05
    2. 'be' → logprob: -10.375041007995605
    3. ' provided' → logprob: -12.375041007995605
    4. ' ' → logprob: -13.125041007995605
    5. ' provide' → logprob: -14.125041007995605
    6. '<|end|>' → logprob: -14.250041007995605
    7. ')' → logprob: -14.875041007995605
    8. ' have' → logprob: -15.000041007995605
    9. 'provided' → logprob: -15.125041007995605
    10. ' given' → logprob: -15.375041007995605

Token 152: ' provided' (ID: 5181)
  Prédit: ' provided'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' provided' → logprob: -0.21334807574748993
    2. 'provided' → logprob: -1.7133480310440063
    3. ' passed' → logprob: -4.588347911834717
    4. 'passed' → logprob: -6.713347911834717
    5. ' given' → logprob: -8.213348388671875
    6. ' supplied' → logprob: -8.963348388671875
    7. 'given' → logprob: -10.838348388671875
    8. ' ' → logprob: -11.588348388671875
    9. ' initialized' → logprob: -11.838348388671875
    10. ' added' → logprob: -11.963348388671875

Token 153: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.021844971925020218
    2. '")
' → logprob: -4.021844863891602
    3. '.")' → logprob: -6.396844863891602
    4. ')")' → logprob: -7.021844863891602
    5. ')' → logprob: -7.271844863891602
    6. '!")' → logprob: -9.021844863891602
    7. '.")
' → logprob: -9.521844863891602
    8. ' ")' → logprob: -9.771844863891602
    9. ',' → logprob: -9.771844863891602
    10. '       ' → logprob: -9.896844863891602

Token 154: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0637788325548172
    2. '       ' → logprob: -2.813778877258301
    3. '        
' → logprob: -6.813778877258301
    4. '<|end|>' → logprob: -7.563778877258301
    5. '    
' → logprob: -9.9387788772583
    6. '
' → logprob: -10.0637788772583
    7. '  
' → logprob: -10.3137788772583
    8. ' 
' → logprob: -11.3137788772583
    9. 'self' → logprob: -11.8137788772583
    10. '		
' → logprob: -12.0637788772583

Token 155: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.342817485332489
    2. ' self' → logprob: -1.4678175449371338
    3. 'self' (adapté à ' self') → logprob: -2.842817544937134
    4. '
' → logprob: -7.342817306518555
    5. ' if' → logprob: -8.467817306518555
    6. '        
' → logprob: -8.467817306518555
    7. '   ' → logprob: -8.592817306518555
    8. ' for' → logprob: -9.592817306518555
    9. 'if' → logprob: -10.092817306518555
    10. ' ' → logprob: -10.217817306518555

Token 156: '.rect' (ID: 41088)
  Prédit: '.rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rect' → logprob: -0.011011277325451374
    2. '.' → logprob: -4.886011123657227
    3. ' .' → logprob: -5.886011123657227
    4. '.rectangle' → logprob: -7.761011123657227
    5. 'rect' → logprob: -9.761011123657227
    6. '.Rect' → logprob: -10.261011123657227
    7. ' ' → logprob: -10.636011123657227
    8. ' rectangles' → logprob: -11.261011123657227
    9. '._' → logprob: -11.511011123657227
    10. '	rect' → logprob: -11.511011123657227

Token 157: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.0007735356921330094
    2. 'ang' → logprob: -7.8757734298706055
    3. 's' → logprob: -8.000773429870605
    4. '   ' → logprob: -10.750773429870605
    5. 'angle' → logprob: -11.375773429870605
    6. 'an' → logprob: -11.875773429870605
    7. ' angles' → logprob: -12.625773429870605
    8. '       ' → logprob: -12.750773429870605
    9. '```' → logprob: -12.875773429870605
    10. 'anges' → logprob: -13.125773429870605

Token 158: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694679200649261
    2. '=' → logprob: -2.1269466876983643
    3. '=set' → logprob: -11.001946449279785
    4. ' ' → logprob: -14.376946449279785
    5. 's' → logprob: -14.876946449279785
    6. '.extend' → logprob: -15.251946449279785
    7. ' =[' → logprob: -15.876946449279785
    8. '_set' → logprob: -16.2519474029541
    9. '.set' → logprob: -16.6269474029541
    10. '   ' → logprob: -16.7519474029541

Token 159: ' rectangles' (ID: 164265)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.20233821868896484
    2. '[' → logprob: -2.202338218688965
    3. ' rectangles' → logprob: -3.202338218688965
    4. ' [' → logprob: -4.577338218688965
    5. 'list' → logprob: -4.827338218688965
    6. 'set' → logprob: -5.202338218688965
    7. ' list' → logprob: -6.577338218688965
    8. ' rect' → logprob: -6.577338218688965
    9. ' set' → logprob: -7.077338218688965
    10. '[list' → logprob: -7.077338218688965

Token 160: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1403159648180008
    2. '<|end|>' → logprob: -2.1403160095214844
    3. '

' → logprob: -4.390316009521484
    4. '<|end|>' → logprob: -7.515316009521484
    5. '   ' → logprob: -8.640316009521484
    6. 'def' → logprob: -9.640316009521484
    7. '    
' → logprob: -10.265316009521484
    8. '
    
' → logprob: -11.015316009521484
    9. ' def' → logprob: -11.390316009521484
    10. '


' → logprob: -11.515316009521484

Token 161: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14113152027130127
    2. '<|end|>' → logprob: -2.1411314010620117
    3. 'def' → logprob: -5.141131401062012
    4. '   ' → logprob: -5.641131401062012
    5. '

' → logprob: -5.766131401062012
    6. '<|end|>' → logprob: -7.016131401062012
    7. ' def' → logprob: -7.766131401062012
    8. '    
' → logprob: -8.766131401062012
    9. ' ' → logprob: -11.141131401062012
    10. '  
' → logprob: -11.391131401062012

Token 162: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.003827271983027458
    2. ' def' → logprob: -5.753827095031738
    3. '   ' → logprob: -7.628827095031738
    4. '
' → logprob: -10.128827095031738
    5. '@' → logprob: -10.378827095031738
    6. ' ' → logprob: -10.503827095031738
    7. '@property' → logprob: -10.628827095031738
    8. 'from' → logprob: -11.128827095031738
    9. 'd' → logprob: -11.628827095031738
    10. 'de' → logprob: -11.753827095031738

Token 163: ' normalized' (ID: 59625)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.7536109685897827
    2. ' normalized' → logprob: -1.8786109685897827
    3. ' __' → logprob: -2.5036110877990723
    4. ' count' → logprob: -2.5036110877990723
    5. ' normalize' → logprob: -2.6286110877990723
    6. ' get' → logprob: -2.6286110877990723
    7. ' def' → logprob: -2.8786110877990723
    8. ' has' → logprob: -3.1286110877990723
    9. ' all' → logprob: -3.2536110877990723
    10. ' ' → logprob: -3.6286110877990723

Token 164: '_counts' (ID: 61971)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02173253893852234
    2. '(' → logprob: -3.8967325687408447
    3. '()' → logprob: -7.396732330322266
    4. '(
' → logprob: -8.646732330322266
    5. 'self' → logprob: -9.146732330322266
    6. '(s' → logprob: -9.396732330322266
    7. 's' → logprob: -9.396732330322266
    8. '_rect' → logprob: -10.146732330322266
    9. '()(' → logprob: -10.896732330322266
    10. '_rectangle' → logprob: -11.146732330322266

Token 165: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008307131356559694
    2. '(' → logprob: -7.12583065032959
    3. 'self' → logprob: -11.12583065032959
    4. ' (' → logprob: -12.12583065032959
    5. '   ' → logprob: -13.00083065032959
    6. '(
' → logprob: -13.12583065032959
    7. '(s' → logprob: -14.37583065032959
    8. ' self' → logprob: -14.37583065032959
    9. '=self' → logprob: -15.00083065032959
    10. '	self' → logprob: -16.000831604003906

Token 166: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07850556075572968
    2. '):
' → logprob: -2.953505516052246
    3. ')' → logprob: -4.203505516052246
    4. 'self' → logprob: -5.703505516052246
    5. '(self' → logprob: -5.828505516052246
    6. '   ' → logprob: -7.328505516052246
    7. ' ):' → logprob: -7.453505516052246
    8. '       ' → logprob: -7.953505516052246
    9. '():' → logprob: -9.078505516052246
    10. '()' → logprob: -9.328505516052246

Token 167: '       ' (ID: 309)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.116452157497406
    2. '       ' → logprob: -2.241452217102051
    3. '(' → logprob: -6.241452217102051
    4. 'self' → logprob: -7.491452217102051
    5. ':' → logprob: -8.61645221710205
    6. '():' → logprob: -8.74145221710205
    7. '):
' → logprob: -8.99145221710205
    8. '(
' → logprob: -8.99145221710205
    9. '():
' → logprob: -8.99145221710205
    10. '   ' → logprob: -9.11645221710205

Token 168: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.6547448039054871
    2. '       ' → logprob: -0.9047448039054871
    3. 'count' → logprob: -2.779744863510132
    4. ' counts' → logprob: -5.029744625091553
    5. 'from' → logprob: -5.279744625091553
    6. 'counter' → logprob: -6.404744625091553
    7. ' from' → logprob: -9.029745101928711
    8. '   ' → logprob: -9.779745101928711
    9. 'result' → logprob: -9.779745101928711
    10. 'd' → logprob: -9.904745101928711

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01258628536015749
    2. '=' → logprob: -4.3875861167907715
    3. ' ' → logprob: -10.01258659362793
    4. '   ' → logprob: -11.38758659362793
    5. '()' → logprob: -11.63758659362793
    6. '(' → logprob: -11.88758659362793
    7. '(self' → logprob: -13.88758659362793
    8. '  ' → logprob: -14.38758659362793
    9. 's' → logprob: -14.63758659362793
    10. '	' → logprob: -14.63758659362793

Token 170: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.00022082125360611826
    2. ' {}' → logprob: -8.500221252441406
    3. '{}
' → logprob: -11.000221252441406
    4. '{' → logprob: -15.375221252441406
    5. 'dict' → logprob: -16.250221252441406
    6. '{}

' → logprob: -16.375221252441406
    7. 'default' → logprob: -16.625221252441406
    8. ' defaultdict' → logprob: -17.000221252441406
    9. '={}' → logprob: -17.500221252441406
    10. ' {}
' → logprob: -18.125221252441406

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18424102663993835
    2. '
' → logprob: -1.8092410564422607
    3. ' for' → logprob: -5.934240818023682
    4. '        
' → logprob: -6.934240818023682
    5. '
' → logprob: -8.55924129486084
    6. ' 
' → logprob: -8.93424129486084
    7. '' → logprob: -9.05924129486084
    8. '    
' → logprob: -9.30924129486084
    9. '   ' → logprob: -9.43424129486084
    10. '  
' → logprob: -9.68424129486084

Token 172: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2043633908033371
    2. ' for' → logprob: -1.7043633460998535
    3. '       ' → logprob: -5.8293633460998535
    4. '   ' → logprob: -12.579363822937012
    5. '
' → logprob: -13.579363822937012
    6. ' ' → logprob: -14.454363822937012
    7. '	for' → logprob: -15.079363822937012
    8. '        
' → logprob: -15.704363822937012
    9. ' 
' → logprob: -17.204362869262695
    10. '  ' → logprob: -17.329362869262695

Token 173: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.007113517727702856
    2. 'r' → logprob: -5.757113456726074
    3. ' rect' → logprob: -5.757113456726074
    4. 'rectangle' → logprob: -7.507113456726074
    5. 'rec' → logprob: -8.507113456726074
    6. ' rectangle' → logprob: -11.882113456726074
    7. '```' → logprob: -13.132113456726074
    8. '	rect' → logprob: -13.132113456726074
    9. ' rec' → logprob: -13.257113456726074
    10. ' r' → logprob: -13.257113456726074

Token 174: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006053462624549866
    2. 'in' → logprob: -5.131053447723389
    3. ' ' → logprob: -10.381053924560547
    4. '   ' → logprob: -10.506053924560547
    5. 'angle' → logprob: -11.131053924560547
    6. 'ect' → logprob: -11.381053924560547
    7. '  ' → logprob: -11.756053924560547
    8. '       ' → logprob: -12.381053924560547
    9. '	in' → logprob: -12.381053924560547
    10. '.' → logprob: -12.881053924560547

Token 175: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07890047132968903
    2. ' self' → logprob: -2.5789005756378174
    3. '   ' → logprob: -12.203900337219238
    4. '       ' → logprob: -12.453900337219238
    5. '	self' → logprob: -14.828900337219238
    6. '(self' → logprob: -14.953900337219238
    7. '    ' → logprob: -15.328900337219238
    8. ' ' → logprob: -15.578900337219238
    9. '[self' → logprob: -16.078901290893555
    10. 's' → logprob: -16.078901290893555

Token 176: '.rect' (ID: 41088)
  Prédit: '.rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rect' → logprob: -0.00012821101699955761
    2. 'ect' → logprob: -9.875127792358398
    3. 'rect' → logprob: -9.875127792358398
    4. '.' → logprob: -11.000127792358398
    5. '.rectangle' → logprob: -12.000127792358398
    6. ' .' → logprob: -13.625127792358398
    7. '	rect' → logprob: -14.250127792358398
    8. '.rec' → logprob: -16.1251277923584
    9. ' rectangles' → logprob: -16.1251277923584
    10. '.Rect' → logprob: -16.6251277923584

Token 177: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.00021569548698607832
    2. 's' → logprob: -9.125215530395508
    3. 'anges' → logprob: -9.625215530395508
    4. 'angle' → logprob: -11.250215530395508
    5. 'ang' → logprob: -11.500215530395508
    6. '   ' → logprob: -12.625215530395508
    7. 'an' → logprob: -12.750215530395508
    8. '       ' → logprob: -13.125215530395508
    9. '```' → logprob: -13.500215530395508
    10. 'ANGLES' → logprob: -13.500215530395508

Token 178: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016207389533519745
    2. ':
' → logprob: -4.141207218170166
    3. '       ' → logprob: -9.141207695007324
    4. '.' → logprob: -10.891207695007324
    5. '):' → logprob: -11.016207695007324
    6. ' :' → logprob: -11.141207695007324
    7. '):
' → logprob: -12.141207695007324
    8. ',' → logprob: -12.891207695007324
    9. ' :
' → logprob: -13.266207695007324
    10. ':
' → logprob: -13.391207695007324

Token 179: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011394627392292023
    2. ':' → logprob: -5.386394500732422
    3. '       ' → logprob: -5.636394500732422
    4. ' counts' → logprob: -6.386394500732422
    5. ':
' → logprob: -7.636394500732422
    6. 'count' → logprob: -7.886394500732422
    7. 'counts' → logprob: -8.761394500732422
    8. '):
' → logprob: -9.886394500732422
    9. '        ' → logprob: -10.136394500732422
    10. ',' → logprob: -10.261394500732422

Token 180: ' norm' (ID: 7882)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.826282262802124
    2. ' key' → logprob: -1.201282262802124
    3. 'key' → logprob: -2.701282262802124
    4. 'norm' (adapté à ' norm') → logprob: -3.201282262802124
    5. 'nc' → logprob: -3.576282262802124
    6. ' counts' → logprob: -3.701282262802124
    7. ' norm' → logprob: -3.951282262802124
    8. '           ' → logprob: -3.951282262802124
    9. 'n' → logprob: -4.076282501220703
    10. 'count' → logprob: -4.201282501220703

Token 181: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14397217333316803
    2. '=' → logprob: -2.018972158432007
    3. 'al' → logprob: -7.143972396850586
    4. '   ' → logprob: -8.268972396850586
    5. '_rect' → logprob: -9.268972396850586
    6. 'ed' → logprob: -9.393972396850586
    7. '       ' → logprob: -10.393972396850586
    8. ' ' → logprob: -11.893972396850586
    9. 'rect' → logprob: -12.268972396850586
    10. '_key' → logprob: -12.268972396850586

Token 182: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.020543871447443962
    2. ' rect' → logprob: -3.8955438137054443
    3. '	rect' → logprob: -13.895544052124023
    4. '(rect' → logprob: -14.520544052124023
    5. '   ' → logprob: -15.395544052124023
    6. 'rec' → logprob: -15.770544052124023
    7. '.rect' → logprob: -15.895544052124023
    8. ' ' → logprob: -16.520544052124023
    9. 'r' → logprob: -16.895544052124023
    10. '_rect' → logprob: -17.520544052124023

Token 183: '.normal' (ID: 41266)
  Prédit: '.normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.normal' → logprob: -2.4987974029500037e-05
    2. '.' → logprob: -11.375024795532227
    3. ' .' → logprob: -11.625024795532227
    4. 'normalized' → logprob: -12.750024795532227
    5. 'ormal' → logprob: -14.625024795532227
    6. '.norm' → logprob: -14.750024795532227
    7. '.normalize' → logprob: -14.875024795532227
    8. '.n' → logprob: -15.875024795532227
    9. '_normal' → logprob: -16.500024795532227
    10. '().' → logprob: -16.625024795532227

Token 184: 'ized' (ID: 2110)
  Prédit: 'ized'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ized' → logprob: -0.0003573919821064919
    2. 'al' → logprob: -8.375357627868652
    3. 'ormal' → logprob: -9.250357627868652
    4. '   ' → logprob: -11.625357627868652
    5. '       ' → logprob: -11.875357627868652
    6. 'orm' → logprob: -12.000357627868652
    7. 'ize' → logprob: -12.375357627868652
    8. '()' → logprob: -13.875357627868652
    9. ' ' → logprob: -14.250357627868652
    10. 'iz' → logprob: -14.750357627868652

Token 185: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019331586081534624
    2. '()
' → logprob: -6.2519330978393555
    3. '()
' → logprob: -13.126933097839355
    4. '()

' → logprob: -13.876933097839355
    5. '()]' → logprob: -14.376933097839355
    6. '())' → logprob: -14.751933097839355
    7. '()`' → logprob: -15.001933097839355
    8. '()"' → logprob: -16.251934051513672
    9. ' ()' → logprob: -16.501934051513672
    10. '(' → logprob: -17.001934051513672

Token 186: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002202593954280019
    2. '
' → logprob: -7.00220251083374
    3. '       ' → logprob: -7.62720251083374
    4. 'counts' → logprob: -8.002202987670898
    5. ' counts' → logprob: -8.627202987670898
    6. '            
' → logprob: -8.752202987670898
    7. '_counts' → logprob: -10.127202987670898
    8. 'count' → logprob: -10.752202987670898
    9. '    
' → logprob: -11.127202987670898
    10. '        
' → logprob: -11.627202987670898

Token 187: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.06433788686990738
    2. ' counts' → logprob: -2.814337968826294
    3. '       ' → logprob: -6.564337730407715
    4. '           ' → logprob: -7.564337730407715
    5. 'count' → logprob: -7.939337730407715
    6. 'if' → logprob: -9.939337730407715
    7. ' if' → logprob: -10.814337730407715
    8. '_counts' → logprob: -11.814337730407715
    9. '   ' → logprob: -12.189337730407715
    10. '
' → logprob: -13.939337730407715

Token 188: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00030400342075154185
    2. '[' → logprob: -8.125304222106934
    3. '.setdefault' → logprob: -12.000304222106934
    4. ' [' → logprob: -13.750304222106934
    5. '[
' → logprob: -15.500304222106934
    6. '[count' → logprob: -15.750304222106934
    7. '.' → logprob: -16.250303268432617
    8. '[len' → logprob: -17.125303268432617
    9. '[val' → logprob: -17.500303268432617
    10. '[...]' → logprob: -17.625303268432617

Token 189: 'orm' (ID: 551)
  Prédit: 'orm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orm' → logprob: -5.7888184528565034e-05
    2. 'o' → logprob: -10.7500581741333
    3. '(norm' → logprob: -11.2500581741333
    4. '[' → logprob: -11.7500581741333
    5. 'norm' → logprob: -12.6250581741333
    6. '   ' → logprob: -13.1250581741333
    7. 'or' → logprob: -13.3750581741333
    8. ']' → logprob: -13.5000581741333
    9. 'ow' → logprob: -13.7500581741333
    10. '```' → logprob: -13.8750581741333

Token 190: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002162398537620902
    2. ' ]' → logprob: -6.627162456512451
    3. ']=' → logprob: -7.127162456512451
    4. '=' → logprob: -10.877161979675293
    5. ' =' → logprob: -11.377161979675293
    6. ']+=' → logprob: -12.877161979675293
    7. ')' → logprob: -16.25216293334961
    8. ' ' → logprob: -17.50216293334961
    9. '   ' → logprob: -18.00216293334961
    10. ')]' → logprob: -18.12716293334961

Token 191: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132631182670593
    2. ' =' → logprob: -1.313263177871704
    3. ']' → logprob: -14.188262939453125
    4. ' ' → logprob: -14.813262939453125
    5. ']=' → logprob: -15.813262939453125
    6. ' +=' → logprob: -16.063262939453125
    7. '+=' → logprob: -16.938262939453125
    8. '=

' → logprob: -17.813262939453125
    9. ' =)' → logprob: -17.813262939453125
    10. ')' → logprob: -18.313262939453125

Token 192: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.06998022645711899
    2. 'counts' → logprob: -2.6949801445007324
    3. 'count' → logprob: -10.06998062133789
    4. ' count' → logprob: -14.31998062133789
    5. ' ' → logprob: -14.81998062133789
    6. '_counts' → logprob: -15.44498062133789
    7. '1' → logprob: -15.69498062133789
    8. 'c' → logprob: -16.06998062133789
    9. 'Counts' → logprob: -16.69498062133789
    10. '(count' → logprob: -17.19498062133789

Token 193: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -3.8889261304575484e-06
    2. '.' → logprob: -12.875003814697266
    3. 'get' → logprob: -13.625003814697266
    4. ' .' → logprob: -17.000003814697266
    5. '.setdefault' → logprob: -18.125003814697266
    6. '().' → logprob: -21.125003814697266
    7. '.ge' → logprob: -21.500003814697266
    8. '.Get' → logprob: -21.625003814697266
    9. '.g' → logprob: -22.125003814697266
    10. '_get' → logprob: -22.375003814697266

Token 194: '(norm' (ID: 169218)
  Prédit: '(norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(norm' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.625000953674316
    3. 'norm' → logprob: -14.625000953674316
    4. '(n' → logprob: -17.500001907348633
    5. '(normal' → logprob: -19.125001907348633
    6. ' norm' → logprob: -19.250001907348633
    7. '_norm' → logprob: -20.875001907348633
    8. '(
' → logprob: -21.250001907348633
    9. '(nx' → logprob: -21.625001907348633
    10. '(ord' → logprob: -21.750001907348633

Token 195: ',' (ID: 11)
  Prédit: '(norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(norm' → logprob: -0.008206261321902275
    2. ',' → logprob: -5.258206367492676
    3. ',n' → logprob: -6.133206367492676
    4. '(n' → logprob: -7.633206367492676
    5. 'norm' → logprob: -8.133206367492676
    6. ')' → logprob: -11.633206367492676
    7. '/n' → logprob: -12.258206367492676
    8. ' norm' → logprob: -12.633206367492676
    9. '[n' → logprob: -13.758206367492676
    10. ':n' → logprob: -14.508206367492676

Token 196: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019287518225610256
    2. ' ' → logprob: -6.251928806304932
    3. ')' → logprob: -16.126928329467773
    4. ' ' → logprob: -18.751928329467773
    5. '۰' → logprob: -19.001928329467773
    6. '1' → logprob: -19.126928329467773
    7. '  ' → logprob: -19.939428329467773
    8. '   ' → logprob: -20.001928329467773
    9. '```' → logprob: -20.251928329467773
    10. '    ' → logprob: -21.251928329467773

Token 197: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013260759878903627
    2. ' ' → logprob: -6.626326084136963
    3. ')' → logprob: -16.626325607299805
    4. '1' → logprob: -17.251325607299805
    5. '۰' → logprob: -17.876325607299805
    6. '  ' → logprob: -18.376325607299805
    7. '   ' → logprob: -18.376325607299805
    8. ' ' → logprob: -19.188825607299805
    9. '```' → logprob: -20.126325607299805
    10. '    ' → logprob: -20.188825607299805

Token 198: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038717821007594466
    2. ')+' → logprob: -8.250387191772461
    3. ' )' → logprob: -9.000387191772461
    4. '+' → logprob: -13.250387191772461
    5. ' ' → logprob: -15.500387191772461
    6. '1' → logprob: -16.12538719177246
    7. ']' → logprob: -16.12538719177246
    8. '```' → logprob: -16.37538719177246
    9. '0' → logprob: -16.50038719177246
    10. '}' → logprob: -16.75038719177246

Token 199: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5761803984642029
    2. '+' → logprob: -0.8261803984642029
    3. '0' → logprob: -8.451180458068848
    4. ' ' → logprob: -10.826180458068848
    5. '1' → logprob: -12.326180458068848
    6. ')' → logprob: -14.201180458068848
    7. ')+' → logprob: -14.201180458068848
    8. ' plus' → logprob: -14.326180458068848
    9. ' ' → logprob: -15.576180458068848
    10. '()+' → logprob: -16.07617950439453

Token 200: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0067154900170862675
    2. ' ' → logprob: -5.006715297698975
    3. '   ' → logprob: -16.006715774536133
    4. '```' → logprob: -18.131715774536133
    5. '  ' → logprob: -18.756715774536133
    6. ' ' → logprob: -20.006715774536133
    7. '<|end|>' → logprob: -20.506715774536133
    8. '    ' → logprob: -21.006715774536133
    9. '
' → logprob: -21.381715774536133
    10. '       ' → logprob: -21.381715774536133

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.250001907348633
    4. '```' → logprob: -19.125001907348633
    5. '  ' → logprob: -20.875001907348633
    6. '`' → logprob: -21.875001907348633
    7. '
' → logprob: -22.500001907348633
    8. 'a' → logprob: -22.562501907348633
    9. '۱' → logprob: -22.687501907348633
    10. '１' → logprob: -22.750001907348633

Token 202: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1611594408750534
    2. '       ' → logprob: -1.9111593961715698
    3. 'return' → logprob: -7.536159515380859
    4. '
' → logprob: -8.16115951538086
    5. ' return' → logprob: -9.91115951538086
    6. '' → logprob: -11.03615951538086
    7. '   ' → logprob: -11.03615951538086
    8. '        
' → logprob: -11.66115951538086
    9. '<|end|>' → logprob: -11.91115951538086
    10. '  
' → logprob: -12.41115951538086

Token 203: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4297199249267578
    2. '
' → logprob: -1.0547199249267578
    3. '   ' → logprob: -7.929719924926758
    4. ' return' → logprob: -8.679719924926758
    5. 'return' → logprob: -9.179719924926758
    6. '        
' → logprob: -9.179719924926758
    7. '  
' → logprob: -9.804719924926758
    8. '    
' → logprob: -9.804719924926758
    9. '
' → logprob: -10.054719924926758
    10. '<|end|>' → logprob: -10.554719924926758

Token 204: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6987632513046265
    2. 'return' (adapté à ' return') → logprob: -0.6987632513046265
    3. ' return' → logprob: -5.198763370513916
    4. '   ' → logprob: -10.073762893676758
    5. '	return' → logprob: -11.198762893676758
    6. '
' → logprob: -11.573762893676758
    7. ' ' → logprob: -12.948762893676758
    8. '{return' → logprob: -13.073762893676758
    9. '<|end|>' → logprob: -13.448762893676758
    10. '```' → logprob: -13.948762893676758

Token 205: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.10031837970018387
    2. ' counts' → logprob: -2.350318431854248
    3. 'count' → logprob: -9.10031795501709
    4. '_counts' → logprob: -16.725318908691406
    5. 'Counts' → logprob: -16.850318908691406
    6. ' count' → logprob: -17.350318908691406
    7. 'c' → logprob: -18.225318908691406
    8. 'counter' → logprob: -19.225318908691406
    9. 'collections' → logprob: -19.475318908691406
    10. ' ' → logprob: -20.350318908691406

Token 206: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14624525606632233
    2. '<|end|>' → logprob: -2.146245241165161
    3. '   ' → logprob: -4.64624547958374
    4. '

' → logprob: -5.14624547958374
    5. '<|end|>' → logprob: -6.27124547958374
    6. 'def' → logprob: -7.02124547958374
    7. '    
' → logprob: -7.39624547958374
    8. '  
' → logprob: -9.021245002746582
    9. ' ' → logprob: -9.771245002746582
    10. '```' → logprob: -10.646245002746582

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17373408377170563
    2. 'def' → logprob: -1.9237340688705444
    3. '
' → logprob: -4.798734188079834
    4. ' def' → logprob: -5.548734188079834
    5. '    
' → logprob: -6.798734188079834
    6. '<|end|>' → logprob: -9.548733711242676
    7. '  
' → logprob: -10.298733711242676
    8. '```' → logprob: -10.673733711242676
    9. ' ' → logprob: -11.673733711242676
    10. ' 
' → logprob: -11.923733711242676

Token 208: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.2762428822461516e-05
    2. ' def' → logprob: -10.000052452087402
    3. '   ' → logprob: -11.875052452087402
    4. '
' → logprob: -15.625052452087402
    5. '    
' → logprob: -16.75005340576172
    6. '	def' → logprob: -16.75005340576172
    7. 'from' → logprob: -17.75005340576172
    8. ' ' → logprob: -17.87505340576172
    9. 'class' → logprob: -18.25005340576172
    10. '@' → logprob: -18.62505340576172

Token 209: ' can' (ID: 665)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.6098426580429077
    2. ' is' → logprob: -0.8598426580429077
    3. ' can' → logprob: -4.234842777252197
    4. 'can' → logprob: -4.359842777252197
    5. 'def' → logprob: -6.234842777252197
    6. ' has' → logprob: -6.609842777252197
    7. 'has' → logprob: -6.984842777252197
    8. ' def' → logprob: -8.234842300415039
    9. 'validate' → logprob: -8.734842300415039
    10. ' validate' → logprob: -8.734842300415039

Token 210: '_form' (ID: 18664)
  Prédit: '_form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_form' → logprob: -0.07661272585391998
    2. '_make' → logprob: -3.076612710952759
    3. '_fit' → logprob: -4.201612949371338
    4. '_pack' → logprob: -5.451612949371338
    5. '_match' → logprob: -6.326612949371338
    6. '_build' → logprob: -6.576612949371338
    7. '_be' → logprob: -6.701612949371338
    8. '_' → logprob: -6.826612949371338
    9. '_fold' → logprob: -7.201612949371338
    10. '_complete' → logprob: -7.576612949371338

Token 211: '_c' (ID: 1303)
  Prédit: '_cube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cube' → logprob: -0.11639241129159927
    2. '_' → logprob: -2.6163923740386963
    3. '_self' → logprob: -4.241392612457275
    4. '_square' → logprob: -5.241392612457275
    5. '_rectangle' → logprob: -5.991392612457275
    6. '_c' → logprob: -6.116392612457275
    7. '(self' → logprob: -6.241392612457275
    8. '_box' → logprob: -6.491392612457275
    9. '_a' → logprob: -6.866392612457275
    10. 'self' → logprob: -6.991392612457275

Token 212: 'ub' (ID: 431)
  Prédit: 'ube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ube' → logprob: -0.00467291846871376
    2. 'ub' → logprob: -5.379673004150391
    3. '"' → logprob: -12.25467300415039
    4. 'u' → logprob: -12.25467300415039
    5. '_cube' → logprob: -12.25467300415039
    6. 'ubic' → logprob: -12.37967300415039
    7. '

' → logprob: -12.50467300415039
    8. '```' → logprob: -12.87967300415039
    9. 'cube' → logprob: -13.12967300415039
    10. 'UBE' → logprob: -13.12967300415039

Token 213: 'oid' (ID: 11234)
  Prédit: 'oid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oid' → logprob: -0.5797839164733887
    2. 'e' → logprob: -0.8297839164733887
    3. 'o' → logprob: -5.579783916473389
    4. '```' → logprob: -10.204784393310547
    5. 'eid' → logprob: -12.579784393310547
    6. 'a' → logprob: -13.204784393310547
    7. 'es' → logprob: -13.454784393310547
    8. '

' → logprob: -13.454784393310547
    9. '**' → logprob: -13.454784393310547
    10. 'oidal' → logprob: -13.454784393310547

Token 214: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017152780201286077
    2. '(' → logprob: -6.376715183258057
    3. 'self' → logprob: -12.001715660095215
    4. ' (' → logprob: -12.876715660095215
    5. '(
' → logprob: -12.876715660095215
    6. '(s' → logprob: -13.751715660095215
    7. '       ' → logprob: -15.376715660095215
    8. '   ' → logprob: -15.626715660095215
    9. 's' → logprob: -16.1267147064209
    10. '()' → logprob: -16.6267147064209

Token 215: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11469799280166626
    2. '):
' → logprob: -2.8646979331970215
    3. 'self' → logprob: -2.9896979331970215
    4. ')' → logprob: -7.1146979331970215
    5. '(self' → logprob: -9.23969841003418
    6. '   ' → logprob: -10.36469841003418
    7. '       ' → logprob: -10.61469841003418
    8. '):
' → logprob: -10.73969841003418
    9. ' self' → logprob: -10.86469841003418
    10. ',' → logprob: -11.11469841003418

Token 216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00834447331726551
    2. '(self' → logprob: -5.383344650268555
    3. '(' → logprob: -6.008344650268555
    4. 'self' → logprob: -8.258344650268555
    5. '(
' → logprob: -8.383344650268555
    6. ':' → logprob: -8.383344650268555
    7. '
' → logprob: -8.633344650268555
    8. '()' → logprob: -8.758344650268555
    9. ':
' → logprob: -10.008344650268555
    10. '        
' → logprob: -10.258344650268555

Token 217: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.044437967240810394
    2. 'count' → logprob: -3.919437885284424
    3. '       ' → logprob: -4.419437885284424
    4. ' counts' → logprob: -4.669437885284424
    5. 'from' → logprob: -7.169437885284424
    6. 'cnt' → logprob: -8.169438362121582
    7. 'norm' → logprob: -8.169438362121582
    8. 'c' → logprob: -8.669438362121582
    9. 'rect' → logprob: -8.794438362121582
    10. 'counter' → logprob: -9.044438362121582

Token 218: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04892173409461975
    2. '=' → logprob: -3.048921823501587
    3. '()' → logprob: -8.048921585083008
    4. ' ' → logprob: -11.798921585083008
    5. '(' → logprob: -13.298921585083008
    6. 's' → logprob: -13.423921585083008
    7. ' ()' → logprob: -13.673921585083008
    8. '   ' → logprob: -13.923921585083008
    9. ')' → logprob: -14.673921585083008
    10. '    ' → logprob: -15.548921585083008

Token 219: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5759419202804565
    2. ' self' → logprob: -0.8259419202804565
    3. '       ' → logprob: -13.325942039489746
    4. '(self' → logprob: -14.200942039489746
    5. ' ' → logprob: -16.57594108581543
    6. '[self' → logprob: -17.07594108581543
    7. '	self' → logprob: -17.20094108581543
    8. '=self' → logprob: -18.07594108581543
    9. ' defaultdict' → logprob: -18.07594108581543
    10. '   ' → logprob: -18.45094108581543

Token 220: '.normal' (ID: 41266)
  Prédit: '.normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.normal' → logprob: -0.00040755473310127854
    2. '.' → logprob: -7.875407695770264
    3. ' .' → logprob: -10.875407218933105
    4. '.norm' → logprob: -12.125407218933105
    5. 'normalized' → logprob: -13.125407218933105
    6. '.n' → logprob: -14.500407218933105
    7. '.count' → logprob: -15.125407218933105
    8. '.Normal' → logprob: -16.250408172607422
    9. '.normalize' → logprob: -16.875408172607422
    10. '   ' → logprob: -16.875408172607422

Token 221: 'ized' (ID: 2110)
  Prédit: 'ized'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ized' → logprob: -5.991464786347933e-05
    2. 'al' → logprob: -9.750060081481934
    3. 'ormal' → logprob: -14.375060081481934
    4. 'ize' → logprob: -14.875060081481934
    5. '   ' → logprob: -16.000059127807617
    6. '_counts' → logprob: -16.500059127807617
    7. 'ixed' → logprob: -16.750059127807617
    8. 'ount' → logprob: -16.875059127807617
    9. 'orm' → logprob: -16.875059127807617
    10. 'IZED' → logprob: -16.875059127807617

Token 222: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -3.5597102396423e-05
    2. 'counts' → logprob: -10.250035285949707
    3. '()' → logprob: -16.125036239624023
    4. 'Counts' → logprob: -17.500036239624023
    5. ' counts' → logprob: -17.500036239624023
    6. '_' → logprob: -19.125036239624023
    7. '_count' → logprob: -19.625036239624023
    8. '_c' → logprob: -20.625036239624023
    9. ' _' → logprob: -20.750036239624023
    10. ')_' → logprob: -21.125036239624023

Token 223: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00222590658813715
    2. '()
' → logprob: -6.127225875854492
    3. '()

' → logprob: -10.502225875854492
    4. '       ' → logprob: -11.752225875854492
    5. ' ()' → logprob: -12.752225875854492
    6. '()
' → logprob: -13.752225875854492
    7. ' =' → logprob: -14.877225875854492
    8. '()==' → logprob: -15.127225875854492
    9. '=' → logprob: -15.502225875854492
    10. ')' → logprob: -15.502225875854492

Token 224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02108071930706501
    2. ' if' → logprob: -4.146080493927002
    3. 'if' → logprob: -5.771080493927002
    4. 'pairs' → logprob: -7.521080493927002
    5. 'sizes' → logprob: -8.14608097076416
    6. 'counts' → logprob: -8.77108097076416
    7. ' sides' → logprob: -9.14608097076416
    8. ' for' → logprob: -9.39608097076416
    9. '```' → logprob: -9.39608097076416
    10. '        
' → logprob: -9.52108097076416

Token 225: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.009374976158142
    2. 'values' → logprob: -1.509374976158142
    3. 'pairs' → logprob: -1.634374976158142
    4. '       ' → logprob: -2.5093750953674316
    5. 's' → logprob: -3.6343750953674316
    6. 'sizes' → logprob: -3.7593750953674316
    7. 'rect' → logprob: -4.259375095367432
    8. '#' (adapté à ' #') → logprob: -4.259375095367432
    9. 'vals' → logprob: -4.634375095367432
    10. ' if' → logprob: -5.009375095367432

Token 226: ' There' (ID: 3274)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.747606635093689
    2. '#' → logprob: -0.872606635093689
    3. ' if' → logprob: -3.6226067543029785
    4. '       ' → logprob: -4.1226067543029785
    5. 's' → logprob: -4.4976067543029785
    6. 'values' → logprob: -4.4976067543029785
    7. 'pairs' → logprob: -4.4976067543029785
    8. 'sizes' → logprob: -5.2476067543029785
    9. ' #' → logprob: -5.3726067543029785
    10. 'rect' → logprob: -5.7476067543029785

Token 227: ' must' (ID: 2804)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.0883675068616867
    2. 'are' → logprob: -2.838367462158203
    3. ' should' → logprob: -4.213367462158203
    4. ' must' → logprob: -5.088367462158203
    5. 'if' → logprob: -6.963367462158203
    6. ' is' → logprob: -7.088367462158203
    7. '   ' → logprob: -7.338367462158203
    8. 'should' → logprob: -7.338367462158203
    9. ' if' → logprob: -7.588367462158203
    10. '       ' → logprob: -7.588367462158203

Token 228: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.043563466519117355
    2. 'be' → logprob: -3.1685633659362793
    3. ' only' → logprob: -8.043563842773438
    4. '=' → logprob: -9.668563842773438
    5. '       ' → logprob: -9.918563842773438
    6. '==' → logprob: -10.543563842773438
    7. 'only' → logprob: -10.793563842773438
    8. ' =' → logprob: -11.043563842773438
    9. ' are' → logprob: -11.668563842773438
    10. ' either' → logprob: -11.668563842773438

Token 229: ' exactly' (ID: 9707)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5944258570671082
    2. 'three' → logprob: -1.969425916671753
    3. ' exactly' → logprob: -2.219425916671753
    4. 'exact' → logprob: -2.219425916671753
    5. 'len' → logprob: -3.094425916671753
    6. ' three' → logprob: -3.469425916671753
    7. 'at' → logprob: -5.469425678253174
    8. ' ' → logprob: -5.594425678253174
    9. ' at' → logprob: -6.469425678253174
    10. ' len' → logprob: -6.469425678253174

Token 230: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.022885289043188095
    2. ' three' → logprob: -4.522885322570801
    3. 'three' → logprob: -5.022885322570801
    4. ' ' → logprob: -5.272885322570801
    5. '   ' → logprob: -10.8978853225708
    6. ' exactly' → logprob: -11.3978853225708
    7. '6' → logprob: -12.0228853225708
    8. '  ' → logprob: -12.1478853225708
    9. 'exact' → logprob: -12.5228853225708
    10. 'Three' → logprob: -13.5228853225708

Token 231: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.012578642927110195
    2. 'three' → logprob: -4.63757848739624
    3. ' ' → logprob: -6.51257848739624
    4. ' three' → logprob: -6.63757848739624
    5. 'exact' → logprob: -11.762578964233398
    6. '
' → logprob: -12.512578964233398
    7. '   ' → logprob: -13.137578964233398
    8. '6' → logprob: -13.387578964233398
    9. ' exactly' → logprob: -13.512578964233398
    10. '2' → logprob: -13.637578964233398

Token 232: ' unique' (ID: 5746)
  Prédit: ' distinct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distinct' → logprob: -0.5416853427886963
    2. ' pairs' → logprob: -1.5416853427886963
    3. ' different' → logprob: -2.2916853427886963
    4. 'pairs' → logprob: -3.4166853427886963
    5. 'distinct' → logprob: -3.6666853427886963
    6. ' unique' → logprob: -3.7916853427886963
    7. '<|end|>' → logprob: -4.416685104370117
    8. 'different' → logprob: -5.541685104370117
    9. ' ' → logprob: -6.416685104370117
    10. '_pairs' → logprob: -6.916685104370117

Token 233: ' rectangles' (ID: 164265)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.846581220626831
    2. ' keys' → logprob: -2.596581220626831
    3. 'sizes' → logprob: -2.721581220626831
    4. ' pairs' → logprob: -2.846581220626831
    5. ' sides' → logprob: -2.971581220626831
    6. 'norm' → logprob: -3.096581220626831
    7. ' rectangles' → logprob: -3.221581220626831
    8. ' shapes' → logprob: -3.471581220626831
    9. ' dimensions' → logprob: -3.596581220626831
    10. 'dimensions' → logprob: -3.846581220626831

Token 234: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4222722053527832
    2. ' and' → logprob: -1.5472722053527832
    3. ',' → logprob: -3.047272205352783
    4. ':' → logprob: -3.172272205352783
    5. ' if' → logprob: -4.922272205352783
    6. 'and' → logprob: -5.547272205352783
    7. ' or' → logprob: -5.547272205352783
    8. '<|end|>' → logprob: -5.547272205352783
    9. '        ' → logprob: -5.672272205352783
    10. '.' → logprob: -5.672272205352783

Token 235: ' each' (ID: 2454)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5061289668083191
    2. ' and' → logprob: -1.5061290264129639
    3. '<|end|>' → logprob: -2.506129026412964
    4. 'and' → logprob: -3.256129026412964
    5. ' each' → logprob: -3.881129026412964
    6. 'each' → logprob: -4.006128787994385
    7. ' with' → logprob: -5.631128787994385
    8. ' for' → logprob: -6.506128787994385
    9. ' if' → logprob: -6.506128787994385
    10. 'with' → logprob: -7.131128787994385

Token 236: ' appearing' (ID: 44748)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.46618643403053284
    2. 'with' → logprob: -1.7161864042282104
    3. ' having' → logprob: -1.8411864042282104
    4. 'having' → logprob: -4.5911865234375
    5. ' have' → logprob: -4.7161865234375
    6. ' has' → logprob: -5.2161865234375
    7. 'have' → logprob: -6.0911865234375
    8. ':' → logprob: -6.3411865234375
    9. 'count' → logprob: -7.0911865234375
    10. '       ' → logprob: -7.3411865234375

Token 237: ' twice' (ID: 18370)
  Prédit: ' exactly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactly' → logprob: -0.827722430229187
    2. '2' → logprob: -1.452722430229187
    3. 'exact' → logprob: -1.452722430229187
    4. ' twice' → logprob: -3.0777225494384766
    5. ' ' → logprob: -3.3277225494384766
    6. ' with' → logprob: -5.452722549438477
    7. 'with' → logprob: -5.702722549438477
    8. 'tw' → logprob: -5.827722549438477
    9. ' in' → logprob: -6.452722549438477
    10. 'in' → logprob: -7.702722549438477

Token 238: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018544020131230354
    2. ',' → logprob: -4.6435441970825195
    3. '
' → logprob: -5.6435441970825195
    4. '.' → logprob: -6.1435441970825195
    5. ' for' → logprob: -6.8935441970825195
    6. ':' → logprob: -7.0185441970825195
    7. '        
' → logprob: -7.6435441970825195
    8. '<|end|>' → logprob: -8.76854419708252
    9. 'for' → logprob: -8.89354419708252
    10. ',
' → logprob: -9.51854419708252

Token 239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027111848816275597
    2. '
' → logprob: -3.652111768722534
    3. '        
' → logprob: -7.652112007141113
    4. ' for' → logprob: -8.777112007141113
    5. ' if' → logprob: -9.527112007141113
    6. 'for' → logprob: -10.152112007141113
    7. '  
' → logprob: -11.027112007141113
    8. 'if' → logprob: -11.402112007141113
    9. '```' → logprob: -11.402112007141113
    10. '
' → logprob: -12.527112007141113

Token 240: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.47672539949417114
    2. ' if' → logprob: -1.1017253398895264
    3. '       ' → logprob: -3.1017253398895264
    4. 'return' → logprob: -6.6017255783081055
    5. ' return' → logprob: -8.601725578308105
    6. 'for' → logprob: -8.976725578308105
    7. ' keys' → logprob: -9.726725578308105
    8. 'keys' → logprob: -9.851725578308105
    9. 'unique' → logprob: -10.351725578308105
    10. ' for' → logprob: -10.476725578308105

Token 241: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.1002068892121315
    2. 'len' → logprob: -2.3502068519592285
    3. '(len' → logprob: -16.10020637512207
    4. '       ' → logprob: -16.47520637512207
    5. ' not' → logprob: -16.85020637512207
    6. '   ' → logprob: -17.85020637512207
    7. '	len' → logprob: -18.60020637512207
    8. ' ' → logprob: -19.22520637512207
    9. '  ' → logprob: -19.72520637512207
    10. 'not' → logprob: -20.10020637512207

Token 242: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -4.084206375409849e-05
    2. '(' → logprob: -10.125041007995605
    3. 'counts' → logprob: -14.750041007995605
    4. ' (' → logprob: -15.000041007995605
    5. ' counts' → logprob: -16.50004005432129
    6. 'count' → logprob: -17.37504005432129
    7. '(
' → logprob: -18.12504005432129
    8. '[count' → logprob: -18.87504005432129
    9. '(c' → logprob: -19.87504005432129
    10. ')' → logprob: -20.37504005432129

Token 243: 's' (ID: 82)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.18583060801029205
    2. 'counts' → logprob: -1.9358305931091309
    3. 's' → logprob: -3.685830593109131
    4. ' counts' → logprob: -8.935831069946289
    5. 'count' → logprob: -10.310831069946289
    6. ')' → logprob: -10.560831069946289
    7. '(' → logprob: -11.685831069946289
    8. 'cts' → logprob: -13.060831069946289
    9. '_counts' → logprob: -13.935831069946289
    10. '[count' → logprob: -14.060831069946289

Token 244: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.23284004628658295
    2. ')' → logprob: -1.6078400611877441
    3. ' !=' → logprob: -5.107840061187744
    4. '()!=' → logprob: -7.232840061187744
    5. '!=' → logprob: -7.732840061187744
    6. '())' → logprob: -9.857839584350586
    7. ' )' → logprob: -9.857839584350586
    8. ')!=' → logprob: -9.982839584350586
    9. '(' → logprob: -11.357839584350586
    10. ' ()' → logprob: -11.607839584350586

Token 245: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.1297791451215744
    2. '!=' → logprob: -2.129779100418091
    3. '()' → logprob: -6.25477933883667
    4. ')' → logprob: -7.75477933883667
    5. '()!=' → logprob: -7.75477933883667
    6. ')!=' → logprob: -10.379778861999512
    7. '==' → logprob: -11.629778861999512
    8. ' ==' → logprob: -11.754778861999512
    9. ' )' → logprob: -12.129778861999512
    10. ' ' → logprob: -12.129778861999512

Token 246: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.033648353070020676
    2. ' ' → logprob: -3.4086482524871826
    3. '  ' → logprob: -14.283648490905762
    4. '   ' → logprob: -14.533648490905762
    5. '(' → logprob: -14.846148490905762
    6. '```' → logprob: -14.971148490905762
    7. ' ' → logprob: -15.721148490905762
    8. ')' → logprob: -15.846148490905762
    9. '
' → logprob: -16.096147537231445
    10. '۳' → logprob: -16.346147537231445

Token 247: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0008048642775975168
    2. ' ' → logprob: -7.125804901123047
    3. '۳' → logprob: -16.313304901123047
    4. '
' → logprob: -16.688304901123047
    5. '```' → logprob: -16.750804901123047
    6. '  ' → logprob: -16.813304901123047
    7. '   ' → logprob: -16.813304901123047
    8. '３' → logprob: -18.188304901123047
    9. 'exact' → logprob: -18.250804901123047
    10. ' ' → logprob: -18.375804901123047

Token 248: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.02232084609568119
    2. ':' → logprob: -3.8973207473754883
    3. 'or' → logprob: -6.522320747375488
    4. ':
' → logprob: -8.522320747375488
    5. '       ' → logprob: -9.522320747375488
    6. '   ' → logprob: -11.272320747375488
    7. ')' → logprob: -12.022320747375488
    8. ' ' → logprob: -12.397320747375488
    9. '           ' → logprob: -12.522320747375488
    10. ':return' → logprob: -12.897320747375488

Token 249: '           ' (ID: 352)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5105915665626526
    2. ':' → logprob: -1.6355915069580078
    3. '           ' → logprob: -1.8855915069580078
    4. ':
' → logprob: -3.260591506958008
    5. '       ' → logprob: -4.260591506958008
    6. ':return' → logprob: -7.635591506958008
    7. 'or' → logprob: -8.635591506958008
    8. '   ' → logprob: -10.010591506958008
    9. '          ' → logprob: -11.010591506958008
    10. 'return' → logprob: -11.010591506958008

Token 250: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.869719922542572
    2. ' return' → logprob: -1.1197199821472168
    3. 'return' (adapté à ' return') → logprob: -1.3697199821472168
    4. '
' → logprob: -8.369719505310059
    5. '   ' → logprob: -9.244719505310059
    6. '       ' → logprob: -10.119719505310059
    7. '	return' → logprob: -12.494719505310059
    8. '               ' → logprob: -12.869719505310059
    9. ':return' → logprob: -13.244719505310059
    10. '```' → logprob: -13.619719505310059

Token 251: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.20141352713108063
    2. ' False' → logprob: -1.7014135122299194
    3. 'None' → logprob: -16.326414108276367
    4. '
' → logprob: -16.826414108276367
    5. ' None' → logprob: -17.451414108276367
    6. '(False' → logprob: -18.326414108276367
    7. ' 
' → logprob: -18.451414108276367
    8. 'F' → logprob: -19.201414108276367
    9. ' ' → logprob: -19.701414108276367
    10. 'True' → logprob: -19.701414108276367

Token 252: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20270982384681702
    2. '
' → logprob: -1.7027097940444946
    3. '        
' → logprob: -6.952709674835205
    4. '  
' → logprob: -8.827710151672363
    5. '   ' → logprob: -10.452710151672363
    6. ' for' → logprob: -10.577710151672363
    7. '<|end|>' → logprob: -10.577710151672363
    8. ',' → logprob: -10.702710151672363
    9. '    
' → logprob: -10.827710151672363
    10. '      ' → logprob: -11.077710151672363

Token 253: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018222624203190207
    2. '
' → logprob: -7.251822471618652
    3. 'for' → logprob: -7.501822471618652
    4. ' for' → logprob: -8.001822471618652
    5. '        
' → logprob: -9.126822471618652
    6. '   ' → logprob: -9.251822471618652
    7. '      ' → logprob: -12.251822471618652
    8. '    
' → logprob: -12.251822471618652
    9. '  
' → logprob: -12.251822471618652
    10. '       
' → logprob: -13.501822471618652

Token 254: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35242798924446106
    2. '       ' → logprob: -1.2274279594421387
    3. ' for' → logprob: -5.602427959442139
    4. '
' → logprob: -8.852428436279297
    5. '        
' → logprob: -8.977428436279297
    6. '	for' → logprob: -12.352428436279297
    7. '   ' → logprob: -12.477428436279297
    8. '```' → logprob: -13.102428436279297
    9. '  
' → logprob: -13.477428436279297
    10. '    
' → logprob: -14.227428436279297

Token 255: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.7239407300949097
    2. 'any' → logprob: -0.8489407300949097
    3. ' all' → logprob: -3.348940849304199
    4. 'all' → logprob: -3.473940849304199
    5. ' not' → logprob: -4.223940849304199
    6. 'not' → logprob: -5.223940849304199
    7. ' list' → logprob: -7.723940849304199
    8. '   ' → logprob: -8.2239408493042
    9. 'list' → logprob: -8.4739408493042
    10. ' set' → logprob: -9.0989408493042

Token 256: '(count' (ID: 25892)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5971636772155762
    2. '(count' → logprob: -0.8471636772155762
    3. 'counts' → logprob: -4.097163677215576
    4. ' count' → logprob: -5.722163677215576
    5. ' counts' → logprob: -7.347163677215576
    6. 'v' → logprob: -8.597164154052734
    7. '(value' → logprob: -9.097164154052734
    8. 'value' → logprob: -9.722164154052734
    9. '(v' → logprob: -9.847164154052734
    10. '(' → logprob: -10.972164154052734

Token 257: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6343019008636475
    2. ' !=' → logprob: -0.7593019008636475
    3. 's' → logprob: -6.884302139282227
    4. '<' → logprob: -8.384302139282227
    5. ' <' → logprob: -8.884302139282227
    6. '()!=' → logprob: -9.259302139282227
    7. '(value' → logprob: -10.134302139282227
    8. ')!=' → logprob: -10.509302139282227
    9. '(count' → logprob: -10.884302139282227
    10. '(s' → logprob: -11.134302139282227

Token 258: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1602255403995514
    2. ' ' → logprob: -1.910225510597229
    3. '   ' → logprob: -13.910225868225098
    4. '```' → logprob: -15.660225868225098
    5. '       ' → logprob: -16.72272491455078
    6. '  ' → logprob: -16.97272491455078
    7. ' ' → logprob: -17.16022491455078
    8. '    ' → logprob: -17.47272491455078
    9. '     ' → logprob: -17.66022491455078
    10. '۲' → logprob: -17.78522491455078

Token 259: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017027945723384619
    2. ' ' → logprob: -6.376702785491943
    3. '   ' → logprob: -14.501703262329102
    4. '```' → logprob: -16.6267032623291
    5. '       ' → logprob: -17.3767032623291
    6. '۲' → logprob: -17.8767032623291
    7. '  ' → logprob: -18.2517032623291
    8. '     ' → logprob: -18.6267032623291
    9. '２' → logprob: -18.6892032623291
    10. '           ' → logprob: -18.9392032623291

Token 260: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0003404687449801713
    2. 'for' → logprob: -8.000340461730957
    3. ' ' → logprob: -12.250340461730957
    4. ')' → logprob: -15.375340461730957
    5. ' or' → logprob: -17.875341415405273
    6. ' )' → logprob: -17.875341415405273
    7. '	for' → logprob: -17.875341415405273
    8. ' ' → logprob: -18.125341415405273
    9. '    ' → logprob: -19.000341415405273
    10. '
' → logprob: -19.375341415405273

Token 261: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4740801155567169
    2. ' count' → logprob: -0.9740800857543945
    3. ' counts' → logprob: -13.474080085754395
    4. 'counts' → logprob: -14.349080085754395
    5. '	count' → logprob: -14.474080085754395
    6. ' ' → logprob: -14.849080085754395
    7. '[count' → logprob: -15.849080085754395
    8. '(count' → logprob: -16.97408103942871
    9. ',count' → logprob: -18.59908103942871
    10. '<count' → logprob: -18.59908103942871

Token 262: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06934778392314911
    2. ' counts' → logprob: -3.069347858428955
    3. 'counts' → logprob: -4.319347858428955
    4. 'in' → logprob: -4.944347858428955
    5. 'count' → logprob: -9.569347381591797
    6. ' ' → logprob: -10.694347381591797
    7. 'values' → logprob: -11.319347381591797
    8. ' values' → logprob: -12.819347381591797
    9. '_counts' → logprob: -12.944347381591797
    10. ' count' → logprob: -13.319347381591797

Token 263: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.06196858361363411
    2. ' counts' → logprob: -2.8119685649871826
    3. 'count' → logprob: -13.936968803405762
    4. 'values' → logprob: -17.436967849731445
    5. ' ' → logprob: -19.436967849731445
    6. 'c' → logprob: -20.061967849731445
    7. '_counts' → logprob: -20.936967849731445
    8. ' count' → logprob: -21.311967849731445
    9. '[count' → logprob: -21.561967849731445
    10. '   ' → logprob: -21.811967849731445

Token 264: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.0002671768015716225
    2. 'values' → logprob: -8.500267028808594
    3. '.' → logprob: -9.750267028808594
    4. '.value' → logprob: -13.250267028808594
    5. ' values' → logprob: -13.250267028808594
    6. ' .' → logprob: -13.375267028808594
    7. '.Values' → logprob: -15.125267028808594
    8. 'value' → logprob: -17.250267028808594
    9. ')' → logprob: -17.375267028808594
    10. '_values' → logprob: -18.000267028808594

Token 265: '()):
' (ID: 83536)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005425016395747662
    2. '():' → logprob: -5.630424976348877
    3. '())' → logprob: -6.880424976348877
    4. '):' → logprob: -7.630424976348877
    5. '()):
' → logprob: -8.755425453186035
    6. ')' → logprob: -9.255425453186035
    7. ' ()' → logprob: -10.505425453186035
    8. '(' → logprob: -10.880425453186035
    9. ' ):' → logprob: -13.130425453186035
    10. '():
' → logprob: -13.255425453186035

Token 266: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010216393508017063
    2. ':' → logprob: -5.510216236114502
    3. ':
' → logprob: -5.635216236114502
    4. ' return' → logprob: -6.510216236114502
    5. ':return' → logprob: -7.260216236114502
    6. 'return' → logprob: -9.26021671295166
    7. '       ' → logprob: -9.63521671295166
    8. ' :' → logprob: -9.76021671295166
    9. '          ' → logprob: -10.26021671295166
    10. ' :
' → logprob: -10.51021671295166

Token 267: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35198718309402466
    2. ' return' → logprob: -1.6019871234893799
    3. 'return' (adapté à ' return') → logprob: -2.35198712348938
    4. '   ' → logprob: -10.7269868850708
    5. '               ' → logprob: -12.3519868850708
    6. ' ' → logprob: -12.9769868850708
    7. '
' → logprob: -13.2269868850708
    8. '	return' → logprob: -13.7269868850708
    9. ':return' → logprob: -13.7269868850708
    10. '       ' → logprob: -13.8519868850708

Token 268: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0005530327325686812
    2. ' False' → logprob: -7.500553131103516
    3. 'True' → logprob: -17.750553131103516
    4. '(False' → logprob: -20.625553131103516
    5. '=False' → logprob: -22.875553131103516
    6. 'F' → logprob: -23.125553131103516
    7. 'false' → logprob: -24.000553131103516
    8. '
' → logprob: -24.375553131103516
    9. '   ' → logprob: -24.500553131103516
    10. '_false' → logprob: -24.750553131103516

Token 269: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04905465245246887
    2. '       ' → logprob: -3.0490546226501465
    3. '        
' → logprob: -8.174055099487305
    4. '
' → logprob: -9.549055099487305
    5. '

' → logprob: -9.549055099487305
    6. '<|end|>' → logprob: -11.299055099487305
    7. '    
' → logprob: -11.424055099487305
    8. '  
' → logprob: -11.799055099487305
    9. '


' → logprob: -13.049055099487305
    10. '   ' → logprob: -13.424055099487305

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4648706912994385
    2. '
' → logprob: -1.3398706912994385
    3. '        
' → logprob: -2.2148706912994385
    4. '<|end|>' → logprob: -7.839870452880859
    5. '  
' → logprob: -9.33987045288086
    6. '       
' → logprob: -9.83987045288086
    7. '    
' → logprob: -9.96487045288086
    8. '            
' → logprob: -10.21487045288086
    9. ' 
' → logprob: -10.46487045288086
    10. '

' → logprob: -11.21487045288086

Token 271: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4947751462459564
    2. '
' → logprob: -1.1197751760482788
    3. '        
' → logprob: -3.9947750568389893
    4. 'sizes' → logprob: -3.9947750568389893
    5. 'dims' → logprob: -5.119775295257568
    6. ' lengths' → logprob: -5.244775295257568
    7. 'dimensions' → logprob: -5.244775295257568
    8. 'length' → logprob: -5.994775295257568
    9. 's' → logprob: -6.369775295257568
    10. 'keys' → logprob: -6.994775295257568

Token 272: ' Now' (ID: 6549)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -1.414703369140625
    2. 's' → logprob: -1.539703369140625
    3. ' sides' → logprob: -1.914703369140625
    4. '       ' → logprob: -2.164703369140625
    5. ' lengths' → logprob: -2.414703369140625
    6. 'dims' → logprob: -3.414703369140625
    7. 'sizes' → logprob: -3.539703369140625
    8. '#' → logprob: -3.789703369140625
    9. 'dimensions' → logprob: -3.789703369140625
    10. 'length' → logprob: -4.164703369140625

Token 273: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05781775340437889
    2. '
' → logprob: -3.6828176975250244
    3. ',' → logprob: -3.9328176975250244
    4. 's' → logprob: -6.1828179359436035
    5. '        
' → logprob: -6.1828179359436035
    6. 'rect' → logprob: -6.4328179359436035
    7. 'sizes' → logprob: -7.1828179359436035
    8. 'dims' → logprob: -7.3078179359436035
    9. 'pairs' → logprob: -7.4328179359436035
    10. ' lengths' → logprob: -8.307817459106445

Token 274: ' three' (ID: 3407)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.49519234895706177
    2. 's' → logprob: -1.995192289352417
    3. '#' → logprob: -2.370192289352417
    4. 'norm' → logprob: -3.245192289352417
    5. 'keys' → logprob: -3.370192289352417
    6. 'pairs' → logprob: -3.995192289352417
    7. 'dims' → logprob: -3.995192289352417
    8. 'dimensions' → logprob: -4.495192527770996
    9. 'unique' → logprob: -4.745192527770996
    10. 'length' → logprob: -4.870192527770996

Token 275: ' rectangles' (ID: 164265)
  Prédit: ' unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unique' → logprob: -1.3638453483581543
    2. 'norm' → logprob: -1.4888453483581543
    3. ' rectangles' → logprob: -2.1138453483581543
    4. 'rect' → logprob: -2.3638453483581543
    5. ' keys' → logprob: -2.7388453483581543
    6. ' pairs' → logprob: -3.1138453483581543
    7. ' norm' → logprob: -3.2388453483581543
    8. ' normalized' → logprob: -3.4888453483581543
    9. ' rect' → logprob: -3.7388453483581543
    10. ' norms' → logprob: -3.9888453483581543

Token 276: ' represent' (ID: 5188)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.036226045340299606
    2. '=' → logprob: -3.5362260341644287
    3. '       ' → logprob: -6.036226272583008
    4. 's' → logprob: -6.411226272583008
    5. ' are' → logprob: -6.661226272583008
    6. ':' → logprob: -8.286226272583008
    7. 'items' → logprob: -8.786226272583008
    8. '.' → logprob: -9.286226272583008
    9. ',' → logprob: -9.411226272583008
    10. '.keys' → logprob: -9.411226272583008

Token 277: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.06386806815862656
    2. 'the' → logprob: -3.1888680458068848
    3. ' three' → logprob: -4.313868045806885
    4. ' sides' → logprob: -6.313868045806885
    5. ' all' → logprob: -6.813868045806885
    6. ' lengths' → logprob: -7.063868045806885
    7. 'dimensions' → logprob: -7.313868045806885
    8. ' dimensions' → logprob: -7.313868045806885
    9. 's' → logprob: -7.813868045806885
    10. 'three' → logprob: -7.813868045806885

Token 278: ' three' (ID: 3407)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.5041806101799011
    2. 's' → logprob: -2.254180669784546
    3. 'dimensions' → logprob: -2.629180669784546
    4. 'side' → logprob: -3.004180669784546
    5. 'three' → logprob: -3.129180669784546
    6. 'length' → logprob: -3.254180669784546
    7. ' edges' → logprob: -3.254180669784546
    8. ' sides' → logprob: -4.504180431365967
    9. ' three' → logprob: -4.504180431365967
    10. 'cub' → logprob: -4.754180431365967

Token 279: ' pairs' (ID: 24702)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -1.1769764423370361
    2. 'edges' → logprob: -1.1769764423370361
    3. ' sides' → logprob: -1.9269764423370361
    4. ' side' → logprob: -2.801976442337036
    5. 'dimensions' → logprob: -3.051976442337036
    6. 's' → logprob: -3.551976442337036
    7. ' unique' → logprob: -3.926976442337036
    8. ' dimensions' → logprob: -4.301976203918457
    9. ' distinct' → logprob: -4.426976203918457
    10. 'side' → logprob: -4.551976203918457

Token 280: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.23810532689094543
    2. '       ' → logprob: -1.613105297088623
    3. ',' → logprob: -4.988105297088623
    4. 'of' → logprob: -5.738105297088623
    5. '.' → logprob: -7.613105297088623
    6. ' that' → logprob: -7.613105297088623
    7. '<|end|>' → logprob: -8.113105773925781
    8. ':' → logprob: -8.363105773925781
    9. ' in' → logprob: -8.863105773925781
    10. '        ' → logprob: -8.988105773925781

Token 281: ' faces' (ID: 22060)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.8982259035110474
    2. 'edges' → logprob: -1.2732259035110474
    3. ' sides' → logprob: -1.7732259035110474
    4. 'dimensions' → logprob: -2.523225784301758
    5. 's' → logprob: -4.023225784301758
    6. ' dimensions' → logprob: -4.273225784301758
    7. 'adj' → logprob: -4.648225784301758
    8. 'side' → logprob: -4.648225784301758
    9. 'length' → logprob: -5.898225784301758
    10. ' side' → logprob: -6.398225784301758

Token 282: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00037144700763747096
    2. ',' → logprob: -8.375370979309082
    3. '        
' → logprob: -9.750370979309082
    4. ' to' → logprob: -10.875370979309082
    5. '.' → logprob: -11.625370979309082
    6. '
' → logprob: -11.875370979309082
    7. ' in' → logprob: -11.875370979309082
    8. ' for' → logprob: -12.000370979309082
    9. ':' → logprob: -12.750370979309082
    10. 's' → logprob: -12.750370979309082

Token 283: ' cub' (ID: 18538)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3802025020122528
    2. ' the' → logprob: -1.6302025318145752
    3. 'a' → logprob: -2.505202531814575
    4. 'the' → logprob: -3.255202531814575
    5. ' cub' → logprob: -9.255202293395996
    6. 'cub' → logprob: -10.630202293395996
    7. ' cubes' → logprob: -11.255202293395996
    8. ' an' → logprob: -11.880202293395996
    9. ' cube' → logprob: -12.505202293395996
    10. 'self' → logprob: -13.505202293395996

Token 284: 'oid' (ID: 11234)
  Prédit: 'oid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oid' → logprob: -0.002808798337355256
    2. 'o' → logprob: -6.002808570861816
    3. 'oids' → logprob: -8.502808570861816
    4. '   ' → logprob: -10.627808570861816
    5. 'oi' → logprob: -10.627808570861816
    6. ' oid' → logprob: -11.002808570861816
    7. '```' → logprob: -11.002808570861816
    8. ')' → logprob: -11.752808570861816
    9. 'oidal' → logprob: -11.877808570861816
    10. 'e' → logprob: -12.502808570861816

Token 285: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2896105647087097
    2. '
' → logprob: -1.5396106243133545
    3. ',' → logprob: -3.6646106243133545
    4. '        
' → logprob: -4.914610385894775
    5. ',
' → logprob: -6.664610385894775
    6. '<|end|>' → logprob: -7.164610385894775
    7. '.' → logprob: -7.789610385894775
    8. '  
' → logprob: -8.039610862731934
    9. 's' → logprob: -8.789610862731934
    10. '#' → logprob: -9.039610862731934

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002039391314610839
    2. '        
' → logprob: -6.627039432525635
    3. '
' → logprob: -7.377039432525635
    4. '  
' → logprob: -10.127038955688477
    5. ',' → logprob: -11.002038955688477
    6. '```' → logprob: -12.252038955688477
    7. '    
' → logprob: -12.377038955688477
    8. ' 
' → logprob: -13.002038955688477
    9. '       
' → logprob: -13.252038955688477
    10. ' to' → logprob: -13.377038955688477

Token 287: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7739525437355042
    2. 'dims' → logprob: -1.6489524841308594
    3. ' sides' → logprob: -2.7739524841308594
    4. ' dims' → logprob: -2.8989524841308594
    5. 'sizes' → logprob: -3.2739524841308594
    6. 'rect' → logprob: -3.5239524841308594
    7. ' lengths' → logprob: -3.5239524841308594
    8. ' dimensions' → logprob: -3.7739524841308594
    9. 's' → logprob: -3.7739524841308594
    10. 'dimensions' → logprob: -3.7739524841308594

Token 288: ' The' (ID: 623)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -1.1543622016906738
    2. 's' → logprob: -1.5293622016906738
    3. 'dims' → logprob: -1.5293622016906738
    4. 'pairs' → logprob: -2.279362201690674
    5. 'length' → logprob: -3.154362201690674
    6. '       ' → logprob: -3.279362201690674
    7. 'edges' → logprob: -3.904362201690674
    8. 'dimensions' → logprob: -4.279362201690674
    9. 'sizes' → logprob: -4.654362201690674
    10. 'norm' → logprob: -5.029362201690674

Token 289: ' dimensions' (ID: 23995)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -1.172231912612915
    2. 's' → logprob: -1.422231912612915
    3. 'keys' → logprob: -1.797231912612915
    4. '#' → logprob: -2.547231912612915
    5. 'norm' → logprob: -3.172231912612915
    6. 'pairs' → logprob: -3.422231912612915
    7. 'dims' → logprob: -3.797231912612915
    8. ' keys' → logprob: -3.797231912612915
    9. ' sides' → logprob: -3.922231912612915
    10. 'dimensions' → logprob: -4.672231674194336

Token 290: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25583529472351074
    2. '=' → logprob: -1.5058352947235107
    3. 's' → logprob: -5.63083553314209
    4. ' are' → logprob: -9.00583553314209
    5. 'dims' → logprob: -9.13083553314209
    6. 'are' → logprob: -11.38083553314209
    7. '_dims' → logprob: -11.75583553314209
    8. 'dimensions' → logprob: -11.88083553314209
    9. 'values' → logprob: -12.00583553314209
    10. '=list' → logprob: -12.38083553314209

Token 291: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4398902356624603
    2. ' the' → logprob: -1.0648902654647827
    3. 'list' → logprob: -5.314890384674072
    4. ' list' → logprob: -6.314890384674072
    5. 'each' → logprob: -6.564890384674072
    6. 'rect' → logprob: -7.189890384674072
    7. ' each' → logprob: -7.189890384674072
    8. ' these' → logprob: -7.939890384674072
    9. 'self' → logprob: -8.314889907836914
    10. ' all' → logprob: -8.314889907836914

Token 292: ' cub' (ID: 18538)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5306133031845093
    2. ' list' → logprob: -1.9056133031845093
    3. 'rect' → logprob: -2.155613422393799
    4. 'three' → logprob: -3.030613422393799
    5. ' three' → logprob: -3.405613422393799
    6. 'faces' → logprob: -3.905613422393799
    7. 's' → logprob: -4.780613422393799
    8. ' rectangles' → logprob: -5.280613422393799
    9. 'set' → logprob: -5.405613422393799
    10. 'dimensions' → logprob: -5.905613422393799

Token 293: 'oid' (ID: 11234)
  Prédit: 'oid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oid' → logprob: -0.438119113445282
    2. 'oids' → logprob: -1.1881191730499268
    3. 'ids' → logprob: -3.0631191730499268
    4. 'id' → logprob: -5.938118934631348
    5. '       ' → logprob: -8.813118934631348
    6. 's' → logprob: -9.188118934631348
    7. 'od' → logprob: -10.313118934631348
    8. 'ide' → logprob: -10.563118934631348
    9. 'ides' → logprob: -10.563118934631348
    10. 'oints' → logprob: -10.938118934631348

Token 294: ' should' (ID: 1757)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11476090550422668
    2. '=' → logprob: -2.7397608757019043
    3. ' are' → logprob: -3.4897608757019043
    4. '       ' → logprob: -4.864760875701904
    5. ' must' → logprob: -6.864760875701904
    6. 's' → logprob: -6.864760875701904
    7. ' will' → logprob: -6.989760875701904
    8. ',' → logprob: -7.114760875701904
    9. 'dims' → logprob: -7.989760875701904
    10. 'are' → logprob: -8.114761352539062

Token 295: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0763661339879036
    2. ' =' → logprob: -3.5763661861419678
    3. 'be' → logprob: -4.576365947723389
    4. ' match' → logprob: -4.576365947723389
    5. '=' → logprob: -4.826365947723389
    6. ' form' → logprob: -4.951365947723389
    7. ' satisfy' → logprob: -5.826365947723389
    8. 'match' → logprob: -6.451365947723389
    9. ' correspond' → logprob: -6.701365947723389
    10. ' come' → logprob: -6.951365947723389

Token 296: ' a' (ID: 261)
  Prédit: ' sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -1.1742945909500122
    2. ' set' → logprob: -1.6742945909500122
    3. 'sorted' → logprob: -2.0492944717407227
    4. 'set' → logprob: -2.0492944717407227
    5. 'list' → logprob: -2.7992944717407227
    6. '{' → logprob: -2.7992944717407227
    7. ' list' → logprob: -2.9242944717407227
    8. ' all' → logprob: -4.174294471740723
    9. 'len' → logprob: -4.424294471740723
    10. ' three' → logprob: -5.049294471740723

Token 297: ' tuple' (ID: 31311)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.36198726296424866
    2. ',' → logprob: -1.2369872331619263
    3. 'b' → logprob: -5.611987113952637
    4. ' b' → logprob: -5.861987113952637
    5. 'ble' → logprob: -6.111987113952637
    6. 'sorted' → logprob: -6.861987113952637
    7. 're' → logprob: -6.986987113952637
    8. ',B' → logprob: -7.361987113952637
    9. ' tuple' → logprob: -7.986987113952637
    10. ' ,' → logprob: -8.111987113952637

Token 298: ' (' (ID: 350)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.8170144557952881
    2. '(sorted' → logprob: -0.8170144557952881
    3. '(s' → logprob: -3.317014455795288
    4. 'sorted' → logprob: -3.567014455795288
    5. 'of' → logprob: -4.317014694213867
    6. ' sorted' → logprob: -4.442014694213867
    7. '(' → logprob: -4.817014694213867
    8. ' (' → logprob: -5.692014694213867
    9. '(tuple' → logprob: -6.442014694213867
    10. ',' → logprob: -6.567014694213867

Token 299: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06482021510601044
    2. 'x' → logprob: -4.189820289611816
    3. 'l' → logprob: -4.814820289611816
    4. ')' → logprob: -4.939820289611816
    5. ' a' → logprob: -5.189820289611816
    6. '(a' → logprob: -5.314820289611816
    7. 'sorted' → logprob: -5.314820289611816
    8. '
' → logprob: -5.814820289611816
    9. 'd' → logprob: -6.314820289611816
    10. ' (' → logprob: -6.689820289611816

Token 300: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019480334594845772
    2. ',b' → logprob: -6.25194787979126
    3. ' ,' → logprob: -11.501948356628418
    4. 'b' → logprob: -11.876948356628418
    5. 'a' → logprob: -14.751948356628418
    6. ')' → logprob: -15.001948356628418
    7. ',
' → logprob: -15.126948356628418
    8. ' ' → logprob: -15.251948356628418
    9. '1' → logprob: -15.626948356628418
    10. 's' → logprob: -15.751948356628418

Token 301: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.6331405639648438
    2. ',' → logprob: -0.7581405639648438
    3. ' ,' → logprob: -7.883140563964844
    4. '),' → logprob: -9.383140563964844
    5. 'c' → logprob: -10.133140563964844
    6. ',
' → logprob: -11.133140563964844
    7. ')' → logprob: -11.383140563964844
    8. ',a' → logprob: -12.008140563964844
    9. '
' → logprob: -13.133140563964844
    10. ',b' → logprob: -13.758140563964844

Token 302: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003713380778208375
    2. ')
' → logprob: -5.753713607788086
    3. '):' → logprob: -7.878713607788086
    4. '),' → logprob: -9.128713607788086
    5. '):
' → logprob: -10.878713607788086
    6. ')
' → logprob: -12.003713607788086
    7. '   ' → logprob: -12.378713607788086
    8. ',' → logprob: -12.503713607788086
    9. '       ' → logprob: -12.878713607788086
    10. ')`' → logprob: -12.878713607788086

Token 303: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033997902646660805
    2. '        
' → logprob: -5.878399848937988
    3. '
' → logprob: -7.628399848937988
    4. ',' → logprob: -9.753399848937988
    5. '<|end|>' → logprob: -10.753399848937988
    6. '      ' → logprob: -12.753399848937988
    7. '  
' → logprob: -12.878399848937988
    8. '       
' → logprob: -12.878399848937988
    9. '        ' → logprob: -13.128399848937988
    10. '<|end|>' → logprob: -13.378399848937988

Token 304: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04288545995950699
    2. '        
' → logprob: -3.6678855419158936
    3. '
' → logprob: -4.1678853034973145
    4. 'dims' → logprob: -8.792885780334473
    5. '<|end|>' → logprob: -9.042885780334473
    6. 'dimensions' → logprob: -9.292885780334473
    7. '  
' → logprob: -9.292885780334473
    8. '    
' → logprob: -9.917885780334473
    9. 'n' → logprob: -10.167885780334473
    10. '```' → logprob: -10.167885780334473

Token 305: ' Each' (ID: 11555)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5149728655815125
    2. ' dims' → logprob: -1.6399729251861572
    3. 'dims' → logprob: -1.8899729251861572
    4. ' dimensions' → logprob: -3.3899729251861572
    5. 'dimensions' → logprob: -4.639972686767578
    6. 'sizes' → logprob: -6.264972686767578
    7. ' sizes' → logprob: -6.264972686767578
    8. ' sides' → logprob: -6.639972686767578
    9. ' lengths' → logprob: -6.764972686767578
    10. 'rect' → logprob: -7.014972686767578

Token 306: ' rectangle' (ID: 45808)
  Prédit: ' pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pair' → logprob: -1.0726701021194458
    2. 'pair' → logprob: -1.5726701021194458
    3. 'norm' → logprob: -2.3226699829101562
    4. 'rect' → logprob: -2.5726699829101562
    5. ' of' → logprob: -2.9476699829101562
    6. ' face' → logprob: -3.4476699829101562
    7. 'dim' → logprob: -3.8226699829101562
    8. ' side' → logprob: -3.9476699829101562
    9. 'face' → logprob: -3.9476699829101562
    10. ' =' → logprob: -3.9476699829101562

Token 307: ' is' (ID: 382)
  Prédit: 'rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rep' → logprob: -2.283219337463379
    2. ' =' → logprob: -2.408219337463379
    3. ' in' → logprob: -2.533219337463379
    4. ' is' → logprob: -2.533219337463379
    5. 'dimension' → logprob: -2.533219337463379
    6. ' represents' → logprob: -2.533219337463379
    7. 'dims' → logprob: -2.908219337463379
    8. '_dims' → logprob: -3.158219337463379
    9. 'is' → logprob: -3.158219337463379
    10. ' has' → logprob: -3.283219337463379

Token 308: ' one' (ID: 1001)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0495022535324097
    2. 'a' → logprob: -1.6745022535324097
    3. 'min' → logprob: -2.049502372741699
    4. 'normalized' → logprob: -2.174502372741699
    5. 'sorted' → logprob: -3.049502372741699
    6. ' min' → logprob: -3.049502372741699
    7. ' normalized' → logprob: -3.799502372741699
    8. '(min' → logprob: -3.924502372741699
    9. ' (' → logprob: -3.924502372741699
    10. ' sorted' → logprob: -4.424502372741699

Token 309: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.03208542615175247
    2. ' (' → logprob: -4.407085418701172
    3. '(' → logprob: -5.282085418701172
    4. ' side' → logprob: -5.282085418701172
    5. 'of' → logprob: -5.407085418701172
    6. ' tuple' → logprob: -6.782085418701172
    7. ' pair' → logprob: -6.907085418701172
    8. ' dimension' → logprob: -6.907085418701172
    9. 's' → logprob: -8.282085418701172
    10. 'side' → logprob: -8.407085418701172

Token 310: ' (' (ID: 350)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9496027231216431
    2. ' the' → logprob: -1.949602723121643
    3. '(min' → logprob: -1.949602723121643
    4. '{' → logprob: -2.1996026039123535
    5. ' (' → logprob: -2.8246026039123535
    6. ' {(' → logprob: -3.0746026039123535
    7. '[(' → logprob: -3.5746026039123535
    8. 'min' → logprob: -3.9496026039123535
    9. '(' → logprob: -3.9496026039123535
    10. '(self' → logprob: -5.3246026039123535

Token 311: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.1316939890384674
    2. '{' → logprob: -3.2566940784454346
    3. ' (' → logprob: -3.2566940784454346
    4. '(' → logprob: -4.3816938400268555
    5. 'a' → logprob: -4.6316938400268555
    6. '(min' → logprob: -4.6316938400268555
    7. 'min' → logprob: -5.6316938400268555
    8. '(ab' → logprob: -6.0066938400268555
    9. ')' → logprob: -6.2566938400268555
    10. '   ' → logprob: -6.5066938400268555

Token 312: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.02736915461719036
    2. ',' → logprob: -3.777369260787964
    3. 'b' → logprob: -5.527369022369385
    4. ' ,' → logprob: -9.652369499206543
    5. '*b' → logprob: -9.902369499206543
    6. ',a' → logprob: -11.777369499206543
    7. ',c' → logprob: -12.152369499206543
    8. ',
' → logprob: -12.402369499206543
    9. ' ' → logprob: -13.152369499206543
    10. ' b' → logprob: -13.152369499206543

Token 313: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0038316678255796432
    2. ')' → logprob: -6.25383186340332
    3. ' ),' → logprob: -7.50383186340332
    4. ',' → logprob: -8.00383186340332
    5. '),(' → logprob: -8.00383186340332
    6. '
' → logprob: -8.25383186340332
    7. '       ' → logprob: -8.87883186340332
    8. '),
' → logprob: -9.00383186340332
    9. '   ' → logprob: -10.00383186340332
    10. ' ' → logprob: -10.00383186340332

Token 314: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.020130133256316185
    2. '(a' → logprob: -4.270130157470703
    3. '(c' → logprob: -5.270130157470703
    4. '       ' → logprob: -8.020130157470703
    5. '(b' → logprob: -8.270130157470703
    6. ',' → logprob: -9.145130157470703
    7. '(' → logprob: -10.395130157470703
    8. '           ' → logprob: -10.520130157470703
    9. '   ' → logprob: -11.020130157470703
    10. 'a' → logprob: -11.270130157470703

Token 315: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.39085906744003296
    2. 'a' → logprob: -1.1408591270446777
    3. ' b' → logprob: -5.765859127044678
    4. ' a' → logprob: -7.265859127044678
    5. 'c' → logprob: -9.26585865020752
    6. ',' → logprob: -10.89085865020752
    7. ' ' → logprob: -11.39085865020752
    8. '   ' → logprob: -12.01585865020752
    9. ' c' → logprob: -12.89085865020752
    10. '  ' → logprob: -13.32835865020752

Token 316: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.012637374922633171
    2. ',' → logprob: -4.387637138366699
    3. ',a' → logprob: -9.3876371383667
    4. ' ,' → logprob: -10.8876371383667
    5. 'c' → logprob: -11.1376371383667
    6. ',
' → logprob: -12.1376371383667
    7. '
' → logprob: -13.0126371383667
    8. '),' → logprob: -13.7626371383667
    9. '

' → logprob: -14.7626371383667
    10. ',b' → logprob: -15.0126371383667

Token 317: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0009823163272812963
    2. ')' → logprob: -7.375982284545898
    3. ',' → logprob: -8.250982284545898
    4. ' ),' → logprob: -9.500982284545898
    5. '),(' → logprob: -11.625982284545898
    6. '       ' → logprob: -11.750982284545898
    7. '   ' → logprob: -13.750982284545898
    8. ' ,' → logprob: -14.250982284545898
    9. '

' → logprob: -15.125982284545898
    10. ',),' → logprob: -15.375982284545898

Token 318: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.043509144335985184
    2. '(a' → logprob: -3.2935092449188232
    3. '(c' → logprob: -5.293509006500244
    4. '       ' → logprob: -8.418509483337402
    5. ' or' → logprob: -8.668509483337402
    6. '(' → logprob: -11.043509483337402
    7. ' and' → logprob: -11.293509483337402
    8. 'and' → logprob: -13.043509483337402
    9. '(b' → logprob: -13.543509483337402
    10. ' ' → logprob: -13.918509483337402

Token 319: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3816808760166168
    2. ' (' → logprob: -1.5066808462142944
    3. '(c' → logprob: -2.506680965423584
    4. 'a' → logprob: -4.631680965423584
    5. 'c' → logprob: -5.506680965423584
    6. ' c' → logprob: -9.131680488586426
    7. ' a' → logprob: -9.256680488586426
    8. ' ' → logprob: -10.381680488586426
    9. '(' → logprob: -10.881680488586426
    10. '   ' → logprob: -11.006680488586426

Token 320: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.021196860820055008
    2. ',' → logprob: -3.8961968421936035
    3. 'c' → logprob: -7.3961968421936035
    4. ' ,' → logprob: -11.021197319030762
    5. ',a' → logprob: -11.271197319030762
    6. ',
' → logprob: -12.521197319030762
    7. '),' → logprob: -12.646197319030762
    8. ',b' → logprob: -12.646197319030762
    9. ')' → logprob: -15.646197319030762
    10. '
' → logprob: -15.771197319030762

Token 321: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013301216531544924
    2. ')
' → logprob: -7.0013298988342285
    3. '):' → logprob: -8.001330375671387
    4. ' )' → logprob: -10.626330375671387
    5. ').' → logprob: -10.876330375671387
    6. '),' → logprob: -11.251330375671387
    7. '       ' → logprob: -11.501330375671387
    8. '):
' → logprob: -11.751330375671387
    9. ')

' → logprob: -13.126330375671387
    10. '))' → logprob: -13.626330375671387

Token 322: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3968983590602875
    2. '       ' → logprob: -1.1468983888626099
    3. '        
' → logprob: -4.64689826965332
    4. '

' → logprob: -9.27189826965332
    5. '<|end|>' → logprob: -9.27189826965332
    6. '  
' → logprob: -9.52189826965332
    7. '    
' → logprob: -10.39689826965332
    8. '
        
' → logprob: -10.89689826965332
    9. '
' → logprob: -11.02189826965332
    10. ',' → logprob: -11.52189826965332

Token 323: ' rect' (ID: 13107)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15367114543914795
    2. 'dims' → logprob: -2.1536712646484375
    3. '
' → logprob: -4.7786712646484375
    4. 'rect' (adapté à ' rect') → logprob: -5.2786712646484375
    5. ' dims' → logprob: -5.6536712646484375
    6. '        
' → logprob: -5.6536712646484375
    7. 'dimensions' → logprob: -6.1536712646484375
    8. 'pairs' → logprob: -7.2786712646484375
    9. 'sizes' → logprob: -7.6536712646484375
    10. ' dimensions' → logprob: -7.9036712646484375

Token 324: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009549835696816444
    2. 'angles' → logprob: -5.134549617767334
    3. '_dims' → logprob: -5.884549617767334
    4. '_pairs' → logprob: -8.384550094604492
    5. '_sizes' → logprob: -8.759550094604492
    6. '_sets' → logprob: -9.259550094604492
    7. '_s' → logprob: -9.384550094604492
    8. 'dims' → logprob: -9.759550094604492
    9. '_keys' → logprob: -10.259550094604492
    10. '_angles' → logprob: -10.259550094604492

Token 325: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016836799681186676
    2. '=' → logprob: -4.391836643218994
    3. 's' → logprob: -5.891836643218994
    4. '_dims' → logprob: -6.641836643218994
    5. 'dims' → logprob: -9.641837120056152
    6. '_keys' → logprob: -10.016837120056152
    7. '_list' → logprob: -10.141837120056152
    8. '_values' → logprob: -10.516837120056152
    9. '_items' → logprob: -10.891837120056152
    10. '_sizes' → logprob: -11.141837120056152

Token 326: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0023346166126430035
    2. '[list' → logprob: -6.5023345947265625
    3. ' list' → logprob: -7.5023345947265625
    4. 'sorted' → logprob: -8.377334594726562
    5. '[' → logprob: -10.252334594726562
    6. 'set' → logprob: -11.377334594726562
    7. '[count' → logprob: -13.877334594726562
    8. ' [' → logprob: -14.502334594726562
    9. 'tuple' → logprob: -14.752334594726562
    10. '[(' → logprob: -14.877334594726562

Token 327: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -1.5570885807392187e-05
    2. '(' → logprob: -11.125015258789062
    3. 'counts' → logprob: -14.375015258789062
    4. '(sorted' → logprob: -17.375015258789062
    5. '(
' → logprob: -17.625015258789062
    6. ' (' → logprob: -17.750015258789062
    7. 'count' → logprob: -18.000015258789062
    8. '((' → logprob: -18.375015258789062
    9. ' counts' → logprob: -18.500015258789062
    10. '[count' → logprob: -18.750015258789062

Token 328: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002059853868559003
    2. 'counts' → logprob: -6.3770599365234375
    3. '(count' → logprob: -8.377059936523438
    4. 'cts' → logprob: -10.002059936523438
    5. ' counts' → logprob: -10.127059936523438
    6. 'ents' → logprob: -10.752059936523438
    7. 'ts' → logprob: -11.627059936523438
    8. 'ects' → logprob: -12.252059936523438
    9. '[count' → logprob: -12.877059936523438
    10. ')' → logprob: -14.252059936523438

Token 329: '.keys' (ID: 18392)
  Prédit: '.keys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.keys' → logprob: -4.906711546937004e-05
    2. '().' → logprob: -11.125048637390137
    3. '.items' → logprob: -11.375048637390137
    4. '.' → logprob: -12.000048637390137
    5. ')' → logprob: -12.125048637390137
    6. 'keys' → logprob: -12.125048637390137
    7. '.values' → logprob: -13.000048637390137
    8. ' .' → logprob: -13.000048637390137
    9. '(keys' → logprob: -14.375048637390137
    10. ' keys' → logprob: -15.625048637390137

Token 330: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02206772193312645
    2. ')' → logprob: -4.022067546844482
    3. '())
' → logprob: -6.022067546844482
    4. '()' → logprob: -6.522067546844482
    5. ')
' → logprob: -12.39706802368164
    6. '()
' → logprob: -12.77206802368164
    7. ' ())' → logprob: -12.89706802368164
    8. '   ' → logprob: -13.52206802368164
    9. '())
' → logprob: -14.14706802368164
    10. '())

' → logprob: -14.14706802368164

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5443729758262634
    2. '
' → logprob: -1.0443730354309082
    3. 'a' → logprob: -2.919373035430908
    4. 'rect' → logprob: -5.419373035430908
    5. ' a' → logprob: -6.794373035430908
    6. '#' → logprob: -6.794373035430908
    7. '        
' → logprob: -7.044373035430908
    8. ',' → logprob: -7.044373035430908
    9. '```' → logprob: -7.044373035430908
    10. ' for' → logprob: -7.044373035430908

Token 332: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014801956713199615
    2. 'for' → logprob: -5.139801979064941
    3. 'rect' → logprob: -5.264801979064941
    4. '       ' → logprob: -6.264801979064941
    5. '#' (adapté à ' #') → logprob: -7.514801979064941
    6. ' a' → logprob: -8.139801979064941
    7. ' for' → logprob: -8.514801979064941
    8. '
' → logprob: -9.014801979064941
    9. 'from' → logprob: -9.389801979064941
    10. 'r' → logprob: -9.389801979064941

Token 333: ' Extract' (ID: 39239)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.24097178876399994
    2. 'for' → logprob: -2.240971803665161
    3. 'from' → logprob: -2.865971803665161
    4. '#' → logprob: -3.490971803665161
    5. 'rect' → logprob: -4.990971565246582
    6. ' a' → logprob: -5.990971565246582
    7. 'dims' → logprob: -5.990971565246582
    8. ' for' → logprob: -6.490971565246582
    9. 'possible' → logprob: -6.615971565246582
    10. 's' → logprob: -6.615971565246582

Token 334: ' all' (ID: 722)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0027914459351450205
    2. 'dims' → logprob: -6.627791404724121
    3. ' a' → logprob: -7.127791404724121
    4. 's' → logprob: -9.252791404724121
    5. '{' → logprob: -9.502791404724121
    6. 'dim' → logprob: -9.502791404724121
    7. 'dimensions' → logprob: -9.502791404724121
    8. 'd' → logprob: -9.502791404724121
    9. 'all' → logprob: -9.752791404724121
    10. 'rect' → logprob: -9.877791404724121

Token 335: ' edge' (ID: 11165)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5857234597206116
    2. 'dims' → logprob: -0.9607234597206116
    3. 'dimensions' → logprob: -3.335723400115967
    4. 'dim' → logprob: -4.335723400115967
    5. 'd' → logprob: -5.210723400115967
    6. 's' → logprob: -5.960723400115967
    7. 'edges' → logprob: -7.585723400115967
    8. '{' → logprob: -7.585723400115967
    9. ' a' → logprob: -7.835723400115967
    10. 'side' → logprob: -7.960723400115967

Token 336: ' lengths' (ID: 51957)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004105234984308481
    2. ' lengths' → logprob: -6.379105091094971
    3. 'length' → logprob: -6.754105091094971
    4. '_lengths' → logprob: -6.754105091094971
    5. 'sizes' → logprob: -10.504105567932129
    6. 'sets' → logprob: -10.879105567932129
    7. 'edges' → logprob: -12.629105567932129
    8. '_length' → logprob: -13.129105567932129
    9. 'dimensions' → logprob: -13.129105567932129
    10. ' s' → logprob: -13.254105567932129

Token 337: ' and' (ID: 326)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.024621816352009773
    2. '       ' → logprob: -5.149621963500977
    3. 'length' → logprob: -5.274621963500977
    4. 's' → logprob: -5.649621963500977
    5. ' edges' → logprob: -5.774621963500977
    6. ' =' → logprob: -6.149621963500977
    7. '=' → logprob: -6.399621963500977
    8. 'a' → logprob: -6.774621963500977
    9. 'all' → logprob: -7.524621963500977
    10. 'dims' → logprob: -7.649621963500977

Token 338: ' try' (ID: 2075)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.4397188723087311
    2. '{' → logprob: -2.0647189617156982
    3. 'set' → logprob: -2.5647189617156982
    4. 'edges' → logprob: -2.5647189617156982
    5. ' sorted' → logprob: -3.5647189617156982
    6. 'sum' → logprob: -4.314718723297119
    7. ' edges' → logprob: -4.814718723297119
    8. 'edge' → logprob: -5.314718723297119
    9. 'a' → logprob: -5.814718723297119
    10. '[' → logprob: -6.064718723297119

Token 339: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.22708387672901154
    2. '   ' → logprob: -2.602083921432495
    3. 'to' → logprob: -3.102083921432495
    4. ' all' → logprob: -3.227083921432495
    5. '       ' → logprob: -3.852083921432495
    6. ':
' → logprob: -4.477083683013916
    7. 'all' → logprob: -5.227083683013916
    8. 'ing' → logprob: -5.977083683013916
    9. ':' → logprob: -6.477083683013916
    10. '           ' → logprob: -7.602083683013916

Token 340: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.4191005229949951
    2. 'find' → logprob: -1.4191005229949951
    3. 'sorted' → logprob: -3.544100522994995
    4. 'a' → logprob: -3.669100522994995
    5. ' sorted' → logprob: -4.294100761413574
    6. 'set' → logprob: -4.794100761413574
    7. ' a' → logprob: -5.419100761413574
    8. 'len' → logprob: -5.669100761413574
    9. 'rect' → logprob: -5.794100761413574
    10. 'sort' → logprob: -5.919100761413574

Token 341: ' if' (ID: 538)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.38738664984703064
    2. 'a' → logprob: -1.137386679649353
    3. ' edges' → logprob: -8.387386322021484
    4. '[a' → logprob: -9.262386322021484
    5. ' three' → logprob: -10.012386322021484
    6. ' all' → logprob: -10.262386322021484
    7. ' sides' → logprob: -10.637386322021484
    8. 'edges' → logprob: -11.137386322021484
    9. 'abc' → logprob: -11.512386322021484
    10. ' possible' → logprob: -11.512386322021484

Token 342: ' such' (ID: 2238)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2828548550605774
    2. ' any' → logprob: -2.4078547954559326
    3. ' there' → logprob: -3.0328547954559326
    4. 'a' → logprob: -3.2828547954559326
    5. ' three' → logprob: -3.7828547954559326
    6. ' ' → logprob: -3.9078547954559326
    7. ' an' → logprob: -4.907855033874512
    8. ' len' → logprob: -5.032855033874512
    9. 'len' → logprob: -5.782855033874512
    10. ' the' → logprob: -5.907855033874512

Token 343: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31707850098609924
    2. ' a' → logprob: -1.3170784711837769
    3. ' lengths' → logprob: -6.567078590393066
    4. ' edges' → logprob: -6.817078590393066
    5. ' three' → logprob: -7.567078590393066
    6. ' an' → logprob: -8.192078590393066
    7. 'edges' → logprob: -8.817078590393066
    8. ' trip' → logprob: -9.942078590393066
    9. ' dimensions' → logprob: -10.192078590393066
    10. 's' → logprob: -10.192078590393066

Token 344: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5666533708572388
    2. 'a' → logprob: -2.066653251647949
    3. ' trip' → logprob: -2.066653251647949
    4. ' a' → logprob: -3.191653251647949
    5. ' triple' → logprob: -3.441653251647949
    6. ',b' → logprob: -3.566653251647949
    7. ' (' → logprob: -4.066653251647949
    8. ' ,' → logprob: -4.691653251647949
    9. 'trip' → logprob: -4.816653251647949
    10. 'b' → logprob: -5.191653251647949

Token 345: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.07117617130279541
    2. ',' → logprob: -2.696176052093506
    3. 'c' → logprob: -7.446176052093506
    4. ' ,' → logprob: -7.696176052093506
    5. ',b' → logprob: -8.571176528930664
    6. '_,' → logprob: -12.321176528930664
    7. '=' → logprob: -13.946176528930664
    8. '
' → logprob: -14.071176528930664
    9. 'and' → logprob: -14.071176528930664
    10. ',
' → logprob: -14.196176528930664

Token 346: ' exist' (ID: 4310)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6977634429931641
    2. ' exist' → logprob: -1.572763442993164
    3. '=' → logprob: -1.697763442993164
    4. ' can' → logprob: -2.947763442993164
    5. 's' → logprob: -4.072763442993164
    6. ' exists' → logprob: -4.072763442993164
    7. 'exist' → logprob: -4.822763442993164
    8. ' lengths' → logprob: -5.322763442993164
    9. 'exists' → logprob: -5.447763442993164
    10. 'can' → logprob: -5.947763442993164

Token 347: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.003363908501341939
    2. ':
' → logprob: -6.378364086151123
    3. ':' → logprob: -7.503364086151123
    4. '       ' → logprob: -7.628364086151123
    5. '
' → logprob: -8.128363609313965
    6. '

' → logprob: -9.003363609313965
    7. '        
' → logprob: -10.253363609313965
    8. ':

' → logprob: -10.503363609313965
    9. ' edges' → logprob: -11.128363609313965
    10. 'edges' → logprob: -11.128363609313965

Token 348: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11465270072221756
    2. '       ' → logprob: -2.739652633666992
    3. ':
' → logprob: -4.864652633666992
    4. ' edges' → logprob: -5.114652633666992
    5. ',
' → logprob: -5.364652633666992
    6. 'edges' → logprob: -5.614652633666992
    7. ',' → logprob: -5.739652633666992
    8. ' for' → logprob: -6.239652633666992
    9. 'a' → logprob: -6.239652633666992
    10. ' from' → logprob: -6.364652633666992

Token 349: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.1474957913160324
    2. ' edges' → logprob: -2.147495746612549
    3. 'from' → logprob: -4.772495746612549
    4. ' from' → logprob: -5.647495746612549
    5. 'a' → logprob: -5.772495746612549
    6. 'all' → logprob: -6.772495746612549
    7. 'length' → logprob: -6.897495746612549
    8. '       ' → logprob: -7.397495746612549
    9. 'dims' → logprob: -7.397495746612549
    10. ' lengths' → logprob: -7.897495746612549

Token 350: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889308780431747
    2. '=' → logprob: -2.5788931846618652
    3. '=set' → logprob: -13.578892707824707
    4. 's' → logprob: -13.703892707824707
    5. ' ' → logprob: -14.453892707824707
    6. 'set' → logprob: -15.953892707824707
    7. '_set' → logprob: -16.328893661499023
    8. '   ' → logprob: -16.828893661499023
    9. '_' → logprob: -16.828893661499023
    10. ' =
' → logprob: -17.453893661499023

Token 351: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.3633871078491211
    2. 'set' → logprob: -1.613387107849121
    3. '[]' → logprob: -2.738387107849121
    4. '[' → logprob: -4.613387107849121
    5. 'sorted' → logprob: -4.738387107849121
    6. '{' → logprob: -4.863387107849121
    7. ' set' → logprob: -5.113387107849121
    8. ' []
' → logprob: -5.738387107849121
    9. ' []' → logprob: -6.988387107849121
    10. 'rect' → logprob: -7.113387107849121

Token 352: '       ' (ID: 309)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.2113807201385498
    2. 'for' → logprob: -2.33638072013855
    3. '
' → logprob: -3.21138072013855
    4. '       ' → logprob: -3.96138072013855
    5. ' =' → logprob: -4.586380958557129
    6. ' for' → logprob: -5.086380958557129
    7. ' +=' → logprob: -5.211380958557129
    8. '+=' → logprob: -5.586380958557129
    9. '=' → logprob: -6.086380958557129
    10. '.append' → logprob: -6.586380958557129

Token 353: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.013262584805488586
    2. ' for' → logprob: -4.388262748718262
    3. 'edges' → logprob: -7.263262748718262
    4. ' edges' → logprob: -10.638262748718262
    5. '
' → logprob: -11.388262748718262
    6. '   ' → logprob: -12.138262748718262
    7. '       ' → logprob: -12.388262748718262
    8. '[' → logprob: -13.513262748718262
    9. '	for' → logprob: -13.638262748718262
    10. '        
' → logprob: -13.763262748718262

Token 354: ' r' (ID: 428)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.4855490028858185
    2. 'r' → logprob: -1.485548973083496
    3. ' rect' → logprob: -1.985548973083496
    4. ' r' → logprob: -3.985548973083496
    5. 'norm' → logprob: -6.610548973083496
    6. ' norm' → logprob: -7.485548973083496
    7. '   ' → logprob: -8.485548973083496
    8. '	rect' → logprob: -9.610548973083496
    9. ' ' → logprob: -10.860548973083496
    10. ' key' → logprob: -11.298048973083496

Token 355: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005178728140890598
    2. 'in' → logprob: -6.005178928375244
    3. 'ect' → logprob: -6.755178928375244
    4. ' ' → logprob: -7.005178928375244
    5. 'ec' → logprob: -8.380178451538086
    6. 'ct' → logprob: -9.255178451538086
    7. ' i' → logprob: -9.880178451538086
    8. 'e' → logprob: -9.880178451538086
    9. 'ects' → logprob: -9.880178451538086
    10. '  ' → logprob: -10.630178451538086

Token 356: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.005942190065979958
    2. ' rect' → logprob: -5.130942344665527
    3. 'counts' → logprob: -12.630942344665527
    4. 'range' → logprob: -13.005942344665527
    5. '[' → logprob: -13.255942344665527
    6. '   ' → logprob: -13.380942344665527
    7. '	rect' → logprob: -14.005942344665527
    8. 'count' → logprob: -14.005942344665527
    9. 'self' → logprob: -14.255942344665527
    10. '(rect' → logprob: -14.255942344665527

Token 357: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07081463187932968
    2. 'ects' → logprob: -2.945814609527588
    3. 'angles' → logprob: -5.195814609527588
    4. 'rect' → logprob: -5.445814609527588
    5. '(rect' → logprob: -6.070814609527588
    6. 'cts' → logprob: -7.070814609527588
    7. '   ' → logprob: -7.445814609527588
    8. '[' → logprob: -7.945814609527588
    9. '       ' → logprob: -8.195815086364746
    10. ')' → logprob: -8.570815086364746

Token 358: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16039198637008667
    2. ':
' → logprob: -1.9103920459747314
    3. ' :' → logprob: -9.785391807556152
    4. '           ' → logprob: -10.160391807556152
    5. '       ' → logprob: -10.910391807556152
    6. ' :
' → logprob: -11.035391807556152
    7. '):
' → logprob: -11.410391807556152
    8. '   ' → logprob: -11.660391807556152
    9. ':
' → logprob: -12.035391807556152
    10. '):' → logprob: -12.160391807556152

Token 359: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37580934166908264
    2. 'edges' → logprob: -1.7508093118667603
    3. ' edges' → logprob: -2.62580943107605
    4. '           ' → logprob: -2.87580943107605
    5. '   ' → logprob: -4.625809192657471
    6. '(edges' → logprob: -7.500809192657471
    7. '.edges' → logprob: -8.375809669494629
    8. 'for' → logprob: -9.750809669494629
    9. 'Edges' → logprob: -9.750809669494629
    10. '	   ' → logprob: -10.500809669494629

Token 360: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.011446128599345684
    2. '   ' → logprob: -4.761445999145508
    3. ' edges' → logprob: -5.886445999145508
    4. 'for' → logprob: -10.636445999145508
    5. '    
' → logprob: -11.136445999145508
    6. '       ' → logprob: -12.011445999145508
    7. '
' → logprob: -13.261445999145508
    8. '        
' → logprob: -13.761445999145508
    9. '.edges' → logprob: -13.761445999145508
    10. '(edges' → logprob: -14.636445999145508

Token 361: ' +=' (ID: 2757)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.0024047892075031996
    2. '+=' → logprob: -6.252404689788818
    3. ' +=' → logprob: -8.377405166625977
    4. '.' → logprob: -8.752405166625977
    5. '.append' → logprob: -9.377405166625977
    6. ' .' → logprob: -13.502405166625977
    7. '   ' → logprob: -14.502405166625977
    8. 'extend' → logprob: -14.752405166625977
    9. 'extends' → logprob: -15.127405166625977
    10. '+' → logprob: -15.252405166625977

Token 362: ' r' (ID: 428)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.308846116065979
    2. 'r' → logprob: -1.558846116065979
    3. '[r' → logprob: -3.0588459968566895
    4. ' list' → logprob: -5.0588459968566895
    5. '[list' → logprob: -6.5588459968566895
    6. ' r' → logprob: -7.5588459968566895
    7. ' [' → logprob: -10.058846473693848
    8. '[' → logprob: -10.308846473693848
    9. '[
' → logprob: -12.058846473693848
    10. '[*' → logprob: -12.558846473693848

Token 363: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 364: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06460288912057877
    2. '       ' → logprob: -2.814602851867676
    3. '        
' → logprob: -6.564602851867676
    4. ' edges' → logprob: -7.439602851867676
    5. '
' → logprob: -8.814602851867676
    6. '  
' → logprob: -8.939602851867676
    7. 'edges' → logprob: -8.939602851867676
    8. ' 
' → logprob: -9.564602851867676
    9. '    
' → logprob: -9.689602851867676
    10. '

' → logprob: -10.689602851867676

Token 365: ' edges' (ID: 22569)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5970841646194458
    2. ' 
' → logprob: -1.7220841646194458
    3. ' edges' → logprob: -1.8470841646194458
    4. 'edges' (adapté à ' edges') → logprob: -3.2220840454101562
    5. '       ' → logprob: -3.7220840454101562
    6. ' \' → logprob: -4.597084045410156
    7. '        
' → logprob: -4.722084045410156
    8. ' from' → logprob: -5.972084045410156
    9. ' _' → logprob: -6.097084045410156
    10. '_edges' → logprob: -6.222084045410156

Token 366: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5565053820610046
    2. ' =' → logprob: -1.4315054416656494
    3. '.sort' → logprob: -1.6815054416656494
    4. '_sorted' → logprob: -7.30650520324707
    5. 'sort' → logprob: -8.05650520324707
    6. 'sorted' → logprob: -8.80650520324707
    7. '.' → logprob: -9.05650520324707
    8. '_count' → logprob: -9.18150520324707
    9. 'count' → logprob: -9.30650520324707
    10. '_counts' → logprob: -10.05650520324707

Token 367: ' set' (ID: 920)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.09203607589006424
    2. ' sorted' → logprob: -2.467036008834839
    3. 'list' → logprob: -6.217036247253418
    4. ' list' → logprob: -7.467036247253418
    5. 'set' → logprob: -7.842036247253418
    6. '[' → logprob: -9.717036247253418
    7. ' [' → logprob: -10.217036247253418
    8. ' set' → logprob: -11.217036247253418
    9. '(sorted' → logprob: -11.717036247253418
    10. 'tuple' → logprob: -12.467036247253418

Token 368: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -9.849109119386412e-06
    2. 'edges' → logprob: -11.625009536743164
    3. '(ed' → logprob: -14.625009536743164
    4. '(edge' → logprob: -15.500009536743164
    5. '()' → logprob: -16.625009536743164
    6. '(' → logprob: -17.250009536743164
    7. '(list' → logprob: -18.875009536743164
    8. '.edges' → logprob: -19.000009536743164
    9. '([' → logprob: -19.000009536743164
    10. ' edges' → logprob: -19.250009536743164

Token 369: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00033581978641450405
    2. ')
' → logprob: -8.500335693359375
    3. ' )' → logprob: -9.375335693359375
    4. '())' → logprob: -10.625335693359375
    5. '       ' → logprob: -10.750335693359375
    6. '()' → logprob: -14.375335693359375
    7. ')

' → logprob: -14.625335693359375
    8. '))' → logprob: -15.750335693359375
    9. '   ' → logprob: -16.000335693359375
    10. ' ())' → logprob: -16.500335693359375

Token 370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005080533679574728
    2. ' if' → logprob: -5.505080699920654
    3. '
' → logprob: -7.255080699920654
    4. 'if' → logprob: -9.130080223083496
    5. '        
' → logprob: -9.505080223083496
    6. ',' → logprob: -10.630080223083496
    7. ')' → logprob: -11.255080223083496
    8. ' 
' → logprob: -11.380080223083496
    9. '   ' → logprob: -11.630080223083496
    10. '<|end|>' → logprob: -12.130080223083496

Token 371: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.33811473846435547
    2. ' if' → logprob: -1.3381147384643555
    3. '       ' → logprob: -3.7131147384643555
    4. '
' → logprob: -10.463114738464355
    5. 'return' → logprob: -10.463114738464355
    6. '        
' → logprob: -10.963114738464355
    7. ')' → logprob: -11.213114738464355
    8. '   ' → logprob: -11.838114738464355
    9. ',' → logprob: -11.838114738464355
    10. ' 
' → logprob: -11.963114738464355

Token 372: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6931482553482056
    2. ' len' → logprob: -0.6931482553482056
    3. '(len' → logprob: -14.068148612976074
    4. '   ' → logprob: -16.068147659301758
    5. ' ' → logprob: -16.318147659301758
    6. ' not' → logprob: -17.443147659301758
    7. '	len' → logprob: -17.443147659301758
    8. '  ' → logprob: -17.943147659301758
    9. '
' → logprob: -17.943147659301758
    10. '       ' → logprob: -19.443147659301758

Token 373: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.00038920470979064703
    2. '(' → logprob: -8.000389099121094
    3. 'edges' → logprob: -9.875389099121094
    4. ' edges' → logprob: -13.625389099121094
    5. ' (' → logprob: -14.375389099121094
    6. '(ed' → logprob: -15.250389099121094
    7. '(edge' → logprob: -15.625389099121094
    8. '(
' → logprob: -16.500389099121094
    9. '.edges' → logprob: -17.875389099121094
    10. '({' → logprob: -18.000389099121094

Token 374: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27921363711357117
    2. ' !=' → logprob: -1.5292136669158936
    3. '!=' → logprob: -3.9042136669158936
    4. ' )' → logprob: -5.1542134284973145
    5. ')!=' → logprob: -7.9042134284973145
    6. ' <' → logprob: -8.029213905334473
    7. '<' → logprob: -9.279213905334473
    8. ' ==' → logprob: -9.404213905334473
    9. '==' → logprob: -9.904213905334473
    10. ' not' → logprob: -11.154213905334473

Token 375: ' not' (ID: 625)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.443361759185791
    2. '!=' → logprob: -1.068361759185791
    3. '>' → logprob: -4.943361759185791
    4. ' >' → logprob: -5.443361759185791
    5. '==' → logprob: -6.318361759185791
    6. '3' → logprob: -7.943361759185791
    7. ' ==' → logprob: -7.943361759185791
    8. ' not' → logprob: -8.318361282348633
    9. ')' → logprob: -9.318361282348633
    10. ' <' → logprob: -9.693361282348633

Token 376: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07290111482143402
    2. 'in' → logprob: -2.9479010105133057
    3. '=' → logprob: -4.822901248931885
    4. ' ' → logprob: -5.072901248931885
    5. '==' → logprob: -7.197901248931885
    6. '  ' → logprob: -7.822901248931885
    7. '   ' → logprob: -8.322900772094727
    8. '3' → logprob: -8.447900772094727
    9. '0' → logprob: -8.447900772094727
    10. '1' → logprob: -8.697900772094727

Token 377: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.6719538569450378
    2. ' {' → logprob: -0.7969538569450378
    3. '[' → logprob: -4.0469536781311035
    4. ' [' → logprob: -4.7969536781311035
    5. ' (' → logprob: -4.9219536781311035
    6. '(' → logprob: -5.4219536781311035
    7. ' ' → logprob: -6.7969536781311035
    8. '  ' → logprob: -11.421954154968262
    9. '   ' → logprob: -11.671954154968262
    10. ' ' → logprob: -12.171954154968262

Token 378: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.16874434053897858
    2. ' ' → logprob: -2.0437443256378174
    3. '2' → logprob: -3.6687443256378174
    4. '{' → logprob: -9.043744087219238
    5. '   ' → logprob: -10.418744087219238
    6. '  ' → logprob: -10.418744087219238
    7. ' {' → logprob: -11.293744087219238
    8. '
' → logprob: -11.668744087219238
    9. '       ' → logprob: -12.543744087219238
    10. '  
' → logprob: -12.543744087219238

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004044554370921105
    2. ' ,' → logprob: -7.875404357910156
    3. '3' → logprob: -10.875404357910156
    4. ',
' → logprob: -12.375404357910156
    5. '}' → logprob: -14.125404357910156
    6. ' ' → logprob: -15.625404357910156
    7. '
' → logprob: -16.500404357910156
    8. '1' → logprob: -17.250404357910156
    9. '7' → logprob: -17.250404357910156
    10. '6' → logprob: -17.250404357910156

Token 380: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00018006093159783632
    2. ' ' → logprob: -8.6251802444458
    3. '
' → logprob: -15.1251802444458
    4. '   ' → logprob: -15.6251802444458
    5. '  ' → logprob: -16.875179290771484
    6. '  
' → logprob: -17.500179290771484
    7. '}' → logprob: -18.625179290771484
    8. 'or' → logprob: -18.625179290771484
    9. ' 
' → logprob: -18.625179290771484
    10. '```' → logprob: -18.937679290771484

Token 381: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.3487339913845062
    2. '}:' → logprob: -1.2237340211868286
    3. ',' → logprob: -8.973733901977539
    4. ':' → logprob: -9.473733901977539
    5. '):' → logprob: -10.598733901977539
    6. ' }:' → logprob: -10.598733901977539
    7. ' }' → logprob: -10.973733901977539
    8. '}
' → logprob: -11.723733901977539
    9. '):
' → logprob: -12.848733901977539
    10. ':
' → logprob: -13.223733901977539

Token 382: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029546432197093964
    2. ':
' → logprob: -5.877954483032227
    3. ':return' → logprob: -8.877954483032227
    4. ' :' → logprob: -12.502954483032227
    5. '):' → logprob: -12.752954483032227
    6. ' or' → logprob: -13.377954483032227
    7. ' and' → logprob: -13.877954483032227
    8. '       ' → logprob: -15.127954483032227
    9. ':

' → logprob: -15.252954483032227
    10. ')' → logprob: -15.377954483032227

Token 383: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16194559633731842
    2. ':' → logprob: -2.2869455814361572
    3. '           ' → logprob: -3.6619455814361572
    4. '       ' → logprob: -4.036945819854736
    5. ':return' → logprob: -6.036945819854736
    6. ' :
' → logprob: -6.911945819854736
    7. '   ' → logprob: -7.911945819854736
    8. ' return' → logprob: -7.911945819854736
    9. ' :' → logprob: -8.661945343017578
    10. '    ' → logprob: -8.786945343017578

Token 384: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.17824603617191315
    2. '           ' → logprob: -2.428246021270752
    3. 'return' (adapté à ' return') → logprob: -2.678246021270752
    4. '
' → logprob: -5.553246021270752
    5. ' 
' → logprob: -7.053246021270752
    6. '   ' → logprob: -7.428246021270752
    7. '       ' → logprob: -7.678246021270752
    8. '    ' → logprob: -7.803246021270752
    9. '	return' → logprob: -9.80324649810791
    10. '               ' → logprob: -10.05324649810791

Token 385: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.005233763717114925
    2. ' False' → logprob: -5.2552337646484375
    3. 'True' → logprob: -16.755233764648438
    4. '(False' → logprob: -20.130233764648438
    5. 'None' → logprob: -20.380233764648438
    6. '_false' → logprob: -20.880233764648438
    7. 'false' → logprob: -21.255233764648438
    8. ' True' → logprob: -21.630233764648438
    9. '=False' → logprob: -22.755233764648438
    10. ' ' → logprob: -22.755233764648438

Token 386: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.584539532661438
    2. '       ' → logprob: -0.834539532661438
    3. '        
' → logprob: -4.834539413452148
    4. '    
' → logprob: -8.834539413452148
    5. '<|end|>' → logprob: -9.584539413452148
    6. '  
' → logprob: -10.084539413452148
    7. '\n' → logprob: -10.209539413452148
    8. 'return' → logprob: -10.209539413452148
    9. '   ' → logprob: -10.334539413452148
    10. '
' → logprob: -10.334539413452148

Token 387: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25629371404647827
    2. '       ' → logprob: -1.756293773651123
    3. '#' → logprob: -3.381293773651123
    4. '        
' → logprob: -4.881293773651123
    5. 'a' → logprob: -5.381293773651123
    6. ' edges' → logprob: -6.256293773651123
    7. 'edges' → logprob: -6.881293773651123
    8. ' a' → logprob: -7.131293773651123
    9. ' if' → logprob: -7.381293773651123
    10. 'if' → logprob: -7.631293773651123

Token 388: ' Impossible' (ID: 136939)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34834009408950806
    2. ' return' → logprob: -2.2233400344848633
    3. '#' → logprob: -2.7233400344848633
    4. '
' → logprob: -2.9733400344848633
    5. 'return' → logprob: -3.8483400344848633
    6. ' #' → logprob: -4.098340034484863
    7. ' edges' → logprob: -4.348340034484863
    8. ' a' → logprob: -5.098340034484863
    9. '        
' → logprob: -5.973340034484863
    10. 'a' → logprob: -6.348340034484863

Token 389: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32016247510910034
    2. '
' → logprob: -1.3201625347137451
    3. '        
' → logprob: -5.070162296295166
    4. '<|end|>' → logprob: -8.320162773132324
    5. '
' → logprob: -9.570162773132324
    6. '   ' → logprob: -10.320162773132324
    7. 'return' → logprob: -10.695162773132324
    8. ',' → logprob: -10.695162773132324
    9. ')' → logprob: -10.695162773132324
    10. '

' → logprob: -10.820162773132324

Token 390: ' form' (ID: 1625)
  Prédit: 'form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'form' → logprob: -0.1128833219408989
    2. ' form' → logprob: -2.2378833293914795
    3. 'match' → logprob: -11.237883567810059
    4. 'construct' → logprob: -11.487883567810059
    5. 'make' → logprob: -11.862883567810059
    6. 'build' → logprob: -12.237883567810059
    7. 'have' → logprob: -12.487883567810059
    8. 'find' → logprob: -12.862883567810059
    9. 'det' → logprob: -13.237883567810059
    10. ' match' → logprob: -13.362883567810059

Token 391: ' cub' (ID: 18538)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09649267792701721
    2. ' a' → logprob: -2.9714927673339844
    3. 'cub' → logprob: -3.3464927673339844
    4. 'the' → logprob: -5.596492767333984
    5. ' cub' → logprob: -6.721492767333984
    6. ' the' → logprob: -8.346492767333984
    7. 'cube' → logprob: -9.221492767333984
    8. 'c' → logprob: -9.971492767333984
    9. '3' → logprob: -10.346492767333984
    10. 'edges' → logprob: -10.471492767333984

Token 392: 'oid' (ID: 11234)
  Prédit: 'oid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oid' → logprob: -8.900034299585968e-05
    2. 'o' → logprob: -9.375088691711426
    3. 'oids' → logprob: -13.625088691711426
    4. 'oi' → logprob: -13.625088691711426
    5. '```' → logprob: -14.750088691711426
    6. '**' → logprob: -15.250088691711426
    7. ' oid' → logprob: -15.625088691711426
    8. 'oidal' → logprob: -15.875088691711426
    9. 'od' → logprob: -16.250089645385742
    10. '...' → logprob: -16.500089645385742

Token 393: ' edges' (ID: 22569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031338583678007126
    2. '
' → logprob: -3.656338691711426
    3. '        
' → logprob: -5.531338691711426
    4. '<|end|>' → logprob: -8.406338691711426
    5. '   ' → logprob: -8.781338691711426
    6. '.' → logprob: -9.156338691711426
    7. '    
' → logprob: -9.281338691711426
    8. ')' → logprob: -9.406338691711426
    9. ',' → logprob: -9.406338691711426
    10. 'return' → logprob: -10.156338691711426

Token 394: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4720463752746582
    2. '
' → logprob: -1.0970463752746582
    3. '        
' → logprob: -3.347046375274658
    4. '<|end|>' → logprob: -5.847046375274658
    5. ' edges' → logprob: -7.597046375274658
    6. 'edges' → logprob: -7.722046375274658
    7. ',' → logprob: -7.722046375274658
    8. '#' → logprob: -7.722046375274658
    9. 'import' → logprob: -7.847046375274658
    10. '    
' → logprob: -8.3470458984375

Token 395: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5157633423805237
    2. '       ' → logprob: -1.015763282775879
    3. '        
' → logprob: -4.140763282775879
    4. '   ' → logprob: -4.390763282775879
    5. ' edges' → logprob: -5.140763282775879
    6. '    
' → logprob: -6.015763282775879
    7. '#' → logprob: -7.015763282775879
    8. ' for' → logprob: -7.390763282775879
    9. 'edges' → logprob: -7.515763282775879
    10. '  
' → logprob: -7.765763282775879

Token 396: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.487056702375412
    2. '       ' → logprob: -2.2370567321777344
    3. 'edges' → logprob: -2.4870567321777344
    4. 'if' → logprob: -2.7370567321777344
    5. 'a' → logprob: -2.7370567321777344
    6. 'return' → logprob: -4.112056732177734
    7. ' edges' → logprob: -4.487056732177734
    8. 'import' → logprob: -5.112056732177734
    9. 'from' → logprob: -5.237056732177734
    10. 'possible' → logprob: -5.487056732177734

Token 397: ' For' (ID: 2214)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8505052924156189
    2. 'from' → logprob: -1.1005053520202637
    3. 'for' → logprob: -1.8505053520202637
    4. 'if' → logprob: -3.7255053520202637
    5. 'edges' → logprob: -3.9755053520202637
    6. 'possible' → logprob: -4.475505352020264
    7. 'import' → logprob: -4.725505352020264
    8. 'a' → logprob: -4.975505352020264
    9. 'all' → logprob: -6.350505352020264
    10. ' from' → logprob: -6.600505352020264

Token 398: ' three' (ID: 3407)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9060486555099487
    2. ' r' → logprob: -1.7810486555099487
    3. 'a' → logprob: -2.4060487747192383
    4. ' i' → logprob: -2.7810487747192383
    5. ' ' → logprob: -3.2810487747192383
    6. 'r' → logprob: -3.2810487747192383
    7. ' len' → logprob: -3.4060487747192383
    8. ' rect' → logprob: -3.5310487747192383
    9. ' edge' → logprob: -3.6560487747192383
    10. ' three' → logprob: -4.156048774719238

Token 399: ' unique' (ID: 5746)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.3846219480037689
    2. ' edges' → logprob: -2.8846218585968018
    3. ' rectangles' → logprob: -2.8846218585968018
    4. ' pairs' → logprob: -3.1346218585968018
    5. ' rect' → logprob: -3.1346218585968018
    6. ' unique' → logprob: -3.7596218585968018
    7. 'pairs' → logprob: -3.7596218585968018
    8. 'edges' → logprob: -4.134622097015381
    9. 'r' → logprob: -4.134622097015381
    10. 'unique' → logprob: -4.259622097015381

Token 400: ' edges' (ID: 22569)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.19179528951644897
    2. ' rectangles' → logprob: -1.9417953491210938
    3. ' edges' → logprob: -4.566795349121094
    4. 'edges' → logprob: -4.691795349121094
    5. ' rect' → logprob: -5.816795349121094
    6. 'pairs' → logprob: -6.441795349121094
    7. ' pairs' → logprob: -6.941795349121094
    8. 'r' → logprob: -7.066795349121094
    9. 's' → logprob: -7.191795349121094
    10. ' sides' → logprob: -7.316795349121094

Token 401: ' a' (ID: 261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5613968372344971
    2. 'a' → logprob: -2.311396837234497
    3. ' to' → logprob: -2.311396837234497
    4. 'if' → logprob: -3.061396837234497
    5. ' if' → logprob: -3.186396837234497
    6. ':' → logprob: -3.311396837234497
    7. ' a' → logprob: -3.436396837234497
    8. 'to' → logprob: -3.686396837234497
    9. 'edges' → logprob: -4.186396598815918
    10. ' edges' → logprob: -5.061396598815918

Token 402: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6339058876037598
    2. ',b' → logprob: -0.7589058876037598
    3. 'b' → logprob: -6.75890588760376
    4. ' ,' → logprob: -9.133905410766602
    5. ' =' → logprob: -11.633905410766602
    6. ',a' → logprob: -11.883905410766602
    7. 'a' → logprob: -12.133905410766602
    8. ',
' → logprob: -12.133905410766602
    9. '=' → logprob: -12.508905410766602
    10. ' b' → logprob: -13.258905410766602

Token 403: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.1272393763065338
    2. ',' → logprob: -2.127239465713501
    3. 'c' → logprob: -8.127239227294922
    4. ' ,' → logprob: -11.377239227294922
    5. ',b' → logprob: -13.252239227294922
    6. ',
' → logprob: -14.127239227294922
    7. ',C' → logprob: -15.127239227294922
    8. '=' → logprob: -16.127239227294922
    9. ',a' → logprob: -16.377239227294922
    10. ' c' → logprob: -16.377239227294922

Token 404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6292968988418579
    2. ':' → logprob: -1.504296898841858
    3. ' =' → logprob: -2.1292967796325684
    4. ' if' → logprob: -3.0042967796325684
    5. ':
' → logprob: -4.129296779632568
    6. ' edges' → logprob: -4.379296779632568
    7. ' in' → logprob: -4.629296779632568
    8. '       ' → logprob: -4.879296779632568
    9. 'if' → logprob: -5.129296779632568
    10. '
' → logprob: -5.254296779632568

Token 405: ' their' (ID: 1043)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4995669424533844
    2. ' a' → logprob: -1.374566912651062
    3. ' edges' → logprob: -2.6245670318603516
    4. '       ' → logprob: -3.7495670318603516
    5. 'if' → logprob: -4.499567031860352
    6. 'a' → logprob: -4.499567031860352
    7. ' return' → logprob: -5.124567031860352
    8. ' for' → logprob: -5.249567031860352
    9. ' from' → logprob: -5.374567031860352
    10. 'edges' → logprob: -6.124567031860352

Token 406: ' pairs' (ID: 24702)
  Prédit: ' sums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sums' → logprob: -0.6021609306335449
    2. ' combinations' → logprob: -1.852160930633545
    3. 'com' → logprob: -2.602160930633545
    4. ' lengths' → logprob: -3.227160930633545
    5. ' pairs' → logprob: -3.477160930633545
    6. ' sum' → logprob: -3.602160930633545
    7. 's' → logprob: -3.977160930633545
    8. 'sum' → logprob: -4.102160930633545
    9. ' pair' → logprob: -4.227160930633545
    10. 'length' → logprob: -4.477160930633545

Token 407: ' should' (ID: 1757)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.8302658796310425
    2. 'must' → logprob: -1.2052658796310425
    3. ' should' → logprob: -2.830265998840332
    4. ' are' → logprob: -2.830265998840332
    5. 'are' → logprob: -2.830265998840332
    6. 'should' → logprob: -2.955265998840332
    7. '{' → logprob: -4.205265998840332
    8. ' (' → logprob: -5.205265998840332
    9. ' =' → logprob: -5.955265998840332
    10. ' {(' → logprob: -6.080265998840332

Token 408: ' form' (ID: 1625)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.13467399775981903
    2. 'be' → logprob: -2.384674072265625
    3. ' cover' → logprob: -4.259674072265625
    4. '{' → logprob: -5.634674072265625
    5. ' =' → logprob: -5.634674072265625
    6. '=' → logprob: -5.759674072265625
    7. ' match' → logprob: -6.134674072265625
    8. 'match' → logprob: -6.384674072265625
    9. ' form' → logprob: -7.009674072265625
    10. 'cover' → logprob: -7.009674072265625

Token 409: ' rectangles' (ID: 164265)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.022133955731987953
    2. ' {(' → logprob: -4.647133827209473
    3. '{
' → logprob: -4.897133827209473
    4. 'rect' → logprob: -6.272133827209473
    5. ' {' → logprob: -6.772133827209473
    6. 'set' → logprob: -7.272133827209473
    7. 'all' → logprob: -8.147133827209473
    8. '{sub' → logprob: -8.897133827209473
    9. '{{' → logprob: -9.147133827209473
    10. '[{' → logprob: -9.272133827209473

Token 410: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37541428208351135
    2. '       ' → logprob: -1.375414252281189
    3. '        
' → logprob: -4.1254143714904785
    4. ',' → logprob: -4.5004143714904785
    5. ',
' → logprob: -5.2504143714904785
    6. '.' → logprob: -5.3754143714904785
    7. '.
' → logprob: -5.5004143714904785
    8. '   ' → logprob: -5.6254143714904785
    9. ':' → logprob: -5.7504143714904785
    10. ':
' → logprob: -6.1254143714904785

Token 411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01518337707966566
    2. '
' → logprob: -4.515183448791504
    3. '        
' → logprob: -6.265183448791504
    4. '   ' → logprob: -7.765183448791504
    5. ',' → logprob: -7.765183448791504
    6. ' for' → logprob: -8.140183448791504
    7. ' and' → logprob: -8.265183448791504
    8. ' if' → logprob: -8.765183448791504
    9. ' =' → logprob: -9.640183448791504
    10. ':' → logprob: -9.765183448791504

Token 412: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3535716235637665
    2. 'if' → logprob: -2.228571653366089
    3. '       ' → logprob: -2.603571653366089
    4. ' edges' → logprob: -3.478571653366089
    5. ' a' → logprob: -3.603571653366089
    6. 'edges' → logprob: -4.35357141494751
    7. 'a' → logprob: -4.47857141494751
    8. ' for' → logprob: -4.85357141494751
    9. '
' → logprob: -4.97857141494751
    10. ' from' → logprob: -5.35357141494751

Token 413: ' or' (ID: 503)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9131646156311035
    2. 'if' → logprob: -1.5381646156311035
    3. ' if' → logprob: -1.7881646156311035
    4. ' a' → logprob: -2.7881646156311035
    5. '       ' → logprob: -3.5381646156311035
    6. 'edges' → logprob: -3.5381646156311035
    7. ' edges' → logprob: -3.7881646156311035
    8. '#' → logprob: -3.9131646156311035
    9. 'from' → logprob: -3.9131646156311035
    10. ' from' → logprob: -4.2881646156311035

Token 414: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21682235598564148
    2. 'if' → logprob: -1.7168223857879639
    3. '
' → logprob: -4.841822147369385
    4. ' for' → logprob: -5.341822147369385
    5. 'for' → logprob: -6.966822147369385
    6. ' len' → logprob: -8.341822624206543
    7. ' edges' → logprob: -8.591822624206543
    8. '   ' → logprob: -8.591822624206543
    9. 'len' → logprob: -8.716822624206543
    10. '#' → logprob: -8.841822624206543

Token 415: ' cube' (ID: 46822)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.63559490442276
    2. 'len' → logprob: -1.0105948448181152
    3. ' two' → logprob: -3.1355948448181152
    4. ' ' → logprob: -3.5105948448181152
    5. '2' → logprob: -3.8855948448181152
    6. 'two' → logprob: -5.385594844818115
    7. ' the' → logprob: -6.385594844818115
    8. '#' → logprob: -6.760594844818115
    9. '1' → logprob: -7.135594844818115
    10. 'the' → logprob: -7.510594844818115

Token 416: ' case' (ID: 1890)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3534530699253082
    2. 'if' → logprob: -2.4784531593322754
    3. ':' → logprob: -2.7284531593322754
    4. ',' → logprob: -3.1034531593322754
    5. ':
' → logprob: -3.7284531593322754
    6. ' (' → logprob: -3.7284531593322754
    7. '       ' → logprob: -3.8534531593322754
    8. ' edges' → logprob: -4.603453159332275
    9. '
' → logprob: -5.603453159332275
    10. '(
' → logprob: -5.728453159332275

Token 417: ' when' (ID: 1261)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.25991156697273254
    2. '       ' → logprob: -1.7599115371704102
    3. ':' → logprob: -3.50991153717041
    4. ':
' → logprob: -4.63491153717041
    5. ',' → logprob: -5.00991153717041
    6. '
' → logprob: -5.38491153717041
    7. 'if' → logprob: -5.63491153717041
    8. '        
' → logprob: -7.63491153717041
    9. ' edges' → logprob: -8.38491153717041
    10. ' ,' → logprob: -8.63491153717041

Token 418: ' only' (ID: 1606)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.12886397540569305
    2. ' len' → logprob: -2.128864049911499
    3. ' edges' → logprob: -7.00386381149292
    4. 'edges' → logprob: -7.00386381149292
    5. ' all' → logprob: -10.878864288330078
    6. 'rect' → logprob: -10.878864288330078
    7. 'all' → logprob: -11.128864288330078
    8. '(len' → logprob: -11.253864288330078
    9. 'a' → logprob: -11.628864288330078
    10. ' the' → logprob: -12.003864288330078

Token 419: ' one' (ID: 1001)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8788335919380188
    2. ' two' → logprob: -1.003833532333374
    3. 'two' → logprob: -1.628833532333374
    4. ' ' → logprob: -3.878833532333374
    5. 'len' → logprob: -6.753833770751953
    6. ' len' → logprob: -9.628833770751953
    7. ' edges' → logprob: -9.878833770751953
    8. 'one' → logprob: -10.503833770751953
    9. '1' → logprob: -10.503833770751953
    10. 'edges' → logprob: -10.503833770751953

Token 420: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.36698850989341736
    2. ' edge' → logprob: -1.2419885396957397
    3. 'element' → logprob: -5.116988658905029
    4. 'edges' → logprob: -5.241988658905029
    5. ' edges' → logprob: -5.741988658905029
    6. ' element' → logprob: -6.991988658905029
    7. 'length' → logprob: -7.116988658905029
    8. ' or' → logprob: -7.366988658905029
    9. 'len' → logprob: -7.866988658905029
    10. 'e' → logprob: -8.491988182067871

Token 421: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6736518740653992
    2. ',' → logprob: -2.173651933670044
    3. 'length' → logprob: -2.798651933670044
    4. 's' → logprob: -2.923651933670044
    5. '_' → logprob: -3.048651933670044
    6. ' exists' → logprob: -3.048651933670044
    7. '==' → logprob: -3.298651933670044
    8. '_length' → logprob: -3.548651933670044
    9. '_len' → logprob: -4.048651695251465
    10. 'len' → logprob: -4.048651695251465

Token 422: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015438363887369633
    2. ' if' → logprob: -4.515438556671143
    3. ',' → logprob: -6.390438556671143
    4. '
' → logprob: -7.015438556671143
    5. '        
' → logprob: -7.265438556671143
    6. ' edges' → logprob: -8.765438079833984
    7. ' or' → logprob: -9.015438079833984
    8. ':' → logprob: -9.265438079833984
    9. '.' → logprob: -9.390438079833984
    10. ' (' → logprob: -9.640438079833984

Token 423: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1752818524837494
    2. 'if' → logprob: -2.5502817630767822
    3. ' a' → logprob: -3.1752817630767822
    4. 'a' → logprob: -3.5502817630767822
    5. '       ' → logprob: -4.550282001495361
    6. ' edges' → logprob: -7.300282001495361
    7. '
' → logprob: -8.300281524658203
    8. '#' (adapté à ' #') → logprob: -8.800281524658203
    9. 'edges' → logprob: -8.800281524658203
    10. ' #' → logprob: -9.425281524658203

Token 424: ' We' (ID: 1416)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1923525035381317
    2. 'if' → logprob: -1.817352533340454
    3. '       ' → logprob: -4.692352294921875
    4. ' a' → logprob: -6.442352294921875
    5. 'a' → logprob: -6.692352294921875
    6. ' edges' → logprob: -7.942352294921875
    7. 'edges' → logprob: -9.317352294921875
    8. '   ' → logprob: -10.692352294921875
    9. '#' → logprob: -10.942352294921875
    10. ' return' → logprob: -12.067352294921875

Token 425: ' try' (ID: 2075)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.040777325630188
    2. '       ' → logprob: -1.165777325630188
    3. ' if' → logprob: -2.2907772064208984
    4. '   ' → logprob: -2.4157772064208984
    5. 'if' → logprob: -3.0407772064208984
    6. 'continue' → logprob: -3.0407772064208984
    7. ' return' → logprob: -4.415777206420898
    8. ' #' → logprob: -4.665777206420898
    9. 'return' → logprob: -4.915777206420898
    10. 'elif' → logprob: -5.290777206420898

Token 426: ' to' (ID: 316)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8778114318847656
    2. ' to' → logprob: -1.2528114318847656
    3. ':' → logprob: -1.3778114318847656
    4. ' all' → logprob: -3.8778114318847656
    5. '   ' → logprob: -5.002811431884766
    6. 'to' → logprob: -5.002811431884766
    7. ' a' → logprob: -5.377811431884766
    8. 'all' → logprob: -5.752811431884766
    9. 'ing' → logprob: -6.252811431884766
    10. 'a' → logprob: -7.502811431884766

Token 427: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.3527531623840332
    2. ' find' → logprob: -1.2277531623840332
    3. 'import' → logprob: -6.727753162384033
    4. 'len' → logprob: -7.102753162384033
    5. '
' → logprob: -7.852753162384033
    6. 'extract' → logprob: -7.852753162384033
    7. 'if' → logprob: -8.102752685546875
    8. 'assign' → logprob: -8.727752685546875
    9. 'from' → logprob: -8.977752685546875
    10. 'det' → logprob: -8.977752685546875

Token 428: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.11549888551235199
    2. 'a' → logprob: -2.2404987812042236
    3. ' edges' → logprob: -6.240499019622803
    4. ' all' → logprob: -8.615498542785645
    5. ' possible' → logprob: -8.740498542785645
    6. ' three' → logprob: -8.865498542785645
    7. ' an' → logprob: -10.115498542785645
    8. ' the' → logprob: -10.115498542785645
    9. 'edges' → logprob: -10.115498542785645
    10. 'abc' → logprob: -11.115498542785645

Token 429: ',b' (ID: 17568)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.4644417762756348
    2. ',' → logprob: -1.7144417762756348
    3. ',b' → logprob: -1.7144417762756348
    4. ' valid' → logprob: -2.3394417762756348
    5. ' trip' → logprob: -2.7144417762756348
    6. ' b' → logprob: -3.2144417762756348
    7. 'a' → logprob: -3.3394417762756348
    8. ' ,' → logprob: -3.4644417762756348
    9. ' edges' → logprob: -4.339441776275635
    10. 'n' → logprob: -4.464441776275635

Token 430: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028377188369631767
    2. ',b' → logprob: -3.9033772945404053
    3. ',c' → logprob: -5.028377056121826
    4. ' =' → logprob: -7.778377056121826
    5. ' ,' → logprob: -7.903377056121826
    6. 'c' → logprob: -8.653377532958984
    7. '<|end|>' → logprob: -8.653377532958984
    8. '=' → logprob: -9.903377532958984
    9. 'b' → logprob: -10.028377532958984
    10. ',
' → logprob: -11.653377532958984

Token 431: ' that' (ID: 484)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04166043922305107
    2. '=' → logprob: -3.9166605472564697
    3. ',' → logprob: -4.916660308837891
    4. '
' → logprob: -5.541660308837891
    5. ':' → logprob: -6.291660308837891
    6. ' =
' → logprob: -6.541660308837891
    7. '<|end|>' → logprob: -6.666660308837891
    8. ')' → logprob: -7.416660308837891
    9. '_edges' → logprob: -7.916660308837891
    10. ' edges' → logprob: -8.04166030883789

Token 432: ' satisfy' (ID: 35441)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.4724656343460083
    2. 'len' → logprob: -2.2224655151367188
    3. 'edges' → logprob: -2.9724655151367188
    4. ' can' → logprob: -3.2224655151367188
    5. ' are' → logprob: -3.3474655151367188
    6. ' match' → logprob: -3.5974655151367188
    7. ' matches' → logprob: -3.9724655151367188
    8. 's' → logprob: -4.722465515136719
    9. ' len' → logprob: -4.722465515136719
    10. ' could' → logprob: -4.847465515136719

Token 433: ' the' (ID: 290)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -1.167726755142212
    2. '
' → logprob: -1.667726755142212
    3. 'rect' → logprob: -1.917726755142212
    4. ' any' → logprob: -2.792726755142212
    5. ' for' → logprob: -3.042726755142212
    6. 'True' → logprob: -3.042726755142212
    7. ' edges' → logprob: -3.667726755142212
    8. ' all' → logprob: -3.792726755142212
    9. 'edges' → logprob: -4.167726516723633
    10. ' the' → logprob: -4.167726516723633

Token 434: ' rectangle' (ID: 45808)
  Prédit: 'conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conditions' → logprob: -1.082099199295044
    2. 'condition' → logprob: -2.082099199295044
    3. ' conditions' → logprob: -2.207099199295044
    4. 'edges' → logprob: -2.332099199295044
    5. 'following' → logprob: -2.707099199295044
    6. 'set' → logprob: -3.082099199295044
    7. 'counts' → logprob: -3.207099199295044
    8. 'rect' → logprob: -3.457099199295044
    9. ' following' → logprob: -3.582099199295044
    10. ' condition' → logprob: -4.457098960876465

Token 435: ' set' (ID: 920)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16142261028289795
    2. 'pairs' → logprob: -3.0364227294921875
    3. ' pairs' → logprob: -3.4114227294921875
    4. ' conditions' → logprob: -4.2864227294921875
    5. '_pairs' → logprob: -5.0364227294921875
    6. 'edges' → logprob: -5.2864227294921875
    7. ' sides' → logprob: -5.2864227294921875
    8. ' edges' → logprob: -5.5364227294921875
    9. 'sets' → logprob: -5.5364227294921875
    10. ' tuples' → logprob: -5.5364227294921875

Token 436: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37919747829437256
    2. '       ' → logprob: -1.2541974782943726
    3. ':
' → logprob: -4.879197597503662
    4. ' if' → logprob: -5.129197597503662
    5. ',' → logprob: -5.504197597503662
    6. ':' → logprob: -5.629197597503662
    7. '        
' → logprob: -6.004197597503662
    8. ',
' → logprob: -6.629197597503662
    9. '.
' → logprob: -6.879197597503662
    10. ' for' → logprob: -7.254197597503662

Token 437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22780604660511017
    2. '
' → logprob: -1.6028060913085938
    3. '        
' → logprob: -6.852806091308594
    4. ',' → logprob: -7.852806091308594
    5. ':' → logprob: -8.227806091308594
    6. ':
' → logprob: -9.227806091308594
    7. '.' → logprob: -9.477806091308594
    8. '   ' → logprob: -9.727806091308594
    9. '.
' → logprob: -10.227806091308594
    10. ' =' → logprob: -10.227806091308594

Token 438: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8856403827667236
    2. ' if' → logprob: -1.1356403827667236
    3. '
' → logprob: -2.0106403827667236
    4. 'if' → logprob: -2.2606403827667236
    5. ' edges' → logprob: -5.2606401443481445
    6. '        
' → logprob: -5.3856401443481445
    7. 'edges' → logprob: -5.5106401443481445
    8. 'import' → logprob: -5.8856401443481445
    9. 'from' → logprob: -6.0106401443481445
    10. '#' (adapté à ' #') → logprob: -6.1356401443481445

Token 439: ' An' (ID: 1689)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8359833359718323
    2. ' if' → logprob: -1.0859832763671875
    3. '       ' → logprob: -2.3359832763671875
    4. '
' → logprob: -3.2109832763671875
    5. 'from' → logprob: -3.7109832763671875
    6. 'import' → logprob: -4.4609832763671875
    7. 'edges' → logprob: -4.5859832763671875
    8. ' for' → logprob: -4.8359832763671875
    9. 'for' → logprob: -4.9609832763671875
    10. '#' → logprob: -5.0859832763671875

Token 440: ' algorithm' (ID: 22184)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.341187596321106
    2. ' if' → logprob: -1.591187596321106
    3. 'if' → logprob: -2.3411874771118164
    4. 'import' → logprob: -2.4661874771118164
    5. ' import' → logprob: -2.7161874771118164
    6. ' def' → logprob: -3.3411874771118164
    7. 'y' → logprob: -3.5911874771118164
    8. ' a' → logprob: -3.5911874771118164
    9. '       ' → logprob: -3.7161874771118164
    10. 'def' → logprob: -3.7161874771118164

Token 441: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1449987292289734
    2. '=' → logprob: -3.394998788833618
    3. '       ' → logprob: -3.519998788833618
    4. ':' → logprob: -3.769998788833618
    5. ' ' → logprob: -4.269998550415039
    6. ' for' → logprob: -4.519998550415039
    7. '    ' → logprob: -5.519998550415039
    8. '        ' → logprob: -5.894998550415039
    9. '   ' → logprob: -6.019998550415039
    10. '        
' → logprob: -6.019998550415039

Token 442: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01539902575314045
    2. '        
' → logprob: -5.390398979187012
    3. '        ' → logprob: -5.515398979187012
    4. ' edges' → logprob: -6.390398979187012
    5. '
' → logprob: -6.515398979187012
    6. ' for' → logprob: -6.890398979187012
    7. '#' → logprob: -7.515398979187012
    8. 'edges' → logprob: -8.015398979187012
    9. ' from' → logprob: -8.515398979187012
    10. ' possible' → logprob: -8.515398979187012

Token 443: ' #' (ID: 1069)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -1.2268379926681519
    2. ' from' → logprob: -1.3518379926681519
    3. ' for' → logprob: -1.6018379926681519
    4. '       ' → logprob: -2.1018381118774414
    5. ' import' → logprob: -3.6018381118774414
    6. ' if' → logprob: -3.9768381118774414
    7. ' unique' → logprob: -4.851838111877441
    8. ' #' → logprob: -4.976838111877441
    9. '#' (adapté à ' #') → logprob: -4.976838111877441
    10. '        ' → logprob: -5.101838111877441

Token 444: ' Since' (ID: 12265)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.8160810470581055
    2. ' edges' → logprob: -1.8160810470581055
    3. '#' → logprob: -2.0660810470581055
    4. 'edges' → logprob: -2.0660810470581055
    5. 'from' → logprob: -2.1910810470581055
    6. ' from' → logprob: -2.3160810470581055
    7. 'for' → logprob: -2.9410810470581055
    8. ' all' → logprob: -3.8160810470581055
    9. ' if' → logprob: -4.1910810470581055
    10. ' possible' → logprob: -4.3160810470581055

Token 445: ' we' (ID: 581)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.441496878862381
    2. 'len' → logprob: -1.0664968490600586
    3. ' the' → logprob: -4.691496849060059
    4. ' edges' → logprob: -6.566496849060059
    5. 'the' → logprob: -7.191496849060059
    6. ' we' → logprob: -7.691496849060059
    7. ' there' → logprob: -8.566496849060059
    8. 'rect' → logprob: -8.691496849060059
    9. 'edges' → logprob: -8.941496849060059
    10. 'we' → logprob: -9.691496849060059

Token 446: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.43142253160476685
    2. ' have' → logprob: -1.181422472000122
    3. ' know' → logprob: -3.806422472000122
    4. 'know' → logprob: -4.181422710418701
    5. ' only' → logprob: -5.681422710418701
    6. 'only' → logprob: -6.181422710418701
    7. ' try' → logprob: -9.181422233581543
    8. 'already' → logprob: -9.431422233581543
    9. '#' → logprob: -9.556422233581543
    10. ' already' → logprob: -10.056422233581543

Token 447: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6131278276443481
    2. '3' → logprob: -0.8631278276443481
    3. ' ' → logprob: -4.238127708435059
    4. ' len' → logprob: -4.863127708435059
    5. ' three' → logprob: -4.988127708435059
    6. ' only' → logprob: -5.988127708435059
    7. 'three' → logprob: -6.363127708435059
    8. 'rect' → logprob: -6.613127708435059
    9. 'only' → logprob: -7.488127708435059
    10. '   ' → logprob: -7.738127708435059

Token 448: '3' (ID: 18)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4072638154029846
    2. '3' → logprob: -1.1572637557983398
    3. 'three' → logprob: -4.78226375579834
    4. 'only' → logprob: -4.90726375579834
    5. 'rect' → logprob: -6.78226375579834
    6. 'edges' → logprob: -6.90726375579834
    7. 'at' → logprob: -7.03226375579834
    8. 'a' → logprob: -7.65726375579834
    9. 'the' → logprob: -8.28226375579834
    10. ' three' → logprob: -9.15726375579834

Token 449: ' rectangles' (ID: 164265)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.6299830675125122
    2. ' unique' → logprob: -1.2549830675125122
    3. 'rect' → logprob: -2.6299829483032227
    4. 'edges' → logprob: -3.3799829483032227
    5. ' rect' → logprob: -3.5049829483032227
    6. 'unique' → logprob: -3.5049829483032227
    7. ' rectangles' → logprob: -5.129982948303223
    8. ' pairs' → logprob: -5.754982948303223
    9. ' sides' → logprob: -6.379982948303223
    10. ' distinct' → logprob: -6.629982948303223

Token 450: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1725466549396515
    2. '       ' → logprob: -2.922546625137329
    3. ' with' → logprob: -3.422546625137329
    4. ' (' → logprob: -4.047546863555908
    5. ':' → logprob: -4.422546863555908
    6. ' =' → logprob: -5.047546863555908
    7. ',
' → logprob: -5.422546863555908
    8. ':
' → logprob: -5.422546863555908
    9. ' that' → logprob: -5.547546863555908
    10. 'with' → logprob: -6.297546863555908

Token 451: ' r' (ID: 428)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2208632379770279
    2. 'a' → logprob: -1.7208632230758667
    3. ' edges' → logprob: -4.970863342285156
    4. ' for' → logprob: -5.720863342285156
    5. 'edges' → logprob: -6.845863342285156
    6. ' from' → logprob: -6.845863342285156
    7. 'r' → logprob: -6.970863342285156
    8. ' r' → logprob: -7.095863342285156
    9. '[a' → logprob: -7.345863342285156
    10. 'for' → logprob: -7.720863342285156

Token 452: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1658516824245453
    2. ' =' → logprob: -2.415851593017578
    3. '1' → logprob: -3.165851593017578
    4. 's' → logprob: -4.665851593017578
    5. 'ects' → logprob: -5.665851593017578
    6. 'a' → logprob: -6.040851593017578
    7. '=' → logprob: -6.415851593017578
    8. '[' → logprob: -7.415851593017578
    9. 'ec' → logprob: -7.415851593017578
    10. '_' → logprob: -7.790851593017578

Token 453: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.818655788898468
    2. '[' → logprob: -0.818655788898468
    3. ' =' → logprob: -2.1936557292938232
    4. '=' → logprob: -5.443655967712402
    5. ' ,' → logprob: -7.068655967712402
    6. '0' → logprob: -7.318655967712402
    7. ',
' → logprob: -8.068655967712402
    8. '=[' → logprob: -9.318655967712402
    9. '_,' → logprob: -9.943655967712402
    10. 's' → logprob: -10.818655967712402

Token 454: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05480938404798508
    2. '0' → logprob: -3.304809331893921
    3. ',' → logprob: -4.8048095703125
    4. ' =' → logprob: -5.3048095703125
    5. 'r' → logprob: -6.3048095703125
    6. 'ec' → logprob: -7.4298095703125
    7. '=' → logprob: -8.1798095703125
    8. 'ect' → logprob: -8.8048095703125
    9. '=r' → logprob: -8.9298095703125
    10. ',r' → logprob: -9.1798095703125

Token 455: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0765867754817009
    2. ' =' → logprob: -3.2015867233276367
    3. ',r' → logprob: -3.7015867233276367
    4. '0' → logprob: -5.576586723327637
    5. '=' → logprob: -6.201586723327637
    6. ' ,' → logprob: -6.576586723327637
    7. 'r' → logprob: -7.951586723327637
    8. '=r' → logprob: -8.076586723327637
    9. '[' → logprob: -8.826586723327637
    10. ',
' → logprob: -9.576586723327637

Token 456: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3871494233608246
    2. '2' → logprob: -1.137149453163147
    3. ',' → logprob: -8.387149810791016
    4. 'r' → logprob: -10.387149810791016
    5. ' ' → logprob: -11.637149810791016
    6. '=' → logprob: -12.387149810791016
    7. '```' → logprob: -13.387149810791016
    8. '0' → logprob: -13.512149810791016
    9. ' r' → logprob: -14.012149810791016
    10. ' =' → logprob: -14.512149810791016

Token 457: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12307971715927124
    2. '
' → logprob: -3.123079776763916
    3. ',' → logprob: -3.248079776763916
    4. ',
' → logprob: -4.248079776763916
    5. '[' → logprob: -4.498079776763916
    6. '       ' → logprob: -6.623079776763916
    7. ' =
' → logprob: -6.623079776763916
    8. ':
' → logprob: -6.873079776763916
    9. '0' → logprob: -6.998079776763916
    10. '=' → logprob: -7.373079776763916

Token 458: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10629943758249283
    2. '
' → logprob: -3.10629940032959
    3. ',' → logprob: -3.35629940032959
    4. '        
' → logprob: -4.85629940032959
    5. ',
' → logprob: -5.23129940032959
    6. 'a' → logprob: -6.73129940032959
    7. 'r' → logprob: -6.73129940032959
    8. ':' → logprob: -6.98129940032959
    9. '[' → logprob: -7.10629940032959
    10. ':
' → logprob: -7.60629940032959

Token 459: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.615933358669281
    2. '       ' → logprob: -1.2409334182739258
    3. '#' (adapté à ' #') → logprob: -2.865933418273926
    4. 'r' → logprob: -3.990933418273926
    5. ',
' → logprob: -4.240933418273926
    6. ',' → logprob: -4.240933418273926
    7. '        
' → logprob: -4.365933418273926
    8. 'a' → logprob: -4.490933418273926
    9. '[' → logprob: -4.865933418273926
    10. ' r' → logprob: -5.740933418273926

Token 460: ' We' (ID: 1416)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5128839612007141
    2. 'a' → logprob: -1.3878839015960693
    3. ' from' → logprob: -3.6378839015960693
    4. ' r' → logprob: -3.7628839015960693
    5. '#' → logprob: -3.8878839015960693
    6. ' import' → logprob: -4.137884140014648
    7. 'r' → logprob: -4.262884140014648
    8. ' for' → logprob: -4.387884140014648
    9. 'from' → logprob: -4.762884140014648
    10. ' #' → logprob: -4.762884140014648

Token 461: ' try' (ID: 2075)
  Prédit: ' try'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.05875834450125694
    2. 'try' → logprob: -3.18375825881958
    3. ' =' → logprob: -5.43375825881958
    4. ' can' → logprob: -5.55875825881958
    5. ' need' → logprob: -6.80875825881958
    6. 'import' → logprob: -6.80875825881958
    7. ' continue' → logprob: -7.05875825881958
    8. 'continue' → logprob: -7.80875825881958
    9. ' have' → logprob: -8.058758735656738
    10. 'can' → logprob: -8.058758735656738

Token 462: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.2654973566532135
    2. ' to' → logprob: -2.5154974460601807
    3. ':
' → logprob: -2.6404974460601807
    4. 'all' → logprob: -3.2654974460601807
    5. ':' → logprob: -3.6404974460601807
    6. 'to' → logprob: -4.890497207641602
    7. ' a' → logprob: -5.265497207641602
    8. 'a' → logprob: -6.265497207641602
    9. '   ' → logprob: -7.140497207641602
    10. ' :
' → logprob: -8.890497207641602

Token 463: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.006783455144613981
    2. ' combinations' → logprob: -5.256783485412598
    3. '   ' → logprob: -7.256783485412598
    4. 'import' → logprob: -8.506783485412598
    5. 'com' → logprob: -8.631783485412598
    6. '(' → logprob: -8.881783485412598
    7. ' possible' → logprob: -9.381783485412598
    8. ' perm' → logprob: -10.131783485412598
    9. ' (' → logprob: -10.256783485412598
    10. 'possible' → logprob: -10.756783485412598

Token 464: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5554943680763245
    2. '_' → logprob: -1.8054943084716797
    3. ' (' → logprob: -2.0554943084716797
    4. ' of' → logprob: -2.9304943084716797
    5. 'import' → logprob: -3.1804943084716797
    6. '(
' → logprob: -4.80549430847168
    7. ',' → logprob: -5.05549430847168
    8. 'from' → logprob: -5.43049430847168
    9. ' import' → logprob: -6.18049430847168
    10. 'r' → logprob: -6.18049430847168

Token 465: ' edges' (ID: 22569)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.011125517077744007
    2. '[' → logprob: -5.136125564575195
    3. 'edges' → logprob: -5.636125564575195
    4. '(rect' → logprob: -7.511125564575195
    5. ' rect' → logprob: -7.761125564575195
    6. '(' → logprob: -7.761125564575195
    7. ' edges' → logprob: -10.011125564575195
    8. '[(' → logprob: -10.386125564575195
    9. '3' → logprob: -10.636125564575195
    10. ' [' → logprob: -11.011125564575195

Token 466: ' assignment' (ID: 24618)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.47260019183158875
    2. 'from' → logprob: -2.472600221633911
    3. ' from' → logprob: -2.597600221633911
    4. ',' → logprob: -2.597600221633911
    5. '_' → logprob: -2.972600221633911
    6. ' import' → logprob: -3.097600221633911
    7. ':' → logprob: -3.597600221633911
    8. '.' → logprob: -5.222599983215332
    9. ' for' → logprob: -5.597599983215332
    10. ' in' → logprob: -6.972599983215332

Token 467: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5562185049057007
    2. ':
' → logprob: -2.0562186241149902
    3. 'import' → logprob: -2.5562186241149902
    4. ',' → logprob: -2.6812186241149902
    5. '       ' → logprob: -2.9312186241149902
    6. '
' → logprob: -3.8062186241149902
    7. 'from' → logprob: -4.05621862411499
    8. ',
' → logprob: -4.30621862411499
    9. '_' → logprob: -4.43121862411499
    10. ' from' → logprob: -5.18121862411499

Token 468: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.219732403755188
    2. 'from' → logprob: -2.5947322845458984
    3. 'import' → logprob: -2.7197322845458984
    4. ' from' → logprob: -3.0947322845458984
    5. ' import' → logprob: -5.219732284545898
    6. '   ' → logprob: -6.719732284545898
    7. ' \' → logprob: -7.219732284545898
    8. ' for' → logprob: -7.344732284545898
    9. '        
' → logprob: -7.344732284545898
    10. ',' → logprob: -7.594732284545898

Token 469: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' (adapté à ' from') → logprob: -0.5379310846328735
    2. ' from' → logprob: -1.5379310846328735
    3. 'import' → logprob: -2.037930965423584
    4. '       ' → logprob: -3.037930965423584
    5. ' import' → logprob: -3.787930965423584
    6. ' for' → logprob: -8.662931442260742
    7. '   ' → logprob: -9.412931442260742
    8. 'for' → logprob: -9.662931442260742
    9. '
' → logprob: -11.912931442260742
    10. ' itertools' → logprob: -12.912931442260742

Token 470: ' itertools' (ID: 103178)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.06203142926096916
    2. ' itertools' → logprob: -2.8120315074920654
    3. 'collections' → logprob: -10.437031745910645
    4. 'math' → logprob: -10.812031745910645
    5. 'iter' → logprob: -11.812031745910645
    6. 'typing' → logprob: -12.437031745910645
    7. 'import' → logprob: -13.187031745910645
    8. 'heap' → logprob: -15.312031745910645
    9. 'operator' → logprob: -15.812031745910645
    10. 'cmath' → logprob: -16.062030792236328

Token 471: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5236436724662781
    2. 'import' → logprob: -0.8986436724662781
    3. '	import' → logprob: -8.398643493652344
    4. '<|end|>' → logprob: -8.773643493652344
    5. 'ertools' → logprob: -10.148643493652344
    6. '.import' → logprob: -10.398643493652344
    7. '.' → logprob: -10.648643493652344
    8. '_import' → logprob: -11.148643493652344
    9. '.com' → logprob: -11.898643493652344
    10. ' .' → logprob: -12.773643493652344

Token 472: ' permutations' (ID: 174595)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.0004228091274853796
    2. ' permutations' → logprob: -8.000422477722168
    3. 'import' → logprob: -10.000422477722168
    4. '	per' → logprob: -10.875422477722168
    5. '.per' → logprob: -11.000422477722168
    6. '(per' → logprob: -12.625422477722168
    7. 'perm' → logprob: -13.000422477722168
    8. '_per' → logprob: -14.750422477722168
    9. 'product' → logprob: -15.875422477722168
    10. '/per' → logprob: -15.875422477722168

Token 473: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6210017800331116
    2. '
' → logprob: -1.3710017204284668
    3. 'edges' → logprob: -2.996001720428467
    4. ' for' → logprob: -3.121001720428467
    5. 'for' → logprob: -3.246001720428467
    6. ',' → logprob: -3.371001720428467
    7. '        
' → logprob: -3.746001720428467
    8. 'import' → logprob: -5.246001720428467
    9. ' edges' → logprob: -5.871001720428467
    10. 'tokens' → logprob: -6.496001720428467

Token 474: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19683115184307098
    2. 'edges' → logprob: -2.321831226348877
    3. ' for' → logprob: -3.571831226348877
    4. '
' → logprob: -4.446831226348877
    5. 'for' → logprob: -4.446831226348877
    6. ' edges' → logprob: -4.571831226348877
    7. '        
' → logprob: -5.196831226348877
    8. ',' → logprob: -5.696831226348877
    9. 'import' → logprob: -5.946831226348877
    10. '   ' → logprob: -7.071831226348877

Token 475: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3919532597064972
    2. 'edges' → logprob: -1.6419532299041748
    3. ' for' → logprob: -2.266953229904175
    4. ' edges' → logprob: -4.766953468322754
    5. 'rect' → logprob: -4.766953468322754
    6. '       ' → logprob: -5.141953468322754
    7. 'possible' → logprob: -6.016953468322754
    8. ' possible' → logprob: -7.766953468322754
    9. 'all' → logprob: -7.891953468322754
    10. 'def' → logprob: -8.266953468322754

Token 476: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05130244791507721
    2. 'edges' → logprob: -3.551302433013916
    3. ' for' → logprob: -4.051302433013916
    4. 'rect' → logprob: -6.426302433013916
    5. 'possible' → logprob: -7.051302433013916
    6. ' edges' → logprob: -7.926302433013916
    7. 'all' → logprob: -8.051302909851074
    8. '       ' → logprob: -8.301302909851074
    9. '   ' → logprob: -9.176302909851074
    10. 'edge' → logprob: -9.551302909851074

Token 477: ' to' (ID: 316)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.020402319729328156
    2. ' edges' → logprob: -4.395402431488037
    3. 'all' → logprob: -5.395402431488037
    4. ' permutations' → logprob: -6.145402431488037
    5. ' for' → logprob: -8.270401954650879
    6. 'edges' → logprob: -8.645401954650879
    7. ' each' → logprob: -8.770401954650879
    8. ' perms' → logprob: -9.145401954650879
    9. '   ' → logprob: -9.270401954650879
    10. ' perm' → logprob: -9.270401954650879

Token 478: ' interpret' (ID: 18135)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.0775624513626099
    2. 'for' → logprob: -1.5775624513626099
    3. 'per' → logprob: -1.8275624513626099
    4. 'rect' → logprob: -2.4525623321533203
    5. ' find' → logprob: -2.5775623321533203
    6. 'perm' → logprob: -3.7025623321533203
    7. ' permutations' → logprob: -4.07756233215332
    8. ' for' → logprob: -4.20256233215332
    9. 'next' → logprob: -4.45256233215332
    10. 'set' → logprob: -4.57756233215332

Token 479: ' the' (ID: 290)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.318249374628067
    2. 'rect' → logprob: -1.9432493448257446
    3. 'edges' → logprob: -2.693249464035034
    4. ' rect' → logprob: -2.818249464035034
    5. '(rect' → logprob: -7.443249225616455
    6. '(edges' → logprob: -8.068249702453613
    7. ' three' → logprob: -8.318249702453613
    8. ' the' → logprob: -8.943249702453613
    9. '[' → logprob: -9.068249702453613
    10. ' counts' → logprob: -9.318249702453613

Token 480: ' three' (ID: 3407)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.9969063401222229
    2. 'edges' → logprob: -1.1219062805175781
    3. 'rect' → logprob: -1.2469062805175781
    4. ' rect' → logprob: -4.371906280517578
    5. ' three' → logprob: -5.996906280517578
    6. 'three' → logprob: -7.746906280517578
    7. ' counts' → logprob: -8.121906280517578
    8. '3' → logprob: -8.246906280517578
    9. '[' → logprob: -8.246906280517578
    10. 'counts' → logprob: -8.246906280517578

Token 481: ' face' (ID: 4950)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.25049319863319397
    2. ' rect' → logprob: -1.7504931688308716
    3. ' rectangles' → logprob: -3.375493288040161
    4. ' edges' → logprob: -5.250493049621582
    5. '_rect' → logprob: -5.750493049621582
    6. 'r' → logprob: -6.500493049621582
    7. 'edges' → logprob: -6.875493049621582
    8. '(rect' → logprob: -7.000493049621582
    9. ' r' → logprob: -8.125493049621582
    10. ' keys' → logprob: -8.500493049621582

Token 482: ' rectangles' (ID: 164265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009061341173946857
    2. ' rectangles' → logprob: -5.759061336517334
    3. '_rect' → logprob: -5.884061336517334
    4. 'rect' → logprob: -6.384061336517334
    5. ' s' → logprob: -7.759061336517334
    6. ' tuples' → logprob: -8.259061813354492
    7. '_s' → logprob: -8.884061813354492
    8. 'ts' → logprob: -9.259061813354492
    9. 'sizes' → logprob: -9.384061813354492
    10. 'pairs' → logprob: -9.759061813354492

Token 483: ' as' (ID: 472)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16221697628498077
    2. ' as' → logprob: -2.787216901779175
    3. 'for' → logprob: -2.912216901779175
    4. ' edges' → logprob: -4.662217140197754
    5. '       ' → logprob: -5.287217140197754
    6. ' in' → logprob: -5.537217140197754
    7. ' rect' → logprob: -5.787217140197754
    8. 'rect' → logprob: -5.912217140197754
    9. 'edges' → logprob: -6.162217140197754
    10. ' (' → logprob: -7.162217140197754

Token 484: ' (' (ID: 350)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -1.0104689598083496
    2. 'per' → logprob: -1.6354689598083496
    3. 'rect' → logprob: -1.8854689598083496
    4. 'edges' → logprob: -2.0104689598083496
    5. ' permutations' → logprob: -2.2604689598083496
    6. '(rect' → logprob: -4.88546895980835
    7. '[(' → logprob: -5.38546895980835
    8. '(edges' → logprob: -5.51046895980835
    9. '(per' → logprob: -5.63546895980835
    10. ' three' → logprob: -5.76046895980835

Token 485: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.017841201275587082
    2. '(a' → logprob: -4.142841339111328
    3. ' a' → logprob: -7.267841339111328
    4. ')' → logprob: -8.017841339111328
    5. 'edges' → logprob: -8.517841339111328
    6. ' (' → logprob: -8.642841339111328
    7. '   ' → logprob: -9.517841339111328
    8. 'per' → logprob: -9.517841339111328
    9. 'x' → logprob: -10.142841339111328
    10. ' edges' → logprob: -10.267841339111328

Token 486: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.25194215774536133
    2. ',' → logprob: -1.5019421577453613
    3. 'b' → logprob: -11.626941680908203
    4. ' ,' → logprob: -12.501941680908203
    5. ',
' → logprob: -15.126941680908203
    6. '),' → logprob: -17.626941680908203
    7. ',a' → logprob: -17.751941680908203
    8. ',B' → logprob: -18.001941680908203
    9. '),(' → logprob: -18.501941680908203
    10. ' b' → logprob: -19.376941680908203

Token 487: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0006677598576061428
    2. '),(' → logprob: -8.125667572021484
    3. ')' → logprob: -8.375667572021484
    4. ',' → logprob: -9.375667572021484
    5. '),
' → logprob: -10.500667572021484
    6. ' ),' → logprob: -10.875667572021484
    7. '   ' → logprob: -13.000667572021484
    8. ',),' → logprob: -13.375667572021484
    9. '
' → logprob: -13.500667572021484
    10. ' ' → logprob: -14.125667572021484

Token 488: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05503923445940018
    2. 'b' → logprob: -2.930039167404175
    3. ' a' → logprob: -8.930039405822754
    4. ' b' → logprob: -11.180039405822754
    5. '(a' → logprob: -12.055039405822754
    6. 'c' → logprob: -13.305039405822754
    7. '(b' → logprob: -14.555039405822754
    8. ',' → logprob: -14.680039405822754
    9. ',a' → logprob: -14.930039405822754
    10. '(' → logprob: -15.180039405822754

Token 489: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.009901638142764568
    2. '),(' → logprob: -4.884901523590088
    3. ',' → logprob: -6.134901523590088
    4. 'c' → logprob: -9.509902000427246
    5. ',a' → logprob: -10.884902000427246
    6. ',(' → logprob: -11.009902000427246
    7. '),' → logprob: -11.134902000427246
    8. ',
' → logprob: -14.009902000427246
    9. ' ,' → logprob: -14.009902000427246
    10. ')' → logprob: -14.884902000427246

Token 490: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0006273718317970634
    2. '),' → logprob: -7.375627517700195
    3. '),
' → logprob: -15.125627517700195
    4. ')' → logprob: -15.625627517700195
    5. ',' → logprob: -16.125627517700195
    6. ',(' → logprob: -16.750627517700195
    7. '#' → logprob: -17.000627517700195
    8. ' ),' → logprob: -17.000627517700195
    9. '       ' → logprob: -17.375627517700195
    10. '   ' → logprob: -17.375627517700195

Token 491: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0017077792435884476
    2. 'c' → logprob: -6.501707553863525
    3. '(a' → logprob: -9.251708030700684
    4. ' a' → logprob: -9.376708030700684
    5. ',a' → logprob: -11.751708030700684
    6. '(c' → logprob: -12.001708030700684
    7. ',' → logprob: -12.501708030700684
    8. ' (' → logprob: -12.626708030700684
    9. ' c' → logprob: -14.001708030700684
    10. ',c' → logprob: -14.126708030700684

Token 492: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.03992363065481186
    2. ',' → logprob: -3.289923667907715
    3. 'c' → logprob: -6.289923667907715
    4. ' ,' → logprob: -11.289923667907715
    5. ',
' → logprob: -12.039923667907715
    6. ')' → logprob: -13.289923667907715
    7. '),' → logprob: -13.414923667907715
    8. '
' → logprob: -13.789923667907715
    9. ')c' → logprob: -13.789923667907715
    10. ' c' → logprob: -14.789923667907715

Token 493: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011106302961707115
    2. '):' → logprob: -4.511106491088867
    3. ')
' → logprob: -10.511106491088867
    4. '):
' → logprob: -11.011106491088867
    5. '),' → logprob: -12.011106491088867
    6. '):

' → logprob: -13.386106491088867
    7. ').' → logprob: -13.386106491088867
    8. ' )' → logprob: -13.511106491088867
    9. '))' → logprob: -14.011106491088867
    10. ')`' → logprob: -14.136106491088867

Token 494: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08320146054029465
    2. 'for' → logprob: -3.3332014083862305
    3. ' for' → logprob: -3.5832014083862305
    4. 'edges' → logprob: -4.3332014083862305
    5. ' edges' → logprob: -5.9582014083862305
    6. ',' → logprob: -9.08320140838623
    7. 'possible' → logprob: -9.20820140838623
    8. '        
' → logprob: -9.58320140838623
    9. '   ' → logprob: -9.70820140838623
    10. 'per' → logprob: -10.20820140838623

Token 495: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.48066970705986023
    2. 'edges' → logprob: -1.7306697368621826
    3. '       ' → logprob: -2.1056697368621826
    4. ' for' → logprob: -2.9806697368621826
    5. 'rect' → logprob: -4.1056694984436035
    6. 'a' → logprob: -4.8556694984436035
    7. ' edges' → logprob: -5.6056694984436035
    8. 'possible' → logprob: -7.2306694984436035
    9. 'all' → logprob: -7.3556694984436035
    10. 'dimensions' → logprob: -7.4806694984436035

Token 496: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6025390028953552
    2. 'perm' → logprob: -2.2275390625
    3. '(a' → logprob: -2.8525390625
    4. 'dims' → logprob: -2.9775390625
    5. 'abc' → logprob: -3.2275390625
    6. ' perm' → logprob: -3.2275390625
    7. ' (' → logprob: -3.3525390625
    8. 'p' → logprob: -3.7275390625
    9. ' a' → logprob: -3.8525390625
    10. 'edges' → logprob: -3.9775390625

Token 497: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06893762946128845
    2. ',b' → logprob: -2.9439375400543213
    3. 'in' → logprob: -5.0689377784729
    4. ' in' → logprob: -5.5689377784729
    5. 'b' → logprob: -5.8189377784729
    6. 's' → logprob: -7.3189377784729
    7. ' ,' → logprob: -9.193937301635742
    8. ',in' → logprob: -10.693937301635742
    9. ',s' → logprob: -11.193937301635742
    10. ',a' → logprob: -11.193937301635742

Token 498: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.0005290837725624442
    2. ',' → logprob: -7.7505292892456055
    3. 'c' → logprob: -9.375529289245605
    4. ',b' → logprob: -11.250529289245605
    5. ' ,' → logprob: -15.375529289245605
    6. ',_' → logprob: -15.500529289245605
    7. '_c' → logprob: -16.37552833557129
    8. ' in' → logprob: -16.87552833557129
    9. ',ch' → logprob: -17.87552833557129
    10. '(c' → logprob: -18.50052833557129

Token 499: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10026933997869492
    2. 'in' → logprob: -2.350269317626953
    3. ')' → logprob: -9.975269317626953
    4. ',' → logprob: -11.975269317626953
    5. '	in' → logprob: -12.725269317626953
    6. ' ' → logprob: -13.225269317626953
    7. 's' → logprob: -13.350269317626953
    8. '  ' → logprob: -14.725269317626953
    9. 'import' → logprob: -15.100269317626953
    10. '   ' → logprob: -15.100269317626953

Token 500: ' permutations' (ID: 174595)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.014163747429847717
    2. ' permutations' → logprob: -4.264163970947266
    3. '(per' → logprob: -16.514163970947266
    4. 'perm' → logprob: -16.764163970947266
    5. '.per' → logprob: -17.639163970947266
    6. '_per' → logprob: -18.139163970947266
    7. '	per' → logprob: -18.264163970947266
    8. '-per' → logprob: -18.264163970947266
    9. ' perm' → logprob: -19.889163970947266
    10. ' per' → logprob: -20.014163970947266

Token 501: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.011169366538524628
    2. 'edges' → logprob: -4.51116943359375
    3. '(sorted' → logprob: -9.26116943359375
    4. '(list' → logprob: -10.88616943359375
    5. 'sorted' → logprob: -12.26116943359375
    6. ' edges' → logprob: -13.88616943359375
    7. 'list' → logprob: -14.01116943359375
    8. '(edge' → logprob: -14.13616943359375
    9. '.edges' → logprob: -15.88616943359375
    10. '(' → logprob: -15.88616943359375

Token 502: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005282493657432497
    2. '):' → logprob: -8.250528335571289
    3. ' ,' → logprob: -9.125528335571289
    4. ')' → logprob: -9.125528335571289
    5. '(),' → logprob: -10.375528335571289
    6. '<|end|>' → logprob: -11.750528335571289
    7. '):
' → logprob: -13.000528335571289
    8. '(' → logprob: -13.250528335571289
    9. '3' → logprob: -13.500528335571289
    10. ',
' → logprob: -13.625528335571289

Token 503: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.16022422909736633
    2. ' ' → logprob: -1.910224199295044
    3. '   ' → logprob: -16.91022491455078
    4. '  ' → logprob: -17.03522491455078
    5. 'len' → logprob: -18.53522491455078
    6. ' ' → logprob: -18.53522491455078
    7. ')' → logprob: -19.28522491455078
    8. ' len' → logprob: -19.66022491455078
    9. '    ' → logprob: -19.78522491455078
    10. '     ' → logprob: -20.28522491455078

Token 504: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -20.625001907348633
    4. '۳' → logprob: -21.125001907348633
    5. 'len' → logprob: -21.875001907348633
    6. '  ' → logprob: -22.250001907348633
    7. '３' → logprob: -22.625001907348633
    8. '
' → logprob: -23.625001907348633
    9. '```' → logprob: -23.625001907348633
    10. ')' → logprob: -23.750001907348633

Token 505: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -3.35706390615087e-05
    2. '):
' → logprob: -11.000033378601074
    3. ':' → logprob: -11.125033378601074
    4. ')' → logprob: -13.375033378601074
    5. ' ):' → logprob: -14.875033378601074
    6. '():' → logprob: -16.00003433227539
    7. '):
' → logprob: -17.37503433227539
    8. '}:' → logprob: -17.50003433227539
    9. '**' → logprob: -18.62503433227539
    10. '>:' → logprob: -19.00003433227539

Token 506: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002296086400747299
    2. '               ' → logprob: -6.752295970916748
    3. '       ' → logprob: -7.752295970916748
    4. ' if' → logprob: -8.002296447753906
    5. '
' → logprob: -9.252296447753906
    6. '            
' → logprob: -10.002296447753906
    7. '```' → logprob: -10.127296447753906
    8. ':' → logprob: -10.127296447753906
    9. '<|end|>' → logprob: -10.252296447753906
    10. ':
' → logprob: -10.752296447753906

Token 507: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' (adapté à ' faces') → logprob: -1.023328185081482
    2. '           ' → logprob: -1.523328185081482
    3. ' if' → logprob: -2.3983283042907715
    4. 's' → logprob: -2.3983283042907715
    5. 'rect' → logprob: -3.2733283042907715
    6. '               ' → logprob: -3.2733283042907715
    7. ' faces' → logprob: -3.3983283042907715
    8. 'if' → logprob: -3.6483283042907715
    9. ' sides' → logprob: -4.1483283042907715
    10. '       ' → logprob: -4.3983283042907715

Token 508: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01777574047446251
    2. '=' → logprob: -4.142775535583496
    3. '_set' → logprob: -6.642775535583496
    4. '_sets' → logprob: -8.267775535583496
    5. 'set' → logprob: -9.267775535583496
    6. '_faces' → logprob: -10.392775535583496
    7. '=set' → logprob: -10.767775535583496
    8. 's' → logprob: -12.017775535583496
    9. 'sets' → logprob: -12.017775535583496
    10. '_rect' → logprob: -12.517775535583496

Token 509: ' {(' (ID: 75216)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.03424236923456192
    2. ' {(' → logprob: -4.284242153167725
    3. '[(' → logprob: -4.284242153167725
    4. '[{' → logprob: -5.659242153167725
    5. ' {' → logprob: -6.659242153167725
    6. '{
' → logprob: -6.909242153167725
    7. '[
' → logprob: -8.909242630004883
    8. ' [(' → logprob: -9.159242630004883
    9. '[' → logprob: -9.659242630004883
    10. 'sorted' → logprob: -12.284242630004883

Token 510: 'min' (ID: 1493)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1073446050286293
    2. 'min' → logprob: -2.357344627380371
    3. '(a' → logprob: -5.732344627380371
    4. '(min' → logprob: -5.857344627380371
    5. ' min' → logprob: -7.857344627380371
    6. ' a' → logprob: -8.482344627380371
    7. ' (' → logprob: -8.482344627380371
    8. '   ' → logprob: -9.357344627380371
    9. 'fro' → logprob: -9.982344627380371
    10. '(' → logprob: -10.732344627380371

Token 511: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0016914885491132736
    2. 'a' → logprob: -6.7516913414001465
    3. '((' → logprob: -7.6266913414001465
    4. '{' → logprob: -11.376691818237305
    5. '(' → logprob: -11.626691818237305
    6. ' (' → logprob: -12.251691818237305
    7. '({' → logprob: -12.876691818237305
    8. ',' → logprob: -13.626691818237305
    9. ')' → logprob: -14.001691818237305
    10. '{
' → logprob: -14.376691818237305

Token 512: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.09608342498540878
    2. ',' → logprob: -2.596083402633667
    3. 'b' → logprob: -4.221083641052246
    4. ' ,' → logprob: -6.096083641052246
    5. ' b' → logprob: -9.346083641052246
    6. ',
' → logprob: -11.596083641052246
    7. 'a' → logprob: -11.971083641052246
    8. ',a' → logprob: -12.721083641052246
    9. '),' → logprob: -13.471083641052246
    10. ',c' → logprob: -14.221083641052246

Token 513: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0002787359117064625
    2. ' ),' → logprob: -8.50027847290039
    3. '),(' → logprob: -9.75027847290039
    4. ')' → logprob: -11.50027847290039
    5. ',' → logprob: -12.62527847290039
    6. '),
' → logprob: -13.50027847290039
    7. ')),' → logprob: -14.12527847290039
    8. ',),' → logprob: -15.12527847290039
    9. 'a' → logprob: -15.37527847290039
    10. ' ' → logprob: -15.37527847290039

Token 514: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.018150413408875465
    2. ' max' → logprob: -4.018150329589844
    3. '(max' → logprob: -15.143150329589844
    4. ' ' → logprob: -16.268150329589844
    5. '   ' → logprob: -16.268150329589844
    6. '	max' → logprob: -17.768150329589844
    7. '     ' → logprob: -18.393150329589844
    8. '  ' → logprob: -18.643150329589844
    9. '    ' → logprob: -18.643150329589844
    10. ',max' → logprob: -19.018150329589844

Token 515: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.961759259458631e-06
    2. 'a' → logprob: -13.250004768371582
    3. ' (' → logprob: -13.625004768371582
    4. '(' → logprob: -13.750004768371582
    5. '((' → logprob: -14.125004768371582
    6. '(
' → logprob: -16.7500057220459
    7. ')' → logprob: -17.3750057220459
    8. '('' → logprob: -17.5000057220459
    9. '   ' → logprob: -18.1250057220459
    10. ' ' → logprob: -18.7500057220459

Token 516: ',b' (ID: 17568)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20323793590068817
    2. ',b' → logprob: -1.7032378911972046
    3. '(b' → logprob: -6.703238010406494
    4. ',' → logprob: -7.453238010406494
    5. ' b' → logprob: -11.828237533569336
    6. ')' → logprob: -13.328237533569336
    7. ' ,' → logprob: -13.328237533569336
    8. '(' → logprob: -13.453237533569336
    9. '),' → logprob: -13.953237533569336
    10. ')b' → logprob: -14.078237533569336

Token 517: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.26417839527130127
    2. '))' → logprob: -1.6391783952713013
    3. ')),
' → logprob: -4.014178276062012
    4. ')' → logprob: -4.639178276062012
    5. '),' → logprob: -5.389178276062012
    6. ')},' → logprob: -5.889178276062012
    7. ')}' → logprob: -7.014178276062012
    8. ')):' → logprob: -7.264178276062012
    9. '))}
' → logprob: -7.389178276062012
    10. ')},
' → logprob: -8.639178276062012

Token 518: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.20219410955905914
    2. '(min' → logprob: -1.702194094657898
    3. '           ' → logprob: -8.202194213867188
    4. '{' → logprob: -9.077194213867188
    5. '            ' → logprob: -9.327194213867188
    6. '          ' → logprob: -9.452194213867188
    7. ' {(' → logprob: -10.077194213867188
    8. '   ' → logprob: -10.702194213867188
    9. '(m' → logprob: -10.827194213867188
    10. '       ' → logprob: -10.827194213867188

Token 519: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00044425477972254157
    2. ' min' → logprob: -7.875444412231445
    3. '(min' → logprob: -9.750444412231445
    4. 'max' → logprob: -12.875444412231445
    5. '   ' → logprob: -13.875444412231445
    6. '	min' → logprob: -14.250444412231445
    7. '[min' → logprob: -14.375444412231445
    8. ' ' → logprob: -14.500444412231445
    9. '  ' → logprob: -15.750444412231445
    10. 'minimum' → logprob: -16.125444412231445

Token 520: '(b' (ID: 3229)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.42085936665534973
    2. '(a' → logprob: -1.1708593368530273
    3. '(c' → logprob: -4.295859336853027
    4. '(b' → logprob: -4.420859336853027
    5. 'b' → logprob: -5.045859336853027
    6. 'c' → logprob: -6.795859336853027
    7. ' (' → logprob: -9.545859336853027
    8. '(' → logprob: -10.045859336853027
    9. ' a' → logprob: -10.045859336853027
    10. ')' → logprob: -11.420859336853027

Token 521: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.0646228939294815
    2. 'c' → logprob: -2.8146228790283203
    3. ',' → logprob: -5.93962287902832
    4. '(c' → logprob: -11.18962287902832
    5. ' ,' → logprob: -13.31462287902832
    6. ',
' → logprob: -13.93962287902832
    7. 'a' → logprob: -14.18962287902832
    8. ' c' → logprob: -14.93962287902832
    9. '[c' → logprob: -15.31462287902832
    10. ',a' → logprob: -15.81462287902832

Token 522: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.002258856315165758
    2. ',' → logprob: -6.127258777618408
    3. ')' → logprob: -9.627259254455566
    4. ' ),' → logprob: -12.877259254455566
    5. '},' → logprob: -13.377259254455566
    6. ' ,' → logprob: -13.877259254455566
    7. '           ' → logprob: -14.502259254455566
    8. '),(' → logprob: -14.502259254455566
    9. '   ' → logprob: -15.127259254455566
    10. '),
' → logprob: -15.127259254455566

Token 523: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.575946033000946
    2. ' max' → logprob: -0.825946033000946
    3. '(max' → logprob: -12.575945854187012
    4. 'c' → logprob: -12.950945854187012
    5. '=max' → logprob: -15.450945854187012
    6. ' ' → logprob: -16.325946807861328
    7. '[max' → logprob: -16.325946807861328
    8. ' c' → logprob: -16.575946807861328
    9. '_max' → logprob: -16.575946807861328
    10. ',max' → logprob: -16.575946807861328

Token 524: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -5.264322317088954e-05
    2. 'b' → logprob: -9.875052452087402
    3. '(c' → logprob: -14.000052452087402
    4. ' (' → logprob: -15.625052452087402
    5. '(' → logprob: -16.50005340576172
    6. '<|end|>' → logprob: -16.50005340576172
    7. '<|end|>' → logprob: -17.62505340576172
    8. ' b' → logprob: -18.37505340576172
    9. '   ' → logprob: -18.50005340576172
    10. ')' → logprob: -18.62505340576172

Token 525: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.4795186519622803
    2. 'c' → logprob: -0.9795186519622803
    3. ',' → logprob: -5.229518890380859
    4. '(c' → logprob: -10.85451889038086
    5. ')c' → logprob: -10.97951889038086
    6. ',b' → logprob: -11.47951889038086
    7. ')' → logprob: -12.35451889038086
    8. ' ,' → logprob: -12.60451889038086
    9. ',
' → logprob: -12.60451889038086
    10. '_c' → logprob: -12.97951889038086

Token 526: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.47663769125938416
    2. ')),' → logprob: -0.9766377210617065
    3. ')},' → logprob: -6.101637840270996
    4. '}),' → logprob: -9.226637840270996
    5. ')' → logprob: -9.226637840270996
    6. '))' → logprob: -10.476637840270996
    7. ' ' → logprob: -10.726637840270996
    8. '           ' → logprob: -11.101637840270996
    9. ' ),' → logprob: -11.226637840270996
    10. '{' → logprob: -11.351637840270996

Token 527: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08030113577842712
    2. '(min' → logprob: -2.58030104637146
    3. '{' → logprob: -6.955301284790039
    4. ' {' → logprob: -7.830301284790039
    5. ' {(' → logprob: -9.955301284790039
    6. '(max' → logprob: -12.080301284790039
    7. '   ' → logprob: -13.080301284790039
    8. '(m' → logprob: -13.830301284790039
    9. '[min' → logprob: -13.955301284790039
    10. ' ' → logprob: -14.455301284790039

Token 528: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0016084164381027222
    2. ' min' → logprob: -6.876608371734619
    3. '(min' → logprob: -7.501608371734619
    4. '   ' → logprob: -11.626608848571777
    5. 'max' → logprob: -12.501608848571777
    6. ' ' → logprob: -13.251608848571777
    7. '  ' → logprob: -13.251608848571777
    8. '[min' → logprob: -13.251608848571777
    9. ' (' → logprob: -13.626608848571777
    10. '	min' → logprob: -14.001608848571777

Token 529: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.32523515378125e-05
    2. 'a' → logprob: -9.750062942504883
    3. '(' → logprob: -12.750062942504883
    4. '(c' → logprob: -13.625062942504883
    5. ' (' → logprob: -14.750062942504883
    6. '(
' → logprob: -15.500062942504883
    7. '((' → logprob: -17.250062942504883
    8. '```' → logprob: -17.250062942504883
    9. '   ' → logprob: -17.375062942504883
    10. ' a' → logprob: -18.000062942504883

Token 530: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.004000396002084017
    2. ',' → logprob: -6.004000186920166
    3. 'c' → logprob: -6.504000186920166
    4. ',
' → logprob: -11.129000663757324
    5. '(c' → logprob: -12.254000663757324
    6. ' ,' → logprob: -12.504000663757324
    7. ',a' → logprob: -14.629000663757324
    8. 'a' → logprob: -14.629000663757324
    9. ',C' → logprob: -15.379000663757324
    10. ',b' → logprob: -15.504000663757324

Token 531: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -1.7120533811976202e-05
    2. ',' → logprob: -11.375017166137695
    3. ')' → logprob: -13.000017166137695
    4. '           ' → logprob: -13.625017166137695
    5. ' ),' → logprob: -13.750017166137695
    6. '),(' → logprob: -14.750017166137695
    7. '),
' → logprob: -15.750017166137695
    8. '   ' → logprob: -15.750017166137695
    9. '       ' → logprob: -17.000017166137695
    10. ' ' → logprob: -17.250017166137695

Token 532: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.25209105014801025
    2. ' max' → logprob: -1.5020910501480103
    3. '(max' → logprob: -8.752091407775879
    4. 'c' → logprob: -12.877091407775879
    5. ' c' → logprob: -14.377091407775879
    6. ' (' → logprob: -14.877091407775879
    7. '=max' → logprob: -16.502090454101562
    8. ' ' → logprob: -17.127090454101562
    9. 'min' → logprob: -17.252090454101562
    10. '(c' → logprob: -17.377090454101562

Token 533: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00011629798245849088
    2. 'a' → logprob: -9.125116348266602
    3. '(' → logprob: -12.125116348266602
    4. ' (' → logprob: -14.000116348266602
    5. ')' → logprob: -15.250116348266602
    6. '```' → logprob: -15.750116348266602
    7. '(
' → logprob: -16.2501163482666
    8. '((' → logprob: -16.3751163482666
    9. '<|end|>' → logprob: -16.3751163482666
    10. ' a' → logprob: -16.8751163482666

Token 534: ',c' (ID: 22261)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005140714929439127
    2. '(c' → logprob: -7.750514030456543
    3. ')c' → logprob: -9.875514030456543
    4. ' c' → logprob: -11.000514030456543
    5. ',c' → logprob: -11.625514030456543
    6. '[c' → logprob: -13.625514030456543
    7. '(' → logprob: -14.000514030456543
    8. '<c' → logprob: -14.125514030456543
    9. ')' → logprob: -14.250514030456543
    10. '	c' → logprob: -14.500514030456543

Token 535: '))}
' (ID: 153682)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16626617312431335
    2. ')}' → logprob: -2.2912662029266357
    3. '))}
' → logprob: -3.0412662029266357
    4. ')}}' → logprob: -6.166265964508057
    5. ')))' → logprob: -6.916265964508057
    6. ')}
' → logprob: -8.041266441345215
    7. ')' → logprob: -8.291266441345215
    8. '       ' → logprob: -8.666266441345215
    9. '}' → logprob: -8.916266441345215
    10. '}}' → logprob: -9.291266441345215

Token 536: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07475780695676804
    2. ' ==' → logprob: -3.1997578144073486
    3. '==' → logprob: -3.5747578144073486
    4. '       ' → logprob: -5.9497575759887695
    5. ')==' → logprob: -8.82475757598877
    6. '<|end|>' → logprob: -9.57475757598877
    7. '               ' → logprob: -9.82475757598877
    8. ',' → logprob: -9.94975757598877
    9. '
' → logprob: -10.07475757598877
    10. ')' → logprob: -10.32475757598877

Token 537: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03433049097657204
    2. 'if' (adapté à ' if') → logprob: -4.034330368041992
    3. ' if' → logprob: -4.159330368041992
    4. '       ' → logprob: -7.784330368041992
    5. '               ' → logprob: -12.034330368041992
    6. '   ' → logprob: -12.159330368041992
    7. ' ' → logprob: -14.034330368041992
    8. '          ' → logprob: -14.284330368041992
    9. 'If' → logprob: -14.284330368041992
    10. '{
' → logprob: -15.034330368041992

Token 538: ' set' (ID: 920)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.63714599609375
    2. ' faces' → logprob: -0.76214599609375
    3. ' set' → logprob: -6.13714599609375
    4. 'set' → logprob: -7.01214599609375
    5. ' counts' → logprob: -7.13714599609375
    6. 'counts' → logprob: -8.63714599609375
    7. '   ' → logprob: -8.88714599609375
    8. 'face' → logprob: -9.38714599609375
    9. ' all' → logprob: -9.76214599609375
    10. 'all' → logprob: -10.13714599609375

Token 539: '(rect' (ID: 68123)
  Prédit: '(rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rect' → logprob: -0.0021576376166194677
    2. 'rect' → logprob: -6.752157688140869
    3. '(count' → logprob: -7.002157688140869
    4. '(' → logprob: -10.002157211303711
    5. 'counts' → logprob: -11.752157211303711
    6. 'count' → logprob: -12.377157211303711
    7. ')' → logprob: -12.502157211303711
    8. '(
' → logprob: -12.627157211303711
    9. '(face' → logprob: -12.877157211303711
    10. '(cnt' → logprob: -13.752157211303711

Token 540: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005617309361696243
    2. 'counts' → logprob: -7.875561714172363
    3. 'rect' → logprob: -9.625561714172363
    4. '(rect' → logprob: -9.750561714172363
    5. 'cts' → logprob: -10.750561714172363
    6. 'ects' → logprob: -11.375561714172363
    7. 'angles' → logprob: -11.625561714172363
    8. 'ts' → logprob: -12.750561714172363
    9. 'sets' → logprob: -13.125561714172363
    10. '(count' → logprob: -13.875561714172363

Token 541: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018387987511232495
    2. ')==' → logprob: -6.376838684082031
    3. '==' → logprob: -9.126838684082031
    4. ' ==' → logprob: -11.001838684082031
    5. ' )' → logprob: -11.751838684082031
    6. '())' → logprob: -13.126838684082031
    7. '   ' → logprob: -15.376838684082031
    8. '))' → logprob: -16.00183868408203
    9. '()' → logprob: -16.12683868408203
    10. '           ' → logprob: -16.25183868408203

Token 542: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25198468565940857
    2. '==' → logprob: -1.501984715461731
    3. ')==' → logprob: -10.251984596252441
    4. ')' → logprob: -11.376984596252441
    5. '=' → logprob: -12.751984596252441
    6. ' =' → logprob: -13.376984596252441
    7. '==
' → logprob: -13.626984596252441
    8. ']==' → logprob: -14.001984596252441
    9. '<=' → logprob: -14.751984596252441
    10. '()==' → logprob: -14.751984596252441

Token 543: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.023250602185726166
    2. ' faces' → logprob: -3.7732505798339844
    3. 'face' → logprob: -13.148250579833984
    4. '.faces' → logprob: -13.898250579833984
    5. '_faces' → logprob: -14.023250579833984
    6. 'fac' → logprob: -14.523250579833984
    7. '   ' → logprob: -15.273250579833984
    8. ' ' → logprob: -15.398250579833984
    9. 'Faces' → logprob: -15.523250579833984
    10. '
' → logprob: -17.023250579833984

Token 544: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03631468862295151
    2. ':
' → logprob: -3.9113147258758545
    3. '               ' → logprob: -4.536314487457275
    4. '           ' → logprob: -5.536314487457275
    5. ':return' → logprob: -7.036314487457275
    6. '<|end|>' → logprob: -10.786314964294434
    7. '       ' → logprob: -11.036314964294434
    8. '                       ' → logprob: -11.161314964294434
    9. '                   ' → logprob: -11.411314964294434
    10. '              ' → logprob: -11.661314964294434

Token 545: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07012638449668884
    2. '           ' → logprob: -2.6951262950897217
    3. ':' → logprob: -9.4451265335083
    4. '
' → logprob: -10.5701265335083
    5. ':
' → logprob: -10.5701265335083
    6. '                   ' → logprob: -11.0701265335083
    7. 'return' → logprob: -11.3201265335083
    8. ' return' → logprob: -11.3201265335083
    9. '              ' → logprob: -12.3201265335083
    10. ':return' → logprob: -12.4451265335083

Token 546: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8700150847434998
    2. '               ' → logprob: -1.1200151443481445
    3. '           ' → logprob: -1.6200151443481445
    4. ' return' → logprob: -2.8700151443481445
    5. '                   ' → logprob: -9.370015144348145
    6. '       ' → logprob: -9.745015144348145
    7. '   ' → logprob: -10.620015144348145
    8. '
' → logprob: -11.245015144348145
    9. '	return' → logprob: -12.870015144348145
    10. '{return' → logprob: -13.995015144348145

Token 547: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.006715370807796717
    2. ' True' → logprob: -5.006715297698975
    3. '(True' → logprob: -19.756715774536133
    4. '   ' → logprob: -20.256715774536133
    5. 'False' → logprob: -21.506715774536133
    6. 'true' → logprob: -22.506715774536133
    7. ' ' → logprob: -22.756715774536133
    8. '=True' → logprob: -22.881715774536133
    9. 'Tr' → logprob: -23.131715774536133
    10. '	' → logprob: -23.631715774536133

Token 548: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030318982899188995
    2. 'return' → logprob: -6.0030317306518555
    3. '
' → logprob: -8.628031730651855
    4. '   ' → logprob: -9.503031730651855
    5. ' return' → logprob: -9.503031730651855
    6. '<|end|>' → logprob: -9.503031730651855
    7. '        
' → logprob: -9.753031730651855
    8. '  ' → logprob: -11.253031730651855
    9. '           ' → logprob: -11.503031730651855
    10. 'None' → logprob: -11.628031730651855

Token 549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010587785392999649
    2. 'return' → logprob: -5.010587692260742
    3. '
' → logprob: -6.635587692260742
    4. '   ' → logprob: -6.635587692260742
    5. '        
' → logprob: -7.260587692260742
    6. '    
' → logprob: -9.135587692260742
    7. '<|end|>' → logprob: -9.385587692260742
    8. ' return' → logprob: -10.135587692260742
    9. '     ' → logprob: -10.260587692260742
    10. '\
' → logprob: -10.260587692260742

Token 550: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.014422152191400528
    2. '       ' → logprob: -4.2644219398498535
    3. '   ' → logprob: -9.389422416687012
    4. 'False' → logprob: -9.514422416687012
    5. '
' → logprob: -9.639422416687012
    6. ' return' → logprob: -10.639422416687012
    7. '        
' → logprob: -12.264422416687012
    8. '```' → logprob: -13.014422416687012
    9. 'eturn' → logprob: -13.889422416687012
    10. '	return' → logprob: -14.014422416687012

Token 551: ' Also' (ID: 8820)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0001438266917830333
    2. '#' → logprob: -9.750144004821777
    3. '       ' → logprob: -10.125144004821777
    4. 'if' → logprob: -10.250144004821777
    5. ' return' → logprob: -11.750144004821777
    6. 'False' → logprob: -14.125144004821777
    7. 'Return' → logprob: -14.375144004821777
    8. '
' → logprob: -14.875144004821777
    9. 'for' → logprob: -15.250144004821777
    10. '   ' → logprob: -16.12514305114746

Token 552: ' handle' (ID: 5318)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2974849939346313
    2. ' #' → logprob: -1.4224849939346313
    3. ' return' → logprob: -1.6724849939346313
    4. '#' → logprob: -1.7974849939346313
    5. 'if' → logprob: -2.797484874725342
    6. 'return' → logprob: -3.297484874725342
    7. '
' → logprob: -3.922484874725342
    8. ' for' → logprob: -5.297484874725342
    9. '   ' → logprob: -5.797484874725342
    10. 'for' → logprob: -5.922484874725342

Token 553: ' cube' (ID: 46822)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.38478365540504456
    2. 'len' → logprob: -1.8847836256027222
    3. ' len' → logprob: -2.6347837448120117
    4. 'the' → logprob: -2.6347837448120117
    5. ' edges' → logprob: -4.509783744812012
    6. '(len' → logprob: -5.634783744812012
    7. 'edges' → logprob: -5.759783744812012
    8. ' cases' → logprob: -6.384783744812012
    9. '   ' → logprob: -7.384783744812012
    10. 'case' → logprob: -7.509783744812012

Token 554: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.3709363043308258
    2. ' case' → logprob: -2.245936393737793
    3. ' if' → logprob: -2.995936393737793
    4. 'if' → logprob: -2.995936393737793
    5. '       ' → logprob: -3.120936393737793
    6. '(
' → logprob: -3.870936393737793
    7. '   ' → logprob: -3.870936393737793
    8. '(' → logprob: -5.745936393737793
    9. ' (' → logprob: -5.870936393737793
    10. ':' → logprob: -6.370936393737793

Token 555: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0127951018512249
    2. ' if' → logprob: -5.0127949714660645
    3. '
' → logprob: -5.1377949714660645
    4. '        
' → logprob: -9.137795448303223
    5. 'if' → logprob: -10.637795448303223
    6. ',' → logprob: -11.137795448303223
    7. ' for' → logprob: -11.137795448303223
    8. ':' → logprob: -11.637795448303223
    9. '           ' → logprob: -12.762795448303223
    10. '   ' → logprob: -13.012795448303223

Token 556: ' all' (ID: 722)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4758971929550171
    2. 'if' → logprob: -0.9758971929550171
    3. '
' → logprob: -8.100896835327148
    4. ' edges' → logprob: -8.100896835327148
    5. ' return' → logprob: -8.600896835327148
    6. 'len' → logprob: -8.725896835327148
    7. 'edges' → logprob: -8.725896835327148
    8. '   ' → logprob: -8.850896835327148
    9. '       ' → logprob: -9.225896835327148
    10. 'return' → logprob: -9.225896835327148

Token 557: ' rectangles' (ID: 164265)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.04550442472100258
    2. ' edges' → logprob: -3.920504331588745
    3. 'rect' → logprob: -4.670504570007324
    4. 'faces' → logprob: -5.295504570007324
    5. 's' → logprob: -6.420504570007324
    6. 'equal' → logprob: -6.545504570007324
    7. 'three' → logprob: -6.920504570007324
    8. '=' → logprob: -6.920504570007324
    9. '(rect' → logprob: -7.045504570007324
    10. 'dimensions' → logprob: -7.295504570007324

Token 558: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.8564832210540771
    2. 'are' → logprob: -1.6064832210540771
    3. '==' → logprob: -1.9814832210540771
    4. ' have' → logprob: -2.606483221054077
    5. ' ==' → logprob: -3.231483221054077
    6. ' equal' → logprob: -3.356483221054077
    7. 'have' → logprob: -3.731483221054077
    8. 'equal' → logprob: -3.981483221054077
    9. '==(' → logprob: -4.231483459472656
    10. '```' → logprob: -4.481483459472656

Token 559: ' same' (ID: 2684)
  Prédit: '(rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(rect' → logprob: -0.9529353976249695
    2. 'rect' → logprob: -1.5779354572296143
    3. '(Rect' → logprob: -1.7029354572296143
    4. '(' → logprob: -1.8279354572296143
    5. '((' → logprob: -3.8279354572296143
    6. 'the' → logprob: -4.327935218811035
    7. 'Rectangle' → logprob: -4.577935218811035
    8. 'equal' → logprob: -4.827935218811035
    9. 'ident' → logprob: -5.327935218811035
    10. ' (' → logprob: -5.952935218811035

Token 560: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6060525178909302
    2. ' if' → logprob: -0.9810525178909302
    3. ' and' → logprob: -2.9810523986816406
    4. ',' → logprob: -4.731052398681641
    5. '
' → logprob: -4.856052398681641
    6. ':' → logprob: -5.606052398681641
    7. ':
' → logprob: -6.231052398681641
    8. '   ' → logprob: -6.481052398681641
    9. 'if' → logprob: -6.481052398681641
    10. ' =' → logprob: -7.231052398681641

Token 561: 'a' (ID: 64)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.4718516170978546
    2. ')' → logprob: -2.4718515872955322
    3. ' rect' → logprob: -2.8468515872955322
    4. 'norm' → logprob: -2.9718515872955322
    5. '{' → logprob: -3.2218515872955322
    6. ' norm' → logprob: -4.096851825714111
    7. '       ' → logprob: -4.221851825714111
    8. '   ' → logprob: -4.471851825714111
    9. '(rect' → logprob: -4.596851825714111
    10. '(norm' → logprob: -4.721851825714111

Token 562: ',a' (ID: 26776)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.5984150767326355
    2. ',a' → logprob: -0.8484150767326355
    3. ',' → logprob: -3.8484151363372803
    4. 'a' → logprob: -7.223414897918701
    5. 'b' → logprob: -9.84841537475586
    6. ' ,' → logprob: -10.22341537475586
    7. ')' → logprob: -10.47341537475586
    8. '),' → logprob: -11.34841537475586
    9. ',len' → logprob: -11.47341537475586
    10. '),(' → logprob: -11.59841537475586

Token 563: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1454593688249588
    2. '),' → logprob: -2.0204594135284424
    3. '))' → logprob: -6.645459175109863
    4. ')
' → logprob: -7.770459175109863
    5. ')}' → logprob: -8.145459175109863
    6. '),(' → logprob: -8.270459175109863
    7. '),
' → logprob: -8.895459175109863
    8. '):' → logprob: -9.520459175109863
    9. ',' → logprob: -9.770459175109863
    10. ')),' → logprob: -10.520459175109863

Token 564: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01898871175944805
    2. ' if' → logprob: -4.268988609313965
    3. 'if' → logprob: -5.393988609313965
    4. '
' → logprob: -8.393988609313965
    5. '   ' → logprob: -11.393988609313965
    6. ',' → logprob: -11.643988609313965
    7. '           ' → logprob: -12.393988609313965
    8. '```' → logprob: -12.643988609313965
    9. 'return' → logprob: -12.768988609313965
    10. 'for' → logprob: -12.893988609313965

Token 565: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.015543894842267036
    2. '       ' → logprob: -5.1405439376831055
    3. 'return' → logprob: -5.1405439376831055
    4. ' if' → logprob: -5.7655439376831055
    5. 'cube' → logprob: -8.140543937683105
    6. 'for' → logprob: -9.015543937683105
    7. '   ' → logprob: -9.765543937683105
    8. ' return' → logprob: -10.390543937683105
    9. ' cube' → logprob: -11.140543937683105
    10. 'side' → logprob: -11.265543937683105

Token 566: ' Then' (ID: 7801)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.015270965173840523
    2. 'return' → logprob: -4.390271186828613
    3. 'for' → logprob: -6.765271186828613
    4. 'cube' → logprob: -7.765271186828613
    5. 'side' → logprob: -8.265271186828613
    6. 'first' → logprob: -8.765271186828613
    7. 'rect' → logprob: -8.890271186828613
    8. '#' → logprob: -8.890271186828613
    9. 'unique' → logprob: -9.265271186828613
    10. 'face' → logprob: -9.765271186828613

Token 567: ' edges' (ID: 22569)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9454458951950073
    2. 'rect' → logprob: -1.5704458951950073
    3. 'all' → logprob: -2.070446014404297
    4. 'if' → logprob: -2.320446014404297
    5. 'return' → logprob: -2.820446014404297
    6. ' len' → logprob: -3.070446014404297
    7. ' all' → logprob: -3.445446014404297
    8. ' return' → logprob: -4.445446014404297
    9. ' if' → logprob: -4.695446014404297
    10. 'counts' → logprob: -5.695446014404297

Token 568: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.052939023822546005
    2. ' =' → logprob: -3.052938938140869
    3. 'len' → logprob: -5.927938938140869
    4. '==' → logprob: -6.802938938140869
    5. '=len' → logprob: -8.552939414978027
    6. '=set' → logprob: -8.802939414978027
    7. '_len' → logprob: -9.802939414978027
    8. 'set' → logprob: -10.052939414978027
    9. 'length' → logprob: -10.427939414978027
    10. 'count' → logprob: -11.302939414978027

Token 569: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.04869807884097099
    2. '1' → logprob: -3.0486981868743896
    3. ' {' → logprob: -9.173698425292969
    4. 'set' → logprob: -12.423698425292969
    5. ' ' → logprob: -13.673698425292969
    6. '{s' → logprob: -14.048698425292969
    7. '{
' → logprob: -14.673698425292969
    8. ' ' → logprob: -16.04869842529297
    9. 'len' → logprob: -16.54869842529297
    10. '{sub' → logprob: -16.67369842529297

Token 570: 'a' (ID: 64)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015602580271661282
    2. 'rect' → logprob: -4.8906025886535645
    3. '{' → logprob: -6.2656025886535645
    4. 'len' → logprob: -6.3906025886535645
    5. 'next' → logprob: -6.5156025886535645
    6. 'edges' → logprob: -6.8906025886535645
    7. 'list' → logprob: -7.0156025886535645
    8. ' ' → logprob: -7.3906025886535645
    9. 'a' → logprob: -9.265602111816406
    10. '
' → logprob: -10.015602111816406

Token 571: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.026580916717648506
    2. '1' → logprob: -3.651580810546875
    3. '}
' → logprob: -8.776580810546875
    4. 'len' → logprob: -10.526580810546875
    5. ')' → logprob: -11.151580810546875
    6. '},' → logprob: -11.151580810546875
    7. 'a' → logprob: -11.401580810546875
    8. ' }' → logprob: -11.651580810546875
    9. ' ' → logprob: -11.901580810546875
    10. '.pop' → logprob: -11.901580810546875

Token 572: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16792361438274384
    2. ' if' → logprob: -2.04292368888855
    3. 'if' → logprob: -3.79292368888855
    4. '   ' → logprob: -6.167923450469971
    5. '
' → logprob: -8.292923927307129
    6. ',' → logprob: -10.917923927307129
    7. '           ' → logprob: -11.667923927307129
    8. 'return' → logprob: -11.917923927307129
    9. ' for' → logprob: -11.917923927307129
    10. '        
' → logprob: -12.292923927307129

Token 573: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.017031598836183548
    2. 'return' → logprob: -4.142031669616699
    3. '       ' → logprob: -7.517031669616699
    4. ' if' → logprob: -7.767031669616699
    5. '   ' → logprob: -11.0170316696167
    6. 'for' → logprob: -12.3920316696167
    7. ' return' → logprob: -12.5170316696167
    8. '
' → logprob: -12.5170316696167
    9. '```' → logprob: -14.3920316696167
    10. '        
' → logprob: -14.5170316696167

Token 574: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0004309076175559312
    2. ' len' → logprob: -7.750431060791016
    3. '   ' → logprob: -16.500431060791016
    4. '(len' → logprob: -17.000431060791016
    5. ' ' → logprob: -17.250431060791016
    6. '  ' → logprob: -18.625431060791016
    7. '1' → logprob: -18.875431060791016
    8. '	len' → logprob: -19.125431060791016
    9. '
' → logprob: -20.000431060791016
    10. 'length' → logprob: -20.500431060791016

Token 575: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.00033581978641450405
    2. 'edges' → logprob: -8.000335693359375
    3. '(edge' → logprob: -16.000335693359375
    4. ' edges' → logprob: -16.500335693359375
    5. '(rect' → logprob: -16.625335693359375
    6. '(' → logprob: -16.875335693359375
    7. '(count' → logprob: -18.250335693359375
    8. '(ed' → logprob: -18.375335693359375
    9. '.edges' → logprob: -19.000335693359375
    10. '(
' → logprob: -19.250335693359375

Token 576: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.703698992729187
    2. ' ==' → logprob: -0.703698992729187
    3. ')' → logprob: -4.578699111938477
    4. ')==' → logprob: -8.453699111938477
    5. ' )' → logprob: -11.703699111938477
    6. '=' → logprob: -13.078699111938477
    7. '()' → logprob: -13.953699111938477
    8. '}' → logprob: -14.203699111938477
    9. '()==' → logprob: -14.703699111938477
    10. ' ' → logprob: -14.828699111938477

Token 577: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25196680426597595
    2. '==' → logprob: -1.5019668340682983
    3. '=' → logprob: -11.00196647644043
    4. '1' → logprob: -11.37696647644043
    5. ' ' → logprob: -12.50196647644043
    6. ' !=' → logprob: -13.37696647644043
    7. ' =' → logprob: -13.37696647644043
    8. '   ' → logprob: -14.25196647644043
    9. '```' → logprob: -14.62696647644043
    10. '==
' → logprob: -15.00196647644043

Token 578: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015872348740231246
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -15.750158309936523
    4. '{' → logprob: -16.500158309936523
    5. '  ' → logprob: -17.625158309936523
    6. ' ' → logprob: -17.750158309936523
    7. '۱' → logprob: -18.500158309936523
    8. '	' → logprob: -19.062658309936523
    9. '１' → logprob: -19.312658309936523
    10. '2' → logprob: -19.812658309936523

Token 579: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '{' → logprob: -15.750006675720215
    4. '   ' → logprob: -16.7500057220459
    5. '۱' → logprob: -17.5625057220459
    6. '```' → logprob: -18.6250057220459
    7. '2' → logprob: -18.7500057220459
    8. '  ' → logprob: -18.8125057220459
    9. '	' → logprob: -19.0000057220459
    10. '0' → logprob: -19.0625057220459

Token 580: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06942754238843918
    2. ':' → logprob: -2.819427490234375
    3. ' and' → logprob: -5.069427490234375
    4. '       ' → logprob: -7.694427490234375
    5. '           ' → logprob: -7.944427490234375
    6. 'and' → logprob: -8.694427490234375
    7. '   ' → logprob: -9.819427490234375
    8. ':return' → logprob: -9.819427490234375
    9. '):
' → logprob: -10.819427490234375
    10. ',' → logprob: -11.319427490234375

Token 581: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5513815879821777
    2. '           ' → logprob: -1.0513815879821777
    3. ':
' → logprob: -2.8013815879821777
    4. ':' → logprob: -5.426381587982178
    5. '   ' → logprob: -5.801381587982178
    6. ' and' → logprob: -5.801381587982178
    7. ',' → logprob: -6.551381587982178
    8. ' return' → logprob: -7.551381587982178
    9. '
' → logprob: -7.676381587982178
    10. '               ' → logprob: -9.051382064819336

Token 582: ' e' (ID: 319)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07001934945583344
    2. 'return' → logprob: -2.945019245147705
    3. ' a' → logprob: -5.070019245147705
    4. ' return' → logprob: -5.570019245147705
    5. 'edge' → logprob: -5.695019245147705
    6. ' edge' → logprob: -7.695019245147705
    7. '(a' → logprob: -8.695019721984863
    8. 'r' → logprob: -8.945019721984863
    9. '#' → logprob: -8.945019721984863
    10. 'side' → logprob: -9.195019721984863

Token 583: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0620013028383255
    2. ' =' → logprob: -2.8120012283325195
    3. 'dge' → logprob: -11.18700122833252
    4. '=edge' → logprob: -11.43700122833252
    5. '=e' → logprob: -12.31200122833252
    6. 'd' → logprob: -13.43700122833252
    7. '=list' → logprob: -13.56200122833252
    8. 'le' → logprob: -14.68700122833252
    9. '=a' → logprob: -14.93700122833252
    10. '=(' → logprob: -15.31200122833252

Token 584: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.07210684567689896
    2. ' next' → logprob: -2.8221068382263184
    3. 'edges' → logprob: -4.822106838226318
    4. 'list' → logprob: -6.322106838226318
    5. ' edges' → logprob: -8.447107315063477
    6. ' list' → logprob: -10.572107315063477
    7. 'edge' → logprob: -13.822107315063477
    8. '(next' → logprob: -14.447107315063477
    9. '[next' → logprob: -16.447107315063477
    10. 'rect' → logprob: -16.822107315063477

Token 585: '(iter' (ID: 61014)
  Prédit: '(iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(iter' → logprob: -0.008618827909231186
    2. 'iter' → logprob: -4.7586188316345215
    3. 'token' → logprob: -12.758618354797363
    4. ' iter' → logprob: -13.633618354797363
    5. '	iter' → logprob: -15.758618354797363
    6. '   ' → logprob: -18.00861930847168
    7. 't' → logprob: -18.00861930847168
    8. 'i' → logprob: -18.13361930847168
    9. '.iter' → logprob: -18.38361930847168
    10. 'iterator' → logprob: -18.50861930847168

Token 586: '(edges' (ID: 185298)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.004399617202579975
    2. '(edges' → logprob: -6.00439977645874
    3. ' edges' → logprob: -6.25439977645874
    4. '.edges' → logprob: -16.0044002532959
    5. ')' → logprob: -16.7544002532959
    6. 'edge' → logprob: -18.2544002532959
    7. '
' → logprob: -18.3794002532959
    8. '_edges' → logprob: -19.2544002532959
    9. '   ' → logprob: -19.5044002532959
    10. 'Edges' → logprob: -19.6294002532959

Token 587: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2521328330039978
    2. '))
' → logprob: -1.5021328926086426
    3. ' ))
' → logprob: -9.002132415771484
    4. ' ))' → logprob: -9.627132415771484
    5. ')' → logprob: -12.127132415771484
    6. '))

' → logprob: -12.252132415771484
    7. '))
' → logprob: -13.127132415771484
    8. ')
' → logprob: -14.127132415771484
    9. '()))
' → logprob: -14.877132415771484
    10. ' ' → logprob: -15.127132415771484

Token 588: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012116642901673913
    2. 'return' → logprob: -7.251211643218994
    3. '       ' → logprob: -8.501212120056152
    4. ' return' → logprob: -8.876212120056152
    5. '
' → logprob: -9.876212120056152
    6. ' if' → logprob: -10.376212120056152
    7. '   ' → logprob: -10.501212120056152
    8. 'if' → logprob: -10.751212120056152
    9. '               ' → logprob: -11.251212120056152
    10. '            
' → logprob: -12.251212120056152

Token 589: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08993349224328995
    2. 'if' (adapté à ' if') → logprob: -2.589933395385742
    3. 'for' → logprob: -4.839933395385742
    4. 'rect' → logprob: -7.214933395385742
    5. ' return' → logprob: -7.589933395385742
    6. 'faces' → logprob: -7.839933395385742
    7. 'a' → logprob: -8.214933395385742
    8. '       ' → logprob: -8.339933395385742
    9. 'face' → logprob: -8.464933395385742
    10. '#' → logprob: -8.589933395385742

Token 590: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.12748025357723236
    2. 'counts' → logprob: -2.6274802684783936
    3. 'rect' → logprob: -3.7524802684783936
    4. 'set' → logprob: -4.7524800300598145
    5. ' all' → logprob: -5.2524800300598145
    6. 'list' → logprob: -5.2524800300598145
    7. 'len' → logprob: -5.6274800300598145
    8. ' counts' → logprob: -7.2524800300598145
    9. 'self' → logprob: -9.002480506896973
    10. 'count' → logprob: -9.127480506896973

Token 591: '(r' (ID: 4729)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.6493890881538391
    2. '(rect' → logprob: -1.2743890285491943
    3. '(r' → logprob: -2.3993890285491943
    4. 'count' → logprob: -2.8993890285491943
    5. 'rect' → logprob: -3.1493890285491943
    6. '(norm' → logprob: -5.774389266967773
    7. '(c' → logprob: -6.274389266967773
    8. 'r' → logprob: -6.524389266967773
    9. '(len' → logprob: -7.899389266967773
    10. '(' → logprob: -7.899389266967773

Token 592: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20338833332061768
    2. ' ==' → logprob: -1.9533883333206177
    3. '==(' → logprob: -3.328388214111328
    4. '[' → logprob: -5.078388214111328
    5. '   ' → logprob: -9.078388214111328
    6. '==
' → logprob: -11.328388214111328
    7. ' ' → logprob: -11.578388214111328
    8. '```' → logprob: -12.578388214111328
    9. '.count' → logprob: -12.703388214111328
    10. '===' → logprob: -12.703388214111328

Token 593: ' (' (ID: 350)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0006347587914206088
    2. '(a' → logprob: -8.625635147094727
    3. ' (' → logprob: -8.750635147094727
    4. '   ' → logprob: -8.875635147094727
    5. '(' → logprob: -9.250635147094727
    6. ' ' → logprob: -10.500635147094727
    7. '(min' → logprob: -10.875635147094727
    8. '           ' → logprob: -12.500635147094727
    9. '  ' → logprob: -12.625635147094727
    10. '       ' → logprob: -13.125635147094727

Token 594: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.011115610599517822
    2. '(e' → logprob: -4.511115550994873
    3. ' e' → logprob: -10.761116027832031
    4. ' (' → logprob: -11.011116027832031
    5. '   ' → logprob: -11.261116027832031
    6. '(' → logprob: -11.636116027832031
    7. 'min' → logprob: -13.261116027832031
    8. ' ' → logprob: -13.261116027832031
    9. '           ' → logprob: -14.386116027832031
    10. '(min' → logprob: -14.386116027832031

Token 595: ',e' (ID: 43127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3066496253013611
    2. 'e' → logprob: -1.8066496849060059
    3. ',e' → logprob: -2.306649684906006
    4. ' ,' → logprob: -8.181649208068848
    5. ' e' → logprob: -12.181649208068848
    6. ',
' → logprob: -13.056649208068848
    7. '   ' → logprob: -13.306649208068848
    8. ',r' → logprob: -14.181649208068848
    9. 'r' → logprob: -14.306649208068848
    10. '_,' → logprob: -14.431649208068848

Token 596: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020270596724003553
    2. ' )' → logprob: -9.375203132629395
    3. ' for' → logprob: -9.625203132629395
    4. '       ' → logprob: -10.875203132629395
    5. 'for' → logprob: -11.125203132629395
    6. '           ' → logprob: -12.625203132629395
    7. '))' → logprob: -12.625203132629395
    8. '   ' → logprob: -12.875203132629395
    9. '):' → logprob: -13.250203132629395
    10. '):
' → logprob: -13.625203132629395

Token 597: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02954080142080784
    2. 'for' → logprob: -3.779540777206421
    3. '           ' → logprob: -5.529541015625
    4. ')' → logprob: -7.529541015625
    5. '       ' → logprob: -7.529541015625
    6. '               ' → logprob: -7.654541015625
    7. '):
' → logprob: -8.529541015625
    8. '):' → logprob: -8.654541015625
    9. '          ' → logprob: -8.904541015625
    10. '   ' → logprob: -9.904541015625

Token 598: ' r' (ID: 428)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.04909130930900574
    2. 'r' → logprob: -3.174091339111328
    3. ' rect' → logprob: -5.174091339111328
    4. ' r' → logprob: -8.049091339111328
    5. '	rect' → logprob: -10.299091339111328
    6. ' counts' → logprob: -11.424091339111328
    7. 'counts' → logprob: -11.674091339111328
    8. '   ' → logprob: -12.299091339111328
    9. '_' → logprob: -12.299091339111328
    10. ' rectangles' → logprob: -12.299091339111328

Token 599: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023468030616641045
    2. 'in' → logprob: -3.773468017578125
    3. 's' → logprob: -9.023468017578125
    4. ')' → logprob: -9.898468017578125
    5. ' ' → logprob: -11.523468017578125
    6. ',' → logprob: -12.148468017578125
    7. ' )' → logprob: -12.398468017578125
    8. 'ects' → logprob: -12.523468017578125
    9. '   ' → logprob: -12.648468017578125
    10. 't' → logprob: -12.648468017578125

Token 600: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.00030161935137584805
    2. 'counts' → logprob: -8.750301361083984
    3. ' rect' → logprob: -9.000301361083984
    4. 'count' → logprob: -11.500301361083984
    5. '   ' → logprob: -12.250301361083984
    6. ' counts' → logprob: -13.125301361083984
    7. '
' → logprob: -14.625301361083984
    8. 'set' → logprob: -15.000301361083984
    9. '(rect' → logprob: -15.125301361083984
    10. '	rect' → logprob: -15.375301361083984

Token 601: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0006766928127035499
    2. 'ects' → logprob: -7.87567663192749
    3. 'rect' → logprob: -8.750677108764648
    4. 'cts' → logprob: -9.625677108764648
    5. 'angles' → logprob: -10.875677108764648
    6. 'counts' → logprob: -10.875677108764648
    7. 'ts' → logprob: -11.375677108764648
    8. ')' → logprob: -11.875677108764648
    9. 'sts' → logprob: -13.000677108764648
    10. 'sets' → logprob: -13.250677108764648

Token 602: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.005021463148295879
    2. '           ' → logprob: -6.130021572113037
    3. '):' → logprob: -6.630021572113037
    4. '               ' → logprob: -6.630021572113037
    5. '       ' → logprob: -9.130021095275879
    6. '):
' → logprob: -10.505021095275879
    7. ':
' → logprob: -10.755021095275879
    8. ')' → logprob: -10.755021095275879
    9. ':' → logprob: -12.880021095275879
    10. ' ):
' → logprob: -13.005021095275879

Token 603: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.130576806142926e-05
    2. '           ' → logprob: -11.000031471252441
    3. ' return' → logprob: -12.125031471252441
    4. 'return' → logprob: -12.125031471252441
    5. '
' → logprob: -13.000031471252441
    6. '                   ' → logprob: -14.500031471252441
    7. '              ' → logprob: -14.750031471252441
    8. ':return' → logprob: -15.625031471252441
    9. '       ' → logprob: -16.125030517578125
    10. '                
' → logprob: -16.750030517578125

Token 604: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01568695530295372
    2. ' return' → logprob: -4.265686988830566
    3. '                   ' → logprob: -6.765686988830566
    4. '               ' → logprob: -8.015686988830566
    5. '           ' → logprob: -10.640686988830566
    6. '   ' → logprob: -11.515686988830566
    7. '	return' → logprob: -12.640686988830566
    8. '                       ' → logprob: -14.015686988830566
    9. '       ' → logprob: -14.640686988830566
    10. ':return' → logprob: -14.765686988830566

Token 605: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.547789674485102e-05
    2. ' True' → logprob: -10.250035285949707
    3. 'False' → logprob: -16.125036239624023
    4. '   ' → logprob: -20.000036239624023
    5. '(True' → logprob: -20.000036239624023
    6. '
' → logprob: -22.000036239624023
    7. '       ' → logprob: -23.250036239624023
    8. 'true' → logprob: -23.250036239624023
    9. '=True' → logprob: -23.375036239624023
    10. '           ' → logprob: -23.750036239624023

Token 606: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6348420977592468
    2. '
' → logprob: -0.7598420977592468
    3. '        
' → logprob: -7.0098419189453125
    4. 'return' → logprob: -7.2598419189453125
    5. '<|end|>' → logprob: -8.759841918945312
    6. '\
' → logprob: -9.134841918945312
    7. '
' → logprob: -9.259841918945312
    8. '    
' → logprob: -9.384841918945312
    9. ' return' → logprob: -10.009841918945312
    10. '\n' → logprob: -10.509841918945312

Token 607: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017069095745682716
    2. '
' → logprob: -4.392068862915039
    3. '<|end|>' → logprob: -6.142068862915039
    4. 'return' → logprob: -6.392068862915039
    5. '        
' → logprob: -7.517068862915039
    6. ' return' → logprob: -10.142068862915039
    7. '\
' → logprob: -10.517068862915039
    8. '```' → logprob: -10.642068862915039
    9. '<|end|>' → logprob: -10.892068862915039
    10. '   ' → logprob: -11.017068862915039

Token 608: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3871793746948242
    2. 'return' (adapté à ' return') → logprob: -1.1371793746948242
    3. ' return' → logprob: -8.387179374694824
    4. '
' → logprob: -9.762179374694824
    5. '   ' → logprob: -10.887179374694824
    6. '        
' → logprob: -13.387179374694824
    7. '	return' → logprob: -13.887179374694824
    8. '{return' → logprob: -14.387179374694824
    9. 'False' → logprob: -14.637179374694824
    10. '```' → logprob: -15.262179374694824

Token 609: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00020354038861114532
    2. ' False' → logprob: -8.500203132629395
    3. '(False' → logprob: -21.37520408630371
    4. 'false' → logprob: -24.00020408630371
    5. 'True' → logprob: -25.25020408630371
    6. '_false' → logprob: -25.50020408630371
    7. '=False' → logprob: -26.62520408630371
    8. '.False' → logprob: -27.50020408630371
    9. 'None' → logprob: -28.62520408630371
    10. 'FALSE' → logprob: -29.62520408630371

Token 610: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 611: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 612: ' Cub' (ID: 42140)
  Prédit: ' Cube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Cube' → logprob: -0.22123746573925018
    2. ' Cub' → logprob: -1.7212374210357666
    3. 'Cube' → logprob: -4.221237659454346
    4. ' Rect' → logprob: -5.721237659454346
    5. 'Cub' → logprob: -6.721237659454346
    6. ' cube' → logprob: -8.971237182617188
    7. ' Rectangle' → logprob: -9.096237182617188
    8. ' Box' → logprob: -9.471237182617188
    9. 'Rect' → logprob: -9.846237182617188
    10. '_cube' → logprob: -10.596237182617188

Token 613: 'oid' (ID: 11234)
  Prédit: 'oid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oid' → logprob: -0.04477588087320328
    2. 'e' → logprob: -3.16977596282959
    3. 'oids' → logprob: -6.91977596282959
    4. 'o' → logprob: -7.41977596282959
    5. 'ic' → logprob: -10.04477596282959
    6. ' oid' → logprob: -10.91977596282959
    7. 'es' → logprob: -11.16977596282959
    8. 'er' → logprob: -11.16977596282959
    9. '```' → logprob: -11.41977596282959
    10. 'eid' → logprob: -11.54477596282959

Token 614: 'Validator' (ID: 18992)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026678074151277542
    2. ':
' → logprob: -3.6516780853271484
    3. 'Builder' → logprob: -9.026678085327148
    4. 'Dimensions' → logprob: -10.026678085327148
    5. '(Rect' → logprob: -10.151678085327148
    6. 'Factory' → logprob: -10.401678085327148
    7. '(' → logprob: -10.901678085327148
    8. 'Shape' → logprob: -10.901678085327148
    9. '(object' → logprob: -11.026678085327148
    10. 'Validator' → logprob: -11.151678085327148

Token 615: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009779583662748337
    2. ':
' → logprob: -4.634779453277588
    3. ' :' → logprob: -11.759779930114746
    4. ':def' → logprob: -12.509779930114746
    5. '<|end|>' → logprob: -12.759779930114746
    6. ':

' → logprob: -12.884779930114746
    7. '():' → logprob: -13.759779930114746
    8. '(object' → logprob: -13.759779930114746
    9. '   ' → logprob: -14.009779930114746
    10. '(' → logprob: -14.259779930114746

Token 616: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007572788745164871
    2. ' def' → logprob: -6.007572650909424
    3. ':
' → logprob: -6.132572650909424
    4. ':' → logprob: -6.132572650909424
    5. '```' → logprob: -7.882572650909424
    6. 'def' → logprob: -8.132573127746582
    7. '    
' → logprob: -10.882573127746582
    8. '
' → logprob: -11.382573127746582
    9. ':def' → logprob: -11.382573127746582
    10. '<|end|>' → logprob: -12.132573127746582

Token 617: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.004503823351114988
    2. 'def' (adapté à ' def') → logprob: -5.8795037269592285
    3. '   ' → logprob: -6.3795037269592285
    4. ' ' → logprob: -14.629504203796387
    5. ' @' → logprob: -15.129504203796387
    6. '    ' → logprob: -15.504504203796387
    7. '	def' → logprob: -15.879504203796387
    8. '   ' → logprob: -16.00450325012207
    9. '   ' → logprob: -16.00450325012207
    10. '@' → logprob: -16.62950325012207

Token 618: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.618756115436554
    2. ' __' → logprob: -0.868756115436554
    3. 'init' → logprob: -3.618756055831909
    4. '_init' → logprob: -4.868756294250488
    5. 'def' → logprob: -5.368756294250488
    6. ' def' → logprob: -6.618756294250488
    7. ' init' → logprob: -6.868756294250488
    8. '```' → logprob: -8.743756294250488
    9. 'validate' → logprob: -9.243756294250488
    10. '_' → logprob: -10.493756294250488

Token 619: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00010330478107789531
    2. 'it' → logprob: -10.000102996826172
    3. 'Init' → logprob: -10.000102996826172
    4. 'int' → logprob: -12.500102996826172
    5. 'in' → logprob: -12.625102996826172
    6. 'new' → logprob: -13.500102996826172
    7. ' init' → logprob: -13.750102996826172
    8. '```' → logprob: -14.500102996826172
    9. 'iter' → logprob: -14.750102996826172
    10. '__' → logprob: -14.750102996826172

Token 620: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0007725820760242641
    2. '__(
' → logprob: -8.000772476196289
    3. '__' → logprob: -8.500772476196289
    4. '(self' → logprob: -8.625772476196289
    5. '(' → logprob: -10.125772476196289
    6. '__((' → logprob: -11.875772476196289
    7. '_(' → logprob: -12.500772476196289
    8. ' (' → logprob: -13.625772476196289
    9. 'self' → logprob: -14.250772476196289
    10. '<>(' → logprob: -14.875772476196289

Token 621: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002659847668837756
    2. ' self' → logprob: -8.875266075134277
    3. '
' → logprob: -9.625266075134277
    4. ')' → logprob: -10.375266075134277
    5. '):
' → logprob: -11.875266075134277
    6. '   ' → logprob: -12.125266075134277
    7. '(self' → logprob: -12.250266075134277
    8. ',' → logprob: -12.250266075134277
    9. '       ' → logprob: -13.750266075134277
    10. ',self' → logprob: -13.875266075134277

Token 622: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008635803242214024
    2. 'self' → logprob: -7.500863552093506
    3. '(self' → logprob: -8.875864028930664
    4. '   ' → logprob: -9.750864028930664
    5. ',self' → logprob: -10.250864028930664
    6. ' ,' → logprob: -10.500864028930664
    7. '):
' → logprob: -11.000864028930664
    8. ',
' → logprob: -11.500864028930664
    9. '):' → logprob: -12.250864028930664
    10. ' self' → logprob: -12.625864028930664

Token 623: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031235255300998688
    2. ' self' → logprob: -6.628123760223389
    3. '       ' → logprob: -7.003123760223389
    4. '   ' → logprob: -7.253123760223389
    5. '(self' → logprob: -9.00312328338623
    6. 'def' → logprob: -10.00312328338623
    7. '
' → logprob: -12.37812328338623
    8. '	self' → logprob: -13.50312328338623
    9. '6' → logprob: -14.00312328338623
    10. '```' → logprob: -14.12812328338623

Token 624: ' pass' (ID: 1853)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6674360036849976
    2. '       ' → logprob: -1.4174360036849976
    3. 'pass' (adapté à ' pass') → logprob: -1.4174360036849976
    4. ' pass' → logprob: -6.667436122894287
    5. '   ' → logprob: -7.792436122894287
    6. ' self' → logprob: -7.917436122894287
    7. 'def' → logprob: -8.417435646057129
    8. '
' → logprob: -10.542435646057129
    9. '	pass' → logprob: -13.042435646057129
    10. '```' → logprob: -13.292435646057129

Token 625: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2758793830871582
    2. '
' → logprob: -2.275879383087158
    3. '<|end|>' → logprob: -2.275879383087158
    4. 'def' → logprob: -3.900879383087158
    5. ' def' → logprob: -4.900879383087158
    6. '<|end|>' → logprob: -5.525879383087158
    7. '    
' → logprob: -6.150879383087158
    8. '```' → logprob: -6.900879383087158
    9. '	def' → logprob: -9.02587890625
    10. '  
' → logprob: -9.27587890625

Token 626: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03544994071125984
    2. '
' → logprob: -4.035449981689453
    3. 'def' → logprob: -4.535449981689453
    4. ' def' → logprob: -5.160449981689453
    5. '    
' → logprob: -7.785449981689453
    6. '<|end|>' → logprob: -8.785449981689453
    7. '<|end|>' → logprob: -10.410449981689453
    8. ' 
' → logprob: -10.660449981689453
    9. ' ' → logprob: -11.160449981689453
    10. '```' → logprob: -11.285449981689453

Token 627: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00011772842844948173
    2. ' def' → logprob: -9.250117301940918
    3. '   ' → logprob: -10.750117301940918
    4. '
' → logprob: -17.250118255615234
    5. '	def' → logprob: -18.500118255615234
    6. ' ' → logprob: -20.000118255615234
    7. 'de' → logprob: -20.125118255615234
    8. '```' → logprob: -20.375118255615234
    9. '@' → logprob: -20.625118255615234
    10. 'd' → logprob: -21.000118255615234

Token 628: ' read' (ID: 1729)
  Prédit: 'validate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'validate' → logprob: -0.1105753555893898
    2. 'can' → logprob: -2.3605754375457764
    3. ' validate' → logprob: -5.235575199127197
    4. 'is' → logprob: -5.360575199127197
    5. ' can' → logprob: -8.610575675964355
    6. ' is' → logprob: -9.985575675964355
    7. 'check' → logprob: -10.360575675964355
    8. 'valid' → logprob: -10.735575675964355
    9. 'def' → logprob: -11.985575675964355
    10. '_validate' → logprob: -12.985575675964355

Token 629: '_input' (ID: 12507)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.2822705507278442
    2. '_input' → logprob: -1.4072705507278442
    3. '(self' → logprob: -1.6572705507278442
    4. '_rect' → logprob: -1.9072705507278442
    5. '_self' → logprob: -3.1572704315185547
    6. '_line' → logprob: -3.6572704315185547
    7. '_rectangle' → logprob: -3.7822704315185547
    8. '_dimensions' → logprob: -4.157270431518555
    9. 'self' → logprob: -4.282270431518555
    10. '(' → logprob: -5.532270431518555

Token 630: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00072851701406762
    2. '(' → logprob: -7.250728607177734
    3. ' (' → logprob: -12.125728607177734
    4. '()' → logprob: -12.125728607177734
    5. 'self' → logprob: -12.125728607177734
    6. '(s' → logprob: -14.000728607177734
    7. '()(' → logprob: -15.000728607177734
    8. '():
' → logprob: -15.375728607177734
    9. '_line' → logprob: -15.500728607177734
    10. '():' → logprob: -15.750728607177734

Token 631: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03643401339650154
    2. ',' → logprob: -3.9114339351654053
    3. '):
' → logprob: -4.161434173583984
    4. 'self' → logprob: -9.036434173583984
    5. ' ):' → logprob: -10.411434173583984
    6. '):
' → logprob: -11.536434173583984
    7. ')' → logprob: -11.911434173583984
    8. '():' → logprob: -13.036434173583984
    9. ':' → logprob: -13.536434173583984
    10. ' ,' → logprob: -13.661434173583984

Token 632: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.922563963802531e-05
    2. '	' → logprob: -11.125079154968262
    3. 'n' → logprob: -11.250079154968262
    4. '   ' → logprob: -11.250079154968262
    5. 'import' → logprob: -12.250079154968262
    6. '	   ' → logprob: -12.250079154968262
    7. '```' → logprob: -12.250079154968262
    8. 'return' → logprob: -12.375079154968262
    9. ',' → logprob: -13.000079154968262
    10. 's' → logprob: -13.000079154968262

Token 633: ' rectangles' (ID: 164265)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.422394335269928
    2. ' n' → logprob: -1.9223942756652832
    3. 'rect' → logprob: -2.422394275665283
    4. ' lines' → logprob: -2.797394275665283
    5. ' rectangles' → logprob: -4.172394275665283
    6. 'lines' → logprob: -4.672394275665283
    7. '       ' → logprob: -4.797394275665283
    8. 'self' → logprob: -5.422394275665283
    9. ' self' → logprob: -5.547394275665283
    10. ' rect' → logprob: -6.297394275665283

Token 634: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16094543039798737
    2. '=' → logprob: -1.9109454154968262
    3. '=[]' → logprob: -7.285945415496826
    4. '=[]
' → logprob: -10.410945892333984
    5. 's' → logprob: -13.535945892333984
    6. '   ' → logprob: -13.785945892333984
    7. '_list' → logprob: -14.160945892333984
    8. '[]' → logprob: -14.410945892333984
    9. '=[]
' → logprob: -14.410945892333984
    10. '_input' → logprob: -14.660945892333984

Token 635: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.5309634208679199
    2. '[]' → logprob: -1.03096342086792
    3. '[' → logprob: -3.03096342086792
    4. '[
' → logprob: -5.03096342086792
    5. '[int' → logprob: -8.030963897705078
    6. '[]

' → logprob: -9.905963897705078
    7. '[input' → logprob: -10.905963897705078
    8. '[array' → logprob: -11.030963897705078
    9. '[class' → logprob: -11.280963897705078
    10. '[self' → logprob: -11.280963897705078

Token 636: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033581978641450405
    2. ' for' → logprob: -8.375335693359375
    3. 'for' → logprob: -9.750335693359375
    4. '	' → logprob: -10.750335693359375
    5. '	   ' → logprob: -11.625335693359375
    6. '<|end|>' → logprob: -12.250335693359375
    7. '   ' → logprob: -13.125335693359375
    8. ',' → logprob: -13.250335693359375
    9. '	       ' → logprob: -13.250335693359375
    10. '           ' → logprob: -13.375335693359375

Token 637: ' import' (ID: 1588)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02382359653711319
    2. ' for' → logprob: -3.7738234996795654
    3. '       ' → logprob: -7.5238237380981445
    4. '6' → logprob: -10.273823738098145
    5. 'while' → logprob: -13.773823738098145
    6. '	for' → logprob: -14.148823738098145
    7. '
' → logprob: -14.398823738098145
    8. '   ' → logprob: -15.148823738098145
    9. 'n' → logprob: -15.648823738098145
    10. '_' → logprob: -16.023822784423828

Token 638: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.693240225315094
    2. 'sys' → logprob: -0.693240225315094
    3. '=sys' → logprob: -9.31824016571045
    4. '_sys' → logprob: -13.31824016571045
    5. '	sys' → logprob: -13.56824016571045
    6. '(sys' → logprob: -15.81824016571045
    7. 'built' → logprob: -17.443241119384766
    8. '_' → logprob: -17.443241119384766
    9. 'stdin' → logprob: -18.068241119384766
    10. 'math' → logprob: -18.318241119384766

Token 639: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28183144330978394
    2. '
' → logprob: -1.4068315029144287
    3. '        
' → logprob: -7.78183126449585
    4. 'for' → logprob: -9.156831741333008
    5. ' for' → logprob: -10.406831741333008
    6. '	' → logprob: -10.531831741333008
    7. '
' → logprob: -11.156831741333008
    8. '.readline' → logprob: -11.156831741333008
    9. '		
' → logprob: -11.906831741333008
    10. '  
' → logprob: -11.906831741333008

Token 640: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028490394353866577
    2. '
' → logprob: -4.0284905433654785
    3. 'for' → logprob: -4.7784905433654785
    4. ' for' → logprob: -6.6534905433654785
    5. '        
' → logprob: -8.52849006652832
    6. '	' → logprob: -8.77849006652832
    7. 'n' → logprob: -10.15349006652832
    8. '.readline' → logprob: -10.52849006652832
    9. '	for' → logprob: -10.77849006652832
    10. ' lines' → logprob: -10.77849006652832

Token 641: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2278190553188324
    2. ' for' → logprob: -2.1028189659118652
    3. '       ' → logprob: -2.7278189659118652
    4. ' lines' → logprob: -4.227818965911865
    5. 'lines' → logprob: -6.477818965911865
    6. 'line' → logprob: -9.852819442749023
    7. 'data' → logprob: -10.602819442749023
    8. 'input' → logprob: -11.102819442749023
    9. '
' → logprob: -11.352819442749023
    10. ' readline' → logprob: -11.852819442749023

Token 642: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.6026761531829834
    2. '_' → logprob: -1.1026761531829834
    3. ' line' → logprob: -2.2276761531829834
    4. '_line' → logprob: -4.4776763916015625
    5. 'line' → logprob: -6.6026763916015625
    6. '_i' → logprob: -9.102676391601562
    7. ' i' → logprob: -10.852676391601562
    8. '	line' → logprob: -11.602676391601562
    9. '_l' → logprob: -11.977676391601562
    10. '(line' → logprob: -12.102676391601562

Token 643: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.000116655595775228
    2. 'in' → logprob: -9.375116348266602
    3. 's' → logprob: -11.500116348266602
    4. ' ' → logprob: -11.875116348266602
    5. 'line' → logprob: -12.125116348266602
    6. 'i' → logprob: -13.000116348266602
    7. '_' → logprob: -13.375116348266602
    8. 'name' → logprob: -13.750116348266602
    9. 'import' → logprob: -14.125116348266602
    10. '

' → logprob: -14.250116348266602

Token 644: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5762633085250854
    2. 'sys' → logprob: -0.8262633085250854
    3. ' sys' → logprob: -8.701263427734375
    4. ' range' → logprob: -8.826263427734375
    5. '(sys' → logprob: -12.701263427734375
    6. '=sys' → logprob: -13.326263427734375
    7. 'iter' → logprob: -13.951263427734375
    8. 'map' → logprob: -14.326263427734375
    9. '```' → logprob: -14.326263427734375
    10. 'system' → logprob: -14.451263427734375

Token 645: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20142191648483276
    2. '6' → logprob: -1.7014219760894775
    3. ' ' → logprob: -11.701421737670898
    4. '(
' → logprob: -15.576421737670898
    5. ' (' → logprob: -15.826421737670898
    6. '   ' → logprob: -17.0764217376709
    7. ' six' → logprob: -19.5764217376709
    8. '{' → logprob: -19.7014217376709
    9. '  ' → logprob: -19.7014217376709
    10. '
' → logprob: -19.8264217376709

Token 646: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -22.125
    4. ')' → logprob: -24.0
    5. '۶' → logprob: -24.125
    6. ' six' → logprob: -24.625
    7. '六' → logprob: -24.75
    8. '٦' → logprob: -25.0
    9. '６' → logprob: -25.125
    10. '  ' → logprob: -25.25

Token 647: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3144316077232361
    2. '):' → logprob: -1.3144316673278809
    3. ':' → logprob: -7.314431667327881
    4. '   ' → logprob: -8.314431190490723
    5. '):
' → logprob: -9.189431190490723
    6. ':
' → logprob: -9.814431190490723
    7. ')' → logprob: -9.939431190490723
    8. '       ' → logprob: -10.814431190490723
    9. ' ):
' → logprob: -11.064431190490723
    10. ' ):' → logprob: -11.939431190490723

Token 648: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.420598219847307e-05
    2. ' line' → logprob: -10.0000638961792
    3. '            
' → logprob: -11.7500638961792
    4. '	       ' → logprob: -12.3750638961792
    5. '		' → logprob: -13.3750638961792
    6. ',' → logprob: -14.2500638961792
    7. ' lines' → logprob: -14.2500638961792
    8. '
' → logprob: -14.6250638961792
    9. 'line' → logprob: -14.6250638961792
    10. '		   ' → logprob: -14.8750638961792

Token 649: ' h' (ID: 312)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.04883216693997383
    2. 'line' → logprob: -3.0488321781158447
    3. '           ' → logprob: -8.798831939697266
    4. ' parts' → logprob: -10.298831939697266
    5. 'l' → logprob: -10.673831939697266
    6. ' l' → logprob: -10.798831939697266
    7. ' s' → logprob: -12.923831939697266
    8. 'x' → logprob: -13.048831939697266
    9. ' x' → logprob: -13.173831939697266
    10. 's' → logprob: -13.423831939697266

Token 650: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008618827909231186
    2. ',w' → logprob: -4.7586188316345215
    3. ' ,' → logprob: -12.883618354797363
    4. ',width' → logprob: -13.383618354797363
    5. 'w' → logprob: -15.883618354797363
    6. '_,' → logprob: -16.75861930847168
    7. ',W' → logprob: -16.75861930847168
    8. ',
' → logprob: -17.75861930847168
    9. ',int' → logprob: -18.38361930847168
    10. ',s' → logprob: -18.88361930847168

Token 651: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.023247109726071358
    2. ' w' → logprob: -3.773247003555298
    3. '<|end|>' → logprob: -13.898246765136719
    4. ' ' → logprob: -14.273246765136719
    5. '	w' → logprob: -17.52324676513672
    6. ' 
' → logprob: -18.02324676513672
    7. '    ' → logprob: -18.27324676513672
    8. ' ' → logprob: -18.39824676513672
    9. ',w' → logprob: -19.02324676513672
    10. '
' → logprob: -19.14824676513672

Token 652: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001170225441455841
    2. ' =' → logprob: -6.7511701583862305
    3. '=line' → logprob: -17.626171112060547
    4. '=input' → logprob: -18.251171112060547
    5. ')' → logprob: -19.251171112060547
    6. '_=' → logprob: -19.376171112060547
    7. ' ' → logprob: -19.626171112060547
    8. '=int' → logprob: -19.876171112060547
    9. '=

' → logprob: -20.126171112060547
    10. '<|end|>' → logprob: -20.126171112060547

Token 653: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.023247340694069862
    2. ' map' → logprob: -3.773247241973877
    3. '(map' → logprob: -14.148247718811035
    4. '   ' → logprob: -14.273247718811035
    5. '[' → logprob: -15.523247718811035
    6. '	map' → logprob: -16.02324676513672
    7. 'list' → logprob: -17.14824676513672
    8. 'sys' → logprob: -17.27324676513672
    9. ' ' → logprob: -17.39824676513672
    10. '  ' → logprob: -17.77324676513672

Token 654: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001503313542343676
    2. 'int' → logprob: -6.5015034675598145
    3. '(' → logprob: -14.751502990722656
    4. ' int' → logprob: -15.376502990722656
    5. '=int' → logprob: -16.126502990722656
    6. '[int' → logprob: -17.001502990722656
    7. '<int' → logprob: -17.251502990722656
    8. ',int' → logprob: -17.626502990722656
    9. '   ' → logprob: -17.876502990722656
    10. '```' → logprob: -18.001502990722656

Token 655: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.03842758387327194
    2. ',' → logprob: -4.038427352905273
    3. '(' → logprob: -4.913427352905273
    4. '(input' → logprob: -5.038427352905273
    5. ')' → logprob: -5.413427352905273
    6. 'sys' → logprob: -7.038427352905273
    7. 'input' → logprob: -7.788427352905273
    8. ',input' → logprob: -8.788427352905273
    9. ' (' → logprob: -8.913427352905273
    10. '=sys' → logprob: -9.413427352905273

Token 656: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -2.15310683415737e-05
    2. ' sys' → logprob: -10.750021934509277
    3. '(sys' → logprob: -18.75002098083496
    4. '=sys' → logprob: -19.87502098083496
    5. 'input' → logprob: -20.62502098083496
    6. '	sys' → logprob: -20.87502098083496
    7. '
' → logprob: -21.75002098083496
    8. '.sys' → logprob: -22.87502098083496
    9. ')' → logprob: -23.12502098083496
    10. '_sys' → logprob: -23.50002098083496

Token 657: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -15.250000953674316
    3. '.argv' → logprob: -15.250000953674316
    4. '.readline' → logprob: -15.375000953674316
    5. '.stdout' → logprob: -15.375000953674316
    6. '.std' → logprob: -15.500000953674316
    7. 'stdin' → logprob: -16.375001907348633
    8. '(stdin' → logprob: -17.500001907348633
    9. ' stdin' → logprob: -19.500001907348633
    10. '.st' → logprob: -19.500001907348633

Token 658: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -7.703443770878948e-06
    2. '.stdin' → logprob: -12.375007629394531
    3. '.' → logprob: -12.625007629394531
    4. '.readlines' → logprob: -15.875007629394531
    5. '.read' → logprob: -16.62500762939453
    6. ' .' → logprob: -19.37500762939453
    7. '.stdout' → logprob: -20.00000762939453
    8. '.buffer' → logprob: -20.75000762939453
    9. '().' → logprob: -21.87500762939453
    10. ' readline' → logprob: -22.00000762939453

Token 659: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.542423165636137e-05
    2. '()' → logprob: -9.375085830688477
    3. '())' → logprob: -15.500085830688477
    4. '()
' → logprob: -16.000085830688477
    5. ' ().' → logprob: -16.625085830688477
    6. '(' → logprob: -17.250085830688477
    7. '.strip' → logprob: -17.875085830688477
    8. '.readline' → logprob: -18.750085830688477
    9. '().__' → logprob: -19.750085830688477
    10. '().
' → logprob: -19.750085830688477

Token 660: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.5762667059898376
    2. 'split' → logprob: -0.8262667059898376
    3. 'rstrip' → logprob: -8.076266288757324
    4. 'read' → logprob: -11.076266288757324
    5. ' strip' → logprob: -14.826266288757324
    6. ' split' → logprob: -15.326266288757324
    7. '.strip' → logprob: -16.45126724243164
    8. 'decode' → logprob: -16.57626724243164
    9. '(split' → logprob: -16.70126724243164
    10. '().' → logprob: -17.20126724243164

Token 661: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9027791495318525e-05
    2. '()' → logprob: -10.875019073486328
    3. ' ().' → logprob: -17.750019073486328
    4. '())' → logprob: -18.375019073486328
    5. '(' → logprob: -18.625019073486328
    6. '()
' → logprob: -19.375019073486328
    7. '.split' → logprob: -20.125019073486328
    8. '   ' → logprob: -20.500019073486328
    9. '().'' → logprob: -21.375019073486328
    10. '()?.' → logprob: -21.500019073486328

Token 662: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -18.0
    3. 'rstrip' → logprob: -19.25
    4. 'spl' → logprob: -19.375
    5. '(split' → logprob: -19.5
    6. '.split' → logprob: -21.625
    7. '```' → logprob: -22.5
    8. 'strip' → logprob: -23.375
    9. 'plit' → logprob: -23.5
    10. '_split' → logprob: -23.625

Token 663: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0022455346770584583
    2. '()' → logprob: -6.2522454261779785
    3. '())
' → logprob: -8.502245903015137
    4. '()))' → logprob: -9.877245903015137
    5. '(' → logprob: -10.252245903015137
    6. '('' → logprob: -11.127245903015137
    7. ')' → logprob: -11.627245903015137
    8. '(','' → logprob: -14.252245903015137
    9. ' ())' → logprob: -14.252245903015137
    10. '("' → logprob: -14.377245903015137

Token 664: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007280402351170778
    2. '<|end|>' → logprob: -7.625728130340576
    3. '       ' → logprob: -9.625727653503418
    4. ',' → logprob: -9.750727653503418
    5. ')' → logprob: -10.625727653503418
    6. '            
' → logprob: -10.750727653503418
    7. '<|end|>' → logprob: -11.250727653503418
    8. '   ' → logprob: -11.625727653503418
    9. '[' → logprob: -11.750727653503418
    10. '               ' → logprob: -11.750727653503418

Token 665: ' rectangles' (ID: 164265)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.002580178203061223
    2. ' rectangles' → logprob: -6.127580165863037
    3. '           ' → logprob: -8.002580642700195
    4. ' rect' → logprob: -9.877580642700195
    5. 'rectangle' → logprob: -12.002580642700195
    6. 'r' → logprob: -13.752580642700195
    7. '	rect' → logprob: -14.002580642700195
    8. '       ' → logprob: -14.752580642700195
    9. '   ' → logprob: -15.002580642700195
    10. '.rect' → logprob: -15.877580642700195

Token 666: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.505351095460355e-05
    2. '.' → logprob: -9.500075340270996
    3. '.app' → logprob: -16.75007438659668
    4. 'append' → logprob: -17.12507438659668
    5. '.ap' → logprob: -18.50007438659668
    6. '.Append' → logprob: -18.62507438659668
    7. ' .' → logprob: -19.00007438659668
    8. '.add' → logprob: -20.12507438659668
    9. '.emplace' → logprob: -20.62507438659668
    10. '.extend' → logprob: -20.75007438659668

Token 667: '(Rect' (ID: 138396)
  Prédit: '(Rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Rect' → logprob: -1.9361264946837764e-07
    2. 'Rectangle' → logprob: -15.625
    3. '(rect' → logprob: -18.125
    4. '.Rectangle' → logprob: -19.625
    5. ' Rectangle' → logprob: -19.75
    6. '(Rem' → logprob: -21.75
    7. '(' → logprob: -22.875
    8. '(R' → logprob: -22.875
    9. '_Rect' → logprob: -23.0
    10. '_rectangle' → logprob: -23.0

Token 668: 'angle' (ID: 7140)
  Prédit: 'angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -3.7697225252486533e-06
    2. 'Angle' → logprob: -13.000003814697266
    3. 'angles' → logprob: -14.250003814697266
    4. 'ang' → logprob: -15.000003814697266
    5. 'Rectangle' → logprob: -16.000003814697266
    6. 'ANGLE' → logprob: -16.000003814697266
    7. 'ange' → logprob: -16.500003814697266
    8. 'angel' → logprob: -17.375003814697266
    9. 'rectangle' → logprob: -18.375003814697266
    10. 'an' → logprob: -18.375003814697266

Token 669: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.375000953674316
    3. 'h' → logprob: -15.750000953674316
    4. '(
' → logprob: -19.125
    5. ' (' → logprob: -20.875
    6. ',h' → logprob: -21.25
    7. '(height' → logprob: -21.375
    8. ')' → logprob: -21.625
    9. ' h' → logprob: -21.625
    10. '	h' → logprob: -21.625

Token 670: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0067279222421348095
    2. ',w' → logprob: -5.006727695465088
    3. ' ,' → logprob: -11.756728172302246
    4. ',
' → logprob: -12.631728172302246
    5. 'w' → logprob: -14.506728172302246
    6. '<|end|>' → logprob: -14.506728172302246
    7. ',width' → logprob: -16.00672721862793
    8. '‌,' → logprob: -16.38172721862793
    9. ',

' → logprob: -16.63172721862793
    10. ',W' → logprob: -16.63172721862793

Token 671: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00044175516813993454
    2. ')' → logprob: -8.250441551208496
    3. '))
' → logprob: -8.625441551208496
    4. ')
' → logprob: -14.750441551208496
    5. '       ' → logprob: -15.750441551208496
    6. ')))' → logprob: -16.000442504882812
    7. ' ))' → logprob: -16.625442504882812
    8. '))

' → logprob: -17.000442504882812
    9. '));' → logprob: -17.250442504882812
    10. '   ' → logprob: -17.750442504882812

Token 672: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00190472393296659
    2. '
' → logprob: -6.876904487609863
    3. '<|end|>' → logprob: -7.876904487609863
    4. '   ' → logprob: -8.126904487609863
    5. 'return' → logprob: -8.876904487609863
    6. ' return' → logprob: -10.626904487609863
    7. '           ' → logprob: -11.501904487609863
    8. '```' → logprob: -11.626904487609863
    9. '<|end|>' → logprob: -12.751904487609863
    10. 'def' → logprob: -13.001904487609863

Token 673: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.027350012212991714
    2. ' return' → logprob: -3.7773499488830566
    3. '       ' → logprob: -5.527349948883057
    4. 'rc' → logprob: -9.777350425720215
    5. 'collection' → logprob: -10.652350425720215
    6. '   ' → logprob: -11.277350425720215
    7. '
' → logprob: -11.902350425720215
    8. 'self' → logprob: -12.027350425720215
    9. '```' → logprob: -12.277350425720215
    10. ' collection' → logprob: -13.402350425720215

Token 674: ' Rect' (ID: 22765)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.017600294202566147
    2. 'Rect' → logprob: -4.142600059509277
    3. ' rectangles' → logprob: -6.517600059509277
    4. ' rect' → logprob: -9.892600059509277
    5. '(rect' → logprob: -11.267600059509277
    6. ' Rect' → logprob: -11.767600059509277
    7. 'rectangle' → logprob: -11.892600059509277
    8. 'Rectangle' → logprob: -12.767600059509277
    9. '_rect' → logprob: -13.017600059509277
    10. '	rect' → logprob: -13.892600059509277

Token 675: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.002490641549229622
    2. 'angle' → logprob: -6.002490520477295
    3. 'ang' → logprob: -11.252490997314453
    4. 'an' → logprob: -14.127490997314453
    5. 'rect' → logprob: -15.252490997314453
    6. 's' → logprob: -15.877490997314453
    7. 'a' → logprob: -16.127490997314453
    8. 'ANGLES' → logprob: -16.127490997314453
    9. 'anges' → logprob: -16.252490997314453
    10. 'angled' → logprob: -16.377490997314453

Token 676: 'Collection' (ID: 4160)
  Prédit: 'Collection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Collection' → logprob: -0.012289591133594513
    2. 's' → logprob: -4.512289524078369
    3. 'angles' → logprob: -7.137289524078369
    4. 'collection' → logprob: -9.137290000915527
    5. 'ects' → logprob: -9.512290000915527
    6. 'rect' → logprob: -9.637290000915527
    7. 'ections' → logprob: -9.887290000915527
    8. 'Rect' → logprob: -10.387290000915527
    9. 'ectors' → logprob: -11.012290000915527
    10. '_collection' → logprob: -11.137290000915527

Token 677: '(rect' (ID: 68123)
  Prédit: '(rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rect' → logprob: -1.5048530030981055e-06
    2. 'rect' → logprob: -13.500001907348633
    3. '(Rect' → logprob: -17.875001907348633
    4. ' rectangles' → logprob: -18.750001907348633
    5. ' (' → logprob: -19.250001907348633
    6. '(' → logprob: -19.625001907348633
    7. '	rect' → logprob: -20.250001907348633
    8. '(rec' → logprob: -20.625001907348633
    9. '_rect' → logprob: -20.750001907348633
    10. '(ret' → logprob: -21.000001907348633

Token 678: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -1.4140441635390744e-05
    2. 's' → logprob: -11.750014305114746
    3. 'anges' → logprob: -12.500014305114746
    4. 'les' → logprob: -14.000014305114746
    5. 'ang' → logprob: -14.250014305114746
    6. 'an' → logprob: -15.375014305114746
    7. 'cles' → logprob: -15.750014305114746
    8. 'ables' → logprob: -16.37501335144043
    9. 'ANGLES' → logprob: -16.37501335144043
    10. 'angle' → logprob: -16.50001335144043

Token 679: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014561474381480366
    2. '<|end|>' → logprob: -8.87514591217041
    3. ')
' → logprob: -12.62514591217041
    4. '<|end|>' → logprob: -14.37514591217041
    5. ' )' → logprob: -14.75014591217041
    6. ')return' → logprob: -15.12514591217041
    7. '
' → logprob: -15.25014591217041
    8. '   ' → logprob: -15.25014591217041
    9. ')

' → logprob: -15.75014591217041
    10. '())' → logprob: -15.75014591217041

Token 680: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001907693105749786
    2. '<|end|>' → logprob: -6.626907825469971
    3. 'def' → logprob: -7.501907825469971
    4. '<|end|>' → logprob: -11.751907348632812
    5. ' def' → logprob: -11.876907348632812
    6. '```' → logprob: -12.001907348632812
    7. '    
' → logprob: -12.501907348632812
    8. '
' → logprob: -12.626907348632812
    9. '	def' → logprob: -15.001907348632812
    10. ' ' → logprob: -15.626907348632812

Token 681: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00019269285257905722
    2. '   ' → logprob: -9.250192642211914
    3. ' def' → logprob: -9.250192642211914
    4. '	def' → logprob: -14.750192642211914
    5. '
' → logprob: -16.875192642211914
    6. ' ' → logprob: -17.125192642211914
    7. '    
' → logprob: -17.750192642211914
    8. '  ' → logprob: -17.875192642211914
    9. '```' → logprob: -18.500192642211914
    10. 'validator' → logprob: -18.875192642211914

Token 682: ' validate' (ID: 14986)
  Prédit: 'validate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'validate' → logprob: -0.06326901912689209
    2. ' validate' → logprob: -2.8132691383361816
    3. 'main' → logprob: -7.688269138336182
    4. 'def' → logprob: -7.813269138336182
    5. 'check' → logprob: -8.188268661499023
    6. ' main' → logprob: -9.813268661499023
    7. 'is' → logprob: -10.063268661499023
    8. ' check' → logprob: -10.438268661499023
    9. 'run' → logprob: -10.813268661499023
    10. 'solve' → logprob: -12.563268661499023

Token 683: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010472200810909271
    2. '(' → logprob: -6.876047134399414
    3. ' (' → logprob: -12.251047134399414
    4. 'self' → logprob: -12.251047134399414
    5. '()' → logprob: -13.126047134399414
    6. '_c' → logprob: -13.876047134399414
    7. '_rect' → logprob: -15.001047134399414
    8. '_self' → logprob: -15.251047134399414
    9. '_collection' → logprob: -15.376047134399414
    10. '   ' → logprob: -15.751047134399414

Token 684: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002385399304330349
    2. '):
' → logprob: -6.75238561630249
    3. 'self' → logprob: -7.12738561630249
    4. ',' → logprob: -8.627385139465332
    5. ')' → logprob: -9.252385139465332
    6. '_' → logprob: -9.877385139465332
    7. '   ' → logprob: -10.502385139465332
    8. ' ):' → logprob: -10.627385139465332
    9. '(self' → logprob: -11.752385139465332
    10. '():' → logprob: -12.127385139465332

Token 685: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018265502294525504
    2. 'self' → logprob: -6.501826763153076
    3. '
' → logprob: -8.626826286315918
    4. '(self' → logprob: -9.126826286315918
    5. '   ' → logprob: -11.001826286315918
    6. ' self' → logprob: -12.126826286315918
    7. '        
' → logprob: -12.501826286315918
    8. '```' → logprob: -13.376826286315918
    9. 'rect' → logprob: -13.376826286315918
    10. '(' → logprob: -13.626826286315918

Token 686: ' rc' (ID: 23309)
  Prédit: 'collection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collection' → logprob: -0.4127587378025055
    2. 'rect' → logprob: -1.912758708000183
    3. '       ' → logprob: -2.4127588272094727
    4. 'rc' (adapté à ' rc') → logprob: -2.7877588272094727
    5. ' collection' → logprob: -3.4127588272094727
    6. ' rc' → logprob: -6.037758827209473
    7. '   ' → logprob: -6.412758827209473
    8. ' rect' → logprob: -7.162758827209473
    9. ' rectangles' → logprob: -7.662758827209473
    10. 'return' → logprob: -8.162758827209473

Token 687: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08402424305677414
    2. '=' → logprob: -2.58402419090271
    3. 'ol' → logprob: -5.334024429321289
    4. 'an' → logprob: -8.709024429321289
    5. 'oll' → logprob: -9.834024429321289
    6. '   ' → logprob: -10.584024429321289
    7. '.ol' → logprob: -11.084024429321289
    8. 'olle' → logprob: -11.709024429321289
    9. '.can' → logprob: -11.959024429321289
    10. '.' → logprob: -12.584024429321289

Token 688: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04859713837504387
    2. ' self' → logprob: -3.0485970973968506
    3. '       ' → logprob: -11.54859733581543
    4. '	self' → logprob: -17.04859733581543
    5. '(self' → logprob: -17.92359733581543
    6. '=self' → logprob: -18.29859733581543
    7. '   ' → logprob: -18.67359733581543
    8. 'Self' → logprob: -18.79859733581543
    9. '        ' → logprob: -19.29859733581543
    10. '           ' → logprob: -19.42359733581543

Token 689: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.0003372502396814525
    2. 'read' → logprob: -8.000337600708008
    3. '.' → logprob: -13.500337600708008
    4. ' .' → logprob: -14.875337600708008
    5. ' read' → logprob: -18.250337600708008
    6. '	read' → logprob: -19.250337600708008
    7. '_.' → logprob: -19.500337600708008
    8. '
' → logprob: -19.500337600708008
    9. '().' → logprob: -20.375337600708008
    10. '.readline' → logprob: -20.500337600708008

Token 690: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.9361264946837764e-07
    2. '_collection' → logprob: -16.375
    3. 'input' → logprob: -17.875
    4. 'Input' → logprob: -18.0
    5. '_output' → logprob: -18.625
    6. '_inputs' → logprob: -18.875
    7. '_Input' → logprob: -19.5
    8. '_INPUT' → logprob: -20.625
    9. '_col' → logprob: -21.25
    10. '_object' → logprob: -21.25

Token 691: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.1438913494348526
    2. '()' → logprob: -2.0188913345336914
    3. '       ' → logprob: -7.143891334533691
    4. '()
' → logprob: -8.393891334533691
    5. 'return' → logprob: -8.643891334533691
    6. '()

' → logprob: -11.518891334533691
    7. ' return' → logprob: -12.893891334533691
    8. '()\' → logprob: -13.018891334533691
    9. 'print' → logprob: -13.518891334533691
    10. '().' → logprob: -13.643891334533691

Token 692: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12749578058719635
    2. '
' → logprob: -2.127495765686035
    3. 'return' → logprob: -7.752495765686035
    4. ' return' → logprob: -9.377495765686035
    5. '<|end|>' → logprob: -11.002495765686035
    6. '   ' → logprob: -11.502495765686035
    7. '
' → logprob: -12.002495765686035
    8. '	return' → logprob: -12.127495765686035
    9. '{return' → logprob: -12.627495765686035
    10. '        
' → logprob: -13.002495765686035

Token 693: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.25791043043136597
    2. 'print' → logprob: -1.5079104900360107
    3. '       ' → logprob: -5.757910251617432
    4. 'if' (adapté à ' if') → logprob: -6.007910251617432
    5. ' return' → logprob: -8.50791072845459
    6. '
' → logprob: -9.00791072845459
    7. ' print' → logprob: -11.50791072845459
    8. 'result' → logprob: -11.88291072845459
    9. ' if' → logprob: -12.50791072845459
    10. '   ' → logprob: -14.00791072845459

Token 694: ' rc' (ID: 23309)
  Prédit: ' rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rc' → logprob: -0.10020947456359863
    2. 'rc' → logprob: -2.3502094745635986
    3. '(rc' → logprob: -12.97520923614502
    4. '	rc' → logprob: -14.97520923614502
    5. '_rc' → logprob: -16.475210189819336
    6. ' not' → logprob: -16.850210189819336
    7. '.rc' → logprob: -19.225210189819336
    8. 'not' → logprob: -19.225210189819336
    9. 'Rc' → logprob: -20.975210189819336
    10. ' ' → logprob: -21.350210189819336

Token 695: '.can' (ID: 46002)
  Prédit: '.can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.can' → logprob: -6.511406809295295e-06
    2. '.' → logprob: -12.000006675720215
    3. '.Can' → logprob: -15.250006675720215
    4. '	can' → logprob: -17.2500057220459
    5. '.has' → logprob: -17.6250057220459
    6. '_can' → logprob: -18.2500057220459
    7. ' .' → logprob: -18.3750057220459
    8. '>.' → logprob: -18.6250057220459
    9. ' can' → logprob: -18.8750057220459
    10. 'can' → logprob: -19.3750057220459

Token 696: '_form' (ID: 18664)
  Prédit: '_form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_form' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -13.750001907348633
    3. 'form' → logprob: -14.750001907348633
    4. ' _' → logprob: -15.250001907348633
    5. '_forms' → logprob: -16.000001907348633
    6. '_FORM' → logprob: -17.125001907348633
    7. '_Form' → logprob: -17.250001907348633
    8. '<form' → logprob: -17.375001907348633
    9. ' form' → logprob: -17.500001907348633
    10. '_format' → logprob: -17.625001907348633

Token 697: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.875
    3. 'cub' → logprob: -16.25
    4. 'c' → logprob: -17.625
    5. ' _' → logprob: -19.0
    6. '_a' → logprob: -19.0
    7. 'a' → logprob: -19.625
    8. '_form' → logprob: -20.375
    9. '```' → logprob: -20.5
    10. '_
' → logprob: -20.875

Token 698: 'ub' (ID: 431)
  Prédit: 'ub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ub' → logprob: -0.00012976066500414163
    2. '```' → logprob: -10.750129699707031
    3. '
' → logprob: -11.500129699707031
    4. 'ob' → logprob: -11.500129699707031
    5. 'уб' → logprob: -11.500129699707031
    6. 'cub' → logprob: -11.500129699707031
    7. 'b' → logprob: -11.625129699707031
    8. '   ' → logprob: -11.750129699707031
    9. '{' → logprob: -11.937629699707031
    10. '{"' → logprob: -12.562629699707031

Token 699: 'oid' (ID: 11234)
  Prédit: 'oid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oid' → logprob: -0.00036834771162830293
    2. 'o' → logprob: -8.500368118286133
    3. 'od' → logprob: -9.250368118286133
    4. '
' → logprob: -11.000368118286133
    5. 'ub' → logprob: -11.000368118286133
    6. 'loid' → logprob: -11.750368118286133
    7. 'roid' → logprob: -12.000368118286133
    8. 'oids' → logprob: -12.875368118286133
    9. '_' → logprob: -13.125368118286133
    10. '   ' → logprob: -13.125368118286133

Token 700: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0020842391531914473
    2. '()' → logprob: -6.752084255218506
    3. '():
' → logprob: -7.002084255218506
    4. ' ():' → logprob: -13.252083778381348
    5. '():
' → logprob: -13.752083778381348
    6. '()==' → logprob: -14.752083778381348
    7. '()>' → logprob: -15.627083778381348
    8. '(' → logprob: -15.877083778381348
    9. '():

' → logprob: -16.877084732055664
    10. '().' → logprob: -17.127084732055664

Token 701: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004271004581823945
    2. 'print' → logprob: -8.37542724609375
    3. '
' → logprob: -8.75042724609375
    4. 'return' → logprob: -11.12542724609375
    5. ' print' → logprob: -11.50042724609375
    6. ' return' → logprob: -11.87542724609375
    7. '```' → logprob: -13.37542724609375
    8. '            
' → logprob: -13.50042724609375
    9. '       ' → logprob: -13.87542724609375
    10. ':
' → logprob: -14.12542724609375

Token 702: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.39527252316474915
    2. '           ' → logprob: -1.1452724933624268
    3. 'return' → logprob: -5.520272731781006
    4. ' print' → logprob: -5.645272731781006
    5. '
' → logprob: -7.395272731781006
    6. ' return' → logprob: -9.145272254943848
    7. '               ' → logprob: -10.020272254943848
    8. '       ' → logprob: -10.395272254943848
    9. '
' → logprob: -11.270272254943848
    10. '   ' → logprob: -11.895272254943848

Token 703: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0012157135643064976
    2. '(' → logprob: -7.251215934753418
    3. '(True' → logprob: -8.126215934753418
    4. '('' → logprob: -9.251215934753418
    5. 'YES' → logprob: -9.751215934753418
    6. '"' → logprob: -10.376215934753418
    7. 'Yes' → logprob: -11.251215934753418
    8. '(C' → logprob: -13.251215934753418
    9. ' ("' → logprob: -13.251215934753418
    10. '(F' → logprob: -13.751215934753418

Token 704: 'yes' (ID: 6763)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.5063164234161377
    2. 'P' → logprob: -1.0063164234161377
    3. 'Yes' → logprob: -3.7563164234161377
    4. '"' → logprob: -5.381316184997559
    5. 'TA' → logprob: -6.381316184997559
    6. 'Possible' → logprob: -7.006316184997559
    7. 'yes' → logprob: -8.756316184997559
    8. 'Box' → logprob: -9.131316184997559
    9. 'Boxes' → logprob: -9.131316184997559
    10. '"P' → logprob: -9.131316184997559

Token 705: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.25193843245506287
    2. '")' → logprob: -1.5019384622573853
    3. '")
' → logprob: -12.376938819885254
    4. 'else' → logprob: -13.126938819885254
    5. ')' → logprob: -13.876938819885254
    6. 'e' → logprob: -14.626938819885254
    7. ')
' → logprob: -14.626938819885254
    8. '");' → logprob: -14.751938819885254
    9. '")

' → logprob: -15.251938819885254
    10. '"' → logprob: -15.751938819885254

Token 706: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006203425000421703
    2. 'else' → logprob: -7.500620365142822
    3. ' else' → logprob: -9.625619888305664
    4. '	' → logprob: -14.500619888305664
    5. '   ' → logprob: -15.500619888305664
    6. '           ' → logprob: -16.125619888305664
    7. '<|end|>' → logprob: -16.375619888305664
    8. '	else' → logprob: -16.625619888305664
    9. '```' → logprob: -16.625619888305664
    10. '      ' → logprob: -16.750619888305664

Token 707: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4128713011741638
    2. '       ' → logprob: -1.1628713607788086
    3. ' else' → logprob: -3.6628713607788086
    4. '	else' → logprob: -12.912871360778809
    5. '   ' → logprob: -13.412871360778809
    6. 'elif' → logprob: -14.037871360778809
    7. '	' → logprob: -14.412871360778809
    8. '```' → logprob: -15.412871360778809
    9. '
' → logprob: -15.537871360778809
    10. 'elser' → logprob: -15.662871360778809

Token 708: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20360921323299408
    2. ':
' → logprob: -1.7036092281341553
    3. '           ' → logprob: -6.203608989715576
    4. '       ' → logprob: -9.078609466552734
    5. '   ' → logprob: -11.203609466552734
    6. ':

' → logprob: -12.328609466552734
    7. ' :' → logprob: -12.328609466552734
    8. ' :
' → logprob: -12.328609466552734
    9. '          ' → logprob: -12.453609466552734
    10. '{' → logprob: -12.578609466552734

Token 709: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14384004473686218
    2. ' print' → logprob: -2.6438400745391846
    3. 'print' → logprob: -2.7688400745391846
    4. '```' → logprob: -10.268839836120605
    5. '"' → logprob: -10.643839836120605
    6. '(print' → logprob: -10.893839836120605
    7. '       ' → logprob: -11.268839836120605
    8. '          ' → logprob: -11.393839836120605
    9. '		' → logprob: -11.643839836120605
    10. '               ' → logprob: -12.268839836120605

Token 710: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.2519664466381073
    2. 'print' (adapté à ' print') → logprob: -1.5019664764404297
    3. '           ' → logprob: -10.25196647644043
    4. '	print' → logprob: -13.62696647644043
    5. '       ' → logprob: -14.87696647644043
    6. '.print' → logprob: -15.87696647644043
    7. '            ' → logprob: -16.50196647644043
    8. '        ' → logprob: -16.62696647644043
    9. '(print' → logprob: -16.62696647644043
    10. '               ' → logprob: -16.75196647644043

Token 711: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0003373694489710033
    2. '(' → logprob: -8.000337600708008
    3. '("("' → logprob: -13.750337600708008
    4. '("(' → logprob: -15.500337600708008
    5. '('' → logprob: -15.875337600708008
    6. '(""' → logprob: -15.875337600708008
    7. '("""' → logprob: -15.875337600708008
    8. '"' → logprob: -16.625337600708008
    9. '(
' → logprob: -16.625337600708008
    10. '("")' → logprob: -17.625337600708008

Token 712: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: 0.0
    2. '"' → logprob: -17.75
    3. ' no' → logprob: -17.75
    4. '	no' → logprob: -22.5
    5. 'n' → logprob: -23.125
    6. 'not' → logprob: -23.375
    7. '")' → logprob: -23.5
    8. 'No' → logprob: -23.5
    9. 'nof' → logprob: -25.25
    10. 'NO' → logprob: -25.5

Token 713: '")


' (ID: 57903)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.38742226362228394
    2. ')' → logprob: -1.1374223232269287
    3. ')")' → logprob: -7.51242208480835
    4. '")
' → logprob: -13.137422561645508
    5. '       ' → logprob: -14.387422561645508
    6. ')
' → logprob: -14.387422561645508
    7. '}")' → logprob: -14.637422561645508
    8. '')' → logprob: -15.137422561645508
    9. ')"' → logprob: -15.137422561645508
    10. '()' → logprob: -15.387422561645508

Token 714: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008811804465949535
    2. 'validator' → logprob: -5.508811950683594
    3. '#' → logprob: -5.758811950683594
    4. 'c' → logprob: -7.383811950683594
    5. '```' → logprob: -7.508811950683594
    6. 'cv' → logprob: -8.758811950683594
    7. ' if' → logprob: -9.883811950683594
    8. 'def' → logprob: -10.133811950683594
    9. 'i' → logprob: -10.883811950683594
    10. 'rect' → logprob: -11.258811950683594

Token 715: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4741036295890808
    2. ' __' → logprob: -0.9741036295890808
    3. 'name' → logprob: -10.974103927612305
    4. '_' → logprob: -12.224103927612305
    5. '_name' → logprob: -12.599103927612305
    6. 'Name' → logprob: -14.724103927612305
    7. '___' → logprob: -15.224103927612305
    8. ' ' → logprob: -15.474103927612305
    9. ' ' → logprob: -15.849103927612305
    10. '/__' → logprob: -15.974103927612305

Token 716: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002153949812054634
    2. ' __' → logprob: -6.5021538734436035
    3. ' ==' → logprob: -8.002154350280762
    4. '==' → logprob: -9.377154350280762
    5. '_' → logprob: -9.877154350280762
    6. 'if' → logprob: -9.877154350280762
    7. '[' → logprob: -10.627154350280762
    8. '__.__' → logprob: -10.627154350280762
    9. 'name' → logprob: -10.752154350280762
    10. '.__' → logprob: -11.252154350280762

Token 717: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.6240566083070007e-06
    2. '__.__' → logprob: -13.750001907348633
    3. '____' → logprob: -16.250001907348633
    4. '__
' → logprob: -16.500001907348633
    5. 'name' → logprob: -16.625001907348633
    6. '__.' → logprob: -16.750001907348633
    7. '___' → logprob: -16.750001907348633
    8. '_' → logprob: -18.000001907348633
    9. '__('' → logprob: -18.625001907348633
    10. ' __' → logprob: -19.000001907348633

Token 718: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0029796024318784475
    2. '==' → logprob: -6.002979755401611
    3. ' ==' → logprob: -8.127979278564453
    4. '=="' → logprob: -8.502979278564453
    5. '__.__' → logprob: -12.502979278564453
    6. '___' → logprob: -14.877979278564453
    7. '=='' → logprob: -15.002979278564453
    8. '=' → logprob: -15.252979278564453
    9. '____' → logprob: -15.377979278564453
    10. '_' → logprob: -15.502979278564453

Token 719: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0005588700296357274
    2. ''' → logprob: -7.500558853149414
    3. ' "__' → logprob: -12.250558853149414
    4. '__' → logprob: -14.000558853149414
    5. '"class' → logprob: -16.875558853149414
    6. '"name' → logprob: -17.000558853149414
    7. '"user' → logprob: -17.375558853149414
    8. ''"' → logprob: -17.750558853149414
    9. ' '__' → logprob: -18.125558853149414
    10. '("__' → logprob: -18.125558853149414

Token 720: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -6.988221684878226e-06
    2. '__' → logprob: -12.125006675720215
    3. 'name' → logprob: -13.500006675720215
    4. '_main' → logprob: -16.25000762939453
    5. ' main' → logprob: -17.87500762939453
    6. 'ma' → logprob: -18.12500762939453
    7. 'built' → logprob: -19.25000762939453
    8. 'm' → logprob: -19.25000762939453
    9. '"' → logprob: -19.62500762939453
    10. 'Main' → logprob: -20.62500762939453

Token 721: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.06202784180641174
    2. '__' → logprob: -2.812027931213379
    3. '__':
' → logprob: -10.187027931213379
    4. '__:' → logprob: -10.812027931213379
    5. '_' → logprob: -13.437027931213379
    6. '__.' → logprob: -14.937027931213379
    7. '__["' → logprob: -14.937027931213379
    8. '__.__' → logprob: -16.062026977539062
    9. '__",' → logprob: -16.937026977539062
    10. '__
' → logprob: -17.312026977539062

Token 722: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002400624332949519
    2. 'cv' → logprob: -6.6274003982543945
    3. ' cv' → logprob: -8.127400398254395
    4. ' validator' → logprob: -8.752400398254395
    5. 'validator' → logprob: -8.752400398254395
    6. 'Cub' → logprob: -9.127400398254395
    7. ' Cub' → logprob: -9.377400398254395
    8. 'import' → logprob: -9.752400398254395
    9. 'CV' → logprob: -10.127400398254395
    10. '	cv' → logprob: -10.252400398254395

Token 723: ' validator' (ID: 44590)
  Prédit: 'validator'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'validator' (adapté à ' validator') → logprob: -0.2942742705345154
    2. 'Cub' → logprob: -1.4192743301391602
    3. 'cv' → logprob: -4.66927433013916
    4. 'import' → logprob: -6.29427433013916
    5. ' validator' → logprob: -6.91927433013916
    6. ' Cub' → logprob: -7.91927433013916
    7. 'cub' → logprob: -9.16927433013916
    8. 'CV' → logprob: -9.29427433013916
    9. '   ' → logprob: -9.41927433013916
    10. 'Cv' → logprob: -9.66927433013916

Token 724: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2482360452413559
    2. '=' → logprob: -1.998236060142517
    3. '.' → logprob: -2.9982359409332275
    4. '.validate' → logprob: -3.4982359409332275
    5. '()' → logprob: -6.248236179351807
    6. '().' → logprob: -6.998236179351807
    7. '_validator' → logprob: -8.123235702514648
    8. '   ' → logprob: -8.248235702514648
    9. '(' → logprob: -9.123235702514648
    10. ' ' → logprob: -9.248235702514648

Token 725: ' Cub' (ID: 42140)
  Prédit: 'Cub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cub' → logprob: -0.01815052703022957
    2. ' Cub' → logprob: -4.018150329589844
    3. 'Cubit' → logprob: -14.393150329589844
    4. 'C' → logprob: -17.268150329589844
    5. 'Cube' → logprob: -17.393150329589844
    6. '	C' → logprob: -18.143150329589844
    7. 'Cu' → logprob: -19.268150329589844
    8. '_C' → logprob: -19.393150329589844
    9. 'cub' → logprob: -19.768150329589844
    10. 'Kub' → logprob: -19.768150329589844

Token 726: 'oid' (ID: 11234)
  Prédit: 'oid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oid' → logprob: -3.292907877039397e-06
    2. 'o' → logprob: -12.75000286102295
    3. 'ob' → logprob: -16.000003814697266
    4. 'od' → logprob: -17.000003814697266
    5. 'oids' → logprob: -17.125003814697266
    6. '
' → logprob: -17.625003814697266
    7. '```' → logprob: -17.750003814697266
    8. 'id' → logprob: -17.875003814697266
    9. '**' → logprob: -18.250003814697266
    10. '\' → logprob: -18.375003814697266

Token 727: 'Validator' (ID: 18992)
  Prédit: 'Validator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Validator' → logprob: -1.9361264946837764e-07
    2. '_validator' → logprob: -16.625
    3. ' Validator' → logprob: -16.75
    4. 'validator' → logprob: -16.875
    5. 'Valid' → logprob: -18.125
    6. '-validator' → logprob: -18.25
    7. 'Val' → logprob: -18.5
    8. 'Validate' → logprob: -19.5
    9. '\Validator' → logprob: -20.625
    10. '.Validator' → logprob: -21.25

Token 728: '()
' (ID: 1234)
  Prédit: '.validate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.validate' → logprob: -0.17386122047901154
    2. '.' → logprob: -1.9238612651824951
    3. '.
' → logprob: -5.423861026763916
    4. '
' → logprob: -5.423861026763916
    5. '.validator' → logprob: -5.798861026763916
    6. '   ' → logprob: -7.048861026763916
    7. 'validator' → logprob: -8.423861503601074
    8. 'validate' → logprob: -8.798861503601074
    9. '    
' → logprob: -9.298861503601074
    10. '.valid' → logprob: -9.423861503601074

Token 729: '   ' (ID: 271)
  Prédit: 'validator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'validator' → logprob: -0.001773830852471292
    2. '   ' → logprob: -6.501773834228516
    3. ' validator' → logprob: -8.251773834228516
    4. 'validate' → logprob: -12.376773834228516
    5. '_validator' → logprob: -12.876773834228516
    6. '
' → logprob: -13.126773834228516
    7. 'validation' → logprob: -14.501773834228516
    8. '-validator' → logprob: -14.626773834228516
    9. '    
' → logprob: -15.376773834228516
    10. '.validator' → logprob: -15.376773834228516

Token 730: ' validator' (ID: 44590)
  Prédit: 'validator'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'validator' (adapté à ' validator') → logprob: -4.320199877838604e-07
    2. ' validator' → logprob: -15.125
    3. 'validate' → logprob: -16.0
    4. '   ' → logprob: -20.125
    5. '
' → logprob: -20.375
    6. '_validator' → logprob: -20.875
    7. 'validation' → logprob: -21.0
    8. '.validator' → logprob: -21.0
    9. '    
' → logprob: -22.0
    10. 'valid' → logprob: -22.125

Token 731: '.validate' (ID: 31577)
  Prédit: '.validate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.validate' → logprob: -0.005234356038272381
    2. '.' → logprob: -5.255234241485596
    3. 'validate' → logprob: -15.130234718322754
    4. ' .' → logprob: -16.005233764648438
    5. '.Validate' → logprob: -16.505233764648438
    6. '.valid' → logprob: -16.630233764648438
    7. '	validate' → logprob: -17.380233764648438
    8. '.
' → logprob: -17.755233764648438
    9. '.verify' → logprob: -18.255233764648438
    10. '.evaluate' → logprob: -19.130233764648438

Token 732: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 730
Tokens correctement prédits (1ère position, stricte): 306
Tokens correctement prédits (1ère position, avec adaptation): 335
Tokens correctement prédits (top 10): 617
Précision stricte (1ère position): 41.92%
Précision adaptée (1ère position): 45.89%
Précision (top 10): 84.52%
================================================================================
