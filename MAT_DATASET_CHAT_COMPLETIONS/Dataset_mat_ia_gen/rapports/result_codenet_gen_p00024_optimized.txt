================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:16:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

for line in sys.stdin:
    v = line.strip()
    if not v:
        continue
    v = float(v)
    t = v / 9.8
    y = 4.9 * t * t
    floor = math.ceil((y + 5) / 5)
    print(floor)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00023321842309087515
    2. 'os' → logprob: -8.37523365020752
    3. ' math' → logprob: -13.87523365020752
    4. ' re' → logprob: -14.37523365020752
    5. '"os' → logprob: -14.87523365020752
    6. ' json' → logprob: -15.12523365020752
    7. '_os' → logprob: -15.87523365020752
    8. '	os' → logprob: -16.375232696533203
    9. ' ' → logprob: -16.750232696533203
    10. ' ' → logprob: -17.000232696533203

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1524793654680252
    2. 'import' → logprob: -3.152479410171509
    3. '\' → logprob: -3.402479410171509
    4. '\n' → logprob: -3.777479410171509
    5. '
' → logprob: -4.02747917175293
    6. '

' → logprob: -5.02747917175293
    7. '```' → logprob: -5.27747917175293
    8. '<|end|>' → logprob: -5.40247917175293
    9. ',' → logprob: -5.90247917175293
    10. '<|end|>' → logprob: -6.90247917175293

Token 6: 'for' (ID: 1938)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5420268177986145
    2. '\n' → logprob: -1.9170267581939697
    3. '\' → logprob: -2.2920267581939697
    4. 'import' → logprob: -2.4170267581939697
    5. '```' → logprob: -3.4170267581939697
    6. '
' → logprob: -4.417026996612549
    7. ',' → logprob: -4.542026996612549
    8. 'def' → logprob: -4.917026996612549
    9. '<|end|>' → logprob: -5.667026996612549
    10. '#' → logprob: -5.917026996612549

Token 7: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0010866360971704125
    2. '  ' → logprob: -7.001086711883545
    3. ' i' → logprob: -8.751086235046387
    4. ' space' → logprob: -12.876086235046387
    5. ' ```' → logprob: -13.001086235046387
    6. ' ‌' → logprob: -13.626086235046387
    7. '_' → logprob: -13.751086235046387
    8. ' ﻿' → logprob: -13.876086235046387
    9. '```' → logprob: -14.001086235046387
    10. ' ' → logprob: -14.001086235046387

Token 8: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3200453519821167
    2. 'in' → logprob: -1.3200453519821167
    3. '[' → logprob: -5.820045471191406
    4. '(' → logprob: -7.195045471191406
    5. ':' → logprob: -7.320045471191406
    6. ' ' → logprob: -7.820045471191406
    7. 's' → logprob: -8.195045471191406
    8. '<|end|>' → logprob: -8.320045471191406
    9. '[]' → logprob: -8.445045471191406
    10. '.' → logprob: -8.570045471191406

Token 9: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.006931454874575138
    2. 'sys' → logprob: -5.006931304931641
    3. '=sys' → logprob: -9.13193130493164
    4. ' ' → logprob: -10.63193130493164
    5. '(sys' → logprob: -10.88193130493164
    6. '	sys' → logprob: -10.88193130493164
    7. ' iter' → logprob: -11.25693130493164
    8. 's' → logprob: -11.75693130493164
    9. ' in' → logprob: -12.25693130493164
    10. ' open' → logprob: -12.38193130493164

Token 10: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0014658194268122315
    2. '.stdin' → logprob: -7.126465797424316
    3. '.readline' → logprob: -7.876465797424316
    4. '.argv' → logprob: -9.126465797424316
    5. ' .' → logprob: -9.376465797424316
    6. '.stdout' → logprob: -9.876465797424316
    7. '[' → logprob: -12.376465797424316
    8. '.next' → logprob: -12.626465797424316
    9. '.import' → logprob: -12.751465797424316
    10. '.stderr' → logprob: -12.751465797424316

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008006958523765206
    2. '[:]' → logprob: -8.750801086425781
    3. ':
' → logprob: -8.875801086425781
    4. ' :' → logprob: -9.125801086425781
    5. '.' → logprob: -9.375801086425781
    6. '.readline' → logprob: -9.500801086425781
    7. '':' → logprob: -9.625801086425781
    8. '":' → logprob: -10.625801086425781
    9. ':**' → logprob: -10.750801086425781
    10. '':'' → logprob: -11.000801086425781

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001761272142175585
    2. '    
' → logprob: -8.875176429748535
    3. '   ' → logprob: -11.625176429748535
    4. '.strip' → logprob: -11.875176429748535
    5. ':' → logprob: -12.375176429748535
    6. ' if' → logprob: -12.625176429748535
    7. '.rstrip' → logprob: -13.250176429748535
    8. '```' → logprob: -13.375176429748535
    9. '\t' → logprob: -13.750176429748535
    10. 'if' → logprob: -13.750176429748535

Token 13: ' v' (ID: 323)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012370610609650612
    2. ' line' → logprob: -4.512370586395264
    3. '    ' → logprob: -7.762370586395264
    4. ' if' → logprob: -8.262371063232422
    5. 'line' → logprob: -8.637371063232422
    6. '    
' → logprob: -9.262371063232422
    7. ' print' → logprob: -9.387371063232422
    8. 'print' → logprob: -9.512371063232422
    9. ' stripped' → logprob: -10.137371063232422
    10. '```' → logprob: -10.387371063232422

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2953011989593506
    2. '=' → logprob: -2.0453011989593506
    3. 'al' → logprob: -2.4203011989593506
    4. 'alue' → logprob: -3.5453011989593506
    5. '   ' → logprob: -5.17030143737793
    6. ' ' → logprob: -6.79530143737793
    7. 'el' → logprob: -7.92030143737793
    8. '  ' → logprob: -8.54530143737793
    9. 'ariable' → logprob: -8.79530143737793
    10. '    ' → logprob: -8.92030143737793

Token 15: ' line' (ID: 2543)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.6549225449562073
    2. 'float' → logprob: -1.6549224853515625
    3. ' line' → logprob: -1.6549224853515625
    4. 'line' → logprob: -2.9049224853515625
    5. ' int' → logprob: -3.7799224853515625
    6. 'int' → logprob: -3.9049224853515625
    7. ' ' → logprob: -8.154922485351562
    8. ' math' → logprob: -9.279922485351562
    9. ' v' → logprob: -9.779922485351562
    10. ' list' → logprob: -10.279922485351562

Token 16: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.03895043581724167
    2. '.' → logprob: -3.7889504432678223
    3. '.rstrip' → logprob: -4.288950443267822
    4. '.split' → logprob: -6.288950443267822
    5. '.readline' → logprob: -13.163949966430664
    6. '.replace' → logprob: -13.913949966430664
    7. '.chomp' → logprob: -14.288949966430664
    8. '.trim' → logprob: -14.288949966430664
    9. '[:-' → logprob: -14.538949966430664
    10. ' .' → logprob: -14.538949966430664

Token 17: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2870595455169678
    2. '(' → logprob: -1.4120595455169678
    3. '('' → logprob: -5.787059783935547
    4. '().' → logprob: -6.037059783935547
    5. '(
' → logprob: -9.787059783935547
    6. '("("' → logprob: -10.162059783935547
    7. '('.')' → logprob: -10.287059783935547
    8. '())' → logprob: -10.412059783935547
    9. ')' → logprob: -10.787059783935547
    10. '("' → logprob: -10.912059783935547

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6812149882316589
    2. ' if' → logprob: -1.9312150478363037
    3. 'if' → logprob: -1.9312150478363037
    4. ' =' → logprob: -2.1812150478363037
    5. '.split' → logprob: -3.5562150478363037
    6. '=' → logprob: -4.431214809417725
    7. '
' → logprob: -4.431214809417725
    8. '    
' → logprob: -4.556214809417725
    9. '.' → logprob: -5.556214809417725
    10. '    ' → logprob: -5.556214809417725

Token 19: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6679173707962036
    2. 'if' (adapté à ' if') → logprob: -0.7929173707962036
    3. '   ' → logprob: -4.542917251586914
    4. ' ' → logprob: -4.917917251586914
    5. ' =' → logprob: -4.917917251586914
    6. '=' → logprob: -5.667917251586914
    7. 'v' → logprob: -6.667917251586914
    8. '    ' → logprob: -6.667917251586914
    9. '```' → logprob: -7.417917251586914
    10. '    
' → logprob: -7.792917251586914

Token 20: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3748924732208252
    2. ' v' → logprob: -1.6248924732208252
    3. ' ' → logprob: -2.374892473220825
    4. 'v' → logprob: -4.374892234802246
    5. 'not' → logprob: -4.624892234802246
    6. ' len' → logprob: -8.999892234802246
    7. '  ' → logprob: -9.749892234802246
    8. ''' → logprob: -10.249892234802246
    9. '"' → logprob: -10.624892234802246
    10. 'len' → logprob: -11.249892234802246

Token 21: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.12707048654556274
    2. 'v' → logprob: -2.127070426940918
    3. ' ' → logprob: -8.877070426940918
    4. '	v' → logprob: -13.127070426940918
    5. ' ' → logprob: -14.752070426940918
    6. '  ' → logprob: -15.752070426940918
    7. '```' → logprob: -16.252071380615234
    8. '_v' → logprob: -17.127071380615234
    9. ' isinstance' → logprob: -17.752071380615234
    10. '   ' → logprob: -18.127071380615234

Token 22: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006397380493581295
    2. ' or' → logprob: -5.631397247314453
    3. ' :' → logprob: -6.131397247314453
    4. ':
' → logprob: -8.381397247314453
    5. '):' → logprob: -8.756397247314453
    6. '.' → logprob: -9.381397247314453
    7. ' .' → logprob: -10.506397247314453
    8. '.is' → logprob: -10.631397247314453
    9. '.strip' → logprob: -11.006397247314453
    10. ' ==' → logprob: -11.256397247314453

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036366537678986788
    2. '   ' → logprob: -6.003636837005615
    3. ' continue' → logprob: -7.003636837005615
    4. 'continue' → logprob: -9.253636360168457
    5. '    ' → logprob: -9.503636360168457
    6. ':' → logprob: -10.628636360168457
    7. ' break' → logprob: -11.128636360168457
    8. ' ' → logprob: -11.878636360168457
    9. '	continue' → logprob: -12.378636360168457
    10. ':
' → logprob: -12.753636360168457

Token 24: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.01489756628870964
    2. 'break' → logprob: -4.264897346496582
    3. '   ' → logprob: -7.639897346496582
    4. '       ' → logprob: -9.014897346496582
    5. ' continue' → logprob: -9.264897346496582
    6. '    ' → logprob: -11.139897346496582
    7. '	break' → logprob: -11.514897346496582
    8. 'continue' (adapté à ' continue') → logprob: -12.264897346496582
    9. '_break' → logprob: -13.139897346496582
    10. '```' → logprob: -13.139897346496582

Token 25: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0073115224950015545
    2. '    
' → logprob: -5.0073113441467285
    3. '```' → logprob: -8.507311820983887
    4. '
' → logprob: -8.882311820983887
    5. 'v' → logprob: -9.757311820983887
    6. '        
' → logprob: -10.382311820983887
    7. ',' → logprob: -10.632311820983887
    8. '    
    
' → logprob: -10.757311820983887
    9. ':' → logprob: -11.007311820983887
    10. '   
' → logprob: -11.132311820983887

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004816599655896425
    2. '    
' → logprob: -5.37981653213501
    3. '
' → logprob: -9.254817008972168
    4. '        
' → logprob: -11.129817008972168
    5. '   
' → logprob: -11.254817008972168
    6. '  
' → logprob: -11.379817008972168
    7. '<|end|>' → logprob: -11.629817008972168
    8. 'v' → logprob: -11.754817008972168
    9. '```' → logprob: -12.004817008972168
    10. ',' → logprob: -12.254817008972168

Token 27: ' v' (ID: 323)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5433273315429688
    2. ' =' → logprob: -1.2933273315429688
    3. '=' → logprob: -2.7933273315429688
    4. 'v' (adapté à ' v') → logprob: -3.5433273315429688
    5. ':' → logprob: -4.418327331542969
    6. 'value' → logprob: -4.918327331542969
    7. ' v' → logprob: -5.043327331542969
    8. ' val' → logprob: -5.668327331542969
    9. '    
' → logprob: -5.668327331542969
    10. ' value' → logprob: -5.918327331542969

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06211445480585098
    2. '=' → logprob: -2.8121144771575928
    3. '=int' → logprob: -9.187114715576172
    4. '=float' → logprob: -10.687114715576172
    5. ' ' → logprob: -12.687114715576172
    6. ',' → logprob: -12.937114715576172
    7. ')' → logprob: -13.062114715576172
    8. 's' → logprob: -13.312114715576172
    9. '   ' → logprob: -13.562114715576172
    10. ' =
' → logprob: -13.562114715576172

Token 29: ' float' (ID: 4428)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.109375238418579
    2. 'float' → logprob: -1.359375238418579
    3. ' float' → logprob: -1.359375238418579
    4. ' int' → logprob: -1.859375238418579
    5. '   ' → logprob: -7.734375
    6. ' math' → logprob: -8.609375
    7. 'math' → logprob: -8.859375
    8. ' ' → logprob: -11.484375
    9. '  ' → logprob: -11.734375
    10. '[int' → logprob: -12.359375

Token 30: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.12693220376968384
    2. '(' → logprob: -2.126932144165039
    3. ' (' → logprob: -13.626932144165039
    4. '(
' → logprob: -14.126932144165039
    5. '(x' → logprob: -14.751932144165039
    6. '('' → logprob: -15.001932144165039
    7. '(value' → logprob: -15.126932144165039
    8. '(s' → logprob: -15.626932144165039
    9. '(val' → logprob: -15.876932144165039
    10. '(`' → logprob: -15.876932144165039

Token 31: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.372294698550832e-06
    2. ' )' → logprob: -12.750009536743164
    3. ')
' → logprob: -12.875009536743164
    4. '))' → logprob: -13.250009536743164
    5. ')**' → logprob: -14.500009536743164
    6. ')`' → logprob: -14.750009536743164
    7. '   ' → logprob: -15.000009536743164
    8. '+' → logprob: -16.500009536743164
    9. '*' → logprob: -16.500009536743164
    10. '')' → logprob: -16.625009536743164

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05572148784995079
    2. '    
' → logprob: -3.6807215213775635
    3. '
' → logprob: -4.305721282958984
    4. ' if' → logprob: -5.680721282958984
    5. '   
' → logprob: -5.680721282958984
    6. '  
' → logprob: -6.305721282958984
    7. ' 
' → logprob: -7.055721282958984
    8. '     
' → logprob: -7.180721282958984
    9. '```' → logprob: -7.430721282958984
    10. '+' → logprob: -7.555721282958984

Token 33: ' t' (ID: 260)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.354430913925171
    2. '   ' → logprob: -1.354430913925171
    3. ' result' → logprob: -1.729430913925171
    4. ' if' → logprob: -2.979430913925171
    5. 's' → logprob: -3.229430913925171
    6. ' d' → logprob: -3.604430913925171
    7. ' r' → logprob: -3.729430913925171
    8. 'd' → logprob: -3.854430913925171
    9. 'result' → logprob: -4.22943115234375
    10. ' velocity' → logprob: -4.35443115234375

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9605124592781067
    2. 'ime' → logprob: -0.9605124592781067
    3. 'imes' → logprob: -2.835512399673462
    4. ' *=' → logprob: -3.335512399673462
    5. 'otal' → logprob: -3.585512399673462
    6. ' +=' → logprob: -3.710512399673462
    7. '=' → logprob: -3.960512399673462
    8. 'emp' → logprob: -4.335512638092041
    9. '_' → logprob: -4.585512638092041
    10. 'heta' → logprob: -5.335512638092041

Token 35: ' v' (ID: 323)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.6862786412239075
    2. ' math' → logprob: -1.3112785816192627
    3. 'v' → logprob: -1.8112785816192627
    4. ' v' → logprob: -2.9362785816192627
    5. '(math' → logprob: -5.061278820037842
    6. '(v' → logprob: -6.936278820037842
    7. ' (' → logprob: -7.186278820037842
    8. '2' → logprob: -7.811278820037842
    9. ' ' → logprob: -7.811278820037842
    10. 'int' → logprob: -7.811278820037842

Token 36: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.8446128964424133
    2. '/' → logprob: -0.9696128964424133
    3. '**' → logprob: -2.5946128368377686
    4. '*' → logprob: -2.5946128368377686
    5. ' *' → logprob: -3.4696128368377686
    6. ' **' → logprob: -5.094613075256348
    7. '2' → logprob: -6.844613075256348
    8. '/math' → logprob: -6.844613075256348
    9. '+' → logprob: -7.094613075256348
    10. ' ' → logprob: -8.094613075256348

Token 37: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.2708292305469513
    2. 'math' → logprob: -1.520829200744629
    3. '2' → logprob: -4.270829200744629
    4. '3' → logprob: -6.395829200744629
    5. '(' → logprob: -7.270829200744629
    6. '10' → logprob: -7.645829200744629
    7. '100' → logprob: -8.520829200744629
    8. 'g' → logprob: -8.645829200744629
    9. '0' → logprob: -8.770829200744629
    10. '1' → logprob: -8.770829200744629

Token 38: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5909099578857422
    2. 'math' → logprob: -0.8409099578857422
    3. '2' → logprob: -4.465909957885742
    4. '3' → logprob: -6.590909957885742
    5. '(' → logprob: -7.715909957885742
    6. '10' → logprob: -7.965909957885742
    7. 'g' → logprob: -8.840909957885742
    8. '100' → logprob: -8.965909957885742
    9. '(math' → logprob: -8.965909957885742
    10. '1' → logprob: -9.090909957885742

Token 39: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004811134655028582
    2. '8' → logprob: -5.3798112869262695
    3. '\.' → logprob: -9.12981128692627
    4. '81' → logprob: -10.87981128692627
    5. '7' → logprob: -11.37981128692627
    6. '```' → logprob: -11.37981128692627
    7. '.

' → logprob: -12.31731128692627
    8. '.\' → logprob: -12.37981128692627
    9. '806' → logprob: -12.94231128692627
    10. '82' → logprob: -13.44231128692627

Token 40: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.02518182061612606
    2. '81' → logprob: -3.775181770324707
    3. '806' → logprob: -6.275181770324707
    4. '807' → logprob: -10.025181770324707
    5. '82' → logprob: -12.650181770324707
    6. 'eight' → logprob: -13.775181770324707
    7. '78' → logprob: -13.900181770324707
    8. '８' → logprob: -14.400181770324707
    9. '80' → logprob: -14.650181770324707
    10. '```' → logprob: -15.025181770324707

Token 41: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01664513535797596
    2. '**' → logprob: -5.5166449546813965
    3. '\n' → logprob: -5.7666449546813965
    4. '    
' → logprob: -5.7666449546813965
    5. '  
' → logprob: -6.1416449546813965
    6. ' 
' → logprob: -6.7666449546813965
    7. '   ' → logprob: -6.8916449546813965
    8. '

' → logprob: -7.8916449546813965
    9. '<|end|>' → logprob: -7.8916449546813965
    10. '
' → logprob: -8.391645431518555

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22182415425777435
    2. '
' → logprob: -2.2218241691589355
    3. '    
' → logprob: -3.2218241691589355
    4. ' 
' → logprob: -4.5968241691589355
    5. '  
' → logprob: -4.8468241691589355
    6. 'print' → logprob: -5.2218241691589355
    7. '**' → logprob: -5.3468241691589355
    8. ' ' → logprob: -5.4718241691589355
    9. ')' → logprob: -5.5968241691589355
    10. '*' → logprob: -5.9718241691589355

Token 43: ' y' (ID: 342)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31175297498703003
    2. '   ' → logprob: -2.061753034591675
    3. ' print' → logprob: -2.561753034591675
    4. 's' → logprob: -4.311752796173096
    5. 'x' → logprob: -4.811752796173096
    6. 't' → logprob: -4.936752796173096
    7. '2' → logprob: -5.186752796173096
    8. 'd' → logprob: -5.311752796173096
    9. ' x' → logprob: -5.811752796173096
    10. ' s' → logprob: -5.936752796173096

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10172445327043533
    2. '=' → logprob: -3.35172438621521
    3. '0' → logprob: -3.60172438621521
    4. '_' → logprob: -3.72672438621521
    5. '_max' → logprob: -4.976724624633789
    6. 'max' → logprob: -5.851724624633789
    7. '_end' → logprob: -9.601724624633789
    8. '_space' → logprob: -9.851724624633789
    9. ' _' → logprob: -10.226724624633789
    10. ' ' → logprob: -10.226724624633789

Token 45: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11544280499219894
    2. ' ' → logprob: -2.6154427528381348
    3. 'v' → logprob: -3.7404427528381348
    4. ' v' → logprob: -5.115442752838135
    5. '9' → logprob: -6.740442752838135
    6. '(v' → logprob: -6.740442752838135
    7. '(' → logprob: -7.115442752838135
    8. '.' → logprob: -7.115442752838135
    9. '1' → logprob: -7.365442752838135
    10. ' (' → logprob: -8.365443229675293

Token 46: '4' (ID: 19)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.15850286185741425
    2. '0' → logprob: -2.0335028171539307
    3. '9' → logprob: -4.90850305557251
    4. 't' → logprob: -6.40850305557251
    5. ' v' → logprob: -6.53350305557251
    6. '4' → logprob: -6.78350305557251
    7. '(' → logprob: -7.15850305557251
    8. '(v' → logprob: -7.53350305557251
    9. '5' → logprob: -7.65850305557251
    10. ' ' → logprob: -8.158502578735352

Token 47: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04583363980054855
    2. '*t' → logprob: -4.295833587646484
    3. 't' → logprob: -4.670833587646484
    4. '5' → logprob: -4.795833587646484
    5. '9' → logprob: -4.920833587646484
    6. '*' → logprob: -5.920833587646484
    7. '0' → logprob: -6.420833587646484
    8. '*v' → logprob: -6.920833587646484
    9. 'v' → logprob: -7.795833587646484
    10. ' *' → logprob: -9.420833587646484

Token 48: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.800739018013701e-05
    2. '```' → logprob: -10.6250581741333
    3. '905' → logprob: -11.5000581741333
    4. '\(' → logprob: -12.3750581741333
    5. '９' → logprob: -12.7500581741333
    6. '٩' → logprob: -12.7500581741333
    7. '(' → logprob: -13.0000581741333
    8. '**' → logprob: -13.3750581741333
    9. '-' → logprob: -14.1250581741333
    10. '904' → logprob: -14.1250581741333

Token 49: ' *' (ID: 425)
  Prédit: '*t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*t' → logprob: -0.5532323122024536
    2. '*' → logprob: -0.9282323122024536
    3. ' *' → logprob: -3.553232192993164
    4. 't' → logprob: -7.053232192993164
    5. '*v' → logprob: -9.428232192993164
    6. '*(' → logprob: -10.053232192993164
    7. '*time' → logprob: -11.553232192993164
    8. ' t' → logprob: -11.678232192993164
    9. '   ' → logprob: -11.803232192993164
    10. ' ' → logprob: -12.553232192993164

Token 50: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.031844232231378555
    2. '*t' → logprob: -3.656844139099121
    3. '*' → logprob: -5.781844139099121
    4. ' t' → logprob: -6.156844139099121
    5. ' *' → logprob: -8.656844139099121
    6. '   ' → logprob: -9.156844139099121
    7. ' ' → logprob: -10.781844139099121
    8. '*(' → logprob: -12.156844139099121
    9. '(t' → logprob: -12.156844139099121
    10. '  ' → logprob: -12.656844139099121

Token 51: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.013235170394182205
    2. '*' → logprob: -4.763235092163086
    3. '*t' → logprob: -5.513235092163086
    4. ' **' → logprob: -7.888235092163086
    5. ' *' → logprob: -8.638235092163086
    6. '2' → logprob: -12.013235092163086
    7. 't' → logprob: -12.138235092163086
    8. '*v' → logprob: -12.513235092163086
    9. '***' → logprob: -12.763235092163086
    10. '*y' → logprob: -13.388235092163086

Token 52: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0005815077456645668
    2. ' t' → logprob: -7.625581741333008
    3. '2' → logprob: -9.500581741333008
    4. '**' → logprob: -11.250581741333008
    5. 'v' → logprob: -13.625581741333008
    6. ' ' → logprob: -13.750581741333008
    7. '*t' → logprob: -14.250581741333008
    8. '*' → logprob: -15.125581741333008
    9. '<|end|>' → logprob: -15.125581741333008
    10. '	t' → logprob: -15.125581741333008

Token 53: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020514086354523897
    2. 'print' → logprob: -6.25205135345459
    3. ' print' → logprob: -10.00205135345459
    4. '
' → logprob: -10.87705135345459
    5. '    
' → logprob: -11.37705135345459
    6. ',' → logprob: -11.37705135345459
    7. ')' → logprob: -11.87705135345459
    8. '<|end|>' → logprob: -12.37705135345459
    9. '	print' → logprob: -12.62705135345459
    10. '```' → logprob: -12.75205135345459

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007834223215468228
    2. 'print' → logprob: -7.375783443450928
    3. '
' → logprob: -9.75078296661377
    4. '    
' → logprob: -10.00078296661377
    5. '<|end|>' → logprob: -10.25078296661377
    6. ' print' → logprob: -11.87578296661377
    7. '```' → logprob: -13.25078296661377
    8. ')' → logprob: -13.75078296661377
    9. '  
' → logprob: -13.87578296661377
    10. '  ' → logprob: -13.87578296661377

Token 55: ' floor' (ID: 8350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03824322298169136
    2. 'print' → logprob: -3.288243293762207
    3. ' print' → logprob: -9.413243293762207
    4. 'if' → logprob: -10.038243293762207
    5. '    
' → logprob: -10.663243293762207
    6. '.' → logprob: -10.913243293762207
    7. ',' → logprob: -11.788243293762207
    8. '.print' → logprob: -12.288243293762207
    9. '
' → logprob: -12.538243293762207
    10. '	print' → logprob: -13.163243293762207

Token 56: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7593560218811035
    2. '_y' → logprob: -0.8843560218811035
    3. '(' → logprob: -3.1343560218811035
    4. '(y' → logprob: -3.1343560218811035
    5. '_val' → logprob: -4.7593560218811035
    6. 's' → logprob: -5.3843560218811035
    7. '_v' → logprob: -5.3843560218811035
    8. 'ing' → logprob: -6.1343560218811035
    9. '_value' → logprob: -6.2593560218811035
    10. 'ed' → logprob: -6.5093560218811035

Token 57: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.43170836567878723
    2. 'int' → logprob: -1.6817083358764648
    3. ' math' → logprob: -1.9317083358764648
    4. ' int' → logprob: -3.931708335876465
    5. ' y' → logprob: -11.681708335876465
    6. '   ' → logprob: -11.806708335876465
    7. 'y' → logprob: -12.056708335876465
    8. '(math' → logprob: -12.681708335876465
    9. ' ' → logprob: -13.056708335876465
    10. '	int' → logprob: -13.556708335876465

Token 58: '.ceil' (ID: 60295)
  Prédit: '.floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.floor' → logprob: -0.00029923528200015426
    2. '.' → logprob: -8.250299453735352
    3. '.ceil' → logprob: -10.625299453735352
    4. '.f' → logprob: -12.000299453735352
    5. '.sqrt' → logprob: -12.125299453735352
    6. '.fre' → logprob: -14.000299453735352
    7. '.isnan' → logprob: -14.750299453735352
    8. ' floor' → logprob: -15.625299453735352
    9. ' .' → logprob: -16.12529945373535
    10. '.com' → logprob: -16.75029945373535

Token 59: '((' (ID: 2054)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.00035906085395254195
    2. '(' → logprob: -8.000359535217285
    3. '(v' → logprob: -11.125359535217285
    4. '(s' → logprob: -12.625359535217285
    5. ' (' → logprob: -13.250359535217285
    6. 'y' → logprob: -13.625359535217285
    7. '(
' → logprob: -14.125359535217285
    8. '(x' → logprob: -14.250359535217285
    9. '(t' → logprob: -15.375359535217285
    10. ')' → logprob: -15.500359535217285

Token 60: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.35277166962623596
    2. ' y' → logprob: -1.2277716398239136
    3. '   ' → logprob: -5.977771759033203
    4. 'v' → logprob: -8.102771759033203
    5. '-y' → logprob: -8.102771759033203
    6. ' -' → logprob: -8.227771759033203
    7. '-' → logprob: -8.852771759033203
    8. '    ' → logprob: -8.852771759033203
    9. ' v' → logprob: -9.227771759033203
    10. ' ' → logprob: -9.227771759033203

Token 61: ' +' (ID: 659)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.9302604794502258
    2. ')' → logprob: -1.305260419845581
    3. ' ))' → logprob: -1.930260419845581
    4. ' -' → logprob: -2.055260419845581
    5. ' )' → logprob: -3.680260419845581
    6. '-' → logprob: -3.680260419845581
    7. ' /' → logprob: -5.30526065826416
    8. ' ' → logprob: -6.55526065826416
    9. ' +' → logprob: -6.68026065826416
    10. '+' → logprob: -7.18026065826416

Token 62: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15255919098854065
    2. '0' → logprob: -2.277559280395508
    3. '1' → logprob: -3.777559280395508
    4. ' .' → logprob: -5.652559280395508
    5. ')' → logprob: -6.027559280395508
    6. ' -' → logprob: -6.152559280395508
    7. '.' → logprob: -6.152559280395508
    8. ' v' → logprob: -6.277559280395508
    9. 'v' → logprob: -7.277559280395508
    10. '-' → logprob: -7.777559280395508

Token 63: '5' (ID: 20)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6552916169166565
    2. ' ' → logprob: -1.1552915573120117
    3. '1' → logprob: -1.9052915573120117
    4. 'v' → logprob: -5.280291557312012
    5. '2' → logprob: -6.030291557312012
    6. ' v' → logprob: -6.030291557312012
    7. '-' → logprob: -6.780291557312012
    8. '.' → logprob: -6.905291557312012
    9. '5' → logprob: -7.280291557312012
    10. '10' → logprob: -7.280291557312012

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05362677946686745
    2. '.' → logprob: -3.678626775741577
    3. '0' → logprob: -4.428627014160156
    4. ')/' → logprob: -4.928627014160156
    5. ' )' → logprob: -5.678627014160156
    6. '))' → logprob: -6.303627014160156
    7. '5' → logprob: -7.678627014160156
    8. '6' → logprob: -7.678627014160156
    9. ' -' → logprob: -8.303627014160156
    10. '7' → logprob: -8.553627014160156

Token 65: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09550207108259201
    2. ' /' → logprob: -3.0955021381378174
    3. '/' → logprob: -3.5955021381378174
    4. ' )' → logprob: -4.595501899719238
    5. '))' → logprob: -5.345501899719238
    6. ' -' → logprob: -6.595501899719238
    7. '-' → logprob: -7.220501899719238
    8. '   ' → logprob: -7.345501899719238
    9. '0' → logprob: -8.970501899719238
    10. ')-' → logprob: -9.470501899719238

Token 66: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.20716628432273865
    2. ' ' → logprob: -1.707166314125061
    3. '6' → logprob: -5.7071661949157715
    4. '5' → logprob: -7.4571661949157715
    5. '3' → logprob: -8.08216667175293
    6. '11' → logprob: -8.08216667175293
    7. '1' → logprob: -8.45716667175293
    8. '7' → logprob: -8.83216667175293
    9. '12' → logprob: -8.83216667175293
    10. '2' → logprob: -8.95716667175293

Token 67: '5' (ID: 20)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.010119867511093616
    2. '5' → logprob: -5.635119915008545
    3. '1' → logprob: -6.510119915008545
    4. '6' → logprob: -6.760119915008545
    5. '3' → logprob: -7.135119915008545
    6. '2' → logprob: -7.510119915008545
    7. '15' → logprob: -7.760119915008545
    8. '11' → logprob: -8.010119438171387
    9. '20' → logprob: -8.010119438171387
    10. ' ' → logprob: -8.385119438171387

Token 68: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024025145103223622
    2. ')*' → logprob: -9.375240325927734
    3. ')
' → logprob: -9.500240325927734
    4. ' )' → logprob: -10.125240325927734
    5. ')-' → logprob: -11.000240325927734
    6. '0' → logprob: -12.125240325927734
    7. '))' → logprob: -12.625240325927734
    8. '-' → logprob: -13.000240325927734
    9. ')
' → logprob: -13.125240325927734
    10. '*' → logprob: -13.125240325927734

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14330141246318817
    2. 'print' → logprob: -2.518301486968994
    3. ')' → logprob: -4.018301486968994
    4. '<|end|>' → logprob: -4.268301486968994
    5. ' print' → logprob: -5.268301486968994
    6. ' if' → logprob: -5.643301486968994
    7. '
' → logprob: -5.643301486968994
    8. ':' → logprob: -6.893301486968994
    9. 'if' → logprob: -6.893301486968994
    10. '    
' → logprob: -7.018301486968994

Token 70: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49458613991737366
    2. 'print' (adapté à ' print') → logprob: -1.1195861101150513
    3. 'if' → logprob: -3.119586229324341
    4. ' if' → logprob: -4.369585990905762
    5. ' print' → logprob: -5.994585990905762
    6. '*' → logprob: -6.244585990905762
    7. ')' → logprob: -7.619585990905762
    8. '#' → logprob: -7.619585990905762
    9. ' *' → logprob: -7.744585990905762
    10. 'for' → logprob: -8.994585990905762

Token 71: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.08184516429901123
    2. '(' → logprob: -2.706845283508301
    3. 'floor' → logprob: -4.706845283508301
    4. '("' → logprob: -6.706845283508301
    5. '('' → logprob: -6.956845283508301
    6. '(int' → logprob: -8.5818452835083
    7. '((' → logprob: -9.0818452835083
    8. '("*' → logprob: -9.9568452835083
    9. ' floor' → logprob: -10.0818452835083
    10. '(max' → logprob: -10.4568452835083

Token 72: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.00028660334646701813
    2. 'oor' → logprob: -8.250287055969238
    3. 'lo' → logprob: -11.000287055969238
    4. 'loo' → logprob: -12.000287055969238
    5. ')' → logprob: -14.625287055969238
    6. 'l' → logprob: -14.750287055969238
    7. 'floor' → logprob: -15.125287055969238
    8. 'loat' → logprob: -15.250287055969238
    9. 'or' → logprob: -15.750287055969238
    10. 'loot' → logprob: -16.125286102294922

Token 73: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1994775377388578e-05
    2. '))' → logprob: -12.000012397766113
    3. ' )' → logprob: -12.375012397766113
    4. ')
' → logprob: -14.625012397766113
    5. ')`' → logprob: -15.000012397766113
    6. '`)' → logprob: -15.875012397766113
    7. '*' → logprob: -16.000011444091797
    8. ')))' → logprob: -16.500011444091797
    9. ')}' → logprob: -16.875011444091797
    10. '   ' → logprob: -16.875011444091797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 71
Tokens correctement prédits (1ère position, stricte): 32
Tokens correctement prédits (1ère position, avec adaptation): 32
Tokens correctement prédits (top 10): 61
Précision stricte (1ère position): 45.07%
Précision adaptée (1ère position): 45.07%
Précision (top 10): 85.92%
================================================================================
