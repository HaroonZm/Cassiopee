================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input=sys.stdin.readline

from collections import deque

class MaxFlow:
    def __init__(self,n):
        self.n=n
        self.g=[[] for _ in range(n)]
    def add_edge(self,a,b,c):
        self.g[a].append([b,c,len(self.g[b])])
        self.g[b].append([a,0,len(self.g[a])-1])
    def bfs(self,s,t,level):
        q=deque([s])
        level[s]=0
        while q:
            v=q.popleft()
            lv=level[v]+1
            for i,(to,cap,rev) in enumerate(self.g[v]):
                if cap and level[to]<0:
                    level[to]=lv
                    q.append(to)
        return level[t]>=0
    def dfs(self,v,t,f,level,it):
        if v==t:
            return f
        while it[v]<len(self.g[v]):
            to,cap,rev=self.g[v][it[v]]
            if cap>0 and level[v]<level[to]:
                d=self.dfs(to,t,min(f,cap),level,it)
                if d>0:
                    self.g[v][it[v]][1]-=d
                    self.g[to][rev][1]+=d
                    return d
            it[v]+=1
        return 0

def max_flow(mf,s,t):
    flow=0
    INF=10**9
    level=[-1]*mf.n
    while True:
        for i in range(mf.n):
            level[i]=-1
        if not mf.bfs(s,t,level):
            return flow
        it=[0]*mf.n
        while True:
            f=mf.dfs(s,t,INF,level,it)
            if f==0:
                break
            flow+=f

N,E,Q=map(int,input().split())
edges=set()
adj=[set() for _ in range(N)]
for _ in range(E):
    f,t_=map(int,input().split())
    f-=1
    t_-=1
    edges.add((f,t_))
    edges.add((t_,f_:=t_))
    adj[f].add(t_)
    adj[t_].add(f)
queries=[]
for _ in range(Q):
    M,A,B=map(int,input().split())
    A-=1
    B-=1
    queries.append((M,A,B))

for M,A,B in queries:
    if M==1:
        adj[A].add(B)
        adj[B].add(A)
    else:
        adj[A].discard(B)
        adj[B].discard(A)

    mf=MaxFlow(N)
    for u in range(N):
        for v in adj[u]:
            # capacity 1 for each edge
            mf.add_edge(u,v,1)
    print(max_flow(mf,0,N-1))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183791756629944
    2. '.' → logprob: -2.3368380069732666
    3. '<|end|>' → logprob: -2.8368380069732666
    4. '\' → logprob: -4.7118377685546875
    5. 'newline' → logprob: -5.0868377685546875
    6. 'import' → logprob: -5.0868377685546875
    7. '
' → logprob: -5.7118377685546875
    8. '' → logprob: -5.8368377685546875
    9. '<|end|>' → logprob: -5.8368377685546875
    10. '\r' → logprob: -6.3368377685546875

Token 4: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006302023306488991
    2. '.' → logprob: -5.1313018798828125
    3. ' (' → logprob: -9.381301879882812
    4. '(
' → logprob: -9.381301879882812
    5. ')' → logprob: -9.756301879882812
    6. '()' → logprob: -10.006301879882812
    7. '[' → logprob: -10.881301879882812
    8. '('' → logprob: -11.131301879882812
    9. ' ' → logprob: -11.631301879882812
    10. '=' → logprob: -11.756301879882812

Token 5: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0007326744962483644
    2. '[' → logprob: -7.500732898712158
    3. ' .' → logprob: -9.625732421875
    4. '.readline' → logprob: -10.125732421875
    5. ''.' → logprob: -11.625732421875
    6. '<|end|>' → logprob: -11.625732421875
    7. '.
' → logprob: -11.875732421875
    8. '.setdefault' → logprob: -12.375732421875
    9. '.[' → logprob: -12.375732421875
    10. '.get' → logprob: -12.500732421875

Token 6: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.11377590894699097
    2. '.' → logprob: -2.2387759685516357
    3. '.read' → logprob: -6.988775730133057
    4. ' readline' → logprob: -11.488776206970215
    5. '.readlines' → logprob: -11.988776206970215
    6. 'read' → logprob: -12.113776206970215
    7. '```' → logprob: -12.988776206970215
    8. '.Read' → logprob: -12.988776206970215
    9. '.​' → logprob: -13.738776206970215
    10. '.

' → logprob: -14.488776206970215

Token 7: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2264707088470459
    2. '(' → logprob: -1.601470708847046
    3. '().' → logprob: -7.976470947265625
    4. '(
' → logprob: -8.101470947265625
    5. '()
' → logprob: -8.476470947265625
    6. ')' → logprob: -9.976470947265625
    7. ' ()' → logprob: -10.351470947265625
    8. '()\' → logprob: -10.726470947265625
    9. '(

' → logprob: -11.101470947265625
    10. '\(' → logprob: -11.476470947265625

Token 8: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47553059458732605
    2. '()' → logprob: -0.9755306243896484
    3. '().' → logprob: -7.100530624389648
    4. '()
' → logprob: -8.475530624389648
    5. '(
' → logprob: -8.475530624389648
    6. ')' → logprob: -10.600530624389648
    7. '#' → logprob: -10.725530624389648
    8. '()

' → logprob: -10.850530624389648
    9. 'a' → logprob: -11.100530624389648
    10. '()\' → logprob: -11.100530624389648

Token 9: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.29825958609580994
    2. ' math' → logprob: -1.7982596158981323
    3. ' os' → logprob: -2.6732594966888428
    4. ' io' → logprob: -4.798259735107422
    5. ' sys' → logprob: -5.298259735107422
    6. ' typing' → logprob: -5.423259735107422
    7. ' datetime' → logprob: -6.423259735107422
    8. ' itertools' → logprob: -6.548259735107422
    9. 'collections' → logprob: -7.298259735107422
    10. ' ' → logprob: -7.298259735107422

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.4346740245819092
    2. 'import' → logprob: -1.0596740245819092
    3. '.' → logprob: -5.934674263000488
    4. '.Counter' → logprob: -5.934674263000488
    5. ' defaultdict' → logprob: -8.184674263000488
    6. '<|end|>' → logprob: -9.059674263000488
    7. ' ' → logprob: -9.559674263000488
    8. '```' → logprob: -9.684674263000488
    9. '.import' → logprob: -10.184674263000488
    10. '	import' → logprob: -10.184674263000488

Token 11: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.031443942338228226
    2. ' deque' → logprob: -3.5314438343048096
    3. ' defaultdict' → logprob: -6.531444072723389
    4. 'default' → logprob: -8.40644359588623
    5. 'de' → logprob: -11.78144359588623
    6. 'collections' → logprob: -13.53144359588623
    7. 'Counter' → logprob: -13.90644359588623
    8. 'named' → logprob: -14.53144359588623
    9. 'import' → logprob: -14.53144359588623
    10. 'abc' → logprob: -14.78144359588623

Token 12: '

' (ID: 279)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7298730611801147
    2. 'q' → logprob: -1.9798730611801147
    3. 'deque' → logprob: -2.3548731803894043
    4. 'def' → logprob: -2.4798731803894043
    5. 'queue' → logprob: -3.1048731803894043
    6. '
' → logprob: -3.1048731803894043
    7. 'de' → logprob: -3.7298731803894043
    8. '\' → logprob: -3.9798731803894043
    9. 'n' → logprob: -4.104873180389404
    10. 'dq' → logprob: -4.729873180389404

Token 13: 'class' (ID: 1444)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5878396034240723
    2. 'queue' → logprob: -1.4628396034240723
    3. 'q' → logprob: -1.7128396034240723
    4. 'd' → logprob: -4.337839603424072
    5. 'deque' → logprob: -5.087839603424072
    6. 'dq' → logprob: -5.087839603424072
    7. 'def' → logprob: -5.462839603424072
    8. 'stack' → logprob: -7.462839603424072
    9. 'b' → logprob: -7.712839603424072
    10. 'graph' → logprob: -8.087839126586914

Token 14: ' Max' (ID: 10093)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004660572856664658
    2. ' My' → logprob: -6.504660606384277
    3. ' De' → logprob: -6.629660606384277
    4. ' Queue' → logprob: -7.879660606384277
    5. ' Solution' → logprob: -8.004660606384277
    6. ' Node' → logprob: -8.254660606384277
    7. ' BFS' → logprob: -8.504660606384277
    8. ' B' → logprob: -8.629660606384277
    9. ' deque' → logprob: -9.504660606384277
    10. ' ' → logprob: -9.504660606384277

Token 15: 'Flow' (ID: 18017)
  Prédit: 'Queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Queue' → logprob: -0.4368440508842468
    2. 'Deque' → logprob: -1.0618441104888916
    3. 'Stack' → logprob: -5.5618438720703125
    4. '(queue' → logprob: -5.8118438720703125
    5. 'Heap' → logprob: -7.5618438720703125
    6. ' queue' → logprob: -8.811843872070312
    7. 'deque' → logprob: -8.936843872070312
    8. ' deque' → logprob: -9.436843872070312
    9. ' Queue' → logprob: -9.811843872070312
    10. 'queue' → logprob: -9.936843872070312

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009510025265626609
    2. '():' → logprob: -7.625950813293457
    3. ' :' → logprob: -8.625950813293457
    4. '(' → logprob: -9.250950813293457
    5. ':
' → logprob: -10.625950813293457
    6. '):' → logprob: -10.625950813293457
    7. '>:' → logprob: -10.625950813293457
    8. '(:' → logprob: -11.000950813293457
    9. 'Solver' → logprob: -11.125950813293457
    10. '<|end|>' → logprob: -11.500950813293457

Token 17: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.016859769821167
    2. ' ' → logprob: -1.141859769821167
    3. ' (' → logprob: -2.016859769821167
    4. '   ' → logprob: -2.391859769821167
    5. '(object' → logprob: -3.016859769821167
    6. ':' → logprob: -4.516860008239746
    7. '<|end|>' → logprob: -5.016860008239746
    8. ' 
' → logprob: -5.141860008239746
    9. ' def' → logprob: -5.391860008239746
    10. ' (
' → logprob: -5.641860008239746

Token 18: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0014055903302505612
    2. 'def' (adapté à ' def') → logprob: -6.876405715942383
    3. '   ' → logprob: -8.001405715942383
    4. ' 
' → logprob: -11.626405715942383
    5. ' ' → logprob: -11.751405715942383
    6. '	def' → logprob: -12.501405715942383
    7. '```' → logprob: -12.751405715942383
    8. '    ' → logprob: -12.876405715942383
    9. ' class' → logprob: -13.001405715942383
    10. ' de' → logprob: -13.126405715942383

Token 19: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0007983117830008268
    2. ' init' → logprob: -7.250798225402832
    3. '__' → logprob: -10.000798225402832
    4. ' _' → logprob: -10.500798225402832
    5. ' ' → logprob: -11.875798225402832
    6. 'init' → logprob: -13.250798225402832
    7. '_init' → logprob: -13.250798225402832
    8. ' def' → logprob: -13.250798225402832
    9. ' ' → logprob: -13.750798225402832
    10. ' ___' → logprob: -14.625798225402832

Token 20: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'ini' → logprob: -18.5
    3. ' init' → logprob: -19.0
    4. 'int' → logprob: -19.625
    5. '_init' → logprob: -19.625
    6. 'inite' → logprob: -21.125
    7. '	init' → logprob: -21.625
    8. 'in' → logprob: -21.875
    9. 'innit' → logprob: -22.75
    10. '(init' → logprob: -22.875

Token 21: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.011059137992560863
    2. '(self' → logprob: -5.136059284210205
    3. '(' → logprob: -5.761059284210205
    4. '__' → logprob: -6.886059284210205
    5. '<>(' → logprob: -8.636058807373047
    6. ' (' → logprob: -8.886058807373047
    7. '<|end|>' → logprob: -9.011058807373047
    8. '__(
' → logprob: -9.136058807373047
    9. '__((' → logprob: -9.511058807373047
    10. '__(*' → logprob: -9.886058807373047

Token 22: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020532844064291567
    2. ' self' → logprob: -8.500205039978027
    3. '(self' → logprob: -14.000205039978027
    4. '       ' → logprob: -15.375205039978027
    5. ')' → logprob: -15.625205039978027
    6. '   ' → logprob: -15.750205039978027
    7. '	self' → logprob: -15.875205039978027
    8. ',self' → logprob: -16.000205993652344
    9. ',' → logprob: -16.750205993652344
    10. 's' → logprob: -17.000205993652344

Token 23: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4760219156742096
    2. ' ,' → logprob: -0.9760218858718872
    3. ',self' → logprob: -7.601021766662598
    4. 'self' → logprob: -7.726021766662598
    5. ')' → logprob: -8.101021766662598
    6. '(' → logprob: -8.226021766662598
    7. ' )' → logprob: -8.351021766662598
    8. '(self' → logprob: -9.226021766662598
    9. ' self' → logprob: -10.601021766662598
    10. ' ' → logprob: -11.101021766662598

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09385906904935837
    2. ',' → logprob: -2.4688589572906494
    3. ')' → logprob: -5.9688591957092285
    4. ' ):' → logprob: -6.4688591957092285
    5. ',n' → logprob: -7.8438591957092285
    6. ' ,' → logprob: -8.09385871887207
    7. ',int' → logprob: -11.09385871887207
    8. '   ' → logprob: -11.21885871887207
    9. ' )' → logprob: -11.21885871887207
    10. ',num' → logprob: -11.71885871887207

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00041816019802354276
    2. 'self' → logprob: -8.375417709350586
    3. ' self' → logprob: -8.875417709350586
    4. '      ' → logprob: -11.250417709350586
    5. '   ' → logprob: -12.000417709350586
    6. '     ' → logprob: -12.125417709350586
    7. '    ' → logprob: -12.625417709350586
    8. 'n' → logprob: -12.875417709350586
    9. '(n' → logprob: -12.875417709350586
    10. '(self' → logprob: -13.000417709350586

Token 26: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.32717806100845337
    2. 'self' (adapté à ' self') → logprob: -1.3271780014038086
    3. '       ' → logprob: -4.327178001403809
    4. '   ' → logprob: -8.452178001403809
    5. '	self' → logprob: -8.577178001403809
    6. ' ' → logprob: -9.702178001403809
    7. '        ' → logprob: -9.952178001403809
    8. 'n' → logprob: -10.827178001403809
    9. '    ' → logprob: -10.827178001403809
    10. ' ' → logprob: -10.952178001403809

Token 27: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01964772306382656
    2. '.n' → logprob: -4.144647598266602
    3. ' .' → logprob: -7.019647598266602
    4. '.ad' → logprob: -7.269647598266602
    5. '.graph' → logprob: -7.269647598266602
    6. '.edges' → logprob: -7.269647598266602
    7. '.nodes' → logprob: -8.269647598266602
    8. '.size' → logprob: -9.769647598266602
    9. '.v' → logprob: -9.769647598266602
    10. '.max' → logprob: -10.144647598266602

Token 28: '=n' (ID: 47985)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17995315790176392
    2. '=' → logprob: -1.8049530982971191
    3. '=int' → logprob: -9.054953575134277
    4. ',' → logprob: -10.804953575134277
    5. ' ' → logprob: -11.054953575134277
    6. ' =)' → logprob: -11.429953575134277
    7. ')' → logprob: -12.054953575134277
    8. '=n' → logprob: -12.179953575134277
    9. '   ' → logprob: -12.304953575134277
    10. '=self' → logprob: -12.429953575134277

Token 29: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011129508493468165
    2. 'self' → logprob: -6.876112937927246
    3. ' self' → logprob: -10.626112937927246
    4. '
' → logprob: -10.751112937927246
    5. '   ' → logprob: -11.376112937927246
    6. ',' → logprob: -12.501112937927246
    7. '	self' → logprob: -12.626112937927246
    8. '<|end|>' → logprob: -12.626112937927246
    9. '      ' → logprob: -12.876112937927246
    10. '        ' → logprob: -13.126112937927246

Token 30: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002553793019615114
    2. 'self' → logprob: -8.375255584716797
    3. '   ' → logprob: -11.625255584716797
    4. ',' → logprob: -11.750255584716797
    5. '      ' → logprob: -13.500255584716797
    6. ' self' → logprob: -13.625255584716797
    7. '	self' → logprob: -14.000255584716797
    8. '.' → logprob: -14.375255584716797
    9. '     ' → logprob: -14.375255584716797
    10. '=' → logprob: -14.625255584716797

Token 31: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058657512068748474
    2. 'self' (adapté à ' self') → logprob: -2.93365740776062
    3. ' self' → logprob: -5.683657646179199
    4. '   ' → logprob: -8.1836576461792
    5. '	self' → logprob: -11.1836576461792
    6. 'def' → logprob: -11.3086576461792
    7. 's' → logprob: -11.3086576461792
    8. ' ' → logprob: -11.9336576461792
    9. '=' → logprob: -11.9336576461792
    10. '      ' → logprob: -12.0586576461792

Token 32: '.g' (ID: 1940)
  Prédit: '.graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.07709544897079468
    2. '.ad' → logprob: -2.7020955085754395
    3. 'graph' → logprob: -5.8270955085754395
    4. '.edges' → logprob: -6.3270955085754395
    5. '.g' → logprob: -7.0770955085754395
    6. '.inf' → logprob: -7.9520955085754395
    7. '.G' → logprob: -8.202095031738281
    8. 'Graph' → logprob: -8.827095031738281
    9. ' .' → logprob: -9.077095031738281
    10. ' graph' → logprob: -9.202095031738281

Token 33: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2917555272579193
    2. '=[' → logprob: -2.041755437850952
    3. '=[]' → logprob: -2.166755437850952
    4. 'raph' → logprob: -5.166755676269531
    5. '=[[' → logprob: -6.541755676269531
    6. '={}' → logprob: -6.791755676269531
    7. ' =' → logprob: -8.541755676269531
    8. 'raf' → logprob: -9.541755676269531
    9. '=r' → logprob: -10.541755676269531
    10. '={' → logprob: -10.541755676269531

Token 34: '[]' (ID: 1951)
  Prédit: '[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -4.723352049040841e-06
    2. ' []' → logprob: -13.000004768371582
    3. '[' → logprob: -13.375004768371582
    4. '[]
' → logprob: -14.625004768371582
    5. '[]}' → logprob: -15.125004768371582
    6. 'deque' → logprob: -16.375003814697266
    7. '[]

' → logprob: -16.875003814697266
    8. '][]' → logprob: -17.625003814697266
    9. 'list' → logprob: -17.750003814697266
    10. ']' → logprob: -18.125003814697266

Token 35: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8105905055999756
    2. ' for' → logprob: -1.1855905055999756
    3. '(' → logprob: -1.8105905055999756
    4. ']' → logprob: -2.6855905055999756
    5. '()]' → logprob: -4.685590744018555
    6. '()' → logprob: -5.060590744018555
    7. '   ' → logprob: -7.435590744018555
    8. ',' → logprob: -8.060590744018555
    9. '       ' → logprob: -8.185590744018555
    10. ')' → logprob: -8.435590744018555

Token 36: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02280954085290432
    2. 'range' → logprob: -4.5228095054626465
    3. '(range' → logprob: -5.0228095054626465
    4. ' range' → logprob: -5.8978095054626465
    5. 'i' → logprob: -7.1478095054626465
    6. '(' → logprob: -8.022809982299805
    7. '_range' → logprob: -8.022809982299805
    8. '(i' → logprob: -8.147809982299805
    9. 'in' → logprob: -8.397809982299805
    10. '_i' → logprob: -8.647809982299805

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07553328573703766
    2. 'in' → logprob: -2.700533390045166
    3. 'range' → logprob: -5.200533390045166
    4. 'i' → logprob: -10.700532913208008
    5. ' range' → logprob: -11.075532913208008
    6. ' ' → logprob: -11.325532913208008
    7. '(range' → logprob: -12.450532913208008
    8. 'n' → logprob: -12.825532913208008
    9. 'g' → logprob: -13.075532913208008
    10. '  ' → logprob: -13.450532913208008

Token 38: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018151583150029182
    2. ' range' → logprob: -4.018151760101318
    3. '(range' → logprob: -13.39315128326416
    4. '	range' → logprob: -16.518152236938477
    5. ' ' → logprob: -16.893152236938477
    6. '   ' → logprob: -17.768152236938477
    7. '_range' → logprob: -18.018152236938477
    8. '  ' → logprob: -19.518152236938477
    9. 'rang' → logprob: -19.643152236938477
    10. '.range' → logprob: -19.893152236938477

Token 39: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005608965293504298
    2. '(' → logprob: -7.500560760498047
    3. '(self' → logprob: -11.750560760498047
    4. ' (' → logprob: -16.875560760498047
    5. 'n' → logprob: -17.750560760498047
    6. ')n' → logprob: -18.375560760498047
    7. '(N' → logprob: -18.625560760498047
    8. '((' → logprob: -19.000560760498047
    9. '(s' → logprob: -19.000560760498047
    10. '(
' → logprob: -19.125560760498047

Token 40: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.9153885558771435e-06
    2. ')' → logprob: -12.875005722045898
    3. ' )' → logprob: -13.625005722045898
    4. ']' → logprob: -14.500005722045898
    5. ')])' → logprob: -14.625005722045898
    6. '       ' → logprob: -15.125005722045898
    7. '   ' → logprob: -15.625005722045898
    8. '))' → logprob: -15.875005722045898
    9. ')],' → logprob: -15.875005722045898
    10. ')]
' → logprob: -16.0000057220459

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03561042621731758
    2. '
' → logprob: -3.7856104373931885
    3. 'def' → logprob: -4.535610198974609
    4. ' def' → logprob: -6.785610198974609
    5. '    
' → logprob: -8.41061019897461
    6. '	def' → logprob: -8.91061019897461
    7. '       ' → logprob: -10.41061019897461
    8. '        
' → logprob: -11.41061019897461
    9. '
' → logprob: -11.78561019897461
    10. '<|end|>' → logprob: -12.03561019897461

Token 42: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2905612587928772
    2. '   ' → logprob: -1.6655611991882324
    3. ' def' → logprob: -2.7905611991882324
    4. '	def' → logprob: -6.790561199188232
    5. '
' → logprob: -7.790561199188232
    6. '    
' → logprob: -9.66556167602539
    7. ' ' → logprob: -11.16556167602539
    8. '       ' → logprob: -11.16556167602539
    9. 'de' → logprob: -11.54056167602539
    10. ':def' → logprob: -11.91556167602539

Token 43: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.07897945493459702
    2. 'add' → logprob: -2.5789794921875
    3. ' addedge' → logprob: -10.5789794921875
    4. ' bfs' → logprob: -10.5789794921875
    5. 'b' → logprob: -11.3289794921875
    6. 'a' → logprob: -12.2039794921875
    7. 'adde' → logprob: -12.7039794921875
    8. ' ' → logprob: -12.8289794921875
    9. ' ad' → logprob: -12.9539794921875
    10. '_add' → logprob: -12.9539794921875

Token 44: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0007181499968282878
    2. '_' → logprob: -7.250718116760254
    3. '```' → logprob: -13.500718116760254
    4. '_E' → logprob: -13.750718116760254
    5. '_edges' → logprob: -13.875718116760254
    6. '(_' → logprob: -14.000718116760254
    7. '_e' → logprob: -14.375718116760254
    8. 'Edge' → logprob: -14.500718116760254
    9. '_capacity' → logprob: -14.875718116760254
    10. '(' → logprob: -14.875718116760254

Token 45: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.47638946771621704
    2. '(' → logprob: -0.976389467716217
    3. ' (' → logprob: -6.476389408111572
    4. '(s' → logprob: -7.351389408111572
    5. '(sel' → logprob: -10.85138988494873
    6. '(u' → logprob: -10.97638988494873
    7. '(a' → logprob: -11.35138988494873
    8. 'self' → logprob: -11.35138988494873
    9. ' ' → logprob: -11.47638988494873
    10. '<|end|>' → logprob: -11.85138988494873

Token 46: ',a' (ID: 26776)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5763782858848572
    2. ',u' → logprob: -0.8263782858848572
    3. ',v' → logprob: -8.451377868652344
    4. ',node' → logprob: -9.576377868652344
    5. ' ,' → logprob: -9.701377868652344
    6. ',a' → logprob: -9.826377868652344
    7. ',s' → logprob: -11.576377868652344
    8. ',i' → logprob: -11.951377868652344
    9. ',j' → logprob: -12.826377868652344
    10. ',n' → logprob: -12.951377868652344

Token 47: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011578473262488842
    2. ' ,' → logprob: -4.761578559875488
    3. ',b' → logprob: -6.136578559875488
    4. ',a' → logprob: -7.386578559875488
    5. ',u' → logprob: -10.386578559875488
    6. ',int' → logprob: -10.761578559875488
    7. ',n' → logprob: -11.136578559875488
    8. ',c' → logprob: -11.261578559875488
    9. ',k' → logprob: -11.636578559875488
    10. ',v' → logprob: -11.636578559875488

Token 48: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00596647709608078
    2. ' ,' → logprob: -5.630966663360596
    3. ',c' → logprob: -6.755966663360596
    4. ',a' → logprob: -7.380966663360596
    5. ',u' → logprob: -8.630966186523438
    6. ',value' → logprob: -9.505966186523438
    7. ',v' → logprob: -9.630966186523438
    8. ',r' → logprob: -10.130966186523438
    9. ',b' → logprob: -10.505966186523438
    10. ',self' → logprob: -10.880966186523438

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009700604132376611
    2. ')' → logprob: -7.125969886779785
    3. ' ):' → logprob: -8.875969886779785
    4. '):
' → logprob: -11.375969886779785
    5. ',' → logprob: -11.500969886779785
    6. ')：' → logprob: -13.500969886779785
    7. '):
' → logprob: -13.875969886779785
    8. ':' → logprob: -14.375969886779785
    9. ')):' → logprob: -15.375969886779785
    10. '   ' → logprob: -15.625969886779785

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003171533579006791
    2. 'self' → logprob: -5.878171443939209
    3. ' self' → logprob: -8.253171920776367
    4. '   ' → logprob: -9.628171920776367
    5. '	self' → logprob: -11.003171920776367
    6. ',' → logprob: -12.003171920776367
    7. '	' → logprob: -12.253171920776367
    8. '    ' → logprob: -12.503171920776367
    9. '      ' → logprob: -13.753171920776367
    10. '     ' → logprob: -13.878171920776367

Token 51: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.020388418808579445
    2. ' self' → logprob: -4.395388603210449
    3. '       ' → logprob: -4.895388603210449
    4. '   ' → logprob: -8.14538860321045
    5. '	self' → logprob: -9.52038860321045
    6. '	' → logprob: -13.77038860321045
    7. ' ' → logprob: -14.39538860321045
    8. '    ' → logprob: -15.02038860321045
    9. '[self' → logprob: -15.52038860321045
    10. '        
' → logprob: -15.64538860321045

Token 52: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.00020866614067927003
    2. '.' → logprob: -9.000208854675293
    3. 'g' → logprob: -10.000208854675293
    4. ' .' → logprob: -10.750208854675293
    5. 'self' → logprob: -12.250208854675293
    6. '   ' → logprob: -13.500208854675293
    7. '`.' → logprob: -13.625208854675293
    8. '```' → logprob: -13.625208854675293
    9. '].' → logprob: -13.750208854675293

Token 53: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.6240566083070007e-06
    2. 'a' → logprob: -14.125001907348633
    3. '[' → logprob: -14.375001907348633
    4. '```' → logprob: -17.000001907348633
    5. '[A' → logprob: -17.750001907348633
    6. '[u' → logprob: -17.875001907348633
    7. ' [' → logprob: -18.000001907348633
    8. '   ' → logprob: -18.125001907348633
    9. '[int' → logprob: -18.250001907348633
    10. '[self' → logprob: -19.375001907348633

Token 54: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00014406509581021965
    2. '.append' → logprob: -9.375144004821777
    3. '.' → logprob: -10.750144004821777
    4. ').' → logprob: -11.000144004821777
    5. '   ' → logprob: -11.625144004821777
    6. ']' → logprob: -11.750144004821777
    7. ' ].' → logprob: -13.125144004821777
    8. '       ' → logprob: -14.125144004821777
    9. 'append' → logprob: -14.625144004821777
    10. ' ' → logprob: -15.250144004821777

Token 55: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. '.append' → logprob: -15.875
    3. 'app' → logprob: -16.5
    4. ' append' → logprob: -17.5
    5. 'appen' → logprob: -18.25
    6. '_append' → logprob: -20.75
    7. 'Append' → logprob: -21.625
    8. ' ' → logprob: -21.75
    9. '	append' → logprob: -22.0
    10. 'add' → logprob: -22.0

Token 56: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0015274790348485112
    2. '((' → logprob: -6.501527309417725
    3. '[' → logprob: -10.876527786254883
    4. '(([' → logprob: -12.376527786254883
    5. '[b' → logprob: -14.001527786254883
    6. '(' → logprob: -14.751527786254883
    7. '({'' → logprob: -15.001527786254883
    8. '[(' → logprob: -15.751527786254883
    9. '(b' → logprob: -16.126527786254883
    10. ' ([' → logprob: -16.376527786254883

Token 57: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0325924449716695e-05
    2. ' b' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.87501049041748
    4. ' ' → logprob: -17.500009536743164
    5. '  ' → logprob: -18.000009536743164
    6. '[b' → logprob: -18.375009536743164
    7. '    ' → logprob: -18.500009536743164
    8. '	b' → logprob: -18.625009536743164
    9. ',b' → logprob: -18.875009536743164
    10. ')b' → logprob: -19.375009536743164

Token 58: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.12886178493499756
    2. ',' → logprob: -2.128861904144287
    3. ' ,' → logprob: -6.253861904144287
    4. 'c' → logprob: -12.003861427307129
    5. ',len' → logprob: -13.878861427307129
    6. ' c' → logprob: -14.628861427307129
    7. ',int' → logprob: -15.253861427307129
    8. ',C' → logprob: -15.878861427307129
    9. ' ' → logprob: -16.003862380981445
    10. ',n' → logprob: -16.253862380981445

Token 59: ',len' (ID: 73338)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07757873088121414
    2. ',len' → logprob: -2.7025787830352783
    3. ' ,' → logprob: -5.202578544616699
    4. ',self' → logprob: -6.202578544616699
    5. ',c' → logprob: -10.3275785446167
    6. ',None' → logprob: -11.0775785446167
    7. '])' → logprob: -11.3275785446167
    8. ',float' → logprob: -12.5775785446167
    9. ',int' → logprob: -12.9525785446167
    10. ',m' → logprob: -13.4525785446167

Token 60: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011886836728081107
    2. 'self' → logprob: -6.7511887550354
    3. ' self' → logprob: -11.626188278198242
    4. '(' → logprob: -11.876188278198242
    5. '=self' → logprob: -14.126188278198242
    6. '[self' → logprob: -14.626188278198242
    7. ',self' → logprob: -15.001188278198242
    8. ' (' → logprob: -15.001188278198242
    9. '	self' → logprob: -15.001188278198242
    10. ':self' → logprob: -15.376188278198242

Token 61: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -1.5048530030981055e-06
    2. 'self' → logprob: -14.125001907348633
    3. ' .' → logprob: -14.750001907348633
    4. '.' → logprob: -15.500001907348633
    5. '].' → logprob: -17.250001907348633
    6. '.b' → logprob: -17.500001907348633
    7. ').' → logprob: -17.750001907348633
    8. '.s' → logprob: -18.500001907348633
    9. '[g' → logprob: -18.750001907348633
    10. 'g' → logprob: -18.875001907348633

Token 62: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0004529566504061222
    2. 'b' → logprob: -7.750452995300293
    3. '[self' → logprob: -11.250452995300293
    4. '[g' → logprob: -12.500452995300293
    5. 'self' → logprob: -12.875452995300293
    6. '[a' → logprob: -14.250452995300293
    7. '   ' → logprob: -14.375452995300293
    8. '(b' → logprob: -14.500452995300293
    9. ')b' → logprob: -14.875452995300293
    10. '[' → logprob: -15.375452995300293

Token 63: '])' (ID: 4636)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.027687041088938713
    2. '])' → logprob: -3.9026870727539062
    3. ')' → logprob: -5.277687072753906
    4. '[])' → logprob: -7.152687072753906
    5. ']])' → logprob: -8.152687072753906
    6. '[' → logprob: -8.527687072753906
    7. '[a' → logprob: -8.527687072753906
    8. '])]' → logprob: -9.027687072753906
    9. ')]' → logprob: -9.527687072753906
    10. ' )' → logprob: -9.527687072753906

Token 64: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.057405874133110046
    2. '])
' → logprob: -2.932405948638916
    3. ' ])' → logprob: -6.557405948638916
    4. ',' → logprob: -7.682405948638916
    5. ' ])
' → logprob: -8.057405471801758
    6. ')' → logprob: -9.057405471801758
    7. '   ' → logprob: -10.182405471801758
    8. '])

' → logprob: -10.557405471801758
    9. ')])' → logprob: -10.682405471801758
    10. ' ' → logprob: -10.807405471801758

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001810960122384131
    2. 'self' → logprob: -6.3768110275268555
    3. ',' → logprob: -10.126811027526855
    4. ')' → logprob: -10.751811027526855
    5. ' self' → logprob: -11.251811027526855
    6. '	self' → logprob: -11.751811027526855
    7. ',self' → logprob: -12.001811027526855
    8. '<|end|>' → logprob: -12.251811027526855
    9. '   ' → logprob: -12.376811027526855
    10. '	' → logprob: -13.126811027526855

Token 66: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10497695207595825
    2. '       ' → logprob: -2.3549768924713135
    3. ' self' → logprob: -5.354977130889893
    4. '	self' → logprob: -10.604976654052734
    5. ' ' → logprob: -12.604976654052734
    6. '[self' → logprob: -13.229976654052734
    7. '   ' → logprob: -13.229976654052734
    8. '<|end|>' → logprob: -14.104976654052734
    9. '      ' → logprob: -15.354976654052734
    10. '(self' → logprob: -15.479976654052734

Token 67: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -8.73314929776825e-05
    2. '.' → logprob: -10.00008773803711
    3. '<|end|>' → logprob: -11.62508773803711
    4. '].' → logprob: -12.12508773803711
    5. '<|end|>' → logprob: -12.12508773803711
    6. ' .' → logprob: -12.62508773803711
    7. 'g' → logprob: -13.00008773803711
    8. '```' → logprob: -13.37508773803711
    9. '`.' → logprob: -13.50008773803711

Token 68: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -9.591415437171236e-05
    2. 'b' → logprob: -9.375096321105957
    3. '[' → logprob: -12.000096321105957
    4. '[a' → logprob: -13.125096321105957
    5. '[g' → logprob: -13.250096321105957
    6. ' [' → logprob: -15.750096321105957
    7. '[B' → logprob: -16.37509536743164
    8. '[s' → logprob: -16.50009536743164
    9. '```' → logprob: -16.50009536743164
    10. '[
' → logprob: -16.62509536743164

Token 69: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.22737793624401093
    2. '.append' → logprob: -2.3523778915405273
    3. '.' → logprob: -2.4773778915405273
    4. '[' → logprob: -4.102377891540527
    5. ').' → logprob: -5.352377891540527
    6. '   ' → logprob: -6.227377891540527
    7. '[].' → logprob: -8.602377891540527
    8. '][' → logprob: -8.852377891540527
    9. ' .' → logprob: -9.227377891540527
    10. '.g' → logprob: -9.227377891540527

Token 70: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.003109145909547806
    2. '[a' → logprob: -5.878108978271484
    3. '.append' → logprob: -8.503108978271484
    4. 'a' → logprob: -9.878108978271484
    5. 'app' → logprob: -10.628108978271484
    6. ' append' → logprob: -12.128108978271484
    7. '[' → logprob: -12.253108978271484
    8. '[-' → logprob: -13.003108978271484
    9. '[b' → logprob: -13.253108978271484
    10. '_append' → logprob: -13.503108978271484

Token 71: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -5.200166469876422e-06
    2. '(a' → logprob: -13.000004768371582
    3. '(' → logprob: -13.500004768371582
    4. '[a' → logprob: -14.125004768371582
    5. '[' → logprob: -14.625004768371582
    6. '((' → logprob: -16.0000057220459
    7. '([
' → logprob: -16.3750057220459
    8. ' ([' → logprob: -16.6250057220459
    9. '<|end|>' → logprob: -18.2500057220459
    10. '([]' → logprob: -18.3750057220459

Token 72: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.9186317482963204e-05
    2. '[a' → logprob: -10.250049591064453
    3. ' a' → logprob: -11.250049591064453
    4. ',a' → logprob: -14.375049591064453
    5. '	a' → logprob: -16.000049591064453
    6. '   ' → logprob: -17.125049591064453
    7. '(a' → logprob: -17.250049591064453
    8. ',' → logprob: -17.875049591064453
    9. '[
' → logprob: -18.000049591064453
    10. ')a' → logprob: -18.375049591064453

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3504055440425873
    2. '0' → logprob: -1.2254055738449097
    3. ' ,' → logprob: -6.350405693054199
    4. ' ' → logprob: -9.1004056930542
    5. ',c' → logprob: -9.7254056930542
    6. '       ' → logprob: -11.9754056930542
    7. '`,' → logprob: -12.2254056930542
    8. 'c' → logprob: -12.4754056930542
    9. '   ' → logprob: -12.6004056930542
    10. '	' → logprob: -12.8504056930542

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -18.125001907348633
    4. '۰' → logprob: -18.375001907348633
    5. '00' → logprob: -19.250001907348633
    6. ',' → logprob: -19.375001907348633
    7. '```' → logprob: -19.375001907348633
    8. '０' → logprob: -19.625001907348633
    9. '000' → logprob: -19.750001907348633
    10. '

' → logprob: -20.562501907348633

Token 75: ',len' (ID: 73338)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16077421605587006
    2. ',len' → logprob: -1.9107742309570312
    3. ' ,' → logprob: -7.910774230957031
    4. ',length' → logprob: -9.910774230957031
    5. ',self' → logprob: -10.785774230957031
    6. ',n' → logprob: -10.910774230957031
    7. ',int' → logprob: -10.910774230957031
    8. ',None' → logprob: -11.035774230957031
    9. ',c' → logprob: -11.160774230957031
    10. ',sizeof' → logprob: -12.285774230957031

Token 76: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.76628842484206e-05
    2. 'self' → logprob: -10.125067710876465
    3. '(' → logprob: -10.875067710876465
    4. '[self' → logprob: -12.500067710876465
    5. '<|end|>' → logprob: -12.625067710876465
    6. ' self' → logprob: -14.500067710876465
    7. '	self' → logprob: -15.125067710876465
    8. ' (' → logprob: -15.750067710876465
    9. ',self' → logprob: -16.25006675720215
    10. '(s' → logprob: -16.25006675720215

Token 77: '.g' (ID: 1940)
  Prédit: '[g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -0.2895972728729248
    2. '[a' → logprob: -1.5395972728729248
    3. '.g' → logprob: -3.914597272872925
    4. '[b' → logprob: -4.289597511291504
    5. 'g' → logprob: -5.789597511291504
    6. '[' → logprob: -10.039597511291504
    7. '.' → logprob: -10.414597511291504
    8. '	g' → logprob: -10.664597511291504
    9. 'a' → logprob: -11.039597511291504
    10. ')' → logprob: -11.164597511291504

Token 78: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -3.173704271830502e-06
    2. 'a' → logprob: -12.75000286102295
    3. '[
' → logprob: -16.375003814697266
    4. '[A' → logprob: -16.625003814697266
    5. ')a' → logprob: -17.375003814697266
    6. '[' → logprob: -17.500003814697266
    7. '[b' → logprob: -17.750003814697266
    8. '<|end|>' → logprob: -17.875003814697266
    9. '	a' → logprob: -18.250003814697266
    10. '])' → logprob: -18.750003814697266

Token 79: '])-' (ID: 160447)
  Prédit: ')-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.6994162201881409
    2. '[a' → logprob: -1.324416160583496
    3. '[-' → logprob: -2.074416160583496
    4. ')' → logprob: -2.324416160583496
    5. '])-' → logprob: -4.699416160583496
    6. ']-' → logprob: -6.199416160583496
    7. '])' → logprob: -6.574416160583496
    8. '[b' → logprob: -7.949416160583496
    9. ')])' → logprob: -8.824416160583496
    10. ')]' → logprob: -8.949416160583496

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.750001907348633
    3. '１' → logprob: -16.312501907348633
    4. '11' → logprob: -16.562501907348633
    5. '۱' → logprob: -16.687501907348633
    6. '2' → logprob: -17.437501907348633
    7. '   ' → logprob: -17.500001907348633
    8. '```' → logprob: -17.875001907348633
    9. '  ' → logprob: -18.062501907348633
    10. '١' → logprob: -18.250001907348633

Token 81: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0008490558248013258
    2. ')' → logprob: -7.75084924697876
    3. ')])' → logprob: -8.125848770141602
    4. '])
' → logprob: -9.250848770141602
    5. ' ])' → logprob: -11.000848770141602
    6. ')]' → logprob: -13.250848770141602
    7. '   ' → logprob: -13.500848770141602
    8. ']])' → logprob: -13.500848770141602
    9. '])]' → logprob: -13.750848770141602
    10. ']))' → logprob: -13.750848770141602

Token 82: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011118445545434952
    2. ' 
' → logprob: -5.386118412017822
    3. '   ' → logprob: -5.886118412017822
    4. '    
' → logprob: -6.386118412017822
    5. '```' → logprob: -7.136118412017822
    6. 'def' → logprob: -7.886118412017822
    7. '  
' → logprob: -8.01111888885498
    8. ' ' → logprob: -9.51111888885498
    9. '   
' → logprob: -9.88611888885498
    10. '' → logprob: -10.01111888885498

Token 83: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9438470005989075
    2. '   ' → logprob: -1.8188469409942627
    3. 'def' (adapté à ' def') → logprob: -1.8188469409942627
    4. ' def' → logprob: -2.0688469409942627
    5. ' 
' → logprob: -2.4438469409942627
    6. '    
' → logprob: -3.0688469409942627
    7. '  
' → logprob: -5.068847179412842
    8. ' ' → logprob: -5.693847179412842
    9. '   
' → logprob: -5.693847179412842
    10. '	def' → logprob: -5.943847179412842

Token 84: ' bfs' (ID: 147571)
  Prédit: ' bfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.31369656324386597
    2. 'b' → logprob: -1.3136966228485107
    3. 'dfs' → logprob: -8.31369686126709
    4. ' dfs' → logprob: -8.93869686126709
    5. ' b' → logprob: -11.18869686126709
    6. 's' → logprob: -11.31369686126709
    7. '_b' → logprob: -11.56369686126709
    8. 'd' → logprob: -12.56369686126709
    9. ' ' → logprob: -12.81369686126709
    10. ' BFS' → logprob: -13.06369686126709

Token 85: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38818034529685974
    2. '(self' → logprob: -1.1381803750991821
    3. ' (' → logprob: -6.888180255889893
    4. '(s' → logprob: -9.13818073272705
    5. '   ' → logprob: -9.63818073272705
    6. '_' → logprob: -9.88818073272705
    7. '(
' → logprob: -10.76318073272705
    8. ' ' → logprob: -11.26318073272705
    9. '_(' → logprob: -11.76318073272705
    10. '()' → logprob: -13.01318073272705

Token 86: ',s' (ID: 20379)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027731794863939285
    2. ',self' → logprob: -3.7777318954467773
    3. ' ,' → logprob: -6.277731895446777
    4. ',a' → logprob: -6.652731895446777
    5. ',s' → logprob: -8.152731895446777
    6. ',n' → logprob: -8.402731895446777
    7. ',node' → logprob: -8.402731895446777
    8. ',p' → logprob: -9.527731895446777
    9. ',d' → logprob: -9.527731895446777
    10. ',v' → logprob: -9.777731895446777

Token 87: ',t' (ID: 26927)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016836680471897125
    2. ',self' → logprob: -4.891836643218994
    3. ',q' → logprob: -5.891836643218994
    4. ',v' → logprob: -6.391836643218994
    5. ',u' → logprob: -6.641836643218994
    6. ',l' → logprob: -7.141836643218994
    7. ',e' → logprob: -7.641836643218994
    8. ' ,' → logprob: -7.641836643218994
    9. ',b' → logprob: -7.766836643218994
    10. ',t' → logprob: -7.891836643218994

Token 88: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01713894121348858
    2. ',' → logprob: -4.142138957977295
    3. ' ):' → logprob: -7.267138957977295
    4. ')' → logprob: -8.267138481140137
    5. '):
' → logprob: -9.392138481140137
    6. '   ' → logprob: -11.017138481140137
    7. ':' → logprob: -11.517138481140137
    8. ' ,' → logprob: -12.142138481140137
    9. ',p' → logprob: -12.267138481140137
    10. ',s' → logprob: -12.517138481140137

Token 89: 'level' (ID: 6164)
  Prédit: 'level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.006418578792363405
    2. 'lev' → logprob: -5.381418704986572
    3. ' level' → logprob: -6.756418704986572
    4. 'd' → logprob: -8.631418228149414
    5. 'lvl' → logprob: -9.006418228149414
    6. 'f' → logprob: -9.131418228149414
    7. 'p' → logprob: -10.256418228149414
    8. 'depth' → logprob: -10.381418228149414
    9. 'l' → logprob: -10.506418228149414
    10. 'dist' → logprob: -10.506418228149414

Token 90: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011084247380495071
    2. ',' → logprob: -7.501108646392822
    3. ')' → logprob: -7.751108646392822
    4. ' ):' → logprob: -9.251108169555664
    5. '):
' → logprob: -11.376108169555664
    6. ':' → logprob: -11.876108169555664
    7. '   ' → logprob: -13.001108169555664
    8. ' ' → logprob: -14.251108169555664
    9. ']:' → logprob: -14.376108169555664
    10. '=' → logprob: -14.376108169555664

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002886544680222869
    2. '<|end|>' → logprob: -6.877886772155762
    3. '   ' → logprob: -7.377886772155762
    4. '    ' → logprob: -7.752886772155762
    5. ':' → logprob: -8.002886772155762
    6. '      ' → logprob: -8.752886772155762
    7. ' ' → logprob: -10.002886772155762
    8. '     ' → logprob: -10.252886772155762
    9. '        ' → logprob: -10.252886772155762
    10. '	' → logprob: -11.002886772155762

Token 92: ' q' (ID: 2335)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.1402679979801178
    2. '   ' → logprob: -2.390268087387085
    3. 'q' (adapté à ' q') → logprob: -3.640268087387085
    4. ' queue' → logprob: -5.265267848968506
    5. 'from' → logprob: -5.890267848968506
    6. '       ' → logprob: -6.390267848968506
    7. 'for' → logprob: -6.515267848968506
    8. 'deque' → logprob: -7.390267848968506
    9. '	queue' → logprob: -8.015268325805664
    10. '```' → logprob: -8.515268325805664

Token 93: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133101463317871
    2. ' =' → logprob: -1.313310146331787
    3. ' ' → logprob: -11.438310623168945
    4. '.append' → logprob: -11.563310623168945
    5. '.' → logprob: -11.688310623168945
    6. '=q' → logprob: -11.688310623168945
    7. '=[]' → logprob: -12.563310623168945
    8. '.=' → logprob: -13.688310623168945
    9. '=new' → logprob: -14.188310623168945
    10. '=u' → logprob: -14.438310623168945

Token 94: 'deque' (ID: 143563)
  Prédit: 'deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0001234428636962548
    2. ' deque' → logprob: -9.000123023986816
    3. 'de' → logprob: -17.250123977661133
    4. 'Deque' → logprob: -19.125123977661133
    5. 'queue' → logprob: -21.750123977661133
    6. 'dq' → logprob: -22.375123977661133
    7. '	de' → logprob: -22.625123977661133
    8. 'collections' → logprob: -23.000123977661133
    9. 'd' → logprob: -23.000123977661133
    10. '```' → logprob: -23.250123977661133

Token 95: '([' (ID: 5194)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00018947436183225363
    2. '(' → logprob: -8.750189781188965
    3. '([]' → logprob: -11.500189781188965
    4. '()
' → logprob: -11.625189781188965
    5. '([' → logprob: -12.000189781188965
    6. '([(' → logprob: -13.750189781188965
    7. '()\' → logprob: -13.875189781188965
    8. '()

' → logprob: -14.000189781188965
    9. ' ()' → logprob: -14.000189781188965
    10. '()]' → logprob: -14.500189781188965

Token 96: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.9862216504407115e-05
    2. ' s' → logprob: -11.125020027160645
    3. '(s' → logprob: -12.250020027160645
    4. ')s' → logprob: -16.625019073486328
    5. '{s' → logprob: -17.000019073486328
    6. '   ' → logprob: -17.125019073486328
    7. ' (' → logprob: -17.750019073486328
    8. '(' → logprob: -18.000019073486328
    9. '])' → logprob: -18.500019073486328
    10. '[s' → logprob: -18.625019073486328

Token 97: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00034988581319339573
    2. '])
' → logprob: -8.125349998474121
    3. ' ])' → logprob: -10.000349998474121
    4. ')' → logprob: -12.125349998474121
    5. '])
' → logprob: -13.625349998474121
    6. '])

' → logprob: -14.625349998474121
    7. ')])' → logprob: -15.125349998474121
    8. ']);' → logprob: -15.250349998474121
    9. ']))' → logprob: -15.625349998474121
    10. ']' → logprob: -15.875349998474121

Token 98: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05255566164851189
    2. '       ' → logprob: -3.677555561065674
    3. ' 
' → logprob: -3.802555561065674
    4. '   ' → logprob: -6.802555561065674
    5. '<|end|>' → logprob: -7.052555561065674
    6. '    
' → logprob: -7.802555561065674
    7. '  
' → logprob: -8.302556037902832
    8. '        
' → logprob: -8.427556037902832
    9. '
' → logprob: -8.427556037902832
    10. ' ' → logprob: -9.302556037902832

Token 99: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' (adapté à ' level') → logprob: -0.0883331224322319
    2. 'while' → logprob: -2.8383331298828125
    3. '       ' → logprob: -4.4633331298828125
    4. ' level' → logprob: -5.2133331298828125
    5. ' while' → logprob: -5.3383331298828125
    6. 'for' → logprob: -6.3383331298828125
    7. '	level' → logprob: -6.4633331298828125
    8. '   ' → logprob: -7.7133331298828125
    9. ' for' → logprob: -8.463333129882812
    10. '	while' → logprob: -9.838333129882812

Token 100: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -6.790129555156454e-05
    2. '[' → logprob: -9.625067710876465
    3. '[:]' → logprob: -14.375067710876465
    4. ' [' → logprob: -15.000067710876465
    5. '[q' → logprob: -15.625067710876465
    6. '[t' → logprob: -15.750067710876465
    7. ' =' → logprob: -16.25006866455078
    8. '```' → logprob: -16.50006866455078
    9. 's' → logprob: -16.62506866455078
    10. ' s' → logprob: -16.75006866455078

Token 101: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16337057948112488
    2. ']=' → logprob: -1.9133706092834473
    3. ' ]' → logprob: -5.788370609283447
    4. ']=-' → logprob: -9.913370132446289
    5. ']+=' → logprob: -11.663370132446289
    6. ']=(' → logprob: -12.163370132446289
    7. '=' → logprob: -12.413370132446289
    8. ']={' → logprob: -12.413370132446289
    9. ']==' → logprob: -13.163370132446289
    10. ']="' → logprob: -13.663370132446289

Token 102: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.87500286102295
    3. '1' → logprob: -15.25000286102295
    4. '０' → logprob: -18.375003814697266
    5. '۰' → logprob: -18.875003814697266
    6. '01' → logprob: -19.750003814697266
    7. '-' → logprob: -19.875003814697266
    8. '=' → logprob: -20.125003814697266
    9. '00' → logprob: -20.250003814697266
    10. '[' → logprob: -21.375003814697266

Token 103: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28184860944747925
    2. '<|end|>' → logprob: -1.406848669052124
    3. '<|end|>' → logprob: -7.906848430633545
    4. '       ' → logprob: -9.531848907470703
    5. '   ' → logprob: -10.031848907470703
    6. '	while' → logprob: -10.156848907470703
    7. ' 
' → logprob: -10.156848907470703
    8. '\n' → logprob: -10.156848907470703
    9. '
' → logprob: -10.781848907470703
    10. ' while' → logprob: -11.031848907470703

Token 104: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6159444451332092
    2. '<|end|>' → logprob: -0.8659444451332092
    3. '       ' → logprob: -4.3659443855285645
    4. '	while' → logprob: -4.4909443855285645
    5. '   ' → logprob: -4.7409443855285645
    6. ' while' → logprob: -6.1159443855285645
    7. ' 
' → logprob: -6.3659443855285645
    8. '<|end|>' → logprob: -6.9909443855285645
    9. ' ' → logprob: -7.1159443855285645
    10. 'while' → logprob: -9.115944862365723

Token 105: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.062339719384908676
    2. ' while' → logprob: -2.8123397827148438
    3. '	while' → logprob: -8.562339782714844
    4. '   ' → logprob: -8.687339782714844
    5. '       ' → logprob: -11.687339782714844
    6. 'for' → logprob: -13.312339782714844
    7. ' ' → logprob: -14.312339782714844
    8. '  ' → logprob: -14.312339782714844
    9. '
' → logprob: -15.437339782714844
    10. 'While' → logprob: -15.687339782714844

Token 106: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.31328174471855164
    2. ' q' → logprob: -1.313281774520874
    3. ' ' → logprob: -12.063282012939453
    4. ' len' → logprob: -12.188282012939453
    5. '	q' → logprob: -12.563282012939453
    6. 'len' → logprob: -12.813282012939453
    7. '  ' → logprob: -14.188282012939453
    8. '   ' → logprob: -14.438282012939453
    9. '(q' → logprob: -14.688282012939453
    10. '    ' → logprob: -14.938282012939453

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005303950165398419
    2. '.' → logprob: -8.750530242919922
    3. ':
' → logprob: -9.375530242919922
    4. '.pop' → logprob: -9.750530242919922
    5. '):' → logprob: -9.875530242919922
    6. ' and' → logprob: -10.125530242919922
    7. '.p' → logprob: -10.375530242919922
    8. '.append' → logprob: -10.625530242919922
    9. 'and' → logprob: -11.375530242919922
    10. ':not' → logprob: -11.375530242919922

Token 108: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5275740623474121
    2. '           ' → logprob: -1.277574062347412
    3. '        ' → logprob: -3.402574062347412
    4. ' ' → logprob: -3.777574062347412
    5. '   ' → logprob: -3.902574062347412
    6. '<|end|>' → logprob: -4.652574062347412
    7. '    ' → logprob: -4.902574062347412
    8. '	       ' → logprob: -5.277574062347412
    9. ',' → logprob: -5.402574062347412
    10. ' 
' → logprob: -5.402574062347412

Token 109: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.21848320960998535
    2. 'u' → logprob: -1.7184832096099854
    3. ' v' → logprob: -4.468482971191406
    4. ' u' → logprob: -5.218482971191406
    5. '   ' → logprob: -10.468482971191406
    6. 'x' → logprob: -11.593482971191406
    7. 'node' → logprob: -12.843482971191406
    8. '```' → logprob: -13.593482971191406
    9. '	v' → logprob: -14.218482971191406
    10. 'cur' → logprob: -14.343482971191406

Token 110: '=q' (ID: 151306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5058304071426392
    2. ' =' → logprob: -1.0058304071426392
    3. '=q' → logprob: -3.6308302879333496
    4. '=v' → logprob: -5.63083028793335
    5. ',' → logprob: -8.755830764770508
    6. ' ' → logprob: -8.755830764770508
    7. ',q' → logprob: -9.130830764770508
    8. ')=' → logprob: -9.380830764770508
    9. '=int' → logprob: -9.505830764770508
    10. '=
' → logprob: -9.505830764770508

Token 111: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0002572865632828325
    2. '.pop' → logprob: -8.75025749206543
    3. '.' → logprob: -9.25025749206543
    4. 'p' → logprob: -13.00025749206543
    5. 'pop' → logprob: -16.12525749206543
    6. ' .' → logprob: -16.25025749206543
    7. '   ' → logprob: -16.62525749206543
    8. ' p' → logprob: -16.87525749206543
    9. '[' → logprob: -17.00025749206543
    10. 'opleft' → logprob: -17.87525749206543

Token 112: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.001763359410688281
    2. 'op' → logprob: -6.751763343811035
    3. 'ople' → logprob: -7.501763343811035
    4. 'opl' → logprob: -10.126763343811035
    5. 'opf' → logprob: -14.126763343811035
    6. 'opt' → logprob: -16.25176429748535
    7. 'oplevel' → logprob: -17.12676429748535
    8. 'oph' → logprob: -17.50176429748535
    9. 'opy' → logprob: -18.00176429748535
    10. 'opc' → logprob: -18.12676429748535

Token 113: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003182467306032777
    2. '()
' → logprob: -5.753182411193848
    3. '()
' → logprob: -12.503182411193848
    4. '()

' → logprob: -15.128182411193848
    5. ')' → logprob: -15.253182411193848
    6. '(' → logprob: -15.503182411193848
    7. '())' → logprob: -15.878182411193848
    8. '()`' → logprob: -16.753183364868164
    9. ' ()' → logprob: -17.753183364868164
    10. '()]' → logprob: -18.378183364868164

Token 114: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012572279199957848
    2. ' for' → logprob: -5.387572288513184
    3. '
' → logprob: -5.637572288513184
    4. '<|end|>' → logprob: -6.137572288513184
    5. '       ' → logprob: -6.887572288513184
    6. 'for' → logprob: -8.387572288513184
    7. '            
' → logprob: -8.387572288513184
    8. ' 
' → logprob: -9.137572288513184
    9. ' ' → logprob: -9.387572288513184
    10. '	       ' → logprob: -9.512572288513184

Token 115: ' lv' (ID: 52146)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.038059625774621964
    2. ' for' → logprob: -3.288059711456299
    3. '           ' → logprob: -11.16305923461914
    4. '
' → logprob: -12.66305923461914
    5. '   ' → logprob: -15.16305923461914
    6. '	for' → logprob: -15.28805923461914
    7. '       ' → logprob: -15.91305923461914
    8. ' ' → logprob: -16.16305923461914
    9. '            
' → logprob: -16.91305923461914
    10. '               ' → logprob: -17.66305923461914

Token 116: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14034436643123627
    2. ' =' → logprob: -3.1403443813323975
    3. 'level' → logprob: -3.7653443813323975
    4. 'l' → logprob: -3.7653443813323975
    5. 'r' → logprob: -4.140344142913818
    6. 't' → logprob: -5.765344142913818
    7. '   ' → logprob: -5.765344142913818
    8. 'rev' → logprob: -6.015344142913818
    9. 'os' → logprob: -6.390344142913818
    10. 'lus' → logprob: -6.640344142913818

Token 117: 'level' (ID: 6164)
  Prédit: 'level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -4.1080467781284824e-05
    2. ' level' → logprob: -10.125041007995605
    3. '[level' → logprob: -15.125041007995605
    4. '	level' → logprob: -15.250041007995605
    5. 'l' → logprob: -16.125041961669922
    6. 'lv' → logprob: -16.375041961669922
    7. 'lvl' → logprob: -16.625041961669922
    8. '(level' → logprob: -16.875041961669922
    9. '   ' → logprob: -17.125041961669922
    10. 'e' → logprob: -17.500041961669922

Token 118: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0011705794604495168
    2. 'v' → logprob: -6.751170635223389
    3. ' v' → logprob: -15.00117015838623
    4. '	v' → logprob: -17.126171112060547
    5. '[' → logprob: -19.126171112060547
    6. '<v' → logprob: -19.876171112060547
    7. ' [' → logprob: -20.376171112060547
    8. '
' → logprob: -20.876171112060547
    9. '(v' → logprob: -22.001171112060547
    10. ',v' → logprob: -22.126171112060547

Token 119: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.11363206058740616
    2. ']' → logprob: -2.3636319637298584
    3. ']
' → logprob: -4.3636322021484375
    4. '+' → logprob: -7.6136322021484375
    5. ')+' → logprob: -10.113632202148438
    6. '
' → logprob: -10.363632202148438
    7. ']+=' → logprob: -11.613632202148438
    8. ' +' → logprob: -12.738632202148438
    9. '])
' → logprob: -12.738632202148438
    10. '+
' → logprob: -12.988632202148438

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.584239938296378e-06
    2. ' ' → logprob: -11.875007629394531
    3. '
' → logprob: -15.000007629394531
    4. '   ' → logprob: -15.875007629394531
    5. '

' → logprob: -16.75000762939453
    6. '           ' → logprob: -16.87500762939453
    7. '```' → logprob: -17.62500762939453
    8. '       ' → logprob: -19.00000762939453
    9. '  ' → logprob: -19.25000762939453
    10. '6' → logprob: -19.37500762939453

Token 121: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002671853406354785
    2. '           ' → logprob: -6.127671718597412
    3. ' for' → logprob: -8.25267219543457
    4. '<|end|>' → logprob: -9.37767219543457
    5. 'for' → logprob: -10.00267219543457
    6. '
' → logprob: -10.12767219543457
    7. '            
' → logprob: -10.12767219543457
    8. ' 
' → logprob: -12.62767219543457
    9. '  
' → logprob: -12.75267219543457
    10. '       ' → logprob: -12.87767219543457

Token 122: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03522105887532234
    2. ' for' → logprob: -4.035221099853516
    3. 'for' → logprob: -4.785221099853516
    4. '
' → logprob: -4.785221099853516
    5. '       ' → logprob: -9.410221099853516
    6. '<|end|>' → logprob: -10.160221099853516
    7. '            
' → logprob: -10.410221099853516
    8. '   ' → logprob: -10.910221099853516
    9. '
' → logprob: -11.410221099853516
    10. ' ' → logprob: -11.660221099853516

Token 123: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0017106400337070227
    2. '           ' → logprob: -6.501710414886475
    3. ' for' → logprob: -8.626710891723633
    4. '       ' → logprob: -10.501710891723633
    5. '   ' → logprob: -13.626710891723633
    6. '	for' → logprob: -15.251710891723633
    7. '```' → logprob: -16.376710891723633
    8. '
' → logprob: -17.501710891723633
    9. '               ' → logprob: -17.501710891723633
    10. ' ' → logprob: -18.251710891723633

Token 124: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7146334648132324
    2. 'to' → logprob: -0.7146334648132324
    3. 'e' → logprob: -3.9646334648132324
    4. ' to' → logprob: -6.714633464813232
    5. ' i' → logprob: -7.964633464813232
    6. '(to' → logprob: -8.83963394165039
    7. 'idx' → logprob: -8.96463394165039
    8. 'u' → logprob: -9.08963394165039
    9. 'w' → logprob: -9.71463394165039
    10. '[to' → logprob: -9.83963394165039

Token 125: ',(' (ID: 27243)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.8556188941001892
    2. ',j' → logprob: -1.605618953704834
    3. ',v' → logprob: -1.855618953704834
    4. ',' → logprob: -2.355618953704834
    5. ',e' → logprob: -3.105618953704834
    6. ',(' → logprob: -3.605618953704834
    7. ',a' → logprob: -3.855618953704834
    8. ',[' → logprob: -4.605618953704834
    9. ',x' → logprob: -4.980618953704834
    10. ' ,' → logprob: -5.480618953704834

Token 126: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0025757751427590847
    2. 'u' → logprob: -6.877575874328613
    3. 'nv' → logprob: -8.127575874328613
    4. 'b' → logprob: -8.127575874328613
    5. 'e' → logprob: -8.627575874328613
    6. 'w' → logprob: -8.752575874328613
    7. 'n' → logprob: -9.127575874328613
    8. 'j' → logprob: -9.127575874328613
    9. 'y' → logprob: -9.377575874328613
    10. 't' → logprob: -9.627575874328613

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20298349857330322
    2. ',c' → logprob: -1.7029834985733032
    3. ' ,' → logprob: -8.077983856201172
    4. ',val' → logprob: -8.077983856201172
    5. ',w' → logprob: -8.452983856201172
    6. ',v' → logprob: -9.202983856201172
    7. ',value' → logprob: -9.577983856201172
    8. ',color' → logprob: -9.952983856201172
    9. ',l' → logprob: -9.952983856201172
    10. ',e' → logprob: -9.952983856201172

Token 128: 'cap' (ID: 15558)
  Prédit: 'cap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.0005527943139895797
    2. 'c' → logprob: -8.375553131103516
    3. ' cap' → logprob: -8.750553131103516
    4. 'capacity' → logprob: -8.750553131103516
    5. 'flow' → logprob: -13.750553131103516
    6. 'f' → logprob: -13.875553131103516
    7. ' capacity' → logprob: -13.875553131103516
    8. 'cost' → logprob: -14.625553131103516
    9. '-cap' → logprob: -14.750553131103516
    10. '(cap' → logprob: -15.375553131103516

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004519719630479813
    2. ',c' → logprob: -7.004519939422607
    3. ',i' → logprob: -7.754519939422607
    4. ',index' → logprob: -7.754519939422607
    5. ',value' → logprob: -8.00451946258545
    6. ',size' → logprob: -8.25451946258545
    7. ',val' → logprob: -8.25451946258545
    8. ' ,' → logprob: -8.50451946258545
    9. ',pos' → logprob: -8.50451946258545
    10. ',count' → logprob: -8.75451946258545

Token 130: 'rev' (ID: 25656)
  Prédit: 'rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.00048167374916374683
    2. '_rev' → logprob: -7.875481605529785
    3. '_' → logprob: -9.500481605529785
    4. ' rev' → logprob: -11.625481605529785
    5. 'idx' → logprob: -12.000481605529785
    6. '.rev' → logprob: -12.625481605529785
    7. 'rid' → logprob: -12.750481605529785
    8. 'inv' → logprob: -13.125481605529785
    9. 'back' → logprob: -14.375481605529785
    10. 'id' → logprob: -15.250481605529785

Token 131: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9623810658231378e-05
    2. ')=' → logprob: -11.625020027160645
    3. ' )' → logprob: -12.750020027160645
    4. '_idx' → logprob: -13.375020027160645
    5. ')
' → logprob: -13.875020027160645
    6. ')_' → logprob: -14.500020027160645
    7. '):
' → logprob: -14.625020027160645
    8. '_index' → logprob: -14.750020027160645
    9. ')=>' → logprob: -14.875020027160645
    10. '_id' → logprob: -15.250020027160645

Token 132: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34157490730285645
    2. 'in' → logprob: -1.7165749073028564
    3. ')' → logprob: -2.2165749073028564
    4. ' )' → logprob: -7.841574668884277
    5. ' ' → logprob: -9.216574668884277
    6. '  ' → logprob: -9.841574668884277
    7. '
' → logprob: -10.091574668884277
    8. '   ' → logprob: -10.591574668884277
    9. '    ' → logprob: -11.341574668884277
    10. '):
' → logprob: -11.341574668884277

Token 133: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.0028062984347343445
    2. 'enumer' → logprob: -5.877806186676025
    3. 'self' → logprob: -13.752806663513184
    4. ' self' → logprob: -15.877806663513184
    5. '```' → logprob: -16.002805709838867
    6. ' ' → logprob: -17.127805709838867
    7. 'Enumer' → logprob: -17.377805709838867
    8. ' enumer' → logprob: -18.127805709838867
    9. 's' → logprob: -19.127805709838867
    10. '(en' → logprob: -19.252805709838867

Token 134: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0048820809461176395
    2. ' self' → logprob: -5.504881858825684
    3. '(self' → logprob: -7.129881858825684
    4. '[self' → logprob: -13.629881858825684
    5. ',self' → logprob: -14.629881858825684
    6. '	self' → logprob: -14.754881858825684
    7. ':self' → logprob: -16.1298828125
    8. '=self' → logprob: -16.5048828125
    9. '*self' → logprob: -16.7548828125
    10. ')' → logprob: -16.8798828125

Token 135: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.00016539888747502118
    2. '.' → logprob: -8.875164985656738
    3. 'g' → logprob: -10.875164985656738
    4. ' .' → logprob: -12.875164985656738
    5. ').' → logprob: -14.125164985656738
    6. 'self' → logprob: -14.750164985656738
    7. '.s' → logprob: -15.125164985656738
    8. '[g' → logprob: -15.250164985656738
    9. '].' → logprob: -15.625164985656738

Token 136: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.2200749754119897e-06
    2. 'v' → logprob: -13.125001907348633
    3. ')[' → logprob: -16.500001907348633
    4. '[' → logprob: -16.500001907348633
    5. ')v' → logprob: -17.875001907348633
    6. '[val' → logprob: -17.875001907348633
    7. '<v' → logprob: -18.625001907348633
    8. '[u' → logprob: -18.750001907348633
    9. ')' → logprob: -18.750001907348633
    10. ',v' → logprob: -19.125001907348633

Token 137: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003971186000853777
    2. '):
' → logprob: -5.628971099853516
    3. ']):' → logprob: -8.628971099853516
    4. ')' → logprob: -9.628971099853516
    5. ' ):' → logprob: -9.878971099853516
    6. ':' → logprob: -10.003971099853516
    7. ']:' → logprob: -11.128971099853516
    8. '):

' → logprob: -12.503971099853516
    9. '):
' → logprob: -13.253971099853516
    10. '）：' → logprob: -13.378971099853516

Token 138: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.006001591682434
    2. '<|end|>' → logprob: -1.006001591682434
    3. '               ' → logprob: -1.381001591682434
    4. '       ' → logprob: -5.0060014724731445
    5. '<|end|>' → logprob: -6.1310014724731445
    6. '           ' → logprob: -6.5060014724731445
    7. '):' → logprob: -6.6310014724731445
    8. ' if' → logprob: -6.8810014724731445
    9. ' ' → logprob: -7.1310014724731445
    10. ',' → logprob: -7.1310014724731445

Token 139: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23262816667556763
    2. 'if' (adapté à ' if') → logprob: -2.482628107070923
    3. '               ' → logprob: -3.107628107070923
    4. '                ' → logprob: -3.107628107070923
    5. '                   ' → logprob: -3.732628107070923
    6. '<|end|>' → logprob: -5.232628345489502
    7. '                    ' → logprob: -6.232628345489502
    8. ' ' → logprob: -6.732628345489502
    9. '                       ' → logprob: -7.982628345489502
    10. '           ' → logprob: -8.607627868652344

Token 140: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.20223578810691833
    2. ' cap' → logprob: -1.7022358179092407
    3. ' level' → logprob: -7.827235698699951
    4. 'level' → logprob: -8.07723617553711
    5. '(cap' → logprob: -9.82723617553711
    6. 'capacity' → logprob: -11.20223617553711
    7. ' capa' → logprob: -11.45223617553711
    8. ' not' → logprob: -11.70223617553711
    9. ' capacity' → logprob: -11.70223617553711
    10. ' ' → logprob: -12.07723617553711

Token 141: ' and' (ID: 326)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4757547676563263
    2. ' >' → logprob: -0.9757547378540039
    3. ' and' → logprob: -6.475754737854004
    4. 'and' → logprob: -8.975754737854004
    5. '&gt' → logprob: -13.350754737854004
    6. '()>' → logprob: -13.350754737854004
    7. ' ' → logprob: -13.850754737854004
    8. ')>' → logprob: -13.850754737854004
    9. ' ' → logprob: -13.975754737854004
    10. '">' → logprob: -13.975754737854004

Token 142: ' level' (ID: 3211)
  Prédit: ' level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' level' → logprob: -0.313337504863739
    2. 'level' → logprob: -1.3133375644683838
    3. ' not' → logprob: -9.688337326049805
    4. 'not' → logprob: -12.063337326049805
    5. '(level' → logprob: -12.563337326049805
    6. '[level' → logprob: -12.938337326049805
    7. '	level' → logprob: -14.188337326049805
    8. ' ' → logprob: -14.813337326049805
    9. ' lv' → logprob: -15.313337326049805
    10. 'lv' → logprob: -15.563337326049805

Token 143: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.875000953674316
    3. 'to' → logprob: -15.250000953674316
    4. '[
' → logprob: -17.25
    5. '[from' → logprob: -18.5
    6. 'of' → logprob: -18.625
    7. ' [' → logprob: -18.625
    8. '
' → logprob: -19.625
    9. '[it' → logprob: -19.625
    10. '[now' → logprob: -20.625

Token 144: ']<' (ID: 80424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3559407591819763
    2. '[' → logprob: -1.855940818786621
    3. '==-' → logprob: -3.105940818786621
    4. '[v' → logprob: -3.605940818786621
    5. ']==' → logprob: -4.105940818786621
    6. ' <' → logprob: -4.105940818786621
    7. '[to' → logprob: -4.105940818786621
    8. ']<' → logprob: -4.855940818786621
    9. ']' → logprob: -5.105940818786621
    10. '<v' → logprob: -6.480940818786621

Token 145: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.750001907348633
    3. '۰' → logprob: -14.750001907348633
    4. '０' → logprob: -15.625001907348633
    5. '```' → logprob: -16.375001907348633
    6. '
' → logprob: -18.875001907348633
    7. '   ' → logprob: -19.000001907348633
    8. '٠' → logprob: -19.125001907348633
    9. ' ' → logprob: -19.375001907348633
    10. '০' → logprob: -19.875001907348633

Token 146: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2535953223705292
    2. ':
' → logprob: -1.5035953521728516
    3. ' and' → logprob: -7.753595352172852
    4. '                   ' → logprob: -7.878595352172852
    5. '               ' → logprob: -8.003595352172852
    6. '):
' → logprob: -9.128595352172852
    7. '                       ' → logprob: -9.378595352172852
    8. '<|end|>' → logprob: -9.378595352172852
    9. ' :' → logprob: -10.253595352172852
    10. ':

' → logprob: -10.378595352172852

Token 147: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.014250003732740879
    2. '               ' → logprob: -4.639249801635742
    3. '                       ' → logprob: -5.889249801635742
    4. '           ' → logprob: -7.639249801635742
    5. '[level' → logprob: -8.139249801635742
    6. ' level' → logprob: -8.389249801635742
    7. '                ' → logprob: -8.639249801635742
    8. '                    
' → logprob: -9.014249801635742
    9. '                    ' → logprob: -9.264249801635742
    10. '                  ' → logprob: -10.014249801635742

Token 148: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' (adapté à ' level') → logprob: -0.00231012306176126
    2. ' level' → logprob: -6.127310276031494
    3. '                   ' → logprob: -9.627309799194336
    4. '[level' → logprob: -10.627309799194336
    5. '	level' → logprob: -10.752309799194336
    6. '                       ' → logprob: -11.752309799194336
    7. '(level' → logprob: -13.002309799194336
    8. '               ' → logprob: -13.877309799194336
    9. '                    ' → logprob: -14.502309799194336
    10. '
' → logprob: -15.002309799194336

Token 149: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -1.3856492842023727e-06
    2. 'to' → logprob: -13.625000953674316
    3. '=' → logprob: -17.750001907348633
    4. '[' → logprob: -17.875001907348633
    5. '[
' → logprob: -18.000001907348633
    6. '[from' → logprob: -18.125001907348633
    7. '
' → logprob: -18.875001907348633
    8. ' [' → logprob: -19.375001907348633
    9. '[temp' → logprob: -19.375001907348633
    10. '```' → logprob: -19.500001907348633

Token 150: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.011143672280013561
    2. ']' → logprob: -4.511143684387207
    3. '=' → logprob: -9.886143684387207
    4. ']=-' → logprob: -10.886143684387207
    5. ']+=' → logprob: -11.636143684387207
    6. ' ]' → logprob: -12.011143684387207
    7. ')=' → logprob: -12.136143684387207
    8. ']=(' → logprob: -12.511143684387207
    9. ']={' → logprob: -14.386143684387207
    10. '"]=' → logprob: -14.761143684387207

Token 151: 'lv' (ID: 33940)
  Prédit: 'lv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lv' → logprob: -0.0011717714369297028
    2. ' lv' → logprob: -6.751171588897705
    3. '_lv' → logprob: -13.751172065734863
    4. '
' → logprob: -16.001171112060547
    5. 'lvl' → logprob: -16.626171112060547
    6. 'Lv' → logprob: -16.751171112060547
    7. 'LV' → logprob: -17.126171112060547
    8. 'rv' → logprob: -17.251171112060547
    9. 'lav' → logprob: -17.751171112060547
    10. 'nv' → logprob: -17.876171112060547

Token 152: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006276432890444994
    2. 'q' → logprob: -5.131276607513428
    3. ' q' → logprob: -9.13127613067627
    4. '               ' → logprob: -9.13127613067627
    5. '                       ' → logprob: -9.50627613067627
    6. '           ' → logprob: -11.38127613067627
    7. ',q' → logprob: -11.50627613067627
    8. ',' → logprob: -11.63127613067627
    9. '                  ' → logprob: -12.63127613067627
    10. '				' → logprob: -12.75627613067627

Token 153: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.477153480052948
    2. 'q' → logprob: -0.977153480052948
    3. '                       ' → logprob: -6.352153301239014
    4. ' q' → logprob: -7.352153301239014
    5. '               ' → logprob: -7.727153301239014
    6. '	q' → logprob: -9.977153778076172
    7. '           ' → logprob: -10.102153778076172
    8. '                  ' → logprob: -10.227153778076172
    9. '                    ' → logprob: -10.727153778076172
    10. ',q' → logprob: -11.227153778076172

Token 154: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -1.5048530030981055e-06
    2. ' q' → logprob: -14.125001907348633
    3. '                   ' → logprob: -14.250001907348633
    4. '	q' → logprob: -16.875001907348633
    5. '                       ' → logprob: -17.750001907348633
    6. '```' → logprob: -20.000001907348633
    7. '               ' → logprob: -20.125001907348633
    8. '   ' → logprob: -20.750001907348633
    9. '
' → logprob: -20.875001907348633
    10. '                           ' → logprob: -20.875001907348633

Token 155: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00027134892297908664
    2. '.' → logprob: -8.375271797180176
    3. '.app' → logprob: -11.125271797180176
    4. '.enqueue' → logprob: -11.375271797180176
    5. '.extend' → logprob: -12.375271797180176
    6. ' .' → logprob: -13.250271797180176
    7. '>.' → logprob: -13.375271797180176
    8. '.add' → logprob: -13.750271797180176
    9. '.ap' → logprob: -13.750271797180176
    10. '.Append' → logprob: -13.875271797180176

Token 156: '(to' (ID: 24042)
  Prédit: '(to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(to' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.250001907348633
    3. 'to' → logprob: -15.500001907348633
    4. ' (' → logprob: -18.750001907348633
    5. '((' → logprob: -19.125001907348633
    6. ',to' → logprob: -19.125001907348633
    7. '(To' → logprob: -19.250001907348633
    8. '(the' → logprob: -19.375001907348633
    9. '(t' → logprob: -19.625001907348633
    10. '[to' → logprob: -20.625001907348633

Token 157: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007401806069537997
    2. ')
' → logprob: -7.250740051269531
    3. '])' → logprob: -10.875740051269531
    4. ' )' → logprob: -12.125740051269531
    5. '))' → logprob: -12.875740051269531
    6. '）' → logprob: -14.000740051269531
    7. ')return' → logprob: -14.750740051269531
    8. ']' → logprob: -15.125740051269531
    9. ')`' → logprob: -15.250740051269531
    10. ')
' → logprob: -15.250740051269531

Token 158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011723510921001434
    2. '   ' → logprob: -5.136723518371582
    3. '           ' → logprob: -5.886723518371582
    4. '<|end|>' → logprob: -6.636723518371582
    5. '               ' → logprob: -7.761723518371582
    6. '                   ' → logprob: -7.886723518371582
    7. 'def' → logprob: -8.386723518371582
    8. '
' → logprob: -8.636723518371582
    9. 'return' → logprob: -8.886723518371582
    10. ')' → logprob: -9.011723518371582

Token 159: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.010272085666656494
    2. ' return' → logprob: -5.135272026062012
    3. '   ' → logprob: -6.135272026062012
    4. '       ' → logprob: -6.760272026062012
    5. 'def' → logprob: -7.635272026062012
    6. '
' → logprob: -9.510272026062012
    7. ':return' → logprob: -9.510272026062012
    8. '           ' → logprob: -9.635272026062012
    9. '	return' → logprob: -9.635272026062012
    10. ')' → logprob: -9.635272026062012

Token 160: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.10033250600099564
    2. ' level' → logprob: -2.350332498550415
    3. '(level' → logprob: -9.350332260131836
    4. 'True' → logprob: -11.225332260131836
    5. 'bool' → logprob: -11.850332260131836
    6. '[level' → logprob: -12.100332260131836
    7. '	level' → logprob: -12.225332260131836
    8. 'Level' → logprob: -13.100332260131836
    9. ' True' → logprob: -13.850332260131836
    10. 'len' → logprob: -14.225332260131836

Token 161: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.0076886131428182125
    2. '<|end|>' → logprob: -4.882688522338867
    3. '<t' → logprob: -10.382688522338867
    4. 't' → logprob: -11.007688522338867
    5. ',t' → logprob: -11.007688522338867
    6. '[T' → logprob: -11.257688522338867
    7. '[to' → logprob: -13.257688522338867
    8. '[' → logprob: -14.007688522338867
    9. '[end' → logprob: -14.382688522338867
    10. ' t' → logprob: -15.007688522338867

Token 162: ']>=' (ID: 185954)
  Prédit: ']>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>=' → logprob: -0.12781569361686707
    2. ']' → logprob: -2.1278157234191895
    3. ']>' → logprob: -7.1278157234191895
    4. ')>=' → logprob: -10.377815246582031
    5. ']!=' → logprob: -10.502815246582031
    6. ' ]' → logprob: -11.252815246582031
    7. '>=' → logprob: -11.877815246582031
    8. '"]' → logprob: -12.627815246582031
    9. '">' → logprob: -14.127815246582031
    10. '])' → logprob: -14.502815246582031

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '۰' → logprob: -17.875051498413086
    4. '０' → logprob: -18.750051498413086
    5. '00' → logprob: -20.500051498413086
    6. '   ' → logprob: -21.250051498413086
    7. '000' → logprob: -21.500051498413086
    8. ' ' → logprob: -21.750051498413086
    9. '```' → logprob: -21.750051498413086
    10. '1' → logprob: -21.875051498413086

Token 164: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005824613617733121
    2. 'def' → logprob: -8.500582695007324
    3. ' def' → logprob: -8.875582695007324
    4. '  ' → logprob: -9.250582695007324
    5. '    
' → logprob: -10.125582695007324
    6. '<|end|>' → logprob: -10.250582695007324
    7. '    ' → logprob: -10.750582695007324
    8. '
' → logprob: -11.125582695007324
    9. '	def' → logprob: -11.375582695007324
    10. ')' → logprob: -12.750582695007324

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03453204780817032
    2. 'def' → logprob: -3.409532070159912
    3. '
' → logprob: -8.034531593322754
    4. ' def' → logprob: -8.159531593322754
    5. '<|end|>' → logprob: -9.034531593322754
    6. '	def' → logprob: -9.409531593322754
    7. '    
' → logprob: -9.784531593322754
    8. '  ' → logprob: -12.784531593322754
    9. '<|end|>' → logprob: -12.784531593322754
    10. ' 
' → logprob: -13.159531593322754

Token 166: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01733122020959854
    2. ' def' → logprob: -4.642331123352051
    3. '   ' → logprob: -4.892331123352051
    4. '	def' → logprob: -10.39233112335205
    5. '
' → logprob: -12.26733112335205
    6. '  ' → logprob: -12.51733112335205
    7. ' ' → logprob: -13.01733112335205
    8. '<|end|>' → logprob: -14.39233112335205
    9. '    
' → logprob: -15.01733112335205
    10. 'ndef' → logprob: -15.64233112335205

Token 167: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.20159946382045746
    2. 'dfs' → logprob: -1.7015994787216187
    3. 'din' → logprob: -9.57659912109375
    4. 'def' → logprob: -10.07659912109375
    5. ' din' → logprob: -11.07659912109375
    6. '_d' → logprob: -11.20159912109375
    7. '```' → logprob: -11.45159912109375
    8. 's' → logprob: -11.70159912109375
    9. '   ' → logprob: -11.82659912109375
    10. '

' → logprob: -12.70159912109375

Token 168: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.927930654550437e-05
    2. '(' → logprob: -10.500029563903809
    3. '(
' → logprob: -14.500029563903809
    4. '(s' → logprob: -14.625029563903809
    5. 'self' → logprob: -15.000029563903809
    6. 'def' → logprob: -15.625029563903809
    7. '	self' → logprob: -16.375028610229492
    8. '   ' → logprob: -16.625028610229492
    9. ' (' → logprob: -16.625028610229492
    10. '<|end|>' → logprob: -17.250028610229492

Token 169: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.46781089901924133
    2. ',s' → logprob: -1.717810869216919
    3. ',' → logprob: -2.217810869216919
    4. ',self' → logprob: -2.467810869216919
    5. 'self' → logprob: -7.967811107635498
    6. ',t' → logprob: -9.84281063079834
    7. ' ,' → logprob: -10.46781063079834
    8. ',d' → logprob: -10.59281063079834
    9. ',node' → logprob: -10.96781063079834
    10. ',n' → logprob: -11.34281063079834

Token 170: ',t' (ID: 26927)
  Prédit: ',s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',s' → logprob: -0.3424232006072998
    2. ',' → logprob: -1.3424232006072998
    3. ',t' → logprob: -3.5924232006073
    4. ' ,' → logprob: -7.842423439025879
    5. ',u' → logprob: -7.967423439025879
    6. ',d' → logprob: -8.967423439025879
    7. ',k' → logprob: -9.342423439025879
    8. ',self' → logprob: -10.092423439025879
    9. ',v' → logprob: -10.092423439025879
    10. ',l' → logprob: -10.092423439025879

Token 171: ',f' (ID: 38733)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03986726701259613
    2. ',l' → logprob: -3.2898671627044678
    3. ',p' → logprob: -6.414867401123047
    4. ',i' → logprob: -10.539867401123047
    5. ',f' → logprob: -10.789867401123047
    6. ' ,' → logprob: -10.789867401123047
    7. ',d' → logprob: -11.164867401123047
    8. ',int' → logprob: -11.289867401123047
    9. ',x' → logprob: -11.289867401123047
    10. ',v' → logprob: -11.414867401123047

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6010339856147766
    2. ',int' → logprob: -1.4760339260101318
    3. ',l' → logprob: -2.476033926010132
    4. ',f' → logprob: -2.976033926010132
    5. ',r' → logprob: -3.476033926010132
    6. ',n' → logprob: -3.726033926010132
    7. ',u' → logprob: -4.851034164428711
    8. ',w' → logprob: -5.601034164428711
    9. ',v' → logprob: -5.726034164428711
    10. ',c' → logprob: -6.101034164428711

Token 173: 'level' (ID: 6164)
  Prédit: 'level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -1.318681188422488e-05
    2. ' level' → logprob: -11.25001335144043
    3. 'l' → logprob: -17.25001335144043
    4. 'flow' → logprob: -17.37501335144043
    5. '[level' → logprob: -17.50001335144043
    6. 'layer' → logprob: -17.75001335144043
    7. '	level' → logprob: -17.87501335144043
    8. '   ' → logprob: -18.12501335144043
    9. 'lvl' → logprob: -18.12501335144043
    10. '  ' → logprob: -18.37501335144043

Token 174: ',it' (ID: 133769)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0489543080329895
    2. ',p' → logprob: -3.0489542484283447
    3. ',i' → logprob: -8.923954010009766
    4. ',int' → logprob: -10.423954010009766
    5. ',it' → logprob: -10.423954010009766
    6. ',pos' → logprob: -10.548954010009766
    7. ',parent' → logprob: -10.548954010009766
    8. ',index' → logprob: -10.673954010009766
    9. ',l' → logprob: -10.798954010009766
    10. ',array' → logprob: -11.173954010009766

Token 175: '):
' (ID: 1883)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6658457517623901
    2. '):
' → logprob: -1.0408457517623901
    3. '):' → logprob: -2.4158458709716797
    4. ',' → logprob: -3.5408458709716797
    5. 'ers' → logprob: -4.29084587097168
    6. '):

' → logprob: -8.04084587097168
    7. 's' → logprob: -8.91584587097168
    8. '):
' → logprob: -9.29084587097168
    9. 'r' → logprob: -9.79084587097168
    10. ']:' → logprob: -9.79084587097168

Token 176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03815613314509392
    2. '   ' → logprob: -4.163156032562256
    3. ' if' → logprob: -4.413156032562256
    4. 'if' → logprob: -4.663156032562256
    5. '	if' → logprob: -8.413156509399414
    6. '    ' → logprob: -9.413156509399414
    7. '	' → logprob: -11.788156509399414
    8. '	   ' → logprob: -12.288156509399414
    9. '           ' → logprob: -12.788156509399414
    10. '      ' → logprob: -13.163156509399414

Token 177: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.019076790660619736
    2. ' if' → logprob: -4.019076824188232
    3. '       ' → logprob: -7.019076824188232
    4. '   ' → logprob: -10.894076347351074
    5. '	if' → logprob: -11.394076347351074
    6. '
' → logprob: -14.019076347351074
    7. '           ' → logprob: -14.394076347351074
    8. '    ' → logprob: -14.644076347351074
    9. 'If' → logprob: -16.14407730102539
    10. '        
' → logprob: -16.89407730102539

Token 178: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00026181264547631145
    2. ' v' → logprob: -8.250262260437012
    3. '_v' → logprob: -15.125262260437012
    4. '	v' → logprob: -15.250262260437012
    5. ')v' → logprob: -17.000261306762695
    6. '   ' → logprob: -18.000261306762695
    7. '<v' → logprob: -19.375261306762695
    8. ' ' → logprob: -19.500261306762695
    9. '$v' → logprob: -19.750261306762695
    10. ',v' → logprob: -20.000261306762695

Token 179: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.008615988306701183
    2. ' ==' → logprob: -4.758615970611572
    3. '==
' → logprob: -14.38361644744873
    4. ')==' → logprob: -14.63361644744873
    5. ']==' → logprob: -15.38361644744873
    6. '=' → logprob: -15.38361644744873
    7. '==(' → logprob: -16.883615493774414
    8. 't' → logprob: -17.508615493774414
    9. '===' → logprob: -18.008615493774414
    10. ')' → logprob: -18.258615493774414

Token 180: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0001238004770129919
    2. ' t' → logprob: -9.000123977661133
    3. '`t' → logprob: -15.875123977661133
    4. '	t' → logprob: -16.500123977661133
    5. '   ' → logprob: -17.750123977661133
    6. ')t' → logprob: -19.250123977661133
    7. '<|end|>' → logprob: -19.625123977661133
    8. ' ' → logprob: -20.000123977661133
    9. '
' → logprob: -20.125123977661133
    10. '  ' → logprob: -20.625123977661133

Token 181: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7949867248535156
    2. ':' → logprob: -1.2949867248535156
    3. ':return' → logprob: -1.2949867248535156
    4. ' or' → logprob: -7.544986724853516
    5. ':
' → logprob: -10.419986724853516
    6. 'return' → logprob: -10.669986724853516
    7. '       ' → logprob: -11.419986724853516
    8. '           ' → logprob: -11.919986724853516
    9. '{return' → logprob: -12.919986724853516
    10. '   ' → logprob: -13.294986724853516

Token 182: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6352055072784424
    2. '
' → logprob: -1.2602055072784424
    3. ' return' → logprob: -1.8852055072784424
    4. ':return' → logprob: -4.010205268859863
    5. '       ' → logprob: -4.385205268859863
    6. '   ' → logprob: -6.635205268859863
    7. '	return' → logprob: -7.135205268859863
    8. '{return' → logprob: -7.260205268859863
    9. '<|end|>' → logprob: -7.635205268859863
    10. '           ' → logprob: -7.760205268859863

Token 183: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01135714165866375
    2. ' return' → logprob: -4.511357307434082
    3. '           ' → logprob: -8.261357307434082
    4. '
' → logprob: -10.636357307434082
    5. '       ' → logprob: -11.136357307434082
    6. ':return' → logprob: -11.886357307434082
    7. '{return' → logprob: -13.511357307434082
    8. '	return' → logprob: -13.886357307434082
    9. ')return' → logprob: -14.136357307434082
    10. '   ' → logprob: -14.261357307434082

Token 184: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0015023599844425917
    2. ' f' → logprob: -6.501502513885498
    3. '	f' → logprob: -17.251502990722656
    4. ' ' → logprob: -22.501502990722656
    5. '\f' → logprob: -22.751502990722656
    6. '   ' → logprob: -23.626502990722656
    7. '
' → logprob: -23.876502990722656
    8. '<f' → logprob: -24.001502990722656
    9. ''f' → logprob: -24.251502990722656
    10. '_f' → logprob: -24.251502990722656

Token 185: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.000988030806183815
    2. '       ' → logprob: -7.125988006591797
    3. '
' → logprob: -10.000988006591797
    4. '<|end|>' → logprob: -10.000988006591797
    5. ' 
' → logprob: -10.250988006591797
    6. '        
' → logprob: -10.625988006591797
    7. '0' → logprob: -11.875988006591797
    8. '    
' → logprob: -11.875988006591797
    9. '  
' → logprob: -12.250988006591797
    10. '   ' → logprob: -12.250988006591797

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35897594690322876
    2. 'if' → logprob: -1.483975887298584
    3. '   ' → logprob: -3.483975887298584
    4. 'for' → logprob: -3.733975887298584
    5. ' if' → logprob: -4.858975887298584
    6. 'while' → logprob: -5.858975887298584
    7. '           ' → logprob: -6.108975887298584
    8. 'd' → logprob: -6.608975887298584
    9. ' for' → logprob: -7.108975887298584
    10. 'min' → logprob: -7.358975887298584

Token 187: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.577572762966156
    2. 'while' (adapté à ' while') → logprob: -0.827572762966156
    3. ' while' → logprob: -6.702572822570801
    4. ' for' → logprob: -8.2025728225708
    5. 'l' → logprob: -9.5775728225708
    6. '	while' → logprob: -11.3275728225708
    7. 'it' → logprob: -11.4525728225708
    8. '
' → logprob: -11.8275728225708
    9. 'size' → logprob: -12.0775728225708
    10. 'i' → logprob: -12.3275728225708

Token 188: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.06196869537234306
    2. ' it' → logprob: -2.8119688034057617
    3. '	it' → logprob: -15.186968803405762
    4. '_it' → logprob: -15.436968803405762
    5. 'It' → logprob: -15.811968803405762
    6. '(it' → logprob: -15.936968803405762
    7. ' ' → logprob: -16.061967849731445
    8. '1' → logprob: -16.311967849731445
    9. '[it' → logprob: -16.561967849731445
    10. '
' → logprob: -18.186967849731445

Token 189: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.392202976712724e-06
    2. '<v' → logprob: -12.750006675720215
    3. 'v' → logprob: -13.000006675720215
    4. '[' → logprob: -14.250006675720215
    5. '[it' → logprob: -15.500006675720215
    6. '	v' → logprob: -16.5000057220459
    7. '[V' → logprob: -16.8750057220459
    8. '[
' → logprob: -17.0000057220459
    9. '[i' → logprob: -17.1250057220459
    10. '
' → logprob: -17.3750057220459

Token 190: ']<' (ID: 80424)
  Prédit: ']<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']<' → logprob: -0.4835936725139618
    2. ']' → logprob: -1.1085937023162842
    3. '<' → logprob: -3.733593702316284
    4. '<len' → logprob: -3.733593702316284
    5. '[' → logprob: -5.233593463897705
    6. ' <' → logprob: -9.358593940734863
    7. '<n' → logprob: -10.608593940734863
    8. ' ]' → logprob: -10.608593940734863
    9. '<v' → logprob: -10.733593940734863
    10. '][' → logprob: -10.983593940734863

Token 191: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0564331205387134e-05
    2. ' len' → logprob: -11.50001049041748
    3. '(len' → logprob: -15.12501049041748
    4. '	len' → logprob: -17.125011444091797
    5. '=len' → logprob: -17.125011444091797
    6. '<len' → logprob: -17.625011444091797
    7. ',len' → logprob: -18.500011444091797
    8. '[len' → logprob: -18.750011444091797
    9. ' ' → logprob: -22.125011444091797
    10. '   ' → logprob: -22.125011444091797

Token 192: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000204851632588543
    2. 'self' → logprob: -8.500205039978027
    3. '(' → logprob: -14.250205039978027
    4. '[self' → logprob: -14.875205039978027
    5. ' self' → logprob: -15.500205039978027
    6. '=self' → logprob: -16.25020408630371
    7. '(this' → logprob: -17.12520408630371
    8. 's' → logprob: -18.25020408630371
    9. '	self' → logprob: -18.37520408630371
    10. ',self' → logprob: -18.50020408630371

Token 193: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.0002302383363712579
    2. '.' → logprob: -8.875229835510254
    3. 'g' → logprob: -9.625229835510254
    4. 'self' → logprob: -11.375229835510254
    5. ' .' → logprob: -11.875229835510254
    6. '```' → logprob: -13.250229835510254
    7. ').' → logprob: -14.625229835510254
    8. '.v' → logprob: -14.625229835510254
    9. '[g' → logprob: -14.750229835510254
    10. '
' → logprob: -15.125229835510254

Token 194: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.5451681974809617e-05
    2. 'v' → logprob: -11.125015258789062
    3. ')v' → logprob: -14.875015258789062
    4. ')' → logprob: -16.500015258789062
    5. '```' → logprob: -17.125015258789062
    6. '[self' → logprob: -17.125015258789062
    7. '[' → logprob: -17.250015258789062
    8. '	v' → logprob: -17.375015258789062
    9. '(v' → logprob: -17.625015258789062
    10. '<v' → logprob: -17.625015258789062

Token 195: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.6133508682250977
    2. ']):
' → logprob: -1.7383508682250977
    3. '[v' → logprob: -1.9883508682250977
    4. '):' → logprob: -2.6133508682250977
    5. '):
' → logprob: -2.8633508682250977
    6. ')' → logprob: -4.738350868225098
    7. ']' → logprob: -5.988350868225098
    8. '])' → logprob: -6.238350868225098
    9. '       ' → logprob: -7.488350868225098
    10. ')]' → logprob: -7.988350868225098

Token 196: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011355733498930931
    2. '       ' → logprob: -5.136355876922607
    3. '   ' → logprob: -6.386355876922607
    4. '	       ' → logprob: -7.261355876922607
    5. '               ' → logprob: -7.386355876922607
    6. 'i' → logprob: -7.761355876922607
    7. '            
' → logprob: -8.26135540008545
    8. 's' → logprob: -8.76135540008545
    9. '```' → logprob: -8.76135540008545
    10. '
' → logprob: -9.01135540008545

Token 197: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.005767734721302986
    2. '           ' → logprob: -5.380767822265625
    3. ' to' → logprob: -6.880767822265625
    4. '               ' → logprob: -9.755767822265625
    5. 'i' → logprob: -11.005767822265625
    6. 'b' → logprob: -11.130767822265625
    7. ',to' → logprob: -11.255767822265625
    8. 't' → logprob: -12.380767822265625
    9. 'e' → logprob: -12.380767822265625
    10. '   ' → logprob: -12.630767822265625

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038126640021800995
    2. ',c' → logprob: -3.2881267070770264
    3. ',self' → logprob: -10.538126945495605
    4. 'cap' → logprob: -11.038126945495605
    5. ' ,' → logprob: -11.038126945495605
    6. ',b' → logprob: -12.538126945495605
    7. ',val' → logprob: -13.038126945495605
    8. ',C' → logprob: -13.038126945495605
    9. ',pos' → logprob: -13.038126945495605
    10. ',col' → logprob: -13.288126945495605

Token 199: 'cap' (ID: 15558)
  Prédit: 'cap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -4.0126840758603066e-05
    2. ' cap' → logprob: -10.875040054321289
    3. 'capacity' → logprob: -11.750040054321289
    4. ',' → logprob: -11.875040054321289
    5. '(cap' → logprob: -13.000040054321289
    6. 'self' → logprob: -13.125040054321289
    7. 'c' → logprob: -14.125040054321289
    8. 'capac' → logprob: -14.750040054321289
    9. '   ' → logprob: -15.375040054321289
    10. 'cost' → logprob: -15.500040054321289

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14321330189704895
    2. ',self' → logprob: -2.8932132720947266
    3. ',c' → logprob: -3.0182132720947266
    4. ',it' → logprob: -5.018213272094727
    5. ',pos' → logprob: -5.268213272094727
    6. ',d' → logprob: -5.643213272094727
    7. ',val' → logprob: -5.893213272094727
    8. ',w' → logprob: -6.018213272094727
    9. ',status' → logprob: -7.018213272094727
    10. ',opt' → logprob: -7.268213272094727

Token 201: 'rev' (ID: 25656)
  Prédit: 'rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.0010375719284638762
    2. 'self' → logprob: -6.87603759765625
    3. ' rev' → logprob: -12.87603759765625
    4. '_rev' → logprob: -14.12603759765625
    5. ' self' → logprob: -14.50103759765625
    6. 'rep' → logprob: -14.87603759765625
    7. 'rew' → logprob: -15.62603759765625
    8. 'cap' → logprob: -16.25103759765625
    9. '.rev' → logprob: -16.25103759765625
    10. '```' → logprob: -17.25103759765625

Token 202: '=self' (ID: 16945)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12716296315193176
    2. '=self' → logprob: -2.3771629333496094
    3. ' =' → logprob: -3.6271629333496094
    4. '=_' → logprob: -13.00216293334961
    5. ')=' → logprob: -14.37716293334961
    6. ']=' → logprob: -14.50216293334961
    7. 'self' → logprob: -15.00216293334961
    8. '=
' → logprob: -15.25216293334961
    9. '=this' → logprob: -15.62716293334961
    10. '=

' → logprob: -16.25216293334961

Token 203: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -5.538490950129926e-05
    2. 'g' → logprob: -10.000055313110352
    3. 'self' → logprob: -11.750055313110352
    4. '.' → logprob: -13.375055313110352
    5. '_g' → logprob: -15.500055313110352
    6. '```' → logprob: -16.12505531311035
    7. ' .' → logprob: -17.50005531311035
    8. '.s' → logprob: -17.87505531311035
    9. '[g' → logprob: -18.12505531311035

Token 204: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -8.53050296427682e-05
    2. 'v' → logprob: -9.37508487701416
    3. '[self' → logprob: -15.25008487701416
    4. 'self' → logprob: -16.500085830688477
    5. '[g' → logprob: -16.875085830688477
    6. ' v' → logprob: -17.375085830688477
    7. 'g' → logprob: -17.375085830688477
    8. '<v' → logprob: -18.000085830688477
    9. '	v' → logprob: -18.375085830688477
    10. '[' → logprob: -18.625085830688477

Token 205: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5789194107055664
    2. '[v' → logprob: -0.8289194107055664
    3. 'v' → logprob: -5.828919410705566
    4. ']' → logprob: -10.828919410705566
    5. '	v' → logprob: -12.328919410705566
    6. ' v' → logprob: -12.578919410705566
    7. '[' → logprob: -12.703919410705566
    8. 's' → logprob: -14.453919410705566
    9. ' ][' → logprob: -14.578919410705566
    10. '```' → logprob: -14.953919410705566

Token 206: 'it' (ID: 278)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.2961512513575144e-05
    2. '[v' → logprob: -10.750022888183594
    3. ' v' → logprob: -13.625022888183594
    4. '	v' → logprob: -15.375022888183594
    5. ')v' → logprob: -17.375022888183594
    6. 'vq' → logprob: -19.000022888183594
    7. '
' → logprob: -19.250022888183594
    8. '   ' → logprob: -19.875022888183594
    9. ',v' → logprob: -19.875022888183594
    10. '(v' → logprob: -19.875022888183594

Token 207: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.07892294228076935
    2. 'v' → logprob: -2.578922986984253
    3. '	v' → logprob: -11.328923225402832
    4. '][' → logprob: -11.828923225402832
    5. ']' → logprob: -11.953923225402832
    6. ' v' → logprob: -12.453923225402832
    7. '<v' → logprob: -13.953923225402832
    8. '-v' → logprob: -14.703923225402832
    9. ')v' → logprob: -14.828923225402832
    10. '[' → logprob: -14.953923225402832

Token 208: ']]
' (ID: 29446)
  Prédit: ']]['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']][' → logprob: -0.6376379728317261
    2. '][' → logprob: -1.637637972831726
    3. ']' → logprob: -1.762637972831726
    4. ']]' → logprob: -2.2626380920410156
    5. ']]
' → logprob: -7.887638092041016
    6. ']
' → logprob: -8.262638092041016
    7. ')][' → logprob: -8.262638092041016
    8. ']+' → logprob: -9.387638092041016
    9. ']].' → logprob: -9.387638092041016
    10. ']}' → logprob: -10.637638092041016

Token 209: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002348292153328657
    2. '<|end|>' → logprob: -6.75234842300415
    3. '            
' → logprob: -7.75234842300415
    4. '	       ' → logprob: -9.127347946166992
    5. '               ' → logprob: -9.127347946166992
    6. '       ' → logprob: -9.252347946166992
    7. ' if' → logprob: -9.252347946166992
    8. 'if' → logprob: -9.377347946166992
    9. '<|end|>' → logprob: -9.752347946166992
    10. '		' → logprob: -10.002347946166992

Token 210: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32134437561035156
    2. ' if' → logprob: -1.4463443756103516
    3. 'if' (adapté à ' if') → logprob: -3.4463443756103516
    4. '       ' → logprob: -5.446344375610352
    5. '   ' → logprob: -6.446344375610352
    6. '               ' → logprob: -7.196344375610352
    7. '	if' → logprob: -7.946344375610352
    8. '	       ' → logprob: -8.196344375610352
    9. '	   ' → logprob: -9.571344375610352
    10. '		' → logprob: -9.571344375610352

Token 211: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.17976164817810059
    2. ' cap' → logprob: -1.8047616481781006
    3. '(cap' → logprob: -11.42976188659668
    4. ' ' → logprob: -13.42976188659668
    5. 'capacity' → logprob: -13.92976188659668
    6. 'level' → logprob: -14.05476188659668
    7. '  ' → logprob: -14.67976188659668
    8. ' capacity' → logprob: -14.80476188659668
    9. ' capa' → logprob: -15.05476188659668
    10. 'capac' → logprob: -15.05476188659668

Token 212: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.07925029844045639
    2. ' >' → logprob: -2.7042503356933594
    3. ' and' → logprob: -4.704250335693359
    4. 'and' → logprob: -8.45425033569336
    5. '()>' → logprob: -15.45425033569336
    6. '&gt' → logprob: -15.95425033569336
    7. '">' → logprob: -16.32925033569336
    8. ' ' → logprob: -16.45425033569336
    9. '>=' → logprob: -16.45425033569336
    10. ')>' → logprob: -16.57925033569336

Token 213: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '>' → logprob: -19.00037956237793
    4. '  ' → logprob: -19.75037956237793
    5. '   ' → logprob: -20.00037956237793
    6. 'and' → logprob: -20.12537956237793
    7. '=' → logprob: -20.25037956237793
    8. '```' → logprob: -20.50037956237793
    9. '
' → logprob: -20.75037956237793
    10. ' and' → logprob: -21.31287956237793

Token 214: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04859134554862976
    2. 'and' → logprob: -3.048591375350952
    3. '           ' → logprob: -13.298591613769531
    4. '               ' → logprob: -13.798591613769531
    5. '            ' → logprob: -14.548591613769531
    6. '	and' → logprob: -15.048591613769531
    7. ' ' → logprob: -16.17359161376953
    8. '                ' → logprob: -16.29859161376953
    9. '                   ' → logprob: -16.92359161376953
    10. '   ' → logprob: -17.42359161376953

Token 215: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.011048528365790844
    2. ' level' → logprob: -4.511048316955566
    3. '(level' → logprob: -14.636048316955566
    4. '	level' → logprob: -15.136048316955566
    5. '[level' → logprob: -16.511049270629883
    6. '           ' → logprob: -19.011049270629883
    7. 'Level' → logprob: -20.011049270629883
    8. '-level' → logprob: -20.136049270629883
    9. '   ' → logprob: -20.261049270629883
    10. '.level' → logprob: -20.261049270629883

Token 216: '[v' (ID: 36561)
  Prédit: '[to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.017792830243706703
    2. '[v' → logprob: -4.392792701721191
    3. 'to' → logprob: -5.267792701721191
    4. 'v' → logprob: -9.142792701721191
    5. '(to' → logprob: -13.142792701721191
    6. ' to' → logprob: -13.142792701721191
    7. '[' → logprob: -14.517792701721191
    8. '	to' → logprob: -15.017792701721191
    9. '```' → logprob: -15.017792701721191
    10. ' [' → logprob: -15.142792701721191

Token 217: ']<' (ID: 80424)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.14099465310573578
    2. ']' → logprob: -2.3909945487976074
    3. ']<' → logprob: -3.5159945487976074
    4. ']==' → logprob: -4.640994548797607
    5. '[v' → logprob: -7.765994548797607
    6. '[' → logprob: -9.765995025634766
    7. '+' → logprob: -9.890995025634766
    8. '<' → logprob: -10.640995025634766
    9. '<v' → logprob: -12.015995025634766
    10. '[to' → logprob: -12.140995025634766

Token 218: 'level' (ID: 6164)
  Prédit: 'level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -2.045823566731997e-05
    2. ' level' → logprob: -10.875020027160645
    3. '[level' → logprob: -13.625020027160645
    4. '	level' → logprob: -16.12502098083496
    5. 'to' → logprob: -16.87502098083496
    6. '(level' → logprob: -17.00002098083496
    7. '<|end|>' → logprob: -18.37502098083496
    8. '
' → logprob: -18.50002098083496
    9. ' ' → logprob: -19.00002098083496
    10. '.level' → logprob: -19.00002098083496

Token 219: '[to' (ID: 139069)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0005577972042374313
    2. '[to' → logprob: -7.500557899475098
    3. ' to' → logprob: -12.250557899475098
    4. '	to' → logprob: -18.12555694580078
    5. '(to' → logprob: -18.25055694580078
    6. '[' → logprob: -19.00055694580078
    7. '.to' → logprob: -20.62555694580078
    8. ',to' → logprob: -21.75055694580078
    9. '_to' → logprob: -21.87555694580078
    10. 'To' → logprob: -22.12555694580078

Token 220: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.23427395522594452
    2. ':' → logprob: -1.609273910522461
    3. ']:
' → logprob: -5.609273910522461
    4. '               ' → logprob: -5.984273910522461
    5. ' and' → logprob: -6.859273910522461
    6. ']:' → logprob: -7.609273910522461
    7. '):
' → logprob: -7.984273910522461
    8. ' :
' → logprob: -8.609273910522461
    9. 'and' → logprob: -8.609273910522461
    10. '           ' → logprob: -8.734273910522461

Token 221: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006103330524638295
    2. '           ' → logprob: -8.3756103515625
    3. '                ' → logprob: -9.3756103515625
    4. '            ' → logprob: -9.7506103515625
    5. '                
' → logprob: -9.7506103515625
    6. ' 
' → logprob: -10.7506103515625
    7. ' ' → logprob: -11.1256103515625
    8. '              ' → logprob: -11.1256103515625
    9. '   ' → logprob: -11.1256103515625
    10. ' f' → logprob: -11.3756103515625

Token 222: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.009101630188524723
    2. ' d' → logprob: -5.259101867675781
    3. '                   ' → logprob: -5.884101867675781
    4. 'res' → logprob: -7.384101867675781
    5. 'df' → logprob: -8.134101867675781
    6. '               ' → logprob: -9.634101867675781
    7. 'flow' → logprob: -10.259101867675781
    8. '	d' → logprob: -11.759101867675781
    9. '```' → logprob: -11.759101867675781
    10. '                       ' → logprob: -12.259101867675781

Token 223: '=self' (ID: 16945)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16122621297836304
    2. '=self' → logprob: -2.286226272583008
    3. ' =' → logprob: -3.161226272583008
    4. '=f' → logprob: -6.161226272583008
    5. '=min' → logprob: -6.661226272583008
    6. '=int' → logprob: -7.161226272583008
    7. '=d' → logprob: -8.536226272583008
    8. '=max' → logprob: -8.786226272583008
    9. '=_' → logprob: -9.411226272583008
    10. '=c' → logprob: -10.036226272583008

Token 224: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.04926382005214691
    2. 'dfs' → logprob: -3.0492637157440186
    3. '   ' → logprob: -8.424263954162598
    4. ' dfs' → logprob: -8.549263954162598
    5. 'fs' → logprob: -9.549263954162598
    6. 'f' → logprob: -10.049263954162598
    7. 'd' → logprob: -10.424263954162598
    8. 's' → logprob: -10.924263954162598
    9. 'self' → logprob: -11.174263954162598
    10. '.' → logprob: -11.174263954162598

Token 225: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -4.727905979962088e-05
    2. 'dfs' → logprob: -10.12504768371582
    3. 'f' → logprob: -12.12504768371582
    4. ' fs' → logprob: -14.00004768371582
    5. '```' → logprob: -14.87504768371582
    6. ' dfs' → logprob: -15.62504768371582
    7. '   ' → logprob: -16.00004768371582
    8. 'ps' → logprob: -16.62504768371582
    9. '
' → logprob: -17.00004768371582
    10. '	fs' → logprob: -17.37504768371582

Token 226: '(to' (ID: 24042)
  Prédit: '(to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(to' → logprob: -0.0789402425289154
    2. 'to' → logprob: -2.5789401531219482
    3. ' to' → logprob: -10.703940391540527
    4. '[to' → logprob: -11.078940391540527
    5. '<|end|>' → logprob: -11.703940391540527
    6. '(' → logprob: -13.328940391540527
    7. ',to' → logprob: -13.703940391540527
    8. '	to' → logprob: -14.703940391540527
    9. '.to' → logprob: -15.203940391540527
    10. 'To' → logprob: -15.203940391540527

Token 227: ',t' (ID: 26927)
  Prédit: ',t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',t' → logprob: -0.03133061155676842
    2. ',' → logprob: -3.5313305854797363
    3. 't' → logprob: -6.656330585479736
    4. ' t' → logprob: -8.656331062316895
    5. ' ,' → logprob: -10.156331062316895
    6. '(t' → logprob: -10.281331062316895
    7. '	t' → logprob: -10.406331062316895
    8. ')t' → logprob: -11.531331062316895
    9. '<|end|>' → logprob: -13.781331062316895
    10. '           ' → logprob: -14.281331062316895

Token 228: ',min' (ID: 129117)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0029666495975106955
    2. ' min' → logprob: -6.50296688079834
    3. ',min' → logprob: -7.00296688079834
    4. ',' → logprob: -7.50296688079834
    5. '	min' → logprob: -13.25296688079834
    6. '[min' → logprob: -15.12796688079834
    7. '               ' → logprob: -15.75296688079834
    8. '                   ' → logprob: -16.377965927124023
    9. '_min' → logprob: -16.502965927124023
    10. '.min' → logprob: -16.502965927124023

Token 229: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -1.3902033970225602e-05
    2. 'f' → logprob: -11.875014305114746
    3. '(' → logprob: -12.000014305114746
    4. ' f' → logprob: -15.125014305114746
    5. '(
' → logprob: -15.500014305114746
    6. ' (' → logprob: -15.500014305114746
    7. '(cap' → logprob: -17.37501335144043
    8. '	f' → logprob: -17.87501335144043
    9. '(c' → logprob: -19.37501335144043
    10. ' ' → logprob: -19.50001335144043

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011170001234859228
    2. ',c' → logprob: -6.87611722946167
    3. ' ,' → logprob: -9.751116752624512
    4. ',d' → logprob: -10.626116752624512
    5. 'cap' → logprob: -13.626116752624512
    6. '(cap' → logprob: -15.626116752624512
    7. ',
' → logprob: -17.376117706298828
    8. ',f' → logprob: -17.376117706298828
    9. ',b' → logprob: -17.501117706298828
    10. '-cap' → logprob: -17.501117706298828

Token 231: 'cap' (ID: 15558)
  Prédit: 'cap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.0002613358374219388
    2. ' cap' → logprob: -8.250261306762695
    3. '(cap' → logprob: -17.000261306762695
    4. 'capac' → logprob: -19.000261306762695
    5. 'capacity' → logprob: -19.500261306762695
    6. '-cap' → logprob: -19.625261306762695
    7. '_cap' → logprob: -20.375261306762695
    8. 'Cap' → logprob: -20.750261306762695
    9. 'caps' → logprob: -20.875261306762695
    10. '.cap' → logprob: -21.000261306762695

Token 232: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.28789275884628296
    2. '))' → logprob: -1.9128928184509277
    3. ')' → logprob: -2.5378928184509277
    4. '))
' → logprob: -4.037892818450928
    5. ')
' → logprob: -5.162892818450928
    6. ' ),' → logprob: -10.41289234161377
    7. ' )' → logprob: -10.53789234161377
    8. ' ))' → logprob: -11.41289234161377
    9. '),
' → logprob: -11.53789234161377
    10. ' ))
' → logprob: -11.66289234161377

Token 233: 'level' (ID: 6164)
  Prédit: 'level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.00023202638840302825
    2. ' level' → logprob: -8.375231742858887
    3. '	level' → logprob: -14.625231742858887
    4. '[level' → logprob: -14.875231742858887
    5. '           ' → logprob: -15.875231742858887
    6. ')' → logprob: -16.000232696533203
    7. '(level' → logprob: -16.125232696533203
    8. '   ' → logprob: -16.750232696533203
    9. ' ' → logprob: -16.875232696533203
    10. '               ' → logprob: -17.125232696533203

Token 234: ',it' (ID: 133769)
  Prédit: ',it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',it' → logprob: -2.3080716346157715e-05
    2. ',' → logprob: -10.750022888183594
    3. ' ,' → logprob: -13.375022888183594
    4. '[it' → logprob: -17.500022888183594
    5. ',i' → logprob: -18.000022888183594
    6. 'it' → logprob: -19.000022888183594
    7. ',to' → logprob: -19.500022888183594
    8. '   ' → logprob: -19.500022888183594
    9. ',but' → logprob: -19.625022888183594
    10. ',int' → logprob: -19.750022888183594

Token 235: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759536027908325
    2. ')
' → logprob: -0.8259536027908325
    3. '           ' → logprob: -11.950953483581543
    4. '               ' → logprob: -12.575953483581543
    5. ')
' → logprob: -12.700953483581543
    6. ')

' → logprob: -14.825953483581543
    7. '                   ' → logprob: -15.825953483581543
    8. ')#' → logprob: -16.32595443725586
    9. 'if' → logprob: -16.45095443725586
    10. ' )
' → logprob: -16.57595443725586

Token 236: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011439875699579716
    2. '           ' → logprob: -4.636439800262451
    3. '                   ' → logprob: -7.011439800262451
    4. '
' → logprob: -7.636439800262451
    5. ' if' → logprob: -9.13644027709961
    6. '```' → logprob: -10.38644027709961
    7. '                
' → logprob: -10.63644027709961
    8. ')' → logprob: -10.63644027709961
    9. '                       ' → logprob: -11.13644027709961
    10. 'if' → logprob: -11.13644027709961

Token 237: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08034568279981613
    2. 'if' (adapté à ' if') → logprob: -2.580345630645752
    3. ' if' → logprob: -6.705345630645752
    4. '                   ' → logprob: -8.83034610748291
    5. '           ' → logprob: -9.95534610748291
    6. '                ' → logprob: -11.70534610748291
    7. '              ' → logprob: -11.83034610748291
    8. '                
' → logprob: -12.33034610748291
    9. '
' → logprob: -12.70534610748291
    10. 'If' → logprob: -12.83034610748291

Token 238: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10020678490400314
    2. ' d' → logprob: -2.3502068519592285
    3. '>d' → logprob: -16.10020637512207
    4. ' ' → logprob: -16.85020637512207
    5. '	d' → logprob: -17.22520637512207
    6. '
' → logprob: -18.72520637512207
    7. ' not' → logprob: -19.10020637512207
    8. ')d' → logprob: -19.35020637512207
    9. '_d' → logprob: -19.85020637512207
    10. '$d' → logprob: -20.22520637512207

Token 239: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0002931558701675385
    2. ' >' → logprob: -8.375292778015137
    3. '==' → logprob: -10.750292778015137
    4. ':' → logprob: -10.875292778015137
    5. ')>' → logprob: -11.250292778015137
    6. '">' → logprob: -12.750292778015137
    7. ')' → logprob: -13.375292778015137
    8. '>:' → logprob: -14.500292778015137
    9. ']>' → logprob: -14.500292778015137
    10. '<|end|>' → logprob: -14.625292778015137

Token 240: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '=' → logprob: -18.625059127807617
    4. '<|end|>' → logprob: -19.000059127807617
    5. '```' → logprob: -20.125059127807617
    6. '>' → logprob: -20.875059127807617
    7. '
' → logprob: -21.125059127807617
    8. '۰' → logprob: -21.250059127807617
    9. '   ' → logprob: -21.375059127807617
    10. 'zero' → logprob: -22.500059127807617

Token 241: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6350635886192322
    2. ':' → logprob: -0.7600635886192322
    3. '                   ' → logprob: -6.510063648223877
    4. ':return' → logprob: -7.635063648223877
    5. '):
' → logprob: -8.135063171386719
    6. '               ' → logprob: -9.385063171386719
    7. ':

' → logprob: -10.885063171386719
    8. ':self' → logprob: -11.010063171386719
    9. '<|end|>' → logprob: -11.010063171386719
    10. '):' → logprob: -11.135063171386719

Token 242: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006164124235510826
    2. 'self' → logprob: -5.256164073944092
    3. '               ' → logprob: -7.881164073944092
    4. '                       ' → logprob: -8.00616455078125
    5. ' self' → logprob: -8.75616455078125
    6. '
' → logprob: -11.00616455078125
    7. '           ' → logprob: -11.13116455078125
    8. '                    
' → logprob: -11.75616455078125
    9. '                  ' → logprob: -12.38116455078125
    10. '                           ' → logprob: -12.63116455078125

Token 243: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007167493458837271
    2. '                   ' → logprob: -5.257167339324951
    3. ' self' → logprob: -6.257167339324951
    4. '                       ' → logprob: -11.88216781616211
    5. '               ' → logprob: -12.88216781616211
    6. '           ' → logprob: -13.00716781616211
    7. '
' → logprob: -14.00716781616211
    8. '                    
' → logprob: -14.88216781616211
    9. '	self' → logprob: -15.00716781616211
    10. '=self' → logprob: -15.13216781616211

Token 244: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -7.696077227592468e-05
    2. 'g' → logprob: -9.625077247619629
    3. '.' → logprob: -12.500077247619629
    4. 'self' → logprob: -12.875077247619629
    5. ' .' → logprob: -13.250077247619629
    6. '.v' → logprob: -14.375077247619629
    7. '].' → logprob: -14.500077247619629
    8. '```' → logprob: -14.875077247619629
    9. 's' → logprob: -15.000077247619629
    10. '`.' → logprob: -15.375077247619629

Token 245: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.4849443838757e-06
    2. 'v' → logprob: -12.375004768371582
    3. '<|end|>' → logprob: -17.250003814697266
    4. '[' → logprob: -17.500003814697266
    5. '	v' → logprob: -17.625003814697266
    6. '[self' → logprob: -17.750003814697266
    7. '```' → logprob: -17.750003814697266
    8. '[val' → logprob: -18.000003814697266
    9. '[u' → logprob: -18.125003814697266
    10. '<v' → logprob: -18.750003814697266

Token 246: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011901520192623138
    2. '[' → logprob: -5.011901378631592
    3. '[it' → logprob: -5.386901378631592
    4. '[v' → logprob: -7.761901378631592
    5. '[to' → logprob: -9.38690185546875
    6. ' ][' → logprob: -10.01190185546875
    7. '
' → logprob: -11.88690185546875
    8. ']' → logprob: -12.01190185546875
    9. '[self' → logprob: -12.38690185546875
    10. '}[' → logprob: -12.76190185546875

Token 247: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -1.0280383548888494e-06
    2. '[it' → logprob: -14.875000953674316
    3. 'v' → logprob: -15.500000953674316
    4. ' it' → logprob: -16.000001907348633
    5. ' ' → logprob: -16.625001907348633
    6. 'ut' → logprob: -16.750001907348633
    7. '][' → logprob: -17.250001907348633
    8. 'iv' → logprob: -17.250001907348633
    9. 'It' → logprob: -17.250001907348633
    10. '_it' → logprob: -17.250001907348633

Token 248: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -8.061054359131958e-06
    2. 'v' → logprob: -11.875007629394531
    3. '][' → logprob: -14.625007629394531
    4. '[' → logprob: -15.750007629394531
    5. '	v' → logprob: -16.12500762939453
    6. '```' → logprob: -16.25000762939453
    7. '<v' → logprob: -16.75000762939453
    8. '(v' → logprob: -17.25000762939453
    9. ' v' → logprob: -17.62500762939453
    10. '[
' → logprob: -17.87500762939453

Token 249: ']][' (ID: 61032)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.20289961993694305
    2. ']][' → logprob: -1.7028995752334595
    3. ')][' → logprob: -6.57789945602417
    4. ']' → logprob: -10.202899932861328
    5. ' ][' → logprob: -10.577899932861328
    6. ']].' → logprob: -11.452899932861328
    7. '[' → logprob: -12.202899932861328
    8. '].' → logprob: -12.577899932861328
    9. ']]' → logprob: -12.577899932861328
    10. '   ' → logprob: -13.077899932861328

Token 250: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. '
' → logprob: -11.375012397766113
    3. '

' → logprob: -15.375012397766113
    4. '   ' → logprob: -16.500011444091797
    5. '][' → logprob: -16.625011444091797
    6. '[' → logprob: -16.750011444091797
    7. '```' → logprob: -16.750011444091797
    8. '
' → logprob: -17.250011444091797
    9. ' ' → logprob: -17.500011444091797
    10. '' → logprob: -17.625011444091797

Token 251: ']-' (ID: 27107)
  Prédit: ']-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']-' → logprob: -0.06252651661634445
    2. ']' → logprob: -2.8125264644622803
    3. '-=' → logprob: -7.687526702880859
    4. '-' → logprob: -9.68752670288086
    5. ' -=' → logprob: -11.18752670288086
    6. ']+=' → logprob: -11.31252670288086
    7. ' ]' → logprob: -11.68752670288086
    8. ')-' → logprob: -13.81252670288086
    9. '}-' → logprob: -14.31252670288086
    10. ']=' → logprob: -14.31252670288086

Token 252: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693126499652863
    2. '=d' → logprob: -2.1269311904907227
    3. '=_' → logprob: -14.126931190490723
    4. '=
' → logprob: -14.626931190490723
    5. '=b' → logprob: -14.626931190490723
    6. '=D' → logprob: -14.876931190490723
    7. '=s' → logprob: -15.501931190490723
    8. '=int' → logprob: -15.626931190490723
    9. '=k' → logprob: -16.25193214416504
    10. 'd' → logprob: -16.62693214416504

Token 253: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0206720617134124e-05
    2. ' d' → logprob: -11.50001049041748
    3. '                   ' → logprob: -21.875009536743164
    4. '
' → logprob: -22.000009536743164
    5. '```' → logprob: -22.250009536743164
    6. '	d' → logprob: -22.375009536743164
    7. '<|end|>' → logprob: -23.750009536743164
    8. ' ' → logprob: -24.125009536743164
    9. ')d' → logprob: -24.500009536743164
    10. '>d' → logprob: -24.750009536743164

Token 254: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14015911519527435
    2. '
' → logprob: -2.1401591300964355
    3. '<|end|>' → logprob: -5.1401591300964355
    4. 'self' → logprob: -5.5151591300964355
    5. '               ' → logprob: -6.2651591300964355
    6. '           ' → logprob: -7.7651591300964355
    7. '                    
' → logprob: -8.015158653259277
    8. '                  ' → logprob: -9.015158653259277
    9. '                    ' → logprob: -9.765158653259277
    10. '                       ' → logprob: -10.015158653259277

Token 255: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006451221415773034
    2. 'self' → logprob: -7.625645160675049
    3. '
' → logprob: -10.00064468383789
    4. '               ' → logprob: -10.12564468383789
    5. '                    
' → logprob: -10.12564468383789
    6. '           ' → logprob: -11.37564468383789
    7. '                  ' → logprob: -12.00064468383789
    8. '                    ' → logprob: -12.50064468383789
    9. '                       ' → logprob: -12.87564468383789
    10. ' self' → logprob: -13.62564468383789

Token 256: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002083643339574337
    2. ' self' → logprob: -6.752083778381348
    3. '                   ' → logprob: -7.002083778381348
    4. 'd' → logprob: -13.377083778381348
    5. '                       ' → logprob: -14.502083778381348
    6. '[self' → logprob: -14.877083778381348
    7. '	self' → logprob: -16.00208282470703
    8. '
' → logprob: -16.00208282470703
    9. '=self' → logprob: -16.12708282470703
    10. '   ' → logprob: -16.62708282470703

Token 257: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.0005041812546551228
    2. 'g' → logprob: -7.625504016876221
    3. '.' → logprob: -11.375504493713379
    4. 'self' → logprob: -13.000504493713379
    5. 'user' → logprob: -13.625504493713379
    6. 's' → logprob: -15.375504493713379
    7. ' .' → logprob: -15.750504493713379
    8. '.user' → logprob: -16.250503540039062
    9. '<|end|>' → logprob: -16.250503540039062
    10. '#g' → logprob: -16.625503540039062

Token 258: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.03808417171239853
    2. '[v' → logprob: -3.2880842685699463
    3. '[' → logprob: -10.538084030151367
    4. '][' → logprob: -11.413084030151367
    5. 'to' → logprob: -13.038084030151367
    6. 'v' → logprob: -13.913084030151367
    7. '[val' → logprob: -14.163084030151367
    8. '[u' → logprob: -15.288084030151367
    9. '[self' → logprob: -15.913084030151367
    10. '(to' → logprob: -15.913084030151367

Token 259: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00010509284038562328
    2. '[' → logprob: -9.500104904174805
    3. ' ][' → logprob: -10.625104904174805
    4. ']' → logprob: -12.625104904174805
    5. ''][' → logprob: -14.875104904174805
    6. '][-' → logprob: -15.000104904174805
    7. '[][' → logprob: -15.125104904174805
    8. '][_' → logprob: -15.250104904174805
    9. ']][' → logprob: -15.375104904174805
    10. 'self' → logprob: -15.625104904174805

Token 260: 'rev' (ID: 25656)
  Prédit: 'rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.00015312091272789985
    2. '[' → logprob: -9.000153541564941
    3. ' rev' → logprob: -11.000153541564941
    4. '][' → logprob: -12.250153541564941
    5. 'g' → logprob: -12.625153541564941
    6. ' ' → logprob: -13.500153541564941
    7. '
' → logprob: -13.875153541564941
    8. '  ' → logprob: -14.875153541564941
    9. 'self' → logprob: -15.000153541564941
    10. '   ' → logprob: -15.000153541564941

Token 261: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -2.9160102712921798e-05
    2. '[' → logprob: -11.250029563903809
    3. ' ][' → logprob: -11.750029563903809
    4. ''][' → logprob: -12.750029563903809
    5. ']' → logprob: -13.000029563903809
    6. '"][' → logprob: -13.750029563903809
    7. '1' → logprob: -14.625029563903809
    8. '
' → logprob: -15.000029563903809
    9. ']][' → logprob: -15.250029563903809
    10. '+' → logprob: -15.375029563903809

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.500000953674316
    3. '
' → logprob: -15.625000953674316
    4. '+' → logprob: -16.125
    5. ']' → logprob: -16.125
    6. '```' → logprob: -18.0
    7. ']+' → logprob: -18.3125
    8. '   ' → logprob: -18.5
    9. '+=' → logprob: -18.875
    10. ']+=' → logprob: -18.9375

Token 263: ']+=' (ID: 123635)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6944038271903992
    2. ']+=' → logprob: -0.6944038271903992
    3. ' +=' → logprob: -6.694403648376465
    4. ']' → logprob: -11.819403648376465
    5. '+' → logprob: -12.194403648376465
    6. '   ' → logprob: -13.444403648376465
    7. '```' → logprob: -13.819403648376465
    8. '
' → logprob: -14.319403648376465
    9. '+=(' → logprob: -14.444403648376465
    10. ']+' → logprob: -14.694403648376465

Token 264: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1472419600977446e-06
    2. ' d' → logprob: -13.750000953674316
    3. '	d' → logprob: -21.625001907348633
    4. ')d' → logprob: -21.625001907348633
    5. '>d' → logprob: -23.375001907348633
    6. '```' → logprob: -23.500001907348633
    7. '_d' → logprob: -24.000001907348633
    8. '$d' → logprob: -24.000001907348633
    9. '   ' → logprob: -24.250001907348633
    10. '*d' → logprob: -24.250001907348633

Token 265: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -6.861651490908116e-05
    2. '               ' → logprob: -10.375068664550781
    3. '                  ' → logprob: -11.750068664550781
    4. '           ' → logprob: -11.875068664550781
    5. 'return' → logprob: -12.000068664550781
    6. '                    
' → logprob: -12.250068664550781
    7. '				' → logprob: -13.125068664550781
    8. '
' → logprob: -13.250068664550781
    9. '                       ' → logprob: -13.500068664550781
    10. '       ' → logprob: -13.625068664550781

Token 266: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -8.232493564719334e-05
    2. '               ' → logprob: -10.000082015991211
    3. 'return' → logprob: -11.000082015991211
    4. '                       ' → logprob: -12.125082015991211
    5. '           ' → logprob: -12.500082015991211
    6. '				' → logprob: -12.750082015991211
    7. '
' → logprob: -13.000082015991211
    8. '                    
' → logprob: -13.000082015991211
    9. '                  ' → logprob: -13.875082015991211
    10. '   ' → logprob: -14.250082015991211

Token 267: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0009864849271252751
    2. ' return' → logprob: -7.000986576080322
    3. '                   ' → logprob: -9.500986099243164
    4. '
' → logprob: -16.500986099243164
    5. '	return' → logprob: -16.750986099243164
    6. ':return' → logprob: -17.000986099243164
    7. '{return' → logprob: -17.500986099243164
    8. '                       ' → logprob: -18.250986099243164
    9. '               ' → logprob: -18.625986099243164
    10. '   ' → logprob: -19.250986099243164

Token 268: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0009114635176956654
    2. ' d' → logprob: -7.000911235809326
    3. '	d' → logprob: -21.500911712646484
    4. '   ' → logprob: -24.625911712646484
    5. ' ' → logprob: -25.000911712646484
    6. ')d' → logprob: -25.125911712646484
    7. '$d' → logprob: -25.125911712646484
    8. '_d' → logprob: -25.375911712646484
    9. '>d' → logprob: -25.375911712646484
    10. '
' → logprob: -25.625911712646484

Token 269: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002498133108019829
    2. '               ' → logprob: -6.002498149871826
    3. '
' → logprob: -11.252497673034668
    4. '		' → logprob: -12.877497673034668
    5. '            
' → logprob: -13.127497673034668
    6. '       ' → logprob: -13.252497673034668
    7. '	       ' → logprob: -14.377497673034668
    8. '	           ' → logprob: -15.252497673034668
    9. '                   ' → logprob: -15.377497673034668
    10. '   ' → logprob: -15.502497673034668

Token 270: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002811290556564927
    2. '               ' → logprob: -5.877811431884766
    3. '       ' → logprob: -13.127811431884766
    4. 'else' → logprob: -14.002811431884766
    5. '```' → logprob: -14.002811431884766
    6. '
' → logprob: -14.377811431884766
    7. '                   ' → logprob: -14.627811431884766
    8. '		' → logprob: -14.752811431884766
    9. 'None' → logprob: -15.252811431884766
    10. '            
' → logprob: -15.502811431884766

Token 271: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' (adapté à ' it') → logprob: -0.48353826999664307
    2. '           ' → logprob: -0.9835382699966431
    3. '       ' → logprob: -5.2335381507873535
    4. ' it' → logprob: -6.3585381507873535
    5. '   ' → logprob: -6.4835381507873535
    6. '
' → logprob: -8.233538627624512
    7. '               ' → logprob: -8.358538627624512
    8. '\' → logprob: -9.608538627624512
    9. '	it' → logprob: -9.858538627624512
    10. ' ' → logprob: -10.483538627624512

Token 272: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -9.372294698550832e-06
    2. 'v' → logprob: -11.625009536743164
    3. '[' → logprob: -15.000009536743164
    4. '	v' → logprob: -17.875009536743164
    5. '```' → logprob: -18.125009536743164
    6. ' v' → logprob: -19.500009536743164
    7. '\[' → logprob: -19.625009536743164
    8. '[u' → logprob: -20.000009536743164
    9. '[val' → logprob: -20.250009536743164
    10. ' [' → logprob: -20.500009536743164

Token 273: ']+=' (ID: 123635)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7553455829620361
    2. ']+' → logprob: -0.7553455829620361
    3. '[v' → logprob: -3.505345582962036
    4. ']+=' → logprob: -3.505345582962036
    5. '][' → logprob: -9.255345344543457
    6. ']=' → logprob: -10.505345344543457
    7. '[' → logprob: -10.755345344543457
    8. ' ]' → logprob: -10.755345344543457
    9. '']' → logprob: -10.880345344543457
    10. 'v' → logprob: -11.130345344543457

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '１' → logprob: -21.250001907348633
    4. '```' → logprob: -21.250001907348633
    5. '   ' → logprob: -22.125001907348633
    6. '۱' → logprob: -22.625001907348633
    7. '  ' → logprob: -22.750001907348633
    8. '
' → logprob: -23.250001907348633
    9. '[' → logprob: -24.562501907348633
    10. '१' → logprob: -24.750001907348633

Token 275: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07034174352884293
    2. 'return' → logprob: -2.6953418254852295
    3. ' return' → logprob: -8.195342063903809
    4. '   ' → logprob: -10.070342063903809
    5. 'None' → logprob: -10.445342063903809
    6. '
' → logprob: -10.695342063903809
    7. '	return' → logprob: -11.320342063903809
    8. '0' → logprob: -11.445342063903809
    9. '```' → logprob: -13.195342063903809
    10. '<|end|>' → logprob: -13.195342063903809

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16067808866500854
    2. 'return' → logprob: -1.9106781482696533
    3. ' return' → logprob: -7.910677909851074
    4. '   ' → logprob: -10.035677909851074
    5. '	return' → logprob: -10.910677909851074
    6. '0' → logprob: -12.160677909851074
    7. '           ' → logprob: -12.410677909851074
    8. '<|end|>' → logprob: -12.660677909851074
    9. '```' → logprob: -12.910677909851074
    10. '
' → logprob: -12.910677909851074

Token 277: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -9.567575034452602e-05
    2. ' return' → logprob: -9.37509536743164
    3. '0' → logprob: -12.00009536743164
    4. '       ' → logprob: -12.62509536743164
    5. 'None' → logprob: -14.50009536743164
    6. '	return' → logprob: -14.75009536743164
    7. '   ' → logprob: -15.87509536743164
    8. '```' → logprob: -16.12509536743164
    9. ':return' → logprob: -16.37509536743164
    10. '@return' → logprob: -17.00009536743164

Token 278: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '０' → logprob: -21.0
    4. '۰' → logprob: -21.75
    5. 'None' → logprob: -21.875
    6. ' ' → logprob: -22.5
    7. '```' → logprob: -24.0
    8. '00' → logprob: -24.125
    9. '   ' → logprob: -24.25
    10. '000' → logprob: -24.375

Token 279: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. 'None' → logprob: -21.5
    4. '０' → logprob: -21.5
    5. '۰' → logprob: -21.75
    6. '   ' → logprob: -22.625
    7. '  ' → logprob: -23.875
    8. '```' → logprob: -24.0
    9. '00' → logprob: -24.5
    10. '000' → logprob: -24.5

Token 280: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.931304395198822
    2. '<|end|>' → logprob: -1.3063044548034668
    3. '   ' → logprob: -1.8063044548034668
    4. '
' → logprob: -2.056304454803467
    5. '\n' → logprob: -4.681304454803467
    6. '	def' → logprob: -5.056304454803467
    7. '```' → logprob: -5.056304454803467
    8. '    
' → logprob: -5.056304454803467
    9. ' def' → logprob: -5.181304454803467
    10. '  
' → logprob: -6.056304454803467

Token 281: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03867143392562866
    2. '   ' → logprob: -3.2886714935302734
    3. ' def' → logprob: -8.538671493530273
    4. '
' → logprob: -8.538671493530273
    5. '    
' → logprob: -9.413671493530273
    6. '	def' → logprob: -10.038671493530273
    7. '```' → logprob: -10.663671493530273
    8. 'n' → logprob: -10.663671493530273
    9. ' ' → logprob: -11.288671493530273
    10. 's' → logprob: -11.663671493530273

Token 282: ' max' (ID: 2999)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0019038895843550563
    2. ' solve' → logprob: -6.751904010772705
    3. 'main' → logprob: -8.001903533935547
    4. ' max' → logprob: -8.376903533935547
    5. ' ' → logprob: -8.876903533935547
    6. 'solve' → logprob: -11.626903533935547
    7. ' solution' → logprob: -11.876903533935547
    8. ' bfs' → logprob: -13.001903533935547
    9. ' input' → logprob: -13.626903533935547
    10. '	main' → logprob: -13.876903533935547

Token 283: '_flow' (ID: 63802)
  Prédit: '_flow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flow' → logprob: -0.033806946128606796
    2. 'flow' → logprob: -3.4088070392608643
    3. 'Flow' → logprob: -9.658806800842285
    4. '_' → logprob: -10.033806800842285
    5. '(flow' → logprob: -10.783806800842285
    6. ' flow' → logprob: -11.158806800842285
    7. '_FLOW' → logprob: -12.033806800842285
    8. 'def' → logprob: -12.783806800842285
    9. '()' → logprob: -13.283806800842285
    10. '```' → logprob: -13.658806800842285

Token 284: '(m' (ID: 2145)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0031210333108901978
    2. '(' → logprob: -6.0031208992004395
    3. ' (' → logprob: -7.7531208992004395
    4. '(graph' → logprob: -9.253121376037598
    5. '():' → logprob: -9.628121376037598
    6. '(flow' → logprob: -11.253121376037598
    7. '(start' → logprob: -11.503121376037598
    8. '(source' → logprob: -12.253121376037598
    9. '(f' → logprob: -12.753121376037598
    10. '(self' → logprob: -13.003121376037598

Token 285: 'f' (ID: 69)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03132783621549606
    2. 'ax' → logprob: -4.031327724456787
    3. '):' → logprob: -5.656327724456787
    4. '):
' → logprob: -6.156327724456787
    5. ',n' → logprob: -6.406327724456787
    6. ' ,' → logprob: -6.406327724456787
    7. ',m' → logprob: -6.781327724456787
    8. ',s' → logprob: -6.906327724456787
    9. '(s' → logprob: -7.906327724456787
    10. ',a' → logprob: -7.906327724456787

Token 286: ',s' (ID: 20379)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.037407003343105316
    2. ',s' → logprob: -3.7874069213867188
    3. ',m' → logprob: -5.162406921386719
    4. ',n' → logprob: -6.037406921386719
    5. ',input' → logprob: -6.287406921386719
    6. ' ,' → logprob: -6.537406921386719
    7. ',max' → logprob: -6.787406921386719
    8. ',start' → logprob: -7.787406921386719
    9. ',a' → logprob: -8.537406921386719
    10. ',f' → logprob: -8.912406921386719

Token 287: ',t' (ID: 26927)
  Prédit: ',t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',t' → logprob: -0.038085438311100006
    2. ',' → logprob: -3.288085460662842
    3. ' ,' → logprob: -10.663084983825684
    4. ',m' → logprob: -11.788084983825684
    5. 't' → logprob: -11.913084983825684
    6. ',f' → logprob: -12.538084983825684
    7. ',T' → logprob: -14.288084983825684
    8. ' t' → logprob: -14.788084983825684
    9. ',n' → logprob: -15.163084983825684
    10. ',d' → logprob: -15.538084983825684

Token 288: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20231349766254425
    2. '):' → logprob: -1.7023135423660278
    3. ',n' → logprob: -8.202313423156738
    4. ',s' → logprob: -8.827313423156738
    5. ',m' → logprob: -9.077313423156738
    6. '):
' → logprob: -9.452313423156738
    7. ',f' → logprob: -9.952313423156738
    8. ')' → logprob: -9.952313423156738
    9. ' ):' → logprob: -10.577313423156738
    10. ',p' → logprob: -10.702313423156738

Token 289: '   ' (ID: 271)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.2381226122379303
    2. '   ' → logprob: -1.863122582435608
    3. 'flow' → logprob: -2.9881227016448975
    4. ' level' → logprob: -5.738122463226318
    5. ' flow' → logprob: -6.863122463226318
    6. '	level' → logprob: -6.863122463226318
    7. 'total' → logprob: -6.988122463226318
    8. '_flow' → logprob: -11.113122940063477
    9. '[level' → logprob: -11.238122940063477
    10. 'max' → logprob: -11.363122940063477

Token 290: ' flow' (ID: 7845)
  Prédit: 'flow'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flow' (adapté à ' flow') → logprob: -0.00018363336857873946
    2. 'level' → logprob: -9.000184059143066
    3. ' flow' → logprob: -10.000184059143066
    4. '   ' → logprob: -11.250184059143066
    5. 'res' → logprob: -13.750184059143066
    6. 'INF' → logprob: -15.000184059143066
    7. 'inf' → logprob: -16.00018310546875
    8. 'FLOW' → logprob: -16.37518310546875
    9. 'f' → logprob: -17.25018310546875
    10. '_flow' → logprob: -17.37518310546875

Token 291: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25194162130355835
    2. ' =' → logprob: -1.5019416809082031
    3. ' ' → logprob: -11.501941680908203
    4. ',' → logprob: -13.501941680908203
    5. '=int' → logprob: -15.626941680908203
    6. '  ' → logprob: -16.001941680908203
    7. '＝' → logprob: -16.126941680908203
    8. '   ' → logprob: -16.126941680908203
    9. '={}' → logprob: -16.376941680908203
    10. '=[]' → logprob: -16.501941680908203

Token 292: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -21.875
    4. '０' → logprob: -23.125
    5. '۰' → logprob: -23.75
    6. '000' → logprob: -24.25
    7. '
' → logprob: -24.875
    8. '00' → logprob: -25.0
    9. '  ' → logprob: -25.75
    10. '=' → logprob: -25.75

Token 293: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2366100400686264
    2. '
' → logprob: -1.9866100549697876
    3. ' while' → logprob: -3.236609935760498
    4. '    
' → logprob: -4.861609935760498
    5. ' 
' → logprob: -5.111609935760498
    6. '   
' → logprob: -5.361609935760498
    7. '	while' → logprob: -5.486609935760498
    8. 'while' → logprob: -5.611609935760498
    9. '  
' → logprob: -5.611609935760498
    10. '  ' → logprob: -6.486609935760498

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3564496338367462
    2. ' while' → logprob: -1.4814496040344238
    3. '
' → logprob: -3.606449604034424
    4. ' 
' → logprob: -4.606449604034424
    5. '	while' → logprob: -4.856449604034424
    6. 'while' → logprob: -5.231449604034424
    7. '  ' → logprob: -5.231449604034424
    8. '   
' → logprob: -5.606449604034424
    9. '  
' → logprob: -5.606449604034424
    10. ' level' → logprob: -5.856449604034424

Token 295: ' INF' (ID: 69196)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.25582531094551086
    2. 'level' → logprob: -1.5058252811431885
    3. ' while' → logprob: -6.255825519561768
    4. '   ' → logprob: -6.255825519561768
    5. ' level' → logprob: -10.13082504272461
    6. 'INF' (adapté à ' INF') → logprob: -12.25582504272461
    7. '  ' → logprob: -14.00582504272461
    8. '```' → logprob: -14.25582504272461
    9. '	while' → logprob: -14.50582504272461
    10. 'LEVEL' → logprob: -14.63082504272461

Token 296: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5895600914955139
    2. ' =' → logprob: -0.8395600914955139
    3. '=int' → logprob: -4.339560031890869
    4. '=float' → logprob: -7.714560031890869
    5. '=sys' → logprob: -10.339560508728027
    6. '＝' → logprob: -12.964560508728027
    7. '=max' → logprob: -13.339560508728027
    8. '   ' → logprob: -13.714560508728027
    9. '=

' → logprob: -14.589560508728027
    10. '=-' → logprob: -15.714560508728027

Token 297: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0009261108934879303
    2. ' ' → logprob: -7.2509260177612305
    3. 'float' → logprob: -8.50092601776123
    4. ' float' → logprob: -12.25092601776123
    5. '100' → logprob: -12.37592601776123
    6. '1' → logprob: -13.12592601776123
    7. 'int' → logprob: -13.37592601776123
    8. '   ' → logprob: -15.62592601776123
    9. '  ' → logprob: -16.500926971435547
    10. '999' → logprob: -17.625926971435547

Token 298: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0019370813388377428
    2. '**' → logprob: -6.501936912536621
    3. '18' → logprob: -7.751936912536621
    4. '09' → logprob: -13.376936912536621
    5. '15' → logprob: -13.376936912536621
    6. '10' → logprob: -14.001936912536621
    7. '12' → logprob: -14.626936912536621
    8. '```' → logprob: -15.251936912536621
    9. '19' → logprob: -17.501937866210938
    10. '_' → logprob: -17.501937866210938

Token 299: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0023149994667619467
    2. '18' → logprob: -6.502315044403076
    3. '15' → logprob: -7.127315044403076
    4. '10' → logprob: -12.002314567565918
    5. '12' → logprob: -13.127314567565918
    6. '14' → logprob: -14.127314567565918
    7. '16' → logprob: -15.002314567565918
    8. '13' → logprob: -15.502314567565918
    9. '17' → logprob: -16.502315521240234
    10. '20' → logprob: -17.502315521240234

Token 300: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.017397761344909668
    2. ' 
' → logprob: -4.642397880554199
    3. '    
' → logprob: -5.642397880554199
    4. ' while' → logprob: -6.642397880554199
    5. 'while' → logprob: -6.892397880554199
    6. '  
' → logprob: -7.517397880554199
    7. '   ' → logprob: -7.892397880554199
    8. '	
' → logprob: -8.5173978805542
    9. '<|end|>' → logprob: -8.5173978805542
    10. '' → logprob: -9.1423978805542

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027988819405436516
    2. ' while' → logprob: -4.152988910675049
    3. ' level' → logprob: -5.277988910675049
    4. 'level' → logprob: -6.152988910675049
    5. '	level' → logprob: -6.402988910675049
    6. 'while' → logprob: -6.527988910675049
    7. '	while' → logprob: -7.402988910675049
    8. '
' → logprob: -7.402988910675049
    9. '    
' → logprob: -9.27798843383789
    10. '[level' → logprob: -9.40298843383789

Token 302: ' level' (ID: 3211)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4662579298019409
    2. ' while' → logprob: -1.466257929801941
    3. 'level' (adapté à ' level') → logprob: -2.4662580490112305
    4. '   ' → logprob: -3.0912580490112305
    5. ' level' → logprob: -4.4662580490112305
    6. '	level' → logprob: -12.34125804901123
    7. '	while' → logprob: -12.34125804901123
    8. '```' → logprob: -12.34125804901123
    9. '[level' → logprob: -12.46625804901123
    10. '    ' → logprob: -12.59125804901123

Token 303: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.09501327574253082
    2. ' =' → logprob: -2.470013380050659
    3. '=' → logprob: -5.47001314163208
    4. '=[]' → logprob: -6.72001314163208
    5. '[-' → logprob: -7.97001314163208
    6. '=-' → logprob: -8.470013618469238
    7. ' =[' → logprob: -10.470013618469238
    8. '=(-' → logprob: -11.220013618469238
    9. '=[]
' → logprob: -11.470013618469238
    10. '=[],' → logprob: -12.595013618469238

Token 304: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.512236498361744e-07
    2. ' -' → logprob: -14.625000953674316
    3. '-int' → logprob: -18.875
    4. '-f' → logprob: -19.5
    5. '   ' → logprob: -19.625
    6. '-i' → logprob: -19.875
    7. '-s' → logprob: -20.125
    8. '-level' → logprob: -20.625
    9. '-x' → logprob: -21.25
    10. '-l' → logprob: -22.0

Token 305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.750000953674316
    3. '```' → logprob: -16.625
    4. '   ' → logprob: -16.875
    5. '-' → logprob: -17.125
    6. '
' → logprob: -17.375
    7. '

' → logprob: -17.875
    8. '``' → logprob: -18.0
    9. '  ' → logprob: -18.5
    10. '9' → logprob: -18.6875

Token 306: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.4272332787513733
    2. ' for' → logprob: -1.5522332191467285
    3. ']' → logprob: -2.6772332191467285
    4. ']*(' → logprob: -3.1772332191467285
    5. 'for' → logprob: -3.6772332191467285
    6. ' ]' → logprob: -9.302233695983887
    7. ']+' → logprob: -9.927233695983887
    8. '	for' → logprob: -11.677233695983887
    9. '```' → logprob: -12.177233695983887
    10. '   ' → logprob: -12.177233695983887

Token 307: 'mf' (ID: 54650)
  Prédit: 'mf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mf' → logprob: -4.60414821645827e-06
    2. ' mf' → logprob: -12.750004768371582
    3. 'len' → logprob: -13.750004768371582
    4. '(m' → logprob: -14.625004768371582
    5. '(' → logprob: -16.625003814697266
    6. 'm' → logprob: -16.750003814697266
    7. '-mf' → logprob: -17.750003814697266
    8. '(len' → logprob: -18.000003814697266
    9. '```' → logprob: -21.625003814697266
    10. '
' → logprob: -22.000003814697266

Token 308: '.n' (ID: 1835)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1602371335029602
    2. '.n' → logprob: -1.9102370738983154
    3. '.' → logprob: -11.285237312316895
    4. '(n' → logprob: -16.285236358642578
    5. '<n' → logprob: -16.410236358642578
    6. '	n' → logprob: -16.535236358642578
    7. ' n' → logprob: -16.660236358642578
    8. '```' → logprob: -16.785236358642578
    9. ',n' → logprob: -17.660236358642578
    10. '[n' → logprob: -18.410236358642578

Token 309: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.34532347321510315
    2. ' while' → logprob: -2.2203235626220703
    3. '<|end|>' → logprob: -2.3453235626220703
    4. '   ' → logprob: -2.7203235626220703
    5. '	while' → logprob: -4.22032356262207
    6. '
' → logprob: -5.09532356262207
    7. '<|end|>' → logprob: -7.84532356262207
    8. 'While' → logprob: -8.72032356262207
    9. ')' → logprob: -9.47032356262207
    10. '```' → logprob: -9.59532356262207

Token 310: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.09653143584728241
    2. '   ' → logprob: -3.096531391143799
    3. ' while' → logprob: -3.096531391143799
    4. '	while' → logprob: -6.596531391143799
    5. '<|end|>' → logprob: -8.471531867980957
    6. 'While' → logprob: -11.596531867980957
    7. '```' → logprob: -11.846531867980957
    8. '  ' → logprob: -12.221531867980957
    9. '    
' → logprob: -12.346531867980957
    10. '
' → logprob: -13.096531867980957

Token 311: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0031057035084813833
    2. ' while' → logprob: -6.003105640411377
    3. '   ' → logprob: -7.378105640411377
    4. '	while' → logprob: -13.003106117248535
    5. 'While' → logprob: -13.753106117248535
    6. 'it' → logprob: -14.503106117248535
    7. '    
' → logprob: -15.378106117248535
    8. 'wh' → logprob: -15.503106117248535
    9. 'if' → logprob: -15.753106117248535
    10. 'w' → logprob: -15.878106117248535

Token 312: ' True' (ID: 6432)
  Prédit: 'mf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mf' → logprob: -0.05545930936932564
    2. ' mf' → logprob: -2.9304592609405518
    3. 'max' → logprob: -7.680459499359131
    4. 'm' → logprob: -9.805459022521973
    5. ' max' → logprob: -10.555459022521973
    6. 'True' → logprob: -11.305459022521973
    7. '   ' → logprob: -11.805459022521973
    8. ' True' → logprob: -12.305459022521973
    9. ' ' → logprob: -12.930459022521973
    10. 'self' → logprob: -13.680459022521973

Token 313: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026455074548721313
    2. ':
' → logprob: -3.6514551639556885
    3. ' and' → logprob: -9.40145492553711
    4. ',' → logprob: -10.90145492553711
    5. ' :' → logprob: -11.02645492553711
    6. '   ' → logprob: -11.90145492553711
    7. '       ' → logprob: -12.27645492553711
    8. '):
' → logprob: -12.27645492553711
    9. ':

' → logprob: -12.27645492553711
    10. '<|end|>' → logprob: -12.40145492553711

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21245433390140533
    2. 'if' → logprob: -2.462454319000244
    3. 'for' → logprob: -3.462454319000244
    4. 'level' → logprob: -3.587454319000244
    5. ' if' → logprob: -3.837454319000244
    6. '   ' → logprob: -4.462454319000244
    7. ' for' → logprob: -4.462454319000244
    8. ' level' → logprob: -6.837454319000244
    9. '    ' → logprob: -7.962454319000244
    10. '        
' → logprob: -8.087454795837402

Token 315: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10849876701831818
    2. 'for' (adapté à ' for') → logprob: -2.7334988117218018
    3. 'level' → logprob: -3.4834988117218018
    4. '       ' → logprob: -4.983498573303223
    5. ' if' → logprob: -8.358498573303223
    6. ' for' → logprob: -11.358498573303223
    7. '        
' → logprob: -11.608498573303223
    8. '   ' → logprob: -11.858498573303223
    9. ' level' → logprob: -12.108498573303223
    10. '
' → logprob: -12.983498573303223

Token 316: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.919942486798391e-05
    2. ' i' → logprob: -9.750059127807617
    3. 'v' → logprob: -14.375059127807617
    4. 'in' → logprob: -16.375059127807617
    5. 'x' → logprob: -16.500059127807617
    6. 'u' → logprob: -17.125059127807617
    7. ' ' → logprob: -17.750059127807617
    8. 'k' → logprob: -18.125059127807617
    9. 'idx' → logprob: -18.125059127807617
    10. ' in' → logprob: -18.500059127807617

Token 317: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12693586945533752
    2. 'in' → logprob: -2.1269359588623047
    3. 'level' → logprob: -13.376935958862305
    4. ' ' → logprob: -13.751935958862305
    5. 'import' → logprob: -14.251935958862305
    6. '
' → logprob: -14.376935958862305
    7. '   ' → logprob: -14.501935958862305
    8. ',' → logprob: -14.751935958862305
    9. 'In' → logprob: -14.751935958862305
    10. '_in' → logprob: -14.751935958862305

Token 318: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.5491004129871726e-05
    2. ' range' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.000045776367188
    4. ' ' → logprob: -19.500045776367188
    5. '
' → logprob: -20.000045776367188
    6. '(range' → logprob: -20.250045776367188
    7. '  ' → logprob: -20.750045776367188
    8. '

' → logprob: -21.250045776367188
    9. '	range' → logprob: -21.500045776367188
    10. 'r' → logprob: -21.750045776367188

Token 319: '(m' (ID: 2145)
  Prédit: 'mf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mf' → logprob: -0.01473653968423605
    2. '(m' → logprob: -4.264736652374268
    3. 'len' → logprob: -8.01473617553711
    4. 'm' → logprob: -8.51473617553711
    5. ' mf' → logprob: -10.63973617553711
    6. '(len' → logprob: -11.63973617553711
    7. '-mf' → logprob: -12.01473617553711
    8. '   ' → logprob: -13.26473617553711
    9. '
' → logprob: -13.88973617553711
    10. '0' → logprob: -16.51473617553711

Token 320: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -5.9795445849886164e-05
    2. '   ' → logprob: -10.375060081481934
    3. 'mf' → logprob: -11.625060081481934
    4. 'n' → logprob: -12.000060081481934
    5. '       ' → logprob: -12.250060081481934
    6. 'F' → logprob: -13.000060081481934
    7. ')' → logprob: -13.500060081481934
    8. '2' → logprob: -14.375060081481934
    9. ' mf' → logprob: -14.500060081481934
    10. '[' → logprob: -14.500060081481934

Token 321: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00043472214019857347
    2. 'n' → logprob: -7.750434875488281
    3. '.' → logprob: -13.125434875488281
    4. ')' → logprob: -14.375434875488281
    5. ' .' → logprob: -14.625434875488281
    6. ')n' → logprob: -15.000434875488281
    7. '	n' → logprob: -15.750434875488281
    8. ',n' → logprob: -15.750434875488281
    9. '   ' → logprob: -16.00043487548828
    10. '(n' → logprob: -16.37543487548828

Token 322: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.018272263929247856
    2. '):' → logprob: -4.018272399902344
    3. ':
' → logprob: -10.143272399902344
    4. '       ' → logprob: -10.268272399902344
    5. '           ' → logprob: -10.393272399902344
    6. '):
' → logprob: -11.518272399902344
    7. ':' → logprob: -13.143272399902344
    8. '   ' → logprob: -13.643272399902344
    9. ')' → logprob: -13.768272399902344
    10. ']:
' → logprob: -13.768272399902344

Token 323: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8123984336853027
    2. 'level' → logprob: -1.4373984336853027
    3. '   ' → logprob: -1.5623984336853027
    4. ' level' → logprob: -2.4373984336853027
    5. '	level' → logprob: -4.437398433685303
    6. '       ' → logprob: -4.812398433685303
    7. '[level' → logprob: -6.812398433685303
    8. '(level' → logprob: -7.937398433685303
    9. '	   ' → logprob: -9.562398910522461
    10. '.level' → logprob: -9.812398910522461

Token 324: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' (adapté à ' level') → logprob: -0.01135243196040392
    2. ' level' → logprob: -4.5113525390625
    3. '   ' → logprob: -8.3863525390625
    4. '           ' → logprob: -10.0113525390625
    5. '	level' → logprob: -10.5113525390625
    6. '       ' → logprob: -13.2613525390625
    7. '[level' → logprob: -13.6363525390625
    8. '(level' → logprob: -14.2613525390625
    9. '.level' → logprob: -15.1363525390625
    10. '  ' → logprob: -15.6363525390625

Token 325: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[
' → logprob: -16.125
    3. ' [' → logprob: -17.625
    4. '=' → logprob: -17.75
    5. '```' → logprob: -17.75
    6. '[-' → logprob: -18.0
    7. '[' → logprob: -18.0
    8. '
' → logprob: -18.125
    9. 'i' → logprob: -18.625
    10. '=i' → logprob: -18.875

Token 326: ']=-' (ID: 162819)
  Prédit: '=-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=-' → logprob: -0.1706228256225586
    2. ']=-' → logprob: -1.9206228256225586
    3. ' =' → logprob: -5.170622825622559
    4. ']' → logprob: -5.795622825622559
    5. ']=' → logprob: -6.670622825622559
    6. '=' → logprob: -8.170622825622559
    7. '           ' → logprob: -11.045622825622559
    8. '-' → logprob: -11.295622825622559
    9. ')' → logprob: -11.545622825622559
    10. '   ' → logprob: -11.545622825622559

Token 327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. '2' → logprob: -13.625001907348633
    3. ' ' → logprob: -14.250001907348633
    4. '-' → logprob: -15.125001907348633
    5. '   ' → logprob: -16.812501907348633
    6. '
' → logprob: -18.000001907348633
    7. '１' → logprob: -18.000001907348633
    8. '

' → logprob: -18.125001907348633
    9. 'sys' → logprob: -18.125001907348633
    10. 'from' → logprob: -18.312501907348633

Token 328: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1413792222738266
    2. '<|end|>' → logprob: -2.1413791179656982
    3. '
' → logprob: -4.516379356384277
    4. '<|end|>' → logprob: -5.891379356384277
    5. ',' → logprob: -8.516379356384277
    6. '   ' → logprob: -8.891379356384277
    7. ' if' → logprob: -9.141379356384277
    8. '           ' → logprob: -10.391379356384277
    9. '        
' → logprob: -10.516379356384277
    10. '```' → logprob: -10.641379356384277

Token 329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05367390066385269
    2. '<|end|>' → logprob: -3.1786739826202393
    3. ' if' → logprob: -4.67867374420166
    4. 'if' → logprob: -7.05367374420166
    5. '<|end|>' → logprob: -8.42867374420166
    6. '   ' → logprob: -9.80367374420166
    7. ',' → logprob: -9.92867374420166
    8. ')' → logprob: -10.17867374420166
    9. '
' → logprob: -10.92867374420166
    10. '	if' → logprob: -10.92867374420166

Token 330: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20863407850265503
    2. '       ' → logprob: -1.7086341381072998
    3. ' if' → logprob: -4.958633899688721
    4. '<|end|>' → logprob: -8.958634376525879
    5. 'If' → logprob: -10.708634376525879
    6. '	if' → logprob: -11.458634376525879
    7. '   ' → logprob: -12.583634376525879
    8. '           ' → logprob: -13.583634376525879
    9. ';if' → logprob: -13.583634376525879
    10. '```' → logprob: -13.708634376525879

Token 331: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0790620818734169
    2. ' not' → logprob: -2.579061985015869
    3. '   ' → logprob: -9.454062461853027
    4. '!' → logprob: -9.954062461853027
    5. '       ' → logprob: -10.704062461853027
    6. '(not' → logprob: -11.829062461853027
    7. '	not' → logprob: -12.204062461853027
    8. '
' → logprob: -12.204062461853027
    9. '           ' → logprob: -12.579062461853027
    10. '```' → logprob: -13.704062461853027

Token 332: ' mf' (ID: 45148)
  Prédit: 'mf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mf' → logprob: -0.16022463142871857
    2. ' mf' → logprob: -1.9102246761322021
    3. '-mf' → logprob: -15.160224914550781
    4. 'max' → logprob: -16.28522491455078
    5. 'm' → logprob: -16.41022491455078
    6. '(m' → logprob: -17.16022491455078
    7. 'Mf' → logprob: -18.41022491455078
    8. 'self' → logprob: -18.66022491455078
    9. 'MF' → logprob: -19.16022491455078
    10. ' ' → logprob: -19.78522491455078

Token 333: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -15.625000953674316
    3. ' .' → logprob: -15.625000953674316
    4. '​.' → logprob: -16.0
    5. '.B' → logprob: -16.25
    6. 'b' → logprob: -17.5
    7. '   ' → logprob: -18.125
    8. ' bfs' → logprob: -18.375
    9. ').' → logprob: -18.75
    10. '```' → logprob: -18.75

Token 334: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -4.320199877838604e-07
    2. 's' → logprob: -15.5
    3. 'f' → logprob: -16.125
    4. 'sf' → logprob: -16.75
    5. 'FS' → logprob: -17.375
    6. ' fs' → logprob: -19.5
    7. 'r' → logprob: -20.875
    8. 'b' → logprob: -21.5
    9. '(fs' → logprob: -21.625
    10. 'fsi' → logprob: -21.625

Token 335: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.4140441635390744e-05
    2. 's' → logprob: -11.625014305114746
    3. '(' → logprob: -12.875014305114746
    4. ' (' → logprob: -13.125014305114746
    5. '(t' → logprob: -15.500014305114746
    6. '(
' → logprob: -16.00001335144043
    7. ' s' → logprob: -16.12501335144043
    8. '<|end|>' → logprob: -18.12501335144043
    9. ' ' → logprob: -19.62501335144043
    10. '
' → logprob: -20.00001335144043

Token 336: ',t' (ID: 26927)
  Prédit: ',t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',t' → logprob: -0.029981767758727074
    2. ',' → logprob: -3.529981851577759
    3. 't' → logprob: -9.02998161315918
    4. ' ,' → logprob: -9.27998161315918
    5. ' t' → logprob: -11.02998161315918
    6. '       ' → logprob: -14.77998161315918
    7. ',
' → logprob: -15.15498161315918
    8. '	t' → logprob: -15.27998161315918
    9. '   ' → logprob: -15.52998161315918
    10. '(t' → logprob: -15.77998161315918

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.203409844194539e-05
    2. ' ,' → logprob: -10.125041961669922
    3. 'level' → logprob: -13.375041961669922
    4. ' level' → logprob: -16.000041961669922
    5. '[level' → logprob: -16.125041961669922
    6. ',
' → logprob: -16.625041961669922
    7. '
' → logprob: -18.875041961669922
    8. '   ' → logprob: -19.000041961669922
    9. ',int' → logprob: -19.250041961669922
    10. '(level' → logprob: -19.250041961669922

Token 338: 'level' (ID: 6164)
  Prédit: 'level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -1.0206720617134124e-05
    2. ' level' → logprob: -11.50001049041748
    3. '[level' → logprob: -19.750009536743164
    4. '	level' → logprob: -21.375009536743164
    5. '(level' → logprob: -22.000009536743164
    6. '
' → logprob: -24.250009536743164
    7. ')' → logprob: -24.500009536743164
    8. 'length' → logprob: -24.875009536743164
    9. 'layer' → logprob: -25.125009536743164
    10. '_level' → logprob: -25.375009536743164

Token 339: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06205596774816513
    2. '):
' → logprob: -2.812056064605713
    3. '):
' → logprob: -9.812055587768555
    4. ':' → logprob: -10.937055587768555
    5. '       ' → logprob: -11.437055587768555
    6. ')' → logprob: -12.437055587768555
    7. ' ):' → logprob: -14.312055587768555
    8. '           ' → logprob: -15.937055587768555
    9. ':
' → logprob: -16.062055587768555
    10. '   ' → logprob: -16.437055587768555

Token 340: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.4121114822482923e-06
    2. ' break' → logprob: -13.375003814697266
    3. '               ' → logprob: -14.375003814697266
    4. '       ' → logprob: -14.750003814697266
    5. '		' → logprob: -15.000003814697266
    6. 'break' → logprob: -15.750003814697266
    7. '	break' → logprob: -16.125003814697266
    8. '   ' → logprob: -16.750003814697266
    9. '          ' → logprob: -16.875003814697266
    10. '	       ' → logprob: -17.125003814697266

Token 341: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2553673982620239
    2. 'break' → logprob: -1.505367398262024
    3. ' break' → logprob: -6.130367279052734
    4. '	break' → logprob: -7.630367279052734
    5. '               ' → logprob: -8.005367279052734
    6. '		' → logprob: -8.755367279052734
    7. 'return' (adapté à ' return') → logprob: -8.880367279052734
    8. '```' → logprob: -9.505367279052734
    9. '       ' → logprob: -10.755367279052734
    10. '   ' → logprob: -11.005367279052734

Token 342: ' flow' (ID: 7845)
  Prédit: 'flow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flow' → logprob: -2.7610454708337784e-05
    2. ' flow' → logprob: -10.500027656555176
    3. '(flow' → logprob: -20.00002670288086
    4. 'flux' → logprob: -21.75002670288086
    5. '.flow' → logprob: -22.25002670288086
    6. '_flow' → logprob: -22.25002670288086
    7. 'flows' → logprob: -23.62502670288086
    8. 'Flow' → logprob: -23.75002670288086
    9. '   ' → logprob: -24.50002670288086
    10. '
' → logprob: -24.50002670288086

Token 343: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002807013690471649
    2. '   ' → logprob: -6.002807140350342
    3. '<|end|>' → logprob: -9.002806663513184
    4. '           ' → logprob: -9.877806663513184
    5. '        
' → logprob: -10.377806663513184
    6. '
' → logprob: -10.627806663513184
    7. '	' → logprob: -11.252806663513184
    8. '<|end|>' → logprob: -11.377806663513184
    9. '	   ' → logprob: -11.502806663513184
    10. '      ' → logprob: -12.127806663513184

Token 344: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021894186735153198
    2. '   ' → logprob: -3.8968942165374756
    3. '<|end|>' → logprob: -7.5218939781188965
    4. '           ' → logprob: -8.146894454956055
    5. '        
' → logprob: -9.271894454956055
    6. '<|end|>' → logprob: -9.646894454956055
    7. '    ' → logprob: -9.896894454956055
    8. '     ' → logprob: -9.896894454956055
    9. '	' → logprob: -10.021894454956055
    10. '```' → logprob: -10.271894454956055

Token 345: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' (adapté à ' it') → logprob: -0.011713845655322075
    2. '       ' → logprob: -4.511713981628418
    3. '   ' → logprob: -7.761713981628418
    4. ' it' → logprob: -8.386713981628418
    5. '           ' → logprob: -12.261713981628418
    6. 'iter' → logprob: -13.261713981628418
    7. ' ' → logprob: -13.261713981628418
    8. '0' → logprob: -14.011713981628418
    9. 'while' → logprob: -14.136713981628418
    10. '	it' → logprob: -14.136713981628418

Token 346: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.0002639582962729037
    2. ' =[' → logprob: -9.125264167785645
    3. '=' → logprob: -9.250264167785645
    4. ' =' → logprob: -9.750264167785645
    5. '=list' → logprob: -15.625264167785645
    6. '=[]' → logprob: -16.125263214111328
    7. '[' → logprob: -16.500263214111328
    8. '=[[' → logprob: -16.750263214111328
    9. '   ' → logprob: -17.125263214111328
    10. '={[' → logprob: -17.250263214111328

Token 347: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '[' → logprob: -20.0
    4. '０' → logprob: -21.625
    5. '   ' → logprob: -21.75
    6. '۰' → logprob: -22.25
    7. '```' → logprob: -22.375
    8. '
' → logprob: -23.875
    9. '(' → logprob: -25.25
    10. '  ' → logprob: -25.375

Token 348: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.003690216923132539
    2. ']' → logprob: -6.003690242767334
    3. 'for' → logprob: -7.378690242767334
    4. ' for' → logprob: -7.503690242767334
    5. ']*(' → logprob: -11.378689765930176
    6. '*m' → logprob: -11.503689765930176
    7. 'mf' → logprob: -11.753689765930176
    8. ']+' → logprob: -12.003689765930176
    9. '*' → logprob: -13.878689765930176
    10. '   ' → logprob: -14.628689765930176

Token 349: 'mf' (ID: 54650)
  Prédit: 'mf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mf' → logprob: 0.0
    2. ' mf' → logprob: -16.75
    3. '-mf' → logprob: -21.125
    4. 'm' → logprob: -21.5
    5. '(m' → logprob: -21.75
    6. 'len' → logprob: -23.75
    7. '(' → logprob: -23.75
    8. 'nf' → logprob: -24.25
    9. '   ' → logprob: -25.5
    10. '
' → logprob: -25.75

Token 350: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.011050296947360039
    2. 'n' → logprob: -4.511050224304199
    3. '<n' → logprob: -13.3860502243042
    4. '(n' → logprob: -14.7610502243042
    5. '_n' → logprob: -15.7610502243042
    6. '.m' → logprob: -15.8860502243042
    7. ',n' → logprob: -16.386051177978516
    8. '[n' → logprob: -17.011051177978516
    9. '	n' → logprob: -17.136051177978516
    10. '.' → logprob: -17.261051177978516

Token 351: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.612430214881897
    2. '<|end|>' → logprob: -0.987430214881897
    3. '
' → logprob: -2.7374300956726074
    4. '<|end|>' → logprob: -4.862430095672607
    5. ',' → logprob: -5.487430095672607
    6. 'while' → logprob: -5.862430095672607
    7. '        
' → logprob: -6.487430095672607
    8. '  
' → logprob: -6.487430095672607
    9. ' while' → logprob: -7.237430095672607
    10. '	while' → logprob: -7.862430095672607

Token 352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0325196348130703
    2. 'while' → logprob: -3.532519578933716
    3. ' while' → logprob: -6.032519817352295
    4. '	while' → logprob: -8.282519340515137
    5. '   ' → logprob: -9.782519340515137
    6. '<|end|>' → logprob: -11.032519340515137
    7. 'While' → logprob: -11.282519340515137
    8. '
' → logprob: -12.032519340515137
    9. '           ' → logprob: -12.157519340515137
    10. '	' → logprob: -12.532519340515137

Token 353: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.005464978516101837
    2. '       ' → logprob: -5.255465030670166
    3. ' while' → logprob: -8.755464553833008
    4. 'f' → logprob: -9.755464553833008
    5. '	while' → logprob: -11.505464553833008
    6. '   ' → logprob: -12.630464553833008
    7. 'While' → logprob: -14.005464553833008
    8. '           ' → logprob: -14.380464553833008
    9. '```' → logprob: -15.255464553833008
    10. 'flow' → logprob: -15.755464553833008

Token 354: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.4085496664047241
    2. 'True' → logprob: -1.1585496664047241
    3. '(True' → logprob: -4.158549785614014
    4. 'd' → logprob: -6.033549785614014
    5. '1' → logprob: -7.033549785614014
    6. ' d' → logprob: -7.158549785614014
    7. '(d' → logprob: -7.283549785614014
    8. ' (' → logprob: -7.283549785614014
    9. ' ' → logprob: -8.658549308776855
    10. '   ' → logprob: -8.908549308776855

Token 355: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16948391497135162
    2. '           ' → logprob: -2.2944839000701904
    3. ':
' → logprob: -2.9194839000701904
    4. '       ' → logprob: -7.7944841384887695
    5. '<|end|>' → logprob: -8.29448413848877
    6. '<|end|>' → logprob: -9.79448413848877
    7. '          ' → logprob: -9.91948413848877
    8. ',' → logprob: -9.91948413848877
    9. ' :' → logprob: -10.04448413848877
    10. '               ' → logprob: -10.16948413848877

Token 356: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005796041805297136
    2. 'd' → logprob: -7.625579833984375
    3. '       ' → logprob: -10.375579833984375
    4. '```' → logprob: -11.250579833984375
    5. '   ' → logprob: -11.500579833984375
    6. 'f' → logprob: -11.500579833984375
    7. '               ' → logprob: -11.750579833984375
    8. '          ' → logprob: -12.750579833984375
    9. '         ' → logprob: -12.875579833984375
    10. '		' → logprob: -13.125579833984375

Token 357: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.31746527552604675
    2. '           ' → logprob: -1.3174653053283691
    3. ' f' → logprob: -6.317465305328369
    4. 'd' → logprob: -6.442465305328369
    5. '   ' → logprob: -8.317464828491211
    6. 'flow' → logprob: -8.692464828491211
    7. 'v' → logprob: -9.692464828491211
    8. '               ' → logprob: -9.692464828491211
    9. '	f' → logprob: -9.692464828491211
    10. 'F' → logprob: -9.942464828491211

Token 358: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004103096667677164
    2. ' =' → logprob: -5.754103183746338
    3. '=f' → logprob: -7.254103183746338
    4. '=m' → logprob: -8.87910270690918
    5. '=max' → logprob: -10.00410270690918
    6. '=self' → logprob: -11.87910270690918
    7. '=_' → logprob: -12.62910270690918
    8. '=df' → logprob: -12.62910270690918
    9. '=my' → logprob: -12.75410270690918
    10. '=tf' → logprob: -12.87910270690918

Token 359: 'mf' (ID: 54650)
  Prédit: 'mf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mf' → logprob: -4.56102097814437e-05
    2. ' mf' → logprob: -10.000045776367188
    3. '-mf' → logprob: -16.750045776367188
    4. 'max' → logprob: -16.875045776367188
    5. '   ' → logprob: -18.875045776367188
    6. 'm' → logprob: -19.125045776367188
    7. '           ' → logprob: -20.125045776367188
    8. '0' → logprob: -20.375045776367188
    9. 'Mf' → logprob: -21.000045776367188
    10. 'mc' → logprob: -21.500045776367188

Token 360: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -1.843177233240567e-05
    2. 'dfs' → logprob: -11.000018119812012
    3. '.' → logprob: -14.500018119812012
    4. '   ' → logprob: -14.875018119812012
    5. ' dfs' → logprob: -15.000018119812012
    6. ' .' → logprob: -15.250018119812012
    7. '
' → logprob: -16.875019073486328
    8. '>.' → logprob: -17.000019073486328
    9. '(d' → logprob: -17.500019073486328
    10. '._' → logprob: -17.500019073486328

Token 361: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -7.896309739408025e-07
    2. 'sf' → logprob: -15.125000953674316
    3. 'dfs' → logprob: -15.500000953674316
    4. 'f' → logprob: -16.375
    5. ' fs' → logprob: -16.375
    6. 's' → logprob: -16.625
    7. '(fs' → logprob: -17.0
    8. '	fs' → logprob: -19.25
    9. '_fs' → logprob: -19.625
    10. '```' → logprob: -19.625

Token 362: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0003472633252386004
    2. 's' → logprob: -8.000347137451172
    3. '(' → logprob: -12.250347137451172
    4. ' s' → logprob: -12.500347137451172
    5. '(
' → logprob: -13.625347137451172
    6. '<|end|>' → logprob: -13.750347137451172
    7. '(t' → logprob: -14.250347137451172
    8. ' (' → logprob: -16.000347137451172
    9. '<s' → logprob: -16.375347137451172
    10. 't' → logprob: -17.250347137451172

Token 363: ',t' (ID: 26927)
  Prédit: ',t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',t' → logprob: -0.04462358355522156
    2. 't' → logprob: -3.294623613357544
    3. ',' → logprob: -5.044623374938965
    4. '(t' → logprob: -10.044623374938965
    5. ' t' → logprob: -10.169623374938965
    6. ' ,' → logprob: -11.919623374938965
    7. ',
' → logprob: -12.044623374938965
    8. ')t' → logprob: -12.169623374938965
    9. '<t' → logprob: -13.169623374938965
    10. '   ' → logprob: -13.294623374938965

Token 364: ',' (ID: 11)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.06307093799114227
    2. ',' → logprob: -2.8130710124969482
    3. ' INF' → logprob: -7.563070774078369
    4. '(IN' → logprob: -7.688070774078369
    5. 'IN' → logprob: -9.688071250915527
    6. '10' → logprob: -10.938071250915527
    7. ' ,' → logprob: -11.438071250915527
    8. '1' → logprob: -11.938071250915527
    9. 'Inf' → logprob: -12.313071250915527
    10. ',float' → logprob: -12.313071250915527

Token 365: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -1.9361264946837764e-07
    2. ' INF' → logprob: -15.75
    3. '   ' → logprob: -17.375
    4. 'IN' → logprob: -18.75
    5. '_INF' → logprob: -20.125
    6. '10' → logprob: -20.625
    7. '-INF' → logprob: -20.875
    8. 'INT' → logprob: -21.625
    9. '999' → logprob: -22.25
    10. '
' → logprob: -22.25

Token 366: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.593480110168457
    2. ',it' → logprob: -1.218480110168457
    3. ',f' → logprob: -2.593480110168457
    4. ')' → logprob: -3.093480110168457
    5. ' ,' → logprob: -3.593480110168457
    6. ')
' → logprob: -6.093480110168457
    7. ' )' → logprob: -7.093480110168457
    8. ',i' → logprob: -7.968480110168457
    9. '           ' → logprob: -8.968480110168457
    10. '       ' → logprob: -9.093480110168457

Token 367: 'level' (ID: 6164)
  Prédit: 'level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -6.392202976712724e-06
    2. ' level' → logprob: -12.000006675720215
    3. '[level' → logprob: -15.875006675720215
    4. '	level' → logprob: -18.0000057220459
    5. '(level' → logprob: -18.2500057220459
    6. '-level' → logprob: -21.1250057220459
    7. '.level' → logprob: -21.8750057220459
    8. '
' → logprob: -22.1250057220459
    9. 'layer' → logprob: -22.2500057220459
    10. 'length' → logprob: -22.6250057220459

Token 368: ',it' (ID: 133769)
  Prédit: ',it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',it' → logprob: -0.00021951000962872058
    2. ' ,' → logprob: -9.000219345092773
    3. ',' → logprob: -9.250219345092773
    4. ',i' → logprob: -18.625219345092773
    5. ',you' → logprob: -19.125219345092773
    6. '[it' → logprob: -20.000219345092773
    7. ',in' → logprob: -20.000219345092773
    8. ',int' → logprob: -20.000219345092773
    9. ',but' → logprob: -20.250219345092773
    10. ',to' → logprob: -20.375219345092773

Token 369: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020040515810251236
    2. ')' → logprob: -4.020040512084961
    3. '<|end|>' → logprob: -6.645040512084961
    4. '<|end|>' → logprob: -8.895040512084961
    5. '		' → logprob: -9.395040512084961
    6. '):
' → logprob: -9.645040512084961
    7. ',' → logprob: -9.770040512084961
    8. '               ' → logprob: -10.145040512084961
    9. ')>' → logprob: -10.520040512084961
    10. '       ' → logprob: -10.645040512084961

Token 370: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.117345684382599e-05
    2. '<|end|>' → logprob: -11.750020980834961
    3. '		' → logprob: -12.625020980834961
    4. '<|end|>' → logprob: -13.125020980834961
    5. '	       ' → logprob: -13.250020980834961
    6. '       ' → logprob: -13.875020980834961
    7. '          ' → logprob: -14.250020980834961
    8. '               ' → logprob: -14.250020980834961
    9. ' ' → logprob: -14.250020980834961
    10. '
' → logprob: -14.625020980834961

Token 371: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3788004219532013
    2. 'if' (adapté à ' if') → logprob: -1.628800392150879
    3. ' if' → logprob: -2.128800392150879
    4. '
' → logprob: -10.003800392150879
    5. '0' → logprob: -10.878800392150879
    6. '	if' → logprob: -11.253800392150879
    7. '       ' → logprob: -11.378800392150879
    8. '            
' → logprob: -11.378800392150879
    9. '   ' → logprob: -11.503800392150879
    10. 'If' → logprob: -11.628800392150879

Token 372: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.012343411333858967
    2. ' f' → logprob: -4.512343406677246
    3. ' not' → logprob: -6.762343406677246
    4. 'not' → logprob: -8.887343406677246
    5. ' ' → logprob: -16.387344360351562
    6. '0' → logprob: -17.012344360351562
    7. '!' → logprob: -17.887344360351562
    8. '	f' → logprob: -18.137344360351562
    9. '   ' → logprob: -18.262344360351562
    10. ' ' → logprob: -19.262344360351562

Token 373: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.009343178942799568
    2. ' ==' → logprob: -4.759343147277832
    3. '<=' → logprob: -7.384343147277832
    4. ')==' → logprob: -9.759343147277832
    5. ']==' → logprob: -10.884343147277832
    6. '===' → logprob: -12.134343147277832
    7. '0' → logprob: -12.134343147277832
    8. ' <=' → logprob: -12.134343147277832
    9. '==
' → logprob: -12.384343147277832
    10. '()==' → logprob: -12.384343147277832

Token 374: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -19.75002670288086
    4. '۰' → logprob: -19.75002670288086
    5. '０' → logprob: -20.12502670288086
    6. '00' → logprob: -20.62502670288086
    7. '  ' → logprob: -20.62502670288086
    8. '```' → logprob: -22.00002670288086
    9. '000' → logprob: -23.37502670288086
    10. ' ' → logprob: -23.37502670288086

Token 375: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.41399502754211426
    2. ':
' → logprob: -1.6639950275421143
    3. '               ' → logprob: -2.2889950275421143
    4. '           ' → logprob: -3.0389950275421143
    5. ':return' → logprob: -9.538994789123535
    6. '	break' → logprob: -10.038994789123535
    7. '       ' → logprob: -10.038994789123535
    8. '		' → logprob: -10.413994789123535
    9. '              ' → logprob: -10.663994789123535
    10. ':
' → logprob: -10.788994789123535

Token 376: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00022082125360611826
    2. '           ' → logprob: -8.500221252441406
    3. '	           ' → logprob: -12.375221252441406
    4. '                   ' → logprob: -12.750221252441406
    5. '			' → logprob: -13.000221252441406
    6. '              ' → logprob: -13.125221252441406
    7. '       ' → logprob: -13.875221252441406
    8. '	break' → logprob: -14.250221252441406
    9. '		       ' → logprob: -14.250221252441406
    10. 'break' → logprob: -14.375221252441406

Token 377: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8534982204437256
    2. 'break' (adapté à ' break') → logprob: -1.1034982204437256
    3. '           ' → logprob: -2.1034982204437256
    4. ' break' → logprob: -2.2284982204437256
    5. '	break' → logprob: -4.603498458862305
    6. '                   ' → logprob: -6.478498458862305
    7. '   ' → logprob: -7.478498458862305
    8. '_break' → logprob: -8.603498458862305
    9. '       ' → logprob: -9.353498458862305
    10. '		' → logprob: -9.603498458862305

Token 378: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006055758567526937
    2. '       ' → logprob: -7.750605583190918
    3. '
' → logprob: -9.625605583190918
    4. '<|end|>' → logprob: -10.500605583190918
    5. '               ' → logprob: -10.875605583190918
    6. '		' → logprob: -11.500605583190918
    7. '   ' → logprob: -11.500605583190918
    8. 'flow' → logprob: -11.750605583190918
    9. '(flow' → logprob: -12.125605583190918
    10. '            
' → logprob: -12.250605583190918

Token 379: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032907098066061735
    2. '       ' → logprob: -5.75329065322876
    3. 'flow' → logprob: -9.378291130065918
    4. '   ' → logprob: -12.003291130065918
    5. '               ' → logprob: -12.253291130065918
    6. '         ' → logprob: -12.628291130065918
    7. '          ' → logprob: -12.878291130065918
    8. '<|end|>' → logprob: -12.878291130065918
    9. ' flow' → logprob: -13.253291130065918
    10. '
' → logprob: -13.378291130065918

Token 380: ' flow' (ID: 7845)
  Prédit: ' flow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flow' → logprob: -0.48927247524261475
    2. 'flow' (adapté à ' flow') → logprob: -0.9892724752426147
    3. '           ' → logprob: -4.239272594451904
    4. '       ' → logprob: -8.239272117614746
    5. '(flow' → logprob: -8.614272117614746
    6. '.flow' → logprob: -9.114272117614746
    7. '
' → logprob: -9.739272117614746
    8. '   ' → logprob: -10.489272117614746
    9. '_flow' → logprob: -11.364272117614746
    10. '               ' → logprob: -12.739272117614746

Token 381: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.002903539687395096
    2. ' +=' → logprob: -5.877903461456299
    3. ']+=' → logprob: -9.252903938293457
    4. '+=(' → logprob: -13.627903938293457
    5. '+="' → logprob: -14.127903938293457
    6. '+' → logprob: -14.502903938293457
    7. '+='' → logprob: -15.002903938293457
    8. '   ' → logprob: -17.12790298461914
    9. '
' → logprob: -18.00290298461914
    10. '```' → logprob: -18.50290298461914

Token 382: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -9.615255839889869e-05
    2. ' f' → logprob: -9.250096321105957
    3. '	f' → logprob: -20.75009536743164
    4. '```' → logprob: -21.62509536743164
    5. '
' → logprob: -22.37509536743164
    6. '   ' → logprob: -23.37509536743164
    7. ' ' → logprob: -23.87509536743164
    8. '<|end|>' → logprob: -24.12509536743164
    9. '_f' → logprob: -24.37509536743164
    10. '           ' → logprob: -25.25009536743164

Token 383: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 384: 'N' (ID: 45)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 385: ',E' (ID: 101576)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6432455778121948
    2. '=' → logprob: -1.3932455778121948
    3. ' =' → logprob: -1.5182455778121948
    4. ',N' → logprob: -6.018245697021484
    5. ' ,' → logprob: -6.768245697021484
    6. ' ' → logprob: -7.143245697021484
    7. '=int' → logprob: -7.518245697021484
    8. ',K' → logprob: -7.768245697021484
    9. '   ' → logprob: -8.518245697021484
    10. ')' → logprob: -8.643245697021484

Token 386: ',Q' (ID: 130136)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12180202454328537
    2. ',' → logprob: -2.7468020915985107
    3. ' =' → logprob: -2.9968020915985107
    4. '=input' → logprob: -8.37180233001709
    5. ',M' → logprob: -8.99680233001709
    6. '=int' → logprob: -9.62180233001709
    7. ' ' → logprob: -10.24680233001709
    8. ' ,' → logprob: -10.62180233001709
    9. '=sys' → logprob: -10.62180233001709
    10. ',K' → logprob: -10.87180233001709

Token 387: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038292672485113144
    2. ',' → logprob: -3.913292646408081
    3. ' =' → logprob: -4.28829288482666
    4. '=int' → logprob: -6.41329288482666
    5. '=input' → logprob: -7.03829288482666
    6. ',N' → logprob: -7.78829288482666
    7. '=
' → logprob: -8.28829288482666
    8. '=N' → logprob: -9.28829288482666
    9. '
' → logprob: -9.66329288482666
    10. '=[]' → logprob: -9.78829288482666

Token 388: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0031833017710596323
    2. ' map' → logprob: -5.753183364868164
    3. 'list' → logprob: -12.378183364868164
    4. 'int' → logprob: -14.628183364868164
    5. '	map' → logprob: -14.878183364868164
    6. '[' → logprob: -15.378183364868164
    7. '0' → logprob: -15.878183364868164
    8. 'm' → logprob: -16.503183364868164
    9. '10' → logprob: -16.628183364868164
    10. 'tuple' → logprob: -16.753183364868164

Token 389: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0015366430161520839
    2. 'int' → logprob: -6.751536846160889
    3. '[int' → logprob: -8.75153636932373
    4. '=int' → logprob: -9.62653636932373
    5. '<int' → logprob: -10.12653636932373
    6. '(' → logprob: -10.37653636932373
    7. '(lambda' → logprob: -10.87653636932373
    8. 'map' → logprob: -11.12653636932373
    9. 'list' → logprob: -11.75153636932373
    10. '(map' → logprob: -12.00153636932373

Token 390: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.006407447159290314
    2. 'input' → logprob: -5.756407260894775
    3. ',' → logprob: -6.381407260894775
    4. '(input' → logprob: -7.631407260894775
    5. '=input' → logprob: -7.756407260894775
    6. ' input' → logprob: -8.631407737731934
    7. '(),' → logprob: -8.631407737731934
    8. ',int' → logprob: -9.006407737731934
    9. '()' → logprob: -10.131407737731934
    10. '().' → logprob: -10.506407737731934

Token 391: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.539801688631997e-05
    2. '())' → logprob: -9.750065803527832
    3. '()' → logprob: -11.875065803527832
    4. '(' → logprob: -16.875064849853516
    5. ' ().' → logprob: -18.000064849853516
    6. ')' → logprob: -18.500064849853516
    7. '();)' → logprob: -18.625064849853516
    8. '.split' → logprob: -19.125064849853516
    9. '());' → logprob: -19.750064849853516
    10. '()
' → logprob: -19.750064849853516

Token 392: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.2166411478538066e-05
    2. 'strip' → logprob: -10.000052452087402
    3. 'rstrip' → logprob: -12.000052452087402
    4. ' split' → logprob: -15.000052452087402
    5. '(split' → logprob: -15.375052452087402
    6. 'plit' → logprob: -17.750051498413086
    7. '_split' → logprob: -18.250051498413086
    8. 'spl' → logprob: -18.375051498413086
    9. '```' → logprob: -18.875051498413086
    10. ')' → logprob: -19.250051498413086

Token 393: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2816365659236908
    2. '())' → logprob: -1.5316365957260132
    3. '()' → logprob: -3.5316364765167236
    4. '(' → logprob: -11.906636238098145
    5. '())
' → logprob: -13.406636238098145
    6. '().' → logprob: -14.281636238098145
    7. '))' → logprob: -14.281636238098145
    8. '();)' → logprob: -14.281636238098145
    9. ')
' → logprob: -14.531636238098145
    10. '()
' → logprob: -14.906636238098145

Token 394: 'edges' (ID: 39127)
  Prédit: 'mf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mf' → logprob: -0.04258013889193535
    2. 'edges' → logprob: -3.2925801277160645
    3. 'm' → logprob: -6.6675801277160645
    4. 'max' → logprob: -7.0425801277160645
    5. '
' → logprob: -7.6675801277160645
    6. ' edges' → logprob: -7.7925801277160645
    7. 'nodes' → logprob: -8.042580604553223
    8. ' mf' → logprob: -8.292580604553223
    9. 'graph' → logprob: -9.042580604553223
    10. 'uf' → logprob: -9.542580604553223

Token 395: '=set' (ID: 166509)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.2535175383090973
    2. '=' → logprob: -1.503517508506775
    3. ' =' → logprob: -6.5035176277160645
    4. '=[' → logprob: -9.878517150878906
    5. '={}' → logprob: -11.003517150878906
    6. '=[]
' → logprob: -11.753517150878906
    7. '=[],' → logprob: -11.753517150878906
    8. '=[]
' → logprob: -13.503517150878906
    9. '＝' → logprob: -13.753517150878906
    10. '=list' → logprob: -14.128517150878906

Token 396: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.2603901015827432e-05
    2. '(' → logprob: -11.125022888183594
    3. '([]' → logprob: -12.875022888183594
    4. '()
' → logprob: -13.250022888183594
    5. '()\' → logprob: -14.125022888183594
    6. '()>' → logprob: -15.000022888183594
    7. '()]' → logprob: -15.125022888183594
    8. '()<' → logprob: -15.125022888183594
    9. '()

' → logprob: -15.250022888183594
    10. '();' → logprob: -15.250022888183594

Token 397: 'adj' (ID: 57001)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8548650145530701
    2. 'graph' → logprob: -1.1048650741577148
    3. 'edges' → logprob: -2.479865074157715
    4. 'max' → logprob: -3.604865074157715
    5. 'nodes' → logprob: -3.729865074157715
    6. 'uf' → logprob: -3.854865074157715
    7. 'adj' → logprob: -4.354865074157715
    8. 'mf' → logprob: -4.854865074157715
    9. 'flow' → logprob: -5.104865074157715
    10. ' for' → logprob: -5.104865074157715

Token 398: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.18057501316070557
    2. '=[]' → logprob: -1.9305750131607056
    3. '={}' → logprob: -4.180574893951416
    4. '=' → logprob: -5.805574893951416
    5. ' =' → logprob: -6.680574893951416
    6. '=[[' → logprob: -7.805574893951416
    7. '={' → logprob: -8.930575370788574
    8. '=set' → logprob: -11.055575370788574
    9. ' =[' → logprob: -11.055575370788574
    10. '[' → logprob: -11.930575370788574

Token 399: 'set' (ID: 977)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -5.848420551046729e-05
    2. 'set' → logprob: -10.0000581741333
    3. '[]
' → logprob: -11.5000581741333
    4. ' []' → logprob: -13.0000581741333
    5. '[' → logprob: -15.0000581741333
    6. '[]

' → logprob: -15.2500581741333
    7. 'list' → logprob: -17.750059127807617
    8. '[]}' → logprob: -18.250059127807617
    9. '0' → logprob: -18.750059127807617
    10. '[])' → logprob: -19.000059127807617

Token 400: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.584861744660884e-05
    2. '()]' → logprob: -10.000045776367188
    3. '()
' → logprob: -15.625045776367188
    4. ' ()' → logprob: -16.000045776367188
    5. '（）' → logprob: -16.625045776367188
    6. '()=>' → logprob: -17.750045776367188
    7. '([]' → logprob: -18.250045776367188
    8. '[]' → logprob: -18.250045776367188
    9. '()]
' → logprob: -18.250045776367188
    10. '(' → logprob: -18.500045776367188

Token 401: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.984787902794778e-05
    2. 'for' → logprob: -9.250100135803223
    3. ' for' → logprob: -13.250100135803223
    4. ' ()' → logprob: -13.250100135803223
    5. '(' → logprob: -17.000099182128906
    6. '（）' → logprob: -18.125099182128906
    7. '()]' → logprob: -18.250099182128906
    8. '(N' → logprob: -18.750099182128906
    9. '	for' → logprob: -19.000099182128906
    10. ' ' → logprob: -19.125099182128906

Token 402: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.010910461656749249
    2. ' range' → logprob: -4.885910511016846
    3. ' in' → logprob: -6.260910511016846
    4. 'in' → logprob: -7.260910511016846
    5. ' _' → logprob: -7.885910511016846
    6. 'range' → logprob: -8.135910034179688
    7. '_range' → logprob: -11.135910034179688
    8. '(range' → logprob: -13.760910034179688
    9. '_in' → logprob: -13.885910034179688
    10. ' ' → logprob: -14.885910034179688

Token 403: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.022155053913593292
    2. 'in' → logprob: -4.522155284881592
    3. ' range' → logprob: -4.522155284881592
    4. ' in' → logprob: -8.647154808044434
    5. '_' → logprob: -12.522154808044434
    6. ' ' → logprob: -14.647154808044434
    7. '_range' → logprob: -15.022154808044434
    8. '  ' → logprob: -16.64715576171875
    9. '0' → logprob: -16.89715576171875
    10. '	range' → logprob: -17.14715576171875

Token 404: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004306692280806601
    2. ' range' → logprob: -7.750430583953857
    3. '(range' → logprob: -17.500431060791016
    4. '	range' → logprob: -20.875431060791016
    5. 'rang' → logprob: -22.500431060791016
    6. 'r' → logprob: -22.500431060791016
    7. '   ' → logprob: -23.125431060791016
    8. 'in' → logprob: -23.125431060791016
    9. '
' → logprob: -23.375431060791016
    10. '_range' → logprob: -23.750431060791016

Token 405: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.12708233296871185
    2. '(N' → logprob: -2.127082347869873
    3. ' N' → logprob: -9.502081871032715
    4. 'range' → logprob: -10.252081871032715
    5. ' range' → logprob: -10.502081871032715
    6. ' (' → logprob: -11.127081871032715
    7. '(' → logprob: -13.877081871032715
    8. 'n' → logprob: -15.002081871032715
    9. '(n' → logprob: -15.377081871032715
    10. '(range' → logprob: -15.502081871032715

Token 406: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.723352049040841e-06
    2. ')' → logprob: -13.000004768371582
    3. ')]
' → logprob: -13.750004768371582
    4. ' )' → logprob: -14.500004768371582
    5. ']' → logprob: -14.750004768371582
    6. ')])' → logprob: -15.750004768371582
    7. '])]' → logprob: -16.125003814697266
    8. '])' → logprob: -16.250003814697266
    9. ')]

' → logprob: -17.000003814697266
    10. ')],' → logprob: -17.125003814697266

Token 407: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05642782896757126
    2. ' for' → logprob: -3.5564277172088623
    3. 'edges' → logprob: -4.306427955627441
    4. 'queries' → logprob: -5.181427955627441
    5. '
' → logprob: -5.681427955627441
    6. 'query' → logprob: -7.306427955627441
    7. ' queries' → logprob: -8.056427955627441
    8. 'result' → logprob: -8.306427955627441
    9. 'answers' → logprob: -8.306427955627441
    10. ' edges' → logprob: -8.431427955627441

Token 408: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2519613206386566
    2. ' _' → logprob: -1.501961350440979
    3. '_i' → logprob: -10.501961708068848
    4. ' i' → logprob: -12.876961708068848
    5. 'i' → logprob: -13.751961708068848
    6. '_e' → logprob: -15.001961708068848
    7. ' ' → logprob: -15.001961708068848
    8. ' ' → logprob: -15.501961708068848
    9. '_=' → logprob: -15.751961708068848
    10. '__' → logprob: -17.37696075439453

Token 409: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25200265645980835
    2. 'in' → logprob: -1.5020027160644531
    3. ' ' → logprob: -9.877002716064453
    4. '_' → logprob: -11.752002716064453
    5. 'range' → logprob: -11.877002716064453
    6. 's' → logprob: -13.377002716064453
    7. 'import' → logprob: -13.627002716064453
    8. '```' → logprob: -13.877002716064453
    9. 'i' → logprob: -14.252002716064453
    10. ' _' → logprob: -14.627002716064453

Token 410: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00010914575977949426
    2. ' range' → logprob: -9.12510871887207
    3. 'r' → logprob: -17.12510871887207
    4. 'in' → logprob: -17.25010871887207
    5. 'map' → logprob: -17.50010871887207
    6. 'rang' → logprob: -17.62510871887207
    7. '(range' → logprob: -17.75010871887207
    8. 'input' → logprob: -18.12510871887207
    9. '	range' → logprob: -18.75010871887207
    10. '0' → logprob: -19.25010871887207

Token 411: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.0545162707567215
    2. 'E' → logprob: -3.054516315460205
    3. ' E' → logprob: -5.179516315460205
    4. '(Q' → logprob: -8.804515838623047
    5. ' (' → logprob: -9.554515838623047
    6. '(' → logprob: -10.304515838623047
    7. 'Q' → logprob: -10.679515838623047
    8. ' ' → logprob: -13.554515838623047
    9. ' Q' → logprob: -14.679515838623047
    10. ',E' → logprob: -15.054515838623047

Token 412: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1474723368883133
    2. '):
' → logprob: -2.147472381591797
    3. ',' → logprob: -4.147472381591797
    4. ')' → logprob: -5.772472381591797
    5. ' ):' → logprob: -7.647472381591797
    6. ',a' → logprob: -8.147472381591797
    7. ':' → logprob: -8.522472381591797
    8. ',input' → logprob: -8.897472381591797
    9. '):
' → logprob: -10.147472381591797
    10. ',n' → logprob: -10.397472381591797

Token 413: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7134996056556702
    2. ' a' → logprob: -0.8384996056556702
    3. '   ' → logprob: -2.5884995460510254
    4. '	a' → logprob: -7.088499546051025
    5. ',a' → logprob: -7.213499546051025
    6. '```' → logprob: -7.588499546051025
    7. 'A' → logprob: -9.713500022888184
    8. ' A' → logprob: -9.713500022888184
    9. ' 
' → logprob: -9.838500022888184
    10. ',' → logprob: -10.088500022888184

Token 414: ' f' (ID: 285)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25248628854751587
    2. 'u' → logprob: -1.502486228942871
    3. ' a' → logprob: -8.502486228942871
    4. ' u' → logprob: -8.627486228942871
    5. 'x' → logprob: -9.252486228942871
    6. 'A' → logprob: -9.752486228942871
    7. 'U' → logprob: -11.752486228942871
    8. 's' → logprob: -12.127486228942871
    9. 'f' (adapté à ' f') → logprob: -12.627486228942871
    10. 'v' → logprob: -14.002486228942871

Token 415: ',t' (ID: 26927)
  Prédit: ',a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.7273378968238831
    2. 'rom' → logprob: -1.2273378372192383
    3. ',t' → logprob: -1.9773378372192383
    4. ',u' → logprob: -3.4773378372192383
    5. ',s' → logprob: -3.7273378372192383
    6. ',' → logprob: -4.352337837219238
    7. ',b' → logprob: -5.352337837219238
    8. ',r' → logprob: -5.477337837219238
    9. ',v' → logprob: -5.852337837219238
    10. 'a' → logprob: -6.727337837219238

Token 416: '_=' (ID: 115480)
  Prédit: ',u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',u' → logprob: -0.7412631511688232
    2. ',r' → logprob: -2.2412631511688232
    3. ',v' → logprob: -2.3662631511688232
    4. ',w' → logprob: -2.7412631511688232
    5. ',x' → logprob: -2.8662631511688232
    6. ',c' → logprob: -2.9912631511688232
    7. ',d' → logprob: -3.3662631511688232
    8. ',s' → logprob: -3.4912631511688232
    9. ',a' → logprob: -3.6162631511688232
    10. ',' → logprob: -4.116263389587402

Token 417: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.011074470356106758
    2. ' map' → logprob: -4.511074542999268
    3. ',map' → logprob: -10.63607406616211
    4. ',' → logprob: -13.13607406616211
    5. '	map' → logprob: -14.88607406616211
    6. '=' → logprob: -15.51107406616211
    7. '(map' → logprob: -17.51107406616211
    8. ' ' → logprob: -17.63607406616211
    9. 'm' → logprob: -17.88607406616211
    10. '   ' → logprob: -18.13607406616211

Token 418: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16106660664081573
    2. 'int' → logprob: -1.9110666513442993
    3. ',int' → logprob: -7.66106653213501
    4. '=int' → logprob: -8.286067008972168
    5. '[int' → logprob: -9.411067008972168
    6. '<int' → logprob: -10.911067008972168
    7. ' int' → logprob: -11.286067008972168
    8. ']int' → logprob: -13.036067008972168
    9. ':int' → logprob: -13.536067008972168
    10. '```' → logprob: -13.536067008972168

Token 419: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.0036384384147822857
    2. '(input' → logprob: -5.87863826751709
    3. 'input' → logprob: -7.37863826751709
    4. ',' → logprob: -8.75363826751709
    5. ',int' → logprob: -10.50363826751709
    6. '=input' → logprob: -11.37863826751709
    7. ' input' → logprob: -12.25363826751709
    8. '<input' → logprob: -13.87863826751709
    9. '[input' → logprob: -13.87863826751709
    10. 'import' → logprob: -14.00363826751709

Token 420: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.220573363360018e-05
    2. '()' → logprob: -10.125082015991211
    3. '())' → logprob: -10.125082015991211
    4. ')' → logprob: -13.750082015991211
    5. '();)' → logprob: -15.750082015991211
    6. '(' → logprob: -15.875082015991211
    7. '().__' → logprob: -16.00008201599121
    8. '.readline' → logprob: -16.50008201599121
    9. ' ().' → logprob: -16.50008201599121
    10. '()[' → logprob: -16.62508201599121

Token 421: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. 'strip' → logprob: -17.125
    3. '(split' → logprob: -17.25
    4. ' split' → logprob: -17.375
    5. 'spl' → logprob: -17.5
    6. 'plit' → logprob: -18.875
    7. 's' → logprob: -19.0
    8. 'sp' → logprob: -20.375
    9. '.split' → logprob: -20.875
    10. '_split' → logprob: -22.0

Token 422: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03079267591238022
    2. ')
' → logprob: -3.530792713165283
    3. '())' → logprob: -7.030792713165283
    4. '())
' → logprob: -9.155792236328125
    5. '()' → logprob: -10.155792236328125
    6. ')
' → logprob: -12.030792236328125
    7. '()
' → logprob: -13.280792236328125
    8. ');' → logprob: -13.780792236328125
    9. ' )' → logprob: -14.155792236328125
    10. ')

' → logprob: -14.280792236328125

Token 423: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08124887198209763
    2. ' edges' → logprob: -3.2062487602233887
    3. 'edges' → logprob: -3.4562487602233887
    4. '<|end|>' → logprob: -6.081248760223389
    5. ' f' → logprob: -6.581248760223389
    6. 'f' → logprob: -7.206248760223389
    7. '
' → logprob: -7.581248760223389
    8. 'adj' → logprob: -7.581248760223389
    9. ' adj' → logprob: -8.706249237060547
    10. '(edges' → logprob: -9.456249237060547

Token 424: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.012723661959171295
    2. ' f' → logprob: -5.262723445892334
    3. 'edges' → logprob: -5.512723445892334
    4. 'adj' → logprob: -5.762723445892334
    5. '   ' → logprob: -8.887723922729492
    6. ' edges' → logprob: -9.012723922729492
    7. 'if' → logprob: -11.762723922729492
    8. ' adj' → logprob: -12.262723922729492
    9. 'e' → logprob: -12.762723922729492
    10. 'E' → logprob: -13.137723922729492

Token 425: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.11484763026237488
    2. ' -=' → logprob: -2.3648476600646973
    3. '-' → logprob: -4.239847660064697
    4. ' -' → logprob: -9.739847183227539
    5. ',' → logprob: -10.364847183227539
    6. ',f' → logprob: -11.489847183227539
    7. ' f' → logprob: -12.239847183227539
    8. ',t' → logprob: -12.239847183227539
    9. '=' → logprob: -12.864847183227539
    10. '=input' → logprob: -13.364847183227539

Token 426: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -20.125001907348633
    4. '<|end|>' → logprob: -20.375001907348633
    5. '１' → logprob: -20.875001907348633
    6. '
' → logprob: -21.125001907348633
    7. '=' → logprob: -22.312501907348633
    8. '   ' → logprob: -22.437501907348633
    9. ',' → logprob: -22.500001907348633
    10. '۱' → logprob: -22.562501907348633

Token 427: '
' (ID: 198)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.39497804641723633
    2. ' t' → logprob: -1.1449780464172363
    3. '   ' → logprob: -5.519978046417236
    4. '
' → logprob: -6.144978046417236
    5. ',t' → logprob: -6.519978046417236
    6. '	t' → logprob: -8.394977569580078
    7. ',' → logprob: -8.769977569580078
    8. ' edges' → logprob: -10.519977569580078
    9. ';t' → logprob: -11.269977569580078
    10. ' 
' → logprob: -11.894977569580078

Token 428: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0939716100692749
    2. '   ' → logprob: -2.5939717292785645
    3. ' t' → logprob: -4.3439717292785645
    4. ',t' → logprob: -6.9689717292785645
    5. '	t' → logprob: -7.5939717292785645
    6. ',' → logprob: -8.218971252441406
    7. '
' → logprob: -8.343971252441406
    8. ' ' → logprob: -11.093971252441406
    9. ';t' → logprob: -11.718971252441406
    10. '`t' → logprob: -12.718971252441406

Token 429: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -2.7610454708337784e-05
    2. ' t' → logprob: -10.500027656555176
    3. '   ' → logprob: -18.00002670288086
    4. '`t' → logprob: -19.25002670288086
    5. '	t' → logprob: -19.62502670288086
    6. '
' → logprob: -20.37502670288086
    7. 'edges' → logprob: -20.50002670288086
    8. '_t' → logprob: -22.37502670288086
    9. '    
' → logprob: -23.12502670288086
    10. '  ' → logprob: -23.50002670288086

Token 430: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1355874091386795
    2. '-=' → logprob: -2.135587453842163
    3. '_=' → logprob: -5.135587215423584
    4. '-' → logprob: -6.385587215423584
    5. '_-' → logprob: -7.385587215423584
    6. ' -=' → logprob: -8.010587692260742
    7. '=' → logprob: -10.635587692260742
    8. '_
' → logprob: -10.635587692260742
    9. 't' → logprob: -11.885587692260742
    10. '   ' → logprob: -12.010587692260742

Token 431: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0003654978354461491
    2. '-' → logprob: -8.375365257263184
    3. ' -=' → logprob: -9.375365257263184
    4. '=' → logprob: -10.000365257263184
    5. 't' → logprob: -13.000365257263184
    6. '=t' → logprob: -13.375365257263184
    7. '=-' → logprob: -15.875365257263184
    8. '   ' → logprob: -15.875365257263184
    9. '=input' → logprob: -16.5003662109375
    10. '-
' → logprob: -16.6253662109375

Token 432: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '<|end|>' → logprob: -19.5
    4. '```' → logprob: -21.125
    5. '-' → logprob: -23.0
    6. '۱' → logprob: -23.375
    7. '１' → logprob: -23.375
    8. '১' → logprob: -23.5
    9. '   ' → logprob: -23.5
    10. '0' → logprob: -23.875

Token 433: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008839933201670647
    2. 'edges' → logprob: -5.508840084075928
    3. 'adj' → logprob: -5.758840084075928
    4. ' edges' → logprob: -6.508840084075928
    5. ' adj' → logprob: -9.50883960723877
    6. '
' → logprob: -10.63383960723877
    7. ' ' → logprob: -13.13383960723877
    8. '  ' → logprob: -13.63383960723877
    9. '(edges' → logprob: -13.63383960723877
    10. '    
' → logprob: -14.63383960723877

Token 434: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000601169012952596
    2. 'adj' → logprob: -7.750601291656494
    3. 'edges' → logprob: -9.375600814819336
    4. ' edges' → logprob: -9.500600814819336
    5. ' adj' → logprob: -11.500600814819336
    6. '
' → logprob: -15.000600814819336
    7. ' adjacency' → logprob: -16.250600814819336
    8. ' ' → logprob: -16.375600814819336
    9. 'if' → logprob: -16.500600814819336
    10. '  ' → logprob: -16.500600814819336

Token 435: ' edges' (ID: 22569)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.08033215254545212
    2. 'edges' (adapté à ' edges') → logprob: -2.580332040786743
    3. 'if' → logprob: -6.830332279205322
    4. ' edges' → logprob: -8.205331802368164
    5. ' adj' → logprob: -9.580331802368164
    6. '   ' → logprob: -11.205331802368164
    7. ' if' → logprob: -13.205331802368164
    8. 'edge' → logprob: -13.705331802368164
    9. '    
' → logprob: -14.580331802368164
    10. 'e' → logprob: -14.580331802368164

Token 436: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -6.630610641877865e-06
    2. '.' → logprob: -12.125006675720215
    3. '.setdefault' → logprob: -14.750006675720215
    4. '.update' → logprob: -15.250006675720215
    5. '.append' → logprob: -15.375006675720215
    6. '.ad' → logprob: -15.625006675720215
    7. ').' → logprob: -17.0000057220459
    8. '.dis' → logprob: -17.1250057220459
    9. ' .' → logprob: -17.3750057220459
    10. 'add' → logprob: -17.7500057220459

Token 437: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0003532198315951973
    2. '(f' → logprob: -8.00035285949707
    3. '(' → logprob: -11.00035285949707
    4. '(t' → logprob: -14.37535285949707
    5. '(tuple' → logprob: -15.00035285949707
    6. ' ((' → logprob: -16.00035285949707
    7. '(((' → logprob: -18.62535285949707
    8. ' (' → logprob: -18.62535285949707
    9. '(
' → logprob: -19.37535285949707
    10. '(F' → logprob: -19.87535285949707

Token 438: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -5.288163083605468e-05
    2. ' f' → logprob: -10.250052452087402
    3. 'min' → logprob: -11.000052452087402
    4. '   ' → logprob: -15.250052452087402
    5. '(f' → logprob: -15.375052452087402
    6. ' ' → logprob: -16.25005340576172
    7. ' min' → logprob: -16.75005340576172
    8. ')' → logprob: -16.75005340576172
    9. ',f' → logprob: -17.50005340576172
    10. ',' → logprob: -17.75005340576172

Token 439: ',t' (ID: 26927)
  Prédit: ',t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',t' → logprob: -0.3156508207321167
    2. ',' → logprob: -1.3156508207321167
    3. ' ,' → logprob: -6.065650939941406
    4. ',
' → logprob: -9.940650939941406
    5. ',f' → logprob: -11.815650939941406
    6. ',to' → logprob: -13.940650939941406
    7. '   ' → logprob: -14.065650939941406
    8. ',n' → logprob: -14.190650939941406
    9. ' ' → logprob: -14.440650939941406
    10. 't' → logprob: -14.440650939941406

Token 440: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00018149138486478478
    2. '_),' → logprob: -8.750181198120117
    3. '_,' → logprob: -11.500181198120117
    4. '__))' → logprob: -12.125181198120117
    5. '))' → logprob: -12.500181198120117
    6. '_)' → logprob: -13.000181198120117
    7. '_
' → logprob: -14.625181198120117
    8. '_));
' → logprob: -14.875181198120117
    9. '_)
' → logprob: -15.000181198120117
    10. '_-' → logprob: -16.500181198120117

Token 441: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1094592735171318
    2. ',' → logprob: -2.359459161758423
    3. ')' → logprob: -5.234459400177002
    4. '))
' → logprob: -5.859459400177002
    5. ',
' → logprob: -7.734459400177002
    6. ' ))' → logprob: -8.734458923339844
    7. ',f' → logprob: -9.109458923339844
    8. '),' → logprob: -9.484458923339844
    9. ')
' → logprob: -9.734458923339844
    10. ' ,' → logprob: -10.234458923339844

Token 442: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007649566978216171
    2. 'adj' → logprob: -7.250764846801758
    3. ' adj' → logprob: -10.875764846801758
    4. '<|end|>' → logprob: -11.250764846801758
    5. '```' → logprob: -12.000764846801758
    6. 'edges' → logprob: -12.125764846801758
    7. '
' → logprob: -12.375764846801758
    8. ' edges' → logprob: -13.375764846801758
    9. ' ' → logprob: -13.625764846801758
    10. 'for' → logprob: -14.125764846801758

Token 443: ' edges' (ID: 22569)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.577037513256073
    2. '   ' → logprob: -0.827037513256073
    3. ' adj' → logprob: -6.827037334442139
    4. 'edges' (adapté à ' edges') → logprob: -11.702037811279297
    5. '
' → logprob: -13.577037811279297
    6. ' edges' → logprob: -13.702037811279297
    7. '```' → logprob: -13.702037811279297
    8. '    
' → logprob: -14.702037811279297
    9. '(adj' → logprob: -15.577037811279297
    10. '_adj' → logprob: -15.827037811279297

Token 444: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.31473395228385925
    2. '[f' → logprob: -1.3147339820861816
    3. '[t' → logprob: -7.064733982086182
    4. '.ad' → logprob: -8.439733505249023
    5. '.' → logprob: -8.439733505249023
    6. '.union' → logprob: -9.564733505249023
    7. '.setdefault' → logprob: -10.564733505249023
    8. '.f' → logprob: -10.939733505249023
    9. '.update' → logprob: -11.189733505249023
    10. '[u' → logprob: -11.189733505249023

Token 445: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -4.723352049040841e-06
    2. '(t' → logprob: -12.375004768371582
    3. ' ((' → logprob: -14.875004768371582
    4. '(f' → logprob: -17.625003814697266
    5. ' ' → logprob: -18.250003814697266
    6. '(({' → logprob: -18.750003814697266
    7. ')((' → logprob: -19.125003814697266
    8. '(' → logprob: -19.250003814697266
    9. '>((' → logprob: -19.375003814697266
    10. '({' → logprob: -19.875003814697266

Token 446: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00071695790393278
    2. ' t' → logprob: -7.2507171630859375
    3. '   ' → logprob: -12.750717163085938
    4. ')t' → logprob: -13.250717163085938
    5. '(t' → logprob: -14.000717163085938
    6. ' ' → logprob: -14.500717163085938
    7. '`t' → logprob: -14.875717163085938
    8. ')' → logprob: -15.500717163085938
    9. 'f' → logprob: -15.625717163085938
    10. ',' → logprob: -16.625717163085938

Token 447: '_,' (ID: 14152)
  Prédit: '_,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.0010603178525343537
    2. '_' → logprob: -6.876060485839844
    3. '_,
' → logprob: -11.376060485839844
    4. ',' → logprob: -11.626060485839844
    5. '_)' → logprob: -12.876060485839844
    6. ',_' → logprob: -13.376060485839844
    7. ',t' → logprob: -13.751060485839844
    8. ',f' → logprob: -14.751060485839844
    9. '_
' → logprob: -15.251060485839844
    10. 'f' → logprob: -15.251060485839844

Token 448: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -8.77627644513268e-06
    2. ')' → logprob: -11.875008583068848
    3. ' f' → logprob: -13.625008583068848
    4. '))' → logprob: -14.625008583068848
    5. '1' → logprob: -16.375009536743164
    6. 't' → logprob: -17.375009536743164
    7. '
' → logprob: -18.000009536743164
    8. '0' → logprob: -18.125009536743164
    9. ' ' → logprob: -18.500009536743164
    10. '   ' → logprob: -19.375009536743164

Token 449: '_' (ID: 62)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004761668387800455
    2. '))
' → logprob: -5.379761695861816
    3. ')' → logprob: -9.379761695861816
    4. '()))' → logprob: -10.004761695861816
    5. ' ))' → logprob: -12.379761695861816
    6. '))

' → logprob: -13.129761695861816
    7. '   ' → logprob: -13.504761695861816
    8. ')
' → logprob: -14.004761695861816
    9. ')))' → logprob: -14.504761695861816
    10. '));' → logprob: -14.504761695861816

Token 450: ':=' (ID: 33860)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05822371691465378
    2. '))' → logprob: -2.9332237243652344
    3. 't' → logprob: -6.308223724365234
    4. '_' → logprob: -7.308223724365234
    5. '])' → logprob: -7.933223724365234
    6. '_)' → logprob: -9.058223724365234
    7. ')t' → logprob: -9.183223724365234
    8. ')_' → logprob: -9.933223724365234
    9. '1' → logprob: -10.058223724365234
    10. ')-' → logprob: -10.058223724365234

Token 451: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.004249350633472204
    2. ' t' → logprob: -5.754249572753906
    3. 'f' → logprob: -6.879249572753906
    4. ')t' → logprob: -11.254249572753906
    5. ' f' → logprob: -11.879249572753906
    6. '(t' → logprob: -12.254249572753906
    7. ')' → logprob: -12.379249572753906
    8. '_t' → logprob: -12.379249572753906
    9. '1' → logprob: -12.754249572753906
    10. '0' → logprob: -13.504249572753906

Token 452: '_' (ID: 62)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.32221683859825134
    2. '_' → logprob: -1.5722168684005737
    3. ')' → logprob: -2.947216749191284
    4. '_)' → logprob: -5.072216987609863
    5. '1' → logprob: -5.197216987609863
    6. '-' → logprob: -5.947216987609863
    7. ')-' → logprob: -8.822216987609863
    8. 't' → logprob: -8.947216987609863
    9. ')_' → logprob: -9.447216987609863
    10. '))-' → logprob: -9.697216987609863

Token 453: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0037291799671947956
    2. '))
' → logprob: -6.128729343414307
    3. ')' → logprob: -6.628729343414307
    4. ' ))' → logprob: -9.753728866577148
    5. ')t' → logprob: -10.003728866577148
    6. 't' → logprob: -10.503728866577148
    7. ')))' → logprob: -10.878728866577148
    8. 'f' → logprob: -11.503728866577148
    9. '))

' → logprob: -11.503728866577148
    10. ',' → logprob: -11.628728866577148

Token 454: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0073031214997172356
    2. '<|end|>' → logprob: -6.007303237915039
    3. ')
' → logprob: -6.757303237915039
    4. '   ' → logprob: -6.757303237915039
    5. '
' → logprob: -6.882303237915039
    6. '=' → logprob: -7.632303237915039
    7. '_' → logprob: -8.257303237915039
    8. '_)' → logprob: -8.632303237915039
    9. ')t' → logprob: -9.132303237915039
    10. '=f' → logprob: -9.257303237915039

Token 455: ' adj' (ID: 20251)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0777817964553833
    2. '   ' → logprob: -3.8277816772460938
    3. 'adj' (adapté à ' adj') → logprob: -3.8277816772460938
    4. '_' → logprob: -4.702781677246094
    5. '<|end|>' → logprob: -4.702781677246094
    6. 'f' → logprob: -5.202781677246094
    7. '_adj' → logprob: -6.452781677246094
    8. '
' → logprob: -6.577781677246094
    9. '_)' → logprob: -6.952781677246094
    10. 't' → logprob: -7.202781677246094

Token 456: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.0028171204030513763
    2. '[t' → logprob: -5.877817153930664
    3. '[' → logprob: -12.002817153930664
    4. 'f' → logprob: -13.377817153930664
    5. '=f' → logprob: -13.502817153930664
    6. '][' → logprob: -13.877817153930664
    7. '
' → logprob: -14.627817153930664
    8. 't' → logprob: -15.502817153930664
    9. '```' → logprob: -15.502817153930664
    10. '\[' → logprob: -15.877817153930664

Token 457: '].' (ID: 1651)
  Prédit: '[f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.5369600057601929
    2. '][' → logprob: -1.1619600057601929
    3. '].' → logprob: -2.2869601249694824
    4. ']' → logprob: -7.536960124969482
    5. '].[' → logprob: -8.536959648132324
    6. '[' → logprob: -9.036959648132324
    7. '[t' → logprob: -10.036959648132324
    8. ' ][' → logprob: -10.536959648132324
    9. 'f' → logprob: -10.786959648132324
    10. ' ].' → logprob: -11.411959648132324

Token 458: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -4.723352049040841e-06
    2. ' add' → logprob: -13.000004768371582
    3. 'append' → logprob: -13.000004768371582
    4. '.add' → logprob: -16.250003814697266
    5. '
' → logprob: -18.625003814697266
    6. '	add' → logprob: -19.000003814697266
    7. ')add' → logprob: -19.000003814697266
    8. 'update' → logprob: -19.125003814697266
    9. 'adj' → logprob: -19.625003814697266
    10. ' ' → logprob: -19.625003814697266

Token 459: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.00863324198871851
    2. 't' → logprob: -4.758633136749268
    3. '(' → logprob: -11.383633613586426
    4. '(f' → logprob: -12.508633613586426
    5. ' t' → logprob: -12.883633613586426
    6. ' (' → logprob: -14.508633613586426
    7. '((' → logprob: -15.133633613586426
    8. '	t' → logprob: -15.758633613586426
    9. 'f' → logprob: -16.00863265991211
    10. '(
' → logprob: -17.38363265991211

Token 460: '_)
' (ID: 58066)
  Prédit: '_)'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_)' → logprob: -0.008525329641997814
    2. '_)
' → logprob: -4.883525371551514
    3. ')' → logprob: -7.383525371551514
    4. '_' → logprob: -8.258524894714355
    5. '_f' → logprob: -11.383524894714355
    6. 'f' → logprob: -11.508524894714355
    7. '_
' → logprob: -12.008524894714355
    8. ')
' → logprob: -12.883524894714355
    9. '__)' → logprob: -13.133524894714355
    10. '_]' → logprob: -14.008524894714355

Token 461: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07242711633443832
    2. 'adj' → logprob: -2.6974270343780518
    3. ' adj' → logprob: -6.572427272796631
    4. '
' → logprob: -7.822427272796631
    5. '<|end|>' → logprob: -8.072426795959473
    6. ' ' → logprob: -9.197426795959473
    7. '  ' → logprob: -9.322426795959473
    8. 't' → logprob: -10.322426795959473
    9. '(adj' → logprob: -10.572426795959473
    10. ')' → logprob: -10.697426795959473

Token 462: ' adj' (ID: 20251)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.027762752026319504
    2. 'adj' (adapté à ' adj') → logprob: -3.9027626514434814
    3. ' f' → logprob: -5.2777628898620605
    4. 't' → logprob: -6.5277628898620605
    5. ' adj' → logprob: -7.6527628898620605
    6. ' t' → logprob: -10.027762413024902
    7. '   ' → logprob: -10.402762413024902
    8. '_f' → logprob: -11.152762413024902
    9. '_adj' → logprob: -11.152762413024902
    10. ' ' → logprob: -11.277762413024902

Token 463: '[t' (ID: 32184)
  Prédit: '[f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.1278681457042694
    2. '[t' → logprob: -2.127868175506592
    3. 'f' → logprob: -7.752868175506592
    4. '[' → logprob: -8.127867698669434
    5. 't' → logprob: -9.002867698669434
    6. '```' → logprob: -11.377867698669434
    7. '[s' → logprob: -11.502867698669434
    8. ' [' → logprob: -11.502867698669434
    9. ' f' → logprob: -11.752867698669434
    10. '[to' → logprob: -11.752867698669434

Token 464: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04699167236685753
    2. '].' → logprob: -3.1719915866851807
    3. '_.' → logprob: -6.04699182510376
    4. '_]' → logprob: -6.92199182510376
    5. '_[' → logprob: -8.171991348266602
    6. ']._' → logprob: -9.421991348266602
    7. '][' → logprob: -10.171991348266602
    8. '_f' → logprob: -10.296991348266602
    9. 'f' → logprob: -10.296991348266602
    10. '_-' → logprob: -10.671991348266602

Token 465: '].' (ID: 1651)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.21673665940761566
    2. '].' → logprob: -1.8417366743087769
    3. ').' → logprob: -3.3417365550994873
    4. '}.' → logprob: -7.716736793518066
    5. '.' → logprob: -8.341736793518066
    6. ' .' → logprob: -8.841736793518066
    7. '   ' → logprob: -10.841736793518066
    8. '.ad' → logprob: -10.966736793518066
    9. '>.' → logprob: -11.216736793518066
    10. '.append' → logprob: -11.466736793518066

Token 466: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.7432603272027336e-06
    2. ' add' → logprob: -14.250001907348633
    3. '.add' → logprob: -14.500001907348633
    4. 'adj' → logprob: -15.375001907348633
    5. '(add' → logprob: -15.500001907348633
    6. '	add' → logprob: -17.250001907348633
    7. 'append' → logprob: -17.500001907348633
    8. 'f' → logprob: -17.625001907348633
    9. '1' → logprob: -17.625001907348633
    10. '```' → logprob: -17.750001907348633

Token 467: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -5.438573680294212e-06
    2. 'f' → logprob: -12.375005722045898
    3. '(' → logprob: -13.750005722045898
    4. '(
' → logprob: -16.3750057220459
    5. ' (' → logprob: -18.3750057220459
    6. ' f' → logprob: -18.6250057220459
    7. '((' → logprob: -19.8750057220459
    8. '(t' → logprob: -20.8750057220459
    9. '	f' → logprob: -21.0000057220459
    10. 't' → logprob: -21.1250057220459

Token 468: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009352823253720999
    2. 'f' → logprob: -7.250935077667236
    3. '_)' → logprob: -8.875935554504395
    4. ')
' → logprob: -9.875935554504395
    5. '_f' → logprob: -11.125935554504395
    6. '(f' → logprob: -12.250935554504395
    7. ')#' → logprob: -12.750935554504395
    8. ' )' → logprob: -13.000935554504395
    9. '_' → logprob: -13.625935554504395
    10. '))' → logprob: -13.625935554504395

Token 469: 'queries' (ID: 63909)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5819754600524902
    2. ')' → logprob: -2.2069754600524902
    3. '<|end|>' → logprob: -2.2069754600524902
    4. 'f' → logprob: -2.4569754600524902
    5. ' for' → logprob: -2.7069754600524902
    6. '
' → logprob: -3.7069754600524902
    7. 'Q' → logprob: -4.33197546005249
    8. 's' → logprob: -5.08197546005249
    9. '_' → logprob: -5.20697546005249
    10. ' 
' → logprob: -5.45697546005249

Token 470: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.034957822412252426
    2. '=[]' → logprob: -3.5349578857421875
    3. ' =' → logprob: -5.2849578857421875
    4. '=set' → logprob: -10.159957885742188
    5. '=[]
' → logprob: -10.159957885742188
    6. '=list' → logprob: -11.034957885742188
    7. '=[' → logprob: -12.159957885742188
    8. ',' → logprob: -12.159957885742188
    9. '[]' → logprob: -12.284957885742188
    10. '=input' → logprob: -12.534957885742188

Token 471: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009226576657965779
    2. ' for' → logprob: -7.000922679901123
    3. '
' → logprob: -11.500922203063965
    4. '	for' → logprob: -14.625922203063965
    5. '[]' → logprob: -16.00092315673828
    6. '[' → logprob: -16.12592315673828
    7. '[
' → logprob: -16.37592315673828
    8. '=' → logprob: -16.50092315673828
    9. '[]
' → logprob: -16.62592315673828
    10. ' 
' → logprob: -18.87592315673828

Token 472: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.023257939144968987
    2. ' _' → logprob: -3.7732579708099365
    3. '_i' → logprob: -11.898258209228516
    4. '_q' → logprob: -12.523258209228516
    5. '_=' → logprob: -14.648258209228516
    6. '_range' → logprob: -15.273258209228516
    7. 'q' → logprob: -15.273258209228516
    8. '_query' → logprob: -15.273258209228516
    9. '_in' → logprob: -16.023258209228516
    10. ' in' → logprob: -16.023258209228516

Token 473: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016221819445490837
    2. 'in' → logprob: -4.14122200012207
    3. ' ' → logprob: -9.76622200012207
    4. '_' → logprob: -9.89122200012207
    5. 'range' → logprob: -10.01622200012207
    6. ' _' → logprob: -11.26622200012207
    7. 's' → logprob: -11.89122200012207
    8. ' range' → logprob: -12.76622200012207
    9. '  ' → logprob: -12.89122200012207
    10. 'n' → logprob: -13.01622200012207

Token 474: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019299437990412116
    2. ' range' → logprob: -6.251929759979248
    3. 'input' → logprob: -14.251930236816406
    4. '_' → logprob: -15.751930236816406
    5. 'in' → logprob: -16.126930236816406
    6. 'Q' → logprob: -16.126930236816406
    7. 'query' → logprob: -16.626930236816406
    8. 'r' → logprob: -17.751930236816406
    9. ' ' → logprob: -17.751930236816406
    10. '	range' → logprob: -18.001930236816406

Token 475: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.011434105224907398
    2. ' range' → logprob: -5.636434078216553
    3. 'Q' → logprob: -5.886434078216553
    4. 'range' → logprob: -5.886434078216553
    5. '(int' → logprob: -6.761434078216553
    6. '(range' → logprob: -7.511434078216553
    7. '(' → logprob: -8.386434555053711
    8. ' (' → logprob: -8.636434555053711
    9. ' Q' → logprob: -9.761434555053711
    10. '(N' → logprob: -10.386434555053711

Token 476: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03379277139902115
    2. '):' → logprob: -3.408792734146118
    3. '():
' → logprob: -9.908792495727539
    4. ')' → logprob: -10.533792495727539
    5. '):
' → logprob: -10.533792495727539
    6. ':
' → logprob: -11.158792495727539
    7. ':' → logprob: -11.408792495727539
    8. ',' → logprob: -12.033792495727539
    9. '()):
' → logprob: -12.408792495727539
    10. '):

' → logprob: -13.158792495727539

Token 477: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05684112384915352
    2. 'q' → logprob: -4.306840896606445
    3. 'query' → logprob: -4.556840896606445
    4. 'a' → logprob: -4.931840896606445
    5. 't' → logprob: -5.681840896606445
    6. 'x' → logprob: -5.806840896606445
    7. 'u' → logprob: -5.931840896606445
    8. '(' → logprob: -6.431840896606445
    9. 'input' → logprob: -6.806840896606445
    10. 'b' → logprob: -6.931840896606445

Token 478: ' M' (ID: 391)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7671283483505249
    2. 'a' → logprob: -1.142128348350525
    3. 'x' → logprob: -2.0171284675598145
    4. 'f' → logprob: -4.0171284675598145
    5. 'q' → logprob: -4.1421284675598145
    6. 'l' → logprob: -4.2671284675598145
    7. 'v' → logprob: -4.7671284675598145
    8. 's' → logprob: -4.8921284675598145
    9. 't' → logprob: -5.2671284675598145
    10. ' u' → logprob: -5.5171284675598145

Token 479: ',A' (ID: 59196)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8880768418312073
    2. ',t' → logprob: -2.3880767822265625
    3. ',' → logprob: -2.7630767822265625
    4. '=int' → logprob: -3.0130767822265625
    5. ',s' → logprob: -3.1380767822265625
    6. ',K' → logprob: -3.3880767822265625
    7. ',q' → logprob: -3.5130767822265625
    8. ',M' → logprob: -3.5130767822265625
    9. ',f' → logprob: -3.5130767822265625
    10. ',a' → logprob: -3.6380767822265625

Token 480: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.01914380118250847
    2. ',K' → logprob: -5.019143581390381
    3. ',T' → logprob: -5.894143581390381
    4. ',Q' → logprob: -6.269143581390381
    5. ',R' → logprob: -6.394143581390381
    6. ',M' → logprob: -6.894143581390381
    7. ',S' → logprob: -7.144143581390381
    8. ',C' → logprob: -7.269143581390381
    9. ',V' → logprob: -7.769143581390381
    10. ',P' → logprob: -7.894143581390381

Token 481: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007786541245877743
    2. '=input' → logprob: -8.250778198242188
    3. ',C' → logprob: -8.625778198242188
    4. ' =' → logprob: -8.875778198242188
    5. ',S' → logprob: -10.375778198242188
    6. ',P' → logprob: -10.500778198242188
    7. ',M' → logprob: -10.750778198242188
    8. ',K' → logprob: -11.125778198242188
    9. ',R' → logprob: -11.125778198242188
    10. '=list' → logprob: -11.250778198242188

Token 482: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -1.1517960956552997e-05
    2. ' map' → logprob: -11.375011444091797
    3. '	map' → logprob: -17.625011444091797
    4. '   ' → logprob: -17.750011444091797
    5. 'input' → logprob: -19.875011444091797
    6. '
' → logprob: -20.375011444091797
    7. '.map' → logprob: -20.375011444091797
    8. ' ' → logprob: -20.625011444091797
    9. '(map' → logprob: -20.625011444091797
    10. '  ' → logprob: -20.625011444091797

Token 483: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10033595561981201
    2. 'int' → logprob: -2.3503360748291016
    3. ',int' → logprob: -9.600336074829102
    4. '=int' → logprob: -10.225336074829102
    5. '[int' → logprob: -10.975336074829102
    6. '```' → logprob: -12.975336074829102
    7. '<int' → logprob: -13.350336074829102
    8. ' int' → logprob: -13.350336074829102
    9. '   ' → logprob: -13.725336074829102
    10. ']int' → logprob: -13.975336074829102

Token 484: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.002483626827597618
    2. ',int' → logprob: -6.87748384475708
    3. '(input' → logprob: -7.00248384475708
    4. 'input' → logprob: -7.87748384475708
    5. ',' → logprob: -9.252483367919922
    6. '=input' → logprob: -11.002483367919922
    7. '(int' → logprob: -11.502483367919922
    8. '(),' → logprob: -11.877483367919922
    9. '   ' → logprob: -12.002483367919922
    10. 'int' → logprob: -12.377483367919922

Token 485: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.869017852295656e-06
    2. '()' → logprob: -12.000006675720215
    3. ')' → logprob: -15.500006675720215
    4. '())' → logprob: -16.00000762939453
    5. '()
' → logprob: -16.12500762939453
    6. '.' → logprob: -16.25000762939453
    7. ' ().' → logprob: -16.50000762939453
    8. '(),' → logprob: -17.37500762939453
    9. '.split' → logprob: -18.00000762939453
    10. '().
' → logprob: -18.12500762939453

Token 486: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. '(split' → logprob: -15.625
    3. ' split' → logprob: -16.25
    4. '.split' → logprob: -17.0
    5. 'spl' → logprob: -18.25
    6. 'plit' → logprob: -18.625
    7. 'strip' → logprob: -20.125
    8. '_split' → logprob: -20.375
    9. 'skip' → logprob: -20.75
    10. '
' → logprob: -20.75

Token 487: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.693969190120697
    2. ')
' → logprob: -0.693969190120697
    3. '())
' → logprob: -7.568969249725342
    4. '()' → logprob: -8.818968772888184
    5. '())' → logprob: -9.193968772888184
    6. '   ' → logprob: -10.568968772888184
    7. '()
' → logprob: -11.318968772888184
    8. ')
' → logprob: -12.568968772888184
    9. ')

' → logprob: -12.818968772888184
    10. ',' → logprob: -12.943968772888184

Token 488: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7028520107269287
    2. '<|end|>' → logprob: -0.7028520107269287
    3. '
' → logprob: -5.327852249145508
    4. 'queries' → logprob: -6.202852249145508
    5. '<|end|>' → logprob: -6.827852249145508
    6. ')' → logprob: -8.077852249145508
    7. ' queries' → logprob: -8.327852249145508
    8. '#' → logprob: -8.452852249145508
    9. '_queries' → logprob: -8.952852249145508
    10. '    
' → logprob: -9.077852249145508

Token 489: ' A' (ID: 355)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.0017527721356600523
    2. ' queries' → logprob: -7.001752853393555
    3. '   ' → logprob: -7.501752853393555
    4. 'A' (adapté à ' A') → logprob: -8.876752853393555
    5. 'if' → logprob: -9.876752853393555
    6. 'M' → logprob: -10.001752853393555
    7. 'for' → logprob: -11.876752853393555
    8. 'query' → logprob: -12.251752853393555
    9. 'Q' → logprob: -12.251752853393555
    10. 'B' → logprob: -12.376752853393555

Token 490: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.005238736979663372
    2. '-' → logprob: -6.0052385330200195
    3. ' -=' → logprob: -6.2552385330200195
    4. ',' → logprob: -7.2552385330200195
    5. ',A' → logprob: -9.75523853302002
    6. '   ' → logprob: -10.88023853302002
    7. '=' → logprob: -11.63023853302002
    8. '```' → logprob: -12.00523853302002
    9. '-,' → logprob: -12.13023853302002
    10. '=input' → logprob: -12.38023853302002

Token 491: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '
' → logprob: -19.250001907348633
    4. '```' → logprob: -19.625001907348633
    5. '<|end|>' → logprob: -19.750001907348633
    6. '   ' → logprob: -20.312501907348633
    7. ')' → logprob: -20.562501907348633
    8. '１' → logprob: -21.187501907348633
    9. '0' → logprob: -21.437501907348633
    10. '१' → logprob: -21.687501907348633

Token 492: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007662679417990148
    2. 'B' → logprob: -7.250766277313232
    3. ' B' → logprob: -10.250765800476074
    4. '	B' → logprob: -11.625765800476074
    5. '
' → logprob: -12.125765800476074
    6. ' ' → logprob: -13.375765800476074
    7. '<|end|>' → logprob: -13.500765800476074
    8. ',B' → logprob: -13.500765800476074
    9. ',' → logprob: -14.625765800476074
    10. '  ' → logprob: -14.875765800476074

Token 493: '   ' (ID: 271)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3409295082092285
    2. '   ' → logprob: -1.5909295082092285
    3. ' B' → logprob: -2.4659295082092285
    4. '	B' → logprob: -9.34092903137207
    5. ' ' → logprob: -9.59092903137207
    6. ',B' → logprob: -10.59092903137207
    7. '<|end|>' → logprob: -10.59092903137207
    8. ',' → logprob: -12.09092903137207
    9. '  ' → logprob: -12.46592903137207
    10. '
' → logprob: -12.59092903137207

Token 494: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.001931970240548253
    2. ' B' → logprob: -6.251932144165039
    3. '   ' → logprob: -12.626932144165039
    4. '	B' → logprob: -16.25193214416504
    5. ' ' → logprob: -17.50193214416504
    6. '>B' → logprob: -18.12693214416504
    7. '
' → logprob: -18.75193214416504
    8. '```' → logprob: -18.87693214416504
    9. 'C' → logprob: -19.50193214416504
    10. 'b' → logprob: -19.75193214416504

Token 495: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.03390766307711601
    2. '-' → logprob: -3.408907651901245
    3. ' -=' → logprob: -8.408907890319824
    4. '```' → logprob: -10.533907890319824
    5. '   ' → logprob: -11.783907890319824
    6. '=' → logprob: -13.408907890319824
    7. ')-' → logprob: -14.158907890319824
    8. '-
' → logprob: -14.783907890319824
    9. ' ' → logprob: -15.033907890319824
    10. '
' → logprob: -15.283907890319824

Token 496: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '
' → logprob: -18.500001907348633
    4. '   ' → logprob: -18.500001907348633
    5. '```' → logprob: -18.750001907348633
    6. '<|end|>' → logprob: -18.812501907348633
    7. '-' → logprob: -20.000001907348633
    8. '0' → logprob: -20.250001907348633
    9. '  ' → logprob: -20.500001907348633
    10. '۱' → logprob: -20.625001907348633

Token 497: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033404985442757607
    2. '<|end|>' → logprob: -5.753340721130371
    3. '
' → logprob: -9.628340721130371
    4. '<|end|>' → logprob: -10.128340721130371
    5. ')' → logprob: -10.503340721130371
    6. 'queries' → logprob: -11.628340721130371
    7. '    
' → logprob: -12.128340721130371
    8. '#' → logprob: -12.378340721130371
    9. ' queries' → logprob: -13.253340721130371
    10. '```' → logprob: -13.253340721130371

Token 498: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020446251146495342
    2. '<|end|>' → logprob: -6.252044677734375
    3. 'queries' → logprob: -9.877044677734375
    4. '<|end|>' → logprob: -10.877044677734375
    5. ' queries' → logprob: -11.377044677734375
    6. ')' → logprob: -12.127044677734375
    7. '
' → logprob: -12.377044677734375
    8. ' ' → logprob: -12.627044677734375
    9. ',' → logprob: -12.627044677734375
    10. 'tokens' → logprob: -12.877044677734375

Token 499: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' (adapté à ' queries') → logprob: -0.013899262063205242
    2. 'if' → logprob: -4.638899326324463
    3. '   ' → logprob: -6.263899326324463
    4. 'print' → logprob: -7.763899326324463
    5. 'for' → logprob: -7.763899326324463
    6. ' queries' → logprob: -7.888899326324463
    7. 'mf' → logprob: -8.638898849487305
    8. 'query' → logprob: -8.763898849487305
    9. 'max' → logprob: -9.138898849487305
    10. '
' → logprob: -9.388898849487305

Token 500: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007211300544440746
    2. '.' → logprob: -7.250720977783203
    3. ' .' → logprob: -11.875720977783203
    4. '.app' → logprob: -12.875720977783203
    5. '.ap' → logprob: -13.875720977783203
    6. 'append' → logprob: -14.875720977783203
    7. '.Append' → logprob: -16.875720977783203
    8. '.add' → logprob: -16.875720977783203
    9. '.extend' → logprob: -17.000720977783203
    10. '​.' → logprob: -17.000720977783203

Token 501: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.3870312571525574
    2. '(M' → logprob: -1.1370313167572021
    3. '(' → logprob: -9.012031555175781
    4. '([' → logprob: -10.512031555175781
    5. ' (' → logprob: -11.637031555175781
    6. '(m' → logprob: -13.762031555175781
    7. '(
' → logprob: -14.887031555175781
    8. '   ' → logprob: -15.012031555175781
    9. '[(' → logprob: -15.637031555175781
    10. ' ' → logprob: -16.13703155517578

Token 502: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0004366294015198946
    2. ' M' → logprob: -7.750436782836914
    3. 'A' → logprob: -12.750436782836914
    4. ')' → logprob: -13.625436782836914
    5. '   ' → logprob: -13.625436782836914
    6. ' ' → logprob: -16.125436782836914
    7. '(M' → logprob: -16.250436782836914
    8. 'N' → logprob: -16.250436782836914
    9. ',' → logprob: -16.750436782836914
    10. ',M' → logprob: -17.000436782836914

Token 503: ',A' (ID: 59196)
  Prédit: ',A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',A' → logprob: -0.4747149348258972
    2. ',' → logprob: -0.9747149348258972
    3. ' ,' → logprob: -8.099715232849121
    4. ',B' → logprob: -8.099715232849121
    5. ',
' → logprob: -11.099715232849121
    6. ',M' → logprob: -12.474715232849121
    7. 'A' → logprob: -12.724715232849121
    8. '
' → logprob: -13.974715232849121
    9. ',a' → logprob: -14.224715232849121
    10. ' ' → logprob: -14.474715232849121

Token 504: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.0022172266617417336
    2. ',' → logprob: -6.1272172927856445
    3. ' ,' → logprob: -11.002217292785645
    4. 'B' → logprob: -11.502217292785645
    5. ',b' → logprob: -12.627217292785645
    6. ',
' → logprob: -14.127217292785645
    7. ',A' → logprob: -14.752217292785645
    8. ' B' → logprob: -15.502217292785645
    9. ',M' → logprob: -15.877217292785645
    10. '   ' → logprob: -15.877217292785645

Token 505: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16031236946582794
    2. '))' → logprob: -1.9103124141693115
    3. ',' → logprob: -10.66031265258789
    4. ',)' → logprob: -10.66031265258789
    5. ')
' → logprob: -10.78531265258789
    6. '))
' → logprob: -11.28531265258789
    7. ')))' → logprob: -12.91031265258789
    8. '),' → logprob: -13.16031265258789
    9. '   ' → logprob: -14.03531265258789
    10. ')}' → logprob: -14.41031265258789

Token 506: 'for' (ID: 1938)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.008863091468811
    2. 'answers' → logprob: -1.258863091468811
    3. 'for' → logprob: -2.6338629722595215
    4. 'result' → logprob: -2.6338629722595215
    5. 'answer' → logprob: -3.0088629722595215
    6. 'results' → logprob: -3.1338629722595215
    7. 'queries' → logprob: -3.1338629722595215
    8. 'edges' → logprob: -3.6338629722595215
    9. 'ans' → logprob: -4.3838629722595215
    10. 'def' → logprob: -5.0088629722595215

Token 507: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.14407962560653687
    2. 'M' → logprob: -2.6440796852111816
    3. ' q' → logprob: -3.1440796852111816
    4. 'q' → logprob: -4.269079685211182
    5. ' ' → logprob: -6.769079685211182
    6. ' query' → logprob: -7.144079685211182
    7. ' (' → logprob: -7.269079685211182
    8. ' m' → logprob: -7.269079685211182
    9. '(M' → logprob: -7.644079685211182
    10. 'm' → logprob: -7.769079685211182

Token 508: ',A' (ID: 59196)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5086967945098877
    2. ' in' → logprob: -1.2586967945098877
    3. 'in' → logprob: -2.6336967945098877
    4. ',A' → logprob: -4.008696556091309
    5. ',in' → logprob: -4.633696556091309
    6. ' ,' → logprob: -4.758696556091309
    7. ',M' → logprob: -6.008696556091309
    8. ',_' → logprob: -6.633696556091309
    9. ',N' → logprob: -7.633696556091309
    10. ',v' → logprob: -8.508696556091309

Token 509: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.00013452880375552922
    2. ',' → logprob: -9.125134468078613
    3. 'B' → logprob: -11.250134468078613
    4. ',_' → logprob: -12.250134468078613
    5. ',b' → logprob: -12.500134468078613
    6. ' ,' → logprob: -13.125134468078613
    7. ',A' → logprob: -14.375134468078613
    8. ' in' → logprob: -16.25013542175293
    9. '_,' → logprob: -16.56263542175293
    10. ',(' → logprob: -16.62513542175293

Token 510: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.47419610619544983
    2. ' in' → logprob: -0.9741960763931274
    3. ',' → logprob: -9.724196434020996
    4. ':' → logprob: -10.224196434020996
    5. ',in' → logprob: -11.599196434020996
    6. '_in' → logprob: -12.474196434020996
    7. '   ' → logprob: -13.099196434020996
    8. ' ' → logprob: -13.224196434020996
    9. '```' → logprob: -13.724196434020996
    10. '	in' → logprob: -13.849196434020996

Token 511: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.014167862012982368
    2. ' queries' → logprob: -4.264167785644531
    3. 'range' → logprob: -12.639167785644531
    4. 'query' → logprob: -14.639167785644531
    5. 'requests' → logprob: -15.139167785644531
    6. 'quer' → logprob: -16.76416778564453
    7. ' range' → logprob: -16.76416778564453
    8. 'sorted' → logprob: -17.26416778564453
    9. 'questions' → logprob: -17.26416778564453
    10. '   ' → logprob: -17.51416778564453

Token 512: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008623674511909485
    2. ':
' → logprob: -4.7586236000061035
    3. ',' → logprob: -12.883624076843262
    4. '):' → logprob: -13.133624076843262
    5. ' :' → logprob: -13.883624076843262
    6. '   ' → logprob: -14.008624076843262
    7. ':def' → logprob: -14.008624076843262
    8. '):
' → logprob: -14.258624076843262
    9. ':

' → logprob: -14.258624076843262
    10. '
' → logprob: -16.383623123168945

Token 513: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00380150368437171
    2. ' if' → logprob: -6.378801345825195
    3. ' mf' → logprob: -6.503801345825195
    4. 'mf' → logprob: -8.753801345825195
    5. '    
' → logprob: -9.003801345825195
    6. '```' → logprob: -9.253801345825195
    7. '
' → logprob: -9.628801345825195
    8. '       ' → logprob: -10.378801345825195
    9. '	m' → logprob: -10.753801345825195
    10. 'if' → logprob: -11.003801345825195

Token 514: ' if' (ID: 538)
  Prédit: 'mf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mf' → logprob: -0.017408663406968117
    2. '   ' → logprob: -4.767408847808838
    3. ' mf' → logprob: -4.767408847808838
    4. '-mf' → logprob: -9.64240837097168
    5. 'm' → logprob: -9.89240837097168
    6. 'if' (adapté à ' if') → logprob: -10.26740837097168
    7. '
' → logprob: -10.64240837097168
    8. '    
' → logprob: -11.01740837097168
    9. 'import' → logprob: -11.76740837097168
    10. '       ' → logprob: -12.01740837097168

Token 515: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.9019123315811157
    2. ' M' → logprob: -1.4019123315811157
    3. '(M' → logprob: -2.526912212371826
    4. 'A' → logprob: -2.651912212371826
    5. ' (' → logprob: -2.901912212371826
    6. ' A' → logprob: -2.901912212371826
    7. '(A' → logprob: -3.276912212371826
    8. ' not' → logprob: -4.651912212371826
    9. '(B' → logprob: -4.901912212371826
    10. 'B' → logprob: -4.901912212371826

Token 516: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5971787571907043
    2. ' ==' → logprob: -1.4721786975860596
    3. ' <' → logprob: -2.2221786975860596
    4. ' <=' → logprob: -2.9721786975860596
    5. '<=' → logprob: -3.5971786975860596
    6. ' >' → logprob: -4.097178936004639
    7. '>' → logprob: -5.097178936004639
    8. ' >=' → logprob: -5.722178936004639
    9. '<' → logprob: -5.972178936004639
    10. '>=' → logprob: -6.597178936004639

Token 517: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021139075979590416
    2. '1' → logprob: -3.896139144897461
    3. ' ' → logprob: -8.521139144897461
    4. '-' → logprob: -9.021139144897461
    5. 'N' → logprob: -9.396139144897461
    6. '2' → logprob: -9.396139144897461
    7. '10' → logprob: -10.646139144897461
    8. 'E' → logprob: -11.396139144897461
    9. '100' → logprob: -11.521139144897461
    10. 'A' → logprob: -11.521139144897461

Token 518: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3929011821746826
    2. ':' → logprob: -1.1429011821746826
    3. ' and' → logprob: -5.142901420593262
    4. 'and' → logprob: -8.892901420593262
    5. '   ' → logprob: -11.642901420593262
    6. ':
' → logprob: -11.892901420593262
    7. '):
' → logprob: -12.017901420593262
    8. ':

' → logprob: -12.642901420593262
    9. ' :
' → logprob: -13.142901420593262
    10. '       ' → logprob: -13.142901420593262

Token 519: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018910575658082962
    2. ':
' → logprob: -5.6439104080200195
    3. ' if' → logprob: -5.6439104080200195
    4. '   ' → logprob: -5.7689104080200195
    5. '
' → logprob: -5.7689104080200195
    6. ':' → logprob: -6.2689104080200195
    7. 'if' → logprob: -6.5189104080200195
    8. ',' → logprob: -7.8939104080200195
    9. ' and' → logprob: -8.01891040802002
    10. '#' → logprob: -8.64391040802002

Token 520: ' adj' (ID: 20251)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09045654535293579
    2. 'if' → logprob: -2.840456485748291
    3. '   ' → logprob: -3.840456485748291
    4. '
' → logprob: -5.965456485748291
    5. '#' → logprob: -6.590456485748291
    6. ' print' → logprob: -6.840456485748291
    7. ' if' → logprob: -7.590456485748291
    8. '       ' → logprob: -7.965456485748291
    9. 'sys' → logprob: -8.71545696258545
    10. 'import' → logprob: -9.46545696258545

Token 521: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -9.305326966568828e-05
    2. '[B' → logprob: -10.000093460083008
    3. 'A' → logprob: -11.125093460083008
    4. '=A' → logprob: -11.250093460083008
    5. ',A' → logprob: -12.125093460083008
    6. '```' → logprob: -13.125093460083008
    7. '
' → logprob: -13.250093460083008
    8. '[M' → logprob: -13.500093460083008
    9. ',' → logprob: -14.000093460083008
    10. '[' → logprob: -14.125093460083008

Token 522: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.18736381828784943
    2. '])' → logprob: -2.937363862991333
    3. ']==' → logprob: -3.437363862991333
    4. ']' → logprob: -3.687363862991333
    5. '.remove' → logprob: -3.937363862991333
    6. '.clear' → logprob: -4.437363624572754
    7. ')' → logprob: -4.812363624572754
    8. '.' → logprob: -4.937363624572754
    9. ']={' → logprob: -5.437363624572754
    10. ']=' → logprob: -5.812363624572754

Token 523: 'add' (ID: 964)
  Prédit: 'clear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clear' → logprob: -0.3292853832244873
    2. 'discard' → logprob: -2.0792853832244873
    3. 'remove' → logprob: -2.2042853832244873
    4. 'pop' → logprob: -3.5792853832244873
    5. 'add' → logprob: -4.079285621643066
    6. 'copy' → logprob: -8.454285621643066
    7. ' clear' → logprob: -9.954285621643066
    8. '.clear' → logprob: -9.954285621643066
    9. 'len' → logprob: -10.954285621643066
    10. 'dis' → logprob: -11.204285621643066

Token 524: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0031866247300058603
    2. 'B' → logprob: -5.7531867027282715
    3. '(A' → logprob: -12.753186225891113
    4. '(' → logprob: -12.878186225891113
    5. '	B' → logprob: -13.753186225891113
    6. '((' → logprob: -14.128186225891113
    7. ',B' → logprob: -15.503186225891113
    8. '(b' → logprob: -15.503186225891113
    9. 'A' → logprob: -15.878186225891113
    10. '```' → logprob: -16.12818717956543

Token 525: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020916592329740524
    2. ')
' → logprob: -3.895916700363159
    3. '       ' → logprob: -8.520916938781738
    4. ' )' → logprob: -9.145916938781738
    5. '   ' → logprob: -10.145916938781738
    6. ' )
' → logprob: -11.395916938781738
    7. '<|end|>' → logprob: -11.895916938781738
    8. '           ' → logprob: -13.270916938781738
    9. ')
' → logprob: -13.395916938781738
    10. ')

' → logprob: -13.520916938781738

Token 526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27632319927215576
    2. '   ' → logprob: -1.9013231992721558
    3. '<|end|>' → logprob: -2.5263233184814453
    4. 'else' → logprob: -5.401323318481445
    5. 'elif' → logprob: -6.026323318481445
    6. ' else' → logprob: -7.026323318481445
    7. 'edges' → logprob: -7.151323318481445
    8. 'adj' → logprob: -7.276323318481445
    9. 'continue' → logprob: -7.526323318481445
    10. '
' → logprob: -7.776323318481445

Token 527: ' adj' (ID: 20251)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.45393556356430054
    2. 'adj' (adapté à ' adj') → logprob: -1.4539356231689453
    3. 'B' → logprob: -2.2039356231689453
    4. ' edges' → logprob: -4.203935623168945
    5. '   ' → logprob: -6.078935623168945
    6. 'if' → logprob: -7.078935623168945
    7. ' adj' → logprob: -7.328935623168945
    8. ' B' → logprob: -7.453935623168945
    9. 'A' → logprob: -7.703935623168945
    10. '(edges' → logprob: -8.953935623168945

Token 528: '[B' (ID: 95385)
  Prédit: '[B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -0.0006323783891275525
    2. '[A' → logprob: -7.375632286071777
    3. '[' → logprob: -12.625632286071777
    4. '```' → logprob: -14.250632286071777
    5. 'B' → logprob: -14.375632286071777
    6. '[C' → logprob: -15.000632286071777
    7. '[b' → logprob: -15.625632286071777
    8. '	B' → logprob: -16.000633239746094
    9. '   ' → logprob: -16.250633239746094
    10. ' [' → logprob: -16.375633239746094

Token 529: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.009993349201977253
    2. ').' → logprob: -5.009993553161621
    3. '.add' → logprob: -6.009993553161621
    4. '.' → logprob: -7.134993553161621
    5. '}.' → logprob: -11.884993553161621
    6. ']' → logprob: -12.259993553161621
    7. '>.' → logprob: -12.634993553161621
    8. ' .' → logprob: -12.759993553161621
    9. ')' → logprob: -13.384993553161621
    10. ''].' → logprob: -14.134993553161621

Token 530: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -5.512236498361744e-07
    2. ' add' → logprob: -14.875000953674316
    3. '(add' → logprob: -16.625
    4. '.add' → logprob: -17.0
    5. 'adj' → logprob: -17.25
    6. 'A' → logprob: -17.75
    7. 'remove' → logprob: -18.25
    8. '```' → logprob: -18.375
    9. '   ' → logprob: -18.875
    10. ' ' → logprob: -19.375

Token 531: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.0802738870552275e-05
    2. 'A' → logprob: -11.62501049041748
    3. '(' → logprob: -13.87501049041748
    4. '(
' → logprob: -14.00001049041748
    5. '(B' → logprob: -18.125011444091797
    6. '```' → logprob: -19.000011444091797
    7. '	A' → logprob: -19.500011444091797
    8. ' A' → logprob: -19.750011444091797
    9. ' (' → logprob: -20.000011444091797
    10. '(
' → logprob: -20.250011444091797

Token 532: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003062319243326783
    2. ')
' → logprob: -6.0030622482299805
    3. '<|end|>' → logprob: -7.6280622482299805
    4. '       ' → logprob: -9.87806224822998
    5. '   ' → logprob: -10.37806224822998
    6. '
' → logprob: -12.37806224822998
    7. ' )' → logprob: -13.00306224822998
    8. ')return' → logprob: -13.00306224822998
    9. '```' → logprob: -13.62806224822998
    10. '#' → logprob: -13.75306224822998

Token 533: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 534: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.5715996623039246
    2. 'else' (adapté à ' else') → logprob: -0.9465996623039246
    3. '   ' → logprob: -3.8215997219085693
    4. ' else' → logprob: -4.07159948348999
    5. ' elif' → logprob: -4.94659948348999
    6. 'if' → logprob: -7.57159948348999
    7. '<|end|>' → logprob: -8.321599960327148
    8. ')' → logprob: -9.071599960327148
    9. '```' → logprob: -9.571599960327148
    10. '	elif' → logprob: -9.821599960327148

Token 535: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4348328411579132
    2. ':' → logprob: -1.0598328113555908
    3. '       ' → logprob: -5.18483304977417
    4. '   ' → logprob: -8.059832572937012
    5. 'if' → logprob: -9.559832572937012
    6. ' if' → logprob: -10.684832572937012
    7. ':

' → logprob: -10.809832572937012
    8. '```' → logprob: -11.309832572937012
    9. '):
' → logprob: -11.434832572937012
    10. ':
' → logprob: -11.559832572937012

Token 536: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7157256603240967
    2. 'mf' → logprob: -0.9657256603240967
    3. ' mf' → logprob: -2.2157256603240967
    4. '```' → logprob: -4.340725898742676
    5. '#' → logprob: -5.715725898742676
    6. '       ' → logprob: -6.590725898742676
    7. '
' → logprob: -6.715725898742676
    8. ' flow' → logprob: -8.090725898742676
    9. 'pass' → logprob: -8.215725898742676
    10. ' #' → logprob: -8.465725898742676

Token 537: ' adj' (ID: 20251)
  Prédit: 'mf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mf' → logprob: -0.004564580507576466
    2. '#' → logprob: -6.3795647621154785
    3. 'print' → logprob: -7.1295647621154785
    4. 'if' → logprob: -7.6295647621154785
    5. 'adj' (adapté à ' adj') → logprob: -8.12956428527832
    6. 'pass' → logprob: -8.62956428527832
    7. 'for' → logprob: -8.62956428527832
    8. '   ' → logprob: -8.75456428527832
    9. 'edges' → logprob: -9.00456428527832
    10. 'flow' → logprob: -9.25456428527832

Token 538: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.00013500562636181712
    2. '[B' → logprob: -9.00013542175293
    3. 'A' → logprob: -12.00013542175293
    4. '=A' → logprob: -13.75013542175293
    5. '[a' → logprob: -13.87513542175293
    6. '   ' → logprob: -14.12513542175293
    7. '[C' → logprob: -14.12513542175293
    8. '[' → logprob: -14.50013542175293
    9. '```' → logprob: -15.00013542175293
    10. '
' → logprob: -16.12513542175293

Token 539: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0006259413785301149
    2. '.remove' → logprob: -8.250625610351562
    3. '.dis' → logprob: -8.375625610351562
    4. '.' → logprob: -9.875625610351562
    5. ']' → logprob: -10.000625610351562
    6. 'discard' → logprob: -10.875625610351562
    7. '][' → logprob: -12.375625610351562
    8. ').' → logprob: -12.750625610351562
    9. '[' → logprob: -12.875625610351562
    10. 'remove' → logprob: -13.000625610351562

Token 540: 'discard' (ID: 170880)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.38719531893730164
    2. 'discard' → logprob: -1.137195348739624
    3. 'add' → logprob: -8.137195587158203
    4. 'pop' → logprob: -11.012195587158203
    5. 'dis' → logprob: -12.262195587158203
    6. 'clear' → logprob: -12.512195587158203
    7. 'rem' → logprob: -13.262195587158203
    8. ' discard' → logprob: -13.637195587158203
    9. 'disc' → logprob: -13.762195587158203
    10. '.remove' → logprob: -13.762195587158203

Token 541: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: 0.0
    2. 'B' → logprob: -18.125
    3. '(' → logprob: -20.625
    4. '(
' → logprob: -20.875
    5. '(A' → logprob: -22.125
    6. ' (' → logprob: -23.0
    7. '((' → logprob: -24.125
    8. '	B' → logprob: -24.375
    9. '(b' → logprob: -25.0
    10. '[B' → logprob: -25.0

Token 542: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01105454470962286
    2. ')
' → logprob: -4.511054515838623
    3. '       ' → logprob: -12.386054992675781
    4. '   ' → logprob: -13.386054992675781
    5. ')
' → logprob: -14.011054992675781
    6. ' )' → logprob: -15.886054992675781
    7. ')

' → logprob: -17.01105499267578
    8. '),' → logprob: -17.13605499267578
    9. '<|end|>' → logprob: -17.51105499267578
    10. ')\
' → logprob: -17.88605499267578

Token 543: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027953458949923515
    2. '   ' → logprob: -3.7779533863067627
    3. ' adj' → logprob: -5.652953624725342
    4. 'adj' → logprob: -7.152953624725342
    5. '<|end|>' → logprob: -8.027953147888184
    6. ' ' → logprob: -10.277953147888184
    7. '
' → logprob: -11.527953147888184
    8. '      ' → logprob: -11.902953147888184
    9. '           ' → logprob: -12.152953147888184
    10. '  ' → logprob: -12.277953147888184

Token 544: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.004081247374415398
    2. ' adj' → logprob: -5.5040812492370605
    3. '   ' → logprob: -13.129080772399902
    4. '       ' → logprob: -14.254080772399902
    5. 'ad' → logprob: -16.12908172607422
    6. '(adj' → logprob: -16.37908172607422
    7. 'Adj' → logprob: -18.37908172607422
    8. 'adm' → logprob: -19.12908172607422
    9. '    ' → logprob: -19.50408172607422
    10. '           ' → logprob: -19.75408172607422

Token 545: '[B' (ID: 95385)
  Prédit: '[B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -1.5690089639974758e-05
    2. 'B' → logprob: -11.500015258789062
    3. '[A' → logprob: -13.000015258789062
    4. '[' → logprob: -13.625015258789062
    5. '```' → logprob: -14.750015258789062
    6. '	B' → logprob: -15.000015258789062
    7. 'adj' → logprob: -15.250015258789062
    8. '[
' → logprob: -15.500015258789062
    9. '[b' → logprob: -15.875015258789062
    10. '[C' → logprob: -16.125015258789062

Token 546: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.001995250815525651
    2. '.' → logprob: -6.251995086669922
    3. ').' → logprob: -10.376995086669922
    4. ']' → logprob: -11.376995086669922
    5. '>.' → logprob: -11.751995086669922
    6. '}.' → logprob: -12.001995086669922
    7. '.dis' → logprob: -12.376995086669922
    8. '   ' → logprob: -12.626995086669922
    9. ' ].' → logprob: -14.001995086669922
    10. ''].' → logprob: -14.876995086669922

Token 547: 'discard' (ID: 170880)
  Prédit: 'discard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'discard' → logprob: -4.4849443838757e-06
    2. 'remove' → logprob: -12.875004768371582
    3. ' discard' → logprob: -13.250004768371582
    4. 'add' → logprob: -16.250003814697266
    5. 'disc' → logprob: -17.625003814697266
    6. 'Discard' → logprob: -18.375003814697266
    7. 'adj' → logprob: -18.625003814697266
    8. 'dis' → logprob: -19.625003814697266
    9. 'dismiss' → logprob: -20.625003814697266
    10. 'disp' → logprob: -20.750003814697266

Token 548: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -2.7968066206085496e-05
    2. '(B' → logprob: -10.500027656555176
    3. 'A' → logprob: -15.250027656555176
    4. '(' → logprob: -16.000028610229492
    5. '(
' → logprob: -17.750028610229492
    6. ' (' → logprob: -19.875028610229492
    7. 'B' → logprob: -20.000028610229492
    8. '((' → logprob: -20.250028610229492
    9. ')' → logprob: -20.375028610229492
    10. '```' → logprob: -20.500028610229492

Token 549: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.541112427134067e-05
    2. ')
' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.500075340270996
    4. ' )' → logprob: -16.125076293945312
    5. '<|end|>' → logprob: -16.500076293945312
    6. '       ' → logprob: -16.750076293945312
    7. ')
' → logprob: -17.125076293945312
    8. ')

' → logprob: -17.250076293945312
    9. '))' → logprob: -18.375076293945312
    10. '),' → logprob: -18.375076293945312

Token 550: '   ' (ID: 271)
  Prédit: 'mf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mf' → logprob: -0.0015767596196383238
    2. '#' → logprob: -7.126576900482178
    3. 'if' → logprob: -8.00157642364502
    4. '   ' → logprob: -9.12657642364502
    5. '```' → logprob: -9.12657642364502
    6. 'max' → logprob: -9.62657642364502
    7. 'print' → logprob: -9.87657642364502
    8. 'm' → logprob: -10.50157642364502
    9. 'flow' → logprob: -11.00157642364502
    10. 'n' → logprob: -11.62657642364502

Token 551: ' mf' (ID: 45148)
  Prédit: 'mf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mf' (adapté à ' mf') → logprob: -0.0011249757371842861
    2. 'if' → logprob: -7.626124858856201
    3. 'print' → logprob: -8.87612533569336
    4. '#' → logprob: -9.25112533569336
    5. 'm' → logprob: -9.37612533569336
    6. '   ' → logprob: -9.50112533569336
    7. 'g' → logprob: -9.75112533569336
    8. '```' → logprob: -10.25112533569336
    9. ' mf' → logprob: -10.75112533569336
    10. 'import' → logprob: -11.12612533569336

Token 552: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019320894498378038
    2. ' =' → logprob: -6.251932144165039
    3. '=max' → logprob: -12.626932144165039
    4. '=M' → logprob: -16.75193214416504
    5. '.=' → logprob: -16.87693214416504
    6. '=tf' → logprob: -17.75193214416504
    7. '.' → logprob: -17.87693214416504
    8. '＝' → logprob: -18.00193214416504
    9. '=
' → logprob: -18.12693214416504
    10. '=m' → logprob: -18.37693214416504

Token 553: 'Max' (ID: 6499)
  Prédit: 'Max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Max' → logprob: 0.0
    2. ' Max' → logprob: -17.5
    3. 'max' → logprob: -17.75
    4. '	Max' → logprob: -23.125
    5. '_Max' → logprob: -24.0
    6. 'MAX' → logprob: -24.125
    7. '_max' → logprob: -24.25
    8. '.Max' → logprob: -24.625
    9. '(Max' → logprob: -24.625
    10. 'Min' → logprob: -24.75

Token 554: 'Flow' (ID: 18017)
  Prédit: 'Flow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Flow' → logprob: -6.704273118884885e-07
    2. 'flow' → logprob: -15.500000953674316
    3. ' Flow' → logprob: -15.625000953674316
    4. '.Flow' → logprob: -15.875000953674316
    5. '_flow' → logprob: -15.875000953674316
    6. '_FLOW' → logprob: -18.0
    7. 'Flows' → logprob: -18.0
    8. ' flow' → logprob: -18.125
    9. 'Flood' → logprob: -18.75
    10. 'Flux' → logprob: -18.875

Token 555: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00409419322386384
    2. 'N' → logprob: -5.504094123840332
    3. '(' → logprob: -11.254094123840332
    4. '(
' → logprob: -13.754094123840332
    5. '(len' → logprob: -13.754094123840332
    6. '(n' → logprob: -15.254094123840332
    7. ' (' → logprob: -15.754094123840332
    8. ' N' → logprob: -16.12909507751465
    9. '```' → logprob: -16.25409507751465
    10. '
' → logprob: -17.12909507751465

Token 556: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008619893342256546
    2. ')
' → logprob: -4.758619785308838
    3. ')
' → logprob: -12.508620262145996
    4. ' )' → logprob: -13.758620262145996
    5. ')

' → logprob: -14.633620262145996
    6. ')m' → logprob: -16.88361930847168
    7. '),' → logprob: -17.13361930847168
    8. ')`' → logprob: -17.38361930847168
    9. '))' → logprob: -17.50861930847168
    10. ' )
' → logprob: -17.75861930847168

Token 557: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43732360005378723
    2. '   ' → logprob: -1.6873235702514648
    3. ' for' → logprob: -1.9373235702514648
    4. '<|end|>' → logprob: -3.687323570251465
    5. '	for' → logprob: -10.062323570251465
    6. '```' → logprob: -10.437323570251465
    7. '<|end|>' → logprob: -11.187323570251465
    8. '    
' → logprob: -13.187323570251465
    9. ' ' → logprob: -13.187323570251465
    10. '  ' → logprob: -13.562323570251465

Token 558: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001552665780764073
    2. ' for' → logprob: -9.000155448913574
    3. '   ' → logprob: -10.375155448913574
    4. '	for' → logprob: -15.375155448913574
    5. '<|end|>' → logprob: -16.125154495239258
    6. '```' → logprob: -16.375154495239258
    7. '#' → logprob: -17.750154495239258
    8. '    
' → logprob: -17.750154495239258
    9. 'edges' → logprob: -18.375154495239258
    10. '[' → logprob: -18.500154495239258

Token 559: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.007203708868473768
    2. 'i' → logprob: -5.382203578948975
    3. 'v' → logprob: -6.632203578948975
    4. ' u' → logprob: -6.757203578948975
    5. 'a' → logprob: -9.382204055786133
    6. ' i' → logprob: -11.882204055786133
    7. 'f' → logprob: -12.382204055786133
    8. ' v' → logprob: -13.007204055786133
    9. '```' → logprob: -13.632204055786133
    10. 'x' → logprob: -13.882204055786133

Token 560: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38818880915641785
    2. 'in' → logprob: -1.1381888389587402
    3. ',' → logprob: -6.63818883895874
    4. ',in' → logprob: -12.138188362121582
    5. ' ' → logprob: -14.763188362121582
    6. '```' → logprob: -15.013188362121582
    7. ',u' → logprob: -15.138188362121582
    8. '	in' → logprob: -15.638188362121582
    9. '.' → logprob: -15.888188362121582
    10. ',v' → logprob: -16.3881893157959

Token 561: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.676292231422849e-05
    2. ' range' → logprob: -11.000017166137695
    3. '0' → logprob: -18.000017166137695
    4. 'r' → logprob: -19.000017166137695
    5. '```' → logprob: -19.000017166137695
    6. '(range' → logprob: -19.500017166137695
    7. 'adj' → logprob: -19.750017166137695
    8. 'rang' → logprob: -20.375017166137695
    9. '
' → logprob: -21.125017166137695
    10. '.range' → logprob: -21.250017166137695

Token 562: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.014163747429847717
    2. '(N' → logprob: -4.264163970947266
    3. '[N' → logprob: -16.139163970947266
    4. ',N' → logprob: -16.764163970947266
    5. ' N' → logprob: -16.889163970947266
    6. '(' → logprob: -17.264163970947266
    7. 'n' → logprob: -17.639163970947266
    8. '_N' → logprob: -17.639163970947266
    9. 'len' → logprob: -18.014163970947266
    10. '	N' → logprob: -18.014163970947266

Token 563: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6329294443130493
    2. '):
' → logprob: -0.7579294443130493
    3. ')' → logprob: -8.507929801940918
    4. '   ' → logprob: -9.257929801940918
    5. ':' → logprob: -11.132929801940918
    6. '):
' → logprob: -11.382929801940918
    7. ':
' → logprob: -13.007929801940918
    8. '):

' → logprob: -13.257929801940918
    9. '       ' → logprob: -14.382929801940918
    10. '  ' → logprob: -15.007929801940918

Token 564: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5900301933288574
    2. '   ' → logprob: -1.3400301933288574
    3. ' for' → logprob: -1.7150301933288574
    4. 'for' → logprob: -5.715030193328857
    5. '<|end|>' → logprob: -8.215030670166016
    6. '	for' → logprob: -8.340030670166016
    7. '	   ' → logprob: -9.590030670166016
    8. ' ' → logprob: -11.965030670166016
    9. ',' → logprob: -12.965030670166016
    10. '    ' → logprob: -13.215030670166016

Token 565: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001921610557474196
    2. '   ' → logprob: -6.751921653747559
    3. ' for' → logprob: -7.251921653747559
    4. '       ' → logprob: -10.126921653747559
    5. '	for' → logprob: -13.126921653747559
    6. ' ' → logprob: -15.501921653747559
    7. '  ' → logprob: -17.126920700073242
    8. '```' → logprob: -17.751920700073242
    9. '<|end|>' → logprob: -18.626920700073242
    10. '_for' → logprob: -19.876920700073242

Token 566: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00022046364028938115
    2. ' v' → logprob: -8.50022029876709
    3. 'w' → logprob: -11.00022029876709
    4. '   ' → logprob: -16.375221252441406
    5. 'to' → logprob: -16.500221252441406
    6. '	v' → logprob: -16.625221252441406
    7. '```' → logprob: -17.250221252441406
    8. ' w' → logprob: -17.375221252441406
    9. ' ' → logprob: -17.750221252441406
    10. '  ' → logprob: -17.875221252441406

Token 567: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47409504652023315
    2. 'in' → logprob: -0.9740950465202332
    3. '   ' → logprob: -11.599095344543457
    4. ' ' → logprob: -12.349095344543457
    5. 'adj' → logprob: -13.349095344543457
    6. '    ' → logprob: -13.849095344543457
    7. '	in' → logprob: -14.474095344543457
    8. '  ' → logprob: -14.474095344543457
    9. '_in' → logprob: -15.974095344543457
    10. '       ' → logprob: -16.22409439086914

Token 568: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -3.7697225252486533e-06
    2. ' adj' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.250003814697266
    4. 'list' → logprob: -19.125003814697266
    5. 'sorted' → logprob: -20.375003814697266
    6. '(adj' → logprob: -20.375003814697266
    7. 'ad' → logprob: -20.750003814697266
    8. 'adm' → logprob: -21.625003814697266
    9. ' ' → logprob: -22.625003814697266
    10. 'aj' → logprob: -22.625003814697266

Token 569: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -7.584239938296378e-06
    2. 'u' → logprob: -11.875007629394531
    3. '[v' → logprob: -14.500007629394531
    4. '[' → logprob: -17.87500762939453
    5. '```' → logprob: -17.87500762939453
    6. '<u' → logprob: -18.00000762939453
    7. '(u' → logprob: -18.50000762939453
    8. '[
' → logprob: -19.50000762939453
    9. '   ' → logprob: -19.62500762939453
    10. '[user' → logprob: -19.87500762939453

Token 570: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.566645622253418
    2. '):
' → logprob: -1.191645622253418
    3. ':' → logprob: -2.191645622253418
    4. '       ' → logprob: -4.691645622253418
    5. ':
' → logprob: -6.066645622253418
    6. ']:' → logprob: -6.191645622253418
    7. '   ' → logprob: -6.691645622253418
    8. '):
' → logprob: -7.941645622253418
    9. '.' → logprob: -8.191645622253418
    10. ')' → logprob: -8.191645622253418

Token 571: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000170882252859883
    2. '       ' → logprob: -9.250170707702637
    3. 'mf' → logprob: -10.500170707702637
    4. ',m' → logprob: -11.000170707702637
    5. ':' → logprob: -11.875170707702637
    6. '	       ' → logprob: -12.375170707702637
    7. ',' → logprob: -12.500170707702637
    8. ':
' → logprob: -13.250170707702637
    9. '<m' → logprob: -13.375170707702637
    10. 'm' → logprob: -13.500170707702637

Token 572: ' #' (ID: 1069)
  Prédit: 'mf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mf' → logprob: -0.43855977058410645
    2. '       ' → logprob: -1.0635597705841064
    3. ' mf' → logprob: -5.188559532165527
    4. '           ' → logprob: -5.688559532165527
    5. '   ' → logprob: -7.938559532165527
    6. '               ' → logprob: -8.188559532165527
    7. 'if' → logprob: -8.563559532165527
    8. 'm' → logprob: -12.313559532165527
    9. ' if' → logprob: -12.688559532165527
    10. '-mf' → logprob: -12.688559532165527

Token 573: ' capacity' (ID: 12241)
  Prédit: 'mf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mf' → logprob: -0.0007327937055379152
    2. '           ' → logprob: -8.125732421875
    3. 'if' → logprob: -8.625732421875
    4. ' mf' → logprob: -8.750732421875
    5. '   ' → logprob: -9.500732421875
    6. '       ' → logprob: -10.750732421875
    7. '               ' → logprob: -13.875732421875
    8. '-mf' → logprob: -14.500732421875
    9. '```' → logprob: -14.750732421875
    10. ' if' → logprob: -16.125732421875

Token 574: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0730220228433609
    2. 'mf' → logprob: -3.1980221271514893
    3. '1' → logprob: -4.19802188873291
    4. ' =' → logprob: -4.82302188873291
    5. '   ' → logprob: -5.94802188873291
    6. '           ' → logprob: -5.94802188873291
    7. ' mf' → logprob: -7.32302188873291
    8. ',' → logprob: -8.94802188873291
    9. '
' → logprob: -9.32302188873291
    10. '=m' → logprob: -9.57302188873291

Token 575: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.013734190724790096
    2. '1' → logprob: -4.513734340667725
    3. 'mf' → logprob: -6.763734340667725
    4. ' =' → logprob: -7.013734340667725
    5. '           ' → logprob: -9.138733863830566
    6. '```' → logprob: -9.513733863830566
    7. '=max' → logprob: -9.513733863830566
    8. '   ' → logprob: -9.763733863830566
    9. '
' → logprob: -10.013733863830566
    10. '=m' → logprob: -10.138733863830566

Token 576: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08097495138645172
    2. ',' → logprob: -4.08097505569458
    3. '
' → logprob: -4.33097505569458
    4. '   ' → logprob: -4.33097505569458
    5. '       ' → logprob: -4.45597505569458
    6. 'mf' → logprob: -4.83097505569458
    7. ',m' → logprob: -5.33097505569458
    8. '            
' → logprob: -6.08097505569458
    9. ':' → logprob: -6.45597505569458
    10. '<|end|>' → logprob: -7.08097505569458

Token 577: ' each' (ID: 2454)
  Prédit: 'mf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mf' → logprob: -0.5336865186691284
    2. 'each' → logprob: -1.6586865186691284
    3. ' mf' → logprob: -2.158686637878418
    4. 'u' → logprob: -3.533686637878418
    5. ' each' → logprob: -3.658686637878418
    6. '1' → logprob: -4.533686637878418
    7. ' u' → logprob: -4.658686637878418
    8. 'edge' → logprob: -4.658686637878418
    9. 'v' → logprob: -5.533686637878418
    10. 'all' → logprob: -5.908686637878418

Token 578: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.18871328234672546
    2. 'mf' → logprob: -1.9387133121490479
    3. ' edge' → logprob: -3.688713312149048
    4. 'edges' → logprob: -6.438713073730469
    5. ' mf' → logprob: -7.688713073730469
    6. 'u' → logprob: -7.938713073730469
    7. '   ' → logprob: -8.813713073730469
    8. ' edges' → logprob: -8.813713073730469
    9. 'max' → logprob: -9.313713073730469
    10. 'uf' → logprob: -10.063713073730469

Token 579: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007065339479595423
    2. '       ' → logprob: -5.007065296173096
    3. 'mf' → logprob: -8.257065773010254
    4. '   ' → logprob: -9.882065773010254
    5. ',' → logprob: -11.382065773010254
    6. '               ' → logprob: -11.632065773010254
    7. ' mf' → logprob: -11.757065773010254
    8. ',m' → logprob: -12.382065773010254
    9. '		' → logprob: -13.382065773010254
    10. '	       ' → logprob: -14.007065773010254

Token 580: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009590452536940575
    2. '       ' → logprob: -5.2595906257629395
    3. '   ' → logprob: -5.7595906257629395
    4. 'mf' → logprob: -7.0095906257629395
    5. ',' → logprob: -8.634590148925781
    6. '               ' → logprob: -10.759590148925781
    7. ',m' → logprob: -10.759590148925781
    8. '
' → logprob: -10.884590148925781
    9. ' mf' → logprob: -11.009590148925781
    10. '            
' → logprob: -12.009590148925781

Token 581: ' mf' (ID: 45148)
  Prédit: 'mf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mf' (adapté à ' mf') → logprob: -0.00014764121442567557
    2. ' mf' → logprob: -9.625147819519043
    3. '   ' → logprob: -10.125147819519043
    4. '           ' → logprob: -10.125147819519043
    5. '       ' → logprob: -13.625147819519043
    6. '-mf' → logprob: -16.250146865844727
    7. 'if' → logprob: -17.625146865844727
    8. '  ' → logprob: -18.125146865844727
    9. '               ' → logprob: -18.250146865844727
    10. 'mc' → logprob: -18.250146865844727

Token 582: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.318681188422488e-05
    2. '.' → logprob: -11.25001335144043
    3. ' .' → logprob: -16.50001335144043
    4. '.Add' → logprob: -19.00001335144043
    5. 'add' → logprob: -19.12501335144043
    6. '.ad' → logprob: -19.50001335144043
    7. ').' → logprob: -19.62501335144043
    8. '   ' → logprob: -19.75001335144043
    9. '.append' → logprob: -20.00001335144043
    10. '].' → logprob: -20.12501335144043

Token 583: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -2.5776860184123507e-06
    2. 'edge' → logprob: -13.25000286102295
    3. '_' → logprob: -14.87500286102295
    4. '_edges' → logprob: -16.000001907348633
    5. '(u' → logprob: -16.750001907348633
    6. '```' → logprob: -17.125001907348633
    7. '   ' → logprob: -17.375001907348633
    8. '(_' → logprob: -17.875001907348633
    9. '(edge' → logprob: -17.875001907348633
    10. '_line' → logprob: -18.000001907348633

Token 584: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.00023965541913639754
    2. 'u' → logprob: -8.375239372253418
    3. ' u' → logprob: -11.750239372253418
    4. ' (' → logprob: -14.500239372253418
    5. '[u' → logprob: -14.750239372253418
    6. '(' → logprob: -15.750239372253418
    7. '(v' → logprob: -16.375240325927734
    8. ',u' → logprob: -16.500240325927734
    9. '(
' → logprob: -18.500240325927734
    10. '	u' → logprob: -18.625240325927734

Token 585: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4743860363960266
    2. ',v' → logprob: -0.9743860363960266
    3. ' ,' → logprob: -8.099386215209961
    4. 'v' → logprob: -12.599386215209961
    5. ',
' → logprob: -14.224386215209961
    6. ' v' → logprob: -15.349386215209961
    7. ',u' → logprob: -15.599386215209961
    8. '   ' → logprob: -15.849386215209961
    9. '           ' → logprob: -15.849386215209961
    10. ',b' → logprob: -16.97438621520996

Token 586: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010759611177491024
    2. '1' → logprob: -9.750107765197754
    3. ' ,' → logprob: -10.000107765197754
    4. '           ' → logprob: -12.625107765197754
    5. '   ' → logprob: -15.500107765197754
    6. '               ' → logprob: -15.875107765197754
    7. '                   ' → logprob: -16.625106811523438
    8. ',
' → logprob: -16.625106811523438
    9. '       ' → logprob: -16.875106811523438
    10. '```' → logprob: -17.500106811523438

Token 587: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.250001907348633
    4. '
' → logprob: -18.125001907348633
    5. '```' → logprob: -18.250001907348633
    6. ')' → logprob: -18.375001907348633
    7. '  ' → logprob: -19.375001907348633
    8. '           ' → logprob: -19.562501907348633
    9. '       ' → logprob: -20.125001907348633
    10. '۱' → logprob: -20.187501907348633

Token 588: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.632542913896032e-05
    2. ')
' → logprob: -10.375046730041504
    3. '           ' → logprob: -11.375046730041504
    4. '<|end|>' → logprob: -13.250046730041504
    5. '       ' → logprob: -14.625046730041504
    6. ' )' → logprob: -14.875046730041504
    7. ')return' → logprob: -15.125046730041504
    8. ')#' → logprob: -15.625046730041504
    9. ')

' → logprob: -16.250045776367188
    10. '   ' → logprob: -16.625045776367188

Token 589: '   ' (ID: 271)
  Prédit: 'flow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flow' → logprob: -0.9855201244354248
    2. '<|end|>' → logprob: -1.2355201244354248
    3. ' flow' → logprob: -1.9855201244354248
    4. '   ' → logprob: -1.9855201244354248
    5. ')' → logprob: -3.485520124435425
    6. '(flow' → logprob: -4.110520362854004
    7. '.flow' → logprob: -5.860520362854004
    8. 'f' → logprob: -6.735520362854004
    9. '<|end|>' → logprob: -6.735520362854004
    10. '       ' → logprob: -6.860520362854004

Token 590: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.01959780417382717
    2. 'res' → logprob: -4.144598007202148
    3. 'flow' → logprob: -5.894598007202148
    4. 'result' → logprob: -8.269598007202148
    5. 'f' → logprob: -8.394598007202148
    6. ' print' → logprob: -8.894598007202148
    7. '   ' → logprob: -9.019598007202148
    8. ' res' → logprob: -11.019598007202148
    9. '```' → logprob: -11.269598007202148
    10. 'ans' → logprob: -11.769598007202148

Token 591: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.25590434670448303
    2. '(m' → logprob: -1.5059043169021606
    3. '(' → logprob: -5.755904197692871
    4. 'max' → logprob: -7.505904197692871
    5. '(mx' → logprob: -8.880904197692871
    6. '(sum' → logprob: -10.380904197692871
    7. '(min' → logprob: -10.755904197692871
    8. '(len' → logprob: -11.630904197692871
    9. '(M' → logprob: -11.755904197692871
    10. '()' → logprob: -11.755904197692871

Token 592: '_flow' (ID: 63802)
  Prédit: '_flow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flow' → logprob: -2.339278580620885e-06
    2. '_flux' → logprob: -13.250001907348633
    3. '_' → logprob: -15.500001907348633
    4. ')_' → logprob: -16.250001907348633
    5. '_fl' → logprob: -16.500001907348633
    6. '_floor' → logprob: -16.625001907348633
    7. '_FLOW' → logprob: -17.000001907348633
    8. '_f' → logprob: -17.375001907348633
    9. ')' → logprob: -17.875001907348633
    10. 'flow' → logprob: -18.375001907348633

Token 593: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.2471589798224159e-05
    2. ')' → logprob: -12.250012397766113
    3. '(' → logprob: -12.375012397766113
    4. 'mf' → logprob: -14.000012397766113
    5. ')m' → logprob: -14.375012397766113
    6. ')(' → logprob: -14.625012397766113
    7. 'm' → logprob: -14.625012397766113
    8. ' (' → logprob: -14.875012397766113
    9. ',m' → logprob: -15.250012397766113
    10. '(
' → logprob: -15.625012397766113

Token 594: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.981667537620524e-06
    2. ',f' → logprob: -14.500001907348633
    3. 'F' → logprob: -14.625001907348633
    4. ',' → logprob: -14.750001907348633
    5. ' f' → logprob: -15.500001907348633
    6. ')' → logprob: -16.625001907348633
    7. 's' → logprob: -16.875001907348633
    8. '
' → logprob: -17.000001907348633
    9. 'A' → logprob: -17.250001907348633
    10. '.f' → logprob: -17.375001907348633

Token 595: ',' (ID: 11)
  Prédit: ',A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',A' → logprob: -0.003228098386898637
    2. ',' → logprob: -5.753228187561035
    3. ' ,' → logprob: -10.753228187561035
    4. ',B' → logprob: -10.878228187561035
    5. '(A' → logprob: -12.253228187561035
    6. 'A' → logprob: -13.128228187561035
    7. ',N' → logprob: -13.878228187561035
    8. ',S' → logprob: -14.128228187561035
    9. ',M' → logprob: -14.378228187561035
    10. ',(' → logprob: -15.003228187561035

Token 596: '0' (ID: 15)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.002475777640938759
    2. ' A' → logprob: -6.002475738525391
    3. '0' → logprob: -16.87747573852539
    4. ')' → logprob: -17.25247573852539
    5. ',A' → logprob: -17.75247573852539
    6. '(A' → logprob: -18.62747573852539
    7. '	A' → logprob: -19.12747573852539
    8. 'B' → logprob: -19.12747573852539
    9. ' ' → logprob: -19.87747573852539
    10. '<|end|>' → logprob: -20.12747573852539

Token 597: ',N' (ID: 49539)
  Prédit: ',B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.014425676316022873
    2. ',N' → logprob: -4.514425754547119
    3. ',' → logprob: -5.764425754547119
    4. ' ,' → logprob: -8.889425277709961
    5. ',A' → logprob: -9.639425277709961
    6. ',b' → logprob: -10.889425277709961
    7. 'B' → logprob: -11.889425277709961
    8. ',M' → logprob: -12.889425277709961
    9. 'N' → logprob: -14.139425277709961
    10. '   ' → logprob: -14.139425277709961

Token 598: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.2961512513575144e-05
    2. ' -' → logprob: -11.000022888183594
    3. '1' → logprob: -12.000022888183594
    4. '−' → logprob: -17.125022888183594
    5. '```' → logprob: -17.625022888183594
    6. '()-' → logprob: -17.875022888183594
    7. ')' → logprob: -18.625022888183594
    8. '–' → logprob: -19.625022888183594
    9. '`' → logprob: -20.125022888183594
    10. ')-' → logprob: -20.250022888183594

Token 599: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.00000286102295
    3. ')' → logprob: -14.75000286102295
    4. '```' → logprob: -16.000003814697266
    5. '2' → logprob: -16.562503814697266
    6. '0' → logprob: -17.187503814697266
    7. '-' → logprob: -17.937503814697266
    8. '   ' → logprob: -18.125003814697266
    9. '
' → logprob: -18.187503814697266
    10. '１' → logprob: -18.437503814697266

Token 600: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0181526318192482
    2. ')' → logprob: -4.018152713775635
    3. '))
' → logprob: -13.643152236938477
    4. ')))' → logprob: -14.143152236938477
    5. ' ))' → logprob: -15.393152236938477
    6. ')
' → logprob: -15.643152236938477
    7. '()))' → logprob: -15.768152236938477
    8. '),' → logprob: -16.268152236938477
    9. ')}' → logprob: -17.143152236938477
    10. '})' → logprob: -17.643152236938477


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 598
Tokens correctement prédits (1ère position, stricte): 325
Tokens correctement prédits (1ère position, avec adaptation): 362
Tokens correctement prédits (top 10): 558
Précision stricte (1ère position): 54.35%
Précision adaptée (1ère position): 60.54%
Précision (top 10): 93.31%
================================================================================
