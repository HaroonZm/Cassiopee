================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:02:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    max_patient = 0
    max_distance = -1
    for _ in range(n):
        p, d1, d2 = map(int, input().split())
        total = d1 + d2
        if total > max_distance:
            max_distance = total
            max_patient = p
    print(max_patient, max_distance)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5877122282981873
    2. '\' → logprob: -2.212712287902832
    3. ' ' → logprob: -2.462712287902832
    4. '```' → logprob: -2.837712287902832
    5. '    ' → logprob: -2.962712287902832
    6. '    
' → logprob: -3.212712287902832
    7. '\n' → logprob: -3.837712287902832
    8. ' 
' → logprob: -3.962712287902832
    9. '<|end|>' → logprob: -4.087712287902832
    10. '  
' → logprob: -5.087712287902832

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19517217576503754
    2. '    ' → logprob: -2.695172071456909
    3. ' ' → logprob: -3.070172071456909
    4. '```' → logprob: -3.195172071456909
    5. '       ' → logprob: -5.195172309875488
    6. '    
' → logprob: -5.695172309875488
    7. ' pass' → logprob: -5.945172309875488
    8. '  ' → logprob: -6.445172309875488
    9. 'pass' → logprob: -6.445172309875488
    10. ' ```' → logprob: -6.945172309875488

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7390616536140442
    2. 'u' → logprob: -1.6140615940093994
    3. '=' → logprob: -2.1140615940093994
    4. 'o' → logprob: -2.7390615940093994
    5. '   ' → logprob: -2.9890615940093994
    6. 'e' → logprob: -4.1140618324279785
    7. ' =' → logprob: -4.1140618324279785
    8. '_' → logprob: -4.7390618324279785
    9. '+' → logprob: -4.9890618324279785
    10. '  ' → logprob: -5.1140618324279785

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3691587746143341
    2. ' input' → logprob: -1.2441587448120117
    3. 'input' → logprob: -4.494158744812012
    4. 'int' → logprob: -5.244158744812012
    5. ' n' → logprob: -5.619158744812012
    6. ' ' → logprob: -8.494158744812012
    7. 'n' → logprob: -9.744158744812012
    8. ' randint' → logprob: -10.619158744812012
    9. ' a' → logprob: -10.744158744812012
    10. ' eval' → logprob: -11.119158744812012

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002818312495946884
    2. '(input' → logprob: -5.8778181076049805
    3. '('' → logprob: -12.62781810760498
    4. '()' → logprob: -12.87781810760498
    5. 'input' → logprob: -12.87781810760498
    6. '(
' → logprob: -13.12781810760498
    7. ' (' → logprob: -13.75281810760498
    8. ''' → logprob: -14.62781810760498
    9. '(n' → logprob: -15.25281810760498
    10. '("' → logprob: -16.252819061279297

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12421323359012604
    2. ')' → logprob: -2.499213218688965
    3. '()' → logprob: -3.624213218688965
    4. '())' → logprob: -5.124213218688965
    5. '))' → logprob: -6.999213218688965
    6. '(
' → logprob: -8.249213218688965
    7. '()))' → logprob: -8.749213218688965
    8. '('' → logprob: -8.749213218688965
    9. ' ' → logprob: -9.249213218688965
    10. '```' → logprob: -9.749213218688965

Token 9: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 10: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7105682492256165
    2. '   ' → logprob: -1.0855681896209717
    3. ' ' → logprob: -2.7105681896209717
    4. '    ' → logprob: -3.4605681896209717
    5. 'if' (adapté à ' if') → logprob: -3.4605681896209717
    6. ')' → logprob: -4.460568428039551
    7. '  ' → logprob: -4.835568428039551
    8. ':' → logprob: -5.835568428039551
    9. '\n' → logprob: -6.210568428039551
    10. ' )' → logprob: -6.335568428039551

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0014810555148869753
    2. 'n' → logprob: -7.001481056213379
    3. ' not' → logprob: -8.001481056213379
    4. ' ' → logprob: -8.376481056213379
    5. 'not' → logprob: -13.251481056213379
    6. ' ' → logprob: -13.751481056213379
    7. '  ' → logprob: -15.126481056213379
    8. '	n' → logprob: -15.876481056213379
    9. '(n' → logprob: -16.126480102539062
    10. '<|end|>' → logprob: -16.251480102539062

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3231046199798584
    2. ' >' → logprob: -2.0731046199798584
    3. ' <=' → logprob: -2.4481046199798584
    4. ' <' → logprob: -3.5731046199798584
    5. '==' → logprob: -3.8231046199798584
    6. '>' → logprob: -5.0731048583984375
    7. ' ' → logprob: -5.4481048583984375
    8. ' >=' → logprob: -7.1981048583984375
    9. '<=' → logprob: -7.1981048583984375
    10. '<' → logprob: -7.4481048583984375

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2811618745326996
    2. '0' → logprob: -1.406161904335022
    3. '1' → logprob: -12.78116226196289
    4. ' ' → logprob: -13.15616226196289
    5. '10' → logprob: -13.90616226196289
    6. '100' → logprob: -13.90616226196289
    7. '32' → logprob: -14.40616226196289
    8. ' -' → logprob: -14.78116226196289
    9. '  ' → logprob: -14.78116226196289
    10. '20' → logprob: -14.96866226196289

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003056142246350646
    2. ' ' → logprob: -5.878056049346924
    3. '-' → logprob: -8.378056526184082
    4. ' -' → logprob: -11.628056526184082
    5. '1' → logprob: -12.128056526184082
    6. '42' → logprob: -12.878056526184082
    7. '   ' → logprob: -14.253056526184082
    8. '  ' → logprob: -14.690556526184082
    9. '4' → logprob: -14.753056526184082
    10. '```' → logprob: -15.065556526184082

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.023293538717553e-05
    2. ':
' → logprob: -11.250030517578125
    3. '   ' → logprob: -12.125030517578125
    4. ' :' → logprob: -12.250030517578125
    5. '       ' → logprob: -13.250030517578125
    6. ':return' → logprob: -13.250030517578125
    7. '):' → logprob: -13.625030517578125
    8. ':\' → logprob: -14.000030517578125
    9. '    ' → logprob: -15.000030517578125
    10. '():' → logprob: -15.500030517578125

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003570343542378396
    2. '   ' → logprob: -8.750356674194336
    3. ' break' → logprob: -9.500356674194336
    4. '    ' → logprob: -10.000356674194336
    5. '\n' → logprob: -10.625356674194336
    6. '      ' → logprob: -11.500356674194336
    7. '        ' → logprob: -11.750356674194336
    8. '	break' → logprob: -12.250356674194336
    9. '<|end|>' → logprob: -12.375356674194336
    10. '     ' → logprob: -12.500356674194336

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.006346326321363449
    2. '       ' → logprob: -5.631346225738525
    3. 'break' (adapté à ' break') → logprob: -6.506346225738525
    4. '\n' → logprob: -7.631346225738525
    5. '   ' → logprob: -7.756346225738525
    6. '    ' → logprob: -9.006346702575684
    7. '	break' → logprob: -9.131346702575684
    8. '_break' → logprob: -10.881346702575684
    9. '```' → logprob: -11.131346702575684
    10. ' \' → logprob: -11.381346702575684

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4790402054786682
    2. '\n' → logprob: -1.6040401458740234
    3. ':' → logprob: -2.2290401458740234
    4. '    
' → logprob: -4.229040145874023
    5. '\' → logprob: -4.479040145874023
    6. '<|end|>' → logprob: -4.604040145874023
    7. '#' → logprob: -5.229040145874023
    8. ' ' → logprob: -5.479040145874023
    9. '\r' → logprob: -5.479040145874023
    10. ' 
' → logprob: -5.479040145874023

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7498542666435242
    2. '\n' → logprob: -1.624854326248169
    3. '<|end|>' → logprob: -1.624854326248169
    4. '    
' → logprob: -3.249854326248169
    5. '\' → logprob: -3.874854326248169
    6. '```' → logprob: -3.999854326248169
    7. '
' → logprob: -4.12485408782959
    8. '#' → logprob: -4.24985408782959
    9. ':' → logprob: -5.12485408782959
    10. ')' → logprob: -5.87485408782959

Token 20: ' max' (ID: 2999)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27328136563301086
    2. '\n' → logprob: -2.1482813358306885
    3. ' ' → logprob: -3.5232813358306885
    4. '<|end|>' → logprob: -3.6482813358306885
    5. '\' → logprob: -3.7732813358306885
    6. '    ' → logprob: -4.523281574249268
    7. '    
' → logprob: -5.023281574249268
    8. '```' → logprob: -5.398281574249268
    9. ')' → logprob: -5.773281574249268
    10. '\r' → logprob: -5.773281574249268

Token 21: '_patient' (ID: 148230)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.044871628284454346
    2. '_sum' → logprob: -4.044871807098389
    3. '_val' → logprob: -4.419871807098389
    4. '_len' → logprob: -5.044871807098389
    5. '_num' → logprob: -6.044871807098389
    6. '_length' → logprob: -6.169871807098389
    7. '_value' → logprob: -6.419871807098389
    8. '_n' → logprob: -8.04487133026123
    9. '_count' → logprob: -8.41987133026123
    10. '(' → logprob: -8.66987133026123

Token 22: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05052434280514717
    2. ' =' → logprob: -3.4255242347717285
    3. '_' → logprob: -4.6755242347717285
    4. '_s' → logprob: -5.4255242347717285
    5. '=' → logprob: -6.3005242347717285
    6. '_count' → logprob: -7.1755242347717285
    7. ' ' → logprob: -9.175524711608887
    8. ' s' → logprob: -9.550524711608887
    9. '_num' → logprob: -10.050524711608887
    10. '_number' → logprob: -10.300524711608887

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3185971677303314
    2. '0' → logprob: -1.5685971975326538
    3. ' max' → logprob: -3.0685970783233643
    4. ' -' → logprob: -5.068597316741943
    5. ' n' → logprob: -5.193597316741943
    6. 'max' → logprob: -5.943597316741943
    7. ' float' → logprob: -7.068597316741943
    8. ' None' → logprob: -7.568597316741943
    9. '-' → logprob: -7.943597316741943
    10. ' int' → logprob: -8.068596839904785

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7233755588531494
    2. ' ' → logprob: -1.3483755588531494
    3. ' max' → logprob: -1.8483755588531494
    4. ' n' → logprob: -2.9733755588531494
    5. 'max' → logprob: -4.34837532043457
    6. ' -' → logprob: -4.34837532043457
    7. 'n' → logprob: -5.47337532043457
    8. ' float' → logprob: -5.47337532043457
    9. '-' → logprob: -5.72337532043457
    10. ' int' → logprob: -6.22337532043457

Token 25: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3990258574485779
    2. '<|end|>' → logprob: -1.1490259170532227
    3. ' ' → logprob: -5.524025917053223
    4. '    
' → logprob: -6.274025917053223
    5. '<|end|>' → logprob: -6.524025917053223
    6. '    ' → logprob: -6.649025917053223
    7. '  ' → logprob: -7.024025917053223
    8. ' 
' → logprob: -7.024025917053223
    9. '\n' → logprob: -8.024025917053223
    10. '\' → logprob: -8.024025917053223

Token 27: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.36584100127220154
    2. ' current' → logprob: -2.1158409118652344
    3. '   ' → logprob: -3.1158409118652344
    4. ' for' → logprob: -3.8658409118652344
    5. ' patients' → logprob: -3.8658409118652344
    6. ' ' → logprob: -4.115840911865234
    7. ' patient' → logprob: -4.115840911865234
    8. 'max' (adapté à ' max') → logprob: -4.615840911865234
    9. ' best' → logprob: -4.615840911865234
    10. ' count' → logprob: -5.115840911865234

Token 28: '_distance' (ID: 45537)
  Prédit: '_patient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_patient' → logprob: -0.49164879322052
    2. '_' → logprob: -1.36664879322052
    3. '_pat' → logprob: -3.3666486740112305
    4. '_count' → logprob: -3.4916486740112305
    5. '_length' → logprob: -4.7416486740112305
    6. '_day' → logprob: -4.8666486740112305
    7. '_len' → logprob: -4.8666486740112305
    8. ' _' → logprob: -4.9916486740112305
    9. '_index' → logprob: -5.6166486740112305
    10. '_con' → logprob: -5.6166486740112305

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00750298285856843
    2. '=' → logprob: -5.507503032684326
    3. ' ' → logprob: -6.007503032684326
    4. '_' → logprob: -7.132503032684326
    5. ',' → logprob: -10.132502555847168
    6. '_idx' → logprob: -10.257502555847168
    7. '_index' → logprob: -10.382502555847168
    8. 's' → logprob: -11.257502555847168
    9. ' ,' → logprob: -11.382502555847168
    10. ' +=' → logprob: -11.882502555847168

Token 30: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08288110047578812
    2. '0' → logprob: -2.582881212234497
    3. ' -' → logprob: -5.957880973815918
    4. ' float' → logprob: -6.957880973815918
    5. '-' → logprob: -8.832880973815918
    6. 'float' → logprob: -9.582880973815918
    7. ' int' → logprob: -9.957880973815918
    8. '100' → logprob: -10.207880973815918
    9. '  ' → logprob: -10.707880973815918
    10. '1' → logprob: -10.707880973815918

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02080497145652771
    2. '10' → logprob: -4.7708048820495605
    3. '100' → logprob: -4.8958048820495605
    4. 'float' → logprob: -5.7708048820495605
    5. '999' → logprob: -7.1458048820495605
    6. 'int' → logprob: -8.770805358886719
    7. '2' → logprob: -9.020805358886719
    8. '-' → logprob: -9.770805358886719
    9. '500' → logprob: -9.770805358886719
    10. '987' → logprob: -9.895805358886719

Token 32: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5528118014335632
    2. '<|end|>' → logprob: -0.9278118014335632
    3. '<|end|>' → logprob: -5.052811622619629
    4. ' ' → logprob: -5.052811622619629
    5. '    
' → logprob: -5.552811622619629
    6. ')' → logprob: -5.927811622619629
    7. ' 
' → logprob: -6.177811622619629
    8. '    ' → logprob: -6.677811622619629
    9. '
' → logprob: -6.677811622619629
    10. '  ' → logprob: -7.052811622619629

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0061602164059877396
    2. '    
' → logprob: -6.256160259246826
    3. '<|end|>' → logprob: -6.631160259246826
    4. ' for' → logprob: -7.256160259246826
    5. 'for' → logprob: -7.631160259246826
    6. '```' → logprob: -7.756160259246826
    7. ' ' → logprob: -8.256159782409668
    8. '
' → logprob: -8.631159782409668
    9. '  
' → logprob: -8.756159782409668
    10. '    ' → logprob: -9.006159782409668

Token 34: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10437562316656113
    2. 'for' (adapté à ' for') → logprob: -2.7293756008148193
    3. ' for' → logprob: -3.4793756008148193
    4. '```' → logprob: -6.854375839233398
    5. ' ' → logprob: -7.229375839233398
    6. '    
' → logprob: -7.854375839233398
    7. '    ' → logprob: -8.729375839233398
    8. '  ' → logprob: -8.854375839233398
    9. '<|end|>' → logprob: -8.979375839233398
    10. 'n' → logprob: -9.354375839233398

Token 35: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.7009783983230591
    2. ' i' → logprob: -1.325978398323059
    3. ' ' → logprob: -1.450978398323059
    4. '_' → logprob: -6.0759782791137695
    5. ' range' → logprob: -7.2009782791137695
    6. ' patient' → logprob: -7.7009782791137695
    7. ' d' → logprob: -8.45097827911377
    8. 'i' → logprob: -9.32597827911377
    9. ' distance' → logprob: -9.82597827911377
    10. ' day' → logprob: -10.70097827911377

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0002980432182084769
    2. 'in' → logprob: -8.375298500061035
    3. ' ' → logprob: -9.750298500061035
    4. 'range' → logprob: -12.750298500061035
    5. '<|end|>' → logprob: -13.125298500061035
    6. ' range' → logprob: -13.625298500061035
    7. ',' → logprob: -13.625298500061035
    8. '_' → logprob: -14.875298500061035
    9. ' ,' → logprob: -15.500298500061035
    10. 'n' → logprob: -15.500298500061035

Token 37: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16023294627666473
    2. 'range' → logprob: -1.9102329015731812
    3. '	range' → logprob: -12.285232543945312
    4. '(range' → logprob: -13.535232543945312
    5. ' ' → logprob: -13.910232543945312
    6. 'rang' → logprob: -14.535232543945312
    7. '[' → logprob: -14.910232543945312
    8. ' xrange' → logprob: -15.285232543945312
    9. 'r' → logprob: -15.535232543945312
    10. '_range' → logprob: -15.785232543945312

Token 38: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4912533164024353
    2. ' (' → logprob: -1.36625337600708
    3. '(' → logprob: -2.36625337600708
    4. ' n' → logprob: -3.24125337600708
    5. 'n' → logprob: -9.241252899169922
    6. ' ' → logprob: -10.991252899169922
    7. '()' → logprob: -12.741252899169922
    8. '_n' → logprob: -12.866252899169922
    9. ' ,' → logprob: -12.866252899169922
    10. '	n' → logprob: -12.991252899169922

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0034891199320554733
    2. ')' → logprob: -6.628489017486572
    3. ' ):' → logprob: -6.628489017486572
    4. ':' → logprob: -7.503489017486572
    5. '   ' → logprob: -9.12848949432373
    6. '):
' → logprob: -9.50348949432373
    7. '+' → logprob: -10.50348949432373
    8. ',' → logprob: -10.62848949432373
    9. '<|end|>' → logprob: -11.75348949432373
    10. ' )' → logprob: -11.87848949432373

Token 40: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39453834295272827
    2. '    ' → logprob: -1.394538402557373
    3. '       ' → logprob: -3.269538402557373
    4. '   ' → logprob: -4.019538402557373
    5. '<|end|>' → logprob: -4.019538402557373
    6. ' 
' → logprob: -7.769538402557373
    7. '  ' → logprob: -8.019537925720215
    8. '<|end|>' → logprob: -8.144537925720215
    9. ' )' → logprob: -8.269537925720215
    10. ' ,' → logprob: -8.269537925720215

Token 41: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.3225901126861572
    2. ' patient' → logprob: -1.6975901126861572
    3. ' line' → logprob: -2.4475901126861572
    4. ' ' → logprob: -2.8225901126861572
    5. 'p' (adapté à ' p') → logprob: -3.0725901126861572
    6. ' x' → logprob: -3.1975901126861572
    7. 'distance' → logprob: -3.3225901126861572
    8. '    ' → logprob: -3.4475901126861572
    9. ' distance' → logprob: -3.4475901126861572
    10. ' ,' → logprob: -3.5725901126861572

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9301090836524963
    2. 'atient' → logprob: -1.0551090240478516
    3. 'at' → logprob: -1.5551090240478516
    4. ' ,' → logprob: -3.1801090240478516
    5. 'a' → logprob: -6.430109024047852
    6. ' =' → logprob: -6.555109024047852
    7. 't' → logprob: -8.555109024047852
    8. '  ' → logprob: -8.680109024047852
    9. ' ' → logprob: -8.680109024047852
    10. 'r' → logprob: -8.930109024047852

Token 43: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5298606157302856
    2. 'd' → logprob: -0.9048606157302856
    3. ' s' → logprob: -6.654860496520996
    4. 's' → logprob: -7.029860496520996
    5. ' ' → logprob: -7.154860496520996
    6. 'x' → logprob: -7.404860496520996
    7. ' l' → logprob: -7.654860496520996
    8. ' x' → logprob: -7.654860496520996
    9. ' t' → logprob: -8.154860496520996
    10. 'c' → logprob: -8.154860496520996

Token 44: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06229894608259201
    2. '=' → logprob: -2.8122990131378174
    3. ',' → logprob: -8.062298774719238
    4. ' ' → logprob: -11.562298774719238
    5. ' ,' → logprob: -12.437298774719238
    6. ')' → logprob: -14.187298774719238
    7. '   ' → logprob: -14.687298774719238
    8. '    ' → logprob: -15.312298774719238
    9. '=input' → logprob: -15.312298774719238
    10. '  ' → logprob: -15.812298774719238

Token 45: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6809863448143005
    2. '=' → logprob: -0.9309863448143005
    3. ',' → logprob: -2.3059864044189453
    4. ' ,' → logprob: -10.555986404418945
    5. ')' → logprob: -11.305986404418945
    6. ' ' → logprob: -11.805986404418945
    7. '=input' → logprob: -12.055986404418945
    8. ',p' → logprob: -13.805986404418945
    9. '=line' → logprob: -14.680986404418945
    10. ')=' → logprob: -14.805986404418945

Token 46: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2522588074207306
    2. 'd' → logprob: -1.5022587776184082
    3. ' ' → logprob: -8.377259254455566
    4. ',d' → logprob: -10.502259254455566
    5. ',' → logprob: -10.627259254455566
    6. ' ' → logprob: -11.502259254455566
    7. '    ' → logprob: -12.002259254455566
    8. '_d' → logprob: -12.127259254455566
    9. 's' → logprob: -12.377259254455566
    10. '<|end|>' → logprob: -12.377259254455566

Token 47: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.015642596408724785
    2. '1' → logprob: -4.2656426429748535
    3. ',' → logprob: -7.1406426429748535
    4. '_' → logprob: -8.265642166137695
    5. ' ' → logprob: -8.390642166137695
    6. '=' → logprob: -10.015642166137695
    7. ' =' → logprob: -10.390642166137695
    8. '<|end|>' → logprob: -10.515642166137695
    9. ' ,' → logprob: -11.390642166137695
    10. 'a' → logprob: -11.453142166137695

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1798437237739563
    2. '=' → logprob: -1.8048436641693115
    3. ',' → logprob: -9.30484390258789
    4. ' ' → logprob: -12.42984390258789
    5. ')' → logprob: -13.30484390258789
    6. '   ' → logprob: -14.55484390258789
    7. '=input' → logprob: -14.55484390258789
    8. '    ' → logprob: -14.67984390258789
    9. ' ,' → logprob: -15.42984390258789
    10. '  ' → logprob: -15.80484390258789

Token 49: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.01295774057507515
    2. 'map' → logprob: -4.762957572937012
    3. ' input' → logprob: -5.637957572937012
    4. ' list' → logprob: -8.387957572937012
    5. ' [' → logprob: -8.637957572937012
    6. 'input' → logprob: -8.762957572937012
    7. ' ' → logprob: -9.012957572937012
    8. ' ' → logprob: -10.637957572937012
    9. '[' → logprob: -10.762957572937012
    10. '	map' → logprob: -11.012957572937012

Token 50: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.006451150868088007
    2. '(' → logprob: -5.13145112991333
    3. '(lambda' → logprob: -8.881451606750488
    4. 'int' → logprob: -9.256451606750488
    5. '<|end|>' → logprob: -9.381451606750488
    6. '(input' → logprob: -9.506451606750488
    7. '(str' → logprob: -9.506451606750488
    8. '<int' → logprob: -10.381451606750488
    9. '[int' → logprob: -11.631451606750488
    10. '(list' → logprob: -12.756451606750488

Token 51: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.7077995538711548
    2. ',input' → logprob: -0.8327995538711548
    3. ',' → logprob: -2.7077994346618652
    4. '(' → logprob: -6.082799434661865
    5. 'input' → logprob: -6.207799434661865
    6. ')' → logprob: -6.832799434661865
    7. ' input' → logprob: -8.582799911499023
    8. '<|end|>' → logprob: -10.082799911499023
    9. ' ,' → logprob: -10.207799911499023
    10. '=input' → logprob: -10.332799911499023

Token 52: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.31327468156814575
    2. 'input' → logprob: -1.313274621963501
    3. ')' → logprob: -11.688274383544922
    4. '(input' → logprob: -13.688274383544922
    5. ',input' → logprob: -13.938274383544922
    6. '=input' → logprob: -14.063274383544922
    7. ' )' → logprob: -14.313274383544922
    8. '	input' → logprob: -14.813274383544922
    9. ' ' → logprob: -14.938274383544922
    10. '[input' → logprob: -16.438274383544922

Token 53: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.8206473871250637e-05
    2. '()' → logprob: -10.500028610229492
    3. ')' → logprob: -15.375028610229492
    4. '())' → logprob: -15.875028610229492
    5. ' ().' → logprob: -16.000028610229492
    6. '()
' → logprob: -16.625028610229492
    7. '(' → logprob: -17.250028610229492
    8. '()

' → logprob: -19.000028610229492
    9. '.split' → logprob: -19.000028610229492
    10. '());' → logprob: -19.875028610229492

Token 54: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.451116051815916e-05
    2. 'strip' → logprob: -11.000024795532227
    3. 'rstrip' → logprob: -12.000024795532227
    4. ' split' → logprob: -14.125024795532227
    5. '(split' → logprob: -14.375024795532227
    6. 'spl' → logprob: -15.250024795532227
    7. ')' → logprob: -18.125024795532227
    8. ' ' → logprob: -19.000024795532227
    9. 'plit' → logprob: -19.125024795532227
    10. '.split' → logprob: -19.375024795532227

Token 55: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.023914972320199013
    2. '()' → logprob: -4.148914813995361
    3. ')' → logprob: -4.898914813995361
    4. '()))' → logprob: -8.14891529083252
    5. '())
' → logprob: -9.64891529083252
    6. '))' → logprob: -10.89891529083252
    7. '(' → logprob: -11.77391529083252
    8. '(),' → logprob: -12.89891529083252
    9. ' ())' → logprob: -13.14891529083252
    10. '().' → logprob: -13.27391529083252

Token 56: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' total' (ID: 3609)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33109816908836365
    2. ' if' → logprob: -1.956098198890686
    3. '<|end|>' → logprob: -2.9560980796813965
    4. 'if' → logprob: -3.4560980796813965
    5. ' 
' → logprob: -3.8310980796813965
    6. ')' → logprob: -4.5810980796813965
    7. '       ' → logprob: -5.5810980796813965
    8. '    ' → logprob: -5.7060980796813965
    9. ''' → logprob: -5.9560980796813965
    10. '<|end|>' → logprob: -6.2060980796813965

Token 58: ' =' (ID: 314)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.17721083760261536
    2. ' =' → logprob: -2.677210807800293
    3. '=' → logprob: -3.552210807800293
    4. '_' → logprob: -3.802210807800293
    5. '_pat' → logprob: -3.927210807800293
    6. '_d' → logprob: -4.677210807800293
    7. '_patient' → logprob: -4.802210807800293
    8. '_dist' → logprob: -5.677210807800293
    9. '_p' → logprob: -7.302210807800293
    10. 'distance' → logprob: -8.427210807800293

Token 59: ' d' (ID: 272)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.01419841032475233
    2. 'p' → logprob: -4.389198303222656
    3. ' d' → logprob: -6.514198303222656
    4. 'd' → logprob: -9.014198303222656
    5. ' ' → logprob: -10.389198303222656
    6. ' max' → logprob: -10.889198303222656
    7. ' (' → logprob: -11.639198303222656
    8. '(p' → logprob: -11.764198303222656
    9. ' ' → logprob: -12.014198303222656
    10. ' s' → logprob: -13.264198303222656

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002922022540587932
    2. '2' → logprob: -8.87529182434082
    3. 'istance' → logprob: -9.62529182434082
    4. ' ' → logprob: -10.50029182434082
    5. 'ist' → logprob: -10.75029182434082
    6. '_' → logprob: -11.12529182434082
    7. 'f' → logprob: -12.50029182434082
    8. '```' → logprob: -13.25029182434082
    9. 's' → logprob: -13.75029182434082
    10. '' → logprob: -14.00029182434082

Token 61: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4743082821369171
    2. ' +' → logprob: -0.9743082523345947
    3. '+d' → logprob: -8.474308013916016
    4. ' ' → logprob: -11.849308013916016
    5. ' ' → logprob: -12.974308013916016
    6. '+p' → logprob: -13.474308013916016
    7. ' plus' → logprob: -13.724308013916016
    8. '+
' → logprob: -13.724308013916016
    9. '-' → logprob: -13.849308013916016
    10. ' +
' → logprob: -13.911808013916016

Token 62: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.05492708459496498
    2. 'd' → logprob: -2.929927110671997
    3. ' ' → logprob: -10.179926872253418
    4. ' ' → logprob: -13.054926872253418
    5. '    ' → logprob: -13.929926872253418
    6. '	d' → logprob: -14.304926872253418
    7. ' p' → logprob: -15.367426872253418
    8. ',' → logprob: -15.429926872253418
    9. 'p' → logprob: -15.554926872253418
    10. '2' → logprob: -15.554926872253418

Token 63: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.976922744186595e-05
    2. ' ' → logprob: -10.875040054321289
    3. '+' → logprob: -11.625040054321289
    4. '_' → logprob: -12.875040054321289
    5. '₂' → logprob: -13.250040054321289
    6. '   ' → logprob: -13.375040054321289
    7. '<|end|>' → logprob: -13.625040054321289
    8. '```' → logprob: -14.125040054321289
    9. '    ' → logprob: -14.500040054321289
    10. '  ' → logprob: -14.687540054321289

Token 64: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5503203868865967
    2. ' if' → logprob: -1.6753203868865967
    3. '<|end|>' → logprob: -1.6753203868865967
    4. ' 
' → logprob: -3.8003203868865967
    5. ' ' → logprob: -4.425320625305176
    6. 'if' → logprob: -5.050320625305176
    7. '<|end|>' → logprob: -5.800320625305176
    8. '   ' → logprob: -6.425320625305176
    9. '  
' → logprob: -7.675320625305176
    10. '>' → logprob: -7.675320625305176

Token 65: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25536295771598816
    2. '<|end|>' → logprob: -1.8803629875183105
    3. '   ' → logprob: -3.8803629875183105
    4. '       ' → logprob: -4.2553629875183105
    5. ' 
' → logprob: -4.2553629875183105
    6. ' ' → logprob: -5.1303629875183105
    7. '    
' → logprob: -5.3803629875183105
    8. '  
' → logprob: -5.5053629875183105
    9. ' if' → logprob: -6.0053629875183105
    10. '<|end|>' → logprob: -6.1303629875183105

Token 66: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16152454912662506
    2. 'if' (adapté à ' if') → logprob: -2.286524534225464
    3. '
' → logprob: -3.911524534225464
    4. '       ' → logprob: -3.911524534225464
    5. ' 
' → logprob: -5.661524772644043
    6. ' ' → logprob: -6.036524772644043
    7. '<|end|>' → logprob: -7.536524772644043
    8. '        
' → logprob: -7.911524772644043
    9. '```' → logprob: -8.036524772644043
    10. '        ' → logprob: -8.661524772644043

Token 67: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.007175782695412636
    2. 'total' → logprob: -5.132175922393799
    3. ' p' → logprob: -6.882175922393799
    4. '(total' → logprob: -8.75717544555664
    5. ' (' → logprob: -10.88217544555664
    6. ' ' → logprob: -11.50717544555664
    7. 'p' → logprob: -11.63217544555664
    8. ' t' → logprob: -11.75717544555664
    9. ' d' → logprob: -12.38217544555664
    10. '	total' → logprob: -13.13217544555664

Token 68: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2812129855155945
    2. ' >' → logprob: -1.4062130451202393
    3. ' ' → logprob: -9.90621280670166
    4. '>=' → logprob: -13.03121280670166
    5. '<' → logprob: -13.28121280670166
    6. ' >=' → logprob: -13.78121280670166
    7. '<|end|>' → logprob: -14.15621280670166
    8. ' ' → logprob: -14.28121280670166
    9. ' <' → logprob: -14.40621280670166
    10. '>Total' → logprob: -14.53121280670166

Token 69: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.38688674569129944
    2. ' max' → logprob: -1.136886715888977
    3. ' ' → logprob: -11.511886596679688
    4. '=max' → logprob: -13.261886596679688
    5. '	max' → logprob: -13.761886596679688
    6. '   ' → logprob: -13.886886596679688
    7. '(max' → logprob: -14.636886596679688
    8. '0' → logprob: -14.886886596679688
    9. '_max' → logprob: -15.136886596679688
    10. '=' → logprob: -16.011886596679688

Token 70: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.0007183883571997285
    2. '_' → logprob: -7.875718593597412
    3. '_d' → logprob: -8.625718116760254
    4. '_patient' → logprob: -9.000718116760254
    5. '_dist' → logprob: -11.625718116760254
    6. ' _' → logprob: -11.875718116760254
    7. 'distance' → logprob: -12.500718116760254
    8. '_difference' → logprob: -12.750718116760254
    9. '_dis' → logprob: -12.875718116760254
    10. '_max' → logprob: -13.500718116760254

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027882395312190056
    2. ' or' → logprob: -3.7778823375701904
    3. ' :' → logprob: -6.1528825759887695
    4. ' and' → logprob: -6.4028825759887695
    5. '<|end|>' → logprob: -7.6528825759887695
    6. '):' → logprob: -9.27788257598877
    7. 'and' → logprob: -9.40288257598877
    8. 'or' → logprob: -10.27788257598877
    9. '<|end|>' → logprob: -10.27788257598877
    10. ' ' → logprob: -10.52788257598877

Token 72: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18046195805072784
    2. '<|end|>' → logprob: -2.680461883544922
    3. ' or' → logprob: -2.930461883544922
    4. '           ' → logprob: -3.805461883544922
    5. ' and' → logprob: -5.055461883544922
    6. ':
' → logprob: -5.430461883544922
    7. '<|end|>' → logprob: -5.555461883544922
    8. '       ' → logprob: -5.930461883544922
    9. '        ' → logprob: -7.055461883544922
    10. ' :' → logprob: -7.180461883544922

Token 73: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.16757524013519287
    2. ' 
' → logprob: -2.5425753593444824
    3. 'max' (adapté à ' max') → logprob: -3.0425753593444824
    4. '
' → logprob: -5.042575359344482
    5. ' ' → logprob: -5.292575359344482
    6. '               ' → logprob: -5.542575359344482
    7. '<|end|>' → logprob: -5.667575359344482
    8. '            ' → logprob: -5.792575359344482
    9. '           ' → logprob: -6.042575359344482
    10. '                
' → logprob: -6.792575359344482

Token 74: '_distance' (ID: 45537)
  Prédit: '_patient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patient' → logprob: -0.5805812478065491
    2. '_distance' → logprob: -0.8305812478065491
    3. '_' → logprob: -5.455581188201904
    4. '_pat' → logprob: -8.830581665039062
    5. 'distance' → logprob: -9.330581665039062
    6. '_p' → logprob: -10.080581665039062
    7. 'patient' → logprob: -11.955581665039062
    8. 'Patient' → logprob: -12.080581665039062
    9. '_difference' → logprob: -12.455581665039062
    10. ' _' → logprob: -12.455581665039062

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16025520861148834
    2. '=' → logprob: -1.9102551937103271
    3. ',' → logprob: -10.910255432128906
    4. ' ' → logprob: -11.660255432128906
    5. '<|end|>' → logprob: -14.035255432128906
    6. ')' → logprob: -14.410255432128906
    7. '=

' → logprob: -14.910255432128906
    8. '>' → logprob: -15.160255432128906
    9. ' =)' → logprob: -15.410255432128906
    10. ' =
' → logprob: -15.535255432128906

Token 76: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.4287133812904358
    2. ' total' → logprob: -1.053713321685791
    3. 't' → logprob: -12.67871379852295
    4. '	total' → logprob: -12.92871379852295
    5. ' ' → logprob: -13.17871379852295
    6. 'to' → logprob: -13.42871379852295
    7. '$total' → logprob: -14.17871379852295
    8. ' to' → logprob: -14.17871379852295
    9. '(total' → logprob: -14.42871379852295
    10. ' tota' → logprob: -14.92871379852295

Token 77: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14009185135364532
    2. '<|end|>' → logprob: -2.890091896057129
    3. '```' → logprob: -4.015091896057129
    4. ' 
' → logprob: -4.265091896057129
    5. '
' → logprob: -4.390091896057129
    6. ' max' → logprob: -4.890091896057129
    7. ' ' → logprob: -5.015091896057129
    8. 'max' → logprob: -5.765091896057129
    9. '       ' → logprob: -6.015091896057129
    10. '            
' → logprob: -6.265091896057129

Token 79: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.03368880972266197
    2. ' max' → logprob: -3.40868878364563
    3. 'p' → logprob: -10.40868854522705
    4. '           ' → logprob: -12.15868854522705
    5. ' p' → logprob: -12.65868854522705
    6. 'patient' → logprob: -13.15868854522705
    7. '	max' → logprob: -14.28368854522705
    8. 'n' → logprob: -15.03368854522705
    9. '_max' → logprob: -15.03368854522705
    10. '   ' → logprob: -15.40868854522705

Token 80: '_patient' (ID: 148230)
  Prédit: '_patient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patient' → logprob: -6.360996485454962e-05
    2. '_' → logprob: -10.0000638961792
    3. '_p' → logprob: -11.7500638961792
    4. '_pat' → logprob: -11.8750638961792
    5. ' _' → logprob: -13.2500638961792
    6. 'Patient' → logprob: -14.7500638961792
    7. 'patient' → logprob: -14.8750638961792
    8. '\' → logprob: -15.8750638961792
    9. '<|end|>' → logprob: -16.500062942504883
    10. '_pa' → logprob: -16.500062942504883

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009777694940567017
    2. '=' → logprob: -4.634777545928955
    3. ' ' → logprob: -11.384778022766113
    4. 's' → logprob: -11.759778022766113
    5. '=p' → logprob: -13.759778022766113
    6. '<|end|>' → logprob: -14.384778022766113
    7. '_' → logprob: -15.259778022766113
    8. ' s' → logprob: -15.759778022766113
    9. '＝' → logprob: -16.384777069091797
    10. '=s' → logprob: -16.509777069091797

Token 82: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01250989455729723
    2. ' p' → logprob: -4.387509822845459
    3. ' ' → logprob: -16.137510299682617
    4. '	p' → logprob: -17.262510299682617
    5. '_p' → logprob: -17.637510299682617
    6. ' ' → logprob: -18.012510299682617
    7. '<p' → logprob: -18.512510299682617
    8. '0' → logprob: -18.887510299682617
    9. '   ' → logprob: -19.262510299682617
    10. 'n' → logprob: -19.575010299682617

Token 83: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7554832696914673
    2. '<|end|>' → logprob: -1.3804832696914673
    3. '
' → logprob: -1.6304832696914673
    4. '   ' → logprob: -3.0054831504821777
    5. '\n' → logprob: -4.130483150482178
    6. '    
' → logprob: -5.380483150482178
    7. ')' → logprob: -5.880483150482178
    8. ' print' → logprob: -5.880483150482178
    9. '<|end|>' → logprob: -6.630483150482178
    10. 'newline' → logprob: -6.755483150482178

Token 84: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.059183139353990555
    2. '
' → logprob: -3.559183120727539
    3. '   ' → logprob: -3.684183120727539
    4. ' print' → logprob: -6.559183120727539
    5. '<|end|>' → logprob: -7.059183120727539
    6. '    
' → logprob: -7.309183120727539
    7. '```' → logprob: -8.184183120727539
    8. '  
' → logprob: -8.809183120727539
    9. '\n' → logprob: -8.809183120727539
    10. '(print' → logprob: -9.559183120727539

Token 85: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.007742912974208593
    2. '   ' → logprob: -5.632742881774902
    3. '
' → logprob: -6.007742881774902
    4. ' print' → logprob: -6.632742881774902
    5. '    
' → logprob: -8.382742881774902
    6. '  
' → logprob: -9.757742881774902
    7. ' 
' → logprob: -10.757742881774902
    8. '```' → logprob: -11.007742881774902
    9. ' ' → logprob: -11.882742881774902
    10. ')' → logprob: -12.382742881774902

Token 86: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.5763781666755676
    2. '(' → logprob: -0.8263781666755676
    3. '('' → logprob: -8.076377868652344
    4. '(f' → logprob: -9.701377868652344
    5. '("' → logprob: -10.076377868652344
    6. ' (' → logprob: -11.701377868652344
    7. 'max' → logprob: -12.326377868652344
    8. '()' → logprob: -12.326377868652344
    9. '("("' → logprob: -12.826377868652344
    10. '((' → logprob: -14.326377868652344

Token 87: '_patient' (ID: 148230)
  Prédit: '_patient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patient' → logprob: -6.704273118884885e-07
    2. '_p' → logprob: -15.125000953674316
    3. '_pat' → logprob: -15.125000953674316
    4. '_' → logprob: -17.125
    5. ' _' → logprob: -18.125
    6. 'patient' → logprob: -18.125
    7. ')_' → logprob: -19.25
    8. 'Patient' → logprob: -19.625
    9. '\' → logprob: -20.125
    10. '_user' → logprob: -20.25

Token 88: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ')
' → logprob: -13.75000286102295
    3. ' )' → logprob: -13.75000286102295
    4. '))' → logprob: -15.62500286102295
    5. '()' → logprob: -15.62500286102295
    6. '())' → logprob: -16.250001907348633
    7. '')' → logprob: -16.375001907348633
    8. '`)' → logprob: -17.375001907348633
    9. ')`' → logprob: -17.500001907348633
    10. ')}' → logprob: -17.875001907348633

Token 89: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0013141667004674673
    2. ')' → logprob: -7.001314163208008
    3. ' max' → logprob: -8.126314163208008
    4. 'end' → logprob: -9.376314163208008
    5. '(max' → logprob: -11.501314163208008
    6. '1' → logprob: -13.126314163208008
    7. '	max' → logprob: -13.376314163208008
    8. '0' → logprob: -13.876314163208008
    9. ' ' → logprob: -13.876314163208008
    10. ' )' → logprob: -14.126314163208008

Token 90: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -5.1928003813372925e-05
    2. 'distance' → logprob: -10.500051498413086
    3. '_patient' → logprob: -11.000051498413086
    4. '_' → logprob: -12.125051498413086
    5. '_dist' → logprob: -13.875051498413086
    6. '_d' → logprob: -15.375051498413086
    7. '_difference' → logprob: -15.750051498413086
    8. 'Distance' → logprob: -15.875051498413086
    9. 'istance' → logprob: -16.250051498413086
    10. ' _' → logprob: -16.500051498413086

Token 91: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.610702363715973e-06
    2. ')
' → logprob: -12.000009536743164
    3. ' )' → logprob: -12.625009536743164
    4. '))' → logprob: -17.375009536743164
    5. '   ' → logprob: -17.750009536743164
    6. ')`' → logprob: -17.875009536743164
    7. ')

' → logprob: -18.500009536743164
    8. '')' → logprob: -18.625009536743164
    9. ')}' → logprob: -19.125009536743164
    10. ' ' → logprob: -19.250009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 89
Tokens correctement prédits (1ère position, stricte): 48
Tokens correctement prédits (1ère position, avec adaptation): 50
Tokens correctement prédits (top 10): 75
Précision stricte (1ère position): 53.93%
Précision adaptée (1ère position): 56.18%
Précision (top 10): 84.27%
================================================================================
