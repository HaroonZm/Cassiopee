================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Vertex:
    def __init__(self, row, col):
        self.row = row
        self.col = col
        self.stone = 0  # 0 means empty

    def __repr__(self):
        return f"V({self.row},{self.col}):{self.stone}"

class Board:
    def __init__(self, size):
        self.size = size
        self.grid = [[Vertex(r, c) for c in range(r+1)] for r in range(size)]
        self.adjacency_map = {}  # key: (r,c) value: list of adjacent (r,c)

    def set_stone(self, r, c, stone):
        self.grid[r][c].stone = stone

    def get_stone(self, r, c):
        return self.grid[r][c].stone

    def in_bounds(self, r, c):
        return 0 <= r < self.size and 0 <= c <= r

    def build_adjacency(self):
        # In a triangular lattice, each vertex connects to up to 6 others.
        # Adjacency rules:
        # Up-left: (r-1, c-1)
        # Up-right: (r-1, c)
        # Left: (r, c-1)
        # Right: (r, c+1)
        # Down-left: (r+1, c)
        # Down-right: (r+1, c+1)
        for r in range(self.size):
            for c in range(r+1):
                neighbors = []
                for (nr,nc) in [(r-1,c-1),(r-1,c),(r,c-1),(r,c+1),(r+1,c),(r+1,c+1)]:
                    if self.in_bounds(nr,nc):
                        neighbors.append((nr,nc))
                self.adjacency_map[(r,c)] = neighbors

    def neighbors(self, r, c):
        return self.adjacency_map.get((r,c),[])

    def empty_vertices(self):
        for r in range(self.size):
            for c in range(r+1):
                if self.grid[r][c].stone == 0:
                    yield (r,c)

    def copy(self):
        new_board = Board(self.size)
        for r in range(self.size):
            for c in range(r+1):
                new_board.set_stone(r,c,self.get_stone(r,c))
        new_board.build_adjacency()
        return new_board

class GroupFinder:
    def __init__(self, board):
        self.board = board
        self.visited = set()
        self.groups = []

    def find_groups(self):
        self.visited.clear()
        self.groups.clear()
        for r in range(self.board.size):
            for c in range(r+1):
                if self.board.get_stone(r,c) > 0 and (r,c) not in self.visited:
                    group = self._dfs(r,c)
                    self.groups.append(group)
        return self.groups

    def _dfs(self, r, c):
        start_stone = self.board.get_stone(r,c)
        stack = [(r,c)]
        group = []
        self.visited.add((r,c))
        while stack:
            vr, vc = stack.pop()
            group.append((vr,vc))
            for nr,nc in self.board.neighbors(vr,vc):
                if (nr,nc) not in self.visited and self.board.get_stone(nr,nc) == start_stone:
                    self.visited.add((nr,nc))
                    stack.append((nr,nc))
        return group

class RemovalJudge:
    def __init__(self, board):
        self.board = board

    def groups_to_remove(self):
        gf = GroupFinder(self.board)
        groups = gf.find_groups()
        removable = []
        for group in groups:
            # A group is removed if no vertex in the group touches an empty vertex
            if not self._group_has_empty_adjacent(group):
                removable.append(group)
        return removable

    def _group_has_empty_adjacent(self, group):
        for (r,c) in group:
            for (nr,nc) in self.board.neighbors(r,c):
                if self.board.get_stone(nr,nc) == 0:
                    return True
        return False

class GameState:
    def __init__(self, board, current_player):
        self.board = board
        self.current_player = current_player

    def put_stone_and_score(self, r, c):
        # Put current player's stone at (r,c)
        new_board = self.board.copy()
        new_board.set_stone(r,c, self.current_player)
        # Check removable groups
        judge = RemovalJudge(new_board)
        removable = judge.groups_to_remove()
        if not removable:
            return 0
        gain = 0
        loss = 0
        for group in removable:
            for (gr,gc) in group:
                stone = new_board.get_stone(gr,gc)
                if stone == self.current_player:
                    loss += 1
                else:
                    gain += 1
        return gain - loss

class LifeLineSolver:
    def __init__(self):
        self.results = []

    def solve(self):
        import sys
        lines = sys.stdin.read().strip('\n ').split('\n')
        idx = 0
        while True:
            if idx >= len(lines):
                break
            line = lines[idx].strip()
            if line == "":
                idx += 1
                continue
            if line == "0 0":
                break
            N_C = line.split()
            if len(N_C) !=2:
                idx+=1
                continue
            N, C = map(int, N_C)
            idx +=1
            size = N
            current_player = C
            board = Board(size)
            # Read board state
            for r in range(size):
                row_values = []
                while True:
                    if idx >= len(lines):
                        break
                    row_line = lines[idx].strip()
                    if row_line == "":
                        idx+=1
                        continue
                    parts = row_line.split()
                    if len(parts) != r+1:
                        idx+=1
                        continue
                    try:
                        row_values = list(map(int, parts))
                        idx+=1
                        break
                    except:
                        idx+=1
                        continue
                for c in range(r+1):
                    board.set_stone(r,c,row_values[c])
            board.build_adjacency()
            result = self._max_points_turn(board, current_player)
            print(result)

    def _max_points_turn(self, board, current_player):
        gs = GameState(board, current_player)
        max_points = None
        for (r,c) in board.empty_vertices():
            pts = gs.put_stone_and_score(r,c)
            if max_points is None or pts > max_points:
                max_points = pts
        if max_points is None:
            # No empty vertices
            return 0
        return max_points

if __name__ == "__main__":
    solver = LifeLineSolver()
    solver.solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Vertex' (ID: 49245)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33468446135520935
    2. ':' → logprob: -1.3346844911575317
    3. '```' → logprob: -4.709684371948242
    4. '():' → logprob: -4.959684371948242
    5. '   ' → logprob: -6.584684371948242
    6. '<|end|>' → logprob: -7.084684371948242
    7. '()' → logprob: -7.209684371948242
    8. '(
' → logprob: -7.709684371948242
    9. '\' → logprob: -8.334684371948242
    10. '.' → logprob: -8.709684371948242

Token 4: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9283704161643982
    2. ' ' → logprob: -1.053370475769043
    3. '```' → logprob: -2.428370475769043
    4. '(' → logprob: -3.428370475769043
    5. '    ' → logprob: -3.553370475769043
    6. '`' → logprob: -3.678370475769043
    7. ''' → logprob: -4.178370475769043
    8. '    
' → logprob: -4.303370475769043
    9. '\' → logprob: -5.053370475769043
    10. '(space' → logprob: -5.178370475769043

Token 5: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006190668325871229
    2. ' __' → logprob: -5.881190776824951
    3. '    ' → logprob: -7.256190776824951
    4. '__' → logprob: -7.256190776824951
    5. ' def' → logprob: -7.256190776824951
    6. ' ' → logprob: -8.631190299987793
    7. '_' → logprob: -8.881190299987793
    8. '  ' → logprob: -9.256190299987793
    9. ' init' → logprob: -9.381190299987793
    10. ' space' → logprob: -9.631190299987793

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -9.729906196298543e-06
    2. ' init' → logprob: -11.750009536743164
    3. '_init' → logprob: -13.250009536743164
    4. '	init' → logprob: -17.125009536743164
    5. 'ini' → logprob: -17.750009536743164
    6. '_' → logprob: -18.875009536743164
    7. 'inite' → logprob: -20.375009536743164
    8. '   ' → logprob: -20.750009536743164
    9. '(init' → logprob: -20.750009536743164
    10. '__' → logprob: -21.125009536743164

Token 7: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.3873709440231323
    2. '__' → logprob: -1.1373709440231323
    3. '__(
' → logprob: -8.262371063232422
    4. '_' → logprob: -9.012371063232422
    5. '__((' → logprob: -9.887371063232422
    6. '(' → logprob: -10.387371063232422
    7. '__('' → logprob: -11.012371063232422
    8. '___' → logprob: -11.637371063232422
    9. '__(*' → logprob: -12.512371063232422
    10. '__.__' → logprob: -13.262371063232422

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000867156486492604
    2. ' self' → logprob: -7.1258673667907715
    3. ')' → logprob: -10.375866889953613
    4. '(self' → logprob: -10.875866889953613
    5. ' ' → logprob: -12.250866889953613
    6. ' )' → logprob: -13.000866889953613
    7. ''s' → logprob: -13.375866889953613
    8. 's' → logprob: -13.750866889953613
    9. 'sel' → logprob: -14.375866889953613
    10. '	self' → logprob: -15.000866889953613

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3985917568206787
    2. ')' → logprob: -1.2735917568206787
    3. '.' → logprob: -4.523591995239258
    4. '(' → logprob: -4.648591995239258
    5. 'self' → logprob: -4.898591995239258
    6. '<|end|>' → logprob: -5.148591995239258
    7. ' ,' → logprob: -5.273591995239258
    8. '_' → logprob: -5.773591995239258
    9. ' )' → logprob: -5.898591995239258
    10. ' ' → logprob: -7.273591995239258

Token 10: ' row' (ID: 5225)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004474269691854715
    2. ' self' → logprob: -5.62947416305542
    3. 'name' → logprob: -7.12947416305542
    4. 'coordinates' → logprob: -11.004474639892578
    5. 'position' → logprob: -11.129474639892578
    6. ')' → logprob: -11.254474639892578
    7. ' name' → logprob: -12.129474639892578
    8. 'x' → logprob: -12.629474639892578
    9. 'parent' → logprob: -12.754474639892578
    10. 'data' → logprob: -12.754474639892578

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08773361146450043
    2. ')' → logprob: -2.587733507156372
    3. '):' → logprob: -4.962733745574951
    4. '_' → logprob: -6.712733745574951
    5. ' ,' → logprob: -8.337733268737793
    6. '_,' → logprob: -9.712733268737793
    7. 's' → logprob: -9.962733268737793
    8. ':' → logprob: -10.212733268737793
    9. '=' → logprob: -10.462733268737793
    10. '[' → logprob: -10.587733268737793

Token 12: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.4006885290145874
    2. ' ' → logprob: -1.9006885290145874
    3. 'column' → logprob: -2.650688648223877
    4. 'col' → logprob: -2.900688648223877
    5. ' column' → logprob: -3.025688648223877
    6. ' ,' → logprob: -6.275688648223877
    7. ' )' → logprob: -6.400688648223877
    8. ')' → logprob: -6.900688648223877
    9. 'space' → logprob: -7.650688648223877
    10. ',column' → logprob: -7.650688648223877

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0068480996415019035
    2. ')' → logprob: -5.006848335266113
    3. ',' → logprob: -9.506848335266113
    4. ':' → logprob: -10.256848335266113
    5. '):
' → logprob: -11.256848335266113
    6. '   ' → logprob: -12.506848335266113
    7. ' ):' → logprob: -13.381848335266113
    8. ''):' → logprob: -13.756848335266113
    9. '       ' → logprob: -14.256848335266113
    10. '),' → logprob: -14.381848335266113

Token 14: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21566703915596008
    2. '    ' → logprob: -2.3406670093536377
    3. ' ' → logprob: -2.9656670093536377
    4. '   ' → logprob: -4.340667247772217
    5. '        ' → logprob: -4.840667247772217
    6. '(' → logprob: -4.840667247772217
    7. '\' → logprob: -5.840667247772217
    8. '     ' → logprob: -6.090667247772217
    9. '`' → logprob: -6.215667247772217
    10. ''' → logprob: -6.590667247772217

Token 15: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.21282748878002167
    2. ' ' → logprob: -2.837827444076538
    3. '       ' → logprob: -2.962827444076538
    4. '        ' → logprob: -3.087827444076538
    5. ' self' → logprob: -3.837827444076538
    6. 's' → logprob: -5.337827682495117
    7. '_' → logprob: -6.212827682495117
    8. '         ' → logprob: -6.712827682495117
    9. ' ' → logprob: -6.962827682495117
    10. '    ' → logprob: -6.962827682495117

Token 16: '.row' (ID: 24627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0029706917703151703
    2. ' .' → logprob: -5.8779706954956055
    3. ' ' → logprob: -9.627970695495605
    4. '.row' → logprob: -11.002970695495605
    5. '.value' → logprob: -11.127970695495605
    6. '   ' → logprob: -11.502970695495605
    7. ').' → logprob: -11.877970695495605
    8. ')' → logprob: -12.002970695495605
    9. ' is' → logprob: -12.752970695495605
    10. '[' → logprob: -13.002970695495605

Token 17: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34732621908187866
    2. '_' → logprob: -1.9723262786865234
    3. '.' → logprob: -2.3473262786865234
    4. ' =' → logprob: -3.8473262786865234
    5. ' ' → logprob: -4.097326278686523
    6. ')' → logprob: -4.597326278686523
    7. ',' → logprob: -4.847326278686523
    8. '<|end|>' → logprob: -6.472326278686523
    9. ' )' → logprob: -8.222326278686523
    10. ' ,' → logprob: -8.597326278686523

Token 18: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.07918345183134079
    2. 'row' → logprob: -2.579183340072632
    3. ' ' → logprob: -8.204183578491211
    4. '(row' → logprob: -11.704183578491211
    5. '	row' → logprob: -12.454183578491211
    6. ' col' → logprob: -12.954183578491211
    7. '=row' → logprob: -13.079183578491211
    8. 'r' → logprob: -14.079183578491211
    9. '[row' → logprob: -14.454183578491211
    10. '_row' → logprob: -14.829183578491211

Token 19: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 20: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5942056775093079
    2. '.' → logprob: -1.469205617904663
    3. '<|end|>' → logprob: -2.969205617904663
    4. '\' → logprob: -3.219205617904663
    5. ',' → logprob: -4.094205856323242
    6. '   ' → logprob: -4.219205856323242
    7. ')' → logprob: -4.469205856323242
    8. ' ' → logprob: -4.469205856323242
    9. '```' → logprob: -4.594205856323242
    10. 'newline' → logprob: -4.594205856323242

Token 21: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07663403451442719
    2. ' ' → logprob: -3.701633930206299
    3. '.' → logprob: -4.576633930206299
    4. 'newline' → logprob: -5.076633930206299
    5. '<|end|>' → logprob: -5.326633930206299
    6. '        ' → logprob: -5.326633930206299
    7. 'self' (adapté à ' self') → logprob: -5.451633930206299
    8. ',' → logprob: -5.701633930206299
    9. '\' → logprob: -5.701633930206299
    10. '   ' → logprob: -5.701633930206299

Token 22: '.col' (ID: 7320)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.868328920158092e-05
    2. '.col' → logprob: -11.000028610229492
    3. ' .' → logprob: -12.375028610229492
    4. '<|end|>' → logprob: -13.250028610229492
    5. ',' → logprob: -14.000028610229492
    6. ' ' → logprob: -14.250028610229492
    7. '<|end|>' → logprob: -14.500028610229492
    8. '   ' → logprob: -15.000028610229492
    9. '.c' → logprob: -15.250028610229492
    10. ')' → logprob: -15.250028610229492

Token 23: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31596705317497253
    2. ' =' → logprob: -1.815967082977295
    3. '<|end|>' → logprob: -2.815967082977295
    4. ' ' → logprob: -3.690967082977295
    5. ')' → logprob: -4.565967082977295
    6. '.' → logprob: -4.565967082977295
    7. '_' → logprob: -7.315967082977295
    8. '<|end|>' → logprob: -8.065966606140137
    9. '        ' → logprob: -8.315966606140137
    10. ',' → logprob: -8.315966606140137

Token 24: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.061970822513103485
    2. 'col' → logprob: -2.8119707107543945
    3. ' ' → logprob: -13.936970710754395
    4. '	col' → logprob: -13.936970710754395
    5. '(col' → logprob: -15.186970710754395
    6. '[col' → logprob: -15.311970710754395
    7. ''' → logprob: -15.311970710754395
    8. ' coli' → logprob: -15.436970710754395
    9. '.col' → logprob: -15.936970710754395
    10. ',col' → logprob: -16.31197166442871

Token 25: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8115840554237366
    2. '<|end|>' → logprob: -1.0615839958190918
    3. '\' → logprob: -2.561583995819092
    4. '\n' → logprob: -3.561583995819092
    5. '
' → logprob: -3.686583995819092
    6. ':' → logprob: -3.811583995819092
    7. '   ' → logprob: -4.186583995819092
    8. ',' → logprob: -4.811583995819092
    9. ' ' → logprob: -4.811583995819092
    10. ')' → logprob: -5.311583995819092

Token 26: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.6195600032806396
    2. '<|end|>' → logprob: -1.8695600032806396
    3. '\n' → logprob: -2.1195600032806396
    4. '.' → logprob: -2.2445600032806396
    5. '   ' → logprob: -2.2445600032806396
    6. '\' → logprob: -2.2445600032806396
    7. ',' → logprob: -2.8695600032806396
    8. '       ' → logprob: -3.4945600032806396
    9. ' ' → logprob: -3.9945600032806396
    10. '```' → logprob: -4.244560241699219

Token 28: '.st' (ID: 1980)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.055638499557971954
    2. '._' → logprob: -3.555638551712036
    3. '.parent' → logprob: -4.305638313293457
    4. '.is' → logprob: -5.805638313293457
    5. ' .' → logprob: -6.305638313293457
    6. '_neighbors' → logprob: -6.305638313293457
    7. '.value' → logprob: -6.430638313293457
    8. '.name' → logprob: -8.305638313293457
    9. '.connected' → logprob: -8.305638313293457
    10. 'neighbors' → logprob: -8.305638313293457

Token 29: 'one' (ID: 690)
  Prédit: 'atus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atus' → logprob: -0.20316371321678162
    2. 'ate' → logprob: -1.703163743019104
    3. 'ates' → logprob: -7.0781636238098145
    4. 'art' → logprob: -8.203164100646973
    5. 'r' → logprob: -8.578164100646973
    6. 'at' → logprob: -8.703164100646973
    7. 'a' → logprob: -9.328164100646973
    8. 'ack' → logprob: -10.578164100646973
    9. 'ring' → logprob: -10.828164100646973
    10. 'ATUS' → logprob: -10.953164100646973

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47700995206832886
    2. '=' → logprob: -0.9770099520683289
    3. '_' → logprob: -6.2270097732543945
    4. ' ' → logprob: -7.1020097732543945
    5. '<|end|>' → logprob: -10.352009773254395
    6. ',' → logprob: -10.727009773254395
    7. '.' → logprob: -11.102009773254395
    8. 's' → logprob: -11.227009773254395
    9. '=None' → logprob: -11.352009773254395
    10. ')' → logprob: -11.352009773254395

Token 31: ' ' (ID: 220)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.04879821836948395
    2. 'None' → logprob: -3.0487983226776123
    3. ' ' → logprob: -8.798798561096191
    4. '0' → logprob: -10.548798561096191
    5. ''' → logprob: -10.798798561096191
    6. ' '' → logprob: -12.173798561096191
    7. '"' → logprob: -12.548798561096191
    8. '_None' → logprob: -13.423798561096191
    9. ' False' → logprob: -13.923798561096191
    10. '(None' → logprob: -14.798798561096191

Token 32: '0' (ID: 15)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.17971572279930115
    2. ' None' → logprob: -1.9297157526016235
    3. ''' → logprob: -4.804715633392334
    4. '0' → logprob: -5.304715633392334
    5. ' ' → logprob: -6.054715633392334
    6. ''.' → logprob: -6.679715633392334
    7. '"' → logprob: -6.929715633392334
    8. ''N' → logprob: -7.804715633392334
    9. '.' → logprob: -8.179716110229492
    10. ' '' → logprob: -8.679716110229492

Token 33: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32796406745910645
    2. '<|end|>' → logprob: -1.5779640674591064
    3. '\n' → logprob: -3.8279640674591064
    4. '   ' → logprob: -4.702963829040527
    5. '\' → logprob: -4.952963829040527
    6. '```' → logprob: -5.077963829040527
    7. ' ' → logprob: -5.202963829040527
    8. ' 
' → logprob: -5.327963829040527
    9. '' → logprob: -5.452963829040527
    10. 'newline' → logprob: -5.452963829040527

Token 34: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5826994776725769
    2. '<|end|>' → logprob: -1.3326995372772217
    3. '\n' → logprob: -2.4576995372772217
    4. 'newline' → logprob: -3.7076995372772217
    5. ' 
' → logprob: -4.332699298858643
    6. ' ' → logprob: -4.332699298858643
    7. '\' → logprob: -4.332699298858643
    8. '    
' → logprob: -5.332699298858643
    9. '   ' → logprob: -5.457699298858643
    10. '```' → logprob: -5.457699298858643

Token 35: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.030797647312283516
    2. ' None' → logprob: -4.155797481536865
    3. '0' → logprob: -5.530797481536865
    4. 'None' → logprob: -6.030797481536865
    5. '  ' → logprob: -6.155797481536865
    6. ' empty' → logprob: -6.280797481536865
    7. ' #' → logprob: -6.530797481536865
    8. ' "' → logprob: -7.780797481536865
    9. 'empty' → logprob: -8.030797958374023
    10. 'Empty' → logprob: -8.155797958374023

Token 36: '0' (ID: 15)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.2863508462905884
    2. ' empty' → logprob: -1.6613508462905884
    3. ' ' → logprob: -4.036350727081299
    4. 'empt' → logprob: -4.911350727081299
    5. ' no' → logprob: -5.286350727081299
    6. 'em' → logprob: -5.411350727081299
    7. 'no' → logprob: -5.536350727081299
    8. '0' → logprob: -5.661350727081299
    9. 'emp' → logprob: -5.786350727081299
    10. 'e' → logprob: -6.036350727081299

Token 37: ' means' (ID: 4748)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: ' empty' (ID: 8213)
  Prédit: ' empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' empty' → logprob: -0.16796040534973145
    2. 'empty' → logprob: -2.2929604053497314
    3. ' no' → logprob: -3.0429604053497314
    4. 'no' → logprob: -5.667960166931152
    5. ' an' → logprob: -6.167960166931152
    6. ' none' → logprob: -9.542960166931152
    7. ' ' → logprob: -9.542960166931152
    8. 'an' → logprob: -10.542960166931152
    9. '空' → logprob: -10.667960166931152
    10. '_empty' → logprob: -10.792960166931152

Token 39: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8024734854698181
    2. '
' → logprob: -1.302473545074463
    3. '<|end|>' → logprob: -2.427473545074463
    4. ' ' → logprob: -2.802473545074463
    5. '    
' → logprob: -3.302473545074463
    6. '.' → logprob: -4.052473545074463
    7. '\n' → logprob: -4.302473545074463
    8. ' 
' → logprob: -4.677473545074463
    9. '\' → logprob: -4.677473545074463
    10. '```' → logprob: -4.927473545074463

Token 41: ' def' (ID: 1056)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.803220272064209
    2. '
' → logprob: -1.428220272064209
    3. 'def' (adapté à ' def') → logprob: -1.803220272064209
    4. '   ' → logprob: -2.928220272064209
    5. ' 
' → logprob: -3.928220272064209
    6. '    
' → logprob: -4.053220272064209
    7. ' ' → logprob: -4.053220272064209
    8. '```' → logprob: -4.553220272064209
    9. 'n' → logprob: -4.803220272064209
    10. '\' → logprob: -5.678220272064209

Token 42: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04862835630774498
    2. '_' → logprob: -3.923628330230713
    3. ' space' → logprob: -3.923628330230713
    4. '_space' → logprob: -5.923628330230713
    5. 'space' → logprob: -6.423628330230713
    6. ' is' → logprob: -7.173628330230713
    7. ' __' → logprob: -7.298628330230713
    8. ' a' → logprob: -7.548628330230713
    9. ' ' → logprob: -7.798628330230713
    10. 's' → logprob: -8.048628807067871

Token 43: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.3873441517353058
    2. 'e' → logprob: -1.1373441219329834
    3. 'i' → logprob: -8.512344360351562
    4. '_' → logprob: -9.262344360351562
    5. 'repr' → logprob: -9.387344360351562
    6. 'str' → logprob: -10.387344360351562
    7. 's' → logprob: -10.637344360351562
    8. 'r' → logprob: -11.262344360351562
    9. '_eq' → logprob: -12.387344360351562
    10. 'init' → logprob: -12.512344360351562

Token 44: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10792886465787888
    2. '__(' → logprob: -2.35792875289917
    3. '_' → logprob: -5.35792875289917
    4. '__(
' → logprob: -6.35792875289917
    5. '__('' → logprob: -7.48292875289917
    6. '(' → logprob: -7.48292875289917
    7. '__((' → logprob: -10.107929229736328
    8. '___' → logprob: -10.232929229736328
    9. '__("' → logprob: -11.232929229736328
    10. '__.__' → logprob: -11.357929229736328

Token 45: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.2007883671903983e-05
    2. ')' → logprob: -10.750021934509277
    3. '(self' → logprob: -15.750021934509277
    4. ' self' → logprob: -16.125022888183594
    5. 'sel' → logprob: -16.500022888183594
    6. '   ' → logprob: -17.375022888183594
    7. '
' → logprob: -17.625022888183594
    8. 'Self' → logprob: -17.875022888183594
    9. '_self' → logprob: -18.000022888183594
    10. 'zelf' → logprob: -18.250022888183594

Token 46: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.295551061630249
    2. '):' → logprob: -1.420551061630249
    3. ',' → logprob: -4.295551300048828
    4. 'self' → logprob: -8.045551300048828
    5. '):
' → logprob: -9.670551300048828
    6. ' ):' → logprob: -10.295551300048828
    7. 's' → logprob: -10.420551300048828
    8. ' )' → logprob: -10.545551300048828
    9. '),' → logprob: -10.670551300048828
    10. '(' → logprob: -10.670551300048828

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020189285278320312
    2. ''' → logprob: -6.877018928527832
    3. '   ' → logprob: -7.877018928527832
    4. '"' → logprob: -8.752018928527832
    5. ' return' → logprob: -8.877018928527832
    6. '    ' → logprob: -9.377018928527832
    7. 'return' → logprob: -9.502018928527832
    8. '(' → logprob: -10.502018928527832
    9. '`' → logprob: -11.002018928527832
    10. ')' → logprob: -11.377018928527832

Token 48: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06666728109121323
    2. '       ' → logprob: -3.066667318344116
    3. ' return' → logprob: -4.441667079925537
    4. 'f' → logprob: -5.316667079925537
    5. '   ' → logprob: -7.816667079925537
    6. 'r' → logprob: -7.816667079925537
    7. 're' → logprob: -8.816667556762695
    8. ' f' → logprob: -9.066667556762695
    9. '    ' → logprob: -9.316667556762695
    10. '     ' → logprob: -11.566667556762695

Token 49: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.05454166606068611
    2. ''' → logprob: -3.80454158782959
    3. '"' → logprob: -4.05454158782959
    4. ' ' → logprob: -4.80454158782959
    5. 'f' → logprob: -5.42954158782959
    6. ' '' → logprob: -7.92954158782959
    7. ' "' → logprob: -8.05454158782959
    8. ''f' → logprob: -9.80454158782959
    9. ' ' → logprob: -9.80454158782959
    10. '(' → logprob: -10.80454158782959

Token 50: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.026301691308617592
    2. ''' → logprob: -3.776301622390747
    3. '(Vertex' → logprob: -6.151301860809326
    4. '(' → logprob: -7.901301860809326
    5. ''s' → logprob: -9.151301383972168
    6. 'f' → logprob: -9.276301383972168
    7. 'Vertex' → logprob: -10.026301383972168
    8. '"<' → logprob: -10.026301383972168
    9. '<Vertex' → logprob: -10.026301383972168
    10. '`' → logprob: -10.401301383972168

Token 51: 'V' (ID: 53)
  Prédit: 'Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vertex' → logprob: -0.0031501466874033213
    2. '(Vertex' → logprob: -6.62814998626709
    3. '<Vertex' → logprob: -6.87814998626709
    4. 'Ver' → logprob: -8.12814998626709
    5. 'Vert' → logprob: -8.25314998626709
    6. 'V' → logprob: -8.87814998626709
    7. 'Ve' → logprob: -9.62814998626709
    8. '<' → logprob: -11.50314998626709
    9. 'Vertices' → logprob: -12.37814998626709
    10. '(' → logprob: -12.75314998626709

Token 52: '({' (ID: 3972)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.711371898651123
    2. '({' → logprob: -0.711371898651123
    3. '(' → logprob: -4.461371898651123
    4. 'ert' → logprob: -6.086371898651123
    5. '{' → logprob: -6.336371898651123
    6. 'e' → logprob: -6.336371898651123
    7. 'erte' → logprob: -8.461372375488281
    8. '(e' → logprob: -9.211372375488281
    9. '('' → logprob: -9.211372375488281
    10. '('{' → logprob: -9.836372375488281

Token 53: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007695825770497322
    2. '{' → logprob: -4.88269567489624
    3. 'elf' → logprob: -9.382696151733398
    4. ' self' → logprob: -12.632696151733398
    5. 'f' → logprob: -14.007696151733398
    6. '
' → logprob: -14.757696151733398
    7. 'sel' → logprob: -15.632696151733398
    8. '0' → logprob: -16.3826961517334
    9. '"{' → logprob: -16.5076961517334
    10. ' {' → logprob: -17.0076961517334

Token 54: '.row' (ID: 24627)
  Prédit: '.row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.row' → logprob: -0.007840251550078392
    2. '.' → logprob: -4.882840156555176
    3. '.col' → logprob: -8.757840156555176
    4. 'self' → logprob: -10.507840156555176
    5. ' .' → logprob: -10.882840156555176
    6. '.self' → logprob: -11.132840156555176
    7. '.s' → logprob: -12.257840156555176
    8. '.
' → logprob: -13.132840156555176
    9. '.Row' → logprob: -13.507840156555176
    10. '.ro' → logprob: -13.757840156555176

Token 55: '},{' (ID: 34684)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.637786231702194e-05
    2. ' ,' → logprob: -10.250086784362793
    3. '},{' → logprob: -11.000086784362793
    4. ',
' → logprob: -11.375086784362793
    5. ',{' → logprob: -12.125086784362793
    6. '},' → logprob: -12.125086784362793
    7. ',

' → logprob: -12.750086784362793
    8. ',",' → logprob: -12.750086784362793
    9. ')' → logprob: -14.250086784362793
    10. '<|end|>' → logprob: -14.375086784362793

Token 56: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004097993019968271
    2. ' self' → logprob: -5.504097938537598
    3. '{' → logprob: -11.004097938537598
    4. ' ' → logprob: -14.379097938537598
    5. '	self' → logprob: -14.754097938537598
    6. ' {' → logprob: -14.879097938537598
    7. ' ' → logprob: -14.879097938537598
    8. '$self' → logprob: -15.254097938537598
    9. '_self' → logprob: -15.879097938537598
    10. ',self' → logprob: -15.879097938537598

Token 57: '.col' (ID: 7320)
  Prédit: '.col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.col' → logprob: -5.049755782238208e-05
    2. '.' → logprob: -10.25005054473877
    3. 'col' → logprob: -12.00005054473877
    4. '.row' → logprob: -12.25005054473877
    5. ',col' → logprob: -13.62505054473877
    6. '})' → logprob: -13.87505054473877
    7. ' .' → logprob: -15.12505054473877
    8. '	col' → logprob: -15.25005054473877
    9. '}.' → logprob: -15.50005054473877
    10. '}' → logprob: -15.62505054473877

Token 58: '}' (ID: 92)
  Prédit: '})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.005949064157903194
    2. ')"' → logprob: -5.255949020385742
    3. ')}' → logprob: -8.255949020385742
    4. ')' → logprob: -8.380949020385742
    5. '}"' → logprob: -8.630949020385742
    6. '}")' → logprob: -10.630949020385742
    7. ' })' → logprob: -11.380949020385742
    8. '}' → logprob: -11.880949020385742
    9. '"})' → logprob: -13.380949020385742
    10. ')")' → logprob: -13.630949020385742

Token 59: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31368952989578247
    2. ')"' → logprob: -1.3136894702911377
    3. ')`' → logprob: -8.688689231872559
    4. ')")' → logprob: -8.813689231872559
    5. '")' → logprob: -9.813689231872559
    6. ')">' → logprob: -10.438689231872559
    7. ' )' → logprob: -11.813689231872559
    8. ')}' → logprob: -11.813689231872559
    9. ')”' → logprob: -12.188689231872559
    10. '"' → logprob: -12.938689231872559

Token 60: '{' (ID: 90)
  Prédit: '{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.22633430361747742
    2. ' {' → logprob: -1.6013343334197998
    3. ' )' → logprob: -7.601334095001221
    4. ')' → logprob: -8.726334571838379
    5. '{s' → logprob: -9.351334571838379
    6. ' ' → logprob: -9.851334571838379
    7. 'self' → logprob: -10.101334571838379
    8. ' self' → logprob: -11.101334571838379
    9. ' ){' → logprob: -11.601334571838379
    10. '{'' → logprob: -11.601334571838379

Token 61: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00594372907653451
    2. ' self' → logprob: -5.130943775177002
    3. '{' → logprob: -12.380943298339844
    4. ' ' → logprob: -12.505943298339844
    5. '0' → logprob: -12.880943298339844
    6. ' )' → logprob: -13.630943298339844
    7. ' {' → logprob: -14.380943298339844
    8. 's' → logprob: -14.755943298339844
    9. ')' → logprob: -15.005943298339844
    10. 'sel' → logprob: -15.380943298339844

Token 62: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.0015068859793245792
    2. '.' → logprob: -6.501506805419922
    3. ' .' → logprob: -12.876506805419922
    4. '.s' → logprob: -13.376506805419922
    5. '}.' → logprob: -15.876506805419922
    6. ').' → logprob: -16.376506805419922
    7. '.street' → logprob: -16.751506805419922
    8. '.star' → logprob: -17.251506805419922
    9. '.St' → logprob: -17.751506805419922
    10. '.space' → logprob: -17.876506805419922

Token 63: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -4.310693111619912e-05
    2. 'o' → logprob: -10.625042915344238
    3. 'on' → logprob: -11.000042915344238
    4. 'One' → logprob: -14.500042915344238
    5. '```' → logprob: -14.500042915344238
    6. 'оне' → logprob: -15.125042915344238
    7. '_one' → logprob: -15.375042915344238
    8. 'ones' → logprob: -16.125043869018555
    9. '1' → logprob: -16.625043869018555
    10. ' one' → logprob: -17.000043869018555

Token 64: '}"

' (ID: 103433)
  Prédit: '}"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}"' → logprob: -0.019060179591178894
    2. ')"' → logprob: -4.144060134887695
    3. '}' → logprob: -6.269060134887695
    4. '}")' → logprob: -7.394060134887695
    5. '"' → logprob: -8.144060134887695
    6. ' }' → logprob: -9.269060134887695
    7. '"}' → logprob: -9.644060134887695
    8. ')' → logprob: -10.269060134887695
    9. '})' → logprob: -11.519060134887695
    10. ')}' → logprob: -11.894060134887695

Token 65: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11662434041500092
    2. '<|end|>' → logprob: -3.366624355316162
    3. '.' → logprob: -4.116624355316162
    4. ' ' → logprob: -4.241624355316162
    5. ' 
' → logprob: -4.241624355316162
    6. '\n' → logprob: -4.866624355316162
    7. 'n' → logprob: -5.741624355316162
    8. '   ' → logprob: -5.741624355316162
    9. '

' → logprob: -5.866624355316162
    10. '\' → logprob: -5.991624355316162

Token 66: ' Board' (ID: 10837)
  Prédit: ' Board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Board' → logprob: -0.04814837872982025
    2. ' Go' → logprob: -4.423148155212402
    3. ' Graph' → logprob: -4.673148155212402
    4. ' ' → logprob: -5.048148155212402
    5. ' Stone' → logprob: -5.298148155212402
    6. 'Board' → logprob: -5.548148155212402
    7. ' Vertex' → logprob: -5.798148155212402
    8. ' Space' → logprob: -5.923148155212402
    9. ' Game' → logprob: -6.798148155212402
    10. ' ' → logprob: -7.298148155212402

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009885076433420181
    2. '(' → logprob: -7.375988483428955
    3. '<|end|>' → logprob: -8.750988960266113
    4. '():' → logprob: -9.000988960266113
    5. '):' → logprob: -10.500988960266113
    6. ' :' → logprob: -11.125988960266113
    7. ':
' → logprob: -11.375988960266113
    8. '(QWidget' → logprob: -12.125988960266113
    9. '(object' → logprob: -12.500988960266113
    10. '```' → logprob: -13.000988960266113

Token 68: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1523610353469849
    2. '   ' → logprob: -1.2773610353469849
    3. '    ' → logprob: -1.7773610353469849
    4. '    
' → logprob: -2.5273609161376953
    5. ' 
' → logprob: -2.6523609161376953
    6. '     
' → logprob: -3.7773609161376953
    7. ' def' → logprob: -4.027360916137695
    8. '(' → logprob: -4.277360916137695
    9. '_' → logprob: -4.652360916137695
    10. 'def' → logprob: -5.402360916137695

Token 69: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.007815882563591003
    2. 'def' (adapté à ' def') → logprob: -5.007815837860107
    3. '   ' → logprob: -7.382815837860107
    4. ' de' → logprob: -8.382816314697266
    5. '    ' → logprob: -8.757816314697266
    6. 'de' → logprob: -10.132816314697266
    7. ' ' → logprob: -10.882816314697266
    8. '	def' → logprob: -11.757816314697266
    9. ' 
' → logprob: -12.007816314697266
    10. '  ' → logprob: -12.507816314697266

Token 70: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.008634542115032673
    2. ' ' → logprob: -5.133634567260742
    3. ' _' → logprob: -6.758634567260742
    4. ' init' → logprob: -6.758634567260742
    5. ' ' → logprob: -8.508634567260742
    6. '_' → logprob: -9.883634567260742
    7. '__' → logprob: -10.258634567260742
    8. ' ___' → logprob: -10.508634567260742
    9. ' ```' → logprob: -11.008634567260742
    10. ' n' → logprob: -11.258634567260742

Token 71: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.011098162271082401
    2. '_init' → logprob: -5.386098384857178
    3. '__' → logprob: -5.636098384857178
    4. 'def' → logprob: -6.136098384857178
    5. 'it' → logprob: -7.386098384857178
    6. '   ' → logprob: -10.76109790802002
    7. '_' → logprob: -11.38609790802002
    8. '```' → logprob: -11.38609790802002
    9. ' __' → logprob: -11.51109790802002
    10. 'int' → logprob: -11.63609790802002

Token 72: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.02414749562740326
    2. '__' → logprob: -4.5241475105285645
    3. '(self' → logprob: -5.1491475105285645
    4. '(' → logprob: -5.5241475105285645
    5. '__(
' → logprob: -7.0241475105285645
    6. '_(' → logprob: -7.2741475105285645
    7. '_' → logprob: -7.3991475105285645
    8. '__((' → logprob: -8.149147033691406
    9. ' (' → logprob: -8.274147033691406
    10. '<|end|>' → logprob: -8.274147033691406

Token 73: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009176511666737497
    2. ' self' → logprob: -7.000917434692383
    3. ')' → logprob: -12.500917434692383
    4. '   ' → logprob: -13.625917434692383
    5. ' ' → logprob: -15.000917434692383
    6. 'size' → logprob: -15.125917434692383
    7. '0' → logprob: -16.000917434692383
    8. ',' → logprob: -16.125917434692383
    9. '	self' → logprob: -16.375917434692383
    10. '
' → logprob: -16.500917434692383

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0551900751888752
    2. ' ,' → logprob: -2.930190086364746
    3. 'self' → logprob: -8.305190086364746
    4. ')' → logprob: -10.555190086364746
    5. ' )' → logprob: -11.305190086364746
    6. ' ' → logprob: -11.555190086364746
    7. ',self' → logprob: -12.305190086364746
    8. ' self' → logprob: -12.930190086364746
    9. '‌,' → logprob: -13.930190086364746
    10. '_,' → logprob: -13.930190086364746

Token 75: ' size' (ID: 2349)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5256500840187073
    2. ' size' → logprob: -1.0256500244140625
    3. 'self' → logprob: -3.1506500244140625
    4. 'size' → logprob: -5.2756500244140625
    5. ' n' → logprob: -6.9006500244140625
    6. ' board' → logprob: -7.7756500244140625
    7. 'n' → logprob: -7.9006500244140625
    8. ' ' → logprob: -8.025650024414062
    9. ' rows' → logprob: -9.525650024414062
    10. ' width' → logprob: -10.025650024414062

Token 76: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005580356228165329
    2. ',' → logprob: -8.375557899475098
    3. '=' → logprob: -9.125557899475098
    4. ')' → logprob: -9.125557899475098
    5. ' ):' → logprob: -9.500557899475098
    6. ':' → logprob: -10.625557899475098
    7. '):
' → logprob: -11.625557899475098
    8. ' ' → logprob: -15.250557899475098
    9. '   ' → logprob: -15.500557899475098
    10. '}:' → logprob: -15.625557899475098

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026878856122493744
    2. '<|end|>' → logprob: -4.151878833770752
    3. ' 
' → logprob: -6.401878833770752
    4. '   ' → logprob: -6.401878833770752
    5. '        
' → logprob: -6.526878833770752
    6. '
' → logprob: -6.651878833770752
    7. '\n' → logprob: -6.901878833770752
    8. '    ' → logprob: -7.026878833770752
    9. '    
' → logprob: -7.651878833770752
    10. '        ' → logprob: -7.901878833770752

Token 78: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.04859941080212593
    2. 'self' (adapté à ' self') → logprob: -3.0485994815826416
    3. '       ' → logprob: -11.548599243164062
    4. ' ' → logprob: -14.548599243164062
    5. ' ' → logprob: -14.548599243164062
    6. '	self' → logprob: -14.548599243164062
    7. '   ' → logprob: -14.673599243164062
    8. '    ' → logprob: -16.548599243164062
    9. ' super' → logprob: -16.548599243164062
    10. '        ' → logprob: -16.923599243164062

Token 79: '.size' (ID: 4463)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.23700852692127228
    2. '.size' → logprob: -1.9870085716247559
    3. '._' → logprob: -3.237008571624756
    4. ' .' → logprob: -3.862008571624756
    5. '.board' → logprob: -5.112008571624756
    6. ' ' → logprob: -5.987008571624756
    7. '_size' → logprob: -5.987008571624756
    8. 'size' → logprob: -7.487008571624756
    9. '.s' → logprob: -7.487008571624756
    10. '.rows' → logprob: -8.362008094787598

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28121450543403625
    2. '=' → logprob: -1.4062144756317139
    3. ' ' → logprob: -9.906214714050293
    4. ')' → logprob: -12.156214714050293
    5. ' =
' → logprob: -12.406214714050293
    6. ' =)' → logprob: -13.031214714050293
    7. '<|end|>' → logprob: -13.781214714050293
    8. ',' → logprob: -15.031214714050293
    9. ' )' → logprob: -15.656214714050293
    10. '=size' → logprob: -15.656214714050293

Token 81: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.0017125436570495367
    2. 'size' → logprob: -6.376712322235107
    3. ' ' → logprob: -11.501712799072266
    4. '(size' → logprob: -16.251712799072266
    5. '	size' → logprob: -17.751712799072266
    6. '[size' → logprob: -17.876712799072266
    7. ' ' → logprob: -18.751712799072266
    8. '=size' → logprob: -18.751712799072266
    9. ' int' → logprob: -19.126712799072266
    10. '    ' → logprob: -19.126712799072266

Token 82: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3161625266075134
    2. '<|end|>' → logprob: -1.4411625862121582
    3. '       ' → logprob: -3.441162586212158
    4. ' 
' → logprob: -7.816162586212158
    5. '<|end|>' → logprob: -7.816162586212158
    6. '   ' → logprob: -8.191162109375
    7. '```' → logprob: -8.316162109375
    8. '        
' → logprob: -8.441162109375
    9. '  
' → logprob: -8.566162109375
    10. '    
' → logprob: -9.316162109375

Token 84: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08182495832443237
    2. '       ' → logprob: -3.331825017929077
    3. 'self' (adapté à ' self') → logprob: -3.456825017929077
    4. ' self' → logprob: -4.706824779510498
    5. ' 
' → logprob: -7.206824779510498
    6. '<|end|>' → logprob: -7.706824779510498
    7. '   ' → logprob: -8.081825256347656
    8. '        
' → logprob: -8.456825256347656
    9. '```' → logprob: -8.956825256347656
    10. '  
' → logprob: -9.081825256347656

Token 85: '.grid' (ID: 19269)
  Prédit: '.board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -0.29889288544654846
    2. '.vertices' → logprob: -2.4238929748535156
    3. '.grid' → logprob: -2.5488929748535156
    4. '.' → logprob: -2.7988929748535156
    5. '._' → logprob: -4.048892974853516
    6. '.st' → logprob: -5.048892974853516
    7. '.rows' → logprob: -6.423892974853516
    8. ' .' → logprob: -6.548892974853516
    9. '.cells' → logprob: -6.548892974853516
    10. '.matrix' → logprob: -7.173892974853516

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00979858823120594
    2. '=' → logprob: -4.634798526763916
    3. ' =[' → logprob: -10.759799003601074
    4. ' ' → logprob: -11.259799003601074
    5. '[' → logprob: -12.009799003601074
    6. '=[]' → logprob: -13.884799003601074
    7. ' =
' → logprob: -14.384799003601074
    8. '[:]' → logprob: -15.509799003601074
    9. '=[' → logprob: -15.884799003601074
    10. '<|end|>' → logprob: -16.009798049926758

Token 87: ' [[' (ID: 9237)
  Prédit: ' [['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[' → logprob: -0.050427213311195374
    2. ' [' → logprob: -3.300427198410034
    3. ' []' → logprob: -5.175427436828613
    4. '[[' → logprob: -5.925427436828613
    5. '[' → logprob: -6.175427436828613
    6. ' [
' → logprob: -6.550427436828613
    7. ' [[]' → logprob: -8.550427436828613
    8. '[]' → logprob: -8.675427436828613
    9. ' [

' → logprob: -10.050427436828613
    10. '[
' → logprob: -10.300427436828613

Token 88: 'Vertex' (ID: 14196)
  Prédit: 'Vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vertex' → logprob: -0.0019372005481272936
    2. ' Vertex' → logprob: -6.251937389373779
    3. 'None' → logprob: -12.001936912536621
    4. '(Vertex' → logprob: -13.501936912536621
    5. '<Vertex' → logprob: -14.376936912536621
    6. 'Vert' → logprob: -15.751936912536621
    7. '   ' → logprob: -16.751937866210938
    8. '0' → logprob: -16.876937866210938
    9. '.Vertex' → logprob: -17.001937866210938
    10. ' ' → logprob: -17.126937866210938

Token 89: '(r' (ID: 4729)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.8742009997367859
    2. '(row' → logprob: -1.1242010593414307
    3. '(' → logprob: -1.3742010593414307
    4. '(r' → logprob: -5.499200820922852
    5. '(j' → logprob: -8.249200820922852
    6. '(x' → logprob: -8.624200820922852
    7. '(size' → logprob: -8.749200820922852
    8. '(s' → logprob: -9.999200820922852
    9. '(col' → logprob: -9.999200820922852
    10. '(y' → logprob: -10.249200820922852

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001378329354338348
    2. ' ,' → logprob: -6.626378536224365
    3. ' ' → logprob: -10.501378059387207
    4. ')' → logprob: -11.876378059387207
    5. ',col' → logprob: -11.876378059387207
    6. ',row' → logprob: -13.001378059387207
    7. ',
' → logprob: -13.251378059387207
    8. '<|end|>' → logprob: -13.626378059387207
    9. ',size' → logprob: -13.751378059387207
    10. ',j' → logprob: -14.251378059387207

Token 91: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3869527280330658
    2. 'c' → logprob: -1.1369527578353882
    3. ' ' → logprob: -10.26195240020752
    4. '0' → logprob: -10.88695240020752
    5. ')c' → logprob: -10.88695240020752
    6. ')' → logprob: -12.38695240020752
    7. '	c' → logprob: -13.26195240020752
    8. ' )' → logprob: -14.38695240020752
    9. '   ' → logprob: -14.82445240020752
    10. ',' → logprob: -15.76195240020752

Token 92: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038134094211272895
    2. ' )' → logprob: -7.8753814697265625
    3. ')
' → logprob: -14.000381469726562
    4. '}' → logprob: -16.750381469726562
    5. ' for' → logprob: -16.875381469726562
    6. ']' → logprob: -17.125381469726562
    7. ' )
' → logprob: -17.750381469726562
    8. '   ' → logprob: -17.875381469726562
    9. '))' → logprob: -18.000381469726562
    10. ' ' → logprob: -18.000381469726562

Token 93: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1365433782339096
    2. ')' → logprob: -2.2615432739257812
    3. ' ' → logprob: -4.011543273925781
    4. 'for' → logprob: -5.636543273925781
    5. ' )' → logprob: -6.886543273925781
    6. ']' → logprob: -7.636543273925781
    7. ' ]' → logprob: -9.511543273925781
    8. '            ' → logprob: -10.011543273925781
    9. '<|end|>' → logprob: -10.136543273925781
    10. ')]' → logprob: -10.761543273925781

Token 94: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.07511170953512192
    2. ' ' → logprob: -3.0751116275787354
    3. ' range' → logprob: -3.7001116275787354
    4. ' col' → logprob: -6.7001118659973145
    5. '<|end|>' → logprob: -9.200111389160156
    6. 'c' → logprob: -9.700111389160156
    7. 'range' → logprob: -11.450111389160156
    8. '	c' → logprob: -11.700111389160156
    9. ' xrange' → logprob: -11.950111389160156
    10. '  ' → logprob: -12.075111389160156

Token 95: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004258019383996725
    2. 'in' → logprob: -5.629258155822754
    3. ' ' → logprob: -7.504258155822754
    4. '<|end|>' → logprob: -9.254258155822754
    5. ' i' → logprob: -12.504258155822754
    6. '	in' → logprob: -13.004258155822754
    7. 'range' → logprob: -13.629258155822754
    8. '<|end|>' → logprob: -14.004258155822754
    9. 'In' → logprob: -14.254258155822754
    10. '  ' → logprob: -14.629258155822754

Token 96: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0011703446507453918
    2. 'range' → logprob: -6.7511701583862305
    3. '	range' → logprob: -16.001171112060547
    4. '(range' → logprob: -17.501171112060547
    5. ' xrange' → logprob: -18.501171112060547
    6. ' ' → logprob: -18.501171112060547
    7. '_range' → logprob: -19.251171112060547
    8. 'Range' → logprob: -19.876171112060547
    9. 'ange' → logprob: -20.751171112060547
    10. ')' → logprob: -21.001171112060547

Token 97: '(r' (ID: 4729)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.02068260870873928
    2. '(' → logprob: -4.0206828117370605
    3. '(self' → logprob: -6.0206828117370605
    4. '(s' → logprob: -9.770682334899902
    5. ' (' → logprob: -10.145682334899902
    6. '(
' → logprob: -12.395682334899902
    7. '(

' → logprob: -15.395682334899902
    8. ')' → logprob: -15.770682334899902
    9. '(sz' → logprob: -15.770682334899902
    10. '(space' → logprob: -15.895682334899902

Token 98: '+' (ID: 10)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.20325691998004913
    2. ' size' → logprob: -2.453256845474243
    3. 'size' → logprob: -2.703256845474243
    4. ')' → logprob: -4.828257083892822
    5. ')]' → logprob: -5.578257083892822
    6. ',' → logprob: -5.953257083892822
    7. '(self' → logprob: -5.953257083892822
    8. ',size' → logprob: -6.078257083892822
    9. '<size' → logprob: -6.203257083892822
    10. '.size' → logprob: -6.203257083892822

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3742544651031494
    2. ' size' → logprob: -1.8742544651031494
    3. 'size' → logprob: -2.2492544651031494
    4. ' ' → logprob: -3.1242544651031494
    5. 'self' → logprob: -5.37425422668457
    6. ' self' → logprob: -5.74925422668457
    7. '   ' → logprob: -7.49925422668457
    8. '0' → logprob: -7.99925422668457
    9. ')' → logprob: -8.37425422668457
    10. 's' → logprob: -9.24925422668457

Token 100: ')]' (ID: 15710)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3215373158454895
    2. ')' → logprob: -1.8215372562408447
    3. ' ,' → logprob: -3.3215372562408447
    4. ')]' → logprob: -3.3215372562408447
    5. ',size' → logprob: -4.196537494659424
    6. ' size' → logprob: -4.571537494659424
    7. 'size' → logprob: -5.071537494659424
    8. '(size' → logprob: -6.071537494659424
    9. ' )' → logprob: -6.321537494659424
    10. ' ' → logprob: -6.696537494659424

Token 101: ' for' (ID: 395)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.9256755709648132
    2. ' size' → logprob: -1.175675630569458
    3. ')' → logprob: -1.425675630569458
    4. '(size' → logprob: -4.425675392150879
    5. '<|end|>' → logprob: -4.425675392150879
    6. ']' → logprob: -4.550675392150879
    7. ')]' → logprob: -4.550675392150879
    8. ' )' → logprob: -6.550675392150879
    9. ',size' → logprob: -6.800675392150879
    10. ',' → logprob: -6.925675392150879

Token 102: ' r' (ID: 428)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00011081460979767144
    2. 'range' → logprob: -9.250110626220703
    3. ' ' → logprob: -11.750110626220703
    4. '	range' → logprob: -12.625110626220703
    5. '(range' → logprob: -13.375110626220703
    6. ' r' → logprob: -14.125110626220703
    7. ' xrange' → logprob: -14.375110626220703
    8. '    ' → logprob: -15.750110626220703
    9. '<|end|>' → logprob: -16.000110626220703
    10. ' ' → logprob: -16.500110626220703

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.040813006460666656
    2. ' range' → logprob: -3.6658129692077637
    3. '(range' → logprob: -4.790812969207764
    4. 'range' → logprob: -5.790812969207764
    5. '<|end|>' → logprob: -5.915812969207764
    6. 'in' → logprob: -8.290813446044922
    7. ')' → logprob: -10.415813446044922
    8. '<|end|>' → logprob: -10.540813446044922
    9. ' xrange' → logprob: -11.165813446044922
    10. ' ' → logprob: -11.540813446044922

Token 104: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.35846808552742004
    2. ' size' → logprob: -1.8584680557250977
    3. 'range' → logprob: -2.1084680557250977
    4. 'size' → logprob: -3.7334680557250977
    5. ' ' → logprob: -12.983468055725098
    6. ' xrange' → logprob: -13.233468055725098
    7. 'self' → logprob: -13.733468055725098
    8. '(size' → logprob: -13.733468055725098
    9. ' self' → logprob: -14.108468055725098
    10. '(range' → logprob: -14.858468055725098

Token 105: '(size' (ID: 15192)
  Prédit: '(size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.003934256266802549
    2. '(' → logprob: -6.128934383392334
    3. '(self' → logprob: -6.378934383392334
    4. '(s' → logprob: -10.003933906555176
    5. ' (' → logprob: -12.378933906555176
    6. ' size' → logprob: -15.253933906555176
    7. '<|end|>' → logprob: -15.378933906555176
    8. '(
' → logprob: -15.503933906555176
    9. '<size' → logprob: -15.628933906555176
    10. 'size' → logprob: -15.878933906555176

Token 106: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.07016650587320328
    2. ')' → logprob: -2.69516658782959
    3. '+' → logprob: -9.57016658782959
    4. ' )' → logprob: -9.94516658782959
    5. ')])' → logprob: -10.57016658782959
    6. '   ' → logprob: -10.82016658782959
    7. '       ' → logprob: -11.07016658782959
    8. ']' → logprob: -11.44516658782959
    9. '<|end|>' → logprob: -11.44516658782959
    10. ')}' → logprob: -11.94516658782959

Token 107: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1438212394714355
    2. '[' → logprob: -1.2688212394714355
    3. ' ' → logprob: -1.6438212394714355
    4. ']' → logprob: -1.7688212394714355
    5. '<|end|>' → logprob: -4.1438212394714355
    6. '   ' → logprob: -5.1438212394714355
    7. '+' → logprob: -5.2688212394714355
    8. '    ' → logprob: -6.1438212394714355
    9. ' ]' → logprob: -6.1438212394714355
    10. '  ' → logprob: -6.8938212394714355

Token 108: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: '.ad' (ID: 19775)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07052939385175705
    2. '.st' → logprob: -3.1955294609069824
    3. '.grid' → logprob: -3.8205294609069824
    4. '.players' → logprob: -7.445529460906982
    5. '.history' → logprob: -7.570529460906982
    6. '.rows' → logprob: -7.695529460906982
    7. '.board' → logprob: -8.070528984069824
    8. ' .' → logprob: -8.070528984069824
    9. '._' → logprob: -8.320528984069824
    10. '.points' → logprob: -8.570528984069824

Token 110: 'jac' (ID: 77250)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2017454355955124
    2. 'jac' → logprob: -1.7017453908920288
    3. 'acency' → logprob: -8.82674503326416
    4. 'd' → logprob: -9.45174503326416
    5. '_j' → logprob: -10.45174503326416
    6. 'ja' → logprob: -10.82674503326416
    7. 'js' → logprob: -11.07674503326416
    8. '_' → logprob: -12.07674503326416
    9. '[j' → logprob: -12.20174503326416
    10. '```' → logprob: -12.57674503326416

Token 111: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.367184042930603
    2. 'ent' → logprob: -1.367184042930603
    3. 'ents' → logprob: -3.3671841621398926
    4. 'acency' → logprob: -5.117184162139893
    5. '   ' → logprob: -5.367184162139893
    6. 'encies' → logprob: -5.992184162139893
    7. '       ' → logprob: -6.992184162139893
    8. '_list' → logprob: -7.367184162139893
    9. '```' → logprob: -7.992184162139893
    10. 'list' → logprob: -7.992184162139893

Token 112: '_map' (ID: 11824)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.06435331702232361
    2. '_' → logprob: -4.0643534660339355
    3. '_lists' → logprob: -4.0643534660339355
    4. ' =' → logprob: -5.0643534660339355
    5. 'List' → logprob: -5.0643534660339355
    6. 'list' → logprob: -5.4393534660339355
    7. 's' → logprob: -5.9393534660339355
    8. '[' → logprob: -5.9393534660339355
    9. '=' → logprob: -6.0643534660339355
    10. '_matrix' → logprob: -6.5643534660339355

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0016787484055384994
    2. '=' → logprob: -6.751678943634033
    3. ' ' → logprob: -7.626678943634033
    4. '<|end|>' → logprob: -12.126678466796875
    5. '[' → logprob: -12.251678466796875
    6. '  ' → logprob: -12.751678466796875
    7. ' =
' → logprob: -13.001678466796875
    8. '=[]' → logprob: -13.376678466796875
    9. '[]' → logprob: -13.876678466796875
    10. 's' → logprob: -14.251678466796875

Token 114: ' {}' (ID: 9902)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.20201313495635986
    2. ' {}' → logprob: -1.7020131349563599
    3. '[]' → logprob: -8.20201301574707
    4. ' []' → logprob: -9.32701301574707
    5. 'dict' → logprob: -9.70201301574707
    6. '[' → logprob: -9.70201301574707
    7. ' defaultdict' → logprob: -9.95201301574707
    8. ' dict' → logprob: -10.57701301574707
    9. '{' → logprob: -11.32701301574707
    10. 'default' → logprob: -11.57701301574707

Token 115: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9926319122314453
    2. '<|end|>' → logprob: -0.9926319122314453
    3. '       ' → logprob: -2.3676319122314453
    4. ' ' → logprob: -2.6176319122314453
    5. '   ' → logprob: -3.3676319122314453
    6. '\n' → logprob: -4.367631912231445
    7. '\' → logprob: -4.367631912231445
    8. ' 
' → logprob: -4.617631912231445
    9. '' → logprob: -5.617631912231445
    10. '.' → logprob: -5.742631912231445

Token 117: ' key' (ID: 2140)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8068077564239502
    2. ' {}' → logprob: -1.8068077564239502
    3. ' {' → logprob: -2.43180775642395
    4. '{' → logprob: -2.43180775642395
    5. '{}' → logprob: -2.68180775642395
    6. '<|end|>' → logprob: -3.05680775642395
    7. ' {(' → logprob: -3.30680775642395
    8. ' defaultdict' → logprob: -4.056807518005371
    9. ')' → logprob: -5.056807518005371
    10. '        ' → logprob: -5.306807518005371

Token 118: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1122328042984009
    2. ':' → logprob: -1.3622328042984009
    3. ' =' → logprob: -1.7372328042984009
    4. '<|end|>' → logprob: -1.7372328042984009
    5. ' ' → logprob: -3.2372326850891113
    6. ',' → logprob: -4.862232685089111
    7. ' (' → logprob: -5.737232685089111
    8. ' :' → logprob: -5.862232685089111
    9. '<|end|>' → logprob: -6.112232685089111
    10. ' for' → logprob: -6.737232685089111

Token 119: ' (' (ID: 350)
  Prédit: ' Vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Vertex' → logprob: -0.30229127407073975
    2. ' (' → logprob: -2.0522913932800293
    3. '(Vertex' → logprob: -2.9272913932800293
    4. 'Vertex' → logprob: -3.1772913932800293
    5. ' vertex' → logprob: -3.4272913932800293
    6. 'vertex' → logprob: -6.177291393280029
    7. '(' → logprob: -7.302291393280029
    8. '<Vertex' → logprob: -7.802291393280029
    9. '(vertex' → logprob: -8.177290916442871
    10. ' tuple' → logprob: -8.177290916442871

Token 120: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003826914355158806
    2. 'row' → logprob: -6.503827095031738
    3. ')' → logprob: -7.128827095031738
    4. 'self' → logprob: -7.753827095031738
    5. 'vertex' → logprob: -8.128827095031738
    6. ' r' → logprob: -8.128827095031738
    7. ' (' → logprob: -8.628827095031738
    8. '<|end|>' → logprob: -9.378827095031738
    9. 'Vertex' → logprob: -9.878827095031738
    10. '(r' → logprob: -9.878827095031738

Token 121: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035918003413826227
    2. ' ,' → logprob: -8.250359535217285
    3. ',c' → logprob: -9.375359535217285
    4. ',col' → logprob: -12.500359535217285
    5. ')' → logprob: -13.375359535217285
    6. ',column' → logprob: -13.500359535217285
    7. ' ' → logprob: -13.625359535217285
    8. ',
' → logprob: -13.750359535217285
    9. ',)' → logprob: -14.000359535217285
    10. ',row' → logprob: -14.500359535217285

Token 122: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15419606864452362
    2. '),' → logprob: -2.15419602394104
    3. ',' → logprob: -3.65419602394104
    4. ' )' → logprob: -7.779196262359619
    5. ' ,' → logprob: -8.779195785522461
    6. ' ),' → logprob: -9.029195785522461
    7. '):' → logprob: -9.029195785522461
    8. '),(' → logprob: -10.154195785522461
    9. '<|end|>' → logprob: -10.529195785522461
    10. ' ' → logprob: -11.029195785522461

Token 123: ' value' (ID: 1432)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3233520984649658
    2. '<|end|>' → logprob: -1.4483520984649658
    3. ')' → logprob: -3.448352098464966
    4. ' ,' → logprob: -5.698351860046387
    5. ',
' → logprob: -6.448351860046387
    6. ' ' → logprob: -6.823351860046387
    7. '       ' → logprob: -7.198351860046387
    8. ':' → logprob: -7.448351860046387
    9. '<|end|>' → logprob: -7.698351860046387
    10. ']' → logprob: -7.823351860046387

Token 124: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019892344251275063
    2. '[' → logprob: -5.14489221572876
    3. ' :' → logprob: -5.14489221572876
    4. ' =' → logprob: -6.39489221572876
    5. ':list' → logprob: -6.64489221572876
    6. ' [' → logprob: -6.76989221572876
    7. ',' → logprob: -7.14489221572876
    8. ' list' → logprob: -7.39489221572876
    9. ' set' → logprob: -7.76989221572876
    10. '<|end|>' → logprob: -7.89489221572876

Token 125: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -1.0877983570098877
    2. '[]' → logprob: -1.3377983570098877
    3. ' set' → logprob: -1.5877983570098877
    4. 'set' → logprob: -2.3377983570098877
    5. ' [' → logprob: -3.2127983570098877
    6. '[' → logprob: -3.3377983570098877
    7. '[(' → logprob: -4.087798118591309
    8. ' [(' → logprob: -5.337798118591309
    9. ' list' → logprob: -6.962798118591309
    10. '[]>' → logprob: -8.087798118591309

Token 126: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.3295440971851349
    2. '<|end|>' → logprob: -1.5795440673828125
    3. '[' → logprob: -2.8295440673828125
    4. ' ' → logprob: -4.4545440673828125
    5. '<|end|>' → logprob: -6.8295440673828125
    6. ')' → logprob: -6.9545440673828125
    7. '[]' → logprob: -7.5795440673828125
    8. 'of' → logprob: -7.9545440673828125
    9. '[
' → logprob: -8.454544067382812
    10. '  ' → logprob: -8.704544067382812

Token 127: ' adjacent' (ID: 39069)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1679188758134842
    2. ' vertices' → logprob: -3.4179189205169678
    3. '(Vertex' → logprob: -4.042918682098389
    4. ' Vertex' → logprob: -4.167918682098389
    5. ' neighboring' → logprob: -4.167918682098389
    6. ' adjacent' → logprob: -4.292918682098389
    7. '(' → logprob: -4.417918682098389
    8. ' neighbors' → logprob: -4.542918682098389
    9. 'neighbors' → logprob: -4.542918682098389
    10. 'Vertex' → logprob: -4.917918682098389

Token 128: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3210587799549103
    2. ' vertices' → logprob: -1.696058750152588
    3. 'Vertices' → logprob: -4.071058750152588
    4. ')' → logprob: -4.571058750152588
    5. '(' → logprob: -4.696058750152588
    6. '(Vertex' → logprob: -4.696058750152588
    7. '(s' → logprob: -4.821058750152588
    8. 'vertices' → logprob: -4.946058750152588
    9. '(r' → logprob: -5.071058750152588
    10. ' ' → logprob: -5.071058750152588

Token 129: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003289774525910616
    2. ' (' → logprob: -6.378289699554443
    3. ' r' → logprob: -7.503289699554443
    4. '(r' → logprob: -7.878289699554443
    5. ')' → logprob: -8.128290176391602
    6. 'row' → logprob: -9.378290176391602
    7. ',' → logprob: -9.378290176391602
    8. '_r' → logprob: -10.253290176391602
    9. ',r' → logprob: -10.253290176391602
    10. ' ' → logprob: -10.378290176391602

Token 130: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07119671255350113
    2. ',c' → logprob: -2.6961967945098877
    3. ' ,' → logprob: -7.071196556091309
    4. ',
' → logprob: -9.071196556091309
    5. ',col' → logprob: -9.571196556091309
    6. '+' → logprob: -9.821196556091309
    7. ' ' → logprob: -10.196196556091309
    8. '-' → logprob: -10.196196556091309
    9. ',s' → logprob: -11.571196556091309
    10. ')' → logprob: -11.696196556091309

Token 131: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000608198344707489
    2. ' )' → logprob: -7.625607967376709
    3. ')s' → logprob: -9.625608444213867
    4. 's' → logprob: -10.500608444213867
    5. ')
' → logprob: -12.375608444213867
    6. '),' → logprob: -12.750608444213867
    7. ' ' → logprob: -12.875608444213867
    8. ' positions' → logprob: -13.125608444213867
    9. '<|end|>' → logprob: -13.250608444213867
    10. '[])' → logprob: -13.625608444213867

Token 132: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5579285025596619
    2. ' ' → logprob: -1.5579285621643066
    3. '   ' → logprob: -2.8079285621643066
    4. '
' → logprob: -3.1829285621643066
    5. '<|end|>' → logprob: -3.3079285621643066
    6. ' 
' → logprob: -3.5579285621643066
    7. '        
' → logprob: -4.182928562164307
    8. ')' → logprob: -5.057928562164307
    9. '    
' → logprob: -5.057928562164307
    10. '  ' → logprob: -5.557928562164307

Token 133: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6973209977149963
    2. '   ' → logprob: -0.9473209977149963
    3. '       ' → logprob: -3.0723209381103516
    4. 'def' (adapté à ' def') → logprob: -3.3223209381103516
    5. ' 
' → logprob: -4.197320938110352
    6. ' def' → logprob: -5.322320938110352
    7. '    ' → logprob: -5.572320938110352
    8. '  ' → logprob: -6.447320938110352
    9. '    
' → logprob: -6.572320938110352
    10. 'd' → logprob: -6.572320938110352

Token 134: ' set' (ID: 920)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.6983001232147217
    2. ' build' → logprob: -0.8233001232147217
    3. '_build' → logprob: -3.6983001232147217
    4. ' compute' → logprob: -4.073300361633301
    5. '_' → logprob: -4.323300361633301
    6. ' calculate' → logprob: -6.323300361633301
    7. 'build' → logprob: -6.698300361633301
    8. '_compute' → logprob: -6.948300361633301
    9. '_generate' → logprob: -7.198300361633301
    10. ' initialize' → logprob: -7.448300361633301

Token 135: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.3956250846385956
    2. '_' → logprob: -1.270625114440918
    3. '_vertex' → logprob: -3.395625114440918
    4. '_cell' → logprob: -4.770625114440918
    5. '_point' → logprob: -6.645625114440918
    6. '_position' → logprob: -7.020625114440918
    7. '(' → logprob: -7.770625114440918
    8. '_tile' → logprob: -8.270625114440918
    9. '_piece' → logprob: -8.395625114440918
    10. '_token' → logprob: -8.770625114440918

Token 136: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -1.3663626305060461e-05
    2. '_one' → logprob: -12.62501335144043
    3. 'ones' → logprob: -13.00001335144043
    4. 'on' → logprob: -13.25001335144043
    5. 'One' → logprob: -13.25001335144043
    6. ' one' → logprob: -13.37501335144043
    7. 'o' → logprob: -13.50001335144043
    8. '   ' → logprob: -14.75001335144043
    9. '(one' → logprob: -15.50001335144043
    10. '```' → logprob: -15.50001335144043

Token 137: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005267434287816286
    2. '(' → logprob: -5.25526762008667
    3. ' (' → logprob: -10.755267143249512
    4. '(s' → logprob: -11.505267143249512
    5. '(
' → logprob: -13.880267143249512
    6. 'self' → logprob: -14.630267143249512
    7. '(r' → logprob: -15.005267143249512
    8. '(sel' → logprob: -15.505267143249512
    9. '   ' → logprob: -16.380268096923828
    10. ' self' → logprob: -16.505268096923828

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.2762428822461516e-05
    2. ' ,' → logprob: -10.375052452087402
    3. 'self' → logprob: -11.750052452087402
    4. ',row' → logprob: -12.250052452087402
    5. ',r' → logprob: -12.500052452087402
    6. ' ' → logprob: -13.250052452087402
    7. ')' → logprob: -14.125052452087402
    8. ',self' → logprob: -14.500052452087402
    9. '   ' → logprob: -14.875052452087402
    10. '

' → logprob: -15.500052452087402

Token 139: ' r' (ID: 428)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.07149752229452133
    2. 'self' → logprob: -3.3214974403381348
    3. ' row' → logprob: -4.071497440338135
    4. 'r' → logprob: -4.196497440338135
    5. ' self' → logprob: -7.696497440338135
    6. ')' → logprob: -8.946497917175293
    7. ' ' → logprob: -9.321497917175293
    8. ' r' → logprob: -9.696497917175293
    9. '   ' → logprob: -10.446497917175293
    10. '	row' → logprob: -11.321497917175293

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002533528604544699
    2. ' ,' → logprob: -8.375253677368164
    3. ',c' → logprob: -11.000253677368164
    4. ',
' → logprob: -13.500253677368164
    5. ')' → logprob: -13.500253677368164
    6. ' ' → logprob: -13.875253677368164
    7. ',r' → logprob: -14.000253677368164
    8. ',

' → logprob: -15.500253677368164
    9. ',col' → logprob: -15.625253677368164
    10. ',int' → logprob: -15.750253677368164

Token 141: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16025032103061676
    2. ' c' → logprob: -1.9102503061294556
    3. ' col' → logprob: -11.410250663757324
    4. 'col' → logprob: -11.410250663757324
    5. '<|end|>' → logprob: -13.035250663757324
    6. ' ' → logprob: -13.660250663757324
    7. '	c' → logprob: -15.160250663757324
    8. '  ' → logprob: -16.035249710083008
    9. '    ' → logprob: -16.535249710083008
    10. '   ' → logprob: -16.535249710083008

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031091354321688414
    2. ')' → logprob: -9.000310897827148
    3. ' ,' → logprob: -9.000310897827148
    4. '):' → logprob: -10.125310897827148
    5. '),' → logprob: -10.750310897827148
    6. ',value' → logprob: -14.375310897827148
    7. '):
' → logprob: -14.500310897827148
    8. '   ' → logprob: -15.625310897827148
    9. '‌,' → logprob: -15.625310897827148
    10. ' ' → logprob: -15.750310897827148

Token 143: ' stone' (ID: 14352)
  Prédit: ' stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stone' → logprob: -0.6492271423339844
    2. 'stone' → logprob: -0.7742271423339844
    3. 'value' → logprob: -5.274227142333984
    4. ' value' → logprob: -5.399227142333984
    5. '1' → logprob: -5.899227142333984
    6. ')' → logprob: -7.274227142333984
    7. ' color' → logprob: -7.524227142333984
    8. 'color' → logprob: -7.649227142333984
    9. ' s' → logprob: -7.649227142333984
    10. ' ' → logprob: -7.774227142333984

Token 144: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001208211062476039
    2. ')' → logprob: -6.751208305358887
    3. '):
' → logprob: -10.376208305358887
    4. ' ):' → logprob: -12.751208305358887
    5. ':' → logprob: -13.001208305358887
    6. ' ' → logprob: -14.376208305358887
    7. '=' → logprob: -15.126208305358887
    8. '   ' → logprob: -15.751208305358887
    9. ',' → logprob: -16.00120735168457
    10. '):
' → logprob: -16.12620735168457

Token 145: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.946759045124054
    2. '):' → logprob: -1.0717589855194092
    3. '       ' → logprob: -1.5717589855194092
    4. ')' → logprob: -3.696758985519409
    5. ' ' → logprob: -4.321759223937988
    6. '<|end|>' → logprob: -4.696759223937988
    7. '):
' → logprob: -5.696759223937988
    8. '   ' → logprob: -6.071759223937988
    9. ' :' → logprob: -6.196759223937988
    10. ' ):' → logprob: -6.571759223937988

Token 146: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10386743396520615
    2. ' self' → logprob: -2.978867530822754
    3. '       ' → logprob: -3.853867530822754
    4. ' 
' → logprob: -3.978867530822754
    5. ')' → logprob: -6.103867530822754
    6. ' ' → logprob: -6.228867530822754
    7. '        
' → logprob: -7.728867530822754
    8. ' if' → logprob: -7.853867530822754
    9. '        ' → logprob: -7.978867530822754
    10. '<|end|>' → logprob: -7.978867530822754

Token 147: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.048688650131225586
    2. '.' → logprob: -3.0486886501312256
    3. ' .' → logprob: -9.923688888549805
    4. '.st' → logprob: -10.423688888549805
    5. '.space' → logprob: -11.673688888549805
    6. ').' → logprob: -12.173688888549805
    7. '.row' → logprob: -13.173688888549805
    8. ')' → logprob: -14.048688888549805
    9. 'grid' → logprob: -14.298688888549805
    10. ' ' → logprob: -14.548688888549805

Token 148: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.003191970521584153
    2. '[' → logprob: -5.753191947937012
    3. ' [' → logprob: -11.878191947937012
    4. '[row' → logprob: -12.503191947937012
    5. '[c' → logprob: -13.253191947937012
    6. '[s' → logprob: -15.128191947937012
    7. '[
' → logprob: -15.253191947937012
    8. '[m' → logprob: -15.253191947937012
    9. '[R' → logprob: -15.253191947937012
    10. '][' → logprob: -15.878191947937012

Token 149: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0032635112293064594
    2. ']' → logprob: -5.753263473510742
    3. ' ][' → logprob: -9.503263473510742
    4. '[' → logprob: -12.378263473510742
    5. '],' → logprob: -13.628263473510742
    6. ']
' → logprob: -13.753263473510742
    7. '[c' → logprob: -14.003263473510742
    8. ')][' → logprob: -14.503263473510742
    9. '][]' → logprob: -14.878263473510742
    10. ']][' → logprob: -15.003263473510742

Token 150: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.9728669738397e-05
    2. ' c' → logprob: -9.625100135803223
    3. 'col' → logprob: -10.500100135803223
    4. ')' → logprob: -13.875100135803223
    5. ' col' → logprob: -14.000100135803223
    6. ')c' → logprob: -14.000100135803223
    7. ' ' → logprob: -14.250100135803223
    8. '
' → logprob: -14.875100135803223
    9. '<|end|>' → logprob: -15.000100135803223
    10. ']' → logprob: -15.125100135803223

Token 151: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.26511892676353455
    2. '].' → logprob: -1.765118956565857
    3. ')' → logprob: -3.7651188373565674
    4. '.' → logprob: -4.0151190757751465
    5. '.st' → logprob: -4.0151190757751465
    6. ']' → logprob: -6.1401190757751465
    7. ' .' → logprob: -8.765118598937988
    8. '}.' → logprob: -10.015118598937988
    9. ' ].' → logprob: -10.265118598937988
    10. ' ).' → logprob: -10.765118598937988

Token 152: 'stone' (ID: 18617)
  Prédit: 'stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stone' → logprob: -9.088346359931165e-07
    2. 'ston' → logprob: -14.250000953674316
    3. ' stone' → logprob: -15.125000953674316
    4. 'sto' → logprob: -18.0
    5. 'stones' → logprob: -19.5
    6. 's' → logprob: -19.625
    7. 'Stone' → logprob: -19.875
    8. 'storm' → logprob: -20.5
    9. 'stein' → logprob: -20.5
    10. 'set' → logprob: -20.625

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313263863325119
    2. '=' → logprob: -1.3132638931274414
    3. ' =
' → logprob: -13.313263893127441
    4. ' ' → logprob: -15.563263893127441
    5. '=
' → logprob: -16.313262939453125
    6. '=

' → logprob: -16.313262939453125
    7. '=int' → logprob: -16.813262939453125
    8. ' =)' → logprob: -16.938262939453125
    9. '=}' → logprob: -17.563262939453125
    10. '＝' → logprob: -18.063262939453125

Token 154: ' stone' (ID: 14352)
  Prédit: 'stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stone' → logprob: -0.07889936864376068
    2. ' stone' → logprob: -2.578899383544922
    3. 'ston' → logprob: -11.703899383544922
    4. 'stones' → logprob: -14.203899383544922
    5. 'st' → logprob: -15.203899383544922
    6. 'Stone' → logprob: -15.828899383544922
    7. ' stones' → logprob: -16.828899383544922
    8. 'space' → logprob: -17.203899383544922
    9. 'STONE' → logprob: -17.203899383544922
    10. 'storm' → logprob: -17.578899383544922

Token 155: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9669142961502075
    2. '   ' → logprob: -1.7169142961502075
    3. ')' → logprob: -2.091914176940918
    4. ' ' → logprob: -2.216914176940918
    5. '.' → logprob: -2.841914176940918
    6. '<|end|>' → logprob: -3.091914176940918
    7. ' 
' → logprob: -3.466914176940918
    8. '\' → logprob: -4.466914176940918
    9. '[' → logprob: -4.466914176940918
    10. ',' → logprob: -4.591914176940918

Token 157: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.38823872804641724
    2. '   ' → logprob: -1.7632386684417725
    3. ' ' → logprob: -2.7632386684417725
    4. ' def' → logprob: -3.1382386684417725
    5. 'd' → logprob: -3.3882386684417725
    6. ' 
' → logprob: -5.513238906860352
    7. '_' → logprob: -6.263238906860352
    8. '    
' → logprob: -7.138238906860352
    9. '
' → logprob: -7.763238906860352
    10. '       ' → logprob: -7.763238906860352

Token 158: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.18551091849803925
    2. ' def' → logprob: -1.9355108737945557
    3. ' ' → logprob: -4.935511112213135
    4. ' _' → logprob: -5.435511112213135
    5. ' is' → logprob: -5.935511112213135
    6. '_get' → logprob: -6.185511112213135
    7. ' adjacency' → logprob: -6.310511112213135
    8. '_' → logprob: -6.435511112213135
    9. ' valid' → logprob: -6.560511112213135
    10. 'get' → logprob: -7.185511112213135

Token 159: '_st' (ID: 2518)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4402998685836792
    2. '_st' → logprob: -1.0652998685836792
    3. '_vertex' → logprob: -5.315299987792969
    4. '_neighbors' → logprob: -6.565299987792969
    5. '_cell' → logprob: -6.690299987792969
    6. '_s' → logprob: -6.690299987792969
    7. ' _' → logprob: -6.940299987792969
    8. '_row' → logprob: -8.315299987792969
    9. '_grid' → logprob: -8.690299987792969
    10. '_tile' → logprob: -8.815299987792969

Token 160: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -3.869639476761222e-05
    2. 'o' → logprob: -10.750039100646973
    3. '_one' → logprob: -11.750039100646973
    4. 'One' → logprob: -12.625039100646973
    5. '   ' → logprob: -13.000039100646973
    6. ' one' → logprob: -13.250039100646973
    7. 'on' → logprob: -14.500039100646973
    8. '```' → logprob: -14.625039100646973
    9. 'оне' → logprob: -15.125039100646973
    10. '(one' → logprob: -15.875039100646973

Token 161: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5771887302398682
    2. '(self' → logprob: -0.8271887302398682
    3. '(r' → logprob: -6.827188491821289
    4. '(
' → logprob: -9.452188491821289
    5. '(s' → logprob: -9.952188491821289
    6. ' (' → logprob: -10.452188491821289
    7. 'self' → logprob: -12.452188491821289
    8. '(

' → logprob: -13.077188491821289
    9. ',' → logprob: -13.452188491821289
    10. ' ' → logprob: -14.202188491821289

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010994999669492245
    2. ',r' → logprob: -4.635994911193848
    3. ' ,' → logprob: -7.510994911193848
    4. ')' → logprob: -7.885994911193848
    5. '(' → logprob: -8.885994911193848
    6. '[' → logprob: -9.885994911193848
    7. '[r' → logprob: -10.135994911193848
    8. ',[' → logprob: -10.760994911193848
    9. '(r' → logprob: -11.010994911193848
    10. ',(' → logprob: -11.635994911193848

Token 163: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.14330430328845978
    2. ' r' → logprob: -2.0183043479919434
    3. 'self' → logprob: -8.018303871154785
    4. 'row' → logprob: -8.768303871154785
    5. ')' → logprob: -9.518303871154785
    6. ' self' → logprob: -11.018303871154785
    7. '<|end|>' → logprob: -11.018303871154785
    8. ' row' → logprob: -11.268303871154785
    9. 's' → logprob: -12.268303871154785
    10. '   ' → logprob: -12.393303871154785

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024101349990814924
    2. ',c' → logprob: -6.252409934997559
    3. ' ,' → logprob: -7.752409934997559
    4. ')' → logprob: -10.377409934997559
    5. ',
' → logprob: -12.002409934997559
    6. '][' → logprob: -12.377409934997559
    7. '‌,' → logprob: -13.752409934997559
    8. '[' → logprob: -13.752409934997559
    9. '<|end|>' → logprob: -13.877409934997559
    10. ' ' → logprob: -14.377409934997559

Token 165: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011049000546336174
    2. ' c' → logprob: -4.511048793792725
    3. ' ' → logprob: -14.386049270629883
    4. '<|end|>' → logprob: -15.261049270629883
    5. ')c' → logprob: -15.886049270629883
    6. ')' → logprob: -16.136049270629883
    7. 'col' → logprob: -16.511049270629883
    8. '  ' → logprob: -17.011049270629883
    9. '   ' → logprob: -17.511049270629883
    10. ' col' → logprob: -17.761049270629883

Token 166: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011732018319889903
    2. '):' → logprob: -6.75117301940918
    3. ' )' → logprob: -13.75117301940918
    4. '):
' → logprob: -13.75117301940918
    5. ')**' → logprob: -15.62617301940918
    6. ')
' → logprob: -15.75117301940918
    7. ')}' → logprob: -16.00117301940918
    8. ')return' → logprob: -16.50117301940918
    9. '),' → logprob: -16.62617301940918
    10. ')">' → logprob: -16.75117301940918

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2848470211029053
    2. ' self' → logprob: -2.9098470211029053
    3. ' return' → logprob: -3.4098470211029053
    4. ' 
' → logprob: -3.4098470211029053
    5. 'self' → logprob: -3.6598470211029053
    6. ')' → logprob: -3.6598470211029053
    7. ' ' → logprob: -3.6598470211029053
    8. '<|end|>' → logprob: -3.6598470211029053
    9. '    ' → logprob: -5.034847259521484
    10. '   ' → logprob: -5.034847259521484

Token 168: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.42231112718582153
    2. 'return' (adapté à ' return') → logprob: -1.1723110675811768
    3. ' self' → logprob: -3.6723110675811768
    4. 'self' → logprob: -4.672311305999756
    5. '       ' → logprob: -9.922310829162598
    6. '        ' → logprob: -14.297310829162598
    7. ' ' → logprob: -15.047310829162598
    8. '   ' → logprob: -15.172310829162598
    9. '    ' → logprob: -15.297310829162598
    10. ' 
' → logprob: -15.422310829162598

Token 169: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.01815052703022957
    2. 'self' → logprob: -4.018150329589844
    3. ' ' → logprob: -14.893150329589844
    4. ' ' → logprob: -16.018150329589844
    5. '	self' → logprob: -17.393150329589844
    6. ' sel' → logprob: -18.393150329589844
    7. '(self' → logprob: -18.893150329589844
    8. '_self' → logprob: -19.643150329589844
    9. ' 
' → logprob: -19.893150329589844
    10. ' selfs' → logprob: -20.268150329589844

Token 170: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.2547478675842285
    2. '.' → logprob: -1.5047478675842285
    3. ' .' → logprob: -5.8797478675842285
    4. '.g' → logprob: -12.00474739074707
    5. '.board' → logprob: -12.12974739074707
    6. '.Grid' → logprob: -13.75474739074707
    7. '.st' → logprob: -13.75474739074707
    8. '.user' → logprob: -14.25474739074707
    9. ' ' → logprob: -14.62974739074707
    10. '.git' → logprob: -14.62974739074707

Token 171: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0004317420825827867
    2. '[' → logprob: -7.750431537628174
    3. ' [' → logprob: -14.875432014465332
    4. '[row' → logprob: -15.125432014465332
    5. 'r' → logprob: -15.500432014465332
    6. '[
' → logprob: -15.750432014465332
    7. ' ' → logprob: -17.875431060791016
    8. '[c' → logprob: -18.250431060791016
    9. '[s' → logprob: -18.625431060791016
    10. '[self' → logprob: -18.875431060791016

Token 172: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0010715120006352663
    2. ']' → logprob: -7.001071453094482
    3. ' ][' → logprob: -9.25107192993164
    4. ')[' → logprob: -10.50107192993164
    5. '[' → logprob: -11.37607192993164
    6. ')' → logprob: -11.50107192993164
    7. '[c' → logprob: -11.87607192993164
    8. '[r' → logprob: -13.25107192993164
    9. ',' → logprob: -13.75107192993164
    10. ')][' → logprob: -14.00107192993164

Token 173: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -8.180258191714529e-06
    2. ' c' → logprob: -11.875008583068848
    3. ')' → logprob: -15.000008583068848
    4. ')c' → logprob: -15.000008583068848
    5. '   ' → logprob: -15.875008583068848
    6. ' ' → logprob: -15.875008583068848
    7. '<|end|>' → logprob: -16.50000762939453
    8. '  ' → logprob: -16.50000762939453
    9. '    ' → logprob: -17.75000762939453
    10. ']' → logprob: -17.87500762939453

Token 174: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.695284903049469
    2. '].' → logprob: -0.695284903049469
    3. '.' → logprob: -6.695284843444824
    4. ')' → logprob: -7.695284843444824
    5. '}.' → logprob: -7.945284843444824
    6. ']' → logprob: -9.945284843444824
    7. ' ].' → logprob: -11.195284843444824
    8. '.st' → logprob: -11.320284843444824
    9. ' .' → logprob: -12.320284843444824
    10. ' ).' → logprob: -12.320284843444824

Token 175: 'stone' (ID: 18617)
  Prédit: 'stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stone' → logprob: -9.088346359931165e-07
    2. 'ston' → logprob: -14.250000953674316
    3. 'sto' → logprob: -15.375000953674316
    4. ' stone' → logprob: -17.875
    5. 's' → logprob: -20.0
    6. 'st' → logprob: -20.5
    7. 'Stone' → logprob: -21.375
    8. 'stones' → logprob: -21.375
    9. 'stein' → logprob: -22.625
    10. 'storm' → logprob: -22.625

Token 176: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09563674032688141
    2. ' ' → logprob: -3.4706368446350098
    3. ')' → logprob: -4.34563684463501
    4. ']' → logprob: -4.34563684463501
    5. '[' → logprob: -4.47063684463501
    6. '       ' → logprob: -4.59563684463501
    7. 'def' → logprob: -5.97063684463501
    8. '<|end|>' → logprob: -5.97063684463501
    9. '.' → logprob: -6.72063684463501
    10. '  ' → logprob: -7.09563684463501

Token 178: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4115992784500122
    2. '   ' → logprob: -1.1615992784500122
    3. ' def' → logprob: -4.286599159240723
    4. ' ' → logprob: -5.036599159240723
    5. 'd' → logprob: -5.661599159240723
    6. '  ' → logprob: -8.411599159240723
    7. ' 
' → logprob: -8.911599159240723
    8. '       ' → logprob: -9.661599159240723
    9. '    
' → logprob: -9.661599159240723
    10. ')' → logprob: -9.911599159240723

Token 179: ' in' (ID: 306)
  Prédit: ' build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -1.7486603260040283
    2. 'def' → logprob: -1.8736603260040283
    3. ' def' → logprob: -1.9986603260040283
    4. ' in' → logprob: -2.4986603260040283
    5. ' compute' → logprob: -2.8736603260040283
    6. 'build' → logprob: -2.8736603260040283
    7. ' _' → logprob: -2.8736603260040283
    8. ' get' → logprob: -2.9986603260040283
    9. 'compute' → logprob: -3.2486603260040283
    10. ' calculate' → logprob: -3.6236603260040283

Token 180: '_bounds' (ID: 90408)
  Prédit: '_bounds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bounds' → logprob: -0.1466004103422165
    2. '_' → logprob: -2.1466004848480225
    3. '_board' → logprob: -4.646600246429443
    4. '_range' → logprob: -4.896600246429443
    5. '_bound' → logprob: -6.146600246429443
    6. '_boundary' → logprob: -9.396600723266602
    7. '_b' → logprob: -9.896600723266602
    8. '_grid' → logprob: -10.146600723266602
    9. '_side' → logprob: -10.646600723266602
    10. 'side' → logprob: -11.271600723266602

Token 181: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31439173221588135
    2. '(self' → logprob: -1.3143917322158813
    3. '(r' → logprob: -6.939391613006592
    4. '(
' → logprob: -9.18939208984375
    5. ' (' → logprob: -10.43939208984375
    6. 'self' → logprob: -11.31439208984375
    7. '(s' → logprob: -12.56439208984375
    8. ')' → logprob: -12.56439208984375
    9. ' ' → logprob: -12.81439208984375
    10. '<|end|>' → logprob: -13.06439208984375

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006284729111939669
    2. ' ,' → logprob: -5.256284713745117
    3. 'self' → logprob: -7.381284713745117
    4. '(self' → logprob: -7.881284713745117
    5. ',self' → logprob: -10.881284713745117
    6. ')' → logprob: -11.006284713745117
    7. ',r' → logprob: -12.256284713745117
    8. ' ' → logprob: -13.256284713745117
    9. ',
' → logprob: -13.506284713745117
    10. ' self' → logprob: -13.631284713745117

Token 183: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.21149584650993347
    2. ' r' → logprob: -1.7114958763122559
    3. 'self' → logprob: -4.836495876312256
    4. ' self' → logprob: -6.336495876312256
    5. 'row' → logprob: -8.711495399475098
    6. '   ' → logprob: -9.711495399475098
    7. ')' → logprob: -10.336495399475098
    8. ' row' → logprob: -10.336495399475098
    9. ' ' → logprob: -10.836495399475098
    10. '  ' → logprob: -12.711495399475098

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002188925864174962
    2. ' ,' → logprob: -6.2521891593933105
    3. ',c' → logprob: -9.002188682556152
    4. ',r' → logprob: -9.252188682556152
    5. ')' → logprob: -11.002188682556152
    6. ',int' → logprob: -11.627188682556152
    7. ',
' → logprob: -11.877188682556152
    8. ',row' → logprob: -13.377188682556152
    9. '   ' → logprob: -14.002188682556152
    10. ' ' → logprob: -14.377188682556152

Token 185: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.055915623903274536
    2. 'self' → logprob: -3.680915594100952
    3. ' c' → logprob: -4.305915832519531
    4. ')' → logprob: -4.555915832519531
    5. 'size' → logprob: -5.930915832519531
    6. ' self' → logprob: -6.930915832519531
    7. 'col' → logprob: -7.430915832519531
    8. ' col' → logprob: -8.305915832519531
    9. ' size' → logprob: -8.805915832519531
    10. '0' → logprob: -9.180915832519531

Token 186: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31607958674430847
    2. ')' → logprob: -1.3160796165466309
    3. ' ):' → logprob: -6.566079616546631
    4. ' )' → logprob: -6.816079616546631
    5. '):
' → logprob: -8.316079139709473
    6. ',' → logprob: -10.066079139709473
    7. ':' → logprob: -11.941079139709473
    8. '   ' → logprob: -11.941079139709473
    9. ')>' → logprob: -13.316079139709473
    10. ' and' → logprob: -13.941079139709473

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04476550221443176
    2. ' return' → logprob: -3.6697654724121094
    3. ' ' → logprob: -4.919765472412109
    4. '   ' → logprob: -5.419765472412109
    5. '0' → logprob: -6.419765472412109
    6. '    ' → logprob: -6.919765472412109
    7. ' and' → logprob: -6.919765472412109
    8. ' if' → logprob: -7.044765472412109
    9. ' (' → logprob: -7.044765472412109
    10. ' r' → logprob: -8.04476547241211

Token 188: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5239776968955994
    2. '0' → logprob: -1.0239777565002441
    3. ' return' → logprob: -3.023977756500244
    4. ' ' → logprob: -10.648977279663086
    5. '       ' → logprob: -11.148977279663086
    6. 'r' → logprob: -11.273977279663086
    7. 'if' → logprob: -11.398977279663086
    8. '   ' → logprob: -12.898977279663086
    9. ' if' → logprob: -13.148977279663086
    10. ' r' → logprob: -14.148977279663086

Token 189: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6936034560203552
    2. ' ' → logprob: -0.6936034560203552
    3. ' r' → logprob: -8.193603515625
    4. 'r' → logprob: -9.193603515625
    5. ' (' → logprob: -9.693603515625
    6. '(' → logprob: -12.193603515625
    7. ' c' → logprob: -12.443603515625
    8. 'c' → logprob: -12.943603515625
    9. '   ' → logprob: -13.193603515625
    10. ' ' → logprob: -13.318603515625

Token 190: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002712297427933663
    2. ' ' → logprob: -8.75027084350586
    3. 'r' → logprob: -9.62527084350586
    4. '(' → logprob: -10.12527084350586
    5. '(r' → logprob: -12.75027084350586
    6. ' (' → logprob: -13.50027084350586
    7. 'c' → logprob: -13.62527084350586
    8. ' r' → logprob: -13.87527084350586
    9. '   ' → logprob: -15.75027084350586
    10. '(c' → logprob: -17.00027084350586

Token 191: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.004141910932958126
    2. '<=' → logprob: -5.504141807556152
    3. ' <' → logprob: -10.129141807556152
    4. ' ' → logprob: -10.879141807556152
    5. '<' → logprob: -12.754141807556152
    6. ' ≤' → logprob: -14.754141807556152
    7. ',' → logprob: -15.004141807556152
    8. '
' → logprob: -15.379141807556152
    9. ' ' → logprob: -15.879141807556152
    10. '

' → logprob: -16.00414276123047

Token 192: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0003503626212477684
    2. ' r' → logprob: -8.000349998474121
    3. 'c' → logprob: -11.125349998474121
    4. ' c' → logprob: -16.500350952148438
    5. '	r' → logprob: -17.125350952148438
    6. '_r' → logprob: -17.250350952148438
    7. '<|end|>' → logprob: -17.375350952148438
    8. ' ' → logprob: -19.125350952148438
    9. '(r' → logprob: -21.125350952148438
    10. 'row' → logprob: -21.125350952148438

Token 193: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1278163194656372
    2. ' <' → logprob: -2.1278162002563477
    3. ' and' → logprob: -7.252816200256348
    4. 'and' → logprob: -8.752816200256348
    5. '<size' → logprob: -12.252816200256348
    6. ' ' → logprob: -12.252816200256348
    7. '<len' → logprob: -12.377816200256348
    8. '[' → logprob: -13.502816200256348
    9. '<=' → logprob: -13.627816200256348
    10. '<
' → logprob: -14.002816200256348

Token 194: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004625341854989529
    2. ' self' → logprob: -5.37962532043457
    3. 'len' → logprob: -12.62962532043457
    4. ' ' → logprob: -14.50462532043457
    5. '   ' → logprob: -14.87962532043457
    6. '       ' → logprob: -16.12962532043457
    7. ' len' → logprob: -16.50462532043457
    8. '=self' → logprob: -16.50462532043457
    9. '>' → logprob: -16.62962532043457
    10. '
' → logprob: -16.75462532043457

Token 195: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.0002330992283532396
    2. '.' → logprob: -8.375232696533203
    3. ' .' → logprob: -13.625232696533203
    4. 'size' → logprob: -13.625232696533203
    5. '.s' → logprob: -16.375232696533203
    6. ' size' → logprob: -17.250232696533203
    7. '<size' → logprob: -17.750232696533203
    8. '   ' → logprob: -18.000232696533203
    9. '	size' → logprob: -18.000232696533203
    10. '.
' → logprob: -18.250232696533203

Token 196: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.016068153083324432
    2. 'and' → logprob: -4.141067981719971
    3. ' ' → logprob: -10.391068458557129
    4. '    ' → logprob: -13.391068458557129
    5. ' an' → logprob: -14.391068458557129
    6. '        ' → logprob: -15.516068458557129
    7. '   ' → logprob: -15.641068458557129
    8. '  ' → logprob: -15.641068458557129
    9. ' a' → logprob: -15.766068458557129
    10. '	and' → logprob: -16.016067504882812

Token 197: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15035884082317352
    2. 'c' → logprob: -2.1503589153289795
    3. ' c' → logprob: -4.4003586769104
    4. ' ' → logprob: -4.5253586769104
    5. 'r' → logprob: -11.462859153747559
    6. '(c' → logprob: -11.900359153747559
    7. '   ' → logprob: -11.900359153747559
    8. '  ' → logprob: -12.212859153747559
    9. '	c' → logprob: -12.462859153747559
    10. ' r' → logprob: -12.587859153747559

Token 198: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5933834910392761
    2. 'c' → logprob: -0.8433834910392761
    3. ' c' → logprob: -4.343383312225342
    4. ' ' → logprob: -5.468383312225342
    5. 'r' → logprob: -10.6558837890625
    6. '(c' → logprob: -10.9058837890625
    7. '   ' → logprob: -12.0933837890625
    8. '  ' → logprob: -12.3433837890625
    9. ' r' → logprob: -12.3433837890625
    10. '	c' → logprob: -12.5933837890625

Token 199: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.9891576766967773
    2. ' <=' → logprob: -1.2391576766967773
    3. '<' → logprob: -1.3641576766967773
    4. '<=' → logprob: -3.1141576766967773
    5. '>' → logprob: -4.239157676696777
    6. ' >' → logprob: -4.614157676696777
    7. ' ' → logprob: -4.989157676696777
    8. ' c' → logprob: -5.739157676696777
    9. 'c' → logprob: -5.864157676696777
    10. '<size' → logprob: -8.614157676696777

Token 200: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.15779921412467957
    2. 'r' → logprob: -2.282799243927002
    3. 'len' → logprob: -4.282799243927002
    4. ' c' → logprob: -4.407799243927002
    5. '(c' → logprob: -4.782799243927002
    6. '(r' → logprob: -5.032799243927002
    7. ' r' → logprob: -6.782799243927002
    8. '(' → logprob: -7.657799243927002
    9. '(len' → logprob: -7.782799243927002
    10. ' (' → logprob: -7.907799243927002

Token 201: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03029731847345829
    2. '<=' → logprob: -3.53029727935791
    3. ' <' → logprob: -7.65529727935791
    4. ' ' → logprob: -10.03029727935791
    5. '<' → logprob: -10.65529727935791
    6. 'r' → logprob: -13.65529727935791
    7. ' ≤' → logprob: -13.90529727935791
    8. ' r' → logprob: -14.15529727935791
    9. '0' → logprob: -14.40529727935791
    10. '[' → logprob: -15.28029727935791

Token 202: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.014164687134325504
    2. ' r' → logprob: -4.264164924621582
    3. '	r' → logprob: -14.014164924621582
    4. '_r' → logprob: -15.014164924621582
    5. '=r' → logprob: -17.389163970947266
    6. ' ' → logprob: -17.889163970947266
    7. '(r' → logprob: -18.514163970947266
    8. '*r' → logprob: -19.014163970947266
    9. '<|end|>' → logprob: -19.514163970947266
    10. '[r' → logprob: -19.639163970947266

Token 203: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4507907629013062
    2. '<|end|>' → logprob: -1.4507907629013062
    3. '
' → logprob: -1.5757907629013062
    4. ' and' → logprob: -1.8257907629013062
    5. '       ' → logprob: -2.0757908821105957
    6. ',' → logprob: -5.075790882110596
    7. '<|end|>' → logprob: -5.200790882110596
    8. '    
' → logprob: -5.200790882110596
    9. ')' → logprob: -5.325790882110596
    10. ' ' → logprob: -5.825790882110596

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09147553145885468
    2. '
' → logprob: -2.716475486755371
    3. '    
' → logprob: -4.716475486755371
    4. ' 
' → logprob: -5.466475486755371
    5. '  
' → logprob: -6.216475486755371
    6. 'def' → logprob: -6.716475486755371
    7. '       ' → logprob: -6.841475486755371
    8. '\n' → logprob: -7.216475486755371
    9. '\' → logprob: -7.341475486755371
    10. ',' → logprob: -7.716475486755371

Token 205: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2834179699420929
    2. '   ' → logprob: -1.5334179401397705
    3. ' def' → logprob: -4.15841817855835
    4. '
' → logprob: -4.53341817855835
    5. '    
' → logprob: -5.78341817855835
    6. 'd' → logprob: -7.15841817855835
    7. ' 
' → logprob: -7.90841817855835
    8. '  
' → logprob: -9.283417701721191
    9. '	def' → logprob: -9.408417701721191
    10. '        
' → logprob: -9.783417701721191

Token 206: ' build' (ID: 3024)
  Prédit: ' build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.14231251180171967
    2. ' compute' → logprob: -2.767312526702881
    3. 'build' → logprob: -3.267312526702881
    4. '_build' → logprob: -4.892312526702881
    5. 'compute' → logprob: -5.017312526702881
    6. ' calculate' → logprob: -5.517312526702881
    7. ' generate' → logprob: -5.767312526702881
    8. ' def' → logprob: -5.767312526702881
    9. ' _' → logprob: -6.517312526702881
    10. ' get' → logprob: -7.142312526702881

Token 207: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -0.004766172729432583
    2. '_' → logprob: -6.00476598739624
    3. '_adj' → logprob: -6.37976598739624
    4. '_neighbors' → logprob: -7.87976598739624
    5. '_map' → logprob: -9.004766464233398
    6. '_graph' → logprob: -10.254766464233398
    7. '_connections' → logprob: -11.254766464233398
    8. '_edges' → logprob: -11.629766464233398
    9. ' _' → logprob: -12.504766464233398
    10. '_space' → logprob: -13.004766464233398

Token 208: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.00022415895364247262
    2. 'acency' → logprob: -8.875224113464355
    3. 'j' → logprob: -9.500224113464355
    4. '_j' → logprob: -12.125224113464355
    5. '_' → logprob: -13.250224113464355
    6. 'Jac' → logprob: -14.125224113464355
    7. ' jac' → logprob: -14.125224113464355
    8. 'jc' → logprob: -15.750224113464355
    9. ' _' → logprob: -16.250225067138672
    10. '
' → logprob: -16.375225067138672

Token 209: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.03571568801999092
    2. 'acency' → logprob: -3.5357155799865723
    3. 'acy' → logprob: -5.535715579986572
    4. '_' → logprob: -7.785715579986572
    5. '   ' → logprob: -7.910715579986572
    6. '_map' → logprob: -8.78571605682373
    7. '       ' → logprob: -8.91071605682373
    8. 'ancy' → logprob: -9.41071605682373
    9. 'y' → logprob: -9.41071605682373
    10. 'cy' → logprob: -9.66071605682373

Token 210: '(self' (ID: 2402)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0004129152512177825
    2. '_' → logprob: -7.875412940979004
    3. '(self' → logprob: -10.500412940979004
    4. '_list' → logprob: -13.375412940979004
    5. ' _' → logprob: -13.875412940979004
    6. '_maps' → logprob: -13.875412940979004
    7. '_(' → logprob: -14.500412940979004
    8. '(' → logprob: -14.625412940979004
    9. 's' → logprob: -15.500412940979004
    10. 'self' → logprob: -15.750412940979004

Token 211: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10497575998306274
    2. '_map' → logprob: -2.479975700378418
    3. '):
' → logprob: -4.604975700378418
    4. ')' → logprob: -5.354975700378418
    5. ',' → logprob: -7.854975700378418
    6. '_' → logprob: -8.104975700378418
    7. ')_' → logprob: -8.479975700378418
    8. 'map' → logprob: -9.229975700378418
    9. 'self' → logprob: -9.854975700378418
    10. '   ' → logprob: -10.104975700378418

Token 212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4498052223643754e-05
    2. ' for' → logprob: -11.250014305114746
    3. 'for' → logprob: -14.500014305114746
    4. '   ' → logprob: -14.750014305114746
    5. '      ' → logprob: -15.000014305114746
    6. ',' → logprob: -16.500015258789062
    7. '    ' → logprob: -17.000015258789062
    8. '     ' → logprob: -17.000015258789062
    9. '           ' → logprob: -17.125015258789062
    10. '        
' → logprob: -17.500015258789062

Token 213: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014666400849819183
    2. '       ' → logprob: -4.764666557312012
    3. ' for' → logprob: -5.139666557312012
    4. 'dire' → logprob: -9.014666557312012
    5. ' directions' → logprob: -10.389666557312012
    6. 'self' → logprob: -11.264666557312012
    7. '   ' → logprob: -12.264666557312012
    8. 'dirs' → logprob: -13.889666557312012
    9. 'd' → logprob: -14.014666557312012
    10. '	for' → logprob: -14.264666557312012

Token 214: ' In' (ID: 730)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006092204246670008
    2. ' for' → logprob: -5.506092071533203
    3. 'dire' → logprob: -6.631092071533203
    4. '       ' → logprob: -7.506092071533203
    5. ' directions' → logprob: -9.506092071533203
    6. 'self' → logprob: -10.506092071533203
    7. 'd' → logprob: -11.131092071533203
    8. 'For' → logprob: -11.381092071533203
    9. 'Directions' → logprob: -12.631092071533203
    10. '   ' → logprob: -12.881092071533203

Token 215: ' a' (ID: 261)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.13078604638576508
    2. 'range' → logprob: -2.1307859420776367
    3. 'for' → logprob: -6.380785942077637
    4. '   ' → logprob: -7.005785942077637
    5. ' for' → logprob: -7.255785942077637
    6. ' ' → logprob: -8.630785942077637
    7. '    ' → logprob: -9.380785942077637
    8. '       ' → logprob: -9.630785942077637
    9. ' self' → logprob: -10.130785942077637
    10. 'def' → logprob: -10.130785942077637

Token 216: ' triangular' (ID: 124454)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6826866269111633
    2. ' for' → logprob: -1.8076865673065186
    3. ' hex' → logprob: -2.5576865673065186
    4. 'hex' → logprob: -2.8076865673065186
    5. ' triangular' → logprob: -3.0576865673065186
    6. 'range' → logprob: -3.3076865673065186
    7. 'def' → logprob: -3.3076865673065186
    8. 'tri' → logprob: -3.9326865673065186
    9. '       ' → logprob: -4.557686805725098
    10. ' range' → logprob: -4.807686805725098

Token 217: ' lattice' (ID: 102427)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -1.174559473991394
    2. ' board' → logprob: -1.299559473991394
    3. ' grid' → logprob: -2.1745595932006836
    4. 'for' → logprob: -2.4245595932006836
    5. 'grid' → logprob: -2.5495595932006836
    6. ' lattice' → logprob: -2.7995595932006836
    7. ' for' → logprob: -3.0495595932006836
    8. 'l' → logprob: -4.549559593200684
    9. ' pattern' → logprob: -5.674559593200684
    10. 'pattern' → logprob: -5.799559593200684

Token 218: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036092204973101616
    2. '
' → logprob: -6.3786091804504395
    3. ',' → logprob: -7.0036091804504395
    4. ' for' → logprob: -7.8786091804504395
    5. '        
' → logprob: -7.8786091804504395
    6. 'for' → logprob: -9.503609657287598
    7. '<|end|>' → logprob: -10.128609657287598
    8. ',
' → logprob: -10.878609657287598
    9. '#' → logprob: -11.128609657287598
    10. '   ' → logprob: -11.503609657287598

Token 219: ' each' (ID: 2454)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.6749165654182434
    2. ' for' → logprob: -1.0499165058135986
    3. 'for' → logprob: -2.6749165058135986
    4. '       ' → logprob: -3.0499165058135986
    5. 'dire' → logprob: -3.7999165058135986
    6. 'd' → logprob: -6.799916744232178
    7. ' offsets' → logprob: -7.674916744232178
    8. '   ' → logprob: -8.92491626739502
    9. ' del' → logprob: -9.54991626739502
    10. ' ' → logprob: -9.79991626739502

Token 220: ' vertex' (ID: 25363)
  Prédit: ' vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertex' → logprob: -0.4258332848548889
    2. 'vertex' → logprob: -2.300833225250244
    3. 'r' → logprob: -2.425833225250244
    4. 'row' → logprob: -2.675833225250244
    5. ' row' → logprob: -2.925833225250244
    6. ' r' → logprob: -4.050833225250244
    7. ' node' → logprob: -5.425833225250244
    8. ' (' → logprob: -5.800833225250244
    9. 'Vertex' → logprob: -6.175833225250244
    10. ' cell' → logprob: -6.425833225250244

Token 221: ' connects' (ID: 47599)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.23116983473300934
    2. ' can' → logprob: -1.8561698198318481
    3. 'has' → logprob: -3.4811699390411377
    4. ' may' → logprob: -4.981169700622559
    5. 'can' → logprob: -5.106169700622559
    6. ' is' → logprob: -5.856169700622559
    7. '       ' → logprob: -6.981169700622559
    8. ' connects' → logprob: -6.981169700622559
    9. '   ' → logprob: -8.231169700622559
    10. 'may' → logprob: -8.481169700622559

Token 222: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.011130349710583687
    2. 'to' → logprob: -4.636130332946777
    3. '       ' → logprob: -6.761130332946777
    4. '        ' → logprob: -9.011130332946777
    5. '_to' → logprob: -10.511130332946777
    6. '   ' → logprob: -10.761130332946777
    7. ' ' → logprob: -11.761130332946777
    8. '	to' → logprob: -12.136130332946777
    9. ' in' → logprob: -12.261130332946777
    10. '    ' → logprob: -12.261130332946777

Token 223: ' up' (ID: 869)
  Prédit: ' up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.6716455221176147
    2. '[(' → logprob: -1.2966455221176147
    3. ' neighbors' → logprob: -3.0466456413269043
    4. ' vertices' → logprob: -3.4216456413269043
    5. ' [(' → logprob: -3.7966456413269043
    6. ' the' → logprob: -4.171645641326904
    7. ' three' → logprob: -4.171645641326904
    8. '[
' → logprob: -4.421645641326904
    9. '(r' → logprob: -4.546645641326904
    10. ' at' → logprob: -4.796645641326904

Token 224: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.018551744520664215
    2. ' to' → logprob: -4.518551826477051
    3. '       ' → logprob: -5.393551826477051
    4. '   ' → logprob: -6.018551826477051
    5. '_to' → logprob: -8.39355182647705
    6. '           ' → logprob: -9.64355182647705
    7. ' ' → logprob: -10.26855182647705
    8. 't' → logprob: -10.26855182647705
    9. '               ' → logprob: -10.51855182647705
    10. '     ' → logprob: -11.39355182647705

Token 225: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.767681360244751
    2. ' six' → logprob: -1.767681360244751
    3. ' ' → logprob: -1.892681360244751
    4. '3' → logprob: -2.517681360244751
    5. ' three' → logprob: -2.767681360244751
    6. 'six' → logprob: -3.267681360244751
    7. 'three' → logprob: -3.642681360244751
    8. '5' → logprob: -6.267681121826172
    9. '4' → logprob: -6.892681121826172
    10. ' the' → logprob: -6.892681121826172

Token 226: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.7091026902198792
    2. 'six' → logprob: -1.3341026306152344
    3. 'three' → logprob: -2.0841026306152344
    4. '3' → logprob: -2.2091026306152344
    5. '4' → logprob: -5.959102630615234
    6. 'four' → logprob: -6.209102630615234
    7. '5' → logprob: -6.209102630615234
    8. ' six' → logprob: -6.834102630615234
    9. 'five' → logprob: -6.959102630615234
    10. ' three' → logprob: -8.209102630615234

Token 227: ' others' (ID: 5036)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.014268931932747364
    2. ' neighbors' → logprob: -4.51426887512207
    3. 'neighbors' → logprob: -6.38926887512207
    4. 'dire' → logprob: -6.88926887512207
    5. '   ' → logprob: -8.51426887512207
    6. '       ' → logprob: -9.38926887512207
    7. ' offsets' → logprob: -9.63926887512207
    8. 'd' → logprob: -10.01426887512207
    9. ' for' → logprob: -10.26426887512207
    10. '_neighbors' → logprob: -11.51426887512207

Token 228: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008252141997218132
    2. ',' → logprob: -5.508252143859863
    3. '<|end|>' → logprob: -6.008252143859863
    4. '        
' → logprob: -7.133252143859863
    5. ':' → logprob: -8.508252143859863
    6. '<|end|>' → logprob: -9.133252143859863
    7. ' for' → logprob: -9.133252143859863
    8. '
' → logprob: -9.258252143859863
    9. '.' → logprob: -9.758252143859863
    10. '        ' → logprob: -9.883252143859863

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010127831774298102
    2. ' for' → logprob: -10.500101089477539
    3. '        ' → logprob: -10.500101089477539
    4. '        
' → logprob: -11.000101089477539
    5. '           ' → logprob: -12.250101089477539
    6. '      ' → logprob: -12.500101089477539
    7. '   ' → logprob: -12.625101089477539
    8. ',' → logprob: -12.875101089477539
    9. 'for' → logprob: -12.875101089477539
    10. '    ' → logprob: -13.125101089477539

Token 230: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7283870577812195
    2. '       ' → logprob: -1.2283871173858643
    3. ' for' → logprob: -1.6033871173858643
    4. 'dire' → logprob: -4.353386878967285
    5. ' directions' → logprob: -4.603386878967285
    6. 'd' → logprob: -8.728386878967285
    7. 'r' → logprob: -9.103386878967285
    8. '   ' → logprob: -10.228386878967285
    9. 'dirs' → logprob: -10.728386878967285
    10. ' offsets' → logprob: -10.978386878967285

Token 231: ' Ad' (ID: 2686)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45140624046325684
    2. 'dire' → logprob: -1.7014062404632568
    3. ' for' → logprob: -2.576406240463257
    4. ' directions' → logprob: -2.701406240463257
    5. '       ' → logprob: -3.451406240463257
    6. 'd' → logprob: -5.326406478881836
    7. 'dirs' → logprob: -7.576406478881836
    8. 'self' → logprob: -9.076406478881836
    9. ' offsets' → logprob: -9.201406478881836
    10. '   ' → logprob: -9.451406478881836

Token 232: 'jac' (ID: 77250)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2659192383289337
    2. 'jac' → logprob: -1.5159192085266113
    3. 'd' → logprob: -4.515919208526611
    4. '       ' → logprob: -6.515919208526611
    5. '   ' → logprob: -7.640919208526611
    6. 'dj' → logprob: -8.26591968536377
    7. '
' → logprob: -8.51591968536377
    8. '    ' → logprob: -9.51591968536377
    9. 'dr' → logprob: -9.64091968536377
    10. '      ' → logprob: -9.76591968536377

Token 233: 'ency' (ID: 2799)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.046809110790491104
    2. 'ency' → logprob: -3.421809196472168
    3. 'acy' → logprob: -5.296809196472168
    4. 'acent' → logprob: -6.171809196472168
    5. '#' → logprob: -6.796809196472168
    6. 'ac' → logprob: -6.921809196472168
    7. '   ' → logprob: -7.046809196472168
    8. 'ents' → logprob: -7.921809196472168
    9. 'a' → logprob: -7.921809196472168
    10. '       ' → logprob: -8.171809196472168

Token 234: ' rules' (ID: 9607)
  Prédit: '_offsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_offsets' → logprob: -0.16803981363773346
    2. '_d' → logprob: -2.1680397987365723
    3. 'd' → logprob: -3.4180397987365723
    4. ' =' → logprob: -6.043039798736572
    5. '_dirs' → logprob: -7.043039798736572
    6. 's' → logprob: -7.168039798736572
    7. '   ' → logprob: -7.293039798736572
    8. 'dire' → logprob: -7.543039798736572
    9. '_list' → logprob: -7.668039798736572
    10. '=' → logprob: -8.04304027557373

Token 235: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1799629181623459
    2. ':' → logprob: -1.9299628734588623
    3. ' =' → logprob: -5.179963111877441
    4. ' for' → logprob: -5.554963111877441
    5. '=' → logprob: -5.679963111877441
    6. ',' → logprob: -6.054963111877441
    7. '   ' → logprob: -7.054963111877441
    8. ' are' → logprob: -7.179963111877441
    9. '        ' → logprob: -7.929963111877441
    10. '<|end|>' → logprob: -8.054963111877441

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022819217294454575
    2. ' for' → logprob: -3.8978192806243896
    3. 'for' → logprob: -7.2728190422058105
    4. ' directions' → logprob: -7.6478190422058105
    5. '        ' → logprob: -7.7728190422058105
    6. '           ' → logprob: -8.647819519042969
    7. '   ' → logprob: -8.772819519042969
    8. '        
' → logprob: -9.397819519042969
    9. '    ' → logprob: -10.147819519042969
    10. '#' → logprob: -10.272819519042969

Token 237: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14581242203712463
    2. ' for' → logprob: -2.895812511444092
    3. 'for' → logprob: -3.520812511444092
    4. ' directions' → logprob: -3.645812511444092
    5. 'dire' → logprob: -4.520812511444092
    6. 'neighbors' → logprob: -5.645812511444092
    7. 'adj' → logprob: -6.270812511444092
    8. 'd' → logprob: -6.645812511444092
    9. 'r' → logprob: -6.645812511444092
    10. ' neighbors' → logprob: -6.770812511444092

Token 238: ' Up' (ID: 4686)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.8281465768814087
    2. ' directions' → logprob: -1.3281465768814087
    3. 'for' → logprob: -1.7031465768814087
    4. ' for' → logprob: -2.828146457672119
    5. '       ' → logprob: -4.078146457672119
    6. 'd' → logprob: -4.453146457672119
    7. 'neighbors' → logprob: -4.703146457672119
    8. 'adj' → logprob: -4.828146457672119
    9. '#' → logprob: -5.828146457672119
    10. 'dirs' → logprob: -6.078146457672119

Token 239: '-left' (ID: 17007)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7061778903007507
    2. ',' → logprob: -1.7061779499053955
    3. '   ' → logprob: -1.8311779499053955
    4. '       ' → logprob: -2.8311779499053955
    5. '_neighbors' → logprob: -3.7061779499053955
    6. ':' → logprob: -3.9561779499053955
    7. '=' → logprob: -4.206177711486816
    8. '_offsets' → logprob: -4.706177711486816
    9. 's' → logprob: -4.956177711486816
    10. 'r' → logprob: -5.706177711486816

Token 240: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0388160943984985
    2. ',' → logprob: -1.2888160943984985
    3. ' =' → logprob: -1.2888160943984985
    4. ':' → logprob: -3.038815975189209
    5. ' (' → logprob: -4.913815975189209
    6. ',
' → logprob: -5.163815975189209
    7. '=' → logprob: -5.288815975189209
    8. '   ' → logprob: -5.413815975189209
    9. '(' → logprob: -5.788815975189209
    10. ' ,' → logprob: -6.038815975189209

Token 241: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.47596117854118347
    2. '(r' → logprob: -0.9759612083435059
    3. ' if' → logprob: -7.350961208343506
    4. '       ' → logprob: -7.350961208343506
    5. ' r' → logprob: -8.350960731506348
    6. 'r' → logprob: -8.850960731506348
    7. 'if' → logprob: -9.100960731506348
    8. '        ' → logprob: -10.725960731506348
    9. ' ' → logprob: -10.850960731506348
    10. '[r' → logprob: -10.850960731506348

Token 242: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0921942703134846e-05
    2. ' r' → logprob: -11.75001049041748
    3. 'self' → logprob: -13.75001049041748
    4. '(r' → logprob: -14.25001049041748
    5. '   ' → logprob: -14.62501049041748
    6. '
' → logprob: -15.75001049041748
    7. ',' → logprob: -16.000011444091797
    8. ')' → logprob: -16.125011444091797
    9. '       ' → logprob: -16.625011444091797
    10. ',r' → logprob: -16.625011444091797

Token 243: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16108061373233795
    2. ' -' → logprob: -1.9110805988311768
    3. ' ' → logprob: -7.536080837249756
    4. '   ' → logprob: -8.286080360412598
    5. ',' → logprob: -10.286080360412598
    6. ' ,' → logprob: -11.536080360412598
    7. '  ' → logprob: -12.036080360412598
    8. ')' → logprob: -12.286080360412598
    9. '       ' → logprob: -12.411080360412598
    10. ' -,' → logprob: -12.661080360412598

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1994775377388578e-05
    2. ' ' → logprob: -11.375012397766113
    3. '   ' → logprob: -14.875012397766113
    4. '<|end|>' → logprob: -17.000011444091797
    5. ')' → logprob: -18.125011444091797
    6. '
' → logprob: -18.250011444091797
    7. '```' → logprob: -18.375011444091797
    8. '2' → logprob: -18.625011444091797
    9. '  ' → logprob: -18.625011444091797
    10. '-' → logprob: -19.000011444091797

Token 245: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005309910629875958
    2. ',c' → logprob: -7.750531196594238
    3. ' ,' → logprob: -9.250531196594238
    4. ',
' → logprob: -13.000531196594238
    5. '   ' → logprob: -13.625531196594238
    6. ')' → logprob: -15.750531196594238
    7. 'c' → logprob: -15.875531196594238
    8. ',

' → logprob: -16.375530242919922
    9. ' ' → logprob: -16.875530242919922
    10. '	' → logprob: -17.000530242919922

Token 246: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04301106184720993
    2. ' c' → logprob: -3.168010950088501
    3. '   ' → logprob: -12.168010711669922
    4. ' ' → logprob: -12.543010711669922
    5. '    ' → logprob: -13.918010711669922
    6. '  ' → logprob: -14.168010711669922
    7. '	c' → logprob: -14.543010711669922
    8. '
' → logprob: -15.043010711669922
    9. '       ' → logprob: -15.793010711669922
    10. ')c' → logprob: -15.793010711669922

Token 247: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12782827019691467
    2. ')' → logprob: -2.252828359603882
    3. ' -' → logprob: -4.877828121185303
    4. '),' → logprob: -5.377828121185303
    5. ' )' → logprob: -6.377828121185303
    6. ' ),' → logprob: -8.002828598022461
    7. '   ' → logprob: -8.627828598022461
    8. ')
' → logprob: -8.627828598022461
    9. '),
' → logprob: -8.877828598022461
    10. ' ' → logprob: -10.877828598022461

Token 248: '1' (ID: 16)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002070087008178234
    2. ' c' → logprob: -6.62706995010376
    3. '-' → logprob: -8.002070426940918
    4. '   ' → logprob: -8.502070426940918
    5. ')' → logprob: -9.377070426940918
    6. '0' → logprob: -9.877070426940918
    7. '1' → logprob: -10.752070426940918
    8. '       ' → logprob: -11.252070426940918
    9. ' ' → logprob: -11.752070426940918
    10. ')c' → logprob: -12.002070426940918

Token 249: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3133586049079895
    2. ')
' → logprob: -1.3133585453033447
    3. ')
' → logprob: -9.813358306884766
    4. '),' → logprob: -10.938358306884766
    5. '       ' → logprob: -11.313358306884766
    6. ')

' → logprob: -12.438358306884766
    7. '),
' → logprob: -12.938358306884766
    8. ' )
' → logprob: -13.063358306884766
    9. '   ' → logprob: -13.313358306884766
    10. ' )' → logprob: -13.938358306884766

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03905361890792847
    2. ')' → logprob: -3.4140536785125732
    3. ',' → logprob: -5.789053440093994
    4. '
' → logprob: -7.164053440093994
    5. '   ' → logprob: -7.664053440093994
    6. ',
' → logprob: -8.414053916931152
    7. '        
' → logprob: -8.539053916931152
    8. ')
' → logprob: -9.164053916931152
    9. '           ' → logprob: -9.164053916931152
    10. '' → logprob: -9.914053916931152

Token 251: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003815392032265663
    2. ',' → logprob: -6.253815174102783
    3. '#' (adapté à ' #') → logprob: -7.003815174102783
    4. ')' → logprob: -8.378815650939941
    5. '   ' → logprob: -8.503815650939941
    6. '
' → logprob: -9.378815650939941
    7. ',
' → logprob: -9.628815650939941
    8. 'r' → logprob: -9.878815650939941
    9. '           ' → logprob: -10.003815650939941
    10. '\' → logprob: -10.128815650939941

Token 252: ' Up' (ID: 4686)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8326978087425232
    2. 'Up' → logprob: -2.082697868347168
    3. 'r' → logprob: -2.707697868347168
    4. '   ' → logprob: -2.957697868347168
    5. ' Up' → logprob: -2.957697868347168
    6. ' (' → logprob: -2.957697868347168
    7. '(r' → logprob: -3.082697868347168
    8. ',' → logprob: -3.207697868347168
    9. '(' → logprob: -3.207697868347168
    10. ' up' → logprob: -4.082697868347168

Token 253: '-right' (ID: 14810)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01109203603118658
    2. '-left' → logprob: -5.261092185974121
    3. ',' → logprob: -5.886092185974121
    4. ' -' → logprob: -6.261092185974121
    5. '-,' → logprob: -7.011092185974121
    6. ' ,' → logprob: -9.261092185974121
    7. '-
' → logprob: -9.886092185974121
    8. ' -,' → logprob: -10.011092185974121
    9. ',-' → logprob: -10.761092185974121
    10. '   ' → logprob: -11.886092185974121

Token 254: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013035722076892853
    2. '(r' → logprob: -6.751303672790527
    3. ' (' → logprob: -10.251303672790527
    4. ' :' → logprob: -10.251303672790527
    5. ',' → logprob: -10.376303672790527
    6. '(' → logprob: -11.001303672790527
    7. '=' → logprob: -12.251303672790527
    8. 'r' → logprob: -12.251303672790527
    9. ')' → logprob: -13.751303672790527
    10. ':(' → logprob: -14.251303672790527

Token 255: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.20168891549110413
    2. '(r' → logprob: -1.7016888856887817
    3. '(' → logprob: -8.201688766479492
    4. ' r' → logprob: -14.451688766479492
    5. ' ' → logprob: -15.076688766479492
    6. 'r' → logprob: -15.326688766479492
    7. ' ' → logprob: -16.326688766479492
    8. ',' → logprob: -16.701688766479492
    9. '(s' → logprob: -16.951688766479492
    10. ')' → logprob: -17.201688766479492

Token 256: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005261033773422241
    2. ' r' → logprob: -5.255260944366455
    3. '(r' → logprob: -10.755261421203613
    4. ' (' → logprob: -12.880261421203613
    5. '_r' → logprob: -14.130261421203613
    6. '	r' → logprob: -14.380261421203613
    7. '   ' → logprob: -14.755261421203613
    8. ' ' → logprob: -15.255261421203613
    9. ',r' → logprob: -15.380261421203613
    10. ')' → logprob: -15.505261421203613

Token 257: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00038300611777231097
    2. ' -' → logprob: -8.125383377075195
    3. ',' → logprob: -9.375383377075195
    4. ' ' → logprob: -13.875383377075195
    5. '   ' → logprob: -14.500383377075195
    6. ' ,' → logprob: -14.875383377075195
    7. '-
' → logprob: -15.750383377075195
    8. '  ' → logprob: -17.000383377075195
    9. ')' → logprob: -17.250383377075195
    10. '-,' → logprob: -17.250383377075195

Token 258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.976922744186595e-05
    2. ' ' → logprob: -10.375040054321289
    3. '-' → logprob: -11.750040054321289
    4. '<|end|>' → logprob: -15.625040054321289
    5. ' -' → logprob: -16.00004005432129
    6. 'c' → logprob: -16.37504005432129
    7. ')' → logprob: -16.37504005432129
    8. 'r' → logprob: -17.37504005432129
    9. '   ' → logprob: -17.62504005432129
    10. ' c' → logprob: -17.75004005432129

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7133641196996905e-05
    2. ' ,' → logprob: -11.00002670288086
    3. ',c' → logprob: -11.50002670288086
    4. ',
' → logprob: -16.25002670288086
    5. ')' → logprob: -17.12502670288086
    6. '<|end|>' → logprob: -17.25002670288086
    7. '‌,' → logprob: -18.00002670288086
    8. 'c' → logprob: -18.12502670288086
    9. '),' → logprob: -18.25002670288086
    10. ',

' → logprob: -18.37502670288086

Token 260: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5759400129318237
    2. 'c' → logprob: -0.8259400129318237
    3. ')c' → logprob: -15.575940132141113
    4. ' ' → logprob: -16.075939178466797
    5. ' ' → logprob: -16.575939178466797
    6. '	c' → logprob: -16.700939178466797
    7. '```' → logprob: -17.075939178466797
    8. ')' → logprob: -17.075939178466797
    9. ',' → logprob: -17.575939178466797
    10. ',c' → logprob: -17.825939178466797

Token 261: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00025800178991630673
    2. ' )' → logprob: -8.625258445739746
    3. ')
' → logprob: -10.500258445739746
    4. '<|end|>' → logprob: -10.750258445739746
    5. ' ' → logprob: -11.375258445739746
    6. ')c' → logprob: -12.250258445739746
    7. '+' → logprob: -13.000258445739746
    8. '   ' → logprob: -13.000258445739746
    9. ')>' → logprob: -13.250258445739746
    10. '0' → logprob: -13.625258445739746

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01299244724214077
    2. '#' → logprob: -4.3879923820495605
    3. '   ' → logprob: -7.7629923820495605
    4. ' #' → logprob: -10.512992858886719
    5. ',' → logprob: -11.137992858886719
    6. '     ' → logprob: -13.012992858886719
    7. ')' → logprob: -13.012992858886719
    8. '           ' → logprob: -13.012992858886719
    9. '      ' → logprob: -13.262992858886719
    10. '        
' → logprob: -13.262992858886719

Token 263: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.2960914075374603
    2. '       ' → logprob: -1.4210914373397827
    3. ' #' → logprob: -4.296091556549072
    4. '   ' → logprob: -6.921091556549072
    5. ' ' → logprob: -9.046091079711914
    6. '     ' → logprob: -10.671091079711914
    7. '	' → logprob: -11.171091079711914
    8. '        ' → logprob: -11.296091079711914
    9. '      ' → logprob: -11.421091079711914
    10. '  ' → logprob: -11.921091079711914

Token 264: ' Left' (ID: 26982)
  Prédit: 'Down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Down' → logprob: -0.16442647576332092
    2. ' Down' → logprob: -2.039426565170288
    3. '#' → logprob: -4.539426326751709
    4. '       ' → logprob: -5.664426326751709
    5. 'down' → logprob: -5.914426326751709
    6. 'Left' → logprob: -6.914426326751709
    7. ' #' → logprob: -7.039426326751709
    8. ' down' → logprob: -7.289426326751709
    9. '   ' → logprob: -7.414426326751709
    10. ' ' → logprob: -7.789426326751709

Token 265: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006398845580406487
    2. ',' → logprob: -7.750639915466309
    3. ' :' → logprob: -9.125639915466309
    4. '(r' → logprob: -10.125639915466309
    5. ' (' → logprob: -10.375639915466309
    6. '(' → logprob: -11.375639915466309
    7. ':(' → logprob: -12.500639915466309
    8. '   ' → logprob: -12.750639915466309
    9. ' =' → logprob: -12.875639915466309
    10. '=' → logprob: -13.375639915466309

Token 266: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.01108542736619711
    2. '(r' → logprob: -4.511085510253906
    3. '(' → logprob: -10.261085510253906
    4. ' ' → logprob: -13.136085510253906
    5. ' r' → logprob: -14.386085510253906
    6. ' ' → logprob: -17.011085510253906
    7. 'r' → logprob: -17.261085510253906
    8. ',' → logprob: -17.511085510253906
    9. '(c' → logprob: -19.136085510253906
    10. '(s' → logprob: -19.261085510253906

Token 267: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002476016292348504
    2. ' r' → logprob: -6.002476215362549
    3. '   ' → logprob: -16.00247573852539
    4. ' ' → logprob: -16.75247573852539
    5. 'row' → logprob: -16.75247573852539
    6. ',r' → logprob: -16.75247573852539
    7. '	r' → logprob: -17.12747573852539
    8. '_r' → logprob: -17.50247573852539
    9. '    ' → logprob: -17.50247573852539
    10. ',' → logprob: -17.75247573852539

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028486251831054688
    2. ' ,' → logprob: -6.3778486251831055
    3. ' ' → logprob: -7.3778486251831055
    4. ',c' → logprob: -7.6278486251831055
    5. ')' → logprob: -11.252848625183105
    6. '   ' → logprob: -11.502848625183105
    7. ',r' → logprob: -12.502848625183105
    8. '  ' → logprob: -12.877848625183105
    9. '	' → logprob: -13.877848625183105
    10. ',current' → logprob: -14.127848625183105

Token 269: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5759415030479431
    2. ' c' → logprob: -0.8259415030479431
    3. '   ' → logprob: -14.07594108581543
    4. ' ' → logprob: -14.82594108581543
    5. '	c' → logprob: -14.95094108581543
    6. '     ' → logprob: -15.57594108581543
    7. '    ' → logprob: -16.07594108581543
    8. ')c' → logprob: -16.07594108581543
    9. '       ' → logprob: -16.32594108581543
    10. '  ' → logprob: -16.82594108581543

Token 270: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003610163228586316
    2. ' -' → logprob: -5.628610134124756
    3. ')' → logprob: -12.003610610961914
    4. '-)' → logprob: -12.753610610961914
    5. ' )' → logprob: -14.003610610961914
    6. ',' → logprob: -15.753610610961914
    7. ' ' → logprob: -16.128610610961914
    8. '1' → logprob: -17.503610610961914
    9. '-
' → logprob: -17.878610610961914
    10. '+' → logprob: -17.878610610961914

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012964145571459085
    2. '-' → logprob: -9.000129699707031
    3. ' ' → logprob: -12.375129699707031
    4. '```' → logprob: -13.750129699707031
    5. ')' → logprob: -14.875129699707031
    6. '   ' → logprob: -15.625129699707031
    7. ' -' → logprob: -15.875129699707031
    8. '
' → logprob: -16.37512969970703
    9. '  ' → logprob: -17.62512969970703
    10. 'c' → logprob: -18.00012969970703

Token 272: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10112924873828888
    2. ')
' → logprob: -2.3511292934417725
    3. '       ' → logprob: -7.226129055023193
    4. ' )' → logprob: -9.476129531860352
    5. ' )
' → logprob: -9.726129531860352
    6. ')
' → logprob: -10.476129531860352
    7. '   ' → logprob: -10.601129531860352
    8. ')

' → logprob: -12.726129531860352
    9. '),' → logprob: -14.851129531860352
    10. ' ' → logprob: -15.101129531860352

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023694146424531937
    2. '#' → logprob: -3.7736940383911133
    3. ' #' → logprob: -7.898694038391113
    4. '   ' → logprob: -9.648694038391113
    5. '     ' → logprob: -12.523694038391113
    6. '      ' → logprob: -12.898694038391113
    7. '           ' → logprob: -13.273694038391113
    8. '	' → logprob: -13.523694038391113
    9. '        ' → logprob: -13.648694038391113
    10. ' ' → logprob: -14.023694038391113

Token 274: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.12166683375835419
    2. '       ' → logprob: -2.37166690826416
    3. ' #' → logprob: -3.87166690826416
    4. '   ' → logprob: -8.12166690826416
    5. ' ' → logprob: -10.12166690826416
    6. '     ' → logprob: -11.12166690826416
    7. '[' → logprob: -11.49666690826416
    8. '      ' → logprob: -12.12166690826416
    9. '(' → logprob: -12.37166690826416
    10. '        ' → logprob: -12.49666690826416

Token 275: ' Right' (ID: 16354)
  Prédit: 'Right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Right' → logprob: -0.030826659873127937
    2. ' Right' → logprob: -3.5308265686035156
    3. '       ' → logprob: -7.405826568603516
    4. '#' → logprob: -8.530826568603516
    5. '   ' → logprob: -9.280826568603516
    6. ' right' → logprob: -9.780826568603516
    7. 'Down' → logprob: -9.905826568603516
    8. 'right' → logprob: -10.655826568603516
    9. ' #' → logprob: -11.530826568603516
    10. ' ' → logprob: -11.780826568603516

Token 276: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036205046344548464
    2. ' :' → logprob: -5.878620624542236
    3. '(r' → logprob: -8.003620147705078
    4. ' (' → logprob: -8.378620147705078
    5. ',' → logprob: -8.503620147705078
    6. ':(' → logprob: -11.378620147705078
    7. ' :(' → logprob: -11.628620147705078
    8. '(' → logprob: -11.878620147705078
    9. '=' → logprob: -12.378620147705078
    10. ')' → logprob: -12.628620147705078

Token 277: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.038136620074510574
    2. '(r' → logprob: -3.2881367206573486
    3. '(' → logprob: -9.28813648223877
    4. ' r' → logprob: -13.53813648223877
    5. ' ' → logprob: -14.41313648223877
    6. 'r' → logprob: -15.41313648223877
    7. '(s' → logprob: -15.53813648223877
    8. '(self' → logprob: -16.538137435913086
    9. '(space' → logprob: -17.163137435913086
    10. ' ' → logprob: -17.413137435913086

Token 278: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.018151935189962387
    2. ' r' → logprob: -4.018151760101318
    3. '(r' → logprob: -14.768152236938477
    4. ',' → logprob: -15.018152236938477
    5. ',r' → logprob: -15.018152236938477
    6. '_r' → logprob: -15.393152236938477
    7. '	r' → logprob: -15.768152236938477
    8. ')' → logprob: -15.893152236938477
    9. ' ' → logprob: -16.018152236938477
    10. '   ' → logprob: -16.018152236938477

Token 279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.1928003813372925e-05
    2. ' ,' → logprob: -10.000051498413086
    3. ',c' → logprob: -12.125051498413086
    4. ')' → logprob: -15.125051498413086
    5. ' ' → logprob: -15.125051498413086
    6. ',r' → logprob: -15.750051498413086
    7. '   ' → logprob: -16.000051498413086
    8. ' c' → logprob: -16.750051498413086
    9. 'c' → logprob: -16.750051498413086
    10. ',
' → logprob: -17.125051498413086

Token 280: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.47407856583595276
    2. ' c' → logprob: -0.9740785360336304
    3. '+' → logprob: -14.599078178405762
    4. ')c' → logprob: -14.849078178405762
    5. ' ' → logprob: -15.349078178405762
    6. ')' → logprob: -15.724078178405762
    7. '+c' → logprob: -15.974078178405762
    8. '	c' → logprob: -16.349079132080078
    9. '   ' → logprob: -16.599079132080078
    10. '    ' → logprob: -17.349079132080078

Token 281: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00011129142512800172
    2. ' +' → logprob: -9.37511157989502
    3. ')' → logprob: -10.75011157989502
    4. '+)' → logprob: -12.50011157989502
    5. '+
' → logprob: -14.00011157989502
    6. '1' → logprob: -15.75011157989502
    7. ',' → logprob: -16.125110626220703
    8. '   ' → logprob: -17.875110626220703
    9. ' ' → logprob: -18.375110626220703
    10. '-' → logprob: -19.125110626220703

Token 282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.129266067640856e-05
    2. ')' → logprob: -11.000020980834961
    3. ' ' → logprob: -12.875020980834961
    4. '0' → logprob: -13.125020980834961
    5. ' )' → logprob: -17.00002098083496
    6. '  ' → logprob: -18.50002098083496
    7. '   ' → logprob: -18.62502098083496
    8. '```' → logprob: -18.75002098083496
    9. '<|end|>' → logprob: -19.37502098083496
    10. '2' → logprob: -20.25002098083496

Token 283: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03603794053196907
    2. '       ' → logprob: -3.6610379219055176
    3. ')
' → logprob: -4.661037921905518
    4. '   ' → logprob: -9.036038398742676
    5. ' )' → logprob: -9.661038398742676
    6. '#' → logprob: -10.286038398742676
    7. ' )
' → logprob: -12.286038398742676
    8. ')
' → logprob: -12.286038398742676
    9. ')#' → logprob: -13.036038398742676
    10. ')

' → logprob: -13.536038398742676

Token 284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2531963586807251
    2. '#' → logprob: -1.503196358680725
    3. ' #' → logprob: -7.3781962394714355
    4. '   ' → logprob: -7.5031962394714355
    5. '```' → logprob: -10.753196716308594
    6. '     ' → logprob: -11.253196716308594
    7. '	' → logprob: -11.378196716308594
    8. ',' → logprob: -11.378196716308594
    9. '      ' → logprob: -11.878196716308594
    10. '        ' → logprob: -12.378196716308594

Token 285: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.2113446444272995
    2. '       ' → logprob: -1.836344599723816
    3. 'for' → logprob: -3.9613447189331055
    4. 'Down' → logprob: -4.9613447189331055
    5. ' #' → logprob: -6.4613447189331055
    6. 'down' → logprob: -6.9613447189331055
    7. 'dire' → logprob: -6.9613447189331055
    8. ' for' → logprob: -7.9613447189331055
    9. '   ' → logprob: -8.211344718933105
    10. 'def' → logprob: -8.461344718933105

Token 286: ' Down' (ID: 8755)
  Prédit: 'Down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Down' → logprob: -0.0004546254931483418
    2. 'down' → logprob: -7.875454425811768
    3. ' Down' → logprob: -10.000454902648926
    4. '_down' → logprob: -11.625454902648926
    5. '       ' → logprob: -11.750454902648926
    6. 'def' → logprob: -12.500454902648926
    7. '#' → logprob: -12.875454902648926
    8. '   ' → logprob: -13.250454902648926
    9. 'for' → logprob: -13.375454902648926
    10. 'Below' → logprob: -13.875454902648926

Token 287: '-left' (ID: 17007)
  Prédit: '-left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-left' → logprob: -0.0797811895608902
    2. '-' → logprob: -2.5797812938690186
    3. '-right' → logprob: -7.2047810554504395
    4. '_left' → logprob: -9.579781532287598
    5. ' -' → logprob: -10.329781532287598
    6. ':' → logprob: -10.329781532287598
    7. '-down' → logprob: -12.329781532287598
    8. 'Left' → logprob: -12.704781532287598
    9. '+' → logprob: -13.079781532287598
    10. ',' → logprob: -13.954781532287598

Token 288: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013040454359725118
    2. '(r' → logprob: -6.7513041496276855
    3. ' (' → logprob: -9.626303672790527
    4. ' :' → logprob: -9.876303672790527
    5. ' =' → logprob: -12.001303672790527
    6. '(' → logprob: -12.501303672790527
    7. '=' → logprob: -12.876303672790527
    8. 'r' → logprob: -13.501303672790527
    9. ',' → logprob: -13.751303672790527
    10. ':r' → logprob: -14.876303672790527

Token 289: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.01685813069343567
    2. '(r' → logprob: -4.141858100891113
    3. '(' → logprob: -7.141858100891113
    4. ' r' → logprob: -10.641858100891113
    5. 'r' → logprob: -11.891858100891113
    6. ' ' → logprob: -14.641858100891113
    7. '"' → logprob: -15.266858100891113
    8. ')' → logprob: -15.516858100891113
    9. '(s' → logprob: -15.766858100891113
    10. '`' → logprob: -15.766858100891113

Token 290: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0010359067237004638
    2. ' r' → logprob: -6.876035690307617
    3. '(r' → logprob: -12.751035690307617
    4. ')' → logprob: -16.501035690307617
    5. '   ' → logprob: -17.376035690307617
    6. '```' → logprob: -17.626035690307617
    7. ' (' → logprob: -17.876035690307617
    8. 'self' → logprob: -18.126035690307617
    9. '	r' → logprob: -18.501035690307617
    10. ',' → logprob: -18.501035690307617

Token 291: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0010744920000433922
    2. ' +' → logprob: -6.876074314117432
    3. ',' → logprob: -10.50107479095459
    4. '+,' → logprob: -11.62607479095459
    5. '+
' → logprob: -12.25107479095459
    6. '
' → logprob: -16.626073837280273
    7. ' ,' → logprob: -16.626073837280273
    8. '-' → logprob: -16.751073837280273
    9. '+

' → logprob: -17.001073837280273
    10. '   ' → logprob: -17.126073837280273

Token 292: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.249780638725497e-05
    2. ' ' → logprob: -10.375032424926758
    3. '   ' → logprob: -15.125032424926758
    4. '0' → logprob: -15.812532424926758
    5. '
' → logprob: -15.875032424926758
    6. ',' → logprob: -15.937532424926758
    7. '```' → logprob: -16.437532424926758
    8. '  ' → logprob: -16.687532424926758
    9. '<|end|>' → logprob: -16.937532424926758
    10. ' ,' → logprob: -17.500032424926758

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.786196975852363e-05
    2. ' ,' → logprob: -10.500038146972656
    3. ',c' → logprob: -11.875038146972656
    4. ')' → logprob: -13.250038146972656
    5. ',
' → logprob: -14.500038146972656
    6. '),' → logprob: -15.125038146972656
    7. '<|end|>' → logprob: -15.250038146972656
    8. ' ' → logprob: -16.250038146972656
    9. ',r' → logprob: -16.875038146972656
    10. '‌,' → logprob: -17.000038146972656

Token 294: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.20141352713108063
    2. 'c' → logprob: -1.7014135122299194
    3. ')c' → logprob: -16.201414108276367
    4. ' ' → logprob: -16.576414108276367
    5. '	c' → logprob: -16.826414108276367
    6. ',c' → logprob: -18.451414108276367
    7. '   ' → logprob: -18.576414108276367
    8. '(c' → logprob: -18.826414108276367
    9. '$c' → logprob: -18.951414108276367
    10. '       ' → logprob: -19.201414108276367

Token 295: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001725157257169485
    2. ' )' → logprob: -6.626725196838379
    3. '   ' → logprob: -8.251725196838379
    4. ')
' → logprob: -9.376725196838379
    5. '       ' → logprob: -10.876725196838379
    6. '-' → logprob: -11.251725196838379
    7. ' ' → logprob: -12.001725196838379
    8. ',' → logprob: -12.626725196838379
    9. '),' → logprob: -13.001725196838379
    10. '+' → logprob: -13.251725196838379

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003707442432641983
    2. '#' → logprob: -5.628707408905029
    3. '   ' → logprob: -9.753707885742188
    4. ' #' → logprob: -10.628707885742188
    5. '     ' → logprob: -12.253707885742188
    6. '        ' → logprob: -12.378707885742188
    7. '      ' → logprob: -12.503707885742188
    8. '           ' → logprob: -12.753707885742188
    9. '```' → logprob: -13.003707885742188
    10. ',' → logprob: -13.628707885742188

Token 297: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048952728509902954
    2. '#' (adapté à ' #') → logprob: -3.04895281791687
    3. ' #' → logprob: -8.29895305633545
    4. '   ' → logprob: -9.42395305633545
    5. '        ' → logprob: -11.67395305633545
    6. '     ' → logprob: -12.54895305633545
    7. '      ' → logprob: -12.54895305633545
    8. ')' → logprob: -12.54895305633545
    9. ' ' → logprob: -12.92395305633545
    10. '```' → logprob: -13.04895305633545

Token 298: ' Down' (ID: 8755)
  Prédit: 'Down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Down' → logprob: -0.10448204725980759
    2. '       ' → logprob: -2.3544819355010986
    3. ' Down' → logprob: -5.604482173919678
    4. '   ' → logprob: -8.47948169708252
    5. 'down' → logprob: -8.97948169708252
    6. '_down' → logprob: -9.35448169708252
    7. ' ' → logprob: -10.10448169708252
    8. ' down' → logprob: -10.35448169708252
    9. '#' → logprob: -11.35448169708252
    10. '           ' → logprob: -11.35448169708252

Token 299: '-right' (ID: 14810)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07156610488891602
    2. '-left' → logprob: -3.196566104888916
    3. '-' → logprob: -4.071566104888916
    4. '-right' → logprob: -5.196566104888916
    5. '_' → logprob: -6.071566104888916
    6. '_left' → logprob: -6.321566104888916
    7. '_right' → logprob: -7.696566104888916
    8. '_plus' → logprob: -7.821566104888916
    9. ' +' → logprob: -9.071565628051758
    10. ')' → logprob: -9.571565628051758

Token 300: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004417536314576864
    2. '(r' → logprob: -5.504417419433594
    3. ' :' → logprob: -8.504417419433594
    4. ' (' → logprob: -9.504417419433594
    5. ' =' → logprob: -10.754417419433594
    6. '=' → logprob: -10.879417419433594
    7. '(' → logprob: -11.879417419433594
    8. ',' → logprob: -12.504417419433594
    9. 'r' → logprob: -13.254417419433594
    10. '=r' → logprob: -13.254417419433594

Token 301: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.004085878375917673
    2. '(r' → logprob: -5.504086017608643
    3. '(' → logprob: -11.879085540771484
    4. ' r' → logprob: -14.754085540771484
    5. ' ' → logprob: -16.254085540771484
    6. '(s' → logprob: -17.254085540771484
    7. ' ' → logprob: -17.629085540771484
    8. 'r' → logprob: -18.379085540771484
    9. '(c' → logprob: -18.629085540771484
    10. ')' → logprob: -19.004085540771484

Token 302: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006753259804099798
    2. ' r' → logprob: -5.006753444671631
    3. '(r' → logprob: -10.256752967834473
    4. '   ' → logprob: -14.131752967834473
    5. ' (' → logprob: -14.131752967834473
    6. ')' → logprob: -14.381752967834473
    7. '+' → logprob: -15.756752967834473
    8. ' ' → logprob: -15.881752967834473
    9. '_r' → logprob: -16.13175392150879
    10. '(' → logprob: -16.50675392150879

Token 303: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00011391390580683947
    2. ',' → logprob: -9.750113487243652
    3. ' +' → logprob: -10.000113487243652
    4. '+,' → logprob: -12.000113487243652
    5. '+
' → logprob: -12.625113487243652
    6. '1' → logprob: -15.000113487243652
    7. '-' → logprob: -16.00011444091797
    8. '
' → logprob: -17.37511444091797
    9. ' ,' → logprob: -17.50011444091797
    10. '   ' → logprob: -17.62511444091797

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00027802068507298827
    2. ' ' → logprob: -8.25027847290039
    3. '+' → logprob: -11.25027847290039
    4. 'c' → logprob: -13.37527847290039
    5. ' c' → logprob: -13.37527847290039
    6. ',' → logprob: -15.62527847290039
    7. ')' → logprob: -15.87527847290039
    8. ' +' → logprob: -16.25027847290039
    9. 'r' → logprob: -16.87527847290039
    10. '  ' → logprob: -17.93777847290039

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.742448022123426e-05
    2. ' ,' → logprob: -10.000067710876465
    3. ',c' → logprob: -10.875067710876465
    4. ')' → logprob: -13.625067710876465
    5. ',
' → logprob: -14.500067710876465
    6. ' ' → logprob: -14.750067710876465
    7. 'c' → logprob: -15.000067710876465
    8. '),' → logprob: -15.875067710876465
    9. ' c' → logprob: -16.00006675720215
    10. '<|end|>' → logprob: -16.62506675720215

Token 306: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.20141683518886566
    2. 'c' → logprob: -1.7014168500900269
    3. '(c' → logprob: -13.326416969299316
    4. ')c' → logprob: -14.326416969299316
    5. ' ' → logprob: -14.826416969299316
    6. ' (' → logprob: -15.076416969299316
    7. ' ' → logprob: -15.326416969299316
    8. ')' → logprob: -15.451416969299316
    9. '	c' → logprob: -16.826416015625
    10. '```' → logprob: -16.951416015625

Token 307: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011882327497005463
    2. '+' → logprob: -4.636882305145264
    3. ')' → logprob: -6.386882305145264
    4. ',c' → logprob: -9.011882781982422
    5. ' ,' → logprob: -9.011882781982422
    6. '-' → logprob: -9.261882781982422
    7. ',
' → logprob: -10.761882781982422
    8. ' +' → logprob: -11.011882781982422
    9. 'c' → logprob: -11.136882781982422
    10. '   ' → logprob: -11.511882781982422

Token 308: '1' (ID: 16)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.026564888656139374
    2. ' c' → logprob: -4.151565074920654
    3. '1' → logprob: -4.651565074920654
    4. '   ' → logprob: -7.151565074920654
    5. ')' → logprob: -9.901564598083496
    6. ' ' → logprob: -10.276564598083496
    7. ')c' → logprob: -10.526564598083496
    8. '(c' → logprob: -11.401564598083496
    9. '    ' → logprob: -11.901564598083496
    10. '	c' → logprob: -12.526564598083496

Token 309: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01744520105421543
    2. ')
' → logprob: -4.767445087432861
    3. '       ' → logprob: -4.767445087432861
    4. '   ' → logprob: -8.89244556427002
    5. ' )' → logprob: -9.14244556427002
    6. ')
' → logprob: -11.51744556427002
    7. '):
' → logprob: -11.51744556427002
    8. ')`' → logprob: -12.26744556427002
    9. '")' → logprob: -12.51744556427002
    10. ')"' → logprob: -12.51744556427002

Token 310: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017302791820839047
    2. '
' → logprob: -9.50017261505127
    3. ' for' → logprob: -10.62517261505127
    4. '        
' → logprob: -10.62517261505127
    5. '   ' → logprob: -11.25017261505127
    6. 'for' → logprob: -11.62517261505127
    7. '	' → logprob: -11.87517261505127
    8. '           ' → logprob: -12.75017261505127
    9. '  
' → logprob: -12.87517261505127
    10. '    
' → logprob: -13.12517261505127

Token 311: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05204145982861519
    2. ' for' → logprob: -3.427041530609131
    3. 'for' (adapté à ' for') → logprob: -4.052041530609131
    4. '
' → logprob: -7.802041530609131
    5. '   ' → logprob: -8.552041053771973
    6. '	' → logprob: -10.052041053771973
    7. '	for' → logprob: -10.177041053771973
    8. '        
' → logprob: -10.177041053771973
    9. ' ' → logprob: -10.802041053771973
    10. '  
' → logprob: -11.052041053771973

Token 312: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.006715370807796717
    2. 'r' → logprob: -5.006715297698975
    3. '	r' → logprob: -17.631715774536133
    4. '_r' → logprob: -18.131715774536133
    5. ' ' → logprob: -18.256715774536133
    6. ' ' → logprob: -18.256715774536133
    7. '```' → logprob: -18.506715774536133
    8. ')' → logprob: -20.006715774536133
    9. ' self' → logprob: -20.256715774536133
    10. ' row' → logprob: -20.506715774536133

Token 313: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013703268952667713
    2. 'in' → logprob: -4.388703346252441
    3. ' ' → logprob: -6.763703346252441
    4. ',' → logprob: -10.638703346252441
    5. ' i' → logprob: -12.513703346252441
    6. ' ,' → logprob: -12.763703346252441
    7. '	in' → logprob: -13.513703346252441
    8. ')' → logprob: -13.638703346252441
    9. '0' → logprob: -14.138703346252441
    10. '<|end|>' → logprob: -14.263703346252441

Token 314: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20141363143920898
    2. 'range' → logprob: -1.701413631439209
    3. 'self' → logprob: -16.076414108276367
    4. '(range' → logprob: -16.576414108276367
    5. '	range' → logprob: -17.701414108276367
    6. '0' → logprob: -17.951414108276367
    7. ' self' → logprob: -18.451414108276367
    8. '   ' → logprob: -18.451414108276367
    9. '_range' → logprob: -18.701414108276367
    10. ' rang' → logprob: -18.701414108276367

Token 315: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.2352385965641588e-05
    2. '(' → logprob: -11.375012397766113
    3. 'self' → logprob: -14.250012397766113
    4. '(
' → logprob: -16.500011444091797
    5. ' self' → logprob: -17.000011444091797
    6. '       ' → logprob: -17.000011444091797
    7. '(s' → logprob: -18.375011444091797
    8. ' (' → logprob: -19.125011444091797
    9. '[self' → logprob: -19.625011444091797
    10. ',self' → logprob: -20.000011444091797

Token 316: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.0005715019651688635
    2. '.' → logprob: -7.6255717277526855
    3. ' .' → logprob: -9.500571250915527
    4. '.
' → logprob: -12.875571250915527
    5. 'size' → logprob: -12.875571250915527
    6. ')' → logprob: -13.000571250915527
    7. '   ' → logprob: -15.000571250915527
    8. ' size' → logprob: -15.125571250915527
    9. 'self' → logprob: -15.625571250915527
    10. '.s' → logprob: -15.750571250915527

Token 317: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07031895965337753
    2. '):
' → logprob: -2.6953189373016357
    3. ' ):' → logprob: -8.195319175720215
    4. '       ' → logprob: -9.945319175720215
    5. '):
' → logprob: -10.820319175720215
    6. '   ' → logprob: -11.195319175720215
    7. ' ):
' → logprob: -11.445319175720215
    8. ':' → logprob: -11.570319175720215
    9. '):

' → logprob: -13.445319175720215
    10. ' ' → logprob: -14.195319175720215

Token 318: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05442741885781288
    2. ':' → logprob: -3.4294273853302
    3. '           ' → logprob: -4.804427623748779
    4. ' for' → logprob: -5.054427623748779
    5. '   ' → logprob: -6.054427623748779
    6. '<|end|>' → logprob: -6.054427623748779
    7. ',' → logprob: -7.804427623748779
    8. '<|end|>' → logprob: -8.429427146911621
    9. ' ' → logprob: -8.554427146911621
    10. ':
' → logprob: -9.179427146911621

Token 319: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5774941444396973
    2. ' for' → logprob: -0.8274941444396973
    3. '       ' → logprob: -6.702494144439697
    4. '   ' → logprob: -8.327493667602539
    5. '           ' → logprob: -9.952493667602539
    6. ' ' → logprob: -10.952493667602539
    7. '	for' → logprob: -11.577493667602539
    8. '    ' → logprob: -12.452493667602539
    9. '        ' → logprob: -12.827493667602539
    10. '  ' → logprob: -14.327493667602539

Token 320: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.31327223777770996
    2. 'c' → logprob: -1.31327223777771
    3. ' ' → logprob: -12.563272476196289
    4. '   ' → logprob: -12.563272476196289
    5. ',' → logprob: -14.813272476196289
    6. '    ' → logprob: -14.938272476196289
    7. '0' → logprob: -15.188272476196289
    8. ')c' → logprob: -15.188272476196289
    9. ' ' → logprob: -15.313272476196289
    10. '  ' → logprob: -15.313272476196289

Token 321: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00977108534425497
    2. 'in' → logprob: -4.63477087020874
    3. ' ' → logprob: -11.259771347045898
    4. '	in' → logprob: -13.259771347045898
    5. 'import' → logprob: -16.6347713470459
    6. ' i' → logprob: -16.6347713470459
    7. 'n' → logprob: -16.6347713470459
    8. '    ' → logprob: -17.0097713470459
    9. ' ' → logprob: -17.3847713470459
    10. '	' → logprob: -17.6347713470459

Token 322: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47409170866012573
    2. 'range' → logprob: -0.9740917086601257
    3. '(range' → logprob: -11.724091529846191
    4. 'r' → logprob: -12.724091529846191
    5. ' r' → logprob: -13.474091529846191
    6. '(r' → logprob: -14.349091529846191
    7. '0' → logprob: -14.349091529846191
    8. ' ' → logprob: -14.724091529846191
    9. 'len' → logprob: -15.599091529846191
    10. '   ' → logprob: -15.724091529846191

Token 323: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0002695608709473163
    2. '(' → logprob: -8.625269889831543
    3. '(self' → logprob: -9.375269889831543
    4. ' (' → logprob: -12.625269889831543
    5. '(len' → logprob: -13.625269889831543
    6. '(
' → logprob: -15.625269889831543
    7. '(s' → logprob: -15.625269889831543
    8. 'r' → logprob: -16.125268936157227
    9. '0' → logprob: -16.750268936157227
    10. '   ' → logprob: -17.000268936157227

Token 324: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07964799553155899
    2. ' +' → logprob: -2.829648017883301
    3. '):' → logprob: -4.079648017883301
    4. '):
' → logprob: -7.704648017883301
    5. ' ):' → logprob: -9.9546480178833
    6. ')' → logprob: -10.3296480178833
    7. '   ' → logprob: -10.4546480178833
    8. '       ' → logprob: -10.9546480178833
    9. '1' → logprob: -12.0796480178833
    10. ' ' → logprob: -12.3296480178833

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010402000043541193
    2. ' ' → logprob: -9.250103950500488
    3. '2' → logprob: -12.250103950500488
    4. '   ' → logprob: -13.250103950500488
    5. '
' → logprob: -15.250103950500488
    6. ')' → logprob: -15.687603950500488
    7. '       ' → logprob: -16.000104904174805
    8. '0' → logprob: -16.187604904174805
    9. '  ' → logprob: -16.375104904174805
    10. '+' → logprob: -16.437604904174805

Token 326: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3133637607097626
    2. '):
' → logprob: -1.313363790512085
    3. '       ' → logprob: -10.313364028930664
    4. '):
' → logprob: -10.563364028930664
    5. ':' → logprob: -11.313364028930664
    6. '           ' → logprob: -11.813364028930664
    7. ')' → logprob: -11.938364028930664
    8. '):

' → logprob: -12.188364028930664
    9. ' ):' → logprob: -12.313364028930664
    10. '   ' → logprob: -12.563364028930664

Token 327: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.055476680397987366
    2. '               ' → logprob: -2.930476665496826
    3. ',' → logprob: -8.055477142333984
    4. '       ' → logprob: -9.430477142333984
    5. ':' → logprob: -10.055477142333984
    6. '	       ' → logprob: -10.805477142333984
    7. '   ' → logprob: -11.055477142333984
    8. '                   ' → logprob: -11.180477142333984
    9. '```' → logprob: -11.180477142333984
    10. '            
' → logprob: -11.555477142333984

Token 328: ' neighbors' (ID: 31655)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2885609865188599
    2. 'neighbors' (adapté à ' neighbors') → logprob: -1.2885609865188599
    3. 'adj' → logprob: -1.5385609865188599
    4. ' neighbors' → logprob: -2.6635608673095703
    5. 'self' → logprob: -2.7885608673095703
    6. ' adj' → logprob: -3.5385608673095703
    7. ' key' → logprob: -3.9135608673095703
    8. 'pos' → logprob: -4.16356086730957
    9. 'key' → logprob: -4.16356086730957
    10. ' self' → logprob: -4.66356086730957

Token 329: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011048408225178719
    2. '=' → logprob: -4.511048316955566
    3. '=[]' → logprob: -14.511048316955566
    4. '=[' → logprob: -17.511049270629883
    5. ' ' → logprob: -17.636049270629883
    6. 's' → logprob: -17.886049270629883
    7. ':' → logprob: -17.886049270629883
    8. '=[]
' → logprob: -18.011049270629883
    9. ']' → logprob: -18.261049270629883
    10. '   ' → logprob: -18.511049270629883

Token 330: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00020699729793705046
    2. ' []' → logprob: -8.50020694732666
    3. '[]
' → logprob: -12.75020694732666
    4. '[' → logprob: -15.00020694732666
    5. '[]

' → logprob: -15.87520694732666
    6. '[]}' → logprob: -16.250207901000977
    7. '[]>' → logprob: -18.625207901000977
    8. '[],' → logprob: -18.750207901000977
    9. '[]"' → logprob: -19.750207901000977
    10. '[])' → logprob: -20.000207901000977

Token 331: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008326167589984834
    2. '                
' → logprob: -7.625832557678223
    3. '                ' → logprob: -9.000832557678223
    4. '		       ' → logprob: -10.125832557678223
    5. ' if' → logprob: -10.250832557678223
    6. '<|end|>' → logprob: -10.250832557678223
    7. ' for' → logprob: -10.875832557678223
    8. '
' → logprob: -11.000832557678223
    9. ',' → logprob: -11.000832557678223
    10. '       ' → logprob: -12.000832557678223

Token 332: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21178379654884338
    2. ' if' → logprob: -2.3367838859558105
    3. '               ' → logprob: -2.8367838859558105
    4. 'for' (adapté à ' for') → logprob: -3.4617838859558105
    5. ' for' → logprob: -5.9617838859558105
    6. '#' → logprob: -6.9617838859558105
    7. 'dire' → logprob: -8.586783409118652
    8. 'r' → logprob: -8.836783409118652
    9. ' directions' → logprob: -9.086783409118652
    10. '                
' → logprob: -10.461783409118652

Token 333: ' (' (ID: 350)
  Prédit: ' dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dr' → logprob: -0.17426089942455292
    2. ' (' → logprob: -2.2992608547210693
    3. 'dr' → logprob: -3.0492608547210693
    4. ' nr' → logprob: -5.549261093139648
    5. '(dr' → logprob: -5.674261093139648
    6. 'nr' → logprob: -6.049261093139648
    7. ' delta' → logprob: -7.174261093139648
    8. '   ' → logprob: -7.424261093139648
    9. '(' → logprob: -7.549261093139648
    10. 'delta' → logprob: -8.299261093139648

Token 334: 'nr' (ID: 33357)
  Prédit: 'dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' → logprob: -0.0005837726057507098
    2. '(dr' → logprob: -8.75058364868164
    3. '   ' → logprob: -8.87558364868164
    4. ' dr' → logprob: -9.12558364868164
    5. '       ' → logprob: -9.75058364868164
    6. '           ' → logprob: -10.62558364868164
    7. 'nr' → logprob: -10.75058364868164
    8. 'delta' → logprob: -10.75058364868164
    9. 'd' → logprob: -11.37558364868164
    10. ')' → logprob: -11.62558364868164

Token 335: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0053449939005076885
    2. ',n' → logprob: -5.380344867706299
    3. ' ,' → logprob: -7.255344867706299
    4. ',d' → logprob: -12.255345344543457
    5. ',c' → logprob: -13.380345344543457
    6. '   ' → logprob: -13.505345344543457
    7. ',r' → logprob: -13.505345344543457
    8. ',
' → logprob: -14.005345344543457
    9. 'nr' → logprob: -14.380345344543457
    10. '=' → logprob: -14.505345344543457

Token 336: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8854700326919556
    2. ',' → logprob: -1.1354700326919556
    3. 'r' → logprob: -1.3854700326919556
    4. '),' → logprob: -4.510469913482666
    5. ',r' → logprob: -6.260469913482666
    6. '),(' → logprob: -6.385469913482666
    7. ',n' → logprob: -7.510469913482666
    8. '-' → logprob: -8.510470390319824
    9. ' ,' → logprob: -9.135470390319824
    10. ')=' → logprob: -9.385470390319824

Token 337: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013214473437983543
    2. ' )' → logprob: -9.12513256072998
    3. 'in' → logprob: -10.75013256072998
    4. ' in' → logprob: -13.87513256072998
    5. '   ' → logprob: -15.37513256072998
    6. '),' → logprob: -16.125131607055664
    7. ')
' → logprob: -16.625131607055664
    8. '
' → logprob: -16.625131607055664
    9. ' ' → logprob: -17.000131607055664
    10. ',' → logprob: -17.125131607055664

Token 338: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1797875612974167
    2. 'in' → logprob: -1.804787516593933
    3. ',' → logprob: -11.054787635803223
    4. 'n' → logprob: -11.679787635803223
    5. ' ' → logprob: -12.054787635803223
    6. ')' → logprob: -12.929787635803223
    7. '	in' → logprob: -13.179787635803223
    8. '   ' → logprob: -13.429787635803223
    9. 'In' → logprob: -13.929787635803223
    10. '  ' → logprob: -13.929787635803223

Token 339: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.06802847981452942
    2. ' [(' → logprob: -2.818028450012207
    3. '[
' → logprob: -5.193028450012207
    4. ' [
' → logprob: -8.068028450012207
    5. ' [' → logprob: -9.193028450012207
    6. '[' → logprob: -9.818028450012207
    7. '[((' → logprob: -11.443028450012207
    8. '((' → logprob: -12.943028450012207
    9. '[r' → logprob: -13.193028450012207
    10. ' ((' → logprob: -13.943028450012207

Token 340: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0802738870552275e-05
    2. ' r' → logprob: -12.37501049041748
    3. '                   ' → logprob: -12.62501049041748
    4. '               ' → logprob: -13.00001049041748
    5. '(r' → logprob: -14.37501049041748
    6. '                       ' → logprob: -16.000011444091797
    7. '   ' → logprob: -16.625011444091797
    8. '                 ' → logprob: -17.375011444091797
    9. '           ' → logprob: -17.750011444091797
    10. '                           ' → logprob: -18.000011444091797

Token 341: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007114782347343862
    2. ' -' → logprob: -7.250711441040039
    3. ',' → logprob: -14.500711441040039
    4. ' ' → logprob: -14.750711441040039
    5. '   ' → logprob: -15.000711441040039
    6. '-
' → logprob: -16.25071144104004
    7. '1' → logprob: -16.62571144104004
    8. '-,' → logprob: -17.12571144104004
    9. ' ,' → logprob: -17.75071144104004
    10. '+' → logprob: -18.00071144104004

Token 342: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '-' → logprob: -16.250003814697266
    4. '   ' → logprob: -16.687503814697266
    5. '```' → logprob: -17.437503814697266
    6. '
' → logprob: -17.687503814697266
    7. ',' → logprob: -18.562503814697266
    8. '<|end|>' → logprob: -18.875003814697266
    9. '১' → logprob: -19.000003814697266
    10. '۱' → logprob: -19.187503814697266

Token 343: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07927761226892471
    2. ',c' → logprob: -2.579277515411377
    3. ' ,' → logprob: -8.454277992248535
    4. ',n' → logprob: -8.829277992248535
    5. ',
' → logprob: -10.704277992248535
    6. 'c' → logprob: -13.579277992248535
    7. ',r' → logprob: -13.579277992248535
    8. '<|end|>' → logprob: -14.329277992248535
    9. ',user' → logprob: -15.204277992248535
    10. ',

' → logprob: -15.454277992248535

Token 344: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.8325677703833207e-05
    2. ' -' → logprob: -11.125028610229492
    3. '),(' → logprob: -12.000028610229492
    4. '1' → logprob: -12.500028610229492
    5. '),' → logprob: -12.875028610229492
    6. ')' → logprob: -15.250028610229492
    7. ',n' → logprob: -15.375028610229492
    8. '   ' → logprob: -16.000028610229492
    9. ' ),' → logprob: -16.125028610229492
    10. '           ' → logprob: -16.625028610229492

Token 345: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00034630970912985504
    2. '-' → logprob: -8.000346183776855
    3. ' ' → logprob: -11.625346183776855
    4. '   ' → logprob: -13.625346183776855
    5. ' -' → logprob: -15.125346183776855
    6. '```' → logprob: -16.562847137451172
    7. '  ' → logprob: -16.812847137451172
    8. '    ' → logprob: -17.187847137451172
    9. '       ' → logprob: -17.375347137451172
    10. '           ' → logprob: -17.375347137451172

Token 346: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.4796256422996521
    2. '),' → logprob: -0.9796256422996521
    3. '),
' → logprob: -5.979625701904297
    4. ' ),' → logprob: -6.604625701904297
    5. ',' → logprob: -7.604625701904297
    6. ')' → logprob: -7.729625701904297
    7. '           ' → logprob: -8.729625701904297
    8. '<|end|>' → logprob: -9.104625701904297
    9. '               ' → logprob: -9.229625701904297
    10. '(r' → logprob: -9.479625701904297

Token 347: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.9981420336989686e-05
    2. ' r' → logprob: -10.875020027160645
    3. '(r' → logprob: -14.875020027160645
    4. '   ' → logprob: -15.375020027160645
    5. ' ' → logprob: -16.625019073486328
    6. '<|end|>' → logprob: -16.625019073486328
    7. '	r' → logprob: -17.000019073486328
    8. '  ' → logprob: -17.625019073486328
    9. '<|end|>' → logprob: -17.625019073486328
    10. '_r' → logprob: -17.750019073486328

Token 348: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.7292167184641585e-05
    2. ',n' → logprob: -10.750057220458984
    3. ',c' → logprob: -11.250057220458984
    4. ' -' → logprob: -11.500057220458984
    5. ',' → logprob: -11.875057220458984
    6. ',r' → logprob: -12.375057220458984
    7. '1' → logprob: -14.125057220458984
    8. ' ' → logprob: -15.250057220458984
    9. ' ,' → logprob: -16.000057220458984
    10. ')' → logprob: -16.250057220458984

Token 349: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9743012671824545e-05
    2. ' ' → logprob: -11.000020027160645
    3. '-' → logprob: -13.500020027160645
    4. '2' → logprob: -14.000020027160645
    5. 'r' → logprob: -16.437519073486328
    6. '0' → logprob: -16.437519073486328
    7. 'c' → logprob: -16.562519073486328
    8. '   ' → logprob: -17.000019073486328
    9. '(' → logprob: -17.500019073486328
    10. '```' → logprob: -17.500019073486328

Token 350: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.0038098113145679235
    2. ',' → logprob: -5.628809928894043
    3. 'c' → logprob: -8.503809928894043
    4. ' ,' → logprob: -12.753809928894043
    5. ',
' → logprob: -13.003809928894043
    6. ',n' → logprob: -13.378809928894043
    7. '),(' → logprob: -16.628808975219727
    8. '),' → logprob: -17.128808975219727
    9. ',

' → logprob: -17.378808975219727
    10. ')c' → logprob: -17.878808975219727

Token 351: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.001709805685095489
    2. '),' → logprob: -6.501709938049316
    3. ')]' → logprob: -9.626709938049316
    4. '),
' → logprob: -9.626709938049316
    5. ' ),' → logprob: -10.251709938049316
    6. ')' → logprob: -10.376709938049316
    7. ' ' → logprob: -12.501709938049316
    8. '),

' → logprob: -14.001709938049316
    9. ')][' → logprob: -14.001709938049316
    10. '   ' → logprob: -14.376709938049316

Token 352: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00018244501552544534
    2. ' r' → logprob: -8.625182151794434
    3. '(r' → logprob: -13.875182151794434
    4. '   ' → logprob: -14.250182151794434
    5. '           ' → logprob: -14.500182151794434
    6. ' ' → logprob: -16.00018310546875
    7. '       ' → logprob: -16.12518310546875
    8. '    ' → logprob: -16.25018310546875
    9. '	r' → logprob: -16.37518310546875
    10. '               ' → logprob: -16.37518310546875

Token 353: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.6368042826652527
    2. '-' → logprob: -0.7618042826652527
    3. ',n' → logprob: -6.011804103851318
    4. ',' → logprob: -6.511804103851318
    5. ' ' → logprob: -9.386804580688477
    6. ' ,' → logprob: -9.886804580688477
    7. ' -' → logprob: -10.136804580688477
    8. ')' → logprob: -10.761804580688477
    9. 'c' → logprob: -10.761804580688477
    10. ',r' → logprob: -11.761804580688477

Token 354: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.184812031686306e-05
    2. ' -' → logprob: -9.500082015991211
    3. '1' → logprob: -11.875082015991211
    4. ' ' → logprob: -16.75008201599121
    5. '+' → logprob: -18.25008201599121
    6. '-
' → logprob: -18.87508201599121
    7. '−' → logprob: -19.75008201599121
    8. '–' → logprob: -19.75008201599121
    9. '```' → logprob: -19.75008201599121
    10. '   ' → logprob: -20.37508201599121

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.3213025744771585e-05
    2. ' ' → logprob: -10.375033378601074
    3. '-' → logprob: -14.125033378601074
    4. '+' → logprob: -14.375033378601074
    5. '   ' → logprob: -15.625033378601074
    6. ')' → logprob: -16.125032424926758
    7. '```' → logprob: -17.125032424926758
    8. ' -' → logprob: -17.375032424926758
    9. '  ' → logprob: -17.500032424926758
    10. '0' → logprob: -17.625032424926758

Token 356: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0003812217037193477
    2. '),' → logprob: -8.000381469726562
    3. ' ),' → logprob: -10.625381469726562
    4. '),
' → logprob: -11.000381469726562
    5. ',(' → logprob: -13.250381469726562
    6. '           ' → logprob: -14.250381469726562
    7. '               ' → logprob: -14.625381469726562
    8. ',' → logprob: -15.125381469726562
    9. '),

' → logprob: -15.375381469726562
    10. '   ' → logprob: -15.500381469726562

Token 357: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.73446003627032e-05
    2. ' r' → logprob: -9.250097274780273
    3. 'c' → logprob: -14.750097274780273
    4. '   ' → logprob: -15.750097274780273
    5. ' ' → logprob: -16.000097274780273
    6. '(r' → logprob: -16.125097274780273
    7. '  ' → logprob: -16.500097274780273
    8. ',r' → logprob: -16.625097274780273
    9. '    ' → logprob: -17.125097274780273
    10. '<|end|>' → logprob: -17.375097274780273

Token 358: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.014698592945933342
    2. ',' → logprob: -4.264698505401611
    3. 'c' → logprob: -8.63969898223877
    4. '+' → logprob: -9.51469898223877
    5. ' ' → logprob: -9.63969898223877
    6. ' ,' → logprob: -9.76469898223877
    7. ')' → logprob: -10.01469898223877
    8. '-' → logprob: -10.13969898223877
    9. ',n' → logprob: -10.63969898223877
    10. ',
' → logprob: -11.76469898223877

Token 359: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.198043699143454e-05
    2. '+c' → logprob: -9.625091552734375
    3. ' +' → logprob: -10.750091552734375
    4. '+
' → logprob: -12.750091552734375
    5. '+,' → logprob: -14.875091552734375
    6. ',c' → logprob: -15.125091552734375
    7. '+)' → logprob: -15.250091552734375
    8. ')+' → logprob: -16.000091552734375
    9. '+

' → logprob: -16.125091552734375
    10. '+(' → logprob: -16.375091552734375

Token 360: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.37500286102295
    3. '+' → logprob: -14.00000286102295
    4. '   ' → logprob: -16.250001907348633
    5. ')' → logprob: -16.375001907348633
    6. '```' → logprob: -16.875001907348633
    7. '  ' → logprob: -17.812501907348633
    8. ' +' → logprob: -18.437501907348633
    9. '<|end|>' → logprob: -18.812501907348633
    10. '    ' → logprob: -19.187501907348633

Token 361: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0005246769287623465
    2. ',(' → logprob: -7.750524520874023
    3. '),' → logprob: -9.375524520874023
    4. '               ' → logprob: -12.375524520874023
    5. ',' → logprob: -13.125524520874023
    6. '           ' → logprob: -13.375524520874023
    7. '       ' → logprob: -15.375524520874023
    8. '   ' → logprob: -15.500524520874023
    9. '],[' → logprob: -15.750524520874023
    10. ' ),' → logprob: -16.250524520874023

Token 362: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.383526149671525e-05
    2. ' r' → logprob: -9.875053405761719
    3. '(r' → logprob: -13.000053405761719
    4. '   ' → logprob: -16.50005340576172
    5. '	r' → logprob: -18.50005340576172
    6. '           ' → logprob: -18.87505340576172
    7. '       ' → logprob: -19.25005340576172
    8. '[r' → logprob: -19.37505340576172
    9. '     ' → logprob: -19.87505340576172
    10. ' ' → logprob: -20.50005340576172

Token 363: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2233183042553719e-05
    2. ' +' → logprob: -11.750012397766113
    3. '+
' → logprob: -12.625012397766113
    4. '+r' → logprob: -14.750012397766113
    5. '+,' → logprob: -15.500012397766113
    6. '+n' → logprob: -16.375011444091797
    7. '1' → logprob: -16.500011444091797
    8. ',n' → logprob: -17.125011444091797
    9. '+c' → logprob: -17.125011444091797
    10. 'plus' → logprob: -17.625011444091797

Token 364: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4987974029500037e-05
    2. '+' → logprob: -10.625024795532227
    3. ' ' → logprob: -14.375024795532227
    4. '
' → logprob: -17.250024795532227
    5. ' +' → logprob: -18.125024795532227
    6. '۱' → logprob: -19.000024795532227
    7. '   ' → logprob: -19.625024795532227
    8. '```' → logprob: -20.000024795532227
    9. '１' → logprob: -20.125024795532227
    10. '

' → logprob: -20.500024795532227

Token 365: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.42042309045791626
    2. ',' → logprob: -1.1704230308532715
    3. ',n' → logprob: -3.4204230308532715
    4. ' ,' → logprob: -9.17042350769043
    5. ',
' → logprob: -9.29542350769043
    6. ',(' → logprob: -9.79542350769043
    7. '),(' → logprob: -11.29542350769043
    8. '<|end|>' → logprob: -12.04542350769043
    9. ',

' → logprob: -12.17042350769043
    10. ',r' → logprob: -12.67042350769043

Token 366: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.002458056667819619
    2. ',n' → logprob: -6.502458095550537
    3. ',(' → logprob: -7.877458095550537
    4. ',' → logprob: -8.002457618713379
    5. '),' → logprob: -8.502457618713379
    6. ',c' → logprob: -11.127457618713379
    7. '),
' → logprob: -11.502457618713379
    8. '+' → logprob: -12.252457618713379
    9. '(n' → logprob: -13.502457618713379
    10. ')' → logprob: -13.502457618713379

Token 367: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.700132997939363e-05
    2. ' r' → logprob: -11.000017166137695
    3. '(r' → logprob: -15.375017166137695
    4. '   ' → logprob: -18.500017166137695
    5. ' ' → logprob: -19.125017166137695
    6. ')' → logprob: -19.125017166137695
    7. '  ' → logprob: -19.375017166137695
    8. '<|end|>' → logprob: -19.625017166137695
    9. '```' → logprob: -19.625017166137695
    10. '	r' → logprob: -19.875017166137695

Token 368: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.082895273109898e-05
    2. ',' → logprob: -11.250030517578125
    3. ' +' → logprob: -11.750030517578125
    4. '+,' → logprob: -12.125030517578125
    5. '+
' → logprob: -12.500030517578125
    6. '1' → logprob: -15.875030517578125
    7. ' ,' → logprob: -16.125030517578125
    8. '<|end|>' → logprob: -16.500030517578125
    9. ',r' → logprob: -17.000030517578125
    10. ',next' → logprob: -17.000030517578125

Token 369: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017775188898667693
    2. 'c' → logprob: -6.376777648925781
    3. '+' → logprob: -9.751777648925781
    4. ' ' → logprob: -11.376777648925781
    5. ')' → logprob: -13.126777648925781
    6. ' c' → logprob: -14.126777648925781
    7. '+c' → logprob: -14.501777648925781
    8. 'n' → logprob: -14.626777648925781
    9. '   ' → logprob: -14.626777648925781
    10. 'nc' → logprob: -15.001777648925781

Token 370: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.01004752516746521
    2. ',' → logprob: -4.635047435760498
    3. 'c' → logprob: -8.260047912597656
    4. ',n' → logprob: -10.760047912597656
    5. ' ,' → logprob: -11.760047912597656
    6. ',
' → logprob: -13.260047912597656
    7. '   ' → logprob: -15.260047912597656
    8. ',(' → logprob: -15.385047912597656
    9. ' ' → logprob: -15.635047912597656
    10. '```' → logprob: -16.010047912597656

Token 371: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.555654105497524e-05
    2. ')]' → logprob: -10.50009536743164
    3. '+
' → logprob: -10.75009536743164
    4. '+)' → logprob: -11.12509536743164
    5. ')' → logprob: -11.25009536743164
    6. ')])' → logprob: -11.62509536743164
    7. ' +' → logprob: -12.25009536743164
    8. '+(' → logprob: -13.25009536743164
    9. '+

' → logprob: -14.12509536743164
    10. '+n' → logprob: -14.75009536743164

Token 372: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.250000953674316
    3. ')' → logprob: -15.125000953674316
    4. '0' → logprob: -16.375001907348633
    5. ')])' → logprob: -17.125001907348633
    6. '+' → logprob: -17.375001907348633
    7. ')]' → logprob: -17.875001907348633
    8. '))' → logprob: -19.125001907348633
    9. ']])' → logprob: -20.125001907348633
    10. '۱' → logprob: -20.125001907348633

Token 373: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.1658337116241455
    2. '):
' → logprob: -2.2908337116241455
    3. ')' → logprob: -3.4158337116241455
    4. '):' → logprob: -4.290833473205566
    5. '               ' → logprob: -5.790833473205566
    6. ']):
' → logprob: -6.915833473205566
    7. ']' → logprob: -8.290833473205566
    8. '           ' → logprob: -8.415833473205566
    9. '                   ' → logprob: -9.165833473205566
    10. ']:
' → logprob: -9.165833473205566

Token 374: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9811870455741882
    2. ':
' → logprob: -0.9811870455741882
    3. '               ' → logprob: -1.981187105178833
    4. '                   ' → logprob: -2.731187105178833
    5. '           ' → logprob: -3.981187105178833
    6. '<|end|>' → logprob: -4.981186866760254
    7. '):
' → logprob: -5.106186866760254
    8. '<|end|>' → logprob: -5.231186866760254
    9. '		           ' → logprob: -5.731186866760254
    10. '	           ' → logprob: -6.356186866760254

Token 375: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02856419049203396
    2. '                   ' → logprob: -3.653564214706421
    3. '                ' → logprob: -7.403563976287842
    4. '           ' → logprob: -7.403563976287842
    5. '<|end|>' → logprob: -7.778563976287842
    6. '                
' → logprob: -8.528564453125
    7. ' if' → logprob: -9.153564453125
    8. '                    
' → logprob: -10.153564453125
    9. '<|end|>' → logprob: -10.278564453125
    10. ' ' → logprob: -10.278564453125

Token 376: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3292413055896759
    2. ' if' → logprob: -1.5792412757873535
    3. '                   ' → logprob: -3.0792412757873535
    4. '               ' → logprob: -3.5792412757873535
    5. '           ' → logprob: -8.079241752624512
    6. '                    ' → logprob: -9.954241752624512
    7. '                       ' → logprob: -9.954241752624512
    8. '                    
' → logprob: -10.079241752624512
    9. '                ' → logprob: -11.329241752624512
    10. '	if' → logprob: -11.704241752624512

Token 377: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25196021795272827
    2. ' self' → logprob: -1.501960277557373
    3. '                   ' → logprob: -11.251959800720215
    4. '(self' → logprob: -11.626959800720215
    5. '0' → logprob: -13.001959800720215
    6. ' ' → logprob: -13.126959800720215
    7. '               ' → logprob: -13.376959800720215
    8. '   ' → logprob: -14.001959800720215
    9. '	self' → logprob: -14.251959800720215
    10. '                       ' → logprob: -14.751959800720215

Token 378: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -0.00026407750556245446
    2. '.' → logprob: -8.250264167785645
    3. ' .' → logprob: -13.250264167785645
    4. 'in' → logprob: -15.125264167785645
    5. '   ' → logprob: -15.625264167785645
    6. ').' → logprob: -16.625263214111328
    7. '.is' → logprob: -16.750263214111328
    8. '>.' → logprob: -16.750263214111328
    9. '.In' → logprob: -17.250263214111328
    10. '[in' → logprob: -17.750263214111328

Token 379: '_bounds' (ID: 90408)
  Prédit: '_bounds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bounds' → logprob: -1.1472419600977446e-06
    2. '_bound' → logprob: -15.000000953674316
    3. 'bounds' → logprob: -15.125000953674316
    4. '_' → logprob: -15.250000953674316
    5. ' _' → logprob: -16.875001907348633
    6. '_b' → logprob: -16.875001907348633
    7. '_limits' → logprob: -17.000001907348633
    8. '_ranges' → logprob: -17.000001907348633
    9. ')_' → logprob: -18.750001907348633
    10. '_bits' → logprob: -18.750001907348633

Token 380: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005219352315180004
    2. '(' → logprob: -7.875522136688232
    3. ' (' → logprob: -8.875521659851074
    4. '(
' → logprob: -14.125521659851074
    5. '(nb' → logprob: -14.500521659851074
    6. 'nr' → logprob: -15.125521659851074
    7. '((' → logprob: -15.250521659851074
    8. 'n' → logprob: -16.25052261352539
    9. ' nr' → logprob: -16.50052261352539
    10. ')' → logprob: -16.75052261352539

Token 381: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001754310796968639
    2. ',' → logprob: -6.876754283905029
    3. ',r' → logprob: -7.626754283905029
    4. 'nr' → logprob: -8.626754760742188
    5. ',n' → logprob: -10.126754760742188
    6. ')' → logprob: -12.501754760742188
    7. ' ,' → logprob: -13.251754760742188
    8. '),' → logprob: -13.376754760742188
    9. ',
' → logprob: -13.751754760742188
    10. '
' → logprob: -13.751754760742188

Token 382: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16104276478290558
    2. ',n' → logprob: -1.9110428094863892
    3. ' ,' → logprob: -7.7860426902771
    4. ',c' → logprob: -8.036043167114258
    5. ',
' → logprob: -9.661043167114258
    6. ',num' → logprob: -12.911043167114258
    7. ',

' → logprob: -13.536043167114258
    8. '(n' → logprob: -13.911043167114258
    9. ')' → logprob: -14.161043167114258
    10. ',k' → logprob: -14.286043167114258

Token 383: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.127333340875339e-06
    2. ')' → logprob: -13.625003814697266
    3. 'nc' → logprob: -14.000003814697266
    4. ' ' → logprob: -15.000003814697266
    5. ' c' → logprob: -15.500003814697266
    6. '```' → logprob: -15.625003814697266
    7. ')c' → logprob: -15.750003814697266
    8. 'с' → logprob: -15.875003814697266
    9. ',c' → logprob: -16.000003814697266
    10. '_c' → logprob: -16.000003814697266

Token 384: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009806974790990353
    2. '):
' → logprob: -4.884807109832764
    3. ')' → logprob: -6.134807109832764
    4. ' ):' → logprob: -11.009806632995605
    5. ':' → logprob: -12.509806632995605
    6. '):
' → logprob: -12.634806632995605
    7. ' and' → logprob: -12.634806632995605
    8. '):

' → logprob: -12.884806632995605
    9. '                   ' → logprob: -14.259806632995605
    10. ')==' → logprob: -14.509806632995605

Token 385: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0007225605077110231
    2. '                   ' → logprob: -7.625722408294678
    3. '                        
' → logprob: -8.875722885131836
    4. '               ' → logprob: -11.250722885131836
    5. '<|end|>' → logprob: -11.250722885131836
    6. '                           ' → logprob: -11.375722885131836
    7. '       ' → logprob: -11.500722885131836
    8. '                               ' → logprob: -11.750722885131836
    9. '                    
' → logprob: -11.750722885131836
    10. ',' → logprob: -12.125722885131836

Token 386: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' (adapté à ' neighbors') → logprob: -0.01823562942445278
    2. ' neighbors' → logprob: -4.018235683441162
    3. '                       ' → logprob: -10.018235206604004
    4. '               ' → logprob: -11.018235206604004
    5. '                   ' → logprob: -11.018235206604004
    6. 'ne' → logprob: -13.268235206604004
    7. '_neighbors' → logprob: -13.393235206604004
    8. '   ' → logprob: -13.393235206604004
    9. '                           ' → logprob: -13.893235206604004
    10. 'neighbor' → logprob: -14.018235206604004

Token 387: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03811435401439667
    2. '.' → logprob: -3.288114309310913
    3. ').' → logprob: -9.913114547729492
    4. '.add' → logprob: -11.538114547729492
    5. '.push' → logprob: -13.038114547729492
    6. ')' → logprob: -13.038114547729492
    7. '                   ' → logprob: -13.413114547729492
    8. ' .' → logprob: -13.788114547729492
    9. 'append' → logprob: -13.788114547729492
    10. '.
' → logprob: -14.163114547729492

Token 388: '((' (ID: 2054)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6056888103485107
    2. '(n' → logprob: -0.8556888103485107
    3. '((' → logprob: -4.23068904876709
    4. '(self' → logprob: -4.60568904876709
    5. '(' → logprob: -5.35568904876709
    6. '                       ' → logprob: -11.35568904876709
    7. ' ((' → logprob: -11.48068904876709
    8. '   ' → logprob: -12.10568904876709
    9. ' ' → logprob: -12.23068904876709
    10. '(nn' → logprob: -12.48068904876709

Token 389: 'nr' (ID: 33357)
  Prédit: 'nr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -8.506661833962426e-05
    2. ' nr' → logprob: -9.37508487701416
    3. '_nr' → logprob: -16.250085830688477
    4. '   ' → logprob: -17.125085830688477
    5. '.nr' → logprob: -17.625085830688477
    6. ' ' → logprob: -18.625085830688477
    7. '    ' → logprob: -18.625085830688477
    8. 'nb' → logprob: -19.125085830688477
    9. 'n' → logprob: -19.125085830688477
    10. '
' → logprob: -19.250085830688477

Token 390: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4743039011955261
    2. ',n' → logprob: -0.9743039011955261
    3. ' ,' → logprob: -8.72430419921875
    4. ',
' → logprob: -10.22430419921875
    5. ',c' → logprob: -10.84930419921875
    6. ',

' → logprob: -12.72430419921875
    7. ',num' → logprob: -13.22430419921875
    8. ',new' → logprob: -14.47430419921875
    9. ',np' → logprob: -15.09930419921875
    10. ',m' → logprob: -15.34930419921875

Token 391: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.8889261304575484e-06
    2. 'nc' → logprob: -13.125003814697266
    3. ',c' → logprob: -14.500003814697266
    4. ',' → logprob: -14.500003814697266
    5. ' c' → logprob: -15.000003814697266
    6. ')' → logprob: -15.500003814697266
    7. ')c' → logprob: -15.625003814697266
    8. 'с' → logprob: -16.125003814697266
    9. 'mc' → logprob: -17.750003814697266
    10. 'C' → logprob: -18.125003814697266

Token 392: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008488174062222242
    2. ')' → logprob: -7.125848770141602
    3. '))
' → logprob: -10.125848770141602
    4. ' ))' → logprob: -12.875848770141602
    5. '                       ' → logprob: -14.875848770141602
    6. '               ' → logprob: -14.875848770141602
    7. ')))' → logprob: -15.250848770141602
    8. '                   ' → logprob: -15.250848770141602
    9. ')
' → logprob: -16.0008487701416
    10. '           ' → logprob: -16.1258487701416

Token 393: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011320014018565416
    2. 'self' → logprob: -7.251132011413574
    3. '
' → logprob: -8.751132011413574
    4. '       ' → logprob: -9.001132011413574
    5. ' self' → logprob: -9.126132011413574
    6. '           ' → logprob: -11.001132011413574
    7. '                
' → logprob: -12.751132011413574
    8. '```' → logprob: -12.751132011413574
    9. ')' → logprob: -13.126132011413574
    10. ',' → logprob: -13.501132011413574

Token 394: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.32709169387817383
    2. '               ' → logprob: -1.5770916938781738
    3. '       ' → logprob: -3.202091693878174
    4. ' self' → logprob: -3.452091693878174
    5. '           ' → logprob: -10.577091217041016
    6. '   ' → logprob: -12.077091217041016
    7. '	self' → logprob: -12.202091217041016
    8. '```' → logprob: -12.327091217041016
    9. ')' → logprob: -12.952091217041016
    10. '                
' → logprob: -13.702091217041016

Token 395: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -1.8193366486229934e-05
    2. '.' → logprob: -11.250018119812012
    3. ' .' → logprob: -12.375018119812012
    4. '.ac' → logprob: -14.875018119812012
    5. '.Ad' → logprob: -16.250019073486328
    6. '.grid' → logprob: -16.500019073486328
    7. '.ag' → logprob: -17.000019073486328
    8. '.ind' → logprob: -17.375019073486328
    9. '.access' → logprob: -17.625019073486328
    10. '.acc' → logprob: -17.875019073486328

Token 396: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -2.7372048862162046e-05
    2. 'acency' → logprob: -10.625027656555176
    3. 'j' → logprob: -13.125027656555176
    4. 'Jac' → logprob: -14.375027656555176
    5. ' adjacency' → logprob: -14.875027656555176
    6. ' jac' → logprob: -17.00002670288086
    7. 'jc' → logprob: -19.25002670288086
    8. '_j' → logprob: -19.37502670288086
    9. '"' → logprob: -19.50002670288086
    10. '[' → logprob: -19.62502670288086

Token 397: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -1.8624639324116288e-06
    2. 'acency' → logprob: -13.750001907348633
    3. 'ENCY' → logprob: -14.625001907348633
    4. 'encv' → logprob: -16.625001907348633
    5. 'cy' → logprob: -16.750001907348633
    6. 'ancy' → logprob: -16.750001907348633
    7. 'acy' → logprob: -16.875001907348633
    8. 'n' → logprob: -17.000001907348633
    9. '#' → logprob: -17.750001907348633
    10. '
' → logprob: -18.000001907348633

Token 398: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: 0.0
    2. 'map' → logprob: -18.375
    3. ' _' → logprob: -19.125
    4. '._' → logprob: -19.125
    5. '_' → logprob: -20.0
    6. '[_' → logprob: -20.125
    7. '\' → logprob: -20.25
    8. '_MAP' → logprob: -20.75
    9. '[' → logprob: -20.875
    10. 'Map' → logprob: -21.0

Token 399: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.00043639098294079304
    2. '[r' → logprob: -7.750436305999756
    3. '[' → logprob: -12.125436782836914
    4. '(r' → logprob: -16.250436782836914
    5. ' [(' → logprob: -16.625436782836914
    6. '[self' → logprob: -17.000436782836914
    7. '[((' → logprob: -17.750436782836914
    8. '[
' → logprob: -18.000436782836914
    9. '   ' → logprob: -18.125436782836914
    10. 'r' → logprob: -18.500436782836914

Token 400: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.6240566083070007e-06
    2. ' r' → logprob: -13.375001907348633
    3. '   ' → logprob: -19.000001907348633
    4. '_r' → logprob: -20.500001907348633
    5. '	r' → logprob: -20.750001907348633
    6. ' ' → logprob: -21.625001907348633
    7. '    ' → logprob: -21.875001907348633
    8. '  ' → logprob: -22.250001907348633
    9. '```' → logprob: -22.375001907348633
    10. '(r' → logprob: -22.375001907348633

Token 401: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.31374675035476685
    2. ',' → logprob: -1.313746690750122
    3. ' ,' → logprob: -7.938746929168701
    4. '),(' → logprob: -10.563746452331543
    5. ',
' → logprob: -10.688746452331543
    6. ',r' → logprob: -11.188746452331543
    7. ',n' → logprob: -11.438746452331543
    8. '],[' → logprob: -11.563746452331543
    9. ')' → logprob: -12.313746452331543
    10. ',p' → logprob: -12.938746452331543

Token 402: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.011743898503482342
    2. ')].' → logprob: -4.511744022369385
    3. ']' → logprob: -7.761744022369385
    4. ')' → logprob: -8.886743545532227
    5. '])' → logprob: -9.011743545532227
    6. ')])' → logprob: -12.136743545532227
    7. '])]' → logprob: -13.386743545532227
    8. ']).' → logprob: -13.386743545532227
    9. '].' → logprob: -14.136743545532227
    10. ')][' → logprob: -15.261743545532227

Token 403: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868716359138489
    2. ' =' → logprob: -1.136871576309204
    3. '=n' → logprob: -16.011871337890625
    4. ' =
' → logprob: -16.261871337890625
    5. '=new' → logprob: -16.636871337890625
    6. ']=' → logprob: -16.761871337890625
    7. ')=' → logprob: -17.011871337890625
    8. '=

' → logprob: -17.011871337890625
    9. ' =[' → logprob: -17.136871337890625
    10. '＝' → logprob: -17.386871337890625

Token 404: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.07889342308044434
    2. ' neighbors' → logprob: -2.5788934230804443
    3. 'ne' → logprob: -13.328893661499023
    4. 'neighbor' → logprob: -13.953893661499023
    5. ' neighbours' → logprob: -14.328893661499023
    6. '_neighbors' → logprob: -14.703893661499023
    7. 'Neighbors' → logprob: -16.578893661499023
    8. ' ' → logprob: -17.453893661499023
    9. ' neigh' → logprob: -17.578893661499023
    10. '(ne' → logprob: -17.703893661499023

Token 405: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 406: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 407: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.26282554864883423
    2. '   ' → logprob: -1.8878254890441895
    3. '<|end|>' → logprob: -2.6378254890441895
    4. ' def' → logprob: -5.5128254890441895
    5. '<|end|>' → logprob: -6.6378254890441895
    6. '
' → logprob: -7.2628254890441895
    7. '    
' → logprob: -7.2628254890441895
    8. '```' → logprob: -7.8878254890441895
    9. '	def' → logprob: -8.262825965881348
    10. ' ' → logprob: -8.762825965881348

Token 408: ' neighbors' (ID: 31655)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.710736870765686
    2. 'find' → logprob: -1.210736870765686
    3. ' find' → logprob: -2.8357367515563965
    4. ' get' → logprob: -3.2107367515563965
    5. 'dfs' → logprob: -3.5857367515563965
    6. 'connected' → logprob: -3.7107367515563965
    7. 'neighbors' → logprob: -4.4607367515563965
    8. 'has' → logprob: -4.4607367515563965
    9. 'count' → logprob: -4.8357367515563965
    10. 'is' → logprob: -4.9607367515563965

Token 409: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.542423165636137e-05
    2. '(' → logprob: -9.500085830688477
    3. ' (' → logprob: -11.500085830688477
    4. '   ' → logprob: -15.250085830688477
    5. 'self' → logprob: -16.000085830688477
    6. '(s' → logprob: -17.250085830688477
    7. '       ' → logprob: -17.875085830688477
    8. '(
' → logprob: -17.875085830688477
    9. ' self' → logprob: -18.375085830688477
    10. ' ' → logprob: -19.000085830688477

Token 410: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.32654589228332e-05
    2. 'self' → logprob: -10.250073432922363
    3. ' ,' → logprob: -11.000073432922363
    4. ',self' → logprob: -11.000073432922363
    5. ',r' → logprob: -13.125073432922363
    6. '(self' → logprob: -13.875073432922363
    7. ',s' → logprob: -14.500073432922363
    8. ',
' → logprob: -15.000073432922363
    9. '       ' → logprob: -15.125073432922363
    10. '   ' → logprob: -15.375073432922363

Token 411: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0024893339723348618
    2. ' r' → logprob: -6.0024895668029785
    3. 'vertex' → logprob: -11.87748908996582
    4. 'self' → logprob: -13.12748908996582
    5. '   ' → logprob: -13.12748908996582
    6. 'pos' → logprob: -14.00248908996582
    7. ' vertex' → logprob: -14.75248908996582
    8. 'position' → logprob: -14.75248908996582
    9. 'row' → logprob: -14.87748908996582
    10. ' ' → logprob: -15.25248908996582

Token 412: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032404589001089334
    2. ',c' → logprob: -5.753240585327148
    3. ' ,' → logprob: -10.003240585327148
    4. ',r' → logprob: -11.503240585327148
    5. ',n' → logprob: -12.503240585327148
    6. '   ' → logprob: -13.378240585327148
    7. ',k' → logprob: -14.628240585327148
    8. ',
' → logprob: -15.003240585327148
    9. ',b' → logprob: -15.253240585327148
    10. ',self' → logprob: -15.878240585327148

Token 413: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.836499985889532e-05
    2. ' c' → logprob: -9.7500581741333
    3. 'col' → logprob: -19.125059127807617
    4. '   ' → logprob: -19.375059127807617
    5. ' ' → logprob: -20.250059127807617
    6. '  ' → logprob: -20.375059127807617
    7. '	c' → logprob: -20.875059127807617
    8. ')c' → logprob: -22.250059127807617
    9. '<|end|>' → logprob: -22.625059127807617
    10. '    ' → logprob: -22.625059127807617

Token 414: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001025662524625659
    2. '):
' → logprob: -7.001025676727295
    3. ')' → logprob: -9.126025199890137
    4. ' ):' → logprob: -12.751025199890137
    5. '   ' → logprob: -13.251025199890137
    6. '):
' → logprob: -14.751025199890137
    7. ' ' → logprob: -16.126026153564453
    8. '       ' → logprob: -16.251026153564453
    9. '):

' → logprob: -17.376026153564453
    10. ')：' → logprob: -17.626026153564453

Token 415: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0051802704110741615
    2. 'return' → logprob: -6.005180358886719
    3. ' return' → logprob: -6.005180358886719
    4. ':' → logprob: -8.505180358886719
    5. ':return' → logprob: -11.505180358886719
    6. '   ' → logprob: -11.755180358886719
    7. '	' → logprob: -12.630180358886719
    8. ':
' → logprob: -12.880180358886719
    9. '	return' → logprob: -13.005180358886719
    10. ' :' → logprob: -14.130180358886719

Token 416: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011915893293917179
    2. ' return' → logprob: -5.011915683746338
    3. '       ' → logprob: -5.261915683746338
    4. '	return' → logprob: -14.261916160583496
    5. '   ' → logprob: -15.011916160583496
    6. ':return' → logprob: -15.136916160583496
    7. '
' → logprob: -15.261916160583496
    8. ':' → logprob: -16.38691520690918
    9. '{return' → logprob: -17.63691520690918
    10. 'eturn' → logprob: -17.63691520690918

Token 417: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007118358626030385
    2. ' self' → logprob: -7.250711917877197
    3. '[self' → logprob: -13.250711441040039
    4. '(self' → logprob: -16.50071144104004
    5. '	self' → logprob: -17.62571144104004
    6. '   ' → logprob: -18.37571144104004
    7. '       ' → logprob: -19.75071144104004
    8. '[' → logprob: -20.00071144104004
    9. '=self' → logprob: -20.37571144104004
    10. '[]' → logprob: -20.75071144104004

Token 418: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -3.3213025744771585e-05
    2. '.' → logprob: -10.500033378601074
    3. ' .' → logprob: -12.250033378601074
    4. '.Ad' → logprob: -15.500033378601074
    5. '.s' → logprob: -15.750033378601074
    6. '.grid' → logprob: -16.625032424926758
    7. '.ads' → logprob: -16.750032424926758
    8. '.self' → logprob: -17.250032424926758
    9. '.ac' → logprob: -17.250032424926758
    10. '.ob' → logprob: -17.625032424926758

Token 419: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.0788988247513771
    2. 'acency' → logprob: -2.5788989067077637
    3. 'j' → logprob: -11.703898429870605
    4. 'Jac' → logprob: -15.078898429870605
    5. ' adjacency' → logprob: -15.203898429870605
    6. 'ac' → logprob: -15.953898429870605
    7. ' jac' → logprob: -16.203899383544922
    8. 'yac' → logprob: -17.078899383544922
    9. 'jc' → logprob: -17.703899383544922
    10. 's' → logprob: -17.953899383544922

Token 420: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -3.292907877039397e-06
    2. 'acency' → logprob: -13.25000286102295
    3. 'acy' → logprob: -13.87500286102295
    4. 'ENCY' → logprob: -15.25000286102295
    5. 'ancy' → logprob: -15.75000286102295
    6. 'encv' → logprob: -17.375003814697266
    7. 'ent' → logprob: -17.750003814697266
    8. '   ' → logprob: -17.875003814697266
    9. 'n' → logprob: -18.250003814697266
    10. '#' → logprob: -18.375003814697266

Token 421: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -7.107425062713446e-06
    2. 'self' → logprob: -12.000006675720215
    3. 'map' → logprob: -14.125006675720215
    4. 'Map' → logprob: -16.87500762939453
    5. '[(' → logprob: -16.87500762939453
    6. '[self' → logprob: -18.37500762939453
    7. '(self' → logprob: -18.50000762939453
    8. '   ' → logprob: -18.87500762939453
    9. '_MAP' → logprob: -19.25000762939453
    10. '_' → logprob: -19.62500762939453

Token 422: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.4740781784057617
    2. '[(' → logprob: -0.9740781784057617
    3. 'get' → logprob: -13.724078178405762
    4. '.' → logprob: -15.974078178405762
    5. '   ' → logprob: -17.974079132080078
    6. '[' → logprob: -18.724079132080078
    7. '[r' → logprob: -19.474079132080078
    8. '.setdefault' → logprob: -19.474079132080078
    9. '[self' → logprob: -19.849079132080078
    10. ' .' → logprob: -20.349079132080078

Token 423: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -3.619311974034645e-05
    2. '(' → logprob: -10.250036239624023
    3. ' ((' → logprob: -14.500036239624023
    4. '(
' → logprob: -16.500036239624023
    5. ' (' → logprob: -16.500036239624023
    6. ' ' → logprob: -17.000036239624023
    7. '(self' → logprob: -18.750036239624023
    8. '[(' → logprob: -20.125036239624023
    9. '  ' → logprob: -20.625036239624023
    10. '(((' → logprob: -20.625036239624023

Token 424: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -4.320199877838604e-07
    2. ' r' → logprob: -14.875
    3. '   ' → logprob: -19.5
    4. '(r' → logprob: -20.375
    5. '	r' → logprob: -21.125
    6. '_r' → logprob: -21.25
    7. ')' → logprob: -21.75
    8. ' ' → logprob: -22.0
    9. '    ' → logprob: -22.625
    10. '{' → logprob: -22.625

Token 425: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.006775288376957178
    2. ',' → logprob: -5.006775379180908
    3. ' ,' → logprob: -10.25677490234375
    4. 'c' → logprob: -11.13177490234375
    5. ',r' → logprob: -11.88177490234375
    6. ',
' → logprob: -13.75677490234375
    7. '   ' → logprob: -14.25677490234375
    8. ' c' → logprob: -15.25677490234375
    9. '<c' → logprob: -15.25677490234375
    10. ')c' → logprob: -15.25677490234375

Token 426: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.01760907471179962
    2. '))' → logprob: -4.642609119415283
    3. ',' → logprob: -4.892609119415283
    4. ')' → logprob: -8.267608642578125
    5. '},' → logprob: -11.142608642578125
    6. '),(' → logprob: -11.142608642578125
    7. ' ),' → logprob: -11.267608642578125
    8. '],' → logprob: -11.642608642578125
    9. ',),' → logprob: -11.892608642578125
    10. '(),' → logprob: -13.642608642578125

Token 427: '[]' (ID: 1951)
  Prédit: '[])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[])' → logprob: -0.0004374638374429196
    2. '[]' → logprob: -7.750437259674072
    3. ' [])' → logprob: -12.50043773651123
    4. '[])
' → logprob: -13.12543773651123
    5. ')' → logprob: -13.75043773651123
    6. '[]
' → logprob: -17.125436782836914
    7. '[' → logprob: -19.125436782836914
    8. '[]):' → logprob: -19.250436782836914
    9. '[]>' → logprob: -19.750436782836914
    10. '[]}' → logprob: -20.375436782836914

Token 428: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1756367712223437e-05
    2. '())' → logprob: -11.500011444091797
    3. '()' → logprob: -14.000011444091797
    4. ' )' → logprob: -14.500011444091797
    5. '))' → logprob: -16.500011444091797
    6. '[])' → logprob: -16.875011444091797
    7. ')
' → logprob: -17.000011444091797
    8. '   ' → logprob: -18.375011444091797
    9. ')}' → logprob: -18.500011444091797
    10. ')return' → logprob: -18.875011444091797

Token 429: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 430: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.48097366094589233
    2. '   ' → logprob: -0.9809736609458923
    3. ' def' → logprob: -5.105973720550537
    4. ' ' → logprob: -8.480973243713379
    5. '	def' → logprob: -9.105973243713379
    6. '    
' → logprob: -9.230973243713379
    7. '```' → logprob: -9.355973243713379
    8. '<|end|>' → logprob: -9.355973243713379
    9. '       ' → logprob: -9.855973243713379
    10. ')' → logprob: -9.980973243713379

Token 431: ' empty' (ID: 8213)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.7144991755485535
    2. 'find' → logprob: -2.2144992351531982
    3. 'count' → logprob: -3.2144992351531982
    4. ' capture' → logprob: -3.2144992351531982
    5. 'has' → logprob: -3.7144992351531982
    6. ' has' → logprob: -3.8394992351531982
    7. ' count' → logprob: -3.9644992351531982
    8. 'is' → logprob: -4.089498996734619
    9. ' get' → logprob: -4.214498996734619
    10. ' copy' → logprob: -4.214498996734619

Token 432: '_vertices' (ID: 96842)
  Prédit: '_vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vertices' → logprob: -0.8167977929115295
    2. '_positions' → logprob: -0.9417977929115295
    3. '_points' → logprob: -2.6917977333068848
    4. '_spaces' → logprob: -2.9417977333068848
    5. '_neighbors' → logprob: -3.1917977333068848
    6. '_cells' → logprob: -5.816797733306885
    7. '_places' → logprob: -6.941797733306885
    8. '_' → logprob: -7.066797733306885
    9. '_sp' → logprob: -7.441797733306885
    10. '_inter' → logprob: -8.316798210144043

Token 433: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011147326789796352
    2. '(' → logprob: -4.511147499084473
    3. ' (' → logprob: -10.011147499084473
    4. 'self' → logprob: -10.011147499084473
    5. '   ' → logprob: -11.886147499084473
    6. '(
' → logprob: -14.386147499084473
    7. ' ' → logprob: -14.761147499084473
    8. '()' → logprob: -14.761147499084473
    9. '       ' → logprob: -15.261147499084473
    10. '(s' → logprob: -15.386147499084473

Token 434: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16353528201580048
    2. '):
' → logprob: -2.1635353565216064
    3. 'self' → logprob: -4.038535118103027
    4. ')' → logprob: -4.413535118103027
    5. '(self' → logprob: -5.163535118103027
    6. '):

' → logprob: -8.663535118103027
    7. ' ):' → logprob: -8.913535118103027
    8. '   ' → logprob: -10.038535118103027
    9. '):
' → logprob: -10.663535118103027
    10. ',' → logprob: -10.788535118103027

Token 435: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009767174487933517
    2. '[]' → logprob: -7.8759765625
    3. '():
' → logprob: -9.0009765625
    4. 'return' → logprob: -9.1259765625
    5. 'for' → logprob: -9.8759765625
    6. ':
' → logprob: -9.8759765625
    7. ' for' → logprob: -9.8759765625
    8. '[' → logprob: -10.7509765625
    9. '   ' → logprob: -10.7509765625
    10. 'result' → logprob: -10.7509765625

Token 436: ' for' (ID: 395)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.7954932451248169
    2. 'empt' → logprob: -0.9204932451248169
    3. 'for' (adapté à ' for') → logprob: -2.7954931259155273
    4. 'result' → logprob: -3.6704931259155273
    5. '       ' → logprob: -3.7954931259155273
    6. 'vertices' → logprob: -4.170493125915527
    7. 'verts' → logprob: -4.420493125915527
    8. 'ev' → logprob: -4.795493125915527
    9. 'return' → logprob: -6.295493125915527
    10. ' empt' → logprob: -6.670493125915527

Token 437: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2519303858280182
    2. ' r' → logprob: -1.5019303560256958
    3. 'row' → logprob: -14.001930236816406
    4. ' row' → logprob: -15.376930236816406
    5. '   ' → logprob: -15.626930236816406
    6. '	r' → logprob: -16.751930236816406
    7. '_r' → logprob: -16.751930236816406
    8. ' ' → logprob: -18.876930236816406
    9. '```' → logprob: -19.001930236816406
    10. ' р' → logprob: -20.251930236816406

Token 438: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002188925864174962
    2. 'in' → logprob: -6.1271891593933105
    3. ' ' → logprob: -12.627188682556152
    4. ',' → logprob: -16.62718963623047
    5. '   ' → logprob: -16.62718963623047
    6. '	in' → logprob: -16.87718963623047
    7. 'range' → logprob: -17.00218963623047
    8. '  ' → logprob: -17.00218963623047
    9. ')' → logprob: -17.87718963623047
    10. '    ' → logprob: -17.87718963623047

Token 439: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020354038861114532
    2. ' range' → logprob: -8.500203132629395
    3. '   ' → logprob: -22.37520408630371
    4. ' ' → logprob: -22.87520408630371
    5. '(range' → logprob: -22.87520408630371
    6. '	range' → logprob: -23.12520408630371
    7. '  ' → logprob: -23.62520408630371
    8. '0' → logprob: -25.25020408630371
    9. '    ' → logprob: -25.62520408630371
    10. 'Range' → logprob: -25.62520408630371

Token 440: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.360996485454962e-05
    2. 'self' → logprob: -9.7500638961792
    3. '(' → logprob: -12.2500638961792
    4. ' self' → logprob: -15.0000638961792
    5. '   ' → logprob: -16.625062942504883
    6. '0' → logprob: -18.000062942504883
    7. '1' → logprob: -18.375062942504883
    8. '       ' → logprob: -18.500062942504883
    9. '	self' → logprob: -18.750062942504883
    10. '[self' → logprob: -19.000062942504883

Token 441: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -3.440506407059729e-05
    2. 'size' → logprob: -10.37503433227539
    3. '.' → logprob: -12.87503433227539
    4. ' size' → logprob: -14.87503433227539
    5. ' .' → logprob: -15.87503433227539
    6. '	size' → logprob: -17.62503433227539
    7. '   ' → logprob: -18.25003433227539
    8. '.s' → logprob: -18.87503433227539
    9. '_size' → logprob: -18.87503433227539
    10. '<size' → logprob: -18.87503433227539

Token 442: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4742175340652466
    2. '):' → logprob: -0.9742175340652466
    3. '+' → logprob: -9.599217414855957
    4. '   ' → logprob: -10.099217414855957
    5. '):
' → logprob: -11.099217414855957
    6. ':' → logprob: -11.974217414855957
    7. ':
' → logprob: -13.099217414855957
    8. ' ):
' → logprob: -13.099217414855957
    9. ' ):' → logprob: -13.099217414855957
    10. '       ' → logprob: -13.599217414855957

Token 443: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04766954481601715
    2. '   ' → logprob: -3.1726696491241455
    3. ' for' → logprob: -5.547669410705566
    4. '           ' → logprob: -8.047669410705566
    5. '	   ' → logprob: -8.047669410705566
    6. '	       ' → logprob: -10.422669410705566
    7. ' ' → logprob: -10.547669410705566
    8. '	for' → logprob: -10.797669410705566
    9. '<|end|>' → logprob: -11.422669410705566
    10. '     ' → logprob: -11.672669410705566

Token 444: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.029765525832772255
    2. ' for' → logprob: -3.5297656059265137
    3. '   ' → logprob: -11.279765129089355
    4. '           ' → logprob: -13.279765129089355
    5. '	for' → logprob: -14.779765129089355
    6. '       ' → logprob: -15.404765129089355
    7. ' ' → logprob: -15.904765129089355
    8. 'c' → logprob: -19.404766082763672
    9. 'yield' → logprob: -19.404766082763672
    10. '  ' → logprob: -20.279766082763672

Token 445: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02324792370200157
    2. ' c' → logprob: -3.7732479572296143
    3. '   ' → logprob: -13.398247718811035
    4. ' ' → logprob: -14.898247718811035
    5. '(c' → logprob: -15.648247718811035
    6. '	c' → logprob: -16.39824867248535
    7. 'range' → logprob: -16.64824867248535
    8. ' range' → logprob: -17.02324867248535
    9. '_c' → logprob: -17.27324867248535
    10. '0' → logprob: -17.39824867248535

Token 446: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016036128625273705
    2. 'in' → logprob: -4.141036033630371
    3. ' ' → logprob: -14.266036033630371
    4. '   ' → logprob: -14.891036033630371
    5. '0' → logprob: -15.141036033630371
    6. '  ' → logprob: -15.766036033630371
    7. '    ' → logprob: -16.016036987304688
    8. 'In' → logprob: -16.266036987304688
    9. 'n' → logprob: -16.391036987304688
    10. 'import' → logprob: -16.641036987304688

Token 447: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740978181362152
    2. 'range' → logprob: -0.9740978479385376
    3. '(range' → logprob: -10.849098205566406
    4. '(r' → logprob: -14.974098205566406
    5. 'r' → logprob: -15.349098205566406
    6. '0' → logprob: -15.349098205566406
    7. ' in' → logprob: -15.724098205566406
    8. 'in' → logprob: -16.099098205566406
    9. '   ' → logprob: -16.224098205566406
    10. '(' → logprob: -16.474098205566406

Token 448: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.2948405128554441e-05
    2. '(' → logprob: -11.87501335144043
    3. ' (' → logprob: -12.12501335144043
    4. '   ' → logprob: -15.75001335144043
    5. '0' → logprob: -16.12501335144043
    6. 'r' → logprob: -16.50001335144043
    7. '(range' → logprob: -16.87501335144043
    8. '       ' → logprob: -17.75001335144043
    9. '           ' → logprob: -17.87501335144043
    10. ' r' → logprob: -18.12501335144043

Token 449: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002637199067976326
    2. ' +' → logprob: -8.250264167785645
    3. '1' → logprob: -14.375264167785645
    4. '   ' → logprob: -14.625264167785645
    5. '+c' → logprob: -15.125264167785645
    6. ')+' → logprob: -15.375264167785645
    7. '):' → logprob: -15.500264167785645
    8. '):
' → logprob: -15.750264167785645
    9. '()+' → logprob: -16.000263214111328
    10. '+
' → logprob: -16.000263214111328

Token 450: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.537868779967539e-06
    2. ' ' → logprob: -12.000008583068848
    3. '   ' → logprob: -13.750008583068848
    4. '+' → logprob: -14.875008583068848
    5. '       ' → logprob: -15.125008583068848
    6. '           ' → logprob: -15.250008583068848
    7. '                   ' → logprob: -16.68750762939453
    8. '               ' → logprob: -16.68750762939453
    9. ')' → logprob: -17.12500762939453
    10. '     ' → logprob: -17.25000762939453

Token 451: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.021623803302645683
    2. '):' → logprob: -3.8966238498687744
    3. '+' → logprob: -6.896623611450195
    4. '       ' → logprob: -10.646623611450195
    5. '           ' → logprob: -10.771623611450195
    6. ' +' → logprob: -12.146623611450195
    7. '):
' → logprob: -12.146623611450195
    8. '               ' → logprob: -12.521623611450195
    9. '):

' → logprob: -12.771623611450195
    10. '():
' → logprob: -12.896623611450195

Token 452: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.800739018013701e-05
    2. ' if' → logprob: -10.1250581741333
    3. '           ' → logprob: -11.1250581741333
    4. '       ' → logprob: -13.7500581741333
    5. '		       ' → logprob: -14.6250581741333
    6. '              ' → logprob: -15.1250581741333
    7. 'if' → logprob: -15.5000581741333
    8. ',' → logprob: -15.7500581741333
    9. '                
' → logprob: -15.7500581741333
    10. '                   ' → logprob: -16.000057220458984

Token 453: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011754498817026615
    2. ' if' → logprob: -4.511754512786865
    3. '                   ' → logprob: -7.261754512786865
    4. '               ' → logprob: -13.261754035949707
    5. 'vertex' → logprob: -13.386754035949707
    6. '                       ' → logprob: -14.386754035949707
    7. 'yield' → logprob: -15.636754035949707
    8. '   ' → logprob: -15.761754035949707
    9. 'v' → logprob: -16.011754989624023
    10. '                    
' → logprob: -16.011754989624023

Token 454: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20143146812915802
    2. ' self' → logprob: -1.7014315128326416
    3. '               ' → logprob: -11.076431274414062
    4. '(self' → logprob: -13.326431274414062
    5. '                   ' → logprob: -15.201431274414062
    6. '   ' → logprob: -15.826431274414062
    7. '           ' → logprob: -15.826431274414062
    8. 'not' → logprob: -15.951431274414062
    9. ' not' → logprob: -16.076431274414062
    10. '	self' → logprob: -16.201431274414062

Token 455: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.20152628421783447
    2. '.get' → logprob: -1.7015262842178345
    3. '.' → logprob: -9.826526641845703
    4. ' .' → logprob: -9.951526641845703
    5. 'grid' → logprob: -12.201526641845703
    6. '   ' → logprob: -13.201526641845703
    7. 'get' → logprob: -13.201526641845703
    8. 'self' → logprob: -14.826526641845703
    9. '       ' → logprob: -14.951526641845703
    10. '.g' → logprob: -15.451526641845703

Token 456: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -3.128163257315464e-07
    2. 'r' → logprob: -15.875
    3. ' [' → logprob: -16.375
    4. '][' → logprob: -17.75
    5. '[' → logprob: -17.75
    6. '   ' → logprob: -18.375
    7. '```' → logprob: -19.125
    8. ')[' → logprob: -19.5
    9. '[c' → logprob: -19.625
    10. '[u' → logprob: -20.125

Token 457: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003229494614060968
    2. ']' → logprob: -8.250323295593262
    3. '[c' → logprob: -10.000323295593262
    4. '[' → logprob: -11.625323295593262
    5. ' ][' → logprob: -12.625323295593262
    6. '[r' → logprob: -12.875323295593262
    7. '   ' → logprob: -15.250323295593262
    8. '"][' → logprob: -15.250323295593262
    9. ''][' → logprob: -15.875323295593262
    10. ']][' → logprob: -15.875323295593262

Token 458: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.034592388459714e-06
    2. ' c' → logprob: -12.375005722045898
    3. '][' → logprob: -13.750005722045898
    4. '[c' → logprob: -14.875005722045898
    5. '[' → logprob: -16.1250057220459
    6. ')c' → logprob: -16.6250057220459
    7. '   ' → logprob: -16.7500057220459
    8. ' ' → logprob: -18.0000057220459
    9. '               ' → logprob: -18.5000057220459
    10. '.c' → logprob: -18.5000057220459

Token 459: '].' (ID: 1651)
  Prédit: '.st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.0095362588763237
    2. '.' → logprob: -5.134536266326904
    3. ').' → logprob: -6.634536266326904
    4. '.s' → logprob: -6.884536266326904
    5. '].' → logprob: -7.134536266326904
    6. ' .' → logprob: -8.634535789489746
    7. '.token' → logprob: -10.009535789489746
    8. '}.' → logprob: -10.134535789489746
    9. '.space' → logprob: -10.384535789489746
    10. '.star' → logprob: -10.384535789489746

Token 460: 'stone' (ID: 18617)
  Prédit: 'stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stone' → logprob: -9.088346359931165e-07
    2. ' stone' → logprob: -14.000000953674316
    3. 'ston' → logprob: -16.75
    4. 'Stone' → logprob: -21.125
    5. 'sto' → logprob: -21.25
    6. 'star' → logprob: -22.0
    7. 'stones' → logprob: -22.5
    8. 'STONE' → logprob: -22.625
    9. '```' → logprob: -23.125
    10. 's' → logprob: -23.25

Token 461: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10022597759962082
    2. '==' → logprob: -2.3502259254455566
    3. ' ' → logprob: -11.225226402282715
    4. '=' → logprob: -13.100226402282715
    5. ']==' → logprob: -13.850226402282715
    6. ' =' → logprob: -14.100226402282715
    7. ')==' → logprob: -14.225226402282715
    8. '==
' → logprob: -14.225226402282715
    9. ')' → logprob: -14.850226402282715
    10. '===' → logprob: -16.1002254486084

Token 462: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -19.500431060791016
    4. '۰' → logprob: -22.000431060791016
    5. '  ' → logprob: -22.125431060791016
    6. '```' → logprob: -23.375431060791016
    7. '
' → logprob: -23.500431060791016
    8. ' ' → logprob: -23.500431060791016
    9. '00' → logprob: -23.625431060791016
    10. '=' → logprob: -23.625431060791016

Token 463: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '۰' → logprob: -22.5
    4. '   ' → logprob: -22.75
    5. '00' → logprob: -24.5
    6. '=' → logprob: -24.625
    7. '
' → logprob: -24.75
    8. ' ' → logprob: -25.0
    9. '０' → logprob: -25.125
    10. '```' → logprob: -25.375

Token 464: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6008646488189697
    2. ':
' → logprob: -0.8508646488189697
    3. '                   ' → logprob: -3.7258646488189697
    4. '               ' → logprob: -8.47586441040039
    5. '                       ' → logprob: -8.72586441040039
    6. ':return' → logprob: -9.85086441040039
    7. '):
' → logprob: -10.10086441040039
    8. '():
' → logprob: -11.22586441040039
    9. ' :
' → logprob: -11.47586441040039
    10. ':
' → logprob: -11.47586441040039

Token 465: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003936152206733823
    2. ' yield' → logprob: -8.250393867492676
    3. '                       ' → logprob: -9.375393867492676
    4. 'yield' → logprob: -10.375393867492676
    5. '                  ' → logprob: -12.375393867492676
    6. '               ' → logprob: -12.375393867492676
    7. ' return' → logprob: -13.125393867492676
    8. '                    ' → logprob: -13.250393867492676
    9. '	yield' → logprob: -13.750393867492676
    10. 'return' → logprob: -14.125393867492676

Token 466: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.3138221800327301
    2. ' yield' → logprob: -1.3138221502304077
    3. '                   ' → logprob: -7.938822269439697
    4. '	yield' → logprob: -8.688821792602539
    5. '                       ' → logprob: -10.313821792602539
    6. 'Yield' → logprob: -13.938821792602539
    7. '                    ' → logprob: -14.938821792602539
    8. 'y' → logprob: -15.688821792602539
    9. ' yields' → logprob: -15.688821792602539
    10. '   ' → logprob: -16.18882179260254

Token 467: ' (' (ID: 350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8152587413787842
    2. '(self' → logprob: -1.0652587413787842
    3. ' (' → logprob: -2.065258741378784
    4. ' self' → logprob: -3.065258741378784
    5. '(r' → logprob: -3.315258741378784
    6. 'r' → logprob: -5.815258979797363
    7. ' r' → logprob: -9.440258979797363
    8. '               ' → logprob: -11.565258979797363
    9. '                   ' → logprob: -11.690258979797363
    10. '   ' → logprob: -13.190258979797363

Token 468: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.9361264946837764e-07
    2. ' r' → logprob: -16.0
    3. '_r' → logprob: -21.5
    4. '                   ' → logprob: -22.0
    5. '	r' → logprob: -22.375
    6. '   ' → logprob: -22.5
    7. '
' → logprob: -23.5
    8. ',r' → logprob: -24.375
    9. ')' → logprob: -24.75
    10. '                       ' → logprob: -24.75

Token 469: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16085530817508698
    2. ',c' → logprob: -1.9108552932739258
    3. ' ,' → logprob: -7.410855293273926
    4. ',
' → logprob: -10.910855293273926
    5. '<|end|>' → logprob: -12.160855293273926
    6. ' ' → logprob: -15.160855293273926
    7. ',b' → logprob: -15.410855293273926
    8. '‌,' → logprob: -15.535855293273926
    9. ',col' → logprob: -15.785855293273926
    10. ')' → logprob: -15.785855293273926

Token 470: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8444881536415778e-05
    2. ')
' → logprob: -10.500028610229492
    3. ' )' → logprob: -14.250028610229492
    4. '<|end|>' → logprob: -17.000028610229492
    5. '),' → logprob: -17.125028610229492
    6. ',' → logprob: -17.500028610229492
    7. ')

' → logprob: -17.875028610229492
    8. '               ' → logprob: -18.625028610229492
    9. ')\
' → logprob: -19.125028610229492
    10. '                   ' → logprob: -19.250028610229492

Token 471: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 472: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.11324094235897064
    2. '   ' → logprob: -2.238240957260132
    3. ' def' → logprob: -8.113241195678711
    4. 'class' → logprob: -10.363241195678711
    5. '<|end|>' → logprob: -11.238241195678711
    6. '    
' → logprob: -11.488241195678711
    7. '       ' → logprob: -11.488241195678711
    8. ')' → logprob: -11.613241195678711
    9. '#' → logprob: -11.738241195678711
    10. '```' → logprob: -11.863241195678711

Token 473: ' copy' (ID: 5150)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connected' → logprob: -1.631445288658142
    2. 'has' → logprob: -2.2564454078674316
    3. ' capture' → logprob: -2.5064454078674316
    4. 'find' → logprob: -2.7564454078674316
    5. 'capture' → logprob: -2.7564454078674316
    6. 'place' → logprob: -2.8814454078674316
    7. 'group' → logprob: -3.0064454078674316
    8. ' find' → logprob: -3.0064454078674316
    9. 'count' → logprob: -3.0064454078674316
    10. ' connected' → logprob: -3.2564454078674316

Token 474: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0029023548122495413
    2. '(' → logprob: -5.877902507781982
    3. ' (' → logprob: -9.502902030944824
    4. '   ' → logprob: -11.627902030944824
    5. 'self' → logprob: -11.877902030944824
    6. '(s' → logprob: -13.627902030944824
    7. '(
' → logprob: -13.752902030944824
    8. 'def' → logprob: -13.752902030944824
    9. '()' → logprob: -14.002902030944824
    10. '_' → logprob: -14.627902030944824

Token 475: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22642573714256287
    2. ',' → logprob: -1.8514257669448853
    3. '):
' → logprob: -3.7264256477355957
    4. ')' → logprob: -3.8514256477355957
    5. '):

' → logprob: -9.601426124572754
    6. ',size' → logprob: -9.601426124572754
    7. ' ):' → logprob: -10.101426124572754
    8. ',self' → logprob: -10.101426124572754
    9. 'self' → logprob: -10.851426124572754
    10. ' ,' → logprob: -11.351426124572754

Token 476: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011153311934322119
    2. ':' → logprob: -8.001115798950195
    3. '
' → logprob: -8.126115798950195
    4. '   ' → logprob: -8.626115798950195
    5. '        
' → logprob: -9.626115798950195
    6. ' =' → logprob: -9.751115798950195
    7. ':
' → logprob: -10.251115798950195
    8. '    
' → logprob: -10.751115798950195
    9. ',' → logprob: -10.751115798950195
    10. 'def' → logprob: -10.876115798950195

Token 477: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.0042694080621004105
    2. ' new' → logprob: -6.004269599914551
    3. 'b' → logprob: -6.504269599914551
    4. 'board' → logprob: -8.75426959991455
    5. 'import' → logprob: -9.37926959991455
    6. 'copy' → logprob: -10.12926959991455
    7. '   ' → logprob: -12.12926959991455
    8. ' b' → logprob: -13.00426959991455
    9. 'nb' → logprob: -13.12926959991455
    10. 'cop' → logprob: -13.87926959991455

Token 478: '_board' (ID: 55737)
  Prédit: ' Board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Board' → logprob: -0.4699942469596863
    2. ' =' → logprob: -1.219994306564331
    3. 'Board' → logprob: -2.969994306564331
    4. ' ' → logprob: -4.594994068145752
    5. '(Board' → logprob: -5.219994068145752
    6. '=' → logprob: -5.344994068145752
    7. '()' → logprob: -6.094994068145752
    8. '_board' → logprob: -6.719994068145752
    9. '_' → logprob: -7.219994068145752
    10. '(' → logprob: -7.344994068145752

Token 479: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018194425851106644
    2. '=' → logprob: -4.018194198608398
    3. '(' → logprob: -10.268194198608398
    4. '   ' → logprob: -12.768194198608398
    5. '(self' → logprob: -12.893194198608398
    6. ' =
' → logprob: -13.768194198608398
    7. '=self' → logprob: -13.893194198608398
    8. ')' → logprob: -14.518194198608398
    9. ' ' → logprob: -14.768194198608398
    10. '(size' → logprob: -14.893194198608398

Token 480: ' Board' (ID: 10837)
  Prédit: ' Board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Board' → logprob: -0.2014133334159851
    2. 'Board' → logprob: -1.7014133930206299
    3. '(Board' → logprob: -17.326414108276367
    4. '.Board' → logprob: -18.701414108276367
    5. 'self' → logprob: -18.826414108276367
    6. 'type' → logprob: -19.076414108276367
    7. ' type' → logprob: -19.451414108276367
    8. '   ' → logprob: -20.076414108276367
    9. ' self' → logprob: -20.076414108276367
    10. ' ' → logprob: -20.201414108276367

Token 481: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.250000953674316
    3. 'self' → logprob: -16.125
    4. '(len' → logprob: -18.25
    5. ' (' → logprob: -18.75
    6. '(
' → logprob: -19.5
    7. '(size' → logprob: -20.5
    8. '(s' → logprob: -20.5
    9. '((' → logprob: -20.875
    10. ' self' → logprob: -21.0

Token 482: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -1.5048530030981055e-06
    2. 'size' → logprob: -13.500001907348633
    3. '.' → logprob: -17.875001907348633
    4. ').' → logprob: -18.500001907348633
    5. '	size' → logprob: -19.875001907348633
    6. ' .' → logprob: -20.000001907348633
    7. ' size' → logprob: -20.250001907348633
    8. ',size' → logprob: -21.375001907348633
    9. '(size' → logprob: -21.875001907348633
    10. '.s' → logprob: -22.125001907348633

Token 483: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5759478807449341
    2. ')' → logprob: -0.8259478807449341
    3. ')
' → logprob: -11.825947761535645
    4. ')

' → logprob: -14.450947761535645
    5. ' )
' → logprob: -14.950947761535645
    6. ' )' → logprob: -16.32594871520996
    7. ')`
' → logprob: -16.95094871520996
    8. '       ' → logprob: -17.07594871520996
    9. '),' → logprob: -17.70094871520996
    10. '   ' → logprob: -17.82594871520996

Token 484: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022824073676019907
    2. '
' → logprob: -6.627282619476318
    3. 'new' → logprob: -8.12728214263916
    4. '	' → logprob: -8.62728214263916
    5. '        
' → logprob: -8.62728214263916
    6. ' for' → logprob: -9.37728214263916
    7. 'for' → logprob: -9.62728214263916
    8. ' new' → logprob: -10.50228214263916
    9. '[new' → logprob: -10.87728214263916
    10. '<|end|>' → logprob: -11.00228214263916

Token 485: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.015227288007736206
    2. 'new' → logprob: -4.265227317810059
    3. ' for' → logprob: -6.890227317810059
    4. '       ' → logprob: -10.640227317810059
    5. ' new' → logprob: -10.765227317810059
    6. 'from' → logprob: -16.265226364135742
    7. '[new' → logprob: -16.265226364135742
    8. '   ' → logprob: -16.515226364135742
    9. '```' → logprob: -16.765226364135742
    10. '        
' → logprob: -17.015226364135742

Token 486: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0021853535436093807
    2. ' r' → logprob: -6.127185344696045
    3. '(r' → logprob: -16.377185821533203
    4. '_r' → logprob: -16.627185821533203
    5. ' (' → logprob: -18.752185821533203
    6. 'row' → logprob: -18.877185821533203
    7. '(' → logprob: -19.002185821533203
    8. '	r' → logprob: -19.002185821533203
    9. ' ' → logprob: -20.002185821533203
    10. '   ' → logprob: -20.002185821533203

Token 487: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007105246186256409
    2. 'in' → logprob: -7.250710487365723
    3. ',' → logprob: -14.750710487365723
    4. ' ' → logprob: -15.625710487365723
    5. ')' → logprob: -17.62571144104004
    6. 'range' → logprob: -17.87571144104004
    7. '   ' → logprob: -18.12571144104004
    8. ' range' → logprob: -18.75071144104004
    9. '	in' → logprob: -19.12571144104004
    10. 'n' → logprob: -19.12571144104004

Token 488: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.15310683415737e-05
    2. ' range' → logprob: -10.750021934509277
    3. '(range' → logprob: -19.50002098083496
    4. '	range' → logprob: -22.75002098083496
    5. '   ' → logprob: -23.00002098083496
    6. 'ange' → logprob: -24.12502098083496
    7. ' ' → logprob: -24.50002098083496
    8. '  ' → logprob: -24.75002098083496
    9. 'r' → logprob: -24.75002098083496
    10. 'Range' → logprob: -24.87502098083496

Token 489: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.0722858102526516e-05
    2. 'self' → logprob: -10.375041007995605
    3. '(' → logprob: -11.625041007995605
    4. ' self' → logprob: -15.000041007995605
    5. '(
' → logprob: -16.37504005432129
    6. ' (' → logprob: -16.37504005432129
    7. '(s' → logprob: -17.50004005432129
    8. '(new' → logprob: -18.12504005432129
    9. '(len' → logprob: -18.37504005432129
    10. '=self' → logprob: -18.50004005432129

Token 490: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -3.011373155459296e-05
    2. 'size' → logprob: -10.500030517578125
    3. '.' → logprob: -13.125030517578125
    4. 'self' → logprob: -15.750030517578125
    5. ' size' → logprob: -16.000030517578125
    6. ' .' → logprob: -16.500030517578125
    7. ')' → logprob: -16.750030517578125
    8. ').' → logprob: -17.250030517578125
    9. '	size' → logprob: -17.750030517578125
    10. '       ' → logprob: -18.000030517578125

Token 491: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16036903858184814
    2. '):' → logprob: -1.9103690385818481
    3. '   ' → logprob: -9.785368919372559
    4. '       ' → logprob: -10.160368919372559
    5. '):
' → logprob: -10.285368919372559
    6. ':
' → logprob: -12.785368919372559
    7. '+' → logprob: -13.035368919372559
    8. '):

' → logprob: -13.035368919372559
    9. ')' → logprob: -13.160368919372559
    10. '           ' → logprob: -13.410368919372559

Token 492: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.073699951171875
    2. '       ' → logprob: -3.573699951171875
    3. '	       ' → logprob: -3.823699951171875
    4. '	   ' → logprob: -4.573699951171875
    5. '   ' → logprob: -4.698699951171875
    6. ' for' → logprob: -7.198699951171875
    7. '		   ' → logprob: -8.323699951171875
    8. '    	   ' → logprob: -8.573699951171875
    9. '	for' → logprob: -8.698699951171875
    10. '<|end|>' → logprob: -9.073699951171875

Token 493: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3869681656360626
    2. ' for' → logprob: -1.1369681358337402
    3. '	for' → logprob: -9.636968612670898
    4. '       ' → logprob: -10.761968612670898
    5. '   ' → logprob: -11.636968612670898
    6. ' ' → logprob: -14.011968612670898
    7. '           ' → logprob: -14.511968612670898
    8. ' ' → logprob: -14.761968612670898
    9. '	   ' → logprob: -17.5119686126709
    10. '	       ' → logprob: -17.6369686126709

Token 494: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5231262445449829
    2. ' c' → logprob: -0.8981262445449829
    3. '0' → logprob: -13.898126602172852
    4. '   ' → logprob: -14.148126602172852
    5. ' ' → logprob: -15.023126602172852
    6. '_c' → logprob: -15.648126602172852
    7. ' ' → logprob: -15.648126602172852
    8. '	c' → logprob: -15.898126602172852
    9. '(c' → logprob: -15.898126602172852
    10. '           ' → logprob: -16.27312660217285

Token 495: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0004898841143585742
    2. 'in' → logprob: -7.625489711761475
    3. ' ' → logprob: -14.125490188598633
    4. '            ' → logprob: -15.000490188598633
    5. '        ' → logprob: -15.750490188598633
    6. '=' → logprob: -15.875490188598633
    7. '    ' → logprob: -16.500490188598633
    8. '0' → logprob: -16.500490188598633
    9. '           ' → logprob: -16.750490188598633
    10. 'import' → logprob: -16.875490188598633

Token 496: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4937315881252289
    2. ' range' → logprob: -0.9937316179275513
    3. '(r' → logprob: -3.9937314987182617
    4. 'r' → logprob: -7.243731498718262
    5. ' r' → logprob: -8.868731498718262
    6. '(range' → logprob: -8.993731498718262
    7. ' (' → logprob: -10.618731498718262
    8. '0' → logprob: -10.618731498718262
    9. '   ' → logprob: -13.868731498718262
    10. ' ' → logprob: -14.118731498718262

Token 497: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -3.416665640543215e-05
    2. ' (' → logprob: -10.87503433227539
    3. '(' → logprob: -11.37503433227539
    4. 'r' → logprob: -12.87503433227539
    5. '(c' → logprob: -15.00003433227539
    6. ' r' → logprob: -15.37503433227539
    7. '   ' → logprob: -15.62503433227539
    8. '(range' → logprob: -16.00003433227539
    9. '0' → logprob: -16.37503433227539
    10. 'range' → logprob: -16.50003433227539

Token 498: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.1080467781284824e-05
    2. ' +' → logprob: -10.125041007995605
    3. '+c' → logprob: -15.250041007995605
    4. '):
' → logprob: -15.750041007995605
    5. '+
' → logprob: -16.125041961669922
    6. '+r' → logprob: -16.375041961669922
    7. '   ' → logprob: -16.625041961669922
    8. '1' → logprob: -17.000041961669922
    9. '           ' → logprob: -17.250041961669922
    10. '):' → logprob: -17.250041961669922

Token 499: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6166903151315637e-05
    2. ' ' → logprob: -12.125016212463379
    3. '+' → logprob: -12.500016212463379
    4. 'c' → logprob: -12.750016212463379
    5. '0' → logprob: -13.625016212463379
    6. '   ' → logprob: -14.000016212463379
    7. 'range' → logprob: -14.875016212463379
    8. '       ' → logprob: -15.000016212463379
    9. 'r' → logprob: -15.250016212463379
    10. '```' → logprob: -15.375016212463379

Token 500: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4742254614830017
    2. '):' → logprob: -0.9742254614830017
    3. ')' → logprob: -9.474225044250488
    4. '):
' → logprob: -9.974225044250488
    5. '):

' → logprob: -11.724225044250488
    6. '+' → logprob: -12.099225044250488
    7. '   ' → logprob: -12.849225044250488
    8. ' ):' → logprob: -12.849225044250488
    9. ' ):
' → logprob: -13.224225044250488
    10. ':' → logprob: -13.474225044250488

Token 501: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01594063639640808
    2. ' new' → logprob: -4.5159406661987305
    3. 'new' → logprob: -5.6409406661987305
    4. '           ' → logprob: -6.6409406661987305
    5. '                       ' → logprob: -12.01594066619873
    6. '[new' → logprob: -12.76594066619873
    7. '```' → logprob: -13.39094066619873
    8. '                   ' → logprob: -13.39094066619873
    9. ',' → logprob: -13.51594066619873
    10. ')new' → logprob: -13.51594066619873

Token 502: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.008637258782982826
    2. ' new' → logprob: -4.758637428283691
    3. '                   ' → logprob: -10.758637428283691
    4. '               ' → logprob: -14.008637428283691
    5. '                       ' → logprob: -15.633637428283691
    6. ')new' → logprob: -15.758637428283691
    7. '[new' → logprob: -16.008636474609375
    8. '	new' → logprob: -16.508636474609375
    9. '
' → logprob: -16.758636474609375
    10. '                    
' → logprob: -17.258636474609375

Token 503: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -1.306760805164231e-05
    2. 'Board' → logprob: -12.00001335144043
    3. '._' → logprob: -12.62501335144043
    4. 'board' → logprob: -13.37501335144043
    5. '.' → logprob: -14.00001335144043
    6. '.board' → logprob: -14.87501335144043
    7. 'new' → logprob: -16.00001335144043
    8. ' Board' → logprob: -16.00001335144043
    9. ' .' → logprob: -16.12501335144043
    10. '   ' → logprob: -16.50001335144043

Token 504: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.12698890268802643
    2. '.grid' → logprob: -2.1269888877868652
    3. '.' → logprob: -9.751989364624023
    4. ' .' → logprob: -13.751989364624023
    5. ').' → logprob: -15.376989364624023
    6. '   ' → logprob: -15.501989364624023
    7. '.get' → logprob: -15.626989364624023
    8. '.s' → logprob: -16.376989364624023
    9. '.status' → logprob: -16.376989364624023
    10. '.setdefault' → logprob: -16.376989364624023

Token 505: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -7.896309739408025e-07
    2. 'st' → logprob: -14.375000953674316
    3. '_s' → logprob: -16.375
    4. 'r' → logprob: -17.375
    5. 's' → logprob: -17.5
    6. '(st' → logprob: -17.75
    7. 't' → logprob: -18.875
    8. 'c' → logprob: -19.0
    9. '_' → logprob: -19.0
    10. 'stone' → logprob: -19.125

Token 506: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.00022845028433948755
    2. '_one' → logprob: -8.500228881835938
    3. 'on' → logprob: -11.500228881835938
    4. '_' → logprob: -12.000228881835938
    5. 'r' → logprob: -13.375228881835938
    6. 'ne' → logprob: -13.625228881835938
    7. 'rone' → logprob: -14.000228881835938
    8. 'One' → logprob: -14.125228881835938
    9. '   ' → logprob: -14.125228881835938
    10. ' one' → logprob: -14.375228881835938

Token 507: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.004221455194056034
    2. '(' → logprob: -5.504221439361572
    3. ' (' → logprob: -8.87922191619873
    4. 'r' → logprob: -12.75422191619873
    5. '(
' → logprob: -14.50422191619873
    6. ' ' → logprob: -15.12922191619873
    7. ' r' → logprob: -16.879220962524414
    8. ')' → logprob: -17.004220962524414
    9. '((' → logprob: -18.004220962524414
    10. '(s' → logprob: -18.254220962524414

Token 508: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03584485873579979
    2. ',c' → logprob: -3.4108448028564453
    3. ' ,' → logprob: -6.160844802856445
    4. '<|end|>' → logprob: -10.660844802856445
    5. ' ' → logprob: -11.035844802856445
    6. 'c' → logprob: -11.035844802856445
    7. ' c' → logprob: -11.660844802856445
    8. ')' → logprob: -12.035844802856445
    9. '[' → logprob: -12.285844802856445
    10. ',
' → logprob: -13.160844802856445

Token 509: ',self' (ID: 54040)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01004929468035698
    2. 'self' → logprob: -4.760049343109131
    3. ',self' → logprob: -7.135049343109131
    4. ' self' → logprob: -8.010048866271973
    5. ' ,' → logprob: -8.135048866271973
    6. '(self' → logprob: -11.760048866271973
    7. ')' → logprob: -13.010048866271973
    8. ',
' → logprob: -14.760048866271973
    9. '),' → logprob: -15.385048866271973
    10. ' ' → logprob: -15.760048866271973

Token 510: '.get' (ID: 775)
  Prédit: '.grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.00046379686682485044
    2. '.get' → logprob: -7.750463962554932
    3. '.' → logprob: -10.375463485717773
    4. 'grid' → logprob: -13.500463485717773
    5. ' .' → logprob: -15.500463485717773
    6. 'get' → logprob: -15.875463485717773
    7. '.board' → logprob: -16.625463485717773
    8. ').' → logprob: -16.750463485717773
    9. '.g' → logprob: -17.875463485717773
    10. ' grid' → logprob: -18.000463485717773

Token 511: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -1.7432603272027336e-06
    2. '(st' → logprob: -14.375001907348633
    3. '(r' → logprob: -15.000001907348633
    4. '_s' → logprob: -15.000001907348633
    5. 'st' → logprob: -15.875001907348633
    6. 'stone' → logprob: -15.875001907348633
    7. ' _' → logprob: -15.875001907348633
    8. '_' → logprob: -16.750001907348633
    9. '_token' → logprob: -17.625001907348633
    10. 'Stone' → logprob: -18.000001907348633

Token 512: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -2.129266067640856e-05
    2. '_one' → logprob: -11.000020980834961
    3. 'on' → logprob: -13.250020980834961
    4. 'One' → logprob: -13.875020980834961
    5. '   ' → logprob: -14.500020980834961
    6. ' one' → logprob: -15.000020980834961
    7. '_' → logprob: -15.500020980834961
    8. 'o' → logprob: -15.500020980834961
    9. '```' → logprob: -15.750020980834961
    10. 'ne' → logprob: -15.875020980834961

Token 513: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.002724513877183199
    2. '(' → logprob: -6.002724647521973
    3. ')' → logprob: -8.752724647521973
    4. ' (' → logprob: -9.752724647521973
    5. 'r' → logprob: -10.502724647521973
    6. ')(' → logprob: -13.127724647521973
    7. ' r' → logprob: -13.627724647521973
    8. '(
' → logprob: -13.752724647521973
    9. ' ' → logprob: -14.752724647521973
    10. ',' → logprob: -16.502723693847656

Token 514: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2210107147693634
    2. ',r' → logprob: -2.221010684967041
    3. ',c' → logprob: -3.096010684967041
    4. '(r' → logprob: -3.596010684967041
    5. ' ,' → logprob: -4.471010684967041
    6. ')' → logprob: -5.596010684967041
    7. '(c' → logprob: -7.471010684967041
    8. 'r' → logprob: -7.721010684967041
    9. ' (' → logprob: -8.5960111618042
    10. '   ' → logprob: -8.9710111618042

Token 515: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.000891332805622369
    2. ')' → logprob: -7.125891208648682
    3. '))
' → logprob: -9.37589168548584
    4. ' ))' → logprob: -13.87589168548584
    5. ')))' → logprob: -14.25089168548584
    6. ')
' → logprob: -14.75089168548584
    7. '               ' → logprob: -16.875890731811523
    8. '           ' → logprob: -17.000890731811523
    9. '))

' → logprob: -17.125890731811523
    10. '       ' → logprob: -17.500890731811523

Token 516: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028076060116291046
    2. '	' → logprob: -6.8778076171875
    3. '
' → logprob: -6.8778076171875
    4. 'return' → logprob: -7.7528076171875
    5. ' return' → logprob: -8.5028076171875
    6. '        
' → logprob: -9.7528076171875
    7. '	return' → logprob: -10.7528076171875
    8. '   ' → logprob: -12.1278076171875
    9. '<|end|>' → logprob: -12.5028076171875
    10. '		
' → logprob: -12.6278076171875

Token 517: ' new' (ID: 620)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.024754632264375687
    2. '       ' → logprob: -4.024754524230957
    3. ' return' → logprob: -5.024754524230957
    4. 'new' (adapté à ' new') → logprob: -12.024754524230957
    5. '   ' → logprob: -13.399754524230957
    6. '        
' → logprob: -14.024754524230957
    7. '	return' → logprob: -14.149754524230957
    8. '
' → logprob: -15.649754524230957
    9. ' new' → logprob: -16.024755477905273
    10. ':return' → logprob: -16.399755477905273

Token 518: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -0.001023758901283145
    2. 'return' → logprob: -7.126023769378662
    3. 'Board' → logprob: -9.376023292541504
    4. '_' → logprob: -10.126023292541504
    5. 'board' → logprob: -10.251023292541504
    6. '
' → logprob: -11.626023292541504
    7. '_return' → logprob: -11.876023292541504
    8. '_line' → logprob: -11.876023292541504
    9. '-' → logprob: -12.126023292541504
    10. ' board' → logprob: -12.876023292541504

Token 519: '.build' (ID: 20924)
  Prédit: '.build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.build' → logprob: -2.816093228830141e-06
    2. '.' → logprob: -12.87500286102295
    3. '.ad' → logprob: -16.625001907348633
    4. '.fill' → logprob: -17.000001907348633
    5. ' .' → logprob: -17.375001907348633
    6. '.load' → logprob: -17.500001907348633
    7. '.set' → logprob: -17.875001907348633
    8. '.populate' → logprob: -18.750001907348633
    9. '.Build' → logprob: -19.125001907348633
    10. '.b' → logprob: -19.125001907348633

Token 520: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -4.320199877838604e-07
    2. '_adj' → logprob: -14.75
    3. '_' → logprob: -18.25
    4. 'ad' → logprob: -18.75
    5. '_add' → logprob: -19.125
    6. '_an' → logprob: -19.75
    7. '_a' → logprob: -19.75
    8. '_ind' → logprob: -20.75
    9. '_ab' → logprob: -20.875
    10. 'adj' → logprob: -21.0

Token 521: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -1.0280383548888494e-06
    2. 'acency' → logprob: -14.500000953674316
    3. 'j' → logprob: -14.875000953674316
    4. 'Jac' → logprob: -16.250001907348633
    5. ' jac' → logprob: -17.500001907348633
    6. ' adjacency' → logprob: -19.750001907348633
    7. '_j' → logprob: -20.375001907348633
    8. 'jc' → logprob: -20.500001907348633
    9. ' Jac' → logprob: -21.125001907348633
    10. 'd' → logprob: -22.000001907348633

Token 522: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -2.4987974029500037e-05
    2. 'acency' → logprob: -10.750024795532227
    3. 'acy' → logprob: -13.125024795532227
    4. 'ancy' → logprob: -14.250024795532227
    5. 'ENCY' → logprob: -15.125024795532227
    6. 'cy' → logprob: -16.000024795532227
    7. 'y' → logprob: -16.625024795532227
    8. '#' → logprob: -16.875024795532227
    9. '   ' → logprob: -16.875024795532227
    10. 'eny' → logprob: -17.000024795532227

Token 523: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003364158037584275
    2. '()
' → logprob: -8.000336647033691
    3. '()
' → logprob: -14.875336647033691
    4. '()`' → logprob: -15.250336647033691
    5. '()

' → logprob: -15.375336647033691
    6. '()"' → logprob: -16.750335693359375
    7. '()\' → logprob: -16.750335693359375
    8. ' ()' → logprob: -17.250335693359375
    9. '();' → logprob: -17.250335693359375
    10. '(' → logprob: -18.375335693359375

Token 524: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00451461598277092
    2. 'return' → logprob: -6.504514694213867
    3. ' return' → logprob: -6.629514694213867
    4. '	return' → logprob: -7.004514694213867
    5. '   ' → logprob: -8.254514694213867
    6. '
' → logprob: -8.379514694213867
    7. '<|end|>' → logprob: -8.754514694213867
    8. '        
' → logprob: -10.379514694213867
    9. '```' → logprob: -11.129514694213867
    10. '[' → logprob: -11.129514694213867

Token 525: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.052341751754283905
    2. '       ' → logprob: -3.5523416996002197
    3. ' return' → logprob: -3.8023416996002197
    4. '	return' → logprob: -11.67734146118164
    5. '
' → logprob: -12.17734146118164
    6. '        
' → logprob: -13.05234146118164
    7. ':return' → logprob: -13.92734146118164
    8. '{return' → logprob: -14.55234146118164
    9. '   ' → logprob: -14.67734146118164
    10. '@return' → logprob: -14.80234146118164

Token 526: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.06196768581867218
    2. ' new' → logprob: -2.811967611312866
    3. '	new' → logprob: -21.561967849731445
    4. '[new' → logprob: -23.061967849731445
    5. ')new' → logprob: -23.186967849731445
    6. 'self' → logprob: -23.686967849731445
    7. ' ' → logprob: -23.686967849731445
    8. '_new' → logprob: -24.061967849731445
    9. 'ne' → logprob: -24.061967849731445
    10. '(new' → logprob: -24.561967849731445

Token 527: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -2.935296834039036e-06
    2. '_' → logprob: -12.87500286102295
    3. '_bo' → logprob: -16.000003814697266
    4. '_box' → logprob: -16.875003814697266
    5. '_BOARD' → logprob: -17.625003814697266
    6. '_code' → logprob: -17.750003814697266
    7. 'board' → logprob: -17.875003814697266
    8. '_line' → logprob: -17.875003814697266
    9. 'Board' → logprob: -18.000003814697266
    10. '_new' → logprob: -18.000003814697266

Token 528: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 529: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 530: ' Group' (ID: 7849)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.4856121242046356
    2. ' Game' → logprob: -0.985612154006958
    3. 'Player' → logprob: -5.735611915588379
    4. 'Go' → logprob: -5.985611915588379
    5. ' Go' → logprob: -6.110611915588379
    6. ' Player' → logprob: -6.735611915588379
    7. 'Graph' → logprob: -6.860611915588379
    8. ' Graph' → logprob: -8.110611915588379
    9. 'Group' → logprob: -8.985611915588379
    10. 'Union' → logprob: -9.360611915588379

Token 531: 'Finder' (ID: 42976)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006849141791462898
    2. ':
' → logprob: -7.37568473815918
    3. '(' → logprob: -10.25068473815918
    4. ' :' → logprob: -11.62568473815918
    5. '(object' → logprob: -12.50068473815918
    6. ':

' → logprob: -13.00068473815918
    7. '():' → logprob: -13.25068473815918
    8. '>:' → logprob: -13.37568473815918
    9. '<|end|>' → logprob: -13.50068473815918
    10. '):' → logprob: -14.12568473815918

Token 532: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029779309406876564
    2. ':
' → logprob: -3.5297791957855225
    3. ' :' → logprob: -11.154779434204102
    4. ':def' → logprob: -11.654779434204102
    5. ':

' → logprob: -13.154779434204102
    6. ' :
' → logprob: -13.529779434204102
    7. '(object' → logprob: -13.779779434204102
    8. '(' → logprob: -14.654779434204102
    9. '   ' → logprob: -15.404779434204102
    10. 'def' → logprob: -15.529779434204102

Token 533: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01179266907274723
    2. ' def' → logprob: -4.6367926597595215
    3. ':' → logprob: -6.8867926597595215
    4. 'def' → logprob: -7.6367926597595215
    5. ':
' → logprob: -8.01179313659668
    6. 'class' → logprob: -10.13679313659668
    7. '    
' → logprob: -10.26179313659668
    8. '(' → logprob: -10.38679313659668
    9. '<|end|>' → logprob: -10.76179313659668
    10. '```' → logprob: -11.13679313659668

Token 534: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2544533312320709
    2. ' def' → logprob: -1.5044533014297485
    3. '   ' → logprob: -6.004453182220459
    4. 'class' → logprob: -9.879453659057617
    5. '	def' → logprob: -14.379453659057617
    6. ' ' → logprob: -14.629453659057617
    7. ':def' → logprob: -14.629453659057617
    8. ':' → logprob: -15.379453659057617
    9. '```' → logprob: -16.004453659057617
    10. '  ' → logprob: -16.129453659057617

Token 535: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.014846821315586567
    2. '__' → logprob: -4.5148468017578125
    3. '_init' → logprob: -5.7648468017578125
    4. 'class' → logprob: -7.3898468017578125
    5. 'def' → logprob: -11.139846801757812
    6. ' __' → logprob: -12.014846801757812
    7. 'find' → logprob: -12.139846801757812
    8. ' init' → logprob: -12.764846801757812
    9. '```' → logprob: -12.764846801757812
    10. 'new' → logprob: -13.139846801757812

Token 536: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.657694418914616e-05
    2. 'def' → logprob: -10.750056266784668
    3. '_init' → logprob: -11.000056266784668
    4. 'nit' → logprob: -11.875056266784668
    5. 'class' → logprob: -12.250056266784668
    6. 'new' → logprob: -13.000056266784668
    7. 'int' → logprob: -13.375056266784668
    8. ' init' → logprob: -13.750056266784668
    9. 'in' → logprob: -14.625056266784668
    10. 'ini' → logprob: -14.875056266784668

Token 537: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00047071068547666073
    2. '(self' → logprob: -8.000471115112305
    3. '__' → logprob: -9.000471115112305
    4. '__(
' → logprob: -11.625471115112305
    5. '__((' → logprob: -14.000471115112305
    6. '_(' → logprob: -14.125471115112305
    7. '(' → logprob: -14.125471115112305
    8. 'self' → logprob: -15.375471115112305
    9. ' (' → logprob: -15.875471115112305
    10. '<>(' → logprob: -16.125471115112305

Token 538: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.263011578586884e-05
    2. ' self' → logprob: -10.125042915344238
    3. '(self' → logprob: -13.500042915344238
    4. ')' → logprob: -14.625042915344238
    5. '
' → logprob: -15.125042915344238
    6. '   ' → logprob: -15.625042915344238
    7. ',' → logprob: -16.375041961669922
    8. 'def' → logprob: -17.125041961669922
    9. '0' → logprob: -17.250041961669922
    10. ')(' → logprob: -17.625041961669922

Token 539: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008295211009681225
    2. 'self' → logprob: -7.250829696655273
    3. ',self' → logprob: -9.750829696655273
    4. '(self' → logprob: -10.625829696655273
    5. ' ,' → logprob: -10.750829696655273
    6. ')' → logprob: -12.125829696655273
    7. ' self' → logprob: -13.125829696655273
    8. '(' → logprob: -13.125829696655273
    9. ' (' → logprob: -13.250829696655273
    10. ',
' → logprob: -13.250829696655273

Token 540: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.011934857815504074
    2. ' board' → logprob: -5.011934757232666
    3. 'self' → logprob: -5.261934757232666
    4. ' self' → logprob: -11.511935234069824
    5. 'Board' → logprob: -12.636935234069824
    6. '.board' → logprob: -12.886935234069824
    7. '_board' → logprob: -13.636935234069824
    8. 'graph' → logprob: -14.011935234069824
    9. '-board' → logprob: -14.011935234069824
    10. '	board' → logprob: -14.261935234069824

Token 541: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.43023595213890076
    2. '):
' → logprob: -1.0552359819412231
    3. ',' → logprob: -6.555235862731934
    4. ' ):' → logprob: -9.555235862731934
    5. '):

' → logprob: -11.055235862731934
    6. ')' → logprob: -11.555235862731934
    7. ' ):
' → logprob: -12.180235862731934
    8. '):
' → logprob: -12.555235862731934
    9. ':' → logprob: -12.680235862731934
    10. '   ' → logprob: -13.180235862731934

Token 542: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015812745550647378
    2. 'self' → logprob: -9.250158309936523
    3. ' self' → logprob: -10.125158309936523
    4. '   ' → logprob: -10.750158309936523
    5. ',' → logprob: -15.125158309936523
    6. '(self' → logprob: -16.125158309936523
    7. '           ' → logprob: -17.375158309936523
    8. '```' → logprob: -17.375158309936523
    9. '	self' → logprob: -17.625158309936523
    10. ':' → logprob: -18.000158309936523

Token 543: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005244072061032057
    2. ' self' → logprob: -5.505244255065918
    3. '       ' → logprob: -6.755244255065918
    4. '   ' → logprob: -15.880244255065918
    5. '	self' → logprob: -17.2552433013916
    6. '(self' → logprob: -17.8802433013916
    7. '
' → logprob: -18.1302433013916
    8. 'import' → logprob: -18.7552433013916
    9. '        
' → logprob: -19.3802433013916
    10. '[self' → logprob: -19.5052433013916

Token 544: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -0.0001307142956648022
    2. '.' → logprob: -9.000130653381348
    3. ' .' → logprob: -12.250130653381348
    4. '.Board' → logprob: -13.625130653381348
    5. '.bo' → logprob: -14.625130653381348
    6. '   ' → logprob: -15.375130653381348
    7. '	board' → logprob: -15.875130653381348
    8. '.b' → logprob: -16.375131607055664
    9. 'board' → logprob: -16.500131607055664
    10. '=' → logprob: -17.500131607055664

Token 545: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25194716453552246
    2. ' =' → logprob: -1.5019471645355225
    3. '   ' → logprob: -11.126947402954102
    4. '=
' → logprob: -13.376947402954102
    5. ' =
' → logprob: -15.001947402954102
    6. '.' → logprob: -15.001947402954102
    7. ')' → logprob: -15.376947402954102
    8. ',' → logprob: -15.626947402954102
    9. '=

' → logprob: -15.626947402954102
    10. ' ' → logprob: -15.751947402954102

Token 546: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.029751529917120934
    2. ' board' → logprob: -3.5297515392303467
    3. '	board' → logprob: -14.154751777648926
    4. '(board' → logprob: -15.654751777648926
    5. '.board' → logprob: -16.65475082397461
    6. 'b' → logprob: -17.77975082397461
    7. '   ' → logprob: -18.65475082397461
    8. ' ' → logprob: -19.15475082397461
    9. 'boards' → logprob: -19.27975082397461
    10. '_board' → logprob: -19.65475082397461

Token 547: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10984792560338974
    2. '   ' → logprob: -2.3598480224609375
    3. '<|end|>' → logprob: -5.1098480224609375
    4. 'def' → logprob: -6.6098480224609375
    5. '    
' → logprob: -7.1098480224609375
    6. ' def' → logprob: -7.6098480224609375
    7. '

' → logprob: -7.7348480224609375
    8. '<|end|>' → logprob: -8.859848022460938
    9. '	def' → logprob: -9.234848022460938
    10. '  
' → logprob: -9.984848022460938

Token 548: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4786853492259979
    2. '
' → logprob: -0.9786853790283203
    3. 'def' → logprob: -6.10368537902832
    4. ' def' → logprob: -6.97868537902832
    5. '    
' → logprob: -7.10368537902832
    6. '       ' → logprob: -7.85368537902832
    7. '        
' → logprob: -9.35368537902832
    8. '  
' → logprob: -10.47868537902832
    9. '	def' → logprob: -10.60368537902832
    10. '<|end|>' → logprob: -10.60368537902832

Token 549: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.001617930829524994
    2. 'def' → logprob: -6.626617908477783
    3. '       ' → logprob: -8.251618385314941
    4. '   ' → logprob: -11.001618385314941
    5. ' self' → logprob: -11.876618385314941
    6. '
' → logprob: -12.501618385314941
    7. '0' → logprob: -13.251618385314941
    8. 'class' → logprob: -14.501618385314941
    9. 'from' → logprob: -14.751618385314941
    10. '        
' → logprob: -15.126618385314941

Token 550: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.010372970253229141
    2. '.group' → logprob: -4.885373115539551
    3. '.groups' → logprob: -6.885373115539551
    4. '.' → logprob: -7.385373115539551
    5. '.se' → logprob: -7.510373115539551
    6. '.f' → logprob: -8.38537311553955
    7. '.parent' → logprob: -9.38537311553955
    8. '.color' → logprob: -10.13537311553955
    9. '.used' → logprob: -10.38537311553955
    10. '.checked' → logprob: -10.76037311553955

Token 551: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -14.375000953674316
    3. 'isted' → logprob: -14.375000953674316
    4. '```' → logprob: -17.500001907348633
    5. 'iting' → logprob: -17.750001907348633
    6. 'ITED' → logprob: -17.875001907348633
    7. 'itted' → logprob: -18.375001907348633
    8. '[' → logprob: -18.375001907348633
    9. 'visited' → logprob: -18.625001907348633
    10. '
' → logprob: -18.750001907348633

Token 552: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.577523946762085
    2. '=' → logprob: -0.827523946762085
    3. '=set' → logprob: -6.452524185180664
    4. ' set' → logprob: -12.952524185180664
    5. ' ' → logprob: -13.077524185180664
    6. ' ={' → logprob: -14.202524185180664
    7. '={}' → logprob: -14.202524185180664
    8. 'set' → logprob: -15.077524185180664
    9. '	' → logprob: -16.077524185180664
    10. '  ' → logprob: -16.202524185180664

Token 553: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.3153449296951294
    2. ' set' → logprob: -1.3153449296951294
    3. '{}' → logprob: -6.19034481048584
    4. ' {}' → logprob: -10.94034481048584
    5. '	set' → logprob: -11.81534481048584
    6. ' ' → logprob: -12.69034481048584
    7. '=set' → logprob: -13.44034481048584
    8. '   ' → logprob: -13.81534481048584
    9. '(set' → logprob: -14.81534481048584
    10. '  ' → logprob: -14.81534481048584

Token 554: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 555: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36453676223754883
    2. '
' → logprob: -1.2395367622375488
    3. '    
' → logprob: -5.239536762237549
    4. 'def' → logprob: -5.489536762237549
    5. '<|end|>' → logprob: -5.864536762237549
    6. ' def' → logprob: -5.989536762237549
    7. ' 
' → logprob: -7.989536762237549
    8. ' ' → logprob: -8.36453628540039
    9. '        
' → logprob: -8.73953628540039
    10. '<|end|>' → logprob: -8.86453628540039

Token 556: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011729520745575428
    2. '   ' → logprob: -4.886729717254639
    3. 'self' (adapté à ' self') → logprob: -5.636729717254639
    4. ' def' → logprob: -8.38672924041748
    5. '
' → logprob: -8.88672924041748
    6. '       ' → logprob: -9.26172924041748
    7. '<|end|>' → logprob: -10.01172924041748
    8. '	def' → logprob: -11.63672924041748
    9. ' ' → logprob: -11.76172924041748
    10. ' self' → logprob: -11.88672924041748

Token 557: '.groups' (ID: 89749)
  Prédit: '.stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stack' → logprob: -0.3963617980480194
    2. '.group' → logprob: -1.3963618278503418
    3. '.queue' → logprob: -3.521361827850342
    4. '.groups' → logprob: -3.771361827850342
    5. '.' → logprob: -4.521361827850342
    6. '.current' → logprob: -5.896361827850342
    7. '.f' → logprob: -6.146361827850342
    8. '.parent' → logprob: -6.521361827850342
    9. '.positions' → logprob: -6.646361827850342
    10. '.connected' → logprob: -6.896361827850342

Token 558: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38689637184143066
    2. '=' → logprob: -1.1368963718414307
    3. '=[]' → logprob: -10.636896133422852
    4. ' ' → logprob: -14.511896133422852
    5. '<|end|>' → logprob: -15.886896133422852
    6. '   ' → logprob: -16.26189613342285
    7. '={}' → logprob: -16.38689613342285
    8. '	' → logprob: -16.51189613342285
    9. '=set' → logprob: -16.63689613342285
    10. '  ' → logprob: -16.76189613342285

Token 559: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0005772201111540198
    2. ' []' → logprob: -7.500577449798584
    3. '{}' → logprob: -11.000576972961426
    4. '[]
' → logprob: -12.000576972961426
    5. '[]}' → logprob: -14.000576972961426
    6. '[]

' → logprob: -15.375576972961426
    7. '[' → logprob: -15.500576972961426
    8. 'set' → logprob: -16.500577926635742
    9. '[]"' → logprob: -16.750577926635742
    10. '([]' → logprob: -17.500577926635742

Token 560: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043390098959207535
    2. '
' → logprob: -3.4183900356292725
    3. 'def' → logprob: -5.043390274047852
    4. ' def' → logprob: -6.168390274047852
    5. '    
' → logprob: -7.168390274047852
    6. '<|end|>' → logprob: -8.168390274047852
    7. ' 
' → logprob: -10.793390274047852
    8. '        
' → logprob: -10.918390274047852
    9. '<|end|>' → logprob: -11.293390274047852
    10. ' ' → logprob: -11.543390274047852

Token 561: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001266301842406392
    2. ' def' → logprob: -6.7512664794921875
    3. '   ' → logprob: -9.251266479492188
    4. '	def' → logprob: -16.626266479492188
    5. ' ' → logprob: -18.126266479492188
    6. '
' → logprob: -19.001266479492188
    7. '  ' → logprob: -19.876266479492188
    8. 'class' → logprob: -20.126266479492188
    9. '    
' → logprob: -20.876266479492188
    10. ')' → logprob: -21.001266479492188

Token 562: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0024489001370966434
    2. ' find' → logprob: -6.627449035644531
    3. '_find' → logprob: -7.502449035644531
    4. 'dfs' → logprob: -7.502449035644531
    5. 'get' → logprob: -12.002449035644531
    6. '_' → logprob: -12.377449035644531
    7. 'run' → logprob: -12.627449035644531
    8. ' dfs' → logprob: -13.252449035644531
    9. 'search' → logprob: -14.002449035644531
    10. '_f' → logprob: -14.627449035644531

Token 563: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -0.002701208693906665
    2. '_' → logprob: -6.127701282501221
    3. '_group' → logprob: -8.127700805664062
    4. '(self' → logprob: -8.877700805664062
    5. '(' → logprob: -10.252700805664062
    6. '_self' → logprob: -11.127700805664062
    7. '_all' → logprob: -11.627700805664062
    8. '_connected' → logprob: -12.002700805664062
    9. '_clusters' → logprob: -12.627700805664062
    10. '_connections' → logprob: -13.252700805664062

Token 564: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009187239338643849
    2. '(' → logprob: -7.000918865203857
    3. ' (' → logprob: -12.0009183883667
    4. '(
' → logprob: -14.6259183883667
    5. 'self' → logprob: -14.7509183883667
    6. '(s' → logprob: -16.125919342041016
    7. '   ' → logprob: -16.250919342041016
    8. ' ' → logprob: -16.625919342041016
    9. '(sel' → logprob: -17.500919342041016
    10. ' self' → logprob: -17.875919342041016

Token 565: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025373713579028845
    2. '(self' → logprob: -6.377537250518799
    3. 'self' → logprob: -7.627537250518799
    4. ' ,' → logprob: -8.502537727355957
    5. ' (' → logprob: -9.877537727355957
    6. ')' → logprob: -10.502537727355957
    7. ',self' → logprob: -10.502537727355957
    8. '   ' → logprob: -11.002537727355957
    9. '       ' → logprob: -11.752537727355957
    10. '(' → logprob: -11.877537727355957

Token 566: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028759613633155823
    2. '
' → logprob: -5.877875804901123
    3. '```' → logprob: -10.627876281738281
    4. '        
' → logprob: -11.377876281738281
    5. ' for' → logprob: -11.502876281738281
    6. '\' → logprob: -12.127876281738281
    7. 'self' → logprob: -12.627876281738281
    8. '   ' → logprob: -13.377876281738281
    9. ':' → logprob: -13.502876281738281
    10. ',' → logprob: -13.502876281738281

Token 567: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5123001337051392
    2. 'for' → logprob: -1.0123001337051392
    3. 'self' (adapté à ' self') → logprob: -3.3873000144958496
    4. ' for' → logprob: -5.63730001449585
    5. '   ' → logprob: -9.762300491333008
    6. ' self' → logprob: -9.887300491333008
    7. '
' → logprob: -11.762300491333008
    8. 'visited' → logprob: -12.137300491333008
    9. '        
' → logprob: -12.262300491333008
    10. 'def' → logprob: -12.512300491333008

Token 568: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -1.8074162653647363e-05
    2. '.visit' → logprob: -11.500018119812012
    3. '.' → logprob: -12.125018119812012
    4. 'visited' → logprob: -13.750018119812012
    5. ' .' → logprob: -14.625018119812012
    6. '.groups' → logprob: -14.750018119812012
    7. '.v' → logprob: -16.500017166137695
    8. '.for' → logprob: -16.750017166137695
    9. 'Visited' → logprob: -16.750017166137695
    10. '.visible' → logprob: -16.875017166137695

Token 569: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -2.4987974029500037e-05
    2. 'isted' → logprob: -11.375024795532227
    3. '_' → logprob: -11.875024795532227
    4. '-' → logprob: -13.875024795532227
    5. 'it' → logprob: -13.875024795532227
    6. '=' → logprob: -14.000024795532227
    7. '```' → logprob: -14.125024795532227
    8. '
' → logprob: -14.250024795532227
    9. '   ' → logprob: -14.500024795532227
    10. 'ITED' → logprob: -15.500024795532227

Token 570: '.clear' (ID: 13562)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6803843975067139
    2. '=' → logprob: -1.1803843975067139
    3. '.clear' → logprob: -1.6803843975067139
    4. ' ' → logprob: -10.055384635925293
    5. '.' → logprob: -10.305384635925293
    6. '.add' → logprob: -10.805384635925293
    7. '=set' → logprob: -12.055384635925293
    8. 'clear' → logprob: -12.430384635925293
    9. '.=' → logprob: -12.430384635925293
    10. '   ' → logprob: -13.930384635925293

Token 571: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29075026512145996
    2. '
' → logprob: -2.29075026512146
    3. '()
' → logprob: -2.29075026512146
    4. '()' → logprob: -3.16575026512146
    5. '<|end|>' → logprob: -5.040750503540039
    6. '        
' → logprob: -7.915750503540039
    7. '<|end|>' → logprob: -8.415750503540039
    8. 'for' → logprob: -8.540750503540039
    9. ' for' → logprob: -9.290750503540039
    10. ',' → logprob: -9.790750503540039

Token 572: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03739459812641144
    2. '
' → logprob: -3.5373945236206055
    3. ' for' → logprob: -5.2873945236206055
    4. '<|end|>' → logprob: -6.7873945236206055
    5. '        
' → logprob: -7.2873945236206055
    6. 'for' → logprob: -7.6623945236206055
    7. '```' → logprob: -10.037394523620605
    8. '   ' → logprob: -10.287394523620605
    9. ' and' → logprob: -10.412394523620605
    10. '<|end|>' → logprob: -10.412394523620605

Token 573: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005444108974188566
    2. 'for' → logprob: -5.255444049835205
    3. '       ' → logprob: -8.630444526672363
    4. ' self' → logprob: -10.630444526672363
    5. 'groups' → logprob: -12.505444526672363
    6. ' for' → logprob: -13.505444526672363
    7. '        
' → logprob: -14.630444526672363
    8. '   ' → logprob: -14.755444526672363
    9. 'def' → logprob: -15.130444526672363
    10. '(self' → logprob: -15.880444526672363

Token 574: '.groups' (ID: 89749)
  Prédit: '.groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.groups' → logprob: -1.2948405128554441e-05
    2. '.' → logprob: -12.37501335144043
    3. '.vis' → logprob: -12.62501335144043
    4. ' .' → logprob: -13.50001335144043
    5. '.g' → logprob: -14.00001335144043
    6. '.Groups' → logprob: -14.62501335144043
    7. 'groups' → logprob: -14.75001335144043
    8. '.s' → logprob: -15.62501335144043
    9. '.groupby' → logprob: -15.62501335144043
    10. '.group' → logprob: -15.75001335144043

Token 575: '.clear' (ID: 13562)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34128180146217346
    2. '.clear' → logprob: -1.341281771659851
    3. '=' → logprob: -3.5912818908691406
    4. '.' → logprob: -10.21628189086914
    5. '=[]' → logprob: -10.71628189086914
    6. '.extend' → logprob: -12.59128189086914
    7. '[:]' → logprob: -12.84128189086914
    8. '.=' → logprob: -13.21628189086914
    9. ' .' → logprob: -14.84128189086914
    10. '.append' → logprob: -14.84128189086914

Token 576: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6411821246147156
    2. '()
' → logprob: -0.8911821246147156
    3. '       ' → logprob: -2.7661821842193604
    4. '
' → logprob: -9.016181945800781
    5. '()\' → logprob: -9.891181945800781
    6. '()

' → logprob: -10.766181945800781
    7. '<|end|>' → logprob: -11.766181945800781
    8. '();' → logprob: -11.891181945800781
    9. '        
' → logprob: -12.141181945800781
    10. '()
' → logprob: -12.266181945800781

Token 577: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002485288307070732
    2. ' for' → logprob: -6.627485275268555
    3. '
' → logprob: -7.502485275268555
    4. '<|end|>' → logprob: -8.377485275268555
    5. '        
' → logprob: -8.877485275268555
    6. '   ' → logprob: -8.877485275268555
    7. 'for' → logprob: -10.252485275268555
    8. '    
' → logprob: -10.877485275268555
    9. '<|end|>' → logprob: -11.377485275268555
    10. '  
' → logprob: -12.002485275268555

Token 578: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0038599353283643723
    2. '       ' → logprob: -6.253859996795654
    3. ' for' → logprob: -6.253859996795654
    4. 'size' → logprob: -12.128859519958496
    5. '   ' → logprob: -14.503859519958496
    6. '```' → logprob: -15.378859519958496
    7. '        
' → logprob: -16.503860473632812
    8. 'board' → logprob: -16.753860473632812
    9. '	for' → logprob: -17.128860473632812
    10. '
' → logprob: -17.628860473632812

Token 579: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5761427283287048
    2. ' r' → logprob: -0.8261427283287048
    3. ' (' → logprob: -8.701142311096191
    4. '(r' → logprob: -10.701142311096191
    5. '(' → logprob: -11.701142311096191
    6. '_r' → logprob: -13.326142311096191
    7. '   ' → logprob: -13.951142311096191
    8. '       ' → logprob: -14.076142311096191
    9. ' row' → logprob: -14.201142311096191
    10. 'row' → logprob: -14.701142311096191

Token 580: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006728395354002714
    2. 'in' → logprob: -5.006728172302246
    3. ',' → logprob: -11.381728172302246
    4. ' ' → logprob: -15.131728172302246
    5. 'n' → logprob: -15.631728172302246
    6. ')' → logprob: -15.756728172302246
    7. ' ,' → logprob: -15.881728172302246
    8. '        ' → logprob: -16.006729125976562
    9. '       ' → logprob: -16.006729125976562
    10. '<|end|>' → logprob: -16.131729125976562

Token 581: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031777136027812958
    2. ' range' → logprob: -5.753177642822266
    3. 'self' → logprob: -20.378177642822266
    4. '(range' → logprob: -20.753177642822266
    5. '   ' → logprob: -20.753177642822266
    6. '0' → logprob: -20.878177642822266
    7. 'Range' → logprob: -21.378177642822266
    8. '	range' → logprob: -21.378177642822266
    9. ' ' → logprob: -21.503177642822266
    10. '_range' → logprob: -23.253177642822266

Token 582: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.375001907348633
    3. 'self' → logprob: -15.625001907348633
    4. '(len' → logprob: -18.000001907348633
    5. '       ' → logprob: -18.875001907348633
    6. '(
' → logprob: -19.500001907348633
    7. ',self' → logprob: -19.875001907348633
    8. '(s' → logprob: -20.000001907348633
    9. '   ' → logprob: -20.000001907348633
    10. '=self' → logprob: -20.125001907348633

Token 583: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -0.11338932067155838
    2. '.size' → logprob: -2.238389253616333
    3. 'board' → logprob: -7.988389492034912
    4. 'self' → logprob: -9.363389015197754
    5. 'size' → logprob: -9.488389015197754
    6. '.' → logprob: -10.738389015197754
    7. ' .' → logprob: -11.113389015197754
    8. '.self' → logprob: -11.738389015197754
    9. '(board' → logprob: -12.613389015197754
    10. ' board' → logprob: -12.738389015197754

Token 584: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -9.507972572464496e-05
    2. '.' → logprob: -9.87509536743164
    3. ' .' → logprob: -10.12509536743164
    4. 'size' → logprob: -13.37509536743164
    5. '   ' → logprob: -14.00009536743164
    6. '.
' → logprob: -14.75009536743164
    7. ').' → logprob: -15.62509536743164
    8. '.s' → logprob: -15.75009536743164
    9. ' size' → logprob: -15.75009536743164
    10. ',' → logprob: -16.12509536743164

Token 585: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.011198124848306179
    2. '):' → logprob: -4.511198043823242
    3. '       ' → logprob: -9.011198043823242
    4. '):
' → logprob: -10.886198043823242
    5. '   ' → logprob: -12.386198043823242
    6. '           ' → logprob: -13.011198043823242
    7. '):

' → logprob: -14.011198043823242
    8. ' ):
' → logprob: -14.011198043823242
    9. ')' → logprob: -14.511198043823242
    10. ':
' → logprob: -14.636198043823242

Token 586: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001090447069145739
    2. ' for' → logprob: -7.7510905265808105
    3. '	       ' → logprob: -8.126090049743652
    4. '   ' → logprob: -8.876090049743652
    5. '<|end|>' → logprob: -9.626090049743652
    6. '	   ' → logprob: -10.001090049743652
    7. '       ' → logprob: -10.626090049743652
    8. ',' → logprob: -10.751090049743652
    9. '    	   ' → logprob: -11.376090049743652
    10. '		   ' → logprob: -11.376090049743652

Token 587: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3314824402332306
    2. 'for' (adapté à ' for') → logprob: -1.4564824104309082
    3. '           ' → logprob: -3.581482410430908
    4. '       ' → logprob: -4.081482410430908
    5. '   ' → logprob: -5.456482410430908
    6. '	for' → logprob: -9.831482887268066
    7. '               ' → logprob: -10.831482887268066
    8. ' ' → logprob: -11.081482887268066
    9. '	       ' → logprob: -12.706482887268066
    10. '	   ' → logprob: -13.081482887268066

Token 588: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6326054334640503
    2. ' c' → logprob: -0.7576054334640503
    3. '   ' → logprob: -13.00760555267334
    4. '           ' → logprob: -13.50760555267334
    5. ' ' → logprob: -14.38260555267334
    6. ' ' → logprob: -14.63260555267334
    7. '	c' → logprob: -14.75760555267334
    8. '       ' → logprob: -15.50760555267334
    9. '(c' → logprob: -15.50760555267334
    10. '               ' → logprob: -15.50760555267334

Token 589: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.054894693195819855
    2. 'in' → logprob: -2.9298946857452393
    3. '           ' → logprob: -12.92989444732666
    4. '            ' → logprob: -12.92989444732666
    5. '        ' → logprob: -13.30489444732666
    6. ' ' → logprob: -13.67989444732666
    7. '               ' → logprob: -13.80489444732666
    8. '=' → logprob: -14.80489444732666
    9. '       ' → logprob: -15.17989444732666
    10. '   ' → logprob: -15.17989444732666

Token 590: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3134107291698456
    2. ' range' → logprob: -1.313410758972168
    3. '(range' → logprob: -8.813410758972168
    4. ' in' → logprob: -15.688410758972168
    5. 'in' → logprob: -17.18840980529785
    6. '	range' → logprob: -17.56340980529785
    7. ' ' → logprob: -17.81340980529785
    8. '   ' → logprob: -18.43840980529785
    9. 'for' → logprob: -18.81340980529785
    10. ' (' → logprob: -18.81340980529785

Token 591: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -8.006006828509271e-05
    2. ' (' → logprob: -10.250080108642578
    3. '(' → logprob: -10.500080108642578
    4. 'range' → logprob: -12.000080108642578
    5. 'r' → logprob: -12.500080108642578
    6. '(c' → logprob: -12.875080108642578
    7. '(range' → logprob: -13.625080108642578
    8. '(self' → logprob: -14.000080108642578
    9. '0' → logprob: -14.000080108642578
    10. '   ' → logprob: -14.375080108642578

Token 592: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001863750658230856
    2. ' +' → logprob: -8.6251859664917
    3. '):' → logprob: -12.5001859664917
    4. '+c' → logprob: -13.8751859664917
    5. '):
' → logprob: -14.2501859664917
    6. ')+' → logprob: -15.1251859664917
    7. '+r' → logprob: -15.5001859664917
    8. '+
' → logprob: -15.5001859664917
    9. ':' → logprob: -15.7501859664917
    10. '()+' → logprob: -16.000186920166016

Token 593: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7252845029579476e-05
    2. '+' → logprob: -11.125027656555176
    3. ' ' → logprob: -11.375027656555176
    4. 'c' → logprob: -15.000027656555176
    5. '```' → logprob: -16.00002670288086
    6. '   ' → logprob: -16.12502670288086
    7. ')' → logprob: -16.37502670288086
    8. 'r' → logprob: -16.87502670288086
    9. ' +' → logprob: -17.37502670288086
    10. '0' → logprob: -17.87502670288086

Token 594: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1270311027765274
    2. '):' → logprob: -2.127031087875366
    3. '):
' → logprob: -10.127031326293945
    4. '               ' → logprob: -10.377031326293945
    5. '           ' → logprob: -11.127031326293945
    6. '):

' → logprob: -11.752031326293945
    7. '       ' → logprob: -12.627031326293945
    8. ':' → logprob: -13.002031326293945
    9. ')' → logprob: -13.752031326293945
    10. ':
' → logprob: -14.127031326293945

Token 595: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00032843282679095864
    2. ':' → logprob: -8.625328063964844
    3. ',' → logprob: -9.500328063964844
    4. ' if' → logprob: -10.500328063964844
    5. ':
' → logprob: -11.000328063964844
    6. '                
' → logprob: -11.625328063964844
    7. ' :' → logprob: -12.625328063964844
    8. '```' → logprob: -13.000328063964844
    9. '           ' → logprob: -13.250328063964844
    10. '                       ' → logprob: -13.375328063964844

Token 596: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.19854736328125
    2. ' if' → logprob: -2.44854736328125
    3. ' stone' → logprob: -2.57354736328125
    4. '               ' → logprob: -4.57354736328125
    5. ' token' → logprob: -6.32354736328125
    6. 'if' (adapté à ' if') → logprob: -6.82354736328125
    7. '                    
' → logprob: -6.82354736328125
    8. '                       ' → logprob: -7.07354736328125
    9. 'token' → logprob: -7.19854736328125
    10. ' 
' → logprob: -8.19854736328125

Token 597: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16069158911705017
    2. ' self' → logprob: -1.9106916189193726
    3. '                   ' → logprob: -8.410691261291504
    4. '               ' → logprob: -8.910691261291504
    5. '(self' → logprob: -9.660691261291504
    6. 'not' → logprob: -10.910691261291504
    7. ' not' → logprob: -11.410691261291504
    8. '   ' → logprob: -12.035691261291504
    9. '0' → logprob: -12.910691261291504
    10. ' ' → logprob: -13.285691261291504

Token 598: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -0.09837112575769424
    2. '.grid' → logprob: -2.5983710289001465
    3. '.get' → logprob: -3.9733710289001465
    4. '.' → logprob: -8.473371505737305
    5. ' .' → logprob: -8.848371505737305
    6. 'board' → logprob: -9.848371505737305
    7. 'get' → logprob: -10.723371505737305
    8. '.vis' → logprob: -11.473371505737305
    9. 'grid' → logprob: -12.223371505737305
    10. 'not' → logprob: -12.348371505737305

Token 599: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.01817312277853489
    2. '.grid' → logprob: -4.0181732177734375
    3. '.' → logprob: -11.393173217773438
    4. ' .' → logprob: -11.643173217773438
    5. 'get' → logprob: -13.768173217773438
    6. '   ' → logprob: -14.393173217773438
    7. ').' → logprob: -14.768173217773438
    8. 'grid' → logprob: -15.143173217773438
    9. '       ' → logprob: -16.143173217773438
    10. '
' → logprob: -16.268173217773438

Token 600: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -1.3425219549390022e-05
    2. '_s' → logprob: -11.87501335144043
    3. '_token' → logprob: -12.75001335144043
    4. ' _' → logprob: -14.00001335144043
    5. '(st' → logprob: -14.75001335144043
    6. '_' → logprob: -14.75001335144043
    7. '(r' → logprob: -14.87501335144043
    8. '```' → logprob: -15.00001335144043
    9. '(_' → logprob: -15.37501335144043
    10. ' (' → logprob: -16.50001335144043

Token 601: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -6.146429223008454e-05
    2. 'o' → logprob: -11.12506103515625
    3. '   ' → logprob: -11.87506103515625
    4. '```' → logprob: -12.37506103515625
    5. 'on' → logprob: -12.50006103515625
    6. '_one' → logprob: -12.62506103515625
    7. 'c' → logprob: -12.87506103515625
    8. 'ine' → logprob: -12.87506103515625
    9. 'r' → logprob: -13.00006103515625
    10. '(' → logprob: -13.25006103515625

Token 602: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0005338519695214927
    2. '(' → logprob: -7.6255340576171875
    3. ' (' → logprob: -10.250534057617188
    4. '((' → logprob: -12.500534057617188
    5. ' ' → logprob: -13.000534057617188
    6. '<|end|>' → logprob: -13.375534057617188
    7. '(
' → logprob: -14.375534057617188
    8. ')' → logprob: -15.125534057617188
    9. ')(' → logprob: -15.125534057617188
    10. '   ' → logprob: -15.375534057617188

Token 603: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.20243597030639648
    2. ',' → logprob: -1.7024359703063965
    3. ' ,' → logprob: -7.5774359703063965
    4. ',(' → logprob: -7.8274359703063965
    5. '),(' → logprob: -11.452436447143555
    6. '(c' → logprob: -11.577436447143555
    7. ',k' → logprob: -11.577436447143555
    8. ',j' → logprob: -11.702436447143555
    9. ',r' → logprob: -11.702436447143555
    10. ',s' → logprob: -11.952436447143555

Token 604: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006551315891556442
    2. ' )' → logprob: -8.500655174255371
    3. ')!=' → logprob: -8.500655174255371
    4. '()' → logprob: -9.125655174255371
    5. '())' → logprob: -9.500655174255371
    6. ')==' → logprob: -9.875655174255371
    7. ' !=' → logprob: -12.875655174255371
    8. '()!=' → logprob: -13.375655174255371
    9. 'not' → logprob: -13.625655174255371
    10. ')>' → logprob: -13.750655174255371

Token 605: ' >' (ID: 1424)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7076998353004456
    2. '!=' → logprob: -0.8326998353004456
    3. '()!=' → logprob: -2.832699775695801
    4. '()' → logprob: -4.707699775695801
    5. ')' → logprob: -6.332699775695801
    6. ')!=' → logprob: -6.332699775695801
    7. '>' → logprob: -7.582699775695801
    8. '()>' → logprob: -9.2076997756958
    9. ' not' → logprob: -9.5826997756958
    10. ']!=' → logprob: -9.7076997756958

Token 606: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -16.50006675720215
    4. '<|end|>' → logprob: -17.25006675720215
    5. '                   ' → logprob: -18.87506675720215
    6. '۰' → logprob: -19.00006675720215
    7. '```' → logprob: -19.00006675720215
    8. '               ' → logprob: -19.25006675720215
    9. '  ' → logprob: -19.87506675720215
    10. '                       ' → logprob: -19.87506675720215

Token 607: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.7500057220459
    4. '<|end|>' → logprob: -18.3750057220459
    5. '۰' → logprob: -19.2500057220459
    6. '=' → logprob: -19.2500057220459
    7. '00' → logprob: -20.1250057220459
    8. '```' → logprob: -20.3750057220459
    9. 'zero' → logprob: -20.8750057220459
    10. '1' → logprob: -21.0625057220459

Token 608: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0031917323358356953
    2. 'and' → logprob: -5.753191947937012
    3. ' ' → logprob: -11.628191947937012
    4. '                ' → logprob: -12.628191947937012
    5. '            ' → logprob: -14.753191947937012
    6. '                   ' → logprob: -14.878191947937012
    7. '               ' → logprob: -15.378191947937012
    8. '                    ' → logprob: -15.878191947937012
    9. '	and' → logprob: -16.128190994262695
    10. '                  ' → logprob: -16.253190994262695

Token 609: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.47517096996307373
    2. ' (' → logprob: -0.9751709699630737
    3. '(self' → logprob: -7.725171089172363
    4. '(c' → logprob: -7.725171089172363
    5. '                   ' → logprob: -9.225171089172363
    6. '               ' → logprob: -10.350171089172363
    7. '   ' → logprob: -11.350171089172363
    8. '(f' → logprob: -11.850171089172363
    9. ' ' → logprob: -11.975171089172363
    10. '(' → logprob: -11.975171089172363

Token 610: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1815565526485443
    2. '(r' → logprob: -1.8065565824508667
    3. ' (' → logprob: -6.431556701660156
    4. ' r' → logprob: -8.681556701660156
    5. '                   ' → logprob: -11.431556701660156
    6. ')' → logprob: -11.931556701660156
    7. '   ' → logprob: -12.681556701660156
    8. '
' → logprob: -13.431556701660156
    9. '                       ' → logprob: -13.806556701660156
    10. '               ' → logprob: -13.806556701660156

Token 611: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1272132396697998
    2. ',c' → logprob: -2.1272132396698
    3. ' ,' → logprob: -9.377213478088379
    4. ',
' → logprob: -9.877213478088379
    5. ',r' → logprob: -10.502213478088379
    6. ',(' → logprob: -11.377213478088379
    7. ',

' → logprob: -11.752213478088379
    8. ',n' → logprob: -11.877213478088379
    9. ',current' → logprob: -11.877213478088379
    10. ',None' → logprob: -11.877213478088379

Token 612: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1296026110649109
    2. ' not' → logprob: -2.1296026706695557
    3. 'not' → logprob: -6.129602432250977
    4. ' )' → logprob: -7.629602432250977
    5. '	not' → logprob: -13.254602432250977
    6. '<|end|>' → logprob: -13.754602432250977
    7. ')
' → logprob: -14.004602432250977
    8. 'Not' → logprob: -14.254602432250977
    9. '),' → logprob: -14.504602432250977
    10. ',' → logprob: -14.754602432250977

Token 613: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0031791406217962503
    2. 'not' → logprob: -5.75317907333374
    3. ')' → logprob: -14.003179550170898
    4. '	not' → logprob: -14.878179550170898
    5. ' no' → logprob: -15.878179550170898
    6. ' ' → logprob: -17.5031795501709
    7. 'Not' → logprob: -17.8781795501709
    8. '<|end|>' → logprob: -18.5031795501709
    9. '_not' → logprob: -19.1281795501709
    10. ':not' → logprob: -19.2531795501709

Token 614: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.23307989537715912
    2. '<|end|>' → logprob: -1.7330799102783203
    3. 'in' → logprob: -3.6080799102783203
    4. '<|end|>' → logprob: -6.23307991027832
    5. 'self' → logprob: -7.48307991027832
    6. ')' → logprob: -7.48307991027832
    7. ' to' → logprob: -7.98307991027832
    8. ' self' → logprob: -8.48307991027832
    9. ',' → logprob: -9.10807991027832
    10. ' of' → logprob: -9.35807991027832

Token 615: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003178901970386505
    2. ' self' → logprob: -5.75317907333374
    3. '
' → logprob: -14.628178596496582
    4. '           ' → logprob: -14.878178596496582
    5. '(self' → logprob: -15.628178596496582
    6. '               ' → logprob: -16.3781795501709
    7. '       ' → logprob: -16.5031795501709
    8. '[self' → logprob: -16.6281795501709
    9. '	self' → logprob: -17.8781795501709
    10. '=self' → logprob: -18.2531795501709

Token 616: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.018160710111260414
    2. 'visited' → logprob: -4.018160820007324
    3. '.' → logprob: -12.018160820007324
    4. 'vis' → logprob: -13.268160820007324
    5. ' .' → logprob: -13.518160820007324
    6. ' visited' → logprob: -14.018160820007324
    7. '.visible' → logprob: -15.518160820007324
    8. 'Visited' → logprob: -15.768160820007324
    9. '.visit' → logprob: -15.893160820007324
    10. '```' → logprob: -16.018159866333008

Token 617: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -7.465036105713807e-06
    2. '_' → logprob: -12.375007629394531
    3. '
' → logprob: -14.375007629394531
    4. '```' → logprob: -14.375007629394531
    5. '\' → logprob: -15.500007629394531
    6. '-' → logprob: -15.500007629394531
    7. 'isted' → logprob: -15.500007629394531
    8. '   ' → logprob: -15.625007629394531
    9. ' it' → logprob: -15.625007629394531
    10. '`' → logprob: -16.00000762939453

Token 618: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06242517754435539
    2. ':
' → logprob: -2.812425136566162
    3. ' and' → logprob: -8.31242561340332
    4. '):
' → logprob: -9.68742561340332
    5. '                   ' → logprob: -9.68742561340332
    6. '               ' → logprob: -10.68742561340332
    7. '):' → logprob: -11.31242561340332
    8. '           ' → logprob: -11.31242561340332
    9. ',' → logprob: -11.56242561340332
    10. ':

' → logprob: -11.81242561340332

Token 619: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.22419843077659607
    2. ':' → logprob: -2.224198341369629
    3. ':
' → logprob: -2.599198341369629
    4. '               ' → logprob: -5.474198341369629
    5. '                       ' → logprob: -5.474198341369629
    6. '           ' → logprob: -6.224198341369629
    7. '<|end|>' → logprob: -6.349198341369629
    8. '                    
' → logprob: -6.849198341369629
    9. '```' → logprob: -6.849198341369629
    10. ',' → logprob: -6.974198341369629

Token 620: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' (adapté à ' group') → logprob: -0.34479227662086487
    2. '                       ' → logprob: -1.9697922468185425
    3. 'self' → logprob: -3.094792366027832
    4. 'stack' → logprob: -3.094792366027832
    5. '                   ' → logprob: -3.344792366027832
    6. ' group' → logprob: -3.844792366027832
    7. ' self' → logprob: -6.344792366027832
    8. ' stack' → logprob: -6.969792366027832
    9. ' stone' → logprob: -7.719792366027832
    10. 'stone' → logprob: -7.969792366027832

Token 621: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.025317931547760963
    2. '_nodes' → logprob: -4.400318145751953
    3. '=' → logprob: -4.775318145751953
    4. '_tokens' → logprob: -6.275318145751953
    5. '_vertices' → logprob: -7.400318145751953
    6. '_stack' → logprob: -7.525318145751953
    7. '_positions' → logprob: -8.150318145751953
    8. '_points' → logprob: -8.275318145751953
    9. '_cells' → logprob: -8.275318145751953
    10. ',' → logprob: -9.275318145751953

Token 622: ' self' (ID: 1051)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.45465776324272156
    2. 'self' → logprob: -1.829657793045044
    3. '[]
' → logprob: -2.079657793045044
    4. ' self' → logprob: -3.329657793045044
    5. '[self' → logprob: -4.204657554626465
    6. '[]' → logprob: -4.454657554626465
    7. ' [(' → logprob: -4.704657554626465
    8. 'set' → logprob: -5.454657554626465
    9. ' []
' → logprob: -6.204657554626465
    10. ' set' → logprob: -7.204657554626465

Token 623: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.0513901710510254
    2. 'expl' → logprob: -1.5513901710510254
    3. '.d' → logprob: -1.6763901710510254
    4. '.find' → logprob: -2.1763901710510254
    5. '.collect' → logprob: -3.3013901710510254
    6. 'dfs' → logprob: -3.5513901710510254
    7. '.f' → logprob: -3.9263901710510254
    8. '.ex' → logprob: -4.301390171051025
    9. '.b' → logprob: -4.926390171051025
    10. '.get' → logprob: -5.051390171051025

Token 624: 'dfs' (ID: 60837)
  Prédit: 'dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.006745923776179552
    2. 'expl' → logprob: -5.5067458152771
    3. 'find' → logprob: -6.6317458152771
    4. 'collect' → logprob: -7.5067458152771
    5. 'search' → logprob: -8.006746292114258
    6. 'f' → logprob: -8.256746292114258
    7. 'b' → logprob: -9.881746292114258
    8. 'get' → logprob: -10.006746292114258
    9. 'expand' → logprob: -10.256746292114258
    10. 'depth' → logprob: -10.256746292114258

Token 625: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.003142658621072769
    2. '((' → logprob: -6.128142833709717
    3. '(' → logprob: -7.003142833709717
    4. ' (' → logprob: -10.628142356872559
    5. '(
' → logprob: -10.753142356872559
    6. '   ' → logprob: -14.503142356872559
    7. '(self' → logprob: -14.628142356872559
    8. 'r' → logprob: -15.628142356872559
    9. '(

' → logprob: -16.128143310546875
    10. '(u' → logprob: -16.253143310546875

Token 626: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.3875943422317505
    2. ',' → logprob: -1.1375943422317505
    3. ' ,' → logprob: -7.262594223022461
    4. ',
' → logprob: -12.387594223022461
    5. '   ' → logprob: -12.637594223022461
    6. ',n' → logprob: -13.137594223022461
    7. ',k' → logprob: -13.137594223022461
    8. ',s' → logprob: -13.887594223022461
    9. ',r' → logprob: -14.137594223022461
    10. ',p' → logprob: -14.262594223022461

Token 627: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009859145618975163
    2. ',' → logprob: -4.759859085083008
    3. ')
' → logprob: -7.759859085083008
    4. '                   ' → logprob: -7.884859085083008
    5. ' )' → logprob: -8.009859085083008
    6. ',)' → logprob: -10.259859085083008
    7. ')`' → logprob: -11.634859085083008
    8. '                       ' → logprob: -11.759859085083008
    9. '               ' → logprob: -12.134859085083008
    10. ' ,' → logprob: -12.634859085083008

Token 628: '                   ' (ID: 699)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4628120958805084
    2. '                   ' → logprob: -2.3378121852874756
    3. '(' → logprob: -2.5878121852874756
    4. '               ' → logprob: -2.8378121852874756
    5. '   ' → logprob: -3.4628121852874756
    6. ':' → logprob: -3.4628121852874756
    7. '                       ' → logprob: -4.3378119468688965
    8. '(
' → logprob: -4.4628119468688965
    9. '                    ' → logprob: -4.9628119468688965
    10. '                ' → logprob: -4.9628119468688965

Token 629: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.045602258294820786
    2. '                   ' → logprob: -3.545602321624756
    3. 'if' → logprob: -4.170602321624756
    4. ' self' → logprob: -8.420601844787598
    5. ' if' → logprob: -10.045601844787598
    6. '           ' → logprob: -12.045601844787598
    7. '   ' → logprob: -12.295601844787598
    8. '               ' → logprob: -12.420601844787598
    9. '       ' → logprob: -13.420601844787598
    10. '                       ' → logprob: -13.670601844787598

Token 630: '.groups' (ID: 89749)
  Prédit: '.groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.groups' → logprob: -2.8444881536415778e-05
    2. '.' → logprob: -10.625028610229492
    3. 'groups' → logprob: -12.750028610229492
    4. '.Groups' → logprob: -15.000028610229492
    5. '.group' → logprob: -15.625028610229492
    6. 'roups' → logprob: -15.750028610229492
    7. '.groupby' → logprob: -16.000028610229492
    8. ' .' → logprob: -16.125028610229492
    9. ' groups' → logprob: -17.000028610229492
    10. '.s' → logprob: -17.125028610229492

Token 631: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0017060093814507127
    2. '.' → logprob: -6.376706123352051
    3. '.extend' → logprob: -13.62670612335205
    4. '.setdefault' → logprob: -14.00170612335205
    5. '.app' → logprob: -14.25170612335205
    6. 'append' → logprob: -14.62670612335205
    7. '.Append' → logprob: -16.001705169677734
    8. ' .' → logprob: -16.126705169677734
    9. '.add' → logprob: -16.251705169677734
    10. '.ap' → logprob: -16.376705169677734

Token 632: '(group' (ID: 36416)
  Prédit: '(group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(group' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.000000953674316
    3. 'group' → logprob: -15.500000953674316
    4. ' (' → logprob: -17.5
    5. '((' → logprob: -19.0
    6. '(
' → logprob: -19.25
    7. ' group' → logprob: -19.625
    8. '[group' → logprob: -20.375
    9. '"group' → logprob: -21.0
    10. '(g' → logprob: -21.125

Token 633: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.054133739322423935
    2. '<|end|>' → logprob: -3.054133653640747
    3. '               ' → logprob: -6.679133892059326
    4. '                   ' → logprob: -6.679133892059326
    5. '       ' → logprob: -6.929133892059326
    6. '<|end|>' → logprob: -7.179133892059326
    7. ')
' → logprob: -8.054133415222168
    8. ' )' → logprob: -8.679133415222168
    9. '()' → logprob: -8.679133415222168
    10. '```' → logprob: -9.179133415222168

Token 634: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7176933884620667
    2. '                   ' → logprob: -0.7176933884620667
    3. '               ' → logprob: -4.342693328857422
    4. '   ' → logprob: -5.467693328857422
    5. '           ' → logprob: -6.092693328857422
    6. '    
' → logprob: -7.342693328857422
    7. '                    
' → logprob: -7.342693328857422
    8. '                       ' → logprob: -7.467693328857422
    9. '<|end|>' → logprob: -7.467693328857422
    10. 'return' → logprob: -7.967693328857422

Token 635: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024961275979876518
    2. '   ' → logprob: -3.774961233139038
    3. '           ' → logprob: -8.149961471557617
    4. ' return' → logprob: -8.149961471557617
    5. ' ' → logprob: -8.274961471557617
    6. '        
' → logprob: -8.649961471557617
    7. '    
' → logprob: -9.399961471557617
    8. 'def' → logprob: -9.399961471557617
    9. '        ' → logprob: -9.524961471557617
    10. '
' → logprob: -9.649961471557617

Token 636: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.38689079880714417
    2. 'self' → logprob: -1.1368907690048218
    3. ' None' → logprob: -11.761890411376953
    4. '[self' → logprob: -11.761890411376953
    5. 'None' → logprob: -12.636890411376953
    6. '[]' → logprob: -14.761890411376953
    7. ' [' → logprob: -15.261890411376953
    8. '[' → logprob: -15.761890411376953
    9. '	self' → logprob: -16.761890411376953
    10. ' []' → logprob: -16.886890411376953

Token 637: '.groups' (ID: 89749)
  Prédit: '.groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.groups' → logprob: -7.93448489275761e-05
    2. '.' → logprob: -9.750079154968262
    3. '.tokens' → logprob: -11.375079154968262
    4. 'groups' → logprob: -12.250079154968262
    5. ' .' → logprob: -13.250079154968262
    6. '.token' → logprob: -13.875079154968262
    7. '.group' → logprob: -14.875079154968262
    8. '.users' → logprob: -15.500079154968262
    9. '_groups' → logprob: -15.500079154968262
    10. ' groups' → logprob: -15.625079154968262

Token 638: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024312611669301987
    2. '<|end|>' → logprob: -4.149312496185303
    3. '    
' → logprob: -6.274312496185303
    4. 'def' → logprob: -6.649312496185303
    5. '```' → logprob: -6.649312496185303
    6. '
' → logprob: -6.899312496185303
    7. '<|end|>' → logprob: -7.149312496185303
    8. ':' → logprob: -7.774312496185303
    9. '(' → logprob: -7.899312496185303
    10. '[' → logprob: -9.149312973022461

Token 639: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006563556380569935
    2. 'def' → logprob: -5.756563663482666
    3. '(' → logprob: -6.756563663482666
    4. ' ' → logprob: -7.631563663482666
    5. ' def' → logprob: -7.881563663482666
    6. '    
' → logprob: -8.256563186645508
    7. ' 
' → logprob: -9.006563186645508
    8. '<|end|>' → logprob: -9.006563186645508
    9. '_' → logprob: -9.131563186645508
    10. '    ' → logprob: -9.256563186645508

Token 640: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.12393692880868912
    2. '   ' → logprob: -2.623936891555786
    3. ' def' → logprob: -3.123936891555786
    4. '
' → logprob: -9.998936653137207
    5. ' ' → logprob: -11.498936653137207
    6. '	def' → logprob: -12.873936653137207
    7. '    
' → logprob: -13.248936653137207
    8. '_def' → logprob: -13.748936653137207
    9. '       ' → logprob: -14.248936653137207
    10. '  ' → logprob: -14.373936653137207

Token 641: ' _' (ID: 1175)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -3.9650025428272784e-05
    2. ' _' → logprob: -10.250040054321289
    3. '_' → logprob: -13.375040054321289
    4. '_df' → logprob: -13.375040054321289
    5. '__' → logprob: -14.625040054321289
    6. '_find' → logprob: -15.500040054321289
    7. 'dfs' → logprob: -15.750040054321289
    8. '_D' → logprob: -15.875040054321289
    9. '\' → logprob: -17.12504005432129
    10. '_repr' → logprob: -17.12504005432129

Token 642: 'dfs' (ID: 60837)
  Prédit: 'dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -3.128163257315464e-07
    2. 'df' → logprob: -15.5
    3. ' dfs' → logprob: -17.375
    4. '_d' → logprob: -17.5
    5. 'def' → logprob: -18.0
    6. 'd' → logprob: -18.25
    7. '_' → logprob: -19.125
    8. 'depth' → logprob: -20.875
    9. 'dfa' → logprob: -21.125
    10. 'ds' → logprob: -21.875

Token 643: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.249780638725497e-05
    2. '(' → logprob: -10.375032424926758
    3. '(s' → logprob: -14.125032424926758
    4. '(r' → logprob: -15.750032424926758
    5. ' (' → logprob: -15.875032424926758
    6. 'self' → logprob: -15.875032424926758
    7. '(
' → logprob: -16.125032424926758
    8. '   ' → logprob: -17.125032424926758
    9. '	self' → logprob: -18.875032424926758
    10. '(sel' → logprob: -19.000032424926758

Token 644: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004283653572201729
    2. ',' → logprob: -5.504283428192139
    3. '(' → logprob: -9.379283905029297
    4. 'self' → logprob: -10.254283905029297
    5. ' (' → logprob: -10.379283905029297
    6. ',self' → logprob: -11.254283905029297
    7. '       ' → logprob: -11.379283905029297
    8. '   ' → logprob: -11.629283905029297
    9. '(s' → logprob: -11.629283905029297
    10. '(r' → logprob: -11.879283905029297

Token 645: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0005803157109767199
    2. ' r' → logprob: -7.500580310821533
    3. 'self' → logprob: -11.000580787658691
    4. 'start' → logprob: -11.750580787658691
    5. '   ' → logprob: -13.250580787658691
    6. ')' → logprob: -15.375580787658691
    7. ' start' → logprob: -15.750580787658691
    8. ' self' → logprob: -15.750580787658691
    9. 'row' → logprob: -15.875580787658691
    10. ' ' → logprob: -16.250579833984375

Token 646: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47415924072265625
    2. ',c' → logprob: -0.9741592407226562
    3. ' ,' → logprob: -9.474159240722656
    4. '   ' → logprob: -12.599159240722656
    5. ',
' → logprob: -13.724159240722656
    6. ',C' → logprob: -15.349159240722656
    7. ',r' → logprob: -15.974159240722656
    8. ',b' → logprob: -16.474159240722656
    9. '‌,' → logprob: -16.474159240722656
    10. '       ' → logprob: -16.599159240722656

Token 647: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0002613358374219388
    2. ' c' → logprob: -8.250261306762695
    3. '   ' → logprob: -18.750261306762695
    4. '	c' → logprob: -19.750261306762695
    5. ')c' → logprob: -20.375261306762695
    6. '  ' → logprob: -20.625261306762695
    7. ',c' → logprob: -21.375261306762695
    8. ' ' → logprob: -21.875261306762695
    9. '_c' → logprob: -22.250261306762695
    10. '    ' → logprob: -22.375261306762695

Token 648: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5762990117073059
    2. '):
' → logprob: -0.8262990117073059
    3. ')' → logprob: -8.201298713684082
    4. '   ' → logprob: -10.576298713684082
    5. '):
' → logprob: -10.701298713684082
    6. ' ):' → logprob: -11.076298713684082
    7. ' ):
' → logprob: -11.826298713684082
    8. '):

' → logprob: -11.951298713684082
    9. '       ' → logprob: -12.701298713684082
    10. ',' → logprob: -12.701298713684082

Token 649: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007007097825407982
    2. '   ' → logprob: -6.007007122039795
    3. '[' → logprob: -6.257007122039795
    4. ' stack' → logprob: -7.382007122039795
    5. 'stack' → logprob: -7.507007122039795
    6. '[
' → logprob: -7.507007122039795
    7. '    
' → logprob: -8.382006645202637
    8. '        
' → logprob: -9.132006645202637
    9. '	stack' → logprob: -9.507006645202637
    10. '{' → logprob: -9.507006645202637

Token 650: ' start' (ID: 1604)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.5921767354011536
    2. '       ' → logprob: -0.9671767354011536
    3. ' stack' → logprob: -2.717176675796509
    4. '	stack' → logprob: -8.34217643737793
    5. ' stone' → logprob: -8.96717643737793
    6. 'stone' → logprob: -9.34217643737793
    7. 'group' → logprob: -9.71717643737793
    8. '   ' → logprob: -10.09217643737793
    9. '_stack' → logprob: -11.21717643737793
    10. ' group' → logprob: -11.21717643737793

Token 651: '_st' (ID: 2518)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9033210873603821
    2. '_stack' → logprob: -1.0283210277557373
    3. '_st' → logprob: -2.0283210277557373
    4. '=' → logprob: -3.4033210277557373
    5. ',' → logprob: -3.5283210277557373
    6. '_' → logprob: -4.528321266174316
    7. 'stone' → logprob: -4.653321266174316
    8. ')' → logprob: -4.903321266174316
    9. '_token' → logprob: -5.528321266174316
    10. '   ' → logprob: -5.653321266174316

Token 652: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -2.696889623621246e-06
    2. 'stone' → logprob: -13.62500286102295
    3. 'tone' → logprob: -14.25000286102295
    4. ' one' → logprob: -15.87500286102295
    5. 'ones' → logprob: -16.000001907348633
    6. '_one' → logprob: -16.375001907348633
    7. 'rone' → logprob: -16.500001907348633
    8. 'on' → logprob: -16.625001907348633
    9. '   ' → logprob: -16.625001907348633
    10. '```' → logprob: -17.125001907348633

Token 653: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061983373016119
    2. '=' → logprob: -2.811983346939087
    3. '_color' → logprob: -11.811983108520508
    4. '=self' → logprob: -12.436983108520508
    5. '_type' → logprob: -13.561983108520508
    6. ' ' → logprob: -13.686983108520508
    7. 'color' → logprob: -14.436983108520508
    8. 'stone' → logprob: -14.936983108520508
    9. '=
' → logprob: -15.311983108520508
    10. '=color' → logprob: -15.436983108520508

Token 654: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01815052703022957
    2. ' self' → logprob: -4.018150329589844
    3. '       ' → logprob: -14.518150329589844
    4. '(self' → logprob: -16.143150329589844
    5. '[self' → logprob: -17.768150329589844
    6. '	self' → logprob: -18.018150329589844
    7. '=self' → logprob: -18.768150329589844
    8. '1' → logprob: -19.518150329589844
    9. '           ' → logprob: -20.268150329589844
    10. '   ' → logprob: -20.268150329589844

Token 655: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -0.0019793107639998198
    2. 'board' → logprob: -6.626979351043701
    3. '.get' → logprob: -7.376979351043701
    4. 'get' → logprob: -11.001978874206543
    5. ' board' → logprob: -12.376978874206543
    6. '.' → logprob: -12.626978874206543
    7. '	board' → logprob: -13.751978874206543
    8. ' .' → logprob: -13.876978874206543
    9. 'self' → logprob: -14.626978874206543
    10. '   ' → logprob: -15.001978874206543

Token 656: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -5.676981345459353e-06
    2. '.' → logprob: -12.125005722045898
    3. ' .' → logprob: -15.750005722045898
    4. 'get' → logprob: -16.5000057220459
    5. '   ' → logprob: -20.0000057220459
    6. ').' → logprob: -20.7500057220459
    7. '.
' → logprob: -20.8750057220459
    8. '().' → logprob: -21.2500057220459
    9. ' ' → logprob: -21.3750057220459
    10. '_get' → logprob: -21.6250057220459

Token 657: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -1.5690089639974758e-05
    2. '_s' → logprob: -12.500015258789062
    3. '_' → logprob: -12.625015258789062
    4. '_token' → logprob: -12.750015258789062
    5. '(st' → logprob: -13.250015258789062
    6. 'st' → logprob: -13.750015258789062
    7. 'stone' → logprob: -13.875015258789062
    8. '(r' → logprob: -14.500015258789062
    9. 'Stone' → logprob: -14.875015258789062
    10. '```' → logprob: -15.625015258789062

Token 658: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.00038169484469108284
    2. '_one' → logprob: -8.250381469726562
    3. 'stone' → logprob: -9.875381469726562
    4. 'on' → logprob: -11.500381469726562
    5. '   ' → logprob: -11.625381469726562
    6. 'o' → logprob: -11.625381469726562
    7. 'One' → logprob: -12.375381469726562
    8. '_' → logprob: -12.375381469726562
    9. 'tone' → logprob: -12.500381469726562
    10. '```' → logprob: -12.500381469726562

Token 659: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.014847414568066597
    2. '(' → logprob: -4.264847278594971
    3. 'r' → logprob: -7.389847278594971
    4. ' r' → logprob: -10.014847755432129
    5. ' (' → logprob: -11.014847755432129
    6. ' ' → logprob: -12.639847755432129
    7. ')' → logprob: -14.639847755432129
    8. '(row' → logprob: -14.764847755432129
    9. '(
' → logprob: -15.139847755432129
    10. '<|end|>' → logprob: -16.139846801757812

Token 660: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03353019803762436
    2. ',r' → logprob: -3.6585302352905273
    3. ',c' → logprob: -5.158530235290527
    4. ' ,' → logprob: -6.908530235290527
    5. 'r' → logprob: -8.408530235290527
    6. 'c' → logprob: -9.283530235290527
    7. ')' → logprob: -9.283530235290527
    8. '(r' → logprob: -11.408530235290527
    9. ',
' → logprob: -11.408530235290527
    10. ' r' → logprob: -12.033530235290527

Token 661: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009309909655712545
    2. ')
' → logprob: -7.0009307861328125
    3. ' )' → logprob: -10.875930786132812
    4. ' )
' → logprob: -15.750930786132812
    5. ')
' → logprob: -15.875930786132812
    6. ')

' → logprob: -16.375930786132812
    7. ')`' → logprob: -16.500930786132812
    8. '       ' → logprob: -17.250930786132812
    9. ')#' → logprob: -17.250930786132812
    10. '   ' → logprob: -17.625930786132812

Token 662: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015662075951695442
    2. ' stack' → logprob: -5.01566219329834
    3. 'stack' → logprob: -5.26566219329834
    4. '
' → logprob: -5.89066219329834
    5. '        
' → logprob: -8.01566219329834
    6. '   ' → logprob: -8.14066219329834
    7. '	stack' → logprob: -8.26566219329834
    8. '    
' → logprob: -10.76566219329834
    9. '_stack' → logprob: -11.14066219329834
    10. ',' → logprob: -11.64066219329834

Token 663: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.253863662481308
    2. ' stack' → logprob: -1.5038636922836304
    3. '       ' → logprob: -6.25386381149292
    4. '	stack' → logprob: -12.503863334655762
    5. '   ' → logprob: -13.003863334655762
    6. '
' → logprob: -13.253863334655762
    7. '_stack' → logprob: -14.503863334655762
    8. 'self' → logprob: -14.878863334655762
    9. '```' → logprob: -15.003863334655762
    10. '        
' → logprob: -15.253863334655762

Token 664: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693378329277039
    2. '=' → logprob: -2.1269338130950928
    3. ' =[' → logprob: -12.751934051513672
    4. '=[' → logprob: -13.376934051513672
    5. '.append' → logprob: -14.626934051513672
    6. '=[]' → logprob: -15.501934051513672
    7. ' ' → logprob: -15.626934051513672
    8. '[' → logprob: -15.751934051513672
    9. ')' → logprob: -15.876934051513672
    10. ' [' → logprob: -16.501934051513672

Token 665: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0040785204619169235
    2. ' [(' → logprob: -5.504078388214111
    3. '[((' → logprob: -15.87907886505127
    4. '([(' → logprob: -18.879077911376953
    5. '[' → logprob: -20.379077911376953
    6. ' ' → logprob: -20.379077911376953
    7. '   ' → logprob: -20.629077911376953
    8. '[]' → logprob: -22.379077911376953
    9. '[
' → logprob: -23.004077911376953
    10. ' [' → logprob: -23.129077911376953

Token 666: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -6.392202976712724e-06
    2. ' r' → logprob: -12.000006675720215
    3. '(r' → logprob: -16.2500057220459
    4. '_r' → logprob: -17.8750057220459
    5. '   ' → logprob: -18.8750057220459
    6. '	r' → logprob: -19.5000057220459
    7. ' ' → logprob: -20.8750057220459
    8. ')' → logprob: -21.0000057220459
    9. '[r' → logprob: -21.0000057220459
    10. ',r' → logprob: -21.0000057220459

Token 667: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6330031156539917
    2. ',c' → logprob: -0.7580031156539917
    3. ' ,' → logprob: -7.883003234863281
    4. ',
' → logprob: -10.883003234863281
    5. 'c' → logprob: -12.883003234863281
    6. ',b' → logprob: -14.383003234863281
    7. ',C' → logprob: -14.508003234863281
    8. ',s' → logprob: -14.633003234863281
    9. ',

' → logprob: -14.633003234863281
    10. ' ' → logprob: -15.008003234863281

Token 668: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00029959288076497614
    2. ')' → logprob: -8.875299453735352
    3. ')]
' → logprob: -8.875299453735352
    4. ',' → logprob: -11.500299453735352
    5. ' )' → logprob: -12.125299453735352
    6. '),' → logprob: -13.375299453735352
    7. ']' → logprob: -13.625299453735352
    8. '       ' → logprob: -14.750299453735352
    9. ')
' → logprob: -14.875299453735352
    10. ')]

' → logprob: -15.500299453735352

Token 669: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043147966265678406
    2. 'visited' → logprob: -4.043148040771484
    3. 'self' → logprob: -4.543148040771484
    4. 'result' → logprob: -5.293148040771484
    5. 'tokens' → logprob: -6.168148040771484
    6. ' self' → logprob: -6.418148040771484
    7. '   ' → logprob: -6.668148040771484
    8. '
' → logprob: -6.668148040771484
    9. ' visited' → logprob: -6.918148040771484
    10. ' result' → logprob: -8.043148040771484

Token 670: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' (adapté à ' group') → logprob: -0.0027969146613031626
    2. 'visited' → logprob: -6.1277971267700195
    3. 'result' → logprob: -7.8777971267700195
    4. ' group' → logprob: -9.37779712677002
    5. '       ' → logprob: -9.37779712677002
    6. 'connected' → logprob: -10.50279712677002
    7. 'component' → logprob: -10.62779712677002
    8. 'self' → logprob: -12.75279712677002
    9. 'seen' → logprob: -12.87779712677002
    10. '   ' → logprob: -13.50279712677002

Token 671: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06998412311077118
    2. '=' → logprob: -2.694984197616577
    3. '=[]' → logprob: -10.694984436035156
    4. '_tokens' → logprob: -11.819984436035156
    5. '_nodes' → logprob: -12.319984436035156
    6. '=[]
' → logprob: -12.694984436035156
    7. ',' → logprob: -13.194984436035156
    8. ')' → logprob: -13.194984436035156
    9. 'tokens' → logprob: -13.194984436035156
    10. '_positions' → logprob: -13.569984436035156

Token 672: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.12745244801044464
    2. 'set' → logprob: -2.1274523735046387
    3. ' set' → logprob: -8.377452850341797
    4. ' []' → logprob: -8.752452850341797
    5. '{' → logprob: -9.377452850341797
    6. '[(' → logprob: -10.127452850341797
    7. '[]
' → logprob: -12.127452850341797
    8. '[]}' → logprob: -12.502452850341797
    9. '{}' → logprob: -13.502452850341797
    10. '[' → logprob: -14.752452850341797

Token 673: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2816540002822876
    2. ' while' → logprob: -1.9066540002822876
    3. '
' → logprob: -2.406653881072998
    4. '	while' → logprob: -5.906653881072998
    5. 'while' → logprob: -6.031653881072998
    6. ' 
' → logprob: -7.781653881072998
    7. '        
' → logprob: -7.906653881072998
    8. '<|end|>' → logprob: -8.031654357910156
    9. '   ' → logprob: -8.906654357910156
    10. '  
' → logprob: -9.781654357910156

Token 674: ' self' (ID: 1051)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.046408724039793015
    2. '       ' → logprob: -3.2964086532592773
    3. ' while' → logprob: -4.796408653259277
    4. '	while' → logprob: -9.921408653259277
    5. 'self' (adapté à ' self') → logprob: -10.671408653259277
    6. 'While' → logprob: -15.296408653259277
    7. '
' → logprob: -15.671408653259277
    8. ' self' → logprob: -16.421409606933594
    9. '   ' → logprob: -16.546409606933594
    10. '	' → logprob: -16.546409606933594

Token 675: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.0003222342347726226
    2. '.' → logprob: -8.375322341918945
    3. 'visited' → logprob: -10.250322341918945
    4. '.visit' → logprob: -10.250322341918945
    5. ' .' → logprob: -11.125322341918945
    6. '.v' → logprob: -13.500322341918945
    7. 'Visited' → logprob: -14.375322341918945
    8. '.user' → logprob: -14.375322341918945
    9. '   ' → logprob: -14.625322341918945
    10. '.
' → logprob: -14.875322341918945

Token 676: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -1.843177233240567e-05
    2. 'isted' → logprob: -11.625018119812012
    3. 'ted' → logprob: -12.500018119812012
    4. '_' → logprob: -12.750018119812012
    5. '[' → logprob: -14.750018119812012
    6. 'ITED' → logprob: -15.125018119812012
    7. '```' → logprob: -15.250018119812012
    8. '
' → logprob: -15.250018119812012
    9. '-' → logprob: -15.375018119812012
    10. '=' → logprob: -15.375018119812012

Token 677: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0012205826351419091
    2. '.' → logprob: -6.751220703125
    3. ' .' → logprob: -10.001220703125
    4. '.update' → logprob: -13.001220703125
    5. 'add' → logprob: -13.001220703125
    6. '.=' → logprob: -15.876220703125
    7. '.
' → logprob: -16.251220703125
    8. '=' → logprob: -16.501220703125
    9. ' add' → logprob: -16.751220703125
    10. ' ' → logprob: -17.001220703125

Token 678: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.5048530030981055e-06
    2. '(r' → logprob: -14.125001907348633
    3. '(' → logprob: -14.500001907348633
    4. '(stack' → logprob: -15.750001907348633
    5. ' ((' → logprob: -16.125001907348633
    6. ' (' → logprob: -17.875001907348633
    7. ' ' → logprob: -18.250001907348633
    8. '(
' → logprob: -18.875001907348633
    9. '[(' → logprob: -20.250001907348633
    10. '   ' → logprob: -20.375001907348633

Token 679: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1472419600977446e-06
    2. ' r' → logprob: -13.750000953674316
    3. '   ' → logprob: -19.375001907348633
    4. '	r' → logprob: -20.250001907348633
    5. '(r' → logprob: -20.500001907348633
    6. '_r' → logprob: -20.875001907348633
    7. ')' → logprob: -21.125001907348633
    8. '
' → logprob: -21.500001907348633
    9. ' ' → logprob: -22.250001907348633
    10. '  ' → logprob: -22.750001907348633

Token 680: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.03388680890202522
    2. ',' → logprob: -3.4088869094848633
    3. ',r' → logprob: -9.033886909484863
    4. ' ,' → logprob: -9.283886909484863
    5. 'c' → logprob: -11.033886909484863
    6. ',
' → logprob: -12.408886909484863
    7. ',n' → logprob: -13.408886909484863
    8. ',b' → logprob: -13.533886909484863
    9. 'r' → logprob: -14.408886909484863
    10. ',s' → logprob: -14.533886909484863

Token 681: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006620417116209865
    2. '))' → logprob: -7.750661849975586
    3. ')
' → logprob: -8.375661849975586
    4. ' )' → logprob: -14.875661849975586
    5. '))
' → logprob: -15.375661849975586
    6. ')`' → logprob: -16.250661849975586
    7. ')

' → logprob: -16.375661849975586
    8. ')}' → logprob: -17.750661849975586
    9. ')")' → logprob: -17.875661849975586
    10. ')))' → logprob: -17.875661849975586

Token 682: '       ' (ID: 309)
  Prédit: '	while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	while' → logprob: -0.8089568614959717
    2. ' while' → logprob: -1.3089568614959717
    3. '   ' → logprob: -1.8089568614959717
    4. '
' → logprob: -2.4339568614959717
    5. 'while' → logprob: -3.8089568614959717
    6. '    
' → logprob: -5.308957099914551
    7. '       ' → logprob: -5.308957099914551
    8. '        
' → logprob: -7.683957099914551
    9. '	
' → logprob: -9.05895709991455
    10. ' 
' → logprob: -9.05895709991455

Token 683: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.029668686911463737
    2. ' while' → logprob: -4.029668807983398
    3. '   ' → logprob: -4.529668807983398
    4. '       ' → logprob: -8.029668807983398
    5. '	while' → logprob: -8.404668807983398
    6. '
' → logprob: -9.154668807983398
    7. '```' → logprob: -12.029668807983398
    8. '    
' → logprob: -12.529668807983398
    9. '        
' → logprob: -13.154668807983398
    10. 'While' → logprob: -13.779668807983398

Token 684: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.20141403377056122
    2. ' stack' → logprob: -1.7014139890670776
    3. '	stack' → logprob: -14.576414108276367
    4. '(stack' → logprob: -15.326414108276367
    5. ' ' → logprob: -17.951414108276367
    6. '   ' → logprob: -18.076414108276367
    7. 'len' → logprob: -18.201414108276367
    8. 'Stack' → logprob: -18.201414108276367
    9. 'st' → logprob: -18.576414108276367
    10. ' len' → logprob: -19.951414108276367

Token 685: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008666809648275375
    2. ':
' → logprob: -4.7586669921875
    3. '.pop' → logprob: -10.2586669921875
    4. '):' → logprob: -11.7586669921875
    5. '):
' → logprob: -12.8836669921875
    6. '[-' → logprob: -13.8836669921875
    7. '[' → logprob: -14.1336669921875
    8. '!=' → logprob: -14.3836669921875
    9. ' :' → logprob: -14.5086669921875
    10. ')' → logprob: -14.5086669921875

Token 686: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018076660111546516
    2. 'r' → logprob: -4.1430768966674805
    3. ' r' → logprob: -6.5180768966674805
    4. 't' → logprob: -9.01807689666748
    5. '(r' → logprob: -9.39307689666748
    6. '   ' → logprob: -9.51807689666748
    7. 'token' → logprob: -9.64307689666748
    8. '       ' → logprob: -9.76807689666748
    9. '```' → logprob: -10.39307689666748
    10. '	       ' → logprob: -10.64307689666748

Token 687: ' vr' (ID: 13219)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.47905653715133667
    2. 'r' → logprob: -1.1040565967559814
    3. ' cr' → logprob: -3.4790565967559814
    4. 'tr' → logprob: -5.354056358337402
    5. ' r' → logprob: -5.854056358337402
    6. 'curr' → logprob: -5.979056358337402
    7. '           ' → logprob: -6.354056358337402
    8. 'rr' → logprob: -6.479056358337402
    9. 'pr' → logprob: -6.729056358337402
    10. 'current' → logprob: -7.104056358337402

Token 688: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26830145716667175
    2. ',v' → logprob: -1.5183014869689941
    3. ',r' → logprob: -4.143301486968994
    4. 'r' → logprob: -9.143301010131836
    5. ' ,' → logprob: -9.268301010131836
    6. ',_' → logprob: -10.143301010131836
    7. '=' → logprob: -10.143301010131836
    8. ',d' → logprob: -11.518301010131836
    9. ',row' → logprob: -11.643301010131836
    10. ',w' → logprob: -11.768301010131836

Token 689: ' vc' (ID: 40337)
  Prédit: 'vc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vc' → logprob: -0.014164329506456852
    2. ' vc' → logprob: -4.264164447784424
    3. '(vc' → logprob: -14.514163970947266
    4. ' ' → logprob: -16.514163970947266
    5. 'Vc' → logprob: -16.514163970947266
    6. '
' → logprob: -16.639163970947266
    7. '   ' → logprob: -17.014163970947266
    8. 'VC' → logprob: -17.764163970947266
    9. 'wc' → logprob: -17.764163970947266
    10. 'vp' → logprob: -18.514163970947266

Token 690: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933069229125977
    2. ' =' → logprob: -0.6933069229125977
    3. ')' → logprob: -8.943306922912598
    4. ')=' → logprob: -10.568306922912598
    5. ',' → logprob: -14.068306922912598
    6. ' =)' → logprob: -14.443306922912598
    7. '        ' → logprob: -14.943306922912598
    8. '=
' → logprob: -15.443306922912598
    9. '           ' → logprob: -15.443306922912598
    10. ' )' → logprob: -15.693306922912598

Token 691: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.2014133334159851
    2. ' stack' → logprob: -1.7014133930206299
    3. '	stack' → logprob: -16.076414108276367
    4. '(stack' → logprob: -18.826414108276367
    5. 'st' → logprob: -19.326414108276367
    6. '   ' → logprob: -19.326414108276367
    7. 'Stack' → logprob: -19.451414108276367
    8. '_stack' → logprob: -19.576414108276367
    9. '.stack' → logprob: -20.326414108276367
    10. 'stackoverflow' → logprob: -21.826414108276367

Token 692: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -5.097437315271236e-05
    2. 'pop' → logprob: -10.00005054473877
    3. '.' → logprob: -12.50005054473877
    4. ' pop' → logprob: -14.12505054473877
    5. '_pop' → logprob: -15.50005054473877
    6. '	pop' → logprob: -15.62505054473877
    7. '.Pop' → logprob: -15.62505054473877
    8. '=' → logprob: -15.75005054473877
    9. '[-' → logprob: -15.75005054473877
    10. 'Pop' → logprob: -15.87505054473877

Token 693: '()
' (ID: 1234)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043283939361572266
    2. '               ' → logprob: -3.5432839393615723
    3. '           ' → logprob: -5.293283939361572
    4. '<|end|>' → logprob: -5.793283939361572
    5. '                   ' → logprob: -6.668283939361572
    6. '                ' → logprob: -6.668283939361572
    7. '            ' → logprob: -7.668283939361572
    8. '
' → logprob: -7.918283939361572
    9. ' )' → logprob: -8.168283462524414
    10. '()' → logprob: -8.168283462524414

Token 694: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5064125657081604
    2. '
' → logprob: -1.0064125061035156
    3. '       ' → logprob: -3.5064125061035156
    4. '            
' → logprob: -7.381412506103516
    5. '<|end|>' → logprob: -8.256412506103516
    6. 'group' → logprob: -8.506412506103516
    7. '               ' → logprob: -9.006412506103516
    8. '   ' → logprob: -9.131412506103516
    9. ' 
' → logprob: -9.506412506103516
    10. ' group' → logprob: -9.631412506103516

Token 695: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' (adapté à ' group') → logprob: -0.0005763856461271644
    2. ' group' → logprob: -7.500576496124268
    3. '           ' → logprob: -10.75057601928711
    4. 'if' → logprob: -13.50057601928711
    5. '       ' → logprob: -15.62557601928711
    6. '	group' → logprob: -15.75057601928711
    7. '               ' → logprob: -16.00057601928711
    8. '.group' → logprob: -17.25057601928711
    9. '"group' → logprob: -17.75057601928711
    10. '                   ' → logprob: -17.75057601928711

Token 696: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.7848862373502925e-05
    2. '.' → logprob: -10.500027656555176
    3. 'append' → logprob: -16.000028610229492
    4. '.app' → logprob: -16.375028610229492
    5. '.ap' → logprob: -16.875028610229492
    6. ' .' → logprob: -18.375028610229492
    7. '_append' → logprob: -18.875028610229492
    8. '.Append' → logprob: -19.375028610229492
    9. ' append' → logprob: -21.125028610229492
    10. ').' → logprob: -21.500028610229492

Token 697: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -7.505351095460355e-05
    2. '(' → logprob: -9.750075340270996
    3. '(v' → logprob: -11.000075340270996
    4. '(
' → logprob: -17.75007438659668
    5. ' ((' → logprob: -19.37507438659668
    6. '(vm' → logprob: -19.75007438659668
    7. '(vc' → logprob: -20.00007438659668
    8. '(((' → logprob: -20.25007438659668
    9. '(vo' → logprob: -20.62507438659668
    10. ' (' → logprob: -21.25007438659668

Token 698: 'vr' (ID: 10062)
  Prédit: 'vr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vr' → logprob: -3.5716304410016164e-05
    2. ' vr' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.625036239624023
    4. 'v' → logprob: -16.875036239624023
    5. '
' → logprob: -17.625036239624023
    6. ' ' → logprob: -18.375036239624023
    7. 'vrd' → logprob: -19.000036239624023
    8. 'vl' → logprob: -19.250036239624023
    9. 'vp' → logprob: -19.250036239624023
    10. 'r' → logprob: -19.750036239624023

Token 699: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.141186450899113e-05
    2. ' ,' → logprob: -11.000020980834961
    3. ',
' → logprob: -12.625020980834961
    4. ',v' → logprob: -14.000020980834961
    5. '<|end|>' → logprob: -16.00002098083496
    6. ',

' → logprob: -16.25002098083496
    7. '‌,' → logprob: -16.37502098083496
    8. ',c' → logprob: -16.87502098083496
    9. ',\
' → logprob: -17.12502098083496
    10. ',{
' → logprob: -17.37502098083496

Token 700: 'vc' (ID: 11983)
  Prédit: 'vc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vc' → logprob: -0.0005533903022296727
    2. ' vc' → logprob: -7.500553607940674
    3. '(vc' → logprob: -14.750553131103516
    4. 'Vc' → logprob: -18.000553131103516
    5. ' ' → logprob: -18.875553131103516
    6. 'VC' → logprob: -19.000553131103516
    7. 'tc' → logprob: -19.750553131103516
    8. '
' → logprob: -19.875553131103516
    9. 'v' → logprob: -20.000553131103516
    10. '   ' → logprob: -20.500553131103516

Token 701: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.15757694840431213
    2. '))
' → logprob: -2.4075770378112793
    3. ')' → logprob: -2.9075770378112793
    4. ')
' → logprob: -6.782577037811279
    5. ' ))' → logprob: -12.657576560974121
    6. ' ))
' → logprob: -13.157576560974121
    7. '))

' → logprob: -13.282576560974121
    8. '           ' → logprob: -13.532576560974121
    9. '),' → logprob: -13.532576560974121
    10. ' )' → logprob: -13.782576560974121

Token 702: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029895931482315063
    2. ' for' → logprob: -4.029895782470703
    3. 'for' → logprob: -4.529895782470703
    4. '               ' → logprob: -7.904895782470703
    5. '            
' → logprob: -7.904895782470703
    6. '
' → logprob: -9.404895782470703
    7. '       ' → logprob: -10.279895782470703
    8. '            ' → logprob: -10.904895782470703
    9. '                   ' → logprob: -12.279895782470703
    10. '```' → logprob: -12.279895782470703

Token 703: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.747814349073451e-05
    2. ' for' → logprob: -11.000017166137695
    3. '           ' → logprob: -14.125017166137695
    4. '               ' → logprob: -18.125017166137695
    5. '	for' → logprob: -18.625017166137695
    6. '            
' → logprob: -18.750017166137695
    7. '```' → logprob: -19.000017166137695
    8. 'neighbors' → logprob: -20.125017166137695
    9. '                
' → logprob: -22.250017166137695
    10. '_for' → logprob: -22.750017166137695

Token 704: ' nr' (ID: 24055)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -0.13459907472133636
    2. '(n' → logprob: -2.134598970413208
    3. 'nbr' → logprob: -5.509599208831787
    4. ' nr' → logprob: -6.259599208831787
    5. 'n' → logprob: -6.884599208831787
    6. 'neighbor' → logprob: -8.509598731994629
    7. ' (' → logprob: -8.884598731994629
    8. '(' → logprob: -9.259598731994629
    9. ' nbr' → logprob: -9.384598731994629
    10. '(ne' → logprob: -9.634598731994629

Token 705: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06999757140874863
    2. ',n' → logprob: -2.694997549057007
    3. ' ,' → logprob: -10.069997787475586
    4. ',v' → logprob: -12.319997787475586
    5. 'in' → logprob: -12.444997787475586
    6. 'n' → logprob: -13.069997787475586
    7. ' in' → logprob: -13.444997787475586
    8. ',
' → logprob: -13.944997787475586
    9. ',s' → logprob: -14.319997787475586
    10. ',new' → logprob: -14.444997787475586

Token 706: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.42914727330207825
    2. ',' → logprob: -1.3041472434997559
    3. ',c' → logprob: -3.054147243499756
    4. ',n' → logprob: -3.554147243499756
    5. 'n' → logprob: -7.054147243499756
    6. 'vc' → logprob: -7.929147243499756
    7. 'nc' → logprob: -8.304147720336914
    8. '(vc' → logprob: -9.804147720336914
    9. ',
' → logprob: -10.179147720336914
    10. ' ,' → logprob: -10.304147720336914

Token 707: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002805821830406785
    2. 'in' → logprob: -5.877805709838867
    3. ' ' → logprob: -14.752805709838867
    4. ')' → logprob: -15.252805709838867
    5. ',' → logprob: -16.752805709838867
    6. '        ' → logprob: -16.877805709838867
    7. 's' → logprob: -16.877805709838867
    8. '    ' → logprob: -16.877805709838867
    9. '            ' → logprob: -17.127805709838867
    10. 'self' → logprob: -17.252805709838867

Token 708: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08896389603614807
    2. ' self' → logprob: -2.4639639854431152
    3. '(self' → logprob: -10.963963508605957
    4. '[self' → logprob: -12.088963508605957
    5. '	self' → logprob: -14.338963508605957
    6. '=self' → logprob: -15.713963508605957
    7. '```' → logprob: -15.963963508605957
    8. 's' → logprob: -16.338964462280273
    9. '`' → logprob: -16.463964462280273
    10. ',' → logprob: -16.713964462280273

Token 709: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -0.48981672525405884
    2. 'board' → logprob: -0.9898167252540588
    3. 'self' → logprob: -4.239816665649414
    4. ' board' → logprob: -6.989816665649414
    5. 'neighbors' → logprob: -8.614816665649414
    6. '(board' → logprob: -10.114816665649414
    7. '	board' → logprob: -11.114816665649414
    8. ' self' → logprob: -11.489816665649414
    9. ')' → logprob: -11.864816665649414
    10. '-board' → logprob: -12.364816665649414

Token 710: '.ne' (ID: 39319)
  Prédit: '.ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ne' → logprob: -2.3438327843905427e-05
    2. 'neighbors' → logprob: -11.00002384185791
    3. ' .' → logprob: -12.75002384185791
    4. '.' → logprob: -12.87502384185791
    5. '.Ne' → logprob: -14.37502384185791
    6. 'Neighbors' → logprob: -15.75002384185791
    7. '_neighbors' → logprob: -15.87502384185791
    8. ' neighbors' → logprob: -16.000022888183594
    9. ').' → logprob: -16.375022888183594
    10. '   ' → logprob: -17.000022888183594

Token 711: 'ighbors' (ID: 46483)
  Prédit: 'ighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbors' → logprob: -5.431207682704553e-05
    2. 'bors' → logprob: -10.625054359436035
    3. 'neighbors' → logprob: -11.125054359436035
    4. 'igh' → logprob: -11.875054359436035
    5. 'ig' → logprob: -12.625054359436035
    6. '_neighbors' → logprob: -13.375054359436035
    7. 'ighbours' → logprob: -13.500054359436035
    8. 'gh' → logprob: -13.750054359436035
    9. ' neighbors' → logprob: -14.250054359436035
    10. '(' → logprob: -16.37505340576172

Token 712: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.0206720617134124e-05
    2. '(' → logprob: -11.75001049041748
    3. ' (' → logprob: -13.62501049041748
    4. '((' → logprob: -14.62501049041748
    5. 'vr' → logprob: -15.00001049041748
    6. '(vc' → logprob: -16.000009536743164
    7. '(
' → logprob: -17.625009536743164
    8. '   ' → logprob: -17.750009536743164
    9. '(vm' → logprob: -17.875009536743164
    10. ' vr' → logprob: -17.875009536743164

Token 713: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.32392441527918e-05
    2. ',r' → logprob: -10.250053405761719
    3. '(r' → logprob: -11.750053405761719
    4. ',' → logprob: -12.000053405761719
    5. 'р' → logprob: -14.250053405761719
    6. '	r' → logprob: -14.375053405761719
    7. 'ar' → logprob: -14.625053405761719
    8. ' r' → logprob: -15.000053405761719
    9. ';r' → logprob: -15.375053405761719
    10. 'or' → logprob: -15.500053405761719

Token 714: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.864272967912257e-05
    2. ' ,' → logprob: -9.375088691711426
    3. ',
' → logprob: -13.375088691711426
    4. '   ' → logprob: -14.375088691711426
    5. ',n' → logprob: -14.500088691711426
    6. '),' → logprob: -16.25008773803711
    7. ',

' → logprob: -16.37508773803711
    8. '    ' → logprob: -16.37508773803711
    9. '           ' → logprob: -16.50008773803711
    10. ',c' → logprob: -16.50008773803711

Token 715: 'vc' (ID: 11983)
  Prédit: 'vc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vc' → logprob: -0.0008078443352133036
    2. ' vc' → logprob: -7.125807762145996
    3. '(vc' → logprob: -13.250807762145996
    4. 'tc' → logprob: -15.000807762145996
    5. '   ' → logprob: -15.250807762145996
    6. ' ' → logprob: -15.500807762145996
    7. '    ' → logprob: -15.750807762145996
    8. '
' → logprob: -15.875807762145996
    9. 'nc' → logprob: -16.750808715820312
    10. '       ' → logprob: -16.750808715820312

Token 716: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.127146378159523
    2. '):
' → logprob: -2.1271464824676514
    3. '):
' → logprob: -9.12714672088623
    4. '               ' → logprob: -10.37714672088623
    5. ' ):' → logprob: -10.37714672088623
    6. '           ' → logprob: -11.12714672088623
    7. ')' → logprob: -11.25214672088623
    8. ':' → logprob: -12.12714672088623
    9. '):

' → logprob: -12.25214672088623
    10. ' ):
' → logprob: -12.37714672088623

Token 717: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0023224835749715567
    2. '<|end|>' → logprob: -6.627322673797607
    3. ' if' → logprob: -7.502322673797607
    4. '                ' → logprob: -9.25232219696045
    5. '           ' → logprob: -9.62732219696045
    6. '              ' → logprob: -10.00232219696045
    7. '<|end|>' → logprob: -10.00232219696045
    8. ' ' → logprob: -10.37732219696045
    9. '                   ' → logprob: -10.62732219696045
    10. '```' → logprob: -11.00232219696045

Token 718: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1726199835538864
    2. 'if' (adapté à ' if') → logprob: -2.9226200580596924
    3. '                ' → logprob: -2.9226200580596924
    4. '               ' → logprob: -3.6726200580596924
    5. '                   ' → logprob: -4.797619819641113
    6. '<|end|>' → logprob: -4.797619819641113
    7. ' ' → logprob: -5.047619819641113
    8. '                    ' → logprob: -7.172619819641113
    9. '                       ' → logprob: -8.672619819641113
    10. '            ' → logprob: -8.797619819641113

Token 719: ' (' (ID: 350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5914914608001709
    2. '(self' → logprob: -1.091491460800171
    3. ' self' → logprob: -2.716491460800171
    4. ' (' → logprob: -3.466491460800171
    5. '(n' → logprob: -4.34149169921875
    6. '   ' → logprob: -8.59149169921875
    7. '(' → logprob: -9.34149169921875
    8. ' ' → logprob: -10.09149169921875
    9. '((' → logprob: -10.34149169921875
    10. '	self' → logprob: -10.46649169921875

Token 720: 'nr' (ID: 33357)
  Prédit: 'nr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -8.220573363360018e-05
    2. '(n' → logprob: -9.750082015991211
    3. 'self' → logprob: -11.500082015991211
    4. ' nr' → logprob: -11.875082015991211
    5. 'n' → logprob: -13.375082015991211
    6. 'nb' → logprob: -13.875082015991211
    7. '(self' → logprob: -13.875082015991211
    8. '_nr' → logprob: -14.250082015991211
    9. ' (' → logprob: -14.375082015991211
    10. '   ' → logprob: -15.000082015991211

Token 721: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3958658277988434
    2. ',n' → logprob: -1.145865797996521
    3. ' ,' → logprob: -5.5208659172058105
    4. ',c' → logprob: -5.7708659172058105
    5. ' not' → logprob: -7.0208659172058105
    6. ')' → logprob: -7.6458659172058105
    7. '),(' → logprob: -9.395865440368652
    8. ',(' → logprob: -9.645865440368652
    9. 'not' → logprob: -10.145865440368652
    10. '<|end|>' → logprob: -10.145865440368652

Token 722: 'c' (ID: 66)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -1.0472545623779297
    2. ',' → logprob: -1.1722545623779297
    3. ',c' → logprob: -1.1722545623779297
    4. 'nc' → logprob: -4.17225456237793
    5. 'c' → logprob: -4.54725456237793
    6. ',(' → logprob: -6.92225456237793
    7. '(n' → logprob: -7.29725456237793
    8. '_nc' → logprob: -7.29725456237793
    9. ',
' → logprob: -7.67225456237793
    10. ' ,' → logprob: -8.17225456237793

Token 723: ')' (ID: 8)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0738113522529602
    2. ')' → logprob: -2.8238112926483154
    3. 'not' → logprob: -4.4488115310668945
    4. ' )' → logprob: -9.448811531066895
    5. ' ' → logprob: -13.823811531066895
    6. '	not' → logprob: -14.448811531066895
    7. 'Not' → logprob: -15.073811531066895
    8. '               ' → logprob: -16.073810577392578
    9. ' in' → logprob: -16.323810577392578
    10. 'and' → logprob: -16.448810577392578

Token 724: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.029752686619758606
    2. 'not' → logprob: -3.529752731323242
    3. ' in' → logprob: -13.904752731323242
    4. ')' → logprob: -14.279752731323242
    5. '	not' → logprob: -14.529752731323242
    6. 'in' → logprob: -16.154752731323242
    7. ' ' → logprob: -17.404752731323242
    8. '<|end|>' → logprob: -17.529752731323242
    9. 'and' → logprob: -17.654752731323242
    10. 'Not' → logprob: -19.404752731323242

Token 725: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25220972299575806
    2. 'in' → logprob: -1.5022096633911133
    3. '<|end|>' → logprob: -8.377209663391113
    4. ')' → logprob: -11.252209663391113
    5. ' not' → logprob: -11.877209663391113
    6. '.' → logprob: -12.002209663391113
    7. ' ' → logprob: -12.127209663391113
    8. ',' → logprob: -12.252209663391113
    9. '<|end|>' → logprob: -12.877209663391113
    10. '           ' → logprob: -13.252209663391113

Token 726: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005543439765460789
    2. ' self' → logprob: -7.50055456161499
    3. '           ' → logprob: -14.500554084777832
    4. '       ' → logprob: -15.500554084777832
    5. '(self' → logprob: -15.625554084777832
    6. '[self' → logprob: -16.00055503845215
    7. '   ' → logprob: -16.25055503845215
    8. '
' → logprob: -17.00055503845215
    9. '               ' → logprob: -17.25055503845215
    10. '                   ' → logprob: -17.50055503845215

Token 727: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.31329429149627686
    2. 'visited' → logprob: -1.3132942914962769
    3. '.' → logprob: -10.688294410705566
    4. 'vis' → logprob: -12.313294410705566
    5. ' visited' → logprob: -12.563294410705566
    6. 'self' → logprob: -13.938294410705566
    7. '```' → logprob: -15.813294410705566
    8. ' .' → logprob: -16.06329345703125
    9. '
' → logprob: -16.06329345703125
    10. 'Visited' → logprob: -16.18829345703125

Token 728: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -1.6240566083070007e-06
    2. 'isted' → logprob: -14.000001907348633
    3. '_' → logprob: -15.250001907348633
    4. 'ted' → logprob: -15.625001907348633
    5. 'ite' → logprob: -16.625001907348633
    6. 'ITED' → logprob: -16.750001907348633
    7. '[' → logprob: -17.375001907348633
    8. '
' → logprob: -17.625001907348633
    9. '```' → logprob: -18.000001907348633
    10. '-' → logprob: -18.500001907348633

Token 729: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005263880360871553
    2. 'and' → logprob: -5.255263805389404
    3. '                ' → logprob: -11.505264282226562
    4. '               ' → logprob: -12.255264282226562
    5. '                   ' → logprob: -12.255264282226562
    6. '<|end|>' → logprob: -12.255264282226562
    7. '                    ' → logprob: -13.255264282226562
    8. ' ' → logprob: -14.005264282226562
    9. '                       ' → logprob: -14.380264282226562
    10. '            ' → logprob: -14.755264282226562

Token 730: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07941712439060211
    2. ' self' → logprob: -2.5794172286987305
    3. '               ' → logprob: -7.9544172286987305
    4. '                   ' → logprob: -8.95441722869873
    5. '   ' → logprob: -10.82941722869873
    6. '           ' → logprob: -10.95441722869873
    7. '(self' → logprob: -12.32941722869873
    8. '                       ' → logprob: -13.57941722869873
    9. ' ' → logprob: -13.70441722869873
    10. '       ' → logprob: -13.95441722869873

Token 731: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -0.00022117885237094015
    2. '.get' → logprob: -8.875221252441406
    3. 'board' → logprob: -9.625221252441406
    4. '.user' → logprob: -11.750221252441406
    5. '.' → logprob: -12.875221252441406
    6. '	board' → logprob: -13.250221252441406
    7. ' board' → logprob: -14.000221252441406
    8. 'get' → logprob: -14.375221252441406
    9. ' .' → logprob: -14.875221252441406
    10. ').' → logprob: -15.250221252441406

Token 732: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -8.180258191714529e-06
    2. '.' → logprob: -12.125008583068848
    3. 'get' → logprob: -12.875008583068848
    4. ' .' → logprob: -16.00000762939453
    5. '   ' → logprob: -17.62500762939453
    6. ').' → logprob: -17.87500762939453
    7. '>.' → logprob: -18.25000762939453
    8. '_get' → logprob: -19.25000762939453
    9. ' ' → logprob: -19.50000762939453
    10. '```' → logprob: -19.50000762939453

Token 733: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -3.531315314830863e-06
    2. '(st' → logprob: -13.125003814697266
    3. 'stone' → logprob: -14.250003814697266
    4. 'Stone' → logprob: -15.000003814697266
    5. '_s' → logprob: -16.500003814697266
    6. '_' → logprob: -16.625003814697266
    7. '_sn' → logprob: -16.625003814697266
    8. '_token' → logprob: -16.750003814697266
    9. '(n' → logprob: -16.750003814697266
    10. '```' → logprob: -16.750003814697266

Token 734: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -4.2987729102605954e-05
    2. 'rone' → logprob: -11.625042915344238
    3. 'stone' → logprob: -11.875042915344238
    4. '_one' → logprob: -12.000042915344238
    5. 'tone' → logprob: -12.000042915344238
    6. 'ne' → logprob: -12.250042915344238
    7. '(one' → logprob: -13.000042915344238
    8. 'ont' → logprob: -14.125042915344238
    9. '```' → logprob: -14.250042915344238
    10. 'on' → logprob: -14.500042915344238

Token 735: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.339776832144707e-05
    2. '(' → logprob: -9.875082969665527
    3. ' (' → logprob: -10.375082969665527
    4. '(
' → logprob: -16.000083923339844
    5. '(nb' → logprob: -16.250083923339844
    6. '(nx' → logprob: -16.750083923339844
    7. '(nd' → logprob: -16.875083923339844
    8. '(nn' → logprob: -17.125083923339844
    9. ' ' → logprob: -17.250083923339844
    10. '((' → logprob: -17.500083923339844

Token 736: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0007401806069537997
    2. '(n' → logprob: -7.250740051269531
    3. ',r' → logprob: -11.750740051269531
    4. 'or' → logprob: -11.875740051269531
    5. ',n' → logprob: -12.000740051269531
    6. ',' → logprob: -13.000740051269531
    7. '(r' → logprob: -13.000740051269531
    8. '
' → logprob: -14.000740051269531
    9. 'nr' → logprob: -14.250740051269531
    10. 'n' → logprob: -14.375740051269531

Token 737: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.023305227980017662
    2. ',' → logprob: -3.7733051776885986
    3. '(n' → logprob: -10.27330493927002
    4. ' ,' → logprob: -11.39830493927002
    5. ',(' → logprob: -12.02330493927002
    6. ',c' → logprob: -12.89830493927002
    7. ',
' → logprob: -13.14830493927002
    8. ',np' → logprob: -14.39830493927002
    9. ',num' → logprob: -14.52330493927002
    10. '(' → logprob: -14.89830493927002

Token 738: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006436471827328205
    2. 'nc' → logprob: -5.381436347961426
    3. ',n' → logprob: -6.631436347961426
    4. ',c' → logprob: -8.381436347961426
    5. ',' → logprob: -9.381436347961426
    6. '.nc' → logprob: -9.631436347961426
    7. '_nc' → logprob: -10.006436347961426
    8. '(n' → logprob: -10.131436347961426
    9. ' nc' → logprob: -11.006436347961426
    10. '/n' → logprob: -12.006436347961426

Token 739: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004424659069627523
    2. ')==' → logprob: -5.504424571990967
    3. ' )' → logprob: -8.129425048828125
    4. ')>' → logprob: -10.379425048828125
    5. '())' → logprob: -11.754425048828125
    6. '()' → logprob: -11.879425048828125
    7. '==' → logprob: -13.004425048828125
    8. '()==' → logprob: -14.129425048828125
    9. ')
' → logprob: -14.504425048828125
    10. ']==' → logprob: -14.879425048828125

Token 740: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5290619134902954
    2. '==' → logprob: -0.9040619134902954
    3. ')==' → logprob: -5.404061794281006
    4. ')' → logprob: -7.654061794281006
    5. '()==' → logprob: -7.654061794281006
    6. ']==' → logprob: -7.779061794281006
    7. '()' → logprob: -11.154062271118164
    8. '=' → logprob: -11.654062271118164
    9. ' ' → logprob: -11.654062271118164
    10. '==
' → logprob: -12.404062271118164

Token 741: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.005233763717114925
    2. ' start' → logprob: -5.2552337646484375
    3. 'star' → logprob: -17.380233764648438
    4. ' ' → logprob: -18.880233764648438
    5. '   ' → logprob: -18.880233764648438
    6. '	start' → logprob: -19.630233764648438
    7. '[start' → logprob: -20.130233764648438
    8. '=start' → logprob: -20.130233764648438
    9. '
' → logprob: -20.255233764648438
    10. '(start' → logprob: -21.005233764648438

Token 742: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -13.875000953674316
    3. '_s' → logprob: -16.625001907348633
    4. 'st' → logprob: -17.375001907348633
    5. 'stone' → logprob: -17.625001907348633
    6. '_token' → logprob: -18.000001907348633
    7. ' _' → logprob: -18.000001907348633
    8. '_
' → logprob: -19.000001907348633
    9. '__' → logprob: -19.500001907348633
    10. '
' → logprob: -19.750001907348633

Token 743: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -6.349075556499884e-05
    2. 'o' → logprob: -11.0000638961792
    3. 'stone' → logprob: -11.0000638961792
    4. 'ne' → logprob: -11.3750638961792
    5. '_one' → logprob: -11.8750638961792
    6. '```' → logprob: -13.1250638961792
    7. 'One' → logprob: -13.2500638961792
    8. 'on' → logprob: -13.5000638961792
    9. 'ore' → logprob: -13.8750638961792
    10. '   ' → logprob: -13.8750638961792

Token 744: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.035551294684410095
    2. ':
' → logprob: -3.6605513095855713
    3. '                   ' → logprob: -5.535551071166992
    4. ' and' → logprob: -6.035551071166992
    5. '                       ' → logprob: -7.285551071166992
    6. '):' → logprob: -7.535551071166992
    7. '                    ' → logprob: -8.285551071166992
    8. '               ' → logprob: -8.285551071166992
    9. '                           ' → logprob: -8.410551071166992
    10. ' :' → logprob: -8.535551071166992

Token 745: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02667749486863613
    2. '                       ' → logprob: -3.7766776084899902
    3. '               ' → logprob: -7.02667760848999
    4. '                           ' → logprob: -7.15167760848999
    5. '                    
' → logprob: -8.026677131652832
    6. '                               ' → logprob: -8.651677131652832
    7. '                    ' → logprob: -8.776677131652832
    8. '                        
' → logprob: -9.151677131652832
    9. ':
' → logprob: -9.276677131652832
    10. '           ' → logprob: -9.276677131652832

Token 746: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.46119093894958496
    2. 'self' (adapté à ' self') → logprob: -1.211190938949585
    3. '                   ' → logprob: -3.336190938949585
    4. ' stack' → logprob: -3.836190938949585
    5. 'stack' → logprob: -4.586191177368164
    6. '                       ' → logprob: -5.836191177368164
    7. '                    ' → logprob: -6.711191177368164
    8. '               ' → logprob: -9.961191177368164
    9. '   ' → logprob: -10.961191177368164
    10. '                    
' → logprob: -11.211191177368164

Token 747: '.vis' (ID: 15800)
  Prédit: '.vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vis' → logprob: -0.0015071245143190026
    2. 'visited' → logprob: -6.50150728225708
    3. '.' → logprob: -13.001506805419922
    4. ' visited' → logprob: -14.001506805419922
    5. '.visit' → logprob: -14.626506805419922
    6. 'vis' → logprob: -14.876506805419922
    7. ' .' → logprob: -15.001506805419922
    8. 'Visited' → logprob: -15.001506805419922
    9. '.stack' → logprob: -15.751506805419922
    10. '```' → logprob: -18.001506805419922

Token 748: 'ited' (ID: 2106)
  Prédit: 'ited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -7.779520092299208e-05
    2. 'isted' → logprob: -9.625078201293945
    3. 'ted' → logprob: -11.875078201293945
    4. 'visited' → logprob: -13.000078201293945
    5. 's' → logprob: -14.125078201293945
    6. '_' → logprob: -14.625078201293945
    7. 'ITED' → logprob: -15.125078201293945
    8. '[' → logprob: -15.500078201293945
    9. '.vis' → logprob: -15.750078201293945
    10. '__' → logprob: -16.125078201293945

Token 749: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -6.704273118884885e-07
    2. 'add' → logprob: -14.875000953674316
    3. '.' → logprob: -15.500000953674316
    4. '.Add' → logprob: -17.625
    5. ')add' → logprob: -18.0
    6. ' .' → logprob: -18.625
    7. '	add' → logprob: -19.0
    8. '.update' → logprob: -19.375
    9. '.append' → logprob: -19.875
    10. ' add' → logprob: -20.5

Token 750: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -5.240481914370321e-05
    2. '(' → logprob: -10.000052452087402
    3. '(n' → logprob: -12.125052452087402
    4. ' ((' → logprob: -13.500052452087402
    5. '(
' → logprob: -16.125051498413086
    6. ' (' → logprob: -16.750051498413086
    7. ' ' → logprob: -18.875051498413086
    8. '(((' → logprob: -19.375051498413086
    9. '[(' → logprob: -20.375051498413086
    10. ')((' → logprob: -21.750051498413086

Token 751: 'nr' (ID: 33357)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.018168320879340172
    2. 'nr' → logprob: -4.0181684494018555
    3. ' (' → logprob: -11.518168449401855
    4. ' nr' → logprob: -12.393168449401855
    5. 'n' → logprob: -12.643168449401855
    6. '_nr' → logprob: -14.768168449401855
    7. '.nr' → logprob: -16.01816749572754
    8. '/n' → logprob: -16.14316749572754
    9. '   ' → logprob: -16.26816749572754
    10. '[n' → logprob: -16.76816749572754

Token 752: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.0019587287679314613
    2. ',' → logprob: -6.251958847045898
    3. ',c' → logprob: -10.501958847045898
    4. ',
' → logprob: -13.876958847045898
    5. '(n' → logprob: -14.001958847045898
    6. ',(' → logprob: -14.751958847045898
    7. ' ,' → logprob: -15.376958847045898
    8. 'n' → logprob: -16.7519588470459
    9. 'nc' → logprob: -16.7519588470459
    10. 'c' → logprob: -17.1269588470459

Token 753: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0009741133544594049
    2. ',n' → logprob: -7.875974178314209
    3. 'nc' → logprob: -8.25097370147705
    4. ',c' → logprob: -8.37597370147705
    5. ',' → logprob: -9.25097370147705
    6. '_nc' → logprob: -13.00097370147705
    7. '.nc' → logprob: -14.12597370147705
    8. ')' → logprob: -14.12597370147705
    9. ')c' → logprob: -14.50097370147705
    10. '(n' → logprob: -14.87597370147705

Token 754: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020783171930816025
    2. ')
' → logprob: -8.500207901000977
    3. '                   ' → logprob: -12.625207901000977
    4. ' )' → logprob: -14.500207901000977
    5. '),' → logprob: -15.875207901000977
    6. '))' → logprob: -16.500207901000977
    7. '```' → logprob: -16.625207901000977
    8. ')

' → logprob: -16.750207901000977
    9. ')`' → logprob: -16.875207901000977
    10. ')
' → logprob: -17.125207901000977

Token 755: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.021976638585329056
    2. ' stack' → logprob: -4.646976470947266
    3. '                    ' → logprob: -5.896976470947266
    4. '                    
' → logprob: -6.021976470947266
    5. 'stack' → logprob: -6.146976470947266
    6. '(stack' → logprob: -6.271976470947266
    7. ' 
' → logprob: -6.771976470947266
    8. '	stack' → logprob: -8.021976470947266
    9. '				' → logprob: -8.146976470947266
    10. '               ' → logprob: -8.271976470947266

Token 756: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.0009119403548538685
    2. ' stack' → logprob: -7.000911712646484
    3. '	stack' → logprob: -15.000911712646484
    4. '                   ' → logprob: -16.250911712646484
    5. '(stack' → logprob: -18.500911712646484
    6. '_stack' → logprob: -18.500911712646484
    7. '.stack' → logprob: -18.875911712646484
    8. 'stackoverflow' → logprob: -19.750911712646484
    9. 'Stack' → logprob: -20.250911712646484
    10. '   ' → logprob: -20.875911712646484

Token 757: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.159660890465602e-05
    2. '.' → logprob: -9.62507152557373
    3. '.extend' → logprob: -13.50007152557373
    4. '.app' → logprob: -13.50007152557373
    5. ' .' → logprob: -13.75007152557373
    6. 'append' → logprob: -14.12507152557373
    7. '.push' → logprob: -14.62507152557373
    8. '.Append' → logprob: -16.125072479248047
    9. '                   ' → logprob: -16.375072479248047
    10. 'Append' → logprob: -16.875072479248047

Token 758: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0004900033236481249
    2. '(' → logprob: -7.750490188598633
    3. '(n' → logprob: -9.750490188598633
    4. '(
' → logprob: -14.500490188598633
    5. ' ((' → logprob: -14.875490188598633
    6. ' (' → logprob: -15.750490188598633
    7. '(((' → logprob: -16.750490188598633
    8. '(('' → logprob: -19.875490188598633
    9. '[(' → logprob: -20.000490188598633
    10. '(

' → logprob: -20.000490188598633

Token 759: 'nr' (ID: 33357)
  Prédit: 'nr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -9.849109119386412e-06
    2. ' nr' → logprob: -11.875009536743164
    3. '(n' → logprob: -12.875009536743164
    4. 'nc' → logprob: -16.500009536743164
    5. '   ' → logprob: -17.000009536743164
    6. 'n' → logprob: -17.250009536743164
    7. '
' → logprob: -17.250009536743164
    8. '_nr' → logprob: -18.500009536743164
    9. '.nr' → logprob: -18.625009536743164
    10. ' (' → logprob: -19.250009536743164

Token 760: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.0037341644056141376
    2. ',' → logprob: -5.878734111785889
    3. ',c' → logprob: -7.003734111785889
    4. 'c' → logprob: -11.878734588623047
    5. 'n' → logprob: -12.628734588623047
    6. ' ,' → logprob: -12.753734588623047
    7. 'nc' → logprob: -12.878734588623047
    8. '(n' → logprob: -13.503734588623047
    9. ',
' → logprob: -13.503734588623047
    10. '_nc' → logprob: -14.628734588623047

Token 761: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0020931612234562635
    2. ',' → logprob: -7.502093315124512
    3. ',n' → logprob: -7.502093315124512
    4. 'nc' → logprob: -7.627093315124512
    5. ',c' → logprob: -7.627093315124512
    6. ')c' → logprob: -12.752093315124512
    7. ')' → logprob: -12.877093315124512
    8. '.nc' → logprob: -13.377093315124512
    9. '_nc' → logprob: -13.752093315124512
    10. '(n' → logprob: -14.127093315124512

Token 762: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005722135538235307
    2. '))' → logprob: -7.500572204589844
    3. ')
' → logprob: -11.250572204589844
    4. ')}' → logprob: -12.875572204589844
    5. ' )' → logprob: -13.375572204589844
    6. ')n' → logprob: -14.000572204589844
    7. ')))' → logprob: -14.875572204589844
    8. ')`' → logprob: -15.625572204589844
    9. ')}}' → logprob: -15.750572204589844
    10. '<|end|>' → logprob: -16.000572204589844

Token 763: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 764: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026310749351978302
    2. '<|end|>' → logprob: -3.901310682296753
    3. '
' → logprob: -6.151310920715332
    4. 'return' (adapté à ' return') → logprob: -6.526310920715332
    5. '   ' → logprob: -7.526310920715332
    6. ' return' → logprob: -7.651310920715332
    7. ')' → logprob: -8.026310920715332
    8. '        ' → logprob: -8.651310920715332
    9. '	return' → logprob: -9.651310920715332
    10. '        
' → logprob: -9.651310920715332

Token 765: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.001170225441455841
    2. ' group' → logprob: -6.7511701583862305
    3. '[group' → logprob: -19.876171112060547
    4. '(group' → logprob: -20.501171112060547
    5. '"group' → logprob: -21.501171112060547
    6. 'groups' → logprob: -23.001171112060547
    7. '	group' → logprob: -23.501171112060547
    8. '[' → logprob: -23.876171112060547
    9. '.group' → logprob: -23.876171112060547
    10. 'list' → logprob: -24.126171112060547

Token 766: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6118530631065369
    2. '<|end|>' → logprob: -1.3618531227111816
    3. '   ' → logprob: -1.8618531227111816
    4. '
' → logprob: -3.2368531227111816
    5. '<|end|>' → logprob: -5.611853122711182
    6. 'def' → logprob: -6.361853122711182
    7. ' class' → logprob: -7.611853122711182
    8. ')' → logprob: -8.361852645874023
    9. ' ' → logprob: -8.736852645874023
    10. '    
' → logprob: -8.861852645874023

Token 767: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 768: ' Removal' (ID: 76413)
  Prédit: ' Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Game' → logprob: -0.23583944141864777
    2. 'Game' → logprob: -1.9858394861221313
    3. ' Go' → logprob: -3.735839366912842
    4. ' Player' → logprob: -3.735839366912842
    5. 'Player' → logprob: -4.735839366912842
    6. ' Move' → logprob: -5.485839366912842
    7. ' Board' → logprob: -5.610839366912842
    8. 'Go' → logprob: -5.860839366912842
    9. 'Move' → logprob: -7.110839366912842
    10. 'Board' → logprob: -7.235839366912842

Token 769: 'Judge' (ID: 121754)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8545248508453369
    2. 'Handler' → logprob: -1.354524850845337
    3. 'Checker' → logprob: -2.354524850845337
    4. 'Detector' → logprob: -2.979524850845337
    5. 'Helper' → logprob: -3.229524850845337
    6. 'Finder' → logprob: -3.604524850845337
    7. 'Manager' → logprob: -3.729524850845337
    8. 'Processor' → logprob: -4.354524612426758
    9. 'Analyzer' → logprob: -4.604524612426758
    10. 'Engine' → logprob: -4.604524612426758

Token 770: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004985823179595172
    2. ':
' → logprob: -7.6254987716674805
    3. ':def' → logprob: -12.12549877166748
    4. ' :' → logprob: -12.75049877166748
    5. ':

' → logprob: -14.37549877166748
    6. '(' → logprob: -14.62549877166748
    7. '():' → logprob: -15.37549877166748
    8. '<|end|>' → logprob: -15.62549877166748
    9. '):' → logprob: -15.75049877166748
    10. '(object' → logprob: -15.87549877166748

Token 771: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001052338513545692
    2. ' def' → logprob: -6.876052379608154
    3. 'def' → logprob: -11.251051902770996
    4. '```' → logprob: -13.001051902770996
    5. 'class' → logprob: -13.751051902770996
    6. '
' → logprob: -14.126051902770996
    7. ' class' → logprob: -14.626051902770996
    8. '<|end|>' → logprob: -15.001051902770996
    9. ',' → logprob: -15.251051902770996
    10. '    
' → logprob: -15.376051902770996

Token 772: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5318158864974976
    2. ' def' → logprob: -0.9068158864974976
    3. 'def' (adapté à ' def') → logprob: -5.031816005706787
    4. 'class' → logprob: -6.281816005706787
    5. ' class' → logprob: -8.406815528869629
    6. '    ' → logprob: -11.656815528869629
    7. '```' → logprob: -12.156815528869629
    8. ':' → logprob: -12.281815528869629
    9. '
' → logprob: -12.281815528869629
    10. '	def' → logprob: -12.781815528869629

Token 773: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6351728439331055
    2. ' __' → logprob: -0.7601728439331055
    3. 'def' → logprob: -7.2601728439331055
    4. '```' → logprob: -7.2601728439331055
    5. ' def' → logprob: -7.6351728439331055
    6. '_init' → logprob: -8.135172843933105
    7. 'init' → logprob: -8.510172843933105
    8. 'class' → logprob: -9.635172843933105
    9. '.__' → logprob: -10.135172843933105
    10. '___' → logprob: -10.885172843933105

Token 774: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'def' → logprob: -16.25
    3. ' init' → logprob: -18.25
    4. '(init' → logprob: -19.625
    5. 'ini' → logprob: -20.0
    6. 'call' → logprob: -20.125
    7. '```' → logprob: -20.125
    8. 'i' → logprob: -20.375
    9. 'int' → logprob: -20.375
    10. '_init' → logprob: -20.875

Token 775: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.38920125365257263
    2. '__(' → logprob: -1.264201283454895
    3. '(' → logprob: -3.2642011642456055
    4. ' (' → logprob: -6.8892011642456055
    5. 'self' → logprob: -8.389201164245605
    6. '__' → logprob: -8.764201164245605
    7. '__(
' → logprob: -9.514201164245605
    8. '(this' → logprob: -10.014201164245605
    9. ')(' → logprob: -10.264201164245605
    10. '```' → logprob: -10.764201164245605

Token 776: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.4736459888808895e-05
    2. ' self' → logprob: -11.250014305114746
    3. ',' → logprob: -13.625014305114746
    4. '   ' → logprob: -15.750014305114746
    5. '       ' → logprob: -16.625015258789062
    6. '(self' → logprob: -16.625015258789062
    7. ')' → logprob: -17.375015258789062
    8. '
' → logprob: -17.500015258789062
    9. 'class' → logprob: -18.500015258789062
    10. 'board' → logprob: -18.750015258789062

Token 777: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.9153885558771435e-06
    2. 'self' → logprob: -12.500005722045898
    3. ' ,' → logprob: -13.125005722045898
    4. ',self' → logprob: -16.0000057220459
    5. ',
' → logprob: -17.1250057220459
    6. '(self' → logprob: -19.6250057220459
    7. ',class' → logprob: -19.6250057220459
    8. '‌,' → logprob: -19.7500057220459
    9. ',

' → logprob: -20.0000057220459
    10. '   ' → logprob: -20.2500057220459

Token 778: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.048628244549036026
    2. ' board' → logprob: -3.048628330230713
    3. 'self' → logprob: -10.548627853393555
    4. '	board' → logprob: -12.423627853393555
    5. '(board' → logprob: -13.173627853393555
    6. '   ' → logprob: -13.173627853393555
    7. '.board' → logprob: -13.798627853393555
    8. ')' → logprob: -14.048627853393555
    9. ' ' → logprob: -14.048627853393555
    10. ' self' → logprob: -14.173627853393555

Token 779: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11887361109256744
    2. '):
' → logprob: -2.2438735961914062
    3. ',' → logprob: -5.118873596191406
    4. '   ' → logprob: -10.743873596191406
    5. '):

' → logprob: -11.743873596191406
    6. ' ):' → logprob: -11.993873596191406
    7. ')' → logprob: -12.118873596191406
    8. '):
' → logprob: -12.243873596191406
    9. '       ' → logprob: -13.118873596191406
    10. ' ' → logprob: -14.618873596191406

Token 780: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029985705390572548
    2. '   ' → logprob: -3.5299856662750244
    3. 'def' → logprob: -8.529985427856445
    4. 'self' → logprob: -10.904985427856445
    5. ' def' → logprob: -11.904985427856445
    6. ' self' → logprob: -12.404985427856445
    7. ',' → logprob: -13.154985427856445
    8. '
' → logprob: -14.029985427856445
    9. '	def' → logprob: -14.279985427856445
    10. '	   ' → logprob: -14.404985427856445

Token 781: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -6.813969957875088e-05
    2. '       ' → logprob: -10.125067710876465
    3. ' self' → logprob: -10.500067710876465
    4. '   ' → logprob: -15.375067710876465
    5. 'def' → logprob: -15.875067710876465
    6. 'class' → logprob: -17.00006866455078
    7. '```' → logprob: -17.37506866455078
    8. '
' → logprob: -18.50006866455078
    9. '(self' → logprob: -19.12506866455078
    10. '	self' → logprob: -19.25006866455078

Token 782: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -0.00038801267510280013
    2. '.' → logprob: -8.375388145446777
    3. 'board' → logprob: -8.875388145446777
    4. ' .' → logprob: -11.875388145446777
    5. '.Board' → logprob: -12.750388145446777
    6. '   ' → logprob: -12.875388145446777
    7. '	board' → logprob: -13.250388145446777
    8. ' board' → logprob: -13.375388145446777
    9. 'class' → logprob: -15.375388145446777
    10. '```' → logprob: -15.500388145446777

Token 783: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1620834767818451
    2. ' =' → logprob: -1.9120835065841675
    3. '.' → logprob: -6.412083625793457
    4. '   ' → logprob: -9.162083625793457
    5. ' ' → logprob: -9.537083625793457
    6. '.board' → logprob: -11.287083625793457
    7. '.=' → logprob: -11.662083625793457
    8. '.build' → logprob: -12.037083625793457
    9. ')' → logprob: -12.537083625793457
    10. ',' → logprob: -13.162083625793457

Token 784: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.009757270105183125
    2. ' board' → logprob: -4.634757041931152
    3. '	board' → logprob: -14.509757041931152
    4. 'Board' → logprob: -15.259757041931152
    5. '(board' → logprob: -16.00975799560547
    6. 'b' → logprob: -16.38475799560547
    7. ' ' → logprob: -16.50975799560547
    8. '.board' → logprob: -16.75975799560547
    9. '   ' → logprob: -17.00975799560547
    10. '
' → logprob: -17.13475799560547

Token 785: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.055568017065525055
    2. '   ' → logprob: -2.930567979812622
    3. '<|end|>' → logprob: -8.055567741394043
    4. ' def' → logprob: -8.680567741394043
    5. 'def' → logprob: -9.555567741394043
    6. '    
' → logprob: -10.055567741394043
    7. '<|end|>' → logprob: -10.680567741394043
    8. ' 
' → logprob: -10.930567741394043
    9. '

' → logprob: -11.430567741394043
    10. '
' → logprob: -12.180567741394043

Token 786: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02770627848803997
    2. ' def' → logprob: -4.152706146240234
    3. 'def' → logprob: -5.152706146240234
    4. '
' → logprob: -5.152706146240234
    5. '	def' → logprob: -11.402706146240234
    6. ',' → logprob: -11.902706146240234
    7. ' ' → logprob: -12.027706146240234
    8. '```' → logprob: -12.652706146240234
    9. '    
' → logprob: -12.777706146240234
    10. '       ' → logprob: -13.777706146240234

Token 787: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00015872348740231246
    2. ' def' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.125158309936523
    4. '
' → logprob: -17.000158309936523
    5. 'de' → logprob: -20.125158309936523
    6. 'class' → logprob: -20.250158309936523
    7. ' ' → logprob: -20.500158309936523
    8. '	def' → logprob: -21.125158309936523
    9. 'd' → logprob: -21.750158309936523
    10. 'Def' → logprob: -22.250158309936523

Token 788: ' groups' (ID: 8896)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.8543372750282288
    2. 'is' → logprob: -2.104337215423584
    3. 'groups' → logprob: -2.354337215423584
    4. 'find' → logprob: -2.604337215423584
    5. 'should' → logprob: -2.729337215423584
    6. 'can' → logprob: -3.104337215423584
    7. 'has' → logprob: -3.229337215423584
    8. ' groups' → logprob: -4.229337215423584
    9. 'get' → logprob: -4.229337215423584
    10. 'check' → logprob: -4.354337215423584

Token 789: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.555999755859375
    2. '_with' → logprob: -2.055999755859375
    3. '(self' → logprob: -2.430999755859375
    4. '_removed' → logprob: -3.055999755859375
    5. '_can' → logprob: -3.305999755859375
    6. '_in' → logprob: -3.430999755859375
    7. '_that' → logprob: -3.555999755859375
    8. '_have' → logprob: -4.305999755859375
    9. '_remove' → logprob: -4.805999755859375
    10. '_are' → logprob: -4.805999755859375

Token 790: '_remove' (ID: 41629)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.2014453113079071
    2. '_remove' → logprob: -1.7014453411102295
    3. 'Remove' → logprob: -11.451445579528809
    4. ' remove' → logprob: -12.201445579528809
    5. '_check' → logprob: -13.076445579528809
    6. 'capture' → logprob: -13.201445579528809
    7. 'check' → logprob: -13.326445579528809
    8. '_capture' → logprob: -13.326445579528809
    9. 'rem' → logprob: -13.451445579528809
    10. '	remove' → logprob: -13.576445579528809

Token 791: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00017541198758408427
    2. ' (' → logprob: -9.000175476074219
    3. '(' → logprob: -9.875175476074219
    4. 'self' → logprob: -15.250175476074219
    5. '(s' → logprob: -15.750175476074219
    6. '   ' → logprob: -16.62517547607422
    7. '(
' → logprob: -16.75017547607422
    8. ' self' → logprob: -18.12517547607422
    9. '(sel' → logprob: -18.37517547607422
    10. '(this' → logprob: -18.50017547607422

Token 792: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03493709862232208
    2. '(self' → logprob: -3.9099371433258057
    3. 'self' → logprob: -4.659936904907227
    4. ' ,' → logprob: -6.034936904907227
    5. '):' → logprob: -6.409936904907227
    6. ' (' → logprob: -8.159936904907227
    7. ',self' → logprob: -8.284936904907227
    8. '(' → logprob: -9.409936904907227
    9. '   ' → logprob: -10.034936904907227
    10. ')' → logprob: -10.284936904907227

Token 793: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00044473158777691424
    2. '(self' → logprob: -8.750444412231445
    3. 'self' → logprob: -9.250444412231445
    4. 'result' → logprob: -9.500444412231445
    5. '#' → logprob: -10.750444412231445
    6. 'groups' → logprob: -11.125444412231445
    7. '<|end|>' → logprob: -11.625444412231445
    8. '[]' → logprob: -11.875444412231445
    9. 'tokens' → logprob: -11.875444412231445
    10. '(groups' → logprob: -12.000444412231445

Token 794: ' gf' (ID: 99435)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32694298028945923
    2. 'groups' → logprob: -1.8269429206848145
    3. 'to' → logprob: -2.8269429206848145
    4. ' groups' → logprob: -3.9519429206848145
    5. ' to' → logprob: -4.4519429206848145
    6. 'rem' → logprob: -4.4519429206848145
    7. 'remove' → logprob: -4.9519429206848145
    8. 'result' → logprob: -5.0769429206848145
    9. '#' → logprob: -7.8269429206848145
    10. 'results' → logprob: -8.076943397521973

Token 795: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08435355126857758
    2. '=' → logprob: -2.834353446960449
    3. '.find' → logprob: -4.709353446960449
    4. '.' → logprob: -4.959353446960449
    5. '=find' → logprob: -5.209353446960449
    6. 'ind' → logprob: -7.709353446960449
    7. 'inder' → logprob: -8.95935344696045
    8. '   ' → logprob: -11.58435344696045
    9. '.=' → logprob: -11.58435344696045
    10. '.ind' → logprob: -11.58435344696045

Token 796: ' Group' (ID: 7849)
  Prédit: 'Group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Group' → logprob: -0.029750604182481766
    2. ' Group' → logprob: -3.5297505855560303
    3. '	Group' → logprob: -16.15475082397461
    4. '   ' → logprob: -18.65475082397461
    5. '<Group' → logprob: -19.77975082397461
    6. '(Group' → logprob: -19.90475082397461
    7. 'Groups' → logprob: -20.27975082397461
    8. '_Group' → logprob: -20.90475082397461
    9. '.Group' → logprob: -21.40475082397461
    10. ' ' → logprob: -21.65475082397461

Token 797: 'Finder' (ID: 42976)
  Prédit: 'Finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Finder' → logprob: -1.1472419600977446e-06
    2. 'finder' → logprob: -13.750000953674316
    3. ' Finder' → logprob: -17.250001907348633
    4. 'Find' → logprob: -19.500001907348633
    5. 'Fetcher' → logprob: -19.750001907348633
    6. ' finder' → logprob: -20.000001907348633
    7. 'F' → logprob: -20.875001907348633
    8. 'Founder' → logprob: -21.750001907348633
    9. 'Finding' → logprob: -22.375001907348633
    10. 'Hunter' → logprob: -22.375001907348633

Token 798: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0564331205387134e-05
    2. '(' → logprob: -11.50001049041748
    3. '(
' → logprob: -15.62501049041748
    4. '(this' → logprob: -16.375011444091797
    5. 'self' → logprob: -17.250011444091797
    6. '(board' → logprob: -17.375011444091797
    7. '(s' → logprob: -19.500011444091797
    8. '(sel' → logprob: -20.125011444091797
    9. '
' → logprob: -20.375011444091797
    10. ',self' → logprob: -20.375011444091797

Token 799: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -2.057743949990254e-05
    2. '.' → logprob: -10.875020980834961
    3. 'board' → logprob: -14.250020980834961
    4. '.bo' → logprob: -15.125020980834961
    5. ' .' → logprob: -15.250020980834961
    6. ').' → logprob: -15.625020980834961
    7. '	board' → logprob: -16.50002098083496
    8. ' board' → logprob: -17.37502098083496
    9. '.b' → logprob: -17.50002098083496
    10. '.Board' → logprob: -17.87502098083496

Token 800: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2014286369085312
    2. ')' → logprob: -1.7014286518096924
    3. ')
' → logprob: -11.326428413391113
    4. ' )
' → logprob: -13.201428413391113
    5. ')

' → logprob: -13.951428413391113
    6. ' )' → logprob: -15.326428413391113
    7. '       ' → logprob: -15.576428413391113
    8. ').' → logprob: -16.07642936706543
    9. '   ' → logprob: -17.70142936706543
    10. ');
' → logprob: -17.82642936706543

Token 801: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16070184111595154
    2. 'groups' → logprob: -1.910701870918274
    3. ' groups' → logprob: -7.910701751708984
    4. '(groups' → logprob: -10.660701751708984
    5. 'return' → logprob: -10.910701751708984
    6. 'group' → logprob: -11.535701751708984
    7. '
' → logprob: -11.660701751708984
    8. 'all' → logprob: -11.785701751708984
    9. 'results' → logprob: -11.910701751708984
    10. '_groups' → logprob: -12.035701751708984

Token 802: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' (adapté à ' groups') → logprob: -0.011018933728337288
    2. 'gf' → logprob: -5.386018753051758
    3. 'to' → logprob: -6.136018753051758
    4. 'rem' → logprob: -6.761018753051758
    5. 'self' → logprob: -6.886018753051758
    6. 'all' → logprob: -7.386018753051758
    7. 'result' → logprob: -7.636018753051758
    8. 'remove' → logprob: -8.261018753051758
    9. '       ' → logprob: -8.386018753051758
    10. 'removed' → logprob: -9.136018753051758

Token 803: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06923633813858032
    2. '=' → logprob: -2.8192362785339355
    3. '_to' → logprob: -4.9442362785339355
    4. '_' → logprob: -10.194236755371094
    5. 'to' → logprob: -10.194236755371094
    6. 'To' → logprob: -11.194236755371094
    7. '.' → logprob: -11.444236755371094
    8. ' to' → logprob: -11.694236755371094
    9. ' ' → logprob: -12.694236755371094
    10. '.extend' → logprob: -13.444236755371094

Token 804: ' gf' (ID: 99435)
  Prédit: 'gf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gf' → logprob: -0.0005530327325686812
    2. ' gf' → logprob: -7.500553131103516
    3. '.gf' → logprob: -18.625553131103516
    4. '[' → logprob: -18.625553131103516
    5. 'fg' → logprob: -20.125553131103516
    6. '[]' → logprob: -20.375553131103516
    7. ' [' → logprob: -21.125553131103516
    8. 'GF' → logprob: -21.250553131103516
    9. '   ' → logprob: -21.750553131103516
    10. 'g' → logprob: -21.750553131103516

Token 805: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.00010413920972496271
    2. 'find' → logprob: -9.500103950500488
    3. '.' → logprob: -10.500103950500488
    4. '.findall' → logprob: -13.500103950500488
    5. ' .' → logprob: -15.875103950500488
    6. '=find' → logprob: -16.000104904174805
    7. ' find' → logprob: -18.125104904174805
    8. '   ' → logprob: -18.750104904174805
    9. '	find' → logprob: -18.875104904174805
    10. '
' → logprob: -19.375104904174805

Token 806: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -14.625000953674316
    3. 'groups' → logprob: -17.125
    4. '_group' → logprob: -18.625
    5. '
' → logprob: -19.875
    6. '_
' → logprob: -20.0
    7. '_g' → logprob: -20.0
    8. '```' → logprob: -20.125
    9. ' groups' → logprob: -20.25
    10. '(groups' → logprob: -20.375

Token 807: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.10026846826076508
    2. '()' → logprob: -2.3502683639526367
    3. '()
' → logprob: -10.100268363952637
    4. '()

' → logprob: -11.350268363952637
    5. '       ' → logprob: -11.975268363952637
    6. 'return' → logprob: -13.350268363952637
    7. 'def' → logprob: -14.975268363952637
    8. '()[' → logprob: -15.225268363952637
    9. 'for' → logprob: -16.600269317626953
    10. '(' → logprob: -16.725269317626953

Token 808: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004027865652460605
    2. ' to' → logprob: -8.375402450561523
    3. 'to' → logprob: -9.500402450561523
    4. 'result' → logprob: -9.875402450561523
    5. ' result' → logprob: -11.375402450561523
    6. 'tokens' → logprob: -11.500402450561523
    7. 'rem' → logprob: -12.250402450561523
    8. 'remove' → logprob: -12.250402450561523
    9. 'results' → logprob: -12.500402450561523
    10. '[]' → logprob: -12.625402450561523

Token 809: ' removable' (ID: 74952)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.11476919800043106
    2. 'remove' → logprob: -2.739769220352173
    3. 'rem' → logprob: -3.489769220352173
    4. '       ' → logprob: -4.864768981933594
    5. 'result' → logprob: -5.489768981933594
    6. 'groups' → logprob: -7.489768981933594
    7. 'return' → logprob: -7.739768981933594
    8. 't' → logprob: -8.364768981933594
    9. 'removed' → logprob: -8.989768981933594
    10. '   ' → logprob: -10.489768981933594

Token 810: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07245450466871262
    2. '=' → logprob: -3.1974544525146484
    3. '_groups' → logprob: -3.5724544525146484
    4. '_' → logprob: -7.447454452514648
    5. '=[]' → logprob: -8.072454452514648
    6. '=[]
' → logprob: -11.572454452514648
    7. ' ' → logprob: -11.572454452514648
    8. 's' → logprob: -11.697454452514648
    9. '_sets' → logprob: -12.447454452514648
    10. '_=' → logprob: -13.072454452514648

Token 811: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.12738873064517975
    2. '[]
' → logprob: -2.1273887157440186
    3. '[' → logprob: -7.877388954162598
    4. '[]

' → logprob: -9.627388954162598
    5. ' []' → logprob: -11.877388954162598
    6. 'set' → logprob: -13.627388954162598
    7. '[key' → logprob: -13.877388954162598
    8. '[s' → logprob: -14.502388954162598
    9. '[
' → logprob: -14.627388954162598
    10. '[i' → logprob: -14.752388954162598

Token 812: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014981419779360294
    2. ' for' → logprob: -4.514981269836426
    3. '
' → logprob: -5.764981269836426
    4. 'for' → logprob: -7.639981269836426
    5. '        
' → logprob: -8.639981269836426
    6. ',' → logprob: -10.514981269836426
    7. '<|end|>' → logprob: -10.889981269836426
    8. ':' → logprob: -11.389981269836426
    9. '[]' → logprob: -11.639981269836426
    10. '   ' → logprob: -11.764981269836426

Token 813: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011533333919942379
    2. '       ' → logprob: -4.511533260345459
    3. ' for' → logprob: -7.636533260345459
    4. 'empty' → logprob: -14.011533737182617
    5. '	for' → logprob: -14.886533737182617
    6. '```' → logprob: -15.261533737182617
    7. 'stones' → logprob: -15.261533737182617
    8. 'stone' → logprob: -15.386533737182617
    9. 'self' → logprob: -15.386533737182617
    10. '   ' → logprob: -16.386533737182617

Token 814: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.018384741619229317
    2. ' group' → logprob: -4.01838493347168
    3. 'g' → logprob: -8.64338493347168
    4. 'grp' → logprob: -9.89338493347168
    5. '   ' → logprob: -12.76838493347168
    6. ' g' → logprob: -13.26838493347168
    7. 'gr' → logprob: -13.89338493347168
    8. '	group' → logprob: -14.26838493347168
    9. ' grp' → logprob: -14.64338493347168
    10. '"group' → logprob: -15.39338493347168

Token 815: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021960523445159197
    2. 'in' → logprob: -6.127195835113525
    3. ' ' → logprob: -13.002196311950684
    4. '_in' → logprob: -13.627196311950684
    5. 'group' → logprob: -13.752196311950684
    6. '   ' → logprob: -14.002196311950684
    7. '  ' → logprob: -14.127196311950684
    8. ',' → logprob: -14.127196311950684
    9. 'g' → logprob: -14.252196311950684
    10. 'import' → logprob: -14.377196311950684

Token 816: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.007608989719301462
    2. ' groups' → logprob: -4.882608890533447
    3. '(groups' → logprob: -14.007609367370605
    4. '   ' → logprob: -14.382609367370605
    5. '.groups' → logprob: -14.507609367370605
    6. 'group' → logprob: -14.882609367370605
    7. '       ' → logprob: -15.507609367370605
    8. '
' → logprob: -16.13260841369629
    9. 'g' → logprob: -16.25760841369629
    10. 'roups' → logprob: -16.63260841369629

Token 817: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1314864456653595
    2. ':
' → logprob: -2.131486415863037
    3. '       ' → logprob: -6.006486415863037
    4. '           ' → logprob: -6.381486415863037
    5. ',' → logprob: -8.381486892700195
    6. '<|end|>' → logprob: -9.881486892700195
    7. '<|end|>' → logprob: -10.756486892700195
    8. '):
' → logprob: -10.881486892700195
    9. ':

' → logprob: -11.256486892700195
    10. ' if' → logprob: -11.506486892700195

Token 818: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00036037206882610917
    2. ' stone' → logprob: -9.000360488891602
    3. ' if' → logprob: -9.125360488891602
    4. '       ' → logprob: -9.750360488891602
    5. 'if' → logprob: -10.875360488891602
    6. '   ' → logprob: -12.000360488891602
    7. ':' → logprob: -12.000360488891602
    8. 'stone' → logprob: -12.125360488891602
    9. '               ' → logprob: -12.250360488891602
    10. 's' → logprob: -12.500360488891602

Token 819: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.085061214864254
    2. '           ' → logprob: -3.0850613117218018
    3. 'stones' → logprob: -3.7100613117218018
    4. 'lib' → logprob: -5.085061073303223
    5. '               ' → logprob: -5.835061073303223
    6. ' if' → logprob: -6.960061073303223
    7. 'all' → logprob: -8.460061073303223
    8. 'stone' → logprob: -8.460061073303223
    9. ' liberties' → logprob: -8.710061073303223
    10. '   ' → logprob: -9.460061073303223

Token 820: ' A' (ID: 355)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4974704682826996
    2. 'stones' → logprob: -1.372470498085022
    3. '           ' → logprob: -2.4974703788757324
    4. 'stone' → logprob: -3.7474703788757324
    5. 'all' → logprob: -4.247470378875732
    6. 'for' → logprob: -5.497470378875732
    7. 'lib' → logprob: -5.747470378875732
    8. 'has' → logprob: -6.247470378875732
    9. 'color' → logprob: -6.622470378875732
    10. '#' → logprob: -6.622470378875732

Token 821: ' group' (ID: 3566)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4365435838699341
    2. ' if' → logprob: -1.936543583869934
    3. 'll' → logprob: -2.4365434646606445
    4. '           ' → logprob: -2.4365434646606445
    5. ' liberties' → logprob: -4.1865434646606445
    6. ' ll' → logprob: -5.3115434646606445
    7. 't' → logprob: -6.1865434646606445
    8. 'lib' → logprob: -6.1865434646606445
    9. '       ' → logprob: -6.1865434646606445
    10. 'stones' → logprob: -6.8115434646606445

Token 822: ' is' (ID: 382)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.5046157836914062
    2. ' is' → logprob: -1.7546157836914062
    3. ' with' → logprob: -2.7546157836914062
    4. ' that' → logprob: -3.1296157836914062
    5. ' must' → logprob: -3.7546157836914062
    6. 'has' → logprob: -4.379615783691406
    7. ' stone' → logprob: -4.379615783691406
    8. ''s' → logprob: -4.379615783691406
    9. ' can' → logprob: -4.504615783691406
    10. ' if' → logprob: -4.504615783691406

Token 823: ' removed' (ID: 11906)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.08246327191591263
    2. ' removable' → logprob: -3.082463264465332
    3. 'removed' → logprob: -4.707463264465332
    4. 'all' → logprob: -5.582463264465332
    5. ' all' → logprob: -5.582463264465332
    6. 'not' → logprob: -6.082463264465332
    7. 'safe' → logprob: -6.207463264465332
    8. 'only' → logprob: -6.582463264465332
    9. ' safe' → logprob: -6.582463264465332
    10. '[]' → logprob: -7.082463264465332

Token 824: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.013131992891430855
    2. 'if' → logprob: -4.513132095336914
    3. '           ' → logprob: -6.263132095336914
    4. ' when' → logprob: -9.138132095336914
    5. ' only' → logprob: -9.638132095336914
    6. ' iff' → logprob: -13.388132095336914
    7. 'when' → logprob: -14.263132095336914
    8. 'only' → logprob: -14.263132095336914
    9. ',' → logprob: -15.138132095336914
    10. '               ' → logprob: -15.388132095336914

Token 825: ' no' (ID: 860)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.04341418668627739
    2. 'not' → logprob: -3.4184141159057617
    3. 'self' → logprob: -5.168414115905762
    4. 'len' → logprob: -6.043414115905762
    5. ' all' → logprob: -6.668414115905762
    6. 'any' → logprob: -8.668414115905762
    7. ' not' → logprob: -9.043414115905762
    8. '   ' → logprob: -9.918414115905762
    9. '
' → logprob: -11.918414115905762
    10. ' self' → logprob: -12.168414115905762

Token 826: ' vertex' (ID: 25363)
  Prédit: ' liberties'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liberties' → logprob: -0.853187620639801
    2. ' neighbor' → logprob: -1.4781875610351562
    3. ' neighbors' → logprob: -2.6031875610351562
    4. 'neighbor' → logprob: -2.7281875610351562
    5. ' vertex' → logprob: -3.1031875610351562
    6. ' group' → logprob: -3.3531875610351562
    7. ' adjacent' → logprob: -3.7281875610351562
    8. ' (' → logprob: -4.228187561035156
    9. 'neighbors' → logprob: -4.353187561035156
    10. ' neighboring' → logprob: -4.353187561035156

Token 827: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42821991443634033
    2. 'in' → logprob: -1.1782199144363403
    3. 's' → logprob: -4.178219795227051
    4. ' has' → logprob: -4.428219795227051
    5. 'has' → logprob: -4.803219795227051
    6. ''s' → logprob: -6.428219795227051
    7. 'adj' → logprob: -7.178219795227051
    8. ' surrounding' → logprob: -8.05321979522705
    9. 'neighbors' → logprob: -8.17821979522705
    10. ' adjacent' → logprob: -8.30321979522705

Token 828: ' the' (ID: 290)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.038211897015571594
    2. ' group' → logprob: -3.2882118225097656
    3. 'the' → logprob: -8.788211822509766
    4. '[group' → logprob: -11.538211822509766
    5. ' the' → logprob: -12.413211822509766
    6. '           ' → logprob: -13.163211822509766
    7. '   ' → logprob: -14.538211822509766
    8. '"group' → logprob: -14.788211822509766
    9. '(group' → logprob: -14.788211822509766
    10. '	group' → logprob: -15.413211822509766

Token 829: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.03804447129368782
    2. ' group' → logprob: -3.2880444526672363
    3. '
' → logprob: -13.663044929504395
    4. '"group' → logprob: -14.413044929504395
    5. '```' → logprob: -15.538044929504395
    6. '(group' → logprob: -15.788044929504395
    7. '[group' → logprob: -15.788044929504395
    8. '   ' → logprob: -15.788044929504395
    9. ' ' → logprob: -16.538043975830078
    10. '	group' → logprob: -16.663043975830078

Token 830: ' touches' (ID: 45060)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.4778335690498352
    2. 'has' → logprob: -0.9778335690498352
    3. '           ' → logprob: -7.4778337478637695
    4. '               ' → logprob: -7.6028337478637695
    5. '   ' → logprob: -7.7278337478637695
    6. ''s' → logprob: -8.10283374786377
    7. ' is' → logprob: -8.22783374786377
    8. ')' → logprob: -8.60283374786377
    9. 's' → logprob: -8.60283374786377
    10. 'is' → logprob: -8.85283374786377

Token 831: ' an' (ID: 448)
  Prédit: ' an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.22167108952999115
    2. 'an' → logprob: -2.2216711044311523
    3. ' any' → logprob: -2.7216711044311523
    4. ' a' → logprob: -4.721671104431152
    5. 'any' → logprob: -4.846671104431152
    6. 'a' → logprob: -5.721671104431152
    7. 'empty' → logprob: -6.346671104431152
    8. '0' → logprob: -6.596671104431152
    9. ' empty' → logprob: -7.096671104431152
    10. ' ' → logprob: -8.721671104431152

Token 832: ' empty' (ID: 8213)
  Prédit: ' empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' empty' → logprob: -0.4750765860080719
    2. 'empty' → logprob: -0.9750765562057495
    3. ' adjacent' → logprob: -7.975076675415039
    4. 'adj' → logprob: -8.475076675415039
    5. ' opponent' → logprob: -9.725076675415039
    6. '   ' → logprob: -9.725076675415039
    7. ' vertex' → logprob: -9.850076675415039
    8. 'vertex' → logprob: -9.975076675415039
    9. '(empty' → logprob: -10.225076675415039
    10. 'empt' → logprob: -10.725076675415039

Token 833: ' vertex' (ID: 25363)
  Prédit: ' vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertex' → logprob: -0.9526569843292236
    2. 'vertex' → logprob: -1.5776569843292236
    3. 'neighbor' → logprob: -1.8276569843292236
    4. ' neighbor' → logprob: -2.2026569843292236
    5. ' space' → logprob: -2.5776569843292236
    6. 'space' → logprob: -3.0776569843292236
    7. 'adj' → logprob: -5.8276567459106445
    8. '
' → logprob: -6.0776567459106445
    9. ' (' → logprob: -6.0776567459106445
    10. ' 
' → logprob: -6.7026567459106445

Token 834: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026791812852025032
    2. ',' → logprob: -4.776792049407959
    3. ' or' → logprob: -5.026792049407959
    4. '.' → logprob: -5.276792049407959
    5. ' and' → logprob: -5.776792049407959
    6. '
' → logprob: -7.151792049407959
    7. '               ' → logprob: -7.526792049407959
    8. '       ' → logprob: -8.0267915725708
    9. ' (' → logprob: -8.5267915725708
    10. ':' → logprob: -8.6517915725708

Token 835: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003247108543291688
    2. '       ' → logprob: -6.128247261047363
    3. ',' → logprob: -7.753247261047363
    4. ' or' → logprob: -8.878247261047363
    5. '.' → logprob: -9.128247261047363
    6. ' and' → logprob: -9.378247261047363
    7. '<|end|>' → logprob: -9.503247261047363
    8. '               ' → logprob: -10.003247261047363
    9. '
' → logprob: -10.128247261047363
    10. '   ' → logprob: -10.378247261047363

Token 836: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01714351214468479
    2. 'empty' → logprob: -4.767143726348877
    3. '       ' → logprob: -5.642143726348877
    4. ' empty' → logprob: -6.642143726348877
    5. '   ' → logprob: -7.517143726348877
    6. ' has' → logprob: -7.892143726348877
    7. ' for' → logprob: -7.892143726348877
    8. 'is' → logprob: -8.017143249511719
    9. ' touched' → logprob: -8.142143249511719
    10. ' touches' → logprob: -8.142143249511719

Token 837: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.31411829590797424
    2. 'all' → logprob: -1.3141182661056519
    3. ' not' → logprob: -7.689118385314941
    4. '           ' → logprob: -8.814118385314941
    5. ' all' → logprob: -9.439118385314941
    6. '   ' → logprob: -9.564118385314941
    7. 'any' → logprob: -9.814118385314941
    8. '       ' → logprob: -10.689118385314941
    9. '               ' → logprob: -11.439118385314941
    10. 'self' → logprob: -12.064118385314941

Token 838: ' self' (ID: 1051)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.0004329341172706336
    2. ' any' → logprob: -7.750432968139648
    3. 'self' → logprob: -13.125432968139648
    4. '   ' → logprob: -15.500432968139648
    5. '(any' → logprob: -17.37543296813965
    6. '
' → logprob: -18.00043296813965
    7. '       ' → logprob: -18.50043296813965
    8. ' ' → logprob: -18.62543296813965
    9. '           ' → logprob: -18.75043296813965
    10. ' self' → logprob: -18.87543296813965

Token 839: '._' (ID: 2697)
  Prédit: '.board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -0.49470752477645874
    2. '.has' → logprob: -1.2447075843811035
    3. '._' → logprob: -3.1197075843811035
    4. '.groups' → logprob: -3.8697075843811035
    5. '.can' → logprob: -4.6197075843811035
    6. '.group' → logprob: -4.7447075843811035
    7. '.is' → logprob: -5.4947075843811035
    8. '.t' → logprob: -5.7447075843811035
    9. '.any' → logprob: -5.8697075843811035
    10. '.touch' → logprob: -6.2447075843811035

Token 840: 'group' (ID: 4323)
  Prédit: 'group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.5387195348739624
    2. 'touch' → logprob: -1.5387195348739624
    3. 'has' → logprob: -1.6637195348739624
    4. 'adj' → logprob: -4.788719654083252
    5. 'any' → logprob: -6.663719654083252
    6. '_group' → logprob: -6.663719654083252
    7. 'is' → logprob: -7.538719654083252
    8. ' touches' → logprob: -8.163719177246094
    9. 'groups' → logprob: -9.038719177246094
    10. 't' → logprob: -9.413719177246094

Token 841: '_has' (ID: 51865)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.1906004250049591
    2. '_has' → logprob: -2.1906003952026367
    3. '_to' → logprob: -3.6906003952026367
    4. '_touch' → logprob: -4.190600395202637
    5. '_can' → logprob: -4.565600395202637
    6. '_sur' → logprob: -5.815600395202637
    7. '_contacts' → logprob: -6.440600395202637
    8. '_adj' → logprob: -6.690600395202637
    9. 'touch' → logprob: -7.065600395202637
    10. '_is' → logprob: -7.440600395202637

Token 842: '_empty' (ID: 35051)
  Prédit: '_lib'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lib' → logprob: -0.8323144316673279
    2. 'lib' → logprob: -1.0823144912719727
    3. '_empty' → logprob: -1.7073144912719727
    4. 'empty' → logprob: -3.2073144912719727
    5. '_adj' → logprob: -6.957314491271973
    6. '_' → logprob: -7.332314491271973
    7. 'an' → logprob: -7.707314491271973
    8. 'a' → logprob: -7.832314491271973
    9. '_neighbor' → logprob: -8.082314491271973
    10. '_any' → logprob: -8.207314491271973

Token 843: '_adj' (ID: 117293)
  Prédit: '_neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -0.3777506947517395
    2. '_vertex' → logprob: -1.3777506351470947
    3. '_adj' → logprob: -3.6277506351470947
    4. '(group' → logprob: -3.8777506351470947
    5. '_space' → logprob: -5.752750873565674
    6. 'neighbor' → logprob: -5.877750873565674
    7. '_' → logprob: -6.377750873565674
    8. '_touch' → logprob: -6.752750873565674
    9. '_neighbors' → logprob: -6.877750873565674
    10. 'vertex' → logprob: -6.877750873565674

Token 844: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.14444679021835327
    2. 'acency' → logprob: -2.394446849822998
    3. '(self' → logprob: -3.269446849822998
    4. '((' → logprob: -6.019446849822998
    5. '(' → logprob: -6.519446849822998
    6. '[(' → logprob: -8.14444637298584
    7. 'ac' → logprob: -8.51944637298584
    8. '(
' → logprob: -8.64444637298584
    9. '(group' → logprob: -8.64444637298584
    10. 'cent' → logprob: -9.76944637298584

Token 845: '(group' (ID: 36416)
  Prédit: '(group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(group' → logprob: -0.19972561299800873
    2. 'acent' → logprob: -2.07472562789917
    3. 'acency' → logprob: -2.94972562789917
    4. 'ac' → logprob: -7.19972562789917
    5. '(self' → logprob: -7.82472562789917
    6. 'group' → logprob: -7.82472562789917
    7. '(' → logprob: -7.94972562789917
    8. 'ent' → logprob: -8.699725151062012
    9. 'ency' → logprob: -8.949725151062012
    10. 'oint' → logprob: -8.949725151062012

Token 846: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0433788076043129
    2. '):' → logprob: -3.1683788299560547
    3. '               ' → logprob: -8.793378829956055
    4. '):
' → logprob: -9.293378829956055
    5. '           ' → logprob: -9.543378829956055
    6. ')' → logprob: -11.168378829956055
    7. '():
' → logprob: -11.293378829956055
    8. ':' → logprob: -11.668378829956055
    9. '):

' → logprob: -11.793378829956055
    10. '()):
' → logprob: -11.793378829956055

Token 847: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5503594875335693
    2. ':
' → logprob: -1.0503594875335693
    3. ':' → logprob: -2.6753594875335693
    4. '           ' → logprob: -5.925359725952148
    5. '):
' → logprob: -6.675359725952148
    6. '():
' → logprob: -8.050359725952148
    7. ':return' → logprob: -9.800359725952148
    8. ',' → logprob: -9.925359725952148
    9. '       ' → logprob: -10.050359725952148
    10. ' :
' → logprob: -10.300359725952148

Token 848: ' removable' (ID: 74952)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.0980730950832367
    2. '                   ' → logprob: -2.5980730056762695
    3. ' removable' → logprob: -4.2230730056762695
    4. '           ' → logprob: -5.9730730056762695
    5. ' rem' → logprob: -6.8480730056762695
    6. '               ' → logprob: -7.4730730056762695
    7. ' remov' → logprob: -10.09807300567627
    8. 'remove' → logprob: -10.47307300567627
    9. '                       ' → logprob: -10.84807300567627
    10. '(rem' → logprob: -10.84807300567627

Token 849: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0019362468738108873
    2. '.' → logprob: -6.251936435699463
    3. '.extend' → logprob: -12.126935958862305
    4. '.add' → logprob: -13.751935958862305
    5. ' .' → logprob: -14.126935958862305
    6. '.app' → logprob: -15.626935958862305
    7. 'append' → logprob: -16.126935958862305
    8. '.
' → logprob: -16.876935958862305
    9. '.push' → logprob: -17.126935958862305
    10. ').' → logprob: -17.126935958862305

Token 850: '(group' (ID: 36416)
  Prédit: '(group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(group' → logprob: -6.704273118884885e-07
    2. 'group' → logprob: -14.750000953674316
    3. '(' → logprob: -15.625000953674316
    4. '(
' → logprob: -18.625
    5. '(tuple' → logprob: -19.125
    6. ' (' → logprob: -19.25
    7. ' group' → logprob: -19.375
    8. '((' → logprob: -19.375
    9. '[group' → logprob: -20.625
    10. '"group' → logprob: -21.0

Token 851: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07705660164356232
    2. ')
' → logprob: -2.702056646347046
    3. '       ' → logprob: -4.952056407928467
    4. '
' → logprob: -12.077056884765625
    5. ')return' → logprob: -12.202056884765625
    6. '           ' → logprob: -12.327056884765625
    7. ')

' → logprob: -12.702056884765625
    8. ')
' → logprob: -12.952056884765625
    9. ')\' → logprob: -13.702056884765625
    10. ')\
' → logprob: -13.952056884765625

Token 852: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3796810209751129
    2. '
' → logprob: -1.2546809911727905
    3. '    
' → logprob: -4.37968111038208
    4. '        
' → logprob: -4.37968111038208
    5. '10' → logprob: -7.00468111038208
    6. '   ' → logprob: -7.37968111038208
    7. '```' → logprob: -7.50468111038208
    8. '' → logprob: -7.75468111038208
    9. '  
' → logprob: -7.75468111038208
    10. '
' → logprob: -7.87968111038208

Token 853: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13902702927589417
    2. 'return' (adapté à ' return') → logprob: -2.1390271186828613
    3. '
' → logprob: -4.639027118682861
    4. ' return' → logprob: -6.264027118682861
    5. '   ' → logprob: -8.264026641845703
    6. '	return' → logprob: -9.639026641845703
    7. 'for' → logprob: -10.514026641845703
    8. '	' → logprob: -10.514026641845703
    9. '        
' → logprob: -11.014026641845703
    10. '           ' → logprob: -11.139026641845703

Token 854: ' removable' (ID: 74952)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.002479581395164132
    2. ' removable' → logprob: -6.002479553222656
    3. 'removed' → logprob: -13.127479553222656
    4. 'remove' → logprob: -13.752479553222656
    5. ' remov' → logprob: -15.252479553222656
    6. '[' → logprob: -15.752479553222656
    7. '(rem' → logprob: -15.752479553222656
    8. 're' → logprob: -15.877479553222656
    9. 'rm' → logprob: -17.252479553222656
    10. '.rem' → logprob: -17.627479553222656

Token 855: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07892613857984543
    2. '   ' → logprob: -2.7039260864257812
    3. '    
' → logprob: -4.953926086425781
    4. '<|end|>' → logprob: -7.078926086425781
    5. '```' → logprob: -7.828926086425781
    6. '

' → logprob: -8.453926086425781
    7. '  
' → logprob: -8.828926086425781
    8. 'def' → logprob: -9.078926086425781
    9. '        
' → logprob: -9.328926086425781
    10. '   
' → logprob: -10.578926086425781

Token 856: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15591482818126678
    2. 'def' → logprob: -2.530914783477783
    3. '
' → logprob: -2.780914783477783
    4. ' def' → logprob: -6.905914783477783
    5. '    
' → logprob: -7.030914783477783
    6. '```' → logprob: -7.280914783477783
    7. '<|end|>' → logprob: -9.905915260314941
    8. ' ' → logprob: -10.030915260314941
    9. '  
' → logprob: -10.155915260314941
    10. '

' → logprob: -10.655915260314941

Token 857: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00018208740220870823
    2. ' def' → logprob: -9.000182151794434
    3. '   ' → logprob: -10.000182151794434
    4. '
' → logprob: -11.250182151794434
    5. '    
' → logprob: -15.750182151794434
    6. '	def' → logprob: -17.250181198120117
    7. ' ' → logprob: -17.375181198120117
    8. '

' → logprob: -18.125181198120117
    9. '```' → logprob: -19.000181198120117
    10. '_def' → logprob: -19.000181198120117

Token 858: ' _' (ID: 1175)
  Prédit: '_group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -2.935296834039036e-06
    2. ' _' → logprob: -12.87500286102295
    3. 'group' → logprob: -15.25000286102295
    4. '_' → logprob: -17.750003814697266
    5. '_groups' → logprob: -18.125003814697266
    6. '_g' → logprob: -18.750003814697266
    7. ' group' → logprob: -18.875003814697266
    8. '_grp' → logprob: -19.500003814697266
    9. '_Group' → logprob: -20.625003814697266
    10. ' ' → logprob: -20.875003814697266

Token 859: 'group' (ID: 4323)
  Prédit: 'group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.00033558503491804004
    2. '_group' → logprob: -8.000335693359375
    3. ' group' → logprob: -16.625335693359375
    4. '"group' → logprob: -19.625335693359375
    5. '(group' → logprob: -21.125335693359375
    6. 'roup' → logprob: -21.125335693359375
    7. 'groups' → logprob: -21.375335693359375
    8. 'def' → logprob: -21.500335693359375
    9. 'class' → logprob: -21.750335693359375
    10. 'has' → logprob: -22.375335693359375

Token 860: '_has' (ID: 51865)
  Prédit: '_has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_has' → logprob: -3.8889261304575484e-06
    2. '_have' → logprob: -12.625003814697266
    3. ' _' → logprob: -15.625003814697266
    4. '_' → logprob: -16.375003814697266
    5. '_to' → logprob: -16.500003814697266
    6. 's' → logprob: -17.000003814697266
    7. 'has' → logprob: -17.500003814697266
    8. '
' → logprob: -17.500003814697266
    9. '_contains' → logprob: -17.875003814697266
    10. '_should' → logprob: -17.875003814697266

Token 861: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -5.180879816180095e-05
    2. 'empty' → logprob: -9.875051498413086
    3. 'group' → logprob: -16.625051498413086
    4. 'def' → logprob: -16.750051498413086
    5. '_any' → logprob: -16.875051498413086
    6. '_group' → logprob: -17.125051498413086
    7. '
' → logprob: -17.625051498413086
    8. ' _' → logprob: -17.750051498413086
    9. '_' → logprob: -17.875051498413086
    10. ' empty' → logprob: -18.375051498413086

Token 862: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -2.069664333248511e-05
    2. '_ad' → logprob: -10.875020980834961
    3. 'adj' → logprob: -13.500020980834961
    4. '_' → logprob: -15.250020980834961
    5. ' _' → logprob: -17.62502098083496
    6. ' adjacent' → logprob: -18.37502098083496
    7. ''_' → logprob: -18.50002098083496
    8. 'Adjacent' → logprob: -18.75002098083496
    9. '```' → logprob: -19.12502098083496
    10. '(adj' → logprob: -19.12502098083496

Token 863: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.0009461151785217226
    2. '(self' → logprob: -7.125946044921875
    3. 'ac' → logprob: -10.125946044921875
    4. '(' → logprob: -10.250946044921875
    5. 'acency' → logprob: -10.500946044921875
    6. 'cent' → logprob: -12.000946044921875
    7. '(
' → logprob: -12.000946044921875
    8. '((' → logprob: -12.875946044921875
    9. '```' → logprob: -13.000946044921875
    10. 'acet' → logprob: -13.375946044921875

Token 864: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.531315314830863e-06
    2. '(' → logprob: -13.500003814697266
    3. 'self' → logprob: -13.750003814697266
    4. ' (' → logprob: -14.125003814697266
    5. '(s' → logprob: -16.000003814697266
    6. '(
' → logprob: -16.750003814697266
    7. '   ' → logprob: -16.750003814697266
    8. ' self' → logprob: -18.250003814697266
    9. ' ' → logprob: -19.375003814697266
    10. '(sel' → logprob: -20.000003814697266

Token 865: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.010624700225889683
    2. ',' → logprob: -5.260624885559082
    3. 'self' → logprob: -5.260624885559082
    4. ',self' → logprob: -9.510624885559082
    5. 'group' → logprob: -10.510624885559082
    6. ')' → logprob: -11.010624885559082
    7. '   ' → logprob: -11.135624885559082
    8. ' (' → logprob: -11.385624885559082
    9. ')(' → logprob: -11.885624885559082
    10. '(' → logprob: -12.010624885559082

Token 866: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.08749149739742279
    2. ' group' → logprob: -2.712491512298584
    3. 'self' → logprob: -4.087491512298584
    4. ' self' → logprob: -7.587491512298584
    5. '   ' → logprob: -9.587491035461426
    6. '       ' → logprob: -11.962491035461426
    7. '"group' → logprob: -12.087491035461426
    8. ' ' → logprob: -12.212491035461426
    9. '	group' → logprob: -12.462491035461426
    10. 'Group' → logprob: -12.712491035461426

Token 867: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6123903393745422
    2. 'self' → logprob: -1.4873902797698975
    3. '):' → logprob: -1.9873902797698975
    4. '(self' → logprob: -2.7373902797698975
    5. '       ' → logprob: -4.237390518188477
    6. ',' → logprob: -4.737390518188477
    7. '   ' → logprob: -5.112390518188477
    8. ')' → logprob: -7.737390518188477
    9. '):

' → logprob: -8.612390518188477
    10. ' self' → logprob: -9.362390518188477

Token 868: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010580805974313989
    2. '<|end|>' → logprob: -10.000105857849121
    3. ' for' → logprob: -10.750105857849121
    4. '
' → logprob: -11.125105857849121
    5. '   ' → logprob: -11.750105857849121
    6. '```' → logprob: -12.250105857849121
    7. '        
' → logprob: -13.000105857849121
    8. '<|end|>' → logprob: -13.125105857849121
    9. '#' → logprob: -13.500105857849121
    10. '[' → logprob: -14.125105857849121

Token 869: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21347498893737793
    2. 'for' (adapté à ' for') → logprob: -1.963474988937378
    3. ' for' → logprob: -2.963474988937378
    4. '   ' → logprob: -8.463475227355957
    5. '	for' → logprob: -11.963475227355957
    6. '           ' → logprob: -14.463475227355957
    7. ' ' → logprob: -15.088475227355957
    8. '	   ' → logprob: -16.46347427368164
    9. '      ' → logprob: -16.58847427368164
    10. '     ' → logprob: -16.58847427368164

Token 870: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5367600917816162
    2. '(r' → logprob: -1.0367600917816162
    3. 'vr' → logprob: -3.161760091781616
    4. '(v' → logprob: -5.286760330200195
    5. ' (' → logprob: -5.536760330200195
    6. 'vertex' → logprob: -5.661760330200195
    7. ' vr' → logprob: -5.911760330200195
    8. ' r' → logprob: -6.161760330200195
    9. '(vertex' → logprob: -7.661760330200195
    10. 'v' → logprob: -8.036760330200195

Token 871: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0007989077712409198
    2. 'vr' → logprob: -7.37579870223999
    3. '(r' → logprob: -8.875799179077148
    4. ' r' → logprob: -10.625799179077148
    5. '   ' → logprob: -12.500799179077148
    6. ' (' → logprob: -14.125799179077148
    7. 'vertex' → logprob: -14.250799179077148
    8. 'v' → logprob: -14.375799179077148
    9. ' vr' → logprob: -14.375799179077148
    10. 'nr' → logprob: -14.375799179077148

Token 872: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.5761793255805969
    2. ',' → logprob: -0.8261793255805969
    3. ' ,' → logprob: -8.451179504394531
    4. 'c' → logprob: -11.201179504394531
    5. ',n' → logprob: -11.451179504394531
    6. ',
' → logprob: -14.951179504394531
    7. ' c' → logprob: -15.326179504394531
    8. '‌,' → logprob: -15.701179504394531
    9. ',s' → logprob: -15.826179504394531
    10. ',r' → logprob: -16.32617950439453

Token 873: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004587903094943613
    2. '),' → logprob: -8.125458717346191
    3. ' in' → logprob: -9.375458717346191
    4. ' )' → logprob: -10.250458717346191
    5. '),(' → logprob: -11.250458717346191
    6. 'in' → logprob: -11.375458717346191
    7. ',' → logprob: -11.375458717346191
    8. '):
' → logprob: -13.000458717346191
    9. '       ' → logprob: -13.625458717346191
    10. ')
' → logprob: -14.500458717346191

Token 874: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20145398378372192
    2. 'in' → logprob: -1.7014539241790771
    3. ')' → logprob: -10.826454162597656
    4. ',' → logprob: -10.951454162597656
    5. '       ' → logprob: -13.826454162597656
    6. '   ' → logprob: -14.201454162597656
    7. '        ' → logprob: -14.201454162597656
    8. '           ' → logprob: -15.326454162597656
    9. ' )' → logprob: -15.451454162597656
    10. '    ' → logprob: -15.826454162597656

Token 875: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.00033546582562848926
    2. ' group' → logprob: -8.000335693359375
    3. '[group' → logprob: -19.875335693359375
    4. '(group' → logprob: -20.250335693359375
    5. '   ' → logprob: -21.625335693359375
    6. '"group' → logprob: -21.875335693359375
    7. '	group' → logprob: -22.000335693359375
    8. '.group' → logprob: -23.750335693359375
    9. '_group' → logprob: -24.250335693359375
    10. ' ' → logprob: -24.375335693359375

Token 876: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2615354657173157
    2. ':' → logprob: -1.511535406112671
    3. '           ' → logprob: -4.76153564453125
    4. '       ' → logprob: -8.01153564453125
    5. '):
' → logprob: -8.01153564453125
    6. ',' → logprob: -8.88653564453125
    7. ':
' → logprob: -9.76153564453125
    8. '   ' → logprob: -10.01153564453125
    9. ':

' → logprob: -10.88653564453125
    10. '<|end|>' → logprob: -10.88653564453125

Token 877: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004522331058979034
    2. '       ' → logprob: -5.879522323608398
    3. '<|end|>' → logprob: -6.754522323608398
    4. ' for' → logprob: -8.254522323608398
    5. '<|end|>' → logprob: -9.379522323608398
    6. '   ' → logprob: -9.754522323608398
    7. '	       ' → logprob: -10.379522323608398
    8. '         ' → logprob: -10.879522323608398
    9. '        ' → logprob: -11.129522323608398
    10. '          ' → logprob: -11.129522323608398

Token 878: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6494579911231995
    2. 'for' (adapté à ' for') → logprob: -0.8994579911231995
    3. ' for' → logprob: -2.6494579315185547
    4. '               ' → logprob: -8.649457931518555
    5. '   ' → logprob: -11.524457931518555
    6. '	for' → logprob: -12.399457931518555
    7. '       ' → logprob: -13.774457931518555
    8. '		' → logprob: -15.149457931518555
    9. ' ' → logprob: -15.149457931518555
    10. '	       ' → logprob: -15.399457931518555

Token 879: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.05176224187016487
    2. 'nr' → logprob: -3.176762342453003
    3. ' nr' → logprob: -5.176762104034424
    4. ' (' → logprob: -5.801762104034424
    5. 'n' → logprob: -10.676762580871582
    6. 'nbr' → logprob: -11.801762580871582
    7. '.nr' → logprob: -12.301762580871582
    8. '_nr' → logprob: -12.301762580871582
    9. '(nb' → logprob: -12.801762580871582
    10. 'neighbor' → logprob: -12.926762580871582

Token 880: 'nr' (ID: 33357)
  Prédit: 'nr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -9.849109119386412e-06
    2. ' nr' → logprob: -12.125009536743164
    3. '(n' → logprob: -12.500009536743164
    4. 'nbr' → logprob: -14.875009536743164
    5. '   ' → logprob: -16.125009536743164
    6. '.nr' → logprob: -16.625009536743164
    7. '_nr' → logprob: -17.500009536743164
    8. 'n' → logprob: -17.750009536743164
    9. 'neighbor' → logprob: -18.000009536743164
    10. '[n' → logprob: -19.000009536743164

Token 881: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.023257357999682426
    2. ',' → logprob: -3.773257255554199
    3. ' ,' → logprob: -11.3982572555542
    4. ',c' → logprob: -16.148258209228516
    5. ',
' → logprob: -16.273258209228516
    6. ',num' → logprob: -16.773258209228516
    7. ',(' → logprob: -16.773258209228516
    8. ',next' → logprob: -16.773258209228516
    9. ',s' → logprob: -17.648258209228516
    10. '   ' → logprob: -17.773258209228516

Token 882: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.033557403832674026
    2. ',c' → logprob: -3.533557415008545
    3. ',n' → logprob: -6.283557415008545
    4. ',' → logprob: -6.283557415008545
    5. 'nc' → logprob: -10.408556938171387
    6. ',
' → logprob: -11.283556938171387
    7. ')' → logprob: -12.158556938171387
    8. ')c' → logprob: -12.283556938171387
    9. '),' → logprob: -13.408556938171387
    10. '.nc' → logprob: -13.408556938171387

Token 883: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.133198283147067e-05
    2. 'in' → logprob: -10.125051498413086
    3. ' )' → logprob: -11.500051498413086
    4. ' in' → logprob: -14.000051498413086
    5. 'self' → logprob: -17.250051498413086
    6. '),' → logprob: -17.250051498413086
    7. ',)' → logprob: -17.250051498413086
    8. '   ' → logprob: -17.500051498413086
    9. '    ' → logprob: -17.875051498413086
    10. '       ' → logprob: -18.000051498413086

Token 884: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.474094957113266
    2. 'in' → logprob: -0.9740949869155884
    3. 'self' → logprob: -12.099095344543457
    4. ')' → logprob: -12.349095344543457
    5. 'In' → logprob: -13.349095344543457
    6. 'n' → logprob: -13.349095344543457
    7. ' ' → logprob: -13.474095344543457
    8. '    ' → logprob: -14.224095344543457
    9. '        ' → logprob: -14.974095344543457
    10. ',' → logprob: -15.224095344543457

Token 885: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2519803047180176
    2. ' self' → logprob: -1.5019803047180176
    3. '(self' → logprob: -10.62697982788086
    4. '[self' → logprob: -11.12697982788086
    5. '           ' → logprob: -12.25197982788086
    6. '       ' → logprob: -12.87697982788086
    7. '   ' → logprob: -13.62697982788086
    8. '=self' → logprob: -14.00197982788086
    9. '	self' → logprob: -14.37697982788086
    10. ' ' → logprob: -14.62697982788086

Token 886: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -7.584239938296378e-06
    2. 'board' → logprob: -11.875007629394531
    3. ' .' → logprob: -16.00000762939453
    4. '.' → logprob: -16.12500762939453
    5. '	board' → logprob: -16.12500762939453
    6. ' board' → logprob: -16.37500762939453
    7. 'self' → logprob: -17.87500762939453
    8. ').' → logprob: -18.25000762939453
    9. '.Board' → logprob: -18.75000762939453
    10. 'Board' → logprob: -18.87500762939453

Token 887: '.ne' (ID: 39319)
  Prédit: '.ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ne' → logprob: -2.1008713702030946e-06
    2. 'neighbors' → logprob: -13.375001907348633
    3. ' .' → logprob: -14.750001907348633
    4. '.Ne' → logprob: -16.125001907348633
    5. '.' → logprob: -17.125001907348633
    6. '.ad' → logprob: -17.750001907348633
    7. 'Neighbors' → logprob: -18.625001907348633
    8. '_neighbors' → logprob: -19.000001907348633
    9. '.n' → logprob: -19.000001907348633
    10. ' neighbors' → logprob: -19.500001907348633

Token 888: 'ighbors' (ID: 46483)
  Prédit: 'ighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbors' → logprob: -2.2961512513575144e-05
    2. 'bors' → logprob: -11.125022888183594
    3. 'igh' → logprob: -12.625022888183594
    4. 'gh' → logprob: -12.875022888183594
    5. 'neighbors' → logprob: -13.875022888183594
    6. 'ighbor' → logprob: -14.625022888183594
    7. 'ighbours' → logprob: -15.250022888183594
    8. 'ighborhood' → logprob: -15.625022888183594
    9. 'ig' → logprob: -15.750022888183594
    10. 'h' → logprob: -16.375022888183594

Token 889: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.875000953674316
    3. ' (' → logprob: -15.000000953674316
    4. 'r' → logprob: -17.125
    5. '((' → logprob: -17.5
    6. '(
' → logprob: -18.875
    7. ')' → logprob: -19.125
    8. ')(' → logprob: -19.75
    9. '   ' → logprob: -20.25
    10. '(n' → logprob: -20.75

Token 890: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.01620105654001236
    2. ',' → logprob: -4.141201019287109
    3. ' ,' → logprob: -8.89120101928711
    4. ',n' → logprob: -11.01620101928711
    5. 'c' → logprob: -11.39120101928711
    6. ',
' → logprob: -14.64120101928711
    7. '   ' → logprob: -15.14120101928711
    8. ' ' → logprob: -16.14120101928711
    9. '       ' → logprob: -16.26620101928711
    10. ',k' → logprob: -16.51620101928711

Token 891: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06224271282553673
    2. '):
' → logprob: -2.8122427463531494
    3. '):
' → logprob: -8.31224250793457
    4. ')' → logprob: -11.56224250793457
    5. '           ' → logprob: -11.93724250793457
    6. ':' → logprob: -12.06224250793457
    7. '):

' → logprob: -12.68724250793457
    8. '               ' → logprob: -13.43724250793457
    9. '       ' → logprob: -13.68724250793457
    10. ' ):' → logprob: -14.31224250793457

Token 892: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.539801688631997e-05
    2. '           ' → logprob: -10.375065803527832
    3. ' if' → logprob: -10.625065803527832
    4. '                   ' → logprob: -12.375065803527832
    5. '       ' → logprob: -13.625065803527832
    6. 'if' → logprob: -13.750065803527832
    7. '                       ' → logprob: -14.250065803527832
    8. '              ' → logprob: -14.250065803527832
    9. '<|end|>' → logprob: -14.750065803527832
    10. '   ' → logprob: -14.875065803527832

Token 893: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1512499749660492
    2. '                   ' → logprob: -2.026249885559082
    3. ' if' → logprob: -4.776249885559082
    4. '   ' → logprob: -10.276249885559082
    5. '               ' → logprob: -10.276249885559082
    6. '                       ' → logprob: -11.026249885559082
    7. '
' → logprob: -12.151249885559082
    8. ' ' → logprob: -12.276249885559082
    9. '	if' → logprob: -12.651249885559082
    10. 'If' → logprob: -12.901249885559082

Token 894: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024913568049669266
    2. ' self' → logprob: -6.002491474151611
    3. '(self' → logprob: -11.127490997314453
    4. '               ' → logprob: -14.502490997314453
    5. '                   ' → logprob: -15.877490997314453
    6. '0' → logprob: -16.502490997314453
    7. '           ' → logprob: -16.627490997314453
    8. '   ' → logprob: -16.877490997314453
    9. '	self' → logprob: -16.877490997314453
    10. '[self' → logprob: -17.002490997314453

Token 895: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -0.038556165993213654
    2. '.grid' → logprob: -3.6635560989379883
    3. '.get' → logprob: -4.413556098937988
    4. '.' → logprob: -10.038556098937988
    5. 'board' → logprob: -11.288556098937988
    6. '.user' → logprob: -12.288556098937988
    7. ' .' → logprob: -12.413556098937988
    8. '	board' → logprob: -13.663556098937988
    9. 'get' → logprob: -15.038556098937988
    10. '..' → logprob: -15.163556098937988

Token 896: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0004234051739331335
    2. '.grid' → logprob: -7.875423431396484
    3. 'get' → logprob: -10.125423431396484
    4. '.' → logprob: -13.375423431396484
    5. 'grid' → logprob: -14.000423431396484
    6. '   ' → logprob: -15.125423431396484
    7. ' .' → logprob: -15.125423431396484
    8. '
' → logprob: -15.750423431396484
    9. '.
' → logprob: -17.250423431396484
    10. '       ' → logprob: -17.625423431396484

Token 897: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -1.27099974633893e-05
    2. 'stone' → logprob: -11.500012397766113
    3. 'Stone' → logprob: -14.125012397766113
    4. '(st' → logprob: -14.750012397766113
    5. '(n' → logprob: -15.250012397766113
    6. ' stone' → logprob: -15.375012397766113
    7. 'st' → logprob: -15.500012397766113
    8. '(r' → logprob: -15.625012397766113
    9. '_s' → logprob: -16.12501335144043
    10. '```' → logprob: -16.50001335144043

Token 898: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.00022713904036208987
    2. 'stone' → logprob: -9.375226974487305
    3. '_one' → logprob: -10.625226974487305
    4. 'on' → logprob: -10.875226974487305
    5. 'ne' → logprob: -10.875226974487305
    6. 'tone' → logprob: -11.625226974487305
    7. '(n' → logprob: -11.750226974487305
    8. '(' → logprob: -12.125226974487305
    9. '(one' → logprob: -12.125226974487305
    10. '(r' → logprob: -12.375226974487305

Token 899: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.392202976712724e-06
    2. ' (' → logprob: -12.625006675720215
    3. '(' → logprob: -12.750006675720215
    4. '(nb' → logprob: -16.7500057220459
    5. '(nx' → logprob: -17.3750057220459
    6. '(nn' → logprob: -17.5000057220459
    7. '((' → logprob: -17.6250057220459
    8. '(
' → logprob: -18.2500057220459
    9. '(nt' → logprob: -18.8750057220459
    10. 'n' → logprob: -19.3750057220459

Token 900: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.015845369547605515
    2. '(n' → logprob: -4.39084529876709
    3. ',n' → logprob: -5.76584529876709
    4. ',' → logprob: -9.26584529876709
    5. 'nr' → logprob: -10.64084529876709
    6. 'n' → logprob: -10.89084529876709
    7. ',r' → logprob: -11.39084529876709
    8. 'c' → logprob: -11.64084529876709
    9. '   ' → logprob: -12.01584529876709
    10. ')' → logprob: -12.26584529876709

Token 901: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.012246379628777504
    2. ',' → logprob: -4.512246608734131
    3. ',c' → logprob: -6.762246608734131
    4. ' ,' → logprob: -10.762246131896973
    5. '(n' → logprob: -11.012246131896973
    6. 'n' → logprob: -14.137246131896973
    7. ',
' → logprob: -14.512246131896973
    8. '   ' → logprob: -14.762246131896973
    9. ',(' → logprob: -15.762246131896973
    10. 'nc' → logprob: -15.762246131896973

Token 902: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0683535037969705e-05
    2. ',c' → logprob: -12.00001049041748
    3. 'nc' → logprob: -13.00001049041748
    4. ' c' → logprob: -14.25001049041748
    5. ')c' → logprob: -14.25001049041748
    6. ')' → logprob: -15.62501049041748
    7. ',' → logprob: -16.000011444091797
    8. '(c' → logprob: -16.250011444091797
    9. '	c' → logprob: -16.250011444091797
    10. '```' → logprob: -16.375011444091797

Token 903: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017552643548697233
    2. ')==' → logprob: -6.376755237579346
    3. '==' → logprob: -10.126755714416504
    4. ' )' → logprob: -11.751755714416504
    5. '()' → logprob: -13.001755714416504
    6. ' ==' → logprob: -13.251755714416504
    7. '())' → logprob: -14.876755714416504
    8. ']==' → logprob: -15.126755714416504
    9. '()==' → logprob: -15.126755714416504
    10. '0' → logprob: -17.126754760742188

Token 904: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16075949370861053
    2. ' ==' → logprob: -1.910759449005127
    3. '()==' → logprob: -7.910759449005127
    4. '()' → logprob: -8.910759925842285
    5. '0' → logprob: -11.285759925842285
    6. '=' → logprob: -11.785759925842285
    7. ']==' → logprob: -12.035759925842285
    8. '(' → logprob: -13.035759925842285
    9. ')==' → logprob: -13.160759925842285
    10. ' ' → logprob: -13.410759925842285

Token 905: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. '۰' → logprob: -19.126171112060547
    4. '<|end|>' → logprob: -19.376171112060547
    5. '   ' → logprob: -20.251171112060547
    6. '  ' → logprob: -21.063671112060547
    7. ' ' → logprob: -21.126171112060547
    8. ')' → logprob: -21.438671112060547
    9. '
' → logprob: -21.751171112060547
    10. ' ' → logprob: -21.813671112060547

Token 906: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '۰' → logprob: -19.000001907348633
    4. '<|end|>' → logprob: -19.125001907348633
    5. '   ' → logprob: -21.375001907348633
    6. '０' → logprob: -21.625001907348633
    7. '
' → logprob: -21.875001907348633
    8. '০' → logprob: -21.875001907348633
    9. '00' → logprob: -22.000001907348633
    10. '```' → logprob: -22.625001907348633

Token 907: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6031631827354431
    2. ':
' → logprob: -1.353163242340088
    3. '                   ' → logprob: -1.853163242340088
    4. ':return' → logprob: -3.603163242340088
    5. '                       ' → logprob: -4.978163242340088
    6. '               ' → logprob: -6.103163242340088
    7. 'return' → logprob: -7.228163242340088
    8. '           ' → logprob: -8.72816276550293
    9. ' return' → logprob: -8.85316276550293
    10. '):
' → logprob: -9.10316276550293

Token 908: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001325241639278829
    2. 'return' → logprob: -6.8763251304626465
    3. '                       ' → logprob: -8.376325607299805
    4. ' return' → logprob: -9.751325607299805
    5. '                  ' → logprob: -13.376325607299805
    6. '               ' → logprob: -13.626325607299805
    7. '                           ' → logprob: -14.751325607299805
    8. '           ' → logprob: -15.376325607299805
    9. ':return' → logprob: -15.626325607299805
    10. '                    ' → logprob: -15.876325607299805

Token 909: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3274399936199188
    2. '                   ' → logprob: -1.8274400234222412
    3. ' return' → logprob: -2.827440023422241
    4. '                       ' → logprob: -2.827440023422241
    5. '	return' → logprob: -10.07744026184082
    6. '               ' → logprob: -10.57744026184082
    7. '       ' → logprob: -12.70244026184082
    8. '           ' → logprob: -13.07744026184082
    9. '   ' → logprob: -13.20244026184082
    10. '                           ' → logprob: -13.45244026184082

Token 910: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.004078401252627373
    2. ' True' → logprob: -5.504078388214111
    3. 'False' → logprob: -20.504077911376953
    4. '(True' → logprob: -22.379077911376953
    5. '=True' → logprob: -24.379077911376953
    6. 'true' → logprob: -25.129077911376953
    7. '   ' → logprob: -26.379077911376953
    8. 'Tr' → logprob: -27.129077911376953
    9. 'TRUE' → logprob: -27.629077911376953
    10. '_true' → logprob: -28.004077911376953

Token 911: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.575563020305708e-05
    2. '               ' → logprob: -10.375065803527832
    3. 'return' → logprob: -11.125065803527832
    4. '        ' → logprob: -12.000065803527832
    5. '      ' → logprob: -12.125065803527832
    6. ' return' → logprob: -13.000065803527832
    7. '        
' → logprob: -13.625065803527832
    8. '
' → logprob: -13.750065803527832
    9. '<|end|>' → logprob: -13.875065803527832
    10. '	' → logprob: -14.125065803527832

Token 912: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.129266067640856e-05
    2. 'return' → logprob: -10.875020980834961
    3. '               ' → logprob: -14.000020980834961
    4. '      ' → logprob: -14.625020980834961
    5. ' return' → logprob: -14.625020980834961
    6. '
' → logprob: -16.37502098083496
    7. '   ' → logprob: -16.50002098083496
    8. '```' → logprob: -16.50002098083496
    9. '           ' → logprob: -16.75002098083496
    10. '	' → logprob: -17.00002098083496

Token 913: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03959986940026283
    2. 'return' (adapté à ' return') → logprob: -3.289599895477295
    3. ' return' → logprob: -7.164599895477295
    4. '   ' → logprob: -7.539599895477295
    5. '           ' → logprob: -8.789599418640137
    6. '               ' → logprob: -10.039599418640137
    7. '
' → logprob: -10.414599418640137
    8. '      ' → logprob: -12.039599418640137
    9. '     ' → logprob: -12.164599418640137
    10. '                   ' → logprob: -12.539599418640137

Token 914: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.306760805164231e-05
    2. ' False' → logprob: -11.25001335144043
    3. '(False' → logprob: -20.87501335144043
    4. 'false' → logprob: -24.87501335144043
    5. 'True' → logprob: -25.37501335144043
    6. '=False' → logprob: -26.00001335144043
    7. '   ' → logprob: -26.12501335144043
    8. '.False' → logprob: -26.25001335144043
    9. '_false' → logprob: -26.37501335144043
    10. 'FALSE' → logprob: -26.37501335144043

Token 915: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0531394481658936
    2. 'class' → logprob: -1.0531394481658936
    3. '<|end|>' → logprob: -1.5531394481658936
    4. 'def' → logprob: -2.4281394481658936
    5. '<|end|>' → logprob: -6.928139686584473
    6. ')' → logprob: -8.053139686584473
    7. '
' → logprob: -8.053139686584473
    8. '#' → logprob: -8.053139686584473
    9. ' ' → logprob: -9.428139686584473
    10. 'from' → logprob: -9.553139686584473

Token 916: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.010460853576660156
    2. '<|end|>' → logprob: -4.76046085357666
    3. 'def' → logprob: -6.76046085357666
    4. ' class' → logprob: -8.26046085357666
    5. '<|end|>' → logprob: -8.76046085357666
    6. '#' → logprob: -8.76046085357666
    7. '```' → logprob: -9.88546085357666
    8. '   ' → logprob: -10.26046085357666
    9. 'import' → logprob: -11.88546085357666
    10. '<class' → logprob: -12.13546085357666

Token 917: ' Game' (ID: 7022)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.2771932780742645
    2. ' Game' → logprob: -1.902193307876587
    3. 'Player' → logprob: -3.152193307876587
    4. 'Move' → logprob: -3.777193307876587
    5. ' Player' → logprob: -5.152193069458008
    6. ' Move' → logprob: -5.402193069458008
    7. 'Solver' → logprob: -6.152193069458008
    8. 'Evaluator' → logprob: -6.277193069458008
    9. 'Go' → logprob: -6.527193069458008
    10. 'Capture' → logprob: -6.652193069458008

Token 918: 'State' (ID: 1881)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032742065377533436
    2. ':
' → logprob: -5.753274440765381
    3. 'State' → logprob: -9.753273963928223
    4. ' :' → logprob: -11.628273963928223
    5. '():' → logprob: -11.628273963928223
    6. '(object' → logprob: -11.628273963928223
    7. ':

' → logprob: -13.003273963928223
    8. '():
' → logprob: -13.378273963928223
    9. 'States' → logprob: -13.753273963928223
    10. 'Controller' → logprob: -14.128273963928223

Token 919: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010149452136829495
    2. ':
' → logprob: -7.126014709472656
    3. ' :' → logprob: -8.501014709472656
    4. '(object' → logprob: -13.001014709472656
    5. ':

' → logprob: -13.126014709472656
    6. ' :
' → logprob: -13.751014709472656
    7. '(' → logprob: -14.751014709472656
    8. ':def' → logprob: -14.751014709472656
    9. '():' → logprob: -15.126014709472656
    10. ':
' → logprob: -15.501014709472656

Token 920: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012438016710802913
    2. ' def' → logprob: -7.126243591308594
    3. 'class' → logprob: -8.251243591308594
    4. ' class' → logprob: -8.751243591308594
    5. 'def' → logprob: -12.001243591308594
    6. ':' → logprob: -12.126243591308594
    7. '```' → logprob: -12.126243591308594
    8. '    ' → logprob: -13.626243591308594
    9. '(' → logprob: -15.501243591308594
    10. '   ' → logprob: -15.626243591308594

Token 921: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06203748658299446
    2. ' def' → logprob: -2.812037467956543
    3. '   ' → logprob: -9.937037467956543
    4. 'class' → logprob: -10.937037467956543
    5. '__' → logprob: -12.687037467956543
    6. '	def' → logprob: -15.312037467956543
    7. ' __' → logprob: -15.562037467956543
    8. '```' → logprob: -15.812037467956543
    9. ' ' → logprob: -16.93703842163086
    10. '  ' → logprob: -18.18703842163086

Token 922: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.020682023838162422
    2. '__' → logprob: -4.020681858062744
    3. ' def' → logprob: -6.270681858062744
    4. 'init' → logprob: -8.395682334899902
    5. '_init' → logprob: -8.520682334899902
    6. 'def' → logprob: -9.145682334899902
    7. ' init' → logprob: -9.395682334899902
    8. '```' → logprob: -10.895682334899902
    9. '___' → logprob: -13.770682334899902
    10. ' ' → logprob: -14.145682334899902

Token 923: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00015276329941116273
    2. '__' → logprob: -10.125152587890625
    3. 'def' → logprob: -10.125152587890625
    4. 'Init' → logprob: -10.625152587890625
    5. 'it' → logprob: -10.875152587890625
    6. '```' → logprob: -11.500152587890625
    7. 'class' → logprob: -11.750152587890625
    8. 'int' → logprob: -12.375152587890625
    9. '_init' → logprob: -12.750152587890625
    10. ' init' → logprob: -13.250152587890625

Token 924: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0004976287018507719
    2. '(self' → logprob: -8.000497817993164
    3. '__' → logprob: -8.750497817993164
    4. '_(' → logprob: -13.125497817993164
    5. '__(
' → logprob: -13.500497817993164
    6. ' (' → logprob: -15.250497817993164
    7. 'self' → logprob: -16.625497817993164
    8. '__((' → logprob: -17.250497817993164
    9. '__('' → logprob: -17.750497817993164
    10. '(' → logprob: -17.750497817993164

Token 925: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0087516784551553e-05
    2. ' self' → logprob: -11.62501049041748
    3. ')' → logprob: -14.75001049041748
    4. ',' → logprob: -15.12501049041748
    5. '   ' → logprob: -16.125009536743164
    6. '0' → logprob: -16.500009536743164
    7. '
' → logprob: -16.500009536743164
    8. '(self' → logprob: -16.875009536743164
    9. 'Self' → logprob: -18.250009536743164
    10. '):
' → logprob: -18.875009536743164

Token 926: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001719923340715468
    2. 'self' → logprob: -6.376719951629639
    3. '(self' → logprob: -11.87671947479248
    4. ',self' → logprob: -12.12671947479248
    5. ' ,' → logprob: -13.25171947479248
    6. '):
' → logprob: -14.62671947479248
    7. ')' → logprob: -14.62671947479248
    8. ' (' → logprob: -14.75171947479248
    9. ',size' → logprob: -14.75171947479248
    10. ' self' → logprob: -14.75171947479248

Token 927: ' board' (ID: 6796)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.10417027026414871
    2. 'board' → logprob: -2.354170322418213
    3. 'self' → logprob: -6.104170322418213
    4. ' size' → logprob: -6.729170322418213
    5. ' board' → logprob: -7.854170322418213
    6. ')' → logprob: -10.354169845581055
    7. 'Board' → logprob: -10.479169845581055
    8. '3' → logprob: -11.229169845581055
    9. '   ' → logprob: -11.354169845581055
    10. '7' → logprob: -11.979169845581055

Token 928: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3871188461780548
    2. '):' → logprob: -1.1371188163757324
    3. '):
' → logprob: -8.38711929321289
    4. ')' → logprob: -11.26211929321289
    5. ' ):' → logprob: -12.51211929321289
    6. ':' → logprob: -13.51211929321289
    7. '   ' → logprob: -14.63711929321289
    8. '),' → logprob: -14.63711929321289
    9. ',
' → logprob: -14.76211929321289
    10. ' ,' → logprob: -15.51211929321289

Token 929: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.6318848133087158
    2. 'player' → logprob: -1.1318848133087158
    3. 'turn' → logprob: -2.881884813308716
    4. 'next' → logprob: -3.506884813308716
    5. ' current' → logprob: -3.631884813308716
    6. 'to' → logprob: -4.006884574890137
    7. ' player' → logprob: -5.131884574890137
    8. ' turn' → logprob: -5.756884574890137
    9. ' next' → logprob: -6.256884574890137
    10. ' to' → logprob: -6.256884574890137

Token 930: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -2.2246291337069124e-05
    2. '_st' → logprob: -11.875021934509277
    3. '_turn' → logprob: -12.250021934509277
    4. '_color' → logprob: -12.500021934509277
    5. '_move' → logprob: -13.000021934509277
    6. '_token' → logprob: -13.125021934509277
    7. 'player' → logprob: -13.250021934509277
    8. 'Player' → logprob: -16.000022888183594
    9. ' player' → logprob: -16.375022888183594
    10. '_side' → logprob: -16.625022888183594

Token 931: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17253822088241577
    2. '):
' → logprob: -2.0475382804870605
    3. '=' → logprob: -3.6725382804870605
    4. ',' → logprob: -5.5475382804870605
    5. '):
' → logprob: -10.047537803649902
    6. ':' → logprob: -11.172537803649902
    7. ' ):' → logprob: -11.172537803649902
    8. '_id' → logprob: -11.922537803649902
    9. ')' → logprob: -12.047537803649902
    10. '1' → logprob: -12.297537803649902

Token 932: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.3954463510308415e-05
    2. 'self' → logprob: -10.250054359436035
    3. ',' → logprob: -11.250054359436035
    4. ' self' → logprob: -12.750054359436035
    5. '   ' → logprob: -13.750054359436035
    6. ':' → logprob: -13.750054359436035
    7. '(self' → logprob: -15.250054359436035
    8. '```' → logprob: -15.625054359436035
    9. '           ' → logprob: -17.50005340576172
    10. '      ' → logprob: -17.62505340576172

Token 933: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0007200572872534394
    2. ' self' → logprob: -7.250720024108887
    3. '       ' → logprob: -11.500720024108887
    4. '	self' → logprob: -18.875720977783203
    5. '(self' → logprob: -19.250720977783203
    6. '   ' → logprob: -20.125720977783203
    7. 'import' → logprob: -20.750720977783203
    8. '#' → logprob: -21.625720977783203
    9. '[self' → logprob: -22.125720977783203
    10. '=self' → logprob: -23.375720977783203

Token 934: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -0.014192530885338783
    2. '.' → logprob: -4.264192581176758
    3. ' .' → logprob: -10.764192581176758
    4. '.Board' → logprob: -12.639192581176758
    5. '.current' → logprob: -12.764192581176758
    6. '.game' → logprob: -14.764192581176758
    7. '	board' → logprob: -15.014192581176758
    8. 'board' → logprob: -15.264192581176758
    9. '.bo' → logprob: -15.389192581176758
    10. '.player' → logprob: -15.514192581176758

Token 935: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326204538345337
    2. '=' → logprob: -1.3132619857788086
    3. ',' → logprob: -15.438261985778809
    4. ' ' → logprob: -16.563262939453125
    5. ' =
' → logprob: -17.063262939453125
    6. '   ' → logprob: -17.313262939453125
    7. '=
' → logprob: -18.313262939453125
    8. '    ' → logprob: -18.438262939453125
    9. '=

' → logprob: -18.688262939453125
    10. '  ' → logprob: -19.188262939453125

Token 936: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.10021130740642548
    2. ' board' → logprob: -2.3502113819122314
    3. '	board' → logprob: -13.100211143493652
    4. ' ' → logprob: -14.600211143493652
    5. '(board' → logprob: -14.600211143493652
    6. '   ' → logprob: -14.600211143493652
    7. 'copy' → logprob: -14.850211143493652
    8. '.board' → logprob: -15.475211143493652
    9. '    ' → logprob: -16.35021209716797
    10. 'Board' → logprob: -16.35021209716797

Token 937: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026502318680286407
    2. '
' → logprob: -3.7765023708343506
    3. ',' → logprob: -6.1515021324157715
    4. '        
' → logprob: -7.6515021324157715
    5. ',
' → logprob: -8.02650260925293
    6. 'self' → logprob: -9.15150260925293
    7. '<|end|>' → logprob: -9.15150260925293
    8. 'current' → logprob: -10.65150260925293
    9. '    
' → logprob: -10.90150260925293
    10. '   ' → logprob: -10.90150260925293

Token 938: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01327317114919424
    2. 'self' → logprob: -4.513273239135742
    3. ' self' → logprob: -6.138273239135742
    4. '
' → logprob: -9.888273239135742
    5. '   ' → logprob: -11.888273239135742
    6. ',' → logprob: -12.763273239135742
    7. '	self' → logprob: -13.513273239135742
    8. '(self' → logprob: -14.888273239135742
    9. ' ' → logprob: -15.263273239135742
    10. '	' → logprob: -15.388273239135742

Token 939: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00034356804098933935
    2. 'current' → logprob: -8.000343322753906
    3. ' self' → logprob: -11.875343322753906
    4. '       ' → logprob: -14.000343322753906
    5. '   ' → logprob: -15.000343322753906
    6. ' current' → logprob: -17.625343322753906
    7. '	self' → logprob: -18.750343322753906
    8. '
' → logprob: -19.375343322753906
    9. 'Current' → logprob: -19.500343322753906
    10. '(self' → logprob: -20.250343322753906

Token 940: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.006875925697386265
    2. '.' → logprob: -5.006875991821289
    3. 'current' → logprob: -8.756875991821289
    4. '.user' → logprob: -14.131875991821289
    5. '.player' → logprob: -14.256875991821289
    6. ' .' → logprob: -14.256875991821289
    7. ' current' → logprob: -15.131875991821289
    8. ',current' → logprob: -15.506875991821289
    9. '=current' → logprob: -16.38187599182129
    10. '	current' → logprob: -16.38187599182129

Token 941: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -7.374227425316349e-05
    2. '_' → logprob: -9.750073432922363
    3. '_user' → logprob: -12.000073432922363
    4. ' _' → logprob: -12.375073432922363
    5. '_PLAYER' → logprob: -12.750073432922363
    6. '_token' → logprob: -14.125073432922363
    7. 'Player' → logprob: -15.000073432922363
    8. '_Player' → logprob: -15.000073432922363
    9. 'player' → logprob: -15.750073432922363
    10. '_turn' → logprob: -17.00007438659668

Token 942: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029756737872958183
    2. '=' → logprob: -3.529756784439087
    3. ' ' → logprob: -12.029756546020508
    4. ',' → logprob: -16.029756546020508
    5. ')' → logprob: -16.779756546020508
    6. ' =
' → logprob: -16.904756546020508
    7. '<|end|>' → logprob: -17.279756546020508
    8. '_' → logprob: -17.529756546020508
    9. ' ,' → logprob: -17.654756546020508
    10. 'space' → logprob: -18.279756546020508

Token 943: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.04859452322125435
    2. ' current' → logprob: -3.0485944747924805
    3. '1' → logprob: -12.29859447479248
    4. ' ' → logprob: -13.67359447479248
    5. '(current' → logprob: -13.79859447479248
    6. '0' → logprob: -16.048595428466797
    7. '	current' → logprob: -16.173595428466797
    8. '$current' → logprob: -16.673595428466797
    9. 'cur' → logprob: -16.798595428466797
    10. '.current' → logprob: -17.423595428466797

Token 944: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -3.173704271830502e-06
    2. '_' → logprob: -13.87500286102295
    3. '_PLAYER' → logprob: -14.12500286102295
    4. 'player' → logprob: -14.50000286102295
    5. '_token' → logprob: -14.75000286102295
    6. 'Player' → logprob: -15.12500286102295
    7. ' _' → logprob: -16.875003814697266
    8. '_Player' → logprob: -17.000003814697266
    9. '_user' → logprob: -17.125003814697266
    10. ' player' → logprob: -17.500003814697266

Token 945: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17964382469654083
    2. '       ' → logprob: -2.6796438694000244
    3. '
' → logprob: -2.9296438694000244
    4. '<|end|>' → logprob: -3.1796438694000244
    5. '<|end|>' → logprob: -7.929643630981445
    6. '    
' → logprob: -8.304643630981445
    7. 'def' → logprob: -9.429643630981445
    8. '        
' → logprob: -10.179643630981445
    9. ',' → logprob: -10.554643630981445
    10. '	def' → logprob: -11.179643630981445

Token 946: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018593916902318597
    2. 'def' → logprob: -6.876859188079834
    3. '
' → logprob: -7.376859188079834
    4. ' def' → logprob: -8.626859664916992
    5. '    
' → logprob: -11.626859664916992
    6. '       ' → logprob: -13.001859664916992
    7. ',' → logprob: -13.251859664916992
    8. ' ' → logprob: -13.376859664916992
    9. '	def' → logprob: -13.626859664916992
    10. 'class' → logprob: -13.751859664916992

Token 947: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001953018014319241
    2. ' def' → logprob: -6.251953125
    3. '   ' → logprob: -10.626953125
    4. '	def' → logprob: -16.626953125
    5. '
' → logprob: -17.001953125
    6. 'de' → logprob: -18.251953125
    7. ' ' → logprob: -18.501953125
    8. 'd' → logprob: -19.126953125
    9. 'class' → logprob: -20.001953125
    10. '    
' → logprob: -20.001953125

Token 948: ' put' (ID: 3006)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.20625527203083038
    2. ' copy' → logprob: -2.2062551975250244
    3. 'make' → logprob: -3.4562551975250244
    4. 'play' → logprob: -4.7062554359436035
    5. 'possible' → logprob: -4.7062554359436035
    6. 'get' → logprob: -5.3312554359436035
    7. 'apply' → logprob: -5.4562554359436035
    8. ' make' → logprob: -5.7062554359436035
    9. ' possible' → logprob: -5.8312554359436035
    10. 'valid' → logprob: -6.5812554359436035

Token 949: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.35325324535369873
    2. '_' → logprob: -1.2282532453536987
    3. '_s' → logprob: -6.353253364562988
    4. '(self' → logprob: -6.478253364562988
    5. '_piece' → logprob: -7.603253364562988
    6. '(' → logprob: -8.478253364562988
    7. '_token' → logprob: -8.853253364562988
    8. '_(' → logprob: -9.103253364562988
    9. ' _' → logprob: -9.103253364562988
    10. '(st' → logprob: -9.353253364562988

Token 950: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -8.423219696851447e-05
    2. '_one' → logprob: -9.625083923339844
    3. 'One' → logprob: -11.250083923339844
    4. 'ones' → logprob: -13.750083923339844
    5. ' one' → logprob: -14.000083923339844
    6. 'o' → logprob: -14.375083923339844
    7. 'on' → logprob: -14.750083923339844
    8. '```' → logprob: -14.875083923339844
    9. '(one' → logprob: -15.125083923339844
    10. 'ONE' → logprob: -15.125083923339844

Token 951: '_and' (ID: 18645)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.029826154932379723
    2. '(' → logprob: -3.5298261642456055
    3. ' (' → logprob: -9.904826164245605
    4. '(s' → logprob: -10.779826164245605
    5. '(r' → logprob: -12.779826164245605
    6. '(
' → logprob: -14.029826164245605
    7. 'self' → logprob: -14.029826164245605
    8. '(sel' → logprob: -14.779826164245605
    9. '(se' → logprob: -17.15482521057129
    10. '   ' → logprob: -17.52982521057129

Token 952: '_score' (ID: 22555)
  Prédit: '_remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_remove' → logprob: -0.19017471373081207
    2. 'remove' → logprob: -2.5651748180389404
    3. '_capture' → logprob: -3.1901748180389404
    4. '_res' → logprob: -3.5651748180389404
    5. '_update' → logprob: -4.690174579620361
    6. '_return' → logprob: -5.565174579620361
    7. '_process' → logprob: -5.690174579620361
    8. '_get' → logprob: -5.940174579620361
    9. '_check' → logprob: -5.940174579620361
    10. 'resolve' → logprob: -6.315174579620361

Token 953: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00010020548506872728
    2. '(' → logprob: -9.250100135803223
    3. ' (' → logprob: -13.000100135803223
    4. 'self' → logprob: -13.625100135803223
    5. '(s' → logprob: -14.625100135803223
    6. '(sel' → logprob: -17.25010108947754
    7. '(
' → logprob: -17.62510108947754
    8. '(r' → logprob: -18.25010108947754
    9. '   ' → logprob: -18.50010108947754
    10. '(se' → logprob: -18.75010108947754

Token 954: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001089735422283411
    2. '(' → logprob: -7.126089572906494
    3. ' (' → logprob: -8.376090049743652
    4. 'self' → logprob: -10.126090049743652
    5. ')(' → logprob: -11.876090049743652
    6. ')' → logprob: -12.751090049743652
    7. '(s' → logprob: -13.001090049743652
    8. '(r' → logprob: -14.126090049743652
    9. '(
' → logprob: -14.376090049743652
    10. ' self' → logprob: -14.376090049743652

Token 955: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02195822261273861
    2. 'self' → logprob: -4.021958351135254
    3. ' r' → logprob: -5.646958351135254
    4. ' self' → logprob: -8.521958351135254
    5. 'row' → logprob: -9.771958351135254
    6. '   ' → logprob: -12.271958351135254
    7. 'pos' → logprob: -12.646958351135254
    8. 'position' → logprob: -12.646958351135254
    9. 'move' → logprob: -13.521958351135254
    10. ' row' → logprob: -13.896958351135254

Token 956: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019710339256562293
    2. ',c' → logprob: -9.125197410583496
    3. ' ,' → logprob: -9.375197410583496
    4. ',r' → logprob: -13.500197410583496
    5. '‌,' → logprob: -14.625197410583496
    6. ',p' → logprob: -15.375197410583496
    7. ',s' → logprob: -16.00019645690918
    8. ')' → logprob: -16.12519645690918
    9. ',b' → logprob: -16.12519645690918
    10. ',n' → logprob: -16.25019645690918

Token 957: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.029750484973192215
    2. ' c' → logprob: -3.5297505855560303
    3. ' ' → logprob: -17.65475082397461
    4. '   ' → logprob: -18.52975082397461
    5. ')c' → logprob: -18.77975082397461
    6. '	c' → logprob: -19.02975082397461
    7. '<|end|>' → logprob: -19.27975082397461
    8. '  ' → logprob: -19.52975082397461
    9. '_c' → logprob: -20.27975082397461
    10. 'col' → logprob: -20.65475082397461

Token 958: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -8.2994620242971e-06
    2. ' ,' → logprob: -11.750008583068848
    3. '   ' → logprob: -16.62500762939453
    4. '):' → logprob: -16.62500762939453
    5. ',self' → logprob: -17.12500762939453
    6. ',r' → logprob: -17.87500762939453
    7. 'self' → logprob: -18.00000762939453
    8. ',s' → logprob: -18.50000762939453
    9. ')' → logprob: -18.75000762939453
    10. ',
' → logprob: -18.75000762939453

Token 959: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006575119914487004
    2. '
' → logprob: -8.625657081604004
    3. ':' → logprob: -9.125657081604004
    4. '```' → logprob: -9.125657081604004
    5. 'self' → logprob: -10.250657081604004
    6. ':
' → logprob: -10.250657081604004
    7. ',' → logprob: -10.250657081604004
    8. '#' → logprob: -10.375657081604004
    9. '        
' → logprob: -10.375657081604004
    10. '(self' → logprob: -11.000657081604004

Token 960: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.41097408533096313
    2. ' self' → logprob: -1.2859740257263184
    3. ' if' → logprob: -3.7859740257263184
    4. '       ' → logprob: -4.035974025726318
    5. 'if' → logprob: -4.410974025726318
    6. ' new' → logprob: -5.160974025726318
    7. 'new' → logprob: -6.160974025726318
    8. '#' (adapté à ' #') → logprob: -9.410974502563477
    9. 'assert' → logprob: -9.535974502563477
    10. ' #' → logprob: -10.535974502563477

Token 961: ' Put' (ID: 16924)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07246559858322144
    2. 'if' → logprob: -3.447465658187866
    3. ' self' → logprob: -3.697465658187866
    4. ' if' → logprob: -5.072465419769287
    5. 'new' → logprob: -5.697465419769287
    6. ' new' → logprob: -6.822465419769287
    7. '#' → logprob: -6.947465419769287
    8. '       ' → logprob: -6.947465419769287
    9. 'board' → logprob: -8.322465896606445
    10. 'stone' → logprob: -9.072465896606445

Token 962: ' current' (ID: 2208)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4932525157928467
    2. ' self' → logprob: -2.4932525157928467
    3. ' stone' → logprob: -2.4932525157928467
    4. 'stone' → logprob: -2.6182525157928467
    5. '_st' → logprob: -2.7432525157928467
    6. '_' → logprob: -3.3682525157928467
    7. ' a' → logprob: -3.3682525157928467
    8. ' ' → logprob: -4.618252754211426
    9. '(self' → logprob: -6.118252754211426
    10. ' the' → logprob: -6.618252754211426

Token 963: ' player's' (ID: 107234)
  Prédit: '_player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_player' → logprob: -0.19761978089809418
    2. '_st' → logprob: -1.8226197957992554
    3. 'player' → logprob: -4.822619915008545
    4. '_' → logprob: -4.947619915008545
    5. 'self' → logprob: -6.947619915008545
    6. ' player' → logprob: -7.447619915008545
    7. 'stone' → logprob: -7.947619915008545
    8. 'Player' → logprob: -8.572619438171387
    9. '   ' → logprob: -9.197619438171387
    10. ' stone' → logprob: -9.697619438171387

Token 964: ' stone' (ID: 14352)
  Prédit: 'stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stone' → logprob: -0.5231661796569824
    2. ' stone' → logprob: -0.8981661796569824
    3. 'Stone' → logprob: -10.89816665649414
    4. ' ' → logprob: -11.77316665649414
    5. '_st' → logprob: -12.27316665649414
    6. ' Stone' → logprob: -13.14816665649414
    7. '_' → logprob: -13.64816665649414
    8. '"' → logprob: -13.64816665649414
    9. 'STONE' → logprob: -13.89816665649414
    10. 'st' → logprob: -13.89816665649414

Token 965: ' at' (ID: 540)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.1153651624917984
    2. '(self' → logprob: -2.9903652667999268
    3. '       ' → logprob: -3.6153652667999268
    4. ' (' → logprob: -3.8653652667999268
    5. ',' → logprob: -5.490365028381348
    6. '(' → logprob: -5.990365028381348
    7. ' at' → logprob: -5.990365028381348
    8. '
' → logprob: -7.740365028381348
    9. ' and' → logprob: -8.240365028381348
    10. '        
' → logprob: -8.365365028381348

Token 966: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7275766730308533
    2. ' r' → logprob: -0.9775766730308533
    3. '(r' → logprob: -1.977576732635498
    4. ' (' → logprob: -6.102576732635498
    5. ' the' → logprob: -9.97757625579834
    6. ' ' → logprob: -12.47757625579834
    7. 'the' → logprob: -12.47757625579834
    8. '(' → logprob: -13.22757625579834
    9. 'c' → logprob: -14.10257625579834
    10. ')' → logprob: -14.72757625579834

Token 967: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.011048289015889168
    2. ' r' → logprob: -4.511048316955566
    3. ')' → logprob: -15.261048316955566
    4. '_r' → logprob: -15.636048316955566
    5. '	r' → logprob: -17.26104736328125
    6. ',r' → logprob: -17.26104736328125
    7. ' ' → logprob: -17.76104736328125
    8. ',' → logprob: -18.01104736328125
    9. '(r' → logprob: -19.88604736328125
    10. ' )' → logprob: -20.38604736328125

Token 968: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014204525388777256
    2. ',c' → logprob: -4.264204502105713
    3. ' ,' → logprob: -10.139204978942871
    4. ',r' → logprob: -13.514204978942871
    5. ',
' → logprob: -16.389204025268555
    6. ' ' → logprob: -17.889204025268555
    7. ',current' → logprob: -18.014204025268555
    8. ',

' → logprob: -19.139204025268555
    9. ',col' → logprob: -19.139204025268555
    10. ',column' → logprob: -19.389204025268555

Token 969: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04877256229519844
    2. ')
' → logprob: -3.0487725734710693
    3. '       ' → logprob: -9.548772811889648
    4. '),' → logprob: -9.548772811889648
    5. ')
' → logprob: -11.048772811889648
    6. ' )' → logprob: -11.673772811889648
    7. ')

' → logprob: -11.923772811889648
    8. ',' → logprob: -12.298772811889648
    9. ').' → logprob: -13.048772811889648
    10. ' )
' → logprob: -13.048772811889648

Token 970: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008565994910895824
    2. '
' → logprob: -4.883565902709961
    3. '        
' → logprob: -7.883565902709961
    4. ',' → logprob: -8.508565902709961
    5. 'self' → logprob: -8.508565902709961
    6. ' and' → logprob: -9.883565902709961
    7. '```' → logprob: -10.508565902709961
    8. ' if' → logprob: -10.633565902709961
    9. ':' → logprob: -11.133565902709961
    10. ' self' → logprob: -11.508565902709961

Token 971: ' new' (ID: 620)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5890698432922363
    2. '       ' → logprob: -1.4640698432922363
    3. ' self' → logprob: -1.7140698432922363
    4. '
' → logprob: -3.5890698432922363
    5. ' if' → logprob: -5.464069843292236
    6. 'if' → logprob: -6.714069843292236
    7. '        
' → logprob: -8.089069366455078
    8. ' 
' → logprob: -9.214069366455078
    9. 'assert' → logprob: -9.464069366455078
    10. '```' → logprob: -9.589069366455078

Token 972: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -0.2525007426738739
    2. '_' → logprob: -1.5025007724761963
    3. '.board' → logprob: -8.252500534057617
    4. '.' → logprob: -9.252500534057617
    5. ' board' → logprob: -10.002500534057617
    6. 'board' → logprob: -10.627500534057617
    7. '_game' → logprob: -10.752500534057617
    8. ' _' → logprob: -10.877500534057617
    9. '_bo' → logprob: -11.127500534057617
    10. '_space' → logprob: -11.127500534057617

Token 973: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08713679760694504
    2. '=' → logprob: -2.587136745452881
    3. '.set' → logprob: -5.462136745452881
    4. '.' → logprob: -5.587136745452881
    5. '=set' → logprob: -9.212137222290039
    6. '.put' → logprob: -9.587137222290039
    7. '.=' → logprob: -10.212137222290039
    8. '.copy' → logprob: -11.587137222290039
    9. ' .' → logprob: -12.212137222290039
    10. ' ' → logprob: -13.712137222290039

Token 974: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10020678490400314
    2. ' self' → logprob: -2.3502068519592285
    3. '(self' → logprob: -16.72520637512207
    4. '=self' → logprob: -17.10020637512207
    5. 'Board' → logprob: -18.10020637512207
    6. '	self' → logprob: -18.47520637512207
    7. '       ' → logprob: -18.60020637512207
    8. 'copy' → logprob: -19.35020637512207
    9. ' deepcopy' → logprob: -19.35020637512207
    10. 's' → logprob: -19.60020637512207

Token 975: '.board' (ID: 50264)
  Prédit: '.copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.copy' → logprob: -0.16296309232711792
    2. '.board' → logprob: -1.9129631519317627
    3. '.' → logprob: -5.912962913513184
    4. ' .' → logprob: -10.412962913513184
    5. '.Board' → logprob: -15.412962913513184
    6. 'copy' → logprob: -15.662962913513184
    7. '.Copy' → logprob: -16.1629638671875
    8. '.code' → logprob: -16.2879638671875
    9. 'board' → logprob: -16.6629638671875
    10. '.c' → logprob: -16.9129638671875

Token 976: '.copy' (ID: 22925)
  Prédit: '.copy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.copy' → logprob: -0.00011129142512800172
    2. '.' → logprob: -9.12511157989502
    3. ' .' → logprob: -13.25011157989502
    4. 'copy' → logprob: -15.37511157989502
    5. '.deepcopy' → logprob: -15.50011157989502
    6. '.
' → logprob: -16.750110626220703
    7. '
' → logprob: -17.875110626220703
    8. '.clone' → logprob: -18.375110626220703
    9. '.Copy' → logprob: -19.375110626220703
    10. ' copy' → logprob: -19.375110626220703

Token 977: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00536360265687108
    2. '
' → logprob: -6.005363464355469
    3. '()' → logprob: -7.255363464355469
    4. 'new' → logprob: -7.505363464355469
    5. '()
' → logprob: -7.630363464355469
    6. '        
' → logprob: -7.755363464355469
    7. '<|end|>' → logprob: -8.005363464355469
    8. ')' → logprob: -9.255363464355469
    9. '   ' → logprob: -9.755363464355469
    10. 'newline' → logprob: -10.255363464355469

Token 978: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41671550273895264
    2. 'new' → logprob: -1.1667155027389526
    3. ' new' → logprob: -3.541715621948242
    4. '        
' → logprob: -8.791715621948242
    5. '[new' → logprob: -9.416715621948242
    6. '(new' → logprob: -9.666715621948242
    7. '
' → logprob: -10.166715621948242
    8. '   ' → logprob: -10.291715621948242
    9. ')new' → logprob: -10.666715621948242
    10. '.new' → logprob: -11.666715621948242

Token 979: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.000431861262768507
    2. ' new' → logprob: -7.750432014465332
    3. '       ' → logprob: -13.750432014465332
    4. '        
' → logprob: -17.375431060791016
    5. '
' → logprob: -17.750431060791016
    6. '	new' → logprob: -18.875431060791016
    7. '   ' → logprob: -18.875431060791016
    8. '```' → logprob: -20.125431060791016
    9. '_new' → logprob: -20.500431060791016
    10. '[new' → logprob: -20.625431060791016

Token 980: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -5.824579784530215e-05
    2. '_' → logprob: -10.0000581741333
    3. '_player' → logprob: -12.7500581741333
    4. 'board' → logprob: -13.1250581741333
    5. 'Board' → logprob: -13.2500581741333
    6. '_line' → logprob: -13.8750581741333
    7. '.' → logprob: -14.0000581741333
    8. ' _' → logprob: -14.3750581741333
    9. '_space' → logprob: -14.5000581741333
    10. '_bo' → logprob: -14.6250581741333

Token 981: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -8.292095299111679e-05
    2. '.' → logprob: -9.500082969665527
    3. ' .' → logprob: -12.125082969665527
    4. '.setdefault' → logprob: -13.500082969665527
    5. '.put' → logprob: -14.125082969665527
    6. '   ' → logprob: -15.250082969665527
    7. ').' → logprob: -16.75008201599121
    8. '>.' → logprob: -17.75008201599121
    9. '.s' → logprob: -17.87508201599121
    10. '```' → logprob: -18.37508201599121

Token 982: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -1.9361264946837764e-07
    2. '_s' → logprob: -16.5
    3. 'st' → logprob: -16.875
    4. '_' → logprob: -17.375
    5. '_(' → logprob: -18.5
    6. 's' → logprob: -18.625
    7. 'stone' → logprob: -19.125
    8. '_sp' → logprob: -19.25
    9. 't' → logprob: -19.375
    10. ' _' → logprob: -19.375

Token 983: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.00010628487507347018
    2. '_one' → logprob: -9.250105857849121
    3. 'One' → logprob: -13.500105857849121
    4. 'ne' → logprob: -13.500105857849121
    5. 'r' → logprob: -13.625105857849121
    6. 'stone' → logprob: -13.750105857849121
    7. '_' → logprob: -14.000105857849121
    8. 'on' → logprob: -14.250105857849121
    9. '(one' → logprob: -14.625105857849121
    10. 'rone' → logprob: -14.750105857849121

Token 984: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0002614550176076591
    2. '(' → logprob: -8.250261306762695
    3. '(
' → logprob: -15.875261306762695
    4. ' (' → logprob: -17.000261306762695
    5. 'r' → logprob: -20.250261306762695
    6. '(R' → logprob: -20.750261306762695
    7. ' ' → logprob: -20.875261306762695
    8. '((' → logprob: -21.500261306762695
    9. '(

' → logprob: -21.625261306762695
    10. '(row' → logprob: -21.875261306762695

Token 985: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10025681555271149
    2. ',c' → logprob: -2.35025691986084
    3. ' ,' → logprob: -10.10025691986084
    4. ',
' → logprob: -12.72525691986084
    5. 'c' → logprob: -14.10025691986084
    6. ',current' → logprob: -14.35025691986084
    7. ',

' → logprob: -14.60025691986084
    8. ',C' → logprob: -14.85025691986084
    9. ' ' → logprob: -14.85025691986084
    10. ',r' → logprob: -14.97525691986084

Token 986: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019817621796391904
    2. ',self' → logprob: -8.625198364257812
    3. ',new' → logprob: -11.250198364257812
    4. ' ,' → logprob: -12.125198364257812
    5. 'self' → logprob: -16.000198364257812
    6. ',
' → logprob: -17.125198364257812
    7. ',current' → logprob: -17.750198364257812
    8. ')' → logprob: -17.875198364257812
    9. ',user' → logprob: -18.250198364257812
    10. ',s' → logprob: -18.375198364257812

Token 987: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.796184723294573e-06
    2. ' self' → logprob: -12.125005722045898
    3. '       ' → logprob: -15.000005722045898
    4. '1' → logprob: -16.7500057220459
    5. '   ' → logprob: -17.2500057220459
    6. '(self' → logprob: -17.6250057220459
    7. '[self' → logprob: -17.7500057220459
    8. '           ' → logprob: -18.5000057220459
    9. '=self' → logprob: -18.6250057220459
    10. '	self' → logprob: -19.5000057220459

Token 988: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -7.517272024415433e-05
    2. 'current' → logprob: -9.500075340270996
    3. '.' → logprob: -15.625075340270996
    4. 'urrent' → logprob: -16.87507438659668
    5. '=current' → logprob: -17.50007438659668
    6. '.cur' → logprob: -18.00007438659668
    7. ' current' → logprob: -18.00007438659668
    8. '	current' → logprob: -18.37507438659668
    9. '.Current' → logprob: -19.00007438659668
    10. '   ' → logprob: -19.25007438659668

Token 989: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -1.3856492842023727e-06
    2. 'player' → logprob: -14.500000953674316
    3. '_PLAYER' → logprob: -15.000000953674316
    4. 'Player' → logprob: -16.250001907348633
    5. '_user' → logprob: -16.375001907348633
    6. '_token' → logprob: -16.500001907348633
    7. ' player' → logprob: -16.500001907348633
    8. '_' → logprob: -18.125001907348633
    9. ' _' → logprob: -18.500001907348633
    10. '_play' → logprob: -18.625001907348633

Token 990: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021160438656806946
    2. ')
' → logprob: -3.896160364151001
    3. ' )' → logprob: -7.52116060256958
    4. ' )
' → logprob: -10.021160125732422
    5. ')

' → logprob: -11.021160125732422
    6. ')
' → logprob: -11.146160125732422
    7. ')`' → logprob: -14.771160125732422
    8. ')`
' → logprob: -15.646160125732422
    9. ')#' → logprob: -15.896160125732422
    10. '),' → logprob: -15.896160125732422

Token 991: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002509687910787761
    2. '<|end|>' → logprob: -9.000250816345215
    3. '
' → logprob: -9.500250816345215
    4. '        
' → logprob: -10.750250816345215
    5. '   ' → logprob: -11.375250816345215
    6. '           ' → logprob: -12.625250816345215
    7. ',' → logprob: -13.000250816345215
    8. ' new' → logprob: -13.000250816345215
    9. '<|end|>' → logprob: -13.250250816345215
    10. '#' → logprob: -13.375250816345215

Token 992: ' #' (ID: 1069)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.7386888265609741
    2. 'judge' → logprob: -0.7386888265609741
    3. 'rm' → logprob: -4.238688945770264
    4. 'r' → logprob: -4.363688945770264
    5. '   ' → logprob: -4.738688945770264
    6. 'remove' → logprob: -5.488688945770264
    7. '       ' → logprob: -7.113688945770264
    8. 'rg' → logprob: -7.113688945770264
    9. 'removed' → logprob: -7.613688945770264
    10. 'jr' → logprob: -8.238688468933105

Token 993: ' Check' (ID: 6208)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.7552205920219421
    2. 'judge' → logprob: -0.8802205920219421
    3. 'remove' → logprob: -3.255220651626587
    4. 'new' → logprob: -3.380220651626587
    5. 'r' → logprob: -3.880220651626587
    6. 'rm' → logprob: -4.630220413208008
    7. '#' → logprob: -5.505220413208008
    8. 'rg' → logprob: -6.630220413208008
    9. 'removed' → logprob: -6.755220413208008
    10. 'self' → logprob: -6.880220413208008

Token 994: ' removable' (ID: 74952)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.17968565225601196
    2. ' for' → logprob: -2.429685592651367
    3. 'for' → logprob: -3.054685592651367
    4. ' removal' → logprob: -4.179685592651367
    5. ' groups' → logprob: -5.054685592651367
    6. 'groups' → logprob: -5.179685592651367
    7. ' remov' → logprob: -7.179685592651367
    8. '_rem' → logprob: -7.554685592651367
    9. 'removed' → logprob: -8.429685592651367
    10. ' removable' → logprob: -8.554685592651367

Token 995: ' groups' (ID: 8896)
  Prédit: '_groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -0.02475370280444622
    2. 'groups' → logprob: -3.7747538089752197
    3. ' =' → logprob: -7.024753570556641
    4. '=' → logprob: -7.774753570556641
    5. ' groups' → logprob: -9.02475357055664
    6. 'roups' → logprob: -9.77475357055664
    7. 'Groups' → logprob: -11.52475357055664
    8. 's' → logprob: -12.02475357055664
    9. '(groups' → logprob: -13.52475357055664
    10. '.groups' → logprob: -13.77475357055664

Token 996: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053271595388650894
    2. '
' → logprob: -3.053271532058716
    3. ' =' → logprob: -5.678271770477295
    4. '        
' → logprob: -8.178271293640137
    5. ' and' → logprob: -8.553271293640137
    6. '   ' → logprob: -8.678271293640137
    7. ',' → logprob: -8.803271293640137
    8. '=' → logprob: -8.803271293640137
    9. '()
' → logprob: -9.678271293640137
    10. 'rem' → logprob: -9.803271293640137

Token 997: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009060397744178772
    2. 'rem' → logprob: -5.759060382843018
    3. '
' → logprob: -5.884060382843018
    4. '   ' → logprob: -6.759060382843018
    5. 'jr' → logprob: -7.509060382843018
    6. ',' → logprob: -7.759060382843018
    7. 'r' → logprob: -8.884060859680176
    8. ' removal' → logprob: -9.009060859680176
    9. '        
' → logprob: -9.384060859680176
    10. 'remove' → logprob: -9.759060859680176

Token 998: ' judge' (ID: 23319)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5716788172721863
    2. 'rem' → logprob: -1.196678876876831
    3. '   ' → logprob: -2.696678876876831
    4. '       ' → logprob: -3.821678876876831
    5. 'judge' (adapté à ' judge') → logprob: -3.821678876876831
    6. ' judge' → logprob: -5.196678638458252
    7. ' removal' → logprob: -5.321678638458252
    8. ' r' → logprob: -5.696678638458252
    9. 'rm' → logprob: -6.196678638458252
    10. ' remover' → logprob: -6.321678638458252

Token 999: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326884031295776
    2. '=' → logprob: -1.3132688999176025
    3. 'er' → logprob: -12.813268661499023
    4. 'r' → logprob: -13.563268661499023
    5. '.' → logprob: -13.813268661499023
    6. ' ' → logprob: -14.938268661499023
    7. '	' → logprob: -15.313268661499023
    8. '   ' → logprob: -15.688268661499023
    9. '＝' → logprob: -15.938268661499023
    10. ')' → logprob: -16.188268661499023

Token 1000: ' Removal' (ID: 76413)
  Prédit: 'Removal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Removal' → logprob: -0.0019291093340143561
    2. ' Removal' → logprob: -6.25192928314209
    3. 'Rem' → logprob: -14.50192928314209
    4. ' removal' → logprob: -17.126928329467773
    5. 'Removing' → logprob: -19.001928329467773
    6. 'Remove' → logprob: -20.876928329467773
    7. 'Replacement' → logprob: -21.126928329467773
    8. '(Rem' → logprob: -21.626928329467773
    9. '   ' → logprob: -21.751928329467773
    10. 'rem' → logprob: -21.876928329467773

Token 1001: 'Judge' (ID: 121754)
  Prédit: 'Judge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Judge' → logprob: -3.128163257315464e-07
    2. 'Jud' → logprob: -15.125
    3. 'judge' → logprob: -16.75
    4. ' Judge' → logprob: -17.25
    5. 'J' → logprob: -18.375
    6. '
' → logprob: -19.125
    7. 'Ju' → logprob: -19.125
    8. '```' → logprob: -19.375
    9. ' judge' → logprob: -20.25
    10. 'Jug' → logprob: -20.375

Token 1002: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -3.128163257315464e-07
    2. 'new' → logprob: -16.25
    3. '(' → logprob: -16.625
    4. '(
' → logprob: -19.875
    5. '=new' → logprob: -20.0
    6. ')new' → logprob: -20.125
    7. ',new' → logprob: -20.625
    8. '(self' → logprob: -20.75
    9. ' new' → logprob: -20.75
    10. '(n' → logprob: -21.0

Token 1003: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -0.0001818489981815219
    2. 'board' → logprob: -8.750182151794434
    3. 'new' → logprob: -11.250182151794434
    4. '(board' → logprob: -12.625182151794434
    5. 'Board' → logprob: -12.750182151794434
    6. '(new' → logprob: -13.250182151794434
    7. '.board' → logprob: -14.875182151794434
    8. '_state' → logprob: -15.250182151794434
    9. 'oard' → logprob: -15.250182151794434
    10. '_BOARD' → logprob: -15.250182151794434

Token 1004: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03060072660446167
    2. ')
' → logprob: -3.5306007862091064
    3. '       ' → logprob: -8.030600547790527
    4. ')new' → logprob: -8.030600547790527
    5. '(new' → logprob: -8.655600547790527
    6. 'new' → logprob: -11.405600547790527
    7. '   ' → logprob: -12.405600547790527
    8. '(' → logprob: -13.155600547790527
    9. ')
' → logprob: -13.530600547790527
    10. ',' → logprob: -13.905600547790527

Token 1005: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0055190385319292545
    2. 'rem' → logprob: -5.255518913269043
    3. 'groups' → logprob: -8.505518913269043
    4. 'removed' → logprob: -9.880518913269043
    5. 'remove' → logprob: -11.630518913269043
    6. '   ' → logprob: -11.880518913269043
    7. '```' → logprob: -12.505518913269043
    8. '<|end|>' → logprob: -13.005518913269043
    9. '
' → logprob: -13.630518913269043
    10. '(rem' → logprob: -13.755518913269043

Token 1006: ' removable' (ID: 74952)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.007989631965756416
    2. 'to' → logprob: -5.382989406585693
    3. 'groups' → logprob: -6.382989406585693
    4. 'removed' → logprob: -6.507989406585693
    5. 'remove' → logprob: -9.132989883422852
    6. 'for' → logprob: -10.007989883422852
    7. ' removable' → logprob: -11.632989883422852
    8. '       ' → logprob: -11.757989883422852
    9. 'rm' → logprob: -11.757989883422852
    10. '   ' → logprob: -14.132989883422852

Token 1007: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4763931632041931
    2. '=' → logprob: -0.9763931632041931
    3. '_groups' → logprob: -6.101393222808838
    4. 's' → logprob: -10.35139274597168
    5. 'groups' → logprob: -10.47639274597168
    6. 'Groups' → logprob: -12.47639274597168
    7. 'roups' → logprob: -12.60139274597168
    8. '=[]' → logprob: -13.60139274597168
    9. '   ' → logprob: -13.85139274597168
    10. ')' → logprob: -13.85139274597168

Token 1008: ' judge' (ID: 23319)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.0003362966235727072
    2. ' judge' → logprob: -8.000336647033691
    3. 'jud' → logprob: -15.125336647033691
    4. '[j' → logprob: -15.500336647033691
    5. 'jug' → logprob: -16.250335693359375
    6. 'j' → logprob: -16.375335693359375
    7. '   ' → logprob: -16.500335693359375
    8. ' ' → logprob: -17.625335693359375
    9. '[' → logprob: -17.750335693359375
    10. 'Judge' → logprob: -18.750335693359375

Token 1009: '.groups' (ID: 89749)
  Prédit: '.groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.groups' → logprob: -1.2664456789934775e-06
    2. '._' → logprob: -15.250000953674316
    3. 'groups' → logprob: -15.375000953674316
    4. '.' → logprob: -15.500000953674316
    5. ' .' → logprob: -16.125001907348633
    6. '(groups' → logprob: -16.750001907348633
    7. '_groups' → logprob: -17.375001907348633
    8. '.goods' → logprob: -17.500001907348633
    9. '.words' → logprob: -17.500001907348633
    10. '.games' → logprob: -17.875001907348633

Token 1010: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -2.951771421066951e-05
    2. 'to' → logprob: -10.500029563903809
    3. 'To' → logprob: -14.125029563903809
    4. '_' → logprob: -14.875029563903809
    5. ')' → logprob: -15.625029563903809
    6. 'tolist' → logprob: -16.250028610229492
    7. '   ' → logprob: -16.625028610229492
    8. 't' → logprob: -16.625028610229492
    9. '[' → logprob: -16.750028610229492
    10. ' to' → logprob: -17.000028610229492

Token 1011: '_remove' (ID: 41629)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.000400521676056087
    2. '_remove' → logprob: -7.875400543212891
    3. ' remove' → logprob: -11.12540054321289
    4. 'rem' → logprob: -13.00040054321289
    5. '	remove' → logprob: -14.12540054321289
    6. 'append' → logprob: -14.37540054321289
    7. '(remove' → logprob: -14.50040054321289
    8. '.remove' → logprob: -14.75040054321289
    9. 'r' → logprob: -15.25040054321289
    10. '```' → logprob: -15.50040054321289

Token 1012: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5476111769676208
    2. '()
' → logprob: -1.2976112365722656
    3. '()' → logprob: -2.1726112365722656
    4. '
' → logprob: -3.5476112365722656
    5. '(' → logprob: -6.172611236572266
    6. '(
' → logprob: -6.797611236572266
    7. 'for' → logprob: -6.922611236572266
    8. 'return' → logprob: -8.297611236572266
    9. '        
' → logprob: -8.297611236572266
    10. '<|end|>' → logprob: -9.047611236572266

Token 1013: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006490522064268589
    2. 'for' → logprob: -8.125649452209473
    3. ' for' → logprob: -8.375649452209473
    4. '
' → logprob: -9.750649452209473
    5. 'new' → logprob: -10.500649452209473
    6. '   ' → logprob: -11.250649452209473
    7. '<|end|>' → logprob: -11.875649452209473
    8. '        
' → logprob: -12.625649452209473
    9. ' new' → logprob: -12.750649452209473
    10. '           ' → logprob: -13.250649452209473

Token 1014: ' if' (ID: 538)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.28677234053611755
    2. 'for' → logprob: -1.41177237033844
    3. '       ' → logprob: -6.03677225112915
    4. 'total' → logprob: -6.78677225112915
    5. 'points' → logprob: -7.28677225112915
    6. 'return' → logprob: -7.66177225112915
    7. ' for' → logprob: -7.78677225112915
    8. 'scores' → logprob: -8.786772727966309
    9. ' score' → logprob: -9.411772727966309
    10. 'new' → logprob: -9.536772727966309

Token 1015: ' not' (ID: 625)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.00914816278964281
    2. 'not' → logprob: -5.509148120880127
    3. 'len' → logprob: -5.509148120880127
    4. 'self' → logprob: -8.009148597717285
    5. '(rem' → logprob: -8.134148597717285
    6. ' removable' → logprob: -8.384148597717285
    7. 'remove' → logprob: -10.134148597717285
    8. 'new' → logprob: -10.509148597717285
    9. 'removed' → logprob: -10.884148597717285
    10. ' not' → logprob: -11.009148597717285

Token 1016: ' removable' (ID: 74952)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.00017159747949335724
    2. ' removable' → logprob: -9.375171661376953
    3. 'len' → logprob: -10.000171661376953
    4. 'remove' → logprob: -10.875171661376953
    5. 'new' → logprob: -12.125171661376953
    6. 'self' → logprob: -12.250171661376953
    7. 'any' → logprob: -12.500171661376953
    8. 'removed' → logprob: -12.750171661376953
    9. '(rem' → logprob: -13.250171661376953
    10. 'r' → logprob: -14.250171661376953

Token 1017: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014720071339979768
    2. ':return' → logprob: -6.876471996307373
    3. ':
' → logprob: -7.876471996307373
    4. '[' → logprob: -10.626472473144531
    5. ' or' → logprob: -11.751472473144531
    6. ' :' → logprob: -11.876472473144531
    7. ' and' → logprob: -12.001472473144531
    8. 'return' → logprob: -12.501472473144531
    9. '.' → logprob: -12.626472473144531
    10. 'and' → logprob: -13.001472473144531

Token 1018: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36408454179763794
    2. ':
' → logprob: -1.6140844821929932
    3. ':' → logprob: -2.364084482192993
    4. ':return' → logprob: -4.989084720611572
    5. ' return' → logprob: -6.239084720611572
    6. 'return' → logprob: -6.614084720611572
    7. ',' → logprob: -7.489084720611572
    8. ' and' → logprob: -7.614084720611572
    9. '       ' → logprob: -8.114084243774414
    10. '
' → logprob: -8.489084243774414

Token 1019: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.016329366713762283
    2. '           ' → logprob: -4.891329288482666
    3. ' return' → logprob: -5.516329288482666
    4. 'score' → logprob: -5.766329288482666
    5. '       ' → logprob: -6.766329288482666
    6. 'new' → logprob: -8.516329765319824
    7. 'self' → logprob: -9.766329765319824
    8. 'if' → logprob: -11.141329765319824
    9. '#' → logprob: -11.141329765319824
    10. '
' → logprob: -11.266329765319824

Token 1020: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24475717544555664
    2. 'None' → logprob: -1.8697571754455566
    3. 'False' → logprob: -3.3697571754455566
    4. '(' → logprob: -4.494757175445557
    5. ' ' → logprob: -4.994757175445557
    6. '-' → logprob: -5.244757175445557
    7. ' None' → logprob: -6.369757175445557
    8. '(None' → logprob: -6.869757175445557
    9. ' (' → logprob: -7.994757175445557
    10. '(False' → logprob: -7.994757175445557

Token 1021: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3911171853542328
    2. 'None' → logprob: -2.2661170959472656
    3. 'False' → logprob: -2.2661170959472656
    4. '-' → logprob: -2.5161170959472656
    5. '(' → logprob: -4.516117095947266
    6. 'new' → logprob: -4.516117095947266
    7. '[]' → logprob: -6.016117095947266
    8. 'self' → logprob: -6.016117095947266
    9. '(None' → logprob: -6.266117095947266
    10. 'float' → logprob: -6.766117095947266

Token 1022: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06142816320061684
    2. '        
' → logprob: -3.4364280700683594
    3. '       ' → logprob: -3.6864280700683594
    4. '\n' → logprob: -7.061428070068359
    5. '
' → logprob: -7.686428070068359
    6. ' 
' → logprob: -8.18642807006836
    7. '    
' → logprob: -8.93642807006836
    8. '       
' → logprob: -9.68642807006836
    9. '
        
' → logprob: -9.68642807006836
    10. '<|end|>' → logprob: -9.81142807006836

Token 1023: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07563397288322449
    2. '<|end|>' → logprob: -3.450634002685547
    3. '\n' → logprob: -3.575634002685547
    4. '       ' → logprob: -4.825634002685547
    5. '        
' → logprob: -7.200634002685547
    6. '0' → logprob: -7.575634002685547
    7. '' → logprob: -7.950634002685547
    8. '
' → logprob: -7.950634002685547
    9. ' 
' → logprob: -8.075634002685547
    10. ')' → logprob: -8.075634002685547

Token 1024: ' gain' (ID: 11621)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.025440899655222893
    2. '       ' → logprob: -4.400440692901611
    3. ' score' → logprob: -4.775440692901611
    4. '
' → logprob: -6.025440692901611
    5. '        
' → logprob: -6.525440692901611
    6. 'total' → logprob: -8.15044116973877
    7. 'points' → logprob: -9.52544116973877
    8. 'scores' → logprob: -10.65044116973877
    9. 'return' → logprob: -10.77544116973877
    10. ' total' → logprob: -10.90044116973877

Token 1025: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018459299579262733
    2. '=' → logprob: -4.018459320068359
    3. ' +=' → logprob: -8.64345932006836
    4. '_score' → logprob: -9.76845932006836
    5. '_points' → logprob: -10.26845932006836
    6. ' +' → logprob: -12.14345932006836
    7. '_amount' → logprob: -12.26845932006836
    8. '_' → logprob: -12.51845932006836
    9. ',' → logprob: -12.51845932006836
    10. ' ' → logprob: -12.76845932006836

Token 1026: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03095402754843235
    2. 'len' → logprob: -4.030953884124756
    3. 'sum' → logprob: -4.405953884124756
    4. ' ' → logprob: -8.280954360961914
    5. ' sum' → logprob: -8.905954360961914
    6. ' len' → logprob: -9.030954360961914
    7. '1' → logprob: -12.280954360961914
    8. '(len' → logprob: -14.218454360961914
    9. '   ' → logprob: -14.780954360961914
    10. 'max' → logprob: -15.030954360961914

Token 1027: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6372378468513489
    2. '0' → logprob: -0.7622378468513489
    3. 'len' → logprob: -5.387238025665283
    4. '1' → logprob: -10.887237548828125
    5. ' sum' → logprob: -11.262237548828125
    6. 'max' → logprob: -11.512237548828125
    7. '(sum' → logprob: -13.637237548828125
    8. '2' → logprob: -13.949737548828125
    9. ' ' → logprob: -14.074737548828125
    10. 'set' → logprob: -14.387237548828125

Token 1028: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028505371301434934
    2. '
' → logprob: -8.875285148620605
    3. ' for' → logprob: -9.125285148620605
    4. ',' → logprob: -11.750285148620605
    5. 'for' → logprob: -11.750285148620605
    6. '        
' → logprob: -12.000285148620605
    7. '	' → logprob: -12.250285148620605
    8. '<|end|>' → logprob: -13.000285148620605
    9. '.' → logprob: -13.875285148620605
    10. '+' → logprob: -14.000285148620605

Token 1029: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009024077444337308
    2. ' for' → logprob: -7.25090217590332
    3. 'for' → logprob: -9.75090217590332
    4. '
' → logprob: -10.00090217590332
    5. '	' → logprob: -10.12590217590332
    6. '        
' → logprob: -11.25090217590332
    7. ',' → logprob: -11.37590217590332
    8. '<|end|>' → logprob: -12.62590217590332
    9. '           ' → logprob: -13.12590217590332
    10. '	for' → logprob: -13.12590217590332

Token 1030: ' loss' (ID: 6266)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07330410927534103
    2. '       ' → logprob: -2.6983041763305664
    3. ' for' → logprob: -5.698304176330566
    4. '```' → logprob: -12.698304176330566
    5. '+' → logprob: -12.948304176330566
    6. '	for' → logprob: -13.948304176330566
    7. 'player' → logprob: -14.698304176330566
    8. '   ' → logprob: -14.823304176330566
    9. 'stone' → logprob: -14.823304176330566
    10. 'stones' → logprob: -15.198304176330566

Token 1031: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14272858202457428
    2. '=' → logprob: -2.017728567123413
    3. ' +=' → logprob: -10.767728805541992
    4. ',' → logprob: -11.642728805541992
    5. 'for' → logprob: -12.142728805541992
    6. '   ' → logprob: -12.267728805541992
    7. ' -=' → logprob: -13.267728805541992
    8. '+=' → logprob: -13.392728805541992
    9. '       ' → logprob: -13.517728805541992
    10. ' ' → logprob: -13.517728805541992

Token 1032: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019985849503427744
    2. ' ' → logprob: -6.251998424530029
    3. 'len' → logprob: -10.001998901367188
    4. 'self' → logprob: -12.126998901367188
    5. '[]' → logprob: -12.126998901367188
    6. 'sum' → logprob: -12.626998901367188
    7. '1' → logprob: -13.001998901367188
    8. ' len' → logprob: -13.314498901367188
    9. '-' → logprob: -14.064498901367188
    10. 'False' → logprob: -14.689498901367188

Token 1033: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000182921823579818
    2. 'len' → logprob: -9.37518310546875
    3. 'self' → logprob: -10.25018310546875
    4. 'sum' → logprob: -10.62518310546875
    5. '-' → logprob: -11.75018310546875
    6. '[]' → logprob: -12.25018310546875
    7. '1' → logprob: -12.37518310546875
    8. ' ' → logprob: -12.62518310546875
    9. '[]
' → logprob: -12.62518310546875
    10. 'set' → logprob: -12.62518310546875

Token 1034: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015584154054522514
    2. ' for' → logprob: -4.8905839920043945
    3. '
' → logprob: -5.0155839920043945
    4. 'for' → logprob: -7.0155839920043945
    5. '        
' → logprob: -8.515583992004395
    6. ' 
' → logprob: -10.015583992004395
    7. '	' → logprob: -10.015583992004395
    8. '<|end|>' → logprob: -10.890583992004395
    9. '	for' → logprob: -11.015583992004395
    10. ',' → logprob: -11.265583992004395

Token 1035: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00044890373828820884
    2. ' for' → logprob: -8.250449180603027
    3. '
' → logprob: -9.375449180603027
    4. 'for' → logprob: -9.375449180603027
    5. '        
' → logprob: -11.875449180603027
    6. '	' → logprob: -12.500449180603027
    7. '           ' → logprob: -13.125449180603027
    8. '   ' → logprob: -13.875449180603027
    9. ',' → logprob: -14.250449180603027
    10. '	for' → logprob: -14.375449180603027

Token 1036: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0843748077750206
    2. '       ' → logprob: -2.5843749046325684
    3. ' for' → logprob: -5.209374904632568
    4. '	for' → logprob: -13.20937442779541
    5. '   ' → logprob: -13.70937442779541
    6. '```' → logprob: -14.45937442779541
    7. '
' → logprob: -15.20937442779541
    8. '#' → logprob: -15.95937442779541
    9. '        
' → logprob: -16.209375381469727
    10. 'player' → logprob: -16.209375381469727

Token 1037: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.014208757318556309
    2. ' group' → logprob: -4.264208793640137
    3. 'grp' → logprob: -10.139208793640137
    4. 'groups' → logprob: -12.889208793640137
    5. 'g' → logprob: -13.639208793640137
    6. '	group' → logprob: -14.764208793640137
    7. 'rem' → logprob: -15.014208793640137
    8. 'roup' → logprob: -15.389208793640137
    9. '"group' → logprob: -15.389208793640137
    10. ' grp' → logprob: -15.514208793640137

Token 1038: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04867105185985565
    2. 'in' → logprob: -3.048671007156372
    3. '<|end|>' → logprob: -10.048670768737793
    4. '	in' → logprob: -11.048670768737793
    5. '<|end|>' → logprob: -12.173670768737793
    6. '_in' → logprob: -12.173670768737793
    7. '   ' → logprob: -12.798670768737793
    8. ':' → logprob: -13.048670768737793
    9. ' ' → logprob: -13.673670768737793
    10. '       ' → logprob: -13.798670768737793

Token 1039: ' removable' (ID: 74952)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.001932205050252378
    2. ' removable' → logprob: -6.251932144165039
    3. 'remove' → logprob: -13.001932144165039
    4. 'removed' → logprob: -14.126932144165039
    5. '(rem' → logprob: -14.876932144165039
    6. ' rem' → logprob: -16.87693214416504
    7. ' remov' → logprob: -17.00193214416504
    8. 're' → logprob: -17.12693214416504
    9. '   ' → logprob: -17.50193214416504
    10. '[' → logprob: -18.00193214416504

Token 1040: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04372483491897583
    2. ':
' → logprob: -3.168724775314331
    3. ',' → logprob: -7.41872501373291
    4. '           ' → logprob: -9.66872501373291
    5. '<|end|>' → logprob: -10.54372501373291
    6. '.' → logprob: -11.41872501373291
    7. '       ' → logprob: -11.91872501373291
    8. ':

' → logprob: -12.41872501373291
    9. '<|end|>' → logprob: -12.54372501373291
    10. '):
' → logprob: -13.16872501373291

Token 1041: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008845492266118526
    2. ' for' → logprob: -7.500884532928467
    3. ' if' → logprob: -9.750885009765625
    4. '
' → logprob: -9.750885009765625
    5. '               ' → logprob: -9.875885009765625
    6. '```' → logprob: -9.875885009765625
    7. '       ' → logprob: -10.000885009765625
    8. 'for' → logprob: -11.125885009765625
    9. '<|end|>' → logprob: -11.875885009765625
    10. ':' → logprob: -11.875885009765625

Token 1042: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.17154598236083984
    2. ' for' → logprob: -1.9215459823608398
    3. '           ' → logprob: -4.54654598236084
    4. 'stones' → logprob: -8.54654598236084
    5. 'if' → logprob: -9.42154598236084
    6. 'size' → logprob: -9.54654598236084
    7. 'player' → logprob: -10.04654598236084
    8. '               ' → logprob: -10.54654598236084
    9. 'color' → logprob: -10.54654598236084
    10. 'group' → logprob: -10.79654598236084

Token 1043: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0178991686552763
    2. '(gr' → logprob: -4.267899036407471
    3. '(rr' → logprob: -5.767899036407471
    4. '(' → logprob: -8.142899513244629
    5. 'gr' → logprob: -9.642899513244629
    6. ' (' → logprob: -10.017899513244629
    7. '(sr' → logprob: -10.017899513244629
    8. 'r' → logprob: -10.142899513244629
    9. '(rv' → logprob: -10.642899513244629
    10. 'vr' → logprob: -11.142899513244629

Token 1044: 'gr' (ID: 896)
  Prédit: 'gr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.6790879368782043
    2. '(r' → logprob: -1.4290878772735596
    3. 'r' → logprob: -2.0540878772735596
    4. 'rr' → logprob: -2.8040878772735596
    5. '(gr' → logprob: -2.9290878772735596
    6. 'vr' → logprob: -5.054088115692139
    7. '(rr' → logprob: -5.929088115692139
    8. 'grp' → logprob: -7.679088115692139
    9. 'rg' → logprob: -7.804088115692139
    10. 'sr' → logprob: -8.17908763885498

Token 1045: ',g' (ID: 44461)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0043870327062904835
    2. ',r' → logprob: -5.629386901855469
    3. ',g' → logprob: -7.754386901855469
    4. 'r' → logprob: -8.504386901855469
    5. ' ,' → logprob: -9.879386901855469
    6. ',w' → logprob: -10.754386901855469
    7. ',c' → logprob: -11.004386901855469
    8. ',b' → logprob: -11.129386901855469
    9. ',n' → logprob: -11.254386901855469
    10. ',s' → logprob: -11.504386901855469

Token 1046: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.08041135221719742
    2. 'r' → logprob: -2.580411434173584
    3. ',' → logprob: -7.205411434173584
    4. '_r' → logprob: -7.955411434173584
    5. ',c' → logprob: -8.455410957336426
    6. '_c' → logprob: -9.080410957336426
    7. ',r' → logprob: -10.455410957336426
    8. ')' → logprob: -10.955410957336426
    9. 'gr' → logprob: -11.080410957336426
    10. '_,' → logprob: -11.455410957336426

Token 1047: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00037263904232531786
    2. 'in' → logprob: -8.750372886657715
    3. ' )' → logprob: -9.125372886657715
    4. ' in' → logprob: -9.250372886657715
    5. '),' → logprob: -12.250372886657715
    6. ',' → logprob: -13.375372886657715
    7. ',)' → logprob: -13.750372886657715
    8. ')
' → logprob: -14.375372886657715
    9. '           ' → logprob: -15.750372886657715
    10. ')`' → logprob: -15.875372886657715

Token 1048: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10021831095218658
    2. 'in' → logprob: -2.3502182960510254
    3. '           ' → logprob: -12.475218772888184
    4. '               ' → logprob: -12.850218772888184
    5. ',' → logprob: -13.600218772888184
    6. 'self' → logprob: -13.975218772888184
    7. '            ' → logprob: -14.475218772888184
    8. 'import' → logprob: -14.725218772888184
    9. ' ' → logprob: -14.850218772888184
    10. ')' → logprob: -15.100218772888184

Token 1049: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.01416398212313652
    2. ' group' → logprob: -4.264163970947266
    3. '"group' → logprob: -15.514163970947266
    4. '[group' → logprob: -15.639163970947266
    5. '	group' → logprob: -16.389163970947266
    6. '(group' → logprob: -16.889163970947266
    7. 'roup' → logprob: -18.139163970947266
    8. '.group' → logprob: -18.389163970947266
    9. '   ' → logprob: -19.389163970947266
    10. '_group' → logprob: -20.014163970947266

Token 1050: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.23922871053218842
    2. '               ' → logprob: -1.6142287254333496
    3. ':' → logprob: -4.36422872543335
    4. 'new' → logprob: -8.114228248596191
    5. '           ' → logprob: -8.239228248596191
    6. '                   ' → logprob: -8.989228248596191
    7. ',' → logprob: -9.614228248596191
    8. '):
' → logprob: -9.614228248596191
    9. '   ' → logprob: -9.739228248596191
    10. ' new' → logprob: -10.364228248596191

Token 1051: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006553700077347457
    2. 'new' → logprob: -7.500655174255371
    3. ' new' → logprob: -10.125655174255371
    4. '                   ' → logprob: -10.500655174255371
    5. '   ' → logprob: -11.125655174255371
    6. 'self' → logprob: -12.250655174255371
    7. '           ' → logprob: -12.500655174255371
    8. '              ' → logprob: -13.250655174255371
    9. '                       ' → logprob: -13.500655174255371
    10. '       ' → logprob: -13.625655174255371

Token 1052: ' stone' (ID: 14352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8740189075469971
    2. 'new' → logprob: -0.9990189075469971
    3. 'stone' (adapté à ' stone') → logprob: -1.874018907546997
    4. 'loss' → logprob: -4.124018669128418
    5. ' if' → logprob: -4.374018669128418
    6. '                   ' → logprob: -4.374018669128418
    7. '               ' → logprob: -4.749018669128418
    8. ' new' → logprob: -6.124018669128418
    9. '           ' → logprob: -6.374018669128418
    10. ' stone' → logprob: -6.499018669128418

Token 1053: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6829020977020264
    2. '=' → logprob: -0.9329020977020264
    3. '_color' → logprob: -2.8079020977020264
    4. '_type' → logprob: -3.9329020977020264
    5. '_st' → logprob: -4.5579023361206055
    6. '_owner' → logprob: -5.3079023361206055
    7. '_val' → logprob: -5.9329023361206055
    8. '_value' → logprob: -6.9329023361206055
    9. '=self' → logprob: -8.057902336120605
    10. 'color' → logprob: -8.057902336120605

Token 1054: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.014164448715746403
    2. ' new' → logprob: -4.264164447784424
    3. 'self' → logprob: -14.389164924621582
    4. '                   ' → logprob: -16.514163970947266
    5. '_new' → logprob: -16.639163970947266
    6. '
' → logprob: -16.764163970947266
    7. '           ' → logprob: -16.889163970947266
    8. '	new' → logprob: -17.139163970947266
    9. '   ' → logprob: -17.514163970947266
    10. '               ' → logprob: -17.764163970947266

Token 1055: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -0.0015733062755316496
    2. 'board' → logprob: -7.001573085784912
    3. 'Board' → logprob: -8.12657356262207
    4. 'new' → logprob: -8.25157356262207
    5. 'get' → logprob: -11.25157356262207
    6. '_' → logprob: -11.37657356262207
    7. 'state' → logprob: -11.37657356262207
    8. '_state' → logprob: -11.75157356262207
    9. '_new' → logprob: -11.75157356262207
    10. '_game' → logprob: -12.37657356262207

Token 1056: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0006016458501107991
    2. '.grid' → logprob: -8.000601768493652
    3. '.' → logprob: -8.375601768493652
    4. '.set' → logprob: -10.875601768493652
    5. 'get' → logprob: -11.875601768493652
    6. ' .' → logprob: -12.000601768493652
    7. '   ' → logprob: -14.000601768493652
    8. '.g' → logprob: -14.250601768493652
    9. 's' → logprob: -14.500601768493652
    10. 'grid' → logprob: -14.875601768493652

Token 1057: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -5.5577775128767826e-06
    2. '(st' → logprob: -13.375005722045898
    3. '_gr' → logprob: -13.625005722045898
    4. 'st' → logprob: -13.625005722045898
    5. 'stone' → logprob: -14.125005722045898
    6. '(g' → logprob: -15.250005722045898
    7. '_s' → logprob: -15.625005722045898
    8. 'Stone' → logprob: -15.625005722045898
    9. '(gr' → logprob: -15.750005722045898
    10. 's' → logprob: -17.1250057220459

Token 1058: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.08079177141189575
    2. '_st' → logprob: -2.830791711807251
    3. 'stone' → logprob: -4.20579195022583
    4. 'tone' → logprob: -6.33079195022583
    5. '_one' → logprob: -7.45579195022583
    6. '_' → logprob: -7.70579195022583
    7. 'st' → logprob: -8.455791473388672
    8. '__' → logprob: -9.580791473388672
    9. 'Stone' → logprob: -9.580791473388672
    10. 'on' → logprob: -9.580791473388672

Token 1059: '(gr' (ID: 64506)
  Prédit: '(gr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(gr' → logprob: -6.704273118884885e-07
    2. ' (' → logprob: -15.375000953674316
    3. '(g' → logprob: -15.750000953674316
    4. 'gr' → logprob: -16.0
    5. '(' → logprob: -16.625
    6. '	gr' → logprob: -19.125
    7. '   ' → logprob: -19.375
    8. '/gr' → logprob: -20.0
    9. '(gt' → logprob: -20.0
    10. '_gr' → logprob: -20.125

Token 1060: ',g' (ID: 44461)
  Prédit: ',g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',g' → logprob: -0.5774900317192078
    2. ',' → logprob: -0.8274900317192078
    3. '(gr' → logprob: -6.577489852905273
    4. '(gc' → logprob: -9.577489852905273
    5. ' ,' → logprob: -10.327489852905273
    6. '(g' → logprob: -11.077489852905273
    7. ')(' → logprob: -11.327489852905273
    8. ')' → logprob: -11.702489852905273
    9. ',
' → logprob: -11.827489852905273
    10. ',(' → logprob: -12.452489852905273

Token 1061: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.4060561776859686e-05
    2. 'gc' → logprob: -10.375043869018555
    3. '(gc' → logprob: -11.625043869018555
    4. ')c' → logprob: -14.000043869018555
    5. ',c' → logprob: -14.125043869018555
    6. ' gc' → logprob: -14.375043869018555
    7. ')' → logprob: -14.375043869018555
    8. 'с' → logprob: -15.125043869018555
    9. 'g' → logprob: -15.375043869018555
    10. ' c' → logprob: -16.375043869018555

Token 1062: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006489329971373081
    2. ')
' → logprob: -7.3756489753723145
    3. ' )' → logprob: -12.000648498535156
    4. ')
' → logprob: -12.000648498535156
    5. '               ' → logprob: -12.125648498535156
    6. ')

' → logprob: -14.125648498535156
    7. ')=' → logprob: -14.750648498535156
    8. '<|end|>' → logprob: -14.750648498535156
    9. '                   ' → logprob: -14.875648498535156
    10. '                ' → logprob: -15.125648498535156

Token 1063: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003761251224204898
    2. ' if' → logprob: -6.378761291503906
    3. '                   ' → logprob: -6.628761291503906
    4. '<|end|>' → logprob: -8.378761291503906
    5. '                ' → logprob: -8.628761291503906
    6. '```' → logprob: -9.628761291503906
    7. '                       ' → logprob: -10.003761291503906
    8. '           ' → logprob: -10.378761291503906
    9. '              ' → logprob: -10.503761291503906
    10. 'if' → logprob: -10.878761291503906

Token 1064: ' if' (ID: 538)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.4095327854156494
    2. 'if' (adapté à ' if') → logprob: -1.5345327854156494
    3. '               ' → logprob: -2.4095327854156494
    4. ' new' → logprob: -4.03453254699707
    5. ' if' → logprob: -4.40953254699707
    6. 'loss' → logprob: -7.53453254699707
    7. '                   ' → logprob: -9.28453254699707
    8. '```' → logprob: -9.78453254699707
    9. '                ' → logprob: -10.03453254699707
    10. ' loss' → logprob: -11.28453254699707

Token 1065: ' stone' (ID: 14352)
  Prédit: 'stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stone' → logprob: -0.08903609216213226
    2. ' stone' → logprob: -2.464035987854004
    3. '   ' → logprob: -10.339035987854004
    4. 'ston' → logprob: -10.339035987854004
    5. '               ' → logprob: -11.214035987854004
    6. '    ' → logprob: -12.589035987854004
    7. '           ' → logprob: -12.964035987854004
    8. 'st' → logprob: -13.089035987854004
    9. '                   ' → logprob: -13.464035987854004
    10. ' ' → logprob: -13.839035987854004

Token 1066: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6308090090751648
    2. '==' → logprob: -1.0058090686798096
    3. ' !=' → logprob: -2.6308090686798096
    4. '!=' → logprob: -3.5058090686798096
    5. '=' → logprob: -11.50580883026123
    6. '==
' → logprob: -12.13080883026123
    7. '>' → logprob: -12.13080883026123
    8. '===' → logprob: -12.25580883026123
    9. ' ' → logprob: -12.63080883026123
    10. ')==' → logprob: -12.63080883026123

Token 1067: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004961324390023947
    2. '3' → logprob: -6.1299614906311035
    3. ' self' → logprob: -6.6299614906311035
    4. '1' → logprob: -7.0049614906311035
    5. '0' → logprob: -7.8799614906311035
    6. '(self' → logprob: -10.129961013793945
    7. '   ' → logprob: -10.254961013793945
    8. '2' → logprob: -10.629961013793945
    9. '           ' → logprob: -10.629961013793945
    10. ' ' → logprob: -11.129961013793945

Token 1068: '.current' (ID: 8357)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008370272698812187
    2. ' self' → logprob: -8.125837326049805
    3. '0' → logprob: -8.625837326049805
    4. '           ' → logprob: -8.875837326049805
    5. '   ' → logprob: -9.000837326049805
    6. '                   ' → logprob: -10.375837326049805
    7. '               ' → logprob: -10.500837326049805
    8. '       ' → logprob: -11.000837326049805
    9. '3' → logprob: -11.750837326049805
    10. '(self' → logprob: -12.875837326049805

Token 1069: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -0.00014418430509977043
    2. 'player' → logprob: -9.250144004821777
    3. '_PLAYER' → logprob: -10.875144004821777
    4. '_' → logprob: -11.500144004821777
    5. '_user' → logprob: -12.250144004821777
    6. 'Player' → logprob: -12.375144004821777
    7. '_play' → logprob: -13.125144004821777
    8. ' _' → logprob: -13.375144004821777
    9. ' player' → logprob: -13.750144004821777
    10. '   ' → logprob: -13.875144004821777

Token 1070: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35100632905960083
    2. ':
' → logprob: -1.226006269454956
    3. '                   ' → logprob: -6.351006507873535
    4. ' and' → logprob: -7.851006507873535
    5. '               ' → logprob: -9.351006507873535
    6. '                       ' → logprob: -9.476006507873535
    7. '           ' → logprob: -9.976006507873535
    8. '                           ' → logprob: -10.226006507873535
    9. '):
' → logprob: -10.476006507873535
    10. ',' → logprob: -10.976006507873535

Token 1071: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01286123227328062
    2. ' loss' → logprob: -5.262861251831055
    3. '                       ' → logprob: -5.637861251831055
    4. 'loss' → logprob: -5.762861251831055
    5. '               ' → logprob: -7.887861251831055
    6. '
' → logprob: -9.262861251831055
    7. ':
' → logprob: -9.387861251831055
    8. '                  ' → logprob: -9.762861251831055
    9. '                    
' → logprob: -9.887861251831055
    10. '                           ' → logprob: -10.012861251831055

Token 1072: ' loss' (ID: 6266)
  Prédit: 'loss'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loss' (adapté à ' loss') → logprob: -0.0183939877897501
    2. ' loss' → logprob: -4.0183939933776855
    3. 'gain' → logprob: -8.768393516540527
    4. '-' → logprob: -10.768393516540527
    5. '-loss' → logprob: -10.893393516540527
    6. '_loss' → logprob: -11.393393516540527
    7. '                   ' → logprob: -11.518393516540527
    8. '   ' → logprob: -12.018393516540527
    9. '```' → logprob: -12.393393516540527
    10. '(loss' → logprob: -12.893393516540527

Token 1073: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2532375454902649
    2. '+=' → logprob: -1.5032374858856201
    3. ' -=' → logprob: -6.753237724304199
    4. '+' → logprob: -9.3782377243042
    5. '-=' → logprob: -10.2532377243042
    6. ' +' → logprob: -11.1282377243042
    7. '-' → logprob: -12.6282377243042
    8. '=' → logprob: -13.8782377243042
    9. '            ' → logprob: -15.0032377243042
    10. ']+=' → logprob: -15.0032377243042

Token 1074: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005704291397705674
    2. 'len' → logprob: -7.500570297241211
    3. ' ' → logprob: -11.125570297241211
    4. '0' → logprob: -14.125570297241211
    5. '2' → logprob: -15.000570297241211
    6. '-' → logprob: -15.125570297241211
    7. '   ' → logprob: -15.500570297241211
    8. '(len' → logprob: -15.563070297241211
    9. ' len' → logprob: -15.750570297241211
    10. '100' → logprob: -15.750570297241211

Token 1075: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016206118743866682
    2. 'len' → logprob: -8.750162124633789
    3. ' ' → logprob: -12.750162124633789
    4. '2' → logprob: -15.750162124633789
    5. '0' → logprob: -16.12516212463379
    6. '100' → logprob: -16.25016212463379
    7. '   ' → logprob: -16.87516212463379
    8. '10' → logprob: -17.50016212463379
    9. '-' → logprob: -17.68766212463379
    10. '
' → logprob: -18.12516212463379

Token 1076: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010429716669023037
    2. ' else' → logprob: -4.885429859161377
    3. '
' → logprob: -6.510429859161377
    4. 'else' → logprob: -6.885429859161377
    5. ' elif' → logprob: -9.510429382324219
    6. '                
' → logprob: -9.885429382324219
    7. 'elif' → logprob: -9.885429382324219
    8. '                ' → logprob: -10.010429382324219
    9. '                   ' → logprob: -10.760429382324219
    10. '                    
' → logprob: -11.135429382324219

Token 1077: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.042532507330179214
    2. ' else' → logprob: -3.417532444000244
    3. 'else' → logprob: -5.167532444000244
    4. '                   ' → logprob: -6.792532444000244
    5. '
' → logprob: -7.167532444000244
    6. '           ' → logprob: -8.292532920837402
    7. '                ' → logprob: -8.292532920837402
    8. '                       ' → logprob: -8.417532920837402
    9. '                               ' → logprob: -8.792532920837402
    10. ' elif' → logprob: -9.667532920837402

Token 1078: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.7920246124267578
    2. 'else' (adapté à ' else') → logprob: -1.0420246124267578
    3. '               ' → logprob: -1.6670246124267578
    4. 'elif' → logprob: -5.792024612426758
    5. ' elif' → logprob: -6.292024612426758
    6. '                ' → logprob: -8.042024612426758
    7. '                   ' → logprob: -8.667024612426758
    8. '           ' → logprob: -10.792024612426758
    9. ' if' → logprob: -11.542024612426758
    10. '                       ' → logprob: -11.542024612426758

Token 1079: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3434973359107971
    2. ':' → logprob: -1.7184972763061523
    3. '                   ' → logprob: -2.2184972763061523
    4. '               ' → logprob: -6.468497276306152
    5. '           ' → logprob: -8.343497276306152
    6. '                    ' → logprob: -8.843497276306152
    7. '                  ' → logprob: -9.093497276306152
    8. ' :
' → logprob: -9.593497276306152
    9. '+' → logprob: -9.718497276306152
    10. '                       ' → logprob: -9.968497276306152

Token 1080: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05167439952492714
    2. ' loss' → logprob: -3.5516743659973145
    3. ' gain' → logprob: -4.9266743659973145
    4. 'gain' → logprob: -5.1766743659973145
    5. '1' → logprob: -5.9266743659973145
    6. '   ' → logprob: -6.5516743659973145
    7. '               ' → logprob: -6.6766743659973145
    8. 'loss' → logprob: -6.6766743659973145
    9. '+' → logprob: -7.5516743659973145
    10. ' ' → logprob: -7.5516743659973145

Token 1081: ' gain' (ID: 11621)
  Prédit: 'gain'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gain' (adapté à ' gain') → logprob: -0.00526091456413269
    2. ' gain' → logprob: -5.255260944366455
    3. '1' → logprob: -10.630260467529297
    4. '   ' → logprob: -13.380260467529297
    5. ' ' → logprob: -15.130260467529297
    6. '_gain' → logprob: -15.255260467529297
    7. '
' → logprob: -15.755260467529297
    8. 'loss' → logprob: -15.755260467529297
    9. '0' → logprob: -16.130260467529297
    10. '+' → logprob: -16.755260467529297

Token 1082: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4741804301738739
    2. '+=' → logprob: -0.9741804599761963
    3. '+' → logprob: -9.349180221557617
    4. ' -=' → logprob: -11.349180221557617
    5. ' +' → logprob: -13.349180221557617
    6. '=' → logprob: -13.724180221557617
    7. '-=' → logprob: -13.849180221557617
    8. '            ' → logprob: -14.849180221557617
    9. ']+=' → logprob: -15.099180221557617
    10. '-' → logprob: -16.349180221557617

Token 1083: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011709370883181691
    2. ' ' → logprob: -6.751171112060547
    3. 'stone' → logprob: -14.751171112060547
    4. ' stone' → logprob: -15.251171112060547
    5. '   ' → logprob: -17.313671112060547
    6. '-' → logprob: -17.688671112060547
    7. ' -' → logprob: -18.251171112060547
    8. 'int' → logprob: -18.501171112060547
    9. '0' → logprob: -18.688671112060547
    10. ' ' → logprob: -19.063671112060547

Token 1084: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011415231710998341
    2. ' ' → logprob: -9.250114440917969
    3. 'len' → logprob: -11.000114440917969
    4. 'stone' → logprob: -14.375114440917969
    5. '-' → logprob: -15.125114440917969
    6. ' len' → logprob: -16.87511444091797
    7. '
' → logprob: -16.87511444091797
    8. '   ' → logprob: -17.00011444091797
    9. ' stone' → logprob: -17.18761444091797
    10. '(' → logprob: -18.06261444091797

Token 1085: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04731156304478645
    2. '       ' → logprob: -3.422311544418335
    3. ' 
' → logprob: -5.297311782836914
    4. '        
' → logprob: -5.672311782836914
    5. 'return' → logprob: -6.172311782836914
    6. ' return' → logprob: -6.797311782836914
    7. '\n' → logprob: -7.422311782836914
    8. '  
' → logprob: -7.922311782836914
    9. '<|end|>' → logprob: -8.172311782836914
    10. '    
' → logprob: -8.922311782836914

Token 1086: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21466602385044098
    2. '               ' → logprob: -2.2146661281585693
    3. '
' → logprob: -3.2146661281585693
    4. 'new' → logprob: -3.4646661281585693
    5. '        
' → logprob: -5.58966588973999
    6. ' new' → logprob: -5.71466588973999
    7. '                   ' → logprob: -6.46466588973999
    8. '                       ' → logprob: -7.08966588973999
    9. '                
' → logprob: -7.83966588973999
    10. 'return' → logprob: -7.83966588973999

Token 1087: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.346161812543869
    2. '
' → logprob: -1.3461618423461914
    3. 'return' (adapté à ' return') → logprob: -4.596161842346191
    4. ' return' → logprob: -4.721161842346191
    5. '        
' → logprob: -4.721161842346191
    6. ' 
' → logprob: -6.096161842346191
    7. '\n' → logprob: -7.846161842346191
    8. '```' → logprob: -8.096161842346191
    9. '<|end|>' → logprob: -8.471161842346191
    10. '               ' → logprob: -8.846161842346191

Token 1088: ' gain' (ID: 11621)
  Prédit: 'gain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gain' → logprob: -0.020601799711585045
    2. ' gain' → logprob: -3.895601749420166
    3. '(g' → logprob: -10.520602226257324
    4. 'g' → logprob: -11.520602226257324
    5. 'max' → logprob: -11.895602226257324
    6. 'loss' → logprob: -12.145602226257324
    7. ' ' → logprob: -12.770602226257324
    8. '_gain' → logprob: -13.520602226257324
    9. '(' → logprob: -13.645602226257324
    10. '   ' → logprob: -14.270602226257324

Token 1089: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06125112622976303
    2. '-' → logprob: -2.936251163482666
    3. '-loss' → logprob: -5.811251163482666
    4. '+' → logprob: -6.436251163482666
    5. ' +' → logprob: -6.436251163482666
    6. '-l' → logprob: -9.061250686645508
    7. ' ' → logprob: -11.436250686645508
    8. '-risk' → logprob: -12.186250686645508
    9. '<|end|>' → logprob: -12.811250686645508
    10. '   ' → logprob: -13.186250686645508

Token 1090: ' loss' (ID: 6266)
  Prédit: 'loss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loss' → logprob: -0.0019286326132714748
    2. ' loss' → logprob: -6.251928806304932
    3. '(loss' → logprob: -19.126928329467773
    4. '1' → logprob: -19.501928329467773
    5. '0' → logprob: -20.126928329467773
    6. 'l' → logprob: -20.751928329467773
    7. 'los' → logprob: -21.126928329467773
    8. '_loss' → logprob: -21.251928329467773
    9. ' ' → logprob: -21.876928329467773
    10. 'lost' → logprob: -22.001928329467773

Token 1091: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1092: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1093: ' Life' (ID: 11714)
  Prédit: ' AI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' AI' → logprob: -0.3729285001754761
    2. ' Player' → logprob: -2.3729286193847656
    3. ' Move' → logprob: -2.7479286193847656
    4. 'AI' → logprob: -3.6229286193847656
    5. ' Game' → logprob: -3.8729286193847656
    6. ' M' → logprob: -3.8729286193847656
    7. ' Min' → logprob: -3.8729286193847656
    8. ' Solver' → logprob: -4.247928619384766
    9. ' Ai' → logprob: -4.372928619384766
    10. ' Bot' → logprob: -4.747928619384766

Token 1094: 'Line' (ID: 3665)
  Prédit: 'And'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'And' → logprob: -0.7905175685882568
    2. 'Game' → logprob: -2.165517568588257
    3. 'Checker' → logprob: -2.540517568588257
    4. 'Cycle' → logprob: -2.665517568588257
    5. 'and' → logprob: -2.915517568588257
    6. 'Status' → logprob: -3.040517568588257
    7. 'Evaluator' → logprob: -3.415517568588257
    8. 'State' → logprob: -3.665517568588257
    9. 'Counter' → logprob: -3.665517568588257
    10. 'Judge' → logprob: -3.790517568588257

Token 1095: 'Solver' (ID: 70484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012056301347911358
    2. ':
' → logprob: -4.512056350708008
    3. '(' → logprob: -7.012056350708008
    4. '   ' → logprob: -10.387056350708008
    5. '(object' → logprob: -11.637056350708008
    6. ' :' → logprob: -11.637056350708008
    7. '():' → logprob: -11.762056350708008
    8. '(Game' → logprob: -11.887056350708008
    9. 'Line' → logprob: -12.262056350708008
    10. '(Line' → logprob: -12.512056350708008

Token 1096: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02384304068982601
    2. ':
' → logprob: -3.7738430500030518
    3. ' :' → logprob: -7.523842811584473
    4. ' :
' → logprob: -9.898842811584473
    5. ':def' → logprob: -13.023842811584473
    6. ':

' → logprob: -13.273842811584473
    7. '(' → logprob: -14.273842811584473
    8. '):' → logprob: -15.023842811584473
    9. ':
' → logprob: -15.148842811584473
    10. '   ' → logprob: -15.148842811584473

Token 1097: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002988755702972412
    2. 'class' → logprob: -6.627988815307617
    3. ' def' → logprob: -6.627988815307617
    4. 'def' → logprob: -8.877988815307617
    5. ' class' → logprob: -9.127988815307617
    6. '```' → logprob: -9.877988815307617
    7. ':
' → logprob: -10.877988815307617
    8. ':' → logprob: -11.252988815307617
    9. 'import' → logprob: -13.877988815307617
    10. '	def' → logprob: -14.002988815307617

Token 1098: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.23797528445720673
    2. ' def' → logprob: -1.9879752397537231
    3. 'class' → logprob: -2.7379753589630127
    4. '   ' → logprob: -4.612975120544434
    5. '```' → logprob: -8.862975120544434
    6. '	def' → logprob: -10.862975120544434
    7. ' class' → logprob: -11.112975120544434
    8. ':def' → logprob: -12.612975120544434
    9. '``' → logprob: -13.612975120544434
    10. 'import' → logprob: -15.112975120544434

Token 1099: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.29794201254844666
    2. ' __' → logprob: -1.547942042350769
    3. 'init' → logprob: -3.2979419231414795
    4. '_init' → logprob: -4.922942161560059
    5. 'def' → logprob: -7.797942161560059
    6. ' def' → logprob: -8.672942161560059
    7. ' init' → logprob: -9.297942161560059
    8. '_' → logprob: -11.047942161560059
    9. '```' → logprob: -11.422942161560059
    10. '__(' → logprob: -11.672942161560059

Token 1100: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.054500666621607e-06
    2. 'def' → logprob: -12.87500286102295
    3. '_init' → logprob: -15.62500286102295
    4. '```' → logprob: -16.625003814697266
    5. '(init' → logprob: -17.000003814697266
    6. 'class' → logprob: -17.000003814697266
    7. ' init' → logprob: -17.875003814697266
    8. 'ini' → logprob: -18.000003814697266
    9. '__' → logprob: -18.750003814697266
    10. 'len' → logprob: -18.875003814697266

Token 1101: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.02996557392179966
    2. '(self' → logprob: -3.52996563911438
    3. '(' → logprob: -9.5299654006958
    4. '__(
' → logprob: -9.7799654006958
    5. '__' → logprob: -10.1549654006958
    6. ' (' → logprob: -11.2799654006958
    7. 'self' → logprob: -11.7799654006958
    8. 'class' → logprob: -12.0299654006958
    9. '```' → logprob: -12.4049654006958
    10. '__((' → logprob: -12.6549654006958

Token 1102: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.259079363080673e-05
    2. ' self' → logprob: -11.875012397766113
    3. '(self' → logprob: -13.000012397766113
    4. ')' → logprob: -14.000012397766113
    5. '0' → logprob: -14.125012397766113
    6. '   ' → logprob: -14.250012397766113
    7. '
' → logprob: -14.500012397766113
    8. '       ' → logprob: -16.12501335144043
    9. ',' → logprob: -16.75001335144043
    10. '1' → logprob: -16.87501335144043

Token 1103: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009344478603452444
    2. '(self' → logprob: -7.250934600830078
    3. ',self' → logprob: -9.000934600830078
    4. 'self' → logprob: -9.875934600830078
    5. ' (' → logprob: -10.750934600830078
    6. ' ,' → logprob: -11.375934600830078
    7. '(' → logprob: -11.875934600830078
    8. ',(' → logprob: -12.625934600830078
    9. ')' → logprob: -12.875934600830078
    10. ',
' → logprob: -13.875934600830078

Token 1104: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00014942926645744592
    2. '       ' → logprob: -9.000149726867676
    3. ' self' → logprob: -11.250149726867676
    4. '   ' → logprob: -11.625149726867676
    5. '(self' → logprob: -13.125149726867676
    6. 'def' → logprob: -13.250149726867676
    7. '	self' → logprob: -16.00014877319336
    8. '0' → logprob: -16.50014877319336
    9. 'class' → logprob: -16.87514877319336
    10. '1' → logprob: -17.50014877319336

Token 1105: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00924455001950264
    2. '       ' → logprob: -4.759244441986084
    3. ' self' → logprob: -7.884244441986084
    4. 'pass' → logprob: -8.384244918823242
    5. 'def' → logprob: -11.259244918823242
    6. '   ' → logprob: -11.759244918823242
    7. ' pass' → logprob: -13.509244918823242
    8. '(self' → logprob: -14.134244918823242
    9. '	self' → logprob: -14.259244918823242
    10. '0' → logprob: -14.509244918823242

Token 1106: '.results' (ID: 53203)
  Prédit: '.best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.best' → logprob: -1.1787819862365723
    2. '.current' → logprob: -1.4287819862365723
    3. '.board' → logprob: -1.5537819862365723
    4. '.size' → logprob: -2.9287819862365723
    5. '.' → logprob: -3.3037819862365723
    6. '.max' → logprob: -3.3037819862365723
    7. '.player' → logprob: -3.8037819862365723
    8. '.score' → logprob: -4.553781986236572
    9. '.count' → logprob: -4.928781986236572
    10. '.players' → logprob: -5.053781986236572

Token 1107: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01107647456228733
    2. ' =' → logprob: -4.5110764503479
    3. '[' → logprob: -11.386076927185059
    4. '=[]' → logprob: -11.886076927185059
    5. '={}' → logprob: -12.386076927185059
    6. '.' → logprob: -13.261076927185059
    7. ':' → logprob: -13.511076927185059
    8. '   ' → logprob: -14.261076927185059
    9. '_' → logprob: -14.386076927185059
    10. ' ' → logprob: -15.011076927185059

Token 1108: ' []

' (ID: 32833)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.062383394688367844
    2. '[]' → logprob: -2.8123834133148193
    3. 'set' → logprob: -7.81238317489624
    4. '{}
' → logprob: -12.562383651733398
    5. '0' → logprob: -13.187383651733398
    6. 'None' → logprob: -13.687383651733398
    7. 'default' → logprob: -13.687383651733398
    8. 'dict' → logprob: -13.937383651733398
    9. '[]
' → logprob: -14.312383651733398
    10. '{}

' → logprob: -14.312383651733398

Token 1109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5128703117370605
    2. ' def' → logprob: -1.3878703117370605
    3. 'def' → logprob: -1.8878703117370605
    4. '	def' → logprob: -9.012870788574219
    5. '```' → logprob: -10.262870788574219
    6. ',' → logprob: -11.762870788574219
    7. ' indentation' → logprob: -11.762870788574219
    8. '<|end|>' → logprob: -11.887870788574219
    9. ' ind' → logprob: -12.137870788574219
    10. '    ' → logprob: -12.387870788574219

Token 1110: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.08593125641345978
    2. ' def' → logprob: -2.5859313011169434
    3. '   ' → logprob: -4.960931301116943
    4. '	def' → logprob: -11.710930824279785
    5. 'class' → logprob: -13.960930824279785
    6. 'indent' → logprob: -15.335930824279785
    7. ' ' → logprob: -15.585930824279785
    8. ' ind' → logprob: -15.835930824279785
    9. '       ' → logprob: -15.960930824279785
    10. ' indentation' → logprob: -16.0859317779541

Token 1111: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.025864534080028534
    2. 'dfs' → logprob: -4.525864601135254
    3. 'search' → logprob: -5.525864601135254
    4. 'try' → logprob: -5.900864601135254
    5. 'can' → logprob: -5.900864601135254
    6. 'find' → logprob: -6.650864601135254
    7. ' solve' → logprob: -6.900864601135254
    8. 'back' → logprob: -6.900864601135254
    9. 'best' → logprob: -7.900864601135254
    10. ' dfs' → logprob: -8.525864601135254

Token 1112: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01819056086242199
    2. '(' → logprob: -4.018190383911133
    3. ' (' → logprob: -11.018190383911133
    4. '(
' → logprob: -11.143190383911133
    5. 'self' → logprob: -12.018190383911133
    6. '   ' → logprob: -13.768190383911133
    7. '
' → logprob: -14.518190383911133
    8. '_' → logprob: -14.768190383911133
    9. '_(' → logprob: -15.018190383911133
    10. '(s' → logprob: -15.018190383911133

Token 1113: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09221512824296951
    2. '(self' → logprob: -2.467215061187744
    3. 'self' → logprob: -6.217215061187744
    4. ')(' → logprob: -7.842215061187744
    5. '(' → logprob: -8.467215538024902
    6. ' (' → logprob: -8.842215538024902
    7. ',self' → logprob: -8.842215538024902
    8. ' ,' → logprob: -8.967215538024902
    9. ',(' → logprob: -9.717215538024902
    10. ')' → logprob: -9.967215538024902

Token 1114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012118533049942926
    2. '```' → logprob: -9.875121116638184
    3. '	' → logprob: -10.875121116638184
    4. '        ' → logprob: -11.875121116638184
    5. ' for' → logprob: -12.125121116638184
    6. '   ' → logprob: -12.250121116638184
    7. '[' → logprob: -12.375121116638184
    8. '#' → logprob: -12.500121116638184
    9. '​' → logprob: -13.125121116638184
    10. '           ' → logprob: -13.125121116638184

Token 1115: ' import' (ID: 1588)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37205663323402405
    2. 'pass' → logprob: -1.6220566034317017
    3. 'def' → logprob: -3.122056722640991
    4. ' pass' → logprob: -3.247056722640991
    5. '#' → logprob: -4.497056484222412
    6. ' for' → logprob: -4.997056484222412
    7. 'for' → logprob: -5.372056484222412
    8. 'board' → logprob: -5.872056484222412
    9. 'return' → logprob: -6.497056484222412
    10. ' board' → logprob: -7.122056484222412

Token 1116: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.20969603955745697
    2. 'copy' → logprob: -1.7096960544586182
    3. 'heap' → logprob: -5.459695816040039
    4. 'collections' → logprob: -6.334695816040039
    5. ' sys' → logprob: -6.584695816040039
    6. ' copy' → logprob: -8.334695816040039
    7. 'queue' → logprob: -8.584695816040039
    8. 'math' → logprob: -8.709695816040039
    9. ' itertools' → logprob: -8.959695816040039
    10. 'random' → logprob: -9.334695816040039

Token 1117: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24088963866233826
    2. '
' → logprob: -1.7408896684646606
    3. '        
' → logprob: -3.990889549255371
    4. '	' → logprob: -4.990889549255371
    5. ',' → logprob: -5.865889549255371
    6. 'input' → logprob: -5.990889549255371
    7. '		
' → logprob: -6.240889549255371
    8. 'self' → logprob: -6.740889549255371
    9. '```' → logprob: -7.240889549255371
    10. 'import' → logprob: -7.615889549255371

Token 1118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38454437255859375
    2. 'input' → logprob: -1.5095443725585938
    3. 'n' → logprob: -2.8845443725585938
    4. '
' → logprob: -4.259544372558594
    5. 'data' → logprob: -4.634544372558594
    6. ' lines' → logprob: -5.259544372558594
    7. ' input' → logprob: -5.759544372558594
    8. 'line' → logprob: -6.509544372558594
    9. 'sys' → logprob: -6.509544372558594
    10. '```' → logprob: -6.759544372558594

Token 1119: ' lines' (ID: 8698)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5037293434143066
    2. '       ' → logprob: -1.6287293434143066
    3. 'n' → logprob: -2.0037293434143066
    4. 'size' → logprob: -3.6287293434143066
    5. ' input' → logprob: -4.378729343414307
    6. 'data' → logprob: -4.628729343414307
    7. 'lines' (adapté à ' lines') → logprob: -5.128729343414307
    8. ' lines' → logprob: -5.253729343414307
    9. ' n' → logprob: -5.878729343414307
    10. ' size' → logprob: -7.253729343414307

Token 1120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5301244258880615
    2. '=' → logprob: -0.9051244258880615
    3. '()' → logprob: -5.155124664306641
    4. '().' → logprob: -7.905124664306641
    5. '=line' → logprob: -8.15512466430664
    6. '.readline' → logprob: -8.90512466430664
    7. '<|end|>' → logprob: -8.90512466430664
    8. '=[]' → logprob: -10.03012466430664
    9. '()
' → logprob: -10.40512466430664
    10. '(' → logprob: -10.78012466430664

Token 1121: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0005536287208087742
    2. ' sys' → logprob: -7.500553607940674
    3. '[' → logprob: -14.500554084777832
    4. '	sys' → logprob: -17.125553131103516
    5. '=sys' → logprob: -17.125553131103516
    6. '(sys' → logprob: -18.000553131103516
    7. '[]' → logprob: -18.250553131103516
    8. ' [' → logprob: -19.500553131103516
    9. '[]
' → logprob: -19.875553131103516
    10. 'import' → logprob: -20.625553131103516

Token 1122: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -6.253713218029588e-05
    2. '.argv' → logprob: -10.625062942504883
    3. '.stdout' → logprob: -11.000062942504883
    4. '.' → logprob: -11.375062942504883
    5. 'stdin' → logprob: -12.000062942504883
    6. '.std' → logprob: -13.375062942504883
    7. ' .' → logprob: -14.625062942504883
    8. '._' → logprob: -15.250062942504883
    9. '(stdin' → logprob: -15.250062942504883
    10. '.stderr' → logprob: -15.250062942504883

Token 1123: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0013619012897834182
    2. '.readlines' → logprob: -6.626361846923828
    3. 'read' → logprob: -11.001361846923828
    4. '.' → logprob: -11.376361846923828
    5. '.read' → logprob: -11.876361846923828
    6. ' readline' → logprob: -14.251361846923828
    7. '_read' → logprob: -16.376361846923828
    8. '```' → logprob: -17.251361846923828
    9. '   ' → logprob: -17.501361846923828
    10. '.buffer' → logprob: -17.501361846923828

Token 1124: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0019294669618830085
    2. '()' → logprob: -6.25192928314209
    3. '(' → logprob: -15.00192928314209
    4. '()\' → logprob: -15.50192928314209
    5. '()
' → logprob: -15.75192928314209
    6. ' ().' → logprob: -16.376930236816406
    7. 'lines' → logprob: -16.626930236816406
    8. '()

' → logprob: -18.001930236816406
    9. '()`' → logprob: -18.126930236816406
    10. 'split' → logprob: -18.501930236816406

Token 1125: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.4740910232067108
    2. 'split' → logprob: -0.9740910530090332
    3. 'rstrip' → logprob: -11.724090576171875
    4. 'decode' → logprob: -12.349090576171875
    5. 'read' → logprob: -13.474090576171875
    6. 'lines' → logprob: -16.849090576171875
    7. ' split' → logprob: -16.974090576171875
    8. '(split' → logprob: -16.974090576171875
    9. '```' → logprob: -18.349090576171875
    10. 'replace' → logprob: -18.349090576171875

Token 1126: '('\' (ID: 24345)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00020425561524461955
    2. '()' → logprob: -8.500204086303711
    3. '('\' → logprob: -14.750204086303711
    4. '()
' → logprob: -15.625204086303711
    5. '()\' → logprob: -15.625204086303711
    6. '(' → logprob: -16.87520408630371
    7. 'split' → logprob: -18.12520408630371
    8. '("\' → logprob: -19.00020408630371
    9. '.split' → logprob: -19.12520408630371
    10. '(
' → logprob: -19.25020408630371

Token 1127: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003607317106798291
    2. '\n' → logprob: -5.628607273101807
    3. '
' → logprob: -13.003607749938965
    4. 'r' → logprob: -13.503607749938965
    5. '\' → logprob: -14.128607749938965
    6. '```' → logprob: -14.753607749938965
    7. ' \' → logprob: -14.878607749938965
    8. '')' → logprob: -14.878607749938965
    9. ''\' → logprob: -15.128607749938965
    10. ')' → logprob: -15.128607749938965

Token 1128: ' ').' (ID: 114765)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.536382257938385
    2. '()).' → logprob: -1.4113821983337402
    3. ').' → logprob: -2.2863821983337402
    4. '()\' → logprob: -3.9113821983337402
    5. '').' → logprob: -4.03638219833374
    6. '().' → logprob: -4.41138219833374
    7. ')' → logprob: -5.03638219833374
    8. '('\' → logprob: -5.41138219833374
    9. '\n' → logprob: -5.91138219833374
    10. '())' → logprob: -6.53638219833374

Token 1129: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.5649528298527e-05
    2. 'strip' → logprob: -9.500075340270996
    3. 'rstrip' → logprob: -14.625075340270996
    4. ' split' → logprob: -15.500075340270996
    5. '(split' → logprob: -16.875076293945312
    6. 'lines' → logprob: -16.875076293945312
    7. 'spl' → logprob: -17.500076293945312
    8. '```' → logprob: -17.750076293945312
    9. 'decode' → logprob: -18.875076293945312
    10. 's' → logprob: -19.625076293945312

Token 1130: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.0068000368773937225
    2. 'lines' → logprob: -5.256800174713135
    3. '()' → logprob: -6.506800174713135
    4. '("\' → logprob: -9.756799697875977
    5. '('' → logprob: -12.131799697875977
    6. '()\' → logprob: -12.506799697875977
    7. '()
' → logprob: -13.131799697875977
    8. ''\' → logprob: -13.256799697875977
    9. '(' → logprob: -14.381799697875977
    10. '('.')' → logprob: -16.256799697875977

Token 1131: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0789986252784729
    2. '\n' → logprob: -2.578998565673828
    3. '
' → logprob: -9.328998565673828
    4. 'newline' → logprob: -11.453998565673828
    5. '_n' → logprob: -13.078998565673828
    6. 'ndef' → logprob: -13.453998565673828
    7. '```' → logprob: -13.703998565673828
    8. ''n' → logprob: -13.703998565673828
    9. ' n' → logprob: -14.078998565673828
    10. '')' → logprob: -14.453998565673828

Token 1132: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.5906017422676086
    2. '')' → logprob: -0.8406017422676086
    3. '()' → logprob: -4.590601921081543
    4. '       ' → logprob: -5.715601921081543
    5. ')' → logprob: -7.965601921081543
    6. ')
' → logprob: -9.090601921081543
    7. '')
' → logprob: -9.215601921081543
    8. '')[' → logprob: -9.340601921081543
    9. '")
' → logprob: -9.590601921081543
    10. '\n' → logprob: -9.590601921081543

Token 1133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06777197122573853
    2. 'size' → logprob: -2.9427719116210938
    3. ' size' → logprob: -4.942771911621094
    4. 'n' → logprob: -5.942771911621094
    5. 'index' → logprob: -6.942771911621094
    6. ' n' → logprob: -7.192771911621094
    7. 'idx' → logprob: -7.942771911621094
    8. 'i' → logprob: -8.067771911621094
    9. 'count' → logprob: -8.567771911621094
    10. 'length' → logprob: -9.692771911621094

Token 1134: ' idx' (ID: 14016)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.3669167459011078
    2. 'n' → logprob: -1.3669167757034302
    3. 'T' → logprob: -3.7419166564941406
    4. 't' → logprob: -4.116916656494141
    5. 'N' → logprob: -4.991916656494141
    6. 'board' → logprob: -5.991916656494141
    7. '       ' → logprob: -6.241916656494141
    8. 'idx' (adapté à ' idx') → logprob: -8.49191665649414
    9. 'num' → logprob: -8.61691665649414
    10. 'self' → logprob: -8.86691665649414

Token 1135: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.054991625249385834
    2. ' =' → logprob: -2.9299917221069336
    3. '+=' → logprob: -9.554991722106934
    4. ' +=' → logprob: -10.929991722106934
    5. '0' → logprob: -12.054991722106934
    6. '<|end|>' → logprob: -12.429991722106934
    7. '```' → logprob: -13.179991722106934
    8. '[' → logprob: -13.429991722106934
    9. ' ' → logprob: -13.554991722106934
    10. '(' → logprob: -13.679991722106934

Token 1136: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.796184723294573e-06
    2. '1' → logprob: -12.375005722045898
    3. ' ' → logprob: -13.375005722045898
    4. '   ' → logprob: -21.6250057220459
    5. 'int' → logprob: -22.1250057220459
    6. '=' → logprob: -23.0000057220459
    7. '[' → logprob: -23.3750057220459
    8. '۰' → logprob: -23.3750057220459
    9. 'len' → logprob: -23.6250057220459
    10. '2' → logprob: -23.6250057220459

Token 1137: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.546478935983032e-05
    2. '1' → logprob: -10.625025749206543
    3. ' ' → logprob: -13.750025749206543
    4. '2' → logprob: -19.375024795532227
    5. 'int' → logprob: -19.625024795532227
    6. '   ' → logprob: -20.250024795532227
    7. '=' → logprob: -20.500024795532227
    8. 'len' → logprob: -20.625024795532227
    9. '[' → logprob: -21.125024795532227
    10. '```' → logprob: -21.812524795532227

Token 1138: '
' (ID: 198)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.8329042792320251
    2. 'n' → logprob: -1.08290433883667
    3. '       ' → logprob: -1.58290433883667
    4. ' size' → logprob: -4.70790433883667
    5. 't' → logprob: -5.45790433883667
    6. ' n' → logprob: -5.58290433883667
    7. 'num' → logprob: -7.08290433883667
    8. 'while' → logprob: -7.20790433883667
    9. 's' → logprob: -7.33290433883667
    10. 'N' → logprob: -7.58290433883667

Token 1139: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5370915532112122
    2. 'size' → logprob: -1.9120914936065674
    3. 'T' → logprob: -2.1620914936065674
    4. 't' → logprob: -2.7870914936065674
    5. 'while' → logprob: -3.0370914936065674
    6. '       ' → logprob: -3.4120914936065674
    7. 'num' → logprob: -5.0370917320251465
    8. 'count' → logprob: -7.0370917320251465
    9. 'N' → logprob: -7.1620917320251465
    10. ' n' → logprob: -7.4120917320251465

Token 1140: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9994649887084961
    2. 't' → logprob: -0.9994649887084961
    3. 'T' → logprob: -2.249464988708496
    4. ' while' → logprob: -3.374464988708496
    5. 'while' (adapté à ' while') → logprob: -3.499464988708496
    6. ' T' → logprob: -3.749464988708496
    7. ' n' → logprob: -3.874464988708496
    8. 'size' → logprob: -4.124464988708496
    9. ' t' → logprob: -4.124464988708496
    10. 'num' → logprob: -4.624464988708496

Token 1141: ' True' (ID: 6432)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0002728985855355859
    2. ' idx' → logprob: -8.375272750854492
    3. 'True' → logprob: -10.375272750854492
    4. 'lines' → logprob: -11.750272750854492
    5. ' True' → logprob: -13.375272750854492
    6. '	idx' → logprob: -13.875272750854492
    7. '
' → logprob: -15.500272750854492
    8. 'len' → logprob: -15.750272750854492
    9. '(idx' → logprob: -16.000272750854492
    10. 'index' → logprob: -16.375272750854492

Token 1142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03075355850160122
    2. '           ' → logprob: -4.0307536125183105
    3. ':
' → logprob: -4.6557536125183105
    4. '<|end|>' → logprob: -6.7807536125183105
    5. '<|end|>' → logprob: -7.5307536125183105
    6. ',' → logprob: -7.6557536125183105
    7. '       ' → logprob: -8.280753135681152
    8. ' and' → logprob: -8.530753135681152
    9. '():' → logprob: -9.530753135681152
    10. ' :' → logprob: -9.905753135681152

Token 1143: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3721606731414795
    2. 'if' → logprob: -1.2471606731414795
    3. '       ' → logprob: -3.8721606731414795
    4. '   ' → logprob: -6.247160911560059
    5. '           ' → logprob: -7.997160911560059
    6. 'try' → logprob: -9.372160911560059
    7. '	if' → logprob: -9.747160911560059
    8. ' ' → logprob: -9.997160911560059
    9. ' try' → logprob: -10.372160911560059
    10. 'token' → logprob: -10.872160911560059

Token 1144: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.17495085299015045
    2. ' if' → logprob: -1.9249508380889893
    3. 'line' → logprob: -5.049951076507568
    4. 'n' → logprob: -5.299951076507568
    5. '           ' → logprob: -6.549951076507568
    6. ' line' → logprob: -7.299951076507568
    7. ' n' → logprob: -7.799951076507568
    8. 'size' → logprob: -8.17495059967041
    9. 'N' → logprob: -9.04995059967041
    10. 'length' → logprob: -9.42495059967041

Token 1145: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00033796546631492674
    2. ' idx' → logprob: -8.000337600708008
    3. '	idx' → logprob: -13.000337600708008
    4. '_idx' → logprob: -15.625337600708008
    5. '(idx' → logprob: -16.625337600708008
    6. '   ' → logprob: -17.250337600708008
    7. '
' → logprob: -17.375337600708008
    8. 'lines' → logprob: -17.750337600708008
    9. 'index' → logprob: -18.250337600708008
    10. 'len' → logprob: -18.875337600708008

Token 1146: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.3869558274745941
    2. ' >=' → logprob: -1.1369558572769165
    3. '==' → logprob: -9.886956214904785
    4. ']>=' → logprob: -10.886956214904785
    5. ')>=' → logprob: -12.011956214904785
    6. ' ==' → logprob: -12.011956214904785
    7. '=' → logprob: -14.386956214904785
    8. '≥' → logprob: -14.511956214904785
    9. '<len' → logprob: -15.011956214904785
    10. '   ' → logprob: -15.136956214904785

Token 1147: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -5.512236498361744e-07
    2. ' len' → logprob: -14.875000953674316
    3. 'lines' → logprob: -15.875000953674316
    4. '=len' → logprob: -18.125
    5. '(len' → logprob: -18.875
    6. '           ' → logprob: -19.125
    7. '<len' → logprob: -19.125
    8. 'length' → logprob: -19.375
    9. '	len' → logprob: -19.625
    10. '[len' → logprob: -19.875

Token 1148: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.12695929408073425
    2. 'lines' → logprob: -2.1269593238830566
    3. ' lines' → logprob: -10.376958847045898
    4. '	lines' → logprob: -16.2519588470459
    5. '_lines' → logprob: -17.3769588470459
    6. '.lines' → logprob: -18.0019588470459
    7. 'Lines' → logprob: -18.6269588470459
    8. '-lines' → logprob: -19.3769588470459
    9. '(' → logprob: -19.7519588470459
    10. '(line' → logprob: -20.3769588470459

Token 1149: '):
' (ID: 1883)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.030989745631814003
    2. ':' → logprob: -4.155989646911621
    3. ':
' → logprob: -4.655989646911621
    4. '           ' → logprob: -6.155989646911621
    5. ' and' → logprob: -7.030989646911621
    6. 'or' → logprob: -7.030989646911621
    7. ')' → logprob: -7.155989646911621
    8. '):
' → logprob: -8.530989646911621
    9. 'and' → logprob: -9.155989646911621
    10. '               ' → logprob: -9.155989646911621

Token 1150: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.376848902320489e-05
    2. '           ' → logprob: -9.875093460083008
    3. 'break' → logprob: -11.375093460083008
    4. ':
' → logprob: -12.125093460083008
    5. '                   ' → logprob: -12.250093460083008
    6. '			' → logprob: -12.500093460083008
    7. '   ' → logprob: -12.500093460083008
    8. ':' → logprob: -13.125093460083008
    9. '                
' → logprob: -13.250093460083008
    10. ' break' → logprob: -13.375093460083008

Token 1151: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.038512811064720154
    2. '               ' → logprob: -3.663512706756592
    3. ' break' → logprob: -4.663512706756592
    4. '                   ' → logprob: -6.663512706756592
    5. 'return' → logprob: -6.913512706756592
    6. '   ' → logprob: -8.53851318359375
    7. '           ' → logprob: -9.16351318359375
    8. 'b' → logprob: -10.03851318359375
    9. '	break' → logprob: -10.03851318359375
    10. ' ' → logprob: -11.16351318359375

Token 1152: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004033402539789677
    2. '            
' → logprob: -6.37903356552124
    3. '    
' → logprob: -7.62903356552124
    4. '   ' → logprob: -8.129033088684082
    5. '```' → logprob: -8.379033088684082
    6. '       ' → logprob: -8.379033088684082
    7. ' ' → logprob: -8.754033088684082
    8. '<|end|>' → logprob: -8.754033088684082
    9. '  
' → logprob: -9.004033088684082
    10. '               ' → logprob: -9.129033088684082

Token 1153: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016223933547735214
    2. 'line' → logprob: -5.266223907470703
    3. ' line' → logprob: -5.516223907470703
    4. '    
' → logprob: -6.266223907470703
    5. '            
' → logprob: -6.516223907470703
    6. '   ' → logprob: -6.891223907470703
    7. '       ' → logprob: -7.266223907470703
    8. 'size' → logprob: -7.766223907470703
    9. '```' → logprob: -8.391223907470703
    10. ' size' → logprob: -8.766223907470703

Token 1154: ' line' (ID: 2543)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.5618070960044861
    2. 'n' → logprob: -1.5618071556091309
    3. 'line' (adapté à ' line') → logprob: -1.6868071556091309
    4. 'N' → logprob: -3.436807155609131
    5. 'if' → logprob: -7.061807155609131
    6. 'sz' → logprob: -7.436807155609131
    7. 'parts' → logprob: -7.811807155609131
    8. '   ' → logprob: -8.436806678771973
    9. 'params' → logprob: -9.061806678771973
    10. 'first' → logprob: -9.311806678771973

Token 1155: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11306454986333847
    2. '=' → logprob: -2.2380645275115967
    3. '=line' → logprob: -8.488064765930176
    4. 'tokens' → logprob: -10.988064765930176
    5. '_tokens' → logprob: -11.863064765930176
    6. '.strip' → logprob: -12.863064765930176
    7. 's' → logprob: -12.988064765930176
    8. '=
' → logprob: -13.238064765930176
    9. ' =
' → logprob: -13.738064765930176
    10. 'token' → logprob: -14.488064765930176

Token 1156: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.04858850687742233
    2. ' lines' → logprob: -3.048588514328003
    3. '(lines' → logprob: -14.173588752746582
    4. 'line' → logprob: -15.173588752746582
    5. '	lines' → logprob: -16.548587799072266
    6. '-lines' → logprob: -19.048587799072266
    7. '.lines' → logprob: -19.173587799072266
    8. 'lin' → logprob: -19.798587799072266
    9. '_lines' → logprob: -19.923587799072266
    10. 'Lines' → logprob: -20.923587799072266

Token 1157: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.3544423381972592e-05
    2. 'idx' → logprob: -12.37501335144043
    3. '[token' → logprob: -12.50001335144043
    4. '[' → logprob: -12.75001335144043
    5. '[id' → logprob: -14.00001335144043
    6. '[index' → logprob: -14.62501335144043
    7. '[
' → logprob: -14.75001335144043
    8. '[ind' → logprob: -15.75001335144043
    9. ' idx' → logprob: -16.12501335144043
    10. '```' → logprob: -16.12501335144043

Token 1158: '].' (ID: 1651)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.034016095101833344
    2. '].' → logprob: -4.409016132354736
    3. ').' → logprob: -4.659016132354736
    4. '
' → logprob: -5.534016132354736
    5. '           ' → logprob: -5.784016132354736
    6. ')' → logprob: -6.784016132354736
    7. '.' → logprob: -7.409016132354736
    8. '.split' → logprob: -7.909016132354736
    9. '.rstrip' → logprob: -7.909016132354736
    10. ']' → logprob: -8.034015655517578

Token 1159: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.2664456789934775e-06
    2. 'split' → logprob: -13.750000953674316
    3. 'rstrip' → logprob: -16.250001907348633
    4. 'startswith' → logprob: -20.000001907348633
    5. '.strip' → logprob: -20.750001907348633
    6. ' strip' → logprob: -21.125001907348633
    7. '_strip' → logprob: -21.125001907348633
    8. 'str' → logprob: -21.500001907348633
    9. '(strip' → logprob: -22.500001907348633
    10. 'stripe' → logprob: -23.000001907348633

Token 1160: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.026313303038477898
    2. '()
' → logprob: -3.651313304901123
    3. '(' → logprob: -12.401312828063965
    4. '()\' → logprob: -13.276312828063965
    5. '()

' → logprob: -13.401312828063965
    6. '();' → logprob: -13.776312828063965
    7. '()
' → logprob: -14.151312828063965
    8. '()<' → logprob: -14.151312828063965
    9. '())' → logprob: -14.401312828063965
    10. '()</' → logprob: -14.651312828063965

Token 1161: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.28624653816223145
    2. '           ' → logprob: -1.4112465381622314
    3. ' if' → logprob: -5.411246299743652
    4. '       ' → logprob: -8.286246299743652
    5. '   ' → logprob: -9.036246299743652
    6. 'token' → logprob: -9.411246299743652
    7. '```' → logprob: -9.786246299743652
    8. '<|end|>' → logprob: -10.286246299743652
    9. 'If' → logprob: -11.161246299743652
    10. 'tokens' → logprob: -11.536246299743652

Token 1162: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00248849974013865
    2. 'idx' → logprob: -6.002488613128662
    3. ' if' → logprob: -11.377488136291504
    4. '           ' → logprob: -13.877488136291504
    5. '       ' → logprob: -15.877488136291504
    6. '```' → logprob: -16.50248908996582
    7. 'tokens' → logprob: -16.87748908996582
    8. ' idx' → logprob: -16.87748908996582
    9. 'If' → logprob: -17.00248908996582
    10. '	if' → logprob: -17.25248908996582

Token 1163: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.20190013945102692
    2. 'not' → logprob: -1.7019001245498657
    3. ' not' → logprob: -7.701900005340576
    4. ' line' → logprob: -10.576900482177734
    5. '(line' → logprob: -12.451900482177734
    6. '#line' → logprob: -12.826900482177734
    7. 'len' → logprob: -13.451900482177734
    8. '[line' → logprob: -14.576900482177734
    9. '=line' → logprob: -14.826900482177734
    10. '!' → logprob: -15.451900482177734

Token 1164: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.002538086613640189
    2. ' ==' → logprob: -6.002538204193115
    3. '()==' → logprob: -9.877537727355957
    4. '===' → logprob: -12.127537727355957
    5. '==
' → logprob: -13.127537727355957
    6. '=="' → logprob: -13.877537727355957
    7. '=' → logprob: -13.877537727355957
    8. ']==' → logprob: -14.127537727355957
    9. ')==' → logprob: -14.627537727355957
    10. '=='' → logprob: -14.752537727355957

Token 1165: ' "":
' (ID: 132826)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8486817479133606
    2. '''' → logprob: -1.0986816883087158
    3. '"' → logprob: -1.5986816883087158
    4. '""' → logprob: -3.473681688308716
    5. '"":' → logprob: -5.348681926727295
    6. '0' → logprob: -7.473681926727295
    7. ''#' → logprob: -9.098681449890137
    8. ''end' → logprob: -10.348681449890137
    9. '"#' → logprob: -11.223681449890137
    10. ''A' → logprob: -11.973681449890137

Token 1166: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005449920892715454
    2. ':' → logprob: -5.8804497718811035
    3. ' or' → logprob: -6.7554497718811035
    4. ':
' → logprob: -7.0054497718811035
    5. '           ' → logprob: -7.8804497718811035
    6. ',' → logprob: -10.255450248718262
    7. '<|end|>' → logprob: -10.255450248718262
    8. '                   ' → logprob: -10.380450248718262
    9. ' and' → logprob: -11.005450248718262
    10. '	           ' → logprob: -11.255450248718262

Token 1167: ' idx' (ID: 14016)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.22164157032966614
    2. '               ' → logprob: -1.7216415405273438
    3. 'idx' (adapté à ' idx') → logprob: -3.9716415405273438
    4. ' break' → logprob: -7.596641540527344
    5. '           ' → logprob: -7.846641540527344
    6. '                   ' → logprob: -8.471641540527344
    7. 'return' → logprob: -10.096641540527344
    8. '	break' → logprob: -11.221641540527344
    9. '   ' → logprob: -11.721641540527344
    10. ' idx' → logprob: -11.971641540527344

Token 1168: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0013320252764970064
    2. ' +=' → logprob: -6.626331806182861
    3. '+' → logprob: -13.00133228302002
    4. '=' → logprob: -13.25133228302002
    5. ']+=' → logprob: -13.25133228302002
    6. '```' → logprob: -16.126331329345703
    7. '           ' → logprob: -16.251331329345703
    8. '++' → logprob: -16.876331329345703
    9. '                   ' → logprob: -17.001331329345703
    10. '   ' → logprob: -17.001331329345703

Token 1169: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '
' → logprob: -20.625001907348633
    4. '```' → logprob: -20.750001907348633
    5. '+' → logprob: -22.000001907348633
    6. '   ' → logprob: -22.500001907348633
    7. '１' → logprob: -22.625001907348633
    8. '۱' → logprob: -23.125001907348633
    9. '=' → logprob: -23.125001907348633
    10. '१' → logprob: -23.937501907348633

Token 1170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -19.375
    4. '１' → logprob: -20.375
    5. '
' → logprob: -20.375
    6. '   ' → logprob: -20.6875
    7. '+' → logprob: -21.0625
    8. '۱' → logprob: -21.3125
    9. '0' → logprob: -21.6875
    10. '{' → logprob: -21.8125

Token 1171: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.8325677703833207e-05
    2. '                   ' → logprob: -11.625028610229492
    3. '           ' → logprob: -11.750028610229492
    4. '<|end|>' → logprob: -12.625028610229492
    5. 'continue' → logprob: -12.750028610229492
    6. ' and' → logprob: -14.375028610229492
    7. '                       ' → logprob: -14.500028610229492
    8. '	           ' → logprob: -14.625028610229492
    9. ' continue' → logprob: -14.750028610229492
    10. '			' → logprob: -14.750028610229492

Token 1172: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007917628972791135
    2. '                   ' → logprob: -7.750791549682617
    3. '           ' → logprob: -8.125791549682617
    4. 'continue' → logprob: -10.375791549682617
    5. '   ' → logprob: -11.875791549682617
    6. '```' → logprob: -12.125791549682617
    7. '<|end|>' → logprob: -12.625791549682617
    8. '	           ' → logprob: -12.750791549682617
    9. ' continue' → logprob: -12.875791549682617
    10. '			' → logprob: -13.000791549682617

Token 1173: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.004582734312862158
    2. '               ' → logprob: -5.50458288192749
    3. ' continue' → logprob: -7.75458288192749
    4. 'break' → logprob: -9.504582405090332
    5. '	continue' → logprob: -14.629582405090332
    6. '           ' → logprob: -16.00458335876465
    7. 'contin' → logprob: -16.37958335876465
    8. '                   ' → logprob: -16.75458335876465
    9. 'return' → logprob: -16.75458335876465
    10. '_continue' → logprob: -17.00458335876465

Token 1174: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004925066023133695
    2. '```' → logprob: -8.750492095947266
    3. 'if' → logprob: -9.375492095947266
    4. '       ' → logprob: -9.500492095947266
    5. 'size' → logprob: -9.750492095947266
    6. ' if' → logprob: -10.000492095947266
    7. '   ' → logprob: -10.875492095947266
    8. 'idx' → logprob: -11.250492095947266
    9. 'n' → logprob: -11.875492095947266
    10. '               ' → logprob: -12.000492095947266

Token 1175: '           ' (ID: 352)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.13926538825035095
    2. '           ' → logprob: -2.139265298843384
    3. ' size' → logprob: -4.514265537261963
    4. 'n' → logprob: -7.764265537261963
    5. '       ' → logprob: -7.889265537261963
    6. '```' → logprob: -8.764265060424805
    7. '   ' → logprob: -9.389265060424805
    8. 'if' → logprob: -9.889265060424805
    9. 'length' → logprob: -10.139265060424805
    10. 's' → logprob: -10.389265060424805

Token 1176: ' if' (ID: 538)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.11179541051387787
    2. 'n' → logprob: -2.361795425415039
    3. 'N' → logprob: -4.611795425415039
    4. 'parts' → logprob: -6.861795425415039
    5. 'sz' → logprob: -8.486795425415039
    6. 'try' → logprob: -9.111795425415039
    7. '           ' → logprob: -9.361795425415039
    8. ' size' → logprob: -9.736795425415039
    9. 'num' → logprob: -10.861795425415039
    10. 'if' (adapté à ' if') → logprob: -11.111795425415039

Token 1177: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.22584927082061768
    2. ' line' → logprob: -1.6008492708206177
    3. '"' → logprob: -9.100849151611328
    4. 'len' → logprob: -9.350849151611328
    5. 'False' → logprob: -10.225849151611328
    6. ''' → logprob: -10.350849151611328
    7. ' not' → logprob: -10.350849151611328
    8. ' ' → logprob: -10.850849151611328
    9. 'idx' → logprob: -10.850849151611328
    10. ' '' → logprob: -10.975849151611328

Token 1178: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.517311155796051
    2. ' ==' → logprob: -1.5173110961914062
    3. '.startswith' → logprob: -1.7673110961914062
    4. '=' → logprob: -5.267311096191406
    5. ' =' → logprob: -6.017311096191406
    6. '[' → logprob: -6.517311096191406
    7. 'startswith' → logprob: -7.142311096191406
    8. '==
' → logprob: -7.267311096191406
    9. '.split' → logprob: -7.517311096191406
    10. 'tokens' → logprob: -8.017311096191406

Token 1179: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02025770954787731
    2. ''' → logprob: -4.145257472991943
    3. '0' → logprob: -5.520257472991943
    4. '"#' → logprob: -9.520257949829102
    5. ' "' → logprob: -10.395257949829102
    6. 'END' → logprob: -10.770257949829102
    7. ''end' → logprob: -11.645257949829102
    8. 'end' → logprob: -11.770257949829102
    9. '""' → logprob: -11.770257949829102
    10. ' '' → logprob: -11.770257949829102

Token 1180: '0' (ID: 15)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.2132461667060852
    2. '":
' → logprob: -1.9632461071014404
    3. '"):
' → logprob: -3.8382461071014404
    4. '"' → logprob: -4.2132463455200195
    5. '"):' → logprob: -4.7132463455200195
    6. '0' → logprob: -6.0882463455200195
    7. '```' → logprob: -6.8382463455200195
    8. 'def' → logprob: -7.3382463455200195
    9. '1' → logprob: -7.8382463455200195
    10. '
' → logprob: -8.21324634552002

Token 1181: ' ' (ID: 220)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.20382799208164215
    2. '":
' → logprob: -1.828827977180481
    3. '"' → logprob: -3.8288280963897705
    4. '"):
' → logprob: -6.828827857971191
    5. '":
' → logprob: -7.453827857971191
    6. '"):' → logprob: -9.328827857971191
    7. '<|end|>' → logprob: -9.453827857971191
    8. '0' → logprob: -9.953827857971191
    9. '<|end|>' → logprob: -10.203827857971191
    10. '\n' → logprob: -10.203827857971191

Token 1182: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.3199920178740285e-05
    2. ' ' → logprob: -10.875022888183594
    3. '">' → logprob: -12.875022888183594
    4. '"' → logprob: -13.500022888183594
    5. '<|end|>' → logprob: -15.625022888183594
    6. '")' → logprob: -16.500022888183594
    7. '
' → logprob: -17.375022888183594
    8. '#' → logprob: -17.500022888183594
    9. '<|end|>' → logprob: -17.500022888183594
    10. '">
' → logprob: -18.500022888183594

Token 1183: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.020884018391370773
    2. '":' → logprob: -4.020884037017822
    3. '\n' → logprob: -6.145884037017822
    4. '"' → logprob: -8.270883560180664
    5. '":
' → logprob: -8.270883560180664
    6. '"):
' → logprob: -10.895883560180664
    7. '0' → logprob: -11.020883560180664
    8. '":

' → logprob: -11.395883560180664
    9. '\r' → logprob: -11.645883560180664
    10. ' "' → logprob: -11.770883560180664

Token 1184: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010536498157307506
    2. ':' → logprob: -7.251053810119629
    3. '           ' → logprob: -9.251053810119629
    4. ':
' → logprob: -9.501053810119629
    5. '\n' → logprob: -10.001053810119629
    6. '                   ' → logprob: -10.251053810119629
    7. '                       ' → logprob: -10.876053810119629
    8. '<|end|>' → logprob: -11.001053810119629
    9. '	           ' → logprob: -11.376053810119629
    10. '			' → logprob: -11.876053810119629

Token 1185: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0018266693223267794
    2. ' break' → logprob: -6.751826763153076
    3. '               ' → logprob: -7.751826763153076
    4. '           ' → logprob: -8.626826286315918
    5. '	break' → logprob: -10.876826286315918
    6. 'return' → logprob: -10.876826286315918
    7. 'b' → logprob: -12.376826286315918
    8. '                   ' → logprob: -13.001826286315918
    9. '```' → logprob: -14.001826286315918
    10. 'BREAK' → logprob: -14.376826286315918

Token 1186: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003945536911487579
    2. '       ' → logprob: -6.003945350646973
    3. '            
' → logprob: -7.753945350646973
    4. '   ' → logprob: -7.878945350646973
    5. '```' → logprob: -9.253945350646973
    6. '<|end|>' → logprob: -9.253945350646973
    7. '        
' → logprob: -9.378945350646973
    8. '    
' → logprob: -9.878945350646973
    9. '
' → logprob: -10.003945350646973
    10. '		' → logprob: -10.378945350646973

Token 1187: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10130615532398224
    2. '       ' → logprob: -2.476306200027466
    3. '   ' → logprob: -4.976305961608887
    4. '<|end|>' → logprob: -6.601305961608887
    5. '```' → logprob: -6.976305961608887
    6. '        
' → logprob: -7.351305961608887
    7. '	       ' → logprob: -7.976305961608887
    8. '<|end|>' → logprob: -8.101305961608887
    9. '            
' → logprob: -8.226305961608887
    10. '		' → logprob: -8.726305961608887

Token 1188: ' N' (ID: 478)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.007373184431344271
    2. 'n' → logprob: -5.507373332977295
    3. ' size' → logprob: -6.257373332977295
    4. 'sz' → logprob: -7.257373332977295
    5. 'tokens' → logprob: -8.507372856140137
    6. 'parts' → logprob: -9.007372856140137
    7. '           ' → logprob: -9.007372856140137
    8. 'sizes' → logprob: -9.632372856140137
    9. 's' → logprob: -10.007372856140137
    10. ' n' → logprob: -10.632372856140137

Token 1189: '_C' (ID: 1720)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6018480658531189
    2. ' =' → logprob: -0.8518480658531189
    3. '=' → logprob: -3.7268481254577637
    4. ' ,' → logprob: -6.976848125457764
    5. ' ' → logprob: -8.101847648620605
    6. ',size' → logprob: -9.351847648620605
    7. ',N' → logprob: -10.101847648620605
    8. ' =
' → logprob: -10.601847648620605
    9. ',n' → logprob: -10.726847648620605
    10. '=int' → logprob: -11.101847648620605

Token 1190: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9800102114677429
    2. ' =' → logprob: -1.1050102710723877
    3. '=' → logprob: -1.2300102710723877
    4. 'ount' → logprob: -8.105010032653809
    5. '=int' → logprob: -8.730010032653809
    6. '=line' → logprob: -8.855010032653809
    7. ',size' → logprob: -9.355010032653809
    8. ' ,' → logprob: -9.480010032653809
    9. '_str' → logprob: -9.855010032653809
    10. 'size' → logprob: -10.105010032653809

Token 1191: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.1288212239742279
    2. ' line' → logprob: -2.1288211345672607
    3. 'lines' → logprob: -6.75382137298584
    4. ' lines' → logprob: -7.50382137298584
    5. 'list' → logprob: -8.87882137298584
    6. ' list' → logprob: -11.00382137298584
    7. '[line' → logprob: -11.00382137298584
    8. '#line' → logprob: -14.75382137298584
    9. '[' → logprob: -14.87882137298584
    10. '(line' → logprob: -15.37882137298584

Token 1192: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.08433493226766586
    2. ' =' → logprob: -3.0843348503112793
    3. '.' → logprob: -3.7093348503112793
    4. '=' → logprob: -4.709334850311279
    5. ' .' → logprob: -6.834334850311279
    6. 'split' → logprob: -8.584335327148438
    7. ' +=' → logprob: -9.584335327148438
    8. '_tokens' → logprob: -9.584335327148438
    9. '_split' → logprob: -9.959335327148438
    10. '[' → logprob: -10.584335327148438

Token 1193: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001997273648157716
    2. '('' → logprob: -6.501997470855713
    3. '()
' → logprob: -8.376996994018555
    4. '()[' → logprob: -8.501996994018555
    5. '(' → logprob: -10.251996994018555
    6. '("' → logprob: -12.001996994018555
    7. '[' → logprob: -12.251996994018555
    8. '();' → logprob: -13.001996994018555
    9. ''' → logprob: -13.251996994018555
    10. '()"' → logprob: -13.251996994018555

Token 1194: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03965440392494202
    2. '[' → logprob: -3.664654493331909
    3. '       ' → logprob: -6.16465425491333
    4. '=' → logprob: -6.66465425491333
    5. '```' → logprob: -6.66465425491333
    6. '            
' → logprob: -7.16465425491333
    7. ',' → logprob: -7.16465425491333
    8. 'size' → logprob: -7.16465425491333
    9. 'N' → logprob: -7.28965425491333
    10. ' =' → logprob: -7.41465425491333

Token 1195: ' if' (ID: 538)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.19920240342617035
    2. 'N' → logprob: -2.199202299118042
    3. ' size' → logprob: -3.324202299118042
    4. '           ' → logprob: -3.824202299118042
    5. 'n' → logprob: -4.574202537536621
    6. ' N' → logprob: -6.949202537536621
    7. 'idx' → logprob: -7.699202537536621
    8. ' n' → logprob: -10.074202537536621
    9. '[size' → logprob: -10.574202537536621
    10. '```' → logprob: -10.824202537536621

Token 1196: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00042864278657361865
    2. ' len' → logprob: -8.000428199768066
    3. 'N' → logprob: -9.375428199768066
    4. 'not' → logprob: -12.125428199768066
    5. '(len' → logprob: -13.750428199768066
    6. ' not' → logprob: -14.000428199768066
    7. '           ' → logprob: -15.250428199768066
    8. '[len' → logprob: -15.500428199768066
    9. '0' → logprob: -15.750428199768066
    10. '	len' → logprob: -15.750428199768066

Token 1197: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.12704412639141083
    2. 'N' → logprob: -2.127044200897217
    3. '(' → logprob: -9.877043724060059
    4. '<N' → logprob: -10.002043724060059
    5. '[N' → logprob: -11.377043724060059
    6. '(
' → logprob: -13.252043724060059
    7. '>N' → logprob: -13.877043724060059
    8. '==' → logprob: -13.877043724060059
    9. ' N' → logprob: -14.127043724060059
    10. '```' → logprob: -14.752043724060059

Token 1198: '_C' (ID: 1720)
  Prédit: '_C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.006039123050868511
    2. '_N' → logprob: -5.631039142608643
    3. ')' → logprob: -7.006039142608643
    4. '[' → logprob: -8.006038665771484
    5. '>' → logprob: -8.131038665771484
    6. ')==' → logprob: -8.506038665771484
    7. '[N' → logprob: -8.756038665771484
    8. '<N' → logprob: -9.381038665771484
    9. ')>' → logprob: -9.756038665771484
    10. '==' → logprob: -10.006038665771484

Token 1199: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1722034215927124
    2. ' ==' → logprob: -2.422203540802002
    3. ')' → logprob: -3.922203540802002
    4. '>' → logprob: -4.047203540802002
    5. ')==' → logprob: -4.297203540802002
    6. '!=' → logprob: -5.047203540802002
    7. '<' → logprob: -5.922203540802002
    8. '[' → logprob: -5.922203540802002
    9. ' !=' → logprob: -6.547203540802002
    10. '[token' → logprob: -6.547203540802002

Token 1200: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09106563776731491
    2. ' ==' → logprob: -3.0910656452178955
    3. '!=' → logprob: -3.4660656452178955
    4. '<' → logprob: -5.341065406799316
    5. ' !=' → logprob: -5.716065406799316
    6. '[' → logprob: -6.591065406799316
    7. '<=' → logprob: -8.716065406799316
    8. ' <' → logprob: -8.841065406799316
    9. '=' → logprob: -8.841065406799316
    10. ')' → logprob: -9.216065406799316

Token 1201: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '=' → logprob: -18.6250057220459
    4. '1' → logprob: -18.6250057220459
    5. '```' → logprob: -19.2500057220459
    6. '۲' → logprob: -19.3750057220459
    7. '   ' → logprob: -19.5625057220459
    8. '3' → logprob: -19.8750057220459
    9. '[' → logprob: -19.8750057220459
    10. ')' → logprob: -19.8750057220459

Token 1202: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4098252058029175
    2. ' or' → logprob: -1.1598252058029175
    3. ':
' → logprob: -4.159825325012207
    4. ' and' → logprob: -5.909825325012207
    5. '               ' → logprob: -6.159825325012207
    6. '           ' → logprob: -7.409825325012207
    7. ',' → logprob: -8.034825325012207
    8. ')' → logprob: -8.034825325012207
    9. 'or' → logprob: -8.159825325012207
    10. '[' → logprob: -8.534825325012207

Token 1203: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26869329810142517
    2. ':' → logprob: -2.518693208694458
    3. ' or' → logprob: -2.643693208694458
    4. ':
' → logprob: -3.018693208694458
    5. '           ' → logprob: -3.643693208694458
    6. '[' → logprob: -6.393693447113037
    7. ' ' → logprob: -6.643693447113037
    8. '   ' → logprob: -7.018693447113037
    9. '                   ' → logprob: -7.143693447113037
    10. ' and' → logprob: -7.393693447113037

Token 1204: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.21223819255828857
    2. '               ' → logprob: -2.087238311767578
    3. 'continue' → logprob: -3.087238311767578
    4. 'break' → logprob: -4.212238311767578
    5. '                   ' → logprob: -5.837238311767578
    6. '           ' → logprob: -6.337238311767578
    7. ' idx' → logprob: -6.962238311767578
    8. 'return' → logprob: -7.712238311767578
    9. '```' → logprob: -8.462238311767578
    10. ' continue' → logprob: -8.587238311767578

Token 1205: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.05519402027130127
    2. ' +=' → logprob: -2.9301939010620117
    3. '+' → logprob: -8.680193901062012
    4. '           ' → logprob: -9.930193901062012
    5. ']+=' → logprob: -10.055193901062012
    6. '=' → logprob: -11.555193901062012
    7. '               ' → logprob: -12.055193901062012
    8. '                   ' → logprob: -12.055193901062012
    9. '```' → logprob: -12.055193901062012
    10. '<|end|>' → logprob: -12.680193901062012

Token 1206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '+' → logprob: -18.000001907348633
    4. '```' → logprob: -18.250001907348633
    5. '   ' → logprob: -18.750001907348633
    6. '=' → logprob: -19.125001907348633
    7. '１' → logprob: -19.562501907348633
    8. '>' → logprob: -20.000001907348633
    9. '`' → logprob: -20.625001907348633
    10. '
' → logprob: -20.625001907348633

Token 1207: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003333133412525058
    2. '                   ' → logprob: -6.12833309173584
    3. 'continue' → logprob: -7.12833309173584
    4. ' continue' → logprob: -8.87833309173584
    5. '           ' → logprob: -9.12833309173584
    6. '```' → logprob: -11.00333309173584
    7. '                       ' → logprob: -11.25333309173584
    8. '                ' → logprob: -11.37833309173584
    9. '<|end|>' → logprob: -11.87833309173584
    10. '              ' → logprob: -11.87833309173584

Token 1208: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00047535591875202954
    2. '                   ' → logprob: -7.8754754066467285
    3. '           ' → logprob: -10.62547492980957
    4. '	           ' → logprob: -10.62547492980957
    5. ' continue' → logprob: -11.50047492980957
    6. 'continue' → logprob: -11.62547492980957
    7. '                ' → logprob: -12.50047492980957
    8. '			' → logprob: -12.62547492980957
    9. '                       ' → logprob: -12.62547492980957
    10. '		       ' → logprob: -13.00047492980957

Token 1209: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0020826896652579308
    2. ' continue' → logprob: -6.752082824707031
    3. '               ' → logprob: -7.002082824707031
    4. '```' → logprob: -14.002082824707031
    5. '           ' → logprob: -14.252082824707031
    6. '	continue' → logprob: -14.627082824707031
    7. '                   ' → logprob: -16.50208282470703
    8. '_continue' → logprob: -16.75208282470703
    9. 'contin' → logprob: -16.87708282470703
    10. 'continu' → logprob: -17.50208282470703

Token 1210: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011653418187052011
    2. '            
' → logprob: -7.876165390014648
    3. '```' → logprob: -8.501165390014648
    4. '               ' → logprob: -9.126165390014648
    5. '\n' → logprob: -9.751165390014648
    6. 'idx' → logprob: -9.751165390014648
    7. '\' → logprob: -9.751165390014648
    8. '  
' → logprob: -10.251165390014648
    9. '
' → logprob: -10.501165390014648
    10. ' 
' → logprob: -10.501165390014648

Token 1211: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005940770730376244
    2. '```' → logprob: -5.380940914154053
    3. 'idx' → logprob: -7.255940914154053
    4. '               ' → logprob: -9.005940437316895
    5. 'N' → logprob: -9.380940437316895
    6. '   ' → logprob: -9.630940437316895
    7. '``' → logprob: -10.005940437316895
    8. ' idx' → logprob: -10.005940437316895
    9. '
' → logprob: -10.255940437316895
    10. 'n' → logprob: -10.380940437316895

Token 1212: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.10083777457475662
    2. 'size' → logprob: -2.4758377075195312
    3. 'n' → logprob: -4.975837707519531
    4. ' size' → logprob: -5.975837707519531
    5. ' N' → logprob: -6.350837707519531
    6. '           ' → logprob: -7.475837707519531
    7. '               ' → logprob: -10.350837707519531
    8. ' n' → logprob: -10.975837707519531
    9. 'try' → logprob: -11.850837707519531
    10. '   ' → logprob: -12.100837707519531

Token 1213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008353583980351686
    2. ',C' → logprob: -7.375835418701172
    3. '=' → logprob: -9.375835418701172
    4. ',N' → logprob: -10.000835418701172
    5. ',c' → logprob: -10.500835418701172
    6. ' ,' → logprob: -11.125835418701172
    7. ',int' → logprob: -11.375835418701172
    8. ',
' → logprob: -12.000835418701172
    9. ',n' → logprob: -12.125835418701172
    10. '_,' → logprob: -12.750835418701172

Token 1214: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.011343825608491898
    2. ' C' → logprob: -4.511343955993652
    3. '=' → logprob: -8.886343955993652
    4. ' =' → logprob: -9.761343955993652
    5. '=C' → logprob: -10.386343955993652
    6. 'c' → logprob: -10.761343955993652
    7. 'space' → logprob: -10.886343955993652
    8. '<|end|>' → logprob: -11.636343955993652
    9. ' ' → logprob: -11.886343955993652
    10. '_C' → logprob: -13.136343955993652

Token 1215: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05594899132847786
    2. ' =' → logprob: -3.0559489727020264
    3. ',' → logprob: -4.9309492111206055
    4. '=int' → logprob: -10.430949211120605
    5. '<|end|>' → logprob: -10.930949211120605
    6. '=
' → logprob: -11.180949211120605
    7. ')' → logprob: -11.430949211120605
    8. '<|end|>' → logprob: -11.930949211120605
    9. '=line' → logprob: -12.180949211120605
    10. '           ' → logprob: -12.430949211120605

Token 1216: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -1.3080344200134277
    2. ' map' → logprob: -1.3080344200134277
    3. 'line' → logprob: -1.6830344200134277
    4. 'int' → logprob: -1.9330344200134277
    5. ' line' → logprob: -2.9330344200134277
    6. 'N' → logprob: -3.0580344200134277
    7. ' int' → logprob: -4.683034420013428
    8. ' N' → logprob: -4.683034420013428
    9. '[int' → logprob: -5.433034420013428
    10. '[line' → logprob: -5.933034420013428

Token 1217: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25204184651374817
    2. '(int' → logprob: -1.5020418167114258
    3. 'str' → logprob: -9.377041816711426
    4. '[int' → logprob: -10.627041816711426
    5. '(str' → logprob: -13.502041816711426
    6. '<int' → logprob: -13.627041816711426
    7. ' int' → logprob: -14.502041816711426
    8. '=int' → logprob: -15.252041816711426
    9. 'lambda' → logprob: -16.127042770385742
    10. 'N' → logprob: -16.252042770385742

Token 1218: ',' (ID: 11)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.25951674580574036
    2. '(N' → logprob: -2.009516716003418
    3. ',' → logprob: -2.759516716003418
    4. ',N' → logprob: -3.509516716003418
    5. ')' → logprob: -7.509516716003418
    6. '[N' → logprob: -7.884516716003418
    7. '           ' → logprob: -8.884516716003418
    8. ' N' → logprob: -9.134516716003418
    9. '   ' → logprob: -10.509516716003418
    10. '               ' → logprob: -10.884516716003418

Token 1219: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -6.2729995988775045e-06
    2. ' N' → logprob: -12.000006675720215
    3. '[N' → logprob: -20.3750057220459
    4. '   ' → logprob: -22.6250057220459
    5. '	N' → logprob: -22.7500057220459
    6. '(N' → logprob: -24.1250057220459
    7. '_N' → logprob: -24.1250057220459
    8. '           ' → logprob: -24.7500057220459
    9. '
' → logprob: -24.7500057220459
    10. '"N' → logprob: -24.8750057220459

Token 1220: '_C' (ID: 1720)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.17509886622428894
    2. 'lines' → logprob: -2.4250988960266113
    3. '(N' → logprob: -3.8000988960266113
    4. '_N' → logprob: -4.050098896026611
    5. '(lines' → logprob: -4.300098896026611
    6. ')' → logprob: -5.300098896026611
    7. '[N' → logprob: -5.425098896026611
    8. ' lines' → logprob: -6.050098896026611
    9. ' N' → logprob: -6.050098896026611
    10. ',N' → logprob: -7.050098896026611

Token 1221: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011206142604351044
    2. '[idx' → logprob: -4.886206150054932
    3. ')
' → logprob: -5.761206150054932
    4. '):
' → logprob: -8.886205673217773
    5. ');' → logprob: -10.011205673217773
    6. '           ' → logprob: -10.011205673217773
    7. ')[' → logprob: -10.386205673217773
    8. ')=' → logprob: -10.886205673217773
    9. '),' → logprob: -11.261205673217773
    10. '                   ' → logprob: -11.386205673217773

Token 1222: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001817297888919711
    2. '       ' → logprob: -9.000182151794434
    3. '            
' → logprob: -11.250182151794434
    4. '          ' → logprob: -11.625182151794434
    5. '   ' → logprob: -11.750182151794434
    6. 'idx' → logprob: -12.000182151794434
    7. '               ' → logprob: -12.000182151794434
    8. '```' → logprob: -12.750182151794434
    9. '		' → logprob: -13.125182151794434
    10. '
' → logprob: -13.375182151794434

Token 1223: ' idx' (ID: 14016)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20537139475345612
    2. 'idx' (adapté à ' idx') → logprob: -1.705371379852295
    3. ' idx' → logprob: -5.580371379852295
    4. '```' → logprob: -9.705371856689453
    5. '
' → logprob: -10.705371856689453
    6. '            
' → logprob: -10.830371856689453
    7. 'if' → logprob: -11.080371856689453
    8. '	idx' → logprob: -11.205371856689453
    9. '   ' → logprob: -11.705371856689453
    10. '       ' → logprob: -11.955371856689453

Token 1224: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02324955351650715
    2. ' +=' → logprob: -3.773249626159668
    3. ']+=' → logprob: -12.648249626159668
    4. '=' → logprob: -14.773249626159668
    5. '   ' → logprob: -15.648249626159668
    6. '+' → logprob: -16.64824867248535
    7. '+="' → logprob: -16.77324867248535
    8. '       ' → logprob: -16.89824867248535
    9. '           ' → logprob: -17.39824867248535
    10. '```' → logprob: -17.52324867248535

Token 1225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.214019307051785e-05
    2. ' ' → logprob: -11.000032424926758
    3. '0' → logprob: -11.125032424926758
    4. '2' → logprob: -15.125032424926758
    5. 'N' → logprob: -15.562532424926758
    6. '3' → logprob: -17.062532424926758
    7. '+' → logprob: -17.750032424926758
    8. '   ' → logprob: -18.000032424926758
    9. '```' → logprob: -18.000032424926758
    10. '<|end|>' → logprob: -18.375032424926758

Token 1226: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12429270893335342
    2. 'board' → logprob: -2.4992926120758057
    3. '       ' → logprob: -3.9992926120758057
    4. 'grid' → logprob: -5.249292850494385
    5. ' board' → logprob: -5.624292850494385
    6. 'size' → logprob: -6.124292850494385
    7. '
' → logprob: -6.374292850494385
    8. '   ' → logprob: -7.124292850494385
    9. '	board' → logprob: -8.124292373657227
    10. '            
' → logprob: -8.249292373657227

Token 1227: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3742842972278595
    2. 'board' → logprob: -1.249284267425537
    3. 'size' → logprob: -4.749284267425537
    4. '       ' → logprob: -5.124284267425537
    5. ' board' → logprob: -5.374284267425537
    6. 'grid' → logprob: -6.124284267425537
    7. '```' → logprob: -6.374284267425537
    8. 'self' → logprob: -7.249284267425537
    9. '	board' → logprob: -7.499284267425537
    10. '   ' → logprob: -8.624284744262695

Token 1228: ' size' (ID: 2349)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.003818725934252143
    2. '           ' → logprob: -6.128818511962891
    3. 'grid' → logprob: -7.128818511962891
    4. 'self' → logprob: -8.25381851196289
    5. ' board' → logprob: -9.12881851196289
    6. 'b' → logprob: -9.62881851196289
    7. '       ' → logprob: -9.62881851196289
    8. 'size' (adapté à ' size') → logprob: -9.75381851196289
    9. 'stones' → logprob: -9.87881851196289
    10. 'for' → logprob: -10.37881851196289

Token 1229: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43277397751808167
    2. ' =' → logprob: -1.0577739477157593
    3. ',' → logprob: -5.557774066925049
    4. '=size' → logprob: -9.80777359008789
    5. '       ' → logprob: -10.93277359008789
    6. ')' → logprob: -11.18277359008789
    7. '<|end|>' → logprob: -11.18277359008789
    8. '           ' → logprob: -11.18277359008789
    9. ' ,' → logprob: -11.30777359008789
    10. '=line' → logprob: -11.43277359008789

Token 1230: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0024883802980184555
    2. ' N' → logprob: -6.002488613128662
    3. 'int' → logprob: -11.377488136291504
    4. ' int' → logprob: -14.127488136291504
    5. ' ' → logprob: -16.50248908996582
    6. '   ' → logprob: -16.87748908996582
    7. '0' → logprob: -16.87748908996582
    8. '10' → logprob: -17.37748908996582
    9. '6' → logprob: -17.62748908996582
    10. '  ' → logprob: -18.00248908996582

Token 1231: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1287602186203003
    2. '       ' → logprob: -1.2537602186203003
    3. '<|end|>' → logprob: -1.7537602186203003
    4. '
' → logprob: -2.00376033782959
    5. '+' → logprob: -3.75376033782959
    6. '<|end|>' → logprob: -3.87876033782959
    7. ' +' → logprob: -4.62876033782959
    8. ',' → logprob: -5.25376033782959
    9. '               ' → logprob: -5.87876033782959
    10. ' =' → logprob: -6.12876033782959

Token 1232: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05818885192275047
    2. '       ' → logprob: -4.0581889152526855
    3. 'board' → logprob: -4.0581889152526855
    4. 'self' → logprob: -4.3081889152526855
    5. 'grid' → logprob: -4.9331889152526855
    6. ' board' → logprob: -7.6831889152526855
    7. '   ' → logprob: -8.058188438415527
    8. '
' → logprob: -9.558188438415527
    9. '               ' → logprob: -9.683188438415527
    10. '	board' → logprob: -9.683188438415527

Token 1233: ' current' (ID: 2208)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.5202978849411011
    2. 'current' (adapté à ' current') → logprob: -1.020297884941101
    3. 'stones' → logprob: -3.6452980041503906
    4. 'player' → logprob: -4.770298004150391
    5. '           ' → logprob: -5.395298004150391
    6. 'self' → logprob: -5.645298004150391
    7. 'players' → logprob: -7.270298004150391
    8. 'initial' → logprob: -8.27029800415039
    9. 'C' → logprob: -8.52029800415039
    10. '       ' → logprob: -8.89529800415039

Token 1234: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -0.005825821775943041
    2. '_' → logprob: -5.380825996398926
    3. ' _' → logprob: -6.755825996398926
    4. '_user' → logprob: -11.755825996398926
    5. '_token' → logprob: -12.130825996398926
    6. 'player' → logprob: -12.505825996398926
    7. '_players' → logprob: -12.505825996398926
    8. 'Player' → logprob: -12.880825996398926
    9. '_p' → logprob: -13.130825996398926
    10. '_
' → logprob: -13.255825996398926

Token 1235: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04317046329379082
    2. '=' → logprob: -3.16817045211792
    3. ' ' → logprob: -9.168170928955078
    4. '<|end|>' → logprob: -10.043170928955078
    5. '<|end|>' → logprob: -11.793170928955078
    6. ')' → logprob: -12.168170928955078
    7. ',' → logprob: -12.293170928955078
    8. '  ' → logprob: -14.418170928955078
    9. ' =
' → logprob: -14.543170928955078
    10. '_space' → logprob: -14.543170928955078

Token 1236: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.001930420519784093
    2. ' C' → logprob: -6.251930236816406
    3. 'int' → logprob: -13.251930236816406
    4. '   ' → logprob: -17.501930236816406
    5. ' int' → logprob: -17.751930236816406
    6. '	C' → logprob: -18.751930236816406
    7. '           ' → logprob: -19.001930236816406
    8. ' ' → logprob: -19.501930236816406
    9. '    ' → logprob: -20.001930236816406
    10. '=C' → logprob: -20.001930236816406

Token 1237: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003320783842355013
    2. '
' → logprob: -6.753320693969727
    3. '            
' → logprob: -7.503320693969727
    4. '<|end|>' → logprob: -8.003320693969727
    5. '       ' → logprob: -8.128320693969727
    6. 'board' → logprob: -8.253320693969727
    7. '	       ' → logprob: -9.003320693969727
    8. '	board' → logprob: -9.253320693969727
    9. '               ' → logprob: -9.753320693969727
    10. '```' → logprob: -9.878320693969727

Token 1238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006738342344760895
    2. 'board' → logprob: -5.881738185882568
    3. '       ' → logprob: -6.756738185882568
    4. '
' → logprob: -6.881738185882568
    5. '            
' → logprob: -6.881738185882568
    6. ' board' → logprob: -8.881738662719727
    7. '   ' → logprob: -9.506738662719727
    8. '```' → logprob: -9.506738662719727
    9. '<|end|>' → logprob: -9.756738662719727
    10. 'grid' → logprob: -9.756738662719727

Token 1239: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' (adapté à ' board') → logprob: -0.061160750687122345
    2. '           ' → logprob: -2.9361608028411865
    3. 'grid' → logprob: -5.936160564422607
    4. 'self' → logprob: -6.061160564422607
    5. '       ' → logprob: -8.311161041259766
    6. '
' → logprob: -8.436161041259766
    7. 'b' → logprob: -8.811161041259766
    8. ' board' → logprob: -8.811161041259766
    9. 'moves' → logprob: -9.061161041259766
    10. 'game' → logprob: -9.561161041259766

Token 1240: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029756510630249977
    2. '=' → logprob: -3.529756546020508
    3. ' =
' → logprob: -12.154756546020508
    4. ' ' → logprob: -15.029756546020508
    5. '=
' → logprob: -15.154756546020508
    6. ' =
' → logprob: -17.279756546020508
    7. '=new' → logprob: -17.404756546020508
    8. '   ' → logprob: -17.654756546020508
    9. '＝' → logprob: -17.654756546020508
    10. ',' → logprob: -18.154756546020508

Token 1241: ' Board' (ID: 10837)
  Prédit: ' Board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Board' → logprob: -0.6931473612785339
    2. 'Board' → logprob: -0.6931473612785339
    3. '(Board' → logprob: -15.943147659301758
    4. '.Board' → logprob: -17.693147659301758
    5. ' board' → logprob: -17.818147659301758
    6. '_board' → logprob: -18.068147659301758
    7. 'board' → logprob: -19.318147659301758
    8. '   ' → logprob: -20.693147659301758
    9. ' ' → logprob: -20.818147659301758
    10. 'B' → logprob: -21.193147659301758

Token 1242: '(size' (ID: 15192)
  Prédit: '(size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -3.297462171758525e-05
    2. 'size' → logprob: -10.375033378601074
    3. '[size' → logprob: -14.250033378601074
    4. '(' → logprob: -14.750033378601074
    5. '(N' → logprob: -14.750033378601074
    6. '=size' → logprob: -16.500032424926758
    7. '
' → logprob: -16.875032424926758
    8. '(
' → logprob: -17.625032424926758
    9. ',size' → logprob: -18.000032424926758
    10. '           ' → logprob: -18.000032424926758

Token 1243: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009777694940567017
    2. ')
' → logprob: -4.634777545928955
    3. '       ' → logprob: -11.759778022766113
    4. '           ' → logprob: -12.134778022766113
    5. '<|end|>' → logprob: -12.884778022766113
    6. '<|end|>' → logprob: -13.009778022766113
    7. ')
' → logprob: -13.884778022766113
    8. ' )' → logprob: -14.259778022766113
    9. '   ' → logprob: -15.009778022766113
    10. '[' → logprob: -15.134778022766113

Token 1244: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010374527191743255
    2. 'for' → logprob: -7.25103759765625
    3. ' for' → logprob: -8.62603759765625
    4. '       ' → logprob: -9.25103759765625
    5. '<|end|>' → logprob: -10.75103759765625
    6. '   ' → logprob: -10.87603759765625
    7. '               ' → logprob: -12.00103759765625
    8. '                   ' → logprob: -13.62603759765625
    9. 'while' → logprob: -13.87603759765625
    10. '	       ' → logprob: -14.12603759765625

Token 1245: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00018065694894175977
    2. '           ' → logprob: -8.7501802444458
    3. ' for' → logprob: -10.7501802444458
    4. 'while' → logprob: -14.6251802444458
    5. '       ' → logprob: -16.000181198120117
    6. '```' → logprob: -16.625181198120117
    7. '   ' → logprob: -18.000181198120117
    8. '	for' → logprob: -18.250181198120117
    9. '               ' → logprob: -18.750181198120117
    10. '``' → logprob: -19.625181198120117

Token 1246: ' Read' (ID: 5405)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00027575582498684525
    2. '           ' → logprob: -8.250275611877441
    3. ' for' → logprob: -11.250275611877441
    4. '       ' → logprob: -14.250275611877441
    5. '```' → logprob: -14.625275611877441
    6. 'while' → logprob: -15.625275611877441
    7. '   ' → logprob: -16.375276565551758
    8. 'For' → logprob: -16.875276565551758
    9. '``' → logprob: -17.125276565551758
    10. '	for' → logprob: -17.625276565551758

Token 1247: ' board' (ID: 6796)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013064699247479439
    2. ' for' → logprob: -4.638064861297607
    3. 'size' → logprob: -6.138064861297607
    4. 'r' → logprob: -7.263064861297607
    5. 'lines' → logprob: -8.63806438446045
    6. '           ' → logprob: -9.88806438446045
    7. 'rows' → logprob: -10.01306438446045
    8. '
' → logprob: -10.13806438446045
    9. ' lines' → logprob: -10.76306438446045
    10. 'next' → logprob: -11.01306438446045

Token 1248: ' state' (ID: 2608)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.669347882270813
    2. 'for' → logprob: -0.919347882270813
    3. ' for' → logprob: -2.4193477630615234
    4. '   ' → logprob: -9.669347763061523
    5. '       ' → logprob: -9.919347763061523
    6. '
' → logprob: -10.169347763061523
    7. '```' → logprob: -10.919347763061523
    8. '               ' → logprob: -11.169347763061523
    9. '	for' → logprob: -12.919347763061523
    10. '``' → logprob: -13.044347763061523

Token 1249: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011217819526791573
    2. 'for' → logprob: -4.5112175941467285
    3. ' for' → logprob: -8.886218070983887
    4. '       ' → logprob: -10.636218070983887
    5. '   ' → logprob: -12.136218070983887
    6. '               ' → logprob: -13.511218070983887
    7. '          ' → logprob: -15.136218070983887
    8. '	       ' → logprob: -15.636218070983887
    9. '                   ' → logprob: -15.761218070983887
    10. '
' → logprob: -16.26121711730957

Token 1250: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017147827020380646
    2. 'for' → logprob: -8.750171661376953
    3. '       ' → logprob: -11.500171661376953
    4. ' for' → logprob: -13.125171661376953
    5. '   ' → logprob: -15.000171661376953
    6. '               ' → logprob: -15.250171661376953
    7. '	       ' → logprob: -16.375171661376953
    8. '          ' → logprob: -16.875171661376953
    9. 'while' → logprob: -17.125171661376953
    10. '                   ' → logprob: -17.250171661376953

Token 1251: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07963742315769196
    2. '           ' → logprob: -2.5796375274658203
    3. ' for' → logprob: -7.45463752746582
    4. '       ' → logprob: -8.82963752746582
    5. '   ' → logprob: -10.82963752746582
    6. '               ' → logprob: -13.57963752746582
    7. '	for' → logprob: -14.82963752746582
    8. '          ' → logprob: -15.32963752746582
    9. ' ' → logprob: -16.07963752746582
    10. '         ' → logprob: -16.45463752746582

Token 1252: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0375346913933754
    2. '_' → logprob: -3.912534713745117
    3. 'i' → logprob: -4.662534713745117
    4. '_r' → logprob: -5.287534713745117
    5. ' r' → logprob: -7.037534713745117
    6. 'row' → logprob: -7.287534713745117
    7. '_i' → logprob: -7.412534713745117
    8. ' _' → logprob: -9.537534713745117
    9. ' i' → logprob: -9.787534713745117
    10. '_row' → logprob: -10.287534713745117

Token 1253: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04301128908991814
    2. 'in' → logprob: -3.16801118850708
    3. '	in' → logprob: -12.418011665344238
    4. ' ' → logprob: -13.418011665344238
    5. '           ' → logprob: -13.543011665344238
    6. '_' → logprob: -13.668011665344238
    7. '            ' → logprob: -14.168011665344238
    8. '   ' → logprob: -14.293011665344238
    9. '       ' → logprob: -14.918011665344238
    10. '               ' → logprob: -15.043011665344238

Token 1254: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011705794604495168
    2. ' range' → logprob: -6.751170635223389
    3. ')' → logprob: -15.50117015838623
    4. '
' → logprob: -16.876171112060547
    5. 'in' → logprob: -17.251171112060547
    6. '(range' → logprob: -17.376171112060547
    7. '   ' → logprob: -17.751171112060547
    8. '0' → logprob: -17.876171112060547
    9. ' in' → logprob: -18.001171112060547
    10. ' ' → logprob: -18.251171112060547

Token 1255: '(size' (ID: 15192)
  Prédit: '(size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.366962730884552
    2. 'size' → logprob: -1.2419626712799072
    3. '(' → logprob: -5.116962909698486
    4. '(idx' → logprob: -5.241962909698486
    5. 'idx' → logprob: -5.866962909698486
    6. '(r' → logprob: -6.616962909698486
    7. '0' → logprob: -6.991962909698486
    8. 'r' → logprob: -7.491962909698486
    9. ' size' → logprob: -7.616962909698486
    10. ')' → logprob: -7.991962909698486

Token 1256: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0884808748960495
    2. '):' → logprob: -3.3384809494018555
    3. '           ' → logprob: -3.7134809494018555
    4. ':' → logprob: -4.8384809494018555
    5. ':
' → logprob: -4.9634809494018555
    6. '               ' → logprob: -5.2134809494018555
    7. '       ' → logprob: -6.4634809494018555
    8. ',' → logprob: -6.7134809494018555
    9. '):
' → logprob: -7.9634809494018555
    10. '   ' → logprob: -7.9634809494018555

Token 1257: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012897484935820103
    2. '	           ' → logprob: -4.887897491455078
    3. '           ' → logprob: -5.637897491455078
    4. '   ' → logprob: -7.762897491455078
    5. 'tokens' → logprob: -8.137897491455078
    6. ' line' → logprob: -8.512897491455078
    7. 'line' → logprob: -9.012897491455078
    8. '       ' → logprob: -9.137897491455078
    9. '	       ' → logprob: -9.637897491455078
    10. ',' → logprob: -10.262897491455078

Token 1258: ' row' (ID: 5225)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.369703471660614
    2. 'row' (adapté à ' row') → logprob: -1.4947035312652588
    3. ' line' → logprob: -3.119703531265259
    4. 'cells' → logprob: -4.11970329284668
    5. 'tokens' → logprob: -4.74470329284668
    6. ' row' → logprob: -4.99470329284668
    7. 'cols' → logprob: -6.24470329284668
    8. 'stones' → logprob: -6.86970329284668
    9. '               ' → logprob: -7.11970329284668
    10. 'state' → logprob: -7.24470329284668

Token 1259: '_values' (ID: 20393)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0856727361679077
    2. '_tokens' → logprob: -1.0856727361679077
    3. '_line' → logprob: -1.4606727361679077
    4. '_data' → logprob: -3.2106728553771973
    5. '=' → logprob: -3.8356728553771973
    6. '=line' → logprob: -4.710672855377197
    7. 'tokens' → logprob: -5.085672855377197
    8. 'line' → logprob: -5.335672855377197
    9. '_input' → logprob: -5.960672855377197
    10. '_lines' → logprob: -6.335672855377197

Token 1260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02633095160126686
    2. '=' → logprob: -3.6513309478759766
    3. '=line' → logprob: -11.401330947875977
    4. '               ' → logprob: -11.526330947875977
    5. ' =[' → logprob: -13.526330947875977
    6. '           ' → logprob: -13.526330947875977
    7. '                ' → logprob: -13.776330947875977
    8. '                   ' → logprob: -13.776330947875977
    9. '=[]' → logprob: -13.901330947875977
    10. '            ' → logprob: -14.526330947875977

Token 1261: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.024838365614414215
    2. 'lines' → logprob: -3.774838447570801
    3. ' list' → logprob: -6.524838447570801
    4. ' lines' → logprob: -9.1498384475708
    5. '[' → logprob: -11.0248384475708
    6. 'line' → logprob: -13.2748384475708
    7. '[list' → logprob: -14.7748384475708
    8. 'map' → logprob: -15.6498384475708
    9. ' [' → logprob: -15.8998384475708
    10. '   ' → logprob: -16.774837493896484

Token 1262: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15547938644886017
    2. '           ' → logprob: -2.5304794311523438
    3. 'while' → logprob: -3.6554794311523438
    4. ' while' → logprob: -3.7804794311523438
    5. ' line' → logprob: -5.280479431152344
    6. 'line' → logprob: -6.030479431152344
    7. 'tokens' → logprob: -6.280479431152344
    8. ' for' → logprob: -6.405479431152344
    9. '                   ' → logprob: -7.155479431152344
    10. 'for' → logprob: -7.405479431152344

Token 1263: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.002585170092061162
    2. 'col' → logprob: -7.377584934234619
    3. 'for' → logprob: -7.627584934234619
    4. '               ' → logprob: -7.877584934234619
    5. ' while' → logprob: -8.252585411071777
    6. 'line' → logprob: -8.627585411071777
    7. 'c' → logprob: -8.877585411071777
    8. 'tokens' → logprob: -8.877585411071777
    9. 'j' → logprob: -9.377585411071777
    10. 'row' → logprob: -9.502585411071777

Token 1264: ' True' (ID: 6432)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10049552470445633
    2. 'idx' → logprob: -2.7254955768585205
    3. 'True' → logprob: -3.6004955768585205
    4. 'row' → logprob: -6.850495338439941
    5. 'line' → logprob: -7.475495338439941
    6. 'not' → logprob: -7.600495338439941
    7. 'lines' → logprob: -7.850495338439941
    8. ' len' → logprob: -8.850495338439941
    9. ' True' → logprob: -9.475495338439941
    10. ' idx' → logprob: -11.100495338439941

Token 1265: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.019624343141913414
    2. 'tokens' → logprob: -5.39462423324585
    3. '               ' → logprob: -5.51962423324585
    4. 'token' → logprob: -6.51962423324585
    5. ',' → logprob: -6.64462423324585
    6. '                       ' → logprob: -6.76962423324585
    7. ' and' → logprob: -7.14462423324585
    8. ':' → logprob: -7.39462423324585
    9. ' line' → logprob: -7.39462423324585
    10. '<|end|>' → logprob: -7.51962423324585

Token 1266: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.17765986919403076
    2. '               ' → logprob: -2.9276599884033203
    3. 'line' → logprob: -3.0526599884033203
    4. 'if' → logprob: -3.6776599884033203
    5. 'tokens' → logprob: -3.8026599884033203
    6. '                       ' → logprob: -5.92765998840332
    7. ' line' → logprob: -5.92765998840332
    8. 'next' → logprob: -5.92765998840332
    9. 'token' → logprob: -6.05265998840332
    10. 'lines' → logprob: -7.30265998840332

Token 1267: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16038264334201813
    2. 'row' → logprob: -2.4103827476501465
    3. 'line' → logprob: -3.1603827476501465
    4. 'tokens' → logprob: -4.7853827476501465
    5. ' if' → logprob: -6.1603827476501465
    6. 'parts' → logprob: -6.5353827476501465
    7. 'next' → logprob: -6.6603827476501465
    8. 'token' → logprob: -7.4103827476501465
    9. '                   ' → logprob: -7.6603827476501465
    10. 'try' → logprob: -7.6603827476501465

Token 1268: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00013119110371917486
    2. 'len' → logprob: -9.750131607055664
    3. ' idx' → logprob: -10.500131607055664
    4. 'lines' → logprob: -11.375131607055664
    5. '           ' → logprob: -11.625131607055664
    6. '                   ' → logprob: -12.125131607055664
    7. 'line' → logprob: -12.125131607055664
    8. 'not' → logprob: -12.375131607055664
    9. '   ' → logprob: -13.000131607055664
    10. 'row' → logprob: -13.125131607055664

Token 1269: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.023380925878882408
    2. ' >=' → logprob: -3.773380994796753
    3. ']>=' → logprob: -10.023381233215332
    4. ')>=' → logprob: -10.273381233215332
    5. '<len' → logprob: -10.773381233215332
    6. '>' → logprob: -11.023381233215332
    7. '==' → logprob: -12.023381233215332
    8. '<' → logprob: -12.023381233215332
    9. '≥' → logprob: -13.148381233215332
    10. ' <' → logprob: -13.773381233215332

Token 1270: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.2948405128554441e-05
    2. ' len' → logprob: -11.50001335144043
    3. 'lines' → logprob: -12.87501335144043
    4. 'line' → logprob: -15.62501335144043
    5. 'size' → logprob: -17.25001335144043
    6. '(len' → logprob: -18.50001335144043
    7. '	len' → logprob: -18.75001335144043
    8. 'length' → logprob: -18.87501335144043
    9. '                   ' → logprob: -19.37501335144043
    10. '<len' → logprob: -20.12501335144043

Token 1271: '(lines' (ID: 73839)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -6.630610641877865e-06
    2. '(lines' → logprob: -12.500006675720215
    3. ' lines' → logprob: -12.750006675720215
    4. '	lines' → logprob: -19.3750057220459
    5. 'line' → logprob: -19.7500057220459
    6. 'len' → logprob: -20.0000057220459
    7. '_lines' → logprob: -20.2500057220459
    8. '-lines' → logprob: -20.3750057220459
    9. '                   ' → logprob: -21.1250057220459
    10. '.lines' → logprob: -21.6250057220459

Token 1272: '):
' (ID: 1883)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3047480583190918
    2. ' or' → logprob: -2.179748058319092
    3. ' and' → logprob: -3.054748058319092
    4. ':' → logprob: -3.054748058319092
    5. ':
' → logprob: -3.554748058319092
    6. '                   ' → logprob: -3.804748058319092
    7. 'and' → logprob: -5.804748058319092
    8. '               ' → logprob: -8.17974853515625
    9. '       ' → logprob: -8.67974853515625
    10. '                           ' → logprob: -8.80474853515625

Token 1273: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.006948976311832666
    2. '                   ' → logprob: -5.131948947906494
    3. ':' → logprob: -7.256948947906494
    4. '```' → logprob: -9.131949424743652
    5. 'break' → logprob: -9.631949424743652
    6. '               ' → logprob: -10.256949424743652
    7. '       ' → logprob: -11.381949424743652
    8. '                           ' → logprob: -11.506949424743652
    9. 'and' → logprob: -11.631949424743652
    10. ' and' → logprob: -11.756949424743652

Token 1274: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.3443832993507385
    2. '                       ' → logprob: -1.5943832397460938
    3. 'line' → logprob: -3.3443832397460938
    4. ' break' → logprob: -3.5943832397460938
    5. '                   ' → logprob: -4.219383239746094
    6. ' line' → logprob: -5.094383239746094
    7. '```' → logprob: -6.969383239746094
    8. 'tokens' → logprob: -7.219383239746094
    9. 'token' → logprob: -7.469383239746094
    10. 'if' → logprob: -7.469383239746094

Token 1275: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002278007799759507
    2. '                       ' → logprob: -6.377277851104736
    3. '               ' → logprob: -8.002278327941895
    4. ',' → logprob: -9.752278327941895
    5. '           ' → logprob: -10.002278327941895
    6. ':' → logprob: -10.752278327941895
    7. '```' → logprob: -11.002278327941895
    8. '   ' → logprob: -11.127278327941895
    9. '                    
' → logprob: -11.252278327941895
    10. ':
' → logprob: -11.377278327941895

Token 1276: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0012702319072559476
    2. 'line' → logprob: -7.001270294189453
    3. '               ' → logprob: -9.001270294189453
    4. '                       ' → logprob: -9.251270294189453
    5. ' line' → logprob: -9.376270294189453
    6. '   ' → logprob: -10.751270294189453
    7. 'token' → logprob: -11.501270294189453
    8. '```' → logprob: -12.001270294189453
    9. 'tokens' → logprob: -12.126270294189453
    10. '           ' → logprob: -12.501270294189453

Token 1277: ' row' (ID: 5225)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.24652594327926636
    2. ' line' → logprob: -2.246526002883911
    3. '                   ' → logprob: -2.621526002883911
    4. 'row' (adapté à ' row') → logprob: -3.746526002883911
    5. 'tokens' → logprob: -5.121525764465332
    6. 'parts' → logprob: -5.746525764465332
    7. 'token' → logprob: -6.121525764465332
    8. ' parts' → logprob: -6.621525764465332
    9. '               ' → logprob: -7.246525764465332
    10. 'values' → logprob: -7.496525764465332

Token 1278: '_line' (ID: 14418)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.07986318320035934
    2. '_line' → logprob: -3.0798630714416504
    3. '_tokens' → logprob: -3.7048630714416504
    4. 'values' → logprob: -5.95486307144165
    5. '_vals' → logprob: -6.57986307144165
    6. '_lines' → logprob: -7.32986307144165
    7. 'line' → logprob: -7.82986307144165
    8. 'tokens' → logprob: -8.204863548278809
    9. '=line' → logprob: -8.579863548278809
    10. ' =' → logprob: -8.829863548278809

Token 1279: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06296561658382416
    2. '=' → logprob: -2.8129656314849854
    3. '                   ' → logprob: -7.312965393066406
    4. 'tokens' → logprob: -8.812965393066406
    5. '               ' → logprob: -9.812965393066406
    6. '_tokens' → logprob: -10.437965393066406
    7. 's' → logprob: -10.437965393066406
    8. '                       ' → logprob: -11.187965393066406
    9. '=line' → logprob: -11.187965393066406
    10. ' ' → logprob: -11.312965393066406

Token 1280: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.004078878089785576
    2. ' lines' → logprob: -5.5040788650512695
    3. '                   ' → logprob: -15.50407886505127
    4. '(lines' → logprob: -15.50407886505127
    5. '	lines' → logprob: -16.379079818725586
    6. '               ' → logprob: -18.629079818725586
    7. '                       ' → logprob: -19.129079818725586
    8. '.lines' → logprob: -19.379079818725586
    9. '           ' → logprob: -20.379079818725586
    10. '-lines' → logprob: -20.754079818725586

Token 1281: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0001137947037932463
    2. 'idx' → logprob: -9.125113487243652
    3. '                   ' → logprob: -12.375113487243652
    4. '                    
' → logprob: -15.500113487243652
    5. '```' → logprob: -16.37511444091797
    6. ' idx' → logprob: -16.62511444091797
    7. '
' → logprob: -16.62511444091797
    8. '               ' → logprob: -17.12511444091797
    9. '	idx' → logprob: -17.50011444091797
    10. '[ind' → logprob: -18.00011444091797

Token 1282: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.23554860055446625
    2. '.strip' → logprob: -1.6105486154556274
    3. '.' → logprob: -5.360548496246338
    4. '                   ' → logprob: -5.735548496246338
    5. '().' → logprob: -6.860548496246338
    6. '               ' → logprob: -7.860548496246338
    7. ']' → logprob: -8.610548973083496
    8. '                       ' → logprob: -8.735548973083496
    9. ').' → logprob: -9.360548973083496
    10. '.rstrip' → logprob: -9.860548973083496

Token 1283: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -4.008129963040119e-06
    2. 'rstrip' → logprob: -12.500003814697266
    3. 'split' → logprob: -15.875003814697266
    4. ' strip' → logprob: -16.375003814697266
    5. '.strip' → logprob: -18.625003814697266
    6. '_strip' → logprob: -20.750003814697266
    7. '(strip' → logprob: -21.250003814697266
    8. 'replace' → logprob: -21.625003814697266
    9. 'stripe' → logprob: -22.875003814697266
    10. 'Strip' → logprob: -23.875003814697266

Token 1284: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6935526728630066
    2. '()
' → logprob: -0.6935526728630066
    3. '                   ' → logprob: -8.06855297088623
    4. '().' → logprob: -10.56855297088623
    5. '()\' → logprob: -10.94355297088623
    6. '()
' → logprob: -11.31855297088623
    7. '():
' → logprob: -11.69355297088623
    8. '()

' → logprob: -12.06855297088623
    9. '()`' → logprob: -12.69355297088623
    10. '               ' → logprob: -12.69355297088623

Token 1285: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010512763634324074
    2. 'if' → logprob: -4.635512828826904
    3. '               ' → logprob: -7.510512828826904
    4. '           ' → logprob: -9.635512351989746
    5. '                       ' → logprob: -9.760512351989746
    6. ' if' → logprob: -10.010512351989746
    7. '   ' → logprob: -10.760512351989746
    8. 'idx' → logprob: -11.885512351989746
    9. '       ' → logprob: -12.135512351989746
    10. '```' → logprob: -12.760512351989746

Token 1286: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.025412429124116898
    2. '                   ' → logprob: -4.275412559509277
    3. 'idx' → logprob: -4.525412559509277
    4. '               ' → logprob: -8.650412559509277
    5. 'values' → logprob: -9.900412559509277
    6. '           ' → logprob: -10.025412559509277
    7. ' if' → logprob: -10.025412559509277
    8. 'tokens' → logprob: -11.150412559509277
    9. 'row' → logprob: -11.900412559509277
    10. '                       ' → logprob: -12.400412559509277

Token 1287: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.10142258554697037
    2. 'not' → logprob: -2.3514225482940674
    3. 'len' → logprob: -6.7264227867126465
    4. ' not' → logprob: -11.476422309875488
    5. ' row' → logprob: -12.351422309875488
    6. '(row' → logprob: -14.226422309875488
    7. '[row' → logprob: -15.851422309875488
    8. 'line' → logprob: -15.851422309875488
    9. '$row' → logprob: -15.976422309875488
    10. 'rows' → logprob: -16.226423263549805

Token 1288: '_line' (ID: 14418)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14351654052734375
    2. ' ==' → logprob: -2.0185165405273438
    3. '                   ' → logprob: -8.643516540527344
    4. '=' → logprob: -9.393516540527344
    5. '                       ' → logprob: -9.518516540527344
    6. '               ' → logprob: -9.768516540527344
    7. ']==' → logprob: -10.018516540527344
    8. ':' → logprob: -10.018516540527344
    9. '=='' → logprob: -10.643516540527344
    10. '.startswith' → logprob: -10.768516540527344

Token 1289: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04867070913314819
    2. ' ==' → logprob: -3.048670768737793
    3. '()==' → logprob: -10.173670768737793
    4. ')==' → logprob: -11.298670768737793
    5. '==
' → logprob: -11.548670768737793
    6. '=="' → logprob: -11.798670768737793
    7. ']==' → logprob: -12.298670768737793
    8. '===' → logprob: -12.798670768737793
    9. '=='' → logprob: -13.048670768737793
    10. '=' → logprob: -13.173670768737793

Token 1290: ' "":
' (ID: 132826)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.34520527720451355
    2. '"":' → logprob: -1.845205307006836
    3. '''' → logprob: -2.345205307006836
    4. '"' → logprob: -3.470205307006836
    5. ''' → logprob: -4.970205307006836
    6. ' "":
' → logprob: -10.345205307006836
    7. '":' → logprob: -12.095205307006836
    8. ' '':
' → logprob: -12.595205307006836
    9. '"""' → logprob: -12.970205307006836
    10. '"",' → logprob: -13.095205307006836

Token 1291: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.004938427824527025
    2. ':' → logprob: -5.87993860244751
    3. ':
' → logprob: -6.62993860244751
    4. '                   ' → logprob: -7.50493860244751
    5. '                           ' → logprob: -8.754938125610352
    6. ',' → logprob: -10.879938125610352
    7. '               ' → logprob: -11.129938125610352
    8. '	                   ' → logprob: -11.129938125610352
    9. '                        
' → logprob: -12.129938125610352
    10. '):
' → logprob: -12.254938125610352

Token 1292: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.2718486487865448
    2. 'break' → logprob: -1.5218486785888672
    3. '                       ' → logprob: -4.146848678588867
    4. '                   ' → logprob: -6.021848678588867
    5. 'continue' → logprob: -7.271848678588867
    6. '                           ' → logprob: -8.021848678588867
    7. '               ' → logprob: -9.021848678588867
    8. '           ' → logprob: -9.646848678588867
    9. ' idx' → logprob: -9.646848678588867
    10. '   ' → logprob: -10.146848678588867

Token 1293: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0025336870457977057
    2. ' +=' → logprob: -6.002533912658691
    3. '                   ' → logprob: -10.252533912658691
    4. '                       ' → logprob: -11.752533912658691
    5. '=' → logprob: -12.252533912658691
    6. '+' → logprob: -12.877533912658691
    7. '==' → logprob: -12.877533912658691
    8. ']+=' → logprob: -12.877533912658691
    9. '-=' → logprob: -14.627533912658691
    10. '```' → logprob: -14.752533912658691

Token 1294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004444931691978127
    2. ' ' → logprob: -8.250444412231445
    3. '                       ' → logprob: -8.750444412231445
    4. '
' → logprob: -11.250444412231445
    5. '                   ' → logprob: -12.375444412231445
    6. 'break' → logprob: -12.750444412231445
    7. ' break' → logprob: -13.250444412231445
    8. '                           ' → logprob: -13.500444412231445
    9. '                               ' → logprob: -15.250444412231445
    10. '               ' → logprob: -15.375444412231445

Token 1295: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00048501143464818597
    2. '                   ' → logprob: -8.37548542022705
    3. '                           ' → logprob: -8.50048542022705
    4. '               ' → logprob: -11.37548542022705
    5. ',' → logprob: -11.62548542022705
    6. '```' → logprob: -11.87548542022705
    7. '                        
' → logprob: -12.25048542022705
    8. '           ' → logprob: -12.50048542022705
    9. '<|end|>' → logprob: -13.00048542022705
    10. '	                   ' → logprob: -13.00048542022705

Token 1296: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002404550788924098
    2. '                           ' → logprob: -6.252404689788818
    3. '                   ' → logprob: -7.752404689788818
    4. '```' → logprob: -11.12740421295166
    5. '               ' → logprob: -11.50240421295166
    6. '           ' → logprob: -12.25240421295166
    7. 'continue' → logprob: -12.37740421295166
    8. '                               ' → logprob: -12.62740421295166
    9. '                        ' → logprob: -12.87740421295166
    10. '                      ' → logprob: -13.75240421295166

Token 1297: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.6016085147857666
    2. '                       ' → logprob: -1.2266085147857666
    3. 'continue' (adapté à ' continue') → logprob: -2.1016085147857666
    4. 'idx' → logprob: -3.6016085147857666
    5. '                   ' → logprob: -5.3516082763671875
    6. '                           ' → logprob: -5.7266082763671875
    7. ' break' → logprob: -8.101608276367188
    8. '               ' → logprob: -8.226608276367188
    9. ' continue' → logprob: -8.726608276367188
    10. '           ' → logprob: -8.976608276367188

Token 1298: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006151919718831778
    2. '                       ' → logprob: -5.131152153015137
    3. '```' → logprob: -9.131152153015137
    4. '               ' → logprob: -9.506152153015137
    5. '           ' → logprob: -11.756152153015137
    6. '   ' → logprob: -12.006152153015137
    7. '                           ' → logprob: -12.506152153015137
    8. 'continue' → logprob: -12.631152153015137
    9. 'idx' → logprob: -12.881152153015137
    10. '       ' → logprob: -12.881152153015137

Token 1299: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0031171105802059174
    2. '                       ' → logprob: -6.003117084503174
    3. 'idx' → logprob: -7.753117084503174
    4. '               ' → logprob: -9.253117561340332
    5. '```' → logprob: -9.878117561340332
    6. 'else' → logprob: -11.128117561340332
    7. 'break' → logprob: -11.503117561340332
    8. '                           ' → logprob: -11.628117561340332
    9. '           ' → logprob: -11.753117561340332
    10. 'index' → logprob: -12.003117561340332

Token 1300: ' parts' (ID: 7881)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1676219254732132
    2. 'values' → logprob: -2.5426218509674072
    3. 'row' → logprob: -3.1676218509674072
    4. 'tokens' → logprob: -4.292622089385986
    5. '               ' → logprob: -4.792622089385986
    6. 'vals' → logprob: -5.417622089385986
    7. ' row' → logprob: -6.417622089385986
    8. ' values' → logprob: -6.542622089385986
    9. 'parts' (adapté à ' parts') → logprob: -7.542622089385986
    10. 'numbers' → logprob: -7.542622089385986

Token 1301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6327382326126099
    2. '=' → logprob: -0.7577382326126099
    3. '                   ' → logprob: -10.13273811340332
    4. '=[]' → logprob: -10.13273811340332
    5. 'tokens' → logprob: -11.63273811340332
    6. '=[' → logprob: -12.00773811340332
    7. '=['' → logprob: -12.13273811340332
    8. '                       ' → logprob: -12.50773811340332
    9. ' =[' → logprob: -12.50773811340332
    10. '               ' → logprob: -12.63273811340332

Token 1302: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.0013276183744892478
    2. 'list' → logprob: -6.7513275146484375
    3. '[row' → logprob: -8.876327514648438
    4. ' row' → logprob: -11.501327514648438
    5. '[' → logprob: -12.001327514648438
    6. 'line' → logprob: -14.001327514648438
    7. '(row' → logprob: -15.376327514648438
    8. '[list' → logprob: -16.501327514648438
    9. '[line' → logprob: -16.626327514648438
    10. '[r' → logprob: -16.751327514648438

Token 1303: '_line' (ID: 14418)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.05048626288771629
    2. '=' → logprob: -3.1754863262176514
    3. ' =' → logprob: -5.925486087799072
    4. 'idx' → logprob: -5.925486087799072
    5. '(idx' → logprob: -7.550486087799072
    6. '=[' → logprob: -7.925486087799072
    7. '_line' → logprob: -8.67548656463623
    8. '_values' → logprob: -8.80048656463623
    9. '=[]
' → logprob: -8.92548656463623
    10. 's' → logprob: -9.17548656463623

Token 1304: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07168661803007126
    2. ' =' → logprob: -2.6966865062713623
    3. '                   ' → logprob: -6.571686744689941
    4. '.extend' → logprob: -9.571686744689941
    5. '=line' → logprob: -9.946686744689941
    6. '+=' → logprob: -10.071686744689941
    7. '.split' → logprob: -10.196686744689941
    8. '                       ' → logprob: -10.446686744689941
    9. '=
' → logprob: -10.696686744689941
    10. '=[' → logprob: -11.321686744689941

Token 1305: '()
' (ID: 1234)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.026623396202921867
    2. '               ' → logprob: -5.151623249053955
    3. '                       ' → logprob: -5.401623249053955
    4. ',' → logprob: -6.151623249053955
    5. '=' → logprob: -6.151623249053955
    6. '                    
' → logprob: -6.151623249053955
    7. '<|end|>' → logprob: -6.151623249053955
    8. '[' → logprob: -6.276623249053955
    9. ' =' → logprob: -7.026623249053955
    10. '           ' → logprob: -7.401623249053955

Token 1306: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006215893663465977
    2. '               ' → logprob: -5.381216049194336
    3. '                       ' → logprob: -7.256216049194336
    4. 'for' → logprob: -8.256216049194336
    5. 'if' → logprob: -8.756216049194336
    6. '           ' → logprob: -9.506216049194336
    7. '				' → logprob: -9.631216049194336
    8. ' for' → logprob: -10.006216049194336
    9. '```' → logprob: -10.131216049194336
    10. 'idx' → logprob: -10.256216049194336

Token 1307: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8057265281677246
    2. 'if' (adapté à ' if') → logprob: -1.1807265281677246
    3. 'row' → logprob: -2.1807265281677246
    4. 'for' → logprob: -2.3057265281677246
    5. '               ' → logprob: -4.305726528167725
    6. ' if' → logprob: -4.555726528167725
    7. ' for' → logprob: -5.930726528167725
    8. ' row' → logprob: -5.930726528167725
    9. '           ' → logprob: -6.180726528167725
    10. '                       ' → logprob: -6.805726528167725

Token 1308: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -6.153795766294934e-06
    2. 'parts' → logprob: -12.250005722045898
    3. ' len' → logprob: -14.375005722045898
    4. '(len' → logprob: -14.625005722045898
    5. '   ' → logprob: -16.1250057220459
    6. 'not' → logprob: -16.5000057220459
    7. 'c' → logprob: -17.7500057220459
    8. '[len' → logprob: -18.8750057220459
    9. '	len' → logprob: -19.1250057220459
    10. '       ' → logprob: -19.1250057220459

Token 1309: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.0019312551012262702
    2. 'parts' → logprob: -6.251931190490723
    3. ' parts' → logprob: -13.376931190490723
    4. '(' → logprob: -14.376931190490723
    5. '(part' → logprob: -15.501931190490723
    6. '(row' → logprob: -16.37693214416504
    7. '=' → logprob: -16.37693214416504
    8. '(
' → logprob: -17.25193214416504
    9. '_parts' → logprob: -18.00193214416504
    10. '(p' → logprob: -18.12693214416504

Token 1310: ')' (ID: 8)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.20004528760910034
    2. '!=' → logprob: -2.075045347213745
    3. ')' → logprob: -4.450045108795166
    4. '==' → logprob: -4.825045108795166
    5. ' <' → logprob: -4.825045108795166
    6. '>' → logprob: -5.200045108795166
    7. ' ==' → logprob: -5.325045108795166
    8. ' <=' → logprob: -5.325045108795166
    9. '<=' → logprob: -5.450045108795166
    10. ' >' → logprob: -5.450045108795166

Token 1311: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6104875206947327
    2. ' !=' → logprob: -1.485487461090088
    3. '<=' → logprob: -1.860487461090088
    4. '>' → logprob: -3.485487461090088
    5. '==' → logprob: -3.860487461090088
    6. ' <=' → logprob: -4.235487461090088
    7. '<' → logprob: -5.860487461090088
    8. ' ==' → logprob: -5.985487461090088
    9. ' >' → logprob: -6.360487461090088
    10. '                   ' → logprob: -7.735487461090088

Token 1312: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0013682155404239893
    2. '(r' → logprob: -6.626368045806885
    3. ' r' → logprob: -10.251368522644043
    4. '   ' → logprob: -12.876368522644043
    5. '[r' → logprob: -13.126368522644043
    6. ' (' → logprob: -13.876368522644043
    7. '{' → logprob: -15.251368522644043
    8. '(' → logprob: -15.251368522644043
    9. 'len' → logprob: -15.626368522644043
    10. '_r' → logprob: -15.751368522644043

Token 1313: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011146031320095062
    2. ' +' → logprob: -4.511146068572998
    3. '+r' → logprob: -9.38614559173584
    4. 'r' → logprob: -12.01114559173584
    5. '1' → logprob: -12.38614559173584
    6. '+c' → logprob: -12.88614559173584
    7. '   ' → logprob: -15.13614559173584
    8. '0' → logprob: -15.38614559173584
    9. 'c' → logprob: -15.51114559173584
    10. '()+' → logprob: -15.63614559173584

Token 1314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -17.5
    4. '
' → logprob: -19.0
    5. '`' → logprob: -19.0625
    6. 'r' → logprob: -19.125
    7. '   ' → logprob: -19.4375
    8. '+' → logprob: -19.5625
    9. '<|end|>' → logprob: -19.75
    10. '2' → logprob: -19.75

Token 1315: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4427318274974823
    2. ':
' → logprob: -1.1927318572998047
    3. ':' → logprob: -3.0677318572998047
    4. '                   ' → logprob: -4.942731857299805
    5. '):
' → logprob: -8.942731857299805
    6. ',' → logprob: -9.567731857299805
    7. '                           ' → logprob: -9.567731857299805
    8. '               ' → logprob: -9.692731857299805
    9. '<|end|>' → logprob: -10.067731857299805
    10. ' and' → logprob: -10.192731857299805

Token 1316: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.007774386554956436
    2. '                   ' → logprob: -5.632774353027344
    3. ':' → logprob: -6.007774353027344
    4. ':
' → logprob: -6.507774353027344
    5. '                           ' → logprob: -9.257774353027344
    6. '               ' → logprob: -10.757774353027344
    7. '```' → logprob: -10.882774353027344
    8. '       ' → logprob: -11.507774353027344
    9. '                        ' → logprob: -11.882774353027344
    10. ' and' → logprob: -12.007774353027344

Token 1317: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.2525149881839752
    2. 'break' → logprob: -1.5025149583816528
    3. '                   ' → logprob: -8.252514839172363
    4. 'row' → logprob: -9.502514839172363
    5. '           ' → logprob: -9.752514839172363
    6. ' break' → logprob: -9.877514839172363
    7. ' idx' → logprob: -10.252514839172363
    8. '               ' → logprob: -10.252514839172363
    9. '                       ' → logprob: -10.877514839172363
    10. 'parts' → logprob: -10.877514839172363

Token 1318: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.002055692719295621
    2. '                       ' → logprob: -6.877055644989014
    3. ' +=' → logprob: -7.377055644989014
    4. '                   ' → logprob: -8.002056121826172
    5. '                           ' → logprob: -10.502056121826172
    6. '           ' → logprob: -11.502056121826172
    7. '-=' → logprob: -11.877056121826172
    8. '               ' → logprob: -12.002056121826172
    9. '=' → logprob: -13.252056121826172
    10. '                      ' → logprob: -13.627056121826172

Token 1319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.625003814697266
    3. '0' → logprob: -16.250003814697266
    4. 'continue' → logprob: -16.250003814697266
    5. '```' → logprob: -16.500003814697266
    6. '=' → logprob: -17.875003814697266
    7. '                   ' → logprob: -18.500003814697266
    8. '
' → logprob: -18.750003814697266
    9. '           ' → logprob: -19.625003814697266
    10. '+' → logprob: -19.625003814697266

Token 1320: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002386949025094509
    2. '                           ' → logprob: -6.127387046813965
    3. '                   ' → logprob: -9.502387046813965
    4. 'continue' → logprob: -9.627387046813965
    5. '                               ' → logprob: -11.502387046813965
    6. ' continue' → logprob: -11.502387046813965
    7. '```' → logprob: -11.502387046813965
    8. '               ' → logprob: -11.877387046813965
    9. '           ' → logprob: -12.002387046813965
    10. '                        ' → logprob: -12.127387046813965

Token 1321: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0007674600346945226
    2. '                           ' → logprob: -7.375767230987549
    3. 'continue' → logprob: -9.625767707824707
    4. '                   ' → logprob: -9.875767707824707
    5. ' continue' → logprob: -12.000767707824707
    6. '           ' → logprob: -12.500767707824707
    7. '               ' → logprob: -12.500767707824707
    8. '                               ' → logprob: -12.875767707824707
    9. '                        ' → logprob: -13.125767707824707
    10. '                      ' → logprob: -13.625767707824707

Token 1322: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.033227551728487015
    2. 'break' → logprob: -3.5332274436950684
    3. '                       ' → logprob: -5.908227443695068
    4. ' continue' → logprob: -7.783227443695068
    5. '                           ' → logprob: -9.033227920532227
    6. '                   ' → logprob: -9.158227920532227
    7. '```' → logprob: -9.908227920532227
    8. '                               ' → logprob: -11.158227920532227
    9. '   ' → logprob: -11.283227920532227
    10. '	continue' → logprob: -11.533227920532227

Token 1323: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01353099662810564
    2. '                       ' → logprob: -4.38853120803833
    3. '```' → logprob: -7.76353120803833
    4. 'idx' → logprob: -8.138530731201172
    5. '               ' → logprob: -8.638530731201172
    6. '           ' → logprob: -10.263530731201172
    7. 'continue' → logprob: -10.888530731201172
    8. '                           ' → logprob: -11.013530731201172
    9. '
' → logprob: -11.763530731201172
    10. 'break' → logprob: -12.013530731201172

Token 1324: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009629174135625362
    2. 'idx' → logprob: -5.259629249572754
    3. '                       ' → logprob: -5.634629249572754
    4. '               ' → logprob: -7.884629249572754
    5. '```' → logprob: -8.759629249572754
    6. '                           ' → logprob: -9.634629249572754
    7. '                    
' → logprob: -9.884629249572754
    8. ' idx' → logprob: -10.009629249572754
    9. '           ' → logprob: -10.509629249572754
    10. '{
' → logprob: -11.509629249572754

Token 1325: ' try' (ID: 2075)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.0024125154595822096
    2. 'for' → logprob: -6.37741231918335
    3. '                   ' → logprob: -7.50241231918335
    4. '               ' → logprob: -9.627412796020508
    5. 'break' → logprob: -10.127412796020508
    6. 'board' → logprob: -10.502412796020508
    7. ' row' → logprob: -11.127412796020508
    8. '           ' → logprob: -12.252412796020508
    9. '                       ' → logprob: -13.502412796020508
    10. '   ' → logprob: -14.002412796020508

Token 1326: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6984062790870667
    2. '                       ' → logprob: -0.6984062790870667
    3. '                   ' → logprob: -5.323406219482422
    4. ':
' → logprob: -8.073406219482422
    5. '               ' → logprob: -11.698406219482422
    6. '                           ' → logprob: -11.948406219482422
    7. '           ' → logprob: -11.948406219482422
    8. '                      ' → logprob: -12.073406219482422
    9. '                        ' → logprob: -12.198406219482422
    10. '       ' → logprob: -12.323406219482422

Token 1327: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0003987336531281471
    2. ':' → logprob: -8.125398635864258
    3. '                   ' → logprob: -9.500398635864258
    4. '                           ' → logprob: -12.000398635864258
    5. '               ' → logprob: -12.750398635864258
    6. '           ' → logprob: -12.875398635864258
    7. '   ' → logprob: -12.875398635864258
    8. '                      ' → logprob: -12.875398635864258
    9. '                     ' → logprob: -13.000398635864258
    10. '       ' → logprob: -13.250398635864258

Token 1328: ' row' (ID: 5225)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.37889182567596436
    2. '                       ' → logprob: -2.253891944885254
    3. 'numbers' → logprob: -3.003891944885254
    4. 'vals' → logprob: -3.128891944885254
    5. 'nums' → logprob: -3.253891944885254
    6. 'row' (adapté à ' row') → logprob: -3.378891944885254
    7. '                   ' → logprob: -4.378891944885254
    8. 'parts' → logprob: -4.378891944885254
    9. 'stones' → logprob: -4.503891944885254
    10. '                           ' → logprob: -6.003891944885254

Token 1329: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.0061885337345302105
    2. 'values' → logprob: -5.50618839263916
    3. '_tokens' → logprob: -6.75618839263916
    4. '_vals' → logprob: -7.50618839263916
    5. '                   ' → logprob: -9.13118839263916
    6. '_numbers' → logprob: -9.50618839263916
    7. '_VALUES' → logprob: -10.13118839263916
    8. 'tokens' → logprob: -10.25618839263916
    9. 'vals' → logprob: -10.38118839263916
    10. ' =' → logprob: -10.63118839263916

Token 1330: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021474957466125
    2. ' =' → logprob: -2.350214719772339
    3. '=[]' → logprob: -12.350214958190918
    4. '＝' → logprob: -14.225214958190918
    5. '=[' → logprob: -14.350214958190918
    6. '=
' → logprob: -14.475214958190918
    7. '                   ' → logprob: -14.725214958190918
    8. '.extend' → logprob: -14.975214958190918
    9. '=list' → logprob: -15.350214958190918
    10. '[:]' → logprob: -15.725214958190918

Token 1331: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03000907599925995
    2. '[list' → logprob: -3.5300090312957764
    3. ' list' → logprob: -8.280009269714355
    4. '[' → logprob: -13.280009269714355
    5. ' [' → logprob: -13.905009269714355
    6. '=list' → logprob: -14.030009269714355
    7. '[int' → logprob: -14.405009269714355
    8. '[List' → logprob: -14.405009269714355
    9. '[len' → logprob: -15.780009269714355
    10. '[line' → logprob: -16.40500831604004

Token 1332: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0011821311200037599
    2. 'map' → logprob: -6.7511820793151855
    3. '(int' → logprob: -12.501182556152344
    4. '                   ' → logprob: -12.876182556152344
    5. '[int' → logprob: -13.501182556152344
    6. '(' → logprob: -13.626182556152344
    7. '                       ' → logprob: -13.876182556152344
    8. '   ' → logprob: -14.251182556152344
    9. '(
' → logprob: -15.001182556152344
    10. '.map' → logprob: -15.126182556152344

Token 1333: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005238140933215618
    2. 'int' → logprob: -5.255238056182861
    3. '(' → logprob: -14.13023853302002
    4. '[int' → logprob: -14.13023853302002
    5. '           ' → logprob: -14.38023853302002
    6. '                   ' → logprob: -14.50523853302002
    7. '   ' → logprob: -14.75523853302002
    8. '               ' → logprob: -14.88023853302002
    9. '(
' → logprob: -15.00523853302002
    10. ' int' → logprob: -15.13023853302002

Token 1334: ',' (ID: 11)
  Prédit: '(parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.25200462341308594
    2. ',' → logprob: -1.502004623413086
    3. 'parts' → logprob: -9.752004623413086
    4. '(' → logprob: -11.877004623413086
    5. ' ,' → logprob: -13.127004623413086
    6. '
' → logprob: -13.377004623413086
    7. '(part' → logprob: -13.502004623413086
    8. ' parts' → logprob: -13.502004623413086
    9. ',
' → logprob: -13.752004623413086
    10. ' (' → logprob: -13.877004623413086

Token 1335: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.011088619939982891
    2. ' parts' → logprob: -4.511088848114014
    3. '(parts' → logprob: -10.136088371276855
    4. '                   ' → logprob: -15.136088371276855
    5. '                       ' → logprob: -15.761088371276855
    6. 'pieces' → logprob: -15.886088371276855
    7. '_parts' → logprob: -16.261089324951172
    8. '               ' → logprob: -16.386089324951172
    9. '           ' → logprob: -16.636089324951172
    10. 'tokens' → logprob: -16.636089324951172

Token 1336: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.00494637805968523
    2. '))' → logprob: -5.754946231842041
    3. '                       ' → logprob: -6.504946231842041
    4. '                   ' → logprob: -8.6299467086792
    5. ')
' → logprob: -10.3799467086792
    6. ' ))
' → logprob: -10.5049467086792
    7. '))
' → logprob: -11.8799467086792
    8. ')' → logprob: -11.8799467086792
    9. '));' → logprob: -12.2549467086792
    10. ')))
' → logprob: -12.6299467086792

Token 1337: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0028386341873556376
    2. '                   ' → logprob: -5.877838611602783
    3. '               ' → logprob: -10.627839088439941
    4. '           ' → logprob: -12.752839088439941
    5. '                           ' → logprob: -12.877839088439941
    6. 'except' → logprob: -13.502839088439941
    7. ',' → logprob: -14.127839088439941
    8. '       ' → logprob: -14.627839088439941
    9. '                        ' → logprob: -15.377839088439941
    10. '                      ' → logprob: -15.377839088439941

Token 1338: ' idx' (ID: 14016)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0035988790914416313
    2. 'break' → logprob: -5.753598690032959
    3. '                   ' → logprob: -8.003599166870117
    4. '                           ' → logprob: -9.753599166870117
    5. 'idx' (adapté à ' idx') → logprob: -11.253599166870117
    6. '               ' → logprob: -11.753599166870117
    7. '           ' → logprob: -12.503599166870117
    8. '                               ' → logprob: -14.128599166870117
    9. ' break' → logprob: -14.378599166870117
    10. '       ' → logprob: -14.753599166870117

Token 1339: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.011073758825659752
    2. ' +=' → logprob: -4.511073589324951
    3. '                       ' → logprob: -11.38607406616211
    4. '                   ' → logprob: -12.01107406616211
    5. ']+=' → logprob: -12.76107406616211
    6. '+' → logprob: -13.38607406616211
    7. '=' → logprob: -13.88607406616211
    8. '                           ' → logprob: -14.26107406616211
    9. '               ' → logprob: -14.51107406616211
    10. '++' → logprob: -14.51107406616211

Token 1340: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.500001907348633
    3. '0' → logprob: -15.750001907348633
    4. 'r' → logprob: -16.500001907348633
    5. '```' → logprob: -18.000001907348633
    6. '<|end|>' → logprob: -19.000001907348633
    7. '   ' → logprob: -19.375001907348633
    8. 'continue' → logprob: -19.625001907348633
    9. 'break' → logprob: -19.625001907348633
    10. '+' → logprob: -19.750001907348633

Token 1341: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0005365899996832013
    2. '                   ' → logprob: -7.8755364418029785
    3. '                           ' → logprob: -9.250536918640137
    4. '               ' → logprob: -10.250536918640137
    5. '           ' → logprob: -11.500536918640137
    6. '                        ' → logprob: -12.750536918640137
    7. '<|end|>' → logprob: -13.000536918640137
    8. '					' → logprob: -13.375536918640137
    9. '       ' → logprob: -13.500536918640137
    10. '	                   ' → logprob: -13.875536918640137

Token 1342: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0005694755236618221
    2. '                   ' → logprob: -7.5005693435668945
    3. '               ' → logprob: -11.500569343566895
    4. '                           ' → logprob: -12.500569343566895
    5. '           ' → logprob: -13.875569343566895
    6. '					' → logprob: -15.375569343566895
    7. '       ' → logprob: -15.500569343566895
    8. '```' → logprob: -15.625569343566895
    9. '                        ' → logprob: -15.750569343566895
    10. 'break' → logprob: -15.750569343566895

Token 1343: ' break' (ID: 2338)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00476937647908926
    2. 'break' (adapté à ' break') → logprob: -5.379769325256348
    3. '                   ' → logprob: -9.004769325256348
    4. '               ' → logprob: -11.754769325256348
    5. ' break' → logprob: -11.879769325256348
    6. '   ' → logprob: -12.754769325256348
    7. '       ' → logprob: -12.754769325256348
    8. '           ' → logprob: -13.004769325256348
    9. '                           ' → logprob: -14.004769325256348
    10. '					' → logprob: -14.254769325256348

Token 1344: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14709125459194183
    2. '               ' → logprob: -2.1470911502838135
    3. '           ' → logprob: -4.397091388702393
    4. '       ' → logprob: -5.647091388702393
    5. '```' → logprob: -6.522091388702393
    6. '                       ' → logprob: -6.772091388702393
    7. '<|end|>' → logprob: -7.147091388702393
    8. '                ' → logprob: -9.397090911865234
    9. '                    
' → logprob: -9.522090911865234
    10. '#' → logprob: -9.647090911865234

Token 1345: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.32457903027534485
    2. '               ' → logprob: -1.3245790004730225
    3. '           ' → logprob: -4.824579238891602
    4. '       ' → logprob: -6.449579238891602
    5. '```' → logprob: -6.574579238891602
    6. '                       ' → logprob: -9.199579238891602
    7. 'except' → logprob: -9.199579238891602
    8. '   ' → logprob: -11.199579238891602
    9. '<|end|>' → logprob: -12.449579238891602
    10. '​' → logprob: -12.824579238891602

Token 1346: ' except' (ID: 6384)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12773889303207397
    2. '               ' → logprob: -2.3777389526367188
    3. 'except' (adapté à ' except') → logprob: -3.7527389526367188
    4. '           ' → logprob: -6.377738952636719
    5. ' except' → logprob: -6.502738952636719
    6. '```' → logprob: -8.127738952636719
    7. '       ' → logprob: -9.002738952636719
    8. '   ' → logprob: -10.127738952636719
    9. '                       ' → logprob: -11.627738952636719
    10. '	               ' → logprob: -12.377738952636719

Token 1347: ':
' (ID: 734)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.016351642087101936
    2. 'Exception' → logprob: -4.141351699829102
    3. '(Value' → logprob: -8.391351699829102
    4. '(Exception' → logprob: -10.391351699829102
    5. ':' → logprob: -10.891351699829102
    6. '	Value' → logprob: -11.766351699829102
    7. '_value' → logprob: -12.016351699829102
    8. ' Value' → logprob: -12.141351699829102
    9. 'Except' → logprob: -12.266351699829102
    10. ':
' → logprob: -12.516351699829102

Token 1348: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0006058142753317952
    2. '                   ' → logprob: -7.500605583190918
    3. '                           ' → logprob: -11.625605583190918
    4. '               ' → logprob: -11.750605583190918
    5. '           ' → logprob: -12.125605583190918
    6. ' continue' → logprob: -12.125605583190918
    7. ' except' → logprob: -12.125605583190918
    8. ':' → logprob: -12.125605583190918
    9. '       ' → logprob: -12.500605583190918
    10. 'continue' → logprob: -12.750605583190918

Token 1349: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.04997553303837776
    2. '                           ' → logprob: -3.049975633621216
    3. 'continue' → logprob: -7.299975395202637
    4. '                       ' → logprob: -7.549975395202637
    5. ' idx' → logprob: -9.674975395202637
    6. 'index' → logprob: -9.799975395202637
    7. 'break' → logprob: -10.549975395202637
    8. '                               ' → logprob: -11.049975395202637
    9. '           ' → logprob: -11.799975395202637
    10. '	idx' → logprob: -12.674975395202637

Token 1350: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -6.110668618930504e-05
    2. ' +=' → logprob: -9.75006103515625
    3. ']+=' → logprob: -13.62506103515625
    4. '+' → logprob: -13.87506103515625
    5. '                       ' → logprob: -15.12506103515625
    6. '=' → logprob: -15.87506103515625
    7. '+='' → logprob: -17.12506103515625
    8. '           ' → logprob: -17.25006103515625
    9. '                           ' → logprob: -17.37506103515625
    10. '+="' → logprob: -17.50006103515625

Token 1351: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '0' → logprob: -17.75
    4. '```' → logprob: -20.75
    5. 'continue' → logprob: -20.75
    6. '
' → logprob: -21.25
    7. '   ' → logprob: -21.25
    8. '１' → logprob: -21.875
    9. '=' → logprob: -22.125
    10. '+' → logprob: -22.25

Token 1352: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.15219087898731232
    2. '           ' → logprob: -2.652190923690796
    3. '               ' → logprob: -2.902190923690796
    4. '       ' → logprob: -5.027190685272217
    5. '                   ' → logprob: -5.402190685272217
    6. '```' → logprob: -5.527190685272217
    7. '                           ' → logprob: -8.402191162109375
    8. '<|end|>' → logprob: -8.777191162109375
    9. '                        
' → logprob: -9.777191162109375
    10. 'continue' → logprob: -9.777191162109375

Token 1353: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0022349476348608732
    2. '               ' → logprob: -6.502234935760498
    3. '           ' → logprob: -7.877234935760498
    4. '                   ' → logprob: -8.752235412597656
    5. '       ' → logprob: -9.252235412597656
    6. '```' → logprob: -10.252235412597656
    7. '                           ' → logprob: -10.627235412597656
    8. '                        
' → logprob: -11.127235412597656
    9. ' continue' → logprob: -11.627235412597656
    10. '<|end|>' → logprob: -12.752235412597656

Token 1354: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.3737836480140686
    2. '                       ' → logprob: -1.3737835884094238
    3. ' continue' → logprob: -2.873783588409424
    4. 'pass' → logprob: -6.498783588409424
    5. ' pass' → logprob: -8.623784065246582
    6. '               ' → logprob: -8.623784065246582
    7. '```' → logprob: -8.623784065246582
    8. '                   ' → logprob: -9.873784065246582
    9. '           ' → logprob: -10.123784065246582
    10. 'break' → logprob: -10.248784065246582

Token 1355: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11288406699895859
    2. '           ' → logprob: -2.237884044647217
    3. 'for' → logprob: -10.612884521484375
    4. '                   ' → logprob: -11.362884521484375
    5. '       ' → logprob: -11.487884521484375
    6. '```' → logprob: -12.112884521484375
    7. '   ' → logprob: -12.487884521484375
    8. ' for' → logprob: -13.112884521484375
    9. '
' → logprob: -14.362884521484375
    10. '#' → logprob: -14.862884521484375

Token 1356: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03820868954062462
    2. '           ' → logprob: -3.2882087230682373
    3. 'for' → logprob: -8.913208961486816
    4. '                   ' → logprob: -11.663208961486816
    5. '```' → logprob: -11.788208961486816
    6. ' for' → logprob: -11.913208961486816
    7. '       ' → logprob: -12.038208961486816
    8. '   ' → logprob: -12.913208961486816
    9. '              ' → logprob: -15.413208961486816
    10. '
' → logprob: -15.788208961486816

Token 1357: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0643283799290657
    2. '               ' → logprob: -2.81432843208313
    3. 'for' (adapté à ' for') → logprob: -6.064328193664551
    4. ' for' → logprob: -10.81432819366455
    5. '       ' → logprob: -11.68932819366455
    6. '   ' → logprob: -12.31432819366455
    7. '                   ' → logprob: -15.81432819366455
    8. '          ' → logprob: -16.314329147338867
    9. '
' → logprob: -16.564329147338867
    10. '```' → logprob: -16.564329147338867

Token 1358: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00020914296328555793
    2. ' c' → logprob: -8.875208854675293
    3. 'col' → logprob: -9.625208854675293
    4. '   ' → logprob: -13.125208854675293
    5. 'cc' → logprob: -14.500208854675293
    6. 'i' → logprob: -15.500208854675293
    7. 'ci' → logprob: -16.62520980834961
    8. ' ' → logprob: -16.87520980834961
    9. '       ' → logprob: -16.87520980834961
    10. ' col' → logprob: -16.87520980834961

Token 1359: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029757438227534294
    2. 'in' → logprob: -3.529757499694824
    3. ' ' → logprob: -13.279757499694824
    4. ',' → logprob: -13.404757499694824
    5. '	in' → logprob: -14.654757499694824
    6. '<|end|>' → logprob: -14.654757499694824
    7. '               ' → logprob: -14.904757499694824
    8. '0' → logprob: -15.279757499694824
    9. '_in' → logprob: -15.404757499694824
    10. '```' → logprob: -15.529757499694824

Token 1360: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004908377304673195
    2. ' range' → logprob: -7.625490665435791
    3. '   ' → logprob: -13.25049114227295
    4. 'in' → logprob: -15.12549114227295
    5. ' ' → logprob: -15.62549114227295
    6. '    ' → logprob: -16.000490188598633
    7. '(range' → logprob: -16.000490188598633
    8. '  ' → logprob: -16.000490188598633
    9. 'row' → logprob: -16.250490188598633
    10. '       ' → logprob: -16.500490188598633

Token 1361: '(r' (ID: 4729)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008768673054873943
    2. '(r' → logprob: -4.758768558502197
    3. ' r' → logprob: -9.383769035339355
    4. 'range' → logprob: -10.633769035339355
    5. '   ' → logprob: -10.883769035339355
    6. 'len' → logprob: -11.383769035339355
    7. '           ' → logprob: -12.508769035339355
    8. '               ' → logprob: -12.508769035339355
    9. '(len' → logprob: -12.758769035339355
    10. '0' → logprob: -13.258769035339355

Token 1362: '+' (ID: 10)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5542806386947632
    2. '):' → logprob: -1.8042806386947632
    3. '(row' → logprob: -2.5542807579040527
    4. '               ' → logprob: -2.8042807579040527
    5. '+' → logprob: -2.9292807579040527
    6. '                   ' → logprob: -3.5542807579040527
    7. '(len' → logprob: -3.9292807579040527
    8. '           ' → logprob: -5.679280757904053
    9. '(r' → logprob: -5.929280757904053
    10. ')' → logprob: -6.304280757904053

Token 1363: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021263018250465393
    2. 'r' → logprob: -3.8962631225585938
    3. '0' → logprob: -7.271263122558594
    4. 'len' → logprob: -12.021263122558594
    5. 'row' → logprob: -12.021263122558594
    6. ' r' → logprob: -12.271263122558594
    7. ' ' → logprob: -13.146263122558594
    8. '+' → logprob: -13.521263122558594
    9. '(r' → logprob: -13.521263122558594
    10. ')' → logprob: -13.896263122558594

Token 1364: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.24971146881580353
    2. '):' → logprob: -1.749711513519287
    3. '                   ' → logprob: -3.249711513519287
    4. '               ' → logprob: -4.999711513519287
    5. '                       ' → logprob: -7.124711513519287
    6. ')' → logprob: -8.374711036682129
    7. ',' → logprob: -8.624711036682129
    8. '           ' → logprob: -8.874711036682129
    9. '):
' → logprob: -9.124711036682129
    10. '       ' → logprob: -10.249711036682129

Token 1365: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -7.088138227118179e-05
    2. '                       ' → logprob: -10.375070571899414
    3. ' board' → logprob: -11.250070571899414
    4. '           ' → logprob: -11.875070571899414
    5. 'board' → logprob: -12.125070571899414
    6. '   ' → logprob: -12.500070571899414
    7. '               ' → logprob: -12.750070571899414
    8. '```' → logprob: -13.625070571899414
    9. ':
' → logprob: -14.000070571899414
    10. '(board' → logprob: -14.125070571899414

Token 1366: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' (adapté à ' board') → logprob: -0.20136430859565735
    2. ' board' → logprob: -2.326364278793335
    3. '                       ' → logprob: -2.576364278793335
    4. '                   ' → logprob: -5.076364517211914
    5. '               ' → logprob: -6.576364517211914
    6. '   ' → logprob: -7.951364517211914
    7. '       ' → logprob: -8.076364517211914
    8. '           ' → logprob: -8.201364517211914
    9. 'self' → logprob: -10.326364517211914
    10. '```' → logprob: -10.326364517211914

Token 1367: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.0016924348892644048
    2. '.' → logprob: -7.126692295074463
    3. '                   ' → logprob: -7.126692295074463
    4. '.setdefault' → logprob: -10.251692771911621
    5. '                       ' → logprob: -11.126692771911621
    6. '   ' → logprob: -11.376692771911621
    7. ' .' → logprob: -11.876692771911621
    8. '	               ' → logprob: -13.376692771911621
    9. '       ' → logprob: -13.376692771911621
    10. '#set' → logprob: -13.501692771911621

Token 1368: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.03902290388941765
    2. '(r' → logprob: -3.414022922515869
    3. 'st' → logprob: -5.289022922515869
    4. 'r' → logprob: -8.539022445678711
    5. '   ' → logprob: -9.789022445678711
    6. 'c' → logprob: -10.414022445678711
    7. '(c' → logprob: -10.914022445678711
    8. '               ' → logprob: -13.039022445678711
    9. 'stone' → logprob: -13.039022445678711
    10. '_r' → logprob: -13.539022445678711

Token 1369: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -9.849109119386412e-06
    2. '_one' → logprob: -12.125009536743164
    3. '(r' → logprob: -13.750009536743164
    4. 'r' → logprob: -13.750009536743164
    5. 'tone' → logprob: -14.625009536743164
    6. 'on' → logprob: -15.000009536743164
    7. 'o' → logprob: -15.250009536743164
    8. 'c' → logprob: -15.500009536743164
    9. 'ones' → logprob: -15.750009536743164
    10. 'rone' → logprob: -15.875009536743164

Token 1370: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -8.995397365652025e-05
    2. '(' → logprob: -9.500089645385742
    3. ' (' → logprob: -11.500089645385742
    4. 'r' → logprob: -13.125089645385742
    5. '(
' → logprob: -13.875089645385742
    6. '   ' → logprob: -14.000089645385742
    7. ' r' → logprob: -15.000089645385742
    8. '                   ' → logprob: -15.250089645385742
    9. '    ' → logprob: -16.250089645385742
    10. ' ' → logprob: -16.375089645385742

Token 1371: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.12901675701141357
    2. ',' → logprob: -2.129016876220703
    3. 'c' → logprob: -6.504016876220703
    4. '(c' → logprob: -8.254016876220703
    5. ' ,' → logprob: -8.754016876220703
    6. '                   ' → logprob: -8.879016876220703
    7. ' c' → logprob: -11.004016876220703
    8. ')c' → logprob: -11.504016876220703
    9. ',(' → logprob: -14.129016876220703
    10. '   ' → logprob: -14.379016876220703

Token 1372: ',row' (ID: 136650)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10070154070854187
    2. ',row' → logprob: -2.3507015705108643
    3. 'row' → logprob: -7.975701332092285
    4. '                   ' → logprob: -9.350701332092285
    5. ' ,' → logprob: -9.975701332092285
    6. ' row' → logprob: -11.100701332092285
    7. '(row' → logprob: -14.100701332092285
    8. '                    ' → logprob: -14.475701332092285
    9. '                       ' → logprob: -15.350701332092285
    10. '   ' → logprob: -15.475701332092285

Token 1373: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -8.65707261255011e-06
    2. 'values' → logprob: -12.250008583068848
    3. '[c' → logprob: -13.250008583068848
    4. '                   ' → logprob: -13.875008583068848
    5. '_VALUES' → logprob: -15.125008583068848
    6. 'Values' → logprob: -15.500008583068848
    7. '[row' → logprob: -15.750008583068848
    8. ')' → logprob: -16.000009536743164
    9. '               ' → logprob: -16.000009536743164
    10. '[r' → logprob: -16.250009536743164

Token 1374: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -4.320199877838604e-07
    2. 'c' → logprob: -15.25
    3. ')c' → logprob: -16.625
    4. '[
' → logprob: -18.625
    5. '```' → logprob: -18.625
    6. '[' → logprob: -18.875
    7. ')' → logprob: -20.125
    8. ')[' → logprob: -20.125
    9. '
' → logprob: -20.25
    10. '   ' → logprob: -21.0

Token 1375: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.014684110297821e-06
    2. ')
' → logprob: -12.000008583068848
    3. '                   ' → logprob: -13.250008583068848
    4. ' )' → logprob: -14.000008583068848
    5. '               ' → logprob: -16.750009536743164
    6. '))' → logprob: -17.125009536743164
    7. '<|end|>' → logprob: -17.625009536743164
    8. '           ' → logprob: -17.750009536743164
    9. ']' → logprob: -18.000009536743164
    10. '       ' → logprob: -18.000009536743164

Token 1376: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002900570398196578
    2. '<|end|>' → logprob: -6.00290060043335
    3. '               ' → logprob: -8.627900123596191
    4. '          ' → logprob: -10.002900123596191
    5. '```' → logprob: -10.127900123596191
    6. '       ' → logprob: -10.377900123596191
    7. '.' → logprob: -10.627900123596191
    8. ')' → logprob: -10.752900123596191
    9. '            ' → logprob: -11.252900123596191
    10. '<|end|>' → logprob: -11.252900123596191

Token 1377: ' board' (ID: 6796)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06253121793270111
    2. '           ' → logprob: -2.8125312328338623
    3. 'board' (adapté à ' board') → logprob: -7.562530994415283
    4. '   ' → logprob: -10.437531471252441
    5. ' board' → logprob: -12.687531471252441
    6. '
' → logprob: -12.937531471252441
    7. '	board' → logprob: -12.937531471252441
    8. '        
' → logprob: -13.187531471252441
    9. '               ' → logprob: -13.562531471252441
    10. '      ' → logprob: -14.562531471252441

Token 1378: '.build' (ID: 20924)
  Prédit: '.build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.build' → logprob: -6.635164754698053e-05
    2. '.' → logprob: -9.625066757202148
    3. ' .' → logprob: -16.25006675720215
    4. '\.' → logprob: -16.75006675720215
    5. 'build' → logprob: -17.00006675720215
    6. '	build' → logprob: -17.87506675720215
    7. '.
' → logprob: -18.00006675720215
    8. '   ' → logprob: -18.25006675720215
    9. ').' → logprob: -18.62506675720215
    10. '​.' → logprob: -18.62506675720215

Token 1379: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -1.9361264946837764e-07
    2. '_adj' → logprob: -16.625
    3. '_' → logprob: -18.625
    4. 'ad' → logprob: -19.125
    5. 'adj' → logprob: -19.875
    6. '(ad' → logprob: -21.375
    7. ' adjacency' → logprob: -21.375
    8. '_ab' → logprob: -21.875
    9. '_add' → logprob: -22.25
    10. '_ac' → logprob: -22.625

Token 1380: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -3.023293538717553e-05
    2. 'acency' → logprob: -10.500030517578125
    3. 'j' → logprob: -13.250030517578125
    4. 'Jac' → logprob: -14.125030517578125
    5. ' jac' → logprob: -16.000030517578125
    6. '_j' → logprob: -16.750030517578125
    7. ' adjacency' → logprob: -18.000030517578125
    8. '       ' → logprob: -18.125030517578125
    9. 'jc' → logprob: -18.750030517578125
    10. '_' → logprob: -19.250030517578125

Token 1381: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -5.200166469876422e-06
    2. 'acy' → logprob: -12.625004768371582
    3. 'acency' → logprob: -14.500004768371582
    4. 'cy' → logprob: -14.625004768371582
    5. 'ancy' → logprob: -15.625004768371582
    6. 'ENCY' → logprob: -15.750004768371582
    7. 'y' → logprob: -16.3750057220459
    8. '   ' → logprob: -16.3750057220459
    9. 'ity' → logprob: -16.5000057220459
    10. '#' → logprob: -16.8750057220459

Token 1382: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.043679870665073395
    2. '<|end|>' → logprob: -3.79367995262146
    3. '
' → logprob: -4.043679714202881
    4. '            
' → logprob: -6.668679714202881
    5. '<|end|>' → logprob: -6.793679714202881
    6. '       ' → logprob: -9.418680191040039
    7. '    
' → logprob: -9.793680191040039
    8. ',' → logprob: -10.793680191040039
    9. '   ' → logprob: -10.918680191040039
    10. '        
' → logprob: -10.918680191040039

Token 1383: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03131420165300369
    2. '       ' → logprob: -3.5313141345977783
    3. '<|end|>' → logprob: -6.531314373016357
    4. '<|end|>' → logprob: -10.1563138961792
    5. '   ' → logprob: -10.7813138961792
    6. '```' → logprob: -11.0313138961792
    7. '            
' → logprob: -12.4063138961792
    8. '	       ' → logprob: -12.9063138961792
    9. '#' → logprob: -12.9063138961792
    10. '        
' → logprob: -12.9063138961792

Token 1384: ' result' (ID: 1534)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6905718445777893
    2. 'best' → logprob: -1.0655717849731445
    3. 'score' → logprob: -2.4405717849731445
    4. 'scores' → logprob: -3.6905717849731445
    5. '           ' → logprob: -4.0655717849731445
    6. 'possible' → logprob: -4.6905717849731445
    7. 'moves' → logprob: -5.0655717849731445
    8. 'result' (adapté à ' result') → logprob: -6.1905717849731445
    9. 'valid' → logprob: -6.4405717849731445
    10. 'total' → logprob: -6.8155717849731445

Token 1385: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23883673548698425
    2. '.append' → logprob: -1.8638367652893066
    3. '[' → logprob: -3.6138367652893066
    4. '=' → logprob: -3.8638367652893066
    5. '[result' → logprob: -5.738836765289307
    6. '.' → logprob: -6.238836765289307
    7. '   ' → logprob: -7.863836765289307
    8. '       ' → logprob: -7.863836765289307
    9. '```' → logprob: -7.863836765289307
    10. '=result' → logprob: -7.863836765289307

Token 1386: ' self' (ID: 1051)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27175262570381165
    2. '-' → logprob: -2.0217525959014893
    3. 'None' → logprob: -2.6467525959014893
    4. 'max' → logprob: -3.5217525959014893
    5. 'Life' → logprob: -6.146752834320068
    6. 'self' → logprob: -6.896752834320068
    7. 'float' → logprob: -7.271752834320068
    8. '[]
' → logprob: -8.14675235748291
    9. 'False' → logprob: -8.27175235748291
    10. 'Game' → logprob: -8.39675235748291

Token 1387: '._' (ID: 2697)
  Prédit: '.put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.put' → logprob: -0.10975617170333862
    2. '.solve' → logprob: -2.4847562313079834
    3. '.' → logprob: -4.359755992889404
    4. '.results' → logprob: -5.359755992889404
    5. ' .' → logprob: -6.359755992889404
    6. 'put' → logprob: -7.109755992889404
    7. 'results' → logprob: -8.359756469726562
    8. '.s' → logprob: -9.234756469726562
    9. ' put' → logprob: -9.359756469726562
    10. '.sol' → logprob: -9.984756469726562

Token 1388: 'max' (ID: 3228)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -1.2280486822128296
    2. 'find' → logprob: -1.4780486822128296
    3. 'try' → logprob: -2.103048801422119
    4. 'put' → logprob: -2.478048801422119
    5. 'compute' → logprob: -2.728048801422119
    6. 'solve' → logprob: -2.728048801422119
    7. 'next' → logprob: -3.353048801422119
    8. 'max' → logprob: -3.603048801422119
    9. 'calculate' → logprob: -3.853048801422119
    10. 'possible' → logprob: -3.978048801422119

Token 1389: '_points' (ID: 30070)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.34099215269088745
    2. '_gain' → logprob: -1.3409922122955322
    3. '_result' → logprob: -4.215991973876953
    4. 'score' → logprob: -4.840991973876953
    5. '_move' → logprob: -6.840991973876953
    6. '_loss' → logprob: -7.590991973876953
    7. '_depth' → logprob: -7.590991973876953
    8. 'result' → logprob: -7.715991973876953
    9. 'gain' → logprob: -7.715991973876953
    10. 'imize' → logprob: -7.715991973876953

Token 1390: '_turn' (ID: 89223)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2578088343143463
    2. '()' → logprob: -1.882808804512024
    3. '(size' → logprob: -2.8828089237213135
    4. '(
' → logprob: -5.882808685302734
    5. '           ' → logprob: -5.882808685302734
    6. '_' → logprob: -6.132808685302734
    7. '(r' → logprob: -6.132808685302734
    8. '_possible' → logprob: -6.882808685302734
    9. '_move' → logprob: -6.882808685302734
    10. '(board' → logprob: -7.007808685302734

Token 1391: '(board' (ID: 41261)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04983774572610855
    2. '(' → logprob: -3.174837827682495
    3. '(r' → logprob: -5.424837589263916
    4. '(result' → logprob: -7.174837589263916
    5. '(board' → logprob: -7.174837589263916
    6. '(size' → logprob: -8.674838066101074
    7. '()
' → logprob: -8.924838066101074
    8. '((' → logprob: -9.174838066101074
    9. '(row' → logprob: -9.549838066101074
    10. '()`' → logprob: -10.049838066101074

Token 1392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013438910245895386
    2. ',current' → logprob: -4.513438701629639
    3. '(current' → logprob: -6.388438701629639
    4. ')' → logprob: -7.888438701629639
    5. '           ' → logprob: -8.138439178466797
    6. ' ,' → logprob: -11.263439178466797
    7. '(' → logprob: -11.263439178466797
    8. ',(' → logprob: -12.888439178466797
    9. ',self' → logprob: -13.013439178466797
    10. ',)' → logprob: -13.388439178466797

Token 1393: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0004191138141322881
    2. ' current' → logprob: -8.375418663024902
    3. 'size' → logprob: -8.625418663024902
    4. 'C' → logprob: -12.125418663024902
    5. '
' → logprob: -14.000418663024902
    6. '   ' → logprob: -14.000418663024902
    7. '           ' → logprob: -14.750418663024902
    8. '(current' → logprob: -15.000418663024902
    9. 'self' → logprob: -15.125418663024902
    10. '               ' → logprob: -15.625418663024902

Token 1394: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -0.0001737431448418647
    2. '_' → logprob: -8.750173568725586
    3. 'player' → logprob: -11.875173568725586
    4. ' _' → logprob: -12.875173568725586
    5. 'Player' → logprob: -13.000173568725586
    6. '_PLAYER' → logprob: -13.875173568725586
    7. '_
' → logprob: -14.250173568725586
    8. '   ' → logprob: -15.125173568725586
    9. '_user' → logprob: -15.250173568725586
    10. ' player' → logprob: -15.500173568725586

Token 1395: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14678291976451874
    2. ',' → logprob: -2.021782875061035
    3. '           ' → logprob: -5.896782875061035
    4. '(' → logprob: -7.146782875061035
    5. ' )' → logprob: -8.771782875061035
    6. '   ' → logprob: -9.271782875061035
    7. ' ,' → logprob: -9.396782875061035
    8. '       ' → logprob: -9.521782875061035
    9. ',r' → logprob: -10.521782875061035
    10. ')
' → logprob: -10.896782875061035

Token 1396: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13194067776203156
    2. '()' → logprob: -2.3819406032562256
    3. '(' → logprob: -4.506940841674805
    4. '()
' → logprob: -4.756940841674805
    5. '       ' → logprob: -5.256940841674805
    6. '(
' → logprob: -7.006940841674805
    7. 'return' → logprob: -7.381940841674805
    8. '   ' → logprob: -7.756940841674805
    9. '            
' → logprob: -7.756940841674805
    10. '\n' → logprob: -7.881940841674805

Token 1397: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4905352294445038
    2. 'self' → logprob: -0.9905352592468262
    3. '
' → logprob: -4.615535259246826
    4. 'print' (adapté à ' print') → logprob: -6.115535259246826
    5. ' self' → logprob: -6.740535259246826
    6. 'return' → logprob: -6.865535259246826
    7. '       ' → logprob: -6.865535259246826
    8. '            
' → logprob: -8.490534782409668
    9. '		' → logprob: -9.115534782409668
    10. '```' → logprob: -9.115534782409668

Token 1398: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.00046379686682485044
    2. '(' → logprob: -8.000463485717773
    3. 'result' → logprob: -9.125463485717773
    4. '(f' → logprob: -10.875463485717773
    5. '()' → logprob: -15.375463485717773
    6. ' result' → logprob: -16.125463485717773
    7. '('' → logprob: -16.125463485717773
    8. '("' → logprob: -16.250463485717773
    9. ' (' → logprob: -16.875463485717773
    10. '=result' → logprob: -17.500463485717773

Token 1399: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013893934374209493
    2. ')
' → logprob: -10.000139236450195
    3. '()' → logprob: -10.000139236450195
    4. ',' → logprob: -11.625139236450195
    5. ' )' → logprob: -11.625139236450195
    6. '())' → logprob: -11.750139236450195
    7. '   ' → logprob: -12.000139236450195
    8. '       ' → logprob: -12.375139236450195
    9. ')`' → logprob: -12.500139236450195
    10. '           ' → logprob: -13.250139236450195

Token 1400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06478121876716614
    2. 'def' → logprob: -3.0647811889648438
    3. '
' → logprob: -4.314781188964844
    4. '    
' → logprob: -6.439781188964844
    5. ' def' → logprob: -7.814781188964844
    6. '       ' → logprob: -8.189781188964844
    7. '```' → logprob: -8.939781188964844
    8. ' ' → logprob: -9.814781188964844
    9. '10' → logprob: -10.189781188964844
    10. '        
' → logprob: -10.314781188964844

Token 1401: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15595398843288422
    2. 'def' (adapté à ' def') → logprob: -2.155953884124756
    3. '    
' → logprob: -3.905953884124756
    4. '```' → logprob: -5.530953884124756
    5. ' def' → logprob: -6.405953884124756
    6. '[' → logprob: -7.780953884124756
    7. '       ' → logprob: -8.030954360961914
    8. '        
' → logprob: -8.030954360961914
    9. '(' → logprob: -8.155954360961914
    10. '
' → logprob: -8.280954360961914

Token 1402: ' _' (ID: 1175)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -9.088346359931165e-07
    2. ' _' → logprob: -14.500000953674316
    3. 'max' → logprob: -15.875000953674316
    4. '_' → logprob: -17.375
    5. '_MAX' → logprob: -17.625
    6. '_next' → logprob: -17.875
    7. '_min' → logprob: -17.875
    8. '__' → logprob: -18.125
    9. '_best' → logprob: -18.125
    10. '_find' → logprob: -18.625

Token 1403: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -3.128163257315464e-07
    2. 'possible' → logprob: -15.5
    3. '_max' → logprob: -18.0
    4. 'min' → logprob: -18.0
    5. 'valid' → logprob: -18.625
    6. ' max' → logprob: -18.625
    7. 'generate' → logprob: -19.375
    8. 'dfs' → logprob: -19.5
    9. 'maximize' → logprob: -19.75
    10. 'can' → logprob: -20.125

Token 1404: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -1.1472419600977446e-06
    2. '_moves' → logprob: -14.500000953674316
    3. 'points' → logprob: -15.000000953674316
    4. '_point' → logprob: -16.625001907348633
    5. '_positions' → logprob: -16.875001907348633
    6. '_put' → logprob: -17.000001907348633
    7. '_move' → logprob: -17.250001907348633
    8. '_possible' → logprob: -17.875001907348633
    9. '_' → logprob: -18.375001907348633
    10. '_steps' → logprob: -18.625001907348633

Token 1405: '_turn' (ID: 89223)
  Prédit: '_turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_turn' → logprob: -0.009144027717411518
    2. '(self' → logprob: -4.759143829345703
    3. '_to' → logprob: -8.634143829345703
    4. '_gain' → logprob: -9.259143829345703
    5. '_for' → logprob: -9.884143829345703
    6. '_take' → logprob: -9.884143829345703
    7. '   ' → logprob: -10.009143829345703
    8. '_per' → logprob: -10.509143829345703
    9. '_get' → logprob: -11.134143829345703
    10. '_on' → logprob: -11.384143829345703

Token 1406: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.9146995327901095e-05
    2. '(' → logprob: -10.875019073486328
    3. 'self' → logprob: -16.625019073486328
    4. '(
' → logprob: -16.875019073486328
    5. '   ' → logprob: -17.500019073486328
    6. ' (' → logprob: -18.125019073486328
    7. '       ' → logprob: -18.250019073486328
    8. '(s' → logprob: -19.375019073486328
    9. '(this' → logprob: -20.125019073486328
    10. '(Self' → logprob: -20.250019073486328

Token 1407: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026015799958258867
    2. 'self' → logprob: -6.127601623535156
    3. ',self' → logprob: -8.502601623535156
    4. '(self' → logprob: -9.377601623535156
    5. ' ,' → logprob: -10.002601623535156
    6. '       ' → logprob: -10.002601623535156
    7. '   ' → logprob: -10.877601623535156
    8. ')' → logprob: -11.377601623535156
    9. ',
' → logprob: -13.127601623535156
    10. ' self' → logprob: -13.377601623535156

Token 1408: ' board' (ID: 6796)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6952228546142578
    2. 'board' → logprob: -0.6952228546142578
    3. ' board' → logprob: -6.320222854614258
    4. ' self' → logprob: -8.445222854614258
    5. '   ' → logprob: -10.070222854614258
    6. '       ' → logprob: -12.195222854614258
    7. '(self' → logprob: -12.945222854614258
    8. 'Board' → logprob: -13.195222854614258
    9. '	board' → logprob: -13.695222854614258
    10. ')' → logprob: -13.820222854614258

Token 1409: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003675133048091084
    2. '       ' → logprob: -8.375367164611816
    3. 'self' → logprob: -9.375367164611816
    4. ',self' → logprob: -10.250367164611816
    5. '   ' → logprob: -11.250367164611816
    6. ' ,' → logprob: -13.625367164611816
    7. ',
' → logprob: -13.625367164611816
    8. '(self' → logprob: -13.875367164611816
    9. '           ' → logprob: -15.500367164611816
    10. ' self' → logprob: -16.875368118286133

Token 1410: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.11071301996707916
    2. 'player' → logprob: -2.360713005065918
    3. ' current' → logprob: -4.610713005065918
    4. ' player' → logprob: -7.610713005065918
    5. '   ' → logprob: -11.735713005065918
    6. ' ' → logprob: -13.985713005065918
    7. '
' → logprob: -14.610713005065918
    8. 'curr' → logprob: -14.985713005065918
    9. 'cur' → logprob: -15.235713005065918
    10. '  ' → logprob: -15.360713005065918

Token 1411: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -0.019681155681610107
    2. 'player' → logprob: -4.019680976867676
    3. 'Player' → logprob: -7.394680976867676
    4. '_' → logprob: -7.769680976867676
    5. ' player' → logprob: -9.019680976867676
    6. '_players' → logprob: -9.019680976867676
    7. '_PLAYER' → logprob: -9.394680976867676
    8. '_token' → logprob: -10.144680976867676
    9. '   ' → logprob: -10.269680976867676
    10. '-player' → logprob: -10.394680976867676

Token 1412: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7157554626464844
    2. '       ' → logprob: -0.7157554626464844
    3. '):' → logprob: -3.9657554626464844
    4. '(self' → logprob: -6.715755462646484
    5. 'self' → logprob: -6.840755462646484
    6. '   ' → logprob: -7.465755462646484
    7. '):
' → logprob: -7.590755462646484
    8. ':' → logprob: -11.590755462646484
    9. ')' → logprob: -11.715755462646484
    10. ',self' → logprob: -11.715755462646484

Token 1413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006097480072639883
    2. '   ' → logprob: -8.500609397888184
    3. '    ' → logprob: -9.000609397888184
    4. ' max' → logprob: -9.125609397888184
    5. '        
' → logprob: -9.750609397888184
    6. '
' → logprob: -10.375609397888184
    7. ' 
' → logprob: -10.750609397888184
    8. '```' → logprob: -11.000609397888184
    9. '    
' → logprob: -11.125609397888184
    10. '[' → logprob: -12.500609397888184

Token 1414: ' gs' (ID: 55253)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6609804034233093
    2. '       ' → logprob: -1.160980463027954
    3. ' max' → logprob: -2.410980463027954
    4. 'best' → logprob: -2.785980463027954
    5. ' best' → logprob: -4.035980224609375
    6. 'score' → logprob: -6.785980224609375
    7. 'result' → logprob: -8.535980224609375
    8. ' score' → logprob: -10.910980224609375
    9. ' result' → logprob: -11.035980224609375
    10. 'possible' → logprob: -11.160980224609375

Token 1415: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05494050681591034
    2. '=' → logprob: -2.9299404621124268
    3. '.' → logprob: -10.929940223693848
    4. '   ' → logprob: -11.054940223693848
    5. '_' → logprob: -11.304940223693848
    6. '._' → logprob: -12.429940223693848
    7. ' ' → logprob: -13.304940223693848
    8. '       ' → logprob: -14.054940223693848
    9. ',' → logprob: -14.304940223693848
    10. ')' → logprob: -14.429940223693848

Token 1416: ' Game' (ID: 7022)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.01814994215965271
    2. ' Game' → logprob: -4.0181498527526855
    3. '	Game' → logprob: -18.018150329589844
    4. '(Game' → logprob: -19.518150329589844
    5. '_Game' → logprob: -20.018150329589844
    6. '<Game' → logprob: -20.893150329589844
    7. '.Game' → logprob: -20.893150329589844
    8. '_game' → logprob: -22.893150329589844
    9. '   ' → logprob: -24.268150329589844
    10. ' game' → logprob: -24.643150329589844

Token 1417: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -1.9361264946837764e-07
    2. 'S' → logprob: -16.125
    3. 'St' → logprob: -17.125
    4. 'States' → logprob: -17.375
    5. 'STATE' → logprob: -18.125
    6. 'Status' → logprob: -18.25
    7. '_State' → logprob: -18.375
    8. 'Stat' → logprob: -18.75
    9. '_state' → logprob: -19.0
    10. '	State' → logprob: -19.125

Token 1418: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -13.00000286102295
    3. '(
' → logprob: -15.37500286102295
    4. 'board' → logprob: -15.62500286102295
    5. '(Board' → logprob: -16.250001907348633
    6. '.board' → logprob: -18.000001907348633
    7. '	board' → logprob: -18.375001907348633
    8. ' board' → logprob: -18.375001907348633
    9. ' (' → logprob: -19.375001907348633
    10. '(b' → logprob: -21.000001907348633

Token 1419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004320996522437781
    2. ',current' → logprob: -7.750432014465332
    3. ' ,' → logprob: -13.750432014465332
    4. 'current' → logprob: -15.875432014465332
    5. ',
' → logprob: -16.00043296813965
    6. '(current' → logprob: -17.50043296813965
    7. '   ' → logprob: -18.25043296813965
    8. ')' → logprob: -18.75043296813965
    9. '=current' → logprob: -19.25043296813965
    10. '       ' → logprob: -19.25043296813965

Token 1420: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.02324547804892063
    2. ' current' → logprob: -3.7732455730438232
    3. '_current' → logprob: -17.898244857788086
    4. '(current' → logprob: -18.523244857788086
    5. '	current' → logprob: -19.023244857788086
    6. '$current' → logprob: -19.023244857788086
    7. '   ' → logprob: -19.398244857788086
    8. 'Current' → logprob: -19.398244857788086
    9. '[current' → logprob: -19.773244857788086
    10. 'urrent' → logprob: -20.273244857788086

Token 1421: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -4.4418171455617994e-05
    2. 'player' → logprob: -10.375044822692871
    3. 'Player' → logprob: -11.625044822692871
    4. '_' → logprob: -13.125044822692871
    5. '_PLAYER' → logprob: -13.375044822692871
    6. ' player' → logprob: -15.250044822692871
    7. '_Player' → logprob: -16.375043869018555
    8. '_user' → logprob: -16.625043869018555
    9. 'PLAYER' → logprob: -16.625043869018555
    10. '-player' → logprob: -16.875043869018555

Token 1422: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008682413026690483
    2. ')
' → logprob: -5.0086822509765625
    3. '       ' → logprob: -6.2586822509765625
    4. '   ' → logprob: -10.758682250976562
    5. '<|end|>' → logprob: -11.383682250976562
    6. ' ' → logprob: -12.883682250976562
    7. ',' → logprob: -13.008682250976562
    8. '
' → logprob: -13.008682250976562
    9. ' )' → logprob: -13.133682250976562
    10. ')
' → logprob: -13.258682250976562

Token 1423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006178221665322781
    2. 'max' → logprob: -5.131178379058838
    3. ' max' → logprob: -8.88117790222168
    4. 'best' → logprob: -10.25617790222168
    5. '```' → logprob: -10.50617790222168
    6. 'score' → logprob: -11.13117790222168
    7. '        
' → logprob: -11.63117790222168
    8. 'result' → logprob: -11.88117790222168
    9. '   ' → logprob: -11.88117790222168
    10. ' best' → logprob: -12.88117790222168

Token 1424: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.10021130740642548
    2. 'best' → logprob: -2.3502113819122314
    3. '       ' → logprob: -12.600211143493652
    4. ' max' → logprob: -14.100211143493652
    5. ' best' → logprob: -15.225211143493652
    6. 'result' → logprob: -15.975211143493652
    7. 'maximum' → logprob: -17.22521209716797
    8. 'score' → logprob: -17.47521209716797
    9. '   ' → logprob: -18.22521209716797
    10. 'ans' → logprob: -20.10021209716797

Token 1425: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.3184996247291565
    2. '_' → logprob: -2.0684995651245117
    3. '_score' → logprob: -2.1934995651245117
    4. '_gain' → logprob: -3.4434995651245117
    5. '_point' → logprob: -7.068499565124512
    6. '_val' → logprob: -7.443499565124512
    7. '_pts' → logprob: -7.568499565124512
    8. '_result' → logprob: -8.443499565124512
    9. '_loss' → logprob: -8.818499565124512
    10. '_value' → logprob: -9.193499565124512

Token 1426: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474078506231308
    2. ' =' → logprob: -0.9740785360336304
    3. ' ' → logprob: -14.224078178405762
    4. ',' → logprob: -15.349078178405762
    5. '_' → logprob: -15.599078178405762
    6. '   ' → logprob: -15.849078178405762
    7. '  ' → logprob: -16.849079132080078
    8. '=-' → logprob: -16.974079132080078
    9. ' =
' → logprob: -17.224079132080078
    10. '    ' → logprob: -17.599079132080078

Token 1427: ' None' (ID: 4662)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13037407398223877
    2. 'float' → logprob: -2.130373954772949
    3. 'None' → logprob: -6.130373954772949
    4. '0' → logprob: -7.005373954772949
    5. '-f' → logprob: -9.13037395477295
    6. ' float' → logprob: -9.50537395477295
    7. '-none' → logprob: -9.50537395477295
    8. ' -' → logprob: -9.75537395477295
    9. '-s' → logprob: -11.63037395477295
    10. '-int' → logprob: -12.50537395477295

Token 1428: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1574985384941101
    2. '       ' → logprob: -3.032498598098755
    3. ' 
' → logprob: -3.532498598098755
    4. '        
' → logprob: -4.032498359680176
    5. ' =' → logprob: -4.157498359680176
    6. ' for' → logprob: -4.532498359680176
    7. 'for' → logprob: -5.032498359680176
    8. '=' → logprob: -5.157498359680176
    9. '  
' → logprob: -5.407498359680176
    10. '    
' → logprob: -6.157498359680176

Token 1429: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7380796670913696
    2. '       ' → logprob: -1.6130796670913696
    3. 'for' → logprob: -2.23807954788208
    4. ' for' → logprob: -2.23807954788208
    5. '=' → logprob: -2.73807954788208
    6. '
' → logprob: -3.73807954788208
    7. '        
' → logprob: -4.11307954788208
    8. ' 
' → logprob: -6.23807954788208
    9. '0' → logprob: -7.86307954788208
    10. ' max' → logprob: -7.98807954788208

Token 1430: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04882955551147461
    2. 'for' (adapté à ' for') → logprob: -3.0488295555114746
    3. ' 
' → logprob: -9.423830032348633
    4. '       ' → logprob: -9.423830032348633
    5. '
' → logprob: -9.673830032348633
    6. '        
' → logprob: -11.798830032348633
    7. ' ' → logprob: -13.423830032348633
    8. ' True' → logprob: -13.423830032348633
    9. '  
' → logprob: -13.923830032348633
    10. ' max' → logprob: -14.298830032348633

Token 1431: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0019677700474858284
    2. '(r' → logprob: -6.251967906951904
    3. ' r' → logprob: -10.251967430114746
    4. 'pos' → logprob: -12.751967430114746
    5. ' (' → logprob: -14.376967430114746
    6. '_r' → logprob: -15.251967430114746
    7. 'move' → logprob: -17.001968383789062
    8. '   ' → logprob: -17.376968383789062
    9. 'position' → logprob: -17.376968383789062
    10. '	r' → logprob: -17.751968383789062

Token 1432: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0280383548888494e-06
    2. ' r' → logprob: -14.750000953674316
    3. '(r' → logprob: -14.875000953674316
    4. 'pos' → logprob: -16.125001907348633
    5. 'move' → logprob: -17.375001907348633
    6. '_r' → logprob: -19.500001907348633
    7. ')' → logprob: -20.125001907348633
    8. '   ' → logprob: -20.125001907348633
    9. 'rr' → logprob: -20.875001907348633
    10. ',r' → logprob: -21.375001907348633

Token 1433: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.4746711850166321
    2. ',' → logprob: -0.9746711850166321
    3. ' ,' → logprob: -8.224671363830566
    4. ',r' → logprob: -8.474671363830566
    5. ',s' → logprob: -9.599671363830566
    6. ',n' → logprob: -11.099671363830566
    7. ',
' → logprob: -12.099671363830566
    8. ',b' → logprob: -12.349671363830566
    9. ',t' → logprob: -12.349671363830566
    10. ',w' → logprob: -13.349671363830566

Token 1434: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002383972518146038
    2. ' )' → logprob: -6.502384185791016
    3. 'in' → logprob: -7.627384185791016
    4. ' in' → logprob: -8.127384185791016
    5. ',' → logprob: -9.627384185791016
    6. '),' → logprob: -10.627384185791016
    7. ',)' → logprob: -12.252384185791016
    8. '        ' → logprob: -13.627384185791016
    9. ' ,' → logprob: -13.877384185791016
    10. ' ),' → logprob: -14.627384185791016

Token 1435: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03804183006286621
    2. 'in' → logprob: -3.288041830062866
    3. '	in' → logprob: -15.538042068481445
    4. ' ' → logprob: -16.913042068481445
    5. ' ' → logprob: -17.413042068481445
    6. 'inthe' → logprob: -17.538042068481445
    7. '        ' → logprob: -17.663042068481445
    8. 'In' → logprob: -17.663042068481445
    9. ',' → logprob: -17.663042068481445
    10. 'import' → logprob: -17.788042068481445

Token 1436: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -9.615255839889869e-05
    2. ' board' → logprob: -9.250096321105957
    3. '	board' → logprob: -18.75009536743164
    4. '(board' → logprob: -19.00009536743164
    5. '.board' → logprob: -20.50009536743164
    6. 'self' → logprob: -22.12509536743164
    7. 'boards' → logprob: -22.50009536743164
    8. '_board' → logprob: -22.75009536743164
    9. '   ' → logprob: -23.62509536743164
    10. 'boarding' → logprob: -23.75009536743164

Token 1437: '.empty' (ID: 18962)
  Prédit: '.empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.empty' → logprob: -2.1054253011243418e-05
    2. '.' → logprob: -11.000020980834961
    3. 'empty' → logprob: -13.125020980834961
    4. '.em' → logprob: -13.250020980834961
    5. '.EMPTY' → logprob: -15.500020980834961
    6. ' .' → logprob: -16.00002098083496
    7. '.Empty' → logprob: -16.25002098083496
    8. '.emp' → logprob: -16.37502098083496
    9. ' empty' → logprob: -17.25002098083496
    10. ').' → logprob: -17.75002098083496

Token 1438: '_vertices' (ID: 96842)
  Prédit: '_vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vertices' → logprob: -2.1888679839321412e-05
    2. '_' → logprob: -11.500021934509277
    3. 'vertices' → logprob: -11.875021934509277
    4. ')' → logprob: -13.375021934509277
    5. '_positions' → logprob: -14.125021934509277
    6. '```' → logprob: -14.500021934509277
    7. '_(' → logprob: -15.000021934509277
    8. '(_' → logprob: -15.375021934509277
    9. '(' → logprob: -15.625021934509277
    10. 'Vertices' → logprob: -15.750021934509277

Token 1439: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4374655485153198
    2. '():' → logprob: -1.0624655485153198
    3. '():
' → logprob: -5.437465667724609
    4. '):' → logprob: -5.812465667724609
    5. ':
' → logprob: -7.312465667724609
    6. '()' → logprob: -8.06246566772461
    7. '           ' → logprob: -8.43746566772461
    8. '       ' → logprob: -10.06246566772461
    9. '<|end|>' → logprob: -10.81246566772461
    10. ',' → logprob: -10.81246566772461

Token 1440: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01870093308389187
    2. '            
' → logprob: -5.518701076507568
    3. '<|end|>' → logprob: -5.768701076507568
    4. ':' → logprob: -6.018701076507568
    5. ' 
' → logprob: -6.018701076507568
    6. ':
' → logprob: -6.768701076507568
    7. '            ' → logprob: -6.893701076507568
    8. ' if' → logprob: -7.143701076507568
    9. ',' → logprob: -7.268701076507568
    10. '        
' → logprob: -8.14370059967041

Token 1441: ' pts' (ID: 66515)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.3573113977909088
    2. 'points' → logprob: -1.2323113679885864
    3. '           ' → logprob: -5.232311248779297
    4. 'pts' (adapté à ' pts') → logprob: -6.607311248779297
    5. ' points' → logprob: -6.857311248779297
    6. ' score' → logprob: -7.232311248779297
    7. 'point' → logprob: -8.982311248779297
    8. 'scores' → logprob: -9.232311248779297
    9. ' pts' → logprob: -10.482311248779297
    10. 'move' → logprob: -10.482311248779297

Token 1442: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759724974632263
    2. '=' → logprob: -0.8259724974632263
    3. '           ' → logprob: -11.700972557067871
    4. '               ' → logprob: -12.075972557067871
    5. '        ' → logprob: -12.325972557067871
    6. '            ' → logprob: -12.575972557067871
    7. '       ' → logprob: -12.950972557067871
    8. '	' → logprob: -13.075972557067871
    9. '		' → logprob: -13.075972557067871
    10. '                ' → logprob: -13.700972557067871

Token 1443: ' gs' (ID: 55253)
  Prédit: 'gs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gs' → logprob: -0.10024010390043259
    2. ' gs' → logprob: -2.3502399921417236
    3. '(gs' → logprob: -10.350239753723145
    4. '.gs' → logprob: -13.850239753723145
    5. 'GS' → logprob: -15.225239753723145
    6. ' GS' → logprob: -15.725239753723145
    7. 'js' → logprob: -17.60024070739746
    8. ' ' → logprob: -17.60024070739746
    9. 'cs' → logprob: -17.97524070739746
    10. ' ' → logprob: -18.22524070739746

Token 1444: '.put' (ID: 5133)
  Prédit: '.put'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.put' → logprob: -0.0002087853499688208
    2. 'put' → logprob: -8.500208854675293
    3. '.' → logprob: -12.750208854675293
    4. '_put' → logprob: -13.250208854675293
    5. ' put' → logprob: -15.000208854675293
    6. '	put' → logprob: -15.875208854675293
    7. ' .' → logprob: -16.625207901000977
    8. '.p' → logprob: -16.875207901000977
    9. '.Put' → logprob: -17.375207901000977
    10. '._' → logprob: -18.000207901000977

Token 1445: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -2.9160102712921798e-05
    2. '_' → logprob: -10.500029563903809
    3. ' _' → logprob: -14.500029563903809
    4. '_s' → logprob: -14.625029563903809
    5. '_sp' → logprob: -15.000029563903809
    6. '```' → logprob: -16.125028610229492
    7. '_points' → logprob: -16.750028610229492
    8. '_t' → logprob: -17.750028610229492
    9. '_sc' → logprob: -18.875028610229492
    10. '(_' → logprob: -19.000028610229492

Token 1446: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.00035143180866725743
    2. '_one' → logprob: -8.875351905822754
    3. 'stone' → logprob: -9.000351905822754
    4. 'on' → logprob: -10.125351905822754
    5. '_st' → logprob: -10.875351905822754
    6. 'ones' → logprob: -12.625351905822754
    7. 'One' → logprob: -12.750351905822754
    8. '   ' → logprob: -12.875351905822754
    9. '_' → logprob: -13.000351905822754
    10. 'o' → logprob: -13.125351905822754

Token 1447: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.001893533393740654
    2. 'and' → logprob: -6.751893520355225
    3. '(r' → logprob: -7.251893520355225
    4. ' and' → logprob: -11.501893997192383
    5. 'andr' → logprob: -13.376893997192383
    6. '```' → logprob: -14.501893997192383
    7. 'And' → logprob: -14.876893997192383
    8. '(' → logprob: -15.001893997192383
    9. '_AND' → logprob: -15.501893997192383
    10. 's' → logprob: -15.751893997192383

Token 1448: '_score' (ID: 22555)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -3.547789674485102e-05
    2. '_score' → logprob: -10.250035285949707
    3. ' score' → logprob: -17.000036239624023
    4. 'Score' → logprob: -18.000036239624023
    5. '-score' → logprob: -21.000036239624023
    6. 'sc' → logprob: -21.250036239624023
    7. 'c' → logprob: -22.250036239624023
    8. '```' → logprob: -22.625036239624023
    9. ' ' → logprob: -22.750036239624023
    10. 'count' → logprob: -22.875036239624023

Token 1449: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0005611348897218704
    2. '(' → logprob: -7.500561237335205
    3. ' (' → logprob: -11.875560760498047
    4. '((' → logprob: -14.250560760498047
    5. '(
' → logprob: -14.750560760498047
    6. ' ' → logprob: -17.125560760498047
    7. '   ' → logprob: -17.125560760498047
    8. '(re' → logprob: -17.625560760498047
    9. '(row' → logprob: -17.625560760498047
    10. '       ' → logprob: -18.875560760498047

Token 1450: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3132738173007965
    2. ',c' → logprob: -1.3132737874984741
    3. ' ,' → logprob: -11.563273429870605
    4. ',
' → logprob: -14.188273429870605
    5. ',b' → logprob: -14.813273429870605
    6. '   ' → logprob: -15.188273429870605
    7. ',p' → logprob: -15.188273429870605
    8. ',C' → logprob: -15.438273429870605
    9. ',k' → logprob: -15.938273429870605
    10. ',r' → logprob: -16.188274383544922

Token 1451: ')
' (ID: 446)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.05885354056954384
    2. ')' → logprob: -2.9338536262512207
    3. '           ' → logprob: -6.308853626251221
    4. ' (' → logprob: -7.308853626251221
    5. '(' → logprob: -7.433853626251221
    6. '(c' → logprob: -7.933853626251221
    7. '               ' → logprob: -8.308853149414062
    8. '          ' → logprob: -9.808853149414062
    9. '((' → logprob: -10.308853149414062
    10. '   ' → logprob: -10.558853149414062

Token 1452: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020663968462031335
    2. '               ' → logprob: -8.62520694732666
    3. ' if' → logprob: -11.87520694732666
    4. '          ' → logprob: -12.12520694732666
    5. '<|end|>' → logprob: -12.12520694732666
    6. 'if' → logprob: -13.50020694732666
    7. '	       ' → logprob: -14.00020694732666
    8. '                   ' → logprob: -14.00020694732666
    9. '                       ' → logprob: -14.50020694732666
    10. '		' → logprob: -14.50020694732666

Token 1453: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13010208308696747
    2. '           ' → logprob: -2.1301021575927734
    3. ' if' → logprob: -5.755102157592773
    4. '               ' → logprob: -13.880102157592773
    5. '                   ' → logprob: -15.130102157592773
    6. '          ' → logprob: -15.255102157592773
    7. '
' → logprob: -15.380102157592773
    8. '```' → logprob: -15.630102157592773
    9. '       ' → logprob: -15.880102157592773
    10. '                       ' → logprob: -16.255102157592773

Token 1454: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00861468818038702
    2. ' max' → logprob: -4.758614540100098
    3. '(max' → logprob: -15.508614540100098
    4. '           ' → logprob: -18.758615493774414
    5. '	max' → logprob: -20.508615493774414
    6. '_max' → logprob: -21.258615493774414
    7. '               ' → logprob: -22.008615493774414
    8. '   ' → logprob: -22.008615493774414
    9. ' (' → logprob: -22.758615493774414
    10. ' ' → logprob: -23.758615493774414

Token 1455: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -3.128163257315464e-07
    2. 'points' → logprob: -15.625
    3. '_pts' → logprob: -16.375
    4. '(points' → logprob: -17.125
    5. '(max' → logprob: -19.125
    6. '\' → logprob: -19.375
    7. '_POINTS' → logprob: -19.5
    8. 'max' → logprob: -19.875
    9. '```' → logprob: -20.375
    10. 'Points' → logprob: -20.5

Token 1456: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2519400119781494
    2. 'is' → logprob: -1.5019400119781494
    3. '	is' → logprob: -11.75193977355957
    4. '==' → logprob: -13.87693977355957
    5. 'i' → logprob: -14.12693977355957
    6. ' ' → logprob: -15.50193977355957
    7. 's' → logprob: -16.00193977355957
    8. '=' → logprob: -16.37693977355957
    9. ')' → logprob: -16.50193977355957
    10. '[' → logprob: -16.62693977355957

Token 1457: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.001170225441455841
    2. ' None' → logprob: -6.7511701583862305
    3. '(None' → logprob: -18.001171112060547
    4. '   ' → logprob: -19.876171112060547
    5. '_None' → logprob: -19.876171112060547
    6. 'none' → logprob: -20.751171112060547
    7. 'not' → logprob: -20.751171112060547
    8. '           ' → logprob: -20.751171112060547
    9. '=None' → logprob: -20.876171112060547
    10. '_none' → logprob: -21.751171112060547

Token 1458: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.1274508684873581
    2. 'or' → logprob: -2.127450942993164
    3. '               ' → logprob: -7.752450942993164
    4. '	or' → logprob: -9.752450942993164
    5. '           ' → logprob: -10.502450942993164
    6. '              ' → logprob: -12.627450942993164
    7. '                   ' → logprob: -14.002450942993164
    8. '            ' → logprob: -14.002450942993164
    9. 'o' → logprob: -15.002450942993164
    10. '                ' → logprob: -15.127450942993164

Token 1459: ' pts' (ID: 66515)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.0002622894535306841
    2. ' pts' → logprob: -8.250262260437012
    3. 'pt' → logprob: -13.875262260437012
    4. '   ' → logprob: -17.375263214111328
    5. '_pts' → logprob: -17.875263214111328
    6. 'points' → logprob: -18.875263214111328
    7. 'Pts' → logprob: -18.875263214111328
    8. '       ' → logprob: -20.875263214111328
    9. 'ps' → logprob: -21.000263214111328
    10. 'PTS' → logprob: -21.000263214111328

Token 1460: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.003601021133363247
    2. ' >' → logprob: -5.62860107421875
    3. '>
' → logprob: -15.75360107421875
    4. '&gt' → logprob: -16.00360107421875
    5. 'pts' → logprob: -16.12860107421875
    6. 'max' → logprob: -16.12860107421875
    7. 'gt' → logprob: -16.62860107421875
    8. '>`' → logprob: -16.62860107421875
    9. '()>' → logprob: -16.87860107421875
    10. ')>' → logprob: -16.87860107421875

Token 1461: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -4.320199877838604e-07
    2. ' max' → logprob: -14.75
    3. '_max' → logprob: -23.75
    4. '=max' → logprob: -25.375
    5. '	max' → logprob: -25.625
    6. 'maximum' → logprob: -27.5
    7. '(max' → logprob: -27.875
    8. '[max' → logprob: -27.875
    9. '.max' → logprob: -28.0
    10. 'maks' → logprob: -28.125

Token 1462: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -1.0280383548888494e-06
    2. 'max' → logprob: -14.875000953674316
    3. '_pts' → logprob: -15.750000953674316
    4. '```' → logprob: -16.000001907348633
    5. 'Points' → logprob: -16.125001907348633
    6. 'points' → logprob: -16.500001907348633
    7. '_POINTS' → logprob: -16.750001907348633
    8. '_scores' → logprob: -17.000001907348633
    9. '       ' → logprob: -17.250001907348633
    10. '           ' → logprob: -17.375001907348633

Token 1463: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48918792605400085
    2. '               ' → logprob: -1.1141879558563232
    3. ':
' → logprob: -2.8641879558563232
    4. '           ' → logprob: -7.239187717437744
    5. '                       ' → logprob: -7.614187717437744
    6. '              ' → logprob: -8.864188194274902
    7. '                   ' → logprob: -9.364188194274902
    8. '):
' → logprob: -10.114188194274902
    9. '                           ' → logprob: -10.614188194274902
    10. '<|end|>' → logprob: -10.989188194274902

Token 1464: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000517886015586555
    2. ':' → logprob: -8.375517845153809
    3. '           ' → logprob: -9.250517845153809
    4. '                       ' → logprob: -9.625517845153809
    5. '                   ' → logprob: -10.000517845153809
    6. ':
' → logprob: -10.375517845153809
    7. '              ' → logprob: -11.000517845153809
    8. '                           ' → logprob: -11.625517845153809
    9. '                ' → logprob: -11.875517845153809
    10. '                               ' → logprob: -12.500517845153809

Token 1465: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.039182934910058975
    2. ' max' → logprob: -3.2891829013824463
    3. '               ' → logprob: -6.789183139801025
    4. '                   ' → logprob: -11.664182662963867
    5. '           ' → logprob: -12.539182662963867
    6. '                ' → logprob: -13.289182662963867
    7. '[max' → logprob: -15.289182662963867
    8. '_max' → logprob: -15.539182662963867
    9. '	max' → logprob: -15.914182662963867
    10. '                       ' → logprob: -15.914182662963867

Token 1466: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -14.12500286102295
    3. ' _' → logprob: -14.62500286102295
    4. '_pts' → logprob: -14.62500286102295
    5. '_tokens' → logprob: -15.50000286102295
    6. 'Points' → logprob: -15.75000286102295
    7. '_p' → logprob: -16.500001907348633
    8. '_point' → logprob: -16.500001907348633
    9. '```' → logprob: -17.000001907348633
    10. '_POINTS' → logprob: -17.250001907348633

Token 1467: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009119403548538685
    2. ' =' → logprob: -7.000911712646484
    3. '=
' → logprob: -14.625911712646484
    4. '=

' → logprob: -17.000911712646484
    5. '.=' → logprob: -17.750911712646484
    6. '＝' → logprob: -19.250911712646484
    7. '=create' → logprob: -20.250911712646484
    8. '=max' → logprob: -20.250911712646484
    9. '=None' → logprob: -20.375911712646484
    10. '<|end|>' → logprob: -20.375911712646484

Token 1468: ' pts' (ID: 66515)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.005235767923295498
    2. ' pts' → logprob: -5.25523567199707
    3. 'pt' → logprob: -13.63023567199707
    4. '_pts' → logprob: -14.38023567199707
    5. 'Pts' → logprob: -17.13023567199707
    6. 'points' → logprob: -17.38023567199707
    7. 'ptr' → logprob: -18.75523567199707
    8. 'PTS' → logprob: -19.25523567199707
    9. 'pti' → logprob: -19.38023567199707
    10. '   ' → logprob: -19.38023567199707

Token 1469: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008215369656682014
    2. '               ' → logprob: -5.758215427398682
    3. '<|end|>' → logprob: -6.258215427398682
    4. '        
' → logprob: -7.008215427398682
    5. '                
' → logprob: -8.008214950561523
    6. '  
' → logprob: -8.133214950561523
    7. '        ' → logprob: -8.258214950561523
    8. '      ' → logprob: -8.383214950561523
    9. 'return' → logprob: -8.633214950561523
    10. ' return' → logprob: -8.758214950561523

Token 1470: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021911686286330223
    2. '               ' → logprob: -4.02191162109375
    3. '<|end|>' → logprob: -6.27191162109375
    4. '        ' → logprob: -7.64691162109375
    5. '      ' → logprob: -7.77191162109375
    6. '        
' → logprob: -9.02191162109375
    7. '              ' → logprob: -9.14691162109375
    8. '                       ' → logprob: -9.14691162109375
    9. '                ' → logprob: -9.52191162109375
    10. '           ' → logprob: -9.64691162109375

Token 1471: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4438294470310211
    2. 'return' → logprob: -1.1938294172286987
    3. ' return' → logprob: -3.0688295364379883
    4. ' if' → logprob: -5.193829536437988
    5. 'if' (adapté à ' if') → logprob: -5.943829536437988
    6. '   ' → logprob: -7.318829536437988
    7. '	return' → logprob: -10.443829536437988
    8. '
' → logprob: -11.193829536437988
    9. 'eturn' → logprob: -12.943829536437988
    10. '           ' → logprob: -12.943829536437988

Token 1472: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.01814994215965271
    2. ' max' → logprob: -4.0181498527526855
    3. '   ' → logprob: -21.643150329589844
    4. '(max' → logprob: -22.018150329589844
    5. '	max' → logprob: -22.018150329589844
    6. '_max' → logprob: -22.643150329589844
    7. ' ' → logprob: -23.143150329589844
    8. '
' → logprob: -23.268150329589844
    9. '       ' → logprob: -25.268150329589844
    10. '[max' → logprob: -25.393150329589844

Token 1473: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -17.125
    3. '_tokens' → logprob: -17.5
    4. '_max' → logprob: -17.5
    5. 'Points' → logprob: -17.75
    6. 'max' → logprob: -17.875
    7. '```' → logprob: -18.5
    8. '_pts' → logprob: -18.75
    9. 'points' → logprob: -18.875
    10. '_p' → logprob: -19.0

Token 1474: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.014424975961446762
    2. 'is' → logprob: -4.264424800872803
    3. '=' → logprob: -8.889425277709961
    4. '==' → logprob: -9.139425277709961
    5. ' =' → logprob: -12.139425277709961
    6. '	is' → logprob: -12.514425277709961
    7. ' ==' → logprob: -13.014425277709961
    8. '   ' → logprob: -13.889425277709961
    9. ' ' → logprob: -14.014425277709961
    10. ' if' → logprob: -14.764425277709961

Token 1475: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -6.2729995988775045e-06
    2. ' None' → logprob: -12.000006675720215
    3. 'not' → logprob: -17.5000057220459
    4. '0' → logprob: -19.2500057220459
    5. '   ' → logprob: -20.6250057220459
    6. '_None' → logprob: -20.6250057220459
    7. 'none' → logprob: -20.6250057220459
    8. 'N' → logprob: -22.6250057220459
    9. '_none' → logprob: -23.2500057220459
    10. '(None' → logprob: -23.3750057220459

Token 1476: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4524115025997162
    2. '       ' → logprob: -1.9524115324020386
    3. 'return' → logprob: -2.452411413192749
    4. ':
' → logprob: -3.077411413192749
    5. ':' → logprob: -3.202411413192749
    6. ':return' → logprob: -3.702411413192749
    7. ',' → logprob: -5.327411651611328
    8. '	       ' → logprob: -5.327411651611328
    9. '0' → logprob: -5.702411651611328
    10. '<|end|>' → logprob: -6.327411651611328

Token 1477: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011416892521083355
    2. 'return' → logprob: -4.511416912078857
    3. '	       ' → logprob: -8.8864164352417
    4. '       ' → logprob: -9.0114164352417
    5. ' return' → logprob: -10.0114164352417
    6. '		' → logprob: -10.8864164352417
    7. '   ' → logprob: -11.2614164352417
    8. '{return' → logprob: -11.2614164352417
    9. 'max' → logprob: -12.0114164352417
    10. '	return' → logprob: -12.7614164352417

Token 1478: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.391966313123703
    2. '0' → logprob: -1.1419663429260254
    3. '           ' → logprob: -6.016966342926025
    4. '       ' → logprob: -6.266966342926025
    5. ' return' → logprob: -7.641966342926025
    6. 'max' → logprob: -8.266965866088867
    7. ' ' → logprob: -12.766965866088867
    8. '   ' → logprob: -12.891965866088867
    9. '	return' → logprob: -12.891965866088867
    10. '10' → logprob: -14.891965866088867

Token 1479: ' No' (ID: 3004)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0022108007688075304
    2. ' return' → logprob: -6.62721061706543
    3. 'max' → logprob: -7.12721061706543
    4. '       ' → logprob: -9.87721061706543
    5. '0' → logprob: -11.50221061706543
    6. '#' → logprob: -11.50221061706543
    7. '   ' → logprob: -12.12721061706543
    8. '           ' → logprob: -12.75221061706543
    9. ' max' → logprob: -13.62721061706543
    10. '
' → logprob: -15.37721061706543

Token 1480: ' empty' (ID: 8213)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6673895716667175
    2. ' ' → logprob: -1.1673896312713623
    3. ' return' → logprob: -2.1673896312713623
    4. 'return' → logprob: -2.9173896312713623
    5. ' max' → logprob: -6.042389392852783
    6. 'max' → logprob: -6.042389392852783
    7. ' points' → logprob: -7.542389392852783
    8. '=' → logprob: -8.167389869689941
    9. ' possible' → logprob: -8.167389869689941
    10. 'possible' → logprob: -8.167389869689941

Token 1481: ' vertices' (ID: 38360)
  Prédit: '_vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vertices' → logprob: -0.1227378398180008
    2. '_cells' → logprob: -3.3727378845214844
    3. '_tokens' → logprob: -3.3727378845214844
    4. '_positions' → logprob: -3.9977378845214844
    5. '_spaces' → logprob: -4.747737884521484
    6. '_moves' → logprob: -5.122737884521484
    7. ' vertices' → logprob: -5.622737884521484
    8. '_' → logprob: -5.747737884521484
    9. 'vertices' → logprob: -6.247737884521484
    10. '_tiles' → logprob: -6.622737884521484

Token 1482: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5463669300079346
    2. '           ' → logprob: -1.0463669300079346
    3. 'return' → logprob: -3.5463669300079346
    4. ':
' → logprob: -4.1713666915893555
    5. ':' → logprob: -4.2963666915893555
    6. ' return' → logprob: -5.9213666915893555
    7. ' or' → logprob: -6.0463666915893555
    8. ':return' → logprob: -6.0463666915893555
    9. ',' → logprob: -6.1713666915893555
    10. '               ' → logprob: -6.9213666915893555

Token 1483: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08431454747915268
    2. '       ' → logprob: -3.2093145847320557
    3. 'return' → logprob: -3.5843145847320557
    4. ' return' → logprob: -4.459314346313477
    5. '	       ' → logprob: -8.084314346313477
    6. '               ' → logprob: -8.709314346313477
    7. '   ' → logprob: -9.084314346313477
    8. '{return' → logprob: -9.084314346313477
    9. ':return' → logprob: -9.209314346313477
    10. '	return' → logprob: -9.209314346313477

Token 1484: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006476741284132004
    2. '0' → logprob: -5.506476879119873
    3. '       ' → logprob: -6.756476879119873
    4. ' return' → logprob: -6.881476879119873
    5. '           ' → logprob: -8.506476402282715
    6. '
' → logprob: -13.756476402282715
    7. '   ' → logprob: -14.131476402282715
    8. '	return' → logprob: -15.006476402282715
    9. '{return' → logprob: -15.006476402282715
    10. '-' → logprob: -15.756476402282715

Token 1485: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '-' → logprob: -17.375123977661133
    4. '   ' → logprob: -18.250123977661133
    5. ' ' → logprob: -19.375123977661133
    6. '       ' → logprob: -19.875123977661133
    7. ' -' → logprob: -21.250123977661133
    8. '  ' → logprob: -21.375123977661133
    9. '​' → logprob: -21.375123977661133
    10. '           ' → logprob: -21.500123977661133

Token 1486: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.400689305039123e-05
    2. '-' → logprob: -9.375094413757324
    3. '"' → logprob: -12.250094413757324
    4. ' ' → logprob: -12.625094413757324
    5. 'None' → logprob: -14.125094413757324
    6. '"-' → logprob: -15.750094413757324
    7. 'float' → logprob: -16.500093460083008
    8. ' -' → logprob: -16.875093460083008
    9. '`' → logprob: -19.125093460083008
    10. ''' → logprob: -19.125093460083008

Token 1487: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01254131831228733
    2. '
' → logprob: -4.7625412940979
    3. 'return' → logprob: -6.0125412940979
    4. '	' → logprob: -6.6375412940979
    5. '   ' → logprob: -9.762541770935059
    6. ' return' → logprob: -9.887541770935059
    7. '	return' → logprob: -10.887541770935059
    8. '        
' → logprob: -11.637541770935059
    9. 'else' → logprob: -12.762541770935059
    10. '<|end|>' → logprob: -12.887541770935059

Token 1488: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005717016290873289
    2. 'return' → logprob: -5.630716800689697
    3. '   ' → logprob: -6.505716800689697
    4. '	' → logprob: -7.755716800689697
    5. ' return' → logprob: -9.005717277526855
    6. '	return' → logprob: -10.130717277526855
    7. '
' → logprob: -11.505717277526855
    8. '           ' → logprob: -11.880717277526855
    9. '	   ' → logprob: -13.380717277526855
    10. ' ' → logprob: -13.630717277526855

Token 1489: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3877531588077545
    2. '       ' → logprob: -1.1377531290054321
    3. '   ' → logprob: -7.512753009796143
    4. ' return' → logprob: -8.3877534866333
    5. '	return' → logprob: -9.6377534866333
    6. '	' → logprob: -10.1377534866333
    7. 'eturn' → logprob: -14.3877534866333
    8. '{return' → logprob: -14.3877534866333
    9. '	   ' → logprob: -14.5127534866333
    10. '
' → logprob: -14.8877534866333

Token 1490: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.575939416885376
    2. ' max' → logprob: -0.825939416885376
    3. '	max' → logprob: -19.825939178466797
    4. '(max' → logprob: -20.700939178466797
    5. '_max' → logprob: -22.075939178466797
    6. '[max' → logprob: -22.325939178466797
    7. '=max' → logprob: -23.450939178466797
    8. '   ' → logprob: -23.700939178466797
    9. ',max' → logprob: -24.325939178466797
    10. ' ' → logprob: -24.700939178466797

Token 1491: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -1.9361264946837764e-07
    2. '_tokens' → logprob: -16.75
    3. 'points' → logprob: -18.125
    4. 'Points' → logprob: -18.25
    5. 'max' → logprob: -19.375
    6. '```' → logprob: -19.5
    7. '_pts' → logprob: -19.875
    8. '_point' → logprob: -20.0
    9. '_POINTS' → logprob: -20.0
    10. '_scores' → logprob: -20.125

Token 1492: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1493: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5104299783706665
    2. '<|end|>' → logprob: -1.0104299783706665
    3. '```' → logprob: -4.885429859161377
    4. '#' → logprob: -5.135429859161377
    5. ' if' → logprob: -5.260429859161377
    6. 'Life' → logprob: -5.385429859161377
    7. '<|end|>' → logprob: -5.510429859161377
    8. 'def' → logprob: -6.135429859161377
    9. ')' → logprob: -6.760429859161377
    10. '   ' → logprob: -7.260429859161377

Token 1494: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3132762610912323
    2. '__' → logprob: -1.3132762908935547
    3. '_' → logprob: -11.438276290893555
    4. 'name' → logprob: -13.688276290893555
    5. '___' → logprob: -13.813276290893555
    6. ' ' → logprob: -14.688276290893555
    7. '_name' → logprob: -14.938276290893555
    8. '/__' → logprob: -15.063276290893555
    9. '(__' → logprob: -16.063276290893555
    10. 'Name' → logprob: -16.438276290893555

Token 1495: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0029870904982089996
    2. '==' → logprob: -7.252986907958984
    3. ' ==' → logprob: -7.252986907958984
    4. 'name' → logprob: -7.377986907958984
    5. '__.__' → logprob: -8.377986907958984
    6. '.__' → logprob: -9.127986907958984
    7. '```' → logprob: -9.627986907958984
    8. '[' → logprob: -9.752986907958984
    9. '__':
' → logprob: -9.752986907958984
    10. 'if' → logprob: -9.752986907958984

Token 1496: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.718606891809031e-05
    2. '__.__' → logprob: -9.750066757202148
    3. '__.' → logprob: -13.250066757202148
    4. '==' → logprob: -13.500066757202148
    5. '__('' → logprob: -14.250066757202148
    6. '__":
' → logprob: -14.250066757202148
    7. '```' → logprob: -14.375066757202148
    8. '__[' → logprob: -14.375066757202148
    9. 'name' → logprob: -14.500066757202148
    10. '__["' → logprob: -14.500066757202148

Token 1497: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008113444782793522
    2. '==' → logprob: -5.008113384246826
    3. ' ==' → logprob: -7.258113384246826
    4. '=="' → logprob: -7.383113384246826
    5. '__.__' → logprob: -10.508113861083984
    6. '=='' → logprob: -10.758113861083984
    7. '__":
' → logprob: -11.758113861083984
    8. '____' → logprob: -13.008113861083984
    9. '```' → logprob: -13.258113861083984
    10. '___' → logprob: -13.258113861083984

Token 1498: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004088609013706446
    2. ''' → logprob: -5.504088401794434
    3. '__' → logprob: -11.754088401794434
    4. ' "__' → logprob: -14.004088401794434
    5. '"name' → logprob: -14.254088401794434
    6. '"class' → logprob: -14.879088401794434
    7. '   ' → logprob: -16.12908935546875
    8. ''"' → logprob: -16.25408935546875
    9. '"'' → logprob: -16.75408935546875
    10. '("__' → logprob: -17.25408935546875

Token 1499: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.008632768876850605
    2. '__' → logprob: -4.758632659912109
    3. 'name' → logprob: -11.38363265991211
    4. '"' → logprob: -12.00863265991211
    5. ' main' → logprob: -15.13363265991211
    6. '_main' → logprob: -15.75863265991211
    7. '___' → logprob: -15.88363265991211
    8. ''' → logprob: -16.38363265991211
    9. 'built' → logprob: -16.88363265991211
    10. '__":
' → logprob: -17.00863265991211

Token 1500: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.25334423780441284
    2. '__' → logprob: -1.5033442974090576
    3. '__':
' → logprob: -6.8783440589904785
    4. '__
' → logprob: -8.753344535827637
    5. ':
' → logprob: -8.878344535827637
    6. '__:' → logprob: -10.253344535827637
    7. '__["' → logprob: -11.128344535827637
    8. '__.' → logprob: -11.628344535827637
    9. ':' → logprob: -12.253344535827637
    10. '():
' → logprob: -12.503344535827637

Token 1501: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44945991039276123
    2. 'solver' → logprob: -1.0744599103927612
    3. 'Life' → logprob: -4.324460029602051
    4. ' solver' → logprob: -5.324460029602051
    5. 'Solver' → logprob: -6.824460029602051
    6. 'L' → logprob: -7.449460029602051
    7. 'import' → logprob: -8.57446002960205
    8. ' Life' → logprob: -9.07446002960205
    9. 'life' → logprob: -9.19946002960205
    10. 'l' → logprob: -9.94946002960205

Token 1502: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.22768424451351166
    2. 'Life' → logprob: -1.6026842594146729
    3. 'import' → logprob: -6.727684020996094
    4. 'L' → logprob: -7.602684020996094
    5. 'Solver' → logprob: -8.727684020996094
    6. 'll' → logprob: -9.852684020996094
    7. 'sol' → logprob: -9.852684020996094
    8. 'lif' → logprob: -9.977684020996094
    9. 'solve' → logprob: -9.977684020996094
    10. ' solver' → logprob: -10.477684020996094

Token 1503: ' =' (ID: 314)
  Prédit: '.solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -0.20976610481739044
    2. '.' → logprob: -1.959766149520874
    3. '().' → logprob: -3.209766149520874
    4. ' =' → logprob: -5.334765911102295
    5. '.s' → logprob: -6.709765911102295
    6. '   ' → logprob: -7.084765911102295
    7. '()' → logprob: -7.709765911102295
    8. '=' → logprob: -8.584766387939453
    9. '.mainloop' → logprob: -8.584766387939453
    10. '.run' → logprob: -9.334766387939453

Token 1504: ' Life' (ID: 11714)
  Prédit: 'Life'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Life' → logprob: -0.00020354038861114532
    2. ' Life' → logprob: -8.500203132629395
    3. ' life' → logprob: -21.62520408630371
    4. 'Live' → logprob: -22.12520408630371
    5. 'Lifetime' → logprob: -22.12520408630371
    6. 'Lifecycle' → logprob: -24.62520408630371
    7. 'L' → logprob: -24.75020408630371
    8. 'life' → logprob: -25.75020408630371
    9. ' Lif' → logprob: -26.00020408630371
    10. '-Life' → logprob: -26.62520408630371

Token 1505: 'Line' (ID: 3665)
  Prédit: 'Line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Line' → logprob: -1.9361264946837764e-07
    2. 'Life' → logprob: -16.125
    3. 'Solver' → logprob: -17.75
    4. 'Lines' → logprob: -18.25
    5. ' Line' → logprob: -18.25
    6. 'Loop' → logprob: -20.125
    7. '_line' → logprob: -20.125
    8. 'Link' → logprob: -20.25
    9. '_Line' → logprob: -20.5
    10. 'Li' → logprob: -20.625

Token 1506: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.002552242483943701
    2. 'solver' → logprob: -6.002552032470703
    3. '_solver' → logprob: -10.252552032470703
    4. '()' → logprob: -10.502552032470703
    5. '().' → logprob: -12.627552032470703
    6. '.solve' → logprob: -12.752552032470703
    7. 'Solve' → logprob: -13.002552032470703
    8. '   ' → logprob: -13.627552032470703
    9. '```' → logprob: -13.877552032470703
    10. 'solve' → logprob: -14.252552032470703

Token 1507: '()
' (ID: 1234)
  Prédit: '.solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.solve' → logprob: -0.022531718015670776
    2. '.' → logprob: -3.897531747817993
    3. '.s' → logprob: -6.772531509399414
    4. 'solver' → logprob: -8.397531509399414
    5. '   ' → logprob: -8.772531509399414
    6. '.
' → logprob: -8.772531509399414
    7. '.run' → logprob: -9.272531509399414
    8. '.execute' → logprob: -10.022531509399414
    9. '.mainloop' → logprob: -10.022531509399414
    10. '
' → logprob: -10.147531509399414

Token 1508: '   ' (ID: 271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -3.011373155459296e-05
    2. '   ' → logprob: -10.750030517578125
    3. 'solve' → logprob: -11.750030517578125
    4. '_solver' → logprob: -15.250030517578125
    5. ' solver' → logprob: -15.625030517578125
    6. '```' → logprob: -16.125030517578125
    7. 's' → logprob: -16.250030517578125
    8. '.solve' → logprob: -16.500030517578125
    9. 'scheduler' → logprob: -17.250030517578125
    10. 'sol' → logprob: -18.250030517578125

Token 1509: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: 0.0
    2. 'solve' → logprob: -17.75
    3. ' solver' → logprob: -18.125
    4. 'scheduler' → logprob: -19.75
    5. 'resolver' → logprob: -20.375
    6. '   ' → logprob: -21.125
    7. 'solution' → logprob: -21.875
    8. '_solver' → logprob: -22.75
    9. 'sol' → logprob: -23.0
    10. '```' → logprob: -23.375

Token 1510: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -0.0007139815716072917
    2. '.' → logprob: -7.25071382522583
    3. '.run' → logprob: -12.625714302062988
    4. 'solve' → logprob: -15.375714302062988
    5. ' .' → logprob: -16.125713348388672
    6. '.
' → logprob: -16.375713348388672
    7. '().' → logprob: -16.500713348388672
    8. '.execute' → logprob: -17.125713348388672
    9. '.s' → logprob: -17.375713348388672
    10. '.sol' → logprob: -17.625713348388672

Token 1511: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1509
Tokens correctement prédits (1ère position, stricte): 768
Tokens correctement prédits (1ère position, avec adaptation): 856
Tokens correctement prédits (top 10): 1346
Précision stricte (1ère position): 50.89%
Précision adaptée (1ère position): 56.73%
Précision (top 10): 89.20%
================================================================================
