================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N=int(input())
faces = set()
duplicates = 0
for _ in range(N):
    face = tuple(sorted(map(int, input().split())))
    if face in faces:
        duplicates += 1
    else:
        faces.add(face)
print(duplicates)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7358755469322205
    2. ')' → logprob: -0.7358755469322205
    3. '()' → logprob: -3.3608756065368652
    4. '())' → logprob: -5.235875606536865
    5. '(
' → logprob: -7.860875606536865
    6. '`)' → logprob: -7.860875606536865
    7. '```' → logprob: -8.485875129699707
    8. '")' → logprob: -8.860875129699707
    9. '')' → logprob: -8.860875129699707
    10. '[' → logprob: -9.735875129699707

Token 4: 'faces' (ID: 11952)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5715791583061218
    2. 's' → logprob: -1.9465792179107666
    3. '#' → logprob: -3.1965792179107666
    4. '\n' → logprob: -3.1965792179107666
    5. 'if' → logprob: -3.5715792179107666
    6. 'i' → logprob: -3.6965792179107666
    7. 'a' → logprob: -3.6965792179107666
    8. '*' → logprob: -3.9465792179107666
    9. ''' → logprob: -4.1965789794921875
    10. '`' → logprob: -4.3215789794921875

Token 5: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.037812065333127975
    2. '_' → logprob: -4.537812232971191
    3. '=' → logprob: -4.662812232971191
    4. ')' → logprob: -5.162812232971191
    5. '.' → logprob: -5.287812232971191
    6. ' =' → logprob: -5.537812232971191
    7. '_faces' → logprob: -7.662812232971191
    8. 's' → logprob: -8.037812232971191
    9. '[]' → logprob: -8.287812232971191
    10. '[:]' → logprob: -8.287812232971191

Token 6: ' set' (ID: 920)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5740833878517151
    2. '[' → logprob: -1.0740833282470703
    3. ' []' → logprob: -2.9490833282470703
    4. '[]' → logprob: -4.07408332824707
    5. '6' → logprob: -4.94908332824707
    6. ' ' → logprob: -5.19908332824707
    7. '[int' → logprob: -5.32408332824707
    8. '['' → logprob: -5.94908332824707
    9. ' ['' → logprob: -6.57408332824707
    10. '["' → logprob: -7.07408332824707

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2018003910779953
    2. '()' → logprob: -1.7018003463745117
    3. '(f' → logprob: -9.451800346374512
    4. '().' → logprob: -9.826800346374512
    5. '())' → logprob: -10.326800346374512
    6. '([]' → logprob: -10.701800346374512
    7. '.' → logprob: -10.951800346374512
    8. '(
' → logprob: -11.076800346374512
    9. '((' → logprob: -11.076800346374512
    10. '(range' → logprob: -11.201800346374512

Token 8: 'duplicates' (ID: 149036)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009052365086972713
    2. ' for' → logprob: -4.759052276611328
    3. '```' → logprob: -8.884052276611328
    4. ':' → logprob: -9.259052276611328
    5. '\n' → logprob: -10.384052276611328
    6. '
' → logprob: -10.384052276611328
    7. ')' → logprob: -10.509052276611328
    8. '(' → logprob: -10.759052276611328
    9. '[' → logprob: -11.134052276611328
    10. ' ' → logprob: -11.259052276611328

Token 9: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6352384686470032
    2. ' =' → logprob: -0.8852384686470032
    3. '=' → logprob: -3.0102384090423584
    4. '.add' → logprob: -5.3852386474609375
    5. '_' → logprob: -6.2602386474609375
    6. '.=' → logprob: -7.5102386474609375
    7. ')' → logprob: -8.010238647460938
    8. ' .' → logprob: -8.635238647460938
    9. '.update' → logprob: -8.885238647460938
    10. '.setdefault' → logprob: -9.135238647460938

Token 10: ' ' (ID: 220)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.5764854550361633
    2. ' set' → logprob: -0.8264854550361633
    3. ' ' → logprob: -8.576485633850098
    4. ' False' → logprob: -8.576485633850098
    5. '0' → logprob: -9.701485633850098
    6. 'False' → logprob: -10.201485633850098
    7. ' True' → logprob: -10.451485633850098
    8. '{}' → logprob: -11.201485633850098
    9. ' []' → logprob: -11.201485633850098
    10. '	set' → logprob: -13.076485633850098

Token 11: '0' (ID: 15)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00026181264547631145
    2. ' set' → logprob: -8.750262260437012
    3. '{}' → logprob: -9.500262260437012
    4. '[]' → logprob: -11.375262260437012
    5. '=set' → logprob: -12.875262260437012
    6. '0' → logprob: -13.000262260437012
    7. 'False' → logprob: -13.250262260437012
    8. ' ' → logprob: -13.250262260437012
    9. '(set' → logprob: -13.250262260437012
    10. ')set' → logprob: -13.375262260437012

Token 12: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025577563792467117
    2. ' for' → logprob: -3.7755775451660156
    3. '```' → logprob: -6.900577545166016
    4. '\n' → logprob: -7.025577545166016
    5. '
' → logprob: -8.150577545166016
    6. '<|end|>' → logprob: -9.400577545166016
    7. '\' → logprob: -10.775577545166016
    8. '' → logprob: -11.650577545166016
    9. '``' → logprob: -12.025577545166016
    10. '<|end|>' → logprob: -12.400577545166016

Token 13: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03521530702710152
    2. '
' → logprob: -3.910215377807617
    3. ' for' → logprob: -4.285215377807617
    4. '\n' → logprob: -7.910215377807617
    5. '```' → logprob: -7.910215377807617
    6. ' 
' → logprob: -11.035215377807617
    7. '<|end|>' → logprob: -11.660215377807617
    8. '\' → logprob: -11.660215377807617
    9. '``' → logprob: -12.160215377807617
    10. '	for' → logprob: -12.160215377807617

Token 14: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5789409279823303
    2. ' i' → logprob: -1.0789408683776855
    3. ' _' → logprob: -2.3289408683776855
    4. '_' → logprob: -6.5789408683776855
    5. ' ‌' → logprob: -8.578941345214844
    6. '  ' → logprob: -8.703941345214844
    7. ' I' → logprob: -9.078941345214844
    8. ' face' → logprob: -9.453941345214844
    9. ' ' → logprob: -9.953941345214844
    10. 'i' → logprob: -10.078941345214844

Token 15: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018521204590797424
    2. 'in' → logprob: -4.143521308898926
    3. ' ' → logprob: -6.018521308898926
    4. '  ' → logprob: -11.393521308898926
    5. ' ,' → logprob: -11.768521308898926
    6. ' i' → logprob: -11.768521308898926
    7. 'space' → logprob: -12.143521308898926
    8. 'range' → logprob: -12.518521308898926
    9. 'import' → logprob: -13.143521308898926
    10. '_' → logprob: -13.268521308898926

Token 16: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141518115997314
    2. ' range' → logprob: -1.7014151811599731
    3. '	range' → logprob: -14.576415061950684
    4. '(range' → logprob: -14.826415061950684
    5. ' ' → logprob: -15.576415061950684
    6. '```' → logprob: -15.701415061950684
    7. 'rang' → logprob: -15.951415061950684
    8. 'in' → logprob: -16.076416015625
    9. 'ran' → logprob: -16.576416015625
    10. ' xrange' → logprob: -16.826416015625

Token 17: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0643908753991127
    2. ' (' → logprob: -2.8143908977508545
    3. '(N' → logprob: -6.189390659332275
    4. ' N' → logprob: -9.064391136169434
    5. '(range' → logprob: -9.439391136169434
    6. ' range' → logprob: -9.564391136169434
    7. '(int' → logprob: -9.814391136169434
    8. '(n' → logprob: -11.064391136169434
    9. '(
' → logprob: -11.314391136169434
    10. '(len' → logprob: -12.189391136169434

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008288432843983173
    2. ')' → logprob: -4.883288383483887
    3. ' ):' → logprob: -7.508288383483887
    4. ':' → logprob: -9.258288383483887
    5. '):
' → logprob: -11.008288383483887
    6. ' )' → logprob: -11.008288383483887
    7. '   ' → logprob: -13.883288383483887
    8. ',' → logprob: -14.258288383483887
    9. ' ' → logprob: -14.258288383483887
    10. ']:' → logprob: -14.758288383483887

Token 19: '   ' (ID: 271)
  Prédit: ' faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faces' → logprob: -0.22791139781475067
    2. '   ' → logprob: -1.727911353111267
    3. ' face' → logprob: -4.977911472320557
    4. '    ' → logprob: -5.352911472320557
    5. 'faces' → logprob: -5.727911472320557
    6. '_faces' → logprob: -5.727911472320557
    7. '    
' → logprob: -5.852911472320557
    8. ' input' → logprob: -6.727911472320557
    9. ' ' → logprob: -7.102911472320557
    10. ' 
' → logprob: -7.477911472320557

Token 20: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' (adapté à ' face') → logprob: -0.4873576760292053
    2. ' face' → logprob: -0.9873576760292053
    3. ' s' → logprob: -5.8623576164245605
    4. ' f' → logprob: -6.2373576164245605
    5. 'f' → logprob: -6.3623576164245605
    6. 's' → logprob: -6.4873576164245605
    7. '   ' → logprob: -6.8623576164245605
    8. ' cube' → logprob: -6.9873576164245605
    9. 'cube' → logprob: -7.7373576164245605
    10. 'line' → logprob: -8.237358093261719

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21727004647254944
    2. ' ' → logprob: -1.967270016670227
    3. '_' → logprob: -3.9672701358795166
    4. '=' → logprob: -4.3422698974609375
    5. ')' → logprob: -4.5922698974609375
    6. 's' → logprob: -5.0922698974609375
    7. ' )' → logprob: -5.5922698974609375
    8. '_faces' → logprob: -7.0922698974609375
    9. '_face' → logprob: -7.7172698974609375
    10. ',' → logprob: -8.092269897460938

Token 22: ' tuple' (ID: 31311)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2725730836391449
    2. 'input' → logprob: -1.8975731134414673
    3. ' tuple' → logprob: -2.5225729942321777
    4. 'tuple' → logprob: -5.022572994232178
    5. ' int' → logprob: -6.897572994232178
    6. ' list' → logprob: -8.272573471069336
    7. 'int' → logprob: -8.272573471069336
    8. ' ' → logprob: -9.772573471069336
    9. 'list' → logprob: -9.897573471069336
    10. ' str' → logprob: -10.147573471069336

Token 23: '(sorted' (ID: 92488)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.9349512457847595
    2. '(map' → logprob: -0.9349512457847595
    3. '(int' → logprob: -1.9349513053894043
    4. '(' → logprob: -2.6849513053894043
    5. '(list' → logprob: -6.309951305389404
    6. '(sorted' → logprob: -9.184950828552246
    7. '((' → logprob: -9.559950828552246
    8. '(ord' → logprob: -10.559950828552246
    9. '(
' → logprob: -10.809950828552246
    10. '(i' → logprob: -11.059950828552246

Token 24: '(map' (ID: 16946)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2192845642566681
    2. '(' → logprob: -2.4692845344543457
    3. '(list' → logprob: -2.7192845344543457
    4. '(map' → logprob: -3.8442845344543457
    5. '(int' → logprob: -3.9692845344543457
    6. 'input' → logprob: -6.219284534454346
    7. 'list' → logprob: -6.969284534454346
    8. '(face' → logprob: -7.219284534454346
    9. '((' → logprob: -7.594284534454346
    10. 'int' → logprob: -8.094285011291504

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.958325295476243e-05
    2. '(' → logprob: -9.625079154968262
    3. '(str' → logprob: -11.375079154968262
    4. '(input' → logprob: -14.000079154968262
    5. 'int' → logprob: -14.375079154968262
    6. '<int' → logprob: -15.875079154968262
    7. '(
' → logprob: -16.125080108642578
    8. '[int' → logprob: -16.625080108642578
    9. '=int' → logprob: -16.750080108642578
    10. ' (' → logprob: -17.125080108642578

Token 26: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00662418594583869
    2. '(' → logprob: -5.631624221801758
    3. ',input' → logprob: -5.881624221801758
    4. 'input' → logprob: -8.756624221801758
    5. ' (' → logprob: -10.256624221801758
    6. ',' → logprob: -11.381624221801758
    7. ' input' → logprob: -12.381624221801758
    8. ')' → logprob: -12.381624221801758
    9. '(int' → logprob: -12.631624221801758
    10. '=input' → logprob: -12.756624221801758

Token 27: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00982727948576212
    2. ' input' → logprob: -4.634827136993408
    3. ',input' → logprob: -10.134827613830566
    4. '(input' → logprob: -10.759827613830566
    5. ')' → logprob: -12.509827613830566
    6. '	input' → logprob: -13.009827613830566
    7. '=input' → logprob: -13.634827613830566
    8. '[input' → logprob: -14.259827613830566
    9. '   ' → logprob: -14.384827613830566
    10. ' ' → logprob: -14.509827613830566

Token 28: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008429800509475172
    2. '()' → logprob: -7.125843048095703
    3. '(' → logprob: -10.750843048095703
    4. ' ().' → logprob: -11.875843048095703
    5. '())' → logprob: -13.125843048095703
    6. '()
' → logprob: -13.125843048095703
    7. '()))' → logprob: -13.250843048095703
    8. '())))' → logprob: -13.625843048095703
    9. '()).' → logprob: -14.500843048095703
    10. ')' → logprob: -15.125843048095703

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015314090996980667
    2. 'strip' → logprob: -6.501531600952148
    3. 'read' → logprob: -10.876531600952148
    4. ' split' → logprob: -11.876531600952148
    5. 'rstrip' → logprob: -12.876531600952148
    6. '(split' → logprob: -14.501531600952148
    7. ' ' → logprob: -17.62653160095215
    8. ' strip' → logprob: -17.87653160095215
    9. 'str' → logprob: -17.87653160095215
    10. 'plit' → logprob: -18.50153160095215

Token 30: '())))
' (ID: 129187)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.21445755660533905
    2. '()))' → logprob: -2.5894575119018555
    3. '())' → logprob: -2.7144575119018555
    4. '()' → logprob: -3.2144575119018555
    5. '())))
' → logprob: -5.0894575119018555
    6. '(' → logprob: -5.4644575119018555
    7. ')))' → logprob: -7.2144575119018555
    8. '('' → logprob: -8.714457511901855
    9. '')))' → logprob: -10.339457511901855
    10. '()
' → logprob: -10.589457511901855

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052781958132982254
    2. ')' → logprob: -3.3027820587158203
    3. '
' → logprob: -5.42778205871582
    4. ' if' → logprob: -5.92778205871582
    5. '    
' → logprob: -6.42778205871582
    6. ' ' → logprob: -6.80278205871582
    7. 'if' → logprob: -7.05278205871582
    8. '<|end|>' → logprob: -7.42778205871582
    9. ':' → logprob: -7.55278205871582
    10. '    ' → logprob: -7.80278205871582

Token 32: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0008352391887456179
    2. '   ' → logprob: -7.875835418701172
    3. ' if' → logprob: -8.000835418701172
    4. '```' → logprob: -9.125835418701172
    5. '<|end|>' → logprob: -12.375835418701172
    6. '``' → logprob: -12.875835418701172
    7. ')' → logprob: -13.375835418701172
    8. 'If' → logprob: -13.750835418701172
    9. 'faces' → logprob: -15.000835418701172
    10. '`' → logprob: -15.375835418701172

Token 33: ' face' (ID: 4950)
  Prédit: ' face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' face' → logprob: -0.003602917306125164
    2. 'face' → logprob: -5.628602981567383
    3. ' faces' → logprob: -13.628602981567383
    4. '(face' → logprob: -14.003602981567383
    5. ' faced' → logprob: -15.128602981567383
    6. '_face' → logprob: -15.128602981567383
    7. ' ' → logprob: -15.628602981567383
    8. 'faces' → logprob: -16.878602981567383
    9. ' not' → logprob: -17.503602981567383
    10. ' ' → logprob: -17.753602981567383

Token 34: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5238610506057739
    2. ' in' → logprob: -0.8988610506057739
    3. ' ' → logprob: -7.398860931396484
    4. '  ' → logprob: -10.023860931396484
    5. '<|end|>' → logprob: -10.023860931396484
    6. '   ' → logprob: -11.648860931396484
    7. '<|end|>' → logprob: -12.398860931396484
    8. ' i' → logprob: -13.023860931396484
    9. ')' → logprob: -13.023860931396484
    10. 's' → logprob: -13.023860931396484

Token 35: ' faces' (ID: 22060)
  Prédit: ' faces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faces' → logprob: -0.10028937458992004
    2. 'faces' → logprob: -2.3502893447875977
    3. '_faces' → logprob: -9.600289344787598
    4. '.faces' → logprob: -11.600289344787598
    5. ' face' → logprob: -12.850289344787598
    6. 'face' → logprob: -13.475289344787598
    7. ' ' → logprob: -14.725289344787598
    8. ')' → logprob: -14.850289344787598
    9. ' duplicates' → logprob: -14.975289344787598
    10. 'aces' → logprob: -15.225289344787598

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011093381908722222
    2. '):' → logprob: -9.625110626220703
    3. ':
' → logprob: -10.875110626220703
    4. ' :' → logprob: -11.375110626220703
    5. '<|end|>' → logprob: -11.750110626220703
    6. ':**' → logprob: -13.000110626220703
    7. '<|end|>' → logprob: -14.125110626220703
    8. '   ' → logprob: -14.250110626220703
    9. ')' → logprob: -14.625110626220703
    10. '>:' → logprob: -15.125110626220703

Token 37: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14527136087417603
    2. ' duplicates' → logprob: -2.0202713012695312
    3. 'duplicates' → logprob: -6.520271301269531
    4. '_duplicates' → logprob: -7.770271301269531
    5. ' faces' → logprob: -7.895271301269531
    6. 'Duplicates' → logprob: -9.145271301269531
    7. '   ' → logprob: -9.270271301269531
    8. '```' → logprob: -10.020271301269531
    9. '<|end|>' → logprob: -11.145271301269531
    10. '           ' → logprob: -11.520271301269531

Token 38: ' duplicates' (ID: 91135)
  Prédit: ' duplicates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' duplicates' → logprob: -0.05628360062837601
    2. 'duplicates' (adapté à ' duplicates') → logprob: -2.931283712387085
    3. '       ' → logprob: -6.931283473968506
    4. '   ' → logprob: -8.306283950805664
    5. '           ' → logprob: -9.681283950805664
    6. '_duplicates' → logprob: -10.056283950805664
    7. '```' → logprob: -10.431283950805664
    8. 'Duplicates' → logprob: -10.556283950805664
    9. '``' → logprob: -11.681283950805664
    10. '
' → logprob: -13.181283950805664

Token 39: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.047431740909814835
    2. '+=' → logprob: -3.422431707382202
    3. '+' → logprob: -4.297431945800781
    4. ' +' → logprob: -9.422431945800781
    5. ' ' → logprob: -13.422431945800781
    6. '<|end|>' → logprob: -13.547431945800781
    7. '+='' → logprob: -13.922431945800781
    8. ' ' → logprob: -14.047431945800781
    9. ']+=' → logprob: -14.297431945800781
    10. '+="' → logprob: -14.297431945800781

Token 40: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003600071184337139
    2. ' ' → logprob: -5.628600120544434
    3. '   ' → logprob: -17.503599166870117
    4. '2' → logprob: -17.628599166870117
    5. ' ' → logprob: -19.128599166870117
    6. '```' → logprob: -19.253599166870117
    7. '0' → logprob: -19.878599166870117
    8. '+' → logprob: -20.003599166870117
    9. '>' → logprob: -20.128599166870117
    10. '10' → logprob: -20.691099166870117

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '2' → logprob: -19.250001907348633
    4. '   ' → logprob: -19.750001907348633
    5. '```' → logprob: -20.375001907348633
    6. '0' → logprob: -21.687501907348633
    7. '<|end|>' → logprob: -21.687501907348633
    8. '  ' → logprob: -21.875001907348633
    9. '>' → logprob: -22.375001907348633
    10. '-' → logprob: -22.375001907348633

Token 42: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04608161002397537
    2. 'else' → logprob: -3.17108154296875
    3. ' else' → logprob: -5.79608154296875
    4. ' faces' → logprob: -11.17108154296875
    5. 'faces' → logprob: -11.42108154296875
    6. '```' → logprob: -11.79608154296875
    7. '    
' → logprob: -13.42108154296875
    8. ' ' → logprob: -14.42108154296875
    9. '       ' → logprob: -14.42108154296875
    10. '  ' → logprob: -14.54608154296875

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08168335258960724
    2. 'else' → logprob: -2.581683397293091
    3. ' else' → logprob: -5.956683158874512
    4. '```' → logprob: -8.581683158874512
    5. 'faces' → logprob: -12.081683158874512
    6. ' faces' → logprob: -12.456683158874512
    7. '``' → logprob: -13.831683158874512
    8. '`' → logprob: -14.581683158874512
    9. 'face' → logprob: -14.581683158874512
    10. '       ' → logprob: -14.706683158874512

Token 44: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4203747510910034
    2. '   ' → logprob: -1.1703747510910034
    3. ' else' → logprob: -3.420374870300293
    4. '```' → logprob: -9.045374870300293
    5. 'faces' → logprob: -9.670374870300293
    6. ' faces' → logprob: -9.670374870300293
    7. 'face' → logprob: -13.545374870300293
    8. '	else' → logprob: -14.170374870300293
    9. ' ' → logprob: -14.295374870300293
    10. '  ' → logprob: -14.545374870300293

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008777771145105362
    2. ':
' → logprob: -5.258777618408203
    3. ' faces' → logprob: -5.758777618408203
    4. '_faces' → logprob: -8.633777618408203
    5. '   ' → logprob: -9.508777618408203
    6. 'faces' → logprob: -9.633777618408203
    7. '       ' → logprob: -10.508777618408203
    8. '):' → logprob: -11.633777618408203
    9. ' :' → logprob: -12.258777618408203
    10. ':

' → logprob: -12.383777618408203

Token 46: '       ' (ID: 309)
  Prédit: ' faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faces' → logprob: -0.05976159870624542
    2. 'faces' → logprob: -3.1847615242004395
    3. '   ' → logprob: -4.4347615242004395
    4. '       ' → logprob: -5.4347615242004395
    5. '_faces' → logprob: -8.059762001037598
    6. '.faces' → logprob: -10.059762001037598
    7. '```' → logprob: -11.184762001037598
    8. ' face' → logprob: -11.684762001037598
    9. 'aces' → logprob: -12.184762001037598
    10. '    ' → logprob: -12.684762001037598

Token 47: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' (adapté à ' faces') → logprob: -0.2014448046684265
    2. ' faces' → logprob: -1.7014448642730713
    3. '_faces' → logprob: -11.451444625854492
    4. '.faces' → logprob: -11.826444625854492
    5. '   ' → logprob: -11.951444625854492
    6. 'aces' → logprob: -12.826444625854492
    7. '```' → logprob: -12.951444625854492
    8. 'face' → logprob: -13.951444625854492
    9. ' ' → logprob: -15.326444625854492
    10. 'Faces' → logprob: -15.326444625854492

Token 48: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -2.165027217415627e-05
    2. '.' → logprob: -10.875021934509277
    3. '.update' → logprob: -13.250021934509277
    4. '.setdefault' → logprob: -14.250021934509277
    5. '.append' → logprob: -16.25002098083496
    6. '.insert' → logprob: -17.00002098083496
    7. ' .' → logprob: -17.12502098083496
    8. '.Add' → logprob: -18.00002098083496
    9. 'add' → logprob: -18.75002098083496
    10. '.emplace' → logprob: -19.12502098083496

Token 49: '(face' (ID: 127535)
  Prédit: '(face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(face' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -13.00000286102295
    3. 'face' → logprob: -14.25000286102295
    4. '(f' → logprob: -17.750003814697266
    5. ' face' → logprob: -18.750003814697266
    6. ' (' → logprob: -19.625003814697266
    7. '(
' → logprob: -19.875003814697266
    8. '_face' → logprob: -20.625003814697266
    9. '(fe' → logprob: -21.000003814697266
    10. '((' → logprob: -21.875003814697266

Token 50: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ')
' → logprob: -13.125001907348633
    3. ' )' → logprob: -16.625001907348633
    4. '`)' → logprob: -18.125001907348633
    5. '))' → logprob: -18.250001907348633
    6. ')return' → logprob: -18.375001907348633
    7. '）' → logprob: -18.875001907348633
    8. '   ' → logprob: -18.875001907348633
    9. '())' → logprob: -18.875001907348633
    10. ')`' → logprob: -19.125001907348633

Token 51: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24183329939842224
    2. '<|end|>' → logprob: -1.8668333292007446
    3. '#' → logprob: -3.991833209991455
    4. ')' → logprob: -4.116833209991455
    5. '\n' → logprob: -4.366833209991455
    6. '```' → logprob: -4.616833209991455
    7. '\' → logprob: -7.241833209991455
    8. ' print' → logprob: -7.616833209991455
    9. '#print' → logprob: -7.991833209991455
    10. 'newline' → logprob: -8.116833686828613

Token 52: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003360582049936056
    2. '('' → logprob: -8.625335693359375
    3. '()' → logprob: -10.375335693359375
    4. '(f' → logprob: -10.500335693359375
    5. '(d' → logprob: -10.500335693359375
    6. 'duplicates' → logprob: -10.750335693359375
    7. '("' → logprob: -11.250335693359375
    8. '((' → logprob: -11.375335693359375
    9. '(len' → logprob: -11.875335693359375
    10. '_duplicates' → logprob: -12.375335693359375

Token 53: 'duplicates' (ID: 149036)
  Prédit: 'duplicates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duplicates' → logprob: -9.674858301877975e-05
    2. ' duplicates' → logprob: -9.250096321105957
    3. 'duplicate' → logprob: -16.000097274780273
    4. ')' → logprob: -16.125097274780273
    5. 'du' → logprob: -16.125097274780273
    6. 'dup' → logprob: -16.125097274780273
    7. '_duplicates' → logprob: -16.750097274780273
    8. 'Duplicates' → logprob: -16.750097274780273
    9. 'faces' → logprob: -17.750097274780273
    10. '   ' → logprob: -17.875097274780273

Token 54: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. '))' → logprob: -16.375
    3. ' )' → logprob: -16.75
    4. ')`' → logprob: -18.0
    5. ')
' → logprob: -18.5
    6. '`)' → logprob: -19.25
    7. ')}' → logprob: -20.0
    8. '）' → logprob: -20.125
    9. '')' → logprob: -20.5
    10. '())' → logprob: -20.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 52
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 46
Précision stricte (1ère position): 38.46%
Précision adaptée (1ère position): 46.15%
Précision (top 10): 88.46%
================================================================================
