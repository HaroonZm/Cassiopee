================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import bisect

input = sys.stdin.readline

MAX_SECTOR = 10**9

class FileSystem:
    def __init__(self):
        # free_intervals: list of (start, end) sorted by start; end inclusive
        self.free_intervals = [(0, MAX_SECTOR)]
        # file_map: file_id -> list of (start,end) intervals occupied by that file
        self.file_map = {}
        # occupied_intervals: list of (start, end, file_id) sorted by start, disjoint intervals
        self.occupied = []

    def _add_free(self, start, end):
        # Add free interval [start,end], merge with neighbors if possible
        fi = self.free_intervals
        pos = bisect.bisect_left(fi, (start, end))
        # Try merge left
        left = pos - 1
        right = pos
        new_start, new_end = start, end
        to_del = []
        if left >= 0 and fi[left][1] + 1 >= start:
            new_start = fi[left][0]
            new_end = max(fi[left][1], end)
            to_del.append(left)
        if right < len(fi) and fi[right][0] -1 <= end:
            new_start = min(new_start, fi[right][0])
            new_end = max(new_end, fi[right][1])
            to_del.append(right)
        # Remove merged intervals
        for i in reversed(to_del):
            fi.pop(i)
        bisect.insort(fi, (new_start, new_end))

    def _remove_free(self, start, end):
        # Remove the interval [start,end] from free_intervals
        fi = self.free_intervals
        pos = bisect.bisect_left(fi, (start, -1))
        # maybe interval before pos overlap
        if pos >0:
            pos -= 1
        updates = []
        while pos < len(fi):
            fstart, fend = fi[pos]
            if fstart > end:
                break
            # overlapping with [start,end]
            if fend < start:
                pos += 1
                continue
            # Cut out [start,end]
            # Cases:
            # 1) fstart < start <= fend < end: shrink to fstart,start-1
            # 2) start <= fstart <= end < fend: shrink to end+1,fend
            # 3) fstart < start and fend > end: split into two intervals
            # 4) full covered: remove interval
            to_remove = fi.pop(pos)
            if to_remove[0] < start:
                updates.append((to_remove[0], start-1))
            if to_remove[1] > end:
                updates.append((end+1, to_remove[1]))
        for u in updates:
            bisect.insort(fi, u)

    def _occupied_add(self, start, end, fid):
        # Insert occupied interval in self.occupied, keep sorted and disjoint
        oi = self.occupied
        bisect.insort(oi, (start, end, fid))

    def _occupied_remove_file(self, fid):
        # Remove all intervals occupied by fid from self.occupied
        oi = self.occupied
        new_oi = [iv for iv in oi if iv[2] != fid]
        self.occupied = new_oi

    def _occupied_find(self, sector):
        oi = self.occupied
        pos = bisect.bisect_right(oi, (sector, MAX_SECTOR+1, 10**10))
        if pos == 0:
            return -1
        interval = oi[pos-1]
        if interval[0] <= sector <= interval[1]:
            return interval[2]
        return -1

    def write(self, fid, size):
        # We write file of size sectors with id fid
        # Find earliest free space(s) from start for writing
        # If meet occupied sector during writing, skip occupied part and continue at next free segment
        remaining = size
        intervals = []
        fi = self.free_intervals
        # We scan free intervals from the beginning until total size is covered
        idx = 0
        while remaining > 0 and idx < len(fi):
            start, end = fi[idx]
            length = end - start +1
            if length <= 0:
                idx += 1
                continue
            take = min(remaining, length)
            block_start = start
            block_end = start + take -1
            intervals.append((block_start, block_end))
            remaining -= take
            if take == length:
                # full free interval used: remove it later
                idx += 1
            else:
                # partial use: update free interval
                fi[idx] = (start+take, end)
                break
        if remaining >0:
            # not enough free space, problem states nothing about this case; just write partial
            pass
        # Remove these intervals from free_intervals
        for s,e in intervals:
            self._remove_free(s,e)
        # Add intervals to occupied_intervals
        for s,e in intervals:
            self._occupied_add(s,e,fid)
        self.file_map[fid] = intervals

    def delete(self, fid):
        if fid not in self.file_map:
            return
        intervals = self.file_map[fid]
        # Remove from occupied_intervals
        self._occupied_remove_file(fid)
        # Add back to free intervals and merge automatically
        for s,e in intervals:
            self._add_free(s,e)
        del self.file_map[fid]

    def read(self, sector):
        return self._occupied_find(sector)

def main():
    while True:
        line = input()
        if not line:
            break
        N = int(line)
        if N == 0:
            break
        fs = FileSystem()
        for _ in range(N):
            cmd_line = input().strip()
            if not cmd_line:
                continue
            parts = cmd_line.split()
            cmd = parts[0]
            if cmd == 'W':
                fid = int(parts[1])
                size = int(parts[2])
                fs.write(fid,size)
            elif cmd == 'D':
                fid = int(parts[1])
                fs.delete(fid)
            elif cmd == 'R':
                sector = int(parts[1])
                print(fs.read(sector))
        print()

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29739612340927124
    2. '\n' → logprob: -1.547396183013916
    3. '<|end|>' → logprob: -3.797396183013916
    4. '\' → logprob: -4.922396183013916
    5. 'newline' → logprob: -5.672396183013916
    6. 'import' → logprob: -5.672396183013916
    7. '<|end|>' → logprob: -6.047396183013916
    8. '
' → logprob: -6.922396183013916
    9. '```' → logprob: -6.922396183013916
    10. '' → logprob: -7.547396183013916

Token 4: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -5.7053759519476444e-05
    2. 't' → logprob: -10.250057220458984
    3. 'e' → logprob: -11.375057220458984
    4. 'ected' → logprob: -12.250057220458984
    5. 'ec' → logprob: -13.500057220458984
    6. 'ectl' → logprob: -13.875057220458984
    7. '```' → logprob: -13.875057220458984
    8. 'ection' → logprob: -14.500057220458984
    9. '>' → logprob: -15.500057220458984
    10. 'ector' → logprob: -15.875057220458984

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.24299927055835724
    2. '<|end|>' → logprob: -3.117999315261841
    3. '
' → logprob: -3.367999315261841
    4. '\n' → logprob: -3.492999315261841
    5. '\' → logprob: -3.742999315261841
    6. '' → logprob: -3.867999315261841
    7. '

' → logprob: -3.992999315261841
    8. 'import' → logprob: -4.117999076843262
    9. 'newline' → logprob: -4.867999076843262
    10. '```' → logprob: -5.367999076843262

Token 7: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8949258923530579
    2. 'def' → logprob: -1.269925832748413
    3. 'import' → logprob: -2.644925832748413
    4. '
' → logprob: -3.019925832748413
    5. '\n' → logprob: -3.519925832748413
    6. '' → logprob: -3.769925832748413
    7. '\' → logprob: -3.769925832748413
    8. '```' → logprob: -3.894925832748413
    9. '#' → logprob: -4.019926071166992
    10. '

' → logprob: -4.394926071166992

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23201487958431244
    2. '.' → logprob: -1.6070148944854736
    3. ')' → logprob: -5.8570146560668945
    4. '=' → logprob: -6.6070146560668945
    5. '()' → logprob: -7.6070146560668945
    6. '```' → logprob: -7.8570146560668945
    7. '[' → logprob: -8.107014656066895
    8. '<|end|>' → logprob: -8.232014656066895
    9. ' (' → logprob: -8.857014656066895
    10. '.readline' → logprob: -9.357014656066895

Token 9: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.41934695839881897
    2. 'sys' → logprob: -1.1693469285964966
    3. 'input' → logprob: -3.669347047805786
    4. ' input' → logprob: -5.044346809387207
    5. '	sys' → logprob: -11.794346809387207
    6. '=sys' → logprob: -12.294346809387207
    7. '(sys' → logprob: -13.544346809387207
    8. ' ' → logprob: -14.169346809387207
    9. '```' → logprob: -14.919346809387207
    10. 'lambda' → logprob: -15.044346809387207

Token 10: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.007202647626399994
    2. '.' → logprob: -5.257202625274658
    3. '.stdout' → logprob: -7.257202625274658
    4. ' .' → logprob: -7.382202625274658
    5. '.argv' → logprob: -8.257203102111816
    6. '.input' → logprob: -8.632203102111816
    7. '.readline' → logprob: -9.132203102111816
    8. '.path' → logprob: -10.257203102111816
    9. '.std' → logprob: -10.757203102111816
    10. '.stderr' → logprob: -11.882203102111816

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.15333771705627441
    2. '.' → logprob: -2.5283377170562744
    3. '.read' → logprob: -2.7783377170562744
    4. '.readlines' → logprob: -8.653337478637695
    5. '.Read' → logprob: -11.028337478637695
    6. 'read' → logprob: -11.028337478637695
    7. '.buffer' → logprob: -11.653337478637695
    8. '.reader' → logprob: -13.403337478637695
    9. '```' → logprob: -13.403337478637695
    10. '.write' → logprob: -13.653337478637695

Token 12: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44913533329963684
    2. '()' → logprob: -1.3241353034973145
    3. '
' → logprob: -3.0741353034973145
    4. '(
' → logprob: -3.8241353034973145
    5. 'def' → logprob: -5.1991353034973145
    6. '\n' → logprob: -5.3241353034973145
    7. '()
' → logprob: -5.5741353034973145
    8. '

' → logprob: -6.4491353034973145
    9. '()

' → logprob: -6.9491353034973145
    10. 'a' → logprob: -6.9491353034973145

Token 13: 'MAX' (ID: 21911)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5769510865211487
    2. 'n' → logprob: -0.8269510865211487
    3. 'N' → logprob: -7.076951026916504
    4. 'data' → logprob: -9.326951026916504
    5. 'from' → logprob: -11.326951026916504
    6. '\' → logprob: -11.576951026916504
    7. 'nums' → logprob: -11.701951026916504
    8. 'a' → logprob: -12.076951026916504
    9. 'num' → logprob: -12.076951026916504
    10. 'arr' → logprob: -12.326951026916504

Token 14: '_SE' (ID: 8043)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7623225450515747
    2. '_SIZE' → logprob: -1.0123225450515747
    3. '(' → logprob: -2.262322425842285
    4. '_NUM' → logprob: -4.512322425842285
    5. ' =' → logprob: -4.762322425842285
    6. '_COUNT' → logprob: -5.387322425842285
    7. '_LEN' → logprob: -5.637322425842285
    8. ' (' → logprob: -5.762322425842285
    9. '_LENGTH' → logprob: -5.762322425842285
    10. '_VALUE' → logprob: -5.762322425842285

Token 15: 'CTOR' (ID: 87143)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.1147073358297348
    2. 'QUENCE' → logprob: -3.1147072315216064
    3. 'ARCH' → logprob: -3.4897072315216064
    4. 'G' → logprob: -4.1147074699401855
    5. 'L' → logprob: -5.2397074699401855
    6. 'LF' → logprob: -5.3647074699401855
    7. 'E' → logprob: -6.1147074699401855
    8. 'ED' → logprob: -6.7397074699401855
    9. 'A' → logprob: -6.9897074699401855
    10. 'R' → logprob: -7.4897074699401855

Token 16: ' =' (ID: 314)
  Prédit: '_SIZE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SIZE' → logprob: -0.34373727440834045
    2. '_' → logprob: -1.343737244606018
    3. 'S' → logprob: -3.9687373638153076
    4. '_LEN' → logprob: -5.8437371253967285
    5. '_ID' → logprob: -6.4687371253967285
    6. '_LENGTH' → logprob: -6.4687371253967285
    7. '_COUNT' → logprob: -6.7187371253967285
    8. '_S' → logprob: -6.7187371253967285
    9. '_NUM' → logprob: -7.3437371253967285
    10. ' =' → logprob: -7.4687371253967285

Token 17: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20105081796646118
    2. '100' → logprob: -2.0760507583618164
    3. '10' → logprob: -3.0760507583618164
    4. '20' → logprob: -5.701050758361816
    5. '200' → logprob: -5.701050758361816
    6. '500' → logprob: -7.201050758361816
    7. '300' → logprob: -7.576050758361816
    8. '400' → logprob: -7.951050758361816
    9. '256' → logprob: -8.076050758361816
    10. '50' → logprob: -8.201050758361816

Token 18: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6793212890625
    2. '100' → logprob: -0.8043212890625
    3. '200' → logprob: -3.8043212890625
    4. '500' → logprob: -5.1793212890625
    5. '300' → logprob: -5.3043212890625
    6. '20' → logprob: -6.0543212890625
    7. ' ' → logprob: -6.3043212890625
    8. '400' → logprob: -6.4293212890625
    9. '1' → logprob: -6.5543212890625
    10. '999' → logprob: -6.9293212890625

Token 19: '**' (ID: 410)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.8595510125160217
    2. '0' → logprob: -1.359550952911377
    3. '**' → logprob: -1.484550952911377
    4. '7' → logprob: -3.484550952911377
    5. '000' → logprob: -3.859550952911377
    6. '5' → logprob: -3.984550952911377
    7. '00' → logprob: -4.234550952911377
    8. '4' → logprob: -5.984550952911377
    9. '8' → logprob: -5.984550952911377
    10. '9' → logprob: -6.609550952911377

Token 20: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.20135347545146942
    2. '7' → logprob: -2.2013535499572754
    3. '6' → logprob: -2.8263535499572754
    4. '8' → logprob: -4.701353549957275
    5. '5' → logprob: -5.951353549957275
    6. '12' → logprob: -7.951353549957275
    7. '10' → logprob: -8.451353073120117
    8. '18' → logprob: -8.701353073120117
    9. '11' → logprob: -10.576353073120117
    10. '15' → logprob: -10.701353073120117

Token 21: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07228673994541168
    2. '

' → logprob: -3.82228684425354
    3. '```' → logprob: -4.322286605834961
    4. '\n' → logprob: -4.947286605834961
    5. '
' → logprob: -5.197286605834961
    6. 'def' → logprob: -5.322286605834961
    7. 'MAX' → logprob: -5.947286605834961
    8. 'class' → logprob: -5.947286605834961
    9. 'n' → logprob: -6.072286605834961
    10. '' → logprob: -6.197286605834961

Token 22: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.374512255191803
    2. 'def' → logprob: -1.4995121955871582
    3. '
' → logprob: -2.999512195587158
    4. 'n' → logprob: -3.749512195587158
    5. '

' → logprob: -5.249512195587158
    6. 'a' → logprob: -6.249512195587158
    7. '
' → logprob: -6.499512195587158
    8. '```' → logprob: -6.999512195587158
    9. ' class' → logprob: -7.124512195587158
    10. ' 
' → logprob: -7.124512195587158

Token 23: ' File' (ID: 5262)
  Prédit: ' Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Segment' → logprob: -0.48995354771614075
    2. ' Sector' → logprob: -1.7399535179138184
    3. ' Sorted' → logprob: -3.6149535179138184
    4. ' Seg' → logprob: -3.8649535179138184
    5. ' Fen' → logprob: -3.8649535179138184
    6. ' Solution' → logprob: -3.9899535179138184
    7. ' S' → logprob: -4.114953517913818
    8. 'Segment' → logprob: -4.489953517913818
    9. ' Binary' → logprob: -4.614953517913818
    10. ' Balanced' → logprob: -4.739953517913818

Token 24: 'System' (ID: 3320)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05202765390276909
    2. 'System' → logprob: -3.677027702331543
    3. 'Manager' → logprob: -4.302027702331543
    4. 'Explorer' → logprob: -5.927027702331543
    5. '():' → logprob: -6.302027702331543
    6. 'Storage' → logprob: -6.927027702331543
    7. 'Reader' → logprob: -7.052027702331543
    8. 'Searcher' → logprob: -7.427027702331543
    9. 'Indexer' → logprob: -7.552027702331543
    10. 'Name' → logprob: -7.677027702331543

Token 25: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.523948907968588e-05
    2. ':
' → logprob: -10.625035285949707
    3. '(' → logprob: -12.250035285949707
    4. ' :' → logprob: -13.500035285949707
    5. ':**' → logprob: -13.500035285949707
    6. '():' → logprob: -13.625035285949707
    7. '(object' → logprob: -14.125035285949707
    8. '):' → logprob: -15.000035285949707
    9. '```' → logprob: -15.375035285949707
    10. ':

' → logprob: -15.500035285949707

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1291741281747818
    2. '    ' → logprob: -2.87917423248291
    3. '(' → logprob: -4.00417423248291
    4. '    
' → logprob: -4.00417423248291
    5. ' def' → logprob: -4.50417423248291
    6. ' 
' → logprob: -5.75417423248291
    7. '     
' → logprob: -5.75417423248291
    8. ' ' → logprob: -6.12917423248291
    9. '(n' → logprob: -6.25417423248291
    10. 'def' → logprob: -6.50417423248291

Token 27: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.02123303711414337
    2. 'def' (adapté à ' def') → logprob: -4.021233081817627
    3. '   ' → logprob: -5.896233081817627
    4. ' 
' → logprob: -8.896232604980469
    5. '    
' → logprob: -8.896232604980469
    6. '    ' → logprob: -10.771232604980469
    7. '	def' → logprob: -11.896232604980469
    8. ' ' → logprob: -12.396232604980469
    9. '     
' → logprob: -12.646232604980469
    10. 'class' → logprob: -12.896232604980469

Token 28: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.013886566273868084
    2. 'init' → logprob: -5.138886451721191
    3. ' init' → logprob: -5.263886451721191
    4. '__' → logprob: -6.388886451721191
    5. ' ' → logprob: -7.138886451721191
    6. 'itialize' → logprob: -9.763886451721191
    7. '_init' → logprob: -9.888886451721191
    8. ' def' → logprob: -10.263886451721191
    9. '   ' → logprob: -10.888886451721191
    10. '_' → logprob: -11.013886451721191

Token 29: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -9.088346359931165e-07
    2. ' init' → logprob: -14.625000953674316
    3. 'ini' → logprob: -16.125
    4. 'nit' → logprob: -16.625
    5. 'in' → logprob: -16.75
    6. '	init' → logprob: -17.125
    7. 'int' → logprob: -17.75
    8. 'innit' → logprob: -18.125
    9. 'inite' → logprob: -18.25
    10. '   ' → logprob: -18.375

Token 30: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0036494876258075237
    2. '__' → logprob: -5.628649711608887
    3. '__(
' → logprob: -10.378649711608887
    4. '__((' → logprob: -11.253649711608887
    5. '__('' → logprob: -12.628649711608887
    6. '__(*' → logprob: -13.753649711608887
    7. '(self' → logprob: -15.503649711608887
    8. '___' → logprob: -15.628649711608887
    9. '__("' → logprob: -15.878649711608887
    10. '(' → logprob: -16.25364875793457

Token 31: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003436846425756812
    2. ' self' → logprob: -5.753437042236328
    3. ')' → logprob: -8.378437042236328
    4. ' )' → logprob: -11.378437042236328
    5. ' ' → logprob: -11.628437042236328
    6. '(self' → logprob: -12.253437042236328
    7. ',self' → logprob: -13.753437042236328
    8. '0' → logprob: -14.378437042236328
    9. '_self' → logprob: -14.753437042236328
    10. '   ' → logprob: -14.878437042236328

Token 32: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09831482917070389
    2. ' ,' → logprob: -2.9733147621154785
    3. ')' → logprob: -3.7233147621154785
    4. 'self' → logprob: -4.8483147621154785
    5. ' )' → logprob: -5.0983147621154785
    6. '(' → logprob: -6.0983147621154785
    7. ',self' → logprob: -6.9733147621154785
    8. '(self' → logprob: -7.5983147621154785
    9. ' ' → logprob: -8.348315238952637
    10. ' self' → logprob: -9.348315238952637

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015801718458533287
    2. 'self' → logprob: -4.265801906585693
    3. ' self' → logprob: -6.890801906585693
    4. '        ' → logprob: -7.890801906585693
    5. '      ' → logprob: -10.015801429748535
    6. '    ' → logprob: -10.140801429748535
    7. '   ' → logprob: -10.265801429748535
    8. '     ' → logprob: -11.015801429748535
    9. '[]' → logprob: -11.140801429748535
    10. ')' → logprob: -11.140801429748535

Token 34: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.43713822960853577
    2. ' self' → logprob: -1.0621381998062134
    3. '       ' → logprob: -4.812138080596924
    4. ' ' → logprob: -9.437138557434082
    5. '        ' → logprob: -9.687138557434082
    6. '   ' → logprob: -9.687138557434082
    7. '    ' → logprob: -11.437138557434082
    8. 's' → logprob: -11.437138557434082
    9. '	self' → logprob: -11.437138557434082
    10. ' []' → logprob: -12.062138557434082

Token 35: ' free' (ID: 2240)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.566439151763916
    2. 'self' → logprob: -0.941439151763916
    3. '       ' → logprob: -3.691439151763916
    4. ' ' → logprob: -4.691439151763916
    5. '        ' → logprob: -5.191439151763916
    6. '    ' → logprob: -7.441439151763916
    7. '   ' → logprob: -7.941439151763916
    8. '_' → logprob: -8.066438674926758
    9. ' []' → logprob: -8.066438674926758
    10. '[]' → logprob: -8.441438674926758

Token 36: '_inter' (ID: 16818)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16635218262672424
    2. '_inter' → logprob: -2.6663522720336914
    3. '_spaces' → logprob: -2.7913522720336914
    4. '_segments' → logprob: -5.166352272033691
    5. ' _' → logprob: -5.291352272033691
    6. '_se' → logprob: -5.916352272033691
    7. '_space' → logprob: -6.041352272033691
    8. '_ranges' → logprob: -6.166352272033691
    9. '_blocks' → logprob: -6.416352272033691
    10. '_slots' → logprob: -6.541352272033691

Token 37: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.003664444899186492
    2. ' vals' → logprob: -6.378664493560791
    3. 'val' → logprob: -6.628664493560791
    4. '```' → logprob: -9.003664016723633
    5. '=' → logprob: -9.128664016723633
    6. 'als' → logprob: -9.378664016723633
    7. '_vals' → logprob: -9.878664016723633
    8. '   ' → logprob: -10.128664016723633
    9. '_' → logprob: -10.691164016723633
    10. '-' → logprob: -11.628664016723633

Token 38: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0003076950670219958
    2. '=' → logprob: -8.2503080368042
    3. '=[]' → logprob: -10.1253080368042
    4. ' ' → logprob: -12.7503080368042
    5. ':' → logprob: -13.6253080368042
    6. '   ' → logprob: -14.6253080368042
    7. '[]' → logprob: -15.0003080368042
    8. '[' → logprob: -15.1253080368042
    9. ' =[' → logprob: -15.6253080368042
    10. ' :' → logprob: -15.6253080368042

Token 39: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.03804768621921539
    2. '[]' → logprob: -3.2880477905273438
    3. '[]}' → logprob: -13.538047790527344
    4. ' ' → logprob: -14.038047790527344
    5. 'self' → logprob: -14.288047790527344
    6. ' {}' → logprob: -14.538047790527344
    7. '[' → logprob: -14.788047790527344
    8. ' self' → logprob: -14.788047790527344
    9. ' [])' → logprob: -14.913047790527344
    10. '   ' → logprob: -14.913047790527344

Token 40: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8258618712425232
    2. ' of' → logprob: -1.075861930847168
    3. '[' → logprob: -1.700861930847168
    4. '=[]' → logprob: -4.200861930847168
    5. '<|end|>' → logprob: -4.700861930847168
    6. '[]' → logprob: -5.200861930847168
    7. '=' → logprob: -5.950861930847168
    8. '<|end|>' → logprob: -6.325861930847168
    9. ' ' → logprob: -6.450861930847168
    10. '[int' → logprob: -6.700861930847168

Token 41: ' (' (ID: 350)
  Prédit: ' tuples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuples' → logprob: -0.02312644198536873
    2. ' (' → logprob: -4.273126602172852
    3. '[' → logprob: -5.898126602172852
    4. ' intervals' → logprob: -6.273126602172852
    5. ' tuple' → logprob: -6.523126602172852
    6. ' [' → logprob: -7.273126602172852
    7. '(tuple' → logprob: -7.273126602172852
    8. '(' → logprob: -7.898126602172852
    9. '(interval' → logprob: -8.523126602172852
    10. 'tu' → logprob: -8.648126602172852

Token 42: 'start' (ID: 5236)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.28719088435173035
    2. 'start' → logprob: -1.4121909141540527
    3. ' int' → logprob: -6.037190914154053
    4. '(int' → logprob: -6.537190914154053
    5. ' start' → logprob: -6.787190914154053
    6. ')' → logprob: -7.537190914154053
    7. '(start' → logprob: -8.287190437316895
    8. '[int' → logprob: -8.787190437316895
    9. ' (' → logprob: -10.162190437316895
    10. 'tuple' → logprob: -10.787190437316895

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.195421494543552e-05
    2. ',end' → logprob: -10.62507152557373
    3. '_sector' → logprob: -11.00007152557373
    4. '_,' → logprob: -12.12507152557373
    5. '_' → logprob: -12.37507152557373
    6. '_index' → logprob: -12.50007152557373
    7. '_end' → logprob: -12.62507152557373
    8. ' ,' → logprob: -12.62507152557373
    9. 's' → logprob: -13.12507152557373
    10. '```' → logprob: -13.12507152557373

Token 44: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.12694942951202393
    2. 'end' → logprob: -2.1269493103027344
    3. '	end' → logprob: -12.001949310302734
    4. ')' → logprob: -12.251949310302734
    5. '   ' → logprob: -13.001949310302734
    6. ' ' → logprob: -13.001949310302734
    7. '  ' → logprob: -13.751949310302734
    8. ''end' → logprob: -13.876949310302734
    9. '[end' → logprob: -14.376949310302734
    10. 'length' → logprob: -14.501949310302734

Token 45: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.314625690924004e-05
    2. ',' → logprob: -10.500073432922363
    3. '),' → logprob: -10.500073432922363
    4. ' )' → logprob: -11.625073432922363
    5. 's' → logprob: -12.875073432922363
    6. '   ' → logprob: -13.125073432922363
    7. '[' → logprob: -14.125073432922363
    8. ',)' → logprob: -14.250073432922363
    9. '_' → logprob: -14.750073432922363
    10. ')s' → logprob: -14.875073432922363

Token 46: ' sorted' (ID: 20099)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.613053023815155
    2. '[]' → logprob: -1.6130530834197998
    3. '<|end|>' → logprob: -2.1130530834198
    4. '       ' → logprob: -2.7380530834198
    5. '   ' → logprob: -3.6130530834198
    6. ' )' → logprob: -4.613052845001221
    7. ',' → logprob: -4.613052845001221
    8. '[' → logprob: -5.363052845001221
    9. ' ' → logprob: -5.613052845001221
    10. '  ' → logprob: -5.738052845001221

Token 47: ' by' (ID: 656)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4155332148075104
    2. ' by' → logprob: -1.790533185005188
    3. '<|end|>' → logprob: -2.6655333042144775
    4. ')' → logprob: -3.4155333042144775
    5. '_' → logprob: -3.5405333042144775
    6. '<|end|>' → logprob: -4.915533065795898
    7. 'by' → logprob: -5.040533065795898
    8. '_by' → logprob: -5.290533065795898
    9. '[]' → logprob: -5.415533065795898
    10. '   ' → logprob: -5.790533065795898

Token 48: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.5240107774734497
    2. 'start' → logprob: -0.8990107774734497
    3. ' ' → logprob: -7.39901065826416
    4. 'end' → logprob: -9.39901065826416
    5. ' end' → logprob: -9.52401065826416
    6. ' the' → logprob: -9.89901065826416
    7. '_start' → logprob: -9.89901065826416
    8. 'the' → logprob: -12.52401065826416
    9. '	start' → logprob: -13.52401065826416
    10. 'space' → logprob: -13.52401065826416

Token 49: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0496390201151371
    2. ',' → logprob: -4.0496392250061035
    3. '[]' → logprob: -4.5496392250061035
    4. 'self' → logprob: -5.0496392250061035
    5. '   ' → logprob: -5.1746392250061035
    6. '[' → logprob: -5.6746392250061035
    7. ')' → logprob: -5.6746392250061035
    8. '<|end|>' → logprob: -7.2996392250061035
    9. ' self' → logprob: -8.424638748168945
    10. '<|end|>' → logprob: -9.424638748168945

Token 50: ' end' (ID: 1268)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01932027004659176
    2. 'self' → logprob: -4.769320487976074
    3. ' self' → logprob: -5.519320487976074
    4. ' ' → logprob: -5.644320487976074
    5. '        ' → logprob: -6.519320487976074
    6. '   ' → logprob: -8.019320487976074
    7. '    ' → logprob: -8.519320487976074
    8. '[]' → logprob: -8.894320487976074
    9. '<|end|>' → logprob: -8.894320487976074
    10. ' ' → logprob: -9.019320487976074

Token 51: ' inclusive' (ID: 29482)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42898231744766235
    2. ' >=' → logprob: -2.4289822578430176
    3. ' is' → logprob: -2.6789822578430176
    4. ',' → logprob: -2.6789822578430176
    5. ' =' → logprob: -4.053982257843018
    6. '=' → logprob: -4.803982257843018
    7. ' ,' → logprob: -4.803982257843018
    8. ' )' → logprob: -4.928982257843018
    9. ' <' → logprob: -4.928982257843018
    10. '>=' → logprob: -5.178982257843018

Token 52: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025820041075348854
    2. ')' → logprob: -4.900820255279541
    3. ',' → logprob: -5.150820255279541
    4. '   ' → logprob: -5.275820255279541
    5. 'self' → logprob: -5.775820255279541
    6. '[' → logprob: -6.775820255279541
    7. '[]' → logprob: -6.775820255279541
    8. '<|end|>' → logprob: -7.400820255279541
    9. '        
' → logprob: -7.650820255279541
    10. ' self' → logprob: -9.025819778442383

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009346862207166851
    2. '[]' → logprob: -7.625934600830078
    3. 'self' → logprob: -9.250934600830078
    4. '[' → logprob: -9.250934600830078
    5. ',' → logprob: -9.625934600830078
    6. '<|end|>' → logprob: -9.750934600830078
    7. '   ' → logprob: -10.375934600830078
    8. ')' → logprob: -10.375934600830078
    9. '        
' → logprob: -10.625934600830078
    10. ' self' → logprob: -11.125934600830078

Token 54: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20571954548358917
    2. 'self' (adapté à ' self') → logprob: -1.7057195901870728
    3. ' self' → logprob: -5.455719470977783
    4. '[]' → logprob: -11.330719947814941
    5. ' ' → logprob: -12.205719947814941
    6. '   ' → logprob: -12.455719947814941
    7. '	self' → logprob: -13.455719947814941
    8. ' ' → logprob: -14.205719947814941
    9. ' []' → logprob: -14.830719947814941
    10. '	' → logprob: -14.955719947814941

Token 55: '.free' (ID: 76674)
  Prédit: '.free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.free' → logprob: -0.0019109079148620367
    2. '.fre' → logprob: -7.25191068649292
    3. ' .' → logprob: -7.37691068649292
    4. '.' → logprob: -7.50191068649292
    5. '.Free' → logprob: -11.501911163330078
    6. '._' → logprob: -13.376911163330078
    7. '.f' → logprob: -13.751911163330078
    8. '.available' → logprob: -13.876911163330078
    9. '.next' → logprob: -14.001911163330078
    10. '.best' → logprob: -14.251911163330078

Token 56: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -9.610702363715973e-06
    2. '_segments' → logprob: -12.375009536743164
    3. '_ranges' → logprob: -13.125009536743164
    4. '_' → logprob: -13.500009536743164
    5. ' _' → logprob: -14.250009536743164
    6. '_interrupt' → logprob: -15.500009536743164
    7. 's' → logprob: -15.625009536743164
    8. '_interval' → logprob: -16.375009536743164
    9. '_spaces' → logprob: -16.500009536743164
    10. 'interval' → logprob: -16.625009536743164

Token 57: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.04054998233914375
    2. 'erv' → logprob: -3.4155499935150146
    3. 'als' → logprob: -5.9155497550964355
    4. 'val' → logprob: -6.1655497550964355
    5. 'r' → logprob: -8.290550231933594
    6. 't' → logprob: -8.290550231933594
    7. '```' → logprob: -8.290550231933594
    8. '[' → logprob: -8.290550231933594
    9. '_' → logprob: -9.040550231933594
    10. 'erval' → logprob: -9.290550231933594

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0025282183196395636
    2. '=' → logprob: -6.002528190612793
    3. '=[]' → logprob: -10.002528190612793
    4. '.append' → logprob: -12.127528190612793
    5. '   ' → logprob: -13.877528190612793
    6. ' ' → logprob: -15.877528190612793
    7. ',' → logprob: -16.12752914428711
    8. '[:]' → logprob: -16.25252914428711
    9. '.' → logprob: -16.37752914428711
    10. ' =[' → logprob: -16.50252914428711

Token 59: ' [(' (ID: 43900)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7965793609619141
    2. '[(' → logprob: -0.7965793609619141
    3. ' []' → logprob: -2.796579360961914
    4. ' [(' → logprob: -3.296579360961914
    5. '[' → logprob: -8.671579360961914
    6. '[]}' → logprob: -11.046579360961914
    7. ' [' → logprob: -11.171579360961914
    8. ' ' → logprob: -11.296579360961914
    9. '[((' → logprob: -11.421579360961914
    10. '[:]' → logprob: -11.921579360961914

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009536213474348187
    2. '(' → logprob: -7.500953674316406
    3. '1' → logprob: -8.000953674316406
    4. ' ' → logprob: -9.750953674316406
    5. ' (' → logprob: -12.500953674316406
    6. ')' → logprob: -13.500953674316406
    7. '   ' → logprob: -13.500953674316406
    8. '000' → logprob: -16.250953674316406
    9. '  ' → logprob: -16.250953674316406
    10. '```' → logprob: -16.438453674316406

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.2762428822461516e-05
    2. ' ,' → logprob: -9.875052452087402
    3. ',
' → logprob: -15.000052452087402
    4. ' ' → logprob: -15.875052452087402
    5. ',max' → logprob: -16.25005340576172
    6. '),' → logprob: -16.25005340576172
    7. '<|end|>' → logprob: -16.25005340576172
    8. '‌,' → logprob: -16.37505340576172
    9. 'MAX' → logprob: -16.62505340576172
    10. ')' → logprob: -17.12505340576172

Token 62: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.016126571223139763
    2. ' MAX' → logprob: -4.14112663269043
    3. '999' → logprob: -9.39112663269043
    4. '100' → logprob: -12.76612663269043
    5. ' ' → logprob: -13.01612663269043
    6. '10' → logprob: -13.64112663269043
    7. '0' → logprob: -14.51612663269043
    8. 'Max' → logprob: -14.76612663269043
    9. '(MAX' → logprob: -14.76612663269043
    10. '_MAX' → logprob: -14.89112663269043

Token 63: '_SE' (ID: 8043)
  Prédit: '_SE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SE' → logprob: -5.3596853831550106e-05
    2. '_' → logprob: -10.750053405761719
    3. '_SECUR' → logprob: -11.500053405761719
    4. '_S' → logprob: -11.750053405761719
    5. '_SEG' → logprob: -12.250053405761719
    6. '_SEPARATOR' → logprob: -12.375053405761719
    7. ' _' → logprob: -13.625053405761719
    8. '_sector' → logprob: -13.750053405761719
    9. '_se' → logprob: -14.375053405761719
    10. '\' → logprob: -14.750053405761719

Token 64: 'CTOR' (ID: 87143)
  Prédit: 'CTOR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CTOR' → logprob: -0.0003385614836588502
    2. 'CT' → logprob: -8.000338554382324
    3. 'ECTOR' → logprob: -13.875338554382324
    4. 'C' → logprob: -14.125338554382324
    5. 'ctor' → logprob: -15.250338554382324
    6. '**' → logprob: -15.250338554382324
    7. 'Ctor' → logprob: -15.875338554382324
    8. 'TOR' → logprob: -16.12533950805664
    9. '```' → logprob: -16.50033950805664
    10. '#' → logprob: -16.62533950805664

Token 65: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.012311149388551712
    2. ' )' → logprob: -4.637310981750488
    3. ')' → logprob: -6.012310981750488
    4. ')],' → logprob: -10.012310981750488
    5. ')])' → logprob: -10.762310981750488
    6. '-' → logprob: -11.762310981750488
    7. '),' → logprob: -12.512310981750488
    8. ' ' → logprob: -12.512310981750488
    9. ']' → logprob: -12.762310981750488
    10. '")]' → logprob: -13.012310981750488

Token 66: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' file' (ID: 1974)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.34349462389945984
    2. ' self' → logprob: -1.5934946537017822
    3. ' used' → logprob: -4.093494415283203
    4. ' allocated' → logprob: -4.093494415283203
    5. 'allocated' → logprob: -4.218494415283203
    6. 'used' → logprob: -4.343494415283203
    7. 'occupied' → logprob: -5.343494415283203
    8. '   ' → logprob: -5.843494415283203
    9. 'import' → logprob: -5.968494415283203
    10. '#' → logprob: -6.405994415283203

Token 69: '_map' (ID: 11824)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7980258464813232
    2. '_map' → logprob: -0.7980258464813232
    3. '_sizes' → logprob: -2.5480258464813232
    4. '_inter' → logprob: -4.423026084899902
    5. '_positions' → logprob: -5.923026084899902
    6. '_to' → logprob: -7.048026084899902
    7. '_ranges' → logprob: -7.298026084899902
    8. '_' → logprob: -7.548026084899902
    9. '_alloc' → logprob: -7.673026084899902
    10. '_table' → logprob: -7.798026084899902

Token 70: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01055806502699852
    2. '=' → logprob: -4.760558128356934
    3. ':' → logprob: -6.260558128356934
    4. '={}' → logprob: -11.385558128356934
    5. ' :' → logprob: -11.885558128356934
    6. '{}' → logprob: -12.510558128356934
    7. ' ' → logprob: -12.635558128356934
    8. '{' → logprob: -13.135558128356934
    9. ',' → logprob: -13.510558128356934
    10. '  ' → logprob: -14.635558128356934

Token 71: ' file' (ID: 1974)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.32887884974479675
    2. ' dict' → logprob: -1.5788788795471191
    3. '{}' → logprob: -2.828878879547119
    4. 'dict' → logprob: -4.203878879547119
    5. '={}' → logprob: -10.953878402709961
    6. ' {})' → logprob: -11.578878402709961
    7. ' ' → logprob: -11.953878402709961
    8. ' defaultdict' → logprob: -12.578878402709961
    9. ' dictionary' → logprob: -12.828878402709961
    10. '{' → logprob: -13.328878402709961

Token 72: '_id' (ID: 1537)
  Prédit: '_name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_name' → logprob: -0.7031886577606201
    2. '_map' → logprob: -1.9531886577606201
    3. 's' → logprob: -2.32818865776062
    4. '_sizes' → logprob: -2.32818865776062
    5. 'name' → logprob: -3.20318865776062
    6. '_size' → logprob: -3.70318865776062
    7. '_id' → logprob: -3.82818865776062
    8. ':' → logprob: -3.95318865776062
    9. '_' → logprob: -4.203188896179199
    10. 'size' → logprob: -4.953188896179199

Token 73: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.39615124464035034
    2. ' to' → logprob: -1.2711513042449951
    3. ':' → logprob: -3.396151304244995
    4. '->' → logprob: -4.646151065826416
    5. 'to' → logprob: -6.521151065826416
    6. ' ' → logprob: -7.896151065826416
    7. ')' → logprob: -8.271151542663574
    8. ' :' → logprob: -8.396151542663574
    9. '=>' → logprob: -8.521151542663574
    10. ' =>' → logprob: -8.771151542663574

Token 74: ' list' (ID: 1562)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.05875721946358681
    2. '(' → logprob: -3.0587573051452637
    3. '(start' → logprob: -5.683757305145264
    4. ' list' → logprob: -5.933757305145264
    5. 'list' → logprob: -6.308757305145264
    6. ' []' → logprob: -7.683757305145264
    7. ' [(' → logprob: -7.808757305145264
    8. '[(' → logprob: -8.433756828308105
    9. '(list' → logprob: -8.558756828308105
    10. '(end' → logprob: -8.683756828308105

Token 75: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.11945094913244247
    2. '<|end|>' → logprob: -2.2444510459899902
    3. '[int' → logprob: -5.99445104598999
    4. 'of' → logprob: -6.24445104598999
    5. ' (' → logprob: -7.74445104598999
    6. '[' → logprob: -7.74445104598999
    7. '<|end|>' → logprob: -7.74445104598999
    8. '[(' → logprob: -7.99445104598999
    9. '(' → logprob: -8.119450569152832
    10. '_of' → logprob: -10.244450569152832

Token 76: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30222830176353455
    2. ' (' → logprob: -2.0522282123565674
    3. '(start' → logprob: -2.8022282123565674
    4. '(interval' → logprob: -3.4272282123565674
    5. '(int' → logprob: -3.5522282123565674
    6. ' intervals' → logprob: -5.6772284507751465
    7. '(se' → logprob: -6.3022284507751465
    8. ' tuples' → logprob: -6.5522284507751465
    9. 'allocated' → logprob: -7.1772284507751465
    10. 'interval' → logprob: -7.3022284507751465

Token 77: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.04796556755900383
    2. ' start' → logprob: -3.1729655265808105
    3. '(start' → logprob: -5.9229655265808105
    4. ' (' → logprob: -6.6729655265808105
    5. 'int' → logprob: -7.4229655265808105
    6. 'interval' → logprob: -9.797966003417969
    7. '_start' → logprob: -9.922966003417969
    8. '(' → logprob: -9.922966003417969
    9. '(int' → logprob: -9.922966003417969
    10. ' int' → logprob: -10.047966003417969

Token 78: ',end' (ID: 93014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004272850230336189
    2. ',end' → logprob: -5.504272937774658
    3. ' ,' → logprob: -8.7542724609375
    4. ',int' → logprob: -10.7542724609375
    5. ',start' → logprob: -13.0042724609375
    6. ',size' → logprob: -13.2542724609375
    7. ',length' → logprob: -13.3792724609375
    8. ',file' → logprob: -13.5042724609375
    9. ',user' → logprob: -13.6292724609375
    10. '<|end|>' → logprob: -13.8792724609375

Token 79: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.751746746478602e-05
    2. ' )' → logprob: -10.50004768371582
    3. '),' → logprob: -11.37504768371582
    4. 's' → logprob: -12.75004768371582
    5. ')s' → logprob: -13.87504768371582
    6. ')
' → logprob: -13.87504768371582
    7. ' intervals' → logprob: -14.50004768371582
    8. ')>' → logprob: -15.00004768371582
    9. 'segments' → logprob: -15.00004768371582
    10. ')]' → logprob: -15.12504768371582

Token 80: ' intervals' (ID: 49900)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' occupied' (ID: 46186)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' by' (ID: 656)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' that' (ID: 484)
  Prédit: ' file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' file' → logprob: -0.6133862137794495
    2. ' the' → logprob: -0.8633862137794495
    3. 'the' → logprob: -3.6133861541748047
    4. 'file' → logprob: -4.738386154174805
    5. ' files' → logprob: -7.363386154174805
    6. ' ' → logprob: -9.113386154174805
    7. '    ' → logprob: -9.613386154174805
    8. ' that' → logprob: -10.113386154174805
    9. ' a' → logprob: -10.238386154174805
    10. ' each' → logprob: -10.488386154174805

Token 84: ' file' (ID: 1974)
  Prédit: ' file'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' file' → logprob: -0.02345265820622444
    2. 'file' → logprob: -3.7734527587890625
    3. '_file' → logprob: -9.648452758789062
    4. '<|end|>' → logprob: -10.398452758789062
    5. 'space' → logprob: -10.648452758789062
    6. ' ' → logprob: -10.648452758789062
    7. ' user' → logprob: -10.898452758789062
    8. ' space' → logprob: -11.898452758789062
    9. '	file' → logprob: -12.273452758789062
    10. '[file' → logprob: -12.398452758789062

Token 85: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.18684734404087067
    2. '       ' → logprob: -1.9368473291397095
    3. ' self' → logprob: -3.936847448348999
    4. '{}' → logprob: -5.06184720993042
    5. ' ' → logprob: -8.811847686767578
    6. '   ' → logprob: -9.561847686767578
    7. '{' → logprob: -9.686847686767578
    8. '	self' → logprob: -10.061847686767578
    9. '        ' → logprob: -10.186847686767578
    10. ' {}' → logprob: -10.436847686767578

Token 88: '.file' (ID: 17613)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6979497075080872
    2. '.file' → logprob: -0.6979497075080872
    3. '.free' → logprob: -5.6979498863220215
    4. ' .' → logprob: -6.9479498863220215
    5. '.user' → logprob: -8.197949409484863
    6. '.filename' → logprob: -9.947949409484863
    7. '.File' → logprob: -10.572949409484863
    8. '.files' → logprob: -11.072949409484863
    9. '.fre' → logprob: -11.697949409484863
    10. ').' → logprob: -11.822949409484863

Token 89: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.00014084660506341606
    2. '_' → logprob: -9.250141143798828
    3. '_maps' → logprob: -10.750141143798828
    4. '_mapping' → logprob: -12.125141143798828
    5. '_id' → logprob: -12.250141143798828
    6. ' _' → logprob: -12.625141143798828
    7. 's' → logprob: -13.125141143798828
    8. '_s' → logprob: -13.375141143798828
    9. '_m' → logprob: -13.750141143798828
    10. '_ids' → logprob: -14.500141143798828

Token 90: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20156292617321014
    2. ' =' → logprob: -1.7015628814697266
    3. '={}' → logprob: -8.826562881469727
    4. '=[]' → logprob: -13.951562881469727
    5. ' ' → logprob: -14.076562881469727
    6. '[' → logprob: -15.326562881469727
    7. '   ' → logprob: -15.451562881469727
    8. ' ={' → logprob: -15.576562881469727
    9. '={' → logprob: -16.076562881469727
    10. ')' → logprob: -16.076562881469727

Token 91: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.005295665469020605
    2. ' {}' → logprob: -5.255295753479004
    3. 'dict' → logprob: -9.755295753479004
    4. ' dict' → logprob: -13.380295753479004
    5. '{' → logprob: -13.630295753479004
    6. ' defaultdict' → logprob: -14.880295753479004
    7. '={}' → logprob: -15.130295753479004
    8. '{}
' → logprob: -15.880295753479004
    9. '{}

' → logprob: -16.005294799804688
    10. 'default' → logprob: -16.380294799804688

Token 92: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049196403473615646
    2. 'def' → logprob: -3.549196481704712
    3. '
' → logprob: -4.674196243286133
    4. '    
' → logprob: -5.549196243286133
    5. ' def' → logprob: -6.299196243286133
    6. '<|end|>' → logprob: -6.299196243286133
    7. ' ' → logprob: -7.299196243286133
    8. ' 
' → logprob: -8.049196243286133
    9. '  ' → logprob: -8.174196243286133
    10. ')' → logprob: -8.799196243286133

Token 93: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31466931104660034
    2. 'def' → logprob: -1.4396693706512451
    3. '
' → logprob: -3.814669370651245
    4. '    
' → logprob: -5.439669132232666
    5. ' def' → logprob: -5.689669132232666
    6. ' ' → logprob: -7.064669132232666
    7. ' 
' → logprob: -7.689669132232666
    8. ')' → logprob: -7.939669132232666
    9. '<|end|>' → logprob: -7.939669132232666
    10. '  ' → logprob: -8.439669609069824

Token 94: ' occupied' (ID: 46186)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.7568541169166565
    2. ' def' → logprob: -1.5068540573120117
    3. 'next' → logprob: -2.8818540573120117
    4. 'def' → logprob: -3.1318540573120117
    5. ' free' → logprob: -3.1318540573120117
    6. ' used' → logprob: -3.2568540573120117
    7. ' total' → logprob: -3.5068540573120117
    8. ' allocated' → logprob: -4.256854057312012
    9. 'used' → logprob: -4.631854057312012
    10. 'free' → logprob: -5.006854057312012

Token 95: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.646190881729126
    2. ' =' → logprob: -1.771190881729126
    3. '_se' → logprob: -2.271190881729126
    4. '_count' → logprob: -2.396190881729126
    5. '_sizes' → logprob: -3.646190881729126
    6. '_map' → logprob: -3.646190881729126
    7. '_set' → logprob: -4.146190643310547
    8. '_size' → logprob: -4.521190643310547
    9. '=' → logprob: -4.521190643310547
    10. '=set' → logprob: -5.896190643310547

Token 96: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.0735432505607605
    2. 'val' → logprob: -3.3235433101654053
    3. 'erv' → logprob: -4.073543071746826
    4. 'als' → logprob: -4.823543071746826
    5. '   ' → logprob: -5.823543071746826
    6. '```' → logprob: -6.573543071746826
    7. 't' → logprob: -6.698543071746826
    8. 'ter' → logprob: -7.323543071746826
    9. 'erval' → logprob: -7.698543071746826
    10. '=' → logprob: -7.698543071746826

Token 97: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0027578065637499094
    2. ':' → logprob: -6.627758026123047
    3. '=' → logprob: -6.627758026123047
    4. '=[]' → logprob: -9.752758026123047
    5. ' :' → logprob: -10.877758026123047
    6. ' ' → logprob: -11.252758026123047
    7. '   ' → logprob: -11.252758026123047
    8. '  ' → logprob: -13.752758026123047
    9. '    ' → logprob: -14.002758026123047
    10. '        ' → logprob: -14.377758026123047

Token 98: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.12704002857208252
    2. '[]' → logprob: -2.127039909362793
    3. ' ' → logprob: -10.502039909362793
    4. 'set' → logprob: -10.877039909362793
    5. ' set' → logprob: -11.127039909362793
    6. ' [' → logprob: -11.377039909362793
    7. '[' → logprob: -11.502039909362793
    8. ' [(' → logprob: -11.877039909362793
    9. 'list' → logprob: -12.502039909362793
    10. '[(' → logprob: -12.627039909362793

Token 99: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19437196850776672
    2. ' of' → logprob: -2.0693719387054443
    3. '<|end|>' → logprob: -3.1943719387054443
    4. '=[]' → logprob: -5.319372177124023
    5. '<|end|>' → logprob: -6.319372177124023
    6. '=' → logprob: -6.944372177124023
    7. 'of' → logprob: -7.569372177124023
    8. ':' → logprob: -7.944372177124023
    9. ' ' → logprob: -8.569372177124023
    10. ',' → logprob: -8.819372177124023

Token 100: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.02757050096988678
    2. '(' → logprob: -3.6525704860687256
    3. '(start' → logprob: -7.777570724487305
    4. ' ' → logprob: -8.402570724487305
    5. ' intervals' → logprob: -8.527570724487305
    6. '<|end|>' → logprob: -8.902570724487305
    7. ' tuples' → logprob: -9.152570724487305
    8. 'start' → logprob: -10.027570724487305
    9. '(int' → logprob: -10.652570724487305
    10. '(end' → logprob: -11.027570724487305

Token 101: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.04067818447947502
    2. ' start' → logprob: -3.2906782627105713
    3. 'end' → logprob: -6.165678024291992
    4. '0' → logprob: -8.040678024291992
    5. ' end' → logprob: -9.415678024291992
    6. ' (' → logprob: -9.790678024291992
    7. '(start' → logprob: -10.790678024291992
    8. '(' → logprob: -10.790678024291992
    9. ')' → logprob: -11.540678024291992
    10. ' ' → logprob: -11.915678024291992

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010518652852624655
    2. ',end' → logprob: -6.876051902770996
    3. ' ,' → logprob: -12.001051902770996
    4. ',start' → logprob: -12.876051902770996
    5. ')' → logprob: -13.376051902770996
    6. ',int' → logprob: -13.501051902770996
    7. '<|end|>' → logprob: -13.751051902770996
    8. ',
' → logprob: -13.876051902770996
    9. ',)' → logprob: -14.126051902770996
    10. ',user' → logprob: -14.626051902770996

Token 103: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.14277766644954681
    2. ' end' → logprob: -2.017777681350708
    3. 'start' → logprob: -9.267777442932129
    4. ' start' → logprob: -12.767777442932129
    5. ')' → logprob: -13.142777442932129
    6. ''end' → logprob: -14.017777442932129
    7. ' ' → logprob: -14.142777442932129
    8. '(end' → logprob: -14.767777442932129
    9. '	end' → logprob: -14.892777442932129
    10. ',end' → logprob: -15.517777442932129

Token 104: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4295271635055542
    2. ',' → logprob: -1.0545271635055542
    3. 's' → logprob: -8.179527282714844
    4. ' )' → logprob: -8.804527282714844
    5. '),' → logprob: -8.804527282714844
    6. ' ,' → logprob: -9.429527282714844
    7. ')s' → logprob: -10.304527282714844
    8. ',)' → logprob: -10.804527282714844
    9. '   ' → logprob: -11.054527282714844
    10. ' ' → logprob: -11.179527282714844

Token 105: ' file' (ID: 1974)
  Prédit: ' file'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' file' → logprob: -0.2022399753332138
    2. 'file' → logprob: -1.702239990234375
    3. ')' → logprob: -7.827239990234375
    4. 'fid' → logprob: -8.702239990234375
    5. '   ' → logprob: -10.202239990234375
    6. 'id' → logprob: -10.202239990234375
    7. ' fid' → logprob: -10.327239990234375
    8. ' ' → logprob: -10.327239990234375
    9. ' None' → logprob: -11.452239990234375
    10. 'f' → logprob: -11.702239990234375

Token 106: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.00011951648048125207
    2. 'id' → logprob: -9.37511920928955
    3. ')' → logprob: -11.12511920928955
    4. ' _' → logprob: -12.12511920928955
    5. '_' → logprob: -12.50011920928955
    6. '_ids' → logprob: -12.75011920928955
    7. ')_' → logprob: -13.12511920928955
    8. '<|end|>' → logprob: -13.25011920928955
    9. ' id' → logprob: -13.50011920928955
    10. '   ' → logprob: -13.87511920928955

Token 107: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009207503753714263
    2. ' )' → logprob: -7.00092077255249
    3. '),' → logprob: -12.625920295715332
    4. '   ' → logprob: -13.125920295715332
    5. ',' → logprob: -13.500920295715332
    6. ')
' → logprob: -13.625920295715332
    7. ' ' → logprob: -14.375920295715332
    8. 's' → logprob: -15.500920295715332
    9. '       ' → logprob: -16.00092124938965
    10. '))' → logprob: -16.12592124938965

Token 108: ' sorted' (ID: 20099)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05033539608120918
    2. '=[]' → logprob: -3.55033540725708
    3. ' ' → logprob: -4.80033540725708
    4. '=' → logprob: -4.92533540725708
    5. '   ' → logprob: -7.05033540725708
    6. ' sorted' → logprob: -7.17533540725708
    7. '        ' → logprob: -7.17533540725708
    8. '       ' → logprob: -7.42533540725708
    9. '<|end|>' → logprob: -7.92533540725708
    10. '  ' → logprob: -7.92533540725708

Token 109: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.2813843786716461
    2. 'by' → logprob: -1.4063843488693237
    3. '=' → logprob: -9.281384468078613
    4. '_by' → logprob: -9.531384468078613
    5. '   ' → logprob: -11.281384468078613
    6. 'key' → logprob: -11.531384468078613
    7. '_key' → logprob: -11.656384468078613
    8. '  ' → logprob: -12.156384468078613
    9. '    ' → logprob: -12.406384468078613
    10. ',' → logprob: -12.406384468078613

Token 110: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.25246259570121765
    2. 'start' → logprob: -1.50246262550354
    3. ' end' → logprob: -8.377462387084961
    4. 'end' → logprob: -9.002462387084961
    5. ' ' → logprob: -9.127462387084961
    6. '0' → logprob: -9.627462387084961
    7. '_start' → logprob: -13.002462387084961
    8. ')' → logprob: -13.877462387084961
    9. '1' → logprob: -14.502462387084961
    10. '    ' → logprob: -14.752462387084961

Token 111: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8628352880477905
    2. '<|end|>' → logprob: -1.6128352880477905
    3. '=' → logprob: -2.11283540725708
    4. '       ' → logprob: -2.73783540725708
    5. '   ' → logprob: -3.23783540725708
    6. ')' → logprob: -3.23783540725708
    7. ' ' → logprob: -3.73783540725708
    8. ',' → logprob: -4.11283540725708
    9. '<|end|>' → logprob: -4.23783540725708
    10. '=[]' → logprob: -4.36283540725708

Token 112: ' dis' (ID: 829)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.4142090380191803
    2. 'key' → logprob: -2.2892091274261475
    3. '<|end|>' → logprob: -2.2892091274261475
    4. ')' → logprob: -3.5392091274261475
    5. 'end' → logprob: -3.5392091274261475
    6. ' end' → logprob: -3.7892091274261475
    7. 'start' → logprob: -4.414208889007568
    8. '    ' → logprob: -4.664208889007568
    9. ' ' → logprob: -4.664208889007568
    10. ' start' → logprob: -5.414208889007568

Token 113: 'joint' (ID: 69164)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0037175416946411
    2. 'cuss' → logprob: -1.8787175416946411
    3. 'c' → logprob: -2.5037174224853516
    4. 'contin' → logprob: -2.8787174224853516
    5. 'ct' → logprob: -3.0037174224853516
    6. 'sc' → logprob: -3.2537174224853516
    7. 'card' → logprob: -3.2537174224853516
    8. 'continued' → logprob: -3.5037174224853516
    9. 'cont' → logprob: -3.8787174224853516
    10. 'continu' → logprob: -4.003717422485352

Token 114: ' intervals' (ID: 49900)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033777326345443726
    2. '   ' → logprob: -3.5337772369384766
    3. '<|end|>' → logprob: -6.283777236938477
    4. ')' → logprob: -7.533777236938477
    5. ' =' → logprob: -7.783777236938477
    6. ' ' → logprob: -8.033777236938477
    7. '=' → logprob: -8.533777236938477
    8. '        ' → logprob: -9.033777236938477
    9. '<|end|>' → logprob: -9.533777236938477
    10. '[]' → logprob: -9.533777236938477

Token 117: ' self' (ID: 1051)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.26487886905670166
    2. 'self' (adapté à ' self') → logprob: -1.5148788690567017
    3. '       ' → logprob: -5.014878749847412
    4. ' []' → logprob: -5.514878749847412
    5. ' self' → logprob: -6.764878749847412
    6. '   ' → logprob: -7.264878749847412
    7. '[])' → logprob: -9.01487922668457
    8. '[]
' → logprob: -9.76487922668457
    9. '=[]' → logprob: -9.88987922668457
    10. '[]}' → logprob: -10.26487922668457

Token 118: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3957155644893646
    2. '.free' → logprob: -1.270715594291687
    3. ' =' → logprob: -4.645715713500977
    4. '=' → logprob: -4.770715713500977
    5. '._' → logprob: -5.020715713500977
    6. '   ' → logprob: -5.145715713500977
    7. ' .' → logprob: -5.270715713500977
    8. '.inter' → logprob: -5.645715713500977
    9. '_free' → logprob: -6.145715713500977
    10. '_' → logprob: -7.020715713500977

Token 119: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.00028016636497341096
    2. 'free' → logprob: -8.375280380249023
    3. 'occup' → logprob: -10.750280380249023
    4. 'occ' → logprob: -11.500280380249023
    5. 'sorted' → logprob: -11.750280380249023
    6. ' occupied' → logprob: -12.500280380249023
    7. 'interval' → logprob: -14.125280380249023
    8. 'file' → logprob: -14.500280380249023
    9. 'visited' → logprob: -14.500280380249023
    10. 'sys' → logprob: -14.625280380249023

Token 120: ' =' (ID: 314)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inter' → logprob: -1.4021237802808173e-05
    2. '_' → logprob: -12.375014305114746
    3. '_ranges' → logprob: -12.500014305114746
    4. ' _' → logprob: -13.375014305114746
    5. '_segments' → logprob: -13.500014305114746
    6. ')_' → logprob: -13.875014305114746
    7. ')' → logprob: -15.750014305114746
    8. '_interrupt' → logprob: -15.750014305114746
    9. '```' → logprob: -15.875014305114746
    10. '_interval' → logprob: -16.00001335144043

Token 121: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.011068690568208694
    2. ' []' → logprob: -4.511068820953369
    3. '[]}' → logprob: -10.886068344116211
    4. '[]
' → logprob: -14.011068344116211
    5. ' ' → logprob: -14.386068344116211
    6. '[])' → logprob: -15.886068344116211
    7. '[]>' → logprob: -15.886068344116211
    8. '[' → logprob: -16.01106834411621
    9. '[]

' → logprob: -16.13606834411621
    10. '[]"' → logprob: -16.63606834411621

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2360284924507141
    2. 'def' → logprob: -1.8610284328460693
    3. '    
' → logprob: -3.6110284328460693
    4. '
' → logprob: -4.486028671264648
    5. '<|end|>' → logprob: -4.986028671264648
    6. ' def' → logprob: -5.111028671264648
    7. ' 
' → logprob: -6.361028671264648
    8. '	def' → logprob: -7.861028671264648
    9. '        
' → logprob: -8.111028671264648
    10. ')' → logprob: -8.486028671264648

Token 123: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0949372872710228
    2. '   ' → logprob: -3.094937324523926
    3. ' def' → logprob: -3.094937324523926
    4. '	def' → logprob: -12.469937324523926
    5. 'indent' → logprob: -12.844937324523926
    6. '    
' → logprob: -12.969937324523926
    7. 'de' → logprob: -13.344937324523926
    8. ' indentation' → logprob: -13.594937324523926
    9. 'ndef' → logprob: -14.969937324523926
    10. 'Indent' → logprob: -14.969937324523926

Token 124: ' _' (ID: 1175)
  Prédit: '_allocate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_allocate' → logprob: -0.777118980884552
    2. ' _' → logprob: -1.1521189212799072
    3. ' allocate' → logprob: -2.0271189212799072
    4. '_' → logprob: -3.1521189212799072
    5. '_alloc' → logprob: -3.7771189212799072
    6. ' def' → logprob: -5.277119159698486
    7. ' create' → logprob: -5.527119159698486
    8. ' ' → logprob: -5.527119159698486
    9. ' add' → logprob: -5.902119159698486
    10. ' space' → logprob: -6.402119159698486

Token 125: 'add' (ID: 964)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.026577893644571304
    2. 'merge' → logprob: -4.526577949523926
    3. 'add' → logprob: -4.651577949523926
    4. 'insert' → logprob: -5.401577949523926
    5. 'allocate' → logprob: -8.026577949523926
    6. '_find' → logprob: -8.401577949523926
    7. 'remove' → logprob: -8.901577949523926
    8. 'bis' → logprob: -8.901577949523926
    9. 'split' → logprob: -9.151577949523926
    10. 'search' → logprob: -9.151577949523926

Token 126: '_free' (ID: 21204)
  Prédit: '_free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_free' → logprob: -0.07487428188323975
    2. '_interval' → logprob: -2.8248744010925293
    3. '_' → logprob: -4.574874401092529
    4. '_file' → logprob: -7.074874401092529
    5. '_space' → logprob: -7.324874401092529
    6. '_fragment' → logprob: -8.199873924255371
    7. '_block' → logprob: -8.949873924255371
    8. '_inter' → logprob: -9.574873924255371
    9. '_chunk' → logprob: -9.699873924255371
    10. '_all' → logprob: -9.824873924255371

Token 127: '(self' (ID: 2402)
  Prédit: '_interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_interval' → logprob: -0.32033389806747437
    2. '_' → logprob: -1.3203339576721191
    3. '_inter' → logprob: -5.445333957672119
    4. '_space' → logprob: -6.945333957672119
    5. '_token' → logprob: -7.570333957672119
    6. '_free' → logprob: -8.070333480834961
    7. '_range' → logprob: -8.695333480834961
    8. '_chunk' → logprob: -8.945333480834961
    9. '_segment' → logprob: -9.195333480834961
    10. ' _' → logprob: -9.695333480834961

Token 128: ',' (ID: 11)
  Prédit: '_interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_interval' → logprob: -0.18770428001880646
    2. '(' → logprob: -2.81270432472229
    3. '_inter' → logprob: -3.31270432472229
    4. '(self' → logprob: -3.68770432472229
    5. '_' → logprob: -3.81270432472229
    6. ')' → logprob: -4.812704086303711
    7. ')_' → logprob: -5.312704086303711
    8. '_space' → logprob: -5.562704086303711
    9. ' (' → logprob: -5.937704086303711
    10. '_free' → logprob: -6.062704086303711

Token 129: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.7013850808143616
    2. 'start' → logprob: -0.7013850808143616
    3. 'interval' → logprob: -6.076385021209717
    4. ' self' → logprob: -6.201385021209717
    5. 'self' → logprob: -6.326385021209717
    6. ' l' → logprob: -7.201385021209717
    7. 'l' → logprob: -7.576385021209717
    8. ' interval' → logprob: -7.951385021209717
    9. ')' → logprob: -8.951385498046875
    10. ' new' → logprob: -9.326385498046875

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.839121826691553e-05
    2. ' ,' → logprob: -10.125078201293945
    3. ',end' → logprob: -10.250078201293945
    4. ',int' → logprob: -13.500078201293945
    5. ',start' → logprob: -14.375078201293945
    6. ',
' → logprob: -14.625078201293945
    7. '‌,' → logprob: -16.250078201293945
    8. '   ' → logprob: -16.500078201293945
    9. '<|end|>' → logprob: -16.750078201293945
    10. ',size' → logprob: -17.125078201293945

Token 131: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.20141734182834625
    2. 'end' → logprob: -1.701417326927185
    3. '   ' → logprob: -13.826416969299316
    4. '	end' → logprob: -13.951416969299316
    5. ',' → logprob: -14.326416969299316
    6. ',end' → logprob: -14.576416969299316
    7. ' ' → logprob: -15.076416969299316
    8. '_end' → logprob: -15.576416969299316
    9. '(end' → logprob: -15.701416969299316
    10. ''end' → logprob: -15.951416969299316

Token 132: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0020041766110807657
    2. '):
' → logprob: -6.252004146575928
    3. ')' → logprob: -10.752004623413086
    4. '):
' → logprob: -11.002004623413086
    5. ' ):' → logprob: -11.377004623413086
    6. '       ' → logprob: -11.627004623413086
    7. '   ' → logprob: -11.752004623413086
    8. ':' → logprob: -12.127004623413086
    9. '):

' → logprob: -13.252004623413086
    10. ',' → logprob: -13.502004623413086

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1364363580942154
    2. ':' → logprob: -2.6364364624023438
    3. '):' → logprob: -3.0114364624023438
    4. ',' → logprob: -5.511436462402344
    5. ')' → logprob: -6.511436462402344
    6. '   ' → logprob: -8.511436462402344
    7. '<|end|>' → logprob: -8.511436462402344
    8. '):
' → logprob: -8.886436462402344
    9. '        
' → logprob: -9.386436462402344
    10. ' ' → logprob: -9.386436462402344

Token 134: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10299238562583923
    2. '        ' → logprob: -2.602992296218872
    3. ' #' → logprob: -5.102992534637451
    4. ' ' → logprob: -5.352992534637451
    5. ' new' → logprob: -5.977992534637451
    6. '    ' → logprob: -6.227992534637451
    7. ' if' → logprob: -6.477992534637451
    8. '#' (adapté à ' #') → logprob: -6.602992534637451
    9. '   ' → logprob: -6.977992534637451
    10. ',' → logprob: -6.977992534637451

Token 135: ' Add' (ID: 4063)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pos' → logprob: -1.1796120405197144
    2. ' #' → logprob: -1.6796120405197144
    3. ' if' → logprob: -1.9296120405197144
    4. ' """' → logprob: -2.429612159729004
    5. '       ' → logprob: -2.554612159729004
    6. ' idx' → logprob: -2.804612159729004
    7. ' new' → logprob: -3.179612159729004
    8. ' i' → logprob: -3.679612159729004
    9. 'pos' → logprob: -4.304612159729004
    10. '#' → logprob: -4.554612159729004

Token 136: ' free' (ID: 2240)
  Prédit: ' free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' free' → logprob: -0.7798057198524475
    2. ' ' → logprob: -1.6548056602478027
    3. ' (' → logprob: -1.9048056602478027
    4. ')' → logprob: -3.0298056602478027
    5. '<|end|>' → logprob: -3.2798056602478027
    6. ' )' → logprob: -3.4048056602478027
    7. ' a' → logprob: -3.9048056602478027
    8. ' the' → logprob: -4.154805660247803
    9. '<|end|>' → logprob: -4.279805660247803
    10. ',' → logprob: -5.279805660247803

Token 137: ' interval' (ID: 17116)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.1461952030658722
    2. '_' → logprob: -2.64619517326355
    3. '_interval' → logprob: -3.27119517326355
    4. ' ' → logprob: -4.771195411682129
    5. ')' → logprob: -4.771195411682129
    6. ' _' → logprob: -6.021195411682129
    7. ' )' → logprob: -6.521195411682129
    8. ',' → logprob: -6.646195411682129
    9. ' interval' → logprob: -6.771195411682129
    10. ' intervals' → logprob: -6.896195411682129

Token 138: ' [' (ID: 723)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6613627076148987
    2. ')' → logprob: -1.536362648010254
    3. ',' → logprob: -2.036362648010254
    4. '(' → logprob: -3.036362648010254
    5. '   ' → logprob: -3.411362648010254
    6. '(self' → logprob: -4.161362648010254
    7. ' (' → logprob: -5.161362648010254
    8. '):
' → logprob: -5.411362648010254
    9. '        
' → logprob: -5.661362648010254
    10. '<|end|>' → logprob: -5.786362648010254

Token 139: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.03885354846715927
    2. ' start' → logprob: -3.288853645324707
    3. ',' → logprob: -7.163853645324707
    4. ')' → logprob: -10.913853645324707
    5. ',start' → logprob: -11.288853645324707
    6. ' ,' → logprob: -12.163853645324707
    7. '   ' → logprob: -14.788853645324707
    8. '(start' → logprob: -15.038853645324707
    9. 'end' → logprob: -15.038853645324707
    10. ' )' → logprob: -15.413853645324707

Token 140: ',end' (ID: 93014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006034302059561014
    2. ' ,' → logprob: -7.500603199005127
    3. ',end' → logprob: -10.000603675842285
    4. '   ' → logprob: -13.500603675842285
    5. ',start' → logprob: -13.750603675842285
    6. ',
' → logprob: -14.000603675842285
    7. '       ' → logprob: -14.875603675842285
    8. ',int' → logprob: -14.875603675842285
    9. '‌,' → logprob: -15.750603675842285
    10. ' ' → logprob: -16.00060272216797

Token 141: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08255799859762192
    2. ',' → logprob: -2.9575579166412354
    3. ' ]' → logprob: -3.8325579166412354
    4. ')' → logprob: -5.4575581550598145
    5. '],' → logprob: -7.5825581550598145
    6. '   ' → logprob: -8.082557678222656
    7. ']
' → logprob: -8.457557678222656
    8. ' ,' → logprob: -9.332557678222656
    9. '])' → logprob: -10.082557678222656
    10. ' )' → logprob: -10.207557678222656

Token 142: ' merge' (ID: 20345)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15998105704784393
    2. ' and' → logprob: -2.1599810123443604
    3. ' pos' → logprob: -4.9099812507629395
    4. ' idx' → logprob: -5.1599812507629395
    5. ' insert' → logprob: -5.6599812507629395
    6. ' merge' → logprob: -5.6599812507629395
    7. ' merging' → logprob: -6.0349812507629395
    8. ' i' → logprob: -6.2849812507629395
    9. ' if' → logprob: -6.5349812507629395
    10. ' with' → logprob: -6.9099812507629395

Token 143: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.2437102347612381
    2. ' ' → logprob: -2.4937102794647217
    3. ' intervals' → logprob: -2.6187102794647217
    4. ' if' → logprob: -3.8687102794647217
    5. ',' → logprob: -4.368710041046143
    6. ')' → logprob: -4.868710041046143
    7. ' ,' → logprob: -5.243710041046143
    8. ' into' → logprob: -5.493710041046143
    9. ' )' → logprob: -5.993710041046143
    10. 'with' → logprob: -6.243710041046143

Token 144: ' neighbors' (ID: 31655)
  Prédit: ' existing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' existing' → logprob: -0.07301969826221466
    2. ' the' → logprob: -4.073019504547119
    3. ' previous' → logprob: -4.198019504547119
    4. ' any' → logprob: -4.573019504547119
    5. ' adjacent' → logprob: -4.698019504547119
    6. 'existing' → logprob: -5.073019504547119
    7. ' intervals' → logprob: -5.448019504547119
    8. ' nearby' → logprob: -5.823019504547119
    9. ' neighboring' → logprob: -6.073019504547119
    10. ' self' → logprob: -7.198019504547119

Token 145: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03394903242588043
    2. ')' → logprob: -4.65894889831543
    3. '):
' → logprob: -5.28394889831543
    4. '   ' → logprob: -5.28394889831543
    5. '
' → logprob: -5.53394889831543
    6. '        
' → logprob: -5.78394889831543
    7. ':' → logprob: -6.28394889831543
    8. ',' → logprob: -6.78394889831543
    9. '(self' → logprob: -7.40894889831543
    10. '):' → logprob: -7.40894889831543

Token 146: ' possible' (ID: 4149)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.5813578963279724
    2. ' possible' → logprob: -0.9563578963279724
    3. 'possible' → logprob: -3.706357955932617
    4. ' necessary' → logprob: -4.206357955932617
    5. ' needed' → logprob: -4.706357955932617
    6. ' adjacent' → logprob: -5.581357955932617
    7. 'necessary' → logprob: -7.081357955932617
    8. '_possible' → logprob: -7.331357955932617
    9. 'needed' → logprob: -7.456357955932617
    10. ' existing' → logprob: -7.581357955932617

Token 147: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2922819256782532
    2. ')' → logprob: -2.0422818660736084
    3. '):
' → logprob: -3.2922818660736084
    4. ':' → logprob: -3.4172818660736084
    5. '):' → logprob: -3.4172818660736084
    6. '   ' → logprob: -5.0422821044921875
    7. '
' → logprob: -5.1672821044921875
    8. ':
' → logprob: -5.7922821044921875
    9. ',' → logprob: -6.2922821044921875
    10. '        
' → logprob: -6.7922821044921875

Token 148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08531267195940018
    2. ')' → logprob: -3.210312604904175
    3. '   ' → logprob: -3.960312604904175
    4. '):' → logprob: -4.460312843322754
    5. ':' → logprob: -5.210312843322754
    6. ',' → logprob: -6.085312843322754
    7. '):
' → logprob: -7.085312843322754
    8. ' ' → logprob: -7.335312843322754
    9. '
' → logprob: -7.835312843322754
    10. ' )' → logprob: -8.210312843322754

Token 149: ' fi' (ID: 6134)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32130053639411926
    2. 'pos' → logprob: -1.9463005065917969
    3. ' pos' → logprob: -2.821300506591797
    4. ' new' → logprob: -3.821300506591797
    5. 'idx' → logprob: -4.696300506591797
    6. ' i' → logprob: -4.696300506591797
    7. ' if' → logprob: -4.821300506591797
    8. ' idx' → logprob: -4.821300506591797
    9. 'i' → logprob: -4.946300506591797
    10. 'new' → logprob: -5.696300506591797

Token 150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10160654038190842
    2. 'nd' → logprob: -3.226606607437134
    3. 'rst' → logprob: -3.851606607437134
    4. '_start' → logprob: -4.601606369018555
    5. '=' → logprob: -4.976606369018555
    6. '_list' → logprob: -5.226606369018555
    7. 'r' → logprob: -5.601606369018555
    8. '_free' → logprob: -6.476606369018555
    9. '_idx' → logprob: -7.101606369018555
    10. '_index' → logprob: -7.101606369018555

Token 151: ' self' (ID: 1051)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.03832639381289482
    2. ' bis' → logprob: -3.2883265018463135
    3. 'self' → logprob: -8.663326263427734
    4. '0' → logprob: -9.163326263427734
    5. 'len' → logprob: -12.663326263427734
    6. ' self' → logprob: -13.413326263427734
    7. 'b' → logprob: -13.913326263427734
    8. ' ' → logprob: -14.288326263427734
    9. '   ' → logprob: -14.538326263427734
    10. 'bs' → logprob: -14.913326263427734

Token 152: '.free' (ID: 76674)
  Prédit: '.free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.free' → logprob: -0.0005542247672565281
    2. 'free' → logprob: -8.375554084777832
    3. '.' → logprob: -8.500554084777832
    4. '	free' → logprob: -10.250554084777832
    5. '_free' → logprob: -10.500554084777832
    6. '._' → logprob: -11.000554084777832
    7. '.fre' → logprob: -11.375554084777832
    8. '.b' → logprob: -11.625554084777832
    9. '.find' → logprob: -12.500554084777832
    10. '_.' → logprob: -12.750554084777832

Token 153: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -6.988221684878226e-06
    2. '   ' → logprob: -13.250006675720215
    3. 'Intervals' → logprob: -14.000006675720215
    4. 'interval' → logprob: -14.250006675720215
    5. '       ' → logprob: -14.375006675720215
    6. '_interval' → logprob: -14.750006675720215
    7. '.inter' → logprob: -15.000006675720215
    8. '_indices' → logprob: -15.125006675720215
    9. '
' → logprob: -15.625006675720215
    10. '  ' → logprob: -15.625006675720215

Token 154: 'vals' (ID: 44567)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0031755755189806223
    2. 't' → logprob: -6.128175735473633
    3. 'vals' → logprob: -7.378175735473633
    4. 'rv' → logprob: -8.628175735473633
    5. 'ter' → logprob: -9.503175735473633
    6. 'rt' → logprob: -9.753175735473633
    7. 'val' → logprob: -10.753175735473633
    8. 'erv' → logprob: -12.003175735473633
    9. 'nts' → logprob: -12.628175735473633
    10. '```' → logprob: -12.628175735473633

Token 155: '
' (ID: 198)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.5497395992279053
    2. ' bis' → logprob: -2.1747395992279053
    3. '.insert' → logprob: -2.5497395992279053
    4. ',' → logprob: -2.5497395992279053
    5. ' =' → logprob: -3.2997395992279053
    6. '=' → logprob: -3.6747395992279053
    7. 'import' → logprob: -4.049739837646484
    8. ')' → logprob: -4.424739837646484
    9. '.append' → logprob: -4.674739837646484
    10. '
' → logprob: -4.924739837646484

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19495941698551178
    2. '
' → logprob: -2.3199594020843506
    3. ' =' → logprob: -3.3199594020843506
    4. '=' → logprob: -3.9449594020843506
    5. '        
' → logprob: -5.69495964050293
    6. ',' → logprob: -5.81995964050293
    7. '   ' → logprob: -5.81995964050293
    8. '[' → logprob: -6.19495964050293
    9. '_idx' → logprob: -6.19495964050293
    10. '_index' → logprob: -6.81995964050293

Token 157: ' pos' (ID: 1253)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5045419931411743
    2. ' pos' → logprob: -2.0045418739318848
    3. ' idx' → logprob: -2.0045418739318848
    4. 'i' → logprob: -2.7545418739318848
    5. 'pos' (adapté à ' pos') → logprob: -3.6295418739318848
    6. '       ' → logprob: -3.6295418739318848
    7. ' index' → logprob: -5.129541873931885
    8. 'idx' → logprob: -5.879541873931885
    9. 'index' → logprob: -6.879541873931885
    10. ' insert' → logprob: -9.629542350769043

Token 158: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023246178403496742
    2. '=' → logprob: -3.7732462882995605
    3. ' ' → logprob: -15.648245811462402
    4. ')' → logprob: -15.898245811462402
    5. '   ' → logprob: -16.14824676513672
    6. '_' → logprob: -16.14824676513672
    7. '=_' → logprob: -16.52324676513672
    8. 's' → logprob: -17.02324676513672
    9. ' =
' → logprob: -17.39824676513672
    10. ' _' → logprob: -17.52324676513672

Token 159: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.47407740354537964
    2. ' bis' → logprob: -0.9740774035453796
    3. 'b' → logprob: -15.349077224731445
    4. '0' → logprob: -16.224077224731445
    5. 'len' → logprob: -17.099077224731445
    6. 'bs' → logprob: -17.474077224731445
    7. 'Bis' → logprob: -17.974077224731445
    8. ' ' → logprob: -18.099077224731445
    9. 'bi' → logprob: -18.599077224731445
    10. '	b' → logprob: -18.599077224731445

Token 160: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.00013715129171032459
    2. 'sect' → logprob: -9.375137329101562
    3. 'ects' → logprob: -10.125137329101562
    4. 'e' → logprob: -12.375137329101562
    5. 'lect' → logprob: -13.125137329101562
    6. '_left' → logprob: -13.625137329101562
    7. 'ec' → logprob: -13.750137329101562
    8. 'ectl' → logprob: -14.125137329101562
    9. 'ct' → logprob: -14.750137329101562
    10. 'left' → logprob: -14.750137329101562

Token 161: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.004190229345113039
    2. '_left' → logprob: -6.129190444946289
    3. '.' → logprob: -6.254190444946289
    4. '.ins' → logprob: -9.504190444946289
    5. '_right' → logprob: -12.379190444946289
    6. ' .' → logprob: -13.754190444946289
    7. '.left' → logprob: -15.129190444946289
    8. '._' → logprob: -16.37919044494629
    9. ').' → logprob: -16.62919044494629
    10. '_.' → logprob: -16.75419044494629

Token 162: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0016553020104765892
    2. 'ist' → logprob: -6.751655101776123
    3. 's' → logprob: -8.251655578613281
    4. '_left' → logprob: -9.001655578613281
    5. 'sect' → logprob: -10.251655578613281
    6. 'left' → logprob: -11.126655578613281
    7. '(is' → logprob: -12.376655578613281
    8. '[' → logprob: -12.376655578613281
    9. 'si' → logprob: -12.501655578613281
    10. '   ' → logprob: -12.626655578613281

Token 163: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -3.9292415749514475e-05
    2. 'ect' → logprob: -10.250039100646973
    3. '(ct' → logprob: -14.000039100646973
    4. 'sect' → logprob: -14.250039100646973
    5. 'n' → logprob: -14.375039100646973
    6. '```' → logprob: -15.250039100646973
    7. 'с' → logprob: -15.375039100646973
    8. 'st' → logprob: -16.00004005432129
    9. 't' → logprob: -16.12504005432129
    10. ' ct' → logprob: -16.25004005432129

Token 164: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.030109474435448647
    2. '(fi' → logprob: -3.655109405517578
    3. 'left' → logprob: -5.780109405517578
    4. '_right' → logprob: -7.530109405517578
    5. '(pos' → logprob: -10.030109405517578
    6. 'Left' → logprob: -10.405109405517578
    7. 'fi' → logprob: -10.655109405517578
    8. '(f' → logprob: -11.030109405517578
    9. ')' → logprob: -11.405109405517578
    10. '(left' → logprob: -11.780109405517578

Token 165: '(fi' (ID: 180137)
  Prédit: '(fi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fi' → logprob: -2.2961512513575144e-05
    2. '(' → logprob: -11.375022888183594
    3. 'fi' → logprob: -11.875022888183594
    4. '(self' → logprob: -12.625022888183594
    5. '	fi' → logprob: -14.875022888183594
    6. ' (' → logprob: -14.875022888183594
    7. 'self' → logprob: -15.875022888183594
    8. ' fi' → logprob: -16.250022888183594
    9. '(fid' → logprob: -16.875022888183594
    10. '(
' → logprob: -17.250022888183594

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018101456225849688
    2. ' ,' → logprob: -9.500181198120117
    3. ',(' → logprob: -9.750181198120117
    4. ',start' → logprob: -10.000181198120117
    5. '   ' → logprob: -14.500181198120117
    6. '(' → logprob: -14.875181198120117
    7. ',pos' → logprob: -15.000181198120117
    8. ' ' → logprob: -15.000181198120117
    9. '(start' → logprob: -15.250181198120117
    10. ',
' → logprob: -15.250181198120117

Token 167: ' (' (ID: 350)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.005279295612126589
    2. ' (' → logprob: -5.255279064178467
    3. '(end' → logprob: -10.630279541015625
    4. '(' → logprob: -12.255279541015625
    5. '[start' → logprob: -12.380279541015625
    6. '   ' → logprob: -12.880279541015625
    7. ' ' → logprob: -12.880279541015625
    8. '(Start' → logprob: -12.880279541015625
    9. ')' → logprob: -13.630279541015625
    10. '(stop' → logprob: -14.130279541015625

Token 168: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -3.054500666621607e-06
    2. ' start' → logprob: -13.00000286102295
    3. 'end' → logprob: -14.12500286102295
    4. ')' → logprob: -17.750003814697266
    5. '(start' → logprob: -17.875003814697266
    6. '   ' → logprob: -18.000003814697266
    7. ',start' → logprob: -19.625003814697266
    8. '[start' → logprob: -19.875003814697266
    9. '
' → logprob: -20.250003814697266
    10. ':start' → logprob: -21.000003814697266

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002106959465891123
    2. ',end' → logprob: -6.3771071434021
    3. ',
' → logprob: -8.877106666564941
    4. ' ,' → logprob: -9.252106666564941
    5. ',start' → logprob: -10.002106666564941
    6. '))' → logprob: -10.252106666564941
    7. '-' → logprob: -10.377106666564941
    8. ')' → logprob: -11.502106666564941
    9. ',)' → logprob: -11.502106666564941
    10. '<|end|>' → logprob: -11.877106666564941

Token 170: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.02285592071712017
    2. '0' → logprob: -3.8978559970855713
    3. 'start' → logprob: -6.397855758666992
    4. ' end' → logprob: -7.647855758666992
    5. '))' → logprob: -9.647855758666992
    6. ' ' → logprob: -10.272855758666992
    7. '-' → logprob: -10.522855758666992
    8. ')' → logprob: -11.272855758666992
    9. 'float' → logprob: -11.897855758666992
    10. '))
' → logprob: -12.397855758666992

Token 171: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00034511767444200814
    2. '))
' → logprob: -8.250345230102539
    3. ')' → logprob: -9.875345230102539
    4. ' ))' → logprob: -10.500345230102539
    5. ')))' → logprob: -13.875345230102539
    6. '))

' → logprob: -14.000345230102539
    7. '),' → logprob: -14.125345230102539
    8. '       ' → logprob: -14.375345230102539
    9. '   ' → logprob: -14.500345230102539
    10. ' ' → logprob: -15.125345230102539

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017382532358169556
    2. '        
' → logprob: -4.892382621765137
    3. '
' → logprob: -5.017382621765137
    4. ' if' → logprob: -7.142382621765137
    5. ')' → logprob: -7.267382621765137
    6. 'if' → logprob: -8.267382621765137
    7. '   ' → logprob: -8.267382621765137
    8. '<|end|>' → logprob: -8.392382621765137
    9. ' 
' → logprob: -8.517382621765137
    10. '    
' → logprob: -8.892382621765137

Token 173: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.29122114181518555
    2. ' if' → logprob: -1.5412211418151855
    3. '#' (adapté à ' #') → logprob: -3.9162211418151855
    4. '       ' → logprob: -4.4162211418151855
    5. ' #' → logprob: -5.5412211418151855
    6. '   ' → logprob: -6.4162211418151855
    7. 'while' → logprob: -8.291221618652344
    8. 'prev' → logprob: -8.666221618652344
    9. 'merge' → logprob: -9.166221618652344
    10. 'left' → logprob: -9.541221618652344

Token 174: ' Try' (ID: 14720)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07976775616407394
    2. ' if' → logprob: -2.9547677040100098
    3. '       ' → logprob: -4.70476770401001
    4. 'left' → logprob: -5.07976770401001
    5. '#' → logprob: -5.20476770401001
    6. ' left' → logprob: -7.07976770401001
    7. 'merge' → logprob: -7.07976770401001
    8. 'prev' → logprob: -7.45476770401001
    9. 'start' → logprob: -7.57976770401001
    10. ' #' → logprob: -8.579768180847168

Token 175: ' merge' (ID: 20345)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4216725528240204
    2. ':' → logprob: -1.6716725826263428
    3. 'to' → logprob: -2.0466725826263428
    4. ':
' → logprob: -3.9216725826263428
    5. 'ing' → logprob: -5.671672344207764
    6. '   ' → logprob: -6.296672344207764
    7. ' merging' → logprob: -6.921672344207764
    8. '_merge' → logprob: -8.921672821044922
    9. 'merge' → logprob: -9.046672821044922
    10. 'if' → logprob: -9.171672821044922

Token 176: ' left' (ID: 3561)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03274289146065712
    2. '       ' → logprob: -3.782742977142334
    3. 'if' → logprob: -4.782742977142334
    4. ' with' → logprob: -8.157742500305176
    5. '   ' → logprob: -8.407742500305176
    6. ',' → logprob: -9.282742500305176
    7. ' ' → logprob: -9.407742500305176
    8. '    ' → logprob: -9.532742500305176
    9. 'd' → logprob: -9.657742500305176
    10. '        ' → logprob: -10.032742500305176

Token 177: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1431051343679428
    2. '       ' → logprob: -2.1431050300598145
    3. 'if' → logprob: -4.8931050300598145
    4. '   ' → logprob: -6.0181050300598145
    5. ',' → logprob: -6.2681050300598145
    6. ' =' → logprob: -7.0181050300598145
    7. '    ' → logprob: -7.5181050300598145
    8. '
' → logprob: -7.6431050300598145
    9. '=' → logprob: -7.8931050300598145
    10. '        ' → logprob: -8.143105506896973

Token 178: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08834904432296753
    2. 'if' → logprob: -2.5883491039276123
    3. '       ' → logprob: -5.463348865509033
    4. '
' → logprob: -6.463348865509033
    5. 'pos' → logprob: -6.588348865509033
    6. '   ' → logprob: -6.963348865509033
    7. ' pos' → logprob: -8.838349342346191
    8. '[pos' → logprob: -9.088349342346191
    9. ' 
' → logprob: -9.213349342346191
    10. ',' → logprob: -9.213349342346191

Token 179: ' left' (ID: 3561)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.30370068550109863
    2. 'if' → logprob: -1.5537006855010986
    3. 'pos' → logprob: -3.4287006855010986
    4. ' pos' → logprob: -4.0537004470825195
    5. '       ' → logprob: -7.8037004470825195
    6. '   ' → logprob: -9.17870044708252
    7. '(pos' → logprob: -10.80370044708252
    8. ' (' → logprob: -11.05370044708252
    9. '    ' → logprob: -11.05370044708252
    10. '
' → logprob: -11.17870044708252

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6482027769088745
    2. '_pos' → logprob: -1.5232027769088745
    3. '_idx' → logprob: -1.8982027769088745
    4. '=' → logprob: -2.523202896118164
    5. 'pos' → logprob: -4.648202896118164
    6. 'if' → logprob: -5.148202896118164
    7. '_index' → logprob: -5.773202896118164
    8. '_start' → logprob: -5.898202896118164
    9. '_merge' → logprob: -5.898202896118164
    10. ' if' → logprob: -6.648202896118164

Token 181: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.03378850594162941
    2. ' pos' → logprob: -3.4087884426116943
    3. '(pos' → logprob: -9.283788681030273
    4. '   ' → logprob: -11.158788681030273
    5. 'fi' → logprob: -12.033788681030273
    6. ' (' → logprob: -12.158788681030273
    7. '	pos' → logprob: -12.158788681030273
    8. 'start' → logprob: -12.783788681030273
    9. 'None' → logprob: -12.908788681030273
    10. '0' → logprob: -12.908788681030273

Token 182: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38687190413475037
    2. '-' → logprob: -1.1368719339370728
    3. '   ' → logprob: -15.261872291564941
    4. ' ' → logprob: -15.511872291564941
    5. '1' → logprob: -15.636872291564941
    6. '>' → logprob: -16.761871337890625
    7. ' ' → logprob: -16.886871337890625
    8. '
' → logprob: -17.136871337890625
    9. '−' → logprob: -17.261871337890625
    10. '–' → logprob: -17.386871337890625

Token 183: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.000045776367188
    4. '```' → logprob: -19.125045776367188
    5. '
' → logprob: -19.625045776367188
    6. '2' → logprob: -19.937545776367188
    7. '１' → logprob: -20.937545776367188
    8. '0' → logprob: -21.000045776367188
    9. '۱' → logprob: -21.000045776367188
    10. '<|end|>' → logprob: -21.062545776367188

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -19.812501907348633
    4. '2' → logprob: -20.062501907348633
    5. '۱' → logprob: -20.062501907348633
    6. '   ' → logprob: -20.187501907348633
    7. '<|end|>' → logprob: -20.750001907348633
    8. '１' → logprob: -21.125001907348633
    9. '১' → logprob: -21.250001907348633
    10. '१' → logprob: -21.500001907348633

Token 185: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4379009008407593
    2. ' if' → logprob: -1.1879009008407593
    3. 'if' → logprob: -3.937901020050049
    4. '<|end|>' → logprob: -4.437901020050049
    5. '       ' → logprob: -5.187901020050049
    6. ' 
' → logprob: -5.437901020050049
    7. ')' → logprob: -6.437901020050049
    8. ',' → logprob: -6.812901020050049
    9. '  
' → logprob: -6.937901020050049
    10. '   ' → logprob: -7.187901020050049

Token 186: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5033044219017029
    2. '
' → logprob: -1.2533044815063477
    3. 'if' → logprob: -3.0033044815063477
    4. '       ' → logprob: -3.2533044815063477
    5. '<|end|>' → logprob: -5.253304481506348
    6. '   ' → logprob: -5.753304481506348
    7. ' 
' → logprob: -6.003304481506348
    8. ',' → logprob: -6.128304481506348
    9. '	if' → logprob: -6.253304481506348
    10. '        
' → logprob: -6.628304481506348

Token 187: ' right' (ID: 1849)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.577039361000061
    2. 'if' → logprob: -0.827039361000061
    3. 'while' → logprob: -7.9520392417907715
    4. ' while' → logprob: -8.57703971862793
    5. '	if' → logprob: -8.95203971862793
    6. '
' → logprob: -9.20203971862793
    7. '   ' → logprob: -9.20203971862793
    8. ')' → logprob: -9.57703971862793
    9. ' ' → logprob: -9.95203971862793
    10. '       ' → logprob: -10.32703971862793

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196925416588783
    2. '=' → logprob: -2.81196928024292
    3. ' ' → logprob: -13.436968803405762
    4. ',' → logprob: -17.561969757080078
    5. ')' → logprob: -17.936969757080078
    6. ' =
' → logprob: -18.061969757080078
    7. '   ' → logprob: -18.186969757080078
    8. '	' → logprob: -18.311969757080078
    9. '<|end|>' → logprob: -18.686969757080078
    10. '    ' → logprob: -18.936969757080078

Token 189: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.4740777611732483
    2. 'pos' → logprob: -0.9740777611732483
    3. '	pos' → logprob: -14.974078178405762
    4. '(pos' → logprob: -15.349078178405762
    5. '0' → logprob: -16.724077224731445
    6. '[pos' → logprob: -17.224077224731445
    7. '_pos' → logprob: -17.599077224731445
    8. '.pos' → logprob: -17.974077224731445
    9. ' ' → logprob: -18.349077224731445
    10. '   ' → logprob: -18.474077224731445

Token 190: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7607309222221375
    2. '<|end|>' → logprob: -1.7607309818267822
    3. '
' → logprob: -2.5107309818267822
    4. '       ' → logprob: -2.6357309818267822
    5. '   ' → logprob: -2.8857309818267822
    6. 'if' → logprob: -3.0107309818267822
    7. ' ' → logprob: -3.5107309818267822
    8. '<|end|>' → logprob: -4.260730743408203
    9. ')' → logprob: -4.385730743408203
    10. '    ' → logprob: -4.760730743408203

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.955891489982605
    2. ' if' → logprob: -1.080891489982605
    3. '<|end|>' → logprob: -2.2058916091918945
    4. '
' → logprob: -3.0808916091918945
    5. 'if' → logprob: -3.0808916091918945
    6. '   ' → logprob: -4.0808916091918945
    7. '        
' → logprob: -4.3308916091918945
    8. ' ' → logprob: -4.5808916091918945
    9. '        ' → logprob: -4.9558916091918945
    10. '	if' → logprob: -5.0808916091918945

Token 192: ' new' (ID: 620)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.34162214398384094
    2. ' if' → logprob: -1.3416221141815186
    3. '       ' → logprob: -3.8416221141815186
    4. 'while' → logprob: -5.841622352600098
    5. '   ' → logprob: -6.216622352600098
    6. ' while' → logprob: -7.466622352600098
    7. '
' → logprob: -8.216622352600098
    8. '        ' → logprob: -8.591622352600098
    9. '        
' → logprob: -9.091622352600098
    10. ')' → logprob: -9.091622352600098

Token 193: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.2023065686225891
    2. '_interval' → logprob: -1.7023065090179443
    3. '_inter' → logprob: -7.577306747436523
    4. ' =' → logprob: -8.202306747436523
    5. 'start' → logprob: -10.077306747436523
    6. '_free' → logprob: -11.327306747436523
    7. '_' → logprob: -11.452306747436523
    8. 'interval' → logprob: -11.702306747436523
    9. '=' → logprob: -12.327306747436523
    10. '_pos' → logprob: -12.452306747436523

Token 194: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10695295035839081
    2. ' =' → logprob: -2.3569529056549072
    3. '=start' → logprob: -5.106953144073486
    4. ',' → logprob: -7.356953144073486
    5. ',start' → logprob: -10.481952667236328
    6. '=end' → logprob: -13.981952667236328
    7. ' ,' → logprob: -14.231952667236328
    8. ' start' → logprob: -14.606952667236328
    9. 'start' → logprob: -15.106952667236328
    10. '=
' → logprob: -15.481952667236328

Token 195: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.25372835993766785
    2. 'new' → logprob: -1.5037283897399902
    3. 'end' → logprob: -6.75372838973999
    4. ' end' → logprob: -7.37872838973999
    5. '_new' → logprob: -12.503727912902832
    6. 'New' → logprob: -13.503727912902832
    7. ' ' → logprob: -15.003727912902832
    8. '=end' → logprob: -15.003727912902832
    9. '    ' → logprob: -15.628727912902832
    10. '	new' → logprob: -16.12872886657715

Token 196: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.03948700800538063
    2. 'end' → logprob: -3.28948712348938
    3. '_start' → logprob: -6.664486885070801
    4. '=end' → logprob: -9.5394868850708
    5. '_' → logprob: -10.4144868850708
    6. '=' → logprob: -11.1644868850708
    7. 'start' → logprob: -11.4144868850708
    8. '_free' → logprob: -11.4144868850708
    9. ' =' → logprob: -11.9144868850708
    10. ' end' → logprob: -12.0394868850708

Token 197: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3876723349094391
    2. ' =' → logprob: -1.1376723051071167
    3. '=start' → logprob: -7.137672424316406
    4. ',' → logprob: -12.262672424316406
    5. ',start' → logprob: -14.137672424316406
    6. ' start' → logprob: -15.387672424316406
    7. 'start' → logprob: -15.637672424316406
    8. ' ' → logprob: -15.887672424316406
    9. '=end' → logprob: -16.012672424316406
    10. ')' → logprob: -16.387672424316406

Token 198: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.25193077325820923
    2. 'start' → logprob: -1.5019307136535645
    3. '(start' → logprob: -14.126931190490723
    4. ' ' → logprob: -15.001931190490723
    5. '	start' → logprob: -15.376931190490723
    6. '=start' → logprob: -16.251930236816406
    7. '   ' → logprob: -17.126930236816406
    8. '[start' → logprob: -17.251930236816406
    9. ',start' → logprob: -17.251930236816406
    10. '_start' → logprob: -17.626930236816406

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013652353081852198
    2. ',
' → logprob: -7.0013651847839355
    3. ',new' → logprob: -8.376365661621094
    4. '<|end|>' → logprob: -8.751365661621094
    5. ',end' → logprob: -10.501365661621094
    6. '<|end|>' → logprob: -11.001365661621094
    7. ' ,' → logprob: -11.126365661621094
    8. 'new' → logprob: -13.501365661621094
    9. ' new' → logprob: -13.751365661621094
    10. ',

' → logprob: -14.126365661621094

Token 200: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.2014138251543045
    2. ' end' → logprob: -1.701413869857788
    3. ' ' → logprob: -14.826414108276367
    4. '(end' → logprob: -15.951414108276367
    5. '	end' → logprob: -17.076414108276367
    6. '=end' → logprob: -17.576414108276367
    7. '_end' → logprob: -17.951414108276367
    8. 'End' → logprob: -18.076414108276367
    9. '[end' → logprob: -18.076414108276367
    10. '   ' → logprob: -18.076414108276367

Token 201: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4129903316497803
    2. '
' → logprob: -1.9129903316497803
    3. '<|end|>' → logprob: -2.1629903316497803
    4. ' if' → logprob: -3.0379903316497803
    5. 'if' → logprob: -4.912990570068359
    6. ')' → logprob: -5.662990570068359
    7. '        
' → logprob: -6.037990570068359
    8. ' 
' → logprob: -6.162990570068359
    9. '<|end|>' → logprob: -6.162990570068359
    10. ',' → logprob: -6.162990570068359

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18847842514514923
    2. ' if' → logprob: -1.9384784698486328
    3. 'if' → logprob: -4.563478469848633
    4. '<|end|>' → logprob: -4.813478469848633
    5. '   ' → logprob: -5.813478469848633
    6. ' while' → logprob: -6.188478469848633
    7. 'while' → logprob: -6.688478469848633
    8. ')' → logprob: -6.938478469848633
    9. '
' → logprob: -7.188478469848633
    10. ' ' → logprob: -8.063478469848633

Token 203: ' to' (ID: 316)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7444880604743958
    2. 'if' → logprob: -1.244488000869751
    3. '       ' → logprob: -1.494488000869751
    4. 'while' → logprob: -4.99448823928833
    5. ' while' → logprob: -6.11948823928833
    6. '
' → logprob: -7.24448823928833
    7. '        ' → logprob: -7.36948823928833
    8. '        
' → logprob: -7.49448823928833
    9. '<|end|>' → logprob: -7.61948823928833
    10. '   ' → logprob: -7.86948823928833

Token 204: '_del' (ID: 39544)
  Prédit: '_remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -0.40178945660591125
    2. '_merge' → logprob: -1.1517894268035889
    3. 'remove' → logprob: -4.901789665222168
    4. '_delete' → logprob: -5.151789665222168
    5. '_' → logprob: -7.776789665222168
    6. 'merge' → logprob: -8.151789665222168
    7. '_del' → logprob: -9.276789665222168
    8. '   ' → logprob: -9.526789665222168
    9. '_replace' → logprob: -9.526789665222168
    10. '_REMOVE' → logprob: -9.651789665222168

Token 205: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5307813882827759
    2. ' =' → logprob: -1.1557813882827759
    3. 'ete' → logprob: -2.7807812690734863
    4. 'te' → logprob: -3.9057812690734863
    5. '=[]' → logprob: -4.280781269073486
    6. '=[]
' → logprob: -7.405781269073486
    7. 'ate' → logprob: -8.780781745910645
    8. '_pos' → logprob: -10.030781745910645
    9. '   ' → logprob: -10.405781745910645
    10. ',' → logprob: -10.530781745910645

Token 206: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.282920129597187e-05
    2. ' []' → logprob: -11.750012397766113
    3. '[]
' → logprob: -12.875012397766113
    4. 'set' → logprob: -13.750012397766113
    5. '[]}' → logprob: -14.125012397766113
    6. '[' → logprob: -15.625012397766113
    7. '[]

' → logprob: -15.625012397766113
    8. '[]>' → logprob: -16.50001335144043
    9. '0' → logprob: -17.12501335144043
    10. '[],' → logprob: -17.12501335144043

Token 207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5960700511932373
    2. ' if' → logprob: -1.2210700511932373
    3. 'if' → logprob: -1.9710700511932373
    4. '<|end|>' → logprob: -4.346070289611816
    5. '   ' → logprob: -7.096070289611816
    6. ')' → logprob: -8.096070289611816
    7. ',' → logprob: -9.221070289611816
    8. '        ' → logprob: -9.221070289611816
    9. '<|end|>' → logprob: -9.221070289611816
    10. '        
' → logprob: -9.471070289611816

Token 208: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7032630443572998
    2. 'if' (adapté à ' if') → logprob: -0.9532630443572998
    3. '       ' → logprob: -2.4532630443573
    4. '<|end|>' → logprob: -3.8282630443573
    5. 'while' → logprob: -4.953263282775879
    6. ' while' → logprob: -6.078263282775879
    7. 'for' → logprob: -7.578263282775879
    8. ' for' → logprob: -7.578263282775879
    9. ' ' → logprob: -8.078263282775879
    10. '        ' → logprob: -8.328263282775879

Token 209: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.4741326868534088
    2. 'left' → logprob: -0.9741326570510864
    3. '	left' → logprob: -10.849132537841797
    4. ' ' → logprob: -11.099132537841797
    5. '0' → logprob: -11.599132537841797
    6. '   ' → logprob: -11.974132537841797
    7. '(left' → logprob: -12.724132537841797
    8. '_left' → logprob: -14.599132537841797
    9. '  ' → logprob: -14.849132537841797
    10. '.left' → logprob: -14.974132537841797

Token 210: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.2519509494304657
    2. ' >=' → logprob: -1.501950979232788
    3. ')>=' → logprob: -11.751951217651367
    4. ' ' → logprob: -11.876951217651367
    5. ']>=' → logprob: -12.001951217651367
    6. ')' → logprob: -15.251951217651367
    7. '==' → logprob: -15.626951217651367
    8. '   ' → logprob: -16.251951217651367
    9. '>' → logprob: -16.251951217651367
    10. '!=' → logprob: -17.001951217651367

Token 211: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002185118617489934
    2. ' ' → logprob: -6.127185344696045
    3. '1' → logprob: -16.877185821533203
    4. '   ' → logprob: -17.252185821533203
    5. '۰' → logprob: -18.314685821533203
    6. '  ' → logprob: -18.564685821533203
    7. '=' → logprob: -19.189685821533203
    8. '<|end|>' → logprob: -19.314685821533203
    9. '00' → logprob: -19.377185821533203
    10. '
' → logprob: -19.627185821533203

Token 212: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '۰' → logprob: -18.250051498413086
    4. '   ' → logprob: -20.125051498413086
    5. '1' → logprob: -20.562551498413086
    6. '00' → logprob: -20.687551498413086
    7. '<|end|>' → logprob: -20.750051498413086
    8. '
' → logprob: -20.875051498413086
    9. '０' → logprob: -21.000051498413086
    10. '=' → logprob: -21.000051498413086

Token 213: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1276845484972
    2. 'and' → logprob: -2.1276845932006836
    3. ':
' → logprob: -7.377684593200684
    4. ':' → logprob: -9.252684593200684
    5. '   ' → logprob: -11.127684593200684
    6. '       ' → logprob: -11.252684593200684
    7. ' ' → logprob: -12.877684593200684
    8. '           ' → logprob: -13.127684593200684
    9. '	and' → logprob: -13.502684593200684
    10. '):
' → logprob: -15.127684593200684

Token 214: ' fi' (ID: 6134)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -4.787507714354433e-05
    2. ' fi' → logprob: -10.12504768371582
    3. '	fi' → logprob: -12.12504768371582
    4. '(fi' → logprob: -13.50004768371582
    5. '   ' → logprob: -14.25004768371582
    6. 'f' → logprob: -16.62504768371582
    7. 'self' → logprob: -16.62504768371582
    8. '       ' → logprob: -16.75004768371582
    9. 'Fi' → logprob: -16.87504768371582
    10. '           ' → logprob: -17.12504768371582

Token 215: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -4.727905979962088e-05
    2. 'left' → logprob: -10.50004768371582
    3. '[' → logprob: -11.75004768371582
    4. '][' → logprob: -11.87504768371582
    5. ':left' → logprob: -13.50004768371582
    6. '[right' → logprob: -13.87504768371582
    7. ')[' → logprob: -14.00004768371582
    8. '[
' → logprob: -14.62504768371582
    9. '(left' → logprob: -14.75004768371582
    10. ' left' → logprob: -15.00004768371582

Token 216: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002144431695342064
    2. '[' → logprob: -6.7521443367004395
    3. ')[' → logprob: -7.1271443367004395
    4. ']' → logprob: -9.752144813537598
    5. ' ][' → logprob: -10.377144813537598
    6. '   ' → logprob: -10.752144813537598
    7. ' ' → logprob: -11.377144813537598
    8. ')][' → logprob: -11.377144813537598
    9. '1' → logprob: -11.627144813537598
    10. ''][' → logprob: -12.252144813537598

Token 217: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3080716346157715e-05
    2. '
' → logprob: -11.125022888183594
    3. ' ' → logprob: -12.125022888183594
    4. '   ' → logprob: -14.250022888183594
    5. '0' → logprob: -15.187522888183594
    6. '

' → logprob: -15.250022888183594
    7. '[' → logprob: -15.625022888183594
    8. '    
' → logprob: -15.625022888183594
    9. ' 
' → logprob: -15.937522888183594
    10. ']' → logprob: -15.937522888183594

Token 218: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.829756498336792
    2. '>=' → logprob: -1.079756498336792
    3. ' +' → logprob: -2.079756498336792
    4. ' >=' → logprob: -2.454756498336792
    5. ']>=' → logprob: -5.329756736755371
    6. ')>=' → logprob: -5.829756736755371
    7. ')' → logprob: -5.954756736755371
    8. ' ' → logprob: -6.579756736755371
    9. ']' → logprob: -7.454756736755371
    10. ')+' → logprob: -7.829756736755371

Token 219: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8162405490875244
    2. '>=' → logprob: -0.8162405490875244
    3. ' +' → logprob: -2.6912405490875244
    4. ' >=' → logprob: -3.0662405490875244
    5. ' ' → logprob: -7.441240310668945
    6. '==' → logprob: -7.941240310668945
    7. ']>=' → logprob: -8.691240310668945
    8. ')>=' → logprob: -9.066240310668945
    9. '
' → logprob: -10.441240310668945
    10. ' ' → logprob: -10.566240310668945

Token 220: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.375040054321289
    4. '  ' → logprob: -18.12504005432129
    5. '    ' → logprob: -18.25004005432129
    6. '```' → logprob: -18.50004005432129
    7. '
' → logprob: -18.87504005432129
    8. '       ' → logprob: -19.75004005432129
    9. '#' → logprob: -20.12504005432129
    10. '+' → logprob: -20.25004005432129

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -18.000059127807617
    4. '
' → logprob: -18.375059127807617
    5. '<|end|>' → logprob: -19.125059127807617
    6. '    ' → logprob: -19.812559127807617
    7. '0' → logprob: -19.875059127807617
    8. '=' → logprob: -20.062559127807617
    9. 'import' → logprob: -20.062559127807617
    10. '  ' → logprob: -20.125059127807617

Token 222: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.38705381751060486
    2. ' >=' → logprob: -1.1370538473129272
    3. ')>=' → logprob: -9.762053489685059
    4. ' ' → logprob: -9.887053489685059
    5. ']>=' → logprob: -9.887053489685059
    6. '==' → logprob: -11.637053489685059
    7. ')' → logprob: -12.137053489685059
    8. ' ==' → logprob: -13.637053489685059
    9. '	' → logprob: -13.887053489685059
    10. '   ' → logprob: -13.887053489685059

Token 223: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.8569521307945251
    2. 'new' → logprob: -0.9819521307945251
    3. ' new' → logprob: -1.85695219039917
    4. ' start' → logprob: -3.10695219039917
    5. ' ' → logprob: -10.231951713562012
    6. '   ' → logprob: -10.981951713562012
    7. '  ' → logprob: -11.856951713562012
    8. '	start' → logprob: -12.231951713562012
    9. '	new' → logprob: -12.231951713562012
    10. '
' → logprob: -12.606951713562012

Token 224: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.364187091588974
    2. ':' → logprob: -1.2391871213912964
    3. '       ' → logprob: -4.489187240600586
    4. '           ' → logprob: -5.614187240600586
    5. '):
' → logprob: -7.989187240600586
    6. ' and' → logprob: -8.864187240600586
    7. '<|end|>' → logprob: -9.614187240600586
    8. ' :
' → logprob: -10.114187240600586
    9. ',' → logprob: -10.239187240600586
    10. '<|end|>' → logprob: -10.864187240600586

Token 225: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22595329582691193
    2. '       ' → logprob: -1.7259533405303955
    3. ' new' → logprob: -4.225953102111816
    4. ':
' → logprob: -6.100953102111816
    5. ',' → logprob: -6.225953102111816
    6. ':' → logprob: -6.475953102111816
    7. 'new' → logprob: -6.725953102111816
    8. '
' → logprob: -7.225953102111816
    9. '<|end|>' → logprob: -7.350953102111816
    10. '):
' → logprob: -8.100953102111816

Token 226: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.08870464563369751
    2. 'new' (adapté à ' new') → logprob: -2.5887045860290527
    3. '       ' → logprob: -4.838704586029053
    4. '           ' → logprob: -6.713704586029053
    5. '   ' → logprob: -7.713704586029053
    6. '
' → logprob: -9.338705062866211
    7. '	new' → logprob: -9.963705062866211
    8. ' ' → logprob: -11.088705062866211
    9. ',new' → logprob: -11.713705062866211
    10. ',' → logprob: -12.588705062866211

Token 227: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -1.700132997939363e-05
    2. '_' → logprob: -12.375017166137695
    3. ' _' → logprob: -12.375017166137695
    4. 'start' → logprob: -12.375017166137695
    5. '_end' → logprob: -13.625017166137695
    6. 'Start' → logprob: -13.625017166137695
    7. '_START' → logprob: -14.125017166137695
    8. ' =' → logprob: -15.750017166137695
    9. '   ' → logprob: -16.375017166137695
    10. '```' → logprob: -16.625017166137695

Token 228: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11883138120174408
    2. ' =' → logprob: -2.2438313961029053
    3. ',' → logprob: -5.118831157684326
    4. ' ,' → logprob: -12.368831634521484
    5. '=
' → logprob: -13.243831634521484
    6. '=

' → logprob: -13.743831634521484
    7. ' ' → logprob: -14.993831634521484
    8. ' =
' → logprob: -14.993831634521484
    9. '   ' → logprob: -16.618831634521484
    10. ')' → logprob: -16.868831634521484

Token 229: ' fi' (ID: 6134)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.014192421920597553
    2. ' fi' → logprob: -4.264192581176758
    3. '	fi' → logprob: -10.514192581176758
    4. '(fi' → logprob: -13.514192581176758
    5. '   ' → logprob: -15.639192581176758
    6. 'f' → logprob: -16.514192581176758
    7. '.fi' → logprob: -16.889192581176758
    8. '-fi' → logprob: -17.514192581176758
    9. '           ' → logprob: -17.764192581176758
    10. ' fii' → logprob: -17.764192581176758

Token 230: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -2.816093228830141e-06
    2. 'left' → logprob: -12.87500286102295
    3. '[' → logprob: -16.375001907348633
    4. '[
' → logprob: -17.125001907348633
    5. ' left' → logprob: -18.875001907348633
    6. '(left' → logprob: -19.125001907348633
    7. ':left' → logprob: -19.375001907348633
    8. '	left' → logprob: -19.500001907348633
    9. '[l' → logprob: -20.000001907348633
    10. ' [' → logprob: -20.250001907348633

Token 231: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.34927114844322205
    2. '[' → logprob: -1.2242711782455444
    3. '0' → logprob: -7.599271297454834
    4. ')[' → logprob: -8.849270820617676
    5. ' ][' → logprob: -9.724270820617676
    6. ']' → logprob: -10.599270820617676
    7. ' [' → logprob: -11.099270820617676
    8. '
' → logprob: -11.349270820617676
    9. '"][' → logprob: -11.349270820617676
    10. '   ' → logprob: -11.599270820617676

Token 232: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.570319702499546e-05
    2. ' ' → logprob: -10.875025749206543
    3. '[' → logprob: -12.500025749206543
    4. '
' → logprob: -14.125025749206543
    5. '   ' → logprob: -14.625025749206543
    6. 'start' → logprob: -14.812525749206543
    7. '1' → logprob: -15.062525749206543
    8. '۰' → logprob: -15.250025749206543
    9. '<|end|>' → logprob: -15.437525749206543
    10. '  ' → logprob: -16.125024795532227

Token 233: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0708942636847496
    2. '<|end|>' → logprob: -3.320894241333008
    3. ']
' → logprob: -3.445894241333008
    4. '<|end|>' → logprob: -8.320894241333008
    5. ' ]' → logprob: -9.320894241333008
    6. '
' → logprob: -10.320894241333008
    7. ']

' → logprob: -11.445894241333008
    8. '](' → logprob: -11.445894241333008
    9. '],' → logprob: -11.695894241333008
    10. 'new' → logprob: -11.820894241333008

Token 234: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3578619062900543
    2. 'new' → logprob: -1.482861876487732
    3. ' new' → logprob: -2.6078619956970215
    4. ',' → logprob: -9.732861518859863
    5. '
' → logprob: -10.232861518859863
    6. '       ' → logprob: -10.857861518859863
    7. '   ' → logprob: -11.107861518859863
    8. ',new' → logprob: -11.482861518859863
    9. '_new' → logprob: -13.232861518859863
    10. '               ' → logprob: -13.982861518859863

Token 235: ' new' (ID: 620)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.08209249377250671
    2. 'new' (adapté à ' new') → logprob: -3.207092523574829
    3. '           ' → logprob: -3.332092523574829
    4. ' to' → logprob: -6.33209228515625
    5. ' new' → logprob: -7.83209228515625
    6. '       ' → logprob: -7.95709228515625
    7. 'del' → logprob: -10.20709228515625
    8. 'if' → logprob: -10.33209228515625
    9. '   ' → logprob: -11.08209228515625
    10. '
' → logprob: -12.45709228515625

Token 236: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.08920488506555557
    2. 'end' → logprob: -2.464204788208008
    3. '_start' → logprob: -8.589204788208008
    4. ' end' → logprob: -10.964204788208008
    5. '   ' → logprob: -11.464204788208008
    6. '[' → logprob: -11.714204788208008
    7. 'End' → logprob: -11.839204788208008
    8. 'start' → logprob: -12.589204788208008
    9. '	end' → logprob: -12.714204788208008
    10. '
' → logprob: -12.839204788208008

Token 237: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741583466529846
    2. '=' → logprob: -0.9741583466529846
    3. ',' → logprob: -10.22415828704834
    4. '=max' → logprob: -10.34915828704834
    5. '<|end|>' → logprob: -12.22415828704834
    6. ')' → logprob: -12.22415828704834
    7. 'max' → logprob: -13.72415828704834
    8. ' ' → logprob: -14.72415828704834
    9. ' max' → logprob: -14.97415828704834
    10. ']' → logprob: -14.97415828704834

Token 238: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5759506821632385
    2. 'max' → logprob: -0.8259506821632385
    3. 'end' → logprob: -11.950950622558594
    4. ' end' → logprob: -12.700950622558594
    5. '(max' → logprob: -14.200950622558594
    6. 'fi' → logprob: -15.075950622558594
    7. '	max' → logprob: -15.450950622558594
    8. '   ' → logprob: -16.075950622558594
    9. ' fi' → logprob: -16.325950622558594
    10. '=max' → logprob: -16.450950622558594

Token 239: '(fi' (ID: 180137)
  Prédit: '(fi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fi' → logprob: -4.751746746478602e-05
    2. 'fi' → logprob: -10.25004768371582
    3. '(' → logprob: -11.87504768371582
    4. '(new' → logprob: -12.37504768371582
    5. '	fi' → logprob: -14.50004768371582
    6. ' fi' → logprob: -15.75004768371582
    7. '(end' → logprob: -15.87504768371582
    8. 'new' → logprob: -17.00004768371582
    9. '(fin' → logprob: -17.12504768371582
    10. ' (' → logprob: -17.25004768371582

Token 240: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -7.171581091824919e-05
    2. '[end' → logprob: -10.12507152557373
    3. '[right' → logprob: -10.75007152557373
    4. 'left' → logprob: -12.37507152557373
    5. '[pos' → logprob: -13.62507152557373
    6. '(left' → logprob: -13.75007152557373
    7. '[' → logprob: -13.75007152557373
    8. '[new' → logprob: -14.37507152557373
    9. ')' → logprob: -14.50007152557373
    10. ')[' → logprob: -15.25007152557373

Token 241: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006279755849391222
    2. '[' → logprob: -5.256279945373535
    3. ')[' → logprob: -7.131279945373535
    4. ' ][' → logprob: -9.381279945373535
    5. '   ' → logprob: -10.131279945373535
    6. ']' → logprob: -10.506279945373535
    7. '1' → logprob: -10.506279945373535
    8. '])[' → logprob: -10.881279945373535
    9. ''][' → logprob: -11.256279945373535
    10. ')][' → logprob: -11.756279945373535

Token 242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. '[' → logprob: -12.125011444091797
    3. ' ' → logprob: -12.750011444091797
    4. '   ' → logprob: -13.750011444091797
    5. '
' → logprob: -14.562511444091797
    6. '][' → logprob: -14.937511444091797
    7. '```' → logprob: -15.437511444091797
    8. ']' → logprob: -15.500011444091797
    9. '۱' → logprob: -15.812511444091797
    10. 'end' → logprob: -16.312511444091797

Token 243: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010039615444839
    2. ',end' → logprob: -5.010039806365967
    3. ' ,' → logprob: -5.760039806365967
    4. 'end' → logprob: -9.760039329528809
    5. ',new' → logprob: -10.010039329528809
    6. '),' → logprob: -10.510039329528809
    7. '],' → logprob: -10.635039329528809
    8. ' end' → logprob: -12.385039329528809
    9. 'new' → logprob: -12.635039329528809
    10. '},' → logprob: -14.260039329528809

Token 244: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.05708717182278633
    2. ' end' → logprob: -2.9320871829986572
    3. 'new' → logprob: -6.432086944580078
    4. ' new' → logprob: -7.682086944580078
    5. '   ' → logprob: -9.307086944580078
    6. ' ' → logprob: -10.932086944580078
    7. '           ' → logprob: -12.057086944580078
    8. '       ' → logprob: -12.307086944580078
    9. '  ' → logprob: -12.307086944580078
    10. '    ' → logprob: -13.432086944580078

Token 245: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1129433736205101
    2. ')
' → logprob: -2.237943410873413
    3. '       ' → logprob: -9.737943649291992
    4. ')
' → logprob: -10.862943649291992
    5. ' )' → logprob: -10.862943649291992
    6. '           ' → logprob: -11.737943649291992
    7. ' )
' → logprob: -11.862943649291992
    8. ')

' → logprob: -12.612943649291992
    9. '<|end|>' → logprob: -13.612943649291992
    10. '   ' → logprob: -13.862943649291992

Token 246: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008135913871228695
    2. 'to' → logprob: -4.883135795593262
    3. ' to' → logprob: -8.133135795593262
    4. '       ' → logprob: -8.383135795593262
    5. '   ' → logprob: -12.133135795593262
    6. '               ' → logprob: -14.633135795593262
    7. '          ' → logprob: -15.008135795593262
    8. 'del' → logprob: -15.258135795593262
    9. 'pos' → logprob: -16.258136749267578
    10. '(to' → logprob: -16.258136749267578

Token 247: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.016006799414753914
    2. '           ' → logprob: -5.016006946563721
    3. '       ' → logprob: -5.266006946563721
    4. ' to' → logprob: -5.516006946563721
    5. '   ' → logprob: -9.891006469726562
    6. 'pos' → logprob: -11.766006469726562
    7. '               ' → logprob: -14.266006469726562
    8. '	to' → logprob: -14.516006469726562
    9. '         ' → logprob: -14.766006469726562
    10. '
' → logprob: -14.766006469726562

Token 248: '_del' (ID: 39544)
  Prédit: '_del'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_del' → logprob: -0.0004959598300047219
    2. 'del' → logprob: -7.625495910644531
    3. '	del' → logprob: -12.000495910644531
    4. 'el' → logprob: -14.000495910644531
    5. 'Del' → logprob: -15.125495910644531
    6. ' del' → logprob: -15.875495910644531
    7. '.del' → logprob: -16.00049591064453
    8. '_DEL' → logprob: -16.12549591064453
    9. '_delete' → logprob: -16.75049591064453
    10. '_el' → logprob: -16.75049591064453

Token 249: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0012123758206143975
    2. '.' → logprob: -6.7512125968933105
    3. ' .' → logprob: -10.251212120056152
    4. '.app' → logprob: -12.376212120056152
    5. '.ap' → logprob: -13.501212120056152
    6. 'append' → logprob: -14.126212120056152
    7. '.extend' → logprob: -16.12621307373047
    8. '=' → logprob: -16.62621307373047
    9. '.add' → logprob: -17.00121307373047
    10. ').' → logprob: -17.25121307373047

Token 250: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.001507601235061884
    2. 'left' → logprob: -6.501507759094238
    3. ' left' → logprob: -12.751507759094238
    4. '(fi' → logprob: -14.126507759094238
    5. '(' → logprob: -14.376507759094238
    6. '[left' → logprob: -14.876507759094238
    7. ',left' → logprob: -15.251507759094238
    8. '(
' → logprob: -15.626507759094238
    9. '	left' → logprob: -16.001506805419922
    10. ':left' → logprob: -16.751506805419922

Token 251: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005121642025187612
    2. ')
' → logprob: -7.62551212310791
    3. '<|end|>' → logprob: -11.25051212310791
    4. '       ' → logprob: -12.00051212310791
    5. ' )' → logprob: -12.75051212310791
    6. ')#' → logprob: -14.62551212310791
    7. '),' → logprob: -15.12551212310791
    8. ')

' → logprob: -15.37551212310791
    9. ')
' → logprob: -15.50051212310791
    10. ')return' → logprob: -15.62551212310791

Token 252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017008155584335327
    2. '<|end|>' → logprob: -4.142008304595947
    3. ' if' → logprob: -7.767008304595947
    4. '
' → logprob: -8.642007827758789
    5. ')' → logprob: -9.142007827758789
    6. '<|end|>' → logprob: -9.267007827758789
    7. '        
' → logprob: -10.142007827758789
    8. ',' → logprob: -10.642007827758789
    9. '           ' → logprob: -10.642007827758789
    10. '   ' → logprob: -10.767007827758789

Token 253: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35792315006256104
    2. ' if' → logprob: -1.482923150062561
    3. 'if' (adapté à ' if') → logprob: -2.6079230308532715
    4. '<|end|>' → logprob: -9.35792350769043
    5. '        ' → logprob: -10.60792350769043
    6. '
' → logprob: -10.73292350769043
    7. '   ' → logprob: -11.10792350769043
    8. '	if' → logprob: -11.35792350769043
    9. 'If' → logprob: -11.73292350769043
    10. 'for' → logprob: -11.85792350769043

Token 254: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.10022683441638947
    2. 'right' → logprob: -2.350226879119873
    3. ' pos' → logprob: -11.600226402282715
    4. 'pos' → logprob: -11.725226402282715
    5. ' ' → logprob: -13.350226402282715
    6. '	right' → logprob: -14.850226402282715
    7. '   ' → logprob: -14.975226402282715
    8. ' len' → logprob: -15.975226402282715
    9. 'left' → logprob: -16.22522735595703
    10. ' left' → logprob: -16.47522735595703

Token 255: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.046057023108005524
    2. '<' → logprob: -3.1710569858551025
    3. '<len' → logprob: -5.921057224273682
    4. ' <=' → logprob: -9.296056747436523
    5. '<size' → logprob: -9.546056747436523
    6. '<=' → logprob: -9.921056747436523
    7. ' >=' → logprob: -10.046056747436523
    8. '<n' → logprob: -10.171056747436523
    9. '>=' → logprob: -10.796056747436523
    10. ' ' → logprob: -11.421056747436523

Token 256: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.01815205067396164
    2. ' len' → logprob: -4.018152236938477
    3. '(len' → logprob: -13.643152236938477
    4. ' ' → logprob: -15.018152236938477
    5. '[len' → logprob: -15.143152236938477
    6. '=len' → logprob: -15.768152236938477
    7. '<len' → logprob: -16.768152236938477
    8. '   ' → logprob: -16.768152236938477
    9. ',len' → logprob: -17.143152236938477
    10. '	len' → logprob: -17.393152236938477

Token 257: '(fi' (ID: 180137)
  Prédit: '(fi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fi' → logprob: -0.10197509825229645
    2. 'fi' → logprob: -2.351975202560425
    3. ' fi' → logprob: -6.351974964141846
    4. '	fi' → logprob: -11.226975440979004
    5. '(f' → logprob: -11.976975440979004
    6. '(' → logprob: -13.101975440979004
    7. ' (' → logprob: -13.851975440979004
    8. 'Fi' → logprob: -14.351975440979004
    9. '   ' → logprob: -16.601974487304688
    10. '(fin' → logprob: -16.726974487304688

Token 258: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026966973673552275
    2. ' and' → logprob: -6.502696514129639
    3. ' )' → logprob: -7.127696514129639
    4. 'and' → logprob: -7.877696514129639
    5. '       ' → logprob: -12.877696990966797
    6. '）' → logprob: -12.877696990966797
    7. ']' → logprob: -13.377696990966797
    8. '):
' → logprob: -13.502696990966797
    9. '   ' → logprob: -14.002696990966797
    10. '])' → logprob: -14.877696990966797

Token 259: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06197183206677437
    2. 'and' → logprob: -2.81197190284729
    3. ' ' → logprob: -13.561971664428711
    4. '[' → logprob: -13.936971664428711
    5. '	and' → logprob: -14.186971664428711
    6. ')' → logprob: -15.061971664428711
    7. '       ' → logprob: -15.186971664428711
    8. '        ' → logprob: -15.561971664428711
    9. '<|end|>' → logprob: -16.06197166442871
    10. ' и' → logprob: -16.18697166442871

Token 260: ' fi' (ID: 6134)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.020602500066161156
    2. ' fi' → logprob: -3.8956024646759033
    3. '	fi' → logprob: -10.270602226257324
    4. '(fi' → logprob: -10.770602226257324
    5. '   ' → logprob: -13.020602226257324
    6. ' ' → logprob: -14.020602226257324
    7. 'new' → logprob: -14.395602226257324
    8. '  ' → logprob: -15.270602226257324
    9. '       ' → logprob: -15.645602226257324
    10. ' new' → logprob: -16.02060317993164

Token 261: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -6.749814019713085e-06
    2. '[' → logprob: -12.500006675720215
    3. 'right' → logprob: -13.500006675720215
    4. '[left' → logprob: -14.375006675720215
    5. ')[' → logprob: -15.250006675720215
    6. '[
' → logprob: -15.625006675720215
    7. '	right' → logprob: -16.12500762939453
    8. '
' → logprob: -16.50000762939453
    9. '(right' → logprob: -16.50000762939453
    10. ' [' → logprob: -16.62500762939453

Token 262: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003962278366088867
    2. '[' → logprob: -6.003962516784668
    3. ')[' → logprob: -6.753962516784668
    4. ')][' → logprob: -9.253962516784668
    5. ' ][' → logprob: -9.378962516784668
    6. '])[' → logprob: -9.878962516784668
    7. ']' → logprob: -10.253962516784668
    8. '   ' → logprob: -11.753962516784668
    9. '()][' → logprob: -11.753962516784668
    10. ' )[' → logprob: -11.753962516784668

Token 263: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.747814349073451e-05
    2. '1' → logprob: -12.000017166137695
    3. ' ' → logprob: -12.125017166137695
    4. '
' → logprob: -13.500017166137695
    5. '[' → logprob: -13.625017166137695
    6. 'start' → logprob: -13.687517166137695
    7. '][' → logprob: -14.562517166137695
    8. '   ' → logprob: -14.937517166137695
    9. ']' → logprob: -15.125017166137695
    10. '(' → logprob: -15.937517166137695

Token 264: ']' (ID: 60)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.01716800406575203
    2. '<=' → logprob: -4.517168045043945
    3. ')' → logprob: -5.767168045043945
    4. ']<=' → logprob: -6.892168045043945
    5. ' ' → logprob: -7.142168045043945
    6. ')<=' → logprob: -7.392168045043945
    7. ']' → logprob: -8.142168045043945
    8. ' -' → logprob: -9.642168045043945
    9. ' )' → logprob: -9.767168045043945
    10. ' ==' → logprob: -9.767168045043945

Token 265: ' -' (ID: 533)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.38691282272338867
    2. '<=' → logprob: -1.1369128227233887
    3. ')<=' → logprob: -11.136913299560547
    4. ' -' → logprob: -11.511913299560547
    5. '-' → logprob: -11.886913299560547
    6. ']<=' → logprob: -12.511913299560547
    7. '==' → logprob: -12.886913299560547
    8. ')' → logprob: -13.011913299560547
    9. ' ==' → logprob: -14.011913299560547
    10. ' ' → logprob: -14.261913299560547

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014233439229428768
    2. ' ' → logprob: -4.264233589172363
    3. ' new' → logprob: -10.014233589172363
    4. 'new' → logprob: -10.639233589172363
    5. '
' → logprob: -15.139233589172363
    6. '

' → logprob: -16.014232635498047
    7. ')' → logprob: -16.264232635498047
    8. ' <=' → logprob: -16.264232635498047
    9. '   ' → logprob: -16.389232635498047
    10. '>' → logprob: -16.514232635498047

Token 267: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.42872580885887146
    2. ' <=' → logprob: -1.0537258386611938
    3. ']<=' → logprob: -11.553726196289062
    4. ')<=' → logprob: -11.553726196289062
    5. '==' → logprob: -12.803726196289062
    6. ' ' → logprob: -13.803726196289062
    7. ')' → logprob: -14.303726196289062
    8. ' ==' → logprob: -14.678726196289062
    9. '<|end|>' → logprob: -15.303726196289062
    10. '>=' → logprob: -15.428726196289062

Token 268: ' end' (ID: 1268)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.7774912714958191
    2. ' new' → logprob: -1.0274913311004639
    3. 'end' → logprob: -1.9024913311004639
    4. ' end' → logprob: -3.402491331100464
    5. ' ' → logprob: -10.277491569519043
    6. 'max' → logprob: -12.777491569519043
    7. '   ' → logprob: -13.027491569519043
    8. '  ' → logprob: -13.152491569519043
    9. '	new' → logprob: -13.214991569519043
    10. ' max' → logprob: -13.402491569519043

Token 269: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.515899658203125
    2. ':' → logprob: -1.015899658203125
    3. '       ' → logprob: -3.890899658203125
    4. '           ' → logprob: -4.015899658203125
    5. ',' → logprob: -7.390899658203125
    6. '):
' → logprob: -7.390899658203125
    7. ' :
' → logprob: -8.265899658203125
    8. ' and' → logprob: -8.765899658203125
    9. ' :' → logprob: -8.765899658203125
    10. '   ' → logprob: -9.015899658203125

Token 270: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3468199074268341
    2. '       ' → logprob: -1.5968198776245117
    3. 'to' → logprob: -2.7218198776245117
    4. ' to' → logprob: -3.7218198776245117
    5. '   ' → logprob: -8.846819877624512
    6. ' new' → logprob: -9.346819877624512
    7. '(to' → logprob: -9.846819877624512
    8. ',' → logprob: -10.096819877624512
    9. 'new' → logprob: -10.096819877624512
    10. '               ' → logprob: -10.221819877624512

Token 271: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.16415762901306152
    2. 'new' (adapté à ' new') → logprob: -1.9141576290130615
    3. 'to' → logprob: -6.414157867431641
    4. '           ' → logprob: -6.664157867431641
    5. ' to' → logprob: -7.164157867431641
    6. '   ' → logprob: -8.78915786743164
    7. '       ' → logprob: -9.66415786743164
    8. '               ' → logprob: -12.66415786743164
    9. '    ' → logprob: -12.91415786743164
    10. ' ' → logprob: -13.03915786743164

Token 272: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.020554153248667717
    2. '_end' → logprob: -3.8955540657043457
    3. 'start' → logprob: -12.645554542541504
    4. '_' → logprob: -12.770554542541504
    5. 'Start' → logprob: -12.770554542541504
    6. '_START' → logprob: -14.020554542541504
    7. '_se' → logprob: -14.145554542541504
    8. '_Start' → logprob: -15.645554542541504
    9. 'End' → logprob: -16.020553588867188
    10. '=' → logprob: -16.145553588867188

Token 273: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6934248805046082
    2. ' =' → logprob: -0.6934248805046082
    3. ',' → logprob: -8.193425178527832
    4. ' ,' → logprob: -14.318425178527832
    5. ' ' → logprob: -15.443425178527832
    6. '=
' → logprob: -15.568425178527832
    7. ' =
' → logprob: -16.443424224853516
    8. '<|end|>' → logprob: -16.943424224853516
    9. '=

' → logprob: -17.318424224853516
    10. '   ' → logprob: -17.693424224853516

Token 274: ' min' (ID: 1349)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.2449980229139328
    2. 'min' → logprob: -2.119997978210449
    3. ' new' → logprob: -2.619997978210449
    4. ' min' → logprob: -3.869997978210449
    5. 'fi' → logprob: -5.744997978210449
    6. 'max' → logprob: -8.61999797821045
    7. 'start' → logprob: -8.86999797821045
    8. ' fi' → logprob: -9.86999797821045
    9. ' max' → logprob: -11.74499797821045
    10. ' start' → logprob: -12.24499797821045

Token 275: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -5.4192871175473556e-05
    2. 'new' → logprob: -10.500054359436035
    3. '(fi' → logprob: -10.625054359436035
    4. '(' → logprob: -13.250054359436035
    5. 'fi' → logprob: -15.500054359436035
    6. ' new' → logprob: -16.12505340576172
    7. ')new' → logprob: -16.87505340576172
    8. ',new' → logprob: -17.25005340576172
    9. '((' → logprob: -17.37505340576172
    10. '(f' → logprob: -17.75005340576172

Token 276: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.00231012306176126
    2. 'start' → logprob: -6.127310276031494
    3. 'right' → logprob: -10.502309799194336
    4. 'Start' → logprob: -10.627309799194336
    5. '[start' → logprob: -10.627309799194336
    6. '_end' → logprob: -11.127309799194336
    7. '_START' → logprob: -12.002309799194336
    8. 'new' → logprob: -12.002309799194336
    9. '_new' → logprob: -12.252309799194336
    10. '[' → logprob: -12.627309799194336

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.496052371105179e-05
    2. ' ,' → logprob: -9.37509536743164
    3. ',new' → logprob: -12.00009536743164
    4. '(fi' → logprob: -13.25009536743164
    5. ',
' → logprob: -14.50009536743164
    6. 'new' → logprob: -14.62509536743164
    7. '),' → logprob: -14.75009536743164
    8. 'fi' → logprob: -15.12509536743164
    9. '(),' → logprob: -16.50009536743164
    10. ',f' → logprob: -16.50009536743164

Token 278: ' fi' (ID: 6134)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -3.082895273109898e-05
    2. ' fi' → logprob: -10.500030517578125
    3. '	fi' → logprob: -13.375030517578125
    4. '(fi' → logprob: -13.500030517578125
    5. '   ' → logprob: -16.000030517578125
    6. 'f' → logprob: -16.750030517578125
    7. ')' → logprob: -17.000030517578125
    8. '  ' → logprob: -18.250030517578125
    9. ' ' → logprob: -18.375030517578125
    10. '       ' → logprob: -19.000030517578125

Token 279: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -7.5649528298527e-05
    2. 'right' → logprob: -9.500075340270996
    3. '[left' → logprob: -15.625075340270996
    4. '[' → logprob: -15.625075340270996
    5. '[
' → logprob: -15.750075340270996
    6. '
' → logprob: -16.125076293945312
    7. '(right' → logprob: -16.500076293945312
    8. '	right' → logprob: -16.625076293945312
    9. '   ' → logprob: -17.125076293945312
    10. ' right' → logprob: -17.125076293945312

Token 280: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2523517310619354
    2. '[right' → logprob: -1.5023517608642578
    3. 'right' → logprob: -8.877351760864258
    4. '   ' → logprob: -9.127351760864258
    5. ' ][' → logprob: -9.877351760864258
    6. ')[' → logprob: -9.877351760864258
    7. '(right' → logprob: -11.002351760864258
    8. '[' → logprob: -11.627351760864258
    9. '}[' → logprob: -11.877351760864258
    10. '[left' → logprob: -12.002351760864258

Token 281: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.65707261255011e-06
    2. ' ' → logprob: -12.000008583068848
    3. '   ' → logprob: -14.375008583068848
    4. '[' → logprob: -14.500008583068848
    5. 'right' → logprob: -14.625008583068848
    6. '[right' → logprob: -14.625008583068848
    7. '
' → logprob: -15.625008583068848
    8. '۰' → logprob: -16.375009536743164
    9. '    ' → logprob: -17.062509536743164
    10. '```' → logprob: -17.062509536743164

Token 282: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.005351636093109846
    2. ')' → logprob: -5.255351543426514
    3. ' )
' → logprob: -10.005352020263672
    4. '           ' → logprob: -10.380352020263672
    5. '       ' → logprob: -10.505352020263672
    6. ')
' → logprob: -11.880352020263672
    7. ')

' → logprob: -13.005352020263672
    8. '   ' → logprob: -13.755352020263672
    9. '())
' → logprob: -13.755352020263672
    10. '))
' → logprob: -15.005352020263672

Token 283: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08481724560260773
    2. ' to' → logprob: -3.2098171710968018
    3. 'to' → logprob: -3.2098171710968018
    4. '       ' → logprob: -7.959817409515381
    5. '   ' → logprob: -9.959816932678223
    6. '<|end|>' → logprob: -10.209816932678223
    7. '          ' → logprob: -10.459816932678223
    8. ' new' → logprob: -10.834816932678223
    9. ')' → logprob: -11.084816932678223
    10. '         ' → logprob: -11.334816932678223

Token 284: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.2014375925064087
    2. ' new' → logprob: -1.7014375925064087
    3. '           ' → logprob: -10.701437950134277
    4. '       ' → logprob: -14.576437950134277
    5. 'to' → logprob: -14.826437950134277
    6. '   ' → logprob: -15.201437950134277
    7. '	new' → logprob: -15.826437950134277
    8. ' ' → logprob: -16.45143699645996
    9. '(new' → logprob: -16.70143699645996
    10. ' to' → logprob: -16.70143699645996

Token 285: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -1.9504606825648807e-05
    2. 'end' → logprob: -11.375019073486328
    3. '=' → logprob: -12.375019073486328
    4. 'End' → logprob: -13.625019073486328
    5. '=end' → logprob: -14.375019073486328
    6. '_END' → logprob: -15.500019073486328
    7. ' =' → logprob: -15.500019073486328
    8. '[' → logprob: -15.625019073486328
    9. '_' → logprob: -15.625019073486328
    10. '       ' → logprob: -15.750019073486328

Token 286: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687121868133545
    2. '=' → logprob: -1.1368712186813354
    3. '=max' → logprob: -15.886871337890625
    4. ',' → logprob: -17.136871337890625
    5. ')' → logprob: -17.386871337890625
    6. ' ' → logprob: -17.761871337890625
    7. '<|end|>' → logprob: -18.636871337890625
    8. '    ' → logprob: -19.136871337890625
    9. '=
' → logprob: -19.511871337890625
    10. ' =
' → logprob: -19.511871337890625

Token 287: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12692926824092865
    2. ' max' → logprob: -2.12692928314209
    3. 'fi' → logprob: -13.87692928314209
    4. '(max' → logprob: -16.626928329467773
    5. ' fi' → logprob: -17.126928329467773
    6. '	max' → logprob: -17.251928329467773
    7. '=max' → logprob: -17.376928329467773
    8. '.max' → logprob: -18.501928329467773
    9. '_max' → logprob: -18.626928329467773
    10. '[max' → logprob: -18.876928329467773

Token 288: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -4.008129963040119e-06
    2. 'new' → logprob: -12.500003814697266
    3. '(' → logprob: -15.625003814697266
    4. ')new' → logprob: -17.875003814697266
    5. ' new' → logprob: -18.750003814697266
    6. '=new' → logprob: -19.250003814697266
    7. ',new' → logprob: -19.250003814697266
    8. '(fi' → logprob: -19.750003814697266
    9. '	new' → logprob: -19.875003814697266
    10. '[new' → logprob: -20.000003814697266

Token 289: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.012410052120685577
    2. 'end' → logprob: -4.5124101638793945
    3. '_start' → logprob: -7.0124101638793945
    4. '[end' → logprob: -8.512410163879395
    5. 'End' → logprob: -9.012410163879395
    6. '[' → logprob: -10.512410163879395
    7. '       ' → logprob: -11.137410163879395
    8. '   ' → logprob: -11.512410163879395
    9. '[right' → logprob: -11.512410163879395
    10. 'def' → logprob: -12.012410163879395

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005566088366322219
    2. ' ,' → logprob: -7.625556468963623
    3. ',end' → logprob: -10.250556945800781
    4. 'fi' → logprob: -11.000556945800781
    5. '),' → logprob: -12.500556945800781
    6. '(fi' → logprob: -12.500556945800781
    7. ',
' → logprob: -13.250556945800781
    8. ',new' → logprob: -13.750556945800781
    9. ')' → logprob: -13.750556945800781
    10. '       ' → logprob: -13.875556945800781

Token 291: ' fi' (ID: 6134)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.008635015226900578
    2. ' fi' → logprob: -4.7586350440979
    3. '(fi' → logprob: -11.133634567260742
    4. '	fi' → logprob: -12.133634567260742
    5. ')' → logprob: -16.008634567260742
    6. ' ' → logprob: -16.133634567260742
    7. 'f' → logprob: -16.883634567260742
    8. '   ' → logprob: -16.883634567260742
    9. '           ' → logprob: -17.508634567260742
    10. '       ' → logprob: -17.633634567260742

Token 292: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -6.704273118884885e-07
    2. 'right' → logprob: -14.625000953674316
    3. '[to' → logprob: -16.875
    4. '[end' → logprob: -17.125
    5. '
' → logprob: -17.75
    6. '[next' → logprob: -17.875
    7. '[left' → logprob: -18.0
    8. ')' → logprob: -18.375
    9. '][' → logprob: -18.5
    10. ')[' → logprob: -18.5

Token 293: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -8.363617962459102e-05
    2. '[' → logprob: -9.750083923339844
    3. ')[' → logprob: -11.750083923339844
    4. ' ][' → logprob: -12.000083923339844
    5. ']' → logprob: -12.375083923339844
    6. '   ' → logprob: -12.625083923339844
    7. ')][' → logprob: -13.500083923339844
    8. ''][' → logprob: -14.750083923339844
    9. '])[' → logprob: -14.750083923339844
    10. '"][' → logprob: -15.000083923339844

Token 294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -12.375006675720215
    3. '
' → logprob: -14.125006675720215
    4. ']' → logprob: -14.125006675720215
    5. '[' → logprob: -14.625006675720215
    6. '   ' → logprob: -15.812506675720215
    7. '],' → logprob: -16.31250762939453
    8. ')' → logprob: -16.56250762939453
    9. '```' → logprob: -17.00000762939453
    10. '])' → logprob: -17.12500762939453

Token 295: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5760030746459961
    2. ')' → logprob: -0.8260030746459961
    3. ')
' → logprob: -10.826003074645996
    4. ' )
' → logprob: -11.451003074645996
    5. '           ' → logprob: -12.201003074645996
    6. '       ' → logprob: -12.326003074645996
    7. ',' → logprob: -12.576003074645996
    8. ' )' → logprob: -12.576003074645996
    9. ')

' → logprob: -12.826003074645996
    10. '),' → logprob: -13.076003074645996

Token 296: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4386516511440277
    2. 'to' → logprob: -1.06365168094635
    3. '       ' → logprob: -5.3136515617370605
    4. ' to' → logprob: -5.3136515617370605
    5. '               ' → logprob: -11.438652038574219
    6. '[to' → logprob: -11.438652038574219
    7. '.to' → logprob: -11.813652038574219
    8. '(to' → logprob: -11.813652038574219
    9. '   ' → logprob: -12.438652038574219
    10. ',' → logprob: -13.188652038574219

Token 297: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.00047821682528592646
    2. '           ' → logprob: -8.00047779083252
    3. ' to' → logprob: -9.00047779083252
    4. '       ' → logprob: -11.00047779083252
    5. '               ' → logprob: -13.25047779083252
    6. '   ' → logprob: -14.00047779083252
    7. '                   ' → logprob: -16.375478744506836
    8. '	to' → logprob: -16.875478744506836
    9. '[to' → logprob: -18.750478744506836
    10. '         ' → logprob: -18.750478744506836

Token 298: '_del' (ID: 39544)
  Prédit: '_del'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_del' → logprob: -0.0005574395763687789
    2. 'del' → logprob: -7.5005574226379395
    3. '	del' → logprob: -13.375557899475098
    4. 'Del' → logprob: -13.500557899475098
    5. 'el' → logprob: -14.250557899475098
    6. '.del' → logprob: -15.125557899475098
    7. '-del' → logprob: -15.750557899475098
    8. ' del' → logprob: -16.75055694580078
    9. '_DEL' → logprob: -16.87555694580078
    10. '_d' → logprob: -17.00055694580078

Token 299: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001254693343071267
    2. '.' → logprob: -9.000125885009766
    3. 'append' → logprob: -13.875125885009766
    4. '.app' → logprob: -14.375125885009766
    5. ' .' → logprob: -15.500125885009766
    6. 'app' → logprob: -16.375125885009766
    7. '.Append' → logprob: -16.875125885009766
    8. '.add' → logprob: -17.250125885009766
    9. 'Append' → logprob: -17.875125885009766
    10. '.extend' → logprob: -18.000125885009766

Token 300: '(right' (ID: 52104)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.25195762515068054
    2. '(right' → logprob: -1.501957654953003
    3. ' right' → logprob: -10.501957893371582
    4. '[right' → logprob: -14.001957893371582
    5. '	right' → logprob: -16.001956939697266
    6. ',right' → logprob: -16.251956939697266
    7. ':right' → logprob: -18.751956939697266
    8. '.right' → logprob: -19.876956939697266
    9. '_right' → logprob: -21.001956939697266
    10. '
' → logprob: -21.251956939697266

Token 301: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00202880403958261
    2. '       ' → logprob: -6.627028942108154
    3. ')
' → logprob: -8.002028465270996
    4. '<|end|>' → logprob: -8.127028465270996
    5. ']' → logprob: -10.127028465270996
    6. ' )' → logprob: -11.502028465270996
    7. ')]' → logprob: -11.627028465270996
    8. '   ' → logprob: -12.877028465270996
    9. '<|end|>' → logprob: -12.877028465270996
    10. ')#' → logprob: -13.877028465270996

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11687074601650238
    2. 'for' → logprob: -2.741870641708374
    3. ' for' → logprob: -3.116870641708374
    4. '        
' → logprob: -7.866870880126953
    5. '   ' → logprob: -8.241870880126953
    6. '<|end|>' → logprob: -8.491870880126953
    7. ' if' → logprob: -9.241870880126953
    8. 'if' → logprob: -9.241870880126953
    9. '```' → logprob: -9.491870880126953
    10. ')' → logprob: -9.616870880126953

Token 303: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002758391434326768
    2. ' for' → logprob: -6.127758502960205
    3. '       ' → logprob: -7.502758502960205
    4. 'to' → logprob: -11.002758026123047
    5. '   ' → logprob: -12.877758026123047
    6. '	for' → logprob: -14.377758026123047
    7. 'new' → logprob: -14.627758026123047
    8. 'while' → logprob: -14.877758026123047
    9. 'if' → logprob: -15.377758026123047
    10. '           ' → logprob: -15.502758026123047

Token 304: ' Remove' (ID: 18141)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004130403511226177
    2. ' for' → logprob: -5.5041303634643555
    3. 'to' → logprob: -10.004130363464355
    4. '       ' → logprob: -12.129130363464355
    5. '#' → logprob: -14.254130363464355
    6. 'fi' → logprob: -15.504130363464355
    7. 'while' → logprob: -15.754130363464355
    8. '   ' → logprob: -15.879130363464355
    9. ' to' → logprob: -16.254131317138672
    10. 'new' → logprob: -17.254131317138672

Token 305: ' merged' (ID: 49536)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12755045294761658
    2. ' for' → logprob: -2.1275503635406494
    3. 'to' → logprob: -7.8775506019592285
    4. '       ' → logprob: -8.37755012512207
    5. ' to' → logprob: -11.87755012512207
    6. '   ' → logprob: -13.00255012512207
    7. '           ' → logprob: -13.12755012512207
    8. '	for' → logprob: -14.25255012512207
    9. '               ' → logprob: -15.00255012512207
    10. '```' → logprob: -15.12755012512207

Token 306: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.505131721496582
    2. ' indices' → logprob: -2.130131721496582
    3. 'indices' → logprob: -2.255131721496582
    4. 'for' → logprob: -2.755131721496582
    5. ' for' → logprob: -2.880131721496582
    6. 'interval' → logprob: -4.005131721496582
    7. ' positions' → logprob: -4.255131721496582
    8. 'positions' → logprob: -4.755131721496582
    9. 'indexes' → logprob: -5.005131721496582
    10. '_indices' → logprob: -6.755131721496582

Token 307: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5646383762359619
    2. ' for' → logprob: -1.189638376235962
    3. 'for' → logprob: -2.064638376235962
    4. '   ' → logprob: -8.814638137817383
    5. ',' → logprob: -10.064638137817383
    6. '<|end|>' → logprob: -11.689638137817383
    7. '	for' → logprob: -11.814638137817383
    8. ')' → logprob: -12.064638137817383
    9. 'to' → logprob: -12.439638137817383
    10. '
' → logprob: -12.439638137817383

Token 308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07280591875314713
    2. ' for' → logprob: -2.697805881500244
    3. 'for' → logprob: -5.947805881500244
    4. '<|end|>' → logprob: -9.197806358337402
    5. ',' → logprob: -9.447806358337402
    6. '   ' → logprob: -10.197806358337402
    7. '
' → logprob: -11.322806358337402
    8. '<|end|>' → logprob: -12.197806358337402
    9. '```' → logprob: -12.697806358337402
    10. '           ' → logprob: -12.947806358337402

Token 309: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.395002156496048
    2. 'for' (adapté à ' for') → logprob: -1.1450021266937256
    3. '       ' → logprob: -4.895002365112305
    4. 'to' → logprob: -7.645002365112305
    5. ' to' → logprob: -9.270002365112305
    6. '   ' → logprob: -11.270002365112305
    7. '	for' → logprob: -11.895002365112305
    8. '[::-' → logprob: -12.270002365112305
    9. '
' → logprob: -12.395002365112305
    10. '[to' → logprob: -12.770002365112305

Token 310: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10938918590545654
    2. 'idx' → logprob: -2.359389305114746
    3. 'index' → logprob: -4.859389305114746
    4. ' i' → logprob: -6.859389305114746
    5. ' idx' → logprob: -8.109389305114746
    6. ' index' → logprob: -10.484389305114746
    7. 'ix' → logprob: -12.359389305114746
    8. '   ' → logprob: -13.984389305114746
    9. 'd' → logprob: -14.984389305114746
    10. '
' → logprob: -15.234389305114746

Token 311: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05488701909780502
    2. 'in' → logprob: -2.929887056350708
    3. '	in' → logprob: -13.804886817932129
    4. 'i' → logprob: -14.179886817932129
    5. ' ' → logprob: -14.179886817932129
    6. 'n' → logprob: -14.554886817932129
    7. '_in' → logprob: -14.554886817932129
    8. '
' → logprob: -15.429886817932129
    9. '   ' → logprob: -15.679886817932129
    10. 'import' → logprob: -15.679886817932129

Token 312: ' reversed' (ID: 57184)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.5800390243530273
    2. 'sorted' → logprob: -0.8300390243530273
    3. 'to' → logprob: -5.580039024353027
    4. ' reversed' → logprob: -8.080039024353027
    5. '   ' → logprob: -12.330039024353027
    6. 'reverse' → logprob: -12.955039024353027
    7. ' sorted' → logprob: -13.330039024353027
    8. '(sorted' → logprob: -15.705039024353027
    9. '[::-' → logprob: -16.330039978027344
    10. ' ' → logprob: -16.455039978027344

Token 313: '(to' (ID: 24042)
  Prédit: '(to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(to' → logprob: -0.008618239313364029
    2. 'to' → logprob: -4.758618354797363
    3. '(sorted' → logprob: -12.508618354797363
    4. 'sorted' → logprob: -16.883617401123047
    5. '(' → logprob: -17.508617401123047
    6. '	to' → logprob: -17.633617401123047
    7. '[to' → logprob: -18.633617401123047
    8. ' to' → logprob: -19.258617401123047
    9. '(t' → logprob: -19.383617401123047
    10. '(range' → logprob: -19.633617401123047

Token 314: '_del' (ID: 39544)
  Prédit: '_del'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_del' → logprob: -0.0005048964521847665
    2. 'del' → logprob: -7.625504970550537
    3. 'el' → logprob: -12.125504493713379
    4. '	del' → logprob: -12.125504493713379
    5. 'to' → logprob: -13.125504493713379
    6. '_el' → logprob: -13.625504493713379
    7. 'Del' → logprob: -14.500504493713379
    8. ' del' → logprob: -14.875504493713379
    9. '_d' → logprob: -15.250504493713379
    10. ')' → logprob: -15.250504493713379

Token 315: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.34874340891838074
    2. '):' → logprob: -1.2237434387207031
    3. ':' → logprob: -8.723743438720703
    4. '):
' → logprob: -9.223743438720703
    5. '   ' → logprob: -11.723743438720703
    6. ':
' → logprob: -12.348743438720703
    7. '       ' → logprob: -12.473743438720703
    8. ' ):' → logprob: -12.598743438720703
    9. '():
' → logprob: -12.598743438720703
    10. ')' → logprob: -12.723743438720703

Token 316: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14406445622444153
    2. ' del' → logprob: -2.019064426422119
    3. 'del' → logprob: -8.144064903259277
    4. '	del' → logprob: -8.394064903259277
    5. ' fi' → logprob: -8.644064903259277
    6. '   ' → logprob: -8.894064903259277
    7. ',' → logprob: -9.019064903259277
    8. '	       ' → logprob: -9.269064903259277
    9. '<|end|>' → logprob: -9.394064903259277
    10. '```' → logprob: -9.519064903259277

Token 317: ' fi' (ID: 6134)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.07286809384822845
    2. 'fi' (adapté à ' fi') → logprob: -3.0728681087493896
    3. ' del' → logprob: -3.8228681087493896
    4. '           ' → logprob: -6.1978678703308105
    5. ' fi' → logprob: -9.697868347167969
    6. '   ' → logprob: -10.822868347167969
    7. '	del' → logprob: -12.197868347167969
    8. '	fi' → logprob: -13.822868347167969
    9. '               ' → logprob: -14.447868347167969
    10. '(fi' → logprob: -14.697868347167969

Token 318: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -9.674858301877975e-05
    2. '.' → logprob: -9.375096321105957
    3. 'pop' → logprob: -11.375096321105957
    4. '.del' → logprob: -15.750096321105957
    5. ' .' → logprob: -16.375097274780273
    6. '	pop' → logprob: -16.875097274780273
    7. '].' → logprob: -17.000097274780273
    8. '.remove' → logprob: -17.500097274780273
    9. ').' → logprob: -17.625097274780273
    10. ' pop' → logprob: -18.250097274780273

Token 319: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -7.107425062713446e-06
    2. '(' → logprob: -12.500006675720215
    3. 'i' → logprob: -12.625006675720215
    4. ' (' → logprob: -17.62500762939453
    5. '(
' → logprob: -17.75000762939453
    6. '[i' → logprob: -19.00000762939453
    7. ')i' → logprob: -20.75000762939453
    8. '(fi' → logprob: -21.00000762939453
    9. '((' → logprob: -21.12500762939453
    10. ',i' → logprob: -21.12500762939453

Token 320: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.282920129597187e-05
    2. ')
' → logprob: -11.375012397766113
    3. ' )' → logprob: -14.250012397766113
    4. '<|end|>' → logprob: -15.375012397766113
    5. ')return' → logprob: -16.25001335144043
    6. ')#' → logprob: -16.37501335144043
    7. ')

' → logprob: -17.50001335144043
    8. '),' → logprob: -17.62501335144043
    9. ')i' → logprob: -17.62501335144043
    10. ')}' → logprob: -17.75001335144043

Token 321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000675500778015703
    2. '	' → logprob: -8.625675201416016
    3. '	fi' → logprob: -8.625675201416016
    4. 'fi' → logprob: -9.625675201416016
    5. '```' → logprob: -10.000675201416016
    6. ' fi' → logprob: -10.250675201416016
    7. '        
' → logprob: -10.500675201416016
    8. '   ' → logprob: -10.750675201416016
    9. ')' → logprob: -10.750675201416016
    10. '<|end|>' → logprob: -10.875675201416016

Token 322: ' bis' (ID: 7204)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47758030891418457
    2. 'fi' → logprob: -0.9775803089141846
    3. ' fi' → logprob: -5.7275800704956055
    4. '	fi' → logprob: -8.977580070495605
    5. '(fi' → logprob: -9.727580070495605
    6. '      ' → logprob: -11.352580070495605
    7. '   ' → logprob: -11.477580070495605
    8. '```' → logprob: -11.852580070495605
    9. '	' → logprob: -12.477580070495605
    10. ' ' → logprob: -12.727580070495605

Token 323: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -4.961759259458631e-06
    2. 'e' → logprob: -13.000004768371582
    3. 'sect' → logprob: -13.375004768371582
    4. 'ct' → logprob: -14.750004768371582
    5. 'ectl' → logprob: -15.750004768371582
    6. '```' → logprob: -16.0000057220459
    7. 'ext' → logprob: -16.1250057220459
    8. 'ec' → logprob: -16.3750057220459
    9. 'ects' → logprob: -16.5000057220459
    10. 'lect' → logprob: -16.7500057220459

Token 324: '.ins' (ID: 65509)
  Prédit: '.ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ins' → logprob: -0.0006747855222783983
    2. '.' → logprob: -7.375674724578857
    3. '.fi' → logprob: -10.250675201416016
    4. 'ins' → logprob: -12.000675201416016
    5. ' .' → logprob: -13.375675201416016
    6. '_ins' → logprob: -13.375675201416016
    7. '.b' → logprob: -14.375675201416016
    8. '‌.' → logprob: -14.750675201416016
    9. '.inf' → logprob: -14.875675201416016
    10. '_left' → logprob: -14.875675201416016

Token 325: 'ort' (ID: 390)
  Prédit: 'ort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.31347423791885376
    2. 'ert' → logprob: -1.313474178314209
    3. '```' → logprob: -8.813474655151367
    4. 'ect' → logprob: -10.938474655151367
    5. 'fi' → logprob: -11.063474655151367
    6. 'er' → logprob: -12.313474655151367
    7. '   ' → logprob: -12.438474655151367
    8. 'rt' → logprob: -12.563474655151367
    9. '``' → logprob: -12.563474655151367
    10. 'sert' → logprob: -12.563474655151367

Token 326: '(fi' (ID: 180137)
  Prédit: '(fi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fi' → logprob: -0.0008128436165861785
    2. 'fi' → logprob: -7.250813007354736
    3. 'free' → logprob: -10.375812530517578
    4. '(f' → logprob: -10.375812530517578
    5. '	fi' → logprob: -10.750812530517578
    6. ' fi' → logprob: -11.625812530517578
    7. '.fi' → logprob: -13.250812530517578
    8. ' free' → logprob: -13.625812530517578
    9. ')' → logprob: -13.625812530517578
    10. 'left' → logprob: -14.000812530517578

Token 327: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021512730047106743
    2. '((' → logprob: -4.646512508392334
    3. '(fi' → logprob: -5.271512508392334
    4. ',(' → logprob: -5.521512508392334
    5. '(' → logprob: -6.521512508392334
    6. ' ,' → logprob: -7.271512508392334
    7. ' (' → logprob: -8.521512985229492
    8. '   ' → logprob: -9.146512985229492
    9. ')' → logprob: -10.896512985229492
    10. '(f' → logprob: -11.021512985229492

Token 328: ' (' (ID: 350)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.3868784010410309
    2. ' (' → logprob: -1.1368783712387085
    3. '(' → logprob: -12.51187801361084
    4. '   ' → logprob: -13.13687801361084
    5. ' new' → logprob: -14.51187801361084
    6. '(New' → logprob: -14.63687801361084
    7. ' ' → logprob: -15.13687801361084
    8. '       ' → logprob: -16.011878967285156
    9. ')new' → logprob: -16.386878967285156
    10. '  ' → logprob: -16.511878967285156

Token 329: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0009115827269852161
    2. ' new' → logprob: -7.000911712646484
    3. ')new' → logprob: -18.375911712646484
    4. '_new' → logprob: -19.250911712646484
    5. '   ' → logprob: -19.250911712646484
    6. '	new' → logprob: -19.375911712646484
    7. ' ' → logprob: -20.250911712646484
    8. '[new' → logprob: -20.625911712646484
    9. '(new' → logprob: -21.250911712646484
    10. ',new' → logprob: -21.375911712646484

Token 330: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -2.2007883671903983e-05
    2. 'start' → logprob: -10.750021934509277
    3. '_START' → logprob: -15.375021934509277
    4. '_' → logprob: -16.000022888183594
    5. 'Start' → logprob: -16.500022888183594
    6. '_new' → logprob: -17.250022888183594
    7. ' _' → logprob: -17.750022888183594
    8. '[start' → logprob: -18.125022888183594
    9. '_end' → logprob: -18.625022888183594
    10. '_se' → logprob: -18.750022888183594

Token 331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003181040519848466
    2. ',new' → logprob: -5.753180980682373
    3. ' ,' → logprob: -12.753181457519531
    4. 'new' → logprob: -15.253181457519531
    5. ',
' → logprob: -16.37818145751953
    6. ',n' → logprob: -16.50318145751953
    7. ',next' → logprob: -17.50318145751953
    8. ' new' → logprob: -18.37818145751953
    9. ',max' → logprob: -18.75318145751953
    10. ',y' → logprob: -19.12818145751953

Token 332: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00861456897109747
    2. ' new' → logprob: -4.758614540100098
    3. '_new' → logprob: -17.383615493774414
    4. '	new' → logprob: -17.383615493774414
    5. ' ' → logprob: -18.133615493774414
    6. ')new' → logprob: -18.383615493774414
    7. '[new' → logprob: -18.758615493774414
    8. 'New' → logprob: -18.758615493774414
    9. '   ' → logprob: -19.758615493774414
    10. '$new' → logprob: -20.258615493774414

Token 333: '_end' (ID: 13707)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0020470055751502514
    2. '_end' → logprob: -6.252047061920166
    3. 'end' → logprob: -9.752046585083008
    4. 'nd' → logprob: -10.252046585083008
    5. 'ds' → logprob: -11.627046585083008
    6. 'ed' → logprob: -12.502046585083008
    7. 't' → logprob: -12.502046585083008
    8. ')' → logprob: -13.377046585083008
    9. 'ded' → logprob: -13.502046585083008
    10. 'dp' → logprob: -13.752046585083008

Token 334: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02975870668888092
    2. ')' → logprob: -3.5297586917877197
    3. '))
' → logprob: -12.02975845336914
    4. ')
' → logprob: -13.90475845336914
    5. ' ))' → logprob: -13.90475845336914
    6. ')))' → logprob: -15.52975845336914
    7. ' )' → logprob: -15.77975845336914
    8. '),' → logprob: -17.40475845336914
    9. '])' → logprob: -17.65475845336914
    10. '   ' → logprob: -17.77975845336914

Token 335: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2618759870529175
    2. '<|end|>' → logprob: -1.5118759870529175
    3. '
' → logprob: -5.261876106262207
    4. '```' → logprob: -6.761876106262207
    5. '       ' → logprob: -7.136876106262207
    6. '<|end|>' → logprob: -7.136876106262207
    7. '    
' → logprob: -7.511876106262207
    8. ' ' → logprob: -7.886876106262207
    9. '\n' → logprob: -8.511876106262207
    10. 'def' → logprob: -9.136876106262207

Token 336: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24307125806808472
    2. 'def' (adapté à ' def') → logprob: -1.6180713176727295
    3. ' def' → logprob: -4.74307107925415
    4. '
' → logprob: -5.74307107925415
    5. '    
' → logprob: -6.11807107925415
    6. ')' → logprob: -6.74307107925415
    7. '```' → logprob: -7.11807107925415
    8. '<|end|>' → logprob: -7.49307107925415
    9. '	def' → logprob: -8.493071556091309
    10. '       ' → logprob: -9.118071556091309

Token 337: ' _' (ID: 1175)
  Prédit: '_allocate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_allocate' → logprob: -0.30909931659698486
    2. '_alloc' → logprob: -2.3090991973876953
    3. ' _' → logprob: -2.9340991973876953
    4. ' allocate' → logprob: -3.0590991973876953
    5. '_' → logprob: -3.6840991973876953
    6. 'allocate' → logprob: -3.9340991973876953
    7. '_create' → logprob: -5.434099197387695
    8. ' def' → logprob: -5.934099197387695
    9. '_free' → logprob: -6.059099197387695
    10. 'alloc' → logprob: -6.434099197387695

Token 338: 'remove' (ID: 4942)
  Prédit: 'remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.5756902694702148
    2. 'alloc' → logprob: -1.5756902694702148
    3. 'allocate' → logprob: -1.7006902694702148
    4. 'find' → logprob: -3.200690269470215
    5. 'occup' → logprob: -6.575690269470215
    6. 'try' → logprob: -6.700690269470215
    7. 'del' → logprob: -6.825690269470215
    8. 'pop' → logprob: -6.950690269470215
    9. 'reserve' → logprob: -7.325690269470215
    10. 'bis' → logprob: -7.575690269470215

Token 339: '_free' (ID: 21204)
  Prédit: '_free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_free' → logprob: -0.19588331878185272
    2. '(self' → logprob: -1.8208832740783691
    3. '(' → logprob: -4.945883274078369
    4. ' (' → logprob: -5.195883274078369
    5. '_' → logprob: -6.070883274078369
    6. '_f' → logprob: -7.570883274078369
    7. '_interval' → logprob: -9.320883750915527
    8. '_token' → logprob: -9.695883750915527
    9. '(start' → logprob: -9.945883750915527
    10. '_inter' → logprob: -9.945883750915527

Token 340: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.577043354511261
    2. '(' → logprob: -0.827043354511261
    3. ' (' → logprob: -6.952043533325195
    4. '(start' → logprob: -10.202043533325195
    5. '_' → logprob: -10.327043533325195
    6. 'self' → logprob: -11.077043533325195
    7. '(
' → logprob: -11.202043533325195
    8. ' ' → logprob: -11.702043533325195
    9. '(s' → logprob: -11.827043533325195
    10. '(space' → logprob: -12.077043533325195

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012882133014500141
    2. ' ,' → logprob: -6.876288414001465
    3. ',start' → logprob: -9.001288414001465
    4. 'self' → logprob: -9.626288414001465
    5. '(self' → logprob: -10.376288414001465
    6. '(start' → logprob: -11.876288414001465
    7. ',self' → logprob: -12.126288414001465
    8. '   ' → logprob: -12.251288414001465
    9. ' (' → logprob: -12.626288414001465
    10. 'start' → logprob: -12.626288414001465

Token 342: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.6326376795768738
    2. 'start' → logprob: -0.7576376795768738
    3. 'self' → logprob: -11.132637977600098
    4. ' ' → logprob: -11.632637977600098
    5. ' self' → logprob: -12.382637977600098
    6. '   ' → logprob: -12.882637977600098
    7. ')' → logprob: -13.382637977600098
    8. '(start' → logprob: -13.882637977600098
    9. 'interval' → logprob: -14.007637977600098
    10. '	start' → logprob: -14.007637977600098

Token 343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.836499985889532e-05
    2. ',end' → logprob: -10.2500581741333
    3. ' ,' → logprob: -10.8750581741333
    4. '   ' → logprob: -12.6250581741333
    5. '<|end|>' → logprob: -15.0000581741333
    6. ',start' → logprob: -15.7500581741333
    7. '       ' → logprob: -16.250059127807617
    8. 'end' → logprob: -16.625059127807617
    9. ',int' → logprob: -17.500059127807617
    10. '‌,' → logprob: -17.500059127807617

Token 344: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.16022513806819916
    2. ' end' → logprob: -1.9102251529693604
    3. '   ' → logprob: -15.035224914550781
    4. ' ' → logprob: -15.035224914550781
    5. '	end' → logprob: -15.910224914550781
    6. '    ' → logprob: -16.41022491455078
    7. '(end' → logprob: -16.78522491455078
    8. ',end' → logprob: -17.28522491455078
    9. '  ' → logprob: -17.66022491455078
    10. '_end' → logprob: -17.66022491455078

Token 345: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.024102354422211647
    2. '):
' → logprob: -3.7741024494171143
    3. '       ' → logprob: -7.524102210998535
    4. '   ' → logprob: -9.024102210998535
    5. ' ):' → logprob: -9.399102210998535
    6. '):
' → logprob: -9.774102210998535
    7. ',' → logprob: -9.899102210998535
    8. ':' → logprob: -13.399102210998535
    9. ' ):
' → logprob: -13.524102210998535
    10. ')' → logprob: -13.899102210998535

Token 346: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018846115563064814
    2. '<|end|>' → logprob: -6.751884460449219
    3. '   ' → logprob: -8.251884460449219
    4. ',' → logprob: -8.251884460449219
    5. ')' → logprob: -9.876884460449219
    6. '<|end|>' → logprob: -10.876884460449219
    7. ' #' → logprob: -11.126884460449219
    8. ' pos' → logprob: -11.251884460449219
    9. '#' → logprob: -11.251884460449219
    10. '      ' → logprob: -11.376884460449219

Token 347: ' #' (ID: 1069)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.54488605260849
    2. ' fi' → logprob: -0.91988605260849
    3. '       ' → logprob: -3.9198861122131348
    4. ' pos' → logprob: -7.794886112213135
    5. '	fi' → logprob: -7.919886112213135
    6. 'pos' → logprob: -8.044885635375977
    7. '   ' → logprob: -8.544885635375977
    8. ' #' → logprob: -8.669885635375977
    9. '#' (adapté à ' #') → logprob: -9.169885635375977
    10. '(fi' → logprob: -10.044885635375977

Token 348: ' Remove' (ID: 18141)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.004193675238639116
    2. ' fi' → logprob: -5.7541937828063965
    3. '#' → logprob: -7.6291937828063965
    4. '   ' → logprob: -8.129193305969238
    5. '       ' → logprob: -9.379193305969238
    6. ' #' → logprob: -9.504193305969238
    7. 'pos' → logprob: -10.629193305969238
    8. 'def' → logprob: -11.629193305969238
    9. 'i' → logprob: -11.879193305969238
    10. ' intervals' → logprob: -12.254193305969238

Token 349: ' the' (ID: 290)
  Prédit: ' free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' free' → logprob: -0.8877614140510559
    2. ' intervals' → logprob: -2.012761354446411
    3. ' the' → logprob: -2.512761354446411
    4. ' (' → logprob: -2.887761354446411
    5. '       ' → logprob: -3.012761354446411
    6. 'free' → logprob: -3.262761354446411
    7. 'fi' → logprob: -3.387761354446411
    8. ' #' → logprob: -3.512761354446411
    9. 'interval' → logprob: -3.637761354446411
    10. ' pos' → logprob: -4.01276159286499

Token 350: ' interval' (ID: 17116)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5473908185958862
    2. ' #' → logprob: -1.5473908185958862
    3. ' interval' → logprob: -1.6723908185958862
    4. 'interval' → logprob: -2.047390937805176
    5. ' free' → logprob: -2.797390937805176
    6. 'free' → logprob: -3.047390937805176
    7. ' current' → logprob: -3.672390937805176
    8. ' intervals' → logprob: -3.797390937805176
    9. 'pos' → logprob: -3.922390937805176
    10. 'idx' → logprob: -4.297390937805176

Token 351: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.04917803034186363
    2. '[' → logprob: -3.299178123474121
    3. '[start' → logprob: -4.799178123474121
    4. ' (' → logprob: -6.424178123474121
    5. ' ' → logprob: -8.049178123474121
    6. '       ' → logprob: -8.299178123474121
    7. '(s' → logprob: -8.549178123474121
    8. ' from' → logprob: -9.299178123474121
    9. '(start' → logprob: -9.299178123474121
    10. 's' → logprob: -9.424178123474121

Token 352: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.011048170737922192
    2. ' start' → logprob: -4.511048316955566
    3. ',' → logprob: -15.761048316955566
    4. ')' → logprob: -15.886048316955566
    5. ',start' → logprob: -16.26104736328125
    6. '   ' → logprob: -17.38604736328125
    7. '_start' → logprob: -17.63604736328125
    8. '(start' → logprob: -17.63604736328125
    9. '=start' → logprob: -17.76104736328125
    10. ' ' → logprob: -18.01104736328125

Token 353: ',end' (ID: 93014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006196710746735334
    2. ',end' → logprob: -5.13119649887085
    3. ' ,' → logprob: -8.256196975708008
    4. ',int' → logprob: -13.006196975708008
    5. ',
' → logprob: -13.256196975708008
    6. '<|end|>' → logprob: -13.256196975708008
    7. ',start' → logprob: -13.631196975708008
    8. '‌,' → logprob: -14.631196975708008
    9. '   ' → logprob: -16.006196975708008
    10. ',user' → logprob: -16.256196975708008

Token 354: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019955333322286606
    2. ')' → logprob: -4.894955158233643
    3. '],' → logprob: -5.144955158233643
    4. ' ]' → logprob: -6.144955158233643
    5. '       ' → logprob: -7.019955158233643
    6. 'from' → logprob: -7.019955158233643
    7. ',' → logprob: -7.269955158233643
    8. ']
' → logprob: -7.519955158233643
    9. ' from' → logprob: -7.769955158233643
    10. ')]' → logprob: -7.894955158233643

Token 355: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30471405386924744
    2. ' from' → logprob: -1.4297140836715698
    3. 'from' → logprob: -4.429714202880859
    4. '   ' → logprob: -4.804714202880859
    5. ',' → logprob: -6.054714202880859
    6. ':' → logprob: -7.679714202880859
    7. '        ' → logprob: -9.55471420288086
    8. ' to' → logprob: -10.17971420288086
    9. ' in' → logprob: -10.17971420288086
    10. '	from' → logprob: -10.67971420288086

Token 356: ' free' (ID: 2240)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.29409101605415344
    2. ' the' → logprob: -1.919090986251831
    3. ' self' → logprob: -2.794090986251831
    4. 'the' → logprob: -3.169090986251831
    5. ' free' → logprob: -5.66909122467041
    6. 'free' → logprob: -6.91909122467041
    7. '   ' → logprob: -8.79409122467041
    8. '#' → logprob: -9.66909122467041
    9. '       ' → logprob: -10.29409122467041
    10. ')' → logprob: -10.41909122467041

Token 357: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -7.584239938296378e-06
    2. 'interval' → logprob: -12.125007629394531
    3. 'inter' → logprob: -14.125007629394531
    4. ' intervals' → logprob: -14.250007629394531
    5. '   ' → logprob: -14.625007629394531
    6. '_interval' → logprob: -16.25000762939453
    7. 'Intervals' → logprob: -16.87500762939453
    8. '       ' → logprob: -17.12500762939453
    9. '_ranges' → logprob: -17.25000762939453
    10. ' ' → logprob: -17.75000762939453

Token 358: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.014140710234642029
    2. 'als' → logprob: -4.514140605926514
    3. 'val' → logprob: -5.889140605926514
    4. '```' → logprob: -9.639141082763672
    5. '   ' → logprob: -9.764141082763672
    6. 't' → logprob: -10.264141082763672
    7. '_' → logprob: -10.889141082763672
    8. 'erv' → logprob: -11.264141082763672
    9. '#' → logprob: -11.514141082763672
    10. ' vals' → logprob: -11.639141082763672

Token 359: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006916775833815336
    2. ',' → logprob: -5.0069169998168945
    3. '   ' → logprob: -9.631916999816895
    4. '.' → logprob: -9.631916999816895
    5. '      ' → logprob: -11.131916999816895
    6. '<|end|>' → logprob: -11.381916999816895
    7. ' and' → logprob: -12.006916999816895
    8. ':' → logprob: -12.131916999816895
    9. '        
' → logprob: -12.131916999816895
    10. '           ' → logprob: -13.006916999816895

Token 360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012142152525484562
    2. ',' → logprob: -4.512142181396484
    3. '   ' → logprob: -7.512142181396484
    4. '.' → logprob: -8.387142181396484
    5. ':' → logprob: -8.762142181396484
    6. '<|end|>' → logprob: -10.637142181396484
    7. '      ' → logprob: -10.887142181396484
    8. '{' → logprob: -11.012142181396484
    9. ' ,' → logprob: -11.762142181396484
    10. ')' → logprob: -11.762142181396484

Token 361: ' fi' (ID: 6134)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0036638975143433
    2. ' fi' → logprob: -1.2536638975143433
    3. 'fi' (adapté à ' fi') → logprob: -1.5036638975143433
    4. ' pos' → logprob: -2.378664016723633
    5. 'pos' → logprob: -3.753664016723633
    6. ' i' → logprob: -5.378664016723633
    7. '   ' → logprob: -5.878664016723633
    8. 'i' → logprob: -7.253664016723633
    9. ' for' → logprob: -7.753664016723633
    10. ' idx' → logprob: -8.003664016723633

Token 362: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17977997660636902
    2. '=' → logprob: -1.8047800064086914
    3. '   ' → logprob: -11.929780006408691
    4. ':' → logprob: -11.929780006408691
    5. ',' → logprob: -12.179780006408691
    6. ')' → logprob: -13.054780006408691
    7. ' ' → logprob: -13.054780006408691
    8. 'def' → logprob: -13.179780006408691
    9. '[:]' → logprob: -13.554780006408691
    10. '=[]' → logprob: -13.679780006408691

Token 363: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001502717612311244
    2. ' self' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.376502990722656
    4. '       ' → logprob: -16.501502990722656
    5. '(self' → logprob: -16.876502990722656
    6. '=self' → logprob: -16.876502990722656
    7. '[self' → logprob: -17.001502990722656
    8. '	self' → logprob: -17.251502990722656
    9. ' ' → logprob: -17.501502990722656
    10. 'elf' → logprob: -18.251502990722656

Token 364: '.free' (ID: 76674)
  Prédit: '.free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.free' → logprob: -0.0008960972772911191
    2. 'self' → logprob: -8.250896453857422
    3. '.self' → logprob: -8.375896453857422
    4. '.' → logprob: -8.375896453857422
    5. 'free' → logprob: -9.125896453857422
    6. ' .' → logprob: -10.125896453857422
    7. ' free' → logprob: -11.875896453857422
    8. '_free' → logprob: -12.000896453857422
    9. ' self' → logprob: -12.375896453857422
    10. '	free' → logprob: -12.625896453857422

Token 365: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -1.6240566083070007e-06
    2. 'interval' → logprob: -13.625001907348633
    3. 'inter' → logprob: -15.125001907348633
    4. '.inter' → logprob: -17.250001907348633
    5. 'Intervals' → logprob: -17.375001907348633
    6. '_in' → logprob: -17.500001907348633
    7. '_interval' → logprob: -17.625001907348633
    8. ' intervals' → logprob: -18.875001907348633
    9. '_indices' → logprob: -19.375001907348633
    10. '_int' → logprob: -19.750001907348633

Token 366: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.552507758140564
    2. 'r' → logprob: -0.927507758140564
    3. 'erv' → logprob: -3.9275078773498535
    4. '```' → logprob: -6.1775078773498535
    5. 'n' → logprob: -6.3025078773498535
    6. 'als' → logprob: -6.5525078773498535
    7. 'interval' → logprob: -7.3025078773498535
    8. 'val' → logprob: -7.5525078773498535
    9. 't' → logprob: -7.6775078773498535
    10. '_inter' → logprob: -7.8025078773498535

Token 367: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031825865153223276
    2. ',' → logprob: -6.503182411193848
    3. '        
' → logprob: -7.378182411193848
    4. 'pos' → logprob: -8.128182411193848
    5. ' =' → logprob: -8.628182411193848
    6. '   ' → logprob: -8.628182411193848
    7. ' pos' → logprob: -9.253182411193848
    8. '=' → logprob: -9.503182411193848
    9. '        ' → logprob: -10.253182411193848
    10. '
' → logprob: -10.503182411193848

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08468746393918991
    2. 'pos' → logprob: -3.2096874713897705
    3. ' pos' → logprob: -3.2096874713897705
    4. '   ' → logprob: -7.959687232971191
    5. '	pos' → logprob: -9.834687232971191
    6. ',pos' → logprob: -11.709687232971191
    7. ' i' → logprob: -11.834687232971191
    8. ',' → logprob: -11.959687232971191
    9. ' idx' → logprob: -12.084687232971191
    10. 'idx' → logprob: -12.209687232971191

Token 369: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.10145813971757889
    2. 'pos' (adapté à ' pos') → logprob: -2.3514580726623535
    3. ' while' → logprob: -7.9764580726623535
    4. ' i' → logprob: -8.351458549499512
    5. ' left' → logprob: -8.851458549499512
    6. 'i' → logprob: -9.101458549499512
    7. '   ' → logprob: -9.351458549499512
    8. '       ' → logprob: -9.476458549499512
    9. ' idx' → logprob: -9.476458549499512
    10. 'while' → logprob: -9.851458549499512

Token 370: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0380416102707386
    2. '=' → logprob: -3.288041591644287
    3. ' ' → logprob: -16.913042068481445
    4. ' =
' → logprob: -17.288042068481445
    5. '   ' → logprob: -17.663042068481445
    6. 's' → logprob: -17.788042068481445
    7. '=
' → logprob: -19.163042068481445
    8. ' ' → logprob: -19.288042068481445
    9. ' =
' → logprob: -19.413042068481445
    10. ',' → logprob: -19.538042068481445

Token 371: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.12692853808403015
    2. ' bis' → logprob: -2.1269285678863525
    3. 'b' → logprob: -14.751928329467773
    4. '0' → logprob: -17.376928329467773
    5. ' ' → logprob: -18.251928329467773
    6. 'bi' → logprob: -18.626928329467773
    7. 'Bis' → logprob: -18.626928329467773
    8. 'bs' → logprob: -18.876928329467773
    9. '	b' → logprob: -19.876928329467773
    10. '   ' → logprob: -20.251928329467773

Token 372: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0001684981834841892
    2. 'sect' → logprob: -9.250168800354004
    3. 'ct' → logprob: -9.625168800354004
    4. 'ce' → logprob: -12.625168800354004
    5. 'e' → logprob: -13.625168800354004
    6. 'lect' → logprob: -14.750168800354004
    7. 'ectl' → logprob: -14.875168800354004
    8. 'с' → logprob: -15.875168800354004
    9. 'ected' → logprob: -15.875168800354004
    10. 'ec' → logprob: -16.000167846679688

Token 373: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.019807152450084686
    2. '_left' → logprob: -4.2698073387146
    3. '.' → logprob: -5.2698073387146
    4. '._' → logprob: -7.7698073387146
    5. '.left' → logprob: -10.644806861877441
    6. ' .' → logprob: -10.644806861877441
    7. '.ins' → logprob: -12.269806861877441
    8. '_right' → logprob: -12.894806861877441
    9. '.Left' → logprob: -13.769806861877441
    10. '_.' → logprob: -14.269806861877441

Token 374: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.00015693542081862688
    2. 'bis' → logprob: -9.375157356262207
    3. 'ist' → logprob: -10.875157356262207
    4. 'eft' → logprob: -11.000157356262207
    5. 'left' → logprob: -11.625157356262207
    6. 's' → logprob: -11.750157356262207
    7. 'sect' → logprob: -11.750157356262207
    8. 'ise' → logprob: -12.375157356262207
    9. 'ect' → logprob: -13.625157356262207
    10. 'search' → logprob: -14.125157356262207

Token 375: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.6497472524642944
    2. 'ft' → logprob: -0.7747472524642944
    3. 'ect' → logprob: -4.274747371673584
    4. 'eft' → logprob: -6.774747371673584
    5. '```' → logprob: -7.399747371673584
    6. 'ctl' → logprob: -8.274746894836426
    7. '<' → logprob: -8.649746894836426
    8. 'f' → logprob: -9.274746894836426
    9. '_left' → logprob: -9.524746894836426
    10. '`' → logprob: -9.649746894836426

Token 376: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.0032029079739004374
    2. 'left' → logprob: -5.75320291519165
    3. '_right' → logprob: -10.628202438354492
    4. 'fi' → logprob: -14.753202438354492
    5. '_LEFT' → logprob: -15.628202438354492
    6. 'right' → logprob: -15.878202438354492
    7. 'Left' → logprob: -16.378202438354492
    8. 'pos' → logprob: -17.253202438354492
    9. 'start' → logprob: -17.753202438354492
    10. 'import' → logprob: -17.878202438354492

Token 377: '(fi' (ID: 180137)
  Prédit: '(fi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fi' → logprob: -2.570319702499546e-05
    2. 'fi' → logprob: -11.000025749206543
    3. ' (' → logprob: -12.375025749206543
    4. '(' → logprob: -12.625025749206543
    5. '	fi' → logprob: -14.000025749206543
    6. ' fi' → logprob: -15.125025749206543
    7. '(fin' → logprob: -16.750024795532227
    8. '(fid' → logprob: -16.875024795532227
    9. '(fe' → logprob: -17.000024795532227
    10. '(f' → logprob: -17.375024795532227

Token 378: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012011249782517552
    2. ',(' → logprob: -9.125120162963867
    3. ' ,' → logprob: -11.750120162963867
    4. '(' → logprob: -13.625120162963867
    5. '(fi' → logprob: -13.875120162963867
    6. '((' → logprob: -15.375120162963867
    7. '   ' → logprob: -15.750120162963867
    8. 'fi' → logprob: -15.875120162963867
    9. ' ' → logprob: -16.250120162963867
    10. ' (' → logprob: -16.375120162963867

Token 379: ' (' (ID: 350)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.15851221978664398
    2. ' (' → logprob: -2.1585121154785156
    3. '(fi' → logprob: -3.5335121154785156
    4. '(' → logprob: -6.908512115478516
    5. '(end' → logprob: -7.158512115478516
    6. '(stop' → logprob: -10.408512115478516
    7. '(Start' → logprob: -11.283512115478516
    8. '(si' → logprob: -11.283512115478516
    9. 'fi' → logprob: -11.533512115478516
    10. '(begin' → logprob: -11.908512115478516

Token 380: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -9.913265239447355e-05
    2. 'end' → logprob: -9.375099182128906
    3. '(start' → logprob: -11.625099182128906
    4. ' start' → logprob: -12.250099182128906
    5. ')' → logprob: -15.500099182128906
    6. '0' → logprob: -16.000099182128906
    7. '(end' → logprob: -16.125099182128906
    8. '[start' → logprob: -17.250099182128906
    9. '(' → logprob: -17.625099182128906
    10. ',start' → logprob: -17.750099182128906

Token 381: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019257364328950644
    2. ',
' → logprob: -9.375192642211914
    3. '-' → logprob: -10.625192642211914
    4. ' ,' → logprob: -10.625192642211914
    5. '))' → logprob: -10.875192642211914
    6. ',end' → logprob: -12.125192642211914
    7. '<|end|>' → logprob: -12.125192642211914
    8. '
' → logprob: -12.250192642211914
    9. ' -' → logprob: -12.500192642211914
    10. ')' → logprob: -12.500192642211914

Token 382: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04029754549264908
    2. 'end' → logprob: -3.665297508239746
    3. '-' → logprob: -4.665297508239746
    4. 'start' → logprob: -5.665297508239746
    5. '))' → logprob: -7.040297508239746
    6. '))
' → logprob: -10.790297508239746
    7. 'float' → logprob: -10.915297508239746
    8. '-end' → logprob: -11.040297508239746
    9. ')' → logprob: -11.165297508239746
    10. ' ' → logprob: -11.415297508239746

Token 383: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007824753411114216
    2. 'float' → logprob: -5.257824897766113
    3. 'sys' → logprob: -6.257824897766113
    4. '10' → logprob: -8.007824897766113
    5. 'end' → logprob: -8.507824897766113
    6. 'MAX' → logprob: -9.132824897766113
    7. 'max' → logprob: -11.757824897766113
    8. '(' → logprob: -11.757824897766113
    9. 'int' → logprob: -12.007824897766113
    10. 'start' → logprob: -12.632824897766113

Token 384: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005893715424463153
    2. '))
' → logprob: -8.125589370727539
    3. ')' → logprob: -8.375589370727539
    4. ' ))' → logprob: -10.250589370727539
    5. '),' → logprob: -11.000589370727539
    6. '1' → logprob: -13.000589370727539
    7. ')))' → logprob: -13.375589370727539
    8. '))

' → logprob: -13.750589370727539
    9. '0' → logprob: -13.875589370727539
    10. ')
' → logprob: -14.375589370727539

Token 385: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.778926432132721
    2. 'while' → logprob: -1.4039263725280762
    3. 'if' → logprob: -2.153926372528076
    4. ' while' → logprob: -2.903926372528076
    5. '
' → logprob: -3.028926372528076
    6. ' if' → logprob: -3.403926372528076
    7. 'for' → logprob: -4.028926372528076
    8. '   ' → logprob: -4.653926372528076
    9. ' for' → logprob: -5.278926372528076
    10. 'i' → logprob: -5.403926372528076

Token 386: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03293218836188316
    2. 'while' → logprob: -4.157932281494141
    3. '#' (adapté à ' #') → logprob: -4.782932281494141
    4. 'i' → logprob: -5.407932281494141
    5. '       ' → logprob: -6.157932281494141
    6. 'for' → logprob: -6.907932281494141
    7. ' if' → logprob: -7.782932281494141
    8. '   ' → logprob: -8.15793228149414
    9. 'idx' → logprob: -10.65793228149414
    10. ' while' → logprob: -11.03293228149414

Token 387: ' maybe' (ID: 10112)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06089450791478157
    2. '#' → logprob: -3.56089448928833
    3. 'while' → logprob: -3.56089448928833
    4. 'i' → logprob: -6.81089448928833
    5. 'for' → logprob: -6.81089448928833
    6. 'idx' → logprob: -10.810894966125488
    7. '   ' → logprob: -11.935894966125488
    8. ' if' → logprob: -12.310894966125488
    9. '
' → logprob: -12.810894966125488
    10. 'index' → logprob: -12.935894966125488

Token 388: ' interval' (ID: 17116)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.48093193769454956
    2. ' if' → logprob: -1.4809319972991943
    3. 'pos' → logprob: -2.4809319972991943
    4. 'while' → logprob: -3.2309319972991943
    5. ' while' → logprob: -3.9809319972991943
    6. ' pos' → logprob: -4.980931758880615
    7. '#' → logprob: -6.230931758880615
    8. '   ' → logprob: -6.730931758880615
    9. ' for' → logprob: -7.230931758880615
    10. 'for' → logprob: -7.355931758880615

Token 389: ' before' (ID: 2254)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1422712355852127
    2. ' at' → logprob: -2.8922712802886963
    3. ' =' → logprob: -3.1422712802886963
    4. '=' → logprob: -5.392271041870117
    5. '[' → logprob: -5.392271041870117
    6. '[pos' → logprob: -5.392271041870117
    7. '[start' → logprob: -5.892271041870117
    8. 'at' → logprob: -6.142271041870117
    9. 'start' → logprob: -6.142271041870117
    10. 'before' → logprob: -6.142271041870117

Token 390: ' pos' (ID: 1253)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04956788569688797
    2. 'if' → logprob: -3.049567937850952
    3. 'pos' → logprob: -7.799567699432373
    4. ' pos' → logprob: -8.674568176269531
    5. '<|end|>' → logprob: -8.924568176269531
    6. '       ' → logprob: -9.799568176269531
    7. ',' → logprob: -10.049568176269531
    8. '	if' → logprob: -10.549568176269531
    9. ' ' → logprob: -10.799568176269531
    10. ' left' → logprob: -11.049568176269531

Token 391: ' overlap' (ID: 56631)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.019597921520471573
    2. 'if' → logprob: -4.519598007202148
    3. '<|end|>' → logprob: -6.019598007202148
    4. ',' → logprob: -6.394598007202148
    5. ' =' → logprob: -6.769598007202148
    6. ' ' → logprob: -6.894598007202148
    7. ':' → logprob: -7.144598007202148
    8. '=' → logprob: -7.769598007202148
    9. ' and' → logprob: -8.894598007202148
    10. '	if' → logprob: -8.894598007202148

Token 392: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04402044042944908
    2. 'if' → logprob: -3.794020414352417
    3. '   ' → logprob: -5.419020652770996
    4. ' at' → logprob: -5.419020652770996
    5. ' and' → logprob: -5.544020652770996
    6. 's' → logprob: -6.419020652770996
    7. 'pos' → logprob: -6.794020652770996
    8. ':' → logprob: -7.044020652770996
    9. ' =' → logprob: -7.169020652770996
    10. ' with' → logprob: -7.294020652770996

Token 393: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3891204595565796
    2. '       ' → logprob: -1.1391204595565796
    3. 'if' → logprob: -6.514120578765869
    4. ',' → logprob: -7.514120578765869
    5. ' for' → logprob: -9.764120101928711
    6. '<|end|>' → logprob: -10.514120101928711
    7. 'pos' → logprob: -10.639120101928711
    8. '   ' → logprob: -10.889120101928711
    9. ' ,' → logprob: -11.139120101928711
    10. ' while' → logprob: -11.514120101928711

Token 394: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5805623531341553
    2. 'if' (adapté à ' if') → logprob: -0.8305623531341553
    3. 'pos' → logprob: -5.705562591552734
    4. ' pos' → logprob: -7.205562591552734
    5. 'left' → logprob: -8.205562591552734
    6. ' left' → logprob: -8.705562591552734
    7. '       ' → logprob: -10.205562591552734
    8. 'i' → logprob: -11.080562591552734
    9. '   ' → logprob: -11.205562591552734
    10. 'for' → logprob: -11.830562591552734

Token 395: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0015024791937321424
    2. ' pos' → logprob: -6.501502513885498
    3. '	pos' → logprob: -15.75150203704834
    4. '(pos' → logprob: -17.126502990722656
    5. '_pos' → logprob: -18.751502990722656
    6. ' ' → logprob: -18.751502990722656
    7. '   ' → logprob: -19.626502990722656
    8. '0' → logprob: -19.751502990722656
    9. 'poss' → logprob: -20.876502990722656
    10. '.pos' → logprob: -20.876502990722656

Token 396: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.034255389124155045
    2. ' >' → logprob: -3.4092555046081543
    3. '==' → logprob: -8.909255027770996
    4. ' and' → logprob: -9.159255027770996
    5. 'and' → logprob: -9.159255027770996
    6. '0' → logprob: -9.534255027770996
    7. '-' → logprob: -9.659255027770996
    8. ':' → logprob: -10.159255027770996
    9. ')>' → logprob: -10.659255027770996
    10. '()>' → logprob: -11.034255027770996

Token 397: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009124171338044107
    2. ' ' → logprob: -7.000912189483643
    3. '=' → logprob: -13.8759126663208
    4. '   ' → logprob: -17.750911712646484
    5. '1' → logprob: -18.750911712646484
    6. '۰' → logprob: -19.375911712646484
    7. '  ' → logprob: -19.625911712646484
    8. ' ' → logprob: -20.625911712646484
    9. '
' → logprob: -20.688411712646484
    10. ' =' → logprob: -20.813411712646484

Token 398: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06244835630059242
    2. 'and' → logprob: -2.812448263168335
    3. ':
' → logprob: -7.812448501586914
    4. ':' → logprob: -10.187448501586914
    5. ' ' → logprob: -11.062448501586914
    6. '   ' → logprob: -11.312448501586914
    7. '	and' → logprob: -12.812448501586914
    8. '       ' → logprob: -13.187448501586914
    9. '0' → logprob: -13.437448501586914
    10. ' :
' → logprob: -14.187448501586914

Token 399: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08336630463600159
    2. '       ' → logprob: -2.8333663940429688
    3. '    ' → logprob: -5.083366394042969
    4. '        ' → logprob: -5.708366394042969
    5. ':' → logprob: -6.083366394042969
    6. '   ' → logprob: -6.083366394042969
    7. '           ' → logprob: -6.708366394042969
    8. ':
' → logprob: -6.708366394042969
    9. ' ' → logprob: -6.833366394042969
    10. ',' → logprob: -7.208366394042969

Token 400: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.13190023601055145
    2. 'pos' (adapté à ' pos') → logprob: -2.3819003105163574
    3. 'fi' → logprob: -4.131900310516357
    4. '0' → logprob: -4.756900310516357
    5. ' fi' → logprob: -5.631900310516357
    6. '           ' → logprob: -6.881900310516357
    7. ' ' → logprob: -7.381900310516357
    8. ' if' → logprob: -8.0068998336792
    9. '       ' → logprob: -8.2568998336792
    10. '   ' → logprob: -8.5068998336792

Token 401: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.5613220930099487
    2. ' -=' → logprob: -1.0613220930099487
    3. '-' → logprob: -2.5613222122192383
    4. '=' → logprob: -5.186322212219238
    5. ' -' → logprob: -7.686322212219238
    6. ')' → logprob: -8.811322212219238
    7. ' =' → logprob: -10.186322212219238
    8. '   ' → logprob: -10.936322212219238
    9. '[' → logprob: -11.436322212219238
    10. ':' → logprob: -11.561322212219238

Token 402: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.250003814697266
    4. '
' → logprob: -20.000003814697266
    5. '```' → logprob: -20.625003814697266
    6. '  ' → logprob: -20.875003814697266
    7. '<|end|>' → logprob: -21.562503814697266
    8. '0' → logprob: -21.750003814697266
    9. '2' → logprob: -21.750003814697266
    10. '       ' → logprob: -21.937503814697266

Token 403: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -20.625
    4. '
' → logprob: -20.875
    5. '```' → logprob: -21.5
    6. '۱' → logprob: -22.125
    7. '  ' → logprob: -22.25
    8. '１' → logprob: -22.4375
    9. '<|end|>' → logprob: -22.5
    10. '0' → logprob: -23.0

Token 404: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0973828136920929
    2. '
' → logprob: -2.7223827838897705
    3. ' if' → logprob: -4.09738302230835
    4. '        
' → logprob: -5.72238302230835
    5. 'if' → logprob: -6.34738302230835
    6. '           ' → logprob: -6.47238302230835
    7. '   ' → logprob: -7.09738302230835
    8. ' 
' → logprob: -7.47238302230835
    9. '  
' → logprob: -7.72238302230835
    10. '    
' → logprob: -7.97238302230835

Token 405: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11636673659086227
    2. '
' → logprob: -2.4913666248321533
    3. ' if' → logprob: -4.741366863250732
    4. '        
' → logprob: -5.116366863250732
    5. 'if' → logprob: -5.616366863250732
    6. '   ' → logprob: -5.741366863250732
    7. '           ' → logprob: -6.616366863250732
    8. '    
' → logprob: -6.991366863250732
    9. ',' → logprob: -7.241366863250732
    10. ' 
' → logprob: -7.366366863250732

Token 406: ' updates' (ID: 12663)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.09658988565206528
    2. '       ' → logprob: -2.7215898036956787
    3. 'fi' → logprob: -4.471590042114258
    4. ' while' → logprob: -4.971590042114258
    5. 'current' → logprob: -5.596590042114258
    6. 'interval' → logprob: -5.971590042114258
    7. 'curr' → logprob: -7.221590042114258
    8. 'cur' → logprob: -8.096590042114258
    9. 'for' → logprob: -8.846590042114258
    10. 'if' → logprob: -8.971590042114258

Token 407: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3489663898944855
    2. ' =' → logprob: -1.223966360092163
    3. '=[]' → logprob: -7.598966598510742
    4. '=[]
' → logprob: -11.848966598510742
    5. '   ' → logprob: -12.598966598510742
    6. ':' → logprob: -12.848966598510742
    7. ' ' → logprob: -13.223966598510742
    8. '[]' → logprob: -13.598966598510742
    9. '_' → logprob: -13.973966598510742
    10. '.' → logprob: -14.598966598510742

Token 408: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -2.7968066206085496e-05
    2. '[]
' → logprob: -10.500027656555176
    3. ' []' → logprob: -15.125027656555176
    4. '[]

' → logprob: -15.875027656555176
    5. '[' → logprob: -17.750028610229492
    6. '[]}' → logprob: -18.125028610229492
    7. '{}' → logprob: -19.125028610229492
    8. '[])' → logprob: -19.625028610229492
    9. '[],' → logprob: -20.375028610229492
    10. '[]"' → logprob: -20.500028610229492

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7118301391601562
    2. 'while' → logprob: -0.9618301391601562
    3. ' while' → logprob: -2.0868301391601562
    4. 'for' → logprob: -6.836830139160156
    5. ' for' → logprob: -6.836830139160156
    6. '
' → logprob: -7.836830139160156
    7. '   ' → logprob: -8.461830139160156
    8. '	while' → logprob: -9.211830139160156
    9. '        
' → logprob: -10.211830139160156
    10. 'i' → logprob: -10.711830139160156

Token 410: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.037500813603401184
    2. ' while' → logprob: -3.7875008583068848
    3. '       ' → logprob: -4.287500858306885
    4. 'for' → logprob: -7.912500858306885
    5. '   ' → logprob: -10.787500381469727
    6. 'i' → logprob: -11.162500381469727
    7. ' for' → logprob: -11.912500381469727
    8. '	while' → logprob: -12.912500381469727
    9. 'idx' → logprob: -13.412500381469727
    10. ' i' → logprob: -14.162500381469727

Token 411: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.054892104119062424
    2. ' pos' → logprob: -2.929892063140869
    3. '	pos' → logprob: -12.679892539978027
    4. '   ' → logprob: -12.804892539978027
    5. '(pos' → logprob: -13.179892539978027
    6. ' ' → logprob: -14.429892539978027
    7. '       ' → logprob: -15.304892539978027
    8. '_pos' → logprob: -15.304892539978027
    9. '    ' → logprob: -15.304892539978027
    10. ' ' → logprob: -15.429892539978027

Token 412: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.27475348114967346
    2. '<len' → logprob: -1.774753451347351
    3. '<' → logprob: -2.6497535705566406
    4. ' ' → logprob: -11.89975357055664
    5. '<size' → logprob: -12.02475357055664
    6. ')<' → logprob: -12.02475357055664
    7. '<ll' → logprob: -12.27475357055664
    8. 'len' → logprob: -12.89975357055664
    9. '<li' → logprob: -13.14975357055664
    10. '<n' → logprob: -13.27475357055664

Token 413: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00091217877343297
    2. ' len' → logprob: -7.000912189483643
    3. '(len' → logprob: -14.500911712646484
    4. '=len' → logprob: -16.500911712646484
    5. '[len' → logprob: -17.375911712646484
    6. '<len' → logprob: -18.250911712646484
    7. ',len' → logprob: -19.125911712646484
    8. '	len' → logprob: -19.625911712646484
    9. 'leni' → logprob: -21.375911712646484
    10. 'length' → logprob: -21.750911712646484

Token 414: '(fi' (ID: 180137)
  Prédit: '(fi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fi' → logprob: -0.00018268341955263168
    2. 'fi' → logprob: -8.62518310546875
    3. '(' → logprob: -13.25018310546875
    4. ' fi' → logprob: -14.12518310546875
    5. '	fi' → logprob: -14.50018310546875
    6. ' (' → logprob: -16.50018310546875
    7. '(fin' → logprob: -17.37518310546875
    8. 'Fi' → logprob: -17.62518310546875
    9. '.fi' → logprob: -18.12518310546875
    10. '(
' → logprob: -18.12518310546875

Token 415: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2791212201118469
    2. ' and' → logprob: -1.9041211605072021
    3. '):
' → logprob: -2.404121160507202
    4. 'and' → logprob: -5.654121398925781
    5. ' )' → logprob: -7.404121398925781
    6. '):' → logprob: -9.654121398925781
    7. ' ):
' → logprob: -10.029121398925781
    8. ',' → logprob: -11.529121398925781
    9. ':
' → logprob: -12.029121398925781
    10. '):

' → logprob: -12.404121398925781

Token 416: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4357783794403076
    2. 's' → logprob: -1.6857783794403076
    3. '       ' → logprob: -2.3107783794403076
    4. ' s' → logprob: -3.3107783794403076
    5. ' if' → logprob: -4.560778617858887
    6. 'if' → logprob: -4.810778617858887
    7. 'start' → logprob: -5.310778617858887
    8. '   ' → logprob: -5.935778617858887
    9. 'fi' → logprob: -6.685778617858887
    10. ',' → logprob: -6.810778617858887

Token 417: ' f' (ID: 285)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02988424152135849
    2. '           ' → logprob: -4.154884338378906
    3. 'start' → logprob: -5.654884338378906
    4. ' s' → logprob: -5.904884338378906
    5. 'f' (adapté à ' f') → logprob: -6.279884338378906
    6. 'if' → logprob: -6.654884338378906
    7. 'fs' → logprob: -7.029884338378906
    8. 'interval' → logprob: -7.029884338378906
    9. 'fi' → logprob: -7.154884338378906
    10. 'cur' → logprob: -7.529884338378906

Token 418: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.20453140139579773
    2. '_start' → logprob: -1.9545314311981201
    3. 'irst' → logprob: -3.70453143119812
    4. 'i' → logprob: -4.204531192779541
    5. 's' → logprob: -6.704531192779541
    6. ' =' → logprob: -7.454531192779541
    7. 'ist' → logprob: -8.2045316696167
    8. 'interval' → logprob: -8.2045316696167
    9. '_interval' → logprob: -8.4545316696167
    10. 'ree' → logprob: -8.4545316696167

Token 419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012080918531864882
    2. ',f' → logprob: -6.876208305358887
    3. ' ,' → logprob: -9.001208305358887
    4. ',end' → logprob: -10.876208305358887
    5. ',start' → logprob: -11.376208305358887
    6. '=' → logprob: -11.876208305358887
    7. ',
' → logprob: -13.376208305358887
    8. '           ' → logprob: -13.751208305358887
    9. ',next' → logprob: -13.751208305358887
    10. ',pos' → logprob: -13.751208305358887

Token 420: ' fend' (ID: 196435)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.003615631954744458
    2. ' fend' → logprob: -5.628615856170654
    3. ' f' → logprob: -11.753615379333496
    4. '   ' → logprob: -12.628615379333496
    5. ' ' → logprob: -13.878615379333496
    6. '       ' → logprob: -14.253615379333496
    7. 'fi' → logprob: -14.253615379333496
    8. '  ' → logprob: -15.003615379333496
    9. '	f' → logprob: -15.003615379333496
    10. '    ' → logprob: -15.753615379333496

Token 421: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029878340661525726
    2. '=' → logprob: -3.5298783779144287
    3. '           ' → logprob: -9.404878616333008
    4. ',' → logprob: -10.404878616333008
    5. '<|end|>' → logprob: -12.779878616333008
    6. ')' → logprob: -12.904878616333008
    7. ' ' → logprob: -13.279878616333008
    8. '<|end|>' → logprob: -13.654878616333008
    9. '               ' → logprob: -13.779878616333008
    10. '            ' → logprob: -13.779878616333008

Token 422: ' fi' (ID: 6134)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.3869765102863312
    2. ' fi' → logprob: -1.1369764804840088
    3. '	fi' → logprob: -9.76197624206543
    4. 'self' → logprob: -11.01197624206543
    5. '           ' → logprob: -11.38697624206543
    6. '(fi' → logprob: -11.51197624206543
    7. ' self' → logprob: -11.88697624206543
    8. '            ' → logprob: -14.13697624206543
    9. '        ' → logprob: -14.51197624206543
    10. '       ' → logprob: -15.01197624206543

Token 423: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -1.9361264946837764e-07
    2. 'pos' → logprob: -16.25
    3. '           ' → logprob: -17.25
    4. '[' → logprob: -18.25
    5. ' [' → logprob: -18.25
    6. '[
' → logprob: -18.625
    7. '   ' → logprob: -18.75
    8. ',pos' → logprob: -18.875
    9. '(pos' → logprob: -19.625
    10. '[position' → logprob: -20.0

Token 424: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4208245277404785
    2. ']' → logprob: -1.9208245277404785
    3. ')
' → logprob: -2.0458245277404785
    4. ']
' → logprob: -3.0458245277404785
    5. '           ' → logprob: -4.0458245277404785
    6. '])' → logprob: -6.9208245277404785
    7. ')]' → logprob: -7.4208245277404785
    8. '       ' → logprob: -8.17082405090332
    9. '])
' → logprob: -8.67082405090332
    10. '):
' → logprob: -8.79582405090332

Token 425: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003515137592330575
    2. '<|end|>' → logprob: -6.128515243530273
    3. '<|end|>' → logprob: -7.753515243530273
    4. '            
' → logprob: -8.128515243530273
    5. ' ' → logprob: -8.503515243530273
    6. '            ' → logprob: -8.878515243530273
    7. ' if' → logprob: -9.753515243530273
    8. '  
' → logprob: -10.128515243530273
    9. '       ' → logprob: -10.503515243530273
    10. ' 
' → logprob: -10.503515243530273

Token 426: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05140990763902664
    2. ' if' → logprob: -3.051409959793091
    3. 'if' (adapté à ' if') → logprob: -5.926409721374512
    4. '            
' → logprob: -10.051409721374512
    5. '<|end|>' → logprob: -11.051409721374512
    6. '       ' → logprob: -11.051409721374512
    7. ' ' → logprob: -11.551409721374512
    8. '            ' → logprob: -11.676409721374512
    9. '<|end|>' → logprob: -11.676409721374512
    10. '   ' → logprob: -11.801409721374512

Token 427: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.01646317169070244
    2. ' f' → logprob: -4.141463279724121
    3. 'start' → logprob: -8.141463279724121
    4. 'end' → logprob: -9.891463279724121
    5. ' start' → logprob: -10.141463279724121
    6. ' fend' → logprob: -10.766463279724121
    7. '   ' → logprob: -11.891463279724121
    8. '	f' → logprob: -12.266463279724121
    9. ' end' → logprob: -13.016463279724121
    10. ' ' → logprob: -13.016463279724121

Token 428: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.016182169318199158
    2. 'end' → logprob: -4.141181945800781
    3. 'f' → logprob: -9.766181945800781
    4. '[start' → logprob: -10.016181945800781
    5. '[end' → logprob: -11.016181945800781
    6. 'endt' → logprob: -11.641181945800781
    7. '_start' → logprob: -12.516181945800781
    8. '[' → logprob: -12.766181945800781
    9. '>=' → logprob: -13.266181945800781
    10. '>' → logprob: -13.391181945800781

Token 429: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.04877403751015663
    2. '>' → logprob: -3.048774003982544
    3. ' <=' → logprob: -8.798773765563965
    4. '<=' → logprob: -11.173773765563965
    5. ' >
' → logprob: -11.798773765563965
    6. ' >=' → logprob: -12.423773765563965
    7. '>end' → logprob: -12.798773765563965
    8. ' ' → logprob: -13.298773765563965
    9. ' >
' → logprob: -13.673773765563965
    10. '>=' → logprob: -13.923773765563965

Token 430: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0067154900170862675
    2. ' end' → logprob: -5.006715297698975
    3. '=end' → logprob: -17.006715774536133
    4. '	end' → logprob: -17.506715774536133
    5. '(end' → logprob: -18.006715774536133
    6. 'End' → logprob: -18.381715774536133
    7. '   ' → logprob: -18.631715774536133
    8. '[end' → logprob: -18.631715774536133
    9. ' ' → logprob: -18.756715774536133
    10. '_end' → logprob: -18.881715774536133

Token 431: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6854878067970276
    2. ':
' → logprob: -0.8104878067970276
    3. '               ' → logprob: -3.560487747192383
    4. '           ' → logprob: -4.185487747192383
    5. ' or' → logprob: -5.060487747192383
    6. '<|end|>' → logprob: -7.810487747192383
    7. '):
' → logprob: -8.060487747192383
    8. ':return' → logprob: -8.685487747192383
    9. '<|end|>' → logprob: -9.310487747192383
    10. ')' → logprob: -9.435487747192383

Token 432: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.41866585687967e-06
    2. '                
' → logprob: -13.000008583068848
    3. '<|end|>' → logprob: -13.500008583068848
    4. '           ' → logprob: -14.000008583068848
    5. ':
' → logprob: -14.125008583068848
    6. '                   ' → logprob: -14.625008583068848
    7. '
' → logprob: -14.750008583068848
    8. ' break' → logprob: -15.000008583068848
    9. ':' → logprob: -15.250008583068848
    10. 'break' → logprob: -15.375008583068848

Token 433: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.27300459146499634
    2. 'break' (adapté à ' break') → logprob: -1.5230045318603516
    3. ' break' → logprob: -3.8980045318603516
    4. '	break' → logprob: -8.148004531860352
    5. '           ' → logprob: -8.773004531860352
    6. 'return' → logprob: -9.523004531860352
    7. '
' → logprob: -10.773004531860352
    8. '                   ' → logprob: -11.023004531860352
    9. '                
' → logprob: -12.273004531860352
    10. '_break' → logprob: -12.398004531860352

Token 434: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16557806730270386
    2. '            
' → logprob: -3.1655781269073486
    3. '<|end|>' → logprob: -3.1655781269073486
    4. '
' → logprob: -3.4155781269073486
    5. '  
' → logprob: -4.1655778884887695
    6. ' 
' → logprob: -4.5405778884887695
    7. '    
' → logprob: -5.6655778884887695
    8. '<|end|>' → logprob: -6.1655778884887695
    9. '\n' → logprob: -6.9155778884887695
    10. '   
' → logprob: -7.4155778884887695

Token 435: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07242068648338318
    2. '
' → logprob: -2.822420597076416
    3. '            
' → logprob: -4.822420597076416
    4. ' if' → logprob: -7.572420597076416
    5. '  
' → logprob: -7.697420597076416
    6. ' 
' → logprob: -7.697420597076416
    7. '    
' → logprob: -7.947420597076416
    8. 'if' → logprob: -9.072421073913574
    9. '        
' → logprob: -9.197421073913574
    10. '
' → logprob: -9.322421073913574

Token 436: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6647712588310242
    2. 'if' → logprob: -1.039771318435669
    3. ' if' → logprob: -2.039771318435669
    4. '   ' → logprob: -7.16477108001709
    5. 'new' → logprob: -7.78977108001709
    6. '       ' → logprob: -8.16477108001709
    7. '            
' → logprob: -9.03977108001709
    8. 'fi' → logprob: -9.78977108001709
    9. 'del' → logprob: -9.91477108001709
    10. ' new' → logprob: -9.91477108001709

Token 437: ' overlapping' (ID: 90457)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09649473428726196
    2. '           ' → logprob: -2.471494674682617
    3. ' if' → logprob: -5.596494674682617
    4. '   ' → logprob: -6.596494674682617
    5. 'new' → logprob: -6.846494674682617
    6. 'updates' → logprob: -7.221494674682617
    7. 'over' → logprob: -8.346494674682617
    8. '       ' → logprob: -9.096494674682617
    9. 'del' → logprob: -9.471494674682617
    10. '#' → logprob: -9.596494674682617

Token 438: ' with' (ID: 483)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08680645376443863
    2. 'if' → logprob: -2.711806535720825
    3. '           ' → logprob: -4.211806297302246
    4. '
' → logprob: -7.961806297302246
    5. '<|end|>' → logprob: -8.461806297302246
    6. ',' → logprob: -8.711806297302246
    7. ' elif' → logprob: -9.086806297302246
    8. 'start' → logprob: -9.086806297302246
    9. ' at' → logprob: -9.086806297302246
    10. '            
' → logprob: -9.086806297302246

Token 439: ' [' (ID: 723)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.1328996419906616
    2. ' f' → logprob: -1.1328996419906616
    3. 'start' → logprob: -1.3828996419906616
    4. ' start' → logprob: -2.757899761199951
    5. 'end' → logprob: -4.007899761199951
    6. '[start' → logprob: -5.132899761199951
    7. 'max' → logprob: -5.507899761199951
    8. ' end' → logprob: -6.007899761199951
    9. ' the' → logprob: -6.132899761199951
    10. ' max' → logprob: -6.382899761199951

Token 440: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.3663626305060461e-05
    2. ' start' → logprob: -11.25001335144043
    3. '
' → logprob: -15.12501335144043
    4. '   ' → logprob: -16.37501335144043
    5. ',' → logprob: -17.00001335144043
    6. ')' → logprob: -17.12501335144043
    7. 'end' → logprob: -17.37501335144043
    8. '(start' → logprob: -17.50001335144043
    9. ',start' → logprob: -17.62501335144043
    10. '[start' → logprob: -17.75001335144043

Token 441: ',end' (ID: 93014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008999081328511238
    2. ',end' → logprob: -4.758998870849609
    3. ' ,' → logprob: -8.25899887084961
    4. ',start' → logprob: -9.50899887084961
    5. ',
' → logprob: -11.00899887084961
    6. ',pos' → logprob: -11.25899887084961
    7. ',f' → logprob: -12.88399887084961
    8. '           ' → logprob: -13.00899887084961
    9. ',int' → logprob: -13.13399887084961
    10. ',max' → logprob: -13.63399887084961

Token 442: ']
' (ID: 1592)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.6301108598709106
    2. ']
' → logprob: -1.0051108598709106
    3. ']' → logprob: -2.380110740661621
    4. '           ' → logprob: -5.255110740661621
    5. ']:' → logprob: -6.130110740661621
    6. ',' → logprob: -8.005110740661621
    7. '):
' → logprob: -8.005110740661621
    8. ':
' → logprob: -9.255110740661621
    9. ']:
' → logprob: -9.255110740661621
    10. ' ]
' → logprob: -9.380110740661621

Token 443: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007974773179739714
    2. '<|end|>' → logprob: -7.875797271728516
    3. '            
' → logprob: -8.750797271728516
    4. '<|end|>' → logprob: -9.125797271728516
    5. ' if' → logprob: -10.000797271728516
    6. ',' → logprob: -10.625797271728516
    7. '            ' → logprob: -10.625797271728516
    8. '          ' → logprob: -11.500797271728516
    9. '       ' → logprob: -11.625797271728516
    10. '  
' → logprob: -12.125797271728516

Token 444: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8446295857429504
    2. ' if' → logprob: -0.8446295857429504
    3. 'if' (adapté à ' if') → logprob: -1.9696295261383057
    4. ' new' → logprob: -8.344629287719727
    5. '   ' → logprob: -8.594629287719727
    6. 'new' → logprob: -9.094629287719727
    7. '            ' → logprob: -9.344629287719727
    8. '       ' → logprob: -9.469629287719727
    9. 'pos' → logprob: -9.594629287719727
    10. '    ' → logprob: -9.969629287719727

Token 445: ' fend' (ID: 196435)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.16060113906860352
    2. 'start' → logprob: -2.0356011390686035
    3. ' f' → logprob: -4.7856011390686035
    4. 'end' → logprob: -4.9106011390686035
    5. ' start' → logprob: -6.5356011390686035
    6. '   ' → logprob: -8.410600662231445
    7. ' end' → logprob: -8.910600662231445
    8. 's' → logprob: -9.160600662231445
    9. ' ' → logprob: -10.660600662231445
    10. '  ' → logprob: -10.848100662231445

Token 446: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5913853645324707
    2. ' >=' → logprob: -1.4663853645324707
    3. '<' → logprob: -1.9663853645324707
    4. '>=' → logprob: -2.5913853645324707
    5. ' ' → logprob: -8.716384887695312
    6. '<|end|>' → logprob: -9.466384887695312
    7. '    ' → logprob: -9.716384887695312
    8. ']>=' → logprob: -9.716384887695312
    9. ')>=' → logprob: -9.841384887695312
    10. '[' → logprob: -10.091384887695312

Token 447: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0015036711702123284
    2. ' start' → logprob: -6.5015034675598145
    3. '=start' → logprob: -13.751503944396973
    4. '=' → logprob: -16.501502990722656
    5. '	start' → logprob: -17.251502990722656
    6. '[start' → logprob: -17.251502990722656
    7. '_start' → logprob: -18.376502990722656
    8. 'Start' → logprob: -18.501502990722656
    9. 'star' → logprob: -18.501502990722656
    10. '
' → logprob: -18.876502990722656

Token 448: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2318219393491745
    2. '               ' → logprob: -2.1068220138549805
    3. ':' → logprob: -2.6068220138549805
    4. '           ' → logprob: -4.8568220138549805
    5. '):
' → logprob: -5.7318220138549805
    6. ' or' → logprob: -8.73182201385498
    7. ',' → logprob: -9.48182201385498
    8. '):' → logprob: -10.10682201385498
    9. '<|end|>' → logprob: -10.23182201385498
    10. '<|end|>' → logprob: -10.35682201385498

Token 449: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0027062043081969023
    2. ':
' → logprob: -6.752706050872803
    3. '           ' → logprob: -7.502706050872803
    4. '                
' → logprob: -7.752706050872803
    5. '            
' → logprob: -9.252706527709961
    6. '\n' → logprob: -9.252706527709961
    7. '
' → logprob: -9.252706527709961
    8. '<|end|>' → logprob: -10.002706527709961
    9. ',' → logprob: -10.127706527709961
    10. '<|end|>' → logprob: -10.377706527709961

Token 450: ' pos' (ID: 1253)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12939201295375824
    2. 'pos' (adapté à ' pos') → logprob: -2.25439190864563
    3. ' pos' → logprob: -4.254392147064209
    4. ',pos' → logprob: -7.004392147064209
    5. '                   ' → logprob: -7.379392147064209
    6. '           ' → logprob: -8.12939167022705
    7. '
' → logprob: -9.37939167022705
    8. '	pos' → logprob: -9.50439167022705
    9. '                
' → logprob: -9.87939167022705
    10. '[pos' → logprob: -10.25439167022705

Token 451: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5759685039520264
    2. ' +=' → logprob: -0.8259685039520264
    3. '           ' → logprob: -10.825968742370605
    4. '               ' → logprob: -12.075968742370605
    5. '=' → logprob: -13.325968742370605
    6. '            ' → logprob: -14.575968742370605
    7. ']+=' → logprob: -14.700968742370605
    8. '                   ' → logprob: -14.825968742370605
    9. '+' → logprob: -15.450968742370605
    10. '1' → logprob: -16.57596778869629

Token 452: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004879915213678032
    2. ' ' → logprob: -7.625487804412842
    3. '   ' → logprob: -17.37548828125
    4. '```' → logprob: -18.62548828125
    5. '  ' → logprob: -20.12548828125
    6. '
' → logprob: -20.12548828125
    7. ' ' → logprob: -20.62548828125
    8. '۱' → logprob: -21.12548828125
    9. '１' → logprob: -21.50048828125
    10. '0' → logprob: -22.31298828125

Token 453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -17.8750057220459
    4. '   ' → logprob: -18.1250057220459
    5. '
' → logprob: -19.3750057220459
    6. '۱' → logprob: -19.8750057220459
    7. '１' → logprob: -20.5625057220459
    8. '  ' → logprob: -20.8750057220459
    9. '           ' → logprob: -21.5625057220459
    10. '﻿' → logprob: -21.7500057220459

Token 454: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001074611209332943
    2. '           ' → logprob: -7.37607479095459
    3. '<|end|>' → logprob: -8.12607479095459
    4. '
' → logprob: -10.00107479095459
    5. '                
' → logprob: -10.50107479095459
    6. '  
' → logprob: -11.12607479095459
    7. '                   ' → logprob: -11.12607479095459
    8. '<|end|>' → logprob: -11.62607479095459
    9. '              ' → logprob: -11.75107479095459
    10. ',' → logprob: -12.25107479095459

Token 455: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006550124380737543
    2. '           ' → logprob: -7.500655174255371
    3. '<|end|>' → logprob: -10.000655174255371
    4. '```' → logprob: -11.375655174255371
    5. ',' → logprob: -11.750655174255371
    6. '<|end|>' → logprob: -12.000655174255371
    7. '   ' → logprob: -12.375655174255371
    8. '                
' → logprob: -12.500655174255371
    9. ' ' → logprob: -12.500655174255371
    10. '                   ' → logprob: -12.500655174255371

Token 456: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01392559614032507
    2. 'continue' (adapté à ' continue') → logprob: -4.638925552368164
    3. ' continue' → logprob: -6.013925552368164
    4. '           ' → logprob: -6.388925552368164
    5. ' ' → logprob: -12.013925552368164
    6. 'return' → logprob: -12.263925552368164
    7. '   ' → logprob: -12.263925552368164
    8. '	continue' → logprob: -12.763925552368164
    9. '
' → logprob: -13.138925552368164
    10. '                   ' → logprob: -13.263925552368164

Token 457: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01724579930305481
    2. '
' → logprob: -4.392245769500732
    3. '            
' → logprob: -5.392245769500732
    4. '  
' → logprob: -10.14224624633789
    5. '    
' → logprob: -10.26724624633789
    6. ' 
' → logprob: -10.64224624633789
    7. '           
' → logprob: -11.14224624633789
    8. 'if' → logprob: -11.39224624633789
    9. ' if' → logprob: -12.01724624633789
    10. ',' → logprob: -12.14224624633789

Token 458: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001924706157296896
    2. '            
' → logprob: -7.001924514770508
    3. '
' → logprob: -7.126924514770508
    4. '  
' → logprob: -9.626924514770508
    5. ' 
' → logprob: -9.751924514770508
    6. ' if' → logprob: -10.376924514770508
    7. 'if' → logprob: -11.626924514770508
    8. '    
' → logprob: -11.751924514770508
    9. '       ' → logprob: -12.251924514770508
    10. ',' → logprob: -12.376924514770508

Token 459: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.039726369082927704
    2. 'if' → logprob: -3.5397262573242188
    3. ' if' → logprob: -4.789726257324219
    4. '            
' → logprob: -7.664726257324219
    5. 'new' → logprob: -8.289726257324219
    6. 'updates' → logprob: -8.664726257324219
    7. 'fi' → logprob: -8.789726257324219
    8. '       ' → logprob: -9.039726257324219
    9. '#' (adapté à ' #') → logprob: -9.289726257324219
    10. '   ' → logprob: -9.664726257324219

Token 460: ' Cut' (ID: 28849)
  Prédit: 'updates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'updates' → logprob: -0.87409508228302
    2. 'if' → logprob: -1.24909508228302
    3. '           ' → logprob: -1.87409508228302
    4. '#' → logprob: -3.1240949630737305
    5. 'new' → logprob: -3.4990949630737305
    6. 'to' → logprob: -3.8740949630737305
    7. 'del' → logprob: -4.2490949630737305
    8. 'fi' → logprob: -5.1240949630737305
    9. ' if' → logprob: -5.7490949630737305
    10. 'updated' → logprob: -5.9990949630737305

Token 461: ' out' (ID: 842)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5873996615409851
    2. ' if' → logprob: -2.21239972114563
    3. ' the' → logprob: -2.46239972114563
    4. ' existing' → logprob: -3.33739972114563
    5. ' into' → logprob: -3.46239972114563
    6. 'ting' → logprob: -3.46239972114563
    7. 'tings' → logprob: -3.46239972114563
    8. 's' → logprob: -4.087399482727051
    9. 'if' → logprob: -4.587399482727051
    10. ' left' → logprob: -4.712399482727051

Token 462: ' [' (ID: 723)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4428007900714874
    2. ' f' → logprob: -1.817800760269165
    3. '           ' → logprob: -2.317800760269165
    4. ' (' → logprob: -3.192800760269165
    5. 'the' → logprob: -4.067800998687744
    6. 'f' → logprob: -4.692800998687744
    7. '(' → logprob: -5.317800998687744
    8. ' if' → logprob: -5.442800998687744
    9. '(f' → logprob: -5.567800998687744
    10. '            ' → logprob: -6.067800998687744

Token 463: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0005077573587186635
    2. ' start' → logprob: -7.625507831573486
    3. 'max' → logprob: -11.125507354736328
    4. '
' → logprob: -13.250507354736328
    5. 'f' → logprob: -14.000507354736328
    6. '   ' → logprob: -14.875507354736328
    7. ',' → logprob: -15.125507354736328
    8. ',start' → logprob: -15.125507354736328
    9. ' max' → logprob: -15.375507354736328
    10. '[start' → logprob: -15.625507354736328

Token 464: ',end' (ID: 93014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007732384838163853
    2. ',end' → logprob: -5.132732391357422
    3. ',start' → logprob: -6.632732391357422
    4. ' ,' → logprob: -8.132732391357422
    5. ',pos' → logprob: -8.757732391357422
    6. ',
' → logprob: -11.382732391357422
    7. '           ' → logprob: -12.257732391357422
    8. ',f' → logprob: -12.507732391357422
    9. ',next' → logprob: -13.632732391357422
    10. ',int' → logprob: -13.757732391357422

Token 465: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07289159297943115
    2. ' from' → logprob: -3.3228917121887207
    3. 'from' → logprob: -3.8228917121887207
    4. ']
' → logprob: -4.822891712188721
    5. ' ]' → logprob: -6.197891712188721
    6. '           ' → logprob: -6.697891712188721
    7. ')' → logprob: -7.697891712188721
    8. '],' → logprob: -8.322891235351562
    9. ']
' → logprob: -9.697891235351562
    10. ',' → logprob: -9.822891235351562

Token 466: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010270876373397186
    2. ' if' → logprob: -10.250102996826172
    3. ',' → logprob: -10.625102996826172
    4. '            
' → logprob: -11.125102996826172
    5. '<|end|>' → logprob: -11.500102996826172
    6. '<|end|>' → logprob: -12.625102996826172
    7. '
' → logprob: -12.750102996826172
    8. '       ' → logprob: -13.375102996826172
    9. '          ' → logprob: -13.500102996826172
    10. ' at' → logprob: -13.750102996826172

Token 467: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4743327796459198
    2. 'if' → logprob: -1.4743328094482422
    3. ' if' → logprob: -1.9743328094482422
    4. 'fi' → logprob: -5.224332809448242
    5. '       ' → logprob: -6.474332809448242
    6. 'del' → logprob: -6.974332809448242
    7. ' del' → logprob: -7.349332809448242
    8. 'new' → logprob: -7.724332809448242
    9. ' new' → logprob: -8.724332809448242
    10. 'updates' → logprob: -8.724332809448242

Token 468: ' Cases' (ID: 79835)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.775153398513794
    2. ' if' → logprob: -1.150153398513794
    3. '           ' → logprob: -2.775153398513794
    4. ' new' → logprob: -3.025153398513794
    5. ' del' → logprob: -3.525153398513794
    6. 'updates' → logprob: -3.775153398513794
    7. 'new' → logprob: -3.900153398513794
    8. ' updates' → logprob: -4.525153160095215
    9. 'fi' → logprob: -4.650153160095215
    10. 'del' → logprob: -5.025153160095215

Token 469: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23129253089427948
    2. ':' → logprob: -2.106292486190796
    3. ' if' → logprob: -3.231292486190796
    4. '            ' → logprob: -3.231292486190796
    5. '               ' → logprob: -6.731292724609375
    6. '<|end|>' → logprob: -7.106292724609375
    7. '            
' → logprob: -7.356292724609375
    8. ' =' → logprob: -7.481292724609375
    9. ':
' → logprob: -7.731292724609375
    10. '          ' → logprob: -7.981292724609375

Token 470: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006375004886649549
    2. ' if' → logprob: -7.625637531280518
    3. '            ' → logprob: -9.50063705444336
    4. 'if' → logprob: -10.62563705444336
    5. '```' → logprob: -10.75063705444336
    6. '               ' → logprob: -11.62563705444336
    7. '          ' → logprob: -12.25063705444336
    8. '            
' → logprob: -12.62563705444336
    9. '
' → logprob: -13.25063705444336
    10. '		' → logprob: -13.75063705444336

Token 471: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021180398762226105
    2. ' if' → logprob: -4.646180629730225
    3. '            ' → logprob: -5.021180629730225
    4. 'if' → logprob: -5.521180629730225
    5. '```' → logprob: -7.646180629730225
    6. '               ' → logprob: -9.521180152893066
    7. '       ' → logprob: -9.771180152893066
    8. '          ' → logprob: -9.896180152893066
    9. '        ' → logprob: -10.146180152893066
    10. ' ' → logprob: -11.396180152893066

Token 472: ' ' (ID: 220)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6294605135917664
    2. '           ' → logprob: -0.8794605135917664
    3. 'if' → logprob: -3.129460573196411
    4. '            ' → logprob: -4.879460334777832
    5. '        ' → logprob: -8.754460334777832
    6. '```' → logprob: -9.004460334777832
    7. ' elif' → logprob: -9.129460334777832
    8. '    ' → logprob: -9.504460334777832
    9. 'elif' → logprob: -9.629460334777832
    10. '               ' → logprob: -9.879460334777832

Token 473: '1' (ID: 16)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005007348023355007
    2. ' if' → logprob: -6.130007266998291
    3. '           ' → logprob: -6.505007266998291
    4. 'f' → logprob: -7.630007266998291
    5. '1' → logprob: -7.880007266998291
    6. 'If' → logprob: -8.25500774383545
    7. '#' → logprob: -9.38000774383545
    8. 'elif' → logprob: -10.13000774383545
    9. 'start' → logprob: -11.25500774383545
    10. '
' → logprob: -11.38000774383545

Token 474: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3825492262840271
    2. '.' → logprob: -1.6325492858886719
    3. 'if' → logprob: -2.882549285888672
    4. ')' → logprob: -2.882549285888672
    5. '           ' → logprob: -4.757549285888672
    6. ':' → logprob: -6.507549285888672
    7. 'If' → logprob: -9.257549285888672
    8. '#' → logprob: -10.382549285888672
    9. '   ' → logprob: -10.382549285888672
    10. '.
' → logprob: -10.382549285888672

Token 475: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.01837187632918358
    2. ' f' → logprob: -4.018372058868408
    3. 'start' → logprob: -9.14337158203125
    4. 'if' → logprob: -10.01837158203125
    5. '           ' → logprob: -11.01837158203125
    6. 'If' → logprob: -11.64337158203125
    7. ' start' → logprob: -11.76837158203125
    8. 'Cut' → logprob: -11.76837158203125
    9. ' if' → logprob: -11.89337158203125
    10. '#' → logprob: -12.39337158203125

Token 476: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00022308611369226128
    2. '_start' → logprob: -8.875223159790039
    3. 'end' → logprob: -10.125223159790039
    4. 'irst' → logprob: -11.250223159790039
    5. 's' → logprob: -12.375223159790039
    6. '[start' → logprob: -12.500223159790039
    7. 'or' → logprob: -13.000223159790039
    8. 'starts' → logprob: -13.000223159790039
    9. 'split' → logprob: -13.375223159790039
    10. 'if' → logprob: -13.375223159790039

Token 477: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11504071950912476
    2. '<' → logprob: -2.4900407791137695
    3. ' <=' → logprob: -3.9900407791137695
    4. '<=' → logprob: -5.7400407791137695
    5. ' ==' → logprob: -5.8650407791137695
    6. '==' → logprob: -7.4900407791137695
    7. '<|end|>' → logprob: -7.7400407791137695
    8. '=' → logprob: -10.24004077911377
    9. '[' → logprob: -10.49004077911377
    10. ',' → logprob: -10.61504077911377

Token 478: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.005235190503299236
    2. ' start' → logprob: -5.255235195159912
    3. '=start' → logprob: -13.880234718322754
    4. '=' → logprob: -16.38023567199707
    5. '	start' → logprob: -16.63023567199707
    6. '[start' → logprob: -16.75523567199707
    7. '_start' → logprob: -16.88023567199707
    8. 'end' → logprob: -16.88023567199707
    9. '
' → logprob: -17.13023567199707
    10. 'star' → logprob: -17.25523567199707

Token 479: ' <=' (ID: 5017)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.23531658947467804
    2. '           ' → logprob: -1.6103166341781616
    3. ',' → logprob: -5.235316753387451
    4. 'and' → logprob: -5.610316753387451
    5. ':' → logprob: -8.985316276550293
    6. '<|end|>' → logprob: -9.110316276550293
    7. '<|end|>' → logprob: -9.360316276550293
    8. '               ' → logprob: -9.485316276550293
    9. ' if' → logprob: -9.985316276550293
    10. ' ,' → logprob: -9.985316276550293

Token 480: ' fend' (ID: 196435)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.01457489375025034
    2. 'end' → logprob: -4.389575004577637
    3. ' fend' → logprob: -6.264575004577637
    4. ' ' → logprob: -10.139575004577637
    5. ' f' → logprob: -10.389575004577637
    6. 'start' → logprob: -10.639575004577637
    7. ' end' → logprob: -11.264575004577637
    8. '   ' → logprob: -11.514575004577637
    9. 's' → logprob: -11.514575004577637
    10. '  ' → logprob: -12.014575004577637

Token 481: ' <' (ID: 464)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.043609462678432465
    2. ' and' → logprob: -3.543609380722046
    3. '       ' → logprob: -5.168609619140625
    4. '<|end|>' → logprob: -6.168609619140625
    5. '<|end|>' → logprob: -6.918609619140625
    6. ':
' → logprob: -7.043609619140625
    7. ':' → logprob: -7.168609619140625
    8. ',' → logprob: -7.293609619140625
    9. '               ' → logprob: -7.293609619140625
    10. '            
' → logprob: -7.543609619140625

Token 482: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.016215719282627106
    2. ' end' → logprob: -4.266215801239014
    3. '=' → logprob: -6.766215801239014
    4. '=end' → logprob: -7.016215801239014
    5. ' =' → logprob: -15.016215324401855
    6. '=
' → logprob: -15.516215324401855
    7. '	end' → logprob: -16.391216278076172
    8. '_end' → logprob: -16.516216278076172
    9. ' ' → logprob: -17.141216278076172
    10. '(end' → logprob: -17.266216278076172

Token 483: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13723303377628326
    2. '
' → logprob: -2.512233018875122
    3. '            
' → logprob: -3.512233018875122
    4. '<|end|>' → logprob: -5.512233257293701
    5. '       ' → logprob: -5.887233257293701
    6. '<|end|>' → logprob: -6.012233257293701
    7. '\n' → logprob: -6.012233257293701
    8. ' 
' → logprob: -6.387233257293701
    9. '  
' → logprob: -6.887233257293701
    10. '            ' → logprob: -7.137233257293701

Token 484: ' shrink' (ID: 53969)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1811010092496872
    2. '            ' → logprob: -2.681101083755493
    3. ' if' → logprob: -3.056101083755493
    4. ' fi' → logprob: -4.056100845336914
    5. '               ' → logprob: -4.556100845336914
    6. 'fi' → logprob: -5.431100845336914
    7. '```' → logprob: -5.681100845336914
    8. ' ' → logprob: -5.931100845336914
    9. ' new' → logprob: -6.056100845336914
    10. ',' → logprob: -6.181100845336914

Token 485: ' to' (ID: 316)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -1.0965582132339478
    2. ' the' → logprob: -2.221558094024658
    3. ' to' → logprob: -2.596558094024658
    4. ' f' → logprob: -2.721558094024658
    5. '           ' → logprob: -2.846558094024658
    6. ' fi' → logprob: -2.846558094024658
    7. ' =' → logprob: -2.971558094024658
    8. 'f' → logprob: -2.971558094024658
    9. ' (' → logprob: -3.721558094024658
    10. '(f' → logprob: -3.721558094024658

Token 486: ' f' (ID: 285)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0646790936589241
    2. ' (' → logprob: -3.3146791458129883
    3. '(start' → logprob: -4.314679145812988
    4. '[(' → logprob: -5.064679145812988
    5. 'f' → logprob: -5.689679145812988
    6. '[f' → logprob: -6.814679145812988
    7. 'start' → logprob: -7.689679145812988
    8. '(s' → logprob: -7.939679145812988
    9. '[start' → logprob: -8.064679145812988
    10. '(end' → logprob: -8.064679145812988

Token 487: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00020330198458395898
    2. '(start' → logprob: -9.250203132629395
    3. 'end' → logprob: -9.625203132629395
    4. '[start' → logprob: -10.875203132629395
    5. '_start' → logprob: -11.125203132629395
    6. '[' → logprob: -13.875203132629395
    7. '(end' → logprob: -13.875203132629395
    8. '(' → logprob: -14.000203132629395
    9. ' start' → logprob: -14.500203132629395
    10. '[end' → logprob: -14.500203132629395

Token 488: ',start' (ID: 121128)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0050141094252467155
    2. ',start' → logprob: -5.755013942718506
    3. ' ,' → logprob: -7.255013942718506
    4. ',end' → logprob: -7.380013942718506
    5. 'start' → logprob: -8.880014419555664
    6. ',
' → logprob: -8.880014419555664
    7. ',f' → logprob: -9.255014419555664
    8. 'f' → logprob: -9.880014419555664
    9. ',pos' → logprob: -10.255014419555664
    10. 'end' → logprob: -11.880014419555664

Token 489: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18340682983398438
    2. '-' → logprob: -1.9334068298339844
    3. ',
' → logprob: -4.558406829833984
    4. ')' → logprob: -5.933406829833984
    5. '<|end|>' → logprob: -5.933406829833984
    6. ' -' → logprob: -6.183406829833984
    7. '           ' → logprob: -6.683406829833984
    8. ',None' → logprob: -7.933406829833984
    9. '            
' → logprob: -7.933406829833984
    10. ',end' → logprob: -8.058406829833984

Token 490: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015029559144750237
    2. ' ' → logprob: -6.501502990722656
    3. 'start' → logprob: -15.001502990722656
    4. 'end' → logprob: -16.126502990722656
    5. '           ' → logprob: -17.251502990722656
    6. ' end' → logprob: -17.501502990722656
    7. '   ' → logprob: -18.126502990722656
    8. '0' → logprob: -18.251502990722656
    9. '```' → logprob: -18.251502990722656
    10. '2' → logprob: -18.501502990722656

Token 491: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01034252718091011
    2. '
' → logprob: -5.135342597961426
    3. '               ' → logprob: -6.760342597961426
    4. '            
' → logprob: -6.760342597961426
    5. '\n' → logprob: -7.385342597961426
    6. ',' → logprob: -8.260342597961426
    7. '       ' → logprob: -8.385342597961426
    8. '                   ' → logprob: -8.635342597961426
    9. ' if' → logprob: -9.260342597961426
    10. '		' → logprob: -9.510342597961426

Token 492: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015596477314829826
    2. '            
' → logprob: -5.390596389770508
    3. '
' → logprob: -5.515596389770508
    4. '               ' → logprob: -6.140596389770508
    5. '\n' → logprob: -6.515596389770508
    6. '       ' → logprob: -6.640596389770508
    7. ')' → logprob: -8.265596389770508
    8. ' 
' → logprob: -8.515596389770508
    9. '  
' → logprob: -8.890596389770508
    10. ',' → logprob: -8.890596389770508

Token 493: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01397144328802824
    2. '            
' → logprob: -5.013971328735352
    3. '               ' → logprob: -6.763971328735352
    4. '
' → logprob: -6.888971328735352
    5. ' 
' → logprob: -7.013971328735352
    6. '            ' → logprob: -7.263971328735352
    7. '<|end|>' → logprob: -7.513971328735352
    8. '       ' → logprob: -7.763971328735352
    9. '  
' → logprob: -8.263971328735352
    10. '\n' → logprob: -8.388971328735352

Token 494: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.046817414462566376
    2. ' if' → logprob: -3.9218173027038574
    3. '            ' → logprob: -4.671817302703857
    4. '               ' → logprob: -5.796817302703857
    5. '            
' → logprob: -5.796817302703857
    6. ' elif' → logprob: -6.296817302703857
    7. 'pos' → logprob: -6.421817302703857
    8. 'elif' → logprob: -6.421817302703857
    9. ' 
' → logprob: -6.671817302703857
    10. ' pos' → logprob: -6.796817302703857

Token 495: '2' (ID: 17)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.5345269441604614
    2. '           ' → logprob: -1.0345269441604614
    3. 'if' → logprob: -3.034526824951172
    4. ' elif' → logprob: -5.159526824951172
    5. ' if' → logprob: -5.409526824951172
    6. '               ' → logprob: -9.409526824951172
    7. 'pos' → logprob: -9.534526824951172
    8. '       ' → logprob: -9.909526824951172
    9. '   ' → logprob: -10.284526824951172
    10. '            ' → logprob: -11.159526824951172

Token 496: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001443035143893212
    2. ' )' → logprob: -9.000144004821777
    3. ')
' → logprob: -11.750144004821777
    4. '   ' → logprob: -12.625144004821777
    5. 'elif' → logprob: -12.875144004821777
    6. '           ' → logprob: -13.500144004821777
    7. ':' → logprob: -14.375144004821777
    8. ')#' → logprob: -14.500144004821777
    9. ' if' → logprob: -14.625144004821777
    10. 'if' → logprob: -14.625144004821777

Token 497: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.186541199684143
    2. ' start' → logprob: -1.436541199684143
    3. 'f' → logprob: -1.561541199684143
    4. ' f' → logprob: -1.561541199684143
    5. ' fend' → logprob: -3.5615410804748535
    6. 'end' → logprob: -5.3115410804748535
    7. ' end' → logprob: -6.1865410804748535
    8. ' ' → logprob: -7.3115410804748535
    9. '   ' → logprob: -7.9365410804748535
    10. '    ' → logprob: -8.936541557312012

Token 498: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.09790308028459549
    2. '<=' → logprob: -2.84790301322937
    3. ',' → logprob: -3.97290301322937
    4. ' <' → logprob: -4.597903251647949
    5. ' >' → logprob: -5.597903251647949
    6. ' ,' → logprob: -6.972903251647949
    7. '<' → logprob: -7.847903251647949
    8. '>' → logprob: -7.972903251647949
    9. ' ' → logprob: -8.34790325164795
    10. ')' → logprob: -8.59790325164795

Token 499: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.005240156780928373
    2. ' f' → logprob: -5.255239963531494
    3. '	f' → logprob: -13.005240440368652
    4. '   ' → logprob: -13.255240440368652
    5. 'start' → logprob: -14.130240440368652
    6. ' ' → logprob: -14.755240440368652
    7. '_f' → logprob: -15.505240440368652
    8. '           ' → logprob: -15.880240440368652
    9. '    ' → logprob: -16.130239486694336
    10. '  ' → logprob: -16.255239486694336

Token 500: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: 0.0
    2. '_start' → logprob: -17.125
    3. ' start' → logprob: -18.625
    4. 'st' → logprob: -18.75
    5. '[start' → logprob: -18.75
    6. 'star' → logprob: -19.0
    7. 'end' → logprob: -19.25
    8. '	start' → logprob: -20.0
    9. '(start' → logprob: -20.25
    10. '   ' → logprob: -21.0

Token 501: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.28574347496032715
    2. ' and' → logprob: -2.410743474960327
    3. ' <' → logprob: -2.785743474960327
    4. ',' → logprob: -3.410743474960327
    5. '<=' → logprob: -3.410743474960327
    6. 'and' → logprob: -4.035743713378906
    7. '<|end|>' → logprob: -5.410743713378906
    8. '           ' → logprob: -5.910743713378906
    9. '<|end|>' → logprob: -6.035743713378906
    10. '<' → logprob: -6.535743713378906

Token 502: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.2884323298931122
    2. 'f' → logprob: -1.4134323596954346
    3. ' end' → logprob: -5.2884321212768555
    4. ' fend' → logprob: -6.7884321212768555
    5. ' ' → logprob: -8.038432121276855
    6. '   ' → logprob: -8.413432121276855
    7. 'ende' → logprob: -9.038432121276855
    8. '  ' → logprob: -9.288432121276855
    9. 'endt' → logprob: -9.413432121276855
    10. '    ' → logprob: -10.163432121276855

Token 503: ' <' (ID: 464)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.1693778038024902
    2. ' <' → logprob: -1.4193778038024902
    3. '           ' → logprob: -1.5443778038024902
    4. ' <=' → logprob: -1.9193778038024902
    5. 'and' → logprob: -3.7943778038024902
    6. '       ' → logprob: -4.04437780380249
    7. ',' → logprob: -4.16937780380249
    8. ':' → logprob: -4.29437780380249
    9. '<|end|>' → logprob: -5.91937780380249
    10. '<=' → logprob: -6.04437780380249

Token 504: ' fend' (ID: 196435)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.005932828411459923
    2. '=' → logprob: -5.255932807922363
    3. '=f' → logprob: -7.630932807922363
    4. ' fend' → logprob: -8.755932807922363
    5. 'end' → logprob: -10.630932807922363
    6. ' =' → logprob: -12.255932807922363
    7. ' ' → logprob: -12.505932807922363
    8. '=end' → logprob: -12.755932807922363
    9. '   ' → logprob: -13.005932807922363
    10. '
' → logprob: -13.505932807922363

Token 505: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013213764876127243
    2. ':' → logprob: -5.138213634490967
    3. '               ' → logprob: -5.888213634490967
    4. ':
' → logprob: -5.888213634490967
    5. ',' → logprob: -7.263213634490967
    6. '
' → logprob: -8.138214111328125
    7. '       ' → logprob: -8.638214111328125
    8. '            
' → logprob: -9.388214111328125
    9. '   ' → logprob: -9.513214111328125
    10. 'pos' → logprob: -9.888214111328125

Token 506: ' shrink' (ID: 53969)
  Prédit: ' fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fi' → logprob: -0.6802072525024414
    2. 'fi' → logprob: -1.4302072525024414
    3. '           ' → logprob: -3.0552072525024414
    4. ' new' → logprob: -3.1802072525024414
    5. '               ' → logprob: -3.5552072525024414
    6. '            ' → logprob: -3.6802072525024414
    7. ' self' → logprob: -3.8052072525024414
    8. ' pos' → logprob: -3.8052072525024414
    9. 'self' → logprob: -4.305207252502441
    10. ' f' → logprob: -4.555207252502441

Token 507: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.25382351875305176
    2. 'to' → logprob: -1.5038235187530518
    3. 'f' → logprob: -7.628823280334473
    4. '           ' → logprob: -7.753823280334473
    5. '_to' → logprob: -8.253823280334473
    6. ',' → logprob: -8.378823280334473
    7. '               ' → logprob: -8.878823280334473
    8. ' =' → logprob: -9.128823280334473
    9. ' f' → logprob: -9.253823280334473
    10. '            ' → logprob: -9.753823280334473

Token 508: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.1582787185907364
    2. ' end' → logprob: -2.033278703689575
    3. '(end' → logprob: -4.408278942108154
    4. ' (' → logprob: -6.533278942108154
    5. '   ' → logprob: -7.033278942108154
    6. 'f' → logprob: -7.908278942108154
    7. 'endt' → logprob: -9.033278465270996
    8. ' ' → logprob: -9.283278465270996
    9. '(' → logprob: -9.283278465270996
    10. ' f' → logprob: -10.283278465270996

Token 509: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0036025596782565117
    2. ' +' → logprob: -5.628602504730225
    3. ',' → logprob: -14.878602981567383
    4. '```' → logprob: -14.878602981567383
    5. 'plus' → logprob: -15.003602981567383
    6. '＋' → logprob: -15.003602981567383
    7. '()+' → logprob: -15.128602981567383
    8. '<|end|>' → logprob: -15.503602981567383
    9. '_plus' → logprob: -15.878602981567383
    10. '<|end|>' → logprob: -16.128602981567383

Token 510: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6060808522743173e-05
    2. ' ' → logprob: -10.625025749206543
    3. ',' → logprob: -14.625025749206543
    4. '```' → logprob: -14.625025749206543
    5. '+' → logprob: -15.000025749206543
    6. '   ' → logprob: -15.500025749206543
    7. '
' → logprob: -15.500025749206543
    8. '2' → logprob: -17.12502670288086
    9. '`' → logprob: -17.50002670288086
    10. '_' → logprob: -17.62502670288086

Token 511: ',f' (ID: 38733)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027011482045054436
    2. ',f' → logprob: -4.527011394500732
    3. ',start' → logprob: -4.652011394500732
    4. ',end' → logprob: -6.152011394500732
    5. '           ' → logprob: -6.402011394500732
    6. ',
' → logprob: -6.777011394500732
    7. ',pos' → logprob: -7.402011394500732
    8. ',new' → logprob: -9.40201187133789
    9. ' ,' → logprob: -9.52701187133789
    10. '+' → logprob: -9.52701187133789

Token 512: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -2.816093228830141e-06
    2. 'e' → logprob: -13.50000286102295
    3. 'start' → logprob: -14.87500286102295
    4. '(end' → logprob: -15.00000286102295
    5. '[end' → logprob: -15.12500286102295
    6. 'en' → logprob: -15.75000286102295
    7. '   ' → logprob: -17.000001907348633
    8. 'endt' → logprob: -17.125001907348633
    9. '_end' → logprob: -17.125001907348633
    10. ''end' → logprob: -17.250001907348633

Token 513: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0243549682199955
    2. '
' → logprob: -3.774354934692383
    3. '            
' → logprob: -7.524354934692383
    4. '               ' → logprob: -8.899354934692383
    5. ',' → logprob: -9.399354934692383
    6. '       ' → logprob: -9.649354934692383
    7. '\n' → logprob: -9.899354934692383
    8. '
' → logprob: -10.149354934692383
    9. 'pos' → logprob: -10.649354934692383
    10. '  
' → logprob: -10.774354934692383

Token 514: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017881096573546529
    2. 'pos' → logprob: -6.751788139343262
    3. '```' → logprob: -8.126788139343262
    4. '               ' → logprob: -9.251788139343262
    5. ' pos' → logprob: -9.626788139343262
    6. '
' → logprob: -10.376788139343262
    7. '       ' → logprob: -10.376788139343262
    8. ',' → logprob: -10.876788139343262
    9. '            
' → logprob: -11.001788139343262
    10. '#' → logprob: -11.376788139343262

Token 515: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012402292340993881
    2. 'elif' → logprob: -7.876240253448486
    3. ' elif' → logprob: -8.251239776611328
    4. 'pos' → logprob: -8.626239776611328
    5. ' if' → logprob: -8.626239776611328
    6. 'if' → logprob: -10.126239776611328
    7. '```' → logprob: -10.251239776611328
    8. ' pos' → logprob: -10.376239776611328
    9. '#' (adapté à ' #') → logprob: -10.501239776611328
    10. '       ' → logprob: -10.626239776611328

Token 516: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.349290668964386
    2. ' if' → logprob: -1.7242906093597412
    3. 'if' → logprob: -2.599290609359741
    4. 'elif' → logprob: -3.849290609359741
    5. ' elif' → logprob: -4.97429084777832
    6. '3' → logprob: -5.22429084777832
    7. ' ' → logprob: -5.84929084777832
    8. '   ' → logprob: -6.22429084777832
    9. ' #' → logprob: -7.22429084777832
    10. '#' → logprob: -7.22429084777832

Token 517: '3' (ID: 18)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.46502426266670227
    2. '           ' → logprob: -1.2150242328643799
    3. ' if' → logprob: -3.21502423286438
    4. 'elif' → logprob: -3.59002423286438
    5. 'pos' → logprob: -6.090024471282959
    6. '   ' → logprob: -6.340024471282959
    7. '#' → logprob: -6.715024471282959
    8. '       ' → logprob: -7.465024471282959
    9. ' elif' → logprob: -7.465024471282959
    10. 'start' → logprob: -8.5900239944458

Token 518: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.306760805164231e-05
    2. ' )' → logprob: -12.25001335144043
    3. '   ' → logprob: -12.75001335144043
    4. 'elif' → logprob: -13.87501335144043
    5. ')
' → logprob: -14.00001335144043
    6. 'if' → logprob: -14.12501335144043
    7. ' if' → logprob: -14.25001335144043
    8. '           ' → logprob: -14.75001335144043
    9. ' ==' → logprob: -15.12501335144043
    10. '
' → logprob: -16.00001335144043

Token 519: ' f' (ID: 285)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.2847404181957245
    2. ' start' → logprob: -2.159740447998047
    3. 'f' → logprob: -2.409740447998047
    4. ' f' → logprob: -3.159740447998047
    5. ' ' → logprob: -9.784740447998047
    6. '   ' → logprob: -10.034740447998047
    7. '(start' → logprob: -10.284740447998047
    8. '[start' → logprob: -11.409740447998047
    9. '  ' → logprob: -12.284740447998047
    10. '    ' → logprob: -13.284740447998047

Token 520: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -2.339278580620885e-06
    2. '_start' → logprob: -13.375001907348633
    3. '[start' → logprob: -15.375001907348633
    4. 'end' → logprob: -15.875001907348633
    5. '(start' → logprob: -16.625001907348633
    6. ' start' → logprob: -17.000001907348633
    7. 's' → logprob: -17.125001907348633
    8. 'st' → logprob: -17.250001907348633
    9. '   ' → logprob: -17.625001907348633
    10. 't' → logprob: -17.750001907348633

Token 521: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04395974427461624
    2. '<' → logprob: -3.168959856033325
    3. ' <=' → logprob: -7.168959617614746
    4. '<=' → logprob: -9.793959617614746
    5. ' >' → logprob: -9.793959617614746
    6. '<|end|>' → logprob: -9.918959617614746
    7. ' ' → logprob: -11.918959617614746
    8. ' ==' → logprob: -12.668959617614746
    9. ',' → logprob: -13.168959617614746
    10. '>' → logprob: -13.543959617614746

Token 522: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.004086828324943781
    2. ' start' → logprob: -5.504086971282959
    3. '=start' → logprob: -12.0040864944458
    4. '=' → logprob: -13.8790864944458
    5. 'end' → logprob: -13.8790864944458
    6. ' ' → logprob: -15.6290864944458
    7. '[start' → logprob: -16.254087448120117
    8. '
' → logprob: -16.504087448120117
    9. '	start' → logprob: -17.004087448120117
    10. '   ' → logprob: -17.629087448120117

Token 523: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8215100765228271
    2. 'and' → logprob: -1.0715100765228271
    3. ' <' → logprob: -2.321510076522827
    4. ' <=' → logprob: -3.071510076522827
    5. ',' → logprob: -3.696510076522827
    6. '<' → logprob: -3.946510076522827
    7. '<=' → logprob: -3.946510076522827
    8. '           ' → logprob: -5.571510314941406
    9. '<|end|>' → logprob: -5.696510314941406
    10. ' ' → logprob: -7.946510314941406

Token 524: ' fend' (ID: 196435)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.9448108077049255
    2. ' fend' → logprob: -1.1948108673095703
    3. 'end' → logprob: -1.4448108673095703
    4. ' end' → logprob: -2.6948108673095703
    5. '   ' → logprob: -6.31981086730957
    6. ' ' → logprob: -6.56981086730957
    7. '    ' → logprob: -7.31981086730957
    8. '  ' → logprob: -7.44481086730957
    9. ' f' → logprob: -8.56981086730957
    10. '(end' → logprob: -10.06981086730957

Token 525: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.04460420459508896
    2. '>' → logprob: -3.1696043014526367
    3. ' >=' → logprob: -6.544604301452637
    4. '>end' → logprob: -9.044604301452637
    5. '>=' → logprob: -10.294604301452637
    6. ' ' → logprob: -11.919604301452637
    7. 'end' → logprob: -12.419604301452637
    8. '   ' → logprob: -13.919604301452637
    9. ' <' → logprob: -14.044604301452637
    10. ' end' → logprob: -14.669604301452637

Token 526: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.6931512355804443
    2. ' end' → logprob: -0.6931512355804443
    3. ' ' → logprob: -13.693151473999023
    4. '=end' → logprob: -14.068151473999023
    5. '	end' → logprob: -14.193151473999023
    6. '(end' → logprob: -14.193151473999023
    7. '   ' → logprob: -14.693151473999023
    8. '  ' → logprob: -16.693151473999023
    9. '>end' → logprob: -16.818151473999023
    10. '[end' → logprob: -16.818151473999023

Token 527: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029782429337501526
    2. ':' → logprob: -3.90478253364563
    3. ':
' → logprob: -5.279782295227051
    4. ',' → logprob: -5.904782295227051
    5. '               ' → logprob: -7.779782295227051
    6. '       ' → logprob: -7.904782295227051
    7. ' =' → logprob: -9.40478229522705
    8. '          ' → logprob: -9.52978229522705
    9. ' :' → logprob: -9.90478229522705
    10. ' and' → logprob: -9.90478229522705

Token 528: ' split' (ID: 12648)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2626951336860657
    2. ' updates' → logprob: -2.387695074081421
    3. 'updates' → logprob: -3.012695074081421
    4. ' #' → logprob: -3.387695074081421
    5. 'fi' → logprob: -3.762695074081421
    6. ' fi' → logprob: -4.3876953125
    7. '               ' → logprob: -4.7626953125
    8. '
' → logprob: -5.7626953125
    9. '#' → logprob: -5.8876953125
    10. '   ' → logprob: -6.0126953125

Token 529: ' into' (ID: 1511)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29157930612564087
    2. ' =' → logprob: -2.416579246520996
    3. ',' → logprob: -2.916579246520996
    4. ' into' → logprob: -3.291579246520996
    5. ' fi' → logprob: -3.416579246520996
    6. '               ' → logprob: -4.541579246520996
    7. 'fi' → logprob: -5.291579246520996
    8. ':' → logprob: -5.666579246520996
    9. ' to' → logprob: -6.041579246520996
    10. '=' → logprob: -6.041579246520996

Token 530: ' two' (ID: 1920)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.04287541285157204
    2. ' (' → logprob: -3.5428755283355713
    3. '[(' → logprob: -4.417875289916992
    4. '[f' → logprob: -7.417875289916992
    5. '(fi' → logprob: -8.917875289916992
    6. ' [(' → logprob: -9.167875289916992
    7. '   ' → logprob: -9.667875289916992
    8. '(start' → logprob: -11.167875289916992
    9. '           ' → logprob: -11.167875289916992
    10. 'f' → logprob: -11.417875289916992

Token 531: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.09526897966861725
    2. ' (' → logprob: -3.470268964767456
    3. 'interval' → logprob: -3.470268964767456
    4. '           ' → logprob: -4.470269203186035
    5. 'fi' → logprob: -4.845269203186035
    6. '(fi' → logprob: -5.345269203186035
    7. ',' → logprob: -6.970269203186035
    8. '(interval' → logprob: -7.345269203186035
    9. '               ' → logprob: -7.470269203186035
    10. '(' → logprob: -8.095269203186035

Token 532: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005710135214030743
    2. '
' → logprob: -5.880710124969482
    3. ',' → logprob: -6.005710124969482
    4. '               ' → logprob: -9.25571060180664
    5. ',
' → logprob: -10.00571060180664
    6. '<|end|>' → logprob: -10.00571060180664
    7. '<|end|>' → logprob: -10.13071060180664
    8. '            
' → logprob: -10.50571060180664
    9. ' =' → logprob: -10.88071060180664
    10. ':
' → logprob: -11.00571060180664

Token 533: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014297593152150512
    2. ',' → logprob: -7.501429557800293
    3. ' if' → logprob: -8.501429557800293
    4. '               ' → logprob: -8.876429557800293
    5. '[' → logprob: -9.376429557800293
    6. '            
' → logprob: -9.876429557800293
    7. '            ' → logprob: -9.876429557800293
    8. '       ' → logprob: -10.376429557800293
    9. '
' → logprob: -10.751429557800293
    10. '   ' → logprob: -10.751429557800293

Token 534: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2535671293735504
    2. ' if' → logprob: -1.628567099571228
    3. 'if' → logprob: -3.6285672187805176
    4. 'elif' → logprob: -7.378567218780518
    5. ' elif' → logprob: -7.878567218780518
    6. '       ' → logprob: -9.87856674194336
    7. 'pos' → logprob: -10.00356674194336
    8. '               ' → logprob: -10.87856674194336
    9. '   ' → logprob: -10.87856674194336
    10. '```' → logprob: -11.62856674194336

Token 535: ' ' (ID: 220)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5395870804786682
    2. '           ' → logprob: -1.0395870208740234
    3. 'if' → logprob: -2.7895870208740234
    4. '            ' → logprob: -7.664587020874023
    5. ' elif' → logprob: -7.914587020874023
    6. 'elif' → logprob: -7.914587020874023
    7. 'pos' → logprob: -8.664587020874023
    8. '       ' → logprob: -8.914587020874023
    9. ' pos' → logprob: -9.539587020874023
    10. '    ' → logprob: -9.664587020874023

Token 536: '4' (ID: 19)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03164307028055191
    2. '           ' → logprob: -4.031642913818359
    3. 'elif' → logprob: -4.656642913818359
    4. ' if' → logprob: -5.781642913818359
    5. '       ' → logprob: -7.906642913818359
    6. '   ' → logprob: -8.40664291381836
    7. 'pos' → logprob: -10.03164291381836
    8. '
' → logprob: -10.15664291381836
    9. 'start' → logprob: -10.65664291381836
    10. '#' → logprob: -10.78164291381836

Token 537: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015321242390200496
    2. '           ' → logprob: -6.876532077789307
    3. ' )' → logprob: -7.876532077789307
    4. ' if' → logprob: -10.376532554626465
    5. '       ' → logprob: -11.001532554626465
    6. '   ' → logprob: -11.501532554626465
    7. ')
' → logprob: -11.751532554626465
    8. '<|end|>' → logprob: -11.751532554626465
    9. ':' → logprob: -12.126532554626465
    10. '<|end|>' → logprob: -12.376532554626465

Token 538: ' full' (ID: 3149)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.8540846705436707
    2. ' f' → logprob: -1.1040847301483154
    3. 'start' → logprob: -1.6040847301483154
    4. ' start' → logprob: -3.3540847301483154
    5. 'if' → logprob: -6.979084491729736
    6. ' (' → logprob: -7.104084491729736
    7. '#' → logprob: -7.479084491729736
    8. '(start' → logprob: -7.479084491729736
    9. 'elif' → logprob: -7.604084491729736
    10. ' ' → logprob: -7.729084491729736

Token 539: ' covered' (ID: 13083)
  Prédit: ' overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' overlap' → logprob: -1.3329113721847534
    2. 'remove' → logprob: -1.7079113721847534
    3. ' removal' → logprob: -1.9579113721847534
    4. ' remove' → logprob: -2.082911491394043
    5. 'over' → logprob: -2.207911491394043
    6. '_overlap' → logprob: -2.582911491394043
    7. '_remove' → logprob: -3.832911491394043
    8. 'cover' → logprob: -4.082911491394043
    9. '<|end|>' → logprob: -4.707911491394043
    10. ' cover' → logprob: -4.832911491394043

Token 540: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10888008028268814
    2. ' if' → logprob: -2.858880043029785
    3. ':' → logprob: -4.108880043029785
    4. ',' → logprob: -4.983880043029785
    5. ' =' → logprob: -5.233880043029785
    6. ':
' → logprob: -5.608880043029785
    7. 'if' → logprob: -5.858880043029785
    8. '
' → logprob: -6.483880043029785
    9. '            ' → logprob: -6.483880043029785
    10. '<|end|>' → logprob: -6.483880043029785

Token 541: ' remove' (ID: 6234)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.407740980386734
    2. 'if' → logprob: -1.7827409505844116
    3. 'fi' → logprob: -2.782741069793701
    4. ' fi' → logprob: -2.907741069793701
    5. ' del' → logprob: -3.657741069793701
    6. ' pos' → logprob: -4.407741069793701
    7. '           ' → logprob: -5.282741069793701
    8. 'pos' → logprob: -6.157741069793701
    9. 'del' → logprob: -6.657741069793701
    10. '            ' → logprob: -7.157741069793701

Token 542: ' interval' (ID: 17116)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06461551040410995
    2. ' =' → logprob: -4.064615726470947
    3. ' fi' → logprob: -4.064615726470947
    4. ',' → logprob: -5.064615726470947
    5. '            
' → logprob: -5.814615726470947
    6. '
' → logprob: -5.814615726470947
    7. '       ' → logprob: -5.939615726470947
    8. 'fi' → logprob: -5.939615726470947
    9. ' del' → logprob: -6.189615726470947
    10. ' 
' → logprob: -6.439615726470947

Token 543: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.040763914585113525
    2. '
' → logprob: -3.2907638549804688
    3. '<|end|>' → logprob: -7.040763854980469
    4. '            
' → logprob: -7.290763854980469
    5. ',' → logprob: -7.665763854980469
    6. '<|end|>' → logprob: -8.915763854980469
    7. '
' → logprob: -8.915763854980469
    8. ' =' → logprob: -10.040763854980469
    9. '               ' → logprob: -10.040763854980469
    10. '    
' → logprob: -10.290763854980469

Token 544: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006037346553057432
    2. ' if' → logprob: -5.25603723526001
    3. 'pos' → logprob: -8.631037712097168
    4. 'if' → logprob: -8.881037712097168
    5. ' pos' → logprob: -8.881037712097168
    6. '            
' → logprob: -9.631037712097168
    7. ',' → logprob: -9.631037712097168
    8. '       ' → logprob: -10.006037712097168
    9. '
' → logprob: -10.631037712097168
    10. '```' → logprob: -10.756037712097168

Token 545: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41437768936157227
    2. ' if' → logprob: -1.1643776893615723
    3. 'if' → logprob: -3.6643776893615723
    4. '       ' → logprob: -8.164377212524414
    5. 'pos' → logprob: -8.289377212524414
    6. '            
' → logprob: -8.539377212524414
    7. ' pos' → logprob: -8.789377212524414
    8. '   ' → logprob: -9.289377212524414
    9. '            ' → logprob: -9.539377212524414
    10. '
' → logprob: -9.789377212524414

Token 546: '_remove' (ID: 41629)
  Prédit: '_remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -0.14869031310081482
    2. '_del' → logprob: -2.1486902236938477
    3. 'remove' → logprob: -4.398690223693848
    4. '_delete' → logprob: -5.398690223693848
    5. 'del' → logprob: -6.148690223693848
    6. '_rem' → logprob: -7.148690223693848
    7. 'rm' → logprob: -7.773690223693848
    8. '_replace' → logprob: -8.023690223693848
    9. '_keep' → logprob: -8.898690223693848
    10. 'ken' → logprob: -9.148690223693848

Token 547: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760689973831177
    2. ' =' → logprob: -0.8260689973831177
    3. '.append' → logprob: -9.951068878173828
    4. ' ' → logprob: -10.951068878173828
    5. 's' → logprob: -11.451068878173828
    6. ',' → logprob: -11.576068878173828
    7. '_idxs' → logprob: -11.701068878173828
    8. '_indices' → logprob: -11.826068878173828
    9. '_idx' → logprob: -12.076068878173828
    10. '=[]' → logprob: -12.201068878173828

Token 548: ' fi' (ID: 6134)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.040725227445364
    2. 'False' → logprob: -4.040725231170654
    3. '[pos' → logprob: -4.790725231170654
    4. '[' → logprob: -5.040725231170654
    5. '[]
' → logprob: -5.790725231170654
    6. 'pos' → logprob: -6.165725231170654
    7. 'True' → logprob: -6.415725231170654
    8. '[(' → logprob: -8.290724754333496
    9. ' []' → logprob: -8.665724754333496
    10. '[]

' → logprob: -9.290724754333496

Token 549: '.pop' (ID: 15746)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.2557969093322754
    2. '.pop' → logprob: -1.5057969093322754
    3. 'pos' → logprob: -5.755796909332275
    4. '```' → logprob: -8.880796432495117
    5. 'pop' → logprob: -8.880796432495117
    6. '           ' → logprob: -9.255796432495117
    7. '.remove' → logprob: -9.630796432495117
    8. '[position' → logprob: -10.255796432495117
    9. '[' → logprob: -10.505796432495117
    10. '<|end|>' → logprob: -10.630796432495117

Token 550: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0011709370883181691
    2. 'pos' → logprob: -6.751171112060547
    3. '[pos' → logprob: -14.876171112060547
    4. ',pos' → logprob: -15.501171112060547
    5. ' pos' → logprob: -16.126171112060547
    6. '	pos' → logprob: -17.251171112060547
    7. '(' → logprob: -17.751171112060547
    8. '_pos' → logprob: -18.501171112060547
    9. '(position' → logprob: -20.001171112060547
    10. 'Pos' → logprob: -20.001171112060547

Token 551: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04865379258990288
    2. ')
' → logprob: -3.0486538410186768
    3. ')
' → logprob: -9.923653602600098
    4. ')

' → logprob: -11.798653602600098
    5. '           ' → logprob: -12.423653602600098
    6. ' )' → logprob: -13.298653602600098
    7. '())' → logprob: -13.548653602600098
    8. '       ' → logprob: -13.673653602600098
    9. ')#' → logprob: -15.048653602600098
    10. '())
' → logprob: -15.173653602600098

Token 552: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000627610192168504
    2. ' if' → logprob: -8.125627517700195
    3. 'if' → logprob: -9.125627517700195
    4. '            
' → logprob: -9.125627517700195
    5. '       ' → logprob: -10.000627517700195
    6. '<|end|>' → logprob: -10.625627517700195
    7. '          ' → logprob: -11.250627517700195
    8. '            ' → logprob: -11.750627517700195
    9. '               ' → logprob: -12.250627517700195
    10. '
' → logprob: -12.375627517700195

Token 553: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3177156150341034
    2. '           ' → logprob: -1.3177156448364258
    3. ' if' → logprob: -5.442715644836426
    4. '   ' → logprob: -10.067715644836426
    5. '       ' → logprob: -10.567715644836426
    6. 'updates' → logprob: -11.942715644836426
    7. '          ' → logprob: -12.192715644836426
    8. '               ' → logprob: -12.317715644836426
    9. 'new' → logprob: -12.567715644836426
    10. 'start' → logprob: -12.692715644836426

Token 554: ' to' (ID: 316)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.067538782954216
    2. 'to' → logprob: -2.8175387382507324
    3. ' f' → logprob: -5.567538738250732
    4. '   ' → logprob: -6.817538738250732
    5. ' to' → logprob: -7.817538738250732
    6. '    ' → logprob: -9.06753921508789
    7. 'start' → logprob: -9.81753921508789
    8. '  ' → logprob: -11.19253921508789
    9. 't' → logprob: -11.19253921508789
    10. '     ' → logprob: -11.31753921508789

Token 555: '_remove' (ID: 41629)
  Prédit: '_remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -0.006716436706483364
    2. '_start' → logprob: -5.756716251373291
    3. 'remove' → logprob: -6.506716251373291
    4. 'start' → logprob: -6.506716251373291
    5. 'Remove' → logprob: -8.38171672821045
    6. 'f' → logprob: -9.75671672821045
    7. '_end' → logprob: -9.88171672821045
    8. 'end' → logprob: -10.00671672821045
    9. '_finish' → logprob: -10.50671672821045
    10. '_REMOVE' → logprob: -10.63171672821045

Token 556: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005804349202662706
    2. '0' → logprob: -7.750580310821533
    3. '(' → logprob: -9.750580787658691
    4. ' [' → logprob: -11.000580787658691
    5. ' ' → logprob: -11.000580787658691
    6. '=' → logprob: -11.500580787658691
    7. '[
' → logprob: -11.750580787658691
    8. '1' → logprob: -12.000580787658691
    9. '
' → logprob: -12.125580787658691
    10. '][' → logprob: -12.500580787658691

Token 557: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010008628305513412
    2. '1' → logprob: -10.000100135803223
    3. ' ' → logprob: -10.375100135803223
    4. '[' → logprob: -11.687600135803223
    5. '
' → logprob: -12.750100135803223
    6. '(' → logprob: -13.187600135803223
    7. '   ' → logprob: -13.562600135803223
    8. 'import' → logprob: -14.187600135803223
    9. '...' → logprob: -14.375100135803223
    10. 'start' → logprob: -14.687600135803223

Token 558: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.18578773736953735
    2. '<' → logprob: -1.8107876777648926
    3. ')' → logprob: -5.310787677764893
    4. '<|end|>' → logprob: -7.685787677764893
    5. ')<' → logprob: -8.31078815460205
    6. ' ' → logprob: -8.93578815460205
    7. '>' → logprob: -9.43578815460205
    8. ' >' → logprob: -10.43578815460205
    9. ']' → logprob: -10.68578815460205
    10. ',' → logprob: -10.68578815460205

Token 559: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.28136107325553894
    2. ' <' → logprob: -1.4063611030578613
    3. '<|end|>' → logprob: -9.406360626220703
    4. '<size' → logprob: -10.531360626220703
    5. ' ' → logprob: -11.531360626220703
    6. 'start' → logprob: -11.531360626220703
    7. '<f' → logprob: -11.781360626220703
    8. ' start' → logprob: -12.031360626220703
    9. ')<' → logprob: -12.031360626220703
    10. '[' → logprob: -12.281360626220703

Token 560: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.004079112783074379
    2. ' start' → logprob: -5.504079341888428
    3. '	start' → logprob: -15.87907886505127
    4. 'star' → logprob: -15.87907886505127
    5. '=start' → logprob: -16.004079818725586
    6. '(start' → logprob: -16.504079818725586
    7. '[start' → logprob: -16.879079818725586
    8. '   ' → logprob: -17.129079818725586
    9. 'Start' → logprob: -17.504079818725586
    10. '
' → logprob: -17.629079818725586

Token 561: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6736627817153931
    2. ' and' → logprob: -0.9236627817153931
    3. ':' → logprob: -2.7986626625061035
    4. 'and' → logprob: -4.0486626625061035
    5. '           ' → logprob: -4.2986626625061035
    6. '       ' → logprob: -7.7986626625061035
    7. '               ' → logprob: -7.9236626625061035
    8. ',' → logprob: -8.423663139343262
    9. ':
' → logprob: -9.798663139343262
    10. '):
' → logprob: -10.298663139343262

Token 562: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024534115567803383
    2. 'fi' → logprob: -3.899534225463867
    3. '           ' → logprob: -5.774534225463867
    4. ' fi' → logprob: -8.274534225463867
    5. ',' → logprob: -9.149534225463867
    6. 'bis' → logprob: -9.149534225463867
    7. '   ' → logprob: -9.399534225463867
    8. ' if' → logprob: -9.399534225463867
    9. 'if' → logprob: -9.524534225463867
    10. 'self' → logprob: -9.649534225463867

Token 563: ' updates' (ID: 12663)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.2928720712661743
    2. ' fi' → logprob: -2.4178719520568848
    3. 'bis' → logprob: -2.5428719520568848
    4. ' bis' → logprob: -2.7928719520568848
    5. '               ' → logprob: -4.042871952056885
    6. '                   ' → logprob: -5.792871952056885
    7. '           ' → logprob: -6.042871952056885
    8. '   ' → logprob: -7.417871952056885
    9. '	fi' → logprob: -7.792871952056885
    10. 'if' → logprob: -8.292872428894043

Token 564: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.664371848164592e-05
    2. '.' → logprob: -11.125016212463379
    3. 'append' → logprob: -13.625016212463379
    4. '.ap' → logprob: -15.500016212463379
    5. ' .' → logprob: -15.625016212463379
    6. '.app' → logprob: -16.000017166137695
    7. '.insert' → logprob: -17.250017166137695
    8. '=' → logprob: -17.750017166137695
    9. '   ' → logprob: -18.000017166137695
    10. '.extend' → logprob: -18.875017166137695

Token 565: '((' (ID: 2054)
  Prédit: '(to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(to' → logprob: -0.009040901437401772
    2. '(' → logprob: -5.009040832519531
    3. ' (' → logprob: -6.259040832519531
    4. '(fi' → logprob: -8.884040832519531
    5. '               ' → logprob: -9.384040832519531
    6. '((' → logprob: -10.009040832519531
    7. '                   ' → logprob: -10.259040832519531
    8. '(t' → logprob: -10.259040832519531
    9. '(f' → logprob: -10.509040832519531
    10. '(To' → logprob: -10.634040832519531

Token 566: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.00219118339009583
    2. ' to' → logprob: -6.127191066741943
    3. '(to' → logprob: -12.377191543579102
    4. '   ' → logprob: -14.502191543579102
    5. '	to' → logprob: -14.752191543579102
    6. 't' → logprob: -15.877191543579102
    7. '.to' → logprob: -16.0021915435791
    8. '0' → logprob: -16.1271915435791
    9. '[to' → logprob: -16.1271915435791
    10. ' ' → logprob: -16.3771915435791

Token 567: '_remove' (ID: 41629)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.000843576155602932
    2. 'remove' → logprob: -7.750843524932861
    3. '_remove' → logprob: -8.62584400177002
    4. '0' → logprob: -9.25084400177002
    5. ' to' → logprob: -9.37584400177002
    6. '_to' → logprob: -11.00084400177002
    7. '[to' → logprob: -11.37584400177002
    8. '(to' → logprob: -11.62584400177002
    9. 'start' → logprob: -12.00084400177002
    10. '[' → logprob: -12.75084400177002

Token 568: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5771324634552002
    2. '[' → logprob: -0.8271324634552002
    3. '(' → logprob: -6.827132225036621
    4. ' ' → logprob: -10.202132225036621
    5. '   ' → logprob: -10.827132225036621
    6. ',' → logprob: -10.952132225036621
    7. '.' → logprob: -12.452132225036621
    8. '[
' → logprob: -12.452132225036621
    9. '#' → logprob: -12.827132225036621
    10. '
' → logprob: -13.202132225036621

Token 569: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -12.125007629394531
    3. '[' → logprob: -13.750007629394531
    4. '   ' → logprob: -14.625007629394531
    5. '(' → logprob: -15.375007629394531
    6. '1' → logprob: -15.625007629394531
    7. '۰' → logprob: -16.06250762939453
    8. ',' → logprob: -16.81250762939453
    9. 'start' → logprob: -17.00000762939453
    10. '    ' → logprob: -17.12500762939453

Token 570: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00047750159865245223
    2. ',start' → logprob: -7.750477313995361
    3. ' ,' → logprob: -10.00047779083252
    4. ',
' → logprob: -14.00047779083252
    5. 'start' → logprob: -15.25047779083252
    6. ',end' → logprob: -16.875476837158203
    7. ',to' → logprob: -17.000476837158203
    8. '‌,' → logprob: -17.125476837158203
    9. ',last' → logprob: -17.750476837158203
    10. '',' → logprob: -17.750476837158203

Token 571: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0015042672166600823
    2. ' start' → logprob: -6.501504421234131
    3. '   ' → logprob: -14.251503944396973
    4. '[start' → logprob: -14.376503944396973
    5. '(start' → logprob: -14.626503944396973
    6. '	start' → logprob: -15.626503944396973
    7. '=start' → logprob: -17.62650489807129
    8. '           ' → logprob: -17.62650489807129
    9. ',start' → logprob: -18.25150489807129
    10. '       ' → logprob: -18.37650489807129

Token 572: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04858771339058876
    2. ' -' → logprob: -3.0485877990722656
    3. ' ' → logprob: -16.048587799072266
    4. ')' → logprob: -16.298587799072266
    5. '   ' → logprob: -16.673587799072266
    6. '```' → logprob: -16.923587799072266
    7. ' ' → logprob: -17.548587799072266
    8. '[' → logprob: -18.298587799072266
    9. '           ' → logprob: -18.798587799072266
    10. ',' → logprob: -18.798587799072266

Token 573: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. ')' → logprob: -17.125024795532227
    4. '   ' → logprob: -19.125024795532227
    5. '2' → logprob: -19.625024795532227
    6. '```' → logprob: -19.750024795532227
    7. ' )' → logprob: -21.000024795532227
    8. '۱' → logprob: -21.125024795532227
    9. '<|end|>' → logprob: -21.125024795532227
    10. '
' → logprob: -21.625024795532227

Token 574: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1002836599946022
    2. '))
' → logprob: -2.350283622741699
    3. ')' → logprob: -10.6002836227417
    4. '           ' → logprob: -10.7252836227417
    5. '))
' → logprob: -11.8502836227417
    6. '               ' → logprob: -11.9752836227417
    7. ' ))' → logprob: -11.9752836227417
    8. '       ' → logprob: -12.2252836227417
    9. ' ))
' → logprob: -13.3502836227417
    10. '))

' → logprob: -13.7252836227417

Token 575: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006507210782729089
    2. ' if' → logprob: -7.875650882720947
    3. '       ' → logprob: -8.750650405883789
    4. 'if' → logprob: -9.375650405883789
    5. '               ' → logprob: -10.750650405883789
    6. '```' → logprob: -12.750650405883789
    7. '          ' → logprob: -13.375650405883789
    8. '   ' → logprob: -14.625650405883789
    9. ',' → logprob: -15.125650405883789
    10. '            
' → logprob: -15.750650405883789

Token 576: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.42222854495048523
    2. '           ' → logprob: -1.1722285747528076
    3. ' if' → logprob: -3.4222285747528076
    4. '       ' → logprob: -6.1722283363342285
    5. '   ' → logprob: -12.297228813171387
    6. '```' → logprob: -13.047228813171387
    7. '	if' → logprob: -13.422228813171387
    8. '               ' → logprob: -13.672228813171387
    9. '          ' → logprob: -13.672228813171387
    10. ' ' → logprob: -14.672228813171387

Token 577: ' to' (ID: 316)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.3422998785972595
    2. ' end' → logprob: -1.4672999382019043
    3. 'to' → logprob: -3.2172999382019043
    4. ' to' → logprob: -4.092299938201904
    5. '   ' → logprob: -6.467299938201904
    6. ' ' → logprob: -8.217299461364746
    7. '    ' → logprob: -8.717299461364746
    8. '  ' → logprob: -8.967299461364746
    9. 'endt' → logprob: -9.217299461364746
    10. '(end' → logprob: -9.717299461364746

Token 578: '_remove' (ID: 41629)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.038742661476135254
    2. ' end' → logprob: -3.9137425422668457
    3. '_remove' → logprob: -4.038742542266846
    4. 'remove' → logprob: -9.163743019104004
    5. '(end' → logprob: -9.288743019104004
    6. '   ' → logprob: -9.413743019104004
    7. 'Remove' → logprob: -9.663743019104004
    8. '_end' → logprob: -10.163743019104004
    9. ' ' → logprob: -12.038743019104004
    10. ' Remove' → logprob: -12.413743019104004

Token 579: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.6789137084269896e-05
    2. '1' → logprob: -10.25003719329834
    3. ' ' → logprob: -15.12503719329834
    4. '   ' → logprob: -15.37503719329834
    5. '[
' → logprob: -15.50003719329834
    6. '2' → logprob: -15.62503719329834
    7. '(' → logprob: -16.750036239624023
    8. ',' → logprob: -17.000036239624023
    9. '                   ' → logprob: -17.375036239624023
    10. '
' → logprob: -17.375036239624023

Token 580: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002876676619052887
    2. 'end' → logprob: -5.8778767585754395
    3. '(end' → logprob: -10.627876281738281
    4. '[' → logprob: -10.627876281738281
    5. '(' → logprob: -11.502876281738281
    6. ' end' → logprob: -12.502876281738281
    7. ' ' → logprob: -12.627876281738281
    8. '   ' → logprob: -13.377876281738281
    9. '[end' → logprob: -13.502876281738281
    10. '2' → logprob: -14.815376281738281

Token 581: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.16023549437522888
    2. '>' → logprob: -1.9102355241775513
    3. ' ' → logprob: -12.660235404968262
    4. '>end' → logprob: -12.660235404968262
    5. ')' → logprob: -13.285235404968262
    6. ' >=' → logprob: -13.410235404968262
    7. '   ' → logprob: -14.535235404968262
    8. ',' → logprob: -14.785235404968262
    9. ')>' → logprob: -15.160235404968262
    10. '<|end|>' → logprob: -16.160236358642578

Token 582: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.47545507550239563
    2. '>' → logprob: -0.9754550457000732
    3. ' >=' → logprob: -6.725455284118652
    4. '>=' → logprob: -9.475455284118652
    5. '>end' → logprob: -9.475455284118652
    6. ' ' → logprob: -10.850455284118652
    7. '   ' → logprob: -13.850455284118652
    8. ',' → logprob: -14.225455284118652
    9. ' ' → logprob: -14.850455284118652
    10. ')' → logprob: -15.100455284118652

Token 583: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.6931489109992981
    2. ' end' → logprob: -0.6931489109992981
    3. '(end' → logprob: -14.193148612976074
    4. '   ' → logprob: -15.318148612976074
    5. '	end' → logprob: -15.443148612976074
    6. ' ' → logprob: -15.443148612976074
    7. '=end' → logprob: -16.56814956665039
    8. '[end' → logprob: -16.69314956665039
    9. 'End' → logprob: -17.44314956665039
    10. '  ' → logprob: -17.69314956665039

Token 584: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16876377165317535
    2. ':
' → logprob: -3.0437638759613037
    3. ',end' → logprob: -3.1687638759613037
    4. '           ' → logprob: -3.4187638759613037
    5. ' ,' → logprob: -3.7937638759613037
    6. ':' → logprob: -5.293763637542725
    7. '               ' → logprob: -6.418763637542725
    8. '(end' → logprob: -6.918763637542725
    9. '       ' → logprob: -7.543763637542725
    10. '+' → logprob: -7.793763637542725

Token 585: '               ' (ID: 506)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2648118734359741
    2. '           ' → logprob: -1.7648118734359741
    3. '(' → logprob: -2.8898119926452637
    4. '               ' → logprob: -5.514811992645264
    5. '(up' → logprob: -6.764811992645264
    6. '            ' → logprob: -8.514811515808105
    7. ',' → logprob: -8.889811515808105
    8. '(update' → logprob: -9.514811515808105
    9. ' updates' → logprob: -9.764811515808105
    10. '(to' → logprob: -10.264811515808105

Token 586: ' updates' (ID: 12663)
  Prédit: ' updates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' updates' → logprob: -0.1291423738002777
    2. 'updates' (adapté à ' updates') → logprob: -2.1291422843933105
    3. ' (' → logprob: -6.3791422843933105
    4. '               ' → logprob: -8.254142761230469
    5. '(up' → logprob: -8.754142761230469
    6. '           ' → logprob: -10.629142761230469
    7. '(' → logprob: -10.629142761230469
    8. '                   ' → logprob: -10.879142761230469
    9. 'update' → logprob: -12.004142761230469
    10. '                ' → logprob: -12.504142761230469

Token 587: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0015496177366003394
    2. '.' → logprob: -6.50154972076416
    3. 'append' → logprob: -10.00154972076416
    4. '           ' → logprob: -14.25154972076416
    5. ' .' → logprob: -14.37654972076416
    6. ',' → logprob: -15.25154972076416
    7. '   ' → logprob: -15.62654972076416
    8. 'Append' → logprob: -15.62654972076416
    9. '       ' → logprob: -17.001548767089844
    10. '          ' → logprob: -17.251548767089844

Token 588: '((' (ID: 2054)
  Prédit: '(end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -0.29024410247802734
    2. '((' → logprob: -1.5402441024780273
    3. '(' → logprob: -3.2902441024780273
    4. ' (' → logprob: -8.165244102478027
    5. '   ' → logprob: -9.790244102478027
    6. ' ' → logprob: -13.290244102478027
    7. '  ' → logprob: -14.290244102478027
    8. '    ' → logprob: -14.665244102478027
    9. '(
' → logprob: -15.290244102478027
    10. '(new' → logprob: -15.665244102478027

Token 589: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0005617309361696243
    2. ' end' → logprob: -7.500561714172363
    3. '(end' → logprob: -11.750561714172363
    4. '   ' → logprob: -14.500561714172363
    5. '[end' → logprob: -15.625561714172363
    6. ' ' → logprob: -16.37556266784668
    7. '	end' → logprob: -16.50056266784668
    8. ',end' → logprob: -17.12556266784668
    9. ''end' → logprob: -17.37556266784668
    10. '  ' → logprob: -17.62556266784668

Token 590: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000804745068307966
    2. ' +' → logprob: -7.125804901123047
    3. '1' → logprob: -16.000804901123047
    4. '+,' → logprob: -16.750804901123047
    5. '+
' → logprob: -16.750804901123047
    6. '＋' → logprob: -17.125804901123047
    7. '   ' → logprob: -18.125804901123047
    8. '()+' → logprob: -18.250804901123047
    9. ')+' → logprob: -19.250804901123047
    10. ''+' → logprob: -19.250804901123047

Token 591: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ',' → logprob: -11.250017166137695
    3. ' ' → logprob: -12.500017166137695
    4. '   ' → logprob: -18.000017166137695
    5. ' ,' → logprob: -18.625017166137695
    6. '```' → logprob: -18.750017166137695
    7. ',
' → logprob: -19.625017166137695
    8. '0' → logprob: -20.250017166137695
    9. '2' → logprob: -20.625017166137695
    10. '<|end|>' → logprob: -20.750017166137695

Token 592: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000652389950118959
    2. ',to' → logprob: -7.375652313232422
    3. ' ,' → logprob: -10.750652313232422
    4. 'to' → logprob: -12.750652313232422
    5. '           ' → logprob: -14.375652313232422
    6. ',
' → logprob: -15.000652313232422
    7. '       ' → logprob: -15.750652313232422
    8. '(to' → logprob: -16.375652313232422
    9. '               ' → logprob: -16.500652313232422
    10. '   ' → logprob: -17.125652313232422

Token 593: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0003364158037584275
    2. ' to' → logprob: -8.000336647033691
    3. '               ' → logprob: -14.625336647033691
    4. '   ' → logprob: -15.125336647033691
    5. '           ' → logprob: -16.125335693359375
    6. '       ' → logprob: -16.500335693359375
    7. '	to' → logprob: -17.125335693359375
    8. '(to' → logprob: -17.375335693359375
    9. ' ' → logprob: -17.625335693359375
    10. '[to' → logprob: -17.750335693359375

Token 594: '_remove' (ID: 41629)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.167472705245018
    2. 'to' → logprob: -2.0424726009368896
    3. '_to' → logprob: -4.042472839355469
    4. '_remove' → logprob: -5.167472839355469
    5. '[' → logprob: -7.542472839355469
    6. ' ' → logprob: -9.167472839355469
    7. 'remove' → logprob: -9.542472839355469
    8. '   ' → logprob: -9.667472839355469
    9. '
' → logprob: -9.917472839355469
    10. '-' → logprob: -10.042472839355469

Token 595: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.0629870858974755e-05
    2. '1' → logprob: -9.75006103515625
    3. '   ' → logprob: -14.62506103515625
    4. '][' → logprob: -14.87506103515625
    5. ' [' → logprob: -15.12506103515625
    6. ' ' → logprob: -15.37506103515625
    7. ']' → logprob: -15.50006103515625
    8. ')' → logprob: -15.50006103515625
    9. '```' → logprob: -15.87506103515625
    10. ',' → logprob: -16.12506103515625

Token 596: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.875001907348633
    3. '   ' → logprob: -14.500001907348633
    4. ' ' → logprob: -16.000001907348633
    5. '۱' → logprob: -16.875001907348633
    6. '2' → logprob: -17.000001907348633
    7. ']' → logprob: -17.125001907348633
    8. '
' → logprob: -17.250001907348633
    9. '```' → logprob: -17.500001907348633
    10. '  ' → logprob: -18.312501907348633

Token 597: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.000352266215486452
    2. '))
' → logprob: -8.000351905822754
    3. '               ' → logprob: -12.250351905822754
    4. ')' → logprob: -12.250351905822754
    5. '           ' → logprob: -12.625351905822754
    6. ' ))' → logprob: -13.125351905822754
    7. ')))' → logprob: -13.875351905822754
    8. '       ' → logprob: -14.875351905822754
    9. '                   ' → logprob: -15.375351905822754
    10. '))

' → logprob: -16.12535285949707

Token 598: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009882401674985886
    2. '           ' → logprob: -4.88488245010376
    3. 'for' → logprob: -6.13488245010376
    4. ' for' → logprob: -9.884881973266602
    5. 'fi' → logprob: -10.509881973266602
    6. '   ' → logprob: -11.259881973266602
    7. '```' → logprob: -12.384881973266602
    8. 'while' → logprob: -12.759881973266602
    9. ' ' → logprob: -12.884881973266602
    10. '               ' → logprob: -13.384881973266602

Token 599: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37912559509277344
    2. 'for' (adapté à ' for') → logprob: -1.2541255950927734
    3. ' for' → logprob: -3.5041255950927734
    4. '   ' → logprob: -9.754125595092773
    5. '	for' → logprob: -10.754125595092773
    6. '           ' → logprob: -11.504125595092773
    7. 'fi' → logprob: -11.754125595092773
    8. '      ' → logprob: -11.879125595092773
    9. '```' → logprob: -12.004125595092773
    10. '[' → logprob: -12.254125595092773

Token 600: ' u' (ID: 337)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.5698068141937256
    2. 's' → logprob: -1.0698068141937256
    3. 'start' → logprob: -2.6948068141937256
    4. ' interval' → logprob: -4.194807052612305
    5. ' s' → logprob: -6.319807052612305
    6. 'upd' → logprob: -6.444807052612305
    7. 'u' → logprob: -6.694807052612305
    8. 'update' → logprob: -6.944807052612305
    9. 'st' → logprob: -7.319807052612305
    10. 'iv' → logprob: -7.694807052612305

Token 601: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3266059160232544
    2. 'in' → logprob: -2.076605796813965
    3. ',' → logprob: -2.701605796813965
    4. '_start' → logprob: -2.951605796813965
    5. 'start' → logprob: -3.701605796813965
    6. 'n' → logprob: -5.701605796813965
    7. 'u' → logprob: -5.826605796813965
    8. ',u' → logprob: -6.951605796813965
    9. '_idx' → logprob: -7.326605796813965
    10. ')' → logprob: -8.576605796813965

Token 602: ' updates' (ID: 12663)
  Prédit: 'updates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'updates' → logprob: -5.836499985889532e-05
    2. ' updates' → logprob: -9.7500581741333
    3. 'updated' → logprob: -17.750059127807617
    4. 'update' → logprob: -18.250059127807617
    5. 'up' → logprob: -18.750059127807617
    6. 're' → logprob: -18.750059127807617
    7. '
' → logprob: -19.625059127807617
    8. 'range' → logprob: -19.750059127807617
    9. '   ' → logprob: -19.875059127807617
    10. 'Updates' → logprob: -20.500059127807617

Token 603: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2017027586698532
    2. ':
' → logprob: -1.7017027139663696
    3. '):
' → logprob: -8.701703071594238
    4. ':
' → logprob: -10.326703071594238
    5. '):' → logprob: -10.576703071594238
    6. '   ' → logprob: -10.576703071594238
    7. '       ' → logprob: -11.326703071594238
    8. '           ' → logprob: -11.701703071594238
    9. ',' → logprob: -11.951703071594238
    10. '[::-' → logprob: -12.326703071594238

Token 604: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001016375608742237
    2. 'self' → logprob: -7.126016139984131
    3. 'bis' → logprob: -9.251016616821289
    4. ' self' → logprob: -9.626016616821289
    5. ' bis' → logprob: -11.251016616821289
    6. '   ' → logprob: -11.376016616821289
    7. 'fi' → logprob: -11.626016616821289
    8. '               ' → logprob: -12.376016616821289
    9. '          ' → logprob: -12.876016616821289
    10. '	       ' → logprob: -13.376016616821289

Token 605: ' bis' (ID: 7204)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.29121115803718567
    2. 'bis' (adapté à ' bis') → logprob: -1.4162111282348633
    3. '           ' → logprob: -5.416211128234863
    4. 'fi' → logprob: -6.041211128234863
    5. ' self' → logprob: -6.166211128234863
    6. ' bis' → logprob: -6.916211128234863
    7. '   ' → logprob: -9.791211128234863
    8. 'b' → logprob: -10.916211128234863
    9. 'bi' → logprob: -11.666211128234863
    10. '       ' → logprob: -12.541211128234863

Token 606: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -3.054500666621607e-06
    2. 'sect' → logprob: -13.25000286102295
    3. 'ort' → logprob: -14.87500286102295
    4. 'ec' → logprob: -15.00000286102295
    5. 'ects' → logprob: -15.62500286102295
    6. 'ct' → logprob: -15.75000286102295
    7. 'e' → logprob: -16.250003814697266
    8. 'ext' → logprob: -16.750003814697266
    9. 'act' → logprob: -16.750003814697266
    10. 'ectl' → logprob: -18.125003814697266

Token 607: '.ins' (ID: 65509)
  Prédit: '.ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ins' → logprob: -5.431207682704553e-05
    2. '.' → logprob: -10.000054359436035
    3. 'ins' → logprob: -11.750054359436035
    4. ' ins' → logprob: -14.875054359436035
    5. '_ins' → logprob: -15.125054359436035
    6. '.in' → logprob: -16.12505340576172
    7. '.ing' → logprob: -17.12505340576172
    8. ' .' → logprob: -17.50005340576172
    9. '.insert' → logprob: -17.50005340576172
    10. '(ins' → logprob: -17.62505340576172

Token 608: 'ort' (ID: 390)
  Prédit: 'ort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.0003445216570980847
    2. 'sort' → logprob: -8.000344276428223
    3. 'ert' → logprob: -12.375344276428223
    4. 's' → logprob: -13.250344276428223
    5. 'орт' → logprob: -13.625344276428223
    6. 'rt' → logprob: -13.875344276428223
    7. '```' → logprob: -15.875344276428223
    8. '_sort' → logprob: -16.25034523010254
    9. '(' → logprob: -16.62534523010254
    10. 'art' → logprob: -16.75034523010254

Token 609: '(fi' (ID: 180137)
  Prédit: '(fi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fi' → logprob: -0.2584744989871979
    2. '(self' → logprob: -1.5084744691848755
    3. 'self' → logprob: -5.508474349975586
    4. 'fi' → logprob: -6.008474349975586
    5. '(' → logprob: -11.883474349975586
    6. ' self' → logprob: -12.383474349975586
    7. '	fi' → logprob: -14.508474349975586
    8. ' (' → logprob: -15.008474349975586
    9. '(f' → logprob: -15.133474349975586
    10. '(fe' → logprob: -15.383474349975586

Token 610: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0053070466965436935
    2. ',u' → logprob: -5.255307197570801
    3. ' ,' → logprob: -10.0053071975708
    4. '(u' → logprob: -11.0053071975708
    5. 'u' → logprob: -11.6303071975708
    6. ' u' → logprob: -13.0053071975708
    7. '(' → logprob: -16.130306243896484
    8. ')' → logprob: -16.380306243896484
    9. '   ' → logprob: -16.755306243896484
    10. '           ' → logprob: -17.630306243896484

Token 611: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.16022808849811554
    2. ' u' → logprob: -1.9102281332015991
    3. '(u' → logprob: -12.53522777557373
    4. '	u' → logprob: -15.78522777557373
    5. ')' → logprob: -16.535228729248047
    6. '*u' → logprob: -16.910228729248047
    7. '(' → logprob: -18.285228729248047
    8. ' (' → logprob: -18.285228729248047
    9. '   ' → logprob: -18.410228729248047
    10. '_u' → logprob: -18.660228729248047

Token 612: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ')
' → logprob: -13.25000286102295
    3. ' )' → logprob: -14.00000286102295
    4. ')return' → logprob: -16.250001907348633
    5. '<|end|>' → logprob: -16.875001907348633
    6. ')#' → logprob: -18.125001907348633
    7. ')

' → logprob: -18.125001907348633
    8. ')}' → logprob: -18.125001907348633
    9. '))' → logprob: -18.250001907348633
    10. '       ' → logprob: -18.250001907348633

Token 613: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022268610075116158
    2. 'def' → logprob: -3.897268533706665
    3. '```' → logprob: -7.022268772125244
    4. ' def' → logprob: -7.272268772125244
    5. '<|end|>' → logprob: -9.522268295288086
    6. '
' → logprob: -10.772268295288086
    7. '    
' → logprob: -11.397268295288086
    8. '	def' → logprob: -11.522268295288086
    9. ')' → logprob: -11.772268295288086
    10. '<|end|>' → logprob: -12.897268295288086

Token 614: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.20221836864948273
    2. '   ' → logprob: -1.7022184133529663
    3. ' def' → logprob: -7.577218532562256
    4. '
' → logprob: -8.327218055725098
    5. '    
' → logprob: -10.077218055725098
    6. '        
' → logprob: -12.702218055725098
    7. '```' → logprob: -12.827218055725098
    8. '	def' → logprob: -13.952218055725098
    9. '       ' → logprob: -15.327218055725098
    10. ' ' → logprob: -15.327218055725098

Token 615: ' _' (ID: 1175)
  Prédit: ' allocate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' allocate' → logprob: -0.7955975532531738
    2. '_allocate' → logprob: -1.4205975532531738
    3. ' def' → logprob: -1.5455975532531738
    4. 'def' → logprob: -3.920597553253174
    5. 'allocate' → logprob: -4.295597553253174
    6. ' _' → logprob: -4.420597553253174
    7. '_alloc' → logprob: -4.420597553253174
    8. ' create' → logprob: -5.170597553253174
    9. 'Allocate' → logprob: -5.295597553253174
    10. '_' → logprob: -5.545597553253174

Token 616: 'occupied' (ID: 98229)
  Prédit: 'allocate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allocate' → logprob: -0.3240857720375061
    2. 'alloc' → logprob: -1.6990857124328613
    3. 'find' → logprob: -2.9490857124328613
    4. 'insert' → logprob: -3.6990857124328613
    5. 'merge' → logprob: -5.949085712432861
    6. 'remove' → logprob: -5.949085712432861
    7. 'add' → logprob: -5.949085712432861
    8. 'occup' → logprob: -6.074085712432861
    9. 'try' → logprob: -6.949085712432861
    10. 'split' → logprob: -6.949085712432861

Token 617: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.7791168093681335
    2. '_insert' → logprob: -1.9041168689727783
    3. '_allocate' → logprob: -2.0291168689727783
    4. '_remove' → logprob: -2.1541168689727783
    5. '_alloc' → logprob: -2.7791168689727783
    6. '_append' → logprob: -3.1541168689727783
    7. '_push' → logprob: -4.779116630554199
    8. '_inter' → logprob: -5.154116630554199
    9. '_find' → logprob: -5.154116630554199
    10. '_pop' → logprob: -6.154116630554199

Token 618: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00037085101939737797
    2. '(' → logprob: -8.000370979309082
    3. ' (' → logprob: -10.625370979309082
    4. '(start' → logprob: -12.500370979309082
    5. '(s' → logprob: -12.750370979309082
    6. '_start' → logprob: -13.000370979309082
    7. 'self' → logprob: -13.875370979309082
    8. '   ' → logprob: -14.750370979309082
    9. '(sel' → logprob: -15.875370979309082
    10. '(se' → logprob: -16.000370025634766

Token 619: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0073155430145561695
    2. 'self' → logprob: -5.882315635681152
    3. ',start' → logprob: -6.132315635681152
    4. '(self' → logprob: -7.007315635681152
    5. ' ,' → logprob: -7.257315635681152
    6. ',self' → logprob: -8.257315635681152
    7. '_start' → logprob: -9.507315635681152
    8. ',_' → logprob: -9.507315635681152
    9. '):' → logprob: -9.757315635681152
    10. '_,' → logprob: -10.132315635681152

Token 620: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.009821613319218159
    2. ' start' → logprob: -4.63482141494751
    3. 'self' → logprob: -9.759821891784668
    4. ')' → logprob: -13.009821891784668
    5. '   ' → logprob: -13.384821891784668
    6. '(start' → logprob: -13.509821891784668
    7. ' self' → logprob: -13.634821891784668
    8. 'interval' → logprob: -14.509821891784668
    9. ' ' → logprob: -14.634821891784668
    10. '	start' → logprob: -16.50982093811035

Token 621: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.64708495605737e-05
    2. ',end' → logprob: -10.250066757202148
    3. ' ,' → logprob: -11.000066757202148
    4. '   ' → logprob: -11.375066757202148
    5. '       ' → logprob: -13.500066757202148
    6. '<|end|>' → logprob: -14.750066757202148
    7. ',
' → logprob: -15.250066757202148
    8. ',int' → logprob: -15.375066757202148
    9. ',start' → logprob: -16.00006675720215
    10. '=' → logprob: -16.25006675720215

Token 622: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.00193149340339005
    2. ' end' → logprob: -6.251931667327881
    3. '   ' → logprob: -13.501931190490723
    4. 'start' → logprob: -14.376931190490723
    5. ' ' → logprob: -14.751931190490723
    6. 'file' → logprob: -15.251931190490723
    7. '  ' → logprob: -16.25193214416504
    8. '	end' → logprob: -16.50193214416504
    9. '    ' → logprob: -17.87693214416504
    10. '(end' → logprob: -18.00193214416504

Token 623: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.226628895296017e-06
    2. ' ,' → logprob: -12.500007629394531
    3. ',file' → logprob: -12.625007629394531
    4. '   ' → logprob: -17.87500762939453
    5. ',
' → logprob: -18.12500762939453
    6. '):
' → logprob: -18.50000762939453
    7. '‌,' → logprob: -18.62500762939453
    8. '):' → logprob: -18.75000762939453
    9. '       ' → logprob: -18.87500762939453
    10. ',start' → logprob: -19.00000762939453

Token 624: ' fid' (ID: 34157)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.00408516637980938
    2. ' file' → logprob: -5.504085063934326
    3. 'fid' → logprob: -13.004085540771484
    4. '   ' → logprob: -13.129085540771484
    5. ' ' → logprob: -14.629085540771484
    6. '
' → logprob: -15.129085540771484
    7. '	file' → logprob: -15.254085540771484
    8. '_file' → logprob: -15.379085540771484
    9. 'fil' → logprob: -15.379085540771484
    10. '    ' → logprob: -15.754085540771484

Token 625: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38746845722198486
    2. '):
' → logprob: -1.1374684572219849
    3. ',' → logprob: -8.137468338012695
    4. '):
' → logprob: -8.637468338012695
    5. '   ' → logprob: -9.887468338012695
    6. ')' → logprob: -10.012468338012695
    7. '_' → logprob: -11.387468338012695
    8. '):

' → logprob: -11.762468338012695
    9. ' ):' → logprob: -12.012468338012695
    10. ':' → logprob: -13.262468338012695

Token 626: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008977661491371691
    2. ':' → logprob: -7.6258978843688965
    3. '):
' → logprob: -8.625897407531738
    4. '):' → logprob: -9.125897407531738
    5. '   ' → logprob: -9.875897407531738
    6. ':
' → logprob: -10.250897407531738
    7. ',' → logprob: -11.250897407531738
    8. ')' → logprob: -12.000897407531738
    9. '<|end|>' → logprob: -12.375897407531738
    10. '      ' → logprob: -13.250897407531738

Token 627: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011813003802672029
    2. 'self' → logprob: -7.126181125640869
    3. ' self' → logprob: -8.001181602478027
    4. '   ' → logprob: -11.626181602478027
    5. 'bis' → logprob: -12.001181602478027
    6. ' bis' → logprob: -12.126181602478027
    7. 'pos' → logprob: -12.126181602478027
    8. '      ' → logprob: -12.251181602478027
    9. '           ' → logprob: -13.251181602478027
    10. '        ' → logprob: -14.001181602478027

Token 628: ' Insert' (ID: 34954)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.07941040396690369
    2. ' pos' → logprob: -2.5794103145599365
    3. 'bis' → logprob: -8.704410552978516
    4. ' bis' → logprob: -8.954410552978516
    5. 'idx' → logprob: -9.579410552978516
    6. '   ' → logprob: -9.579410552978516
    7. ' idx' → logprob: -10.454410552978516
    8. 'import' → logprob: -10.704410552978516
    9. '#' → logprob: -11.704410552978516
    10. 'interval' → logprob: -12.079410552978516

Token 629: ' occupied' (ID: 46186)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10309949517250061
    2. '(self' → logprob: -2.4780995845794678
    3. '(' → logprob: -4.728099346160889
    4. '(start' → logprob: -6.103099346160889
    5. '       ' → logprob: -6.228099346160889
    6. 'self' → logprob: -7.728099346160889
    7. '(b' → logprob: -8.978099822998047
    8. 'bis' → logprob: -9.228099822998047
    9. ' self' → logprob: -9.478099822998047
    10. '   ' → logprob: -9.603099822998047

Token 630: ' interval' (ID: 17116)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8813143968582153
    2. '_inter' → logprob: -1.6313143968582153
    3. '_interval' → logprob: -2.131314277648926
    4. 'interval' → logprob: -2.506314277648926
    5. '(' → logprob: -2.756314277648926
    6. '(interval' → logprob: -3.506314277648926
    7. ',' → logprob: -4.006314277648926
    8. '   ' → logprob: -4.006314277648926
    9. '(self' → logprob: -4.131314277648926
    10. '_' → logprob: -4.256314277648926

Token 631: ' in' (ID: 306)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.41567930579185486
    2. ',' → logprob: -1.9156793355941772
    3. '       ' → logprob: -2.1656792163848877
    4. '(' → logprob: -2.7906792163848877
    5. '(self' → logprob: -5.165679454803467
    6. '(start' → logprob: -5.790679454803467
    7. ' =' → logprob: -6.040679454803467
    8. ')' → logprob: -6.290679454803467
    9. '           ' → logprob: -7.165679454803467
    10. '   ' → logprob: -7.415679454803467

Token 632: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010769916698336601
    2. ' self' → logprob: -6.876077175140381
    3. '(self' → logprob: -10.251076698303223
    4. 'bis' → logprob: -12.376076698303223
    5. '       ' → logprob: -13.251076698303223
    6. '   ' → logprob: -13.626076698303223
    7. 'the' → logprob: -14.626076698303223
    8. 'sorted' → logprob: -15.001076698303223
    9. '[self' → logprob: -15.251076698303223
    10. '	self' → logprob: -15.626076698303223

Token 633: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00031389365904033184
    2. 'occupied' → logprob: -8.375313758850098
    3. '   ' → logprob: -9.750313758850098
    4. '._' → logprob: -11.125313758850098
    5. '_' → logprob: -12.375313758850098
    6. ' .' → logprob: -13.125313758850098
    7. '.oc' → logprob: -13.125313758850098
    8. '	' → logprob: -14.625313758850098
    9. '```' → logprob: -14.750313758850098
    10. '       ' → logprob: -15.125313758850098

Token 634: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -4.7755875129951164e-05
    2. '_' → logprob: -10.37504768371582
    3. ' occupied' → logprob: -11.50004768371582
    4. '.' → logprob: -12.62504768371582
    5. 'occ' → logprob: -13.50004768371582
    6. '`' → logprob: -14.87504768371582
    7. '```' → logprob: -14.87504768371582
    8. 'occup' → logprob: -15.12504768371582
    9. '   ' → logprob: -15.75004768371582
    10. 'insert' → logprob: -16.25004768371582

Token 635: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1726110577583313
    2. '       ' → logprob: -1.9226109981536865
    3. ' (' → logprob: -5.047611236572266
    4. '
' → logprob: -7.047611236572266
    5. '(pos' → logprob: -7.047611236572266
    6. ')' → logprob: -7.172611236572266
    7. ' and' → logprob: -7.797611236572266
    8. '(' → logprob: -7.922611236572266
    9. ',
' → logprob: -7.922611236572266
    10. ' ,' → logprob: -8.172611236572266

Token 636: ' keep' (ID: 3357)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5038242936134338
    2. ' pos' → logprob: -1.503824234008789
    3. '       ' → logprob: -2.503824234008789
    4. ' (' → logprob: -3.128824234008789
    5. '(pos' → logprob: -4.003824234008789
    6. ' key' → logprob: -4.503824234008789
    7. ' bis' → logprob: -5.628824234008789
    8. ' idx' → logprob: -6.003824234008789
    9. '        ' → logprob: -6.003824234008789
    10. 'idx' → logprob: -6.628824234008789

Token 637: ' sorted' (ID: 20099)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5702733397483826
    2. 'sorted' → logprob: -0.9452733397483826
    3. ' sorted' → logprob: -3.5702733993530273
    4. ' self' → logprob: -4.195273399353027
    5. ' the' → logprob: -6.945273399353027
    6. 'the' → logprob: -7.570273399353027
    7. 'start' → logprob: -7.945273399353027
    8. '   ' → logprob: -8.445273399353027
    9. ' key' → logprob: -8.945273399353027
    10. 's' → logprob: -8.945273399353027

Token 638: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6632331609725952
    2. ' by' → logprob: -1.2882331609725952
    3. ',' → logprob: -2.2882332801818848
    4. 'by' → logprob: -2.7882332801818848
    5. ' (' → logprob: -3.7882332801818848
    6. '(' → logprob: -5.163233280181885
    7. ')' → logprob: -5.663233280181885
    8. '(start' → logprob: -5.788233280181885
    9. '(self' → logprob: -6.163233280181885
    10. ' and' → logprob: -6.538233280181885

Token 639: ' dis' (ID: 829)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.28262439370155334
    2. ' dis' → logprob: -1.407624363899231
    3. 'merged' → logprob: -7.532624244689941
    4. 'non' → logprob: -8.782624244689941
    5. ' merged' → logprob: -8.782624244689941
    6. ' no' → logprob: -8.907624244689941
    7. ' non' → logprob: -8.907624244689941
    8. '#' → logprob: -9.282624244689941
    9. '   ' → logprob: -9.532624244689941
    10. '
' → logprob: -9.657624244689941

Token 640: 'joint' (ID: 69164)
  Prédit: 'joint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'joint' → logprob: -0.00012154294381616637
    2. 'j' → logprob: -9.500121116638184
    3. 'oint' → logprob: -11.000121116638184
    4. '```' → logprob: -11.125121116638184
    5. 'jo' → logprob: -11.750121116638184
    6. 'cont' → logprob: -13.625121116638184
    7. 'ont' → logprob: -13.875121116638184
    8. 'join' → logprob: -13.875121116638184
    9. '_joint' → logprob: -14.125121116638184
    10. 't' → logprob: -14.250121116638184

Token 641: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8177595138549805
    2. ',' → logprob: -1.4427595138549805
    3. ')' → logprob: -1.5677595138549805
    4. '(' → logprob: -3.5677595138549805
    5. '):
' → logprob: -3.6927595138549805
    6. '   ' → logprob: -3.9427595138549805
    7. '(pos' → logprob: -5.3177595138549805
    8. ')
' → logprob: -5.4427595138549805
    9. '(b' → logprob: -5.4427595138549805
    10. ':
' → logprob: -5.4427595138549805

Token 642: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029905537143349648
    2. ')' → logprob: -4.279905319213867
    3. '   ' → logprob: -4.404905319213867
    4. ',' → logprob: -7.529905319213867
    5. '<|end|>' → logprob: -7.529905319213867
    6. '        
' → logprob: -7.654905319213867
    7. '(' → logprob: -7.654905319213867
    8. '
' → logprob: -8.529905319213867
    9. '):
' → logprob: -9.029905319213867
    10. '  
' → logprob: -9.404905319213867

Token 643: ' oi' (ID: 115554)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6415939927101135
    2. ' pos' → logprob: -1.7665939331054688
    3. '       ' → logprob: -2.0165939331054688
    4. ' bis' → logprob: -2.0165939331054688
    5. 'bis' → logprob: -3.3915939331054688
    6. 'idx' → logprob: -7.641593933105469
    7. ' idx' → logprob: -7.891593933105469
    8. ' i' → logprob: -8.016593933105469
    9. 'i' → logprob: -8.391593933105469
    10. 'self' → logprob: -8.391593933105469

Token 644: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007484049070626497
    2. '=' → logprob: -5.257483959197998
    3. '_pos' → logprob: -6.257483959197998
    4. '.append' → logprob: -9.257484436035156
    5. '.insert' → logprob: -9.632484436035156
    6. 'p' → logprob: -9.632484436035156
    7. 'pos' → logprob: -10.882484436035156
    8. '_start' → logprob: -11.382484436035156
    9. '=f' → logprob: -11.757484436035156
    10. '=[]
' → logprob: -11.882484436035156

Token 645: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.615255839889869e-05
    2. ' self' → logprob: -9.250096321105957
    3. '   ' → logprob: -20.37509536743164
    4. '	self' → logprob: -20.75009536743164
    5. '       ' → logprob: -21.25009536743164
    6. '(self' → logprob: -21.37509536743164
    7. '[self' → logprob: -22.00009536743164
    8. '=self' → logprob: -22.12509536743164
    9. ' ' → logprob: -22.37509536743164
    10. '
' → logprob: -23.25009536743164

Token 646: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -8.77627644513268e-06
    2. '.oc' → logprob: -11.750008583068848
    3. ' .' → logprob: -14.375008583068848
    4. 'occupied' → logprob: -15.750008583068848
    5. '._' → logprob: -17.250009536743164
    6. '```' → logprob: -17.500009536743164
    7. 's' → logprob: -17.625009536743164
    8. '.ob' → logprob: -17.750009536743164
    9. '_.' → logprob: -18.375009536743164
    10. '   ' → logprob: -19.250009536743164

Token 647: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -14.250001907348633
    3. ' occupied' → logprob: -15.250001907348633
    4. '.' → logprob: -15.375001907348633
    5. 'occ' → logprob: -16.125001907348633
    6. 'occup' → logprob: -16.250001907348633
    7. 'ocup' → logprob: -16.500001907348633
    8. 'owned' → logprob: -16.625001907348633
    9. 'oc' → logprob: -16.875001907348633
    10. '```' → logprob: -17.500001907348633

Token 648: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13194015622138977
    2. '       ' → logprob: -2.5069401264190674
    3. ',' → logprob: -4.0069403648376465
    4. '        
' → logprob: -4.8819403648376465
    5. ' =' → logprob: -5.3819403648376465
    6. '.insert' → logprob: -5.6319403648376465
    7. ')' → logprob: -6.3819403648376465
    8. '.append' → logprob: -6.8819403648376465
    9. 'pos' → logprob: -7.1319403648376465
    10. ',
' → logprob: -7.5069403648376465

Token 649: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005450870376080275
    2. ' =' → logprob: -5.75545072555542
    3. ',' → logprob: -6.88045072555542
    4. '   ' → logprob: -8.005451202392578
    5. '
' → logprob: -8.505451202392578
    6. '=' → logprob: -8.755451202392578
    7. '        
' → logprob: -9.505451202392578
    8. '[' → logprob: -9.755451202392578
    9. 'pos' → logprob: -9.755451202392578
    10. '.append' → logprob: -10.255451202392578

Token 650: ' bis' (ID: 7204)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1615421026945114
    2. ' pos' → logprob: -1.9115420579910278
    3. '       ' → logprob: -7.161541938781738
    4. ' bis' → logprob: -8.661541938781738
    5. 'bis' (adapté à ' bis') → logprob: -8.911541938781738
    6. 'idx' → logprob: -9.036541938781738
    7. ' idx' → logprob: -9.661541938781738
    8. 'import' → logprob: -11.036541938781738
    9. 'i' → logprob: -11.661541938781738
    10. 'insert' → logprob: -12.036541938781738

Token 651: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -8.537868779967539e-06
    2. 'sect' → logprob: -12.125008583068848
    3. 'ct' → logprob: -13.125008583068848
    4. 'ects' → logprob: -15.000008583068848
    5. 'e' → logprob: -15.750008583068848
    6. 'ext' → logprob: -16.12500762939453
    7. 'ort' → logprob: -16.25000762939453
    8. 'ec' → logprob: -16.62500762939453
    9. 'ectl' → logprob: -16.62500762939453
    10. '```' → logprob: -16.75000762939453

Token 652: '.ins' (ID: 65509)
  Prédit: '.ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ins' → logprob: -0.012555442750453949
    2. '.' → logprob: -4.3875555992126465
    3. 'ins' → logprob: -11.012555122375488
    4. '.b' → logprob: -11.637555122375488
    5. '.in' → logprob: -12.387555122375488
    6. '<|end|>' → logprob: -12.387555122375488
    7. ' .' → logprob: -12.887555122375488
    8. '.inf' → logprob: -13.262555122375488
    9. '.ing' → logprob: -13.762555122375488
    10. '‌.' → logprob: -14.012555122375488

Token 653: 'ort' (ID: 390)
  Prédit: 'ort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ort' → logprob: -2.451116051815916e-05
    2. 'sort' → logprob: -10.875024795532227
    3. 'ert' → logprob: -13.125024795532227
    4. 's' → logprob: -13.875024795532227
    5. 'rt' → logprob: -14.000024795532227
    6. 'орт' → logprob: -14.125024795532227
    7. '```' → logprob: -15.000024795532227
    8. 'orts' → logprob: -16.250024795532227
    9. '   ' → logprob: -16.375024795532227
    10. '.' → logprob: -16.750024795532227

Token 654: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.704273118884885e-07
    2. 'oi' → logprob: -15.000000953674316
    3. '((' → logprob: -15.625000953674316
    4. 'left' → logprob: -16.125
    5. '(ai' → logprob: -16.875
    6. '_left' → logprob: -17.25
    7. ' (' → logprob: -17.5
    8. '(ii' → logprob: -17.625
    9. '```' → logprob: -17.875
    10. '(o' → logprob: -18.0

Token 655: 'oi' (ID: 3412)
  Prédit: 'oi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oi' → logprob: -5.872261317563243e-05
    2. '(' → logprob: -9.750059127807617
    3. ' oi' → logprob: -15.500059127807617
    4. ')' → logprob: -16.750059127807617
    5. 'Oi' → logprob: -17.750059127807617
    6. 'o' → logprob: -18.875059127807617
    7. 'ei' → logprob: -19.750059127807617
    8. 'io' → logprob: -20.000059127807617
    9. '   ' → logprob: -20.750059127807617
    10. 'OI' → logprob: -20.875059127807617

Token 656: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025649568997323513
    2. '((' → logprob: -6.377564907073975
    3. '(' → logprob: -7.377564907073975
    4. ',(' → logprob: -9.127565383911133
    5. ' ,' → logprob: -9.127565383911133
    6. ' (' → logprob: -11.752565383911133
    7. ')' → logprob: -12.627565383911133
    8. '   ' → logprob: -13.002565383911133
    9. '),' → logprob: -13.377565383911133
    10. ',
' → logprob: -13.627565383911133

Token 657: ' (' (ID: 350)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.06214413791894913
    2. ' (' → logprob: -2.8121440410614014
    3. '(' → logprob: -8.68714427947998
    4. '(Start' → logprob: -12.18714427947998
    5. '   ' → logprob: -13.93714427947998
    6. ' ' → logprob: -14.43714427947998
    7. '(end' → logprob: -14.93714427947998
    8. '[start' → logprob: -15.31214427947998
    9. '  ' → logprob: -15.93714427947998
    10. '(st' → logprob: -16.062143325805664

Token 658: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -2.339278580620885e-06
    2. ' start' → logprob: -13.000001907348633
    3. '(start' → logprob: -18.375001907348633
    4. ')' → logprob: -20.750001907348633
    5. '[start' → logprob: -20.750001907348633
    6. ',start' → logprob: -21.000001907348633
    7. '_start' → logprob: -21.250001907348633
    8. 'star' → logprob: -21.375001907348633
    9. '   ' → logprob: -22.250001907348633
    10. '	start' → logprob: -22.625001907348633

Token 659: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022034443099983037
    2. ',end' → logprob: -8.50022029876709
    3. ',
' → logprob: -11.75022029876709
    4. ' ,' → logprob: -11.75022029876709
    5. '<|end|>' → logprob: -15.50022029876709
    6. ',

' → logprob: -15.75022029876709
    7. 'end' → logprob: -15.75022029876709
    8. '),' → logprob: -16.625221252441406
    9. '```' → logprob: -16.625221252441406
    10. '‌,' → logprob: -16.750221252441406

Token 660: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.003177952254191041
    2. ' end' → logprob: -5.753178119659424
    3. '(end' → logprob: -16.128177642822266
    4. ' ' → logprob: -16.503177642822266
    5. '<|end|>' → logprob: -16.753177642822266
    6. ',end' → logprob: -17.503177642822266
    7. '	end' → logprob: -17.628177642822266
    8. '   ' → logprob: -18.378177642822266
    9. '[end' → logprob: -18.753177642822266
    10. '=end' → logprob: -18.878177642822266

Token 661: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9862216504407115e-05
    2. ' ,' → logprob: -10.875020027160645
    3. ',f' → logprob: -14.000020027160645
    4. '),' → logprob: -17.000019073486328
    5. ',
' → logprob: -17.500019073486328
    6. '   ' → logprob: -19.000019073486328
    7. '‌,' → logprob: -19.125019073486328
    8. ')' → logprob: -19.625019073486328
    9. ',user' → logprob: -19.750019073486328
    10. '```' → logprob: -20.000019073486328

Token 662: ' fid' (ID: 34157)
  Prédit: 'fid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fid' → logprob: -0.0067176250740885735
    2. ' fid' → logprob: -5.006717681884766
    3. '(fid' → logprob: -13.256717681884766
    4. 'f' → logprob: -15.631717681884766
    5. 'fd' → logprob: -16.131717681884766
    6. 'fi' → logprob: -17.631717681884766
    7. '   ' → logprob: -18.131717681884766
    8. 'fic' → logprob: -18.256717681884766
    9. ' ' → logprob: -18.256717681884766
    10. '
' → logprob: -18.506717681884766

Token 663: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004261461552232504
    2. ')' → logprob: -5.504261493682861
    3. '))
' → logprob: -8.629261016845703
    4. ' ))' → logprob: -13.379261016845703
    5. ')
' → logprob: -13.629261016845703
    6. ')))' → logprob: -15.004261016845703
    7. '       ' → logprob: -15.129261016845703
    8. '),' → logprob: -15.379261016845703
    9. '))

' → logprob: -16.004261016845703
    10. '   ' → logprob: -16.129261016845703

Token 664: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 665: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07687857002019882
    2. '   ' → logprob: -3.201878547668457
    3. ' def' → logprob: -3.451878547668457
    4. '
' → logprob: -7.076878547668457
    5. '```' → logprob: -7.951878547668457
    6. '    
' → logprob: -8.576878547668457
    7. '<|end|>' → logprob: -9.451878547668457
    8. ' 
' → logprob: -9.701878547668457
    9. '	def' → logprob: -9.951878547668457
    10. '       ' → logprob: -11.451878547668457

Token 666: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8064234852790833
    2. ' _' → logprob: -1.1814234256744385
    3. ' def' → logprob: -2.1814234256744385
    4. '_allocate' → logprob: -2.4314234256744385
    5. 'def' → logprob: -4.431423664093018
    6. '_alloc' → logprob: -4.556423664093018
    7. '_free' → logprob: -5.306423664093018
    8. '_remove' → logprob: -5.431423664093018
    9. '_release' → logprob: -5.806423664093018
    10. '_delete' → logprob: -6.681423664093018

Token 667: 'occupied' (ID: 98229)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.31681036949157715
    2. 'occupied' → logprob: -1.5668103694915771
    3. 'free' → logprob: -3.816810369491577
    4. 'find' → logprob: -4.316810607910156
    5. 'merge' → logprob: -4.816810607910156
    6. 'allocate' → logprob: -4.941810607910156
    7. 'alloc' → logprob: -6.191810607910156
    8. 'add' → logprob: -6.316810607910156
    9. 'insert' → logprob: -6.441810607910156
    10. 'occup' → logprob: -6.816810607910156

Token 668: '_remove' (ID: 41629)
  Prédit: '_remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -0.05866369977593422
    2. '_add' → logprob: -3.0586636066436768
    3. '_find' → logprob: -5.683663845062256
    4. '_pop' → logprob: -5.808663845062256
    5. '_insert' → logprob: -5.808663845062256
    6. 'remove' → logprob: -8.308663368225098
    7. '_del' → logprob: -8.933663368225098
    8. '_merge' → logprob: -10.183663368225098
    9. '_update' → logprob: -10.308663368225098
    10. '_append' → logprob: -10.558663368225098

Token 669: '_file' (ID: 5933)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0021493081003427505
    2. '(' → logprob: -6.2521491050720215
    3. ' (' → logprob: -8.75214958190918
    4. 'self' → logprob: -10.37714958190918
    5. '(start' → logprob: -10.62714958190918
    6. '_start' → logprob: -13.25214958190918
    7. 'start' → logprob: -13.37714958190918
    8. '(
' → logprob: -13.62714958190918
    9. ' self' → logprob: -13.75214958190918
    10. '   ' → logprob: -14.75214958190918

Token 670: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007648272439837456
    2. '(' → logprob: -5.007648468017578
    3. '_inter' → logprob: -7.882648468017578
    4. 'self' → logprob: -8.382648468017578
    5. ' (' → logprob: -8.382648468017578
    6. '_(' → logprob: -10.382648468017578
    7. 's' → logprob: -10.632648468017578
    8. '_' → logprob: -10.632648468017578
    9. '   ' → logprob: -13.007648468017578
    10. '_ranges' → logprob: -13.132648468017578

Token 671: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003878338960930705
    2. 'self' → logprob: -5.878878116607666
    3. ' ,' → logprob: -7.378878116607666
    4. '_,' → logprob: -7.878878116607666
    5. '(self' → logprob: -11.128878593444824
    6. '   ' → logprob: -11.253878593444824
    7. ',self' → logprob: -11.253878593444824
    8. '_self' → logprob: -12.003878593444824
    9. '       ' → logprob: -12.128878593444824
    10. ',
' → logprob: -12.378878593444824

Token 672: ' fid' (ID: 34157)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07770393043756485
    2. ' self' → logprob: -2.7027039527893066
    3. 'fid' → logprob: -5.077703952789307
    4. ' fid' → logprob: -6.702703952789307
    5. 'file' → logprob: -8.452703475952148
    6. '   ' → logprob: -10.452703475952148
    7. ' file' → logprob: -11.327703475952148
    8. 'f' → logprob: -12.452703475952148
    9. ' ' → logprob: -12.452703475952148
    10. '(fid' → logprob: -13.327703475952148

Token 673: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8204648494720459
    2. '):
' → logprob: -1.570464849472046
    3. '):' → logprob: -1.695464849472046
    4. ',' → logprob: -2.570464849472046
    5. '       ' → logprob: -2.820464849472046
    6. '   ' → logprob: -4.195465087890625
    7. '(self' → logprob: -4.320465087890625
    8. ')' → logprob: -6.195465087890625
    9. ' self' → logprob: -6.695465087890625
    10. ' ' → logprob: -9.070465087890625

Token 674: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005351595464162529
    2. ' for' → logprob: -9.250535011291504
    3. 'pos' → logprob: -9.375535011291504
    4. '#' → logprob: -9.750535011291504
    5. ',' → logprob: -10.125535011291504
    6. ' pos' → logprob: -10.500535011291504
    7. ' i' → logprob: -10.750535011291504
    8. '   ' → logprob: -10.750535011291504
    9. ' start' → logprob: -10.750535011291504
    10. 'start' → logprob: -11.000535011291504

Token 675: ' #' (ID: 1069)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.6330046057701111
    2. '       ' → logprob: -1.7580046653747559
    3. ' indices' → logprob: -2.508004665374756
    4. 'new' → logprob: -2.758004665374756
    5. 'self' → logprob: -3.008004665374756
    6. ' self' → logprob: -3.258004665374756
    7. 'indices' → logprob: -4.258004665374756
    8. ' i' → logprob: -4.508004665374756
    9. ' oi' → logprob: -4.758004665374756
    10. '   ' → logprob: -5.133004665374756

Token 676: ' Remove' (ID: 18141)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5708966255187988
    2. 'self' → logprob: -1.3208966255187988
    3. 'oi' → logprob: -2.695896625518799
    4. 'indices' → logprob: -2.945896625518799
    5. '#' → logprob: -4.445896625518799
    6. 'to' → logprob: -4.570896625518799
    7. 'idx' → logprob: -4.820896625518799
    8. ' new' → logprob: -5.570896625518799
    9. 'indexes' → logprob: -5.570896625518799
    10. 'pos' → logprob: -6.070896625518799

Token 677: ' all' (ID: 722)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.6772627830505371
    2. 'self' → logprob: -1.677262783050537
    3. 'oi' → logprob: -3.052262783050537
    4. ' new' → logprob: -3.177262783050537
    5. 'i' → logprob: -3.177262783050537
    6. ' self' → logprob: -3.302262783050537
    7. 'new' → logprob: -3.427262783050537
    8. ' oi' → logprob: -3.552262783050537
    9. ' i' → logprob: -3.802262783050537
    10. 'interval' → logprob: -4.052262783050537

Token 678: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.049645714461803436
    2. 'interval' → logprob: -3.2996456623077393
    3. 'occ' → logprob: -6.299645900726318
    4. ' entries' → logprob: -6.299645900726318
    5. 'entries' → logprob: -6.299645900726318
    6. 'occupied' → logprob: -6.549645900726318
    7. 'i' → logprob: -6.924645900726318
    8. ' i' → logprob: -7.424645900726318
    9. '   ' → logprob: -7.549645900726318
    10. ' occupied' → logprob: -7.674645900726318

Token 679: ' occupied' (ID: 46186)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1756178140640259
    2. ' of' → logprob: -1.9256178140640259
    3. ' belonging' → logprob: -1.9256178140640259
    4. ' associated' → logprob: -2.5506176948547363
    5. ' in' → logprob: -2.6756176948547363
    6. 'for' → logprob: -2.9256176948547363
    7. ' with' → logprob: -2.9256176948547363
    8. 'of' → logprob: -3.5506176948547363
    9. ' occupied' → logprob: -3.6756176948547363
    10. '       ' → logprob: -3.8006176948547363

Token 680: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.2519335150718689
    2. ' by' → logprob: -1.5019335746765137
    3. '   ' → logprob: -12.876933097839355
    4. ' ' → logprob: -13.376933097839355
    5. '       ' → logprob: -15.876933097839355
    6. '  ' → logprob: -17.001934051513672
    7. '_by' → logprob: -17.376934051513672
    8. '    ' → logprob: -17.626934051513672
    9. ' of' → logprob: -17.751934051513672
    10. 'for' → logprob: -17.876934051513672

Token 681: ' fid' (ID: 34157)
  Prédit: 'fid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fid' → logprob: -0.028268376365303993
    2. ' fid' → logprob: -3.778268337249756
    3. 'self' → logprob: -5.903268337249756
    4. '(fid' → logprob: -6.903268337249756
    5. 'the' → logprob: -7.778268337249756
    6. ' the' → logprob: -8.028268814086914
    7. 'file' → logprob: -8.153268814086914
    8. ' self' → logprob: -9.778268814086914
    9. ' that' → logprob: -10.028268814086914
    10. '   ' → logprob: -10.028268814086914

Token 682: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016151083633303642
    2. '(self' → logprob: -4.516150951385498
    3. '
' → logprob: -5.766150951385498
    4. ',' → logprob: -7.391150951385498
    5. '   ' → logprob: -7.891150951385498
    6. 'self' → logprob: -8.391151428222656
    7. ' (' → logprob: -8.766151428222656
    8. '(' → logprob: -8.766151428222656
    9. ':' → logprob: -9.641151428222656
    10. ' for' → logprob: -9.891151428222656

Token 683: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04319044202566147
    2. ' self' → logprob: -3.1681904792785645
    3. 'occupied' → logprob: -9.168190002441406
    4. ' the' → logprob: -10.543190002441406
    5. '       ' → logprob: -11.168190002441406
    6. 'the' → logprob: -11.418190002441406
    7. '   ' → logprob: -11.418190002441406
    8. ' occupied' → logprob: -11.543190002441406
    9. '```' → logprob: -12.918190002441406
    10. '#' → logprob: -13.543190002441406

Token 684: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -3.3213025744771585e-05
    2. '   ' → logprob: -11.250033378601074
    3. ' .' → logprob: -11.750033378601074
    4. '       ' → logprob: -12.000033378601074
    5. 'occupied' → logprob: -12.250033378601074
    6. '.oc' → logprob: -14.750033378601074
    7. '.file' → logprob: -15.625033378601074
    8. '._' → logprob: -15.625033378601074
    9. '	' → logprob: -15.750033378601074
    10. '.free' → logprob: -16.000032424926758

Token 685: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -16.0
    3. ' occupied' → logprob: -16.0
    4. '```' → logprob: -17.125
    5. '
' → logprob: -17.5
    6. 'owned' → logprob: -17.875
    7. '   ' → logprob: -18.25
    8. '`' → logprob: -18.25
    9. 'occup' → logprob: -18.625
    10. '-' → logprob: -19.0

Token 686: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032983170822262764
    2. '
' → logprob: -6.128298282623291
    3. ',' → logprob: -7.128298282623291
    4. '   ' → logprob: -9.00329875946045
    5. ' and' → logprob: -9.25329875946045
    6. '        
' → logprob: -11.25329875946045
    7. ':' → logprob: -11.50329875946045
    8. '
' → logprob: -11.62829875946045
    9. '```' → logprob: -11.87829875946045
    10. '           ' → logprob: -12.00329875946045

Token 687: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005826997803524137
    2. 'pos' → logprob: -7.875582695007324
    3. ',' → logprob: -9.750582695007324
    4. '   ' → logprob: -9.875582695007324
    5. 'idx' → logprob: -11.125582695007324
    6. '```' → logprob: -11.125582695007324
    7. 'fid' → logprob: -11.625582695007324
    8. 'fi' → logprob: -11.625582695007324
    9. ' pos' → logprob: -12.125582695007324
    10. 'def' → logprob: -12.375582695007324

Token 688: ' oi' (ID: 115554)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.37560024857521057
    2. ' new' → logprob: -1.3756002187728882
    3. '       ' → logprob: -3.5006003379821777
    4. 'oi' (adapté à ' oi') → logprob: -4.375600337982178
    5. '   ' → logprob: -5.375600337982178
    6. ' oi' → logprob: -6.000600337982178
    7. 'indices' → logprob: -6.000600337982178
    8. 'self' → logprob: -6.375600337982178
    9. ' indices' → logprob: -6.500600337982178
    10. 'i' → logprob: -6.500600337982178

Token 689: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869083523750305
    2. '=' → logprob: -1.1369082927703857
    3. '[:]' → logprob: -10.886908531188965
    4. 'new' → logprob: -11.886908531188965
    5. '_new' → logprob: -11.886908531188965
    6. ' =[' → logprob: -13.761908531188965
    7. '_idx' → logprob: -14.386908531188965
    8. '=[' → logprob: -14.511908531188965
    9. '_filtered' → logprob: -14.636908531188965
    10. '=self' → logprob: -15.011908531188965

Token 690: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00017350474081467837
    2. ' self' → logprob: -8.750173568725586
    3. '[self' → logprob: -11.125173568725586
    4. '[' → logprob: -15.875173568725586
    5. ' [' → logprob: -16.500173568725586
    6. '   ' → logprob: -18.500173568725586
    7. '
' → logprob: -18.625173568725586
    8. '	self' → logprob: -19.500173568725586
    9. '[]' → logprob: -19.625173568725586
    10. '[
' → logprob: -19.625173568725586

Token 691: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00014203863975126296
    2. 'occupied' → logprob: -9.250142097473145
    3. 'self' → logprob: -10.000142097473145
    4. '.oc' → logprob: -15.750142097473145
    5. '.self' → logprob: -15.875142097473145
    6. '._' → logprob: -17.000141143798828
    7. 'occup' → logprob: -17.250141143798828
    8. '.ob' → logprob: -17.375141143798828
    9. ' .' → logprob: -18.625141143798828
    10. 'Occupied' → logprob: -18.750141143798828

Token 692: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -2.2200749754119897e-06
    2. ' occupied' → logprob: -13.875001907348633
    3. 'occup' → logprob: -14.875001907348633
    4. 'self' → logprob: -15.000001907348633
    5. '_' → logprob: -15.750001907348633
    6. 'ocup' → logprob: -16.500001907348633
    7. '-' → logprob: -16.875001907348633
    8. '.' → logprob: -17.375001907348633
    9. '   ' → logprob: -17.375001907348633
    10. 'owned' → logprob: -17.500001907348633

Token 693: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010924969799816608
    2. '=' → logprob: -4.635924816131592
    3. '       ' → logprob: -7.260924816131592
    4. '
' → logprob: -8.01092529296875
    5. '[:]' → logprob: -9.38592529296875
    6. 'new' → logprob: -11.26092529296875
    7. '        
' → logprob: -12.01092529296875
    8. '
' → logprob: -12.13592529296875
    9. 'idx' → logprob: -12.76092529296875
    10. ',' → logprob: -12.88592529296875

Token 694: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21380993723869324
    2. ' new' → logprob: -1.8388099670410156
    3. ' i' → logprob: -4.213809967041016
    4. 'new' → logprob: -4.338809967041016
    5. 'i' → logprob: -6.338809967041016
    6. 'self' → logprob: -6.588809967041016
    7. ' self' → logprob: -6.713809967041016
    8. ' idx' → logprob: -7.963809967041016
    9. ' indices' → logprob: -8.088809967041016
    10. 'idx' → logprob: -8.588809967041016

Token 695: ' new' (ID: 620)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.17001093924045563
    2. 'new' (adapté à ' new') → logprob: -1.9200109243392944
    3. 'i' → logprob: -4.670011043548584
    4. '   ' → logprob: -8.920010566711426
    5. ' self' → logprob: -9.795010566711426
    6. ' new' → logprob: -10.170010566711426
    7. '       ' → logprob: -10.295010566711426
    8. 'write' → logprob: -10.420010566711426
    9. 'idx' → logprob: -10.670010566711426
    10. 'to' → logprob: -11.045010566711426

Token 696: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.035579483956098557
    2. ' =' → logprob: -3.4105794429779053
    3. '=' → logprob: -6.660579681396484
    4. '=[]' → logprob: -8.035579681396484
    5. 'oi' → logprob: -8.785579681396484
    6. '_=' → logprob: -9.910579681396484
    7. '_o' → logprob: -10.410579681396484
    8. '=[]
' → logprob: -11.035579681396484
    9. '_inter' → logprob: -11.160579681396484
    10. '_oid' → logprob: -11.535579681396484

Token 697: 'oi' (ID: 3412)
  Prédit: 'oi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oi' → logprob: -0.024991851300001144
    2. 'occupied' → logprob: -3.774991750717163
    3. 'o' → logprob: -6.899991989135742
    4. 'i' → logprob: -7.774991989135742
    5. 'list' → logprob: -9.399991989135742
    6. 'interval' → logprob: -9.774991989135742
    7. 'io' → logprob: -9.774991989135742
    8. '_' → logprob: -10.524991989135742
    9. 'occup' → logprob: -10.774991989135742
    10. ' oi' → logprob: -11.274991989135742

Token 698: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03807787224650383
    2. ' =' → logprob: -3.2880778312683105
    3. '=[]' → logprob: -10.288078308105469
    4. '=[]
' → logprob: -13.163078308105469
    5. '[]' → logprob: -15.788078308105469
    6. '=[]
' → logprob: -16.28807830810547
    7. ' =[' → logprob: -16.66307830810547
    8. '=[' → logprob: -16.91307830810547
    9. '[:]' → logprob: -16.91307830810547
    10. '[' → logprob: -17.91307830810547

Token 699: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3424873650074005
    2. '[]
' → logprob: -1.5924873352050781
    3. '[(' → logprob: -2.592487335205078
    4. '[' → logprob: -4.842487335205078
    5. '[i' → logprob: -5.842487335205078
    6. '[t' → logprob: -8.217487335205078
    7. '[k' → logprob: -9.092487335205078
    8. '[x' → logprob: -9.342487335205078
    9. '[s' → logprob: -9.592487335205078
    10. '[o' → logprob: -9.592487335205078

Token 700: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.7673529982566833
    2. 'x' → logprob: -1.7673530578613281
    3. 'interval' → logprob: -1.8923530578613281
    4. '(iv' → logprob: -2.642353057861328
    5. '(x' → logprob: -2.892353057861328
    6. '(interval' → logprob: -3.517353057861328
    7. 't' → logprob: -4.017353057861328
    8. '(i' → logprob: -4.267353057861328
    9. '(t' → logprob: -4.267353057861328
    10. 'i' → logprob: -5.517353057861328

Token 701: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16131000220775604
    2. 'for' → logprob: -1.9113099575042725
    3. 'al' → logprob: -6.911310195922852
    4. '   ' → logprob: -10.661310195922852
    5. ' ' → logprob: -11.036310195922852
    6. '	for' → logprob: -11.286310195922852
    7. '
' → logprob: -11.536310195922852
    8. 'ar' → logprob: -12.286310195922852
    9. 'alue' → logprob: -12.536310195922852
    10. 'alent' → logprob: -12.536310195922852

Token 702: ' iv' (ID: 20801)
  Prédit: 'iv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -1.1517960956552997e-05
    2. ' iv' → logprob: -11.375011444091797
    3. '(iv' → logprob: -17.500011444091797
    4. '_iv' → logprob: -19.375011444091797
    5. '   ' → logprob: -19.875011444091797
    6. ' ' → logprob: -20.000011444091797
    7. '  ' → logprob: -20.375011444091797
    8. '(' → logprob: -20.500011444091797
    9. ',' → logprob: -20.500011444091797
    10. ' (' → logprob: -20.625011444091797

Token 703: ' in' (ID: 306)
  Prédit: 'iv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.015343626961112022
    2. ' in' → logprob: -4.39034366607666
    3. ' iv' → logprob: -6.01534366607666
    4. 'in' → logprob: -7.89034366607666
    5. '_iv' → logprob: -11.64034366607666
    6. ',' → logprob: -12.76534366607666
    7. ' ' → logprob: -13.89034366607666
    8. '(iv' → logprob: -14.39034366607666
    9. 'v' → logprob: -15.51534366607666
    10. '   ' → logprob: -15.51534366607666

Token 704: ' oi' (ID: 115554)
  Prédit: 'oi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oi' → logprob: -5.512236498361744e-07
    2. ' oi' → logprob: -14.500000953674316
    3. 'io' → logprob: -17.125
    4. 'o' → logprob: -18.125
    5. 'ii' → logprob: -20.875
    6. '[' → logprob: -21.0
    7. 'iv' → logprob: -21.25
    8. '
' → logprob: -21.375
    9. '   ' → logprob: -21.5
    10. 'self' → logprob: -21.75

Token 705: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.011055483482778072
    2. 'if' → logprob: -4.5110554695129395
    3. '       ' → logprob: -13.136055946350098
    4. '           ' → logprob: -13.511055946350098
    5. ' in' → logprob: -13.636055946350098
    6. '        ' → logprob: -13.886055946350098
    7. 'in' → logprob: -14.011055946350098
    8. ' ' → logprob: -14.636055946350098
    9. '   ' → logprob: -15.136055946350098
    10. '          ' → logprob: -15.386055946350098

Token 706: ' iv' (ID: 20801)
  Prédit: 'iv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -2.6060808522743173e-05
    2. ' iv' → logprob: -10.625025749206543
    3. '   ' → logprob: -13.625025749206543
    4. '_iv' → logprob: -15.375025749206543
    5. '  ' → logprob: -15.875025749206543
    6. ' ' → logprob: -17.00002670288086
    7. '    ' → logprob: -17.12502670288086
    8. '
' → logprob: -17.25002670288086
    9. '     ' → logprob: -18.62502670288086
    10. 'iiv' → logprob: -18.87502670288086

Token 707: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002338144404347986
    2. '[-' → logprob: -8.37523365020752
    3. ' [' → logprob: -14.75023365020752
    4. '2' → logprob: -14.87523365020752
    5. '3' → logprob: -14.87523365020752
    6. 'not' → logprob: -15.00023365020752
    7. 'and' → logprob: -15.00023365020752
    8. '(' → logprob: -15.12523365020752
    9. '[
' → logprob: -16.000234603881836
    10. ' not' → logprob: -16.125234603881836

Token 708: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.368984107510187e-05
    2. '-' → logprob: -10.875033378601074
    3. '
' → logprob: -11.500033378601074
    4. ' ' → logprob: -13.375033378601074
    5. '```' → logprob: -14.375033378601074
    6. '

' → logprob: -15.000033378601074
    7. '[' → logprob: -15.062533378601074
    8. '   ' → logprob: -15.187533378601074
    9. '' → logprob: -15.375033378601074
    10. '(' → logprob: -15.937533378601074

Token 709: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5761669278144836
    2. ']!=' → logprob: -1.3261668682098389
    3. ' !=' → logprob: -1.8261668682098389
    4. ']' → logprob: -4.576167106628418
    5. ')!=' → logprob: -7.076167106628418
    6. '()!=' → logprob: -8.576167106628418
    7. ')' → logprob: -10.451167106628418
    8. '
' → logprob: -10.951167106628418
    9. ' ]' → logprob: -10.951167106628418
    10. '```' → logprob: -11.826167106628418

Token 710: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.07055872678756714
    2. ' !=' → logprob: -2.695558786392212
    3. ']!=' → logprob: -7.570558547973633
    4. '()!=' → logprob: -9.820558547973633
    5. ')!=' → logprob: -9.945558547973633
    6. '```' → logprob: -13.570558547973633
    7. '!==' → logprob: -13.695558547973633
    8. '<|end|>' → logprob: -14.570558547973633
    9. '!='' → logprob: -14.695558547973633
    10. '!="' → logprob: -15.070558547973633

Token 711: ' fid' (ID: 34157)
  Prédit: 'fid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fid' → logprob: -9.662937372922897e-05
    2. ' fid' → logprob: -9.250096321105957
    3. '(fid' → logprob: -14.625096321105957
    4. 'f' → logprob: -19.000097274780273
    5. 'fic' → logprob: -19.500097274780273
    6. 'fi' → logprob: -20.000097274780273
    7. 'fd' → logprob: -20.750097274780273
    8. 'pid' → logprob: -21.250097274780273
    9. 'fname' → logprob: -21.875097274780273
    10. 'FID' → logprob: -22.500097274780273

Token 712: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04864709451794624
    2. ']
' → logprob: -3.048647165298462
    3. ' ]' → logprob: -10.048646926879883
    4. ']
' → logprob: -11.548646926879883
    5. '       ' → logprob: -12.673646926879883
    6. ' ]
' → logprob: -13.173646926879883
    7. ']

' → logprob: -13.298646926879883
    8. '   ' → logprob: -16.548646926879883
    9. '];' → logprob: -17.798646926879883
    10. ')' → logprob: -18.548646926879883

Token 713: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001789881061995402
    2. 'self' → logprob: -9.750179290771484
    3. '
' → logprob: -9.875179290771484
    4. '<|end|>' → logprob: -10.000179290771484
    5. '	' → logprob: -11.750179290771484
    6. ',' → logprob: -12.375179290771484
    7. ' self' → logprob: -12.875179290771484
    8. '```' → logprob: -13.125179290771484
    9. ')' → logprob: -14.000179290771484
    10. '        
' → logprob: -14.125179290771484

Token 714: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.011106068268418312
    2. '       ' → logprob: -4.511106014251709
    3. ' self' → logprob: -9.761106491088867
    4. '	self' → logprob: -14.886106491088867
    5. '   ' → logprob: -17.011106491088867
    6. '	' → logprob: -17.136106491088867
    7. '
' → logprob: -17.386106491088867
    8. '(self' → logprob: -17.761106491088867
    9. '[self' → logprob: -19.386106491088867
    10. '```' → logprob: -19.386106491088867

Token 715: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.60414821645827e-06
    2. ' .' → logprob: -12.875004768371582
    3. 'occupied' → logprob: -13.500004768371582
    4. '.free' → logprob: -15.250004768371582
    5. '._' → logprob: -15.750004768371582
    6. '=' → logprob: -17.000003814697266
    7. '>.' → logprob: -17.375003814697266
    8. '.oc' → logprob: -17.625003814697266
    9. '\.' → logprob: -17.750003814697266
    10. '```' → logprob: -18.125003814697266

Token 716: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.00010247035970678553
    2. '.' → logprob: -9.625102043151855
    3. 'file' → logprob: -12.000102043151855
    4. '_' → logprob: -12.000102043151855
    5. '__' → logprob: -12.250102043151855
    6. 'class' → logprob: -12.375102043151855
    7. 'occ' → logprob: -13.125102043151855
    8. 'free' → logprob: -13.250102043151855
    9. 'occup' → logprob: -13.750102043151855
    10. '._' → logprob: -13.750102043151855

Token 717: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00671809446066618
    2. ' =' → logprob: -5.006718158721924
    3. '[:]' → logprob: -12.881717681884766
    4. '.=' → logprob: -16.381717681884766
    5. '＝' → logprob: -17.256717681884766
    6. '=

' → logprob: -17.881717681884766
    7. '=
' → logprob: -19.256717681884766
    8. '.clear' → logprob: -19.506717681884766
    9. '=}' → logprob: -19.631717681884766
    10. '_=' → logprob: -20.006717681884766

Token 718: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -3.130576806142926e-05
    2. ' new' → logprob: -10.375031471252441
    3. '[new' → logprob: -17.500030517578125
    4. '   ' → logprob: -19.625030517578125
    5. '	new' → logprob: -19.750030517578125
    6. '_new' → logprob: -20.625030517578125
    7. 'ne' → logprob: -20.625030517578125
    8. '
' → logprob: -20.625030517578125
    9. '[' → logprob: -20.875030517578125
    10. 'list' → logprob: -21.250030517578125

Token 719: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004867976531386375
    2. 'oi' → logprob: -5.379868030548096
    3. 'new' → logprob: -9.254867553710938
    4. '[' → logprob: -9.254867553710938
    5. 'o' → logprob: -11.129867553710938
    6. '[i' → logprob: -12.129867553710938
    7. '[new' → logprob: -12.254867553710938
    8. 'oin' → logprob: -13.004867553710938
    9. '(' → logprob: -13.004867553710938
    10. '{' → logprob: -13.754867553710938

Token 720: 'oi' (ID: 3412)
  Prédit: 'oi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oi' → logprob: -0.0010261393617838621
    2. 'new' → logprob: -7.626026153564453
    3. 'o' → logprob: -8.001026153564453
    4. 'i' → logprob: -9.251026153564453
    5. '[new' → logprob: -10.626026153564453
    6. '[' → logprob: -10.751026153564453
    7. '[i' → logprob: -10.876026153564453
    8. 'io' → logprob: -12.126026153564453
    9. '[]' → logprob: -12.626026153564453
    10. 'list' → logprob: -12.626026153564453

Token 721: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 722: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04687053710222244
    2. 'def' → logprob: -4.046870708465576
    3. '
' → logprob: -4.421870708465576
    4. '```' → logprob: -4.671870708465576
    5. '<|end|>' → logprob: -5.546870708465576
    6. '    
' → logprob: -5.921870708465576
    7. ' def' → logprob: -9.421870231628418
    8. '  
' → logprob: -9.671870231628418
    9. '

' → logprob: -10.171870231628418
    10. '<|end|>' → logprob: -10.546870231628418

Token 723: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5816389918327332
    2. 'def' (adapté à ' def') → logprob: -0.8316389918327332
    3. ' def' → logprob: -5.581638813018799
    4. '```' → logprob: -6.456638813018799
    5. '
' → logprob: -8.206639289855957
    6. '	def' → logprob: -10.206639289855957
    7. '    
' → logprob: -10.456639289855957
    8. ' ' → logprob: -13.456639289855957
    9. '  ' → logprob: -13.831639289855957
    10. '<|end|>' → logprob: -14.081639289855957

Token 724: ' _' (ID: 1175)
  Prédit: ' allocate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' allocate' → logprob: -0.20616884529590607
    2. 'allocate' → logprob: -2.7061688899993896
    3. ' def' → logprob: -3.0811688899993896
    4. ' create' → logprob: -3.4561688899993896
    5. 'def' → logprob: -4.0811686515808105
    6. ' write' → logprob: -4.5811686515808105
    7. '_allocate' → logprob: -5.3311686515808105
    8. 'create' → logprob: -5.3311686515808105
    9. 'alloc' → logprob: -6.8311686515808105
    10. ' alloc' → logprob: -7.2061686515808105

Token 725: 'occupied' (ID: 98229)
  Prédit: 'allocate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allocate' → logprob: -0.48037758469581604
    2. 'alloc' → logprob: -1.2303775548934937
    3. 'find' → logprob: -3.605377674102783
    4. 'file' → logprob: -4.355377674102783
    5. 'free' → logprob: -4.605377674102783
    6. 'check' → logprob: -5.480377674102783
    7. 'remove' → logprob: -5.605377674102783
    8. 'split' → logprob: -5.605377674102783
    9. 'merge' → logprob: -5.730377674102783
    10. 'write' → logprob: -5.855377674102783

Token 726: '_find' (ID: 52203)
  Prédit: '_find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_find' → logprob: -0.17658716440200806
    2. '_remove' → logprob: -2.5515871047973633
    3. '_insert' → logprob: -3.1765871047973633
    4. '_merge' → logprob: -3.6765871047973633
    5. '_search' → logprob: -4.801587104797363
    6. '_add' → logprob: -5.426587104797363
    7. '_inter' → logprob: -6.926587104797363
    8. '_contains' → logprob: -7.676587104797363
    9. '_split' → logprob: -7.801587104797363
    10. '_get' → logprob: -7.926587104797363

Token 727: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003368926409166306
    2. '(' → logprob: -8.500336647033691
    3. '_start' → logprob: -10.125336647033691
    4. '_interval' → logprob: -10.375336647033691
    5. 'self' → logprob: -10.500336647033691
    6. '(se' → logprob: -12.125336647033691
    7. '_free' → logprob: -12.375336647033691
    8. '_(' → logprob: -12.625336647033691
    9. '_inter' → logprob: -12.625336647033691
    10. 'interval' → logprob: -13.000336647033691

Token 728: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.015049631707370281
    2. ',' → logprob: -4.515049457550049
    3. '_start' → logprob: -6.140049457550049
    4. 'self' → logprob: -7.015049457550049
    5. '(' → logprob: -8.015049934387207
    6. ' (' → logprob: -9.140049934387207
    7. '_index' → logprob: -9.140049934387207
    8. ')' → logprob: -9.390049934387207
    9. '_pos' → logprob: -9.640049934387207
    10. 'start' → logprob: -9.890049934387207

Token 729: ' sector' (ID: 11207)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5411772727966309
    2. 'start' → logprob: -1.6661772727966309
    3. 'sector' → logprob: -2.166177272796631
    4. 'self' → logprob: -2.291177272796631
    5. 'point' → logprob: -5.166177272796631
    6. ' pos' → logprob: -6.166177272796631
    7. 'key' → logprob: -6.541177272796631
    8. 'position' → logprob: -6.541177272796631
    9. ' sector' → logprob: -7.416177272796631
    10. ' self' → logprob: -8.041177749633789

Token 730: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001076514832675457
    2. '):
' → logprob: -8.001076698303223
    3. ',start' → logprob: -8.126076698303223
    4. '):' → logprob: -8.751076698303223
    5. '       ' → logprob: -9.376076698303223
    6. '   ' → logprob: -9.501076698303223
    7. ',
' → logprob: -10.251076698303223
    8. ' ,' → logprob: -10.251076698303223
    9. 'start' → logprob: -10.376076698303223
    10. '_start' → logprob: -11.626076698303223

Token 731: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010188196785748005
    2. '(self' → logprob: -5.385188102722168
    3. 'self' → logprob: -5.635188102722168
    4. 'pos' → logprob: -6.760188102722168
    5. ':' → logprob: -7.760188102722168
    6. '   ' → logprob: -9.010188102722168
    7. '(' → logprob: -9.260188102722168
    8. 'def' → logprob: -10.385188102722168
    9. ',' → logprob: -10.635188102722168
    10. ':
' → logprob: -10.760188102722168

Token 732: ' oi' (ID: 115554)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.049387961626052856
    2. '       ' → logprob: -3.0493879318237305
    3. ' pos' → logprob: -7.2993879318237305
    4. 'idx' → logprob: -10.29938793182373
    5. 'left' → logprob: -10.67438793182373
    6. '   ' → logprob: -10.92438793182373
    7. 'index' → logprob: -11.42438793182373
    8. 'lo' → logprob: -11.79938793182373
    9. '	pos' → logprob: -12.17438793182373
    10. 'return' → logprob: -12.29938793182373

Token 733: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1798536777496338
    2. '=' → logprob: -1.8048536777496338
    3. '_pos' → logprob: -9.679853439331055
    4. 'pos' → logprob: -11.304853439331055
    5. '_idx' → logprob: -11.554853439331055
    6. '   ' → logprob: -12.304853439331055
    7. '       ' → logprob: -12.429853439331055
    8. 'def' → logprob: -12.929853439331055
    9. '_index' → logprob: -13.054853439331055
    10. ')' → logprob: -13.179853439331055

Token 734: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007102862582542002
    2. ' self' → logprob: -7.250710487365723
    3. '   ' → logprob: -15.500710487365723
    4. '       ' → logprob: -15.875710487365723
    5. ' ' → logprob: -17.500709533691406
    6. '	self' → logprob: -18.500709533691406
    7. '[self' → logprob: -18.750709533691406
    8. '           ' → logprob: -19.125709533691406
    9. '  ' → logprob: -19.625709533691406
    10. 'bis' → logprob: -19.625709533691406

Token 735: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00029399030609056354
    2. 'occupied' → logprob: -8.375293731689453
    3. '.oc' → logprob: -10.625293731689453
    4. 'import' → logprob: -11.625293731689453
    5. 'self' → logprob: -11.750293731689453
    6. '   ' → logprob: -12.125293731689453
    7. 'Occupied' → logprob: -12.375293731689453
    8. '.b' → logprob: -13.625293731689453
    9. 's' → logprob: -13.750293731689453
    10. 'occup' → logprob: -13.875293731689453

Token 736: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.0011708177626132965
    2. 'self' → logprob: -6.751170635223389
    3. 'occup' → logprob: -14.626171112060547
    4. 'occ' → logprob: -16.251171112060547
    5. ' occupied' → logprob: -16.501171112060547
    6. 'ocup' → logprob: -18.001171112060547
    7. 'owned' → logprob: -18.251171112060547
    8. 'oc' → logprob: -18.876171112060547
    9. 'bis' → logprob: -19.001171112060547
    10. ' self' → logprob: -19.001171112060547

Token 737: '
' (ID: 198)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7531940340995789
    2. '       ' → logprob: -0.8781940340995789
    3. '
' → logprob: -2.2531940937042236
    4. '[pos' → logprob: -6.2531938552856445
    5. '=' → logprob: -6.5031938552856445
    6. '_pos' → logprob: -6.7531938552856445
    7. ',pos' → logprob: -6.8781938552856445
    8. ' pos' → logprob: -7.1281938552856445
    9. '
' → logprob: -7.6281938552856445
    10. ',' → logprob: -7.7531938552856445

Token 738: '       ' (ID: 309)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3890029788017273
    2. '       ' → logprob: -1.139003038406372
    3. ' pos' → logprob: -6.389002799987793
    4. '
' → logprob: -9.014002799987793
    5. '   ' → logprob: -9.139002799987793
    6. '_pos' → logprob: -10.014002799987793
    7. '	pos' → logprob: -10.264002799987793
    8. 'def' → logprob: -10.639002799987793
    9. '```' → logprob: -10.639002799987793
    10. ',pos' → logprob: -10.639002799987793

Token 739: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.0005317062605172396
    2. 'l' → logprob: -8.500532150268555
    3. 'idx' → logprob: -8.500532150268555
    4. 'lo' → logprob: -9.500532150268555
    5. 'left' → logprob: -10.750532150268555
    6. '       ' → logprob: -11.000532150268555
    7. ' pos' → logprob: -12.125532150268555
    8. '   ' → logprob: -12.875532150268555
    9. 'i' → logprob: -12.875532150268555
    10. 'index' → logprob: -13.750532150268555

Token 740: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759405493736267
    2. '=' → logprob: -0.8259405493736267
    3. '=b' → logprob: -14.075940132141113
    4. '=
' → logprob: -15.950940132141113
    5. '   ' → logprob: -16.07594108581543
    6. ' =
' → logprob: -17.07594108581543
    7. ' ' → logprob: -17.70094108581543
    8. ')' → logprob: -18.45094108581543
    9. '	' → logprob: -18.82594108581543
    10. 'b' → logprob: -19.07594108581543

Token 741: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -9.615255839889869e-05
    2. ' bis' → logprob: -9.250096321105957
    3. 'b' → logprob: -18.50009536743164
    4. 'bs' → logprob: -22.00009536743164
    5. 'bi' → logprob: -22.87509536743164
    6. '   ' → logprob: -23.50009536743164
    7. ' ' → logprob: -23.87509536743164
    8. '	b' → logprob: -23.87509536743164
    9. 'Bis' → logprob: -24.25009536743164
    10. '0' → logprob: -25.62509536743164

Token 742: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0022466040682047606
    2. 'ct' → logprob: -6.127246379852295
    3. 'sect' → logprob: -9.752246856689453
    4. 'e' → logprob: -13.877246856689453
    5. '[' → logprob: -15.127246856689453
    6. '```' → logprob: -15.252246856689453
    7. 'ectl' → logprob: -15.252246856689453
    8. 'lect' → logprob: -15.627246856689453
    9. 'cut' → logprob: -15.752246856689453
    10. 'ict' → logprob: -15.752246856689453

Token 743: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.0009161015041172504
    2. '_left' → logprob: -7.250916004180908
    3. '_right' → logprob: -8.500916481018066
    4. '.' → logprob: -13.000916481018066
    5. '._' → logprob: -15.500916481018066
    6. ' .' → logprob: -15.875916481018066
    7. 'left' → logprob: -17.37591552734375
    8. '.right' → logprob: -17.37591552734375
    9. '_.' → logprob: -17.37591552734375
    10. '.left' → logprob: -17.50091552734375

Token 744: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0011356930481269956
    2. 'ist' → logprob: -8.00113582611084
    3. 'sect' → logprob: -8.00113582611084
    4. 'bis' → logprob: -8.62613582611084
    5. 'ect' → logprob: -9.12613582611084
    6. 'ise' → logprob: -9.25113582611084
    7. 'isc' → logprob: -10.87613582611084
    8. 'search' → logprob: -11.75113582611084
    9. 'ins' → logprob: -12.00113582611084
    10. 'pos' → logprob: -12.12613582611084

Token 745: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.1430240273475647
    2. 'ect' → logprob: -2.01802396774292
    3. 'n' → logprob: -8.393024444580078
    4. 'sect' → logprob: -9.393024444580078
    5. '```' → logprob: -11.893024444580078
    6. 'eft' → logprob: -12.018024444580078
    7. 't' → logprob: -12.768024444580078
    8. 'ft' → logprob: -12.768024444580078
    9. 'pt' → logprob: -13.143024444580078
    10. 'с' → logprob: -13.143024444580078

Token 746: '_right' (ID: 24402)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.20697101950645447
    2. '_right' → logprob: -1.7069710493087769
    3. '(' → logprob: -5.206971168518066
    4. 'left' → logprob: -10.081971168518066
    5. 'right' → logprob: -10.956971168518066
    6. 'Right' → logprob: -13.331971168518066
    7. '.b' → logprob: -13.706971168518066
    8. 'Left' → logprob: -14.081971168518066
    9. '	' → logprob: -15.081971168518066
    10. '(ai' → logprob: -15.081971168518066

Token 747: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. 'oi' → logprob: -15.875
    3. ' (' → logprob: -18.75
    4. '   ' → logprob: -19.0
    5. '(
' → logprob: -19.0
    6. '((' → logprob: -19.125
    7. '(ai' → logprob: -19.25
    8. '(ii' → logprob: -19.625
    9. '(o' → logprob: -19.875
    10. '```' → logprob: -20.125

Token 748: 'oi' (ID: 3412)
  Prédit: 'oi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oi' → logprob: -0.0001589618914294988
    2. '(' → logprob: -8.75015926361084
    3. ' oi' → logprob: -15.50015926361084
    4. '[' → logprob: -15.62515926361084
    5. '[(' → logprob: -18.375158309936523
    6. ')' → logprob: -18.375158309936523
    7. 'o' → logprob: -18.625158309936523
    8. '   ' → logprob: -18.750158309936523
    9. 'Oi' → logprob: -19.125158309936523
    10. 'oci' → logprob: -19.250158309936523

Token 749: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011677479778882116
    2. ',(' → logprob: -9.375116348266602
    3. ' ,' → logprob: -11.125116348266602
    4. '(' → logprob: -11.500116348266602
    5. '(se' → logprob: -12.875116348266602
    6. '((' → logprob: -13.250116348266602
    7. ' (' → logprob: -13.875116348266602
    8. '   ' → logprob: -14.000116348266602
    9. ',
' → logprob: -15.250116348266602
    10. '[(' → logprob: -15.500116348266602

Token 750: ' (' (ID: 350)
  Prédit: '(se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -0.0020951840560883284
    2. '(' → logprob: -6.7520952224731445
    3. ' (' → logprob: -7.0020952224731445
    4. '(segment' → logprob: -11.502095222473145
    5. '(section' → logprob: -13.502095222473145
    6. '(seg' → logprob: -14.127095222473145
    7. '   ' → logprob: -14.627095222473145
    8. '(score' → logprob: -15.002095222473145
    9. '(sec' → logprob: -15.002095222473145
    10. '(s' → logprob: -15.627095222473145

Token 751: 'sector' (ID: 75125)
  Prédit: 'sector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sector' → logprob: -0.0009639846975915134
    2. '(se' → logprob: -7.000964164733887
    3. '(' → logprob: -10.125964164733887
    4. ' sector' → logprob: -11.375964164733887
    5. ' (' → logprob: -14.500964164733887
    6. '   ' → logprob: -15.875964164733887
    7. 'se' → logprob: -16.25096321105957
    8. ')' → logprob: -16.37596321105957
    9. '_sector' → logprob: -16.37596321105957
    10. 'segment' → logprob: -17.62596321105957

Token 752: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.56364209135063e-05
    2. ',float' → logprob: -10.500065803527832
    3. '))' → logprob: -11.125065803527832
    4. ',
' → logprob: -12.000065803527832
    5. ',))
' → logprob: -12.000065803527832
    6. ' ,' → logprob: -13.000065803527832
    7. '999' → logprob: -13.500065803527832
    8. '100' → logprob: -13.875065803527832
    9. ',)' → logprob: -13.875065803527832
    10. ',),' → logprob: -14.375065803527832

Token 753: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.5082041025161743
    2. 'sector' → logprob: -1.5082041025161743
    3. '10' → logprob: -2.5082039833068848
    4. 'float' → logprob: -2.6332039833068848
    5. 'sys' → logprob: -4.258203983306885
    6. '1' → logprob: -5.258203983306885
    7. '(' → logprob: -7.008203983306885
    8. '999' → logprob: -7.258203983306885
    9. 'max' → logprob: -7.633203983306885
    10. 'segment' → logprob: -7.633203983306885

Token 754: '_SE' (ID: 8043)
  Prédit: '_SE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SE' → logprob: -0.00016837897419463843
    2. 'SE' → logprob: -8.750168800354004
    3. '\' → logprob: -12.625168800354004
    4. '
' → logprob: -13.500168800354004
    5. ')' → logprob: -14.000168800354004
    6. '_S' → logprob: -14.500168800354004
    7. '(se' → logprob: -14.750168800354004
    8. '

' → logprob: -15.000168800354004
    9. '(SE' → logprob: -15.125168800354004
    10. '))' → logprob: -15.250168800354004

Token 755: 'CTOR' (ID: 87143)
  Prédit: 'CTOR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CTOR' → logprob: -0.0003091254911851138
    2. 'CT' → logprob: -8.250308990478516
    3. 'ECTOR' → logprob: -10.625308990478516
    4. 'ctor' → logprob: -11.250308990478516
    5. 'SE' → logprob: -11.625308990478516
    6. 'NT' → logprob: -15.000308990478516
    7. 'TOR' → logprob: -15.125308990478516
    8. '
' → logprob: -15.375308990478516
    9. 'C' → logprob: -15.500308990478516
    10. 'KT' → logprob: -16.375308990478516

Token 756: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018530775560066104
    2. '))' → logprob: -6.376852989196777
    3. '+' → logprob: -9.251852989196777
    4. '))
' → logprob: -10.626852989196777
    5. ' ,' → logprob: -11.376852989196777
    6. ',
' → logprob: -12.126852989196777
    7. '0' → logprob: -13.251852989196777
    8. '999' → logprob: -13.376852989196777
    9. '000' → logprob: -13.626852989196777
    10. ' +' → logprob: -13.751852989196777

Token 757: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014036978245712817
    2. '10' → logprob: -9.375140190124512
    3. ' ' → logprob: -10.375140190124512
    4. '100' → logprob: -11.250140190124512
    5. '2' → logprob: -12.625140190124512
    6. '+' → logprob: -12.875140190124512
    7. '0' → logprob: -12.875140190124512
    8. '   ' → logprob: -14.125140190124512
    9. '  ' → logprob: -14.125140190124512
    10. 'MAX' → logprob: -15.125140190124512

Token 758: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02347327210009098
    2. '))' → logprob: -3.7734732627868652
    3. '))
' → logprob: -9.148473739624023
    4. ' ,' → logprob: -10.148473739624023
    5. ' ))' → logprob: -10.898473739624023
    6. ',None' → logprob: -11.148473739624023
    7. '0' → logprob: -11.898473739624023
    8. ')' → logprob: -12.023473739624023
    9. ',"' → logprob: -12.148473739624023
    10. ',
' → logprob: -12.273473739624023

Token 759: ' ' (ID: 220)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.6839454174041748
    2. '"' → logprob: -1.0589454174041748
    3. ''' → logprob: -3.058945417404175
    4. 'None' → logprob: -3.433945417404175
    5. 'sys' → logprob: -3.558945417404175
    6. '0' → logprob: -3.808945417404175
    7. 'float' → logprob: -4.933945655822754
    8. '""' → logprob: -5.058945655822754
    9. '))' → logprob: -6.058945655822754
    10. 'chr' → logprob: -7.058945655822754

Token 760: '10' (ID: 702)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.6897445321083069
    2. '"' → logprob: -0.9397445321083069
    3. ''' → logprob: -2.689744472503662
    4. 'None' → logprob: -3.814744472503662
    5. '""' → logprob: -5.189744472503662
    6. '0' → logprob: -5.314744472503662
    7. 'sys' → logprob: -5.439744472503662
    8. 'float' → logprob: -6.689744472503662
    9. '))' → logprob: -7.564744472503662
    10. 'chr' → logprob: -7.689744472503662

Token 761: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5360961556434631
    2. '9' → logprob: -1.5360960960388184
    3. '10' → logprob: -1.6610960960388184
    4. '))' → logprob: -5.286096096038818
    5. '18' → logprob: -6.411096096038818
    6. '15' → logprob: -7.036096096038818
    7. ')))' → logprob: -7.286096096038818
    8. '20' → logprob: -7.536096096038818
    9. '000' → logprob: -8.036096572875977
    10. '7' → logprob: -9.036096572875977

Token 762: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6160621047019958
    2. '15' → logprob: -0.9910621047019958
    3. '18' → logprob: -2.7410621643066406
    4. '9' → logprob: -3.9910621643066406
    5. '20' → logprob: -5.741062164306641
    6. '12' → logprob: -5.991062164306641
    7. '16' → logprob: -10.61606216430664
    8. '11' → logprob: -11.36606216430664
    9. '14' → logprob: -12.11606216430664
    10. '13' → logprob: -12.36606216430664

Token 763: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008693634532392025
    2. '))
' → logprob: -4.758693695068359
    3. ')))' → logprob: -10.13369369506836
    4. ' ))' → logprob: -11.13369369506836
    5. ')' → logprob: -11.88369369506836
    6. '0' → logprob: -12.50869369506836
    7. '))-' → logprob: -12.50869369506836
    8. '))

' → logprob: -12.75869369506836
    9. '))
' → logprob: -13.88369369506836
    10. '))[' → logprob: -14.00869369506836

Token 764: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8147562146186829
    2. ' -' → logprob: -1.189756155014038
    3. '-' → logprob: -1.939756155014038
    4. 'pos' → logprob: -2.939756155014038
    5. ')-' → logprob: -3.689756155014038
    6. ')
' → logprob: -4.564756393432617
    7. ' pos' → logprob: -4.689756393432617
    8. '
' → logprob: -5.564756393432617
    9. '       ' → logprob: -5.689756393432617
    10. '(pos' → logprob: -5.939756393432617

Token 765: ' if' (ID: 538)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5704934000968933
    2. 'if' (adapté à ' if') → logprob: -1.070493459701538
    3. ' if' → logprob: -2.570493459701538
    4. ' pos' → logprob: -4.195493221282959
    5. '       ' → logprob: -8.695493698120117
    6. '   ' → logprob: -8.820493698120117
    7. 'return' → logprob: -11.320493698120117
    8. '```' → logprob: -12.070493698120117
    9. '	pos' → logprob: -12.070493698120117
    10. '[pos' → logprob: -12.445493698120117

Token 766: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0024758970830589533
    2. ' pos' → logprob: -6.002475738525391
    3. '   ' → logprob: -15.87747573852539
    4. '0' → logprob: -16.00247573852539
    5. '	pos' → logprob: -16.75247573852539
    6. '       ' → logprob: -18.50247573852539
    7. ' ' → logprob: -18.50247573852539
    8. 'not' → logprob: -19.00247573852539
    9. '(pos' → logprob: -20.00247573852539
    10. '_pos' → logprob: -20.37747573852539

Token 767: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.044882215559482574
    2. ' ==' → logprob: -3.169882297515869
    3. '>' → logprob: -6.919882297515869
    4. 'and' → logprob: -7.169882297515869
    5. ' and' → logprob: -9.544881820678711
    6. '===' → logprob: -10.544881820678711
    7. ' >' → logprob: -10.919881820678711
    8. '0' → logprob: -13.169881820678711
    9. '=' → logprob: -13.669881820678711
    10. '-' → logprob: -13.919881820678711

Token 768: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -17.125139236450195
    4. 'len' → logprob: -17.625139236450195
    5. '۰' → logprob: -18.125139236450195
    6. '  ' → logprob: -19.000139236450195
    7. '```' → logprob: -19.250139236450195
    8. '
' → logprob: -19.375139236450195
    9. ' ' → logprob: -20.312639236450195
    10. '０' → logprob: -20.375139236450195

Token 769: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. 'len' → logprob: -15.250027656555176
    4. '   ' → logprob: -17.625028610229492
    5. '۰' → logprob: -18.875028610229492
    6. '
' → logprob: -19.312528610229492
    7. '  ' → logprob: -19.375028610229492
    8. '```' → logprob: -19.750028610229492
    9. '1' → logprob: -20.375028610229492
    10. '=' → logprob: -20.437528610229492

Token 770: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.08419028669595718
    2. ':
' → logprob: -2.9591903686523438
    3. '       ' → logprob: -4.709190368652344
    4. ':return' → logprob: -4.834190368652344
    5. 'or' → logprob: -5.334190368652344
    6. ':' → logprob: -5.709190368652344
    7. '           ' → logprob: -5.959190368652344
    8. '   ' → logprob: -6.959190368652344
    9. '	or' → logprob: -8.959190368652344
    10. 'return' → logprob: -10.459190368652344

Token 771: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6734181046485901
    2. ' return' → logprob: -1.5484180450439453
    3. 'return' → logprob: -2.0484180450439453
    4. '       ' → logprob: -2.0484180450439453
    5. '   ' → logprob: -4.548418045043945
    6. ' None' → logprob: -5.173418045043945
    7. 'None' → logprob: -6.048418045043945
    8. '	return' → logprob: -7.923418045043945
    9. ':return' → logprob: -8.548418045043945
    10. ',' → logprob: -9.798418045043945

Token 772: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03040393814444542
    2. ' return' → logprob: -3.5304038524627686
    3. '       ' → logprob: -7.655404090881348
    4. '           ' → logprob: -9.280404090881348
    5. 'None' → logprob: -9.655404090881348
    6. ' None' → logprob: -11.405404090881348
    7. '   ' → logprob: -12.405404090881348
    8. ':return' → logprob: -12.905404090881348
    9. '	return' → logprob: -13.280404090881348
    10. '
' → logprob: -13.530404090881348

Token 773: ' -' (ID: 533)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0004311460361350328
    2. ' None' → logprob: -7.750431060791016
    3. '
' → logprob: -14.750431060791016
    4. '   ' → logprob: -18.000431060791016
    5. '    
' → logprob: -18.625431060791016
    6. 'none' → logprob: -18.875431060791016
    7. '(None' → logprob: -18.875431060791016
    8. '_None' → logprob: -19.125431060791016
    9. ',None' → logprob: -19.625431060791016
    10. '=None' → logprob: -20.750431060791016

Token 774: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. 'None' → logprob: -11.875007629394531
    3. ' ' → logprob: -16.37500762939453
    4. 'pos' → logprob: -17.12500762939453
    5. '-' → logprob: -17.87500762939453
    6. ' None' → logprob: -17.87500762939453
    7. '   ' → logprob: -18.25000762939453
    8. '(None' → logprob: -18.62500762939453
    9. '```' → logprob: -19.50000762939453
    10. '
' → logprob: -20.00000762939453

Token 775: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0009898189455270767
    2. 'None' → logprob: -8.00098991394043
    3. ' 
' → logprob: -9.00098991394043
    4. '       ' → logprob: -9.25098991394043
    5. ' None' → logprob: -9.25098991394043
    6. '   ' → logprob: -9.25098991394043
    7. '
' → logprob: -9.62598991394043
    8. '0' → logprob: -10.25098991394043
    9. ',' → logprob: -10.75098991394043
    10. 'return' → logprob: -11.12598991394043

Token 776: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005449801217764616
    2. '       ' → logprob: -6.1304497718811035
    3. 'None' → logprob: -6.7554497718811035
    4. ' return' → logprob: -8.005450248718262
    5. ' None' → logprob: -8.005450248718262
    6. '0' → logprob: -8.255450248718262
    7. '   ' → logprob: -8.255450248718262
    8. 'return' → logprob: -8.630450248718262
    9. ' 
' → logprob: -9.005450248718262
    10. '
' → logprob: -9.005450248718262

Token 777: ' interval' (ID: 17116)
  Prédit: 'iv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.1986275166273117
    2. 'pos' → logprob: -2.823627471923828
    3. ' iv' → logprob: -2.948627471923828
    4. 'interval' (adapté à ' interval') → logprob: -3.448627471923828
    5. '   ' → logprob: -4.448627471923828
    6. 'start' → logprob: -4.698627471923828
    7. 'prev' → logprob: -5.198627471923828
    8. ' interval' → logprob: -6.323627471923828
    9. ' pos' → logprob: -6.323627471923828
    10. 'idx' → logprob: -6.448627471923828

Token 778: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575969934463501
    2. ' =' → logprob: -0.825969934463501
    3. 's' → logprob: -10.825969696044922
    4. '_idx' → logprob: -13.075969696044922
    5. '_pos' → logprob: -13.325969696044922
    6. 'pos' → logprob: -13.575969696044922
    7. '=_' → logprob: -13.700969696044922
    8. '   ' → logprob: -13.950969696044922
    9. '=start' → logprob: -13.950969696044922
    10. '=
' → logprob: -14.700969696044922

Token 779: ' oi' (ID: 115554)
  Prédit: 'oi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oi' → logprob: -0.016036832705140114
    2. ' oi' → logprob: -4.1410369873046875
    3. '   ' → logprob: -13.516036987304688
    4. 'self' → logprob: -14.391036987304688
    5. 'io' → logprob: -15.891036987304688
    6. ' ' → logprob: -15.891036987304688
    7. 'Oi' → logprob: -16.141036987304688
    8. ' self' → logprob: -16.766036987304688
    9. '(' → logprob: -17.141036987304688
    10. '       ' → logprob: -17.141036987304688

Token 780: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -9.13388703338569e-06
    2. 'pos' → logprob: -11.625009536743164
    3. '   ' → logprob: -16.375009536743164
    4. ' pos' → logprob: -17.125009536743164
    5. ' =' → logprob: -17.375009536743164
    6. ' [' → logprob: -17.500009536743164
    7. '[' → logprob: -17.875009536743164
    8. '=' → logprob: -17.875009536743164
    9. ',pos' → logprob: -18.750009536743164
    10. '	pos' → logprob: -19.625009536743164

Token 781: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00023393364972434938
    2. ' -' → logprob: -8.37523365020752
    3. '[' → logprob: -12.87523365020752
    4. '1' → logprob: -14.62523365020752
    5. ']-' → logprob: -16.625234603881836
    6. '-token' → logprob: -16.875234603881836
    7. '0' → logprob: -17.000234603881836
    8. 'pos' → logprob: -18.000234603881836
    9. '()-' → logprob: -18.250234603881836
    10. 'token' → logprob: -18.250234603881836

Token 782: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.875003814697266
    3. '```' → logprob: -14.750003814697266
    4. ']' → logprob: -15.187503814697266
    5. '   ' → logprob: -15.375003814697266
    6. ',' → logprob: -15.687503814697266
    7. ')' → logprob: -16.312503814697266
    8. '[' → logprob: -16.500003814697266
    9. '][' → logprob: -16.937503814697266
    10. '0' → logprob: -17.375003814697266

Token 783: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.01667584851384163
    2. ']' → logprob: -4.14167594909668
    3. ')
' → logprob: -7.64167594909668
    4. ']
' → logprob: -9.89167594909668
    5. '][' → logprob: -10.01667594909668
    6. ')' → logprob: -10.14167594909668
    7. '       ' → logprob: -11.64167594909668
    8. ']

' → logprob: -12.26667594909668
    9. '   ' → logprob: -12.51667594909668
    10. ' ]
' → logprob: -13.14167594909668

Token 784: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.594643235206604
    2. '[' → logprob: -1.844643235206604
    3. ' if' → logprob: -2.3446431159973145
    4. '
' → logprob: -2.5946431159973145
    5. '   ' → logprob: -3.0946431159973145
    6. '<|end|>' → logprob: -3.5946431159973145
    7. ',' → logprob: -4.8446431159973145
    8. '        
' → logprob: -4.9696431159973145
    9. ' 
' → logprob: -4.9696431159973145
    10. '  
' → logprob: -5.2196431159973145

Token 785: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.025303876027464867
    2. 'if' (adapté à ' if') → logprob: -4.150303840637207
    3. '
' → logprob: -5.650303840637207
    4. '[' → logprob: -5.775303840637207
    5. '       ' → logprob: -6.525303840637207
    6. '	if' → logprob: -8.150303840637207
    7. ',' → logprob: -8.650303840637207
    8. '   ' → logprob: -8.775303840637207
    9. 'start' → logprob: -8.900303840637207
    10. '[start' → logprob: -9.275303840637207

Token 786: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.10023988783359528
    2. ' interval' → logprob: -2.3502399921417236
    3. 'sector' → logprob: -10.600239753723145
    4. ' sector' → logprob: -12.350239753723145
    5. '(interval' → logprob: -12.725239753723145
    6. '.interval' → logprob: -15.225239753723145
    7. '   ' → logprob: -15.350239753723145
    8. '
' → logprob: -15.975239753723145
    9. '_interval' → logprob: -16.10024070739746
    10. ' ' → logprob: -16.35024070739746

Token 787: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.4849443838757e-06
    2. '0' → logprob: -12.375004768371582
    3. ' [' → logprob: -16.125003814697266
    4. ' ' → logprob: -16.625003814697266
    5. '1' → logprob: -17.125003814697266
    6. 'and' → logprob: -17.375003814697266
    7. '][' → logprob: -18.125003814697266
    8. 'start' → logprob: -18.125003814697266
    9. '[
' → logprob: -18.750003814697266
    10. '   ' → logprob: -18.750003814697266

Token 788: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.35837464465294e-05
    2. '1' → logprob: -10.250043869018555
    3. ' ' → logprob: -11.875043869018555
    4. 'start' → logprob: -14.750043869018555
    5. '
' → logprob: -15.437543869018555
    6. '[' → logprob: -16.875043869018555
    7. '   ' → logprob: -17.187543869018555
    8. ')' → logprob: -17.375043869018555
    9. 'Start' → logprob: -17.375043869018555
    10. '۰' → logprob: -17.687543869018555

Token 789: ']' (ID: 60)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6932612061500549
    2. '<=' → logprob: -0.6932612061500549
    3. ')<=' → logprob: -9.81826114654541
    4. ')' → logprob: -10.44326114654541
    5. ']<=' → logprob: -10.56826114654541
    6. '```' → logprob: -14.19326114654541
    7. '[' → logprob: -14.31826114654541
    8. '0' → logprob: -14.44326114654541
    9. '<|end|>' → logprob: -14.44326114654541
    10. '≤' → logprob: -14.56826114654541

Token 790: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.20141948759555817
    2. ' <=' → logprob: -1.701419472694397
    3. ']<=' → logprob: -12.701419830322266
    4. ')<=' → logprob: -12.826419830322266
    5. '≤' → logprob: -16.201419830322266
    6. ')' → logprob: -16.576419830322266
    7. '
' → logprob: -16.826419830322266
    8. '<|end|>' → logprob: -17.076419830322266
    9. '...' → logprob: -17.576419830322266
    10. 'le' → logprob: -17.576419830322266

Token 791: ' sector' (ID: 11207)
  Prédit: 'sector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sector' → logprob: -0.011047935113310814
    2. ' sector' → logprob: -4.511047840118408
    3. '
' → logprob: -16.13604736328125
    4. 'segment' → logprob: -17.63604736328125
    5. '_sector' → logprob: -17.63604736328125
    6. 'sect' → logprob: -18.38604736328125
    7. ' ' → logprob: -18.51104736328125
    8. 'section' → logprob: -18.63604736328125
    9. '-sector' → logprob: -18.88604736328125
    10. '   ' → logprob: -19.01104736328125

Token 792: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.046135686337947845
    2. '<=' → logprob: -3.296135663986206
    3. ' and' → logprob: -5.046135902404785
    4. 'and' → logprob: -6.421135902404785
    5. ' ' → logprob: -14.921135902404785
    6. ' ≤' → logprob: -17.17113494873047
    7. ' ' → logprob: -17.17113494873047
    8. '       ' → logprob: -17.92113494873047
    9. '        ' → logprob: -17.92113494873047
    10. ')<=' → logprob: -17.92113494873047

Token 793: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0015023599844425917
    2. ' interval' → logprob: -6.501502513885498
    3. '   ' → logprob: -17.376502990722656
    4. '(interval' → logprob: -18.126502990722656
    5. ' ' → logprob: -18.626502990722656
    6. '
' → logprob: -18.626502990722656
    7. '  ' → logprob: -18.876502990722656
    8. 'int' → logprob: -19.501502990722656
    9. '       ' → logprob: -20.876502990722656
    10. 'interface' → logprob: -21.001502990722656

Token 794: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.935296834039036e-06
    2. '1' → logprob: -13.37500286102295
    3. '   ' → logprob: -14.00000286102295
    4. ' [' → logprob: -14.75000286102295
    5. '.' → logprob: -17.375003814697266
    6. '       ' → logprob: -17.875003814697266
    7. '][' → logprob: -18.125003814697266
    8. '	' → logprob: -18.500003814697266
    9. '```' → logprob: -18.500003814697266
    10. '[
' → logprob: -18.625003814697266

Token 795: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.75
    3. '
' → logprob: -17.125
    4. ' ' → logprob: -18.125
    5. '۱' → logprob: -19.0
    6. '```' → logprob: -19.375
    7. '   ' → logprob: -19.5
    8. '    
' → logprob: -19.875
    9. '' → logprob: -20.5
    10. ']' → logprob: -20.625

Token 796: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5020401477813721
    2. ':' → logprob: -1.877040147781372
    3. ']:
' → logprob: -1.877040147781372
    4. '):
' → logprob: -2.627040147781372
    5. ']:' → logprob: -4.877039909362793
    6. ':return' → logprob: -5.377039909362793
    7. '):' → logprob: -6.252039909362793
    8. '       ' → logprob: -6.627039909362793
    9. ']' → logprob: -8.002039909362793
    10. '           ' → logprob: -9.252039909362793

Token 797: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007827830500900745
    2. ' return' → logprob: -6.0078277587890625
    3. ':return' → logprob: -6.3828277587890625
    4. 'return' → logprob: -6.5078277587890625
    5. ':
' → logprob: -6.8828277587890625
    6. '       ' → logprob: -7.0078277587890625
    7. ':' → logprob: -8.882827758789062
    8. ',' → logprob: -11.132827758789062
    9. '               ' → logprob: -11.257827758789062
    10. '	       ' → logprob: -11.507827758789062

Token 798: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2047712504863739
    2. ' return' → logprob: -1.7047712802886963
    3. '           ' → logprob: -5.704771041870117
    4. '{return' → logprob: -12.079771041870117
    5. ':return' → logprob: -12.204771041870117
    6. '               ' → logprob: -12.454771041870117
    7. '	return' → logprob: -12.579771041870117
    8. '       ' → logprob: -12.829771041870117
    9. '   ' → logprob: -14.329771041870117
    10. ')return' → logprob: -15.704771041870117

Token 799: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.012770733796060085
    2. ' interval' → logprob: -4.762770652770996
    3. 'pos' → logprob: -5.512770652770996
    4. ' pos' → logprob: -9.137770652770996
    5. '(interval' → logprob: -13.137770652770996
    6. '   ' → logprob: -13.887770652770996
    7. 'position' → logprob: -14.262770652770996
    8. ' ' → logprob: -15.637770652770996
    9. 'int' → logprob: -16.012771606445312
    10. '  ' → logprob: -16.012771606445312

Token 800: '[' (ID: 58)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15377797186374664
    2. '[' → logprob: -2.528778076171875
    3. '<|end|>' → logprob: -3.028778076171875
    4. '<|end|>' → logprob: -4.778778076171875
    5. '(' → logprob: -6.653778076171875
    6. '  
' → logprob: -7.028778076171875
    7. ' 
' → logprob: -7.528778076171875
    8. ',' → logprob: -7.778778076171875
    9. '    
' → logprob: -7.903778076171875
    10. '        
' → logprob: -8.153778076171875

Token 801: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9623810658231378e-05
    2. '0' → logprob: -11.500020027160645
    3. '1' → logprob: -12.875020027160645
    4. ' ' → logprob: -13.000020027160645
    5. '
' → logprob: -13.375020027160645
    6. '-' → logprob: -14.062520027160645
    7. '```' → logprob: -14.437520027160645
    8. '   ' → logprob: -14.750020027160645
    9. '  ' → logprob: -15.687520027160645
    10. '

' → logprob: -15.687520027160645

Token 802: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030291419476270676
    2. '       ' → logprob: -4.405291557312012
    3. '<|end|>' → logprob: -4.655291557312012
    4. ']' → logprob: -5.780291557312012
    5. '}' → logprob: -6.405291557312012
    6. ' else' → logprob: -6.655291557312012
    7. ')
' → logprob: -6.780291557312012
    8. '
' → logprob: -8.530291557312012
    9. '<|end|>' → logprob: -8.780291557312012
    10. ')return' → logprob: -8.905291557312012

Token 803: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004430627159308642
    2. 'return' → logprob: -8.750443458557129
    3. '	' → logprob: -8.875443458557129
    4. ' return' → logprob: -9.750443458557129
    5. '	return' → logprob: -10.250443458557129
    6. '   ' → logprob: -10.750443458557129
    7. '<|end|>' → logprob: -11.500443458557129
    8. '
' → logprob: -12.375443458557129
    9. '           ' → logprob: -12.625443458557129
    10. '\n' → logprob: -13.375443458557129

Token 804: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4218461215496063
    2. '       ' → logprob: -1.1718461513519287
    3. '   ' → logprob: -3.9218461513519287
    4. ' return' → logprob: -4.79684591293335
    5. '
' → logprob: -5.42184591293335
    6. 'else' → logprob: -7.04684591293335
    7. '	return' → logprob: -7.42184591293335
    8. '        
' → logprob: -9.046846389770508
    9. ' else' → logprob: -9.671846389770508
    10. '    
' → logprob: -9.796846389770508

Token 805: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.694766489090398e-05
    2. ' -' → logprob: -10.000066757202148
    3. 'None' → logprob: -10.750066757202148
    4. ' None' → logprob: -17.12506675720215
    5. '-none' → logprob: -19.12506675720215
    6. '   ' → logprob: -20.87506675720215
    7. '
' → logprob: -22.00006675720215
    8. '-s' → logprob: -22.62506675720215
    9. '-n' → logprob: -22.62506675720215
    10. ' ' → logprob: -23.00006675720215

Token 806: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '-' → logprob: -21.0
    3. ' ' → logprob: -21.5
    4. '```' → logprob: -21.875
    5. '2' → logprob: -22.0
    6. 'None' → logprob: -22.875
    7. '   ' → logprob: -23.0
    8. '0' → logprob: -23.625
    9. '１' → logprob: -24.625
    10. '9' → logprob: -24.75

Token 807: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6924071907997131
    2. '
' → logprob: -1.0674071311950684
    3. '<|end|>' → logprob: -1.9424071311950684
    4. 'def' → logprob: -4.692407131195068
    5. '<|end|>' → logprob: -7.067407131195068
    6. '    
' → logprob: -7.317407131195068
    7. ' def' → logprob: -7.442407131195068
    8. '```' → logprob: -7.692407131195068
    9. '

' → logprob: -8.817407608032227
    10. ')' → logprob: -8.942407608032227

Token 808: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26839280128479004
    2. 'def' → logprob: -1.51839280128479
    3. '
' → logprob: -5.143392562866211
    4. '<|end|>' → logprob: -5.393392562866211
    5. ' def' → logprob: -6.018392562866211
    6. '```' → logprob: -6.393392562866211
    7. '    
' → logprob: -7.393392562866211
    8. ')' → logprob: -8.393392562866211
    9. '(' → logprob: -8.768392562866211
    10. ' ' → logprob: -9.143392562866211

Token 809: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48931193351745605
    2. 'def' (adapté à ' def') → logprob: -0.989311933517456
    3. ' def' → logprob: -4.239312171936035
    4. '
' → logprob: -8.114312171936035
    5. '```' → logprob: -8.239312171936035
    6. '    
' → logprob: -9.239312171936035
    7. '	def' → logprob: -11.239312171936035
    8. '  ' → logprob: -12.239312171936035
    9. '<|end|>' → logprob: -12.489312171936035
    10. ' ' → logprob: -13.114312171936035

Token 810: ' write' (ID: 5067)
  Prédit: ' allocate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' allocate' → logprob: -0.03379034623503685
    2. ' def' → logprob: -3.908790349960327
    3. 'allocate' → logprob: -5.533790111541748
    4. ' create' → logprob: -5.533790111541748
    5. ' alloc' → logprob: -5.908790111541748
    6. '_allocate' → logprob: -6.908790111541748
    7. 'alloc' → logprob: -8.033790588378906
    8. 'def' → logprob: -8.033790588378906
    9. ' write' → logprob: -8.408790588378906
    10. ' format' → logprob: -8.658790588378906

Token 811: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3134845197200775
    2. '(' → logprob: -1.3134845495224
    3. '_file' → logprob: -9.188484191894531
    4. ' (' → logprob: -9.438484191894531
    5. '_' → logprob: -11.563484191894531
    6. '_(' → logprob: -11.938484191894531
    7. 'self' → logprob: -12.188484191894531
    8. '(
' → logprob: -13.063484191894531
    9. '(se' → logprob: -13.188484191894531
    10. '_space' → logprob: -13.188484191894531

Token 812: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10778598487377167
    2. '(self' → logprob: -2.357785940170288
    3. '(' → logprob: -6.107786178588867
    4. 'self' → logprob: -6.482786178588867
    5. '_file' → logprob: -6.982786178588867
    6. ' ,' → logprob: -7.357786178588867
    7. ')(' → logprob: -7.607786178588867
    8. '_' → logprob: -7.732786178588867
    9. ')' → logprob: -8.232786178588867
    10. ' (' → logprob: -8.607786178588867

Token 813: ' fid' (ID: 34157)
  Prédit: 'fid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fid' → logprob: -0.10970362275838852
    2. 'file' → logprob: -2.609703540802002
    3. ' fid' → logprob: -3.984703540802002
    4. 'self' → logprob: -4.734703540802002
    5. 'size' → logprob: -6.484703540802002
    6. ' file' → logprob: -7.234703540802002
    7. ' self' → logprob: -8.48470401763916
    8. '   ' → logprob: -8.85970401763916
    9. ' size' → logprob: -9.48470401763916
    10. '(fid' → logprob: -10.35970401763916

Token 814: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.805981972021982e-05
    2. ' ,' → logprob: -9.25009822845459
    3. 'self' → logprob: -14.50009822845459
    4. '       ' → logprob: -14.87509822845459
    5. '‌,' → logprob: -15.00009822845459
    6. '   ' → logprob: -15.75009822845459
    7. '_,' → logprob: -16.375097274780273
    8. '(self' → logprob: -16.375097274780273
    9. '‍,' → logprob: -16.375097274780273
    10. ',self' → logprob: -16.500097274780273

Token 815: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.09311493486166
    2. 'length' → logprob: -3.0931148529052734
    3. ' size' → logprob: -3.2181148529052734
    4. ' length' → logprob: -6.343114852905273
    5. 'start' → logprob: -7.093114852905273
    6. 'se' → logprob: -8.093114852905273
    7. 'num' → logprob: -8.468114852905273
    8. 'n' → logprob: -9.218114852905273
    9. 'sz' → logprob: -9.468114852905273
    10. 'blocks' → logprob: -9.968114852905273

Token 816: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.48029497265815735
    2. '):' → logprob: -0.980294942855835
    3. ',' → logprob: -5.105295181274414
    4. '):
' → logprob: -9.105295181274414
    5. '   ' → logprob: -10.980295181274414
    6. '):

' → logprob: -12.980295181274414
    7. '       ' → logprob: -13.855295181274414
    8. ' ):' → logprob: -13.855295181274414
    9. ':' → logprob: -14.730295181274414
    10. ')' → logprob: -15.105295181274414

Token 817: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23550961911678314
    2. ' free' → logprob: -1.8605096340179443
    3. 'free' → logprob: -3.9855096340179443
    4. '#' → logprob: -4.985509395599365
    5. ' if' → logprob: -5.360509395599365
    6. ' #' → logprob: -5.610509395599365
    7. ' remaining' → logprob: -6.110509395599365
    8. 'if' → logprob: -6.235509395599365
    9. '
' → logprob: -6.360509395599365
    10. 'remaining' → logprob: -6.360509395599365

Token 818: ' #' (ID: 1069)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.7656131386756897
    2. '       ' → logprob: -2.390613079071045
    3. 'remaining' → logprob: -2.515613079071045
    4. 'allocated' → logprob: -2.640613079071045
    5. 'needed' → logprob: -2.765613079071045
    6. 'free' → logprob: -3.015613079071045
    7. '   ' → logprob: -3.015613079071045
    8. 'pos' → logprob: -3.140613079071045
    9. '#' (adapté à ' #') → logprob: -4.140613079071045
    10. 'if' → logprob: -4.765613079071045

Token 819: ' We' (ID: 1416)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'needed' → logprob: -1.5641026496887207
    2. 'remaining' → logprob: -1.5641026496887207
    3. 'allocated' → logprob: -1.8141026496887207
    4. 'fi' → logprob: -2.4391026496887207
    5. 'need' → logprob: -2.5641026496887207
    6. 'if' → logprob: -2.8141026496887207
    7. 'pos' → logprob: -3.1891026496887207
    8. 'remain' → logprob: -3.8141026496887207
    9. 'alloc' → logprob: -4.064102649688721
    10. 'res' → logprob: -4.189102649688721

Token 820: ' write' (ID: 5067)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8551064729690552
    2. '       ' → logprob: -1.4801064729690552
    3. 'need' → logprob: -1.8551064729690552
    4. ' need' → logprob: -2.2301063537597656
    5. ' #' → logprob: -4.480106353759766
    6. 'n' → logprob: -4.480106353759766
    7. 'def' → logprob: -4.730106353759766
    8. '#' → logprob: -4.980106353759766
    9. 'nt' → logprob: -5.355106353759766
    10. 'se' → logprob: -5.355106353759766

Token 821: ' file' (ID: 1974)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1105167865753174
    2. 'remaining' → logprob: -1.6105167865753174
    3. '   ' → logprob: -1.8605167865753174
    4. ' remaining' → logprob: -2.7355167865753174
    5. 'pos' → logprob: -2.9855167865753174
    6. ' =' → logprob: -3.4855167865753174
    7. ' to' → logprob: -4.110516548156738
    8. 'needed' → logprob: -4.110516548156738
    9. 'def' → logprob: -4.110516548156738
    10. 'allocated' → logprob: -4.235516548156738

Token 822: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.570951521396637
    2. '=' → logprob: -2.445951461791992
    3. 'def' → logprob: -2.570951461791992
    4. '   ' → logprob: -2.820951461791992
    5. ' if' → logprob: -3.320951461791992
    6. '       ' → logprob: -3.445951461791992
    7. ',' → logprob: -4.070951461791992
    8. ' ' → logprob: -4.695951461791992
    9. 'size' → logprob: -4.820951461791992
    10. '_size' → logprob: -4.820951461791992

Token 823: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.22714990377426147
    2. ' size' → logprob: -1.6021499633789062
    3. 'fid' → logprob: -6.977149963378906
    4. ' fid' → logprob: -7.977149963378906
    5. '(fid' → logprob: -9.977149963378906
    6. '```' → logprob: -10.227149963378906
    7. 'id' → logprob: -10.352149963378906
    8. ' ' → logprob: -10.602149963378906
    9. ' sectors' → logprob: -10.602149963378906
    10. '   ' → logprob: -10.727149963378906

Token 824: ' sectors' (ID: 33723)
  Prédit: ' bytes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bytes' → logprob: -0.6767925024032593
    2. ' size' → logprob: -2.676792621612549
    3. ' sectors' → logprob: -2.676792621612549
    4. ' units' → logprob: -2.926792621612549
    5. ' with' → logprob: -3.051792621612549
    6. 'se' → logprob: -3.551792621612549
    7. ' in' → logprob: -3.676792621612549
    8. ' by' → logprob: -3.926792621612549
    9. ' to' → logprob: -3.926792621612549
    10. ',' → logprob: -4.051792621612549

Token 825: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025785429403185844
    2. ' to' → logprob: -5.275785446166992
    3. ',' → logprob: -5.525785446166992
    4. ' allocated' → logprob: -6.275785446166992
    5. ' if' → logprob: -6.275785446166992
    6. 'remaining' → logprob: -6.650785446166992
    7. ' =' → logprob: -6.775785446166992
    8. ' remaining' → logprob: -6.775785446166992
    9. ' at' → logprob: -6.900785446166992
    10. ' and' → logprob: -7.025785446166992

Token 826: ' id' (ID: 1211)
  Prédit: 'fid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fid' → logprob: -0.5355137586593628
    2. ' fid' → logprob: -2.2855138778686523
    3. 'free' → logprob: -2.5355138778686523
    4. 'the' → logprob: -2.7855138778686523
    5. 'size' → logprob: -3.7855138778686523
    6. 'def' → logprob: -3.7855138778686523
    7. 'file' → logprob: -4.285513877868652
    8. ' the' → logprob: -4.285513877868652
    9. 'self' → logprob: -4.660513877868652
    10. ' free' → logprob: -4.910513877868652

Token 827: ' fid' (ID: 34157)
  Prédit: 'fid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fid' → logprob: -0.33631786704063416
    2. ' fid' → logprob: -1.3363178968429565
    3. '(fid' → logprob: -4.211318016052246
    4. '=' → logprob: -5.211318016052246
    5. ' =' → logprob: -6.211318016052246
    6. ',' → logprob: -8.586318016052246
    7. '=f' → logprob: -8.711318016052246
    8. '       ' → logprob: -9.336318016052246
    9. '   ' → logprob: -11.586318016052246
    10. '
' → logprob: -11.836318016052246

Token 828: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024134812876582146
    2. ',' → logprob: -4.274134635925293
    3. '
' → logprob: -5.524134635925293
    4. '        
' → logprob: -5.649134635925293
    5. ':' → logprob: -8.024134635925293
    6. ' and' → logprob: -8.149134635925293
    7. '.' → logprob: -8.649134635925293
    8. '  
' → logprob: -8.774134635925293
    9. '=' → logprob: -8.899134635925293
    10. ' =' → logprob: -9.149134635925293

Token 829: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014679614687338471
    2. ':' → logprob: -7.376468181610107
    3. ',' → logprob: -8.12646770477295
    4. '        
' → logprob: -8.62646770477295
    5. '```' → logprob: -9.37646770477295
    6. ':
' → logprob: -9.50146770477295
    7. '
' → logprob: -10.00146770477295
    8. '   ' → logprob: -10.37646770477295
    9. '.' → logprob: -10.87646770477295
    10. '        ' → logprob: -11.50146770477295

Token 830: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1362640857696533
    2. 'allocated' → logprob: -1.7612640857696533
    3. 'needed' → logprob: -1.7612640857696533
    4. 'remaining' → logprob: -2.0112640857696533
    5. 'free' → logprob: -3.3862640857696533
    6. 'need' → logprob: -3.5112640857696533
    7. 'fi' → logprob: -3.8862640857696533
    8. 'alloc' → logprob: -4.011263847351074
    9. ' allocated' → logprob: -4.136263847351074
    10. 'remain' → logprob: -4.386263847351074

Token 831: ' Find' (ID: 9764)
  Prédit: 'allocated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allocated' → logprob: -1.263195276260376
    2. 'remaining' → logprob: -1.388195276260376
    3. 'needed' → logprob: -2.013195276260376
    4. 'pos' → logprob: -2.513195276260376
    5. 'if' → logprob: -2.888195276260376
    6. 'written' → logprob: -3.138195276260376
    7. 'need' → logprob: -3.513195276260376
    8. 'to' → logprob: -4.013195037841797
    9. 'alloc' → logprob: -4.013195037841797
    10. 'remain' → logprob: -4.263195037841797

Token 832: ' earliest' (ID: 48721)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9751333594322205
    2. 'for' → logprob: -1.6001334190368652
    3. ' for' → logprob: -1.7251334190368652
    4. ' a' → logprob: -2.4751334190368652
    5. ' pos' → logprob: -3.4751334190368652
    6. 'a' → logprob: -3.6001334190368652
    7. ' the' → logprob: -4.350133419036865
    8. ' idx' → logprob: -4.350133419036865
    9. 'idx' → logprob: -4.725133419036865
    10. 'interval' → logprob: -4.850133419036865

Token 833: ' free' (ID: 2240)
  Prédit: ' free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' free' → logprob: -0.218684583902359
    2. 'free' → logprob: -2.968684673309326
    3. ' interval' → logprob: -3.593684673309326
    4. '_free' → logprob: -3.843684673309326
    5. ' for' → logprob: -4.468684673309326
    6. 'pos' → logprob: -4.593684673309326
    7. ' possible' → logprob: -4.593684673309326
    8. 'interval' → logprob: -4.968684673309326
    9. 'possible' → logprob: -4.968684673309326
    10. 'for' → logprob: -5.093684673309326

Token 834: ' space' (ID: 4918)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.2547094225883484
    2. ' interval' → logprob: -1.5047094821929932
    3. '_interval' → logprob: -6.504709243774414
    4. ' intervals' → logprob: -8.129709243774414
    5. 'start' → logprob: -8.629709243774414
    6. ' (' → logprob: -8.879709243774414
    7. 'index' → logprob: -9.254709243774414
    8. '_start' → logprob: -10.004709243774414
    9. '_inter' → logprob: -10.254709243774414
    10. 'space' → logprob: -10.254709243774414

Token 835: '(s' (ID: 1858)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08776561170816422
    2. 'pos' → logprob: -3.712765693664551
    3. ',' → logprob: -3.962765693664551
    4. ' for' → logprob: -4.587765693664551
    5. ' =' → logprob: -4.712765693664551
    6. ' pos' → logprob: -4.837765693664551
    7. ' and' → logprob: -6.712765693664551
    8. ' to' → logprob: -6.837765693664551
    9. ' in' → logprob: -6.962765693664551
    10. ' start' → logprob: -7.212765693664551

Token 836: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1809798628091812
    2. ' )' → logprob: -2.6809799671173096
    3. ' to' → logprob: -3.1809799671173096
    4. ' for' → logprob: -4.1809797286987305
    5. '       ' → logprob: -4.5559797286987305
    6. ',' → logprob: -4.6809797286987305
    7. ' that' → logprob: -4.6809797286987305
    8. ' where' → logprob: -6.0559797286987305
    9. '   ' → logprob: -6.6809797286987305
    10. 'for' → logprob: -6.8059797286987305

Token 837: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13629166781902313
    2. ',' → logprob: -3.886291742324829
    3. ' needed' → logprob: -4.01129150390625
    4. ' to' → logprob: -4.13629150390625
    5. 'pos' → logprob: -4.26129150390625
    6. 'needed' → logprob: -5.01129150390625
    7. ' size' → logprob: -5.13629150390625
    8. ' allocated' → logprob: -5.26129150390625
    9. '
' → logprob: -5.63629150390625
    10. ' remaining' → logprob: -5.63629150390625

Token 838: ' start' (ID: 1604)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8348364233970642
    2. ' the' → logprob: -1.459836483001709
    3. 'the' → logprob: -1.584836483001709
    4. ' self' → logprob: -3.584836483001709
    5. '0' → logprob: -3.584836483001709
    6. 'left' → logprob: -3.709836483001709
    7. 'free' → logprob: -3.959836483001709
    8. ' free' → logprob: -4.959836483001709
    9. 'start' → logprob: -5.084836483001709
    10. ' left' → logprob: -5.834836483001709

Token 839: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4734435975551605
    2. ',' → logprob: -1.848443627357483
    3. '=' → logprob: -2.2234435081481934
    4. ' =' → logprob: -2.4734435081481934
    5. ' ,' → logprob: -4.973443508148193
    6. ' to' → logprob: -5.223443508148193
    7. ' at' → logprob: -5.723443508148193
    8. 'pos' → logprob: -6.098443508148193
    9. ' for' → logprob: -6.598443508148193
    10. '        ' → logprob: -6.723443508148193

Token 840: ' writing' (ID: 5281)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -1.1123924255371094
    2. ' remaining' → logprob: -1.3623924255371094
    3. ' the' → logprob: -2.1123924255371094
    4. ' size' → logprob: -2.8623924255371094
    5. 'the' → logprob: -3.1123924255371094
    6. 'alloc' → logprob: -3.1123924255371094
    7. ' allocation' → logprob: -3.2373924255371094
    8. 'needed' → logprob: -3.6123924255371094
    9. 'size' → logprob: -4.112392425537109
    10. 'allocation' → logprob: -4.237392425537109

Token 841: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4406607151031494
    2. ' allocated' → logprob: -1.4406607151031494
    3. 'pos' → logprob: -3.1906607151031494
    4. ' pos' → logprob: -3.6906607151031494
    5. 'allocated' → logprob: -4.56566047668457
    6. ' total' → logprob: -5.19066047668457
    7. ' remaining' → logprob: -5.56566047668457
    8. ' current' → logprob: -5.81566047668457
    9. 'alloc' → logprob: -6.19066047668457
    10. ' alloc' → logprob: -6.19066047668457

Token 842: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027705350890755653
    2. ' allocated' → logprob: -4.402705192565918
    3. 'pos' → logprob: -5.277705192565918
    4. ' remaining' → logprob: -6.402705192565918
    5. ' pos' → logprob: -6.527705192565918
    6. 'remaining' → logprob: -6.777705192565918
    7. 'allocated' → logprob: -7.527705192565918
    8. ' total' → logprob: -7.652705192565918
    9. ' i' → logprob: -7.652705192565918
    10. ' free' → logprob: -7.777705192565918

Token 843: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6220223307609558
    2. 'needed' → logprob: -2.4970223903656006
    3. 'allocated' → logprob: -2.7470223903656006
    4. ' allocated' → logprob: -2.9970223903656006
    5. 'remaining' → logprob: -3.1220223903656006
    6. 'remain' → logprob: -3.2470223903656006
    7. ' needed' → logprob: -3.3720223903656006
    8. 'pos' → logprob: -3.3720223903656006
    9. ' remaining' → logprob: -3.8720223903656006
    10. 'need' → logprob: -3.9970223903656006

Token 844: ' If' (ID: 1843)
  Prédit: 'allocated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allocated' → logprob: -1.171002745628357
    2. ' allocated' → logprob: -1.921002745628357
    3. 'needed' → logprob: -2.4210028648376465
    4. 'remaining' → logprob: -2.6710028648376465
    5. 'pos' → logprob: -2.9210028648376465
    6. '   ' → logprob: -3.1710028648376465
    7. 'alloc' → logprob: -3.2960028648376465
    8. ' needed' → logprob: -3.4210028648376465
    9. 'written' → logprob: -3.4210028648376465
    10. ' remaining' → logprob: -3.5460028648376465

Token 845: ' meet' (ID: 4158)
  Prédit: ' size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.44610923528671265
    2. 'size' → logprob: -1.1961092948913574
    3. ' fid' → logprob: -4.071109294891357
    4. ' not' → logprob: -4.696109294891357
    5. 'fid' → logprob: -4.696109294891357
    6. 'sum' → logprob: -4.821109294891357
    7. ' sum' → logprob: -5.071109294891357
    8. ' len' → logprob: -6.571109294891357
    9. 'not' → logprob: -6.946109294891357
    10. '
' → logprob: -7.071109294891357

Token 846: ' occupied' (ID: 46186)
  Prédit: ' size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.5990238785743713
    2. ' len' → logprob: -2.2240238189697266
    3. ' not' → logprob: -2.7240238189697266
    4. ' ' → logprob: -2.8490238189697266
    5. 's' → logprob: -3.2240238189697266
    6. ' self' → logprob: -3.2240238189697266
    7. 'd' → logprob: -3.3490238189697266
    8. ' free' → logprob: -4.224023818969727
    9. 'size' → logprob: -4.599023818969727
    10. ' the' → logprob: -4.724023818969727

Token 847: ' sector' (ID: 11207)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.31886938214302063
    2. ' intervals' → logprob: -2.1938693523406982
    3. ' interval' → logprob: -2.6938693523406982
    4. 'space' → logprob: -3.3188693523406982
    5. ' space' → logprob: -3.9438693523406982
    6. '_inter' → logprob: -4.943869590759277
    7. ',' → logprob: -5.443869590759277
    8. ' or' → logprob: -5.568869590759277
    9. '_interval' → logprob: -5.693869590759277
    10. 'sector' → logprob: -5.943869590759277

Token 848: ' during' (ID: 3354)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.271939754486084
    2. ':' → logprob: -1.646939754486084
    3. 's' → logprob: -4.771939754486084
    4. ' in' → logprob: -5.021939754486084
    5. ' at' → logprob: -5.021939754486084
    6. '==' → logprob: -5.771939754486084
    7. ':
' → logprob: -5.771939754486084
    8. '=' → logprob: -6.146939754486084
    9. ' ,' → logprob: -6.396939754486084
    10. ' if' → logprob: -6.521939754486084

Token 849: ' writing' (ID: 5281)
  Prédit: 'allocation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allocation' → logprob: -1.2647143602371216
    2. 'search' → logprob: -1.3897143602371216
    3. 'writing' → logprob: -1.8897143602371216
    4. 'write' → logprob: -2.389714241027832
    5. ' allocation' → logprob: -2.889714241027832
    6. 'the' → logprob: -2.889714241027832
    7. 'free' → logprob: -3.389714241027832
    8. 'alloc' → logprob: -4.264714241027832
    9. ' the' → logprob: -4.639714241027832
    10. ' search' → logprob: -4.764714241027832

Token 850: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0918508768081665
    2. ':' → logprob: -2.716850757598877
    3. ':
' → logprob: -3.966850757598877
    4. ',
' → logprob: -6.341850757598877
    5. ' ,' → logprob: -7.591850757598877
    6. 's' → logprob: -9.341851234436035
    7. ' and' → logprob: -10.216851234436035
    8. '.' → logprob: -10.591851234436035
    9. ' for' → logprob: -10.716851234436035
    10. ' in' → logprob: -10.716851234436035

Token 851: ' skip' (ID: 16677)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.08491984754800797
    2. 'return' → logprob: -2.7099199295043945
    3. ' #' → logprob: -5.3349199295043945
    4. '#' → logprob: -5.4599199295043945
    5. '       ' → logprob: -5.9599199295043945
    6. ' break' → logprob: -6.4599199295043945
    7. '           ' → logprob: -7.4599199295043945
    8. ' raise' → logprob: -7.5849199295043945
    9. 'break' → logprob: -8.834919929504395
    10. ' self' → logprob: -9.084919929504395

Token 852: ' occupied' (ID: 46186)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14396940171718597
    2. ',' → logprob: -2.7689692974090576
    3. '        ' → logprob: -3.3939692974090576
    4. 'pos' → logprob: -4.893969535827637
    5. ' ,' → logprob: -5.643969535827637
    6. '           ' → logprob: -5.768969535827637
    7. 'start' → logprob: -5.893969535827637
    8. ' start' → logprob: -6.143969535827637
    9. '   ' → logprob: -6.643969535827637
    10. 'sector' → logprob: -6.768969535827637

Token 853: ' part' (ID: 997)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24590454995632172
    2. 'pos' → logprob: -1.870904564857483
    3. ',' → logprob: -3.6209044456481934
    4. '_pos' → logprob: -4.620904445648193
    5. ' pos' → logprob: -5.620904445648193
    6. '           ' → logprob: -5.745904445648193
    7. '   ' → logprob: -5.995904445648193
    8. '        ' → logprob: -5.995904445648193
    9. '```' → logprob: -6.120904445648193
    10. 'start' → logprob: -6.620904445648193

Token 854: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006357928272336721
    2. '
' → logprob: -5.8813581466674805
    3. '        
' → logprob: -6.5063581466674805
    4. ',' → logprob: -7.1313581466674805
    5. 'pos' → logprob: -8.13135814666748
    6. 'current' → logprob: -9.63135814666748
    7. 'start' → logprob: -9.75635814666748
    8. '   ' → logprob: -9.75635814666748
    9. ' start' → logprob: -9.88135814666748
    10. '```' → logprob: -9.88135814666748

Token 855: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.1302567720413208
    2. ' continue' → logprob: -2.5052566528320312
    3. 'write' → logprob: -3.6302566528320312
    4. '   ' → logprob: -5.755256652832031
    5. 'move' → logprob: -6.630256652832031
    6. 'adjust' → logprob: -6.755256652832031
    7. 'advance' → logprob: -6.755256652832031
    8. ' write' → logprob: -7.005256652832031
    9. 'allocate' → logprob: -7.005256652832031
    10. ' move' → logprob: -7.255256652832031

Token 856: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01785244047641754
    2. ',' → logprob: -4.267852306365967
    3. ' with' → logprob: -6.392852306365967
    4. ' to' → logprob: -7.142852306365967
    5. '        
' → logprob: -8.392852783203125
    6. ' at' → logprob: -8.392852783203125
    7. ' for' → logprob: -9.142852783203125
    8. ' and' → logprob: -9.392852783203125
    9. ' ,' → logprob: -9.517852783203125
    10. '
' → logprob: -9.642852783203125

Token 857: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.8491060733795166
    2. 'next' → logprob: -0.8491060733795166
    3. 'the' → logprob: -2.4741060733795166
    4. ' the' → logprob: -2.8491060733795166
    5. 'free' → logprob: -8.099105834960938
    6. ' free' → logprob: -8.099105834960938
    7. 'end' → logprob: -8.349105834960938
    8. 'new' → logprob: -8.474105834960938
    9. 'occupied' → logprob: -8.474105834960938
    10. 'higher' → logprob: -8.474105834960938

Token 858: ' free' (ID: 2240)
  Prédit: ' free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' free' → logprob: -0.3383508026599884
    2. '_free' → logprob: -1.338350772857666
    3. 'free' → logprob: -4.338350772857666
    4. '_' → logprob: -5.838350772857666
    5. '   ' → logprob: -5.963350772857666
    6. ' _' → logprob: -6.963350772857666
    7. ' ' → logprob: -7.463350772857666
    8. '_available' → logprob: -7.588350772857666
    9. '_sector' → logprob: -7.838350772857666
    10. '_start' → logprob: -7.963350772857666

Token 859: ' segment' (ID: 14806)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.5108595490455627
    2. '_' → logprob: -1.260859489440918
    3. '_interval' → logprob: -3.260859489440918
    4. '_space' → logprob: -3.260859489440918
    5. ' _' → logprob: -3.385859489440918
    6. '_se' → logprob: -6.760859489440918
    7. '_spaces' → logprob: -6.885859489440918
    8. 'space' → logprob: -7.510859489440918
    9. '_start' → logprob: -7.635859489440918
    10. '_sector' → logprob: -7.760859489440918

Token 860: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03293749317526817
    2. '
' → logprob: -3.532937526702881
    3. '        
' → logprob: -6.657937526702881
    4. ',' → logprob: -6.907937526702881
    5. '
' → logprob: -8.282937049865723
    6. 'pos' → logprob: -9.532937049865723
    7. 'start' → logprob: -9.657937049865723
    8. '```' → logprob: -9.782937049865723
    9. ' start' → logprob: -10.282937049865723
    10. '   ' → logprob: -10.407937049865723

Token 861: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001506528351455927
    2. 'pos' → logprob: -7.001506328582764
    3. '```' → logprob: -8.376506805419922
    4. ' pos' → logprob: -9.751506805419922
    5. 'start' → logprob: -9.876506805419922
    6. 'current' → logprob: -10.251506805419922
    7. 'remaining' → logprob: -10.626506805419922
    8. ',' → logprob: -11.001506805419922
    9. 'segments' → logprob: -11.126506805419922
    10. ' current' → logprob: -11.251506805419922

Token 862: ' remaining' (ID: 15448)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01260889321565628
    2. 'pos' → logprob: -5.012609004974365
    3. ' pos' → logprob: -6.762609004974365
    4. ' allocated' → logprob: -7.262609004974365
    5. ' free' → logprob: -7.762609004974365
    6. '```' → logprob: -7.887609004974365
    7. 'free' → logprob: -8.637608528137207
    8. ' i' → logprob: -8.637608528137207
    9. 'start' → logprob: -8.637608528137207
    10. 'total' → logprob: -8.762608528137207

Token 863: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3870108425617218
    2. '=' → logprob: -1.1370108127593994
    3. '_' → logprob: -9.01201057434082
    4. '_size' → logprob: -12.13701057434082
    5. '_space' → logprob: -13.01201057434082
    6. ',' → logprob: -13.13701057434082
    7. '=size' → logprob: -13.13701057434082
    8. ' ' → logprob: -13.26201057434082
    9. ' -=' → logprob: -14.01201057434082
    10. ')' → logprob: -14.13701057434082

Token 864: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.06197217106819153
    2. ' size' → logprob: -2.811972141265869
    3. '   ' → logprob: -12.686972618103027
    4. '	size' → logprob: -14.686972618103027
    5. '       ' → logprob: -15.186972618103027
    6. '[size' → logprob: -15.561972618103027
    7. '(size' → logprob: -15.561972618103027
    8. ' ' → logprob: -16.06197166442871
    9. '=size' → logprob: -16.81197166442871
    10. '    ' → logprob: -16.93697166442871

Token 865: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20345212519168854
    2. '       ' → logprob: -1.9534521102905273
    3. ',' → logprob: -3.4534521102905273
    4. '
' → logprob: -5.203452110290527
    5. '        
' → logprob: -6.828452110290527
    6. '  
' → logprob: -6.828452110290527
    7. 'current' → logprob: -6.953452110290527
    8. ' 
' → logprob: -7.328452110290527
    9. ',
' → logprob: -8.078452110290527
    10. '' → logprob: -8.703452110290527

Token 866: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.018208384513855
    2. '       ' → logprob: -1.143208384513855
    3. ' pos' → logprob: -2.1432085037231445
    4. ',' → logprob: -2.5182085037231445
    5. ' start' → logprob: -3.1432085037231445
    6. 'pos' → logprob: -3.2682085037231445
    7. ' current' → logprob: -4.2682085037231445
    8. 'start' → logprob: -5.5182085037231445
    9. ' i' → logprob: -6.0182085037231445
    10. '        
' → logprob: -6.1432085037231445

Token 867: ' intervals' (ID: 49900)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.02078874595463276
    2. 'cur' → logprob: -4.895788669586182
    3. 'current' → logprob: -5.395788669586182
    4. 'curr' → logprob: -5.520788669586182
    5. 'write' → logprob: -6.645788669586182
    6. 'start' → logprob: -6.645788669586182
    7. 'offset' → logprob: -7.270788669586182
    8. 'ptr' → logprob: -7.520788669586182
    9. 'alloc' → logprob: -8.14578914642334
    10. 'position' → logprob: -8.77078914642334

Token 868: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6935154795646667
    2. ' =' → logprob: -0.6935154795646667
    3. '=[]' → logprob: -7.943515300750732
    4. '[]' → logprob: -11.94351577758789
    5. ',' → logprob: -12.81851577758789
    6. '=[]
' → logprob: -13.44351577758789
    7. 's' → logprob: -14.44351577758789
    8. '   ' → logprob: -14.44351577758789
    9. ':' → logprob: -14.94351577758789
    10. '=[],' → logprob: -15.44351577758789

Token 869: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00013166792632546276
    2. '[]
' → logprob: -9.000131607055664
    3. ' []' → logprob: -11.750131607055664
    4. '[]

' → logprob: -15.500131607055664
    5. '[]}' → logprob: -16.375131607055664
    6. '[' → logprob: -17.500131607055664
    7. '[])' → logprob: -18.375131607055664
    8. '[],' → logprob: -19.125131607055664
    9. '[]>' → logprob: -19.375131607055664
    10. '[]"' → logprob: -19.625131607055664

Token 870: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08545365184545517
    2. '       ' → logprob: -2.835453748703003
    3. '
' → logprob: -4.585453510284424
    4. '        
' → logprob: -4.710453510284424
    5. ' =' → logprob: -6.960453510284424
    6. ',' → logprob: -7.210453510284424
    7. ' for' → logprob: -7.585453510284424
    8. ' 
' → logprob: -7.835453510284424
    9. '  
' → logprob: -8.335453987121582
    10. '        ' → logprob: -8.335453987121582

Token 871: ' fi' (ID: 6134)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' (adapté à ' fi') → logprob: -0.3142673373222351
    2. 'for' → logprob: -1.8142673969268799
    3. 'pos' → logprob: -2.56426739692688
    4. '       ' → logprob: -4.189267158508301
    5. 'idx' → logprob: -4.814267158508301
    6. 'start' → logprob: -6.564267158508301
    7. 'i' → logprob: -6.814267158508301
    8. 'cur' → logprob: -6.939267158508301
    9. ' for' → logprob: -7.314267158508301
    10. 'current' → logprob: -7.314267158508301

Token 872: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31549423933029175
    2. '=' → logprob: -1.3154942989349365
    3. 'st' → logprob: -6.815494060516357
    4. '_idx' → logprob: -8.815494537353516
    5. '=[]' → logprob: -9.065494537353516
    6. 'ze' → logprob: -9.065494537353516
    7. 'x' → logprob: -9.190494537353516
    8. '_len' → logprob: -9.440494537353516
    9. 'def' → logprob: -9.565494537353516
    10. '_pos' → logprob: -10.065494537353516

Token 873: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00014084660506341606
    2. ' self' → logprob: -8.875141143798828
    3. 'elf' → logprob: -14.750141143798828
    4. '   ' → logprob: -15.500141143798828
    5. '
' → logprob: -16.125141143798828
    6. '       ' → logprob: -17.000141143798828
    7. '=self' → logprob: -17.125141143798828
    8. '(self' → logprob: -17.250141143798828
    9. ' ' → logprob: -17.750141143798828
    10. '[self' → logprob: -17.750141143798828

Token 874: '.free' (ID: 76674)
  Prédit: '.free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.free' → logprob: -8.172891830326989e-05
    2. 'free' → logprob: -10.125082015991211
    3. '.' → logprob: -10.375082015991211
    4. 'ree' → logprob: -12.375082015991211
    5. ' .' → logprob: -12.750082015991211
    6. '.fre' → logprob: -13.250082015991211
    7. '	free' → logprob: -14.000082015991211
    8. ' free' → logprob: -15.875082015991211
    9. '   ' → logprob: -16.25008201599121
    10. '.Free' → logprob: -16.50008201599121

Token 875: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -3.128163257315464e-07
    2. '_in' → logprob: -16.875
    3. '_int' → logprob: -16.875
    4. '\' → logprob: -17.375
    5. 'inter' → logprob: -18.0
    6. '_interval' → logprob: -18.25
    7. '_segments' → logprob: -18.5
    8. 'interval' → logprob: -18.625
    9. '
' → logprob: -18.875
    10. '_indices' → logprob: -19.125

Token 876: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.5522688031196594
    2. 'erv' → logprob: -1.1772687435150146
    3. 'ter' → logprob: -3.1772687435150146
    4. 'r' → logprob: -3.8022687435150146
    5. 't' → logprob: -3.9272687435150146
    6. '```' → logprob: -4.552268981933594
    7. '   ' → logprob: -4.677268981933594
    8. 'als' → logprob: -5.677268981933594
    9. 'val' → logprob: -6.302268981933594
    10. '[' → logprob: -7.052268981933594

Token 877: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.62823885679245
    2. '
' → logprob: -1.1282389163970947
    3. ',' → logprob: -2.1282389163970947
    4. ' =' → logprob: -5.253238677978516
    5. '        
' → logprob: -5.253238677978516
    6. '
' → logprob: -5.378238677978516
    7. 'pos' → logprob: -5.503238677978516
    8. ',pos' → logprob: -6.628238677978516
    9. '=' → logprob: -7.253238677978516
    10. 'idx' → logprob: -8.003238677978516

Token 878: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6953879594802856
    2. ' pos' → logprob: -1.1953879594802856
    3. 'pos' → logprob: -1.9453879594802856
    4. ' i' → logprob: -3.695387840270996
    5. ' idx' → logprob: -3.820387840270996
    6. 'i' → logprob: -6.070387840270996
    7. 'idx' → logprob: -6.070387840270996
    8. ' for' → logprob: -6.570387840270996
    9. ' index' → logprob: -7.445387840270996
    10. ' current' → logprob: -7.570387840270996

Token 879: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.03232990577816963
    2. 'idx' → logprob: -3.782329797744751
    3. '       ' → logprob: -5.53233003616333
    4. 'i' → logprob: -5.65733003616333
    5. 'index' → logprob: -6.90733003616333
    6. 'for' → logprob: -8.407329559326172
    7. ' pos' → logprob: -9.407329559326172
    8. 'while' → logprob: -9.407329559326172
    9. 'ptr' → logprob: -9.657329559326172
    10. ' idx' → logprob: -10.157329559326172

Token 880: ' We' (ID: 1416)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.12639036774635315
    2. 'idx' → logprob: -2.2513904571533203
    3. 'i' → logprob: -5.62639045715332
    4. 'index' → logprob: -6.12639045715332
    5. 'cur' → logprob: -6.12639045715332
    6. 'curr' → logprob: -6.87639045715332
    7. 'for' → logprob: -7.00139045715332
    8. 'ptr' → logprob: -7.00139045715332
    9. 'start' → logprob: -7.12639045715332
    10. ' idx' → logprob: -7.50139045715332

Token 881: ' scan' (ID: 14659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7392327785491943
    2. 'pos' → logprob: -1.1142327785491943
    3. ' =' → logprob: -2.7392327785491943
    4. '=' → logprob: -3.3642327785491943
    5. 'start' → logprob: -3.6142327785491943
    6. '   ' → logprob: -4.239233016967773
    7. ' start' → logprob: -4.489233016967773
    8. 'def' → logprob: -4.614233016967773
    9. ' pos' → logprob: -5.114233016967773
    10. 'i' → logprob: -5.239233016967773

Token 882: ' free' (ID: 2240)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.17065510153770447
    2. ' pos' → logprob: -3.5456550121307373
    3. ' idx' → logprob: -3.5456550121307373
    4. ' i' → logprob: -3.9206550121307373
    5. 'idx' → logprob: -4.045655250549316
    6. 'i' → logprob: -4.045655250549316
    7. ' for' → logprob: -4.545655250549316
    8. 'start' → logprob: -5.170655250549316
    9. 'from' → logprob: -5.170655250549316
    10. 'for' → logprob: -5.420655250549316

Token 883: ' intervals' (ID: 49900)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.18997123837471008
    2. 'pos' → logprob: -2.9399712085723877
    3. '_pos' → logprob: -2.9399712085723877
    4. '_idx' → logprob: -3.9399712085723877
    5. '_index' → logprob: -4.314971446990967
    6. 'inter' → logprob: -5.314971446990967
    7. 's' → logprob: -5.439971446990967
    8. '_start' → logprob: -5.689971446990967
    9. '_positions' → logprob: -6.064971446990967
    10. 'index' → logprob: -6.439971446990967

Token 884: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0983866453170776
    2. ' for' → logprob: -1.2233866453170776
    3. 'pos' → logprob: -2.348386764526367
    4. ' =' → logprob: -2.598386764526367
    5. 'from' → logprob: -2.848386764526367
    6. '       ' → logprob: -3.223386764526367
    7. ',' → logprob: -3.473386764526367
    8. ' from' → logprob: -4.223386764526367
    9. '_idx' → logprob: -4.348386764526367
    10. 'idx' → logprob: -4.348386764526367

Token 885: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21988272666931152
    2. 'left' → logprob: -2.2198827266693115
    3. 'start' → logprob: -3.3448827266693115
    4. 'the' → logprob: -3.7198827266693115
    5. ' the' → logprob: -4.719882965087891
    6. ' ' → logprob: -5.094882965087891
    7. ' left' → logprob: -5.344882965087891
    8. 'begin' → logprob: -5.469882965087891
    9. 'index' → logprob: -5.844882965087891
    10. ' start' → logprob: -6.344882965087891

Token 886: ' beginning' (ID: 10526)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15982674062252045
    2. 'start' → logprob: -2.5348267555236816
    3. 'begin' → logprob: -2.9098267555236816
    4. ' start' → logprob: -5.034826755523682
    5. ' beginning' → logprob: -5.409826755523682
    6. 'left' → logprob: -6.534826755523682
    7. ' ' → logprob: -6.784826755523682
    8. 'def' → logprob: -8.534826278686523
    9. '[' → logprob: -10.534826278686523
    10. 'first' → logprob: -10.659826278686523

Token 887: ' until' (ID: 4609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07885508239269257
    2. ' for' → logprob: -2.953855037689209
    3. ',' → logprob: -4.703855037689209
    4. ' to' → logprob: -4.953855037689209
    5. 'for' → logprob: -5.703855037689209
    6. ' and' → logprob: -6.703855037689209
    7. ':' → logprob: -7.078855037689209
    8. '        
' → logprob: -8.328855514526367
    9. ' =' → logprob: -8.453855514526367
    10. 'to' → logprob: -8.578855514526367

Token 888: ' total' (ID: 3609)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.003800430800765753
    2. ' remaining' → logprob: -5.628800392150879
    3. 'len' → logprob: -8.753800392150879
    4. '
' → logprob: -11.128800392150879
    5. 'we' → logprob: -12.003800392150879
    6. ' we' → logprob: -12.503800392150879
    7. ' ' → logprob: -12.628800392150879
    8. 'the' → logprob: -13.003800392150879
    9. ' len' → logprob: -13.128800392150879
    10. 'not' → logprob: -13.503800392150879

Token 889: ' size' (ID: 2349)
  Prédit: 'allocated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allocated' → logprob: -0.1862432211637497
    2. 'written' → logprob: -3.1862432956695557
    3. 'size' → logprob: -3.3112432956695557
    4. 'remaining' → logprob: -3.5612432956695557
    5. '_alloc' → logprob: -4.811243057250977
    6. ' intervals' → logprob: -4.936243057250977
    7. 'covered' → logprob: -5.061243057250977
    8. 'interval' → logprob: -5.311243057250977
    9. '_size' → logprob: -5.436243057250977
    10. ' size' → logprob: -5.811243057250977

Token 890: ' is' (ID: 382)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.9166339039802551
    2. '>=' → logprob: -0.9166339039802551
    3. ' is' → logprob: -2.0416338443756104
    4. 'is' → logprob: -3.5416338443756104
    5. 'covered' → logprob: -4.4166340827941895
    6. '>' → logprob: -5.2916340827941895
    7. 're' → logprob: -5.9166340827941895
    8. '   ' → logprob: -5.9166340827941895
    9. ' accumulated' → logprob: -6.0416340827941895
    10. 'allocated' → logprob: -6.0416340827941895

Token 891: ' covered' (ID: 13083)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5483244061470032
    2. 'en' → logprob: -1.6733243465423584
    3. ' intervals' → logprob: -2.5483243465423584
    4. 're' → logprob: -2.7983243465423584
    5. 'covered' → logprob: -3.4233243465423584
    6. ' >=' → logprob: -4.2983245849609375
    7. '0' → logprob: -4.5483245849609375
    8. 's' → logprob: -4.6733245849609375
    9. 'at' → logprob: -5.5483245849609375
    10. 'filled' → logprob: -5.5483245849609375

Token 892: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027958674356341362
    2. ',' → logprob: -4.402958869934082
    3. ' for' → logprob: -4.777958869934082
    4. ' or' → logprob: -6.277958869934082
    5. '
' → logprob: -7.027958869934082
    6. '.' → logprob: -7.027958869934082
    7. 'for' → logprob: -7.152958869934082
    8. ' and' → logprob: -7.527958869934082
    9. '   ' → logprob: -7.652958869934082
    10. ':' → logprob: -8.527958869934082

Token 893: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0270566213876009
    2. '
' → logprob: -4.652056694030762
    3. 'pos' → logprob: -5.277056694030762
    4. ' for' → logprob: -5.527056694030762
    5. ' pos' → logprob: -5.652056694030762
    6. ' i' → logprob: -6.777056694030762
    7. ',' → logprob: -6.902056694030762
    8. '        
' → logprob: -7.777056694030762
    9. ' idx' → logprob: -8.277056694030762
    10. '```' → logprob: -8.277056694030762

Token 894: ' idx' (ID: 14016)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.20177505910396576
    2. 'idx' (adapté à ' idx') → logprob: -2.326775074005127
    3. '       ' → logprob: -2.951775074005127
    4. 'i' → logprob: -3.951775074005127
    5. 'for' → logprob: -4.951775074005127
    6. 'index' → logprob: -5.326775074005127
    7. 'cur' → logprob: -7.701775074005127
    8. ' idx' → logprob: -7.951775074005127
    9. 'start' → logprob: -8.326774597167969
    10. ' pos' → logprob: -8.451774597167969

Token 895: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740790128707886
    2. '=' → logprob: -0.9740790128707886
    3. '0' → logprob: -13.974079132080078
    4. ' ' → logprob: -14.224079132080078
    5. ',' → logprob: -14.849079132080078
    6. 's' → logprob: -17.099079132080078
    7. '  ' → logprob: -17.224079132080078
    8. '   ' → logprob: -17.599079132080078
    9. '_=' → logprob: -17.724079132080078
    10. ' ,' → logprob: -17.974079132080078

Token 896: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017982252757064998
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.6251802444458
    4. '  ' → logprob: -17.625179290771484
    5. '۰' → logprob: -18.062679290771484
    6. '=' → logprob: -18.125179290771484
    7. 'len' → logprob: -18.625179290771484
    8. '00' → logprob: -18.687679290771484
    9. '000' → logprob: -18.875179290771484
    10. '０' → logprob: -19.500179290771484

Token 897: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.250036239624023
    4. '۰' → logprob: -18.562536239624023
    5. '  ' → logprob: -19.125036239624023
    6. '00' → logprob: -19.312536239624023
    7. '=' → logprob: -19.375036239624023
    8. 'len' → logprob: -19.375036239624023
    9. '000' → logprob: -19.437536239624023
    10. '０' → logprob: -20.187536239624023

Token 898: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03820684924721718
    2. '       ' → logprob: -3.6632068157196045
    3. ' while' → logprob: -5.163207054138184
    4. 'while' → logprob: -6.163207054138184
    5. '        
' → logprob: -6.788207054138184
    6. ' 
' → logprob: -7.163207054138184
    7. '
' → logprob: -7.788207054138184
    8. '  
' → logprob: -7.913207054138184
    9. ',' → logprob: -8.038207054138184
    10. '	while' → logprob: -8.038207054138184

Token 899: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9956657290458679
    2. 'while' → logprob: -1.2456657886505127
    3. ' while' → logprob: -1.2456657886505127
    4. '
' → logprob: -2.9956657886505127
    5. '```' → logprob: -6.620665550231934
    6. ',' → logprob: -6.870665550231934
    7. '   ' → logprob: -7.495665550231934
    8. '	while' → logprob: -7.620665550231934
    9. 'n' → logprob: -7.995665550231934
    10. '        
' → logprob: -7.995665550231934

Token 900: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.012734250165522099
    2. ' while' → logprob: -4.512734413146973
    3. '       ' → logprob: -6.762734413146973
    4. '
' → logprob: -8.262734413146973
    5. 'n' → logprob: -9.012734413146973
    6. 'fi' → logprob: -9.262734413146973
    7. 'start' → logprob: -11.262734413146973
    8. '   ' → logprob: -11.637734413146973
    9. 'current' → logprob: -12.137734413146973
    10. 'free' → logprob: -12.137734413146973

Token 901: ' remaining' (ID: 15448)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.3776707947254181
    2. 'idx' → logprob: -1.2526707649230957
    3. 'remaining' → logprob: -4.127670764923096
    4. ' remaining' → logprob: -4.377670764923096
    5. '	idx' → logprob: -9.627671241760254
    6. '(idx' → logprob: -10.752671241760254
    7. ' ' → logprob: -11.002671241760254
    8. '   ' → logprob: -11.752671241760254
    9. '_idx' → logprob: -12.940171241760254
    10. '  ' → logprob: -13.315171241760254

Token 902: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6939191222190857
    2. ' >' → logprob: -0.6939191222190857
    3. ' and' → logprob: -7.6939191818237305
    4. 'and' → logprob: -8.06891918182373
    5. ' ' → logprob: -13.69391918182373
    6. ':' → logprob: -14.56891918182373
    7. ' >
' → logprob: -15.19391918182373
    8. '>
' → logprob: -15.69391918182373
    9. '   ' → logprob: -15.69391918182373
    10. ' >
' → logprob: -16.068918228149414

Token 903: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0059289163909852505
    2. ' ' → logprob: -5.130928993225098
    3. '
' → logprob: -16.25592803955078
    4. '   ' → logprob: -16.38092803955078
    5. ' 
' → logprob: -17.69342803955078
    6. '```' → logprob: -18.25592803955078
    7. '  ' → logprob: -18.44342803955078
    8. ' ' → logprob: -18.56842803955078
    9. ',' → logprob: -18.69342803955078
    10. '=' → logprob: -18.88092803955078

Token 904: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004882152716163546
    2. ' ' → logprob: -7.62548828125
    3. '   ' → logprob: -16.56298828125
    4. '
' → logprob: -16.68798828125
    5. '  ' → logprob: -17.50048828125
    6. 'remaining' → logprob: -18.06298828125
    7. ',' → logprob: -18.12548828125
    8. ' 
' → logprob: -18.25048828125
    9. '```' → logprob: -18.31298828125
    10. '.' → logprob: -18.31298828125

Token 905: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007847229950129986
    2. 'and' → logprob: -5.382847309112549
    3. ':
' → logprob: -5.882847309112549
    4. ':' → logprob: -7.882847309112549
    5. '       ' → logprob: -10.13284683227539
    6. '   ' → logprob: -11.63284683227539
    7. '           ' → logprob: -12.88284683227539
    8. ',' → logprob: -13.38284683227539
    9. ' ' → logprob: -13.75784683227539
    10. '	and' → logprob: -13.75784683227539

Token 906: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0007114782347343862
    2. ' idx' → logprob: -7.250711441040039
    3. '	idx' → logprob: -14.500711441040039
    4. '(idx' → logprob: -15.125711441040039
    5. 'index' → logprob: -15.625711441040039
    6. '_idx' → logprob: -15.875711441040039
    7. '[idx' → logprob: -16.50071144104004
    8. '   ' → logprob: -17.00071144104004
    9. '
' → logprob: -17.25071144104004
    10. '.idx' → logprob: -17.37571144104004

Token 907: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.17990684509277344
    2. '<' → logprob: -1.8049068450927734
    3. '<len' → logprob: -8.804906845092773
    4. '<size' → logprob: -12.179906845092773
    5. ' ' → logprob: -13.804906845092773
    6. '<n' → logprob: -14.054906845092773
    7. ' <
' → logprob: -14.429906845092773
    8. '[' → logprob: -14.679906845092773
    9. '()<' → logprob: -14.804906845092773
    10. ')<' → logprob: -14.804906845092773

Token 908: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0002613358374219388
    2. ' len' → logprob: -8.250261306762695
    3. '(len' → logprob: -18.000261306762695
    4. '=len' → logprob: -18.750261306762695
    5. '   ' → logprob: -18.875261306762695
    6. '	len' → logprob: -19.875261306762695
    7. '[len' → logprob: -20.000261306762695
    8. ',len' → logprob: -20.250261306762695
    9. '<len' → logprob: -20.250261306762695
    10. '       ' → logprob: -20.375261306762695

Token 909: '(fi' (ID: 180137)
  Prédit: '(fi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fi' → logprob: -8.895480277715251e-06
    2. '(self' → logprob: -12.250008583068848
    3. '(' → logprob: -12.875008583068848
    4. 'fi' → logprob: -13.625008583068848
    5. '	fi' → logprob: -16.750009536743164
    6. 'self' → logprob: -17.000009536743164
    7. '(
' → logprob: -17.125009536743164
    8. '(fin' → logprob: -17.125009536743164
    9. '(f' → logprob: -17.250009536743164
    10. '   ' → logprob: -17.250009536743164

Token 910: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.004722514655441046
    2. '):' → logprob: -5.379722595214844
    3. ')' → logprob: -10.504722595214844
    4. '):
' → logprob: -10.504722595214844
    5. '       ' → logprob: -10.629722595214844
    6. ' ):
' → logprob: -11.379722595214844
    7. ':' → logprob: -12.504722595214844
    8. ':
' → logprob: -12.629722595214844
    9. '   ' → logprob: -13.254722595214844
    10. '):

' → logprob: -13.504722595214844

Token 911: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.052342772483825684
    2. 'start' → logprob: -3.4273428916931152
    3. 'free' → logprob: -5.052342891693115
    4. ' free' → logprob: -5.677342891693115
    5. ' start' → logprob: -6.427342891693115
    6. 'f' → logprob: -6.677342891693115
    7. 'fi' → logprob: -6.927342891693115
    8. '       ' → logprob: -7.052342891693115
    9. ',' → logprob: -7.177342891693115
    10. 'interval' → logprob: -7.552342891693115

Token 912: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.15308387577533722
    2. 'f' → logprob: -2.1530838012695312
    3. '           ' → logprob: -4.403083801269531
    4. ' start' → logprob: -6.028083801269531
    5. 'free' → logprob: -6.028083801269531
    6. 's' → logprob: -6.028083801269531
    7. ' f' → logprob: -6.653083801269531
    8. 'fs' → logprob: -6.778083801269531
    9. 'cur' → logprob: -7.278083801269531
    10. 'fst' → logprob: -7.403083801269531

Token 913: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037256148643791676
    2. '=' → logprob: -5.628725528717041
    3. ' ,' → logprob: -9.7537260055542
    4. ' =' → logprob: -9.8787260055542
    5. ',start' → logprob: -11.7537260055542
    6. ',end' → logprob: -12.6287260055542
    7. '_,' → logprob: -13.0037260055542
    8. '=start' → logprob: -14.6287260055542
    9. ',val' → logprob: -15.6287260055542
    10. ',length' → logprob: -15.6287260055542

Token 914: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.016035541892051697
    2. ' end' → logprob: -4.141035556793213
    3. '   ' → logprob: -14.391035079956055
    4. ' ' → logprob: -15.891035079956055
    5. '_end' → logprob: -15.891035079956055
    6. '=end' → logprob: -16.266035079956055
    7. '  ' → logprob: -16.766035079956055
    8. '	end' → logprob: -16.766035079956055
    9. 'endt' → logprob: -17.266035079956055
    10. '    
' → logprob: -17.516035079956055

Token 915: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0789218470454216
    2. '=' → logprob: -2.5789217948913574
    3. '           ' → logprob: -10.453922271728516
    4. ',' → logprob: -13.328922271728516
    5. ')' → logprob: -14.703922271728516
    6. '               ' → logprob: -14.953922271728516
    7. ' ' → logprob: -15.078922271728516
    8. '            ' → logprob: -15.953922271728516
    9. '=start' → logprob: -15.953922271728516
    10. '   ' → logprob: -16.203922271728516

Token 916: ' fi' (ID: 6134)
  Prédit: ' fi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fi' → logprob: -0.20186907052993774
    2. 'fi' → logprob: -1.701869010925293
    3. '	fi' → logprob: -7.826869010925293
    4. '(fi' → logprob: -9.826869010925293
    5. 'self' → logprob: -13.451869010925293
    6. '.fi' → logprob: -14.826869010925293
    7. ' fii' → logprob: -15.701869010925293
    8. '           ' → logprob: -15.701869010925293
    9. 'f' → logprob: -16.07686996459961
    10. ' ' → logprob: -16.32686996459961

Token 917: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.531315314830863e-06
    2. 'idx' → logprob: -13.375003814697266
    3. '=' → logprob: -14.500003814697266
    4. ' =' → logprob: -14.500003814697266
    5. '           ' → logprob: -14.500003814697266
    6. '[' → logprob: -16.000003814697266
    7. '       ' → logprob: -16.125003814697266
    8. '   ' → logprob: -16.250003814697266
    9. ' idx' → logprob: -17.000003814697266
    10. '(idx' → logprob: -17.125003814697266

Token 918: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5261004567146301
    2. ')' → logprob: -1.2761003971099854
    3. ']
' → logprob: -2.4011003971099854
    4. ']' → logprob: -3.2761003971099854
    5. '           ' → logprob: -7.0261006355285645
    6. ')
' → logprob: -8.401100158691406
    7. '])' → logprob: -9.651100158691406
    8. ',' → logprob: -9.776100158691406
    9. '       ' → logprob: -9.776100158691406
    10. '])
' → logprob: -9.776100158691406

Token 919: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006900362786836922
    2. ' if' → logprob: -7.87568998336792
    3. ',' → logprob: -9.125690460205078
    4. 'if' → logprob: -10.000690460205078
    5. 'length' → logprob: -10.000690460205078
    6. '            
' → logprob: -10.125690460205078
    7. ' length' → logprob: -10.625690460205078
    8. '
' → logprob: -11.750690460205078
    9. '```' → logprob: -12.000690460205078
    10. 'n' → logprob: -12.625690460205078

Token 920: ' length' (ID: 5517)
  Prédit: 'alloc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alloc' → logprob: -0.8361459374427795
    2. '           ' → logprob: -1.3361458778381348
    3. 'length' (adapté à ' length') → logprob: -1.4611458778381348
    4. 'available' → logprob: -3.7111458778381348
    5. 'avail' → logprob: -4.086145877838135
    6. 'allocate' → logprob: -4.836145877838135
    7. ' length' → logprob: -5.211145877838135
    8. ' alloc' → logprob: -5.586145877838135
    9. 'take' → logprob: -5.586145877838135
    10. 'len' → logprob: -6.336145877838135

Token 921: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141363143920898
    2. ' =' → logprob: -1.701413631439209
    3. '   ' → logprob: -16.076414108276367
    4. '=
' → logprob: -16.701414108276367
    5. ' ' → logprob: -17.076414108276367
    6. '=end' → logprob: -17.076414108276367
    7. '           ' → logprob: -17.451414108276367
    8. '＝' → logprob: -17.701414108276367
    9. ' =
' → logprob: -17.701414108276367
    10. '	' → logprob: -17.951414108276367

Token 922: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.38692599534988403
    2. ' end' → logprob: -1.1369259357452393
    3. ' min' → logprob: -10.13692569732666
    4. '(end' → logprob: -11.63692569732666
    5. 'min' → logprob: -12.88692569732666
    6. ' ' → logprob: -13.51192569732666
    7. '=end' → logprob: -13.63692569732666
    8. '	end' → logprob: -15.26192569732666
    9. ' (' → logprob: -15.38692569732666
    10. '   ' → logprob: -15.51192569732666

Token 923: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0046459767036139965
    2. '-' → logprob: -5.379645824432373
    3. '-start' → logprob: -10.629646301269531
    4. '+' → logprob: -14.129646301269531
    5. ' +' → logprob: -15.254646301269531
    6. ' ' → logprob: -15.629646301269531
    7. '
' → logprob: -16.25464630126953
    8. '   ' → logprob: -16.50464630126953
    9. ' -
' → logprob: -16.87964630126953
    10. ',' → logprob: -17.00464630126953

Token 924: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.026301810517907143
    2. ' start' → logprob: -3.651301860809326
    3. '=start' → logprob: -15.151301383972168
    4. ' ' → logprob: -15.276301383972168
    5. '[start' → logprob: -15.276301383972168
    6. 'star' → logprob: -15.651301383972168
    7. '_start' → logprob: -16.026302337646484
    8. '+' → logprob: -16.401302337646484
    9. 'Start' → logprob: -16.901302337646484
    10. '(start' → logprob: -16.901302337646484

Token 925: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868776261806488
    2. '+' → logprob: -1.1368776559829712
    3. '           ' → logprob: -12.63687801361084
    4. '+
' → logprob: -13.38687801361084
    5. ' +
' → logprob: -13.76187801361084
    6. '
' → logprob: -15.13687801361084
    7. '            ' → logprob: -16.261877059936523
    8. '1' → logprob: -16.386877059936523
    9. ' ' → logprob: -17.261877059936523
    10. '＋' → logprob: -17.386877059936523

Token 926: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004081009421497583
    2. ' ' → logprob: -5.504080772399902
    3. '```' → logprob: -13.129080772399902
    4. '           ' → logprob: -15.254080772399902
    5. '   ' → logprob: -15.379080772399902
    6. '0' → logprob: -16.75408172607422
    7. '       ' → logprob: -16.87908172607422
    8. '`' → logprob: -18.12908172607422
    9. '               ' → logprob: -18.25408172607422
    10. '=' → logprob: -18.44158172607422

Token 927: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003487939015030861
    2. '
' → logprob: -6.003488063812256
    3. '            
' → logprob: -7.503488063812256
    4. '  
' → logprob: -8.503487586975098
    5. ' if' → logprob: -9.753487586975098
    6. '       ' → logprob: -10.503487586975098
    7. '<|end|>' → logprob: -10.503487586975098
    8. '          ' → logprob: -10.753487586975098
    9. ' 
' → logprob: -10.753487586975098
    10. '            ' → logprob: -10.878487586975098

Token 928: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010897607542574406
    2. '
' → logprob: -4.760897636413574
    3. ' if' → logprob: -6.510897636413574
    4. '            
' → logprob: -7.635897636413574
    5. ')' → logprob: -9.885897636413574
    6. '       ' → logprob: -10.135897636413574
    7. 'if' → logprob: -10.385897636413574
    8. ',' → logprob: -10.385897636413574
    9. ' 
' → logprob: -10.510897636413574
    10. '  
' → logprob: -10.760897636413574

Token 929: ' if' (ID: 538)
  Prédit: 'alloc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alloc' → logprob: -0.5807753205299377
    2. 'take' → logprob: -1.580775260925293
    3. '           ' → logprob: -2.205775260925293
    4. 'if' (adapté à ' if') → logprob: -2.455775260925293
    5. 'use' → logprob: -4.580775260925293
    6. 'allocate' → logprob: -4.705775260925293
    7. 'to' → logprob: -4.830775260925293
    8. ' if' → logprob: -5.705775260925293
    9. ' alloc' → logprob: -5.955775260925293
    10. ' take' → logprob: -6.455775260925293

Token 930: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.12696118652820587
    2. ' length' → logprob: -2.1269612312316895
    3. 'remaining' → logprob: -10.751960754394531
    4. ' remaining' → logprob: -12.501960754394531
    5. '	length' → logprob: -12.626960754394531
    6. '(length' → logprob: -13.626960754394531
    7. ' not' → logprob: -14.376960754394531
    8. 'not' → logprob: -14.501960754394531
    9. ' ' → logprob: -14.751960754394531
    10. '   ' → logprob: -14.876960754394531

Token 931: ' <=' (ID: 5017)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.16203269362449646
    2. '>=' → logprob: -2.5370326042175293
    3. ' <=' → logprob: -2.7870326042175293
    4. '<=' → logprob: -4.787032604217529
    5. ' <' → logprob: -8.412033081054688
    6. '=' → logprob: -9.787033081054688
    7. ' ' → logprob: -9.787033081054688
    8. '>' → logprob: -9.912033081054688
    9. '<' → logprob: -10.412033081054688
    10. ' >' → logprob: -10.412033081054688

Token 932: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.060882505029439926
    2. 'remaining' → logprob: -3.185882568359375
    3. ' ' → logprob: -4.560882568359375
    4. ' remaining' → logprob: -4.935882568359375
    5. '   ' → logprob: -10.810882568359375
    6. '1' → logprob: -10.873382568359375
    7. '  ' → logprob: -12.060882568359375
    8. '
' → logprob: -12.498382568359375
    9. ' ' → logprob: -12.560882568359375
    10. '_remaining' → logprob: -12.685882568359375

Token 933: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09277600795030594
    2. 'remaining' → logprob: -2.59277606010437
    3. ' ' → logprob: -4.717775821685791
    4. ' remaining' → logprob: -5.342775821685791
    5. '1' → logprob: -11.28027629852295
    6. '
' → logprob: -11.40527629852295
    7. '
' → logprob: -12.84277629852295
    8. '_remaining' → logprob: -12.90527629852295
    9. '=' → logprob: -12.96777629852295
    10. '   ' → logprob: -13.15527629852295

Token 934: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09181816130876541
    2. ':' → logprob: -2.46681809425354
    3. ' or' → logprob: -6.591818332672119
    4. '           ' → logprob: -6.841818332672119
    5. '               ' → logprob: -8.091817855834961
    6. ':
' → logprob: -9.966817855834961
    7. ':

' → logprob: -10.966817855834961
    8. '       ' → logprob: -11.091817855834961
    9. ' :
' → logprob: -11.341817855834961
    10. '):
' → logprob: -11.341817855834961

Token 935: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6475142240524292
    2. '           ' → logprob: -0.8975142240524292
    3. ':
' → logprob: -3.8975143432617188
    4. '<|end|>' → logprob: -3.8975143432617188
    5. '            
' → logprob: -5.522514343261719
    6. ',' → logprob: -5.772514343261719
    7. '<|end|>' → logprob: -5.897514343261719
    8. ':' → logprob: -5.897514343261719
    9. '	       ' → logprob: -6.522514343261719
    10. '                
' → logprob: -6.647514343261719

Token 936: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.5385117530822754
    2. ' idx' → logprob: -1.4135117530822754
    3. '               ' → logprob: -2.0385117530822754
    4. '           ' → logprob: -3.4135117530822754
    5. '                   ' → logprob: -5.413511753082275
    6. '	idx' → logprob: -5.788511753082275
    7. '   ' → logprob: -7.413511753082275
    8. '0' → logprob: -8.163511276245117
    9. '	           ' → logprob: -8.913511276245117
    10. ' ' → logprob: -8.913511276245117

Token 937: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.061996594071388245
    2. ' +=' → logprob: -2.8119966983795166
    3. '+' → logprob: -10.686996459960938
    4. ']+=' → logprob: -12.936996459960938
    5. '=' → logprob: -13.186996459960938
    6. '++' → logprob: -14.061996459960938
    7. '           ' → logprob: -15.436996459960938
    8. '   ' → logprob: -15.811996459960938
    9. '<|end|>' → logprob: -16.061996459960938
    10. ' +' → logprob: -16.311996459960938

Token 938: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020377879263833165
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.750204086303711
    4. '```' → logprob: -16.25020408630371
    5. '  ' → logprob: -18.12520408630371
    6. '0' → logprob: -18.50020408630371
    7. '۱' → logprob: -19.06270408630371
    8. '１' → logprob: -19.06270408630371
    9. '
' → logprob: -19.31270408630371
    10. '    ' → logprob: -19.62520408630371

Token 939: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '0' → logprob: -17.000059127807617
    4. '```' → logprob: -17.312559127807617
    5. '   ' → logprob: -18.250059127807617
    6. '۱' → logprob: -19.312559127807617
    7. '3' → logprob: -19.750059127807617
    8. '  ' → logprob: -19.750059127807617
    9. '１' → logprob: -20.500059127807617
    10. '100' → logprob: -20.750059127807617

Token 940: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0030542423482984304
    2. '           ' → logprob: -6.503054141998291
    3. '
' → logprob: -6.753054141998291
    4. '<|end|>' → logprob: -8.75305461883545
    5. '  
' → logprob: -9.50305461883545
    6. '                
' → logprob: -10.12805461883545
    7. '                   ' → logprob: -11.00305461883545
    8. ' 
' → logprob: -11.12805461883545
    9. ',' → logprob: -11.50305461883545
    10. '            
' → logprob: -11.75305461883545

Token 941: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003416607796680182
    2. 'continue' → logprob: -8.250341415405273
    3. '           ' → logprob: -10.000341415405273
    4. ' continue' → logprob: -10.750341415405273
    5. '<|end|>' → logprob: -13.000341415405273
    6. '       ' → logprob: -13.375341415405273
    7. '                   ' → logprob: -13.375341415405273
    8. ' and' → logprob: -13.500341415405273
    9. '```' → logprob: -13.750341415405273
    10. 'import' → logprob: -13.875341415405273

Token 942: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.12390922755002975
    2. ' continue' → logprob: -2.6239092350006104
    3. '               ' → logprob: -3.1239092350006104
    4. '           ' → logprob: -11.248908996582031
    5. 'contin' → logprob: -11.248908996582031
    6. '	continue' → logprob: -12.623908996582031
    7. 'continu' → logprob: -12.998908996582031
    8. '_continue' → logprob: -13.248908996582031
    9. 'Continue' → logprob: -14.373908996582031
    10. '                   ' → logprob: -14.498908996582031

Token 943: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003543643979355693
    2. '            
' → logprob: -6.253543853759766
    3. '
' → logprob: -6.628543853759766
    4. '  
' → logprob: -9.753543853759766
    5. ',' → logprob: -10.378543853759766
    6. '    
' → logprob: -10.378543853759766
    7. ' if' → logprob: -10.753543853759766
    8. ' 
' → logprob: -10.753543853759766
    9. 'if' → logprob: -10.753543853759766
    10. ')' → logprob: -11.378543853759766

Token 944: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00036918214755132794
    2. ' if' → logprob: -8.87536907196045
    3. '            
' → logprob: -9.12536907196045
    4. 'if' → logprob: -10.00036907196045
    5. '
' → logprob: -11.12536907196045
    6. '       ' → logprob: -11.25036907196045
    7. '               ' → logprob: -11.37536907196045
    8. '```' → logprob: -11.75036907196045
    9. '  
' → logprob: -12.25036907196045
    10. '    
' → logprob: -12.87536907196045

Token 945: ' take' (ID: 2304)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1474061906337738
    2. 'alloc' → logprob: -2.6474061012268066
    3. 'take' (adapté à ' take') → logprob: -4.272406101226807
    4. ' alloc' → logprob: -4.272406101226807
    5. ' allocate' → logprob: -4.772406101226807
    6. ' if' → logprob: -4.897406101226807
    7. 'allocate' → logprob: -4.897406101226807
    8. ' take' → logprob: -5.147406101226807
    9. 'if' → logprob: -5.897406101226807
    10. ' to' → logprob: -6.522406101226807

Token 946: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2715202271938324
    2. '_length' → logprob: -2.0215201377868652
    3. '=' → logprob: -3.1465201377868652
    4. '_' → logprob: -3.6465201377868652
    5. '_len' → logprob: -3.7715201377868652
    6. '_size' → logprob: -4.396520137786865
    7. '_start' → logprob: -7.896520137786865
    8. ' ' → logprob: -8.271520614624023
    9. '_amount' → logprob: -9.771520614624023
    10. '_=' → logprob: -9.771520614624023

Token 947: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.00975809432566166
    2. 'min' → logprob: -4.634757995605469
    3. ' remaining' → logprob: -14.134757995605469
    4. ' max' → logprob: -15.009757995605469
    5. '	min' → logprob: -15.009757995605469
    6. ' length' → logprob: -15.259757995605469
    7. 'remaining' → logprob: -15.634757995605469
    8. '(min' → logprob: -15.759757995605469
    9. ' minimum' → logprob: -16.25975799560547
    10. 'max' → logprob: -16.75975799560547

Token 948: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004351078998297453
    2. '(length' → logprob: -5.7543511390686035
    3. '(t' → logprob: -6.8793511390686035
    4. ' (' → logprob: -8.879350662231445
    5. 'length' → logprob: -14.129350662231445
    6. '(
' → logprob: -14.129350662231445
    7. 'remaining' → logprob: -14.379350662231445
    8. '(len' → logprob: -15.004350662231445
    9. '(rem' → logprob: -15.254350662231445
    10. '(size' → logprob: -15.379350662231445

Token 949: 'remaining' (ID: 83570)
  Prédit: 'remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.656268298625946
    2. 'length' → logprob: -0.906268298625946
    3. ' remaining' → logprob: -3.156268358230591
    4. ' length' → logprob: -3.406268358230591
    5. '(' → logprob: -7.281268119812012
    6. ')' → logprob: -7.656268119812012
    7. ' )' → logprob: -9.281268119812012
    8. '(length' → logprob: -9.281268119812012
    9. '   ' → logprob: -11.281268119812012
    10. ' ' → logprob: -11.406268119812012

Token 950: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0075291357934474945
    2. ' ,' → logprob: -5.007529258728027
    3. ',length' → logprob: -7.257529258728027
    4. '           ' → logprob: -10.257529258728027
    5. ',
' → logprob: -10.757529258728027
    6. ')' → logprob: -10.757529258728027
    7. ',len' → logprob: -11.632529258728027
    8. ',size' → logprob: -12.007529258728027
    9. 'length' → logprob: -12.257529258728027
    10. ',t' → logprob: -13.257529258728027

Token 951: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.25193095207214355
    2. ' length' → logprob: -1.5019309520721436
    3. '(length' → logprob: -14.001931190490723
    4. 'end' → logprob: -14.751931190490723
    5. ',length' → logprob: -16.126930236816406
    6. 'ength' → logprob: -16.251930236816406
    7. ')' → logprob: -16.251930236816406
    8. '	length' → logprob: -16.376930236816406
    9. '[length' → logprob: -16.751930236816406
    10. '_length' → logprob: -17.126930236816406

Token 952: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.09075085073709488
    2. ')' → logprob: -2.4657509326934814
    3. '           ' → logprob: -6.465750694274902
    4. ')
' → logprob: -8.590750694274902
    5. ' )
' → logprob: -9.965750694274902
    6. ')

' → logprob: -11.465750694274902
    7. '               ' → logprob: -12.215750694274902
    8. ' )' → logprob: -13.090750694274902
    9. '       ' → logprob: -13.965750694274902
    10. '
' → logprob: -14.715750694274902

Token 953: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030404748395085335
    2. '
' → logprob: -4.530404567718506
    3. '            
' → logprob: -4.780404567718506
    4. ',' → logprob: -5.030404567718506
    5. ' intervals' → logprob: -7.280404567718506
    6. ' 
' → logprob: -7.405404567718506
    7. '  
' → logprob: -7.905404567718506
    8. '<|end|>' → logprob: -8.155405044555664
    9. 'tokens' → logprob: -8.405405044555664
    10. '```' → logprob: -8.530405044555664

Token 954: ' block' (ID: 4355)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.2559971809387207
    2. '           ' → logprob: -2.1309971809387207
    3. ' intervals' → logprob: -2.8809971809387207
    4. 'alloc' → logprob: -4.005997180938721
    5. 'new' → logprob: -4.505997180938721
    6. 'allocated' → logprob: -5.505997180938721
    7. 'end' → logprob: -5.880997180938721
    8. 'start' → logprob: -6.005997180938721
    9. 'segments' → logprob: -6.380997180938721
    10. 'segment' → logprob: -6.630997180938721

Token 955: '_start' (ID: 10949)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1012659072875977
    2. ' =' → logprob: -1.1012659072875977
    3. '_start' → logprob: -1.1012659072875977
    4. 'start' → logprob: -6.351265907287598
    5. ',' → logprob: -8.101265907287598
    6. 's' → logprob: -8.351265907287598
    7. '=start' → logprob: -9.101265907287598
    8. ' ' → logprob: -9.226265907287598
    9. 'Start' → logprob: -9.976265907287598
    10. '   ' → logprob: -10.476265907287598

Token 956: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31334397196769714
    2. ' =' → logprob: -1.3133440017700195
    3. ',' → logprob: -9.81334400177002
    4. '=start' → logprob: -10.56334400177002
    5. '=
' → logprob: -14.43834400177002
    6. ',start' → logprob: -15.18834400177002
    7. ' ' → logprob: -15.43834400177002
    8. ' =
' → logprob: -15.43834400177002
    9. '=end' → logprob: -15.93834400177002
    10. ' ,' → logprob: -15.93834400177002

Token 957: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0232466422021389
    2. ' start' → logprob: -3.7732465267181396
    3. '           ' → logprob: -14.898246765136719
    4. '=start' → logprob: -15.023246765136719
    5. '[start' → logprob: -15.273246765136719
    6. 'end' → logprob: -16.77324676513672
    7. '(start' → logprob: -16.77324676513672
    8. '	start' → logprob: -17.27324676513672
    9. '               ' → logprob: -17.52324676513672
    10. '   ' → logprob: -17.52324676513672

Token 958: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18877144157886505
    2. '
' → logprob: -2.6887714862823486
    3. '<|end|>' → logprob: -3.1887714862823486
    4. ',' → logprob: -3.6887714862823486
    5. '<|end|>' → logprob: -4.0637712478637695
    6. '            
' → logprob: -4.8137712478637695
    7. 'block' → logprob: -6.4387712478637695
    8. '  
' → logprob: -6.4387712478637695
    9. '(block' → logprob: -6.4387712478637695
    10. ' block' → logprob: -6.6887712478637695

Token 959: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06302662193775177
    2. '
' → logprob: -3.9380266666412354
    3. ',' → logprob: -4.063026428222656
    4. '            
' → logprob: -4.688026428222656
    5. ' block' → logprob: -5.438026428222656
    6. ' 
' → logprob: -5.688026428222656
    7. 'block' → logprob: -5.938026428222656
    8. ',
' → logprob: -6.938026428222656
    9. '  
' → logprob: -6.938026428222656
    10. '<|end|>' → logprob: -7.813026428222656

Token 960: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' (adapté à ' block') → logprob: -0.020607052370905876
    2. '           ' → logprob: -4.145606994628906
    3. ' block' → logprob: -5.395606994628906
    4. '       ' → logprob: -11.645606994628906
    5. '	block' → logprob: -11.895606994628906
    6. '   ' → logprob: -12.520606994628906
    7. '               ' → logprob: -13.895606994628906
    8. '
' → logprob: -14.020606994628906
    9. '          ' → logprob: -14.645606994628906
    10. '#' → logprob: -14.645606994628906

Token 961: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.18273285031318665
    2. '_start' → logprob: -1.8077328205108643
    3. '_' → logprob: -6.682733058929443
    4. '+' → logprob: -7.307733058929443
    5. '_stop' → logprob: -7.807733058929443
    6. '_finish' → logprob: -8.682732582092285
    7. '<|end|>' → logprob: -9.932732582092285
    8. '           ' → logprob: -9.932732582092285
    9. ',' → logprob: -10.057732582092285
    10. '=' → logprob: -10.432732582092285

Token 962: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760059356689453
    2. '=' → logprob: -0.8260059356689453
    3. ' block' → logprob: -10.326005935668945
    4. 'block' → logprob: -10.451005935668945
    5. '(block' → logprob: -13.326005935668945
    6. ' ' → logprob: -13.451005935668945
    7. '           ' → logprob: -14.951005935668945
    8. '            ' → logprob: -14.951005935668945
    9. ' =
' → logprob: -15.451005935668945
    10. ',' → logprob: -15.451005935668945

Token 963: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.20239490270614624
    2. ' start' → logprob: -1.702394962310791
    3. 'block' → logprob: -7.452394962310791
    4. ' block' → logprob: -7.827394962310791
    5. ' ' → logprob: -13.952394485473633
    6. '(start' → logprob: -14.952394485473633
    7. '   ' → logprob: -15.327394485473633
    8. 'star' → logprob: -15.452394485473633
    9. 'take' → logprob: -15.827394485473633
    10. '	start' → logprob: -15.952394485473633

Token 964: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12693482637405396
    2. '+' → logprob: -2.126934766769409
    3. '            ' → logprob: -12.876935005187988
    4. '           ' → logprob: -13.251935005187988
    5. '<|end|>' → logprob: -14.751935005187988
    6. '        ' → logprob: -14.876935005187988
    7. ' +
' → logprob: -15.501935005187988
    8. '               ' → logprob: -15.626935005187988
    9. '                ' → logprob: -15.751935005187988
    10. ' ' → logprob: -16.126934051513672

Token 965: ' take' (ID: 2304)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.07888989895582199
    2. ' take' → logprob: -2.578889846801758
    3. ' ' → logprob: -17.203889846801758
    4. 'tak' → logprob: -17.203889846801758
    5. 't' → logprob: -17.328889846801758
    6. '   ' → logprob: -17.453889846801758
    7. 'taken' → logprob: -18.578889846801758
    8. '_take' → logprob: -18.828889846801758
    9. 'to' → logprob: -19.203889846801758
    10. '.take' → logprob: -19.578889846801758

Token 966: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5231339931488037
    2. '-' → logprob: -0.8981339931488037
    3. '<|end|>' → logprob: -11.773134231567383
    4. ' ' → logprob: -13.773134231567383
    5. '```' → logprob: -14.273134231567383
    6. '<|end|>' → logprob: -14.898134231567383
    7. ')' → logprob: -15.523134231567383
    8. '
' → logprob: -15.773134231567383
    9. '1' → logprob: -16.398134231567383
    10. 'token' → logprob: -16.523134231567383

Token 967: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '<|end|>' → logprob: -17.000011444091797
    4. '```' → logprob: -18.250011444091797
    5. '
' → logprob: -21.125011444091797
    6. '<|end|>' → logprob: -21.375011444091797
    7. '۱' → logprob: -21.750011444091797
    8. '   ' → logprob: -21.750011444091797
    9. '0' → logprob: -22.125011444091797
    10. 's' → logprob: -22.375011444091797

Token 968: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04827878624200821
    2. '           ' → logprob: -3.42327880859375
    3. '<|end|>' → logprob: -4.79827880859375
    4. '            
' → logprob: -6.04827880859375
    5. '  
' → logprob: -6.29827880859375
    6. '<|end|>' → logprob: -6.92327880859375
    7. ' 
' → logprob: -8.17327880859375
    8. '
' → logprob: -8.29827880859375
    9. '    
' → logprob: -9.42327880859375
    10. '       ' → logprob: -9.67327880859375

Token 969: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00024251631111837924
    2. '
' → logprob: -8.500242233276367
    3. '            
' → logprob: -10.625242233276367
    4. ',' → logprob: -12.250242233276367
    5. '<|end|>' → logprob: -13.250242233276367
    6. '#' → logprob: -13.375242233276367
    7. '<|end|>' → logprob: -13.625242233276367
    8. '  
' → logprob: -14.000242233276367
    9. 'self' → logprob: -14.375242233276367
    10. '       ' → logprob: -14.500242233276367

Token 970: ' intervals' (ID: 49900)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15576425194740295
    2. 'self' → logprob: -2.03076434135437
    3. 'interval' → logprob: -4.655764102935791
    4. '#' → logprob: -5.780764102935791
    5. ' intervals' → logprob: -8.65576457977295
    6. 'if' → logprob: -9.15576457977295
    7. ' self' → logprob: -9.40576457977295
    8. 'remaining' → logprob: -11.15576457977295
    9. 'fi' → logprob: -11.40576457977295
    10. '       ' → logprob: -12.28076457977295

Token 971: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.01216795016080141
    2. ' =' → logprob: -4.637167930603027
    3. '.' → logprob: -6.762167930603027
    4. '=' → logprob: -7.137167930603027
    5. '.extend' → logprob: -7.887167930603027
    6. ' .' → logprob: -10.512167930603027
    7. ',' → logprob: -10.887167930603027
    8. ' +=' → logprob: -11.137167930603027
    9. 'append' → logprob: -12.012167930603027
    10. '   ' → logprob: -12.637167930603027

Token 972: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.02539697103202343
    2. '(' → logprob: -3.7753970623016357
    3. '(block' → logprob: -6.150396823883057
    4. '(
' → logprob: -11.775397300720215
    5. ' (' → logprob: -11.775397300720215
    6. '(Block' → logprob: -14.650397300720215
    7. ' ((' → logprob: -14.900397300720215
    8. ' ' → logprob: -15.900397300720215
    9. '   ' → logprob: -16.1503963470459
    10. '  ' → logprob: -17.5253963470459

Token 973: 'block' (ID: 6230)
  Prédit: 'block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.0008064138819463551
    2. ' block' → logprob: -7.1258063316345215
    3. 'fid' → logprob: -13.87580680847168
    4. '	block' → logprob: -15.12580680847168
    5. 'bloc' → logprob: -15.50080680847168
    6. 'file' → logprob: -15.87580680847168
    7. '   ' → logprob: -16.00080680847168
    8. ' ' → logprob: -17.00080680847168
    9. ')' → logprob: -17.25080680847168
    10. ' fid' → logprob: -17.37580680847168

Token 974: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -3.404745439183898e-05
    2. ',' → logprob: -12.00003433227539
    3. '[' → logprob: -12.00003433227539
    4. '_START' → logprob: -12.12503433227539
    5. 'start' → logprob: -12.62503433227539
    6. '_end' → logprob: -12.75003433227539
    7. '_,' → logprob: -12.75003433227539
    8. '_' → logprob: -12.75003433227539
    9. ' _' → logprob: -13.50003433227539
    10. '           ' → logprob: -14.37503433227539

Token 975: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.014684110297821e-06
    2. ',
' → logprob: -11.750008583068848
    3. ' ,' → logprob: -14.250008583068848
    4. ',

' → logprob: -16.375009536743164
    5. ')' → logprob: -16.625009536743164
    6. '<|end|>' → logprob: -16.750009536743164
    7. '‌,' → logprob: -17.375009536743164
    8. '(block' → logprob: -17.500009536743164
    9. ',b' → logprob: -17.625009536743164
    10. '),' → logprob: -18.250009536743164

Token 976: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.2519311308860779
    2. ' block' → logprob: -1.5019311904907227
    3. '	block' → logprob: -13.876931190490723
    4. ' ' → logprob: -15.626931190490723
    5. '(block' → logprob: -15.751931190490723
    6. '_block' → logprob: -15.751931190490723
    7. ' bloc' → logprob: -16.751930236816406
    8. '.block' → logprob: -16.876930236816406
    9. 'blocked' → logprob: -17.001930236816406
    10. 'bloc' → logprob: -17.001930236816406

Token 977: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -4.787507714354433e-05
    2. 'end' → logprob: -10.00004768371582
    3. '_start' → logprob: -13.37504768371582
    4. 'End' → logprob: -14.62504768371582
    5. 's' → logprob: -16.62504768371582
    6. ',end' → logprob: -16.62504768371582
    7. '-end' → logprob: -16.75004768371582
    8. '_END' → logprob: -16.87504768371582
    9. ' end' → logprob: -17.25004768371582
    10. ')' → logprob: -17.25004768371582

Token 978: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16254116594791412
    2. ')' → logprob: -1.912541151046753
    3. '))
' → logprob: -6.412541389465332
    4. '           ' → logprob: -7.537541389465332
    5. '))' → logprob: -9.037541389465332
    6. ')
' → logprob: -11.037541389465332
    7. ')

' → logprob: -13.412541389465332
    8. ')`
' → logprob: -13.662541389465332
    9. ' )
' → logprob: -14.037541389465332
    10. '               ' → logprob: -14.287541389465332

Token 979: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013430319726467133
    2. '            
' → logprob: -4.888430118560791
    3. '
' → logprob: -5.638430118560791
    4. '<|end|>' → logprob: -7.138430118560791
    5. '  
' → logprob: -7.763430118560791
    6. ',' → logprob: -8.26343059539795
    7. ' 
' → logprob: -9.13843059539795
    8. '       ' → logprob: -9.38843059539795
    9. '<|end|>' → logprob: -9.38843059539795
    10. '        
' → logprob: -9.51343059539795

Token 980: ' remaining' (ID: 15448)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6429668068885803
    2. '           ' → logprob: -1.1429667472839355
    3. 'remaining' (adapté à ' remaining') → logprob: -1.8929667472839355
    4. '#' → logprob: -5.8929667472839355
    5. 'idx' → logprob: -6.6429667472839355
    6. 'fi' → logprob: -7.7679667472839355
    7. '   ' → logprob: -9.517967224121094
    8. ' self' → logprob: -9.767967224121094
    9. ' remaining' → logprob: -10.392967224121094
    10. 'rem' → logprob: -10.517967224121094

Token 981: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.011082365177571774
    2. '-=' → logprob: -4.511082172393799
    3. '-' → logprob: -10.636082649230957
    4. ' -' → logprob: -11.511082649230957
    5. '   ' → logprob: -15.011082649230957
    6. '    ' → logprob: -16.76108169555664
    7. ' ' → logprob: -17.51108169555664
    8. '=' → logprob: -17.76108169555664
    9. '	' → logprob: -18.01108169555664
    10. ' +=' → logprob: -18.63608169555664

Token 982: ' take' (ID: 2304)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.014164221473038197
    2. ' take' → logprob: -4.264164447784424
    3. 'tak' → logprob: -14.639163970947266
    4. ' ' → logprob: -17.264163970947266
    5. '   ' → logprob: -17.514163970947266
    6. 'taken' → logprob: -17.514163970947266
    7. '.take' → logprob: -17.639163970947266
    8. 't' → logprob: -17.764163970947266
    9. '```' → logprob: -18.014163970947266
    10. 'to' → logprob: -18.014163970947266

Token 983: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09492439031600952
    2. '           ' → logprob: -2.7199244499206543
    3. ' 
' → logprob: -4.719924449920654
    4. '  
' → logprob: -4.844924449920654
    5. '            
' → logprob: -5.469924449920654
    6. '<|end|>' → logprob: -6.344924449920654
    7. ',' → logprob: -6.969924449920654
    8. '
' → logprob: -8.219923973083496
    9. '   
' → logprob: -8.844923973083496
    10. ',
' → logprob: -9.344923973083496

Token 984: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09767498075962067
    2. '
' → logprob: -2.597675085067749
    3. '            
' → logprob: -4.34767484664917
    4. ',' → logprob: -5.59767484664917
    5. '  
' → logprob: -7.22267484664917
    6. ' 
' → logprob: -8.347675323486328
    7. '        
' → logprob: -8.597675323486328
    8. '    
' → logprob: -8.597675323486328
    9. '   
' → logprob: -9.222675323486328
    10. '            ' → logprob: -9.472675323486328

Token 985: ' if' (ID: 538)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.09274362772703171
    2. '#' → logprob: -3.3427436351776123
    3. 'if' (adapté à ' if') → logprob: -4.092743396759033
    4. '           ' → logprob: -4.092743396759033
    5. 'fi' → logprob: -4.467743396759033
    6. 'self' → logprob: -5.342743396759033
    7. 'start' → logprob: -5.842743396759033
    8. 'new' → logprob: -7.592743396759033
    9. 'block' → logprob: -9.967743873596191
    10. '
' → logprob: -10.217743873596191

Token 986: ' take' (ID: 2304)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.024872325360774994
    2. 'block' → logprob: -3.899872303009033
    3. 'length' → logprob: -5.899872303009033
    4. ' take' → logprob: -7.024872303009033
    5. 'end' → logprob: -7.524872303009033
    6. '   ' → logprob: -9.649872779846191
    7. 'start' → logprob: -10.899872779846191
    8. ' block' → logprob: -11.024872779846191
    9. 'interval' → logprob: -11.774872779846191
    10. 'remaining' → logprob: -11.899872779846191

Token 987: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23280057311058044
    2. '==' → logprob: -1.6078006029129028
    3. ' <' → logprob: -5.107800483703613
    4. '<' → logprob: -6.857800483703613
    5. ' ' → logprob: -8.732800483703613
    6. '=' → logprob: -9.857800483703613
    7. ' =' → logprob: -11.982800483703613
    8. ')==' → logprob: -11.982800483703613
    9. ']==' → logprob: -12.482800483703613
    10. '>=' → logprob: -13.232800483703613

Token 988: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -7.107425062713446e-06
    2. ' length' → logprob: -12.125006675720215
    3. '   ' → logprob: -14.125006675720215
    4. '(length' → logprob: -15.000006675720215
    5. 'end' → logprob: -15.250006675720215
    6. ' ' → logprob: -15.750006675720215
    7. 'len' → logprob: -16.75000762939453
    8. '           ' → logprob: -17.12500762939453
    9. '    ' → logprob: -17.62500762939453
    10. 'leng' → logprob: -17.75000762939453

Token 989: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6340646147727966
    2. ':' → logprob: -0.7590646147727966
    3. '           ' → logprob: -7.259064674377441
    4. ' and' → logprob: -7.759064674377441
    5. '               ' → logprob: -9.009064674377441
    6. '):
' → logprob: -9.634064674377441
    7. ',' → logprob: -10.384064674377441
    8. '       ' → logprob: -10.634064674377441
    9. ':
' → logprob: -10.759064674377441
    10. '<|end|>' → logprob: -11.134064674377441

Token 990: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09800080209970474
    2. '           ' → logprob: -2.9730007648468018
    3. ':' → logprob: -4.223001003265381
    4. 'idx' → logprob: -4.598001003265381
    5. ':
' → logprob: -4.598001003265381
    6. 'fi' → logprob: -5.223001003265381
    7. ' and' → logprob: -6.973001003265381
    8. ',' → logprob: -8.223000526428223
    9. ' idx' → logprob: -8.848000526428223
    10. '):
' → logprob: -8.848000526428223

Token 991: ' #' (ID: 1069)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.13198381662368774
    2. 'fi' → logprob: -2.256983757019043
    3. '           ' → logprob: -4.631983757019043
    4. '               ' → logprob: -5.006983757019043
    5. 'del' → logprob: -6.131983757019043
    6. 'self' → logprob: -8.756983757019043
    7. '                   ' → logprob: -9.256983757019043
    8. '#' (adapté à ' #') → logprob: -10.006983757019043
    9. ' idx' → logprob: -10.756983757019043
    10. '   ' → logprob: -11.006983757019043

Token 992: ' full' (ID: 3149)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.01636606827378273
    2. '#' → logprob: -4.641366004943848
    3. 'idx' → logprob: -5.641366004943848
    4. 'self' → logprob: -5.891366004943848
    5. 'del' → logprob: -8.391366004943848
    6. '   ' → logprob: -10.391366004943848
    7. '           ' → logprob: -12.016366004943848
    8. ' fi' → logprob: -12.391366004943848
    9. ' #' → logprob: -13.391366004943848
    10. '       ' → logprob: -13.766366004943848

Token 993: ' free' (ID: 2240)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.4135305881500244
    2. 'remove' → logprob: -1.5385305881500244
    3. '           ' → logprob: -1.9135305881500244
    4. 'del' → logprob: -2.5385305881500244
    5. 'fi' → logprob: -2.6635305881500244
    6. 'free' → logprob: -2.7885305881500244
    7. 'interval' → logprob: -3.0385305881500244
    8. ' remove' → logprob: -3.5385305881500244
    9. '#' → logprob: -3.7885305881500244
    10. ' del' → logprob: -3.9135305881500244

Token 994: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.020454641431570053
    2. '           ' → logprob: -4.770454406738281
    3. ' interval' → logprob: -4.770454406738281
    4. '#' → logprob: -6.645454406738281
    5. '               ' → logprob: -7.645454406738281
    6. 'del' → logprob: -8.020454406738281
    7. 'remove' → logprob: -8.520454406738281
    8. '_interval' → logprob: -8.770454406738281
    9. 'inter' → logprob: -9.020454406738281
    10. ' intervals' → logprob: -9.020454406738281

Token 995: ' used' (ID: 2061)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22886835038661957
    2. '           ' → logprob: -1.6038683652877808
    3. 'fi' → logprob: -6.85386848449707
    4. ' del' → logprob: -7.35386848449707
    5. ',' → logprob: -7.72886848449707
    6. '                   ' → logprob: -7.97886848449707
    7. ':' → logprob: -8.22886848449707
    8. 'del' → logprob: -8.22886848449707
    9. ' and' → logprob: -9.47886848449707
    10. '	fi' → logprob: -9.72886848449707

Token 996: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00932758767157793
    2. '           ' → logprob: -5.134327411651611
    3. ',' → logprob: -5.884327411651611
    4. 'fi' → logprob: -7.884327411651611
    5. '                   ' → logprob: -9.00932788848877
    6. '       ' → logprob: -10.75932788848877
    7. '              ' → logprob: -11.25932788848877
    8. ':' → logprob: -11.25932788848877
    9. '                
' → logprob: -11.63432788848877
    10. ',
' → logprob: -11.88432788848877

Token 997: ' remove' (ID: 6234)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.0005667338264174759
    2. '           ' → logprob: -8.375566482543945
    3. ' fi' → logprob: -8.500566482543945
    4. 'self' → logprob: -9.250566482543945
    5. '               ' → logprob: -10.625566482543945
    6. '   ' → logprob: -12.125566482543945
    7. 'del' → logprob: -13.000566482543945
    8. '                   ' → logprob: -13.375566482543945
    9. '	fi' → logprob: -13.375566482543945
    10. ' del' → logprob: -14.500566482543945

Token 998: ' it' (ID: 480)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.00025287605240009725
    2. '               ' → logprob: -9.375252723693848
    3. 'self' → logprob: -9.375252723693848
    4. ' fi' → logprob: -10.250252723693848
    5. '                   ' → logprob: -10.500252723693848
    6. '           ' → logprob: -11.500252723693848
    7. '(fi' → logprob: -11.875252723693848
    8. '	fi' → logprob: -13.875252723693848
    9. 'free' → logprob: -14.125252723693848
    10. ')' → logprob: -14.875252723693848

Token 999: ' later' (ID: 4849)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19298037886619568
    2. '               ' → logprob: -1.817980408668518
    3. 'fi' → logprob: -4.9429802894592285
    4. ',' → logprob: -5.9429802894592285
    5. '                   ' → logprob: -6.5679802894592285
    6. '(fi' → logprob: -7.9429802894592285
    7. ' del' → logprob: -8.317980766296387
    8. '	fi' → logprob: -8.317980766296387
    9. ' and' → logprob: -8.692980766296387
    10. 'self' → logprob: -8.817980766296387

Token 1000: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019634395837783813
    2. '<|end|>' → logprob: -4.894634246826172
    3. ',' → logprob: -5.144634246826172
    4. '           ' → logprob: -5.394634246826172
    5. '<|end|>' → logprob: -7.519634246826172
    6. '                
' → logprob: -8.144634246826172
    7. ' and' → logprob: -9.144634246826172
    8. '            
' → logprob: -9.269634246826172
    9. '  
' → logprob: -9.269634246826172
    10. '
' → logprob: -9.769634246826172

Token 1001: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008565509924665093
    2. ',' → logprob: -7.750856399536133
    3. '           ' → logprob: -8.000856399536133
    4. '<|end|>' → logprob: -9.875856399536133
    5. '
' → logprob: -11.500856399536133
    6. '                
' → logprob: -12.250856399536133
    7. '                   ' → logprob: -12.500856399536133
    8. ' and' → logprob: -13.125856399536133
    9. '<|end|>' → logprob: -13.250856399536133
    10. '#' → logprob: -13.500856399536133

Token 1002: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.622641921043396
    2. 'fi' → logprob: -0.872641921043396
    3. 'pass' → logprob: -3.3726420402526855
    4. 'del' → logprob: -4.8726420402526855
    5. 'self' → logprob: -6.1226420402526855
    6. '   ' → logprob: -7.7476420402526855
    7. 'remove' → logprob: -8.122641563415527
    8. 'to' → logprob: -8.372641563415527
    9. '#' → logprob: -9.747641563415527
    10. 'interval' → logprob: -9.747641563415527

Token 1003: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.011337692849338055
    2. ' +=' → logprob: -4.511337757110596
    3. '=' → logprob: -8.386337280273438
    4. '<|end|>' → logprob: -10.261337280273438
    5. '+' → logprob: -10.761337280273438
    6. ']+=' → logprob: -13.136337280273438
    7. '++' → logprob: -13.761337280273438
    8. '+='' → logprob: -14.386337280273438
    9. ' =' → logprob: -14.761337280273438
    10. '==' → logprob: -14.761337280273438

Token 1004: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '0' → logprob: -17.12509536743164
    4. '   ' → logprob: -17.25009536743164
    5. '```' → logprob: -18.31259536743164
    6. '  ' → logprob: -18.62509536743164
    7. '۱' → logprob: -19.68759536743164
    8. '+' → logprob: -19.68759536743164
    9. 'len' → logprob: -19.87509536743164
    10. '<|end|>' → logprob: -19.93759536743164

Token 1005: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9504606825648807e-05
    2. ' ' → logprob: -10.875019073486328
    3. '```' → logprob: -16.250019073486328
    4. '   ' → logprob: -16.375019073486328
    5. '-' → logprob: -16.562519073486328
    6. '0' → logprob: -16.625019073486328
    7. 'len' → logprob: -16.875019073486328
    8. '
' → logprob: -17.062519073486328
    9. '+' → logprob: -18.250019073486328
    10. '  ' → logprob: -18.500019073486328

Token 1006: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009774327045306563
    2. '       ' → logprob: -7.625977516174316
    3. '               ' → logprob: -8.250977516174316
    4. 'else' → logprob: -8.875977516174316
    5. '
' → logprob: -10.000977516174316
    6. ' else' → logprob: -11.125977516174316
    7. ',' → logprob: -11.750977516174316
    8. 'continue' → logprob: -12.375977516174316
    9. '  
' → logprob: -13.000977516174316
    10. '   ' → logprob: -13.500977516174316

Token 1007: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10299120843410492
    2. 'else' → logprob: -2.7279911041259766
    3. '       ' → logprob: -3.7279911041259766
    4. ' else' → logprob: -4.852991104125977
    5. '
' → logprob: -8.602991104125977
    6. '               ' → logprob: -8.852991104125977
    7. '```' → logprob: -9.102991104125977
    8. 'self' → logprob: -9.602991104125977
    9. ',' → logprob: -10.477991104125977
    10. 'continue' → logprob: -10.602991104125977

Token 1008: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21939274668693542
    2. 'else' (adapté à ' else') → logprob: -1.7193927764892578
    3. ' else' → logprob: -4.094392776489258
    4. '       ' → logprob: -6.844392776489258
    5. '
' → logprob: -10.344392776489258
    6. '               ' → logprob: -10.844392776489258
    7. ',' → logprob: -11.719392776489258
    8. '   ' → logprob: -12.344392776489258
    9. 'elif' → logprob: -12.344392776489258
    10. '```' → logprob: -12.719392776489258

Token 1009: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.44567328691482544
    2. ':' → logprob: -1.0706732273101807
    3. '               ' → logprob: -4.57067346572876
    4. '           ' → logprob: -5.32067346572876
    5. ',' → logprob: -7.07067346572876
    6. ':

' → logprob: -9.070672988891602
    7. '=' → logprob: -9.320672988891602
    8. '       ' → logprob: -9.320672988891602
    9. ' and' → logprob: -9.320672988891602
    10. '):
' → logprob: -9.320672988891602

Token 1010: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06103380396962166
    2. '           ' → logprob: -3.8110337257385254
    3. 'fi' → logprob: -4.186033725738525
    4. '#' → logprob: -4.436033725738525
    5. 'self' → logprob: -5.936033725738525
    6. ' #' → logprob: -6.436033725738525
    7. ':' → logprob: -6.811033725738525
    8. ':
' → logprob: -7.061033725738525
    9. ' self' → logprob: -7.186033725738525
    10. 'start' → logprob: -7.311033725738525

Token 1011: ' #' (ID: 1069)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.7605853080749512
    2. 'self' → logprob: -0.8855853080749512
    3. '               ' → logprob: -2.635585308074951
    4. '#' (adapté à ' #') → logprob: -3.260585308074951
    5. 'break' → logprob: -5.260585308074951
    6. ' self' → logprob: -6.260585308074951
    7. ' #' → logprob: -6.885585308074951
    8. 'new' → logprob: -7.010585308074951
    9. '           ' → logprob: -7.510585308074951
    10. '                   ' → logprob: -9.01058578491211

Token 1012: ' partial' (ID: 13664)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.04590366780757904
    2. 'self' → logprob: -3.2959036827087402
    3. '#' → logprob: -5.04590368270874
    4. 'new' → logprob: -6.79590368270874
    5. 'break' → logprob: -9.420903205871582
    6. 'start' → logprob: -9.920903205871582
    7. ' fi' → logprob: -10.045903205871582
    8. ' self' → logprob: -10.920903205871582
    9. '       ' → logprob: -11.045903205871582
    10. ' #' → logprob: -11.045903205871582

Token 1013: ' use' (ID: 1199)
  Prédit: ' free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' free' → logprob: -0.2641241252422333
    2. 'free' → logprob: -1.8891241550445557
    3. '               ' → logprob: -3.5141241550445557
    4. ' usage' → logprob: -3.8891241550445557
    5. 'fi' → logprob: -5.389123916625977
    6. ' use' → logprob: -5.764123916625977
    7. ' fi' → logprob: -5.764123916625977
    8. 'interval' → logprob: -6.264123916625977
    9. 'usage' → logprob: -6.389123916625977
    10. 'remove' → logprob: -6.514123916625977

Token 1014: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1554208993911743
    2. '               ' → logprob: -1.1554208993911743
    3. ':
' → logprob: -1.7804208993911743
    4. ':' → logprob: -2.0304207801818848
    5. '=' → logprob: -3.2804207801818848
    6. 'd' → logprob: -4.655420780181885
    7. '           ' → logprob: -5.280420780181885
    8. 's' → logprob: -5.655420780181885
    9. '                   ' → logprob: -5.655420780181885
    10. ',' → logprob: -6.530420780181885

Token 1015: ' update' (ID: 4027)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.49045640230178833
    2. 'fi' → logprob: -1.1154563426971436
    3. ' self' → logprob: -3.2404563426971436
    4. '               ' → logprob: -4.365456581115723
    5. '#' → logprob: -5.865456581115723
    6. ' fi' → logprob: -6.115456581115723
    7. 'new' → logprob: -6.615456581115723
    8. '           ' → logprob: -7.490456581115723
    9. ' #' → logprob: -7.990456581115723
    10. 'break' → logprob: -8.240456581115723

Token 1016: ' free' (ID: 2240)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.008216670714318752
    2. 'self' → logprob: -5.008216857910156
    3. '               ' → logprob: -7.508216857910156
    4. ' fi' → logprob: -7.633216857910156
    5. '           ' → logprob: -8.258216857910156
    6. ' self' → logprob: -9.508216857910156
    7. '(fi' → logprob: -9.508216857910156
    8. 'start' → logprob: -10.758216857910156
    9. '                   ' → logprob: -11.508216857910156
    10. '=' → logprob: -11.758216857910156

Token 1017: ' interval' (ID: 17116)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.0007450680714100599
    2. 'interval' → logprob: -7.2507452964782715
    3. '               ' → logprob: -11.000744819641113
    4. '           ' → logprob: -11.750744819641113
    5. '_interval' → logprob: -12.000744819641113
    6. 'inter' → logprob: -12.625744819641113
    7. '                   ' → logprob: -15.000744819641113
    8. '   ' → logprob: -15.125744819641113
    9. ' intervals' → logprob: -15.750744819641113
    10. 'Intervals' → logprob: -16.37574577331543

Token 1018: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7001395225524902
    2. '               ' → logprob: -1.2001395225524902
    3. ' =' → logprob: -1.9501395225524902
    4. '[start' → logprob: -3.8251395225524902
    5. '=' → logprob: -3.9501395225524902
    6. '[self' → logprob: -5.07513952255249
    7. 'self' → logprob: -5.45013952255249
    8. ',' → logprob: -6.45013952255249
    9. '                   ' → logprob: -6.45013952255249
    10. '           ' → logprob: -6.57513952255249

Token 1019: '               ' (ID: 506)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.40443265438079834
    2. '               ' → logprob: -2.029432773590088
    3. '[start' → logprob: -2.154432773590088
    4. ' =' → logprob: -3.029432773590088
    5. '=' → logprob: -4.154432773590088
    6. '           ' → logprob: -4.404432773590088
    7. '[end' → logprob: -6.029432773590088
    8. '[self' → logprob: -6.154432773590088
    9. '                   ' → logprob: -7.029432773590088
    10. '[-' → logprob: -7.904432773590088

Token 1020: ' fi' (ID: 6134)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' (adapté à ' fi') → logprob: -0.6288895010948181
    2. 'self' → logprob: -0.8788895010948181
    3. ' self' → logprob: -3.878889560699463
    4. '               ' → logprob: -3.878889560699463
    5. ' fi' → logprob: -5.128889560699463
    6. 'new' → logprob: -6.253889560699463
    7. '           ' → logprob: -6.753889560699463
    8. ' new' → logprob: -7.753889560699463
    9. '                   ' → logprob: -7.878889560699463
    10. '	fi' → logprob: -9.503889083862305

Token 1021: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.438573680294212e-06
    2. '[pos' → logprob: -12.875005722045898
    3. '           ' → logprob: -14.000005722045898
    4. 'idx' → logprob: -14.625005722045898
    5. '[' → logprob: -14.750005722045898
    6. '               ' → logprob: -15.125005722045898
    7. '                   ' → logprob: -15.375005722045898
    8. '.pop' → logprob: -15.625005722045898
    9. '   ' → logprob: -16.0000057220459
    10. '       ' → logprob: -16.3750057220459

Token 1022: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0029091311153024435
    2. ' =' → logprob: -6.002909183502197
    3. '=(' → logprob: -7.752909183502197
    4. '=((' → logprob: -13.877908706665039
    5. '=
' → logprob: -14.252908706665039
    6. ']=' → logprob: -14.377908706665039
    7. ' =(' → logprob: -14.502908706665039
    8. ')=' → logprob: -15.127908706665039
    9. ']=(' → logprob: -15.127908706665039
    10. '(' → logprob: -15.877908706665039

Token 1023: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.060365608893335e-05
    2. '=(' → logprob: -10.375041007995605
    3. ' =' → logprob: -11.625041007995605
    4. '=
' → logprob: -15.625041007995605
    5. '=start' → logprob: -15.625041007995605
    6. '[' → logprob: -17.87504005432129
    7. '=

' → logprob: -18.12504005432129
    8. '=((' → logprob: -18.37504005432129
    9. '＝' → logprob: -19.37504005432129
    10. '(' → logprob: -19.62504005432129

Token 1024: ' (' (ID: 350)
  Prédit: '(block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(block' → logprob: -0.0031958934850990772
    2. '(start' → logprob: -5.753195762634277
    3. ' (' → logprob: -11.628195762634277
    4. '(' → logprob: -12.253195762634277
    5. '(end' → logprob: -12.628195762634277
    6. '(Block' → logprob: -14.378195762634277
    7. '(b' → logprob: -15.628195762634277
    8. '(branch' → logprob: -16.253196716308594
    9. '(fi' → logprob: -16.378196716308594
    10. '(batch' → logprob: -17.128196716308594

Token 1025: 'start' (ID: 5236)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.036854617297649384
    2. '(block' → logprob: -3.5368545055389404
    3. 'start' → logprob: -5.0368547439575195
    4. '(start' → logprob: -8.03685474395752
    5. '(' → logprob: -9.41185474395752
    6. 'fi' → logprob: -9.53685474395752
    7. ' block' → logprob: -9.66185474395752
    8. '(fi' → logprob: -11.03685474395752
    9. '(end' → logprob: -11.28685474395752
    10. 'end' → logprob: -11.91185474395752

Token 1026: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.30710768699645996
    2. ' +' → logprob: -1.43210768699646
    3. ',' → logprob: -3.68210768699646
    4. ' ,' → logprob: -8.057107925415039
    5. '[' → logprob: -9.307107925415039
    6. '+,' → logprob: -11.557107925415039
    7. ',
' → logprob: -11.807107925415039
    8. '<|end|>' → logprob: -12.182107925415039
    9. ',start' → logprob: -12.432107925415039
    10. '```' → logprob: -12.682107925415039

Token 1027: 'take' (ID: 45924)
  Prédit: 'take'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.0019297054968774319
    2. ' take' → logprob: -6.251929759979248
    3. '   ' → logprob: -14.75192928314209
    4. '           ' → logprob: -15.75192928314209
    5. ' ' → logprob: -16.126930236816406
    6. 'tak' → logprob: -16.501930236816406
    7. '    ' → logprob: -16.626930236816406
    8. '1' → logprob: -17.001930236816406
    9. '               ' → logprob: -17.001930236816406
    10. '       ' → logprob: -17.001930236816406

Token 1028: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002751598076429218
    2. ' ,' → logprob: -8.250275611877441
    3. ',end' → logprob: -12.750275611877441
    4. ')' → logprob: -13.375275611877441
    5. ',
' → logprob: -13.625275611877441
    6. ',n' → logprob: -13.875275611877441
    7. '1' → logprob: -14.000275611877441
    8. ',None' → logprob: -14.250275611877441
    9. '‌,' → logprob: -14.375275611877441
    10. '   ' → logprob: -14.375275611877441

Token 1029: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0017024369444698095
    2. ' end' → logprob: -6.376702308654785
    3. '   ' → logprob: -16.0017032623291
    4. ' ' → logprob: -16.8767032623291
    5. '	end' → logprob: -17.3767032623291
    6. '(end' → logprob: -18.1267032623291
    7. '  ' → logprob: -18.1267032623291
    8. 'f' → logprob: -18.1267032623291
    9. '_end' → logprob: -18.3767032623291
    10. 'End' → logprob: -19.1267032623291

Token 1030: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013607845176011324
    2. ')
' → logprob: -9.000136375427246
    3. ' )' → logprob: -12.375136375427246
    4. '           ' → logprob: -12.500136375427246
    5. '<|end|>' → logprob: -12.875136375427246
    6. '       ' → logprob: -13.625136375427246
    7. ')return' → logprob: -15.875136375427246
    8. '<|end|>' → logprob: -16.00013542175293
    9. '               ' → logprob: -16.62513542175293
    10. '),' → logprob: -16.75013542175293

Token 1031: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7033135294914246
    2. '               ' → logprob: -0.8283135294914246
    3. '       ' → logprob: -3.3283135890960693
    4. '<|end|>' → logprob: -3.4533135890960693
    5. '```' → logprob: -8.578313827514648
    6. '<|end|>' → logprob: -9.203313827514648
    7. '	       ' → logprob: -9.203313827514648
    8. '   ' → logprob: -9.203313827514648
    9. 'return' → logprob: -9.703313827514648
    10. '                   ' → logprob: -10.203313827514648

Token 1032: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0065382118336856365
    2. 'break' (adapté à ' break') → logprob: -5.756538391113281
    3. 'return' → logprob: -6.506538391113281
    4. '           ' → logprob: -6.756538391113281
    5. ' break' → logprob: -7.631538391113281
    6. ' return' → logprob: -9.381538391113281
    7. 'remaining' → logprob: -9.631538391113281
    8. '       ' → logprob: -11.006538391113281
    9. '              ' → logprob: -11.631538391113281
    10. 'continue' → logprob: -11.881538391113281

Token 1033: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004507850389927626
    2. '
' → logprob: -6.004508018493652
    3. '<|end|>' → logprob: -6.879508018493652
    4. '        
' → logprob: -7.754508018493652
    5. 'else' → logprob: -8.879508018493652
    6. '           ' → logprob: -9.379508018493652
    7. 'if' → logprob: -9.629508018493652
    8. '   ' → logprob: -10.129508018493652
    9. ' if' → logprob: -10.379508018493652
    10. '    
' → logprob: -10.379508018493652

Token 1034: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019021015614271164
    2. '
' → logprob: -6.501902103424072
    3. '   ' → logprob: -9.001901626586914
    4. '           ' → logprob: -9.251901626586914
    5. '<|end|>' → logprob: -10.001901626586914
    6. '        
' → logprob: -10.126901626586914
    7. '```' → logprob: -10.751901626586914
    8. '        ' → logprob: -11.376901626586914
    9. 'else' → logprob: -11.376901626586914
    10. '    
' → logprob: -11.626901626586914

Token 1035: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017821642104536295
    2. ' if' → logprob: -7.126781940460205
    3. 'if' (adapté à ' if') → logprob: -7.251781940460205
    4. '
' → logprob: -8.751782417297363
    5. '```' → logprob: -10.126782417297363
    6. '   ' → logprob: -10.751782417297363
    7. '        
' → logprob: -11.251782417297363
    8. 'else' → logprob: -11.751782417297363
    9. '<|end|>' → logprob: -12.001782417297363
    10. 'for' → logprob: -12.376782417297363

Token 1036: ' remaining' (ID: 15448)
  Prédit: ' remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remaining' → logprob: -0.20145729184150696
    2. 'remaining' → logprob: -1.7014572620391846
    3. ' ' → logprob: -11.326457023620605
    4. ' intervals' → logprob: -11.576457023620605
    5. ' len' → logprob: -11.701457023620605
    6. ' not' → logprob: -12.076457023620605
    7. '   ' → logprob: -12.826457023620605
    8. 'len' → logprob: -13.451457023620605
    9. '_remaining' → logprob: -13.701457023620605
    10. '  ' → logprob: -14.326457023620605

Token 1037: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1575290858745575
    2. '>' → logprob: -2.40752911567688
    3. ' ==' → logprob: -3.28252911567688
    4. ' !=' → logprob: -4.282528877258301
    5. '==' → logprob: -6.032528877258301
    6. ':' → logprob: -6.657528877258301
    7. '!=' → logprob: -7.407528877258301
    8. ' >
' → logprob: -10.1575288772583
    9. ' ' → logprob: -11.2825288772583
    10. ' <=' → logprob: -11.7825288772583

Token 1038: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029756393283605576
    2. ' ' → logprob: -3.5297563076019287
    3. '   ' → logprob: -12.779756546020508
    4. '
' → logprob: -13.654756546020508
    5. '  ' → logprob: -15.217256546020508
    6. '       ' → logprob: -15.404756546020508
    7. '=' → logprob: -15.592256546020508
    8. '۰' → logprob: -15.592256546020508
    9. '```' → logprob: -15.779756546020508
    10. ' ' → logprob: -16.029756546020508

Token 1039: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10155097395181656
    2. ':' → logprob: -2.476551055908203
    3. '           ' → logprob: -4.976551055908203
    4. ':return' → logprob: -5.226551055908203
    5. '       ' → logprob: -9.476551055908203
    6. ' return' → logprob: -9.601551055908203
    7. 'return' → logprob: -10.101551055908203
    8. ',' → logprob: -10.601551055908203
    9. '):
' → logprob: -11.226551055908203
    10. ':

' → logprob: -11.601551055908203

Token 1040: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001239752396941185
    2. 'return' → logprob: -7.001239776611328
    3. ' return' → logprob: -8.126239776611328
    4. ':
' → logprob: -11.001239776611328
    5. ':return' → logprob: -12.001239776611328
    6. '       ' → logprob: -12.251239776611328
    7. ':' → logprob: -12.751239776611328
    8. '   ' → logprob: -14.001239776611328
    9. '
' → logprob: -15.001239776611328
    10. '#' → logprob: -15.376239776611328

Token 1041: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.027703501284122467
    2. '           ' → logprob: -3.7777035236358643
    3. ' return' → logprob: -5.527703285217285
    4. 'raise' → logprob: -8.277703285217285
    5. 'print' → logprob: -8.902703285217285
    6. '#' (adapté à ' #') → logprob: -9.902703285217285
    7. '       ' → logprob: -11.527703285217285
    8. '   ' → logprob: -11.652703285217285
    9. '
' → logprob: -12.277703285217285
    10. ' raise' → logprob: -12.777703285217285

Token 1042: ' not' (ID: 625)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01057752501219511
    2. ' return' → logprob: -5.13557767868042
    3. '#' → logprob: -6.13557767868042
    4. '           ' → logprob: -6.38557767868042
    5. 'print' → logprob: -7.76057767868042
    6. '       ' → logprob: -8.760577201843262
    7. 'raise' → logprob: -8.760577201843262
    8. 'self' → logprob: -10.885577201843262
    9. 'for' → logprob: -11.885577201843262
    10. '   ' → logprob: -11.885577201843262

Token 1043: ' enough' (ID: 4951)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.07891248166561127
    2. ' enough' → logprob: -2.5789124965667725
    3. 'found' → logprob: -12.078912734985352
    4. ' en' → logprob: -12.078912734985352
    5. '-en' → logprob: -12.328912734985352
    6. '_en' → logprob: -12.578912734985352
    7. 's' → logprob: -13.703912734985352
    8. 'implemented' → logprob: -13.953912734985352
    9. 'Enough' → logprob: -15.203912734985352
    10. 'able' → logprob: -15.453912734985352

Token 1044: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.56148761510849
    2. ' free' → logprob: -0.93648761510849
    3. 'return' → logprob: -3.9364876747131348
    4. 'space' → logprob: -4.686487674713135
    5. ' return' → logprob: -5.436487674713135
    6. '
' → logprob: -6.061487674713135
    7. ' space' → logprob: -6.686487674713135
    8. '       ' → logprob: -8.811487197875977
    9. 'raise' → logprob: -8.811487197875977
    10. '_free' → logprob: -9.186487197875977

Token 1045: ' space' (ID: 4918)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.189636692404747
    2. ' space' → logprob: -2.564636707305908
    3. ' intervals' → logprob: -3.189636707305908
    4. 'interval' → logprob: -3.314636707305908
    5. '_space' → logprob: -5.189636707305908
    6. 'spaces' → logprob: -5.314636707305908
    7. 'se' → logprob: -6.064636707305908
    8. ')' → logprob: -6.564636707305908
    9. '       ' → logprob: -6.814636707305908
    10. '_inter' → logprob: -7.314636707305908

Token 1046: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026616237591952085
    2. '       ' → logprob: -7.00266170501709
    3. 'return' → logprob: -7.37766170501709
    4. ' return' → logprob: -7.50266170501709
    5. '
' → logprob: -7.75266170501709
    6. ',' → logprob: -9.87766170501709
    7. ':' → logprob: -10.25266170501709
    8. ':
' → logprob: -10.62766170501709
    9. ':return' → logprob: -11.00266170501709
    10. '               ' → logprob: -11.87766170501709

Token 1047: ' problem' (ID: 4792)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5733230710029602
    2. ' return' → logprob: -0.9483230710029602
    3. '           ' → logprob: -3.0733230113983154
    4. 'for' → logprob: -6.9483232498168945
    5. '       ' → logprob: -7.1983232498168945
    6. ' for' → logprob: -7.3233232498168945
    7. '   ' → logprob: -8.823323249816895
    8. '#' → logprob: -9.948323249816895
    9. 'self' → logprob: -10.573323249816895
    10. ' ' → logprob: -10.823323249816895

Token 1048: ' states' (ID: 9407)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26795893907546997
    2. '           ' → logprob: -1.7679588794708252
    3. 'return' → logprob: -3.517958879470825
    4. ' return' → logprob: -4.142959117889404
    5. '
' → logprob: -5.017959117889404
    6. ',' → logprob: -5.642959117889404
    7. '        
' → logprob: -5.892959117889404
    8. ':return' → logprob: -6.142959117889404
    9. ':' → logprob: -6.267959117889404
    10. 'raise' → logprob: -8.392958641052246

Token 1049: ' nothing' (ID: 6939)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.736115038394928
    2. ' return' → logprob: -1.2361149787902832
    3. 'return' → logprob: -2.361114978790283
    4. ' raise' → logprob: -2.486114978790283
    5. 'raise' → logprob: -3.486114978790283
    6. ' that' → logprob: -4.361114978790283
    7. '               ' → logprob: -6.111114978790283
    8. ' we' → logprob: -6.736114978790283
    9. '#' → logprob: -6.861114978790283
    10. ' to' → logprob: -7.236114978790283

Token 1050: ' about' (ID: 1078)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010067591443657875
    2. '           ' → logprob: -5.010067462921143
    3. ' return' → logprob: -6.635067462921143
    4. ',' → logprob: -7.135067462921143
    5. 'return' → logprob: -8.1350679397583
    6. '
' → logprob: -8.2600679397583
    7. '.' → logprob: -8.2600679397583
    8. '        
' → logprob: -8.7600679397583
    9. '   ' → logprob: -8.8850679397583
    10. '               ' → logprob: -10.8850679397583

Token 1051: ' this' (ID: 495)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.22034838795661926
    2. 'error' → logprob: -3.095348358154297
    3. 'failure' → logprob: -3.220348358154297
    4. ' failure' → logprob: -3.720348358154297
    5. ' raising' → logprob: -4.470348358154297
    6. 'raising' → logprob: -4.470348358154297
    7. 'allocation' → logprob: -5.095348358154297
    8. 'output' → logprob: -5.220348358154297
    9. ' returning' → logprob: -5.220348358154297
    10. 'this' → logprob: -5.220348358154297

Token 1052: ' case' (ID: 1890)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08849484473466873
    2. '
' → logprob: -3.3384947776794434
    3. ',' → logprob: -4.088494777679443
    4. '           ' → logprob: -4.463494777679443
    5. ' return' → logprob: -4.588494777679443
    6. '        
' → logprob: -5.088494777679443
    7. 'return' → logprob: -5.838494777679443
    8. '.' → logprob: -7.588494777679443
    9. ':return' → logprob: -8.338495254516602
    10. '   ' → logprob: -8.838495254516602

Token 1053: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6389957070350647
    2. '           ' → logprob: -0.7639957070350647
    3. ',' → logprob: -6.01399564743042
    4. ' return' → logprob: -6.26399564743042
    5. 'return' → logprob: -6.76399564743042
    6. '
' → logprob: -7.51399564743042
    7. '        
' → logprob: -8.888996124267578
    8. ':return' → logprob: -10.138996124267578
    9. '   ' → logprob: -10.263996124267578
    10. '.' → logprob: -10.263996124267578

Token 1054: ' just' (ID: 1327)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1315993070602417
    2. 'return' → logprob: -2.1315994262695312
    3. '           ' → logprob: -5.381599426269531
    4. '#' → logprob: -10.756599426269531
    5. '       ' → logprob: -11.256599426269531
    6. ' raise' → logprob: -11.631599426269531
    7. ' ' → logprob: -12.381599426269531
    8. '   ' → logprob: -12.756599426269531
    9. '
' → logprob: -12.756599426269531
    10. 'raise' → logprob: -13.006599426269531

Token 1055: ' write' (ID: 5067)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.029804181307554245
    2. ' return' → logprob: -3.529804229736328
    3. '           ' → logprob: -10.529804229736328
    4. '       ' → logprob: -11.029804229736328
    5. '   ' → logprob: -12.154804229736328
    6. 'raise' → logprob: -12.529804229736328
    7. 'pass' → logprob: -13.904804229736328
    8. '
' → logprob: -14.654804229736328
    9. ' raise' → logprob: -15.779804229736328
    10. '	return' → logprob: -16.529804229736328

Token 1056: ' partial' (ID: 13664)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.634706437587738
    2. 'return' → logprob: -1.2597064971923828
    3. '       ' → logprob: -1.8847064971923828
    4. '```' → logprob: -5.259706497192383
    5. ' intervals' → logprob: -5.759706497192383
    6. '
' → logprob: -5.884706497192383
    7. ':return' → logprob: -6.009706497192383
    8. ' nothing' → logprob: -6.134706497192383
    9. '           ' → logprob: -6.134706497192383
    10. '(' → logprob: -6.134706497192383

Token 1057: '
' (ID: 198)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.6120845079421997
    2. 'interval' → logprob: -1.6120845079421997
    3. 'return' → logprob: -1.8620845079421997
    4. ' return' → logprob: -2.36208438873291
    5. '```' → logprob: -6.61208438873291
    6. ')' → logprob: -6.73708438873291
    7. ')
' → logprob: -7.23708438873291
    8. '
' → logprob: -7.36208438873291
    9. '       ' → logprob: -7.48708438873291
    10. 'segments' → logprob: -7.61208438873291

Token 1058: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0075854407623410225
    2. '           ' → logprob: -5.257585525512695
    3. 'return' → logprob: -6.632585525512695
    4. '
' → logprob: -7.882585525512695
    5. ' return' → logprob: -8.132585525512695
    6. ' for' → logprob: -9.257585525512695
    7. ',' → logprob: -9.507585525512695
    8. '   ' → logprob: -9.757585525512695
    9. '```' → logprob: -10.132585525512695
    10. ' intervals' → logprob: -11.132585525512695

Token 1059: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.7005109786987305
    2. ' pass' → logprob: -1.2005109786987305
    3. 'return' → logprob: -2.3255109786987305
    4. '       ' → logprob: -3.5755109786987305
    5. 'for' → logprob: -3.9505109786987305
    6. 'interval' → logprob: -4.4505109786987305
    7. '           ' → logprob: -4.5755109786987305
    8. 'size' → logprob: -4.5755109786987305
    9. ' intervals' → logprob: -4.9505109786987305
    10. ' return' → logprob: -5.0755109786987305

Token 1060: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36929264664649963
    2. ' for' → logprob: -1.3692926168441772
    3. '
' → logprob: -3.869292736053467
    4. 'for' → logprob: -3.869292736053467
    5. '<|end|>' → logprob: -5.119292736053467
    6. '```' → logprob: -5.619292736053467
    7. '        
' → logprob: -6.619292736053467
    8. '   ' → logprob: -8.119292259216309
    9. '    
' → logprob: -8.619292259216309
    10. '<|end|>' → logprob: -8.744292259216309

Token 1061: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00044795009307563305
    2. 'for' → logprob: -8.750448226928711
    3. ' for' → logprob: -9.250448226928711
    4. '
' → logprob: -9.375448226928711
    5. '```' → logprob: -10.125448226928711
    6. '        
' → logprob: -10.500448226928711
    7. 'else' → logprob: -10.875448226928711
    8. '<|end|>' → logprob: -11.875448226928711
    9. ',' → logprob: -12.750448226928711
    10. '           ' → logprob: -13.000448226928711

Token 1062: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18254762887954712
    2. '       ' → logprob: -1.8075475692749023
    3. ' for' → logprob: -6.307547569274902
    4. 'if' → logprob: -7.932547569274902
    5. 'self' → logprob: -8.432547569274902
    6. '#' (adapté à ' #') → logprob: -8.557547569274902
    7. 'file' → logprob: -9.807547569274902
    8. '```' → logprob: -10.057547569274902
    9. 'else' → logprob: -10.182547569274902
    10. '   ' → logprob: -10.307547569274902

Token 1063: ' Remove' (ID: 18141)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009550073184072971
    2. '#' → logprob: -5.134550094604492
    3. 'self' → logprob: -5.759550094604492
    4. '       ' → logprob: -7.759550094604492
    5. ' for' → logprob: -10.759550094604492
    6. 'For' → logprob: -11.884550094604492
    7. '
' → logprob: -12.884550094604492
    8. '   ' → logprob: -13.259550094604492
    9. 'file' → logprob: -14.134550094604492
    10. 'if' → logprob: -14.259550094604492

Token 1064: ' these' (ID: 1879)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.8713897466659546
    2. 'free' → logprob: -1.1213897466659546
    3. '_free' → logprob: -1.8713897466659546
    4. 'the' → logprob: -3.621389865875244
    5. ' used' → logprob: -4.246389865875244
    6. 'from' → logprob: -4.246389865875244
    7. '_used' → logprob: -4.246389865875244
    8. 'interval' → logprob: -4.746389865875244
    9. 'occupied' → logprob: -5.246389865875244
    10. ' free' → logprob: -5.496389865875244

Token 1065: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.1271698921918869
    2. ' free' → logprob: -3.3771698474884033
    3. 'interval' → logprob: -3.7521698474884033
    4. 'free' → logprob: -3.8771698474884033
    5. '_free' → logprob: -4.377170085906982
    6. 'from' → logprob: -4.502170085906982
    7. ' from' → logprob: -5.502170085906982
    8. ' for' → logprob: -6.502170085906982
    9. '       ' → logprob: -6.627170085906982
    10. '   ' → logprob: -6.627170085906982

Token 1066: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6884385943412781
    2. '       ' → logprob: -0.9384385943412781
    3. ' from' → logprob: -2.313438653945923
    4. 'for' → logprob: -5.813438415527344
    5. ' for' → logprob: -5.938438415527344
    6. '_from' → logprob: -6.688438415527344
    7. ',' → logprob: -8.813438415527344
    8. '   ' → logprob: -9.438438415527344
    9. '```' → logprob: -9.438438415527344
    10. ' in' → logprob: -9.688438415527344

Token 1067: ' free' (ID: 2240)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09457370638847351
    2. ' self' → logprob: -2.969573736190796
    3. 'free' → logprob: -3.844573736190796
    4. ' free' → logprob: -4.094573497772217
    5. 'fi' → logprob: -7.469573497772217
    6. '       ' → logprob: -8.719573974609375
    7. ' the' → logprob: -10.219573974609375
    8. 'the' → logprob: -10.344573974609375
    9. '           ' → logprob: -11.094573974609375
    10. '```' → logprob: -11.344573974609375

Token 1068: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -5.800739018013701e-05
    2. 'interval' → logprob: -10.5000581741333
    3. '       ' → logprob: -10.7500581741333
    4. 'inter' → logprob: -12.2500581741333
    5. 'self' → logprob: -13.6250581741333
    6. '_interval' → logprob: -14.2500581741333
    7. '(self' → logprob: -14.6250581741333
    8. ' intervals' → logprob: -14.7500581741333
    9. '   ' → logprob: -14.8750581741333
    10. '
' → logprob: -15.1250581741333

Token 1069: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.04514887556433678
    2. 'als' → logprob: -3.2951488494873047
    3. 'erv' → logprob: -5.420148849487305
    4. 't' → logprob: -7.170148849487305
    5. 'val' → logprob: -7.420148849487305
    6. '```' → logprob: -7.795148849487305
    7. '   ' → logprob: -8.545148849487305
    8. '[' → logprob: -9.545148849487305
    9. 'ter' → logprob: -9.920148849487305
    10. 'r' → logprob: -10.170148849487305

Token 1070: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.216327965259552
    2. 'for' → logprob: -1.7163279056549072
    3. ' for' → logprob: -4.216328144073486
    4. '
' → logprob: -11.216327667236328
    5. '```' → logprob: -11.216327667236328
    6. '   ' → logprob: -11.466327667236328
    7. ',' → logprob: -11.716327667236328
    8. '           ' → logprob: -13.466327667236328
    9. '        
' → logprob: -13.466327667236328
    10. '	for' → logprob: -13.966327667236328

Token 1071: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004206732381135225
    2. 'for' → logprob: -5.504206657409668
    3. ' for' → logprob: -9.004206657409668
    4. '   ' → logprob: -12.879206657409668
    5. '```' → logprob: -13.754206657409668
    6. '           ' → logprob: -14.129206657409668
    7. ',' → logprob: -14.254206657409668
    8. '
' → logprob: -15.379206657409668
    9. 'self' → logprob: -16.879207611083984
    10. '	for' → logprob: -17.254207611083984

Token 1072: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12718290090560913
    2. ' for' → logprob: -2.377182960510254
    3. '       ' → logprob: -3.627182960510254
    4. '   ' → logprob: -11.252182960510254
    5. '```' → logprob: -12.002182960510254
    6. '	for' → logprob: -12.627182960510254
    7. 'idx' → logprob: -14.002182960510254
    8. ' ' → logprob: -14.502182960510254
    9. '           ' → logprob: -15.627182960510254
    10. '``' → logprob: -15.752182960510254

Token 1073: ' s' (ID: 265)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.07656392455101013
    2. 's' → logprob: -2.826563835144043
    3. '(start' → logprob: -4.951563835144043
    4. 'interval' → logprob: -5.201563835144043
    5. 'block' → logprob: -6.576563835144043
    6. '(s' → logprob: -8.451563835144043
    7. 'ist' → logprob: -8.951563835144043
    8. 'st' → logprob: -9.951563835144043
    9. '(block' → logprob: -10.326563835144043
    10. '   ' → logprob: -11.201563835144043

Token 1074: ',e' (ID: 43127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025279464200139046
    2. 't' → logprob: -3.7752795219421387
    3. ',start' → logprob: -7.025279521942139
    4. ',t' → logprob: -7.400279521942139
    5. ',e' → logprob: -8.52527904510498
    6. ' ,' → logprob: -8.65027904510498
    7. '_,' → logprob: -9.77527904510498
    8. 'start' → logprob: -10.15027904510498
    9. 'art' → logprob: -10.65027904510498
    10. ',end' → logprob: -11.27527904510498

Token 1075: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1188686341047287
    2. 'in' → logprob: -2.243868589401245
    3. ',' → logprob: -5.118868827819824
    4. ' ,' → logprob: -11.118868827819824
    5. ',in' → logprob: -11.743868827819824
    6. '   ' → logprob: -12.368868827819824
    7. ' ' → logprob: -12.368868827819824
    8. 's' → logprob: -12.743868827819824
    9. ')' → logprob: -13.118868827819824
    10. '  ' → logprob: -13.368868827819824

Token 1076: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.000553151941858232
    2. ' intervals' → logprob: -7.500553131103516
    3. '(interval' → logprob: -16.625553131103516
    4. '
' → logprob: -18.125553131103516
    5. '   ' → logprob: -18.500553131103516
    6. 'self' → logprob: -20.125553131103516
    7. 'inter' → logprob: -21.375553131103516
    8. ' ' → logprob: -21.625553131103516
    9. '[' → logprob: -21.875553131103516
    10. ' interval' → logprob: -22.250553131103516

Token 1077: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38849976658821106
    2. ':
' → logprob: -1.1384997367858887
    3. '           ' → logprob: -6.513499736785889
    4. '       ' → logprob: -9.888500213623047
    5. ':
' → logprob: -10.388500213623047
    6. ':self' → logprob: -10.638500213623047
    7. '):
' → logprob: -11.013500213623047
    8. ':

' → logprob: -11.763500213623047
    9. ',' → logprob: -12.388500213623047
    10. '   ' → logprob: -12.513500213623047

Token 1078: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.300083648762666e-05
    2. ' self' → logprob: -10.500053405761719
    3. 'self' → logprob: -10.875053405761719
    4. '   ' → logprob: -13.500053405761719
    5. '	       ' → logprob: -14.000053405761719
    6. '       ' → logprob: -14.125053405761719
    7. ',' → logprob: -14.250053405761719
    8. '
' → logprob: -14.500053405761719
    9. '```' → logprob: -14.500053405761719
    10. '		' → logprob: -15.250053405761719

Token 1079: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14790375530719757
    2. 'self' (adapté à ' self') → logprob: -2.1479036808013916
    3. ' self' → logprob: -3.8979036808013916
    4. '   ' → logprob: -7.772903919219971
    5. '       ' → logprob: -10.897903442382812
    6. ' ' → logprob: -11.147903442382812
    7. '	self' → logprob: -11.647903442382812
    8. '               ' → logprob: -12.522903442382812
    9. '  ' → logprob: -12.772903442382812
    10. '(self' → logprob: -13.397903442382812

Token 1080: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -6.194110756041482e-05
    2. '_remove' → logprob: -10.250061988830566
    3. '.remove' → logprob: -11.250061988830566
    4. '   ' → logprob: -11.625061988830566
    5. '.' → logprob: -13.250061988830566
    6. '_free' → logprob: -13.375061988830566
    7. '       ' → logprob: -14.125061988830566
    8. ']._' → logprob: -15.750061988830566
    9. '.\' → logprob: -17.00006103515625
    10. '.free' → logprob: -17.25006103515625

Token 1081: 'remove' (ID: 4942)
  Prédit: 'remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -3.547789674485102e-05
    2. '_remove' → logprob: -10.250035285949707
    3. ' remove' → logprob: -17.875036239624023
    4. '	remove' → logprob: -18.750036239624023
    5. '.remove' → logprob: -19.250036239624023
    6. '(remove' → logprob: -19.250036239624023
    7. '```' → logprob: -21.375036239624023
    8. 'free' → logprob: -22.000036239624023
    9. '
' → logprob: -22.125036239624023
    10. '_removed' → logprob: -22.625036239624023

Token 1082: '_free' (ID: 21204)
  Prédit: '_free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_free' → logprob: -2.935296834039036e-06
    2. '```' → logprob: -14.37500286102295
    3. '(_' → logprob: -14.62500286102295
    4. '
' → logprob: -14.62500286102295
    5. 'free' → logprob: -15.12500286102295
    6. ' _' → logprob: -15.12500286102295
    7. '_safe' → logprob: -15.37500286102295
    8. '\' → logprob: -15.37500286102295
    9. '(s' → logprob: -16.875003814697266
    10. '`' → logprob: -17.000003814697266

Token 1083: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00023858259373810142
    2. '(' → logprob: -8.375238418579102
    3. ' (' → logprob: -11.875238418579102
    4. 's' → logprob: -14.125238418579102
    5. '(
' → logprob: -14.875238418579102
    6. ',' → logprob: -19.0002384185791
    7. ' s' → logprob: -19.3752384185791
    8. ' ' → logprob: -19.5002384185791
    9. '(S' → logprob: -19.5002384185791
    10. '((' → logprob: -19.6252384185791

Token 1084: ',e' (ID: 43127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06215018779039383
    2. ',e' → logprob: -2.812150239944458
    3. ' ,' → logprob: -8.812150001525879
    4. ',
' → logprob: -10.687150001525879
    5. 'e' → logprob: -11.812150001525879
    6. '           ' → logprob: -12.812150001525879
    7. '       ' → logprob: -15.937150001525879
    8. ' e' → logprob: -16.312150955200195
    9. ',end' → logprob: -16.312150955200195
    10. ',
' → logprob: -16.812150955200195

Token 1085: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008164160535670817
    2. ')
' → logprob: -7.125816345214844
    3. '           ' → logprob: -12.000816345214844
    4. '       ' → logprob: -12.125816345214844
    5. ')
' → logprob: -15.875816345214844
    6. ' )' → logprob: -16.000816345214844
    7. ')

' → logprob: -16.625816345214844
    8. '   ' → logprob: -17.000816345214844
    9. ')`' → logprob: -17.750816345214844
    10. ')\
' → logprob: -18.125816345214844

Token 1086: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009859500452876091
    2. '           ' → logprob: -4.634859561920166
    3. '<|end|>' → logprob: -9.759859085083008
    4. ',' → logprob: -11.259859085083008
    5. '
' → logprob: -11.509859085083008
    6. ' for' → logprob: -12.009859085083008
    7. '        
' → logprob: -12.134859085083008
    8. '   ' → logprob: -12.134859085083008
    9. 'for' → logprob: -13.509859085083008
    10. ' ' → logprob: -13.634859085083008

Token 1087: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10504981875419617
    2. 'for' → logprob: -2.3550498485565186
    3. ' for' → logprob: -5.3550496101379395
    4. 'self' → logprob: -9.355050086975098
    5. '   ' → logprob: -11.480050086975098
    6. '           ' → logprob: -12.605050086975098
    7. '
' → logprob: -13.480050086975098
    8. 'file' → logprob: -13.605050086975098
    9. 'if' → logprob: -14.105050086975098
    10. '#' (adapté à ' #') → logprob: -14.230050086975098

Token 1088: ' Add' (ID: 4063)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5765564441680908
    2. 'self' → logprob: -1.5765564441680908
    3. 'if' → logprob: -1.7015564441680908
    4. '       ' → logprob: -3.076556444168091
    5. '#' → logprob: -6.576556205749512
    6. 'file' → logprob: -6.826556205749512
    7. 'existing' → logprob: -8.451556205749512
    8. 'prev' → logprob: -9.451556205749512
    9. 'old' → logprob: -9.826556205749512
    10. ' for' → logprob: -10.701556205749512

Token 1089: ' intervals' (ID: 49900)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4198781251907349
    2. '(fid' → logprob: -1.5448781251907349
    3. '(s' → logprob: -1.9198781251907349
    4. 'fid' → logprob: -2.2948780059814453
    5. ' intervals' → logprob: -2.5448780059814453
    6. 'interval' → logprob: -2.5448780059814453
    7. '       ' → logprob: -3.4198780059814453
    8. ' for' → logprob: -4.044878005981445
    9. '(' → logprob: -4.169878005981445
    10. ' (' → logprob: -4.294878005981445

Token 1090: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6375477910041809
    2. ' to' → logprob: -2.012547731399536
    3. 'for' → logprob: -2.012547731399536
    4. 'to' → logprob: -2.262547731399536
    5. ' for' → logprob: -2.512547731399536
    6. ',' → logprob: -4.387547969818115
    7. ' in' → logprob: -6.137547969818115
    8. '(' → logprob: -6.637547969818115
    9. '           ' → logprob: -7.137547969818115
    10. 'in' → logprob: -7.137547969818115

Token 1091: ' occupied' (ID: 46186)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0038200297858566046
    2. 'file' → logprob: -6.378819942474365
    3. '       ' → logprob: -6.628819942474365
    4. ' self' → logprob: -7.253819942474365
    5. '
' → logprob: -10.128820419311523
    6. '   ' → logprob: -11.003820419311523
    7. 'the' → logprob: -11.753820419311523
    8. 'fid' → logprob: -12.003820419311523
    9. ' file' → logprob: -12.128820419311523
    10. '           ' → logprob: -12.878820419311523

Token 1092: '_inter' (ID: 16818)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05136699602007866
    2. '       ' → logprob: -3.1763670444488525
    3. ' for' → logprob: -4.801366806030273
    4. ',' → logprob: -10.551366806030273
    5. 'self' → logprob: -10.676366806030273
    6. '(self' → logprob: -11.176366806030273
    7. '
' → logprob: -11.426366806030273
    8. '           ' → logprob: -12.051366806030273
    9. 'and' → logprob: -12.551366806030273
    10. '   ' → logprob: -12.551366806030273

Token 1093: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.14208540320396423
    2. 'als' → logprob: -2.142085313796997
    3. 'val' → logprob: -4.392085552215576
    4. '   ' → logprob: -6.767085552215576
    5. 'al' → logprob: -7.767085552215576
    6. '       ' → logprob: -7.892085552215576
    7. '```' → logprob: -8.642085075378418
    8. '
' → logprob: -9.892085075378418
    9. '           ' → logprob: -10.142085075378418
    10. '(self' → logprob: -10.267085075378418

Token 1094: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02494395337998867
    2. 'for' → logprob: -4.399943828582764
    3. ' for' → logprob: -4.399943828582764
    4. ',' → logprob: -9.774944305419922
    5. '
' → logprob: -11.899944305419922
    6. '<|end|>' → logprob: -12.149944305419922
    7. '           ' → logprob: -12.774944305419922
    8. '   ' → logprob: -13.024944305419922
    9. ' and' → logprob: -13.149944305419922
    10. '        
' → logprob: -13.899944305419922

Token 1095: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023621266707777977
    2. 'for' → logprob: -3.7736213207244873
    3. ' for' → logprob: -7.898621082305908
    4. '   ' → logprob: -13.023621559143066
    5. ',' → logprob: -14.148621559143066
    6. '```' → logprob: -14.148621559143066
    7. '           ' → logprob: -14.273621559143066
    8. '
' → logprob: -16.52362060546875
    9. '	for' → logprob: -17.14862060546875
    10. '        
' → logprob: -17.64862060546875

Token 1096: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.056797102093696594
    2. '       ' → logprob: -3.0567970275878906
    3. ' for' → logprob: -4.806797027587891
    4. '```' → logprob: -13.68179702758789
    5. '	for' → logprob: -14.68179702758789
    6. '   ' → logprob: -14.93179702758789
    7. '           ' → logprob: -16.18179702758789
    8. 'For' → logprob: -18.18179702758789
    9. '_for' → logprob: -18.55679702758789
    10. '
' → logprob: -18.68179702758789

Token 1097: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10134795308113098
    2. ' s' → logprob: -2.3513479232788086
    3. '(s' → logprob: -6.851347923278809
    4. ' (' → logprob: -9.726347923278809
    5. 'start' → logprob: -11.476347923278809
    6. '   ' → logprob: -11.976347923278809
    7. '       ' → logprob: -13.226347923278809
    8. '           ' → logprob: -13.476347923278809
    9. ' start' → logprob: -14.351347923278809
    10. '_s' → logprob: -14.351347923278809

Token 1098: ',e' (ID: 43127)
  Prédit: ',e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',e' → logprob: -0.07897108793258667
    2. ',' → logprob: -2.5789711475372314
    3. ' ,' → logprob: -9.453970909118652
    4. ',s' → logprob: -14.578970909118652
    5. ',
' → logprob: -14.828970909118652
    6. ',a' → logprob: -15.078970909118652
    7. 'e' → logprob: -15.078970909118652
    8. ',d' → logprob: -15.703970909118652
    9. ',o' → logprob: -15.953970909118652
    10. ',y' → logprob: -16.20397186279297

Token 1099: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017883826047182083
    2. ',e' → logprob: -4.767883777618408
    3. ' in' → logprob: -5.142883777618408
    4. ',in' → logprob: -6.517883777618408
    5. 'in' → logprob: -7.267883777618408
    6. ',f' → logprob: -7.517883777618408
    7. ',s' → logprob: -7.767883777618408
    8. ',self' → logprob: -9.767884254455566
    9. ',file' → logprob: -9.892884254455566
    10. ' ,' → logprob: -9.892884254455566

Token 1100: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.004078878089785576
    2. ' intervals' → logprob: -5.5040788650512695
    3. '(interval' → logprob: -15.12907886505127
    4. '   ' → logprob: -16.254079818725586
    5. 'self' → logprob: -16.629079818725586
    6. '
' → logprob: -17.379079818725586
    7. '       ' → logprob: -18.004079818725586
    8. '           ' → logprob: -18.754079818725586
    9. ',' → logprob: -18.879079818725586
    10. 'inter' → logprob: -19.129079818725586

Token 1101: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5205321907997131
    2. '           ' → logprob: -1.5205321311950684
    3. ':
' → logprob: -1.8955321311950684
    4. ':' → logprob: -3.3955321311950684
    5. '       ' → logprob: -6.145532131195068
    6. ',
' → logprob: -7.395532131195068
    7. '               ' → logprob: -8.145532608032227
    8. ',self' → logprob: -8.770532608032227
    9. '   ' → logprob: -9.645532608032227
    10. '):
' → logprob: -10.020532608032227

Token 1102: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001319063303526491
    2. 'self' → logprob: -9.500131607055664
    3. ' self' → logprob: -10.625131607055664
    4. '   ' → logprob: -11.250131607055664
    5. '       ' → logprob: -11.750131607055664
    6. '	       ' → logprob: -12.500131607055664
    7. '               ' → logprob: -13.000131607055664
    8. ',' → logprob: -13.875131607055664
    9. ':' → logprob: -13.875131607055664
    10. '```' → logprob: -13.875131607055664

Token 1103: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02364967204630375
    2. ' self' → logprob: -3.7736496925354004
    3. '           ' → logprob: -8.148649215698242
    4. '       ' → logprob: -9.523649215698242
    5. '   ' → logprob: -10.148649215698242
    6. ' ' → logprob: -13.773649215698242
    7. '	self' → logprob: -13.898649215698242
    8. '               ' → logprob: -14.773649215698242
    9. '  ' → logprob: -14.898649215698242
    10. '
' → logprob: -16.898649215698242

Token 1104: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0003978992172051221
    2. '.' → logprob: -8.250397682189941
    3. '   ' → logprob: -9.500397682189941
    4. '       ' → logprob: -9.875397682189941
    5. 'self' → logprob: -12.875397682189941
    6. ']._' → logprob: -13.000397682189941
    7. ')._' → logprob: -13.125397682189941
    8. ' .' → logprob: -14.000397682189941
    9. '```' → logprob: -14.250397682189941
    10. '.__' → logprob: -14.875397682189941

Token 1105: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -9.088346359931165e-07
    2. 'add' → logprob: -14.000000953674316
    3. '_add' → logprob: -20.125
    4. ' occupied' → logprob: -20.25
    5. 'owned' → logprob: -20.375
    6. '`' → logprob: -21.125
    7. '_' → logprob: -21.25
    8. 'oc' → logprob: -21.75
    9. '
' → logprob: -22.0
    10. '```' → logprob: -22.0

Token 1106: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.00010962257510982454
    2. 'add' → logprob: -9.375109672546387
    3. '_insert' → logprob: -10.750109672546387
    4. '_remove' → logprob: -13.000109672546387
    5. 'Add' → logprob: -14.125109672546387
    6. '_append' → logprob: -15.625109672546387
    7. '```' → logprob: -17.12510871887207
    8. 'insert' → logprob: -17.62510871887207
    9. '.add' → logprob: -19.37510871887207
    10. '
' → logprob: -19.50010871887207

Token 1107: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.002141101285815239
    2. 's' → logprob: -6.252140998840332
    3. ' (' → logprob: -9.002140998840332
    4. '(' → logprob: -9.377140998840332
    5. ' s' → logprob: -12.377140998840332
    6. '(
' → logprob: -14.877140998840332
    7. ',' → logprob: -17.87714195251465
    8. ')' → logprob: -17.87714195251465
    9. 'start' → logprob: -17.87714195251465
    10. '(start' → logprob: -17.87714195251465

Token 1108: ',e' (ID: 43127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2015116810798645
    2. ',e' → logprob: -1.7015116214752197
    3. ' ,' → logprob: -9.32651138305664
    4. ',
' → logprob: -12.07651138305664
    5. 'e' → logprob: -12.95151138305664
    6. ',end' → logprob: -14.95151138305664
    7. ')' → logprob: -15.70151138305664
    8. ',

' → logprob: -16.07651138305664
    9. '   ' → logprob: -16.57651138305664
    10. '```' → logprob: -16.70151138305664

Token 1109: ',f' (ID: 38733)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.062309589236974716
    2. ',f' → logprob: -2.812309503555298
    3. ' ,' → logprob: -8.812309265136719
    4. 'fid' → logprob: -9.062309265136719
    5. '(fid' → logprob: -10.062309265136719
    6. ' fid' → logprob: -10.312309265136719
    7. ',
' → logprob: -15.187309265136719
    8. 'f' → logprob: -15.187309265136719
    9. ',p' → logprob: -16.06230926513672
    10. ',d' → logprob: -16.18730926513672

Token 1110: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -1.8624639324116288e-06
    2. 'fid' → logprob: -13.250001907348633
    3. '(fid' → logprob: -17.875001907348633
    4. ' fid' → logprob: -19.500001907348633
    5. 'i' → logprob: -20.750001907348633
    6. 'idf' → logprob: -21.250001907348633
    7. '"id' → logprob: -21.625001907348633
    8. 'ид' → logprob: -22.875001907348633
    9. ' id' → logprob: -22.875001907348633
    10. '[id' → logprob: -22.875001907348633

Token 1111: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8074162653647363e-05
    2. ')
' → logprob: -11.250018119812012
    3. '<|end|>' → logprob: -12.875018119812012
    4. '       ' → logprob: -13.500018119812012
    5. ')return' → logprob: -15.000018119812012
    6. ' )' → logprob: -15.875018119812012
    7. ')#' → logprob: -16.500017166137695
    8. '())' → logprob: -16.500017166137695
    9. ')n' → logprob: -16.625017166137695
    10. ')view' → logprob: -16.750017166137695

Token 1112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007819918682798743
    2. '<|end|>' → logprob: -7.500782012939453
    3. '           ' → logprob: -9.125782012939453
    4. 'self' → logprob: -10.000782012939453
    5. 'file' → logprob: -11.000782012939453
    6. '   ' → logprob: -11.125782012939453
    7. '        
' → logprob: -11.750782012939453
    8. '
' → logprob: -11.750782012939453
    9. '```' → logprob: -12.125782012939453
    10. 'def' → logprob: -12.875782012939453

Token 1113: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39069366455078125
    2. 'self' (adapté à ' self') → logprob: -1.1406936645507812
    3. 'if' → logprob: -5.640693664550781
    4. '   ' → logprob: -8.640693664550781
    5. 'def' → logprob: -10.140693664550781
    6. ' self' → logprob: -10.515693664550781
    7. '
' → logprob: -11.765693664550781
    8. '        
' → logprob: -12.265693664550781
    9. ' if' → logprob: -12.515693664550781
    10. '```' → logprob: -13.765693664550781

Token 1114: '.file' (ID: 17613)
  Prédit: '.file'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.file' → logprob: -0.00011987409379798919
    2. '.' → logprob: -9.250120162963867
    3. '.user' → logprob: -10.875120162963867
    4. '._' → logprob: -12.750120162963867
    5. ' .' → logprob: -14.500120162963867
    6. ':file' → logprob: -15.500120162963867
    7. '=file' → logprob: -15.625120162963867
    8. '.class' → logprob: -16.000120162963867
    9. 'file' → logprob: -16.125120162963867
    10. '.filename' → logprob: -16.125120162963867

Token 1115: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -1.1472419600977446e-06
    2. 's' → logprob: -15.000000953674316
    3. '_inter' → logprob: -15.750000953674316
    4. '_id' → logprob: -16.000001907348633
    5. 'map' → logprob: -16.000001907348633
    6. '\' → logprob: -16.250001907348633
    7. 'Map' → logprob: -17.000001907348633
    8. 'id' → logprob: -17.125001907348633
    9. '"_' → logprob: -17.375001907348633
    10. '_' → logprob: -17.625001907348633

Token 1116: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -7.703443770878948e-06
    2. '.setdefault' → logprob: -12.125007629394531
    3. '(fid' → logprob: -14.500007629394531
    4. '[' → logprob: -14.625007629394531
    5. '[self' → logprob: -15.125007629394531
    6. '\[' → logprob: -15.250007629394531
    7. '```' → logprob: -15.250007629394531
    8. '__[' → logprob: -16.12500762939453
    9. '   ' → logprob: -16.37500762939453
    10. '[file' → logprob: -16.75000762939453

Token 1117: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -2.1008713702030946e-06
    2. '[id' → logprob: -13.625001907348633
    3. '[' → logprob: -14.625001907348633
    4. 'd' → logprob: -15.625001907348633
    5. '_id' → logprob: -16.500001907348633
    6. 'i' → logprob: -17.000001907348633
    7. 'ile' → logprob: -17.750001907348633
    8. '```' → logprob: -18.500001907348633
    9. 'fid' → logprob: -18.625001907348633
    10. '#' → logprob: -18.750001907348633

Token 1118: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010397175792604685
    2. ']=' → logprob: -6.876039505004883
    3. '].' → logprob: -12.876039505004883
    4. ' ]' → logprob: -13.126039505004883
    5. ']=(' → logprob: -13.251039505004883
    6. ']
' → logprob: -15.501039505004883
    7. ')' → logprob: -15.751039505004883
    8. '=' → logprob: -15.876039505004883
    9. '])' → logprob: -16.376039505004883
    10. '[' → logprob: -17.001039505004883

Token 1119: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001173917087726295
    2. ' =' → logprob: -6.751173973083496
    3. '=[' → logprob: -14.251173973083496
    4. '=set' → logprob: -14.751173973083496
    5. '=create' → logprob: -15.001173973083496
    6. '=new' → logprob: -15.251173973083496
    7. '＝' → logprob: -15.251173973083496
    8. '=True' → logprob: -15.376173973083496
    9. '=[]' → logprob: -15.376173973083496
    10. '=self' → logprob: -15.376173973083496

Token 1120: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0006149819819256663
    2. ' intervals' → logprob: -7.625615119934082
    3. '[(' → logprob: -9.125615119934082
    4. 'self' → logprob: -11.250615119934082
    5. '[]' → logprob: -13.000615119934082
    6. '[' → logprob: -13.375615119934082
    7. '(interval' → logprob: -14.250615119934082
    8. ' [(' → logprob: -15.125615119934082
    9. '[]
' → logprob: -16.125614166259766
    10. '[self' → logprob: -16.625614166259766

Token 1121: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44143763184547424
    2. '<|end|>' → logprob: -1.1914376020431519
    3. '   ' → logprob: -3.0664377212524414
    4. '    
' → logprob: -5.566437721252441
    5. '<|end|>' → logprob: -6.941437721252441
    6. '

' → logprob: -7.066437721252441
    7. '  
' → logprob: -8.566437721252441
    8. 'def' → logprob: -8.941437721252441
    9. '       ' → logprob: -8.941437721252441
    10. '```' → logprob: -8.941437721252441

Token 1122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2944066822528839
    2. '<|end|>' → logprob: -1.5444066524505615
    3. '
' → logprob: -3.4194066524505615
    4. 'def' → logprob: -5.294406890869141
    5. '    
' → logprob: -6.669406890869141
    6. '```' → logprob: -6.794406890869141
    7. '<|end|>' → logprob: -7.169406890869141
    8. ' ' → logprob: -8.29440689086914
    9. '

' → logprob: -9.79440689086914
    10. '       ' → logprob: -9.79440689086914

Token 1123: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.010547923855483532
    2. '   ' → logprob: -5.135548114776611
    3. '
' → logprob: -5.635548114776611
    4. ' def' → logprob: -6.885548114776611
    5. '```' → logprob: -11.885547637939453
    6. '    
' → logprob: -12.135547637939453
    7. '	def' → logprob: -12.885547637939453
    8. '<|end|>' → logprob: -13.510547637939453
    9. '

' → logprob: -14.635547637939453
    10. '        
' → logprob: -15.510547637939453

Token 1124: ' delete' (ID: 6168)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -1.1628742218017578
    2. 'read' → logprob: -1.4128742218017578
    3. ' delete' → logprob: -1.4128742218017578
    4. 'delete' → logprob: -2.412874221801758
    5. ' def' → logprob: -2.662874221801758
    6. 'def' → logprob: -3.412874221801758
    7. ' remove' → logprob: -5.662874221801758
    8. ' erase' → logprob: -6.412874221801758
    9. 'remove' → logprob: -6.787874221801758
    10. '   ' → logprob: -6.912874221801758

Token 1125: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001254693343071267
    2. '(' → logprob: -9.000125885009766
    3. ' (' → logprob: -13.250125885009766
    4. 'self' → logprob: -15.250125885009766
    5. '   ' → logprob: -17.250125885009766
    6. '_(' → logprob: -17.625125885009766
    7. '_file' → logprob: -17.750125885009766
    8. ' ' → logprob: -18.625125885009766
    9. '(
' → logprob: -19.125125885009766
    10. 'def' → logprob: -19.125125885009766

Token 1126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005336335860192776
    2. 'self' → logprob: -5.255336284637451
    3. ' ,' → logprob: -9.88033676147461
    4. ',self' → logprob: -10.50533676147461
    5. '(self' → logprob: -11.88033676147461
    6. ',f' → logprob: -12.00533676147461
    7. '   ' → logprob: -12.38033676147461
    8. '       ' → logprob: -13.13033676147461
    9. ',
' → logprob: -13.75533676147461
    10. ' self' → logprob: -13.88033676147461

Token 1127: ' fid' (ID: 34157)
  Prédit: 'fid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fid' → logprob: -0.008641516789793968
    2. ' fid' → logprob: -5.008641719818115
    3. 'self' → logprob: -6.258641719818115
    4. '(fid' → logprob: -12.258641242980957
    5. ' self' → logprob: -12.758641242980957
    6. 'f' → logprob: -13.258641242980957
    7. '   ' → logprob: -14.383641242980957
    8. '       ' → logprob: -15.008641242980957
    9. 'file' → logprob: -16.633642196655273
    10. ' ' → logprob: -17.508642196655273

Token 1128: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12703341245651245
    2. '):' → logprob: -2.1270334720611572
    3. '):
' → logprob: -9.752033233642578
    4. '       ' → logprob: -10.752033233642578
    5. '   ' → logprob: -10.877033233642578
    6. 'self' → logprob: -12.377033233642578
    7. '):

' → logprob: -13.877033233642578
    8. ')' → logprob: -13.877033233642578
    9. '(self' → logprob: -14.627033233642578
    10. ' ):
' → logprob: -16.502033233642578

Token 1129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.5107177862082608e-05
    2. '   ' → logprob: -11.500024795532227
    3. ' if' → logprob: -11.875024795532227
    4. 'if' → logprob: -12.000024795532227
    5. '```' → logprob: -14.125024795532227
    6. 'def' → logprob: -14.625024795532227
    7. 'self' → logprob: -15.125024795532227
    8. ',' → logprob: -16.250024795532227
    9. ':' → logprob: -16.625024795532227
    10. ' self' → logprob: -17.125024795532227

Token 1130: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03485041484236717
    2. 'if' (adapté à ' if') → logprob: -3.4098503589630127
    3. '   ' → logprob: -7.284850597381592
    4. ' if' → logprob: -8.659850120544434
    5. 'file' → logprob: -8.659850120544434
    6. 'interval' → logprob: -8.909850120544434
    7. ' intervals' → logprob: -10.534850120544434
    8. 'ifs' → logprob: -13.159850120544434
    9. '```' → logprob: -13.284850120544434
    10. 'def' → logprob: -13.909850120544434

Token 1131: ' fid' (ID: 34157)
  Prédit: ' fid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fid' → logprob: -0.023266442120075226
    2. 'fid' → logprob: -3.773266553878784
    3. '(fid' → logprob: -10.773266792297363
    4. 'f' → logprob: -17.023265838623047
    5. ' ' → logprob: -18.773265838623047
    6. '	f' → logprob: -18.898265838623047
    7. ' fiel' → logprob: -19.273265838623047
    8. ' fidel' → logprob: -19.398265838623047
    9. '
' → logprob: -19.523265838623047
    10. '   ' → logprob: -19.523265838623047

Token 1132: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03933297097682953
    2. ' in' → logprob: -3.539332866668701
    3. 'not' → logprob: -4.789332866668701
    4. 'in' → logprob: -6.789332866668701
    5. ' is' → logprob: -9.78933334350586
    6. ')' → logprob: -10.41433334350586
    7. ' ==' → logprob: -13.28933334350586
    8. 'is' → logprob: -13.91433334350586
    9. '	not' → logprob: -13.91433334350586
    10. '<|end|>' → logprob: -14.03933334350586

Token 1133: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11290834844112396
    2. 'in' → logprob: -2.237908363342285
    3. 'self' → logprob: -9.612908363342285
    4. ' self' → logprob: -11.112908363342285
    5. ',' → logprob: -13.987908363342285
    6. '       ' → logprob: -14.112908363342285
    7. ')' → logprob: -14.237908363342285
    8. '.' → logprob: -14.987908363342285
    9. '   ' → logprob: -14.987908363342285
    10. '<|end|>' → logprob: -14.987908363342285

Token 1134: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.639096970204264e-05
    2. ' self' → logprob: -9.250096321105957
    3. '       ' → logprob: -15.625096321105957
    4. '
' → logprob: -17.750097274780273
    5. '   ' → logprob: -18.375097274780273
    6. '(self' → logprob: -19.875097274780273
    7. '[self' → logprob: -20.875097274780273
    8. '           ' → logprob: -21.000097274780273
    9. '```' → logprob: -21.125097274780273
    10. '	self' → logprob: -21.500097274780273

Token 1135: '.file' (ID: 17613)
  Prédit: '.file'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.file' → logprob: -2.816093228830141e-06
    2. 'file' → logprob: -13.25000286102295
    3. '.' → logprob: -14.37500286102295
    4. '.f' → logprob: -16.000001907348633
    5. '._' → logprob: -16.625001907348633
    6. ' file' → logprob: -17.125001907348633
    7. '.user' → logprob: -17.875001907348633
    8. 'self' → logprob: -18.000001907348633
    9. ' .' → logprob: -18.125001907348633
    10. '.files' → logprob: -18.125001907348633

Token 1136: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -7.896309739408025e-07
    2. 'map' → logprob: -15.250000953674316
    3. 's' → logprob: -15.750000953674316
    4. '   ' → logprob: -15.875000953674316
    5. '_maps' → logprob: -16.625
    6. '_' → logprob: -17.375
    7. '       ' → logprob: -18.375
    8. 'Map' → logprob: -19.125
    9. '_id' → logprob: -19.25
    10. '_MAP' → logprob: -19.5

Token 1137: ':
' (ID: 734)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1138: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35098201036453247
    2. '       ' → logprob: -1.2259819507598877
    3. ':
' → logprob: -6.975982189178467
    4. ':' → logprob: -7.225982189178467
    5. 'return' → logprob: -7.600982189178467
    6. ',' → logprob: -8.850981712341309
    7. ' return' → logprob: -9.850981712341309
    8. '
' → logprob: -10.725981712341309
    9. '	       ' → logprob: -11.100981712341309
    10. '   ' → logprob: -11.225981712341309

Token 1139: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0015081972815096378
    2. '           ' → logprob: -6.7515082359313965
    3. ' return' → logprob: -8.001507759094238
    4. '
' → logprob: -12.751507759094238
    5. '	return' → logprob: -16.501508712768555
    6. '{return' → logprob: -17.126508712768555
    7. '   ' → logprob: -17.876508712768555
    8. '       ' → logprob: -18.001508712768555
    9. '               ' → logprob: -19.501508712768555
    10. '```' → logprob: -19.876508712768555

Token 1140: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009863656014204025
    2. '
' → logprob: -8.125986099243164
    3. ' intervals' → logprob: -8.125986099243164
    4. 'file' → logprob: -8.625986099243164
    5. 'interval' → logprob: -8.875986099243164
    6. '   ' → logprob: -10.375986099243164
    7. 'segments' → logprob: -11.125986099243164
    8. ' file' → logprob: -12.000986099243164
    9. 'fid' → logprob: -12.250986099243164
    10. 'for' → logprob: -12.500986099243164

Token 1142: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.3807975649833679
    2. 'for' → logprob: -1.6307976245880127
    3. '       ' → logprob: -2.1307976245880127
    4. ' intervals' → logprob: -6.380797386169434
    5. ' for' → logprob: -7.880797386169434
    6. 'ints' → logprob: -9.880797386169434
    7. '   ' → logprob: -11.255797386169434
    8. 'ranges' → logprob: -11.380797386169434
    9. 'inter' → logprob: -12.505797386169434
    10. 'segments' → logprob: -12.755797386169434

Token 1143: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931522488594055
    2. ' =' → logprob: -0.6931522488594055
    3. '       ' → logprob: -12.94315242767334
    4. 'for' → logprob: -13.81815242767334
    5. '   ' → logprob: -14.94315242767334
    6. ',' → logprob: -15.19315242767334
    7. '=
' → logprob: -15.44315242767334
    8. ':' → logprob: -15.56815242767334
    9. '        ' → logprob: -15.56815242767334
    10. ' for' → logprob: -15.56815242767334

Token 1144: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00033558503491804004
    2. ' self' → logprob: -8.000335693359375
    3. '[self' → logprob: -16.125335693359375
    4. '       ' → logprob: -16.750335693359375
    5. '(self' → logprob: -19.250335693359375
    6. '=self' → logprob: -20.125335693359375
    7. '	self' → logprob: -20.125335693359375
    8. '   ' → logprob: -20.125335693359375
    9. '
' → logprob: -20.250335693359375
    10. '        
' → logprob: -21.000335693359375

Token 1145: '.file' (ID: 17613)
  Prédit: '.file'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.file' → logprob: -0.018487386405467987
    2. 'self' → logprob: -4.018487453460693
    3. 'file' → logprob: -8.143486976623535
    4. '[self' → logprob: -10.643486976623535
    5. ' self' → logprob: -11.893486976623535
    6. '.' → logprob: -12.143486976623535
    7. '[file' → logprob: -12.268486976623535
    8. ' file' → logprob: -13.268486976623535
    9. '.user' → logprob: -13.268486976623535
    10. ' .' → logprob: -13.768486976623535

Token 1146: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.00010139751975657418
    2. 'map' → logprob: -9.250101089477539
    3. 's' → logprob: -13.625101089477539
    4. 'Map' → logprob: -14.125101089477539
    5. 'self' → logprob: -14.125101089477539
    6. '[f' → logprob: -14.250101089477539
    7. '[' → logprob: -14.500101089477539
    8. '   ' → logprob: -14.875101089477539
    9. '[self' → logprob: -15.500101089477539
    10. '_maps' → logprob: -15.625101089477539

Token 1147: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.023290198296308517
    2. '.pop' → logprob: -3.7732901573181152
    3. 'pop' → logprob: -10.273290634155273
    4. '(fid' → logprob: -11.648290634155273
    5. 'fid' → logprob: -14.273290634155273
    6. 'Pop' → logprob: -15.523290634155273
    7. '.get' → logprob: -15.898290634155273
    8. '   ' → logprob: -16.648290634155273
    9. ' pop' → logprob: -17.148290634155273
    10. '[id' → logprob: -17.273290634155273

Token 1148: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -4.143808109802194e-05
    2. 'fid' → logprob: -10.125041007995605
    3. 'd' → logprob: -14.625041007995605
    4. 'f' → logprob: -15.500041007995605
    5. '(fid' → logprob: -15.500041007995605
    6. '[' → logprob: -15.500041007995605
    7. ' fid' → logprob: -15.625041007995605
    8. '[id' → logprob: -16.500041961669922
    9. '[f' → logprob: -18.375041961669922
    10. 'if' → logprob: -18.625041961669922

Token 1149: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.07903926819562912
    2. ']' → logprob: -2.5790393352508545
    3. ']
' → logprob: -9.079039573669434
    4. '       ' → logprob: -10.454039573669434
    5. ' ]
' → logprob: -12.579039573669434
    6. ':]
' → logprob: -13.579039573669434
    7. ']:
' → logprob: -14.079039573669434
    8. '   ' → logprob: -14.329039573669434
    9. ' ]' → logprob: -15.079039573669434
    10. ']

' → logprob: -15.829039573669434

Token 1150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006735384464263916
    2. 'for' → logprob: -5.006735324859619
    3. ' for' → logprob: -11.006735801696777
    4. '   ' → logprob: -12.756735801696777
    5. '
' → logprob: -14.756735801696777
    6. '           ' → logprob: -16.75673484802246
    7. '```' → logprob: -16.88173484802246
    8. '	for' → logprob: -17.25673484802246
    9. 'del' → logprob: -17.25673484802246
    10. '        
' → logprob: -18.13173484802246

Token 1151: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023362528532743454
    2. '       ' → logprob: -3.773362636566162
    3. 'del' → logprob: -9.648362159729004
    4. ' for' → logprob: -9.898362159729004
    5. '```' → logprob: -13.523362159729004
    6. '	for' → logprob: -14.898362159729004
    7. '
' → logprob: -15.148362159729004
    8. '   ' → logprob: -15.523362159729004
    9. ' del' → logprob: -16.39836311340332
    10. '``' → logprob: -17.77336311340332

Token 1152: ' Remove' (ID: 18141)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.873571692267433e-05
    2. '       ' → logprob: -10.000068664550781
    3. 'del' → logprob: -10.750068664550781
    4. ' for' → logprob: -13.250068664550781
    5. 'For' → logprob: -18.25006866455078
    6. '   ' → logprob: -18.37506866455078
    7. '
' → logprob: -18.37506866455078
    8. '	for' → logprob: -18.62506866455078
    9. '```' → logprob: -19.00006866455078
    10. ' del' → logprob: -20.25006866455078

Token 1153: ' from' (ID: 591)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1154: ' occupied' (ID: 46186)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00641716318204999
    2. 'occupied' → logprob: -5.631417274475098
    3. ' self' → logprob: -5.881417274475098
    4. ' occupied' → logprob: -11.381417274475098
    5. '       ' → logprob: -12.256417274475098
    6. '   ' → logprob: -13.131417274475098
    7. 'for' → logprob: -13.381417274475098
    8. 'file' → logprob: -13.756417274475098
    9. '	self' → logprob: -15.131417274475098
    10. '```' → logprob: -15.506417274475098

Token 1155: '_inter' (ID: 16818)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8453223705291748
    2. 'interval' → logprob: -1.2203223705291748
    3. '       ' → logprob: -2.345322370529175
    4. ' intervals' → logprob: -2.470322370529175
    5. ' for' → logprob: -2.595322370529175
    6. 'self' → logprob: -4.470322608947754
    7. '   ' → logprob: -5.595322608947754
    8. '_inter' → logprob: -5.845322608947754
    9. '
' → logprob: -6.595322608947754
    10. '(self' → logprob: -8.345322608947754

Token 1156: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.05877666920423508
    2. '       ' → logprob: -3.058776617050171
    3. '   ' → logprob: -5.80877685546875
    4. 'val' → logprob: -5.80877685546875
    5. '           ' → logprob: -6.43377685546875
    6. 's' → logprob: -7.30877685546875
    7. '
' → logprob: -7.30877685546875
    8. '```' → logprob: -8.68377685546875
    9. '#' → logprob: -9.05877685546875
    10. 'r' → logprob: -9.30877685546875

Token 1157: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008033381775021553
    2. 'for' → logprob: -5.008033275604248
    3. ' for' → logprob: -6.633033275604248
    4. '   ' → logprob: -14.633033752441406
    5. '           ' → logprob: -15.133033752441406
    6. ',' → logprob: -16.008033752441406
    7. '	for' → logprob: -17.008033752441406
    8. '      ' → logprob: -17.508033752441406
    9. '
' → logprob: -17.758033752441406
    10. 'For' → logprob: -18.133033752441406

Token 1158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005774611607193947
    2. 'for' → logprob: -5.50577449798584
    3. ' for' → logprob: -6.38077449798584
    4. '           ' → logprob: -15.00577449798584
    5. '   ' → logprob: -15.25577449798584
    6. ',' → logprob: -16.255775451660156
    7. '	for' → logprob: -17.005775451660156
    8. '
' → logprob: -17.505775451660156
    9. '```' → logprob: -17.755775451660156
    10. '        
' → logprob: -18.130775451660156

Token 1159: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1741049587726593
    2. 'for' → logprob: -1.924104928970337
    3. '       ' → logprob: -4.299105167388916
    4. ' self' → logprob: -8.924104690551758
    5. ' for' → logprob: -9.674104690551758
    6. '   ' → logprob: -12.424104690551758
    7. '
' → logprob: -12.924104690551758
    8. '        
' → logprob: -14.424104690551758
    9. '	self' → logprob: -15.174104690551758
    10. ' ' → logprob: -15.549104690551758

Token 1160: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0005722135538235307
    2. '.' → logprob: -7.875572204589844
    3. '_' → logprob: -9.125572204589844
    4. '   ' → logprob: -9.625572204589844
    5. '_oc' → logprob: -12.250572204589844
    6. '       ' → logprob: -12.625572204589844
    7. '_file' → logprob: -13.125572204589844
    8. '_occ' → logprob: -13.375572204589844
    9. 'file' → logprob: -13.875572204589844
    10. 'def' → logprob: -14.375572204589844

Token 1161: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: 0.0
    2. 'owned' → logprob: -19.125
    3. ' occupied' → logprob: -20.5
    4. '`' → logprob: -21.75
    5. 'file' → logprob: -22.25
    6. 'remove' → logprob: -22.625
    7. '_' → logprob: -22.625
    8. '```' → logprob: -22.875
    9. '#' → logprob: -23.375
    10. 'allocated' → logprob: -23.5

Token 1162: '_remove' (ID: 41629)
  Prédit: '_remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -0.002475777640938759
    2. 'remove' → logprob: -6.002475738525391
    3. '_REMOVE' → logprob: -16.87747573852539
    4. 'Remove' → logprob: -17.25247573852539
    5. '_find' → logprob: -18.50247573852539
    6. '_replace' → logprob: -18.62747573852539
    7. '	remove' → logprob: -19.87747573852539
    8. '\' → logprob: -20.00247573852539
    9. '_clear' → logprob: -20.00247573852539
    10. '_delete' → logprob: -20.25247573852539

Token 1163: '_file' (ID: 5933)
  Prédit: '_file'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_file' → logprob: -2.4034345187828876e-05
    2. '(fid' → logprob: -11.37502384185791
    3. 'file' → logprob: -11.50002384185791
    4. '_f' → logprob: -13.87502384185791
    5. '(f' → logprob: -14.87502384185791
    6. 'fid' → logprob: -15.12502384185791
    7. '(file' → logprob: -15.37502384185791
    8. '
' → logprob: -16.000024795532227
    9. '_' → logprob: -16.375024795532227
    10. '```' → logprob: -16.625024795532227

Token 1164: '(fid' (ID: 109575)
  Prédit: '(fid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fid' → logprob: -2.8325677703833207e-05
    2. '(f' → logprob: -10.500028610229492
    3. '(' → logprob: -14.375028610229492
    4. '(fi' → logprob: -15.875028610229492
    5. '(fname' → logprob: -17.375028610229492
    6. '(fd' → logprob: -17.625028610229492
    7. 'fid' → logprob: -18.625028610229492
    8. ' (' → logprob: -19.375028610229492
    9. '(
' → logprob: -20.750028610229492
    10. '(pid' → logprob: -21.125028610229492

Token 1165: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6803798079490662
    2. '       ' → logprob: -1.180379867553711
    3. ')' → logprob: -1.680379867553711
    4. '
' → logprob: -9.930379867553711
    5. ',' → logprob: -10.930379867553711
    6. ')
' → logprob: -11.555379867553711
    7. '<|end|>' → logprob: -11.555379867553711
    8. '   ' → logprob: -11.680379867553711
    9. '),' → logprob: -12.930379867553711
    10. ')

' → logprob: -13.055379867553711

Token 1166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.191489642835222e-05
    2. 'for' → logprob: -10.250041961669922
    3. ' for' → logprob: -12.375041961669922
    4. '```' → logprob: -13.750041961669922
    5. '   ' → logprob: -13.875041961669922
    6. '<|end|>' → logprob: -16.125041961669922
    7. ' ' → logprob: -16.375041961669922
    8. '           ' → logprob: -17.000041961669922
    9. '
' → logprob: -17.000041961669922
    10. '        
' → logprob: -18.750041961669922

Token 1167: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04859315976500511
    2. '       ' → logprob: -3.048593044281006
    3. 'del' → logprob: -12.423593521118164
    4. ' for' → logprob: -13.423593521118164
    5. '   ' → logprob: -15.798593521118164
    6. '	for' → logprob: -16.673593521118164
    7. '```' → logprob: -16.923593521118164
    8. '#' (adapté à ' #') → logprob: -17.798593521118164
    9. '
' → logprob: -18.548593521118164
    10. '           ' → logprob: -19.048593521118164

Token 1168: ' Add' (ID: 4063)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00014013137842994183
    2. '       ' → logprob: -9.000140190124512
    3. 'del' → logprob: -11.375140190124512
    4. '#' → logprob: -12.250140190124512
    5. ' for' → logprob: -15.500140190124512
    6. '
' → logprob: -15.875140190124512
    7. 'For' → logprob: -16.500139236450195
    8. '   ' → logprob: -17.500139236450195
    9. '	for' → logprob: -18.375139236450195
    10. '
' → logprob: -20.625139236450195

Token 1169: ' back' (ID: 1602)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7043440937995911
    2. 'interval' → logprob: -1.2043440341949463
    3. 'free' → logprob: -2.2043440341949463
    4. '       ' → logprob: -3.9543440341949463
    5. ' for' → logprob: -4.079344272613525
    6. ' intervals' → logprob: -4.204344272613525
    7. ' free' → logprob: -4.704344272613525
    8. '   ' → logprob: -5.079344272613525
    9. '(interval' → logprob: -5.329344272613525
    10. '_free' → logprob: -5.579344272613525

Token 1170: ' to' (ID: 316)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.7428560853004456
    2. 'for' → logprob: -1.1178560256958008
    3. 'free' → logprob: -2.367856025695801
    4. 'the' → logprob: -3.742856025695801
    5. ' intervals' → logprob: -4.242856025695801
    6. ' for' → logprob: -4.742856025695801
    7. '       ' → logprob: -4.867856025695801
    8. '   ' → logprob: -4.867856025695801
    9. '_free' → logprob: -4.992856025695801
    10. '(interval' → logprob: -5.242856025695801

Token 1171: ' free' (ID: 2240)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.134780153632164
    2. 'free' → logprob: -2.259780168533325
    3. ' free' → logprob: -4.259779930114746
    4. ' self' → logprob: -5.009779930114746
    5. '_free' → logprob: -8.134779930114746
    6. 'the' → logprob: -8.259779930114746
    7. 'for' → logprob: -8.884779930114746
    8. '   ' → logprob: -9.884779930114746
    9. '       ' → logprob: -9.884779930114746
    10. ' the' → logprob: -10.384779930114746

Token 1172: ' intervals' (ID: 49900)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47727805376052856
    2. '       ' → logprob: -1.2272779941558838
    3. 'interval' → logprob: -2.477277994155884
    4. ' for' → logprob: -7.602278232574463
    5. '_inter' → logprob: -7.602278232574463
    6. 'inter' → logprob: -7.852278232574463
    7. ' intervals' → logprob: -7.977278232574463
    8. '   ' → logprob: -8.102277755737305
    9. 'self' → logprob: -8.852277755737305
    10. '(self' → logprob: -9.727277755737305

Token 1173: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023750975378789008
    2. 'for' → logprob: -8.375237464904785
    3. ' for' → logprob: -12.000237464904785
    4. '
' → logprob: -14.750237464904785
    5. '```' → logprob: -15.250237464904785
    6. '           ' → logprob: -17.0002384185791
    7. '   ' → logprob: -17.1252384185791
    8. ',' → logprob: -18.3752384185791
    9. '      ' → logprob: -18.8752384185791
    10. '        
' → logprob: -19.2502384185791

Token 1174: ' merge' (ID: 20345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1058548241853714
    2. '       ' → logprob: -2.3558547496795654
    3. ' for' → logprob: -5.6058549880981445
    4. '
' → logprob: -6.8558549880981445
    5. 'del' → logprob: -7.2308549880981445
    6. '#' → logprob: -9.230854988098145
    7. 'clear' → logprob: -10.980854988098145
    8. ':' → logprob: -11.355854988098145
    9. 'remove' → logprob: -11.605854988098145
    10. '        
' → logprob: -11.605854988098145

Token 1175: ' automatically' (ID: 14188)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05543563514947891
    2. 'for' → logprob: -2.9304356575012207
    3. ' for' → logprob: -7.930435657501221
    4. '```' → logprob: -9.180435180664062
    5. '(' → logprob: -10.055435180664062
    6. '
' → logprob: -10.555435180664062
    7. '   ' → logprob: -12.180435180664062
    8. '(self' → logprob: -12.555435180664062
    9. 'self' → logprob: -12.930435180664062
    10. '           ' → logprob: -13.180435180664062

Token 1176: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018010808853432536
    2. 'for' → logprob: -6.376801013946533
    3. ' for' → logprob: -9.626801490783691
    4. '```' → logprob: -10.501801490783691
    5. '
' → logprob: -12.376801490783691
    6. '        
' → logprob: -14.876801490783691
    7. '``' → logprob: -15.126801490783691
    8. '   ' → logprob: -15.501801490783691
    9. '           ' → logprob: -16.126800537109375
    10. '<|end|>' → logprob: -16.376800537109375

Token 1177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023810577113181353
    2. 'for' → logprob: -8.375238418579102
    3. '```' → logprob: -12.000238418579102
    4. ' for' → logprob: -13.625238418579102
    5. '   ' → logprob: -16.1252384185791
    6. '           ' → logprob: -17.3752384185791
    7. '``' → logprob: -18.7502384185791
    8. 'import' → logprob: -19.1252384185791
    9. ' ' → logprob: -19.2502384185791
    10. 'from' → logprob: -19.3752384185791

Token 1178: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03045492433011532
    2. '       ' → logprob: -3.5304548740386963
    3. ' for' → logprob: -7.280455112457275
    4. '```' → logprob: -11.155454635620117
    5. '	for' → logprob: -14.530454635620117
    6. '
' → logprob: -14.655454635620117
    7. '   ' → logprob: -16.030454635620117
    8. '``' → logprob: -17.155454635620117
    9. '           ' → logprob: -18.155454635620117
    10. '        
' → logprob: -18.280454635620117

Token 1179: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1245722845196724
    2. ' s' → logprob: -2.374572277069092
    3. 'start' → logprob: -3.874572277069092
    4. '(s' → logprob: -6.249572277069092
    5. ' start' → logprob: -6.999572277069092
    6. ' (' → logprob: -8.37457275390625
    7. '(start' → logprob: -8.99957275390625
    8. '   ' → logprob: -9.24957275390625
    9. 'interval' → logprob: -11.87457275390625
    10. '(' → logprob: -12.99957275390625

Token 1180: ',e' (ID: 43127)
  Prédit: ',e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',e' → logprob: -0.1604081243276596
    2. ',' → logprob: -1.9104081392288208
    3. ',s' → logprob: -8.785408020019531
    4. ' ,' → logprob: -11.035408020019531
    5. ',t' → logprob: -12.285408020019531
    6. ',c' → logprob: -13.160408020019531
    7. ',v' → logprob: -13.785408020019531
    8. 'e' → logprob: -14.035408020019531
    9. ',f' → logprob: -14.160408020019531
    10. ',in' → logprob: -14.160408020019531

Token 1181: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07890091091394424
    2. 'in' → logprob: -2.5789008140563965
    3. '       ' → logprob: -11.953901290893555
    4. ',' → logprob: -13.328901290893555
    5. '   ' → logprob: -13.453901290893555
    6. '           ' → logprob: -14.078901290893555
    7. '	in' → logprob: -15.453901290893555
    8. '        ' → logprob: -15.703901290893555
    9. 's' → logprob: -16.078901290893555
    10. 'import' → logprob: -16.328901290893555

Token 1182: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.04027189686894417
    2. ' intervals' → logprob: -3.6652719974517822
    3. 'self' → logprob: -4.290271759033203
    4. ' self' → logprob: -9.040271759033203
    5. '   ' → logprob: -10.040271759033203
    6. '
' → logprob: -12.790271759033203
    7. '(interval' → logprob: -13.040271759033203
    8. '       ' → logprob: -13.290271759033203
    9. '    ' → logprob: -14.040271759033203
    10. '           ' → logprob: -14.290271759033203

Token 1183: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6208518743515015
    2. '           ' → logprob: -1.2458518743515015
    3. ':' → logprob: -1.7458518743515015
    4. '):
' → logprob: -8.870851516723633
    5. '       ' → logprob: -9.995851516723633
    6. ',' → logprob: -10.370851516723633
    7. '   ' → logprob: -10.620851516723633
    8. '               ' → logprob: -10.870851516723633
    9. ' in' → logprob: -11.245851516723633
    10. '          ' → logprob: -11.495851516723633

Token 1184: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00025764419115148485
    2. ' self' → logprob: -8.75025749206543
    3. 'self' → logprob: -9.25025749206543
    4. '   ' → logprob: -14.12525749206543
    5. '	       ' → logprob: -14.25025749206543
    6. '          ' → logprob: -14.75025749206543
    7. '(self' → logprob: -15.00025749206543
    8. '               ' → logprob: -15.50025749206543
    9. ' ' → logprob: -15.75025749206543
    10. '       ' → logprob: -16.00025749206543

Token 1185: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08384382724761963
    2. ' self' → logprob: -2.83384370803833
    3. '           ' → logprob: -3.83384370803833
    4. '   ' → logprob: -11.833844184875488
    5. '	self' → logprob: -13.083844184875488
    6. '               ' → logprob: -13.708844184875488
    7. '       ' → logprob: -13.833844184875488
    8. ' ' → logprob: -14.458844184875488
    9. '(self' → logprob: -16.208843231201172
    10. '          ' → logprob: -16.583843231201172

Token 1186: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.747814349073451e-05
    2. '.' → logprob: -11.500017166137695
    3. '   ' → logprob: -12.625017166137695
    4. '       ' → logprob: -12.750017166137695
    5. '_free' → logprob: -15.000017166137695
    6. '.free' → logprob: -15.250017166137695
    7. ' .' → logprob: -15.500017166137695
    8. '.add' → logprob: -16.625017166137695
    9. '.__' → logprob: -17.250017166137695
    10. '           ' → logprob: -17.250017166137695

Token 1187: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.1472419600977446e-06
    2. '_add' → logprob: -13.750000953674316
    3. ' add' → logprob: -19.375001907348633
    4. 'remove' → logprob: -20.750001907348633
    5. '	add' → logprob: -21.125001907348633
    6. 'free' → logprob: -21.750001907348633
    7. '.add' → logprob: -21.875001907348633
    8. '
' → logprob: -22.125001907348633
    9. '`' → logprob: -22.250001907348633
    10. '   ' → logprob: -22.625001907348633

Token 1188: '_free' (ID: 21204)
  Prédit: '_free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_free' → logprob: -1.5213274309644476e-05
    2. 'free' → logprob: -11.125015258789062
    3. '(_' → logprob: -16.000015258789062
    4. '_FREE' → logprob: -16.625015258789062
    5. ' free' → logprob: -16.750015258789062
    6. '(' → logprob: -16.875015258789062
    7. 'Free' → logprob: -17.250015258789062
    8. '(s' → logprob: -17.500015258789062
    9. '   ' → logprob: -17.625015258789062
    10. '_f' → logprob: -17.625015258789062

Token 1189: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0004988207365386188
    2. '(' → logprob: -7.6254987716674805
    3. ' (' → logprob: -11.87549877166748
    4. 's' → logprob: -12.62549877166748
    5. '(
' → logprob: -14.62549877166748
    6. ' s' → logprob: -16.375499725341797
    7. '(e' → logprob: -17.250499725341797
    8. '((' → logprob: -17.625499725341797
    9. ' ' → logprob: -18.125499725341797
    10. '   ' → logprob: -18.750499725341797

Token 1190: ',e' (ID: 43127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16033826768398285
    2. ',e' → logprob: -1.910338282585144
    3. ' ,' → logprob: -9.160338401794434
    4. ',
' → logprob: -12.035338401794434
    5. '           ' → logprob: -14.160338401794434
    6. 'e' → logprob: -14.285338401794434
    7. '+' → logprob: -14.660338401794434
    8. ',end' → logprob: -14.910338401794434
    9. '   ' → logprob: -15.160338401794434
    10. '       ' → logprob: -15.785338401794434

Token 1191: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013238313840702176
    2. ')
' → logprob: -9.00013256072998
    3. '       ' → logprob: -11.87513256072998
    4. '<|end|>' → logprob: -13.50013256072998
    5. ')

' → logprob: -16.125131607055664
    6. ' )' → logprob: -16.125131607055664
    7. ')return' → logprob: -16.250131607055664
    8. ')#' → logprob: -16.375131607055664
    9. '())' → logprob: -17.625131607055664
    10. '   ' → logprob: -17.625131607055664

Token 1192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008731092675589025
    2. 'del' → logprob: -7.25087308883667
    3. 'def' → logprob: -9.500873565673828
    4. '   ' → logprob: -9.875873565673828
    5. ' del' → logprob: -11.000873565673828
    6. '
' → logprob: -12.250873565673828
    7. '<|end|>' → logprob: -12.250873565673828
    8. '           ' → logprob: -12.375873565673828
    9. '```' → logprob: -13.125873565673828
    10. '        
' → logprob: -13.375873565673828

Token 1193: ' del' (ID: 1083)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020865457132458687
    2. 'del' (adapté à ' del') → logprob: -3.8958654403686523
    3. ' del' → logprob: -8.395865440368652
    4. '   ' → logprob: -9.520865440368652
    5. 'def' → logprob: -12.270865440368652
    6. '
' → logprob: -12.270865440368652
    7. '	del' → logprob: -12.520865440368652
    8. '<|end|>' → logprob: -12.770865440368652
    9. '           ' → logprob: -12.895865440368652
    10. 'self' → logprob: -13.395865440368652

Token 1194: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.061967913061380386
    2. ' self' → logprob: -2.8119678497314453
    3. '[self' → logprob: -16.061967849731445
    4. '	self' → logprob: -17.436967849731445
    5. '       ' → logprob: -17.811967849731445
    6. '(self' → logprob: -18.061967849731445
    7. '   ' → logprob: -19.686967849731445
    8. '```' → logprob: -21.061967849731445
    9. ' ' → logprob: -21.561967849731445
    10. '=self' → logprob: -21.811967849731445

Token 1195: '.file' (ID: 17613)
  Prédit: '.file'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.file' → logprob: -5.512236498361744e-07
    2. '.' → logprob: -15.000000953674316
    3. ' .' → logprob: -16.75
    4. 'file' → logprob: -18.125
    5. '.user' → logprob: -18.75
    6. ' file' → logprob: -19.5
    7. ':file' → logprob: -21.25
    8. '.f' → logprob: -21.375
    9. '._' → logprob: -21.5
    10. '.File' → logprob: -21.625

Token 1196: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -4.320199877838604e-07
    2. 's' → logprob: -15.75
    3. 'map' → logprob: -16.625
    4. '_maps' → logprob: -17.25
    5. '_MAP' → logprob: -18.125
    6. 'Map' → logprob: -18.5
    7. '_' → logprob: -18.875
    8. '_mapping' → logprob: -19.5
    9. '\' → logprob: -19.75
    10. '__' → logprob: -20.375

Token 1197: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.875000953674316
    3. '[self' → logprob: -15.125000953674316
    4. 'fid' → logprob: -16.5
    5. ' [' → logprob: -17.0
    6. '[file' → logprob: -17.875
    7. '(fid' → logprob: -17.875
    8. '   ' → logprob: -19.875
    9. '[s' → logprob: -21.125
    10. '       ' → logprob: -21.25

Token 1198: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.08179134130477905
    2. 'fid' → logprob: -2.581791400909424
    3. '(fid' → logprob: -6.081791400909424
    4. ' fid' → logprob: -8.581790924072266
    5. 'f' → logprob: -8.831790924072266
    6. '[' → logprob: -8.956790924072266
    7. '[f' → logprob: -9.456790924072266
    8. 'd' → logprob: -9.831790924072266
    9. '[id' → logprob: -11.706790924072266
    10. '   ' → logprob: -13.206790924072266

Token 1199: ']

' (ID: 3144)
  Prédit: '[f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.00198121415451169
    2. ']' → logprob: -6.251981258392334
    3. '(fid' → logprob: -10.501980781555176
    4. '[' → logprob: -11.001980781555176
    5. '][' → logprob: -12.126980781555176
    6. 'fid' → logprob: -13.501980781555176
    7. ')' → logprob: -14.751980781555176
    8. '[id' → logprob: -14.876980781555176
    9. 'f' → logprob: -15.376980781555176
    10. ']
' → logprob: -15.501980781555176

Token 1200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0642133578658104
    2. 'def' → logprob: -2.939213275909424
    3. '<|end|>' → logprob: -4.939213275909424
    4. '
' → logprob: -7.064213275909424
    5. '```' → logprob: -7.689213275909424
    6. '    
' → logprob: -7.939213275909424
    7. ' def' → logprob: -8.439213752746582
    8. '	def' → logprob: -9.564213752746582
    9. ' ' → logprob: -10.189213752746582
    10. '<|end|>' → logprob: -10.814213752746582

Token 1201: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00030817187507636845
    2. '   ' → logprob: -8.1253080368042
    3. ' def' → logprob: -12.6253080368042
    4. '```' → logprob: -12.7503080368042
    5. '    
' → logprob: -13.1253080368042
    6. '
' → logprob: -13.3753080368042
    7. '#' → logprob: -14.0003080368042
    8. '	def' → logprob: -14.1253080368042
    9. '<|end|>' → logprob: -15.0003080368042
    10. 'de' → logprob: -16.250308990478516

Token 1202: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.005799385719001293
    2. 'query' → logprob: -6.005799293518066
    3. ' read' → logprob: -6.380799293518066
    4. 'def' → logprob: -6.755799293518066
    5. ' def' → logprob: -8.755799293518066
    6. 'get' → logprob: -9.505799293518066
    7. '_read' → logprob: -9.505799293518066
    8. 'find' → logprob: -9.630799293518066
    9. 'lookup' → logprob: -10.880799293518066
    10. 'list' → logprob: -11.130799293518066

Token 1203: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00016098834748845547
    2. '(' → logprob: -8.750161170959473
    3. '   ' → logprob: -13.500161170959473
    4. 'self' → logprob: -14.500161170959473
    5. '(
' → logprob: -15.000161170959473
    6. 'def' → logprob: -16.250160217285156
    7. '       ' → logprob: -16.250160217285156
    8. ' (' → logprob: -16.625160217285156
    9. ' ' → logprob: -17.875160217285156
    10. '(fid' → logprob: -18.000160217285156

Token 1204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13625319302082062
    2. '(self' → logprob: -2.1362531185150146
    3. 'self' → logprob: -4.761253356933594
    4. ',self' → logprob: -8.511253356933594
    5. '   ' → logprob: -8.886253356933594
    6. '       ' → logprob: -8.886253356933594
    7. '(' → logprob: -9.511253356933594
    8. ',
' → logprob: -10.511253356933594
    9. ')' → logprob: -10.636253356933594
    10. ' self' → logprob: -10.761253356933594

Token 1205: ' sector' (ID: 11207)
  Prédit: 'fid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fid' → logprob: -0.5466511845588684
    2. 'self' → logprob: -0.9216511845588684
    3. ' fid' → logprob: -4.421651363372803
    4. ' self' → logprob: -4.921651363372803
    5. 'sector' → logprob: -5.796651363372803
    6. 'start' → logprob: -7.546651363372803
    7. 'offset' → logprob: -9.046650886535645
    8. ' sector' → logprob: -10.046650886535645
    9. '(fid' → logprob: -10.171650886535645
    10. 'pos' → logprob: -10.546650886535645

Token 1206: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00042804674012586474
    2. 'self' → logprob: -8.750428199768066
    3. '       ' → logprob: -9.000428199768066
    4. '):' → logprob: -9.750428199768066
    5. '):
' → logprob: -9.875428199768066
    6. ',self' → logprob: -11.000428199768066
    7. ' ,' → logprob: -11.625428199768066
    8. '   ' → logprob: -12.250428199768066
    9. ',
' → logprob: -13.000428199768066
    10. '(self' → logprob: -13.625428199768066

Token 1207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.513339445111342e-05
    2. '```' → logprob: -10.750044822692871
    3. '   ' → logprob: -11.750044822692871
    4. 'def' → logprob: -12.125044822692871
    5. 'self' → logprob: -12.250044822692871
    6. '(self' → logprob: -12.875044822692871
    7. ',' → logprob: -15.000044822692871
    8. 'return' → logprob: -15.125044822692871
    9. 'sector' → logprob: -15.125044822692871
    10. '`' → logprob: -15.250044822692871

Token 1208: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0069692134857177734
    2. '       ' → logprob: -5.006969451904297
    3. 'fid' → logprob: -8.506969451904297
    4. 'file' → logprob: -10.631969451904297
    5. ' return' → logprob: -11.381969451904297
    6. 'ret' → logprob: -11.881969451904297
    7. 'res' → logprob: -11.881969451904297
    8. 'result' → logprob: -14.006969451904297
    9. '   ' → logprob: -14.881969451904297
    10. 'sector' → logprob: -15.006969451904297

Token 1209: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03806134685873985
    2. ' self' → logprob: -3.2880613803863525
    3. '-' → logprob: -12.038061141967773
    4. ' -' → logprob: -12.413061141967773
    5. '(self' → logprob: -12.663061141967773
    6. '   ' → logprob: -13.038061141967773
    7. '-self' → logprob: -13.038061141967773
    8. '
' → logprob: -13.788061141967773
    9. '	self' → logprob: -15.038061141967773
    10. '       ' → logprob: -15.288061141967773

Token 1210: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00040219054790213704
    2. '.' → logprob: -7.875401973724365
    3. '   ' → logprob: -11.625402450561523
    4. '       ' → logprob: -12.625402450561523
    5. '.read' → logprob: -13.125402450561523
    6. ' .' → logprob: -13.125402450561523
    7. '.__' → logprob: -13.375402450561523
    8. 'def' → logprob: -14.375402450561523
    9. ')._' → logprob: -14.625402450561523
    10. ',' → logprob: -15.125402450561523

Token 1211: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: 0.0
    2. ' occupied' → logprob: -20.625
    3. 'occup' → logprob: -21.75
    4. 'owned' → logprob: -21.875
    5. 'allocated' → logprob: -22.875
    6. '_' → logprob: -23.0
    7. 'read' → logprob: -23.0
    8. 'visited' → logprob: -23.25
    9. 'ocup' → logprob: -23.375
    10. 'occ' → logprob: -24.625

Token 1212: '_find' (ID: 52203)
  Prédit: '_find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_find' → logprob: -1.5570885807392187e-05
    2. '.find' → logprob: -12.125015258789062
    3. '_get' → logprob: -12.875015258789062
    4. 'Find' → logprob: -13.375015258789062
    5. '[' → logprob: -13.500015258789062
    6. 'find' → logprob: -13.500015258789062
    7. '_add' → logprob: -13.750015258789062
    8. '._' → logprob: -14.000015258789062
    9. '.' → logprob: -14.750015258789062
    10. '_FIND' → logprob: -15.625015258789062

Token 1213: '(se' (ID: 19430)
  Prédit: '(se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -0.002476724097505212
    2. '(' → logprob: -6.002476692199707
    3. 'sector' → logprob: -14.502476692199707
    4. '((' → logprob: -15.752476692199707
    5. '(space' → logprob: -15.877476692199707
    6. '(self' → logprob: -17.002477645874023
    7. ' (' → logprob: -17.127477645874023
    8. '_sector' → logprob: -17.252477645874023
    9. '_se' → logprob: -17.627477645874023
    10. ')' → logprob: -17.752477645874023

Token 1214: 'ctor' (ID: 4558)
  Prédit: 'ctor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ctor' → logprob: -1.676292231422849e-05
    2. 'ct' → logprob: -11.500017166137695
    3. 'sector' → logprob: -12.750017166137695
    4. 'ector' → logprob: -13.750017166137695
    5. 'CTOR' → logprob: -13.750017166137695
    6. '(' → logprob: -14.500017166137695
    7. 'ctors' → logprob: -14.875017166137695
    8. '```' → logprob: -16.625017166137695
    9. 'tor' → logprob: -16.875017166137695
    10. ')' → logprob: -16.875017166137695

Token 1215: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.070975071750581e-05
    2. '(' → logprob: -11.625030517578125
    3. '   ' → logprob: -11.750030517578125
    4. '       ' → logprob: -12.125030517578125
    5. ')
' → logprob: -12.250030517578125
    6. ' )' → logprob: -13.500030517578125
    7. '))' → logprob: -14.250030517578125
    8. ')return' → logprob: -14.875030517578125
    9. ',' → logprob: -15.625030517578125
    10. ' ' → logprob: -16.250030517578125

Token 1216: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.681914210319519
    2. '<|end|>' → logprob: -1.056914210319519
    3. '```' → logprob: -2.1819143295288086
    4. 'def' → logprob: -4.556914329528809
    5. '
' → logprob: -4.806914329528809
    6. '\n' → logprob: -5.056914329528809
    7. '<|end|>' → logprob: -5.681914329528809
    8. '[' → logprob: -6.806914329528809
    9. '\' → logprob: -6.931914329528809
    10. ')' → logprob: -7.181914329528809

Token 1217: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3706566393375397
    2. ' __' → logprob: -1.6206566095352173
    3. ' system' → logprob: -3.120656728744507
    4. ' File' → logprob: -3.995656728744507
    5. 'main' → logprob: -4.495656490325928
    6. ' sys' → logprob: -4.620656490325928
    7. '__' → logprob: -5.370656490325928
    8. 'system' → logprob: -5.495656490325928
    9. ' ' → logprob: -5.620656490325928
    10. ' _' → logprob: -5.745656490325928

Token 1218: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.280175097752362e-05
    2. '():
' → logprob: -9.875082969665527
    3. '()' → logprob: -10.750082969665527
    4. '(' → logprob: -12.250082969665527
    5. ' ():' → logprob: -12.500082969665527
    6. ':' → logprob: -14.375082969665527
    7. '().' → logprob: -15.500082969665527
    8. '():
' → logprob: -15.500082969665527
    9. '();' → logprob: -16.75008201599121
    10. '()>' → logprob: -17.12508201599121

Token 1219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022754082456231117
    2. 'fs' → logprob: -4.772754192352295
    3. ' fs' → logprob: -5.022754192352295
    4. 'import' → logprob: -5.397754192352295
    5. '	fs' → logprob: -7.147754192352295
    6. 'f' → logprob: -7.272754192352295
    7. ' import' → logprob: -7.397754192352295
    8. '```' → logprob: -8.147753715515137
    9. ' f' → logprob: -8.897753715515137
    10. '   ' → logprob: -10.022753715515137

Token 1220: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.210783839225769
    2. 'import' → logprob: -1.585783839225769
    3. ' for' → logprob: -1.585783839225769
    4. ' import' → logprob: -2.2107839584350586
    5. 'for' → logprob: -2.5857839584350586
    6. ' while' → logprob: -3.4607839584350586
    7. ' n' → logprob: -3.8357839584350586
    8. 'n' → logprob: -3.8357839584350586
    9. ' lines' → logprob: -3.9607839584350586
    10. 'while' (adapté à ' while') → logprob: -4.710783958435059

Token 1221: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.04862915351986885
    2. ' True' → logprob: -3.04862904548645
    3. '(True' → logprob: -10.173628807067871
    4. '1' → logprob: -12.673628807067871
    5. '=True' → logprob: -15.173628807067871
    6. 'true' → logprob: -15.798628807067871
    7. '   ' → logprob: -16.923629760742188
    8. ' ' → logprob: -17.423629760742188
    9. 'TRUE' → logprob: -17.423629760742188
    10. '
' → logprob: -17.798629760742188

Token 1222: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.8364067077636719
    2. ':' → logprob: -1.2114067077636719
    3. '():
' → logprob: -2.336406707763672
    4. '   ' → logprob: -2.336406707763672
    5. '       ' → logprob: -3.211406707763672
    6. ':
' → logprob: -3.836406707763672
    7. '(' → logprob: -5.086406707763672
    8. '(
' → logprob: -6.211406707763672
    9. ',' → logprob: -7.586406707763672
    10. ' :' → logprob: -7.711406707763672

Token 1223: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014121392741799355
    2. ' line' → logprob: -6.8764119148254395
    3. 'line' → logprob: -8.001412391662598
    4. '	line' → logprob: -10.626412391662598
    5. '       ' → logprob: -11.126412391662598
    6. 'try' → logprob: -12.376412391662598
    7. '   ' → logprob: -15.126412391662598
    8. ' try' → logprob: -15.376412391662598
    9. '```' → logprob: -15.751412391662598
    10. '(line' → logprob: -16.37641143798828

Token 1224: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.019215721637010574
    2. ' line' → logprob: -4.2692155838012695
    3. '   ' → logprob: -5.5192155838012695
    4. 'try' → logprob: -7.1442155838012695
    5. 'cmd' → logprob: -8.64421558380127
    6. 'command' → logprob: -10.51921558380127
    7. 'l' → logprob: -10.89421558380127
    8. '	line' → logprob: -11.51921558380127
    9. 's' → logprob: -12.26921558380127
    10. '_line' → logprob: -13.76921558380127

Token 1225: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048589076846838
    2. '=' → logprob: -3.048588991165161
    3. '=line' → logprob: -13.548588752746582
    4. '   ' → logprob: -15.923588752746582
    5. 's' → logprob: -16.1735897064209
    6. ' ' → logprob: -16.9235897064209
    7. '=input' → logprob: -17.2985897064209
    8. ' =
' → logprob: -17.9235897064209
    9. '＝' → logprob: -18.0485897064209
    10. '()' → logprob: -18.6735897064209

Token 1226: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.36546701192855835
    2. ' input' → logprob: -1.3654670715332031
    3. ' sys' → logprob: -3.365467071533203
    4. 'sys' → logprob: -4.115467071533203
    5. '       ' → logprob: -14.615467071533203
    6. '=sys' → logprob: -14.740467071533203
    7. '=input' → logprob: -15.115467071533203
    8. '(sys' → logprob: -15.240467071533203
    9. '   ' → logprob: -16.115467071533203
    10. 'stdin' → logprob: -16.490467071533203

Token 1227: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.133589968085289
    2. '().' → logprob: -2.50858998298645
    3. '()
' → logprob: -3.13358998298645
    4. '()
' → logprob: -9.883589744567871
    5. '=' → logprob: -11.508589744567871
    6. 'strip' → logprob: -11.633589744567871
    7. '(' → logprob: -11.758589744567871
    8. '.strip' → logprob: -11.758589744567871
    9. 'rstrip' → logprob: -12.133589744567871
    10. '()

' → logprob: -12.508589744567871

Token 1228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3724195063114166
    2. ' if' → logprob: -1.3724194765090942
    3. 'if' → logprob: -2.872419595718384
    4. '   ' → logprob: -7.622419357299805
    5. '	if' → logprob: -8.372419357299805
    6. ' ' → logprob: -10.247419357299805
    7. '<|end|>' → logprob: -10.372419357299805
    8. '	' → logprob: -11.122419357299805
    9. ',' → logprob: -11.122419357299805
    10. 'If' → logprob: -11.622419357299805

Token 1229: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.018150413408875465
    2. ' if' → logprob: -4.018150329589844
    3. '	if' → logprob: -15.393150329589844
    4. 'break' → logprob: -15.893150329589844
    5. '   ' → logprob: -16.018150329589844
    6. '       ' → logprob: -17.018150329589844
    7. 'If' → logprob: -17.143150329589844
    8. ';if' → logprob: -17.893150329589844
    9. '
' → logprob: -18.143150329589844
    10. '```' → logprob: -18.268150329589844

Token 1230: ' not' (ID: 625)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1231: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.004078401252627373
    2. ' line' → logprob: -5.504078388214111
    3. '#line' → logprob: -19.004077911376953
    4. '=line' → logprob: -19.754077911376953
    5. '[line' → logprob: -20.379077911376953
    6. '(line' → logprob: -20.379077911376953
    7. '	line' → logprob: -20.879077911376953
    8. '
' → logprob: -21.129077911376953
    9. '_line' → logprob: -23.629077911376953
    10. ' ' → logprob: -24.004077911376953

Token 1232: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.015085330232977867
    2. '.strip' → logprob: -4.765085220336914
    3. ':' → logprob: -5.140085220336914
    4. ' or' → logprob: -8.015085220336914
    5. '   ' → logprob: -9.265085220336914
    6. '.rstrip' → logprob: -9.515085220336914
    7. '.' → logprob: -10.140085220336914
    8. '.startswith' → logprob: -11.515085220336914
    9. 'strip' → logprob: -11.890085220336914
    10. '       ' → logprob: -12.140085220336914

Token 1233: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10725937783718109
    2. '           ' → logprob: -2.3572592735290527
    3. '   ' → logprob: -4.982259273529053
    4. ' break' → logprob: -9.857259750366211
    5. 'break' → logprob: -9.857259750366211
    6. ':' → logprob: -11.857259750366211
    7. '<|end|>' → logprob: -11.982259750366211
    8. ' ' → logprob: -11.982259750366211
    9. '	   ' → logprob: -12.107259750366211
    10. ',' → logprob: -12.232259750366211

Token 1234: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1208663061261177
    2. '       ' → logprob: -3.245866298675537
    3. ' break' → logprob: -3.245866298675537
    4. '   ' → logprob: -3.620866298675537
    5. 'break' (adapté à ' break') → logprob: -4.745866298675537
    6. ' ' → logprob: -8.495866775512695
    7. '               ' → logprob: -8.870866775512695
    8. '	break' → logprob: -9.745866775512695
    9. '
' → logprob: -9.870866775512695
    10. '_break' → logprob: -11.120866775512695

Token 1235: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.362307223957032e-05
    2. '   ' → logprob: -10.250073432922363
    3. '        
' → logprob: -10.500073432922363
    4. '<|end|>' → logprob: -12.125073432922363
    5. ',' → logprob: -12.750073432922363
    6. '           ' → logprob: -14.500073432922363
    7. '    
' → logprob: -14.875073432922363
    8. '.strip' → logprob: -15.500073432922363
    9. '	' → logprob: -15.750073432922363
    10. '```' → logprob: -16.00007438659668

Token 1236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004050025250762701
    2. '   ' → logprob: -5.629050254821777
    3. ' line' → logprob: -8.004050254821777
    4. 'line' → logprob: -9.254050254821777
    5. '```' → logprob: -12.379050254821777
    6. '	line' → logprob: -12.504050254821777
    7. '        
' → logprob: -13.129050254821777
    8. 'tokens' → logprob: -13.629050254821777
    9. '[line' → logprob: -13.754050254821777
    10. '	' → logprob: -13.879050254821777

Token 1237: ' N' (ID: 478)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6571201086044312
    2. 'line' → logprob: -1.0321201086044312
    3. ' line' → logprob: -2.4071202278137207
    4. 'parts' → logprob: -4.157120227813721
    5. ' parts' → logprob: -4.532120227813721
    6. 'cmd' → logprob: -5.032120227813721
    7. 'tokens' → logprob: -6.657120227813721
    8. 'command' → logprob: -8.032119750976562
    9. ' cmd' → logprob: -8.532119750976562
    10. '=line' → logprob: -8.782119750976562

Token 1238: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42956534028053284
    2. ' =' → logprob: -1.0545653104782104
    3. '=line' → logprob: -7.1795654296875
    4. '=int' → logprob: -9.5545654296875
    5. ',' → logprob: -11.1795654296875
    6. '   ' → logprob: -11.8045654296875
    7. '       ' → logprob: -12.9295654296875
    8. ')' → logprob: -13.8045654296875
    9. '=input' → logprob: -13.8045654296875
    10. '==' → logprob: -14.0545654296875

Token 1239: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01983192376792431
    2. 'line' → logprob: -4.519832134246826
    3. ' int' → logprob: -5.019832134246826
    4. 'len' → logprob: -6.269832134246826
    5. ' line' → logprob: -8.394831657409668
    6. ' len' → logprob: -11.019831657409668
    7. '   ' → logprob: -13.269831657409668
    8. '(int' → logprob: -14.269831657409668
    9. '(line' → logprob: -14.519831657409668
    10. '=int' → logprob: -14.769831657409668

Token 1240: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0024829115718603134
    2. 'line' → logprob: -6.002482891082764
    3. '(' → logprob: -12.127483367919922
    4. ' line' → logprob: -13.627483367919922
    5. '=line' → logprob: -15.752483367919922
    6. '(
' → logprob: -16.252483367919922
    7. '(N' → logprob: -16.377483367919922
    8. '#line' → logprob: -16.627483367919922
    9. 'N' → logprob: -16.877483367919922
    10. '[line' → logprob: -17.002483367919922

Token 1241: ')
' (ID: 446)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08039771765470505
    2. ')' → logprob: -3.080397605895996
    3. '())
' → logprob: -3.955397605895996
    4. '().' → logprob: -4.705397605895996
    5. '.strip' → logprob: -6.455397605895996
    6. '()' → logprob: -6.705397605895996
    7. ')
' → logprob: -8.955397605895996
    8. '()
' → logprob: -9.080397605895996
    9. ' ())' → logprob: -11.080397605895996
    10. '())
' → logprob: -11.455397605895996

Token 1242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009347076527774334
    2. 'for' → logprob: -5.259346961975098
    3. '   ' → logprob: -6.259346961975098
    4. ' for' → logprob: -6.634346961975098
    5. 'if' → logprob: -8.259346961975098
    6. '	' → logprob: -8.384346961975098
    7. '	for' → logprob: -9.009346961975098
    8. '<|end|>' → logprob: -9.384346961975098
    9. '```' → logprob: -10.134346961975098
    10. ' if' → logprob: -10.259346961975098

Token 1243: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04249788448214531
    2. '       ' → logprob: -3.6674978733062744
    3. 'if' (adapté à ' if') → logprob: -4.7924981117248535
    4. ' for' → logprob: -5.6674981117248535
    5. 'commands' → logprob: -6.1674981117248535
    6. 'command' → logprob: -7.2924981117248535
    7. 'ops' → logprob: -8.042497634887695
    8. 'operations' → logprob: -8.667497634887695
    9. 'arr' → logprob: -8.917497634887695
    10. 'queries' → logprob: -9.042497634887695

Token 1244: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4777938425540924
    2. ' N' → logprob: -0.97779381275177
    3. ' not' → logprob: -5.6027936935424805
    4. 'not' → logprob: -10.72779369354248
    5. ' ' → logprob: -16.477794647216797
    6. '>N' → logprob: -16.477794647216797
    7. '=N' → logprob: -16.727794647216797
    8. 'n' → logprob: -16.977794647216797
    9. ' ' → logprob: -17.102794647216797
    10. '=' → logprob: -17.477794647216797

Token 1245: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.00934766884893179
    2. '==' → logprob: -4.759347438812256
    3. ' <=' → logprob: -7.259347438812256
    4. '<=' → logprob: -11.384347915649414
    5. '   ' → logprob: -12.134347915649414
    6. ' =' → logprob: -12.884347915649414
    7. ' ' → logprob: -13.384347915649414
    8. '=' → logprob: -13.509347915649414
    9. ' ===' → logprob: -13.509347915649414
    10. '<|end|>' → logprob: -14.009347915649414

Token 1246: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -18.50004005432129
    4. '=' → logprob: -19.25004005432129
    5. '۰' → logprob: -20.25004005432129
    6. '-' → logprob: -20.75004005432129
    7. '  ' → logprob: -21.25004005432129
    8. '
' → logprob: -21.37504005432129
    9. '０' → logprob: -21.87504005432129
    10. '       ' → logprob: -21.87504005432129

Token 1247: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. '-' → logprob: -13.00000286102295
    3. ' ' → logprob: -14.00000286102295
    4. '
' → logprob: -18.500003814697266
    5. '```' → logprob: -19.875003814697266
    6. '   ' → logprob: -20.125003814697266
    7. ' -' → logprob: -20.750003814697266
    8. '۰' → logprob: -21.625003814697266
    9. '=' → logprob: -21.875003814697266
    10. '1' → logprob: -22.125003814697266

Token 1248: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12624895572662354
    2. ':' → logprob: -2.251248836517334
    3. '           ' → logprob: -4.376248836517334
    4. '       ' → logprob: -7.751248836517334
    5. '   ' → logprob: -8.126249313354492
    6. ':return' → logprob: -11.126249313354492
    7. '          ' → logprob: -12.376249313354492
    8. ':
' → logprob: -12.376249313354492
    9. '():
' → logprob: -13.001249313354492
    10. ' :
' → logprob: -13.251249313354492

Token 1249: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11377430707216263
    2. '       ' → logprob: -2.238774299621582
    3. '   ' → logprob: -7.613774299621582
    4. 'break' → logprob: -8.613774299621582
    5. ' break' → logprob: -8.863774299621582
    6. '		' → logprob: -10.238774299621582
    7. '               ' → logprob: -10.613774299621582
    8. '
' → logprob: -10.988774299621582
    9. '	       ' → logprob: -11.488774299621582
    10. '	break' → logprob: -11.613774299621582

Token 1250: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.4127524495124817
    2. 'return' → logprob: -1.162752389907837
    3. ' break' → logprob: -4.162752628326416
    4. '           ' → logprob: -4.912752628326416
    5. ' return' → logprob: -6.162752628326416
    6. '       ' → logprob: -7.662752628326416
    7. '	break' → logprob: -10.537752151489258
    8. '   ' → logprob: -11.162752151489258
    9. '               ' → logprob: -11.287752151489258
    10. '	return' → logprob: -14.037752151489258

Token 1251: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37890857458114624
    2. '   ' → logprob: -1.253908634185791
    3. 'for' → logprob: -4.003908634185791
    4. ' for' → logprob: -4.878908634185791
    5. '<|end|>' → logprob: -6.253908634185791
    6. '	for' → logprob: -6.378908634185791
    7. '```' → logprob: -8.378908157348633
    8. '	   ' → logprob: -9.628908157348633
    9. '        
' → logprob: -10.003908157348633
    10. '<|end|>' → logprob: -10.253908157348633

Token 1252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12854357063770294
    2. '   ' → logprob: -2.5035436153411865
    3. '	for' → logprob: -4.003543376922607
    4. 'for' → logprob: -4.253543376922607
    5. '```' → logprob: -5.878543376922607
    6. ' for' → logprob: -5.878543376922607
    7. '        
' → logprob: -8.753543853759766
    8. '<|end|>' → logprob: -9.378543853759766
    9. '	   ' → logprob: -9.503543853759766
    10. '    
' → logprob: -9.753543853759766

Token 1253: ' fs' (ID: 16105)
  Prédit: 'fs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' (adapté à ' fs') → logprob: -0.3735036849975586
    2. 'files' → logprob: -1.3735036849975586
    3. 'filesystem' → logprob: -3.3735036849975586
    4. 'file' → logprob: -4.748503684997559
    5. '       ' → logprob: -5.123503684997559
    6. 'for' → logprob: -5.498503684997559
    7. ' files' → logprob: -6.248503684997559
    8. 'used' → logprob: -6.873503684997559
    9. ' fs' → logprob: -7.123503684997559
    10. ' filesystem' → logprob: -7.873503684997559

Token 1254: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6224563717842102
    2. ' =' → logprob: -0.9974563717842102
    3. '.write' → logprob: -2.4974563121795654
    4. '=' → logprob: -4.4974565505981445
    5. '   ' → logprob: -7.2474565505981445
    6. '.=' → logprob: -8.247456550598145
    7. '       ' → logprob: -10.872456550598145
    8. ').' → logprob: -11.247456550598145
    9. ' .' → logprob: -11.622456550598145
    10. '    ' → logprob: -11.622456550598145

Token 1255: ' File' (ID: 5262)
  Prédit: 'File'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'File' → logprob: -0.0019286326132714748
    2. ' File' → logprob: -6.251928806304932
    3. '	File' → logprob: -17.251928329467773
    4. 'Filesystem' → logprob: -20.126928329467773
    5. '_File' → logprob: -20.876928329467773
    6. '<File' → logprob: -21.876928329467773
    7. '(File' → logprob: -22.251928329467773
    8. '   ' → logprob: -22.501928329467773
    9. '_file' → logprob: -22.751928329467773
    10. '.File' → logprob: -22.876928329467773

Token 1256: 'System' (ID: 3320)
  Prédit: 'System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -9.088346359931165e-07
    2. '<System' → logprob: -15.000000953674316
    3. '(System' → logprob: -15.375000953674316
    4. ' System' → logprob: -16.5
    5. '_system' → logprob: -16.5
    6. '_System' → logprob: -17.0
    7. '	System' → logprob: -17.5
    8. '_SYSTEM' → logprob: -17.625
    9. 'Filesystem' → logprob: -17.75
    10. 'Systems' → logprob: -18.0

Token 1257: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1258: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06169963255524635
    2. '   ' → logprob: -3.436699628829956
    3. 'for' → logprob: -3.811699628829956
    4. '```' → logprob: -5.811699867248535
    5. ' for' → logprob: -6.186699867248535
    6. '<|end|>' → logprob: -8.186699867248535
    7. '	for' → logprob: -8.811699867248535
    8. ' ' → logprob: -10.811699867248535
    9. '    ' → logprob: -11.686699867248535
    10. '  ' → logprob: -12.061699867248535

Token 1259: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00023441045777872205
    2. ' for' → logprob: -8.500234603881836
    3. '       ' → logprob: -10.500234603881836
    4. '	for' → logprob: -12.750234603881836
    5. '   ' → logprob: -14.500234603881836
    6. '```' → logprob: -17.625234603881836
    7. 'while' → logprob: -19.250234603881836
    8. '
' → logprob: -19.250234603881836
    9. 'import' → logprob: -19.750234603881836
    10. 'result' → logprob: -19.750234603881836

Token 1260: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0206720617134124e-05
    2. ' _' → logprob: -11.50001049041748
    3. '_
' → logprob: -18.625009536743164
    4. '_i' → logprob: -19.375009536743164
    5. '_=' → logprob: -20.000009536743164
    6. '_
' → logprob: -20.625009536743164
    7. '_

' → logprob: -20.750009536743164
    8. '_range' → logprob: -21.000009536743164
    9. ' in' → logprob: -22.000009536743164
    10. '_]' → logprob: -23.000009536743164

Token 1261: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3915395438671112
    2. 'in' → logprob: -1.1415395736694336
    3. 'range' → logprob: -5.391539573669434
    4. ' range' → logprob: -9.516539573669434
    5. ' ' → logprob: -11.016539573669434
    6. '_' → logprob: -12.141539573669434
    7. '  ' → logprob: -13.016539573669434
    8. '0' → logprob: -14.141539573669434
    9. '```' → logprob: -14.391539573669434
    10. 'import' → logprob: -14.766539573669434

Token 1262: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.2729995988775045e-06
    2. ' range' → logprob: -12.000006675720215
    3. '	range' → logprob: -18.7500057220459
    4. '   ' → logprob: -19.2500057220459
    5. '(range' → logprob: -20.1250057220459
    6. '
' → logprob: -20.6250057220459
    7. '_range' → logprob: -20.8750057220459
    8. '  ' → logprob: -22.0000057220459
    9. 'ange' → logprob: -22.1250057220459
    10. '    ' → logprob: -22.2500057220459

Token 1263: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10810445994138718
    2. '(N' → logprob: -2.3581044673919678
    3. ' N' → logprob: -4.858104228973389
    4. ' range' → logprob: -9.858104705810547
    5. '(' → logprob: -10.733104705810547
    6. 'range' → logprob: -11.108104705810547
    7. '   ' → logprob: -11.983104705810547
    8. ' (' → logprob: -12.608104705810547
    9. ',' → logprob: -13.733104705810547
    10. '	N' → logprob: -14.858104705810547

Token 1264: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28858819603919983
    2. '):
' → logprob: -1.5385881662368774
    3. '():
' → logprob: -4.288588047027588
    4. '       ' → logprob: -4.788588047027588
    5. ':' → logprob: -5.038588047027588
    6. '():' → logprob: -5.538588047027588
    7. '   ' → logprob: -7.413588047027588
    8. '<|end|>' → logprob: -7.663588047027588
    9. ':
' → logprob: -7.788588047027588
    10. '()' → logprob: -8.163588523864746

Token 1265: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008949224837124348
    2. '	       ' → logprob: -5.383949279785156
    3. ' line' → logprob: -6.258949279785156
    4. '<|end|>' → logprob: -6.883949279785156
    5. '   ' → logprob: -8.508949279785156
    6. 'line' → logprob: -8.883949279785156
    7. '```' → logprob: -9.008949279785156
    8. '       ' → logprob: -9.008949279785156
    9. ' code' → logprob: -9.258949279785156
    10. '<|end|>' → logprob: -9.758949279785156

Token 1266: ' cmd' (ID: 11704)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.16287922859191895
    2. 'line' → logprob: -1.912879228591919
    3. 'cmd' (adapté à ' cmd') → logprob: -6.53787899017334
    4. ' cmd' → logprob: -7.53787899017334
    5. ' parts' → logprob: -7.78787899017334
    6. '           ' → logprob: -9.16287899017334
    7. '	line' → logprob: -9.66287899017334
    8. ' command' → logprob: -10.66287899017334
    9. 'command' → logprob: -10.78787899017334
    10. 'parts' → logprob: -11.16287899017334

Token 1267: '_line' (ID: 14418)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15450990200042725
    2. ',' → logprob: -2.529510021209717
    3. '=' → logprob: -2.904510021209717
    4. '=line' → logprob: -5.029510021209717
    5. '_line' → logprob: -6.404510021209717
    6. 'line' → logprob: -8.779509544372559
    7. ' line' → logprob: -9.404509544372559
    8. ',line' → logprob: -9.529509544372559
    9. ' ,' → logprob: -9.654509544372559
    10. '   ' → logprob: -10.529509544372559

Token 1268: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25201451778411865
    2. '=' → logprob: -1.5020145177841187
    3. '=line' → logprob: -9.37701416015625
    4. '=input' → logprob: -15.12701416015625
    5. '=sys' → logprob: -16.50201416015625
    6. '＝' → logprob: -16.62701416015625
    7. ' ' → logprob: -16.87701416015625
    8. 's' → logprob: -17.00201416015625
    9. 'line' → logprob: -17.37701416015625
    10. '   ' → logprob: -17.37701416015625

Token 1269: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07888989895582199
    2. ' input' → logprob: -2.578889846801758
    3. '=input' → logprob: -16.453889846801758
    4. '	input' → logprob: -18.453889846801758
    5. '(input' → logprob: -18.828889846801758
    6. '<input' → logprob: -19.953889846801758
    7. '_input' → logprob: -20.453889846801758
    8. ',input' → logprob: -20.453889846801758
    9. 'output' → logprob: -20.828889846801758
    10. '   ' → logprob: -21.078889846801758

Token 1270: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.014573602005839348
    2. '()' → logprob: -4.264573574066162
    3. '.strip' → logprob: -8.76457405090332
    4. '=' → logprob: -8.88957405090332
    5. '.rstrip' → logprob: -10.26457405090332
    6. ' =' → logprob: -10.76457405090332
    7. '()
' → logprob: -11.01457405090332
    8. '.split' → logprob: -11.26457405090332
    9. '.readline' → logprob: -12.13957405090332
    10. 'rstrip' → logprob: -12.51457405090332

Token 1271: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0012158327735960484
    2. 'rstrip' → logprob: -6.751215934753418
    3. 'split' → logprob: -10.001215934753418
    4. ' strip' → logprob: -15.376215934753418
    5. '_strip' → logprob: -17.8762149810791
    6. '.strip' → logprob: -18.7512149810791
    7. 'str' → logprob: -19.5012149810791
    8. 'r' → logprob: -20.5012149810791
    9. '(strip' → logprob: -20.5012149810791
    10. '-strip' → logprob: -20.6262149810791

Token 1272: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6309036612510681
    2. '().' → logprob: -0.8809036612510681
    3. '()
' → logprob: -3.130903720855713
    4. '           ' → logprob: -5.255903720855713
    5. '.split' → logprob: -5.505903720855713
    6. 'split' → logprob: -9.505903244018555
    7. '();' → logprob: -9.505903244018555
    8. '       ' → logprob: -9.755903244018555
    9. ' =' → logprob: -9.755903244018555
    10. '()
' → logprob: -10.505903244018555

Token 1273: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024966275319457054
    2. 'tokens' → logprob: -3.899966239929199
    3. ' parts' → logprob: -6.524966239929199
    4. ' tokens' → logprob: -6.649966239929199
    5. 'parts' → logprob: -7.024966239929199
    6. '       ' → logprob: -8.1499662399292
    7. ' if' → logprob: -8.5249662399292
    8. 'if' → logprob: -8.8999662399292
    9. 'token' → logprob: -9.8999662399292
    10. '_tokens' → logprob: -11.0249662399292

Token 1274: ' if' (ID: 538)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.6417160630226135
    2. 'tokens' → logprob: -1.8917160034179688
    3. '           ' → logprob: -2.0167160034179688
    4. ' parts' → logprob: -2.5167160034179688
    5. 'if' (adapté à ' if') → logprob: -2.7667160034179688
    6. 'cmd' → logprob: -3.5167160034179688
    7. ' if' → logprob: -4.266716003417969
    8. ' tokens' → logprob: -6.391716003417969
    9. ' cmd' → logprob: -7.641716003417969
    10. ' cmds' → logprob: -9.641716003417969

Token 1275: ' not' (ID: 625)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.22184841334819794
    2. ' not' → logprob: -2.221848487854004
    3. ' cmd' → logprob: -2.471848487854004
    4. 'not' → logprob: -5.096848487854004
    5. '(cmd' → logprob: -12.221848487854004
    6. '	cmd' → logprob: -12.846848487854004
    7. '_cmd' → logprob: -14.346848487854004
    8. '.cmd' → logprob: -14.471848487854004
    9. 'len' → logprob: -14.596848487854004
    10. 'command' → logprob: -14.971848487854004

Token 1276: ' cmd' (ID: 11704)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.0005530327325686812
    2. ' cmd' → logprob: -7.500553131103516
    3. '	cmd' → logprob: -17.500553131103516
    4. 'command' → logprob: -19.000553131103516
    5. '(cmd' → logprob: -19.000553131103516
    6. 'c' → logprob: -19.125553131103516
    7. '
' → logprob: -20.875553131103516
    8. '.cmd' → logprob: -21.375553131103516
    9. '```' → logprob: -21.375553131103516
    10. '_cmd' → logprob: -22.125553131103516

Token 1277: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.01069618295878172
    2. '.startswith' → logprob: -4.6356964111328125
    3. '_' → logprob: -8.135696411132812
    4. '_.' → logprob: -8.260696411132812
    5. '```' → logprob: -9.510696411132812
    6. 'Line' → logprob: -10.385696411132812
    7. '_LINE' → logprob: -10.635696411132812
    8. 'cmd' → logprob: -10.635696411132812
    9. '   ' → logprob: -10.760696411132812
    10. ' .' → logprob: -10.885696411132812

Token 1278: ':
' (ID: 734)
  Prédit: '.startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.8727096915245056
    2. ':' → logprob: -1.2477097511291504
    3. ':
' → logprob: -1.2477097511291504
    4. ' or' → logprob: -5.99770975112915
    5. '           ' → logprob: -6.12270975112915
    6. 'startswith' → logprob: -6.62270975112915
    7. '               ' → logprob: -7.24770975112915
    8. ':return' → logprob: -7.87270975112915
    9. '==' → logprob: -7.99770975112915
    10. '       ' → logprob: -9.622709274291992

Token 1279: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013439261354506016
    2. ' continue' → logprob: -5.013439178466797
    3. '           ' → logprob: -5.888439178466797
    4. 'continue' → logprob: -6.263439178466797
    5. ':' → logprob: -6.638439178466797
    6. ':
' → logprob: -8.013439178466797
    7. ',' → logprob: -9.388439178466797
    8. '	           ' → logprob: -10.013439178466797
    9. '_continue' → logprob: -10.013439178466797
    10. ' continues' → logprob: -10.388439178466797

Token 1280: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.02883327752351761
    2. ' continue' → logprob: -3.7788333892822266
    3. '               ' → logprob: -5.903833389282227
    4. '           ' → logprob: -6.028833389282227
    5. '   ' → logprob: -8.278833389282227
    6. '	continue' → logprob: -9.153833389282227
    7. '                   ' → logprob: -9.778833389282227
    8. '```' → logprob: -11.653833389282227
    9. '_continue' → logprob: -12.278833389282227
    10. '       ' → logprob: -12.903833389282227

Token 1281: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000829759519547224
    2. '       ' → logprob: -7.875829696655273
    3. '	       ' → logprob: -8.875829696655273
    4. 'tokens' → logprob: -9.000829696655273
    5. '```' → logprob: -9.625829696655273
    6. '		' → logprob: -10.500829696655273
    7. ',' → logprob: -11.000829696655273
    8. ' parts' → logprob: -11.125829696655273
    9. 'token' → logprob: -11.500829696655273
    10. '
' → logprob: -11.625829696655273

Token 1282: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008024287410080433
    2. '       ' → logprob: -5.633024215698242
    3. 'tokens' → logprob: -5.758024215698242
    4. ' parts' → logprob: -8.383024215698242
    5. ' tokens' → logprob: -8.383024215698242
    6. '```' → logprob: -8.508024215698242
    7. '	       ' → logprob: -8.883024215698242
    8. 'token' → logprob: -9.008024215698242
    9. '   ' → logprob: -9.508024215698242
    10. 'parts' → logprob: -9.758024215698242

Token 1283: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' (adapté à ' parts') → logprob: -0.10679461807012558
    2. 'cmd' → logprob: -2.606794595718384
    3. 'tokens' → logprob: -3.856794595718384
    4. ' parts' → logprob: -5.231794834136963
    5. '           ' → logprob: -6.981794834136963
    6. 'args' → logprob: -10.231794357299805
    7. ' cmd' → logprob: -10.606794357299805
    8. ' tokens' → logprob: -10.606794357299805
    9. 'words' → logprob: -12.606794357299805
    10. 't' → logprob: -12.981794357299805

Token 1284: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2839924693107605
    2. '=' → logprob: -1.4089925289154053
    3. '[' → logprob: -7.158992290496826
    4. '=['' → logprob: -7.658992290496826
    5. '=[
' → logprob: -8.158992767333984
    6. '=line' → logprob: -8.158992767333984
    7. ' =[' → logprob: -8.533992767333984
    8. '=[]' → logprob: -8.783992767333984
    9. '_tokens' → logprob: -8.908992767333984
    10. '=[' → logprob: -9.408992767333984

Token 1285: ' cmd' (ID: 11704)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.006715728435665369
    2. ' cmd' → logprob: -5.006715774536133
    3. '(cmd' → logprob: -15.381715774536133
    4. '	cmd' → logprob: -15.631715774536133
    5. '.cmd' → logprob: -17.381715774536133
    6. 'command' → logprob: -18.006715774536133
    7. '[' → logprob: -18.381715774536133
    8. '['' → logprob: -19.506715774536133
    9. '_cmd' → logprob: -19.506715774536133
    10. 'parts' → logprob: -19.506715774536133

Token 1286: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0010488852858543396
    2. '.split' → logprob: -7.751049041748047
    3. 'split' → logprob: -8.876049041748047
    4. '_LINE' → logprob: -9.751049041748047
    5. 'cmd' → logprob: -9.876049041748047
    6. '.readline' → logprob: -10.001049041748047
    7. 'line' → logprob: -10.126049041748047
    8. '.cmd' → logprob: -10.376049041748047
    9. '[' → logprob: -10.501049041748047
    10. '=' → logprob: -10.501049041748047

Token 1287: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.0022194879129529
    2. '[' → logprob: -6.7522196769714355
    3. 'split' → logprob: -8.002219200134277
    4. '=' → logprob: -8.252219200134277
    5. '.' → logprob: -9.377219200134277
    6. '.strip' → logprob: -9.627219200134277
    7. ' =' → logprob: -9.627219200134277
    8. '(split' → logprob: -9.752219200134277
    9. '().' → logprob: -10.127219200134277
    10. '_split' → logprob: -10.127219200134277

Token 1288: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00967321451753378
    2. '()
' → logprob: -5.509673118591309
    3. '(' → logprob: -5.884673118591309
    4. '('' → logprob: -6.384673118591309
    5. '[' → logprob: -7.384673118591309
    6. '()[' → logprob: -8.384673118591309
    7. '();' → logprob: -10.009673118591309
    8. '<|end|>' → logprob: -10.259673118591309
    9. '(
' → logprob: -10.384673118591309
    10. '(None' → logprob: -10.884673118591309

Token 1289: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011491484474390745
    2. 'if' → logprob: -7.1261491775512695
    3. '       ' → logprob: -8.87614917755127
    4. ' if' → logprob: -9.12614917755127
    5. '   ' → logprob: -10.50114917755127
    6. '		' → logprob: -10.75114917755127
    7. '	       ' → logprob: -10.75114917755127
    8. '```' → logprob: -11.25114917755127
    9. '	   ' → logprob: -12.00114917755127
    10. '	if' → logprob: -13.87614917755127

Token 1290: ' cmd' (ID: 11704)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.42732441425323486
    2. '           ' → logprob: -1.4273244142532349
    3. ' if' → logprob: -2.4273242950439453
    4. 'cmd' (adapté à ' cmd') → logprob: -4.052324295043945
    5. 'command' → logprob: -7.177324295043945
    6. ' cmd' → logprob: -7.552324295043945
    7. '       ' → logprob: -8.302324295043945
    8. '```' → logprob: -9.427324295043945
    9. '            
' → logprob: -9.677324295043945
    10. 'i' → logprob: -9.927324295043945

Token 1291: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05269613489508629
    2. ' =' → logprob: -3.6776962280273438
    3. '_token' → logprob: -4.802696228027344
    4. '_tokens' → logprob: -5.052696228027344
    5. '[
' → logprob: -6.052696228027344
    6. '.append' → logprob: -6.302696228027344
    7. '_idx' → logprob: -6.552696228027344
    8. '=' → logprob: -6.802696228027344
    9. '```' → logprob: -7.052696228027344
    10. '[token' → logprob: -7.177696228027344

Token 1292: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.04862801730632782
    2. ' parts' → logprob: -3.048628091812134
    3. '(parts' → logprob: -10.423627853393555
    4. 'cmd' → logprob: -12.798627853393555
    5. '`' → logprob: -13.173627853393555
    6. '"' → logprob: -13.173627853393555
    7. ''' → logprob: -13.923627853393555
    8. '           ' → logprob: -14.173627853393555
    9. '   ' → logprob: -14.298627853393555
    10. 'commands' → logprob: -14.548627853393555

Token 1293: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.054500666621607e-06
    2. '[
' → logprob: -13.50000286102295
    3. '```' → logprob: -14.25000286102295
    4. '0' → logprob: -14.75000286102295
    5. '1' → logprob: -15.37500286102295
    6. '\[' → logprob: -16.625003814697266
    7. ' [' → logprob: -17.250003814697266
    8. '[len' → logprob: -17.250003814697266
    9. '   ' → logprob: -17.500003814697266
    10. '[-' → logprob: -18.000003814697266

Token 1294: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.572941179503687e-05
    2. '[' → logprob: -10.250045776367188
    3. '1' → logprob: -11.500045776367188
    4. ' ' → logprob: -16.125045776367188
    5. '
' → logprob: -17.125045776367188
    6. '```' → logprob: -18.375045776367188
    7. '-' → logprob: -20.750045776367188
    8. '(' → logprob: -21.125045776367188
    9. '   ' → logprob: -21.500045776367188
    10. '{' → logprob: -22.250045776367188

Token 1295: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3699333071708679
    2. '<|end|>' → logprob: -1.6199333667755127
    3. '           ' → logprob: -3.4949333667755127
    4. ']' → logprob: -3.4949333667755127
    5. '[' → logprob: -4.369933128356934
    6. ')
' → logprob: -5.119933128356934
    7. '
' → logprob: -5.119933128356934
    8. ',' → logprob: -5.244933128356934
    9. '       ' → logprob: -5.869933128356934
    10. '            
' → logprob: -5.994933128356934

Token 1296: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.044160738587379456
    2. ' if' → logprob: -3.544160842895508
    3. 'if' → logprob: -4.919160842895508
    4. '       ' → logprob: -5.544160842895508
    5. '            
' → logprob: -6.919160842895508
    6. '```' → logprob: -7.294160842895508
    7. '            ' → logprob: -8.169160842895508
    8. '          ' → logprob: -8.419160842895508
    9. '               ' → logprob: -8.544160842895508
    10. ' 
' → logprob: -8.919160842895508

Token 1297: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005386607255786657
    2. ' if' → logprob: -5.255386829376221
    3. '           ' → logprob: -9.005386352539062
    4. 'fid' → logprob: -10.755386352539062
    5. 'args' → logprob: -12.630386352539062
    6. 'arg' → logprob: -12.880386352539062
    7. '   ' → logprob: -13.755386352539062
    8. '       ' → logprob: -14.255386352539062
    9. '```' → logprob: -14.755386352539062
    10. 'i' → logprob: -15.130386352539062

Token 1298: ' cmd' (ID: 11704)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.008614926598966122
    2. ' cmd' → logprob: -4.758615016937256
    3. 'len' → logprob: -15.383614540100098
    4. '(cmd' → logprob: -16.133615493774414
    5. '	cmd' → logprob: -16.133615493774414
    6. 'command' → logprob: -19.258615493774414
    7. '.cmd' → logprob: -19.633615493774414
    8. '_cmd' → logprob: -20.008615493774414
    9. ' len' → logprob: -20.508615493774414
    10. ' ' → logprob: -22.758615493774414

Token 1299: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.180029034614563
    2. '==' → logprob: -1.805029034614563
    3. '=='' → logprob: -9.430028915405273
    4. '=' → logprob: -10.180028915405273
    5. '===' → logprob: -10.430028915405273
    6. '=="' → logprob: -10.555028915405273
    7. '[' → logprob: -10.680028915405273
    8. ' ===' → logprob: -10.805028915405273
    9. '==
' → logprob: -11.055028915405273
    10. ' =='' → logprob: -11.055028915405273

Token 1300: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07922882586717606
    2. '"' → logprob: -2.5792288780212402
    3. 'write' → logprob: -8.454228401184082
    4. ' write' → logprob: -9.829228401184082
    5. ' '' → logprob: -9.954228401184082
    6. ''w' → logprob: -11.829228401184082
    7. 'WRITE' → logprob: -12.454228401184082
    8. ''s' → logprob: -12.454228401184082
    9. ' "' → logprob: -13.204228401184082
    10. '(write' → logprob: -13.329228401184082

Token 1301: 'W' (ID: 54)
  Prédit: 'write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'write' → logprob: -0.015990376472473145
    2. 'W' → logprob: -4.765990257263184
    3. 'WRITE' → logprob: -5.515990257263184
    4. 'w' → logprob: -5.890990257263184
    5. ''' → logprob: -8.265990257263184
    6. ''w' → logprob: -9.140990257263184
    7. 'Write' → logprob: -10.015990257263184
    8. 'alloc' → logprob: -10.015990257263184
    9. '"' → logprob: -10.515990257263184
    10. '"W' → logprob: -11.265990257263184

Token 1302: '':
' (ID: 7669)
  Prédit: 'rite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rite' → logprob: -0.4695014953613281
    2. 'R' → logprob: -1.8445014953613281
    3. '')' → logprob: -1.8445014953613281
    4. 'r' → logprob: -3.219501495361328
    5. ''' → logprob: -4.594501495361328
    6. 'write' → logprob: -6.469501495361328
    7. 'rites' → logprob: -6.719501495361328
    8. ''):
' → logprob: -6.844501495361328
    9. 'rit' → logprob: -7.219501495361328
    10. ' '' → logprob: -7.594501495361328

Token 1303: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25674569606781006
    2. ' fid' → logprob: -1.88174569606781
    3. ',' → logprob: -3.7567458152770996
    4. '(fid' → logprob: -3.7567458152770996
    5. '           ' → logprob: -4.6317458152771
    6. ' ' → logprob: -5.0067458152771
    7. '<|end|>' → logprob: -5.7567458152771
    8. '       ' → logprob: -6.6317458152771
    9. 'fid' → logprob: -7.1317458152771
    10. '	           ' → logprob: -7.7567458152771

Token 1304: ' fid' (ID: 34157)
  Prédit: ' fid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fid' → logprob: -0.07903002202510834
    2. 'fid' (adapté à ' fid') → logprob: -2.5790300369262695
    3. '(fid' → logprob: -8.95403003692627
    4. ' fs' → logprob: -12.20403003692627
    5. ' f' → logprob: -13.57903003692627
    6. 'f' → logprob: -14.07903003692627
    7. '           ' → logprob: -14.32903003692627
    8. 'fs' → logprob: -14.32903003692627
    9. ' Fid' → logprob: -14.32903003692627
    10. '               ' → logprob: -14.82903003692627

Token 1305: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16331225633621216
    2. ',' → logprob: -2.0383121967315674
    3. '=' → logprob: -4.0383124351501465
    4. ' ,' → logprob: -6.2883124351501465
    5. '=int' → logprob: -7.5383124351501465
    6. ' ' → logprob: -8.788311958312988
    7. '<|end|>' → logprob: -9.038311958312988
    8. ',int' → logprob: -9.913311958312988
    9. 'int' → logprob: -10.538311958312988
    10. ')' → logprob: -10.538311958312988

Token 1306: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0019288709154352546
    2. ' int' → logprob: -6.251928806304932
    3. 'parts' → logprob: -16.001928329467773
    4. ' parts' → logprob: -16.251928329467773
    5. '=int' → logprob: -19.251928329467773
    6. 'ints' → logprob: -19.376928329467773
    7. '	int' → logprob: -19.501928329467773
    8. '[int' → logprob: -19.751928329467773
    9. '(int' → logprob: -19.876928329467773
    10. '<int' → logprob: -20.751928329467773

Token 1307: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -1.3663626305060461e-05
    2. 'parts' → logprob: -11.25001335144043
    3. '(' → logprob: -14.62501335144043
    4. ' parts' → logprob: -16.37501335144043
    5. '(part' → logprob: -19.62501335144043
    6. ' (' → logprob: -20.50001335144043
    7. '(
' → logprob: -20.75001335144043
    8. 'Parts' → logprob: -20.87501335144043
    9. '_parts' → logprob: -22.50001335144043
    10. '(points' → logprob: -23.00001335144043

Token 1308: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.165027217415627e-05
    2. '1' → logprob: -10.750021934509277
    3. '[
' → logprob: -16.37502098083496
    4. '```' → logprob: -17.37502098083496
    5. ' [' → logprob: -18.37502098083496
    6. '(' → logprob: -18.37502098083496
    7. '\[' → logprob: -18.37502098083496
    8. '2' → logprob: -18.37502098083496
    9. ')' → logprob: -18.50002098083496
    10. '   ' → logprob: -19.12502098083496

Token 1309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '[' → logprob: -18.5
    4. '   ' → logprob: -18.625
    5. '
' → logprob: -19.5
    6. '```' → logprob: -19.75
    7. '2' → logprob: -21.125
    8. ')' → logprob: -21.25
    9. '``' → logprob: -21.875
    10. '

' → logprob: -22.125

Token 1310: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014384910464286804
    2. ')
' → logprob: -4.264384746551514
    3. ',' → logprob: -8.889385223388672
    4. '),' → logprob: -10.139385223388672
    5. ' )' → logprob: -10.514385223388672
    6. '])' → logprob: -12.889385223388672
    7. ' )
' → logprob: -12.889385223388672
    8. '<|end|>' → logprob: -13.014385223388672
    9. ')
' → logprob: -13.639385223388672
    10. '           ' → logprob: -14.014385223388672

Token 1311: '               ' (ID: 506)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.1865244060754776
    2. ' size' → logprob: -1.8115243911743164
    3. '               ' → logprob: -5.061524391174316
    4. ',size' → logprob: -8.061524391174316
    5. ',' → logprob: -10.186524391174316
    6. '           ' → logprob: -10.811524391174316
    7. '                   ' → logprob: -11.061524391174316
    8. '(size' → logprob: -11.936524391174316
    9. '	size' → logprob: -12.686524391174316
    10. '_size' → logprob: -12.811524391174316

Token 1312: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' (adapté à ' size') → logprob: -0.0004387750814203173
    2. ' size' → logprob: -7.750438690185547
    3. '               ' → logprob: -11.750438690185547
    4. 'sz' → logprob: -16.125438690185547
    5. 'siz' → logprob: -16.750438690185547
    6. '	size' → logprob: -17.875438690185547
    7. ',size' → logprob: -18.125438690185547
    8. 'length' → logprob: -18.250438690185547
    9. '_size' → logprob: -19.000438690185547
    10. 'Size' → logprob: -19.500438690185547

Token 1313: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7556883692741394
    2. '=' → logprob: -1.0056884288787842
    3. ')' → logprob: -1.8806884288787842
    4. '<|end|>' → logprob: -4.880688190460205
    5. '<|end|>' → logprob: -6.005688190460205
    6. ' )' → logprob: -7.130688190460205
    7. 'tokens' → logprob: -8.630688667297363
    8. '),' → logprob: -8.755688667297363
    9. '=int' → logprob: -8.880688667297363
    10. ')=' → logprob: -8.880688667297363

Token 1314: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008615754544734955
    2. ' int' → logprob: -4.758615970611572
    3. '[int' → logprob: -14.633615493774414
    4. '=int' → logprob: -14.758615493774414
    5. '(int' → logprob: -15.508615493774414
    6. '<int' → logprob: -16.008615493774414
    7. ':int' → logprob: -17.133615493774414
    8. '	int' → logprob: -18.258615493774414
    9. ']int' → logprob: -18.258615493774414
    10. ',int' → logprob: -20.758615493774414

Token 1315: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -2.570319702499546e-05
    2. 'parts' → logprob: -10.875025749206543
    3. ' parts' → logprob: -12.500025749206543
    4. '(' → logprob: -12.875025749206543
    5. ' (' → logprob: -14.875025749206543
    6. ')' → logprob: -16.625024795532227
    7. 'Parts' → logprob: -17.500024795532227
    8. '(
' → logprob: -17.625024795532227
    9. '_parts' → logprob: -17.750024795532227
    10. '[' → logprob: -18.750024795532227

Token 1316: '[' (ID: 58)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14279772341251373
    2. '[' → logprob: -2.0177977085113525
    3. ' ' → logprob: -9.767797470092773
    4. '```' → logprob: -10.392797470092773
    5. '   ' → logprob: -10.892797470092773
    6. '1' → logprob: -12.517797470092773
    7. '(' → logprob: -12.767797470092773
    8. '
' → logprob: -13.392797470092773
    9. '       ' → logprob: -13.642797470092773
    10. '-' → logprob: -13.642797470092773

Token 1317: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.117345684382599e-05
    2. '1' → logprob: -11.125020980834961
    3. '[' → logprob: -13.000020980834961
    4. ' ' → logprob: -13.375020980834961
    5. '
' → logprob: -13.625020980834961
    6. '3' → logprob: -14.500020980834961
    7. '   ' → logprob: -14.750020980834961
    8. '-' → logprob: -15.875020980834961
    9. '```' → logprob: -15.875020980834961
    10. '4' → logprob: -16.75002098083496

Token 1318: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.018189631402492523
    2. ')' → logprob: -4.018189430236816
    3. '               ' → logprob: -10.768189430236816
    4. ')
' → logprob: -11.268189430236816
    5. '           ' → logprob: -12.518189430236816
    6. '       ' → logprob: -14.143189430236816
    7. ' )
' → logprob: -14.268189430236816
    8. ')`
' → logprob: -14.518189430236816
    9. '                   ' → logprob: -15.893189430236816
    10. ')

' → logprob: -16.518190383911133

Token 1319: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8304216861724854
    2. '       ' → logprob: -0.9554216861724854
    3. '               ' → logprob: -1.8304216861724854
    4. 'fs' → logprob: -4.205421447753906
    5. '
' → logprob: -6.080421447753906
    6. '```' → logprob: -6.830421447753906
    7. ' fs' → logprob: -7.580421447753906
    8. '   ' → logprob: -8.705421447753906
    9. '``' → logprob: -10.580421447753906
    10. '`' → logprob: -10.830421447753906

Token 1320: ' fs' (ID: 16105)
  Prédit: 'fs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' (adapté à ' fs') → logprob: -0.018233058974146843
    2. ' fs' → logprob: -4.018232822418213
    3. '               ' → logprob: -9.518233299255371
    4. '           ' → logprob: -11.893233299255371
    5. '	fs' → logprob: -13.518233299255371
    6. '       ' → logprob: -14.018233299255371
    7. 'filesystem' → logprob: -15.018233299255371
    8. '(fs' → logprob: -15.518233299255371
    9. '_fs' → logprob: -16.768232345581055
    10. '.fs' → logprob: -16.768232345581055

Token 1321: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -5.931863051955588e-05
    2. '.' → logprob: -9.750059127807617
    3. 'write' → logprob: -13.875059127807617
    4. '   ' → logprob: -18.125059127807617
    5. ' .' → logprob: -18.750059127807617
    6. ' write' → logprob: -18.750059127807617
    7. '.read' → logprob: -19.125059127807617
    8. '.w' → logprob: -19.375059127807617
    9. '	write' → logprob: -19.375059127807617
    10. '_write' → logprob: -19.375059127807617

Token 1322: '(fid' (ID: 109575)
  Prédit: '(fid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fid' → logprob: -6.511406809295295e-06
    2. '(' → logprob: -12.000006675720215
    3. '(fi' → logprob: -15.625006675720215
    4. '(f' → logprob: -17.0000057220459
    5. '(fd' → logprob: -18.5000057220459
    6. ' (' → logprob: -18.5000057220459
    7. '(pid' → logprob: -18.7500057220459
    8. '(
' → logprob: -19.8750057220459
    9. '(fname' → logprob: -20.0000057220459
    10. 'fid' → logprob: -20.8750057220459

Token 1323: ',size' (ID: 86319)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008699309080839157
    2. ',size' → logprob: -4.758699417114258
    3. ' ,' → logprob: -9.508699417114258
    4. '               ' → logprob: -11.758699417114258
    5. ',f' → logprob: -14.508699417114258
    6. ',
' → logprob: -14.883699417114258
    7. ')' → logprob: -14.883699417114258
    8. '‌,' → logprob: -15.633699417114258
    9. '(size' → logprob: -15.633699417114258
    10. '           ' → logprob: -15.633699417114258

Token 1324: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010950337309623137
    2. ')
' → logprob: -9.125109672546387
    3. '           ' → logprob: -15.750109672546387
    4. '))' → logprob: -16.00010871887207
    5. ' )' → logprob: -16.00010871887207
    6. '       ' → logprob: -16.37510871887207
    7. ')
' → logprob: -17.00010871887207
    8. '               ' → logprob: -17.12510871887207
    9. ')`' → logprob: -18.37510871887207
    10. ')return' → logprob: -18.62510871887207

Token 1325: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02995041385293007
    2. 'elif' → logprob: -3.5299503803253174
    3. '```' → logprob: -8.904950141906738
    4. ' elif' → logprob: -9.904950141906738
    5. '       ' → logprob: -11.654950141906738
    6. '	elif' → logprob: -13.529950141906738
    7. '<|end|>' → logprob: -13.904950141906738
    8. 'else' → logprob: -14.279950141906738
    9. '
' → logprob: -14.279950141906738
    10. '		' → logprob: -14.404950141906738

Token 1326: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.07016472518444061
    2. '           ' → logprob: -2.820164680480957
    3. ' elif' → logprob: -4.820164680480957
    4. '       ' → logprob: -9.945164680480957
    5. '```' → logprob: -10.195164680480957
    6. '	elif' → logprob: -12.695164680480957
    7. '
' → logprob: -12.695164680480957
    8. 'el' → logprob: -12.945164680480957
    9. 'else' → logprob: -13.070164680480957
    10. '   ' → logprob: -13.820164680480957

Token 1327: ' cmd' (ID: 11704)
  Prédit: ' cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cmd' → logprob: -0.03804401680827141
    2. 'cmd' → logprob: -3.288043975830078
    3. '	cmd' → logprob: -13.413043975830078
    4. '(cmd' → logprob: -13.913043975830078
    5. ' cmds' → logprob: -16.288043975830078
    6. '.cmd' → logprob: -17.038043975830078
    7. '_cmd' → logprob: -17.663043975830078
    8. ' parts' → logprob: -17.663043975830078
    9. ' command' → logprob: -18.413043975830078
    10. ' code' → logprob: -19.663043975830078

Token 1328: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06225334852933884
    2. '==' → logprob: -2.81225323677063
    3. '=' → logprob: -8.81225299835205
    4. ' =' → logprob: -9.06225299835205
    5. ' ===' → logprob: -11.81225299835205
    6. '[' → logprob: -12.31225299835205
    7. '===' → logprob: -12.93725299835205
    8. ' =='' → logprob: -13.31225299835205
    9. ' =="' → logprob: -13.81225299835205
    10. '=='' → logprob: -13.93725299835205

Token 1329: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16103962063789368
    2. ''D' → logprob: -1.9110395908355713
    3. ' '' → logprob: -7.16103982925415
    4. ''C' → logprob: -11.911039352416992
    5. ''Re' → logprob: -11.911039352416992
    6. ''I' → logprob: -12.161039352416992
    7. '('' → logprob: -12.161039352416992
    8. ''E' → logprob: -13.036039352416992
    9. '   ' → logprob: -13.036039352416992
    10. 'D' → logprob: -13.411039352416992

Token 1330: 'D' (ID: 35)
  Prédit: ''D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''D' → logprob: -0.5306689739227295
    2. 'D' → logprob: -0.9056689739227295
    3. 'R' → logprob: -5.280669212341309
    4. ''' → logprob: -6.655669212341309
    5. ''d' → logprob: -6.905669212341309
    6. '"D' → logprob: -9.530669212341309
    7. ''r' → logprob: -10.405669212341309
    8. '`' → logprob: -12.280669212341309
    9. ' D' → logprob: -12.280669212341309
    10. ''Re' → logprob: -12.405669212341309

Token 1331: '':
' (ID: 7669)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.47253599762916565
    2. ' ==' → logprob: -1.5975359678268433
    3. ':
' → logprob: -2.722536087036133
    4. '==' → logprob: -3.222536087036133
    5. '(parts' → logprob: -4.347536087036133
    6. ':' → logprob: -4.597536087036133
    7. ' elif' → logprob: -4.597536087036133
    8. '(fid' → logprob: -4.597536087036133
    9. '           ' → logprob: -5.347536087036133
    10. '(cmd' → logprob: -5.722536087036133

Token 1332: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9472308158874512
    2. ' fid' → logprob: -1.0722308158874512
    3. 'fid' → logprob: -1.5722308158874512
    4. '(fid' → logprob: -2.822230815887451
    5. '           ' → logprob: -5.947230815887451
    6. '       ' → logprob: -9.69723129272461
    7. '```' → logprob: -9.94723129272461
    8. '
' → logprob: -11.07223129272461
    9. '   ' → logprob: -11.19723129272461
    10. '                   ' → logprob: -11.32223129272461

Token 1333: ' fid' (ID: 34157)
  Prédit: ' fid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fid' → logprob: -0.20219926536083221
    2. 'fid' (adapté à ' fid') → logprob: -1.7021992206573486
    3. '(fid' → logprob: -7.202199459075928
    4. '               ' → logprob: -10.20219898223877
    5. '           ' → logprob: -12.82719898223877
    6. ' fiduci' → logprob: -15.20219898223877
    7. ' Fid' → logprob: -15.57719898223877
    8. 'FID' → logprob: -15.82719898223877
    9. ' fidel' → logprob: -16.327199935913086
    10. ' fide' → logprob: -16.452199935913086

Token 1334: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0040799472481012344
    2. '=' → logprob: -5.504079818725586
    3. '=int' → logprob: -13.629079818725586
    4. '<|end|>' → logprob: -16.254079818725586
    5. ')' → logprob: -16.754079818725586
    6. ' ' → logprob: -17.254079818725586
    7. ' =)' → logprob: -17.754079818725586
    8. ' =
' → logprob: -17.879079818725586
    9. '＝' → logprob: -18.629079818725586
    10. ' ' → logprob: -19.254079818725586

Token 1335: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0019286326132714748
    2. ' int' → logprob: -6.251928806304932
    3. '=int' → logprob: -17.376928329467773
    4. '(int' → logprob: -18.001928329467773
    5. '[int' → logprob: -18.126928329467773
    6. '<int' → logprob: -18.876928329467773
    7. ':int' → logprob: -20.376928329467773
    8. '	int' → logprob: -20.751928329467773
    9. ']int' → logprob: -21.126928329467773
    10. ',int' → logprob: -23.126928329467773

Token 1336: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.00011749001714633778
    2. '(int' → logprob: -9.750117301940918
    3. 'parts' → logprob: -10.000117301940918
    4. 'int' → logprob: -11.250117301940918
    5. '(part' → logprob: -14.750117301940918
    6. ' parts' → logprob: -15.375117301940918
    7. '(' → logprob: -16.250118255615234
    8. ' (' → logprob: -18.375118255615234
    9. '(points' → logprob: -19.000118255615234
    10. 'Parts' → logprob: -19.875118255615234

Token 1337: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.2729995988775045e-06
    2. '1' → logprob: -12.000006675720215
    3. '2' → logprob: -17.0000057220459
    4. '```' → logprob: -17.1250057220459
    5. '[
' → logprob: -17.8750057220459
    6. '
' → logprob: -18.1250057220459
    7. ' [' → logprob: -18.6250057220459
    8. '(' → logprob: -18.6250057220459
    9. '][' → logprob: -19.5000057220459
    10. '   ' → logprob: -19.5000057220459

Token 1338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. 'parts' → logprob: -14.75
    3. '
' → logprob: -18.125
    4. '[' → logprob: -18.5
    5. 'int' → logprob: -18.5
    6. ' ' → logprob: -18.75
    7. '```' → logprob: -18.875
    8. '   ' → logprob: -19.0
    9. '2' → logprob: -19.375
    10. '(parts' → logprob: -20.625

Token 1339: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5770505666732788
    2. ')
' → logprob: -0.8270505666732788
    3. '):
' → logprob: -7.077050685882568
    4. '               ' → logprob: -8.45205020904541
    5. '           ' → logprob: -10.32705020904541
    6. ')
' → logprob: -11.95205020904541
    7. '):' → logprob: -12.95205020904541
    8. '       ' → logprob: -13.20205020904541
    9. ')`
' → logprob: -13.57705020904541
    10. ')

' → logprob: -14.07705020904541

Token 1340: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00017183588352054358
    2. '           ' → logprob: -8.750171661376953
    3. '              ' → logprob: -12.625171661376953
    4. '                   ' → logprob: -13.500171661376953
    5. '   ' → logprob: -13.625171661376953
    6. 'fs' → logprob: -13.750171661376953
    7. '			' → logprob: -13.875171661376953
    8. '       ' → logprob: -14.250171661376953
    9. '             ' → logprob: -14.250171661376953
    10. '<|end|>' → logprob: -14.250171661376953

Token 1341: ' fs' (ID: 16105)
  Prédit: 'fs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' (adapté à ' fs') → logprob: -0.16374571621418
    2. ' fs' → logprob: -1.9137457609176636
    3. '               ' → logprob: -5.663745880126953
    4. '           ' → logprob: -10.788745880126953
    5. '	fs' → logprob: -11.038745880126953
    6. '(fs' → logprob: -13.038745880126953
    7. 'fsp' → logprob: -13.163745880126953
    8. '       ' → logprob: -13.663745880126953
    9. '                   ' → logprob: -13.663745880126953
    10. '_fs' → logprob: -14.038745880126953

Token 1342: '.delete' (ID: 11951)
  Prédit: '.delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.delete' → logprob: -3.214019307051785e-05
    2. '.' → logprob: -10.375032424926758
    3. 'delete' → logprob: -14.625032424926758
    4. ' .' → logprob: -15.000032424926758
    5. '   ' → logprob: -16.125032424926758
    6. '	delete' → logprob: -17.750032424926758
    7. '.Delete' → logprob: -18.000032424926758
    8. '       ' → logprob: -18.250032424926758
    9. '.write' → logprob: -18.625032424926758
    10. '.DELETE' → logprob: -19.375032424926758

Token 1343: '(fid' (ID: 109575)
  Prédit: '(fid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fid' → logprob: -1.9361264946837764e-07
    2. '(f' → logprob: -16.25
    3. '(' → logprob: -17.0
    4. '(fi' → logprob: -17.375
    5. '(fd' → logprob: -17.75
    6. '(pid' → logprob: -18.75
    7. '(fname' → logprob: -18.875
    8. 'fid' → logprob: -19.125
    9. '(
' → logprob: -21.5
    10. '(fp' → logprob: -21.75

Token 1344: ')
' (ID: 446)
  Prédit: '(fid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fid' → logprob: -0.3134719729423523
    2. ')' → logprob: -1.313472032546997
    3. ')
' → logprob: -8.938471794128418
    4. 'fid' → logprob: -10.188471794128418
    5. '               ' → logprob: -10.813471794128418
    6. '           ' → logprob: -11.813471794128418
    7. '       ' → logprob: -12.813471794128418
    8. '(' → logprob: -12.938471794128418
    9. '(f' → logprob: -13.188471794128418
    10. ')`' → logprob: -13.938471794128418

Token 1345: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016555405454710126
    2. 'elif' → logprob: -6.501655578613281
    3. 'else' → logprob: -9.001655578613281
    4. '       ' → logprob: -11.001655578613281
    5. ' elif' → logprob: -11.501655578613281
    6. '```' → logprob: -13.126655578613281
    7. ' else' → logprob: -14.751655578613281
    8. '   ' → logprob: -15.751655578613281
    9. '               ' → logprob: -15.751655578613281
    10. '		' → logprob: -16.37665557861328

Token 1346: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36097773909568787
    2. 'elif' (adapté à ' elif') → logprob: -1.3609777688980103
    3. ' elif' → logprob: -3.2359776496887207
    4. 'else' → logprob: -4.985977649688721
    5. ' else' → logprob: -7.860977649688721
    6. '       ' → logprob: -10.110978126525879
    7. '	elif' → logprob: -11.860978126525879
    8. '   ' → logprob: -13.235978126525879
    9. '```' → logprob: -13.360978126525879
    10. '               ' → logprob: -13.735978126525879

Token 1347: ' cmd' (ID: 11704)
  Prédit: ' cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cmd' → logprob: -0.018156031146645546
    2. 'cmd' → logprob: -4.018156051635742
    3. '(cmd' → logprob: -12.268156051635742
    4. '	cmd' → logprob: -13.643156051635742
    5. '.cmd' → logprob: -16.893156051635742
    6. ' cmds' → logprob: -16.893156051635742
    7. '_cmd' → logprob: -17.143156051635742
    8. ' command' → logprob: -18.768156051635742
    9. '            ' → logprob: -19.393156051635742
    10. ''' → logprob: -19.393156051635742

Token 1348: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01131011825054884
    2. '==' → logprob: -4.51131010055542
    3. '[' → logprob: -9.261310577392578
    4. ' ===' → logprob: -10.011310577392578
    5. '=='' → logprob: -10.261310577392578
    6. ' =' → logprob: -10.261310577392578
    7. ' =='' → logprob: -10.761310577392578
    8. '=' → logprob: -11.511310577392578
    9. ']==' → logprob: -12.386310577392578
    10. ')==' → logprob: -12.761310577392578

Token 1349: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0020003693643957376
    2. ' '' → logprob: -6.502000331878662
    3. ''I' → logprob: -9.12700080871582
    4. '('' → logprob: -9.25200080871582
    5. ''C' → logprob: -9.37700080871582
    6. ''S' → logprob: -9.50200080871582
    7. ''Re' → logprob: -10.25200080871582
    8. ''r' → logprob: -11.00200080871582
    9. ' ' → logprob: -11.00200080871582
    10. ''O' → logprob: -11.62700080871582

Token 1350: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.03616396710276604
    2. ''' → logprob: -3.4111640453338623
    3. 'Q' → logprob: -6.661163806915283
    4. ''r' → logprob: -7.536163806915283
    5. 'print' → logprob: -9.036164283752441
    6. 'r' → logprob: -9.286164283752441
    7. '"' → logprob: -9.536164283752441
    8. ''S' → logprob: -9.786164283752441
    9. 'read' → logprob: -10.161164283752441
    10. 'I' → logprob: -10.411164283752441

Token 1351: '':
' (ID: 7669)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.047668695449829
    2. ' ==' → logprob: -1.047668695449829
    3. ':
' → logprob: -2.672668695449829
    4. '           ' → logprob: -2.797668695449829
    5. '               ' → logprob: -3.297668695449829
    6. '=' → logprob: -3.422668695449829
    7. '==' → logprob: -4.17266845703125
    8. '        ' → logprob: -4.42266845703125
    9. '       ' → logprob: -4.67266845703125
    10. '         ' → logprob: -5.04766845703125

Token 1352: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22467511892318726
    2. '           ' → logprob: -1.974675178527832
    3. ' sector' → logprob: -3.724675178527832
    4. 'sector' → logprob: -3.724675178527832
    5. ' fid' → logprob: -5.349675178527832
    6. 'fid' → logprob: -6.349675178527832
    7. '	       ' → logprob: -6.474675178527832
    8. '(se' → logprob: -6.599675178527832
    9. '       ' → logprob: -6.974675178527832
    10. '(fid' → logprob: -7.349675178527832

Token 1353: ' sector' (ID: 11207)
  Prédit: 'sector'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sector' (adapté à ' sector') → logprob: -0.01838790625333786
    2. ' sector' → logprob: -4.018387794494629
    3. '               ' → logprob: -9.393387794494629
    4. 'fid' → logprob: -9.518387794494629
    5. ' fid' → logprob: -10.393387794494629
    6. '_sector' → logprob: -10.518387794494629
    7. 'se' → logprob: -12.018387794494629
    8. '           ' → logprob: -12.268387794494629
    9. 'sect' → logprob: -12.893387794494629
    10. '       ' → logprob: -13.393387794494629

Token 1354: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28119096159935
    2. '=' → logprob: -1.4061909914016724
    3. '=int' → logprob: -11.406190872192383
    4. ')' → logprob: -11.656190872192383
    5. ' ' → logprob: -12.281190872192383
    6. '_id' → logprob: -12.406190872192383
    7. ',' → logprob: -12.781190872192383
    8. '   ' → logprob: -13.406190872192383
    9. '_' → logprob: -13.531190872192383
    10. 'space' → logprob: -14.031190872192383

Token 1355: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.836499985889532e-05
    2. ' int' → logprob: -9.7500581741333
    3. '=int' → logprob: -20.125059127807617
    4. '(int' → logprob: -20.500059127807617
    5. '[int' → logprob: -21.125059127807617
    6. '<int' → logprob: -22.000059127807617
    7. '	int' → logprob: -23.500059127807617
    8. ':int' → logprob: -23.875059127807617
    9. '               ' → logprob: -24.375059127807617
    10. ']int' → logprob: -25.000059127807617

Token 1356: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.00012630375567823648
    2. 'parts' → logprob: -9.000125885009766
    3. ' parts' → logprob: -13.000125885009766
    4. '(' → logprob: -14.875125885009766
    5. ' (' → logprob: -15.750125885009766
    6. '(part' → logprob: -17.000125885009766
    7. '_parts' → logprob: -20.500125885009766
    8. ')' → logprob: -21.125125885009766
    9. '.parts' → logprob: -21.250125885009766
    10. '(points' → logprob: -21.750125885009766

Token 1357: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -16.375
    3. '_line' → logprob: -17.625
    4. ' [' → logprob: -18.125
    5. '       ' → logprob: -18.25
    6. '(' → logprob: -18.25
    7. ')' → logprob: -18.25
    8. '           ' → logprob: -18.75
    9. '[
' → logprob: -18.75
    10. '```' → logprob: -18.75

Token 1358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017226649215444922
    2. '2' → logprob: -6.376722812652588
    3. 'parts' → logprob: -11.12672233581543
    4. '[' → logprob: -12.87672233581543
    5. '   ' → logprob: -13.62672233581543
    6. '
' → logprob: -14.12672233581543
    7. '3' → logprob: -15.00172233581543
    8. ']' → logprob: -15.25172233581543
    9. '0' → logprob: -15.50172233581543
    10. ' parts' → logprob: -16.12672233581543

Token 1359: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0001923352392623201
    2. ')' → logprob: -8.625192642211914
    3. '               ' → logprob: -12.125192642211914
    4. ')
' → logprob: -12.750192642211914
    5. '       ' → logprob: -13.125192642211914
    6. '           ' → logprob: -13.250192642211914
    7. ' )
' → logprob: -14.750192642211914
    8. '   ' → logprob: -16.750192642211914
    9. ')`
' → logprob: -16.750192642211914
    10. '）
' → logprob: -17.000192642211914

Token 1360: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2278716266155243
    2. '           ' → logprob: -1.8528716564178467
    3. '       ' → logprob: -3.4778716564178467
    4. 'print' → logprob: -4.352871417999268
    5. '```' → logprob: -6.352871417999268
    6. ' print' → logprob: -7.727871417999268
    7. 'output' → logprob: -8.227871894836426
    8. 'result' → logprob: -8.227871894836426
    9. 'return' → logprob: -8.977871894836426
    10. '   ' → logprob: -10.227871894836426

Token 1361: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3639622926712036
    2. 'res' → logprob: -1.4889622926712036
    3. ' print' → logprob: -3.363962173461914
    4. ' res' → logprob: -3.488962173461914
    5. 'ans' → logprob: -4.613962173461914
    6. ' ans' → logprob: -6.363962173461914
    7. 'ret' → logprob: -6.613962173461914
    8. 'result' → logprob: -7.238962173461914
    9. 'fid' → logprob: -8.738962173461914
    10. 'file' → logprob: -8.988962173461914

Token 1362: '(fs' (ID: 69711)
  Prédit: '(fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fs' → logprob: -0.0005532711511477828
    2. 'fs' → logprob: -7.500553131103516
    3. '(' → logprob: -15.750553131103516
    4. ' fs' → logprob: -15.875553131103516
    5. '	fs' → logprob: -17.000553131103516
    6. '(f' → logprob: -17.500553131103516
    7. '_fs' → logprob: -18.250553131103516
    8. '/fs' → logprob: -18.500553131103516
    9. 'FS' → logprob: -20.250553131103516
    10. '.fs' → logprob: -20.375553131103516

Token 1363: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -1.0683535037969705e-05
    2. 'read' → logprob: -12.12501049041748
    3. '.' → logprob: -12.37501049041748
    4. ').' → logprob: -14.12501049041748
    5. '_read' → logprob: -16.375011444091797
    6. ' .' → logprob: -16.750011444091797
    7. '.readline' → logprob: -16.875011444091797
    8. '._' → logprob: -17.375011444091797
    9. '(read' → logprob: -17.750011444091797
    10. '   ' → logprob: -18.125011444091797

Token 1364: '(se' (ID: 19430)
  Prédit: '(se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -1.8624639324116288e-06
    2. 'sector' → logprob: -13.500001907348633
    3. '(' → logprob: -14.875001907348633
    4. ')' → logprob: -17.375001907348633
    5. ' (' → logprob: -19.000001907348633
    6. ' sector' → logprob: -19.375001907348633
    7. ')(' → logprob: -19.750001907348633
    8. 'se' → logprob: -19.750001907348633
    9. '(segment' → logprob: -19.750001907348633
    10. '_sector' → logprob: -20.125001907348633

Token 1365: 'ctor' (ID: 4558)
  Prédit: 'ctor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ctor' → logprob: -5.200166469876422e-06
    2. 'ector' → logprob: -12.625004768371582
    3. 'sector' → logprob: -14.000004768371582
    4. 'ct' → logprob: -14.625004768371582
    5. 'CTOR' → logprob: -14.750004768371582
    6. 'ctors' → logprob: -17.3750057220459
    7. 'tor' → logprob: -18.1250057220459
    8. '#' → logprob: -18.2500057220459
    9. ' sector' → logprob: -18.6250057220459
    10. '_sector' → logprob: -18.6250057220459

Token 1366: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7074596881866455
    2. '())' → logprob: -0.7074596881866455
    3. '))' → logprob: -4.332459449768066
    4. '()' → logprob: -7.207459449768066
    5. '()))' → logprob: -8.707459449768066
    6. '())
' → logprob: -9.332459449768066
    7. '   ' → logprob: -10.832459449768066
    8. '(' → logprob: -11.207459449768066
    9. ')
' → logprob: -11.707459449768066
    10. '       ' → logprob: -11.707459449768066

Token 1367: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1368: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1369: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.347765181795694e-05
    2. '()\' → logprob: -10.250053405761719
    3. '()
' → logprob: -11.375053405761719
    4. '("")' → logprob: -12.375053405761719
    5. '(' → logprob: -13.500053405761719
    6. '('\' → logprob: -15.625053405761719
    7. '())' → logprob: -15.625053405761719
    8. '('' → logprob: -15.875053405761719
    9. '()

' → logprob: -16.25005340576172
    10. ' ()' → logprob: -16.37505340576172

Token 1370: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1371: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6931542754173279
    2. ' __' → logprob: -0.6931542754173279
    3. 'if' → logprob: -12.068154335021973
    4. '___' → logprob: -14.818154335021973
    5. ' if' → logprob: -15.068154335021973
    6. '____' → logprob: -15.943154335021973
    7. '_' → logprob: -15.943154335021973
    8. ' _' → logprob: -16.068153381347656
    9. '(__' → logprob: -16.318153381347656
    10. '_name' → logprob: -16.568153381347656

Token 1372: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.028505563735961914
    2. ' ==' → logprob: -4.278505325317383
    3. '==' → logprob: -4.528505325317383
    4. '.__' → logprob: -6.278505325317383
    5. '__.__' → logprob: -7.153505325317383
    6. '__.' → logprob: -7.903505325317383
    7. ' __' → logprob: -9.278505325317383
    8. '```' → logprob: -9.778505325317383
    9. 'name' → logprob: -10.403505325317383
    10. '=="' → logprob: -10.528505325317383

Token 1373: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00019150081789121032
    2. '==' → logprob: -8.625191688537598
    3. '__.__' → logprob: -11.875191688537598
    4. ' ==' → logprob: -12.750191688537598
    5. '=="' → logprob: -13.750191688537598
    6. '=='' → logprob: -14.875191688537598
    7. '__('' → logprob: -15.750191688537598
    8. '__.' → logprob: -16.00019073486328
    9. '___' → logprob: -16.50019073486328
    10. '____' → logprob: -16.50019073486328

Token 1374: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1462944895029068
    2. ' ==' → logprob: -2.771294593811035
    3. '__' → logprob: -2.771294593811035
    4. '=="' → logprob: -4.771294593811035
    5. '=='' → logprob: -6.021294593811035
    6. '==
' → logprob: -11.396294593811035
    7. '===' → logprob: -11.521294593811035
    8. '=' → logprob: -11.771294593811035
    9. '[' → logprob: -13.146294593811035
    10. '_' → logprob: -13.771294593811035

Token 1375: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.474170058965683
    2. ''' → logprob: -0.9741700887680054
    3. '__' → logprob: -9.349169731140137
    4. ' "__' → logprob: -12.349169731140137
    5. ' '__' → logprob: -13.599169731140137
    6. '('__' → logprob: -15.849169731140137
    7. '   ' → logprob: -17.099170684814453
    8. '("__' → logprob: -17.224170684814453
    9. ''"' → logprob: -17.224170684814453
    10. 'main' → logprob: -17.349170684814453

Token 1376: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.7491250875755213e-05
    2. 'name' → logprob: -10.750027656555176
    3. '_main' → logprob: -12.250027656555176
    4. '__' → logprob: -14.250027656555176
    5. 'm' → logprob: -15.250027656555176
    6. ' main' → logprob: -15.750027656555176
    7. 'built' → logprob: -16.12502670288086
    8. 'ma' → logprob: -18.37502670288086
    9. '_MAIN' → logprob: -18.50002670288086
    10. 'if' → logprob: -18.75002670288086

Token 1377: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.11335760354995728
    2. '__' → logprob: -2.2383575439453125
    3. '__":
' → logprob: -7.6133575439453125
    4. '__.' → logprob: -11.238357543945312
    5. '('__' → logprob: -12.113357543945312
    6. '__.__' → logprob: -12.238357543945312
    7. '__
' → logprob: -12.863357543945312
    8. '__:' → logprob: -12.863357543945312
    9. '.__' → logprob: -13.488357543945312
    10. '```' → logprob: -13.488357543945312

Token 1378: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.6350290179252625
    2. '   ' → logprob: -0.7600290179252625
    3. '	main' → logprob: -6.760028839111328
    4. ' main' → logprob: -6.885028839111328
    5. '__' → logprob: -8.885028839111328
    6. '(main' → logprob: -10.885028839111328
    7. '_main' → logprob: -10.885028839111328
    8. '    
' → logprob: -11.010028839111328
    9. '  ' → logprob: -11.260028839111328
    10. ' ' → logprob: -11.510028839111328

Token 1379: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.25
    3. '	main' → logprob: -21.125
    4. '   ' → logprob: -23.0
    5. '(main' → logprob: -24.625
    6. '_main' → logprob: -24.75
    7. '.main' → logprob: -25.75
    8. 'import' → logprob: -28.125
    9. 'mainwindow' → logprob: -28.625
    10. '/main' → logprob: -28.625

Token 1380: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1378
Tokens correctement prédits (1ère position, stricte): 611
Tokens correctement prédits (1ère position, avec adaptation): 660
Tokens correctement prédits (top 10): 1145
Précision stricte (1ère position): 44.34%
Précision adaptée (1ère position): 47.90%
Précision (top 10): 83.09%
================================================================================
