================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class IndentationStyle:
    def __init__(self, R: int, C: int, S: int):
        self.R = R
        self.C = C
        self.S = S

    def compute_indent(self, ro, rc, co, cc, so, sc):
        return self.R * (ro - rc) + self.C * (co - cc) + self.S * (so - sc)

    def __repr__(self):
        return f"IndentationStyle(R={self.R}, C={self.C}, S={self.S})"


class BracketCounter:
    def __init__(self):
        self.open_round = 0
        self.close_round = 0
        self.open_curly = 0
        self.close_curly = 0
        self.open_square = 0
        self.close_square = 0

    def update_from_line(self, line: str):
        for ch in line:
            if ch == '(':
                self.open_round += 1
            elif ch == ')':
                self.close_round += 1
            elif ch == '{':
                self.open_curly += 1
            elif ch == '}':
                self.close_curly += 1
            elif ch == '[':
                self.open_square += 1
            elif ch == ']':
                self.close_square += 1

    def prefix_tuple(self):
        return (self.open_round, self.close_round,
                self.open_curly, self.close_curly,
                self.open_square, self.close_square)

    def clone(self):
        bc = BracketCounter()
        bc.open_round = self.open_round
        bc.close_round = self.close_round
        bc.open_curly = self.open_curly
        bc.close_curly = self.close_curly
        bc.open_square = self.open_square
        bc.close_square = self.close_square
        return bc


class StylishProgram:
    def __init__(self, lines):
        self.lines = lines
        self.indentations = []
        self.bracket_counters = []

    def parse_indentations_and_prefixes(self):
        bc = BracketCounter()
        self.indentations = []
        self.bracket_counters = []
        for line in self.lines:
            indent = 0
            i = 0
            while i < len(line) and line[i] == '.':
                indent += 1
                i += 1
            self.indentations.append(indent)
            self.bracket_counters.append(bc.clone())
            bc.update_from_line(line[i:])


class StylishMasterFinder:
    def __init__(self, p_program: StylishProgram):
        self.p_program = p_program
        self.valid_styles = []

    def find_all_valid_styles(self):
        p = len(self.p_program.lines)
        self.p_program.parse_indentations_and_prefixes()
        for R in range(1, 21):
            for C in range(1, 21):
                for S in range(1, 21):
                    if self.is_style_valid(R, C, S):
                        self.valid_styles.append(IndentationStyle(R, C, S))

    def is_style_valid(self, R, C, S):
        # First line must have indentation 0 always
        if self.p_program.indentations[0] != 0:
            return False
        for i in range(1, len(self.p_program.lines)):
            prev_bc = self.p_program.bracket_counters[i]
            indent = R * (prev_bc.open_round - prev_bc.close_round) \
                     + C * (prev_bc.open_curly - prev_bc.close_curly) \
                     + S * (prev_bc.open_square - prev_bc.close_square)
            if indent != self.p_program.indentations[i]:
                return False
        return True


class StylishIndentator:
    def __init__(self, p_program: StylishProgram, q_program: StylishProgram, valid_styles):
        self.p_program = p_program
        self.q_program = q_program
        self.valid_styles = valid_styles

    def indent_lines(self):
        self.q_program.parse_indentations_and_prefixes()

        results = []
        for i in range(len(self.q_program.lines)):
            possible_indentations = set()
            bc = self.q_program.bracket_counters[i]
            ro = bc.open_round
            rc = bc.close_round
            co = bc.open_curly
            cc = bc.close_curly
            so = bc.open_square
            sc = bc.close_square
            for style in self.valid_styles:
                indent = style.compute_indent(ro, rc, co, cc, so, sc)
                possible_indentations.add(indent)
            if len(possible_indentations) == 1:
                results.append(possible_indentations.pop())
            else:
                results.append(-1)
        return results


def read_dataset():
    while True:
        line = ''
        while line.strip() == '':
            line = input()
        if not line:
            return None
        p, q = map(int, line.split())
        if p == 0 and q == 0:
            return None
        p_lines = []
        for _ in range(p):
            p_lines.append(input())
        q_lines = []
        for _ in range(q):
            q_lines.append(input())
        yield p_lines, q_lines


def main():
    while True:
        dataset = next(read_dataset(), None)
        if dataset is None:
            break
        p_lines, q_lines = dataset
        p_program = StylishProgram(p_lines)
        q_program = StylishProgram(q_lines)
        master_finder = StylishMasterFinder(p_program)
        master_finder.find_all_valid_styles()
        indentator = StylishIndentator(p_program, q_program, master_finder.valid_styles)
        indentations = indentator.indent_lines()
        print(' '.join(map(str, indentations)))


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Ind' (ID: 2761)
  → Token d'amorce (pas de prédiction)

Token 2: 'entation' (ID: 100159)
  → Token d'amorce (pas de prédiction)

Token 3: 'Style' (ID: 3977)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03591983765363693
    2. '{' → logprob: -4.035919666290283
    3. '```' → logprob: -5.035919666290283
    4. '(' → logprob: -5.160919666290283
    5. ' :' → logprob: -6.410919666290283
    6. '[' → logprob: -6.785919666290283
    7. ' ' → logprob: -6.785919666290283
    8. '.' → logprob: -7.910919666290283
    9. '   ' → logprob: -8.160920143127441
    10. '_' → logprob: -8.785920143127441

Token 4: ':
' (ID: 734)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.8915091753005981
    2. ':' → logprob: -1.1415091753005981
    3. '(' → logprob: -2.2665090560913086
    4. ' {' → logprob: -2.7665090560913086
    5. ' ' → logprob: -3.1415090560913086
    6. '```' → logprob: -3.6415090560913086
    7. '[' → logprob: -4.016509056091309
    8. '.' → logprob: -4.516509056091309
    9. ' :' → logprob: -6.766509056091309
    10. '\' → logprob: -7.016509056091309

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.41217032074928284
    2. '```' → logprob: -1.7871702909469604
    3. '(' → logprob: -2.53717041015625
    4. '\' → logprob: -3.41217041015625
    5. ':
' → logprob: -4.03717041015625
    6. '   ' → logprob: -4.53717041015625
    7. '\n' → logprob: -4.91217041015625
    8. '(
' → logprob: -5.28717041015625
    9. ''' → logprob: -5.41217041015625
    10. '``' → logprob: -6.16217041015625

Token 6: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9318839907646179
    2. '   ' → logprob: -1.3068840503692627
    3. '    ' → logprob: -1.9318840503692627
    4. '```' → logprob: -2.9318840503692627
    5. ''' → logprob: -3.8068840503692627
    6. ' 
' → logprob: -4.181883811950684
    7. ' def' → logprob: -4.181883811950684
    8. '    
' → logprob: -4.306883811950684
    9. '`' → logprob: -4.806883811950684
    10. '\' → logprob: -4.931883811950684

Token 7: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014624710194766521
    2. '<|end|>' → logprob: -5.76462459564209
    3. ' def' → logprob: -6.38962459564209
    4. '    ' → logprob: -6.51462459564209
    5. ' process' → logprob: -6.63962459564209
    6. ' ' → logprob: -7.01462459564209
    7. ' __' → logprob: -7.26462459564209
    8. '  ' → logprob: -7.38962459564209
    9. '_' → logprob: -7.38962459564209
    10. ' space' → logprob: -7.88962459564209

Token 8: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.68022444692906e-05
    2. ' init' → logprob: -10.500046730041504
    3. '_init' → logprob: -11.125046730041504
    4. 'ini' → logprob: -12.500046730041504
    5. '	init' → logprob: -15.125046730041504
    6. '_' → logprob: -15.875046730041504
    7. 'i' → logprob: -16.25004768371582
    8. '   ' → logprob: -16.75004768371582
    9. 'in' → logprob: -16.87504768371582
    10. 'nit' → logprob: -17.25004768371582

Token 9: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.20237036049365997
    2. '__(' → logprob: -1.7023704051971436
    3. '_' → logprob: -7.5773701667785645
    4. '__(
' → logprob: -8.327370643615723
    5. '__('' → logprob: -9.827370643615723
    6. '__((' → logprob: -9.827370643615723
    7. '(' → logprob: -10.077370643615723
    8. '___' → logprob: -10.327370643615723
    9. '__(*' → logprob: -11.952370643615723
    10. '__("' → logprob: -12.577370643615723

Token 10: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008195152622647583
    2. ' self' → logprob: -7.125819683074951
    3. ')' → logprob: -11.375819206237793
    4. '(self' → logprob: -12.875819206237793
    5. ' )' → logprob: -15.500819206237793
    6. ' ' → logprob: -16.25082015991211
    7. 'space' → logprob: -16.37582015991211
    8. '[self' → logprob: -16.50082015991211
    9. '	self' → logprob: -16.50082015991211
    10. ''s' → logprob: -16.62582015991211

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5401520133018494
    2. 'self' → logprob: -1.0401520729064941
    3. '_' → logprob: -3.915152072906494
    4. ')' → logprob: -3.915152072906494
    5. '(self' → logprob: -4.790152072906494
    6. ' self' → logprob: -5.290152072906494
    7. '):' → logprob: -5.540152072906494
    8. '_self' → logprob: -6.415152072906494
    9. ' ,' → logprob: -6.540152072906494
    10. ' ' → logprob: -7.290152072906494

Token 12: ' R' (ID: 460)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06996756047010422
    2. ' self' → logprob: -2.69496750831604
    3. ')' → logprob: -11.819967269897461
    4. 'spaces' → logprob: -11.944967269897461
    5. '   ' → logprob: -12.444967269897461
    6. '       ' → logprob: -13.194967269897461
    7. 'space' → logprob: -13.194967269897461
    8. ' spaces' → logprob: -13.194967269897461
    9. 'indent' → logprob: -13.444967269897461
    10. ' )' → logprob: -13.444967269897461

Token 13: ':' (ID: 25)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8469631671905518
    2. 'e' → logprob: -1.3469631671905518
    3. '):' → logprob: -2.0969631671905518
    4. ')' → logprob: -2.8469631671905518
    5. '=' → logprob: -3.3469631671905518
    6. '   ' → logprob: -3.9719631671905518
    7. ':' → logprob: -4.096962928771973
    8. 'O' → logprob: -4.596962928771973
    9. ' ):' → logprob: -4.846962928771973
    10. 'adius' → logprob: -5.346962928771973

Token 14: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.23963715136051178
    2. ' int' → logprob: -2.7396371364593506
    3. 'e' → logprob: -3.1146371364593506
    4. 'R' → logprob: -3.1146371364593506
    5. 'ight' → logprob: -4.48963737487793
    6. ')' → logprob: -4.86463737487793
    7. 'ange' → logprob: -5.11463737487793
    8. ' R' → logprob: -5.36463737487793
    9. '   ' → logprob: -5.73963737487793
    10. 'number' → logprob: -5.73963737487793

Token 15: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19306626915931702
    2. ')' → logprob: -1.8180662393569946
    3. ',' → logprob: -4.443066120147705
    4. '   ' → logprob: -7.068066120147705
    5. '):
' → logprob: -7.693066120147705
    6. ':' → logprob: -9.943066596984863
    7. '=' → logprob: -10.318066596984863
    8. '```' → logprob: -11.068066596984863
    9. ' ):' → logprob: -11.318066596984863
    10. '),' → logprob: -11.568066596984863

Token 16: ' C' (ID: 363)
  Prédit: ' spaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spaces' → logprob: -1.1880064010620117
    2. ' S' → logprob: -1.4380064010620117
    3. 'S' → logprob: -1.9380064010620117
    4. '   ' → logprob: -3.0630064010620117
    5. ' C' → logprob: -3.4380064010620117
    6. 'C' → logprob: -3.5630064010620117
    7. 'spaces' → logprob: -3.9380064010620117
    8. ' T' → logprob: -4.188006401062012
    9. ')' → logprob: -4.188006401062012
    10. ' space' → logprob: -4.313006401062012

Token 17: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10537034273147583
    2. ':' → logprob: -2.480370283126831
    3. ')' → logprob: -4.35537052154541
    4. '=' → logprob: -6.85537052154541
    5. ',' → logprob: -7.23037052154541
    6. ' ):' → logprob: -7.23037052154541
    7. ' :' → logprob: -8.35537052154541
    8. '   ' → logprob: -8.73037052154541
    9. '):
' → logprob: -8.73037052154541
    10. ':int' → logprob: -9.73037052154541

Token 18: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014210758730769157
    2. ' int' → logprob: -4.2642107009887695
    3. ')' → logprob: -11.63921070098877
    4. 'str' → logprob: -11.63921070098877
    5. ' str' → logprob: -11.76421070098877
    6. '[int' → logprob: -11.88921070098877
    7. ':int' → logprob: -12.51421070098877
    8. ' ' → logprob: -12.76421070098877
    9. '(int' → logprob: -13.26421070098877
    10. 'float' → logprob: -13.88921070098877

Token 19: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002498609945178032
    2. ')' → logprob: -6.252498626708984
    3. ':' → logprob: -8.502498626708984
    4. '):
' → logprob: -9.002498626708984
    5. ',' → logprob: -9.127498626708984
    6. '   ' → logprob: -9.252498626708984
    7. '```' → logprob: -10.502498626708984
    8. '):
' → logprob: -13.127498626708984
    9. '**' → logprob: -13.252498626708984
    10. ''):' → logprob: -13.502498626708984

Token 20: ' S' (ID: 336)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -1.6801702976226807
    2. ' D' → logprob: -2.1801702976226807
    3. ' spaces' → logprob: -2.3051702976226807
    4. '   ' → logprob: -2.4301702976226807
    5. ' S' → logprob: -3.1176702976226807
    6. ')' → logprob: -3.3051702976226807
    7. ' space' → logprob: -3.4301702976226807
    8. ' ' → logprob: -3.6176702976226807
    9. 'D' → logprob: -3.8051702976226807
    10. ' T' → logprob: -3.8051702976226807

Token 21: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01297362707555294
    2. '):' → logprob: -5.387973785400391
    3. ')' → logprob: -5.637973785400391
    4. 'paces' → logprob: -6.262973785400391
    5. ' :' → logprob: -7.762973785400391
    6. ',' → logprob: -8.01297378540039
    7. ':int' → logprob: -8.26297378540039
    8. '_:' → logprob: -8.38797378540039
    9. 'pace' → logprob: -8.63797378540039
    10. 'tring' → logprob: -8.76297378540039

Token 22: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.009313530288636684
    2. ' int' → logprob: -4.759313583374023
    3. 'str' → logprob: -7.759313583374023
    4. ' str' → logprob: -9.134313583374023
    5. ')' → logprob: -9.634313583374023
    6. 'float' → logprob: -10.634313583374023
    7. '(int' → logprob: -11.134313583374023
    8. '[int' → logprob: -11.134313583374023
    9. ':int' → logprob: -11.634313583374023
    10. 'List' → logprob: -12.009313583374023

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007516168989241123
    2. ')' → logprob: -7.375751495361328
    3. ':' → logprob: -9.625751495361328
    4. '   ' → logprob: -10.625751495361328
    5. '):
' → logprob: -10.750751495361328
    6. ',' → logprob: -12.000751495361328
    7. '```' → logprob: -12.750751495361328
    8. ''):' → logprob: -14.000751495361328
    9. ' ):' → logprob: -14.125751495361328
    10. '):
' → logprob: -14.625751495361328

Token 24: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021645331289619207
    2. '   ' → logprob: -6.877164363861084
    3. ':' → logprob: -7.502164363861084
    4. '```' → logprob: -8.127164840698242
    5. '<|end|>' → logprob: -10.252164840698242
    6. '\' → logprob: -10.377164840698242
    7. '\n' → logprob: -10.627164840698242
    8. '      ' → logprob: -11.002164840698242
    9. 'newline' → logprob: -11.127164840698242
    10. '     ' → logprob: -11.252164840698242

Token 25: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08927303552627563
    2. '       ' → logprob: -3.089272975921631
    3. ' self' → logprob: -3.339272975921631
    4. '   ' → logprob: -6.464272975921631
    5. '           ' → logprob: -6.839272975921631
    6. '```' → logprob: -7.839272975921631
    7. '        ' → logprob: -7.964272975921631
    8. '<|end|>' → logprob: -8.714273452758789
    9. ' ' → logprob: -8.839273452758789
    10. ' ' → logprob: -8.964273452758789

Token 26: '.R' (ID: 3395)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -6.515961285913363e-05
    2. '.R' → logprob: -10.625064849853516
    3. ' .' → logprob: -11.000064849853516
    4. '."""' → logprob: -12.750064849853516
    5. '.r' → logprob: -12.875064849853516
    6. ')' → logprob: -13.250064849853516
    7. '<|end|>' → logprob: -13.250064849853516
    8. '.)' → logprob: -13.500064849853516
    9. '.py' → logprob: -13.875064849853516
    10. '<|end|>' → logprob: -13.875064849853516

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1167564392089844
    2. '.' → logprob: -1.4917564392089844
    3. '=' → logprob: -1.6167564392089844
    4. ',' → logprob: -1.8667564392089844
    5. '<|end|>' → logprob: -3.2417564392089844
    6. '   ' → logprob: -4.241756439208984
    7. '  ' → logprob: -4.741756439208984
    8. ')' → logprob: -4.991756439208984
    9. ' .' → logprob: -5.491756439208984
    10. ' ' → logprob: -5.491756439208984

Token 28: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.6931540966033936
    2. ' R' → logprob: -0.6931540966033936
    3. ' ' → logprob: -12.568154335021973
    4. ' ' → logprob: -13.193154335021973
    5. '    ' → logprob: -14.693154335021973
    6. '	R' → logprob: -14.943154335021973
    7. '_R' → logprob: -15.568154335021973
    8. '`' → logprob: -15.943154335021973
    9. '   ' → logprob: -16.568153381347656
    10. 'C' → logprob: -16.943153381347656

Token 29: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45304206013679504
    2. '<|end|>' → logprob: -1.0780420303344727
    3. '   ' → logprob: -4.953042030334473
    4. ')' → logprob: -5.953042030334473
    5. '\' → logprob: -6.078042030334473
    6. '    ' → logprob: -6.203042030334473
    7. '        ' → logprob: -6.203042030334473
    8. '
' → logprob: -6.703042030334473
    9. '<|end|>' → logprob: -6.953042030334473
    10. '        
' → logprob: -6.953042030334473

Token 30: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014943131245672703
    2. '<|end|>' → logprob: -4.7649431228637695
    3. '        ' → logprob: -6.7649431228637695
    4. '.' → logprob: -6.8899431228637695
    5. '   ' → logprob: -7.0149431228637695
    6. '    ' → logprob: -7.2649431228637695
    7. ')' → logprob: -7.6399431228637695
    8. '      ' → logprob: -8.01494312286377
    9. '        
' → logprob: -8.13994312286377
    10. ' ' → logprob: -8.26494312286377

Token 31: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2875046133995056
    2. '<|end|>' → logprob: -2.5375046730041504
    3. '        ' → logprob: -3.1625046730041504
    4. ' ' → logprob: -3.2875046730041504
    5. ')' → logprob: -3.7875046730041504
    6. '.' → logprob: -3.9125046730041504
    7. ',' → logprob: -4.41250467300415
    8. 'C' → logprob: -4.66250467300415
    9. '
' → logprob: -5.28750467300415
    10. '    ' → logprob: -5.53750467300415

Token 32: '.C' (ID: 2010)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005350447725504637
    2. '.C' → logprob: -6.005350589752197
    3. ' .' → logprob: -6.005350589752197
    4. '.S' → logprob: -9.005350112915039
    5. ',' → logprob: -9.130350112915039
    6. 'C' → logprob: -9.880350112915039
    7. ' ' → logprob: -10.630350112915039
    8. '.I' → logprob: -10.880350112915039
    9. '.R' → logprob: -11.505350112915039
    10. '   ' → logprob: -11.755350112915039

Token 33: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4863716959953308
    2. ' =' → logprob: -0.9863716959953308
    3. '.' → logprob: -4.4863715171813965
    4. ')' → logprob: -7.6113715171813965
    5. ',' → logprob: -8.986371994018555
    6. '<|end|>' → logprob: -9.236371994018555
    7. '   ' → logprob: -9.361371994018555
    8. ' ' → logprob: -10.361371994018555
    9. '.=' → logprob: -10.736371994018555
    10. '  ' → logprob: -10.736371994018555

Token 34: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.4288041591644287
    2. ' C' → logprob: -1.0538041591644287
    3. 'S' → logprob: -9.803804397583008
    4. ' S' → logprob: -10.803804397583008
    5. ' ' → logprob: -10.928804397583008
    6. ' ' → logprob: -12.053804397583008
    7. '<|end|>' → logprob: -14.803804397583008
    8. ' =' → logprob: -15.053804397583008
    9. '=' → logprob: -15.053804397583008
    10. ',' → logprob: -15.116304397583008

Token 35: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11364951729774475
    2. '        
' → logprob: -2.863649606704712
    3. '
' → logprob: -4.238649368286133
    4. '<|end|>' → logprob: -4.238649368286133
    5. '        ' → logprob: -5.113649368286133
    6. ' 
' → logprob: -5.363649368286133
    7. '  
' → logprob: -5.738649368286133
    8. '    
' → logprob: -6.613649368286133
    9. '```' → logprob: -6.738649368286133
    10. 'S' → logprob: -6.988649368286133

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04909324273467064
    2. '        ' → logprob: -4.299093246459961
    3. '        
' → logprob: -4.299093246459961
    4. '
' → logprob: -5.049093246459961
    5. 'S' → logprob: -6.174093246459961
    6. ' ' → logprob: -6.549093246459961
    7. '```' → logprob: -6.549093246459961
    8. ' 
' → logprob: -6.549093246459961
    9. '    
' → logprob: -6.799093246459961
    10. '	' → logprob: -6.924093246459961

Token 37: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10151370614767075
    2. '        ' → logprob: -2.851513624191284
    3. ' ' → logprob: -4.226513862609863
    4. 'self' (adapté à ' self') → logprob: -5.226513862609863
    5. 'S' → logprob: -5.351513862609863
    6. '<|end|>' → logprob: -5.976513862609863
    7. '      ' → logprob: -5.976513862609863
    8. '   ' → logprob: -6.976513862609863
    9. '    ' → logprob: -7.101513862609863
    10. '  ' → logprob: -7.226513862609863

Token 38: '.S' (ID: 1242)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04305753856897354
    2. '.S' → logprob: -3.168057441711426
    3. ' .' → logprob: -10.793057441711426
    4. '   ' → logprob: -11.543057441711426
    5. 'S' → logprob: -11.793057441711426
    6. '=' → logprob: -12.543057441711426
    7. '.I' → logprob: -12.793057441711426
    8. '.R' → logprob: -13.168057441711426
    9. '```' → logprob: -13.418057441711426
    10. '.
' → logprob: -13.543057441711426

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14324243366718292
    2. '=' → logprob: -2.018242359161377
    3. '<|end|>' → logprob: -8.643242835998535
    4. ' ' → logprob: -8.768242835998535
    5. '.' → logprob: -9.143242835998535
    6. ')' → logprob: -9.643242835998535
    7. '   ' → logprob: -10.768242835998535
    8. '  ' → logprob: -11.393242835998535
    9. '<|end|>' → logprob: -12.018242835998535
    10. '_' → logprob: -12.643242835998535

Token 40: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3132677972316742
    2. ' S' → logprob: -1.3132678270339966
    3. ' ' → logprob: -12.313267707824707
    4. '  ' → logprob: -15.188267707824707
    5. '   ' → logprob: -15.188267707824707
    6. ' ' → logprob: -15.313267707824707
    7. '<|end|>' → logprob: -15.563267707824707
    8. '	S' → logprob: -16.313268661499023
    9. '=S' → logprob: -16.813268661499023
    10. '[' → logprob: -16.938268661499023

Token 41: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.356576144695282
    2. '
' → logprob: -1.7315762042999268
    3. ':' → logprob: -3.2315762042999268
    4. 'def' → logprob: -3.3565762042999268
    5. ' ' → logprob: -4.481575965881348
    6. '    
' → logprob: -4.856575965881348
    7. ' 
' → logprob: -5.481575965881348
    8. '.' → logprob: -5.606575965881348
    9. ')' → logprob: -5.606575965881348
    10. '```' → logprob: -5.606575965881348

Token 43: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.20844605565071106
    2. ' def' → logprob: -2.2084460258483887
    3. '   ' → logprob: -2.5834460258483887
    4. 'd' → logprob: -6.458446025848389
    5. ' ' → logprob: -7.833446025848389
    6. '	def' → logprob: -8.833446502685547
    7. '
' → logprob: -8.958446502685547
    8. '    
' → logprob: -9.083446502685547
    9. 'de' → logprob: -9.208446502685547
    10. '       ' → logprob: -9.458446502685547

Token 44: ' compute' (ID: 23864)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4176487922668457
    2. ' ' → logprob: -1.2926487922668457
    3. '_space' → logprob: -3.6676487922668457
    4. ' space' → logprob: -4.042648792266846
    5. ' _' → logprob: -4.417648792266846
    6. 'space' → logprob: -5.167648792266846
    7. '  ' → logprob: -6.792648792266846
    8. ' __' → logprob: -6.917648792266846
    9. '_indent' → logprob: -7.292648792266846
    10. ' ```' → logprob: -7.667648792266846

Token 45: '_indent' (ID: 196408)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05832033231854439
    2. '(' → logprob: -2.9333202838897705
    3. '_space' → logprob: -7.30832052230835
    4. '_indent' → logprob: -7.30832052230835
    5. 'Indent' → logprob: -7.55832052230835
    6. '   ' → logprob: -8.683320045471191
    7. '_spaces' → logprob: -8.683320045471191
    8. '```' → logprob: -9.183320045471191
    9. 'Space' → logprob: -9.558320045471191
    10. ' _' → logprob: -9.683320045471191

Token 46: '(self' (ID: 2402)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.019026024267077446
    2. '(' → logprob: -4.019025802612305
    3. '_' → logprob: -7.519025802612305
    4. '(self' → logprob: -9.394025802612305
    5. 'a' → logprob: -10.269025802612305
    6. ')' → logprob: -10.394025802612305
    7. 's' → logprob: -10.394025802612305
    8. ' (' → logprob: -10.519025802612305
    9. '   ' → logprob: -11.019025802612305
    10. '_level' → logprob: -11.394025802612305

Token 47: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8127939701080322
    2. ',' → logprob: -1.4377939701080322
    3. ')' → logprob: -1.5627939701080322
    4. '(' → logprob: -2.3127939701080322
    5. '_' → logprob: -6.312793731689453
    6. 's' → logprob: -6.812793731689453
    7. ':' → logprob: -7.062793731689453
    8. '('' → logprob: -7.062793731689453
    9. ' ):' → logprob: -7.187793731689453
    10. 'self' → logprob: -7.812793731689453

Token 48: ' ro' (ID: 974)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -1.2630711793899536
    2. 'r' → logprob: -1.6380711793899536
    3. ' R' → logprob: -1.8880711793899536
    4. ' )' → logprob: -2.388071060180664
    5. ' ' → logprob: -2.763071060180664
    6. 'R' → logprob: -2.888071060180664
    7. 'p' → logprob: -3.513071060180664
    8. ' p' → logprob: -3.638071060180664
    9. ')' → logprob: -3.638071060180664
    10. 's' → logprob: -4.638071060180664

Token 49: ',' (ID: 11)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.006457666400820017
    2. 'ws' → logprob: -5.256457805633545
    3. 'om' → logprob: -7.881457805633545
    4. 'und' → logprob: -8.006457328796387
    5. 'le' → logprob: -8.506457328796387
    6. 'wn' → logprob: -9.381457328796387
    7. 'unded' → logprob: -9.881457328796387
    8. 'ut' → logprob: -10.756457328796387
    9. 'ot' → logprob: -10.756457328796387
    10. 'u' → logprob: -11.256457328796387

Token 50: ' rc' (ID: 23309)
  Prédit: ' co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' co' → logprob: -0.9332061409950256
    2. ' c' → logprob: -2.495706081390381
    3. ' ' → logprob: -2.745706081390381
    4. ' col' → logprob: -3.120706081390381
    5. 'co' → logprob: -3.245706081390381
    6. 'c' → logprob: -3.558206081390381
    7. ' r' → logprob: -3.620706081390381
    8. ')' → logprob: -3.933206081390381
    9. ' ce' → logprob: -4.120706081390381
    10. '  ' → logprob: -4.308206081390381

Token 51: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5795779228210449
    2. ')' → logprob: -1.829577922821045
    3. 'r' → logprob: -2.329577922821045
    4. 'n' → logprob: -2.829577922821045
    5. 't' → logprob: -2.829577922821045
    6. 'nt' → logprob: -3.704577922821045
    7. ',' → logprob: -3.829577922821045
    8. 'l' → logprob: -4.954577922821045
    9. 's' → logprob: -5.329577922821045
    10. 'u' → logprob: -6.329577922821045

Token 52: ' co' (ID: 1407)
  Prédit: ' rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rs' → logprob: -0.014987410977482796
    2. 'rs' → logprob: -4.389987468719482
    3. ' ' → logprob: -6.264987468719482
    4. ' r' → logprob: -9.014986991882324
    5. '	rs' → logprob: -9.389986991882324
    6. ' sc' → logprob: -9.514986991882324
    7. '   ' → logprob: -9.889986991882324
    8. 'r' → logprob: -10.014986991882324
    9. ' s' → logprob: -10.514986991882324
    10. '  ' → logprob: -10.639986991882324

Token 53: ',' (ID: 11)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10859737545251846
    2. 'unt' → logprob: -3.2335972785949707
    3. 'n' → logprob: -3.7335972785949707
    4. ')' → logprob: -4.358597278594971
    5. 'm' → logprob: -4.983597278594971
    6. '):' → logprob: -5.233597278594971
    7. 'u' → logprob: -5.733597278594971
    8. 'nt' → logprob: -6.108597278594971
    9. 'd' → logprob: -6.233597278594971
    10. 'r' → logprob: -6.358597278594971

Token 54: ' cc' (ID: 22988)
  Prédit: ' cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cs' → logprob: -0.3826228976249695
    2. 'cs' → logprob: -2.0076229572296143
    3. ' cc' → logprob: -3.3826229572296143
    4. 's' → logprob: -3.6326229572296143
    5. 'c' → logprob: -3.8826229572296143
    6. ' c' → logprob: -4.007622718811035
    7. 'cc' → logprob: -4.132622718811035
    8. ' s' → logprob: -4.132622718811035
    9. ' ' → logprob: -4.632622718811035
    10. ' sc' → logprob: -4.757622718811035

Token 55: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07223883271217346
    2. ')' → logprob: -2.6972389221191406
    3. ',' → logprob: -6.197238922119141
    4. ' ):' → logprob: -9.19723892211914
    5. ':' → logprob: -10.07223892211914
    6. '):
' → logprob: -10.19723892211914
    7. ''):' → logprob: -10.94723892211914
    8. ' ' → logprob: -11.32223892211914
    9. '   ' → logprob: -11.44723892211914
    10. '=' → logprob: -12.19723892211914

Token 56: ' so' (ID: 813)
  Prédit: ' sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sc' → logprob: -0.34540534019470215
    2. ' so' → logprob: -1.5954053401947021
    3. ' s' → logprob: -4.220405578613281
    4. 'sc' → logprob: -4.220405578613281
    5. ' ' → logprob: -4.845405578613281
    6. ' sco' → logprob: -5.032905578613281
    7. 'so' → logprob: -5.157905578613281
    8. ' rs' → logprob: -5.282905578613281
    9. ' se' → logprob: -5.470405578613281
    10. ' cs' → logprob: -5.595405578613281

Token 57: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02244943007826805
    2. ')' → logprob: -4.147449493408203
    3. ',' → logprob: -5.397449493408203
    4. ':' → logprob: -7.647449493408203
    5. ' ):' → logprob: -7.647449493408203
    6. '):
' → logprob: -8.272449493408203
    7. '   ' → logprob: -9.272449493408203
    8. ''):' → logprob: -9.272449493408203
    9. 'u' → logprob: -9.522449493408203
    10. '=' → logprob: -9.647449493408203

Token 58: ' sc' (ID: 1460)
  Prédit: ' sc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sc' → logprob: -0.023445671424269676
    2. 'sc' → logprob: -3.7734456062316895
    3. ' s' → logprob: -9.898446083068848
    4. ' ' → logprob: -10.398446083068848
    5. ' cc' → logprob: -10.398446083068848
    6. ' ss' → logprob: -10.898446083068848
    7. 'cc' → logprob: -11.523446083068848
    8. ' and' → logprob: -11.898446083068848
    9. ' oc' → logprob: -11.898446083068848
    10. '	sc' → logprob: -12.023446083068848

Token 59: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029813556000590324
    2. ')' → logprob: -3.654813528060913
    3. ',' → logprob: -6.029813766479492
    4. ' ):' → logprob: -7.529813766479492
    5. '):
' → logprob: -8.154813766479492
    6. ':' → logprob: -8.779813766479492
    7. '=' → logprob: -10.529813766479492
    8. ' ' → logprob: -10.904813766479492
    9. '   ' → logprob: -11.529813766479492
    10. ''):' → logprob: -11.529813766479492

Token 60: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27332034707069397
    2. '       ' → logprob: -1.8983203172683716
    3. '):' → logprob: -2.523320436477661
    4. ')' → logprob: -5.398320198059082
    5. ',' → logprob: -6.773320198059082
    6. ' :' → logprob: -6.773320198059082
    7. '(' → logprob: -7.898320198059082
    8. '```' → logprob: -7.898320198059082
    9. '   ' → logprob: -8.398320198059082
    10. ':
' → logprob: -8.773320198059082

Token 61: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.734973132610321
    2. '           ' → logprob: -1.2349731922149658
    3. '        ' → logprob: -1.9849731922149658
    4. ' return' → logprob: -3.609973192214966
    5. ' indent' → logprob: -4.734972953796387
    6. '```' → logprob: -5.109972953796387
    7. '   ' → logprob: -5.234972953796387
    8. 'indent' → logprob: -5.359972953796387
    9. 'return' (adapté à ' return') → logprob: -5.484972953796387
    10. ')' → logprob: -5.609972953796387

Token 62: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.07833263278007507
    2. 'self' → logprob: -2.7033326625823975
    3. ' (' → logprob: -5.578332424163818
    4. ' ' → logprob: -6.203332424163818
    5. '(self' → logprob: -7.578332424163818
    6. ' '' → logprob: -7.703332424163818
    7. ' ' → logprob: -7.703332424163818
    8. '        ' → logprob: -7.828332424163818
    9. '(' → logprob: -8.703332901000977
    10. ' max' → logprob: -8.953332901000977

Token 63: '.R' (ID: 3395)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04718375578522682
    2. ' .' → logprob: -3.1721837520599365
    3. '.R' → logprob: -5.797183990478516
    4. ' ' → logprob: -7.672183990478516
    5. '.S' → logprob: -7.922183990478516
    6. ''.' → logprob: -9.547183990478516
    7. '.
' → logprob: -9.797183990478516
    8. '   ' → logprob: -10.547183990478516
    9. '  ' → logprob: -10.797183990478516
    10. '[' → logprob: -11.297183990478516

Token 64: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06198986992239952
    2. '*' → logprob: -2.8119897842407227
    3. ' +' → logprob: -12.061989784240723
    4. '*(' → logprob: -12.436989784240723
    5. ' ' → logprob: -12.686989784240723
    6. '+' → logprob: -12.686989784240723
    7. ' ' → logprob: -12.936989784240723
    8. ' **' → logprob: -14.311989784240723
    9. ' ro' → logprob: -14.436989784240723
    10. '*r' → logprob: -14.686989784240723

Token 65: ' (' (ID: 350)
  Prédit: ' ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ro' → logprob: -0.008055612444877625
    2. 'ro' → logprob: -4.883055686950684
    3. '(ro' → logprob: -7.758055686950684
    4. ' (' → logprob: -11.508055686950684
    5. ' ' → logprob: -12.383055686950684
    6. ' ' → logprob: -12.758055686950684
    7. '_ro' → logprob: -13.133055686950684
    8. 'r' → logprob: -14.133055686950684
    9. '(' → logprob: -14.508055686950684
    10. 'Ro' → logprob: -15.133055686950684

Token 66: 'ro' (ID: 298)
  Prédit: ' ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ro' → logprob: -0.5244751572608948
    2. 'ro' → logprob: -0.8994751572608948
    3. '(ro' → logprob: -6.89947509765625
    4. '_ro' → logprob: -8.39947509765625
    5. 'r' → logprob: -9.77447509765625
    6. 'o' → logprob: -11.27447509765625
    7. 'Ro' → logprob: -11.39947509765625
    8. ' ' → logprob: -12.14947509765625
    9. '-ro' → logprob: -12.27447509765625
    10. ')' → logprob: -12.64947509765625

Token 67: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8869231939315796
    2. ' +' → logprob: -1.0119231939315796
    3. ' )' → logprob: -2.136923313140869
    4. '+' → logprob: -2.261923313140869
    5. ')+' → logprob: -6.886923313140869
    6. '+)' → logprob: -6.886923313140869
    7. ' ' → logprob: -8.636922836303711
    8. '    ' → logprob: -9.886922836303711
    9. ' -' → logprob: -10.261922836303711
    10. '        ' → logprob: -10.636922836303711

Token 68: ' rc' (ID: 23309)
  Prédit: ' sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sc' → logprob: -0.7742180228233337
    2. ' co' → logprob: -1.2742180824279785
    3. ' ro' → logprob: -2.2742180824279785
    4. ' ' → logprob: -2.3992180824279785
    5. ' ' → logprob: -3.7742180824279785
    6. ' rc' → logprob: -4.3992180824279785
    7. 'co' → logprob: -5.1492180824279785
    8. ' r' → logprob: -5.3992180824279785
    9. '  ' → logprob: -6.0242180824279785
    10. ' oc' → logprob: -6.2742180824279785

Token 69: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012024929746985435
    2. ' )' → logprob: -6.751202583312988
    3. ')+' → logprob: -10.751202583312988
    4. ' +' → logprob: -12.376202583312988
    5. '+' → logprob: -12.751202583312988
    6. '        ' → logprob: -13.376202583312988
    7. '```' → logprob: -14.876202583312988
    8. '       ' → logprob: -15.376202583312988
    9. '+)' → logprob: -15.376202583312988
    10. ']' → logprob: -15.626202583312988

Token 70: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47408050298690796
    2. '+' → logprob: -0.974080502986908
    3. ' +
' → logprob: -13.724080085754395
    4. '<|end|>' → logprob: -14.099080085754395
    5. ' ' → logprob: -14.724080085754395
    6. '        ' → logprob: -15.349080085754395
    7. '    ' → logprob: -15.474080085754395
    8. ' plus' → logprob: -15.724080085754395
    9. '[' → logprob: -16.09908103942871
    10. ' +
' → logprob: -16.47408103942871

Token 71: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09124009311199188
    2. ' self' → logprob: -2.466240167617798
    3. '   ' → logprob: -7.091239929199219
    4. '       ' → logprob: -7.466239929199219
    5. '    ' → logprob: -7.841239929199219
    6. ' ' → logprob: -8.716239929199219
    7. '<|end|>' → logprob: -9.591239929199219
    8. '           ' → logprob: -9.966239929199219
    9. '        ' → logprob: -9.966239929199219
    10. '  ' → logprob: -10.216239929199219

Token 72: '.C' (ID: 2010)
  Prédit: '.C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.C' → logprob: -0.0021732202731072903
    2. '.S' → logprob: -6.37717342376709
    3. '.' → logprob: -8.00217342376709
    4. '.R' → logprob: -9.12717342376709
    5. ' .' → logprob: -11.50217342376709
    6. 'C' → logprob: -13.00217342376709
    7. '.T' → logprob: -13.12717342376709
    8. '`.' → logprob: -13.12717342376709
    9. '.D' → logprob: -13.62717342376709
    10. '.Q' → logprob: -13.87717342376709

Token 73: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1742738038301468
    2. '*' → logprob: -1.9242738485336304
    3. '*(' → logprob: -4.42427396774292
    4. '(co' → logprob: -6.67427396774292
    5. ' (' → logprob: -8.174273490905762
    6. ' *(' → logprob: -8.549273490905762
    7. ' ' → logprob: -9.799273490905762
    8. '(' → logprob: -9.924273490905762
    9. '`' → logprob: -9.924273490905762
    10. ' ' → logprob: -11.174273490905762

Token 74: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.016254890710115433
    2. ' ' → logprob: -5.141254901885986
    3. '(' → logprob: -5.641254901885986
    4. '(space' → logprob: -6.016254901885986
    5. '(s' → logprob: -6.266254901885986
    6. '<|end|>' → logprob: -7.266254901885986
    7. ' ' → logprob: -7.641254901885986
    8. '(co' → logprob: -8.641254425048828
    9. ''' → logprob: -8.766254425048828
    10. '(sp' → logprob: -9.016254425048828

Token 75: 'co' (ID: 1191)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.04318234324455261
    2. ' so' → logprob: -3.293182373046875
    3. ' (' → logprob: -6.543182373046875
    4. '(' → logprob: -6.793182373046875
    5. 'co' → logprob: -6.793182373046875
    6. ' ' → logprob: -7.418182373046875
    7. '(co' → logprob: -8.168182373046875
    8. '   ' → logprob: -9.293182373046875
    9. '  ' → logprob: -9.418182373046875
    10. ' co' → logprob: -9.668182373046875

Token 76: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008640335872769356
    2. '-' → logprob: -4.758640289306641
    3. ' ' → logprob: -10.88364028930664
    4. '<|end|>' → logprob: -12.63364028930664
    5. ')' → logprob: -13.00864028930664
    6. ' ' → logprob: -14.00864028930664
    7. ' -
' → logprob: -15.00864028930664
    8. ' –' → logprob: -16.13364028930664
    9. '*' → logprob: -16.50864028930664
    10. ' *' → logprob: -16.88364028930664

Token 77: ' cc' (ID: 22988)
  Prédit: ' cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cc' → logprob: -0.003901127027347684
    2. 'cc' → logprob: -5.62890100479126
    3. '	cc' → logprob: -8.378901481628418
    4. ' ' → logprob: -10.003901481628418
    5. ' sc' → logprob: -12.003901481628418
    6. '<|end|>' → logprob: -12.503901481628418
    7. ' c' → logprob: -12.628901481628418
    8. ' nc' → logprob: -13.378901481628418
    9. ' co' → logprob: -13.503901481628418
    10. ' ' → logprob: -13.503901481628418

Token 78: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012237003829795867
    2. '+' → logprob: -10.1251220703125
    3. ')+' → logprob: -10.1251220703125
    4. ' +' → logprob: -10.7501220703125
    5. ' )' → logprob: -10.8751220703125
    6. '```' → logprob: -14.7501220703125
    7. ' ' → logprob: -15.3751220703125
    8. '）' → logprob: -15.3751220703125
    9. '}' → logprob: -15.6251220703125
    10. ']' → logprob: -15.6251220703125

Token 79: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31396257877349854
    2. '+' → logprob: -1.3139625787734985
    3. 'self' → logprob: -8.313962936401367
    4. ' ' → logprob: -8.563962936401367
    5. '+self' → logprob: -8.938962936401367
    6. '*' → logprob: -10.688962936401367
    7. '```' → logprob: -10.813962936401367
    8. '`' → logprob: -11.438962936401367
    9. ' ' → logprob: -11.438962936401367
    10. '        ' → logprob: -11.938962936401367

Token 80: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38689088821411133
    2. ' self' → logprob: -1.1368908882141113
    3. 's' → logprob: -11.886890411376953
    4. ' ' → logprob: -12.636890411376953
    5. '       ' → logprob: -12.886890411376953
    6. '	self' → logprob: -13.011890411376953
    7. '    ' → logprob: -13.761890411376953
    8. '   ' → logprob: -14.011890411376953
    9. '(self' → logprob: -14.011890411376953
    10. '           ' → logprob: -14.386890411376953

Token 81: '.S' (ID: 1242)
  Prédit: '.S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.S' → logprob: -0.0002913678181357682
    2. '.' → logprob: -8.25029182434082
    3. ' .' → logprob: -10.87529182434082
    4. 'S' → logprob: -11.50029182434082
    5. '.R' → logprob: -15.00029182434082
    6. '`.' → logprob: -15.62529182434082
    7. '	S' → logprob: -16.12529182434082
    8. '```' → logprob: -16.25029182434082
    9. ''.' → logprob: -16.37529182434082
    10. '.С' → logprob: -17.00029182434082

Token 82: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0314275361597538
    2. '*' → logprob: -3.5314276218414307
    3. '*(' → logprob: -6.406427383422852
    4. ' *(' → logprob: -11.781427383422852
    5. ' (' → logprob: -11.906427383422852
    6. ' ' → logprob: -11.906427383422852
    7. '(' → logprob: -13.656427383422852
    8. '(sc' → logprob: -14.281427383422852
    9. ')' → logprob: -14.656427383422852
    10. '(s' → logprob: -14.656427383422852

Token 83: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03863301873207092
    2. '(' → logprob: -3.413633108139038
    3. '(s' → logprob: -5.538632869720459
    4. '(sc' → logprob: -6.913632869720459
    5. ' ' → logprob: -11.163633346557617
    6. '<|end|>' → logprob: -11.663633346557617
    7. '(sd' → logprob: -12.663633346557617
    8. '(space' → logprob: -12.663633346557617
    9. '(S' → logprob: -12.788633346557617
    10. '(ss' → logprob: -13.038633346557617

Token 84: 'so' (ID: 786)
  Prédit: 'so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.0017054134514182806
    2. '(' → logprob: -6.626705646514893
    3. ' so' → logprob: -8.501705169677734
    4. ' (' → logprob: -10.126705169677734
    5. '   ' → logprob: -10.251705169677734
    6. ')' → logprob: -10.626705169677734
    7. ' ' → logprob: -10.876705169677734
    8. 'sc' → logprob: -11.126705169677734
    9. '(sc' → logprob: -11.126705169677734
    10. '(s' → logprob: -11.626705169677734

Token 85: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3133373558521271
    2. '-' → logprob: -1.3133373260498047
    3. ' ' → logprob: -9.688337326049805
    4. ' -
' → logprob: -11.688337326049805
    5. ' ' → logprob: -13.313337326049805
    6. ')' → logprob: -13.563337326049805
    7. '-
' → logprob: -13.688337326049805
    8. '−' → logprob: -15.063337326049805
    9. ' −' → logprob: -15.563337326049805
    10. '<|end|>' → logprob: -15.813337326049805

Token 86: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.5759640336036682
    2. ' sc' → logprob: -0.8259640336036682
    3. ' ' → logprob: -11.825963973999023
    4. '(sc' → logprob: -12.200963973999023
    5. 'cc' → logprob: -12.450963973999023
    6. ')' → logprob: -13.200963973999023
    7. '	sc' → logprob: -13.200963973999023
    8. '=sc' → logprob: -13.325963973999023
    9. '_sc' → logprob: -14.200963973999023
    10. 'c' → logprob: -14.825963973999023

Token 87: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ' )' → logprob: -13.12500286102295
    3. ')
' → logprob: -15.50000286102295
    4. ')return' → logprob: -16.250001907348633
    5. '   ' → logprob: -16.500001907348633
    6. '}' → logprob: -16.750001907348633
    7. '       ' → logprob: -17.250001907348633
    8. ')`' → logprob: -17.500001907348633
    9. ')#' → logprob: -17.875001907348633
    10. '<|end|>' → logprob: -18.500001907348633

Token 88: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5292723178863525
    2. '\n' → logprob: -1.6542723178863525
    3. '<|end|>' → logprob: -2.0292723178863525
    4. ' ' → logprob: -3.5292723178863525
    5. ' 
' → logprob: -4.029272079467773
    6. '```' → logprob: -4.529272079467773
    7. '#' → logprob: -4.654272079467773
    8. '\' → logprob: -5.404272079467773
    9. '   ' → logprob: -5.779272079467773
    10. '' → logprob: -5.779272079467773

Token 89: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9882077574729919
    2. '\n' → logprob: -1.7382078170776367
    3. ' ' → logprob: -1.8632078170776367
    4. '<|end|>' → logprob: -2.6132078170776367
    5. ' 
' → logprob: -2.7382078170776367
    6. '\' → logprob: -2.9882078170776367
    7. 'n' → logprob: -3.6132078170776367
    8. '.' → logprob: -4.363207817077637
    9. '#' → logprob: -4.363207817077637
    10. '   ' → logprob: -4.488207817077637

Token 90: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.670950174331665
    2. ' __' → logprob: -0.795950174331665
    3. '_' → logprob: -3.670950174331665
    4. ' _' → logprob: -5.170949935913086
    5. ' validate' → logprob: -6.420949935913086
    6. ' compute' → logprob: -6.420949935913086
    7. ' check' → logprob: -7.045949935913086
    8. ' space' → logprob: -7.545949935913086
    9. '__' → logprob: -7.670949935913086
    10. ' ' → logprob: -8.670949935913086

Token 91: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.04865708574652672
    2. 'e' → logprob: -3.048657178878784
    3. 'repr' → logprob: -10.798657417297363
    4. 'str' → logprob: -10.798657417297363
    5. 'a' → logprob: -11.673657417297363
    6. 'i' → logprob: -12.423657417297363
    7. 'l' → logprob: -13.173657417297363
    8. 'hash' → logprob: -13.298657417297363
    9. 'add' → logprob: -13.298657417297363
    10. 'r' → logprob: -13.423657417297363

Token 92: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.3952000141143799
    2. '__' → logprob: -1.1452000141143799
    3. '__('' → logprob: -5.520199775695801
    4. '__(
' → logprob: -5.520199775695801
    5. '__("' → logprob: -9.2701997756958
    6. '___' → logprob: -9.8951997756958
    7. '_' → logprob: -10.0201997756958
    8. '__((' → logprob: -10.3951997756958
    9. '____' → logprob: -10.6451997756958
    10. '__.__' → logprob: -11.1451997756958

Token 93: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.656383680412546e-05
    2. ')' → logprob: -10.125046730041504
    3. ' self' → logprob: -12.125046730041504
    4. ' ' → logprob: -15.250046730041504
    5. '
' → logprob: -15.500046730041504
    6. '   ' → logprob: -15.750046730041504
    7. '(self' → logprob: -16.375045776367188
    8. '       ' → logprob: -17.125045776367188
    9. '  ' → logprob: -17.125045776367188
    10. '

' → logprob: -17.375045776367188

Token 94: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7951124310493469
    2. '):' → logprob: -0.7951124310493469
    3. 'self' → logprob: -2.545112371444702
    4. '<|end|>' → logprob: -4.795112609863281
    5. '):
' → logprob: -6.295112609863281
    6. ',' → logprob: -6.295112609863281
    7. '__' → logprob: -6.420112609863281
    8. '(self' → logprob: -6.545112609863281
    9. ' self' → logprob: -8.420112609863281
    10. '_self' → logprob: -8.545112609863281

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012213163427077234
    2. ' return' → logprob: -9.2501220703125
    3. 'return' → logprob: -10.6251220703125
    4. '   ' → logprob: -15.0001220703125
    5. '      ' → logprob: -15.0001220703125
    6. '           ' → logprob: -15.2501220703125
    7. ''' → logprob: -15.6251220703125
    8. ':return' → logprob: -16.3751220703125
    9. '    ' → logprob: -16.7501220703125
    10. '	return' → logprob: -16.7501220703125

Token 96: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005796041805297136
    2. ' return' → logprob: -7.750579833984375
    3. 'return' (adapté à ' return') → logprob: -9.000579833984375
    4. '   ' → logprob: -11.125579833984375
    5. '      ' → logprob: -12.125579833984375
    6. '    ' → logprob: -13.500579833984375
    7. '     ' → logprob: -13.750579833984375
    8. '           ' → logprob: -14.250579833984375
    9. '    ' → logprob: -14.500579833984375
    10. '        ' → logprob: -14.625579833984375

Token 97: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.10021044313907623
    2. 'f' → logprob: -2.350210428237915
    3. ''f' → logprob: -13.600210189819336
    4. '	f' → logprob: -13.975210189819336
    5. '"' → logprob: -14.225210189819336
    6. ''' → logprob: -14.600210189819336
    7. ' ' → logprob: -14.850210189819336
    8. '   ' → logprob: -16.350210189819336
    9. '(f' → logprob: -16.600210189819336
    10. '       ' → logprob: -17.100210189819336

Token 98: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.030056394636631012
    2. ''' → logprob: -3.9050564765930176
    3. '"class' → logprob: -5.780056476593018
    4. '(' → logprob: -6.155056476593018
    5. '"I' → logprob: -6.530056476593018
    6. 'Indent' → logprob: -6.655056476593018
    7. '"<' → logprob: -7.905056476593018
    8. '<class' → logprob: -8.03005599975586
    9. ''class' → logprob: -8.53005599975586
    10. 'Ind' → logprob: -8.90505599975586

Token 99: 'Indent' (ID: 62786)
  Prédit: 'Indent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Indent' → logprob: -8.792751032160595e-05
    2. 'I' → logprob: -9.75008773803711
    3. '<' → logprob: -11.25008773803711
    4. 'Indented' → logprob: -12.50008773803711
    5. '"' → logprob: -13.00008773803711
    6. ''' → logprob: -13.12508773803711
    7. 'Ind' → logprob: -13.50008773803711
    8. '(' → logprob: -13.50008773803711
    9. '('' → logprob: -14.12508773803711
    10. '"I' → logprob: -14.25008773803711

Token 100: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -5.200166469876422e-06
    2. 'a' → logprob: -12.625004768371582
    3. 'Style' → logprob: -13.750004768371582
    4. 'at' → logprob: -15.125004768371582
    5. ' at' → logprob: -16.2500057220459
    6. '   ' → logprob: -16.6250057220459
    7. 'atio' → logprob: -16.7500057220459
    8. 'ati' → logprob: -16.7500057220459
    9. '```' → logprob: -16.8750057220459
    10. '{' → logprob: -17.2500057220459

Token 101: 'Style' (ID: 3977)
  Prédit: 'Style'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Style' → logprob: -2.1008713702030946e-06
    2. 'Sty' → logprob: -13.875001907348633
    3. 'Styl' → logprob: -14.250001907348633
    4. 'S' → logprob: -15.750001907348633
    5. 'style' → logprob: -15.875001907348633
    6. ' style' → logprob: -17.125001907348633
    7. ' Style' → logprob: -17.500001907348633
    8. 'St' → logprob: -18.750001907348633
    9. 'Styles' → logprob: -18.750001907348633
    10. '(' → logprob: -19.750001907348633

Token 102: '(R' (ID: 4092)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38817089796066284
    2. '(R' → logprob: -1.1381709575653076
    3. '(f' → logprob: -7.5131707191467285
    4. '(indent' → logprob: -8.388171195983887
    5. '(`' → logprob: -8.763171195983887
    6. '('' → logprob: -8.763171195983887
    7. 'Indent' → logprob: -9.638171195983887
    8. '(
' → logprob: -10.013171195983887
    9. ' (' → logprob: -10.638171195983887
    10. '("' → logprob: -10.888171195983887

Token 103: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.003224295098334551
    2. '=' → logprob: -5.7532243728637695
    3. '{' → logprob: -10.62822437286377
    4. '={},' → logprob: -11.25322437286377
    5. '=self' → logprob: -12.37822437286377
    6. ',' → logprob: -12.87822437286377
    7. '=}' → logprob: -14.25322437286377
    8. '=
' → logprob: -14.87822437286377
    9. '={}' → logprob: -15.37822437286377
    10. ' ={' → logprob: -15.75322437286377

Token 104: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.229872087715194e-05
    2. ' self' → logprob: -10.000061988830566
    3. '{' → logprob: -11.125061988830566
    4. '
' → logprob: -14.125061988830566
    5. '(self' → logprob: -15.375061988830566
    6. '   ' → logprob: -15.500061988830566
    7. ' ' → logprob: -15.875061988830566
    8. '       ' → logprob: -16.125062942504883
    9. ')' → logprob: -16.375062942504883
    10. '	self' → logprob: -16.500062942504883

Token 105: '.R' (ID: 3395)
  Prédit: '.R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.R' → logprob: -1.6405310816480778e-05
    2. 'self' → logprob: -12.000016212463379
    3. '.' → logprob: -12.125016212463379
    4. ' .' → logprob: -13.125016212463379
    5. 'R' → logprob: -13.250016212463379
    6. '.S' → logprob: -14.625016212463379
    7. '.r' → logprob: -15.500016212463379
    8. '	R' → logprob: -15.750016212463379
    9. '}.' → logprob: -15.875016212463379
    10. '}.{' → logprob: -17.625017166137695

Token 106: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017529279284644872
    2. '},' → logprob: -9.250175476074219
    3. ' ,' → logprob: -9.875175476074219
    4. ',
' → logprob: -10.625175476074219
    5. '),' → logprob: -13.750175476074219
    6. '}' → logprob: -14.125175476074219
    7. ',

' → logprob: -14.625175476074219
    8. '‌,' → logprob: -14.750175476074219
    9. '   ' → logprob: -15.375175476074219
    10. '       ' → logprob: -16.25017547607422

Token 107: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.04877835512161255
    2. 'C' → logprob: -3.0487782955169678
    3. ',' → logprob: -9.423778533935547
    4. ' ' → logprob: -9.673778533935547
    5. ' ,' → logprob: -10.548778533935547
    6. ' f' → logprob: -11.923778533935547
    7. ' ' → logprob: -12.298778533935547
    8. ' self' → logprob: -12.673778533935547
    9. 'self' → logprob: -12.673778533935547
    10. ',C' → logprob: -13.423778533935547

Token 108: '={' (ID: 1693)
  Prédit: '},'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '},' → logprob: -0.1430312544107437
    2. '={' → logprob: -2.268031358718872
    3. '}' → logprob: -4.268031120300293
    4. '=' → logprob: -5.018031120300293
    5. 'self' → logprob: -5.768031120300293
    6. '},{' → logprob: -6.018031120300293
    7. '=self' → logprob: -6.768031120300293
    8. '{' → logprob: -6.768031120300293
    9. ',' → logprob: -7.018031120300293
    10. '}{' → logprob: -8.768031120300293

Token 109: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018547065556049347
    2. '{' → logprob: -4.143547058105469
    3. ' self' → logprob: -6.018547058105469
    4. ' {' → logprob: -9.643547058105469
    5. ' ' → logprob: -12.893547058105469
    6. 'f' → logprob: -13.268547058105469
    7. '{}' → logprob: -13.393547058105469
    8. '
' → logprob: -14.018547058105469
    9. '   ' → logprob: -14.268547058105469
    10. '(self' → logprob: -14.268547058105469

Token 110: '.C' (ID: 2010)
  Prédit: '},'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '},' → logprob: -0.012709417380392551
    2. '}' → logprob: -5.262709617614746
    3. ',' → logprob: -5.512709617614746
    4. '.C' → logprob: -6.387709617614746
    5. '},{' → logprob: -7.012709617614746
    6. 'C' → logprob: -8.637709617614746
    7. '.' → logprob: -8.887709617614746
    8. '),' → logprob: -9.012709617614746
    9. '.S' → logprob: -9.137709617614746
    10. '},
' → logprob: -9.637709617614746

Token 111: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004997743526473641
    2. ' ,' → logprob: -7.750499725341797
    3. ')' → logprob: -10.000499725341797
    4. ',
' → logprob: -11.875499725341797
    5. '),' → logprob: -12.000499725341797
    6. '},' → logprob: -12.250499725341797
    7. '   ' → logprob: -13.500499725341797
    8. '",' → logprob: -13.500499725341797
    9. '}' → logprob: -14.125499725341797
    10. '       ' → logprob: -14.125499725341797

Token 112: ' S' (ID: 336)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.944196343421936
    2. ' self' → logprob: -1.319196343421936
    3. ' S' → logprob: -1.819196343421936
    4. ' f' → logprob: -2.3191962242126465
    5. 'S' → logprob: -3.0691962242126465
    6. ' C' → logprob: -3.9441962242126465
    7. 'C' → logprob: -4.4441962242126465
    8. 'f' → logprob: -6.1941962242126465
    9. ' ' → logprob: -6.9441962242126465
    10. 's' → logprob: -6.9441962242126465

Token 113: '={' (ID: 1693)
  Prédit: '})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.7589609622955322
    2. '}' → logprob: -0.8839609622955322
    3. '={' → logprob: -2.3839609622955322
    4. ')}' → logprob: -3.8839609622955322
    5. ')' → logprob: -5.508960723876953
    6. '{' → logprob: -7.258960723876953
    7. '}")' → logprob: -7.383960723876953
    8. '}"' → logprob: -8.758960723876953
    9. '}>{' → logprob: -9.883960723876953
    10. '}{' → logprob: -10.008960723876953

Token 114: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00013166792632546276
    2. ' self' → logprob: -9.125131607055664
    3. '{' → logprob: -10.750131607055664
    4. '}' → logprob: -14.750131607055664
    5. 's' → logprob: -15.625131607055664
    6. '(self' → logprob: -16.000131607055664
    7. '   ' → logprob: -16.125131607055664
    8. 'f' → logprob: -16.500131607055664
    9. '=self' → logprob: -16.625131607055664
    10. ' ' → logprob: -16.750131607055664

Token 115: '.S' (ID: 1242)
  Prédit: '.S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.S' → logprob: -0.0006010498036630452
    2. ')' → logprob: -8.500600814819336
    3. '.' → logprob: -8.500600814819336
    4. 'S' → logprob: -9.500600814819336
    5. '.R' → logprob: -9.625600814819336
    6. '})' → logprob: -10.625600814819336
    7. '}' → logprob: -10.875600814819336
    8. ')}' → logprob: -12.375600814819336
    9. '   ' → logprob: -14.250600814819336
    10. '.C' → logprob: -14.375600814819336

Token 116: '})' (ID: 9263)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.2569602429866791
    2. ')' → logprob: -1.5069602727890015
    3. ')")' → logprob: -5.756960391998291
    4. ')">' → logprob: -6.756960391998291
    5. '}")' → logprob: -8.506959915161133
    6. '")' → logprob: -8.506959915161133
    7. '}"' → logprob: -8.881959915161133
    8. ')`' → logprob: -10.006959915161133
    9. '})' → logprob: -10.256959915161133
    10. ')}' → logprob: -10.631959915161133

Token 117: '"


' (ID: 36470)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0008102210704237223
    2. '"""' → logprob: -7.625810146331787
    3. '```' → logprob: -8.250810623168945
    4. '")' → logprob: -10.875810623168945
    5. ')' → logprob: -11.875810623168945
    6. ''' → logprob: -11.875810623168945
    7. '`' → logprob: -12.125810623168945
    8. '"`' → logprob: -12.250810623168945
    9. '<|end|>' → logprob: -12.250810623168945
    10. '"
' → logprob: -12.500810623168945

Token 118: 'class' (ID: 1444)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7625889778137207
    2. 'class' → logprob: -1.6375889778137207
    3. 'c' → logprob: -2.5125889778137207
    4. '#' → logprob: -2.6375889778137207
    5. 'n' → logprob: -2.7625889778137207
    6. '
' → logprob: -3.5125889778137207
    7. 'def' → logprob: -4.012588977813721
    8. 'r' → logprob: -4.012588977813721
    9. 'a' → logprob: -4.262588977813721
    10. 'i' → logprob: -4.887588977813721

Token 119: ' Br' (ID: 2866)
  Prédit: ' Ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Ind' → logprob: -0.37219128012657166
    2. ' Solution' → logprob: -2.1221911907196045
    3. ' Code' → logprob: -2.6221911907196045
    4. ' Solver' → logprob: -3.2471911907196045
    5. ' Unknown' → logprob: -3.6221911907196045
    6. 'Indent' → logprob: -4.622191429138184
    7. ' Input' → logprob: -5.372191429138184
    8. ' Problem' → logprob: -5.372191429138184
    9. ' Possible' → logprob: -5.497191429138184
    10. ' Candidate' → logprob: -5.622191429138184

Token 120: 'acket' (ID: 8480)
  Prédit: 'ace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ace' → logprob: -0.49672865867614746
    2. 'acket' → logprob: -0.9967286586761475
    3. 'aces' → logprob: -4.996728897094727
    4. 'ackets' → logprob: -5.121728897094727
    5. 'ack' → logprob: -5.871728897094727
    6. 'ute' → logprob: -6.621728897094727
    7. 'a' → logprob: -6.746728897094727
    8. 'oken' → logprob: -7.496728897094727
    9. 'e' → logprob: -7.621728897094727
    10. 'ain' → logprob: -7.746728897094727

Token 121: 'Counter' (ID: 16263)
  Prédit: 'Matcher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Matcher' → logprob: -0.452968567609787
    2. 'Style' → logprob: -2.0779685974121094
    3. 'Counter' → logprob: -2.5779685974121094
    4. 'Balancer' → logprob: -2.7029685974121094
    5. 'Balance' → logprob: -3.7029685974121094
    6. 'Tracker' → logprob: -4.077968597412109
    7. 'Matching' → logprob: -4.452968597412109
    8. 'Indent' → logprob: -4.577968597412109
    9. 'Stack' → logprob: -4.952968597412109
    10. 'Sequence' → logprob: -5.077968597412109

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029788676649332047
    2. ':
' → logprob: -3.5297887325286865
    3. ' :' → logprob: -10.404788970947266
    4. ' :
' → logprob: -13.029788970947266
    5. ':

' → logprob: -13.279788970947266
    6. '(' → logprob: -14.154788970947266
    7. '():' → logprob: -14.154788970947266
    8. '<|end|>' → logprob: -14.654788970947266
    9. ':def' → logprob: -14.654788970947266
    10. '):' → logprob: -14.779788970947266

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22377650439739227
    2. ':' → logprob: -2.0987765789031982
    3. ':
' → logprob: -2.5987765789031982
    4. ' def' → logprob: -6.973776340484619
    5. '<|end|>' → logprob: -6.973776340484619
    6. '    
' → logprob: -8.098776817321777
    7. '    ' → logprob: -8.223776817321777
    8. 'def' → logprob: -8.348776817321777
    9. '
' → logprob: -8.973776817321777
    10. ' :
' → logprob: -9.598776817321777

Token 124: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.1009645089507103
    2. '   ' → logprob: -2.9759645462036133
    3. 'def' (adapté à ' def') → logprob: -3.1009645462036133
    4. ' ' → logprob: -11.850964546203613
    5. '```' → logprob: -11.975964546203613
    6. '    ' → logprob: -12.100964546203613
    7. '	def' → logprob: -12.225964546203613
    8. '  ' → logprob: -12.725964546203613
    9. '    
' → logprob: -14.100964546203613
    10. 'class' → logprob: -14.225964546203613

Token 125: ' __' (ID: 2516)
  Prédit: ' init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' init' → logprob: -0.5810267329216003
    2. ' __' → logprob: -1.2060267925262451
    3. 'init' → logprob: -2.581026792526245
    4. ' def' → logprob: -3.581026792526245
    5. ' ' → logprob: -3.956026792526245
    6. '_init' → logprob: -4.081026554107666
    7. ' ' → logprob: -7.206026554107666
    8. ' _' → logprob: -7.706026554107666
    9. 'def' → logprob: -8.581027030944824
    10. ' ```' → logprob: -9.081027030944824

Token 126: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -9.088346359931165e-07
    2. '```' → logprob: -14.625000953674316
    3. ' init' → logprob: -15.375000953674316
    4. 'def' → logprob: -16.5
    5. '   ' → logprob: -17.0
    6. '_init' → logprob: -17.5
    7. 'ini' → logprob: -18.0
    8. 'int' → logprob: -18.125
    9. 'new' → logprob: -18.375
    10. '
' → logprob: -18.375

Token 127: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0004898841143585742
    2. '__' → logprob: -8.375490188598633
    3. '(self' → logprob: -8.375490188598633
    4. '__(
' → logprob: -10.625490188598633
    5. '_(' → logprob: -13.500490188598633
    6. '__((' → logprob: -14.375490188598633
    7. 'self' → logprob: -14.750490188598633
    8. ' (' → logprob: -15.125490188598633
    9. '__(*' → logprob: -15.125490188598633
    10. ' ' → logprob: -15.125490188598633

Token 128: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008953820797614753
    2. ' self' → logprob: -7.2508955001831055
    3. '):
' → logprob: -8.750895500183105
    4. ')' → logprob: -10.750895500183105
    5. '
' → logprob: -12.875895500183105
    6. '):' → logprob: -14.125895500183105
    7. '0' → logprob: -14.375895500183105
    8. '   ' → logprob: -15.125895500183105
    9. '(self' → logprob: -15.125895500183105
    10. '	self' → logprob: -15.375895500183105

Token 129: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8561397194862366
    2. '):
' → logprob: -0.9811397194862366
    3. 'self' → logprob: -1.7311396598815918
    4. ',' → logprob: -4.231139659881592
    5. ' self' → logprob: -5.231139659881592
    6. '
' → logprob: -6.981139659881592
    7. '   ' → logprob: -7.731139659881592
    8. '(self' → logprob: -7.856139659881592
    9. ':' → logprob: -7.981139659881592
    10. ')' → logprob: -8.48114013671875

Token 130: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024431929923594
    2. ' self' → logprob: -6.877443313598633
    3. '):
' → logprob: -7.252443313598633
    4. '       ' → logprob: -7.877443313598633
    5. '   ' → logprob: -8.377443313598633
    6. '
' → logprob: -9.877443313598633
    7. ')' → logprob: -11.377443313598633
    8. '):' → logprob: -11.752443313598633
    9. '  ' → logprob: -12.002443313598633
    10. ' ' → logprob: -12.502443313598633

Token 131: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5236445069313049
    2. ' self' → logprob: -0.8986445069313049
    3. '       ' → logprob: -8.52364444732666
    4. '   ' → logprob: -8.64864444732666
    5. '0' → logprob: -9.39864444732666
    6. '	self' → logprob: -10.39864444732666
    7. '(self' → logprob: -11.14864444732666
    8. ' ' → logprob: -12.27364444732666
    9. '
' → logprob: -12.64864444732666
    10. '    ' → logprob: -13.02364444732666

Token 132: '.open' (ID: 9702)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.290701985359192
    2. '.round' → logprob: -1.540701985359192
    3. '.open' → logprob: -1.790701985359192
    4. '.par' → logprob: -2.1657018661499023
    5. '.parent' → logprob: -2.5407018661499023
    6. '.r' → logprob: -2.9157018661499023
    7. '.cur' → logprob: -3.2907018661499023
    8. '.reset' → logprob: -4.040701866149902
    9. '.ro' → logprob: -4.665701866149902
    10. '.p' → logprob: -5.665701866149902

Token 133: '_round' (ID: 79298)
  Prédit: '_par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_par' → logprob: -0.6846677660942078
    2. '_round' → logprob: -1.5596678256988525
    3. '_parent' → logprob: -1.6846678256988525
    4. '_' → logprob: -3.6846678256988525
    5. '_br' → logprob: -4.059667587280273
    6. '_p' → logprob: -4.309667587280273
    7. '_cur' → logprob: -4.559667587280273
    8. '_counts' → logprob: -4.809667587280273
    9. '_count' → logprob: -4.934667587280273
    10. 'Paren' → logprob: -5.559667587280273

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05541273206472397
    2. '=' → logprob: -2.930412769317627
    3. ' ' → logprob: -8.555412292480469
    4. 's' → logprob: -8.680412292480469
    5. '_count' → logprob: -9.305412292480469
    6. ',' → logprob: -10.680412292480469
    7. '  ' → logprob: -10.805412292480469
    8. '_' → logprob: -12.180412292480469
    9. '   ' → logprob: -12.180412292480469
    10. 'count' → logprob: -12.305412292480469

Token 135: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1427246481180191
    2. ' ' → logprob: -2.0177247524261475
    3. 'self' → logprob: -10.142724990844727
    4. '[]' → logprob: -13.017724990844727
    5. '<|end|>' → logprob: -13.267724990844727
    6. ' self' → logprob: -13.517724990844727
    7. '  ' → logprob: -14.017724990844727
    8. '   ' → logprob: -14.205224990844727
    9. '<|end|>' → logprob: -14.205224990844727
    10. '[' → logprob: -14.205224990844727

Token 136: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4378848391061183e-05
    2. ' ' → logprob: -11.250014305114746
    3. 'self' → logprob: -14.375014305114746
    4. '[]' → logprob: -14.500014305114746
    5. '<|end|>' → logprob: -16.375015258789062
    6. '[' → logprob: -16.625015258789062
    7. '[]
' → logprob: -18.000015258789062
    8. '۰' → logprob: -18.000015258789062
    9. '<|end|>' → logprob: -18.125015258789062
    10. '{}' → logprob: -18.375015258789062

Token 137: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044301588088274
    2. '<|end|>' → logprob: -3.6693015098571777
    3. '
' → logprob: -4.169301509857178
    4. 'self' → logprob: -7.044301509857178
    5. ' self' → logprob: -7.294301509857178
    6. '   ' → logprob: -7.919301509857178
    7. '        
' → logprob: -8.294301986694336
    8. ' ' → logprob: -9.544301986694336
    9. '    
' → logprob: -10.419301986694336
    10. ',' → logprob: -10.919301986694336

Token 139: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.012585580348968506
    2. ' self' → logprob: -4.637585639953613
    3. '       ' → logprob: -6.137585639953613
    4. '0' → logprob: -7.387585639953613
    5. '   ' → logprob: -10.887585639953613
    6. ' ' → logprob: -11.762585639953613
    7. '	self' → logprob: -12.387585639953613
    8. '        ' → logprob: -13.012585639953613
    9. '1' → logprob: -13.137585639953613
    10. '           ' → logprob: -13.262585639953613

Token 140: '.close' (ID: 8183)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11322423070669174
    2. '.open' → logprob: -2.3632242679595947
    3. 'open' → logprob: -4.738224029541016
    4. ' .' → logprob: -5.738224029541016
    5. '.closed' → logprob: -8.238224029541016
    6. '.close' → logprob: -8.863224029541016
    7. '_open' → logprob: -9.113224029541016
    8. ' open' → logprob: -9.363224029541016
    9. '.col' → logprob: -10.238224029541016
    10. '.con' → logprob: -10.363224029541016

Token 141: '_round' (ID: 79298)
  Prédit: '_round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_round' → logprob: -0.001169033464975655
    2. '_' → logprob: -7.376169204711914
    3. 'ed' → logprob: -7.751169204711914
    4. 'd' → logprob: -9.501169204711914
    5. 'round' → logprob: -11.001169204711914
    6. '_line' → logprob: -11.876169204711914
    7. ' _' → logprob: -12.876169204711914
    8. '_square' → logprob: -13.126169204711914
    9. 's' → logprob: -13.376169204711914
    10. '_r' → logprob: -13.626169204711914

Token 142: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25203174352645874
    2. ' =' → logprob: -1.5020318031311035
    3. '<|end|>' → logprob: -9.252031326293945
    4. ' ' → logprob: -12.377031326293945
    5. ')' → logprob: -13.627031326293945
    6. '0' → logprob: -15.127031326293945
    7. '<|end|>' → logprob: -15.252031326293945
    8. 's' → logprob: -16.002031326293945
    9. '=}' → logprob: -16.127031326293945
    10. ',' → logprob: -16.252031326293945

Token 143: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007606866303831339
    2. ' ' → logprob: -4.8826069831848145
    3. '<|end|>' → logprob: -14.257606506347656
    4. '  ' → logprob: -16.882606506347656
    5. '   ' → logprob: -17.820106506347656
    6. '۰' → logprob: -17.945106506347656
    7. '<|end|>' → logprob: -18.132606506347656
    8. ')' → logprob: -18.257606506347656
    9. '=' → logprob: -18.632606506347656
    10. ' ' → logprob: -18.882606506347656

Token 144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. 'self' → logprob: -19.68773078918457
    4. '۰' → logprob: -20.06273078918457
    5. '1' → logprob: -20.18773078918457
    6. '  ' → logprob: -20.25023078918457
    7. ')' → logprob: -20.31273078918457
    8. '   ' → logprob: -20.31273078918457
    9. '<|end|>' → logprob: -20.31273078918457
    10. '-' → logprob: -20.43773078918457

Token 145: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5536524653434753
    2. '<|end|>' → logprob: -1.3036525249481201
    3. '
' → logprob: -1.9286525249481201
    4. 'self' → logprob: -5.803652286529541
    5. '   ' → logprob: -6.553652286529541
    6. '        
' → logprob: -6.678652286529541
    7. '<|end|>' → logprob: -7.428652286529541
    8. ' 
' → logprob: -7.678652286529541
    9. '    
' → logprob: -7.928652286529541
    10. ' self' → logprob: -8.1786527633667

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1912490874528885
    2. '<|end|>' → logprob: -2.066249132156372
    3. '
' → logprob: -3.191249132156372
    4. '   ' → logprob: -6.566248893737793
    5. 'self' → logprob: -6.691248893737793
    6. '        
' → logprob: -6.941248893737793
    7. ' ' → logprob: -7.191248893737793
    8. ' 
' → logprob: -7.316248893737793
    9. '    
' → logprob: -7.816248893737793
    10. '  
' → logprob: -8.566248893737793

Token 147: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.009581250138580799
    2. ' self' → logprob: -4.884581089019775
    3. '       ' → logprob: -6.259581089019775
    4. '   ' → logprob: -10.259581565856934
    5. '	self' → logprob: -11.509581565856934
    6. ' ' → logprob: -12.634581565856934
    7. '
' → logprob: -12.884581565856934
    8. '      ' → logprob: -13.509581565856934
    9. '0' → logprob: -13.634581565856934
    10. '        ' → logprob: -13.634581565856934

Token 148: '.open' (ID: 9702)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.649389386177063
    2. ' open' → logprob: -0.899389386177063
    3. '.open' → logprob: -3.2743892669677734
    4. '_open' → logprob: -4.399389266967773
    5. ' .' → logprob: -4.774389266967773
    6. '.' → logprob: -5.399389266967773
    7. '.close' → logprob: -6.274389266967773
    8. 'close' → logprob: -6.649389266967773
    9. ' close' → logprob: -6.774389266967773
    10. ' ' → logprob: -7.024389266967773

Token 149: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.213843435049057
    2. '_square' → logprob: -1.7138434648513794
    3. '_' → logprob: -4.46384334564209
    4. '_c' → logprob: -8.08884334564209
    5. '_br' → logprob: -8.21384334564209
    6. '_round' → logprob: -9.58884334564209
    7. '_angle' → logprob: -9.83884334564209
    8. 'cur' → logprob: -10.08884334564209
    9. '_squared' → logprob: -10.83884334564209
    10. '_curve' → logprob: -11.08884334564209

Token 150: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -2.141186450899113e-05
    2. 'l' → logprob: -10.875020980834961
    3. 'vy' → logprob: -13.625020980834961
    4. 'ley' → logprob: -15.500020980834961
    5. '```' → logprob: -15.625020980834961
    6. 'r' → logprob: -15.875020980834961
    7. '   ' → logprob: -16.00002098083496
    8. 'lys' → logprob: -16.25002098083496
    9. '}' → logprob: -16.37502098083496
    10. 'ved' → logprob: -16.37502098083496

Token 151: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06200442835688591
    2. '=' → logprob: -2.812004327774048
    3. '<|end|>' → logprob: -11.062004089355469
    4. ' ' → logprob: -11.312004089355469
    5. ')' → logprob: -12.312004089355469
    6. ',' → logprob: -13.562004089355469
    7. 's' → logprob: -13.812004089355469
    8. ' +=' → logprob: -14.687004089355469
    9. '<|end|>' → logprob: -14.812004089355469
    10. '   ' → logprob: -15.687004089355469

Token 152: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2519317865371704
    2. '0' → logprob: -1.5019317865371704
    3. '<|end|>' → logprob: -13.001932144165039
    4. '  ' → logprob: -16.00193214416504
    5. ' ' → logprob: -16.25193214416504
    6. '   ' → logprob: -16.62693214416504
    7. '<|end|>' → logprob: -16.87693214416504
    8. '1' → logprob: -17.18943214416504
    9. '=' → logprob: -17.31443214416504
    10. ' 
' → logprob: -17.62693214416504

Token 153: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015024791937321424
    2. ' ' → logprob: -6.501502513885498
    3. '<|end|>' → logprob: -16.751502990722656
    4. '   ' → logprob: -18.876502990722656
    5. '  ' → logprob: -19.626502990722656
    6. '=' → logprob: -19.626502990722656
    7. '۰' → logprob: -20.251502990722656
    8. '<|end|>' → logprob: -20.251502990722656
    9. '1' → logprob: -21.376502990722656
    10. ')' → logprob: -21.439002990722656

Token 154: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03391699865460396
    2. '<|end|>' → logprob: -3.53391695022583
    3. '
' → logprob: -6.28391695022583
    4. 'self' → logprob: -6.53391695022583
    5. ' ' → logprob: -8.158917427062988
    6. ' 
' → logprob: -8.908917427062988
    7. '        
' → logprob: -9.283917427062988
    8. '   ' → logprob: -9.408917427062988
    9. '<|end|>' → logprob: -9.658917427062988
    10. ' self' → logprob: -9.908917427062988

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00283673033118248
    2. 'self' → logprob: -5.87783670425415
    3. ' self' → logprob: -11.127837181091309
    4. '   ' → logprob: -12.002837181091309
    5. '<|end|>' → logprob: -12.127837181091309
    6. ' ' → logprob: -13.627837181091309
    7. '\' → logprob: -14.377837181091309
    8. '        
' → logprob: -14.502837181091309
    9. '           ' → logprob: -14.627837181091309
    10. '
' → logprob: -14.627837181091309

Token 156: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10059988498687744
    2. '       ' → logprob: -2.350599765777588
    3. ' self' → logprob: -7.850599765777588
    4. '	self' → logprob: -13.600600242614746
    5. '   ' → logprob: -13.725600242614746
    6. ' ' → logprob: -14.850600242614746
    7. '
' → logprob: -14.850600242614746
    8. '0' → logprob: -15.100600242614746
    9. '      ' → logprob: -16.60059928894043
    10. '           ' → logprob: -17.22559928894043

Token 157: '.close' (ID: 8183)
  Prédit: '.close'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.close' → logprob: -0.2584282159805298
    2. '.' → logprob: -1.5084282159805298
    3. 'close' → logprob: -6.00842809677124
    4. '._' → logprob: -6.25842809677124
    5. ' .' → logprob: -7.13342809677124
    6. '.open' → logprob: -7.25842809677124
    7. '_close' → logprob: -7.75842809677124
    8. '.closed' → logprob: -9.758428573608398
    9. ' close' → logprob: -10.633428573608398
    10. '_' → logprob: -10.758428573608398

Token 158: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.0009228924172930419
    2. '_' → logprob: -7.000922679901123
    3. '_round' → logprob: -12.250923156738281
    4. ' _' → logprob: -13.625923156738281
    5. '_c' → logprob: -13.625923156738281
    6. '_under' → logprob: -13.625923156738281
    7. '_curve' → logprob: -14.875923156738281
    8. '_curr' → logprob: -14.875923156738281
    9. '_close' → logprob: -15.000923156738281
    10. '_tab' → logprob: -15.125923156738281

Token 159: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -7.941850526549388e-06
    2. 'l' → logprob: -13.625007629394531
    3. '_cur' → logprob: -13.750007629394531
    4. '_round' → logprob: -13.875007629394531
    5. '```' → logprob: -13.875007629394531
    6. '_' → logprob: -14.375007629394531
    7. 'vy' → logprob: -14.750007629394531
    8. 'y' → logprob: -15.250007629394531
    9. '}' → logprob: -15.250007629394531
    10. '   ' → logprob: -15.687507629394531

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5763792395591736
    2. '=' → logprob: -0.8263792395591736
    3. '<|end|>' → logprob: -7.826379299163818
    4. ' ' → logprob: -10.57637882232666
    5. ')' → logprob: -11.70137882232666
    6. '<|end|>' → logprob: -13.82637882232666
    7. ' ' → logprob: -13.95137882232666
    8. ',' → logprob: -13.95137882232666
    9. ' =
' → logprob: -14.57637882232666
    10. '_' → logprob: -14.95137882232666

Token 161: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.061967913061380386
    2. ' ' → logprob: -2.8119678497314453
    3. '<|end|>' → logprob: -15.686967849731445
    4. '   ' → logprob: -18.811967849731445
    5. '  ' → logprob: -19.061967849731445
    6. '1' → logprob: -19.686967849731445
    7. ' ' → logprob: -19.936967849731445
    8. '۰' → logprob: -20.311967849731445
    9. '<|end|>' → logprob: -20.811967849731445
    10. '```' → logprob: -20.936967849731445

Token 162: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '<|end|>' → logprob: -19.125045776367188
    4. '۰' → logprob: -21.625045776367188
    5. '1' → logprob: -22.000045776367188
    6. '   ' → logprob: -22.250045776367188
    7. '```' → logprob: -22.375045776367188
    8. ')' → logprob: -22.375045776367188
    9. '  ' → logprob: -23.000045776367188
    10. '=' → logprob: -23.000045776367188

Token 163: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05165752023458481
    2. 'self' → logprob: -3.5516574382781982
    3. '<|end|>' → logprob: -4.051657676696777
    4. ' self' → logprob: -6.301657676696777
    5. '   ' → logprob: -6.426657676696777
    6. ' ' → logprob: -8.426657676696777
    7. '	self' → logprob: -9.051657676696777
    8. '
' → logprob: -9.426657676696777
    9. ',' → logprob: -9.676657676696777
    10. '        
' → logprob: -9.926657676696777

Token 164: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.45053526759147644
    2. '       ' → logprob: -1.0755352973937988
    3. '   ' → logprob: -4.700535297393799
    4. ' self' → logprob: -4.825535297393799
    5. '<|end|>' → logprob: -6.325535297393799
    6. 'def' → logprob: -7.200535297393799
    7. '	self' → logprob: -7.200535297393799
    8. '
' → logprob: -7.325535297393799
    9. ' ' → logprob: -8.82553482055664
    10. '```' → logprob: -9.20053482055664

Token 165: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.019124502316117287
    2. ' self' → logprob: -4.019124507904053
    3. '       ' → logprob: -7.019124507904053
    4. '
' → logprob: -10.144124031066895
    5. '   ' → logprob: -11.019124031066895
    6. '	self' → logprob: -11.644124031066895
    7. '0' → logprob: -11.894124031066895
    8. ' ' → logprob: -12.144124031066895
    9. '  ' → logprob: -14.644124031066895
    10. '        
' → logprob: -15.144124031066895

Token 166: '.open' (ID: 9702)
  Prédit: '.open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.open' → logprob: -0.06788691878318787
    2. '.' → logprob: -3.4428868293762207
    3. '.close' → logprob: -3.9428868293762207
    4. ' .' → logprob: -4.817886829376221
    5. 'open' → logprob: -5.192886829376221
    6. '=open' → logprob: -7.942886829376221
    7. '_open' → logprob: -9.692887306213379
    8. '.closed' → logprob: -9.817887306213379
    9. ' open' → logprob: -10.442887306213379
    10. 'close' → logprob: -10.942887306213379

Token 167: '_square' (ID: 99463)
  Prédit: '_square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_square' → logprob: -0.0024395049549639225
    2. '_' → logprob: -6.127439498901367
    3. '_br' → logprob: -8.752439498901367
    4. '_squared' → logprob: -10.127439498901367
    5. '_round' → logprob: -10.877439498901367
    6. '_sq' → logprob: -11.002439498901367
    7. 'square' → logprob: -12.002439498901367
    8. '_angle' → logprob: -12.127439498901367
    9. '_par' → logprob: -13.252439498901367
    10. '_cur' → logprob: -13.377439498901367

Token 168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3486699163913727
    2. ' =' → logprob: -1.2236698865890503
    3. '_' → logprob: -8.97367000579834
    4. 's' → logprob: -10.34867000579834
    5. ']' → logprob: -10.97367000579834
    6. ')' → logprob: -11.09867000579834
    7. '=[]' → logprob: -12.09867000579834
    8. '_square' → logprob: -12.22367000579834
    9. '_s' → logprob: -12.34867000579834
    10. '   ' → logprob: -12.84867000579834

Token 169: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3868716359138489
    2. ' ' → logprob: -1.136871576309204
    3. '   ' → logprob: -14.636871337890625
    4. '  ' → logprob: -16.511871337890625
    5. ' ' → logprob: -17.886871337890625
    6. '<|end|>' → logprob: -18.136871337890625
    7. '=' → logprob: -18.699371337890625
    8. ' =' → logprob: -19.324371337890625
    9. '۰' → logprob: -19.324371337890625
    10. '       ' → logprob: -19.699371337890625

Token 170: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '   ' → logprob: -19.75037956237793
    4. '=' → logprob: -19.87537956237793
    5. '  ' → logprob: -21.00037956237793
    6. '<|end|>' → logprob: -21.12537956237793
    7. 'self' → logprob: -21.87537956237793
    8. '۰' → logprob: -22.25037956237793
    9. 's' → logprob: -22.81287956237793
    10. ' =' → logprob: -23.00037956237793

Token 171: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04465788975358009
    2. '<|end|>' → logprob: -3.1696579456329346
    3. 'self' → logprob: -7.7946577072143555
    4. ' ' → logprob: -7.7946577072143555
    5. '   ' → logprob: -7.7946577072143555
    6. '<|end|>' → logprob: -9.419657707214355
    7. '        ' → logprob: -9.919657707214355
    8. ',' → logprob: -9.919657707214355
    9. ')' → logprob: -10.044657707214355
    10. '        
' → logprob: -10.419657707214355

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007869947585277259
    2. 'self' → logprob: -7.750786781311035
    3. '<|end|>' → logprob: -8.750786781311035
    4. '   ' → logprob: -9.000786781311035
    5. ' ' → logprob: -10.375786781311035
    6. ' self' → logprob: -11.250786781311035
    7. '        ' → logprob: -12.125786781311035
    8. '      ' → logprob: -12.375786781311035
    9. '  ' → logprob: -12.625786781311035
    10. '           ' → logprob: -12.750786781311035

Token 173: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07008426636457443
    2. '       ' → logprob: -2.8200843334198
    3. ' self' → logprob: -4.820084095001221
    4. '   ' → logprob: -11.445084571838379
    5. ' ' → logprob: -12.445084571838379
    6. '0' → logprob: -13.445084571838379
    7. '	self' → logprob: -14.570084571838379
    8. '        ' → logprob: -15.070084571838379
    9. '      ' → logprob: -15.445084571838379
    10. '           ' → logprob: -15.570084571838379

Token 174: '.close' (ID: 8183)
  Prédit: '_close'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_close' → logprob: -0.863334059715271
    2. '.close' → logprob: -0.988334059715271
    3. 'close' → logprob: -2.7383341789245605
    4. ' .' → logprob: -3.1133341789245605
    5. ' _' → logprob: -3.2383341789245605
    6. ' close' → logprob: -3.3633341789245605
    7. '.' → logprob: -4.4883341789245605
    8. '_' → logprob: -4.8633341789245605
    9. ' =' → logprob: -6.7383341789245605
    10. ' ' → logprob: -7.1133341789245605

Token 175: '_square' (ID: 99463)
  Prédit: '_square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_square' → logprob: -0.00023405285901390016
    2. '_' → logprob: -8.50023365020752
    3. '_squared' → logprob: -10.62523365020752
    4. '_s' → logprob: -13.12523365020752
    5. '_sq' → logprob: -13.25023365020752
    6. '_cur' → logprob: -14.62523365020752
    7. '_close' → logprob: -15.37523365020752
    8. '_round' → logprob: -15.62523365020752
    9. '_cube' → logprob: -15.62523365020752
    10. '_open' → logprob: -15.62523365020752

Token 176: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519306540489197
    2. ' =' → logprob: -1.5019307136535645
    3. ' ' → logprob: -13.626930236816406
    4. '<|end|>' → logprob: -16.501930236816406
    5. '0' → logprob: -16.626930236816406
    6. '   ' → logprob: -16.626930236816406
    7. ')' → logprob: -16.626930236816406
    8. ' ' → logprob: -17.376930236816406
    9. ' =
' → logprob: -18.501930236816406
    10. ',' → logprob: -18.501930236816406

Token 177: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10020667314529419
    2. ' ' → logprob: -2.3502066135406494
    3. ' ' → logprob: -17.72520637512207
    4. '   ' → logprob: -18.47520637512207
    5. '  ' → logprob: -18.97520637512207
    6. '<|end|>' → logprob: -19.22520637512207
    7. '۰' → logprob: -19.35020637512207
    8. '1' → logprob: -21.28770637512207
    9. '00' → logprob: -21.47520637512207
    10. ' ' → logprob: -21.53770637512207

Token 178: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -21.625003814697266
    4. '۰' → logprob: -22.375003814697266
    5. 'self' → logprob: -22.750003814697266
    6. '<|end|>' → logprob: -23.000003814697266
    7. '```' → logprob: -23.625003814697266
    8. '  ' → logprob: -23.875003814697266
    9. ' ' → logprob: -24.000003814697266
    10. '-' → logprob: -24.000003814697266

Token 179: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5387391448020935
    2. '<|end|>' → logprob: -1.0387392044067383
    3. '   ' → logprob: -3.0387392044067383
    4. ' def' → logprob: -5.163739204406738
    5. 'def' → logprob: -5.538739204406738
    6. '<|end|>' → logprob: -6.038739204406738
    7. '

' → logprob: -6.413739204406738
    8. '    
' → logprob: -7.663739204406738
    9. '	def' → logprob: -8.288739204406738
    10. '       ' → logprob: -9.163739204406738

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13412247598171234
    2. 'def' → logprob: -3.009122371673584
    3. ' def' → logprob: -3.384122371673584
    4. '<|end|>' → logprob: -3.384122371673584
    5. '    
' → logprob: -5.759122371673584
    6. '
' → logprob: -6.009122371673584
    7. '	def' → logprob: -6.134122371673584
    8. '<|end|>' → logprob: -7.884122371673584
    9. ' 
' → logprob: -10.384122848510742
    10. '```' → logprob: -10.759122848510742

Token 181: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1355312019586563
    2. ' def' → logprob: -2.135531187057495
    3. '   ' → logprob: -4.760531425476074
    4. '	def' → logprob: -12.510531425476074
    5. '    
' → logprob: -15.260531425476074
    6. ' ' → logprob: -15.385531425476074
    7. '```' → logprob: -15.385531425476074
    8. '  ' → logprob: -15.510531425476074
    9. '    ' → logprob: -15.635531425476074
    10. ')' → logprob: -15.885531425476074

Token 182: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.566913902759552
    2. 'update' → logprob: -1.6919138431549072
    3. 'count' → logprob: -2.4419138431549072
    4. ' count' → logprob: -2.5669138431549072
    5. 'increment' → logprob: -3.5669138431549072
    6. ' increment' → logprob: -3.8169138431549072
    7. ' process' → logprob: -4.191914081573486
    8. 'process' → logprob: -4.941914081573486
    9. ' add' → logprob: -5.441914081573486
    10. ' reset' → logprob: -5.816914081573486

Token 183: '_from' (ID: 12526)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003606959478929639
    2. '(' → logprob: -5.628606796264648
    3. 'self' → logprob: -12.878606796264648
    4. ' (' → logprob: -13.253606796264648
    5. '(line' → logprob: -14.253606796264648
    6. '(s' → logprob: -14.878606796264648
    7. '_line' → logprob: -15.128606796264648
    8. '(sel' → logprob: -15.378606796264648
    9. '_open' → logprob: -15.628606796264648
    10. '_self' → logprob: -15.753606796264648

Token 184: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.002896048128604889
    2. 'line' → logprob: -6.002895832061768
    3. 'self' → logprob: -8.377896308898926
    4. '(self' → logprob: -9.252896308898926
    5. '_token' → logprob: -10.252896308898926
    6. '_string' → logprob: -10.627896308898926
    7. '_char' → logprob: -11.502896308898926
    8. ' line' → logprob: -11.502896308898926
    9. '_text' → logprob: -12.377896308898926
    10. 'char' → logprob: -12.877896308898926

Token 185: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006320509128272533
    2. '(' → logprob: -5.131320476531982
    3. ' (' → logprob: -7.881320476531982
    4. '(line' → logprob: -11.38132095336914
    5. 'self' → logprob: -14.25632095336914
    6. '(s' → logprob: -14.38132095336914
    7. ' self' → logprob: -15.00632095336914
    8. ' ' → logprob: -15.00632095336914
    9. '(
' → logprob: -15.00632095336914
    10. '   ' → logprob: -16.25632095336914

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006738319061696529
    2. ' ,' → logprob: -8.0006742477417
    3. ',line' → logprob: -8.0006742477417
    4. 'self' → logprob: -13.3756742477417
    5. ',self' → logprob: -14.6256742477417
    6. ',
' → logprob: -15.1256742477417
    7. '       ' → logprob: -15.1256742477417
    8. ' line' → logprob: -16.125673294067383
    9. ',s' → logprob: -16.250673294067383
    10. '):' → logprob: -16.500673294067383

Token 187: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3351074457168579
    2. 'line' → logprob: -1.460107445716858
    3. ' self' → logprob: -3.3351073265075684
    4. 'self' → logprob: -4.085107326507568
    5. '   ' → logprob: -9.710107803344727
    6. '       ' → logprob: -10.960107803344727
    7. '	line' → logprob: -12.710107803344727
    8. '           ' → logprob: -13.210107803344727
    9. '_line' → logprob: -13.335107803344727
    10. ' ' → logprob: -13.335107803344727

Token 188: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02223013900220394
    2. '):
' → logprob: -4.27223014831543
    3. ':' → logprob: -4.89723014831543
    4. ' ):' → logprob: -7.64723014831543
    5. '   ' → logprob: -10.77223014831543
    6. '       ' → logprob: -10.89723014831543
    7. ')' → logprob: -11.14723014831543
    8. '):
' → logprob: -11.64723014831543
    9. ' :' → logprob: -12.02223014831543
    10. ',' → logprob: -12.27223014831543

Token 189: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.061984602361917496
    2. 'str' → logprob: -2.8119845390319824
    3. ')' → logprob: -11.31198501586914
    4. ':str' → logprob: -13.06198501586914
    5. ' ' → logprob: -13.93698501586914
    6. '   ' → logprob: -14.43698501586914
    7. '):
' → logprob: -14.81198501586914
    8. '[str' → logprob: -14.93698501586914
    9. '	str' → logprob: -15.93698501586914
    10. '(str' → logprob: -16.06198501586914

Token 190: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.040205247700214386
    2. '):
' → logprob: -3.290205240249634
    3. ')' → logprob: -6.165205478668213
    4. '):
' → logprob: -10.040205001831055
    5. '   ' → logprob: -12.040205001831055
    6. ' ):' → logprob: -12.540205001831055
    7. ')->' → logprob: -12.665205001831055
    8. '):

' → logprob: -13.540205001831055
    9. ':' → logprob: -13.790205001831055
    10. '       ' → logprob: -14.040205001831055

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006983538158237934
    2. ' for' → logprob: -5.006983757019043
    3. '
' → logprob: -9.256983757019043
    4. 'for' → logprob: -9.631983757019043
    5. '        
' → logprob: -9.881983757019043
    6. '      ' → logprob: -11.506983757019043
    7. '   ' → logprob: -11.631983757019043
    8. '        ' → logprob: -11.756983757019043
    9. '```' → logprob: -12.256983757019043
    10. '<|end|>' → logprob: -12.381983757019043

Token 192: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7036592364311218
    2. ' for' → logprob: -1.2036592960357666
    3. 'self' → logprob: -2.4536592960357666
    4. ' self' → logprob: -2.7036592960357666
    5. '       ' → logprob: -2.9536592960357666
    6. '   ' → logprob: -11.203659057617188
    7. ' ' → logprob: -11.328659057617188
    8. '        ' → logprob: -12.078659057617188
    9. '```' → logprob: -12.328659057617188
    10. '	for' → logprob: -12.828659057617188

Token 193: ' ch' (ID: 549)
  Prédit: ' char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' char' → logprob: -0.36342111229896545
    2. 'char' → logprob: -1.863421082496643
    3. ' ch' → logprob: -2.1134212017059326
    4. 'ch' → logprob: -3.6134212017059326
    5. ' c' → logprob: -6.6134209632873535
    6. 'c' → logprob: -7.7384209632873535
    7. '_char' → logprob: -13.613421440124512
    8. '(char' → logprob: -13.738421440124512
    9. '<char' → logprob: -14.613421440124512
    10. '	char' → logprob: -14.738421440124512

Token 194: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016224518418312073
    2. 'in' → logprob: -4.141224384307861
    3. ' ' → logprob: -8.76622486114502
    4. 's' → logprob: -11.89122486114502
    5. 'ine' → logprob: -12.01622486114502
    6. '  ' → logprob: -12.01622486114502
    7. 'i' → logprob: -12.14122486114502
    8. '   ' → logprob: -13.26622486114502
    9. ' i' → logprob: -13.89122486114502
    10. '	in' → logprob: -13.89122486114502

Token 195: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3132631182670593
    2. 'line' → logprob: -1.313263177871704
    3. '	line' → logprob: -14.813262939453125
    4. '[line' → logprob: -15.063262939453125
    5. '(line' → logprob: -15.188262939453125
    6. ' ' → logprob: -15.188262939453125
    7. '=line' → logprob: -16.688262939453125
    8. '#line' → logprob: -17.438262939453125
    9. '   ' → logprob: -17.563262939453125
    10. 'Line' → logprob: -17.688262939453125

Token 196: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006460039410740137
    2. ' :' → logprob: -5.631460189819336
    3. ':
' → logprob: -5.881460189819336
    4. ' :
' → logprob: -10.381460189819336
    5. '):' → logprob: -11.756460189819336
    6. '<|end|>' → logprob: -12.006460189819336
    7. '):
' → logprob: -12.381460189819336
    8. '=' → logprob: -12.631460189819336
    9. '           ' → logprob: -13.131460189819336
    10. '       ' → logprob: -13.256460189819336

Token 197: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009716909378767014
    2. '            ' → logprob: -5.009716987609863
    3. '            
' → logprob: -7.259716987609863
    4. ' if' → logprob: -7.259716987609863
    5. ' ' → logprob: -7.759716987609863
    6. 'if' → logprob: -8.134716987609863
    7. ' 
' → logprob: -8.634716987609863
    8. '        ' → logprob: -8.884716987609863
    9. '          ' → logprob: -9.009716987609863
    10. '               ' → logprob: -9.259716987609863

Token 198: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3904399871826172
    2. 'if' (adapté à ' if') → logprob: -1.1404399871826172
    3. '           ' → logprob: -5.640439987182617
    4. '               ' → logprob: -11.765439987182617
    5. '            ' → logprob: -14.015439987182617
    6. '
' → logprob: -14.015439987182617
    7. '```' → logprob: -14.140439987182617
    8. '   ' → logprob: -14.765439987182617
    9. '       ' → logprob: -15.015439987182617
    10. '	if' → logprob: -16.265439987182617

Token 199: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.10020925104618073
    2. 'ch' → logprob: -2.3502092361450195
    3. '(ch' → logprob: -13.85020923614502
    4. ' ' → logprob: -14.22520923614502
    5. '	ch' → logprob: -14.60020923614502
    6. '  ' → logprob: -15.35020923614502
    7. '_ch' → logprob: -16.475210189819336
    8. '   ' → logprob: -16.850210189819336
    9. '[ch' → logprob: -16.850210189819336
    10. '    ' → logprob: -17.100210189819336

Token 200: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.016125163063406944
    2. '==' → logprob: -4.141125202178955
    3. ' =='' → logprob: -10.266124725341797
    4. '=='' → logprob: -10.391124725341797
    5. '=' → logprob: -12.016124725341797
    6. ' in' → logprob: -12.141124725341797
    7. ' ' → logprob: -12.391124725341797
    8. ' =' → logprob: -13.016124725341797
    9. '(' → logprob: -13.141124725341797
    10. '=="' → logprob: -13.641124725341797

Token 201: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002327363472431898
    2. ' '('' → logprob: -6.6273274421691895
    3. '"' → logprob: -7.0023274421691895
    4. '(' → logprob: -9.502326965332031
    5. ''(' → logprob: -11.627326965332031
    6. ' "("' → logprob: -12.377326965332031
    7. '('' → logprob: -13.252326965332031
    8. '("("' → logprob: -14.252326965332031
    9. ' '' → logprob: -14.877326965332031
    10. '`' → logprob: -15.627326965332031

Token 202: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08932066708803177
    2. ':' → logprob: -2.464320659637451
    3. '):
' → logprob: -8.46432113647461
    4. ' :
' → logprob: -9.21432113647461
    5. ':self' → logprob: -10.96432113647461
    6. ' :' → logprob: -11.08932113647461
    7. '           ' → logprob: -11.33932113647461
    8. '():
' → logprob: -12.08932113647461
    9. '):' → logprob: -12.33932113647461
    10. ')' → logprob: -12.58932113647461

Token 203: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020049048587679863
    2. ' self' → logprob: -4.395049095153809
    3. 'self' → logprob: -4.895049095153809
    4. '                
' → logprob: -11.770049095153809
    5. '           ' → logprob: -12.145049095153809
    6. '              ' → logprob: -12.895049095153809
    7. '                   ' → logprob: -13.145049095153809
    8. '	self' → logprob: -13.645049095153809
    9. '_self' → logprob: -13.645049095153809
    10. '
' → logprob: -13.645049095153809

Token 204: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.029807770624756813
    2. ' self' → logprob: -3.5298078060150146
    3. '               ' → logprob: -9.779808044433594
    4. '                   ' → logprob: -15.279808044433594
    5. '           ' → logprob: -15.529808044433594
    6. '
' → logprob: -15.904808044433594
    7. '                ' → logprob: -16.904808044433594
    8. '	self' → logprob: -18.029808044433594
    9. '(self' → logprob: -18.154808044433594
    10. ' ' → logprob: -18.529808044433594

Token 205: '.open' (ID: 9702)
  Prédit: '.open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.open' → logprob: -0.00012999906903132796
    2. '.' → logprob: -9.500129699707031
    3. 'open' → logprob: -10.125129699707031
    4. ' .' → logprob: -11.250129699707031
    5. '	open' → logprob: -14.625129699707031
    6. '=open' → logprob: -14.750129699707031
    7. '.close' → logprob: -14.875129699707031
    8. '
' → logprob: -16.25012969970703
    9. ' open' → logprob: -16.25012969970703
    10. '.openapi' → logprob: -16.25012969970703

Token 206: '_round' (ID: 79298)
  Prédit: '_round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_round' → logprob: -0.0001434690784662962
    2. '_' → logprob: -8.875143051147461
    3. 'round' → logprob: -13.125143051147461
    4. ' _' → logprob: -14.750143051147461
    5. '_open' → logprob: -15.500143051147461
    6. '(round' → logprob: -15.625143051147461
    7. '_square' → logprob: -16.00014305114746
    8. '_cur' → logprob: -16.12514305114746
    9. '_ro' → logprob: -16.50014305114746
    10. ')' → logprob: -16.75014305114746

Token 207: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2519298195838928
    2. '+=' → logprob: -1.501929759979248
    3. ']+=' → logprob: -14.126930236816406
    4. '+' → logprob: -17.876930236816406
    5. '=' → logprob: -18.501930236816406
    6. ' ' → logprob: -19.126930236816406
    7. '+="' → logprob: -19.251930236816406
    8. '+='' → logprob: -19.251930236816406
    9. '+=(' → logprob: -19.251930236816406
    10. ' ' → logprob: -19.501930236816406

Token 208: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003600071184337139
    2. ' ' → logprob: -5.628600120544434
    3. '   ' → logprob: -17.503599166870117
    4. '           ' → logprob: -19.628599166870117
    5. '  ' → logprob: -20.128599166870117
    6. '```' → logprob: -20.628599166870117
    7. '0' → logprob: -20.816099166870117
    8. '       ' → logprob: -21.441099166870117
    9. ' ' → logprob: -21.503599166870117
    10. '
' → logprob: -21.503599166870117

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -22.0
    4. '```' → logprob: -22.5
    5. '0' → logprob: -23.375
    6. '۱' → logprob: -23.5
    7. '  ' → logprob: -24.0
    8. '
' → logprob: -24.0
    9. '`' → logprob: -24.0
    10. '１' → logprob: -24.0625

Token 210: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.871353805065155
    2. '
' → logprob: -1.3713538646697998
    3. 'elif' → logprob: -1.4963538646697998
    4. ' elif' → logprob: -2.3713538646698
    5. '<|end|>' → logprob: -5.121353626251221
    6. '            
' → logprob: -6.371353626251221
    7. ' 
' → logprob: -6.996353626251221
    8. '       ' → logprob: -7.496353626251221
    9. '               ' → logprob: -7.746353626251221
    10. '	elif' → logprob: -8.246354103088379

Token 211: '           ' (ID: 352)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.6481576561927795
    2. '           ' → logprob: -1.0231575965881348
    3. ' elif' → logprob: -2.1481575965881348
    4. '<|end|>' → logprob: -8.273158073425293
    5. '	elif' → logprob: -8.648158073425293
    6. '       ' → logprob: -9.023158073425293
    7. '               ' → logprob: -9.148158073425293
    8. '
' → logprob: -10.023158073425293
    9. '            
' → logprob: -10.023158073425293
    10. ')' → logprob: -10.148158073425293

Token 212: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.16026465594768524
    2. ' elif' → logprob: -1.9102646112442017
    3. ')' → logprob: -10.78526496887207
    4. '           ' → logprob: -11.41026496887207
    5. '	elif' → logprob: -12.41026496887207
    6. '       ' → logprob: -13.03526496887207
    7. 'el' → logprob: -14.03526496887207
    8. '               ' → logprob: -14.91026496887207
    9. 'else' → logprob: -15.16026496887207
    10. 'if' → logprob: -15.28526496887207

Token 213: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.2014552354812622
    2. 'ch' → logprob: -1.7014552354812622
    3. ')' → logprob: -10.201455116271973
    4. '')' → logprob: -13.076455116271973
    5. '(ch' → logprob: -13.451455116271973
    6. '	ch' → logprob: -14.576455116271973
    7. ' ' → logprob: -15.951455116271973
    8. '[ch' → logprob: -15.951455116271973
    9. ''ch' → logprob: -16.32645606994629
    10. ' )' → logprob: -16.32645606994629

Token 214: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16023783385753632
    2. '==' → logprob: -1.9102377891540527
    3. '=' → logprob: -12.160238265991211
    4. ' ' → logprob: -12.910238265991211
    5. '=='' → logprob: -12.910238265991211
    6. ' =='' → logprob: -13.785238265991211
    7. ')' → logprob: -15.285238265991211
    8. '[' → logprob: -15.285238265991211
    9. 'elif' → logprob: -15.535238265991211
    10. ' ' → logprob: -15.535238265991211

Token 215: ' ')' (ID: 35910)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -7.433829159708694e-05
    2. ''' → logprob: -10.37507438659668
    3. ' ')' → logprob: -10.50007438659668
    4. ' ')'' → logprob: -11.25007438659668
    5. ')' → logprob: -13.00007438659668
    6. '']' → logprob: -16.25007438659668
    7. '")' → logprob: -16.50007438659668
    8. ''):' → logprob: -17.87507438659668
    9. '   ' → logprob: -18.62507438659668
    10. ' ' → logprob: -18.75007438659668

Token 216: '':
' (ID: 7669)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08274710923433304
    2. ':' → logprob: -2.707747220993042
    3. ':
' → logprob: -4.707746982574463
    4. '           ' → logprob: -6.457746982574463
    5. '):
' → logprob: -6.957746982574463
    6. '):' → logprob: -8.332747459411621
    7. ')' → logprob: -8.582747459411621
    8. ''):
' → logprob: -8.957747459411621
    9. '              ' → logprob: -9.082747459411621
    10. '<|end|>' → logprob: -9.207747459411621

Token 217: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0879383236169815
    2. 'self' → logprob: -2.5879383087158203
    3. ' self' → logprob: -4.71293830871582
    4. '           ' → logprob: -11.71293830871582
    5. ' ' → logprob: -12.08793830871582
    6. '              ' → logprob: -12.58793830871582
    7. '   ' → logprob: -12.96293830871582
    8. '
' → logprob: -13.21293830871582
    9. '(self' → logprob: -13.21293830871582
    10. ' ' → logprob: -13.83793830871582

Token 218: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.049264729022979736
    2. ' self' → logprob: -3.049264669418335
    3. '               ' → logprob: -7.299264907836914
    4. '           ' → logprob: -15.049264907836914
    5. '                   ' → logprob: -15.049264907836914
    6. '	self' → logprob: -15.924264907836914
    7. ' ' → logprob: -16.299264907836914
    8. '(self' → logprob: -16.424264907836914
    9. '[self' → logprob: -16.424264907836914
    10. '              ' → logprob: -17.049264907836914

Token 219: '.close' (ID: 8183)
  Prédit: '.close'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.close' → logprob: -0.1274345964193344
    2. 'close' → logprob: -2.127434492111206
    3. ' close' → logprob: -8.627434730529785
    4. '.open' → logprob: -8.627434730529785
    5. 'open' → logprob: -9.377434730529785
    6. '.' → logprob: -10.127434730529785
    7. ' .' → logprob: -11.377434730529785
    8. '_close' → logprob: -12.252434730529785
    9. 'self' → logprob: -12.877434730529785
    10. '	close' → logprob: -13.002434730529785

Token 220: '_round' (ID: 79298)
  Prédit: '_round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_round' → logprob: -1.282920129597187e-05
    2. '_' → logprob: -11.500012397766113
    3. '_cur' → logprob: -13.250012397766113
    4. ' _' → logprob: -15.000012397766113
    5. '_close' → logprob: -15.375012397766113
    6. 'round' → logprob: -15.750012397766113
    7. '_square' → logprob: -16.25001335144043
    8. ')' → logprob: -17.00001335144043
    9. '_r' → logprob: -17.75001335144043
    10. ')_' → logprob: -18.12501335144043

Token 221: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.038046542555093765
    2. '+=' → logprob: -3.2880465984344482
    3. '            ' → logprob: -13.288046836853027
    4. '               ' → logprob: -13.538046836853027
    5. '                ' → logprob: -13.913046836853027
    6. '           ' → logprob: -14.663046836853027
    7. ']+=' → logprob: -15.163046836853027
    8. ' ' → logprob: -15.663046836853027
    9. '+' → logprob: -16.28804588317871
    10. ' ' → logprob: -16.66304588317871

Token 222: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16022412478923798
    2. '1' → logprob: -1.9102240800857544
    3. '           ' → logprob: -17.91022491455078
    4. ' ' → logprob: -17.91022491455078
    5. '   ' → logprob: -19.16022491455078
    6. '<|end|>' → logprob: -19.16022491455078
    7. '```' → logprob: -19.53522491455078
    8. '0' → logprob: -19.78522491455078
    9. '+' → logprob: -19.78522491455078
    10. '               ' → logprob: -20.28522491455078

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -19.625045776367188
    4. '<|end|>' → logprob: -20.125045776367188
    5. '           ' → logprob: -20.375045776367188
    6. '```' → logprob: -20.875045776367188
    7. '
' → logprob: -21.000045776367188
    8. ')' → logprob: -21.000045776367188
    9. '0' → logprob: -21.000045776367188
    10. '  ' → logprob: -21.250045776367188

Token 224: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.044526323676109314
    2. 'elif' → logprob: -3.7945263385772705
    3. '<|end|>' → logprob: -4.044526100158691
    4. ' elif' → logprob: -5.919526100158691
    5. '
' → logprob: -7.669526100158691
    6. '<|end|>' → logprob: -9.044526100158691
    7. '       ' → logprob: -9.919526100158691
    8. ')' → logprob: -10.044526100158691
    9. '	elif' → logprob: -10.544526100158691
    10. '            
' → logprob: -10.794526100158691

Token 225: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01824125461280346
    2. 'elif' → logprob: -4.5182414054870605
    3. ' elif' → logprob: -5.0182414054870605
    4. '<|end|>' → logprob: -7.6432414054870605
    5. '       ' → logprob: -11.143240928649902
    6. '            
' → logprob: -11.768240928649902
    7. ')' → logprob: -11.893240928649902
    8. '          ' → logprob: -12.018240928649902
    9. '	elif' → logprob: -12.018240928649902
    10. '<|end|>' → logprob: -12.393240928649902

Token 226: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39091238379478455
    2. 'elif' (adapté à ' elif') → logprob: -1.515912413597107
    3. ' elif' → logprob: -2.2659122943878174
    4. '	elif' → logprob: -9.765912055969238
    5. ')' → logprob: -10.390912055969238
    6. '       ' → logprob: -10.640912055969238
    7. ' else' → logprob: -11.140912055969238
    8. '               ' → logprob: -11.265912055969238
    9. 'else' → logprob: -11.265912055969238
    10. '   ' → logprob: -11.515912055969238

Token 227: ' ch' (ID: 549)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4177970290184021
    2. ''{' → logprob: -1.5427970886230469
    3. ' '{' → logprob: -2.167797088623047
    4. 'ch' → logprob: -4.542797088623047
    5. ''ch' → logprob: -6.917797088623047
    6. ' '' → logprob: -7.292797088623047
    7. '{' → logprob: -7.917797088623047
    8. ' ch' → logprob: -8.167797088623047
    9. ' ' → logprob: -9.042797088623047
    10. '('{' → logprob: -10.167797088623047

Token 228: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07029318064451218
    2. '==' → logprob: -2.6952931880950928
    3. '=='' → logprob: -8.070293426513672
    4. ' =='' → logprob: -10.945293426513672
    5. ''' → logprob: -11.695293426513672
    6. ' ' → logprob: -11.820293426513672
    7. '=' → logprob: -12.945293426513672
    8. ' '' → logprob: -13.445293426513672
    9. '=="' → logprob: -13.445293426513672
    10. ' =' → logprob: -13.945293426513672

Token 229: ' '{' (ID: 24918)
  Prédit: ''{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''{' → logprob: -0.3871210813522339
    2. ''' → logprob: -1.1371210813522339
    3. ' '{' → logprob: -8.387121200561523
    4. '{' → logprob: -11.887121200561523
    5. '"{' → logprob: -12.012121200561523
    6. ''}' → logprob: -12.512121200561523
    7. '('{' → logprob: -13.012121200561523
    8. '   ' → logprob: -13.637121200561523
    9. ' ' → logprob: -14.262121200561523
    10. '{
' → logprob: -15.012121200561523

Token 230: '':
' (ID: 7669)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.056165166199207306
    2. '':
' → logprob: -3.6811652183532715
    3. ''):
' → logprob: -4.0561652183532715
    4. '<|end|>' → logprob: -5.3061652183532715
    5. ':
' → logprob: -6.1811652183532715
    6. '           ' → logprob: -6.3061652183532715
    7. '):
' → logprob: -6.4311652183532715
    8. '':' → logprob: -7.5561652183532715
    9. '')' → logprob: -8.306164741516113
    10. ''' → logprob: -8.931164741516113

Token 231: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007042851764708757
    2. 'self' → logprob: -5.00704288482666
    3. ' self' → logprob: -8.13204288482666
    4. '
' → logprob: -10.50704288482666
    5. '           ' → logprob: -12.75704288482666
    6. '(self' → logprob: -14.25704288482666
    7. '              ' → logprob: -14.50704288482666
    8. '   ' → logprob: -14.75704288482666
    9. '<|end|>' → logprob: -15.00704288482666
    10. '                   ' → logprob: -15.13204288482666

Token 232: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03551401570439339
    2. '               ' → logprob: -3.7855141162872314
    3. ' self' → logprob: -4.410513877868652
    4. '
' → logprob: -10.285513877868652
    5. '           ' → logprob: -12.035513877868652
    6. '	self' → logprob: -14.035513877868652
    7. '(self' → logprob: -14.035513877868652
    8. '                   ' → logprob: -14.160513877868652
    9. '[self' → logprob: -14.285513877868652
    10. '   ' → logprob: -15.160513877868652

Token 233: '.open' (ID: 9702)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.00045188379590399563
    2. '.open' → logprob: -7.750452041625977
    3. ' open' → logprob: -10.875452041625977
    4. '	open' → logprob: -13.250452041625977
    5. '=open' → logprob: -15.500452041625977
    6. '_open' → logprob: -16.625452041625977
    7. '
' → logprob: -16.875452041625977
    8. '(open' → logprob: -17.750452041625977
    9. 'openh' → logprob: -18.000452041625977
    10. 'openid' → logprob: -18.000452041625977

Token 234: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -9.729906196298543e-06
    2. '_' → logprob: -12.375009536743164
    3. 'cur' → logprob: -12.375009536743164
    4. '{' → logprob: -14.500009536743164
    5. '{
' → logprob: -15.250009536743164
    6. '_curr' → logprob: -16.125009536743164
    7. 'Cur' → logprob: -16.750009536743164
    8. '_c' → logprob: -16.875009536743164
    9. '
' → logprob: -17.125009536743164
    10. '_open' → logprob: -17.375009536743164

Token 235: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -2.7848862373502925e-05
    2. '{' → logprob: -11.250027656555176
    3. '{
' → logprob: -11.625027656555176
    4. 'l' → logprob: -13.000027656555176
    5. 'lys' → logprob: -13.875027656555176
    6. 'lyg' → logprob: -14.500027656555176
    7. '```' → logprob: -14.625027656555176
    8. '}' → logprob: -15.000027656555176
    9. '   ' → logprob: -15.625027656555176
    10. '1' → logprob: -15.750027656555176

Token 236: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03815050423145294
    2. '+=' → logprob: -3.2881505489349365
    3. '               ' → logprob: -9.913150787353516
    4. ']+=' → logprob: -10.788150787353516
    5. '<|end|>' → logprob: -11.288150787353516
    6. '           ' → logprob: -11.538150787353516
    7. '                ' → logprob: -12.538150787353516
    8. ' ' → logprob: -12.788150787353516
    9. '            ' → logprob: -12.913150787353516
    10. '+' → logprob: -13.538150787353516

Token 237: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22541403770446777
    2. ' ' → logprob: -1.6004140377044678
    3. '   ' → logprob: -14.350414276123047
    4. '           ' → logprob: -15.225414276123047
    5. '<|end|>' → logprob: -15.225414276123047
    6. '
' → logprob: -15.975414276123047
    7. '  ' → logprob: -16.850414276123047
    8. '       ' → logprob: -17.412914276123047
    9. '```' → logprob: -17.475414276123047
    10. ' ' → logprob: -17.600414276123047

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -19.37507438659668
    4. '
' → logprob: -19.37507438659668
    5. '           ' → logprob: -20.62507438659668
    6. '+' → logprob: -21.00007438659668
    7. '```' → logprob: -21.12507438659668
    8. '１' → logprob: -21.25007438659668
    9. '۱' → logprob: -21.87507438659668
    10. '  ' → logprob: -21.93757438659668

Token 239: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03250809386372566
    2. '<|end|>' → logprob: -3.782508134841919
    3. 'elif' → logprob: -5.15750789642334
    4. ' elif' → logprob: -5.90750789642334
    5. '               ' → logprob: -8.28250789642334
    6. ')' → logprob: -8.65750789642334
    7. '       ' → logprob: -9.03250789642334
    8. '<|end|>' → logprob: -9.28250789642334
    9. '            
' → logprob: -10.53250789642334
    10. '   ' → logprob: -11.40750789642334

Token 240: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08916562795639038
    2. 'elif' → logprob: -3.589165687561035
    3. ' elif' → logprob: -3.589165687561035
    4. '<|end|>' → logprob: -3.714165687561035
    5. '               ' → logprob: -5.339165687561035
    6. '       ' → logprob: -8.089165687561035
    7. ')' → logprob: -8.714165687561035
    8. ' ' → logprob: -9.339165687561035
    9. '   ' → logprob: -9.464165687561035
    10. ':' → logprob: -10.089165687561035

Token 241: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.23650699853897095
    2. ' elif' → logprob: -1.9865069389343262
    3. '           ' → logprob: -2.611506938934326
    4. '	elif' → logprob: -11.236507415771484
    5. '<|end|>' → logprob: -13.111507415771484
    6. '       ' → logprob: -13.486507415771484
    7. ')' → logprob: -14.111507415771484
    8. '               ' → logprob: -14.111507415771484
    9. '#elif' → logprob: -14.111507415771484
    10. '```' → logprob: -14.236507415771484

Token 242: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.22749531269073486
    2. ' ch' → logprob: -1.7274953126907349
    3. ''}' → logprob: -3.7274951934814453
    4. '}' → logprob: -6.477495193481445
    5. ' '}' → logprob: -9.477495193481445
    6. ''ch' → logprob: -10.477495193481445
    7. '           ' → logprob: -11.727495193481445
    8. '	ch' → logprob: -11.852495193481445
    9. ''' → logprob: -12.227495193481445
    10. '(ch' → logprob: -12.227495193481445

Token 243: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.48843950033187866
    2. '==' → logprob: -0.9884395003318787
    3. 'ch' → logprob: -4.863439559936523
    4. '}' → logprob: -5.488439559936523
    5. ' ch' → logprob: -6.113439559936523
    6. ''}' → logprob: -10.113439559936523
    7. ' ' → logprob: -10.238439559936523
    8. '=='' → logprob: -10.238439559936523
    9. '=' → logprob: -11.363439559936523
    10. '           ' → logprob: -11.863439559936523

Token 244: ' '}' (ID: 68532)
  Prédit: ''}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''}' → logprob: -0.023113394156098366
    2. '}' → logprob: -3.898113489151001
    3. ' '}' → logprob: -6.023113250732422
    4. '}'' → logprob: -10.023113250732422
    5. '   ' → logprob: -10.273113250732422
    6. '"}' → logprob: -10.773113250732422
    7. '       ' → logprob: -11.148113250732422
    8. ' '' → logprob: -11.273113250732422
    9. ' ' → logprob: -12.398113250732422
    10. '           ' → logprob: -12.773113250732422

Token 245: '':
' (ID: 7669)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004252200480550528
    2. '<|end|>' → logprob: -6.6292524337768555
    3. '           ' → logprob: -7.0042524337768555
    4. ':
' → logprob: -7.2542524337768555
    5. ':' → logprob: -7.5042524337768555
    6. '):
' → logprob: -8.254252433776855
    7. '              ' → logprob: -9.129252433776855
    8. ')' → logprob: -9.629252433776855
    9. '```' → logprob: -9.754252433776855
    10. '       ' → logprob: -9.754252433776855

Token 246: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3410225808620453
    2. 'self' → logprob: -1.7160226106643677
    3. ' self' → logprob: -2.216022491455078
    4. '           ' → logprob: -9.966022491455078
    5. '(self' → logprob: -10.341022491455078
    6. ' ' → logprob: -11.091022491455078
    7. '	self' → logprob: -11.716022491455078
    8. '[self' → logprob: -11.841022491455078
    9. '   ' → logprob: -12.716022491455078
    10. '1' → logprob: -12.841022491455078

Token 247: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5410339832305908
    2. ' self' → logprob: -0.9160339832305908
    3. '               ' → logprob: -4.041033744812012
    4. '           ' → logprob: -9.416033744812012
    5. '1' → logprob: -10.666033744812012
    6. '(self' → logprob: -11.166033744812012
    7. ' ' → logprob: -11.166033744812012
    8. '	self' → logprob: -11.916033744812012
    9. '[self' → logprob: -12.041033744812012
    10. '                   ' → logprob: -12.666033744812012

Token 248: '.close' (ID: 8183)
  Prédit: '.close'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.close' → logprob: -0.2533521056175232
    2. 'close' → logprob: -1.503352165222168
    3. ' close' → logprob: -6.628352165222168
    4. 'open' → logprob: -10.253352165222168
    5. '.open' → logprob: -10.503352165222168
    6. '.' → logprob: -11.503352165222168
    7. '	close' → logprob: -11.503352165222168
    8. '_close' → logprob: -11.628352165222168
    9. '   ' → logprob: -13.003352165222168
    10. ' .' → logprob: -13.628352165222168

Token 249: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.00014048899174667895
    2. 'cur' → logprob: -8.875140190124512
    3. '_curr' → logprob: -16.125141143798828
    4. '	cur' → logprob: -16.125141143798828
    5. '[cur' → logprob: -16.250141143798828
    6. '.cur' → logprob: -16.250141143798828
    7. '_' → logprob: -17.375141143798828
    8. '   ' → logprob: -17.500141143798828
    9. ' cur' → logprob: -18.000141143798828
    10. ' curly' → logprob: -18.250141143798828

Token 250: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -1.9361264946837764e-07
    2. 'y' → logprob: -17.125
    3. '}' → logprob: -17.375
    4. ' curly' → logprob: -19.5
    5. 'l' → logprob: -19.625
    6. ' ' → logprob: -20.375
    7. '{' → logprob: -20.375
    8. '1' → logprob: -20.375
    9. 'lyg' → logprob: -20.5
    10. 'lys' → logprob: -20.625

Token 251: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06197384372353554
    2. '+=' → logprob: -2.811973810195923
    3. '           ' → logprob: -12.936973571777344
    4. ']+=' → logprob: -13.061973571777344
    5. '               ' → logprob: -14.561973571777344
    6. ' ' → logprob: -15.311973571777344
    7. '+' → logprob: -15.811973571777344
    8. ')' → logprob: -16.061973571777344
    9. '            ' → logprob: -16.311973571777344
    10. '   ' → logprob: -16.561973571777344

Token 252: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3868713676929474
    2. '1' → logprob: -1.136871337890625
    3. '   ' → logprob: -15.761871337890625
    4. '           ' → logprob: -16.386871337890625
    5. ' ' → logprob: -16.761871337890625
    6. '0' → logprob: -18.511871337890625
    7. 's' → logprob: -18.699371337890625
    8. '                   ' → logprob: -18.699371337890625
    9. '```' → logprob: -18.761871337890625
    10. '               ' → logprob: -18.761871337890625

Token 253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011047935113310814
    2. ' ' → logprob: -4.511047840118408
    3. '   ' → logprob: -16.51104736328125
    4. '+' → logprob: -17.26104736328125
    5. '-' → logprob: -18.51104736328125
    6. ')' → logprob: -18.76104736328125
    7. '0' → logprob: -19.07354736328125
    8. '<|end|>' → logprob: -19.07354736328125
    9. '```' → logprob: -19.32354736328125
    10. ' +' → logprob: -19.38604736328125

Token 254: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03710414469242096
    2. 'elif' → logprob: -3.4121041297912598
    3. ' elif' → logprob: -5.78710412979126
    4. '       ' → logprob: -8.412104606628418
    5. '<|end|>' → logprob: -9.662104606628418
    6. '   ' → logprob: -9.787104606628418
    7. '	elif' → logprob: -10.662104606628418
    8. '```' → logprob: -12.162104606628418
    9. ')' → logprob: -12.662104606628418
    10. '<|end|>' → logprob: -13.037104606628418

Token 255: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06270913779735565
    2. 'elif' → logprob: -2.812709093093872
    3. ' elif' → logprob: -7.312709331512451
    4. '       ' → logprob: -9.812708854675293
    5. '	elif' → logprob: -11.562708854675293
    6. '   ' → logprob: -12.312708854675293
    7. '<|end|>' → logprob: -13.437708854675293
    8. '```' → logprob: -13.562708854675293
    9. '               ' → logprob: -14.312708854675293
    10. '		' → logprob: -14.687708854675293

Token 256: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.010209307074546814
    2. ' elif' → logprob: -4.635209083557129
    3. '           ' → logprob: -7.760209083557129
    4. '	elif' → logprob: -11.010209083557129
    5. '       ' → logprob: -12.135209083557129
    6. ')' → logprob: -13.260209083557129
    7. '   ' → logprob: -14.385209083557129
    8. 'el' → logprob: -14.385209083557129
    9. '<|end|>' → logprob: -14.385209083557129
    10. '               ' → logprob: -14.635209083557129

Token 257: ' ch' (ID: 549)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0035474475007504225
    2. ' '['' → logprob: -5.878547668457031
    3. ''[' → logprob: -7.753547668457031
    4. 'ch' → logprob: -8.253547668457031
    5. '']' → logprob: -11.253547668457031
    6. ''ch' → logprob: -11.503547668457031
    7. '           ' → logprob: -12.253547668457031
    8. '[' → logprob: -12.253547668457031
    9. '['' → logprob: -12.378547668457031
    10. ' ch' → logprob: -12.378547668457031

Token 258: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1002885028719902
    2. '==' → logprob: -2.3502883911132812
    3. '=='' → logprob: -10.225288391113281
    4. '=' → logprob: -10.600288391113281
    5. '[' → logprob: -12.100288391113281
    6. ' =' → logprob: -12.350288391113281
    7. ' =='' → logprob: -12.725288391113281
    8. ']==' → logprob: -13.350288391113281
    9. ' ' → logprob: -13.600288391113281
    10. '        ' → logprob: -13.725288391113281

Token 259: ' '['' (ID: 114468)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0005211008246988058
    2. ''[' → logprob: -8.125520706176758
    3. ' '['' → logprob: -8.750520706176758
    4. '[' → logprob: -9.750520706176758
    5. '['' → logprob: -12.875520706176758
    6. '']' → logprob: -13.000520706176758
    7. ''>' → logprob: -14.375520706176758
    8. ''s' → logprob: -14.375520706176758
    9. '   ' → logprob: -14.500520706176758
    10. '"' → logprob: -15.125520706176758

Token 260: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.31975361704826355
    2. ']' → logprob: -1.944753646850586
    3. ':' → logprob: -2.694753646850586
    4. '']' → logprob: -3.444753646850586
    5. ':
' → logprob: -4.319753646850586
    6. '<|end|>' → logprob: -4.444753646850586
    7. '[' → logprob: -6.569753646850586
    8. '           ' → logprob: -6.694753646850586
    9. ''' → logprob: -7.319753646850586
    10. ']:
' → logprob: -7.444753646850586

Token 261: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0030759908258914948
    2. 'self' → logprob: -5.878076076507568
    3. ' self' → logprob: -8.25307559967041
    4. '           ' → logprob: -12.00307559967041
    5. '[self' → logprob: -12.87807559967041
    6. '   ' → logprob: -14.62807559967041
    7. '                   ' → logprob: -14.75307559967041
    8. '              ' → logprob: -15.00307559967041
    9. '       ' → logprob: -16.003076553344727
    10. '	self' → logprob: -16.253076553344727

Token 262: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.012627247720956802
    2. '               ' → logprob: -5.012627124786377
    3. ' self' → logprob: -5.137627124786377
    4. '           ' → logprob: -11.387627601623535
    5. '[self' → logprob: -12.137627601623535
    6. '                   ' → logprob: -13.762627601623535
    7. '	self' → logprob: -13.887627601623535
    8. '
' → logprob: -14.137627601623535
    9. ' ' → logprob: -14.512627601623535
    10. '[' → logprob: -14.512627601623535

Token 263: '.open' (ID: 9702)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.16032008826732635
    2. '.open' → logprob: -1.9103200435638428
    3. ' open' → logprob: -9.785320281982422
    4. '.' → logprob: -10.535320281982422
    5. '	open' → logprob: -12.035320281982422
    6. '.square' → logprob: -13.035320281982422
    7. 'square' → logprob: -13.160320281982422
    8. '_open' → logprob: -13.160320281982422
    9. ' .' → logprob: -14.910320281982422
    10. '=open' → logprob: -15.160320281982422

Token 264: '_square' (ID: 99463)
  Prédit: '_square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_square' → logprob: -2.5107177862082608e-05
    2. 'square' → logprob: -10.750024795532227
    3. '_' → logprob: -13.000024795532227
    4. '_s' → logprob: -14.250024795532227
    5. '_squared' → logprob: -14.500024795532227
    6. 's' → logprob: -16.000024795532227
    7. '_sq' → logprob: -17.125024795532227
    8. ' square' → logprob: -17.250024795532227
    9. '_space' → logprob: -17.625024795532227
    10. 'quare' → logprob: -18.625024795532227

Token 265: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1603163331747055
    2. '+=' → logprob: -1.9103163480758667
    3. ']+=' → logprob: -10.160316467285156
    4. '               ' → logprob: -10.535316467285156
    5. '           ' → logprob: -11.160316467285156
    6. '            ' → logprob: -12.160316467285156
    7. '+' → logprob: -13.535316467285156
    8. '                ' → logprob: -13.660316467285156
    9. '<|end|>' → logprob: -13.660316467285156
    10. '                   ' → logprob: -13.785316467285156

Token 266: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.575939953327179
    2. ' ' → logprob: -0.825939953327179
    3. '<|end|>' → logprob: -15.325940132141113
    4. '   ' → logprob: -16.075939178466797
    5. ' ' → logprob: -16.450939178466797
    6. '```' → logprob: -17.325939178466797
    7. '           ' → logprob: -17.763439178466797
    8. '0' → logprob: -18.200939178466797
    9. 's' → logprob: -18.263439178466797
    10. '  ' → logprob: -18.325939178466797

Token 267: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029613598599098623
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -16.750295639038086
    4. '<|end|>' → logprob: -17.750295639038086
    5. '           ' → logprob: -18.375295639038086
    6. '```' → logprob: -19.375295639038086
    7. '
' → logprob: -19.750295639038086
    8. '１' → logprob: -20.125295639038086
    9. '۱' → logprob: -20.250295639038086
    10. '0' → logprob: -20.562795639038086

Token 268: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21929404139518738
    2. '               ' → logprob: -1.8442940711975098
    3. '<|end|>' → logprob: -4.09429407119751
    4. ':' → logprob: -4.34429407119751
    5. ')' → logprob: -6.09429407119751
    6. 'elif' → logprob: -6.21929407119751
    7. '       ' → logprob: -6.59429407119751
    8. ':
' → logprob: -6.96929407119751
    9. ']' → logprob: -6.96929407119751
    10. '```' → logprob: -7.84429407119751

Token 269: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3969123065471649
    2. 'elif' → logprob: -1.1469123363494873
    3. ' elif' → logprob: -4.646912097930908
    4. ']' → logprob: -8.896912574768066
    5. '<|end|>' → logprob: -9.271912574768066
    6. '               ' → logprob: -9.396912574768066
    7. '       ' → logprob: -10.271912574768066
    8. '```' → logprob: -11.271912574768066
    9. '   ' → logprob: -11.521912574768066
    10. 'else' → logprob: -11.646912574768066

Token 270: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.00216441391967237
    2. ' elif' → logprob: -6.252164363861084
    3. ']' → logprob: -8.752164840698242
    4. '           ' → logprob: -9.502164840698242
    5. '']' → logprob: -13.752164840698242
    6. 'el' → logprob: -13.877164840698242
    7. '	elif' → logprob: -15.002164840698242
    8. '               ' → logprob: -16.002164840698242
    9. '       ' → logprob: -16.127164840698242
    10. ')' → logprob: -16.127164840698242

Token 271: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.2564557194709778
    2. 'ch' → logprob: -1.506455659866333
    3. ']' → logprob: -5.756455898284912
    4. '']' → logprob: -6.631455898284912
    5. ' ']' → logprob: -11.006455421447754
    6. '(ch' → logprob: -11.756455421447754
    7. '[ch' → logprob: -12.631455421447754
    8. '	ch' → logprob: -13.131455421447754
    9. ''ch' → logprob: -13.756455421447754
    10. ')' → logprob: -14.131455421447754

Token 272: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0901992991566658
    2. '==' → logprob: -2.4651992321014404
    3. ']' → logprob: -7.0901994705200195
    4. ']==' → logprob: -7.8401994705200195
    5. ' ' → logprob: -11.46519947052002
    6. '']' → logprob: -11.96519947052002
    7. '=' → logprob: -12.34019947052002
    8. '[' → logprob: -13.21519947052002
    9. ' ]' → logprob: -13.46519947052002
    10. '=='' → logprob: -13.71519947052002

Token 273: ' ']' (ID: 98922)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.004082909319549799
    2. ']' → logprob: -5.504082679748535
    3. ' ']' → logprob: -12.879082679748535
    4. ' '' → logprob: -14.129082679748535
    5. '"]' → logprob: -14.629082679748535
    6. ']'' → logprob: -15.129082679748535
    7. ''' → logprob: -15.879082679748535
    8. '   ' → logprob: -16.87908363342285
    9. ''s' → logprob: -17.00408363342285
    10. '')' → logprob: -17.62908363342285

Token 274: '':
' (ID: 7669)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4071356952190399
    2. ']' → logprob: -1.6571357250213623
    3. ':
' → logprob: -3.1571357250213623
    4. ':' → logprob: -3.6571357250213623
    5. ']:
' → logprob: -3.7821357250213623
    6. '           ' → logprob: -4.157135486602783
    7. '']' → logprob: -4.532135486602783
    8. ''' → logprob: -4.907135486602783
    9. ' ']' → logprob: -5.407135486602783
    10. ']:' → logprob: -5.657135486602783

Token 275: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6589133143424988
    2. 'self' → logprob: -0.9089133143424988
    3. ' self' → logprob: -2.5339133739471436
    4. '           ' → logprob: -8.658913612365723
    5. '1' → logprob: -10.283913612365723
    6. ' ' → logprob: -11.283913612365723
    7. '(self' → logprob: -11.408913612365723
    8. '	self' → logprob: -11.658913612365723
    9. '   ' → logprob: -12.033913612365723
    10. '                   ' → logprob: -12.283913612365723

Token 276: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.16139258444309235
    2. ' self' → logprob: -1.9113925695419312
    3. '               ' → logprob: -6.786392688751221
    4. '           ' → logprob: -10.786392211914062
    5. '                   ' → logprob: -11.661392211914062
    6. '1' → logprob: -13.036392211914062
    7. ' ' → logprob: -13.036392211914062
    8. '	self' → logprob: -13.661392211914062
    9. '
' → logprob: -14.161392211914062
    10. '   ' → logprob: -14.286392211914062

Token 277: '.close' (ID: 8183)
  Prédit: 'close'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'close' → logprob: -0.03167864307761192
    2. '.close' → logprob: -3.7816786766052246
    3. ' close' → logprob: -4.781678676605225
    4. '	close' → logprob: -11.656678199768066
    5. '_close' → logprob: -12.156678199768066
    6. '   ' → logprob: -14.906678199768066
    7. 'square' → logprob: -15.156678199768066
    8. '.' → logprob: -15.531678199768066
    9. '       ' → logprob: -15.656678199768066
    10. '(close' → logprob: -15.656678199768066

Token 278: '_square' (ID: 99463)
  Prédit: '_square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_square' → logprob: -2.1008713702030946e-06
    2. 'square' → logprob: -13.500001907348633
    3. '_squared' → logprob: -14.875001907348633
    4. '_' → logprob: -15.625001907348633
    5. '_s' → logprob: -17.500001907348633
    6. ' square' → logprob: -17.750001907348633
    7. '_sq' → logprob: -17.875001907348633
    8. ']' → logprob: -18.125001907348633
    9. '```' → logprob: -19.625001907348633
    10. '   ' → logprob: -20.000001907348633

Token 279: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07889717072248459
    2. '+=' → logprob: -2.57889723777771
    3. '            ' → logprob: -13.078897476196289
    4. '           ' → logprob: -13.828897476196289
    5. ']+=' → logprob: -13.828897476196289
    6. '               ' → logprob: -14.203897476196289
    7. '+' → logprob: -14.328897476196289
    8. ' ' → logprob: -14.453897476196289
    9. ' ' → logprob: -14.578897476196289
    10. '          ' → logprob: -15.453897476196289

Token 280: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16022463142871857
    2. ' ' → logprob: -1.9102246761322021
    3. '   ' → logprob: -15.160224914550781
    4. '           ' → logprob: -16.91022491455078
    5. '<|end|>' → logprob: -17.53522491455078
    6. '       ' → logprob: -18.16022491455078
    7. ' ' → logprob: -18.16022491455078
    8. '  ' → logprob: -18.16022491455078
    9. '```' → logprob: -18.28522491455078
    10. 's' → logprob: -18.41022491455078

Token 281: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.37520408630371
    4. ')' → logprob: -19.00020408630371
    5. '           ' → logprob: -19.75020408630371
    6. '```' → logprob: -19.87520408630371
    7. '<|end|>' → logprob: -20.00020408630371
    8. '-' → logprob: -21.12520408630371
    9. '１' → logprob: -21.12520408630371
    10. '                   ' → logprob: -21.25020408630371

Token 282: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 283: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 284: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3091776669025421
    2. '   ' → logprob: -1.4341776371002197
    3. '<|end|>' → logprob: -4.059177875518799
    4. '
' → logprob: -5.684177875518799
    5. ' def' → logprob: -5.934177875518799
    6. '       ' → logprob: -6.434177875518799
    7. 'class' → logprob: -7.059177875518799
    8. '<|end|>' → logprob: -7.434177875518799
    9. 'return' → logprob: -7.684177875518799
    10. '    
' → logprob: -8.68417739868164

Token 285: ' prefix' (ID: 18633)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.9704965353012085
    2. ' get' → logprob: -1.3454965353012085
    3. ' net' → logprob: -2.470496654510498
    4. 'diff' → logprob: -2.720496654510498
    5. 'net' → logprob: -3.095496654510498
    6. 'difference' → logprob: -3.220496654510498
    7. 'copy' → logprob: -3.470496654510498
    8. 'current' → logprob: -3.845496654510498
    9. ' copy' → logprob: -4.220496654510498
    10. ' current' → logprob: -4.845496654510498

Token 286: '_tuple' (ID: 53371)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.10441762208938599
    2. '_diff' → logprob: -3.354417562484741
    3. '_d' → logprob: -3.979417562484741
    4. '(self' → logprob: -3.979417562484741
    5. '_s' → logprob: -4.60441780090332
    6. '_sum' → logprob: -5.72941780090332
    7. '_c' → logprob: -5.85441780090332
    8. '_' → logprob: -5.85441780090332
    9. '_count' → logprob: -5.85441780090332
    10. '_difference' → logprob: -5.85441780090332

Token 287: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.696077227592468e-05
    2. '(' → logprob: -9.500077247619629
    3. 'self' → logprob: -14.000077247619629
    4. '()' → logprob: -14.875077247619629
    5. '   ' → logprob: -14.875077247619629
    6. '(s' → logprob: -15.750077247619629
    7. ' (' → logprob: -16.125076293945312
    8. '       ' → logprob: -16.250076293945312
    9. 's' → logprob: -16.875076293945312
    10. '():' → logprob: -17.250076293945312

Token 288: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.17160171270370483
    2. '):' → logprob: -2.7966017723083496
    3. '(self' → logprob: -2.9216017723083496
    4. 'self' → logprob: -3.1716017723083496
    5. ')(' → logprob: -8.421601295471191
    6. ')' → logprob: -8.671601295471191
    7. '   ' → logprob: -8.921601295471191
    8. '       ' → logprob: -9.171601295471191
    9. '):

' → logprob: -9.421601295471191
    10. ' self' → logprob: -10.171601295471191

Token 289: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7320538759231567
    2. '       ' → logprob: -0.9820538759231567
    3. '():
' → logprob: -2.357053756713867
    4. '(' → logprob: -3.857053756713867
    5. '():' → logprob: -3.982053756713867
    6. '   ' → logprob: -6.232053756713867
    7. ' return' → logprob: -6.482053756713867
    8. '(self' → logprob: -6.482053756713867
    9. '(
' → logprob: -6.482053756713867
    10. '()
' → logprob: -6.982053756713867

Token 290: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6537376046180725
    2. ' return' → logprob: -1.0287375450134277
    3. 'return' (adapté à ' return') → logprob: -2.6537375450134277
    4. '()' → logprob: -3.6537375450134277
    5. '(' → logprob: -4.153737545013428
    6. ' (' → logprob: -4.778737545013428
    7. '   ' → logprob: -7.528737545013428
    8. '(
' → logprob: -7.528737545013428
    9. '	return' → logprob: -8.528738021850586
    10. '(self' → logprob: -8.778738021850586

Token 291: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03170797973871231
    2. '(' → logprob: -4.281707763671875
    3. ' (' → logprob: -4.281707763671875
    4. '(
' → logprob: -5.656707763671875
    5. 'self' → logprob: -10.156707763671875
    6. ' self' → logprob: -10.781707763671875
    7. ' (
' → logprob: -11.156707763671875
    8. '   ' → logprob: -12.656707763671875
    9. '((' → logprob: -14.781707763671875
    10. '(this' → logprob: -14.906707763671875

Token 292: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.967624019831419e-05
    2. ' self' → logprob: -9.750060081481934
    3. '(self' → logprob: -14.000060081481934
    4. '       ' → logprob: -15.000060081481934
    5. '   ' → logprob: -16.000059127807617
    6. '           ' → logprob: -16.875059127807617
    7. '
' → logprob: -16.875059127807617
    8. '	self' → logprob: -19.750059127807617
    9. ')' → logprob: -19.875059127807617
    10. '    ' → logprob: -20.125059127807617

Token 293: '.open' (ID: 9702)
  Prédit: '.open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.open' → logprob: -1.6166903151315637e-05
    2. ' .' → logprob: -11.250016212463379
    3. 'open' → logprob: -13.250016212463379
    4. '.' → logprob: -13.750016212463379
    5. ').' → logprob: -16.500015258789062
    6. '.close' → logprob: -16.750015258789062
    7. '	open' → logprob: -17.000015258789062
    8. '=open' → logprob: -17.875015258789062
    9. ' open' → logprob: -18.125015258789062
    10. '_open' → logprob: -18.500015258789062

Token 294: '_round' (ID: 79298)
  Prédit: '_round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_round' → logprob: -4.3464544432936236e-05
    2. '_' → logprob: -10.250043869018555
    3. ' _' → logprob: -12.125043869018555
    4. 'round' → logprob: -13.125043869018555
    5. ')' → logprob: -15.625043869018555
    6. ')_' → logprob: -16.000043869018555
    7. '(round' → logprob: -16.375043869018555
    8. '_square' → logprob: -17.750043869018555
    9. '_roll' → logprob: -17.875043869018555
    10. '_floor' → logprob: -18.000043869018555

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011482074856758118
    2. ' ,' → logprob: -5.011482238769531
    3. ' -' → logprob: -5.511482238769531
    4. ',
' → logprob: -7.511482238769531
    5. '-' → logprob: -9.886482238769531
    6. 'self' → logprob: -10.011482238769531
    7. ',self' → logprob: -10.511482238769531
    8. '       ' → logprob: -11.011482238769531
    9. ' ' → logprob: -12.011482238769531
    10. ')' → logprob: -12.136482238769531

Token 296: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011052182875573635
    2. ' self' → logprob: -4.511052131652832
    3. '       ' → logprob: -12.761052131652832
    4. '
' → logprob: -13.636052131652832
    5. '           ' → logprob: -15.636052131652832
    6. '   ' → logprob: -16.63605308532715
    7. '(self' → logprob: -17.26105308532715
    8. '        ' → logprob: -18.01105308532715
    9. '	self' → logprob: -18.01105308532715
    10. ' ' → logprob: -18.13605308532715

Token 297: '.close' (ID: 8183)
  Prédit: 'close'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'close' → logprob: -0.002252910751849413
    2. 'open' → logprob: -6.62725305557251
    3. ' close' → logprob: -7.50225305557251
    4. '_close' → logprob: -8.377252578735352
    5. '.close' → logprob: -9.127252578735352
    6. 'round' → logprob: -10.752252578735352
    7. 'cur' → logprob: -12.127252578735352
    8. '_round' → logprob: -13.002252578735352
    9. 'closed' → logprob: -13.377252578735352
    10. '_open' → logprob: -14.252252578735352

Token 298: '_round' (ID: 79298)
  Prédit: '_round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_round' → logprob: -1.5048530030981055e-06
    2. 'round' → logprob: -13.750001907348633
    3. ')' → logprob: -15.625001907348633
    4. '_' → logprob: -15.750001907348633
    5. '(round' → logprob: -18.125001907348633
    6. ')_' → logprob: -18.125001907348633
    7. '_range' → logprob: -18.250001907348633
    8. ' _' → logprob: -18.750001907348633
    9. '_square' → logprob: -19.000001907348633
    10. '_)' → logprob: -19.000001907348633

Token 299: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0046341149136424065
    2. ',
' → logprob: -5.879633903503418
    3. ' ,' → logprob: -6.379633903503418
    4. ')' → logprob: -9.504633903503418
    5. ',self' → logprob: -10.629633903503418
    6. '       ' → logprob: -11.254633903503418
    7. 'self' → logprob: -11.754633903503418
    8. ' ,
' → logprob: -12.379633903503418
    9. '   ' → logprob: -13.254633903503418
    10. '           ' → logprob: -13.504633903503418

Token 300: '               ' (ID: 506)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09985967725515366
    2. ' self' → logprob: -2.4748597145080566
    3. '               ' → logprob: -5.599859714508057
    4. '       ' → logprob: -6.474859714508057
    5. '             ' → logprob: -6.849859714508057
    6. '            ' → logprob: -6.849859714508057
    7. '           ' → logprob: -6.974859714508057
    8. '                ' → logprob: -6.974859714508057
    9. '              ' → logprob: -7.099859714508057
    10. '        ' → logprob: -8.224859237670898

Token 301: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.040462180972099304
    2. ' self' → logprob: -3.2904622554779053
    3. '               ' → logprob: -6.040462017059326
    4. '              ' → logprob: -11.165462493896484
    5. '                ' → logprob: -11.290462493896484
    6. '                   ' → logprob: -12.290462493896484
    7. '                  ' → logprob: -13.665462493896484
    8. '                 ' → logprob: -13.790462493896484
    9. '(self' → logprob: -14.040462493896484
    10. '       ' → logprob: -14.540462493896484

Token 302: '.open' (ID: 9702)
  Prédit: '.open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.open' → logprob: -0.003279071766883135
    2. 'open' → logprob: -5.753279209136963
    3. '_open' → logprob: -9.253278732299805
    4. '.' → logprob: -13.253278732299805
    5. '	open' → logprob: -13.878278732299805
    6. ' open' → logprob: -14.128278732299805
    7. '=open' → logprob: -14.128278732299805
    8. ' .' → logprob: -14.378278732299805
    9. '._' → logprob: -15.253278732299805
    10. '_.' → logprob: -15.378278732299805

Token 303: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -1.7432603272027336e-06
    2. '_square' → logprob: -13.375001907348633
    3. 'cur' → logprob: -16.250001907348633
    4. '_curr' → logprob: -16.750001907348633
    5. '_' → logprob: -17.250001907348633
    6. '_c' → logprob: -17.500001907348633
    7. '_round' → logprob: -18.250001907348633
    8. '_curve' → logprob: -18.875001907348633
    9. '_current' → logprob: -19.625001907348633
    10. ')_' → logprob: -20.125001907348633

Token 304: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -2.935296834039036e-06
    2. '   ' → logprob: -14.62500286102295
    3. '```' → logprob: -14.87500286102295
    4. 'l' → logprob: -15.00000286102295
    5. '
' → logprob: -15.25000286102295
    6. '  ' → logprob: -15.62500286102295
    7. '               ' → logprob: -15.87500286102295
    8. 'ply' → logprob: -16.250003814697266
    9. 'oly' → logprob: -16.250003814697266
    10. '_round' → logprob: -16.750003814697266

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011486753646750003
    2. ',
' → logprob: -9.375114440917969
    3. ' ,' → logprob: -10.500114440917969
    4. ',self' → logprob: -13.250114440917969
    5. '               ' → logprob: -15.625114440917969
    6. 'self' → logprob: -16.00011444091797
    7. ')' → logprob: -16.12511444091797
    8. '),' → logprob: -16.50011444091797
    9. ',

' → logprob: -17.00011444091797
    10. '<|end|>' → logprob: -17.25011444091797

Token 306: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.693230152130127
    2. 'self' → logprob: -0.693230152130127
    3. '               ' → logprob: -9.443229675292969
    4. '           ' → logprob: -13.443229675292969
    5. '	self' → logprob: -14.818229675292969
    6. '       ' → logprob: -14.943229675292969
    7. '[self' → logprob: -15.193229675292969
    8. ' ' → logprob: -15.318229675292969
    9. '              ' → logprob: -15.318229675292969
    10. '(self' → logprob: -15.443229675292969

Token 307: '.close' (ID: 8183)
  Prédit: '.close'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.close' → logprob: -0.604448676109314
    2. 'close' → logprob: -0.854448676109314
    3. '_close' → logprob: -3.6044487953186035
    4. 'self' → logprob: -7.6044487953186035
    5. '_cur' → logprob: -8.854448318481445
    6. 'cur' → logprob: -9.229448318481445
    7. 'open' → logprob: -10.104448318481445
    8. '.cur' → logprob: -10.229448318481445
    9. '.open' → logprob: -10.479448318481445
    10. '   ' → logprob: -10.854448318481445

Token 308: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.0004886920796707273
    2. 'cur' → logprob: -7.625488758087158
    3. 'Cur' → logprob: -15.25048828125
    4. '.cur' → logprob: -15.50048828125
    5. '[cur' → logprob: -16.50048828125
    6. '	cur' → logprob: -17.00048828125
    7. '-cur' → logprob: -17.12548828125
    8. '_c' → logprob: -17.75048828125
    9. '_square' → logprob: -18.37548828125
    10. '_CUR' → logprob: -18.37548828125

Token 309: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -1.4021237802808173e-05
    2. 'y' → logprob: -11.750014305114746
    3. '               ' → logprob: -12.875014305114746
    4. '   ' → logprob: -14.250014305114746
    5. '           ' → logprob: -15.000014305114746
    6. '       ' → logprob: -15.375014305114746
    7. '        ' → logprob: -15.625014305114746
    8. 'l' → logprob: -15.625014305114746
    9. '  ' → logprob: -15.625014305114746
    10. 'hy' → logprob: -15.750014305114746

Token 310: ',
' (ID: 412)
  Prédit: ',
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',
' → logprob: -0.3914667069911957
    2. ',' → logprob: -1.141466736793518
    3. '               ' → logprob: -5.3914666175842285
    4. ')' → logprob: -10.891467094421387
    5. ',\
' → logprob: -12.891467094421387
    6. ',self' → logprob: -13.266467094421387
    7. ',
' → logprob: -13.391467094421387
    8. '              ' → logprob: -13.641467094421387
    9. ' ,' → logprob: -13.891467094421387
    10. ',

' → logprob: -13.891467094421387

Token 311: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023253168910741806
    2. 'self' → logprob: -3.7732532024383545
    3. '              ' → logprob: -12.523253440856934
    4. ' self' → logprob: -12.773253440856934
    5. '                ' → logprob: -14.148253440856934
    6. '                   ' → logprob: -15.898253440856934
    7. '           ' → logprob: -16.148252487182617
    8. '       ' → logprob: -16.398252487182617
    9. '                 ' → logprob: -16.398252487182617
    10. '             ' → logprob: -16.898252487182617

Token 312: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00032724079210311174
    2. '               ' → logprob: -8.500327110290527
    3. ' self' → logprob: -9.000327110290527
    4. '       ' → logprob: -16.125328063964844
    5. '                   ' → logprob: -16.125328063964844
    6. '           ' → logprob: -16.875328063964844
    7. '(self' → logprob: -17.375328063964844
    8. '              ' → logprob: -17.375328063964844
    9. '   ' → logprob: -17.500328063964844
    10. '	self' → logprob: -18.375328063964844

Token 313: '.open' (ID: 9702)
  Prédit: '.open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.open' → logprob: -0.014169150963425636
    2. 'open' → logprob: -4.264169216156006
    3. '_open' → logprob: -12.514168739318848
    4. '.' → logprob: -14.514168739318848
    5. '	open' → logprob: -14.514168739318848
    6. ' open' → logprob: -14.889168739318848
    7. '=open' → logprob: -14.889168739318848
    8. ' .' → logprob: -15.139168739318848
    9. '(open' → logprob: -17.139169692993164
    10. '.square' → logprob: -17.389169692993164

Token 314: '_square' (ID: 99463)
  Prédit: '_square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_square' → logprob: -5.080963092041202e-06
    2. 'square' → logprob: -12.625004768371582
    3. '_' → logprob: -13.875004768371582
    4. '_s' → logprob: -15.000004768371582
    5. '_round' → logprob: -15.500004768371582
    6. '_squared' → logprob: -15.875004768371582
    7. '_sq' → logprob: -17.7500057220459
    8. ' square' → logprob: -18.3750057220459
    9. 'Square' → logprob: -18.6250057220459
    10. '_floor' → logprob: -19.0000057220459

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013095269969198853
    2. ' ,' → logprob: -9.375130653381348
    3. ',
' → logprob: -10.125130653381348
    4. ',self' → logprob: -12.375130653381348
    5. '       ' → logprob: -14.625130653381348
    6. ')' → logprob: -15.000130653381348
    7. 'self' → logprob: -15.125130653381348
    8. '               ' → logprob: -15.750130653381348
    9. '<|end|>' → logprob: -16.000131607055664
    10. '           ' → logprob: -16.125131607055664

Token 316: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2519310414791107
    2. ' self' → logprob: -1.501931071281433
    3. '	self' → logprob: -15.001931190490723
    4. '(self' → logprob: -15.251931190490723
    5. ' ' → logprob: -15.376931190490723
    6. '           ' → logprob: -15.501931190490723
    7. '               ' → logprob: -15.626931190490723
    8. '       ' → logprob: -15.626931190490723
    9. '[self' → logprob: -15.751931190490723
    10. '   ' → logprob: -16.376930236816406

Token 317: '.close' (ID: 8183)
  Prédit: 'close'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'close' → logprob: -0.4347018003463745
    2. '_close' → logprob: -1.1847018003463745
    3. '.close' → logprob: -3.434701919555664
    4. 'open' → logprob: -4.684701919555664
    5. '_square' → logprob: -5.809701919555664
    6. '_open' → logprob: -6.184701919555664
    7. '.open' → logprob: -8.934701919555664
    8. ' close' → logprob: -10.809701919555664
    9. 'square' → logprob: -12.059701919555664
    10. '_closed' → logprob: -12.434701919555664

Token 318: '_square' (ID: 99463)
  Prédit: '_square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_square' → logprob: -2.248469718324486e-05
    2. '_' → logprob: -11.250022888183594
    3. '_round' → logprob: -12.500022888183594
    4. '_s' → logprob: -13.125022888183594
    5. '_squared' → logprob: -13.250022888183594
    6. 'square' → logprob: -13.750022888183594
    7. ')' → logprob: -14.750022888183594
    8. '_sq' → logprob: -15.875022888183594
    9. '_floor' → logprob: -17.250022888183594
    10. '_)' → logprob: -17.375022888183594

Token 319: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ')
' → logprob: -12.875003814697266
    3. ' )' → logprob: -14.000003814697266
    4. '   ' → logprob: -15.875003814697266
    5. '       ' → logprob: -16.250003814697266
    6. ')return' → logprob: -17.125003814697266
    7. ')

' → logprob: -18.000003814697266
    8. '}' → logprob: -18.375003814697266
    9. '())' → logprob: -18.875003814697266
    10. '()' → logprob: -19.000003814697266

Token 320: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20827734470367432
    2. '
' → logprob: -2.4582772254943848
    3. '   ' → logprob: -2.9582772254943848
    4. 'class' → logprob: -3.3332772254943848
    5. '<|end|>' → logprob: -4.458277225494385
    6. ' def' → logprob: -6.708277225494385
    7. '<|end|>' → logprob: -6.958277225494385
    8. ')' → logprob: -8.458277702331543
    9. '```' → logprob: -8.458277702331543
    10. '#' → logprob: -9.083277702331543

Token 321: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.08116215467453003
    2. '   ' → logprob: -2.706162214279175
    3. ')' → logprob: -5.581161975860596
    4. '
' → logprob: -6.081161975860596
    5. '<|end|>' → logprob: -6.331161975860596
    6. ' def' → logprob: -6.581161975860596
    7. 'class' → logprob: -6.831161975860596
    8. '```' → logprob: -8.706162452697754
    9. '<|end|>' → logprob: -8.831162452697754
    10. '#' → logprob: -8.956162452697754

Token 322: ' clone' (ID: 28806)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.6517093181610107
    2. ' copy' → logprob: -1.7767093181610107
    3. 'reset' → logprob: -1.9017093181610107
    4. 'clone' → logprob: -2.6517093181610107
    5. 'diff' → logprob: -3.7767093181610107
    6. ' reset' → logprob: -4.15170955657959
    7. 'def' → logprob: -4.27670955657959
    8. ' clone' → logprob: -5.15170955657959
    9. '__' → logprob: -5.52670955657959
    10. 'get' → logprob: -5.65170955657959

Token 323: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003397535183466971
    2. '(' → logprob: -8.00033950805664
    3. 'self' → logprob: -13.12533950805664
    4. '   ' → logprob: -14.37533950805664
    5. ' (' → logprob: -14.50033950805664
    6. '(
' → logprob: -14.50033950805664
    7. '()' → logprob: -15.12533950805664
    8. 'def' → logprob: -15.87533950805664
    9. '(Self' → logprob: -16.25033950805664
    10. '():
' → logprob: -17.00033950805664

Token 324: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.031245341524481773
    2. '):
' → logprob: -3.531245231628418
    3. ')' → logprob: -6.781245231628418
    4. '):

' → logprob: -8.156245231628418
    5. 'self' → logprob: -9.906245231628418
    6. '):
' → logprob: -11.406245231628418
    7. '(self' → logprob: -12.406245231628418
    8. ' ):' → logprob: -12.531245231628418
    9. '():' → logprob: -13.906245231628418
    10. ')：' → logprob: -14.656245231628418

Token 325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006799798924475908
    2. '
' → logprob: -5.006799697875977
    3. '        
' → logprob: -10.381799697875977
    4. 'return' → logprob: -11.756799697875977
    5. '   ' → logprob: -11.881799697875977
    6. '	' → logprob: -12.006799697875977
    7. '    
' → logprob: -12.131799697875977
    8. ' return' → logprob: -12.381799697875977
    9. ' 
' → logprob: -12.631799697875977
    10. '  
' → logprob: -12.756799697875977

Token 326: ' bc' (ID: 51743)
  Prédit: ' bc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bc' → logprob: -0.12263808399438858
    2. 'bc' (adapté à ' bc') → logprob: -2.372637987136841
    3. ' new' → logprob: -3.872637987136841
    4. 'new' → logprob: -6.99763822555542
    5. '       ' → logprob: -8.997637748718262
    6. ' counter' → logprob: -9.122637748718262
    7. 'counter' → logprob: -9.872637748718262
    8. ' clone' → logprob: -10.122637748718262
    9. ' copy' → logprob: -10.372637748718262
    10. ' b' → logprob: -10.622637748718262

Token 327: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10025649517774582
    2. '=' → logprob: -2.3502564430236816
    3. 'ounter' → logprob: -10.22525691986084
    4. 'ount' → logprob: -11.85025691986084
    5. ' ' → logprob: -12.85025691986084
    6. ' =
' → logprob: -13.85025691986084
    7. '   ' → logprob: -14.60025691986084
    8. '	' → logprob: -14.97525691986084
    9. '  ' → logprob: -14.97525691986084
    10. '=
' → logprob: -15.22525691986084

Token 328: ' Br' (ID: 2866)
  Prédit: 'Bracket'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bracket' → logprob: -0.00015860427811276168
    2. ' Br' → logprob: -8.750158309936523
    3. ' bracket' → logprob: -16.875158309936523
    4. 'self' → logprob: -17.500158309936523
    5. '   ' → logprob: -18.375158309936523
    6. ' Branch' → logprob: -18.500158309936523
    7. ' BR' → logprob: -18.500158309936523
    8. ' ' → logprob: -18.625158309936523
    9. 'Breakpoint' → logprob: -18.625158309936523
    10. '.Br' → logprob: -19.000158309936523

Token 329: 'acket' (ID: 8480)
  Prédit: 'acket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acket' → logprob: -0.0003479785518720746
    2. 'ack' → logprob: -8.750348091125488
    3. 'Bracket' → logprob: -8.875348091125488
    4. '   ' → logprob: -11.250348091125488
    5. '       ' → logprob: -11.500348091125488
    6. 'a' → logprob: -11.625348091125488
    7. '```' → logprob: -12.125348091125488
    8. 'ACKET' → logprob: -12.125348091125488
    9. 'asket' → logprob: -13.250348091125488
    10. '           ' → logprob: -13.375348091125488

Token 330: 'Counter' (ID: 16263)
  Prédit: 'Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -1.3856492842023727e-06
    2. 'Coun' → logprob: -14.250000953674316
    3. 'Count' → logprob: -14.750000953674316
    4. 'ounter' → logprob: -15.875000953674316
    5. 'counter' → logprob: -17.000001907348633
    6. ' Counter' → logprob: -17.500001907348633
    7. 'C' → logprob: -18.000001907348633
    8. '_counter' → logprob: -18.250001907348633
    9. '.Counter' → logprob: -18.750001907348633
    10. 'Counters' → logprob: -19.125001907348633

Token 331: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.03804516792297363
    2. '()' → logprob: -3.2880451679229736
    3. '()
' → logprob: -13.038044929504395
    4. '()

' → logprob: -13.413044929504395
    5. ' ()
' → logprob: -16.66304588317871
    6. '()\' → logprob: -17.53804588317871
    7. '(' → logprob: -17.91304588317871
    8. '().__' → logprob: -18.28804588317871
    9. '()`' → logprob: -18.53804588317871
    10. '__()
' → logprob: -18.66304588317871

Token 332: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018673599697649479
    2. 'bc' → logprob: -6.501867294311523
    3. '
' → logprob: -8.001867294311523
    4. ' bc' → logprob: -11.251867294311523
    5. 'b' → logprob: -11.876867294311523
    6. '	' → logprob: -12.626867294311523
    7. '   ' → logprob: -13.001867294311523
    8. '        
' → logprob: -13.876867294311523
    9. '<|end|>' → logprob: -14.001867294311523
    10. '.bc' → logprob: -14.626867294311523

Token 333: ' bc' (ID: 51743)
  Prédit: 'bc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' (adapté à ' bc') → logprob: -0.000158842682139948
    2. ' bc' → logprob: -8.75015926361084
    3. '       ' → logprob: -15.75015926361084
    4. '   ' → logprob: -16.375158309936523
    5. '_bc' → logprob: -18.000158309936523
    6. '
' → logprob: -18.125158309936523
    7. '.bc' → logprob: -18.125158309936523
    8. 'b' → logprob: -19.750158309936523
    9. '```' → logprob: -20.250158309936523
    10. 'dc' → logprob: -21.000158309936523

Token 334: '.open' (ID: 9702)
  Prédit: '.open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.open' → logprob: -7.107425062713446e-06
    2. '.' → logprob: -12.750006675720215
    3. '=open' → logprob: -12.875006675720215
    4. ' .' → logprob: -14.500006675720215
    5. 'open' → logprob: -14.625006675720215
    6. '.openapi' → logprob: -15.125006675720215
    7. '.close' → logprob: -15.625006675720215
    8. '	open' → logprob: -16.50000762939453
    9. '```' → logprob: -17.12500762939453
    10. '
' → logprob: -17.25000762939453

Token 335: '_round' (ID: 79298)
  Prédit: '_round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_round' → logprob: -2.4987974029500037e-05
    2. '_' → logprob: -10.625024795532227
    3. 'round' → logprob: -15.000024795532227
    4. ' _' → logprob: -16.125024795532227
    5. '_open' → logprob: -16.500024795532227
    6. '_r' → logprob: -18.125024795532227
    7. 's' → logprob: -18.500024795532227
    8. '_range' → logprob: -18.750024795532227
    9. '=_' → logprob: -18.750024795532227
    10. '\' → logprob: -18.875024795532227

Token 336: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407716512680054
    2. '=' → logprob: -0.9740771651268005
    3. '=self' → logprob: -16.724077224731445
    4. ' ' → logprob: -16.849077224731445
    5. ',' → logprob: -17.349077224731445
    6. '   ' → logprob: -17.474077224731445
    7. '    ' → logprob: -17.974077224731445
    8. '  ' → logprob: -18.474077224731445
    9. '        ' → logprob: -20.224077224731445
    10. '=
' → logprob: -20.224077224731445

Token 337: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005530327325686812
    2. ' self' → logprob: -7.500553131103516
    3. '       ' → logprob: -18.125553131103516
    4. '	self' → logprob: -18.500553131103516
    5. '(self' → logprob: -19.000553131103516
    6. '=self' → logprob: -20.125553131103516
    7. '[self' → logprob: -20.375553131103516
    8. '
' → logprob: -20.625553131103516
    9. '$self' → logprob: -21.000553131103516
    10. '   ' → logprob: -21.125553131103516

Token 338: '.open' (ID: 9702)
  Prédit: '.open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.open' → logprob: -6.153795766294934e-06
    2. '.' → logprob: -12.375005722045898
    3. 'open' → logprob: -13.250005722045898
    4. ' .' → logprob: -17.0000057220459
    5. '.round' → logprob: -17.2500057220459
    6. '.op' → logprob: -17.5000057220459
    7. '.openapi' → logprob: -18.1250057220459
    8. '	open' → logprob: -18.3750057220459
    9. '._' → logprob: -18.5000057220459
    10. '=open' → logprob: -18.7500057220459

Token 339: '_round' (ID: 79298)
  Prédit: '_round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_round' → logprob: -3.7146746763028204e-05
    2. '_' → logprob: -10.50003719329834
    3. ' _' → logprob: -11.87503719329834
    4. 'round' → logprob: -13.37503719329834
    5. '_r' → logprob: -15.62503719329834
    6. '   ' → logprob: -16.000036239624023
    7. '_range' → logprob: -16.125036239624023
    8. '_indent' → logprob: -16.125036239624023
    9. '_floor' → logprob: -16.500036239624023
    10. '```' → logprob: -16.500036239624023

Token 340: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5798354148864746
    2. '
' → logprob: -1.0798354148864746
    3. '<|end|>' → logprob: -2.3298354148864746
    4. '<|end|>' → logprob: -6.704835414886475
    5. '        
' → logprob: -6.829835414886475
    6. '    
' → logprob: -9.079835891723633
    7. '   ' → logprob: -9.454835891723633
    8. '	' → logprob: -9.454835891723633
    9. '		
' → logprob: -9.954835891723633
    10. '        ' → logprob: -9.954835891723633

Token 341: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025399643927812576
    2. 'bc' → logprob: -3.900399684906006
    3. '
' → logprob: -5.400399684906006
    4. '<|end|>' → logprob: -8.900399208068848
    5. ' bc' → logprob: -9.900399208068848
    6. '	' → logprob: -10.275399208068848
    7. '<|end|>' → logprob: -10.775399208068848
    8. 'b' → logprob: -10.900399208068848
    9. '        
' → logprob: -11.525399208068848
    10. '   ' → logprob: -11.775399208068848

Token 342: ' bc' (ID: 51743)
  Prédit: 'bc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' (adapté à ' bc') → logprob: -0.008633595891296864
    2. ' bc' → logprob: -4.758633613586426
    3. '       ' → logprob: -10.883633613586426
    4. '_bc' → logprob: -15.883633613586426
    5. '.bc' → logprob: -16.75863265991211
    6. '   ' → logprob: -17.00863265991211
    7. '```' → logprob: -17.38363265991211
    8. 'self' → logprob: -18.38363265991211
    9. 'bcc' → logprob: -18.38363265991211
    10. '	' → logprob: -18.63363265991211

Token 343: '.close' (ID: 8183)
  Prédit: '.close'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.close' → logprob: -0.0008365504327230155
    2. '.' → logprob: -7.250836372375488
    3. '.open' → logprob: -9.250836372375488
    4. ' .' → logprob: -10.500836372375488
    5. 'close' → logprob: -14.125836372375488
    6. '._' → logprob: -14.125836372375488
    7. '_close' → logprob: -14.250836372375488
    8. '.closed' → logprob: -15.750836372375488
    9. '.copy' → logprob: -16.375837326049805
    10. '   ' → logprob: -16.500837326049805

Token 344: '_round' (ID: 79298)
  Prédit: '_round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_round' → logprob: -6.034592388459714e-06
    2. '_' → logprob: -12.250005722045898
    3. ' _' → logprob: -13.750005722045898
    4. 'round' → logprob: -17.0000057220459
    5. '```' → logprob: -18.1250057220459
    6. '_roll' → logprob: -18.3750057220459
    7. ')_' → logprob: -18.5000057220459
    8. '_ring' → logprob: -18.7500057220459
    9. '_range' → logprob: -18.7500057220459
    10. '_r' → logprob: -18.7500057220459

Token 345: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132791221141815
    2. '=' → logprob: -1.313279151916504
    3. '<|end|>' → logprob: -11.188279151916504
    4. ' ' → logprob: -13.063279151916504
    5. '   ' → logprob: -14.938279151916504
    6. ' =
' → logprob: -15.313279151916504
    7. '=
' → logprob: -15.563279151916504
    8. '       ' → logprob: -15.813279151916504
    9. '<|end|>' → logprob: -15.813279151916504
    10. ')' → logprob: -16.063278198242188

Token 346: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889242470264435
    2. ' self' → logprob: -2.578892469406128
    3. '(self' → logprob: -14.203892707824707
    4. ' ' → logprob: -14.328892707824707
    5. '	self' → logprob: -14.453892707824707
    6. '[self' → logprob: -15.578892707824707
    7. '=self' → logprob: -16.20389175415039
    8. '       ' → logprob: -16.20389175415039
    9. '   ' → logprob: -16.45389175415039
    10. '_self' → logprob: -16.57889175415039

Token 347: '.close' (ID: 8183)
  Prédit: '.close'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.close' → logprob: -0.04859418421983719
    2. 'close' → logprob: -3.0485942363739014
    3. ' close' → logprob: -12.79859447479248
    4. '_close' → logprob: -12.79859447479248
    5. '.open' → logprob: -14.67359447479248
    6. '.' → logprob: -14.79859447479248
    7. '	close' → logprob: -15.54859447479248
    8. ' .' → logprob: -15.79859447479248
    9. 'open' → logprob: -17.048593521118164
    10. '   ' → logprob: -17.173593521118164

Token 348: '_round' (ID: 79298)
  Prédit: '_round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_round' → logprob: -0.00022320532298181206
    2. 'round' → logprob: -8.500223159790039
    3. '.round' → logprob: -11.625223159790039
    4. 'Round' → logprob: -12.625223159790039
    5. 'close' → logprob: -12.750223159790039
    6. '_close' → logprob: -12.875223159790039
    7. '_' → logprob: -14.125223159790039
    8. '.close' → logprob: -14.375223159790039
    9. '_count' → logprob: -15.375223159790039
    10. '_counter' → logprob: -15.500223159790039

Token 349: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007949740393087268
    2. 'bc' → logprob: -7.375794887542725
    3. '
' → logprob: -8.875795364379883
    4. ' bc' → logprob: -10.875795364379883
    5. '	' → logprob: -13.000795364379883
    6. '   ' → logprob: -13.000795364379883
    7. '<|end|>' → logprob: -13.250795364379883
    8. '```' → logprob: -13.625795364379883
    9. ',' → logprob: -14.625795364379883
    10. ' ' → logprob: -15.125795364379883

Token 350: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002865854650735855
    2. 'bc' → logprob: -5.877865791320801
    3. ' bc' → logprob: -10.1278657913208
    4. '
' → logprob: -11.2528657913208
    5. '```' → logprob: -13.0028657913208
    6. '   ' → logprob: -13.1278657913208
    7. '           ' → logprob: -14.2528657913208
    8. 'b' → logprob: -14.2528657913208
    9. '	' → logprob: -15.2528657913208
    10. 'import' → logprob: -15.5028657913208

Token 351: ' bc' (ID: 51743)
  Prédit: 'bc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' (adapté à ' bc') → logprob: -2.816093228830141e-06
    2. ' bc' → logprob: -13.00000286102295
    3. '       ' → logprob: -14.50000286102295
    4. '   ' → logprob: -19.500001907348633
    5. '```' → logprob: -20.625001907348633
    6. '_bc' → logprob: -20.875001907348633
    7. 'bcc' → logprob: -21.375001907348633
    8. 'bb' → logprob: -22.750001907348633
    9. 'b' → logprob: -22.875001907348633
    10. 'bt' → logprob: -23.000001907348633

Token 352: '.open' (ID: 9702)
  Prédit: '.open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.open' → logprob: -4.513339445111342e-05
    2. '.' → logprob: -10.625044822692871
    3. '.close' → logprob: -11.250044822692871
    4. 'open' → logprob: -11.875044822692871
    5. ' .' → logprob: -14.625044822692871
    6. '=open' → logprob: -15.125044822692871
    7. '.openapi' → logprob: -17.125045776367188
    8. '	open' → logprob: -18.000045776367188
    9. '.closed' → logprob: -18.375045776367188
    10. '._' → logprob: -19.125045776367188

Token 353: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -7.896309739408025e-07
    2. '_square' → logprob: -14.250000953674316
    3. '_round' → logprob: -16.875
    4. 'cur' → logprob: -17.125
    5. '_curve' → logprob: -17.375
    6. '_' → logprob: -17.375
    7. '_c' → logprob: -18.25
    8. '_curr' → logprob: -18.5
    9. '[cur' → logprob: -20.125
    10. ' _' → logprob: -20.25

Token 354: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -1.0445127372804563e-05
    2. ' curly' → logprob: -11.87501049041748
    3. 'cur' → logprob: -14.25001049041748
    4. 'y' → logprob: -14.75001049041748
    5. 'oly' → logprob: -14.87501049041748
    6. '   ' → logprob: -15.25001049041748
    7. 'ky' → logprob: -15.75001049041748
    8. 'l' → logprob: -15.87501049041748
    9. '_cur' → logprob: -16.000009536743164
    10. '  ' → logprob: -16.000009536743164

Token 355: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407761216163635
    2. ' =' → logprob: -0.974077582359314
    3. '   ' → logprob: -15.599077224731445
    4. '=
' → logprob: -15.849077224731445
    5. '<|end|>' → logprob: -15.974077224731445
    6. ' ' → logprob: -16.474077224731445
    7. '=self' → logprob: -16.724077224731445
    8. '       ' → logprob: -16.974077224731445
    9. ')' → logprob: -17.224077224731445
    10. ' =
' → logprob: -17.474077224731445

Token 356: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03365630656480789
    2. ' self' → logprob: -3.408656358718872
    3. '(self' → logprob: -12.783656120300293
    4. '=self' → logprob: -12.908656120300293
    5. '<|end|>' → logprob: -13.283656120300293
    6. '[self' → logprob: -14.158656120300293
    7. '	self' → logprob: -14.158656120300293
    8. '       ' → logprob: -14.283656120300293
    9. ' ' → logprob: -14.408656120300293
    10. '_self' → logprob: -15.783656120300293

Token 357: '.open' (ID: 9702)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.6973522305488586
    2. '.open' → logprob: -0.6973522305488586
    3. '.cur' → logprob: -6.197352409362793
    4. 'cur' → logprob: -7.072352409362793
    5. '.close' → logprob: -7.197352409362793
    6. '_cur' → logprob: -7.947352409362793
    7. '_open' → logprob: -9.322352409362793
    8. 'close' → logprob: -9.822352409362793
    9. '.' → logprob: -11.197352409362793
    10. '=open' → logprob: -11.197352409362793

Token 358: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.018151935189962387
    2. 'cur' → logprob: -4.018151760101318
    3. '.cur' → logprob: -13.893152236938477
    4. '[cur' → logprob: -14.768152236938477
    5. '	cur' → logprob: -15.768152236938477
    6. '_c' → logprob: -16.268152236938477
    7. '(cur' → logprob: -16.393152236938477
    8. '-cur' → logprob: -16.518152236938477
    9. 'self' → logprob: -16.768152236938477
    10. '{' → logprob: -16.893152236938477

Token 359: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -1.0280383548888494e-06
    2. '   ' → logprob: -15.500000953674316
    3. '               ' → logprob: -15.625000953674316
    4. '```' → logprob: -15.625000953674316
    5. '           ' → logprob: -16.625001907348633
    6. '       ' → logprob: -16.875001907348633
    7. '        ' → logprob: -16.875001907348633
    8. 'lyg' → logprob: -17.375001907348633
    9. '  ' → logprob: -17.500001907348633
    10. 'l' → logprob: -17.625001907348633

Token 360: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08464999496936798
    2. '
' → logprob: -2.8346500396728516
    3. '<|end|>' → logprob: -3.8346500396728516
    4. '=' → logprob: -8.334650039672852
    5. '        
' → logprob: -8.334650039672852
    6. '<|end|>' → logprob: -9.834650039672852
    7. '        ' → logprob: -9.959650039672852
    8. '\' → logprob: -10.084650039672852
    9. '```' → logprob: -10.584650039672852
    10. ' 
' → logprob: -10.834650039672852

Token 361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002702758414670825
    2. '
' → logprob: -6.252702713012695
    3. 'bc' → logprob: -7.752702713012695
    4. '<|end|>' → logprob: -8.502702713012695
    5. 'self' → logprob: -10.252702713012695
    6. '	' → logprob: -10.252702713012695
    7. 'b' → logprob: -11.127702713012695
    8. '        
' → logprob: -11.252702713012695
    9. '```' → logprob: -12.127702713012695
    10. '\' → logprob: -12.252702713012695

Token 362: ' bc' (ID: 51743)
  Prédit: 'bc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' (adapté à ' bc') → logprob: -0.03414974361658096
    2. ' bc' → logprob: -3.784149646759033
    3. 'self' → logprob: -4.659149646759033
    4. '       ' → logprob: -6.909149646759033
    5. ' self' → logprob: -7.909149646759033
    6. '_bc' → logprob: -13.534150123596191
    7. '```' → logprob: -14.534150123596191
    8. '   ' → logprob: -14.659150123596191
    9. 'b' → logprob: -14.659150123596191
    10. '        ' → logprob: -15.284150123596191

Token 363: '.close' (ID: 8183)
  Prédit: '.close'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.close' → logprob: -0.011075297370553017
    2. '.open' → logprob: -4.511075496673584
    3. ' .' → logprob: -11.136075019836426
    4. '.' → logprob: -11.636075019836426
    5. 'close' → logprob: -13.386075019836426
    6. '._' → logprob: -14.386075019836426
    7. '.closed' → logprob: -14.386075019836426
    8. 'open' → logprob: -14.636075019836426
    9. '=open' → logprob: -15.011075019836426
    10. '_close' → logprob: -15.886075019836426

Token 364: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.000000953674316
    3. '_c' → logprob: -16.25
    4. '_curr' → logprob: -16.375
    5. ' _' → logprob: -17.125
    6. '_close' → logprob: -17.25
    7. 'cur' → logprob: -17.625
    8. ')_' → logprob: -18.125
    9. '_round' → logprob: -18.5
    10. '_square' → logprob: -18.5

Token 365: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -3.128163257315464e-07
    2. 'l' → logprob: -16.375
    3. 'y' → logprob: -16.75
    4. '```' → logprob: -17.125
    5. '1' → logprob: -17.75
    6. '=' → logprob: -17.75
    7. '  ' → logprob: -17.875
    8. '}' → logprob: -17.875
    9. '_cur' → logprob: -18.25
    10. '
' → logprob: -18.375

Token 366: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269284337759018
    2. ' =' → logprob: -2.1269283294677734
    3. '=self' → logprob: -14.876928329467773
    4. ' ' → logprob: -17.376928329467773
    5. '=
' → logprob: -17.626928329467773
    6. '<|end|>' → logprob: -17.751928329467773
    7. 'self' → logprob: -17.876928329467773
    8. '   ' → logprob: -19.126928329467773
    9. ')' → logprob: -19.376928329467773
    10. '==' → logprob: -19.751928329467773

Token 367: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005235767923295498
    2. ' self' → logprob: -5.25523567199707
    3. '(self' → logprob: -14.38023567199707
    4. '	self' → logprob: -14.75523567199707
    5. '<|end|>' → logprob: -15.50523567199707
    6. ' ' → logprob: -15.63023567199707
    7. '[self' → logprob: -15.63023567199707
    8. '=self' → logprob: -15.88023567199707
    9. '0' → logprob: -16.00523567199707
    10. '_self' → logprob: -16.50523567199707

Token 368: '.close' (ID: 8183)
  Prédit: '.close'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.close' → logprob: -0.015872351825237274
    2. '.open' → logprob: -4.765872478485107
    3. 'close' → logprob: -5.015872478485107
    4. '_close' → logprob: -8.14087200164795
    5. 'open' → logprob: -8.14087200164795
    6. '_open' → logprob: -12.14087200164795
    7. ' close' → logprob: -13.01587200164795
    8. '.' → logprob: -13.26587200164795
    9. '   ' → logprob: -13.89087200164795
    10. '.closed' → logprob: -14.01587200164795

Token 369: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.0005823421524837613
    2. 'cur' → logprob: -7.500582218170166
    3. '.cur' → logprob: -10.500582695007324
    4. '_round' → logprob: -14.750582695007324
    5. 'Cur' → logprob: -15.000582695007324
    6. '_square' → logprob: -15.125582695007324
    7. '[cur' → logprob: -15.375582695007324
    8. '_c' → logprob: -15.875582695007324
    9. '-cur' → logprob: -15.875582695007324
    10. '_close' → logprob: -16.000581741333008

Token 370: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -1.9361264946837764e-07
    2. 'l' → logprob: -17.125
    3. '}' → logprob: -18.0
    4. '   ' → logprob: -18.5
    5. '        ' → logprob: -18.75
    6. '               ' → logprob: -19.125
    7. '```' → logprob: -19.375
    8. '  ' → logprob: -19.75
    9. '       ' → logprob: -19.75
    10. 'y' → logprob: -19.75

Token 371: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016444765496999025
    2. 'bc' → logprob: -6.501644611358643
    3. '
' → logprob: -9.126644134521484
    4. ' bc' → logprob: -10.501644134521484
    5. '   ' → logprob: -12.626644134521484
    6. '```' → logprob: -14.501644134521484
    7. 'vc' → logprob: -15.251644134521484
    8. 'b' → logprob: -15.251644134521484
    9. ' ' → logprob: -15.501644134521484
    10. '	' → logprob: -15.501644134521484

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010543649550527334
    2. 'bc' → logprob: -6.876054286956787
    3. ' bc' → logprob: -10.876054763793945
    4. '
' → logprob: -13.751054763793945
    5. '```' → logprob: -14.251054763793945
    6. '   ' → logprob: -14.501054763793945
    7. '           ' → logprob: -16.126054763793945
    8. ' ' → logprob: -16.626054763793945
    9. '      ' → logprob: -16.626054763793945
    10. '	' → logprob: -17.001054763793945

Token 373: ' bc' (ID: 51743)
  Prédit: 'bc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' (adapté à ' bc') → logprob: -9.65101717156358e-05
    2. ' bc' → logprob: -9.500096321105957
    3. '       ' → logprob: -10.750096321105957
    4. '   ' → logprob: -15.875096321105957
    5. '_bc' → logprob: -18.625097274780273
    6. 'bcc' → logprob: -19.000097274780273
    7. ' ' → logprob: -19.250097274780273
    8. '```' → logprob: -19.375097274780273
    9. 'bt' → logprob: -20.375097274780273
    10. 'br' → logprob: -20.625097274780273

Token 374: '.open' (ID: 9702)
  Prédit: '.open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.open' → logprob: -6.12258882028982e-05
    2. '.' → logprob: -9.75006103515625
    3. 'open' → logprob: -14.00006103515625
    4. '=open' → logprob: -14.00006103515625
    5. '.close' → logprob: -14.37506103515625
    6. '.openapi' → logprob: -15.00006103515625
    7. ' .' → logprob: -15.12506103515625
    8. '	open' → logprob: -17.50006103515625
    9. '.user' → logprob: -18.37506103515625
    10. '.closed' → logprob: -18.50006103515625

Token 375: '_square' (ID: 99463)
  Prédit: '_square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_square' → logprob: -3.380904672667384e-05
    2. '_' → logprob: -10.750033378601074
    3. '_s' → logprob: -12.375033378601074
    4. '_cur' → logprob: -12.500033378601074
    5. '_squared' → logprob: -13.125033378601074
    6. '_cube' → logprob: -14.250033378601074
    7. '_open' → logprob: -14.625033378601074
    8. '_floor' → logprob: -15.250033378601074
    9. '_sq' → logprob: -15.625033378601074
    10. '_round' → logprob: -15.875033378601074

Token 376: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759395360946655
    2. ' =' → logprob: -0.8259395360946655
    3. ' ' → logprob: -16.325939178466797
    4. '   ' → logprob: -17.325939178466797
    5. '=self' → logprob: -17.575939178466797
    6. ')' → logprob: -18.200939178466797
    7. '       ' → logprob: -19.450939178466797
    8. '<|end|>' → logprob: -19.700939178466797
    9. '=
' → logprob: -19.950939178466797
    10. ',' → logprob: -19.950939178466797

Token 377: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014163863845169544
    2. ' self' → logprob: -4.264163970947266
    3. '	self' → logprob: -16.014163970947266
    4. '       ' → logprob: -16.139163970947266
    5. '(self' → logprob: -16.639163970947266
    6. ' ' → logprob: -17.014163970947266
    7. '   ' → logprob: -17.264163970947266
    8. '=self' → logprob: -17.764163970947266
    9. '[self' → logprob: -17.764163970947266
    10. '_self' → logprob: -18.764163970947266

Token 378: '.open' (ID: 9702)
  Prédit: '.open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.open' → logprob: -0.0051644970662891865
    2. '_square' → logprob: -6.005164623260498
    3. 'open' → logprob: -6.380164623260498
    4. '.square' → logprob: -7.255164623260498
    5. '_open' → logprob: -9.38016414642334
    6. '.' → logprob: -9.38016414642334
    7. '.close' → logprob: -9.50516414642334
    8. 'Square' → logprob: -11.75516414642334
    9. 'self' → logprob: -11.88016414642334
    10. ' .' → logprob: -12.63016414642334

Token 379: '_square' (ID: 99463)
  Prédit: '_square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_square' → logprob: -4.246537173457909e-06
    2. '_s' → logprob: -13.125003814697266
    3. 'square' → logprob: -13.875003814697266
    4. '_' → logprob: -15.125003814697266
    5. '_squared' → logprob: -15.125003814697266
    6. '_count' → logprob: -15.250003814697266
    7. '_counter' → logprob: -15.625003814697266
    8. '_stack' → logprob: -16.500003814697266
    9. 's' → logprob: -16.875003814697266
    10. '_round' → logprob: -17.250003814697266

Token 380: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006196234375238419
    2. '
' → logprob: -5.631196022033691
    3. '=' → logprob: -6.506196022033691
    4. 'self' → logprob: -7.881196022033691
    5. '<|end|>' → logprob: -7.881196022033691
    6. ' =' → logprob: -8.756196022033691
    7. '	' → logprob: -10.381196022033691
    8. '        ' → logprob: -10.756196022033691
    9. ' 
' → logprob: -10.756196022033691
    10. ',' → logprob: -10.756196022033691

Token 381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00558211375027895
    2. 'self' → logprob: -5.630582332611084
    3. 'bc' → logprob: -6.380582332611084
    4. ' bc' → logprob: -8.630581855773926
    5. ' self' → logprob: -9.755581855773926
    6. 'b' → logprob: -11.005581855773926
    7. '
' → logprob: -11.130581855773926
    8. '```' → logprob: -13.005581855773926
    9. '=' → logprob: -13.130581855773926
    10. '	' → logprob: -13.255581855773926

Token 382: ' bc' (ID: 51743)
  Prédit: 'bc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' (adapté à ' bc') → logprob: -4.930552313453518e-05
    2. 'self' → logprob: -10.500049591064453
    3. ' bc' → logprob: -10.750049591064453
    4. '       ' → logprob: -15.125049591064453
    5. 'b' → logprob: -16.750049591064453
    6. '   ' → logprob: -19.125049591064453
    7. '_bc' → logprob: -19.125049591064453
    8. 'bcc' → logprob: -20.000049591064453
    9. ' self' → logprob: -20.250049591064453
    10. '```' → logprob: -20.750049591064453

Token 383: '.close' (ID: 8183)
  Prédit: '.close'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.close' → logprob: -0.000968156848102808
    2. '.' → logprob: -7.000967979431152
    3. '.open' → logprob: -9.875967979431152
    4. ' .' → logprob: -13.125967979431152
    5. '._' → logprob: -13.625967979431152
    6. '.closed' → logprob: -14.125967979431152
    7. 'close' → logprob: -14.625967979431152
    8. '_close' → logprob: -14.875967979431152
    9. '.Close' → logprob: -15.375967979431152
    10. '.raise' → logprob: -16.25096893310547

Token 384: '_square' (ID: 99463)
  Prédit: '_square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_square' → logprob: -6.869017852295656e-06
    2. '_' → logprob: -12.250006675720215
    3. '_squared' → logprob: -14.375006675720215
    4. '_s' → logprob: -14.375006675720215
    5. '_cube' → logprob: -15.875006675720215
    6. ')_' → logprob: -16.12500762939453
    7. '_round' → logprob: -16.12500762939453
    8. '_sq' → logprob: -16.25000762939453
    9. '_space' → logprob: -16.37500762939453
    10. ' _' → logprob: -17.25000762939453

Token 385: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014133334159851
    2. ' =' → logprob: -1.7014133930206299
    3. '<|end|>' → logprob: -17.326414108276367
    4. ' ' → logprob: -18.076414108276367
    5. '.=' → logprob: -18.201414108276367
    6. '=
' → logprob: -18.451414108276367
    7. ')' → logprob: -18.451414108276367
    8. ' +=' → logprob: -18.451414108276367
    9. '+=' → logprob: -19.326414108276367
    10. '=self' → logprob: -19.576414108276367

Token 386: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01416398212313652
    2. ' self' → logprob: -4.264163970947266
    3. '	self' → logprob: -15.764163970947266
    4. ' ' → logprob: -16.014163970947266
    5. '(self' → logprob: -16.139163970947266
    6. ' ' → logprob: -16.889163970947266
    7. '       ' → logprob: -17.264163970947266
    8. '   ' → logprob: -17.389163970947266
    9. '=self' → logprob: -17.514163970947266
    10. '[self' → logprob: -17.889163970947266

Token 387: '.close' (ID: 8183)
  Prédit: '_square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_square' → logprob: -0.030628245323896408
    2. '.close' → logprob: -3.655628204345703
    3. 'close' → logprob: -6.030628204345703
    4. '.square' → logprob: -6.530628204345703
    5. 'square' → logprob: -9.030628204345703
    6. '_close' → logprob: -9.030628204345703
    7. 'Square' → logprob: -9.030628204345703
    8. '.' → logprob: -10.030628204345703
    9. '.open' → logprob: -10.905628204345703
    10. '_s' → logprob: -11.530628204345703

Token 388: '_square' (ID: 99463)
  Prédit: '_square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_square' → logprob: -4.60414821645827e-06
    2. 'square' → logprob: -13.125004768371582
    3. '_' → logprob: -13.875004768371582
    4. '_s' → logprob: -14.500004768371582
    5. '_squared' → logprob: -14.500004768371582
    6. '_round' → logprob: -14.500004768371582
    7. '_sq' → logprob: -17.125003814697266
    8. 'Square' → logprob: -17.250003814697266
    9. '_space' → logprob: -18.125003814697266
    10. '_line' → logprob: -18.875003814697266

Token 389: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000239536224398762
    2. 'return' → logprob: -8.625239372253418
    3. '	' → logprob: -10.750239372253418
    4. '
' → logprob: -11.125239372253418
    5. ' return' → logprob: -11.250239372253418
    6. '	return' → logprob: -12.000239372253418
    7. '<|end|>' → logprob: -12.875239372253418
    8. '   ' → logprob: -14.750239372253418
    9. '        
' → logprob: -15.375239372253418
    10. ',' → logprob: -15.625239372253418

Token 390: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007553085451945662
    2. 'return' → logprob: -7.375755310058594
    3. '	' → logprob: -9.750755310058594
    4. ' return' → logprob: -10.625755310058594
    5. '	return' → logprob: -10.625755310058594
    6. '<|end|>' → logprob: -11.250755310058594
    7. '   ' → logprob: -13.375755310058594
    8. ')' → logprob: -13.375755310058594
    9. '```' → logprob: -13.625755310058594
    10. '<|end|>' → logprob: -14.000755310058594

Token 391: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1336454451084137
    2. 'return' (adapté à ' return') → logprob: -2.133645534515381
    3. ' return' → logprob: -5.008645534515381
    4. '	return' → logprob: -11.508645057678223
    5. 'eturn' → logprob: -13.758645057678223
    6. '   ' → logprob: -14.258645057678223
    7. ')return' → logprob: -14.383645057678223
    8. '<|end|>' → logprob: -14.383645057678223
    9. '
' → logprob: -14.633645057678223
    10. ':return' → logprob: -15.133645057678223

Token 392: ' bc' (ID: 51743)
  Prédit: 'bc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' → logprob: -0.00861456897109747
    2. ' bc' → logprob: -4.758614540100098
    3. '_bc' → logprob: -20.258615493774414
    4. 'b' → logprob: -20.633615493774414
    5. 'BC' → logprob: -23.383615493774414
    6. '.bc' → logprob: -23.383615493774414
    7. ' ' → logprob: -23.758615493774414
    8. 'br' → logprob: -24.508615493774414
    9. 'bcc' → logprob: -24.883615493774414
    10. 'xbc' → logprob: -24.883615493774414

Token 393: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010006568394601345
    2. '<|end|>' → logprob: -5.385006427764893
    3. 'class' → logprob: -5.510006427764893
    4. '

' → logprob: -7.010006427764893
    5. 'def' → logprob: -8.26000690460205
    6. '<|end|>' → logprob: -9.26000690460205
    7. '   ' → logprob: -11.01000690460205
    8. '```' → logprob: -11.38500690460205
    9. '    
' → logprob: -11.51000690460205
    10. '
' → logprob: -11.76000690460205

Token 394: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.1657593697309494
    2. 'def' → logprob: -2.040759325027466
    3. '
' → logprob: -3.790759325027466
    4. '

' → logprob: -9.790759086608887
    5. 'from' → logprob: -9.915759086608887
    6. '#' → logprob: -10.540759086608887
    7. '```' → logprob: -10.665759086608887
    8. ' class' → logprob: -11.165759086608887
    9. 'import' → logprob: -11.665759086608887
    10. '    
' → logprob: -12.040759086608887

Token 395: ' Stylish' (ID: 144990)
  Prédit: 'Indent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Indent' → logprob: -0.04330894351005554
    2. ' Ind' → logprob: -3.668308973312378
    3. 'Solution' → logprob: -4.793308734893799
    4. 'Code' → logprob: -6.418308734893799
    5. ' Solution' → logprob: -6.418308734893799
    6. 'Style' → logprob: -6.918308734893799
    7. 'Line' → logprob: -7.043308734893799
    8. ' Code' → logprob: -7.668308734893799
    9. 'Indented' → logprob: -8.168309211730957
    10. 'Ind' → logprob: -8.418309211730957

Token 396: 'Program' (ID: 13587)
  Prédit: 'Indent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Indent' → logprob: -0.1758074313402176
    2. 'Coder' → logprob: -2.425807476043701
    3. 'Writer' → logprob: -4.050807476043701
    4. 'Printer' → logprob: -4.300807476043701
    5. ':' → logprob: -4.675807476043701
    6. 'Program' → logprob: -5.175807476043701
    7. 'Solver' → logprob: -5.175807476043701
    8. 'Reader' → logprob: -5.550807476043701
    9. 'Painter' → logprob: -5.675807476043701
    10. 'Python' → logprob: -5.675807476043701

Token 397: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22552688419818878
    2. ':
' → logprob: -1.6005269289016724
    3. '(object' → logprob: -9.975526809692383
    4. ' :' → logprob: -10.850526809692383
    5. '(' → logprob: -11.350526809692383
    6. '   ' → logprob: -11.725526809692383
    7. ':

' → logprob: -11.850526809692383
    8. '(list' → logprob: -12.350526809692383
    9. 'def' → logprob: -12.600526809692383
    10. ':def' → logprob: -12.600526809692383

Token 398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049716491252183914
    2. ' def' → logprob: -3.0497164726257324
    3. 'def' → logprob: -6.799716472625732
    4. '```' → logprob: -11.67471694946289
    5. '   ' → logprob: -12.92471694946289
    6. 'class' → logprob: -13.29971694946289
    7. '	def' → logprob: -14.04971694946289
    8. ' class' → logprob: -14.54971694946289
    9. '   ' → logprob: -16.42471694946289
    10. '    
' → logprob: -17.04971694946289

Token 399: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.062048349529504776
    2. ' def' → logprob: -2.8120484352111816
    3. '   ' → logprob: -9.437047958374023
    4. '	def' → logprob: -14.937047958374023
    5. '```' → logprob: -15.312047958374023
    6. 'class' → logprob: -15.437047958374023
    7. ' ' → logprob: -16.687047958374023
    8. ':def' → logprob: -17.312047958374023
    9. 'import' → logprob: -18.062047958374023
    10. 'de' → logprob: -18.312047958374023

Token 400: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.013866934925317764
    2. '__' → logprob: -4.638866901397705
    3. '_init' → logprob: -6.013866901397705
    4. ' __' → logprob: -7.138866901397705
    5. 'def' → logprob: -7.138866901397705
    6. ' init' → logprob: -10.513867378234863
    7. '___' → logprob: -11.013867378234863
    8. ' def' → logprob: -11.513867378234863
    9. '```' → logprob: -11.763867378234863
    10. 'int' → logprob: -12.513867378234863

Token 401: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -16.375
    3. ' init' → logprob: -17.375
    4. 'def' → logprob: -17.875
    5. '```' → logprob: -18.25
    6. 'ini' → logprob: -19.75
    7. '
' → logprob: -20.25
    8. '_init' → logprob: -20.625
    9. '	init' → logprob: -20.625
    10. 'in' → logprob: -20.75

Token 402: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.38709965348243713
    2. '(self' → logprob: -1.1370996236801147
    3. ' (' → logprob: -9.012099266052246
    4. '_(' → logprob: -10.012099266052246
    5. '(' → logprob: -11.137099266052246
    6. 'self' → logprob: -11.262099266052246
    7. '__(
' → logprob: -11.387099266052246
    8. '__' → logprob: -12.012099266052246
    9. ')(' → logprob: -12.262099266052246
    10. '```' → logprob: -12.887099266052246

Token 403: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00012594614236149937
    2. '):
' → logprob: -9.750125885009766
    3. ')' → logprob: -9.875125885009766
    4. ' self' → logprob: -11.500125885009766
    5. '
' → logprob: -12.250125885009766
    6. '):' → logprob: -15.375125885009766
    7. ',' → logprob: -15.625125885009766
    8. '):

' → logprob: -15.750125885009766
    9. '0' → logprob: -15.875125885009766
    10. ')
' → logprob: -16.000125885009766

Token 404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2131086140871048
    2. 'self' → logprob: -1.8381086587905884
    3. '):
' → logprob: -3.588108539581299
    4. '):' → logprob: -5.588108539581299
    5. ' self' → logprob: -7.338108539581299
    6. '
' → logprob: -8.838109016418457
    7. '   ' → logprob: -8.838109016418457
    8. '       ' → logprob: -8.963109016418457
    9. ' ,' → logprob: -8.963109016418457
    10. '(self' → logprob: -9.713109016418457

Token 405: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.5780810117721558
    2. 'self' → logprob: -1.3280810117721558
    3. ' lines' → logprob: -2.0780811309814453
    4. ' self' → logprob: -5.203081130981445
    5. 'program' → logprob: -5.203081130981445
    6. 'indent' → logprob: -5.203081130981445
    7. 'code' → logprob: -5.328081130981445
    8. ')' → logprob: -5.453081130981445
    9. 'source' → logprob: -5.578081130981445
    10. '):
' → logprob: -5.828081130981445

Token 406: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18891523778438568
    2. '):
' → logprob: -2.188915252685547
    3. ':' → logprob: -2.813915252685547
    4. '):
' → logprob: -10.063915252685547
    5. ')' → logprob: -10.188915252685547
    6. ',' → logprob: -11.438915252685547
    7. ' ):' → logprob: -11.563915252685547
    8. '=None' → logprob: -11.563915252685547
    9. '=' → logprob: -11.688915252685547
    10. ':list' → logprob: -11.813915252685547

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003819332632701844
    2. 'self' → logprob: -8.000381469726562
    3. ' self' → logprob: -10.000381469726562
    4. '   ' → logprob: -14.250381469726562
    5. '(self' → logprob: -15.750381469726562
    6. '	self' → logprob: -15.875381469726562
    7. ',' → logprob: -16.750381469726562
    8. '	' → logprob: -17.750381469726562
    9. ' lines' → logprob: -17.750381469726562
    10. '           ' → logprob: -18.250381469726562

Token 408: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0025338062550872564
    2. ' self' → logprob: -6.002533912658691
    3. '       ' → logprob: -9.752533912658691
    4. '   ' → logprob: -17.002532958984375
    5. '	self' → logprob: -18.377532958984375
    6. ' ' → logprob: -19.252532958984375
    7. '(self' → logprob: -20.252532958984375
    8. '[self' → logprob: -20.252532958984375
    9. '        ' → logprob: -21.752532958984375
    10. 'import' → logprob: -21.877532958984375

Token 409: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.39275261759757996
    2. '.' → logprob: -1.1427526473999023
    3. ' .' → logprob: -5.142752647399902
    4. '	lines' → logprob: -12.392752647399902
    5. 'lines' → logprob: -12.517752647399902
    6. '.l' → logprob: -13.142752647399902
    7. ' lines' → logprob: -13.517752647399902
    8. '.original' → logprob: -13.767752647399902
    9. '.line' → logprob: -13.892752647399902
    10. '   ' → logprob: -14.017752647399902

Token 410: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020904988050461
    2. ' =' → logprob: -2.3502089977264404
    3. '   ' → logprob: -13.97520923614502
    4. ')' → logprob: -14.22520923614502
    5. ' ' → logprob: -14.60020923614502
    6. '=[]' → logprob: -15.47520923614502
    7. '.append' → logprob: -15.97520923614502
    8. '=line' → logprob: -16.225208282470703
    9. '_lines' → logprob: -17.725208282470703
    10. ',' → logprob: -18.100208282470703

Token 411: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.008620604872703552
    2. ' lines' → logprob: -4.758620738983154
    3. '[' → logprob: -12.508620262145996
    4. 'list' → logprob: -13.883620262145996
    5. '	lines' → logprob: -14.508620262145996
    6. '(lines' → logprob: -15.133620262145996
    7. ' [' → logprob: -15.258620262145996
    8. '[]' → logprob: -15.508620262145996
    9. 'line' → logprob: -16.383621215820312
    10. '.lines' → logprob: -17.508621215820312

Token 412: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42987120151519775
    2. '<|end|>' → logprob: -1.1798712015151978
    3. '       ' → logprob: -3.179871082305908
    4. '<|end|>' → logprob: -7.929871082305908
    5. '   ' → logprob: -9.679871559143066
    6. '        
' → logprob: -10.804871559143066
    7. '    
' → logprob: -11.929871559143066
    8. '```' → logprob: -11.929871559143066
    9. '  
' → logprob: -12.304871559143066
    10. '

' → logprob: -12.554871559143066

Token 413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004294215235859156
    2. '
' → logprob: -5.754294395446777
    3. 'self' → logprob: -7.129294395446777
    4. '<|end|>' → logprob: -9.004294395446777
    5. ' self' → logprob: -9.379294395446777
    6. 'def' → logprob: -9.504294395446777
    7. '   ' → logprob: -11.254294395446777
    8. ',' → logprob: -12.504294395446777
    9. '        
' → logprob: -12.754294395446777
    10. '	' → logprob: -12.754294395446777

Token 414: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.197016179561615
    2. ' self' → logprob: -1.9470162391662598
    3. '       ' → logprob: -3.3220162391662598
    4. 'from' → logprob: -10.572015762329102
    5. 'import' → logprob: -12.947015762329102
    6. '0' → logprob: -13.197015762329102
    7. '	self' → logprob: -13.322015762329102
    8. '           ' → logprob: -13.322015762329102
    9. 'def' → logprob: -13.447015762329102
    10. '   ' → logprob: -13.572015762329102

Token 415: '.ind' (ID: 51969)
  Prédit: '.br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.br' → logprob: -0.7843604683876038
    2. '.' → logprob: -1.284360408782959
    3. '.prefix' → logprob: -1.909360408782959
    4. '.ind' → logprob: -2.659360408782959
    5. '.b' → logprob: -4.534360408782959
    6. '.counter' → logprob: -4.659360408782959
    7. ' .' → logprob: -4.784360408782959
    8. '._' → logprob: -5.159360408782959
    9. '.count' → logprob: -5.284360408782959
    10. '.styles' → logprob: -6.659360408782959

Token 416: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.8915590643882751
    2. 'entation' → logprob: -1.01655912399292
    3. 'ents' → logprob: -1.51655912399292
    4. 'ex' → logprob: -5.76655912399292
    5. 'entions' → logprob: -6.01655912399292
    6. 'ented' → logprob: -6.01655912399292
    7. 'ention' → logprob: -8.641558647155762
    8. 'ices' → logprob: -10.204058647155762
    9. '=' → logprob: -10.329058647155762
    10. 'enta' → logprob: -10.391558647155762

Token 417: 'ations' (ID: 929)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10424524545669556
    2. 'ations' → logprob: -2.354245185852051
    3. 'ation' → logprob: -6.104245185852051
    4. '_levels' → logprob: -6.354245185852051
    5. '_counts' → logprob: -10.97924518585205
    6. '=' → logprob: -11.47924518585205
    7. '_stack' → logprob: -11.97924518585205
    8. ' =' → logprob: -12.10424518585205
    9. '_sizes' → logprob: -12.35424518585205
    10. 'levels' → logprob: -12.72924518585205

Token 418: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009084494784474373
    2. '=' → logprob: -4.759084701538086
    3. '   ' → logprob: -7.884084701538086
    4. 's' → logprob: -10.634084701538086
    5. ' ' → logprob: -10.759084701538086
    6. '_counts' → logprob: -11.134084701538086
    7. '_levels' → logprob: -11.134084701538086
    8. '=[]' → logprob: -11.884084701538086
    9. '       ' → logprob: -13.134084701538086
    10. '_lengths' → logprob: -13.509084701538086

Token 419: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.31424739956855774
    2. '[' → logprob: -1.3142473697662354
    3. '[]
' → logprob: -7.8142476081848145
    4. '[self' → logprob: -8.189247131347656
    5. ' []' → logprob: -8.939247131347656
    6. '[line' → logprob: -10.439247131347656
    7. '[len' → logprob: -10.564247131347656
    8. ' [' → logprob: -11.064247131347656
    9. '[
' → logprob: -11.189247131347656
    10. '[class' → logprob: -11.314247131347656

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030663851648569107
    2. 'for' → logprob: -4.405663967132568
    3. ' for' → logprob: -4.780663967132568
    4. '   ' → logprob: -4.780663967132568
    5. 'def' → logprob: -7.530663967132568
    6. '<|end|>' → logprob: -8.40566349029541
    7. ' ' → logprob: -8.53066349029541
    8. 'self' → logprob: -9.15566349029541
    9. ' self' → logprob: -10.03066349029541
    10. ',' → logprob: -10.65566349029541

Token 421: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.030358951538801193
    2. 'for' → logprob: -3.6553590297698975
    3. ' self' → logprob: -6.155358791351318
    4. '       ' → logprob: -6.530358791351318
    5. 'current' → logprob: -8.530359268188477
    6. ' for' → logprob: -9.030359268188477
    7. 'br' → logprob: -9.780359268188477
    8. '   ' → logprob: -10.405359268188477
    9. 'bc' → logprob: -10.655359268188477
    10. 'def' → logprob: -10.905359268188477

Token 422: '.br' (ID: 24828)
  Prédit: '.br'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.br' → logprob: -0.05024855583906174
    2. '.' → logprob: -3.675248622894287
    3. '.b' → logprob: -4.300248622894287
    4. ' .' → logprob: -5.175248622894287
    5. '.counter' → logprob: -6.175248622894287
    6. '.bc' → logprob: -7.050248622894287
    7. '.current' → logprob: -7.800248622894287
    8. '.prefix' → logprob: -7.925248622894287
    9. 'br' → logprob: -8.550248146057129
    10. '.previous' → logprob: -9.175248146057129

Token 423: 'acket' (ID: 8480)
  Prédit: 'acket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acket' → logprob: -0.00022558939235750586
    2. 'ack' → logprob: -8.750226020812988
    3. 'ackets' → logprob: -10.000226020812988
    4. 'count' → logprob: -11.875226020812988
    5. 'ucket' → logprob: -12.500226020812988
    6. '```' → logprob: -12.875226020812988
    7. '       ' → logprob: -13.125226020812988
    8. 'counter' → logprob: -13.875226020812988
    9. 'ACKET' → logprob: -13.875226020812988
    10. 'e' → logprob: -14.000226020812988

Token 424: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.1939030885696411
    2. '_counter' → logprob: -2.1939029693603516
    3. '_counts' → logprob: -2.8189029693603516
    4. 's' → logprob: -5.318902969360352
    5. 'Counters' → logprob: -9.193902969360352
    6. '_count' → logprob: -10.193902969360352
    7. '_states' → logprob: -11.193902969360352
    8. 'Counter' → logprob: -11.443902969360352
    9. '_' → logprob: -11.443902969360352
    10. 'counter' → logprob: -11.568902969360352

Token 425: 'ounters' (ID: 36761)
  Prédit: 'ounter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounter' → logprob: -0.0014196380507200956
    2. 'ount' → logprob: -7.251419544219971
    3. 'ounters' → logprob: -7.251419544219971
    4. 'oun' → logprob: -15.376420021057129
    5. 'om' → logprob: -17.251419067382812
    6. 'counter' → logprob: -17.751419067382812
    7. 'ol' → logprob: -18.126419067382812
    8. 'outer' → logprob: -18.126419067382812
    9. 'on' → logprob: -18.251419067382812
    10. 'onter' → logprob: -18.376419067382812

Token 426: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741135239601135
    2. '=' → logprob: -0.9741135239601135
    3. '=[]' → logprob: -10.349113464355469
    4. 's' → logprob: -12.724113464355469
    5. ' ' → logprob: -14.974113464355469
    6. ':' → logprob: -15.099113464355469
    7. '=[]
' → logprob: -15.349113464355469
    8. '   ' → logprob: -15.349113464355469
    9. '[]' → logprob: -15.474113464355469
    10. '=[' → logprob: -16.34911346435547

Token 427: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2524467408657074
    2. '[' → logprob: -1.5024467706680298
    3. '[]
' → logprob: -7.87744665145874
    4. ' []' → logprob: -9.252447128295898
    5. ' [' → logprob: -11.377447128295898
    6. '[self' → logprob: -12.002447128295898
    7. '[class' → logprob: -12.127447128295898
    8. '[]

' → logprob: -12.752447128295898
    9. '[array' → logprob: -13.252447128295898
    10. '[ind' → logprob: -13.752447128295898

Token 428: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13350996375083923
    2. '   ' → logprob: -2.258509874343872
    3. 'for' → logprob: -4.258510112762451
    4. ' for' → logprob: -5.508510112762451
    5. 'def' → logprob: -6.383510112762451
    6. '
' → logprob: -7.883510112762451
    7. ' def' → logprob: -9.133509635925293
    8. '<|end|>' → logprob: -10.508509635925293
    9. '```' → logprob: -10.883509635925293
    10. '        
' → logprob: -11.133509635925293

Token 429: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.805981972021982e-05
    2. ' def' → logprob: -9.25009822845459
    3. '   ' → logprob: -13.25009822845459
    4. 'for' → logprob: -15.87509822845459
    5. '
' → logprob: -19.000097274780273
    6. '	def' → logprob: -19.625097274780273
    7. ' ' → logprob: -20.000097274780273
    8. 'from' → logprob: -20.875097274780273
    9. '    
' → logprob: -20.875097274780273
    10. '       ' → logprob: -21.000097274780273

Token 430: ' parse' (ID: 8420)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.4705102741718292
    2. 'process' → logprob: -1.5955102443695068
    3. ' preprocess' → logprob: -2.595510244369507
    4. ' analyze' → logprob: -3.845510244369507
    5. 'compute' → logprob: -4.095510482788086
    6. ' parse' → logprob: -4.220510482788086
    7. ' compute' → logprob: -4.220510482788086
    8. 'parse' → logprob: -4.595510482788086
    9. 'an' → logprob: -4.720510482788086
    10. '_process' → logprob: -5.345510482788086

Token 431: '_indent' (ID: 196408)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.28707197308540344
    2. '_lines' → logprob: -2.037071943283081
    3. '_indent' → logprob: -2.787071943283081
    4. '_ind' → logprob: -3.537071943283081
    5. '_' → logprob: -3.912071943283081
    6. '_self' → logprob: -5.41207218170166
    7. '_(' → logprob: -6.16207218170166
    8. '_line' → logprob: -7.03707218170166
    9. '(' → logprob: -7.53707218170166
    10. '_code' → logprob: -8.91207218170166

Token 432: 'ations' (ID: 929)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.038468874990940094
    2. 'ations' → logprob: -3.288468837738037
    3. '(self' → logprob: -7.788468837738037
    4. '   ' → logprob: -11.663469314575195
    5. '_lines' → logprob: -14.163469314575195
    6. 'ions' → logprob: -14.288469314575195
    7. 'self' → logprob: -14.413469314575195
    8. '_line' → logprob: -15.163469314575195
    9. '       ' → logprob: -15.288469314575195
    10. '_' → logprob: -15.288469314575195

Token 433: '_and' (ID: 18645)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005201471503823996
    2. '(' → logprob: -7.6255202293396
    3. ' (' → logprob: -11.250519752502441
    4. '   ' → logprob: -11.625519752502441
    5. 'self' → logprob: -11.875519752502441
    6. ' ' → logprob: -13.125519752502441
    7. '       ' → logprob: -13.875519752502441
    8. '_(' → logprob: -16.375520706176758
    9. 'def' → logprob: -17.125520706176758
    10. '  ' → logprob: -17.250520706176758

Token 434: '_prefix' (ID: 33197)
  Prédit: '_br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_br' → logprob: -0.017557654529809952
    2. 'br' → logprob: -4.642557621002197
    3. '_c' → logprob: -5.142557621002197
    4. '_update' → logprob: -7.267557621002197
    5. '_counts' → logprob: -7.642557621002197
    6. '_prefix' → logprob: -8.517558097839355
    7. '_b' → logprob: -8.642558097839355
    8. '_count' → logprob: -9.267558097839355
    9. '_updates' → logprob: -9.642558097839355
    10. 'c' → logprob: -9.767558097839355

Token 435: 'es' (ID: 268)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4392097294330597
    2. 'es' → logprob: -1.6892096996307373
    3. '_counts' → logprob: -1.9392096996307373
    4. '_c' → logprob: -4.064209938049316
    5. 's' → logprob: -5.439209938049316
    6. 'counts' → logprob: -6.439209938049316
    7. '_br' → logprob: -6.814209938049316
    8. '_lines' → logprob: -7.439209938049316
    9. '_t' → logprob: -7.689209938049316
    10. 'self' → logprob: -7.939209938049316

Token 436: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.000001907348633
    4. ' (' → logprob: -15.500001907348633
    5. 'self' → logprob: -15.625001907348633
    6. '       ' → logprob: -16.500001907348633
    7. '(s' → logprob: -19.500001907348633
    8. ' ' → logprob: -19.750001907348633
    9. 'def' → logprob: -20.125001907348633
    10. '(sel' → logprob: -20.125001907348633

Token 437: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8460363745689392
    2. '):
' → logprob: -0.9710363745689392
    3. '(self' → logprob: -1.846036434173584
    4. 'self' → logprob: -3.971036434173584
    5. ')(' → logprob: -4.346036434173584
    6. ')' → logprob: -7.471036434173584
    7. '   ' → logprob: -7.471036434173584
    8. ',' → logprob: -7.596036434173584
    9. '       ' → logprob: -8.471035957336426
    10. '_' → logprob: -9.471035957336426

Token 438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003529814421199262
    2. ' for' → logprob: -8.12535285949707
    3. 'for' → logprob: -10.12535285949707
    4. 'n' → logprob: -12.12535285949707
    5. 'indent' → logprob: -12.12535285949707
    6. '   ' → logprob: -12.87535285949707
    7. 'self' → logprob: -14.25035285949707
    8. ' indentation' → logprob: -14.25035285949707
    9. ',' → logprob: -14.50035285949707
    10. '```' → logprob: -14.87535285949707

Token 439: ' bc' (ID: 51743)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22282536327838898
    2. 'current' → logprob: -2.722825288772583
    3. 'indent' → logprob: -3.222825288772583
    4. 'prev' → logprob: -3.347825288772583
    5. ' current' → logprob: -3.472825288772583
    6. 'self' → logprob: -5.097825527191162
    7. ' self' → logprob: -5.472825527191162
    8. ' prev' → logprob: -5.847825527191162
    9. ' indent' → logprob: -5.972825527191162
    10. ' indentation' → logprob: -6.347825527191162

Token 440: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031837786082178354
    2. '=' → logprob: -5.753183841705322
    3. 'ounter' → logprob: -12.628183364868164
    4. ' ' → logprob: -13.628183364868164
    5. 'urrent' → logprob: -14.128183364868164
    6. 's' → logprob: -15.503183364868164
    7. 'ount' → logprob: -15.628183364868164
    8. '_prev' → logprob: -16.128183364868164
    9. '_before' → logprob: -16.878183364868164
    10. '_counter' → logprob: -17.003183364868164

Token 441: ' Br' (ID: 2866)
  Prédit: 'Bracket'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bracket' → logprob: -0.00979669950902462
    2. ' Br' → logprob: -4.634796619415283
    3. '   ' → logprob: -11.134797096252441
    4. ' bracket' → logprob: -12.134797096252441
    5. ' ' → logprob: -12.509797096252441
    6. 'Br' → logprob: -12.634797096252441
    7. '       ' → logprob: -12.759797096252441
    8. ' BR' → logprob: -13.384797096252441
    9. '           ' → logprob: -13.509797096252441
    10. 'br' → logprob: -13.634797096252441

Token 442: 'acket' (ID: 8480)
  Prédit: 'acket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acket' → logprob: -3.531315314830863e-06
    2. 'ack' → logprob: -13.375003814697266
    3. 'a' → logprob: -14.375003814697266
    4. 'ACKET' → logprob: -14.500003814697266
    5. 'asket' → logprob: -15.000003814697266
    6. 'cket' → logprob: -16.000003814697266
    7. '```' → logprob: -16.000003814697266
    8. 'aket' → logprob: -16.125003814697266
    9. 'ucket' → logprob: -17.000003814697266
    10. 'Bracket' → logprob: -17.000003814697266

Token 443: 'Counter' (ID: 16263)
  Prédit: 'Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -4.179569077678025e-05
    2. '_counter' → logprob: -10.875041961669922
    3. '       ' → logprob: -11.500041961669922
    4. 'counter' → logprob: -11.625041961669922
    5. 'ounter' → logprob: -13.375041961669922
    6. '   ' → logprob: -14.125041961669922
    7. 'Counters' → logprob: -14.750041961669922
    8. 'Count' → logprob: -15.000041961669922
    9. ' Counter' → logprob: -15.875041961669922
    10. 'Coun' → logprob: -16.125041961669922

Token 444: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.25285953283309937
    2. '       ' → logprob: -2.252859592437744
    3. '
' → logprob: -2.752859592437744
    4. '()' → logprob: -3.127859592437744
    5. '        
' → logprob: -4.627859592437744
    6. '()
' → logprob: -9.002859115600586
    7. 'self' → logprob: -9.252859115600586
    8. 'for' → logprob: -9.252859115600586
    9. '(' → logprob: -9.377859115600586
    10. '  
' → logprob: -9.627859115600586

Token 445: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01945623755455017
    2. ' for' → logprob: -4.519456386566162
    3. 'for' → logprob: -5.019456386566162
    4. '
' → logprob: -6.394456386566162
    5. 'indent' → logprob: -10.269455909729004
    6. '   ' → logprob: -10.769455909729004
    7. '        
' → logprob: -11.019455909729004
    8. 'self' → logprob: -12.519455909729004
    9. '```' → logprob: -13.019455909729004
    10. 'prev' → logprob: -13.144455909729004

Token 446: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13634076714515686
    2. ' for' → logprob: -2.636340856552124
    3. '       ' → logprob: -2.886340856552124
    4. '
' → logprob: -11.386341094970703
    5. 'self' (adapté à ' self') → logprob: -11.511341094970703
    6. '	for' → logprob: -12.011341094970703
    7. '   ' → logprob: -12.011341094970703
    8. 'prev' → logprob: -12.136341094970703
    9. ' ' → logprob: -12.636341094970703
    10. '        
' → logprob: -12.886341094970703

Token 447: '.ind' (ID: 51969)
  Prédit: '.ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ind' → logprob: -0.0009761215187609196
    2. '.' → logprob: -7.500976085662842
    3. '.br' → logprob: -8.5009765625
    4. '.lines' → logprob: -8.7509765625
    5. ' .' → logprob: -9.8759765625
    6. '.ident' → logprob: -12.7509765625
    7. '.for' → logprob: -14.0009765625
    8. 'indent' → logprob: -14.3759765625
    9. '.indices' → logprob: -14.6259765625
    10. '.period' → logprob: -14.8759765625

Token 448: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.004013103432953358
    2. 'entions' → logprob: -5.6290130615234375
    3. '   ' → logprob: -9.129013061523438
    4. 'entation' → logprob: -9.254013061523438
    5. '       ' → logprob: -9.879013061523438
    6. 'et' → logprob: -10.754013061523438
    7. 'ents' → logprob: -10.879013061523438
    8. '#' → logprob: -11.379013061523438
    9. '
' → logprob: -11.379013061523438
    10. '    ' → logprob: -11.754013061523438

Token 449: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -1.5048530030981055e-06
    2. '       ' → logprob: -14.250001907348633
    3. 'ation' → logprob: -15.125001907348633
    4. '   ' → logprob: -15.250001907348633
    5. 'entions' → logprob: -16.875001907348633
    6. '_' → logprob: -16.875001907348633
    7. 's' → logprob: -17.125001907348633
    8. 'a' → logprob: -17.500001907348633
    9. '           ' → logprob: -17.875001907348633
    10. '
' → logprob: -18.000001907348633

Token 450: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.11916518211364746
    2. ' =' → logprob: -2.3691651821136475
    3. '=' → logprob: -3.9941651821136475
    4. '.clear' → logprob: -8.369165420532227
    5. '=[]' → logprob: -9.744165420532227
    6. 'append' → logprob: -10.494165420532227
    7. '.' → logprob: -10.744165420532227
    8. '.extend' → logprob: -11.369165420532227
    9. '=[]
' → logprob: -12.744165420532227
    10. ' .' → logprob: -14.119165420532227

Token 451: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.508092999458313
    2. '[]
' → logprob: -1.508092999458313
    3. '[]' → logprob: -1.758092999458313
    4. '[
' → logprob: -6.258092880249023
    5. '[self' → logprob: -7.258092880249023
    6. '[int' → logprob: -7.508092880249023
    7. '[len' → logprob: -7.508092880249023
    8. '[line' → logprob: -8.258092880249023
    9. '[ind' → logprob: -9.633092880249023
    10. '[number' → logprob: -9.758092880249023

Token 452: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012687516398727894
    2. '
' → logprob: -4.512687683105469
    3. ' for' → logprob: -6.637687683105469
    4. 'for' → logprob: -8.137687683105469
    5. '        
' → logprob: -10.637687683105469
    6. '   ' → logprob: -12.387687683105469
    7. ',' → logprob: -13.512687683105469
    8. '
' → logprob: -13.762687683105469
    9. '    
' → logprob: -14.012687683105469
    10. '<|end|>' → logprob: -14.262687683105469

Token 453: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.29591310024261475
    2. 'for' → logprob: -1.4209131002426147
    3. '       ' → logprob: -4.295913219451904
    4. ' for' → logprob: -7.420913219451904
    5. ' self' → logprob: -7.920913219451904
    6. '   ' → logprob: -10.670912742614746
    7. '
' → logprob: -10.920912742614746
    8. ' ' → logprob: -11.170912742614746
    9. '        
' → logprob: -12.920912742614746
    10. 'indent' → logprob: -13.295912742614746

Token 454: '.br' (ID: 24828)
  Prédit: '.br'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.br' → logprob: -0.0193462111055851
    2. '.' → logprob: -4.019346237182617
    3. ' .' → logprob: -7.144346237182617
    4. '   ' → logprob: -8.894346237182617
    5. 'br' → logprob: -8.894346237182617
    6. '.
' → logprob: -10.019346237182617
    7. '.ind' → logprob: -10.644346237182617
    8. '	br' → logprob: -11.019346237182617
    9. ' br' → logprob: -12.019346237182617
    10. '
' → logprob: -12.144346237182617

Token 455: 'acket' (ID: 8480)
  Prédit: 'acket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acket' → logprob: -0.00013738969573751092
    2. 'ack' → logprob: -9.750137329101562
    3. 'ackets' → logprob: -10.500137329101562
    4. 'a' → logprob: -11.000137329101562
    5. 'asket' → logprob: -11.750137329101562
    6. 'ACKET' → logprob: -12.000137329101562
    7. '```' → logprob: -12.125137329101562
    8. 'cket' → logprob: -12.375137329101562
    9. '       ' → logprob: -12.500137329101562
    10. '   ' → logprob: -13.500137329101562

Token 456: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0004297155828680843
    2. '_counter' → logprob: -8.1254301071167
    3. 'Counters' → logprob: -10.0004301071167
    4. 's' → logprob: -10.5004301071167
    5. '_' → logprob: -10.7504301071167
    6. '_counts' → logprob: -11.5004301071167
    7. '       ' → logprob: -12.0004301071167
    8. 'c' → logprob: -12.3754301071167
    9. '   ' → logprob: -12.7504301071167
    10. 'Counter' → logprob: -12.8754301071167

Token 457: 'ounters' (ID: 36761)
  Prédit: 'ounters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounters' → logprob: -0.0001295222609769553
    2. 'ounter' → logprob: -9.500129699707031
    3. 'ount' → logprob: -9.875129699707031
    4. 'oun' → logprob: -14.000129699707031
    5. 'ou' → logprob: -14.625129699707031
    6. 'c' → logprob: -14.875129699707031
    7. '   ' → logprob: -15.125129699707031
    8. 'on' → logprob: -15.125129699707031
    9. ' ' → logprob: -15.875129699707031
    10. '```' → logprob: -16.12512969970703

Token 458: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760860443115234
    2. '=' → logprob: -0.8260860443115234
    3. '.clear' → logprob: -9.576086044311523
    4. '.append' → logprob: -9.826086044311523
    5. '=[]' → logprob: -11.326086044311523
    6. '.' → logprob: -11.701086044311523
    7. '.=' → logprob: -13.201086044311523
    8. '=[]
' → logprob: -14.201086044311523
    9. '[:]' → logprob: -16.201086044311523
    10. ' ' → logprob: -16.701086044311523

Token 459: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.0643865093588829
    2. '[]' → logprob: -2.8143866062164307
    3. '[]

' → logprob: -6.064386367797852
    4. '[' → logprob: -9.564386367797852
    5. ' []
' → logprob: -10.814386367797852
    6. ' []' → logprob: -13.814386367797852
    7. '[
' → logprob: -15.814386367797852
    8. '[])
' → logprob: -16.43938636779785
    9. '[self' → logprob: -16.81438636779785
    10. ' []

' → logprob: -17.06438636779785

Token 460: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00549580343067646
    2. '
' → logprob: -5.755496025085449
    3. ' for' → logprob: -6.505496025085449
    4. 'for' → logprob: -7.505496025085449
    5. '        
' → logprob: -8.63049602508545
    6. '   ' → logprob: -9.88049602508545
    7. '    
' → logprob: -11.75549602508545
    8. ' ' → logprob: -12.00549602508545
    9. '  
' → logprob: -12.13049602508545
    10. '
' → logprob: -12.63049602508545

Token 461: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01715991459786892
    2. '       ' → logprob: -4.767159938812256
    3. ' for' → logprob: -4.767159938812256
    4. '   ' → logprob: -12.767159461975098
    5. '	for' → logprob: -13.892159461975098
    6. ' ' → logprob: -14.517159461975098
    7. '
' → logprob: -15.892159461975098
    8. '```' → logprob: -17.017160415649414
    9. '  ' → logprob: -17.517160415649414
    10. '        
' → logprob: -17.767160415649414

Token 462: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.12804058194160461
    2. ' line' → logprob: -2.1280405521392822
    3. 'i' → logprob: -7.128040790557861
    4. ' i' → logprob: -8.628040313720703
    5. 'idx' → logprob: -9.378040313720703
    6. ' idx' → logprob: -10.628040313720703
    7. 'index' → logprob: -11.003040313720703
    8. '   ' → logprob: -13.753040313720703
    9. ' index' → logprob: -13.753040313720703
    10. '	line' → logprob: -13.878040313720703

Token 463: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00015669701679144055
    2. 'in' → logprob: -8.87515640258789
    3. ' ' → logprob: -11.12515640258789
    4. '   ' → logprob: -14.12515640258789
    5. '       ' → logprob: -15.12515640258789
    6. '_in' → logprob: -15.25015640258789
    7. '    ' → logprob: -15.75015640258789
    8. '        ' → logprob: -15.87515640258789
    9. '_' → logprob: -15.87515640258789
    10. '  ' → logprob: -16.25015640258789

Token 464: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02975292131304741
    2. ' self' → logprob: -3.5297529697418213
    3. '       ' → logprob: -14.029752731323242
    4. '(self' → logprob: -14.404752731323242
    5. '   ' → logprob: -14.654752731323242
    6. '[self' → logprob: -14.904752731323242
    7. '	self' → logprob: -16.029752731323242
    8. '
' → logprob: -16.529752731323242
    9. ' ' → logprob: -17.654752731323242
    10. 's' → logprob: -17.904752731323242

Token 465: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -2.4868770196917467e-05
    2. 'lines' → logprob: -10.750024795532227
    3. '.' → logprob: -13.000024795532227
    4. 'ines' → logprob: -14.750024795532227
    5. '	lines' → logprob: -15.125024795532227
    6. '(lines' → logprob: -15.875024795532227
    7. ' lines' → logprob: -16.125024795532227
    8. ' .' → logprob: -16.375024795532227
    9. 'self' → logprob: -16.500024795532227
    10. '.readlines' → logprob: -17.000024795532227

Token 466: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5976630449295044
    2. ':' → logprob: -0.8476630449295044
    3. '           ' → logprob: -3.847662925720215
    4. ',' → logprob: -10.222662925720215
    5. '       ' → logprob: -10.472662925720215
    6. '.rstrip' → logprob: -10.722662925720215
    7. '):
' → logprob: -11.347662925720215
    8. '.' → logprob: -11.472662925720215
    9. ':
' → logprob: -12.097662925720215
    10. '   ' → logprob: -12.097662925720215

Token 467: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000215457082958892
    2. '
' → logprob: -8.750215530395508
    3. '```' → logprob: -11.125215530395508
    4. ',' → logprob: -11.375215530395508
    5. ':
' → logprob: -12.000215530395508
    6. '            
' → logprob: -12.250215530395508
    7. ':' → logprob: -12.250215530395508
    8. '   ' → logprob: -12.750215530395508
    9. 'indent' → logprob: -13.000215530395508
    10. ' indentation' → logprob: -13.375215530395508

Token 468: ' indent' (ID: 37655)
  Prédit: 'indent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indent' (adapté à ' indent') → logprob: -0.04668886587023735
    2. ' indent' → logprob: -3.7966887950897217
    3. 'self' → logprob: -4.546689033508301
    4. '           ' → logprob: -5.671689033508301
    5. ' indentation' → logprob: -6.171689033508301
    6. 'leading' → logprob: -6.546689033508301
    7. '       ' → logprob: -7.046689033508301
    8. ' self' → logprob: -7.171689033508301
    9. 'ind' → logprob: -7.171689033508301
    10. '               ' → logprob: -7.296689033508301

Token 469: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013810855336487293
    2. '=' → logprob: -4.513810634613037
    3. '   ' → logprob: -7.388810634613037
    4. 'ation' → logprob: -7.513810634613037
    5. '_level' → logprob: -7.513810634613037
    6. '_count' → logprob: -7.638810634613037
    7. 'count' → logprob: -8.513811111450195
    8. '       ' → logprob: -9.138811111450195
    9. '_len' → logprob: -9.138811111450195
    10. 'level' → logprob: -9.513811111450195

Token 470: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0009900573641061783
    2. ' len' → logprob: -7.25098991394043
    3. '0' → logprob: -8.25098991394043
    4. 'line' → logprob: -11.37598991394043
    5. '(len' → logprob: -12.00098991394043
    6. ' ' → logprob: -13.50098991394043
    7. '   ' → logprob: -15.87598991394043
    8. '(' → logprob: -18.00098991394043
    9. 'sum' → logprob: -18.12598991394043
    10. '	len' → logprob: -18.12598991394043

Token 471: '0' (ID: 15)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00011927806917810813
    2. '0' → logprob: -9.25011920928955
    3. 'line' → logprob: -10.75011920928955
    4. '(len' → logprob: -13.50011920928955
    5. ' len' → logprob: -14.87511920928955
    6. '(' → logprob: -18.000120162963867
    7. 'sum' → logprob: -18.500120162963867
    8. '	len' → logprob: -21.875120162963867
    9. '(line' → logprob: -22.125120162963867
    10. 'self' → logprob: -22.125120162963867

Token 472: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11233210563659668
    2. 'while' → logprob: -2.6123321056365967
    3. ' while' → logprob: -3.4873321056365967
    4. '
' → logprob: -6.237332344055176
    5. '       ' → logprob: -8.862332344055176
    6. '		' → logprob: -9.862332344055176
    7. '	while' → logprob: -10.237332344055176
    8. '   ' → logprob: -10.362332344055176
    9. ' for' → logprob: -10.737332344055176
    10. '	   ' → logprob: -10.987332344055176

Token 473: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5833103060722351
    2. 'while' → logprob: -1.2083103656768799
    3. ' while' → logprob: -1.9583103656768799
    4. '       ' → logprob: -6.333310127258301
    5. '   ' → logprob: -8.5833101272583
    6. '	while' → logprob: -9.8333101272583
    7. ' for' → logprob: -10.0833101272583
    8. '
' → logprob: -10.4583101272583
    9. 'for' → logprob: -10.5833101272583
    10. '               ' → logprob: -11.5833101272583

Token 474: ' i' (ID: 575)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.09907670319080353
    2. 'for' → logprob: -2.599076747894287
    3. '           ' → logprob: -4.099076747894287
    4. ' while' → logprob: -5.849076747894287
    5. ' for' → logprob: -7.724076747894287
    6. '   ' → logprob: -10.224076271057129
    7. '       ' → logprob: -10.474076271057129
    8. 'idx' → logprob: -12.724076271057129
    9. '               ' → logprob: -13.474076271057129
    10. '	while' → logprob: -13.849076271057129

Token 475: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35673680901527405
    2. 'while' → logprob: -1.9817367792129517
    3. ' =' → logprob: -1.9817367792129517
    4. ' while' → logprob: -4.231736660003662
    5. '           ' → logprob: -6.231736660003662
    6. 'f' → logprob: -6.231736660003662
    7. '<len' → logprob: -6.981736660003662
    8. 'nd' → logprob: -7.106736660003662
    9. '+=' → logprob: -7.231736660003662
    10. 'n' → logprob: -7.231736660003662

Token 476: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. 'i' → logprob: -17.750051498413086
    4. '   ' → logprob: -18.625051498413086
    5. '           ' → logprob: -20.250051498413086
    6. ' i' → logprob: -20.750051498413086
    7. 'len' → logprob: -20.875051498413086
    8. '1' → logprob: -21.750051498413086
    9. '  ' → logprob: -21.875051498413086
    10. '       ' → logprob: -22.000051498413086

Token 477: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. 'i' → logprob: -19.125003814697266
    4. '   ' → logprob: -19.750003814697266
    5. '           ' → logprob: -22.000003814697266
    6. '۰' → logprob: -22.625003814697266
    7. '       ' → logprob: -23.000003814697266
    8. 'len' → logprob: -23.000003814697266
    9. '
' → logprob: -23.125003814697266
    10. 'indent' → logprob: -23.250003814697266

Token 478: '
' (ID: 198)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.583999514579773
    2. 'while' → logprob: -0.958999514579773
    3. '           ' → logprob: -2.9589996337890625
    4. '	while' → logprob: -5.5839996337890625
    5. '       ' → logprob: -6.4589996337890625
    6. '
' → logprob: -6.8339996337890625
    7. '   ' → logprob: -8.458999633789062
    8. ' ' → logprob: -8.958999633789062
    9. 'While' → logprob: -9.833999633789062
    10. '            
' → logprob: -9.833999633789062

Token 479: '           ' (ID: 352)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.20584647357463837
    2. 'while' → logprob: -1.7058464288711548
    3. '           ' → logprob: -5.705846309661865
    4. '	while' → logprob: -7.330846309661865
    5. '       ' → logprob: -8.205846786499023
    6. '
' → logprob: -9.205846786499023
    7. '   ' → logprob: -10.955846786499023
    8. '            
' → logprob: -11.455846786499023
    9. '               ' → logprob: -11.955846786499023
    10. ' ' → logprob: -11.955846786499023

Token 480: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.06209372356534004
    2. ' while' → logprob: -2.812093734741211
    3. '           ' → logprob: -9.187093734741211
    4. '
' → logprob: -11.187093734741211
    5. '	while' → logprob: -12.062093734741211
    6. '   ' → logprob: -12.812093734741211
    7. '       ' → logprob: -13.937093734741211
    8. '            
' → logprob: -15.812093734741211
    9. '            ' → logprob: -16.43709373474121
    10. 'While' → logprob: -16.81209373474121

Token 481: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10024883598089218
    2. ' i' → logprob: -2.3502488136291504
    3. '   ' → logprob: -11.350249290466309
    4. '	i' → logprob: -11.725249290466309
    5. ' ' → logprob: -11.850249290466309
    6. ' line' → logprob: -11.975249290466309
    7. 'line' → logprob: -12.600249290466309
    8. '  ' → logprob: -13.600249290466309
    9. '     ' → logprob: -13.975249290466309
    10. '(i' → logprob: -13.975249290466309

Token 482: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.25580012798309326
    2. '<' → logprob: -1.8808001279830933
    3. '<len' → logprob: -2.630800247192383
    4. 'i' → logprob: -7.505800247192383
    5. '<i' → logprob: -7.755800247192383
    6. ' i' → logprob: -8.630800247192383
    7. 'len' → logprob: -11.005800247192383
    8. ' ' → logprob: -11.630800247192383
    9. '[i' → logprob: -11.630800247192383
    10. '<n' → logprob: -12.505800247192383

Token 483: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.8624639324116288e-06
    2. ' len' → logprob: -13.250001907348633
    3. 'line' → logprob: -17.625001907348633
    4. '   ' → logprob: -19.000001907348633
    5. '           ' → logprob: -20.500001907348633
    6. '(len' → logprob: -20.750001907348633
    7. '       ' → logprob: -20.875001907348633
    8. '	len' → logprob: -22.125001907348633
    9. '=len' → logprob: -23.500001907348633
    10. '               ' → logprob: -23.500001907348633

Token 484: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.008627813309431076
    2. 'line' → logprob: -4.758627891540527
    3. ' line' → logprob: -11.258627891540527
    4. '[line' → logprob: -15.008627891540527
    5. '(' → logprob: -16.25862693786621
    6. '=line' → logprob: -17.63362693786621
    7. '	line' → logprob: -17.75862693786621
    8. '#line' → logprob: -18.63362693786621
    9. ',line' → logprob: -19.13362693786621
    10. '(self' → logprob: -19.38362693786621

Token 485: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0451246052980423
    2. 'and' → logprob: -3.1701245307922363
    3. ')' → logprob: -6.170124530792236
    4. '           ' → logprob: -10.795125007629395
    5. '	and' → logprob: -12.795125007629395
    6. ' )' → logprob: -13.045125007629395
    7. '   ' → logprob: -13.045125007629395
    8. '):
' → logprob: -13.420125007629395
    9. ' ' → logprob: -13.795125007629395
    10. ' и' → logprob: -15.045125007629395

Token 486: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4740886688232422
    2. 'and' → logprob: -0.9740886688232422
    3. '           ' → logprob: -11.974088668823242
    4. '   ' → logprob: -12.474088668823242
    5. '	and' → logprob: -14.724088668823242
    6. ' ' → logprob: -15.099088668823242
    7. '       ' → logprob: -15.724088668823242
    8. '               ' → logprob: -15.974088668823242
    9. '
' → logprob: -16.224088668823242
    10. '                   ' → logprob: -16.349088668823242

Token 487: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.03804286941885948
    2. ' line' → logprob: -3.2880427837371826
    3. '(line' → logprob: -14.413043022155762
    4. '           ' → logprob: -14.663043022155762
    5. '   ' → logprob: -15.163043022155762
    6. '	line' → logprob: -16.663042068481445
    7. ' ' → logprob: -17.788042068481445
    8. '#line' → logprob: -18.413042068481445
    9. '[line' → logprob: -18.913042068481445
    10. '=line' → logprob: -19.288042068481445

Token 488: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. 'i' → logprob: -14.500000953674316
    3. '   ' → logprob: -15.625000953674316
    4. '[' → logprob: -15.750000953674316
    5. ' [' → logprob: -17.500001907348633
    6. '           ' → logprob: -17.500001907348633
    7. '[
' → logprob: -17.625001907348633
    8. ' i' → logprob: -17.750001907348633
    9. '.startswith' → logprob: -18.750001907348633
    10. '[:' → logprob: -18.750001907348633

Token 489: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.028208579868078232
    2. '==' → logprob: -3.6532084941864014
    3. '=='' → logprob: -6.6532087326049805
    4. ' =='' → logprob: -7.6532087326049805
    5. ' ' → logprob: -10.02820873260498
    6. '	' → logprob: -10.15320873260498
    7. ' in' → logprob: -11.02820873260498
    8. '=' → logprob: -11.65320873260498
    9. '   ' → logprob: -12.27820873260498
    10. '.' → logprob: -12.77820873260498

Token 490: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06390587240457535
    2. '==' → logprob: -2.813905954360962
    3. '=='' → logprob: -6.438905715942383
    4. ' =='' → logprob: -8.313905715942383
    5. ' in' → logprob: -10.188905715942383
    6. '	' → logprob: -10.813905715942383
    7. ' ' → logprob: -11.563905715942383
    8. '   ' → logprob: -11.813905715942383
    9. '=' → logprob: -12.563905715942383
    10. '==
' → logprob: -12.688905715942383

Token 491: ' '.' (ID: 12662)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.027245959267020226
    2. ''' → logprob: -3.6522459983825684
    3. ''\' → logprob: -7.027245998382568
    4. '.' → logprob: -10.15224552154541
    5. ' '' → logprob: -12.02724552154541
    6. ' '.'' → logprob: -12.02724552154541
    7. '   ' → logprob: -13.15224552154541
    8. '	' → logprob: -13.27724552154541
    9. ' ' → logprob: -13.52724552154541
    10. '('.')' → logprob: -13.90224552154541

Token 492: '':
' (ID: 7669)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00444471649825573
    2. ')' → logprob: -6.754444599151611
    3. ''' → logprob: -6.879444599151611
    4. ''.' → logprob: -7.129444599151611
    5. ' .' → logprob: -8.25444507598877
    6. ' ' → logprob: -8.37944507598877
    7. '.'' → logprob: -8.37944507598877
    8. '   ' → logprob: -9.12944507598877
    9. ' '' → logprob: -9.25444507598877
    10. '':' → logprob: -9.37944507598877

Token 493: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1658288687467575
    2. 'indent' → logprob: -2.1658289432525635
    3. ' indent' → logprob: -3.4158289432525635
    4. '(indent' → logprob: -5.915828704833984
    5. '           ' → logprob: -7.040828704833984
    6. 'i' → logprob: -7.290828704833984
    7. '   ' → logprob: -8.415828704833984
    8. '_indent' → logprob: -8.790828704833984
    9. ' i' → logprob: -9.290828704833984
    10. '                   ' → logprob: -9.290828704833984

Token 494: ' indent' (ID: 37655)
  Prédit: 'indent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indent' (adapté à ' indent') → logprob: -0.004372206050902605
    2. ' indent' → logprob: -5.5043721199035645
    3. 'i' → logprob: -8.629372596740723
    4. '               ' → logprob: -10.129372596740723
    5. '           ' → logprob: -10.379372596740723
    6. 'ind' → logprob: -11.504372596740723
    7. '_indent' → logprob: -11.879372596740723
    8. '(indent' → logprob: -12.379372596740723
    9. ' i' → logprob: -12.629372596740723
    10. ' ' → logprob: -12.629372596740723

Token 495: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06250613182783127
    2. ' +=' → logprob: -2.8125061988830566
    3. '=' → logprob: -8.187505722045898
    4. '               ' → logprob: -8.687505722045898
    5. '           ' → logprob: -10.562505722045898
    6. 'indent' → logprob: -10.687505722045898
    7. '                   ' → logprob: -11.312505722045898
    8. 'increment' → logprob: -12.062505722045898
    9. '+' → logprob: -12.187505722045898
    10. 'i' → logprob: -12.937505722045898

Token 496: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1318875446449965e-05
    2. ' ' → logprob: -10.250041007995605
    3. '   ' → logprob: -12.625041007995605
    4. '.' → logprob: -13.000041007995605
    5. '           ' → logprob: -16.000041961669922
    6. '       ' → logprob: -16.375041961669922
    7. '4' → logprob: -17.250041961669922
    8. '  ' → logprob: -17.500041961669922
    9. '0' → logprob: -18.000041961669922
    10. '10' → logprob: -18.125041961669922

Token 497: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.584239938296378e-06
    2. '.' → logprob: -12.375007629394531
    3. ' ' → logprob: -12.625007629394531
    4. '   ' → logprob: -17.62500762939453
    5. '  ' → logprob: -20.00000762939453
    6. '```' → logprob: -20.37500762939453
    7. '       ' → logprob: -20.75000762939453
    8. '0' → logprob: -20.87500762939453
    9. '           ' → logprob: -21.50000762939453
    10. '.
' → logprob: -21.50000762939453

Token 498: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29065772891044617
    2. '               ' → logprob: -1.9156577587127686
    3. 'i' → logprob: -2.2906577587127686
    4. '   ' → logprob: -6.1656575202941895
    5. '
' → logprob: -7.4156575202941895
    6. '                   ' → logprob: -7.5406575202941895
    7. ' i' → logprob: -8.040657997131348
    8. '       ' → logprob: -9.790657997131348
    9. '    
' → logprob: -10.790657997131348
    10. ',' → logprob: -10.790657997131348

Token 499: '               ' (ID: 506)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7812495827674866
    2. '               ' → logprob: -0.7812495827674866
    3. '           ' → logprob: -2.781249523162842
    4. ' i' → logprob: -4.281249523162842
    5. '   ' → logprob: -5.031249523162842
    6. '	i' → logprob: -7.406249523162842
    7. '       ' → logprob: -7.906249523162842
    8. '                   ' → logprob: -8.03125
    9. '	           ' → logprob: -8.28125
    10. '		' → logprob: -8.78125

Token 500: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -2.45848218582978e-06
    2. ' i' → logprob: -13.00000286102295
    3. '           ' → logprob: -17.000001907348633
    4. '               ' → logprob: -17.875001907348633
    5. '   ' → logprob: -19.625001907348633
    6. '       ' → logprob: -20.375001907348633
    7. '```' → logprob: -21.500001907348633
    8. '
' → logprob: -21.750001907348633
    9. '	i' → logprob: -22.000001907348633
    10. '                   ' → logprob: -22.500001907348633

Token 501: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.002932894742116332
    2. ' +=' → logprob: -5.877933025360107
    3. '=' → logprob: -9.37793254852295
    4. '+' → logprob: -10.12793254852295
    5. '<|end|>' → logprob: -13.12793254852295
    6. '1' → logprob: -14.62793254852295
    7. '```' → logprob: -15.25293254852295
    8. ']+=' → logprob: -15.25293254852295
    9. ')' → logprob: -15.62793254852295
    10. '+='' → logprob: -16.252933502197266

Token 502: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -17.875003814697266
    4. '```' → logprob: -19.250003814697266
    5. '
' → logprob: -20.250003814697266
    6. '  ' → logprob: -20.375003814697266
    7. '           ' → logprob: -20.750003814697266
    8. '       ' → logprob: -21.125003814697266
    9. '    ' → logprob: -22.250003814697266
    10. '     ' → logprob: -22.625003814697266

Token 503: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -19.250001907348633
    4. '   ' → logprob: -19.625001907348633
    5. '  ' → logprob: -21.500001907348633
    6. '
' → logprob: -21.625001907348633
    7. '۱' → logprob: -21.875001907348633
    8. '0' → logprob: -22.000001907348633
    9. '<|end|>' → logprob: -22.250001907348633
    10. '       ' → logprob: -23.062501907348633

Token 504: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020920787006616592
    2. '
' → logprob: -3.895920753479004
    3. '       ' → logprob: -9.270920753479004
    4. 'self' → logprob: -9.270920753479004
    5. '            
' → logprob: -9.520920753479004
    6. '    
' → logprob: -10.520920753479004
    7. ' self' → logprob: -11.020920753479004
    8. '  
' → logprob: -11.270920753479004
    9. '.' → logprob: -11.520920753479004
    10. '   ' → logprob: -11.645920753479004

Token 505: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004761430434882641
    2. 'self' → logprob: -5.629761219024658
    3. '
' → logprob: -7.129761219024658
    4. ' self' → logprob: -8.754761695861816
    5. '       ' → logprob: -9.129761695861816
    6. '            
' → logprob: -10.004761695861816
    7. '   ' → logprob: -11.379761695861816
    8. '               ' → logprob: -11.754761695861816
    9. 'line' → logprob: -12.129761695861816
    10. '    
' → logprob: -12.879761695861816

Token 506: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47854116559028625
    2. 'self' (adapté à ' self') → logprob: -0.9785411357879639
    3. ' self' → logprob: -5.603541374206543
    4. '       ' → logprob: -7.728541374206543
    5. '
' → logprob: -8.728541374206543
    6. 'line' → logprob: -9.478541374206543
    7. 'if' → logprob: -11.228541374206543
    8. '   ' → logprob: -11.228541374206543
    9. '            
' → logprob: -11.603541374206543
    10. '               ' → logprob: -11.978541374206543

Token 507: '.ind' (ID: 51969)
  Prédit: '.ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ind' → logprob: -2.45848218582978e-06
    2. '.' → logprob: -13.37500286102295
    3. 'indent' → logprob: -15.00000286102295
    4. '.indices' → logprob: -15.37500286102295
    5. ' .' → logprob: -15.75000286102295
    6. '.lines' → logprob: -16.750001907348633
    7. '.ident' → logprob: -16.875001907348633
    8. 'Indent' → logprob: -17.000001907348633
    9. '.ins' → logprob: -17.000001907348633
    10. '[ind' → logprob: -17.500001907348633

Token 508: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.0004011177225038409
    2. 'entions' → logprob: -7.875401020050049
    3. 'ations' → logprob: -11.625401496887207
    4. 'entation' → logprob: -12.625401496887207
    5. '
' → logprob: -12.750401496887207
    6. 'et' → logprob: -13.000401496887207
    7. 't' → logprob: -14.250401496887207
    8. 'nt' → logprob: -14.875401496887207
    9. 'indent' → logprob: -15.000401496887207
    10. '\' → logprob: -15.125401496887207

Token 509: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -1.9361264946837764e-07
    2. 't' → logprob: -15.75
    3. 's' → logprob: -17.875
    4. 'ation' → logprob: -18.375
    5. 'ATIONS' → logprob: -19.125
    6. '
' → logprob: -20.5
    7. 'lations' → logprob: -20.625
    8. 'entions' → logprob: -20.625
    9. '_' → logprob: -20.875
    10. 'at' → logprob: -21.0

Token 510: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.319370302458992e-06
    2. '.' → logprob: -12.250005722045898
    3. ' .' → logprob: -14.875005722045898
    4. '.app' → logprob: -16.1250057220459
    5. '.ap' → logprob: -16.7500057220459
    6. '.Append' → logprob: -19.1250057220459
    7. 'append' → logprob: -19.1250057220459
    8. '_append' → logprob: -19.7500057220459
    9. '.push' → logprob: -20.0000057220459
    10. ').' → logprob: -20.3750057220459

Token 511: '(indent' (ID: 184205)
  Prédit: '(indent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(indent' → logprob: -8.061054359131958e-06
    2. 'indent' → logprob: -11.750007629394531
    3. '(ind' → logprob: -16.50000762939453
    4. ' indent' → logprob: -18.50000762939453
    5. '(
' → logprob: -18.87500762939453
    6. '(intent' → logprob: -19.37500762939453
    7. '(' → logprob: -19.37500762939453
    8. 'Indent' → logprob: -20.00000762939453
    9. '(i' → logprob: -20.62500762939453
    10. '_indent' → logprob: -21.00000762939453

Token 512: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07952458411455154
    2. ')' → logprob: -2.579524517059326
    3. '           ' → logprob: -7.454524517059326
    4. '       ' → logprob: -9.954524993896484
    5. ' )
' → logprob: -12.829524993896484
    6. ')
' → logprob: -13.079524993896484
    7. '
' → logprob: -13.454524993896484
    8. ')

' → logprob: -13.954524993896484
    9. '   ' → logprob: -15.329524993896484
    10. '               ' → logprob: -15.704524993896484

Token 513: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00018685187387745827
    2. '       ' → logprob: -9.000186920166016
    3. 'self' → logprob: -9.875186920166016
    4. ' self' → logprob: -12.500186920166016
    5. '
' → logprob: -12.875186920166016
    6. '   ' → logprob: -13.375186920166016
    7. 'bc' → logprob: -13.750186920166016
    8. 'b' → logprob: -13.875186920166016
    9. '            
' → logprob: -14.000186920166016
    10. 'br' → logprob: -14.875186920166016

Token 514: ' self' (ID: 1051)
  Prédit: 'bc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' → logprob: -0.00783599354326725
    2. 'rest' → logprob: -6.132835865020752
    3. 'prefix' → logprob: -6.632835865020752
    4. 'self' (adapté à ' self') → logprob: -6.757835865020752
    5. '       ' → logprob: -7.007835865020752
    6. 'line' → logprob: -7.132835865020752
    7. 'code' → logprob: -8.13283634185791
    8. ' bc' → logprob: -8.25783634185791
    9. 'content' → logprob: -8.75783634185791
    10. 'current' → logprob: -9.00783634185791

Token 515: '.br' (ID: 24828)
  Prédit: '.br'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.br' → logprob: -9.984787902794778e-05
    2. 'br' → logprob: -10.250100135803223
    3. '.b' → logprob: -10.875100135803223
    4. ' .' → logprob: -11.000100135803223
    5. '.' → logprob: -11.250100135803223
    6. '	br' → logprob: -11.625100135803223
    7. '.Br' → logprob: -13.250100135803223
    8. '   ' → logprob: -14.000100135803223
    9. 'Bracket' → logprob: -14.000100135803223
    10. '           ' → logprob: -14.000100135803223

Token 516: 'acket' (ID: 8480)
  Prédit: 'acket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acket' → logprob: -0.00029351349803619087
    2. 'a' → logprob: -8.375293731689453
    3. 'ack' → logprob: -10.000293731689453
    4. 'ACKET' → logprob: -12.500293731689453
    5. 'asket' → logprob: -12.750293731689453
    6. 'r' → logprob: -12.750293731689453
    7. '```' → logprob: -13.000293731689453
    8. 'e' → logprob: -13.750293731689453
    9. 'br' → logprob: -14.000293731689453
    10. 'Bracket' → logprob: -14.625293731689453

Token 517: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -2.4868770196917467e-05
    2. 'c' → logprob: -11.000024795532227
    3. '_counter' → logprob: -12.000024795532227
    4. 'Counters' → logprob: -14.000024795532227
    5. 'counter' → logprob: -14.875024795532227
    6. '       ' → logprob: -15.875024795532227
    7. '_' → logprob: -16.000024795532227
    8. 'Counter' → logprob: -16.250024795532227
    9. 's' → logprob: -16.375024795532227
    10. '           ' → logprob: -16.625024795532227

Token 518: 'ounters' (ID: 36761)
  Prédit: 'ounters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounters' → logprob: -0.0013655929360538721
    2. 'ount' → logprob: -7.251365661621094
    3. 'ounter' → logprob: -7.376365661621094
    4. 'c' → logprob: -10.751365661621094
    5. 'oun' → logprob: -13.001365661621094
    6. 'ou' → logprob: -13.876365661621094
    7. 'on' → logprob: -14.501365661621094
    8. 'ont' → logprob: -14.501365661621094
    9. '   ' → logprob: -14.626365661621094
    10. 'out' → logprob: -15.126365661621094

Token 519: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.869017852295656e-06
    2. '.' → logprob: -12.000006675720215
    3. ' .' → logprob: -14.625006675720215
    4. 'append' → logprob: -15.625006675720215
    5. '.app' → logprob: -18.00000762939453
    6. '.Append' → logprob: -19.12500762939453
    7. '.ap' → logprob: -19.12500762939453
    8. ').' → logprob: -20.00000762939453
    9. '().' → logprob: -21.25000762939453
    10. '].' → logprob: -21.25000762939453

Token 520: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.04945625737309456
    2. 'bc' → logprob: -3.0494563579559326
    3. ' bc' → logprob: -7.2994561195373535
    4. '(' → logprob: -8.674456596374512
    5. 'b' → logprob: -11.049456596374512
    6. '_bc' → logprob: -12.424456596374512
    7. ' (' → logprob: -14.424456596374512
    8. '.bc' → logprob: -14.674456596374512
    9. '(
' → logprob: -15.674456596374512
    10. '(br' → logprob: -15.924456596374512

Token 521: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00044949972652830184
    2. '.clone' → logprob: -7.7504496574401855
    3. 'clone' → logprob: -11.125449180603027
    4. '.c' → logprob: -13.125449180603027
    5. '.' → logprob: -13.875449180603027
    6. ').' → logprob: -15.375449180603027
    7. '
' → logprob: -16.250450134277344
    8. '.Clone' → logprob: -16.250450134277344
    9. '.copy' → logprob: -16.375450134277344
    10. ')' → logprob: -16.375450134277344

Token 522: '.clone' (ID: 29419)
  Prédit: '.clone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.clone' → logprob: -0.00014323067443910986
    2. '.' → logprob: -8.875143051147461
    3. ' .' → logprob: -13.500143051147461
    4. '.cl' → logprob: -14.125143051147461
    5. '.
' → logprob: -14.375143051147461
    6. '
' → logprob: -15.125143051147461
    7. ').' → logprob: -15.750143051147461
    8. 'clone' → logprob: -16.50014305114746
    9. '.copy' → logprob: -16.75014305114746
    10. ')' → logprob: -16.87514305114746

Token 523: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.02236945554614067
    2. ')
' → logprob: -3.897369384765625
    3. '())' → logprob: -6.772369384765625
    4. ')' → logprob: -8.522369384765625
    5. '()
' → logprob: -8.772369384765625
    6. '()' → logprob: -8.897369384765625
    7. '())

' → logprob: -9.147369384765625
    8. '())
' → logprob: -10.147369384765625
    9. '       ' → logprob: -10.772369384765625
    10. '           ' → logprob: -11.397369384765625

Token 524: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02110767737030983
    2. '       ' → logprob: -4.3961076736450195
    3. 'bc' → logprob: -4.7711076736450195
    4. ' bc' → logprob: -10.27110767364502
    5. 'br' → logprob: -10.89610767364502
    6. 'b' → logprob: -11.14610767364502
    7. '   ' → logprob: -11.52110767364502
    8. '
' → logprob: -12.77110767364502
    9. '	   ' → logprob: -12.77110767364502
    10. '               ' → logprob: -13.27110767364502

Token 525: ' bc' (ID: 51743)
  Prédit: 'bc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' (adapté à ' bc') → logprob: -0.0023212952073663473
    2. '       ' → logprob: -6.627321243286133
    3. '           ' → logprob: -7.127321243286133
    4. ' bc' → logprob: -8.627321243286133
    5. '   ' → logprob: -12.502321243286133
    6. 'br' → logprob: -12.627321243286133
    7. '_bc' → logprob: -13.502321243286133
    8. 'b' → logprob: -13.752321243286133
    9. ' ' → logprob: -13.752321243286133
    10. '
' → logprob: -14.502321243286133

Token 526: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -13.875000953674316
    3. 'update' → logprob: -15.625000953674316
    4. ' .' → logprob: -16.750001907348633
    5. '   ' → logprob: -18.000001907348633
    6. '       ' → logprob: -18.125001907348633
    7. '_.' → logprob: -19.750001907348633
    8. ').' → logprob: -20.750001907348633
    9. '           ' → logprob: -21.000001907348633
    10. '`.' → logprob: -21.250001907348633

Token 527: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -1.6240566083070007e-06
    2. 'from' → logprob: -13.375001907348633
    3. '_FROM' → logprob: -20.000001907348633
    4. '_for' → logprob: -20.250001907348633
    5. '```' → logprob: -20.250001907348633
    6. '_to' → logprob: -20.750001907348633
    7. 'From' → logprob: -21.000001907348633
    8. '_' → logprob: -21.250001907348633
    9. '`' → logprob: -21.500001907348633
    10. ')_' → logprob: -21.750001907348633

Token 528: '_line' (ID: 14418)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.04884328693151474
    2. '_line' → logprob: -3.0488433837890625
    3. '(line' → logprob: -8.423843383789062
    4. ' line' → logprob: -10.923843383789062
    5. '[line' → logprob: -12.173843383789062
    6. 'Line' → logprob: -13.048843383789062
    7. 'the' → logprob: -13.048843383789062
    8. '=line' → logprob: -13.298843383789062
    9. 'lin' → logprob: -13.798843383789062
    10. '```' → logprob: -14.048843383789062

Token 529: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0001628956088097766
    2. 'line' → logprob: -9.125163078308105
    3. '(' → logprob: -9.875163078308105
    4. ' line' → logprob: -13.250163078308105
    5. '(
' → logprob: -14.625163078308105
    6. '[line' → logprob: -16.12516212463379
    7. ' (' → logprob: -16.50016212463379
    8. '   ' → logprob: -16.87516212463379
    9. '#line' → logprob: -17.62516212463379
    10. '(lines' → logprob: -17.75016212463379

Token 530: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00013440960901789367
    2. ')' → logprob: -9.250134468078613
    3. '[' → logprob: -10.250134468078613
    4. '[line' → logprob: -13.500134468078613
    5. '[index' → logprob: -15.375134468078613
    6. '[:' → logprob: -15.625134468078613
    7. '[in' → logprob: -15.625134468078613
    8. '[j' → logprob: -16.000133514404297
    9. '[ii' → logprob: -16.250133514404297
    10. ')
' → logprob: -16.750133514404297

Token 531: ':]' (ID: 67377)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010647247545421124
    2. '])' → logprob: -7.501064777374268
    3. ':])
' → logprob: -7.626064777374268
    4. ':].' → logprob: -11.25106430053711
    5. ')' → logprob: -12.62606430053711
    6. ':]' → logprob: -12.75106430053711
    7. ':)' → logprob: -14.25106430053711
    8. ' :' → logprob: -14.37606430053711
    9. ':],' → logprob: -14.50106430053711
    10. ' ])' → logprob: -14.87606430053711

Token 532: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.073596548754722e-05
    2. ')
' → logprob: -10.00005054473877
    3. '<|end|>' → logprob: -12.87505054473877
    4. ' )' → logprob: -13.62505054473877
    5. '       ' → logprob: -14.00005054473877
    6. ')return' → logprob: -15.12505054473877
    7. '<|end|>' → logprob: -16.375051498413086
    8. '           ' → logprob: -16.625051498413086
    9. ')

' → logprob: -16.750051498413086
    10. '))' → logprob: -16.750051498413086

Token 533: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 534: ' Stylish' (ID: 144990)
  Prédit: 'Styl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Styl' → logprob: -0.5252718329429626
    2. 'Solution' → logprob: -1.6502718925476074
    3. 'Test' → logprob: -3.0252718925476074
    4. 'Indent' → logprob: -3.9002718925476074
    5. ' Stylish' → logprob: -4.025271892547607
    6. 'Unknown' → logprob: -4.275271892547607
    7. 'Candidate' → logprob: -4.400271892547607
    8. ' Solution' → logprob: -4.650271892547607
    9. 'Solver' → logprob: -4.650271892547607
    10. 'Style' → logprob: -4.900271892547607

Token 535: 'Master' (ID: 18137)
  Prédit: 'Program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Program' → logprob: -0.020838597789406776
    2. 'Solver' → logprob: -4.395838737487793
    3. 'Solution' → logprob: -6.270838737487793
    4. 'Predict' → logprob: -6.520838737487793
    5. 'Guess' → logprob: -7.145838737487793
    6. 'Calculator' → logprob: -7.520838737487793
    7. 'Style' → logprob: -7.645838737487793
    8. 'Method' → logprob: -7.895838737487793
    9. 'Coder' → logprob: -8.145838737487793
    10. 'User' → logprob: -8.770838737487793

Token 536: 'Finder' (ID: 42976)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04301700368523598
    2. ':
' → logprob: -3.1680169105529785
    3. '(S' → logprob: -11.668017387390137
    4. ':

' → logprob: -13.168017387390137
    5. '(' → logprob: -13.543017387390137
    6. '<|end|>' → logprob: -14.043017387390137
    7. '(object' → logprob: -14.168017387390137
    8. '   ' → logprob: -14.293017387390137
    9. 'def' → logprob: -14.418017387390137
    10. ' :' → logprob: -14.418017387390137

Token 537: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008704868378117681
    2. ':
' → logprob: -7.125870704650879
    3. ' :' → logprob: -9.750870704650879
    4. '(object' → logprob: -13.125870704650879
    5. '():' → logprob: -13.500870704650879
    6. ':

' → logprob: -13.750870704650879
    7. ':def' → logprob: -13.875870704650879
    8. '<|end|>' → logprob: -13.875870704650879
    9. ' :
' → logprob: -14.750870704650879
    10. '):' → logprob: -14.875870704650879

Token 538: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020617332309484482
    2. ' def' → logprob: -3.8956172466278076
    3. 'def' → logprob: -9.645617485046387
    4. '
' → logprob: -12.770617485046387
    5. '    
' → logprob: -13.145617485046387
    6. ':' → logprob: -13.770617485046387
    7. ',' → logprob: -13.895617485046387
    8. '	def' → logprob: -14.270617485046387
    9. '<|end|>' → logprob: -14.770617485046387
    10. '```' → logprob: -15.020617485046387

Token 539: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.03215665742754936
    2. 'def' (adapté à ' def') → logprob: -3.5321567058563232
    3. '   ' → logprob: -6.032156467437744
    4. '	def' → logprob: -13.907156944274902
    5. '```' → logprob: -14.282156944274902
    6. '  ' → logprob: -14.657156944274902
    7. '    ' → logprob: -15.032156944274902
    8. ' ' → logprob: -15.032156944274902
    9. ' __' → logprob: -15.157156944274902
    10. '
' → logprob: -16.782155990600586

Token 540: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.09351474791765213
    2. ' def' → logprob: -2.5935146808624268
    3. ' init' → logprob: -4.593514919281006
    4. 'init' → logprob: -5.718514919281006
    5. '__' → logprob: -7.718514919281006
    6. '_init' → logprob: -7.843514919281006
    7. 'def' → logprob: -8.468514442443848
    8. ' ' → logprob: -11.093514442443848
    9. ' _' → logprob: -11.343514442443848
    10. ' ___' → logprob: -11.593514442443848

Token 541: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.5776860184123507e-06
    2. 'def' → logprob: -13.12500286102295
    3. 'new' → logprob: -14.87500286102295
    4. '__' → logprob: -16.750001907348633
    5. 'in' → logprob: -17.125001907348633
    6. '```' → logprob: -17.875001907348633
    7. 'ini' → logprob: -18.000001907348633
    8. 'int' → logprob: -18.000001907348633
    9. '(init' → logprob: -18.125001907348633
    10. 'i' → logprob: -18.250001907348633

Token 542: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3541412949562073
    2. '__(' → logprob: -1.2291412353515625
    3. ' (' → logprob: -5.6041412353515625
    4. '(' → logprob: -6.9791412353515625
    5. 'self' → logprob: -8.104141235351562
    6. '
' → logprob: -9.104141235351562
    7. '_(' → logprob: -9.354141235351562
    8. ')(' → logprob: -9.354141235351562
    9. '   ' → logprob: -9.479141235351562
    10. '<>(' → logprob: -9.729141235351562

Token 543: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.191489642835222e-05
    2. ')' → logprob: -11.500041961669922
    3. ' self' → logprob: -11.500041961669922
    4. '
' → logprob: -11.750041961669922
    5. '):
' → logprob: -11.750041961669922
    6. ',' → logprob: -12.875041961669922
    7. ')(' → logprob: -13.750041961669922
    8. '(self' → logprob: -14.375041961669922
    9. '   ' → logprob: -14.500041961669922
    10. '__(' → logprob: -15.000041961669922

Token 544: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008174888207577169
    2. 'self' → logprob: -7.25081729888916
    3. ' ,' → logprob: -9.50081729888916
    4. ' self' → logprob: -11.50081729888916
    5. ',
' → logprob: -12.12581729888916
    6. '):
' → logprob: -12.25081729888916
    7. ')' → logprob: -12.75081729888916
    8. '(self' → logprob: -12.87581729888916
    9. ',self' → logprob: -13.00081729888916
    10. '<|end|>' → logprob: -13.25081729888916

Token 545: ' p' (ID: 275)
  Prédit: 'known'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'known' → logprob: -0.7753189206123352
    2. 'master' → logprob: -2.6503188610076904
    3. 'styles' → logprob: -2.7753188610076904
    4. 'styl' → logprob: -2.9003188610076904
    5. 'sample' → logprob: -3.1503188610076904
    6. ' master' → logprob: -3.5253188610076904
    7. 'self' → logprob: -3.7753188610076904
    8. 'R' → logprob: -3.7753188610076904
    9. 'possible' → logprob: -3.9003188610076904
    10. 'program' → logprob: -3.9003188610076904

Token 546: '_program' (ID: 58929)
  Prédit: 'rogram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rogram' → logprob: -0.0008609615033492446
    2. 'ro' → logprob: -7.250861167907715
    3. 'rog' → logprob: -9.625861167907715
    4. ')' → logprob: -10.750861167907715
    5. 'r' → logprob: -11.000861167907715
    6. 'ython' → logprob: -11.125861167907715
    7. 'ar' → logprob: -11.750861167907715
    8. 'ogram' → logprob: -12.000861167907715
    9. 'lines' → logprob: -13.250861167907715
    10. 'layers' → logprob: -13.375861167907715

Token 547: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2318585216999054
    2. '):
' → logprob: -2.481858491897583
    3. 'rogram' → logprob: -2.731858491897583
    4. ':' → logprob: -2.856858491897583
    5. ',' → logprob: -8.106858253479004
    6. 'ython' → logprob: -8.481858253479004
    7. 'ogram' → logprob: -9.606858253479004
    8. 'gram' → logprob: -10.231858253479004
    9. 'ram' → logprob: -10.356858253479004
    10. ')' → logprob: -10.606858253479004

Token 548: ' Stylish' (ID: 144990)
  Prédit: 'Styl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Styl' → logprob: -0.0002547832846175879
    2. ' Stylish' → logprob: -8.50025463104248
    3. 'St' → logprob: -10.12525463104248
    4. 'Sty' → logprob: -12.00025463104248
    5. 'Styled' → logprob: -13.37525463104248
    6. 'styl' → logprob: -13.50025463104248
    7. ')' → logprob: -14.12525463104248
    8. ' ' → logprob: -14.50025463104248
    9. 'Beautiful' → logprob: -14.62525463104248
    10. '
' → logprob: -15.75025463104248

Token 549: 'Program' (ID: 13587)
  Prédit: 'Program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Program' → logprob: -8.7689099018462e-05
    2. 'rogram' → logprob: -9.50008773803711
    3. 'program' → logprob: -11.75008773803711
    4. '_program' → logprob: -12.87508773803711
    5. ' Program' → logprob: -13.62508773803711
    6. 'Programming' → logprob: -14.87508773803711
    7. '.Program' → logprob: -15.12508773803711
    8. ')' → logprob: -15.75008773803711
    9. '
' → logprob: -16.25008773803711
    10. ' program' → logprob: -16.62508773803711

Token 550: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.49798384308815
    2. '):
' → logprob: -0.9979838132858276
    3. ',' → logprob: -3.747983932495117
    4. '   ' → logprob: -10.872983932495117
    5. '):
' → logprob: -11.122983932495117
    6. '       ' → logprob: -11.497983932495117
    7. ')' → logprob: -11.997983932495117
    8. ' ):' → logprob: -13.372983932495117
    9. '):

' → logprob: -13.372983932495117
    10. ':' → logprob: -13.622983932495117

Token 551: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004385844804346561
    2. 'self' → logprob: -5.504385948181152
    3. '   ' → logprob: -8.379385948181152
    4. ' self' → logprob: -9.879385948181152
    5. ',' → logprob: -11.129385948181152
    6. 'def' → logprob: -12.254385948181152
    7. '
' → logprob: -12.754385948181152
    8. ')' → logprob: -13.879385948181152
    9. '(self' → logprob: -14.129385948181152
    10. '):
' → logprob: -14.629385948181152

Token 552: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0043617598712444305
    2. '       ' → logprob: -5.754361629486084
    3. ' self' → logprob: -6.754361629486084
    4. 'p' → logprob: -11.004362106323242
    5. ' p' → logprob: -14.629362106323242
    6. '   ' → logprob: -15.254362106323242
    7. 'import' → logprob: -16.129362106323242
    8. 'class' → logprob: -16.254362106323242
    9. 'from' → logprob: -17.254362106323242
    10. '	self' → logprob: -17.754362106323242

Token 553: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.004153906833380461
    2. '.' → logprob: -5.879153728485107
    3. '.program' → logprob: -7.379153728485107
    4. 'p' → logprob: -7.504153728485107
    5. ' p' → logprob: -9.629154205322266
    6. 'program' → logprob: -9.754154205322266
    7. ' .' → logprob: -10.129154205322266
    8. '   ' → logprob: -13.129154205322266
    9. '_program' → logprob: -13.879154205322266
    10. 'Program' → logprob: -14.254154205322266

Token 554: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -0.0001987722353078425
    2. 'rogram' → logprob: -8.625198364257812
    3. 'program' → logprob: -11.375198364257812
    4. '_' → logprob: -12.000198364257812
    5. '_master' → logprob: -14.625198364257812
    6. ' _' → logprob: -14.750198364257812
    7. '_PROGRAM' → logprob: -16.250198364257812
    8. '_pro' → logprob: -16.250198364257812
    9. 'p' → logprob: -16.375198364257812
    10. '```' → logprob: -16.375198364257812

Token 555: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2256489396095276
    2. ' =' → logprob: -1.6006488800048828
    3. ' ' → logprob: -9.350648880004883
    4. 'rogram' → logprob: -9.475648880004883
    5. '=p' → logprob: -10.600648880004883
    6. '   ' → logprob: -10.850648880004883
    7. '.program' → logprob: -12.350648880004883
    8. 'p' → logprob: -12.475648880004883
    9. '.' → logprob: -12.600648880004883
    10. '=
' → logprob: -12.725648880004883

Token 556: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0485873706638813
    2. ' p' → logprob: -3.0485873222351074
    3. ' ' → logprob: -17.673587799072266
    4. '	p' → logprob: -18.298587799072266
    5. '_p' → logprob: -18.798587799072266
    6. '   ' → logprob: -18.923587799072266
    7. '       ' → logprob: -20.048587799072266
    8. 'program' → logprob: -20.548587799072266
    9. '  ' → logprob: -20.798587799072266
    10. ' ' → logprob: -20.923587799072266

Token 557: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -0.0003273600013926625
    2. 'program' → logprob: -8.625327110290527
    3. 'rogram' → logprob: -8.875327110290527
    4. 'p' → logprob: -12.250327110290527
    5. '_' → logprob: -14.125327110290527
    6. '_PROGRAM' → logprob: -14.250327110290527
    7. ' p' → logprob: -14.500327110290527
    8. 'Program' → logprob: -14.500327110290527
    9. ' _' → logprob: -15.625327110290527
    10. '_master' → logprob: -16.250328063964844

Token 558: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11998385936021805
    2. '   ' → logprob: -2.2449839115142822
    3. '

' → logprob: -5.869983673095703
    4. '    
' → logprob: -6.119983673095703
    5. '       ' → logprob: -7.119983673095703
    6. '<|end|>' → logprob: -7.369983673095703
    7. 'def' → logprob: -7.994983673095703
    8. '        
' → logprob: -8.744983673095703
    9. '<|end|>' → logprob: -8.994983673095703
    10. ' def' → logprob: -11.494983673095703

Token 559: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11150956153869629
    2. 'def' → logprob: -2.8615095615386963
    3. '   ' → logprob: -3.8615095615386963
    4. '       ' → logprob: -4.111509323120117
    5. '

' → logprob: -5.236509323120117
    6. ' def' → logprob: -5.861509323120117
    7. '<|end|>' → logprob: -6.111509323120117
    8. '<|end|>' → logprob: -8.861509323120117
    9. '    
' → logprob: -8.986509323120117
    10. '	def' → logprob: -9.361509323120117

Token 560: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00122379744425416
    2. 'def' → logprob: -7.001223564147949
    3. '       ' → logprob: -8.50122356414795
    4. ' self' → logprob: -9.75122356414795
    5. 'p' → logprob: -10.87622356414795
    6. '
' → logprob: -11.12622356414795
    7. '#' → logprob: -11.87622356414795
    8. '   ' → logprob: -12.12622356414795
    9. 'pass' → logprob: -13.50122356414795
    10. '        
' → logprob: -14.00122356414795

Token 561: '.valid' (ID: 41805)
  Prédit: '.pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.5221879482269287
    2. '.' → logprob: -1.8971879482269287
    3. '.styles' → logprob: -2.1471879482269287
    4. '.c' → logprob: -2.6471879482269287
    5. '.valid' → logprob: -4.147188186645508
    6. '.p' → logprob: -4.147188186645508
    7. 'styles' → logprob: -4.647188186645508
    8. 'possible' → logprob: -5.022188186645508
    9. '.style' → logprob: -5.647188186645508
    10. ' styles' → logprob: -5.897188186645508

Token 562: '_styles' (ID: 95693)
  Prédit: '_styles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_styles' → logprob: -0.0009225384565070271
    2. '_indent' → logprob: -8.250922203063965
    3. 'styles' → logprob: -8.375922203063965
    4. '_patterns' → logprob: -9.125922203063965
    5. '_models' → logprob: -9.500922203063965
    6. 's' → logprob: -9.750922203063965
    7. '_com' → logprob: -10.375922203063965
    8. '_ind' → logprob: -10.500922203063965
    9. '_candidates' → logprob: -10.625922203063965
    10. 'Styles' → logprob: -11.125922203063965

Token 563: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022197663784027
    2. '=' → logprob: -2.350221872329712
    3. '=[]' → logprob: -11.475221633911133
    4. ':' → logprob: -13.100221633911133
    5. ' ' → logprob: -13.475221633911133
    6. 's' → logprob: -13.725221633911133
    7. '=set' → logprob: -15.850221633911133
    8. '   ' → logprob: -16.225221633911133
    9. '=[]
' → logprob: -16.850221633911133
    10. '<|end|>' → logprob: -16.975221633911133

Token 564: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.04888143017888069
    2. 'set' → logprob: -3.0488815307617188
    3. '{}' → logprob: -8.673881530761719
    4. ' []' → logprob: -9.798881530761719
    5. '[]
' → logprob: -9.923881530761719
    6. ' set' → logprob: -11.798881530761719
    7. '[]}' → logprob: -12.173881530761719
    8. '{' → logprob: -13.298881530761719
    9. '   ' → logprob: -13.798881530761719
    10. '[' → logprob: -14.048881530761719

Token 565: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5771157741546631
    2. 'def' → logprob: -0.8271157741546631
    3. ' def' → logprob: -7.327116012573242
    4. '
' → logprob: -7.577116012573242
    5. '    
' → logprob: -12.952116012573242
    6. '	def' → logprob: -12.952116012573242
    7. '       ' → logprob: -14.327116012573242
    8. '        
' → logprob: -15.452116012573242
    9. 'from' → logprob: -15.702116012573242
    10. '

' → logprob: -16.202116012573242

Token 566: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007887827814556658
    2. ' def' → logprob: -7.250788688659668
    3. '   ' → logprob: -9.500788688659668
    4. '
' → logprob: -12.500788688659668
    5. '	def' → logprob: -15.125788688659668
    6. ' ' → logprob: -17.875789642333984
    7. 'from' → logprob: -17.875789642333984
    8. 'import' → logprob: -18.125789642333984
    9. '    
' → logprob: -18.500789642333984
    10. '       ' → logprob: -19.250789642333984

Token 567: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.6946480870246887
    2. 'find' → logprob: -0.6946480870246887
    3. 'search' → logprob: -7.319648265838623
    4. 'generate' → logprob: -8.569647789001465
    5. ' search' → logprob: -9.569647789001465
    6. 'validate' → logprob: -10.194647789001465
    7. ' generate' → logprob: -10.194647789001465
    8. 'discover' → logprob: -10.194647789001465
    9. 'solve' → logprob: -10.194647789001465
    10. 'try' → logprob: -10.444647789001465

Token 568: '_all' (ID: 13305)
  Prédit: '_styles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_styles' → logprob: -0.09504645317792892
    2. '_valid' → logprob: -3.7200465202331543
    3. '_possible' → logprob: -3.7200465202331543
    4. '_' → logprob: -3.9700465202331543
    5. '(self' → logprob: -4.470046520233154
    6. '_self' → logprob: -5.595046520233154
    7. '_all' → logprob: -5.970046520233154
    8. '_best' → logprob: -6.970046520233154
    9. '_candidates' → logprob: -7.220046520233154
    10. '(' → logprob: -7.220046520233154

Token 569: '_valid' (ID: 23321)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.410357266664505
    2. '_styles' → logprob: -1.1603572368621826
    3. '_valid' → logprob: -4.160357475280762
    4. '(' → logprob: -5.160357475280762
    5. '_possible' → logprob: -7.660357475280762
    6. '_' → logprob: -7.910357475280762
    7. '_self' → logprob: -7.910357475280762
    8. 'styles' → logprob: -8.660357475280762
    9. 'self' → logprob: -9.035357475280762
    10. '_candidates' → logprob: -9.785357475280762

Token 570: '_styles' (ID: 95693)
  Prédit: '_styles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_styles' → logprob: -0.00607194472104311
    2. '(self' → logprob: -6.256072044372559
    3. 'styles' → logprob: -6.256072044372559
    4. '_indent' → logprob: -6.381072044372559
    5. '_ind' → logprob: -8.131072044372559
    6. '_' → logprob: -9.131072044372559
    7. 'self' → logprob: -10.381072044372559
    8. '(styles' → logprob: -10.506072044372559
    9. '(' → logprob: -11.381072044372559
    10. 'indent' → logprob: -11.881072044372559

Token 571: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.3213025744771585e-05
    2. '(' → logprob: -10.500033378601074
    3. '   ' → logprob: -12.500033378601074
    4. 'self' → logprob: -14.000033378601074
    5. ' (' → logprob: -14.125033378601074
    6. '       ' → logprob: -16.125032424926758
    7. '(s' → logprob: -16.250032424926758
    8. '(
' → logprob: -16.750032424926758
    9. 'def' → logprob: -18.500032424926758
    10. ' ' → logprob: -19.250032424926758

Token 572: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45976459980010986
    2. '):' → logprob: -1.5847645998001099
    3. '):
' → logprob: -1.8347645998001099
    4. 'self' → logprob: -5.95976448059082
    5. '(self' → logprob: -7.58476448059082
    6. ' ,' → logprob: -8.08476448059082
    7. ' ):' → logprob: -8.58476448059082
    8. '   ' → logprob: -9.20976448059082
    9. ' ):
' → logprob: -9.58476448059082
    10. '):
' → logprob: -10.33476448059082

Token 573: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019385118503123522
    2. ' for' → logprob: -6.376938343048096
    3. 'for' → logprob: -8.376938819885254
    4. '   ' → logprob: -13.501938819885254
    5. '
' → logprob: -13.626938819885254
    6. 'styles' → logprob: -14.001938819885254
    7. ',' → logprob: -14.126938819885254
    8. '```' → logprob: -14.251938819885254
    9. 'def' → logprob: -15.501938819885254
    10. ' ' → logprob: -15.501938819885254

Token 574: ' p' (ID: 275)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05927503854036331
    2. ' for' → logprob: -3.3092751502990723
    3. 'self' → logprob: -4.434275150299072
    4. '       ' → logprob: -5.059275150299072
    5. 'styles' → logprob: -7.059275150299072
    6. 'R' → logprob: -7.184275150299072
    7. ' self' → logprob: -7.809275150299072
    8. 'valid' → logprob: -8.059274673461914
    9. 'possible' → logprob: -8.809274673461914
    10. 'from' → logprob: -10.184274673461914

Token 575: ' =' (ID: 314)
  Prédit: '_program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -0.9605163335800171
    2. 'rogram' → logprob: -1.085516333580017
    3. ' =' → logprob: -2.2105164527893066
    4. '   ' → logprob: -2.7105164527893066
    5. '       ' → logprob: -3.3355164527893066
    6. '_lines' → logprob: -3.4605164527893066
    7. '=' → logprob: -3.9605164527893066
    8. 'program' → logprob: -5.085516452789307
    9. '           ' → logprob: -5.835516452789307
    10. 'lines' → logprob: -6.460516452789307

Token 576: ' len' (ID: 4631)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.027381794527173042
    2. ' self' → logprob: -3.6523818969726562
    3. 'len' → logprob: -7.652381896972656
    4. '
' → logprob: -8.902381896972656
    5. '       ' → logprob: -9.027381896972656
    6. ' ' → logprob: -9.777381896972656
    7. '   ' → logprob: -9.902381896972656
    8. '           ' → logprob: -10.152381896972656
    9. 'rogram' → logprob: -10.152381896972656
    10. '(self' → logprob: -10.777381896972656

Token 577: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.704273118884885e-07
    2. 'self' → logprob: -14.375000953674316
    3. '(' → logprob: -17.0
    4. '=self' → logprob: -17.25
    5. '(p' → logprob: -17.75
    6. '(this' → logprob: -18.25
    7. '[self' → logprob: -18.5
    8. ' (' → logprob: -19.625
    9. 'p' → logprob: -20.5
    10. ' self' → logprob: -21.25

Token 578: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -3.650518920039758e-06
    2. '.' → logprob: -13.000003814697266
    3. ' .' → logprob: -14.000003814697266
    4. 'p' → logprob: -15.625003814697266
    5. ').' → logprob: -16.625003814697266
    6. ' p' → logprob: -17.125003814697266
    7. '.valid' → logprob: -17.250003814697266
    8. '.
' → logprob: -18.000003814697266
    9. '

' → logprob: -18.375003814697266
    10. '
' → logprob: -18.375003814697266

Token 579: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -0.00043579499470070004
    2. '.program' → logprob: -8.625435829162598
    3. 'rogram' → logprob: -9.000435829162598
    4. 'program' → logprob: -9.500435829162598
    5. '.p' → logprob: -10.750435829162598
    6. 'p' → logprob: -11.000435829162598
    7. '_master' → logprob: -11.750435829162598
    8. '_PROGRAM' → logprob: -12.250435829162598
    9. ' p' → logprob: -14.250435829162598
    10. 'r' → logprob: -14.375435829162598

Token 580: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.47410520911216736
    2. '.ind' → logprob: -0.9741052389144897
    3. '.' → logprob: -11.474104881286621
    4. ' .' → logprob: -11.724104881286621
    5. '.s' → logprob: -12.974104881286621
    6. '.br' → logprob: -12.974104881286621
    7. '.indices' → logprob: -13.349104881286621
    8. ').' → logprob: -14.474104881286621
    9. '.inter' → logprob: -14.849104881286621
    10. '.line' → logprob: -14.974104881286621

Token 581: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017149604856967926
    2. ')
' → logprob: -4.142149448394775
    3. ' )' → logprob: -7.392149448394775
    4. '       ' → logprob: -7.892149448394775
    5. '   ' → logprob: -9.642149925231934
    6. ' )
' → logprob: -10.517149925231934
    7. ')-' → logprob: -11.142149925231934
    8. '-' → logprob: -12.142149925231934
    9. ' -' → logprob: -12.392149925231934
    10. ')

' → logprob: -13.017149925231934

Token 582: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033242227509617805
    2. 'for' → logprob: -5.878324031829834
    3. ' for' → logprob: -7.878324031829834
    4. '
' → logprob: -9.003324508666992
    5. '        
' → logprob: -11.378324508666992
    6. '   ' → logprob: -12.753324508666992
    7. ',' → logprob: -14.003324508666992
    8. '	for' → logprob: -14.503324508666992
    9. '	' → logprob: -14.878324508666992
    10. '           ' → logprob: -15.628324508666992

Token 583: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07670856267213821
    2. 'self' (adapté à ' self') → logprob: -2.9517085552215576
    3. '       ' → logprob: -4.451708793640137
    4. 'styles' → logprob: -5.826708793640137
    5. ' for' → logprob: -5.951708793640137
    6. '
' → logprob: -6.201708793640137
    7. 'valid' → logprob: -6.826708793640137
    8. 'results' → logprob: -7.451708793640137
    9. '   ' → logprob: -8.701708793640137
    10. ' self' → logprob: -8.951708793640137

Token 584: '.p' (ID: 1201)
  Prédit: '.valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.valid' → logprob: -0.00017278951418120414
    2. '.p' → logprob: -8.87517261505127
    3. 'valid' → logprob: -10.50017261505127
    4. '_valid' → logprob: -14.00017261505127
    5. '.pos' → logprob: -14.25017261505127
    6. '.' → logprob: -14.37517261505127
    7. '
' → logprob: -14.50017261505127
    8. 'For' → logprob: -14.62517261505127
    9. '	valid' → logprob: -14.75017261505127
    10. '   ' → logprob: -15.37517261505127

Token 585: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -0.00018029935017693788
    2. 'rogram' → logprob: -9.1251802444458
    3. 'program' → logprob: -9.6251802444458
    4. '_master' → logprob: -13.0001802444458
    5. ' =' → logprob: -14.3751802444458
    6. 'Program' → logprob: -14.5001802444458
    7. '_PROGRAM' → logprob: -14.6251802444458
    8. '_style' → logprob: -15.3751802444458
    9. 'for' → logprob: -15.5001802444458
    10. '.program' → logprob: -15.7501802444458

Token 586: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -5.9153885558771435e-06
    2. ' .' → logprob: -13.000005722045898
    3. '.' → logprob: -14.250005722045898
    4. 'parse' → logprob: -14.625005722045898
    5. '.compute' → logprob: -14.750005722045898
    6. '.lines' → logprob: -14.875005722045898
    7. '   ' → logprob: -15.125005722045898
    8. '.ind' → logprob: -15.125005722045898
    9. '=parse' → logprob: -15.250005722045898
    10. '.process' → logprob: -16.0000057220459

Token 587: '_indent' (ID: 196408)
  Prédit: '_indent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indent' → logprob: -1.2664456789934775e-06
    2. 'indent' → logprob: -14.000000953674316
    3. '_ind' → logprob: -15.125000953674316
    4. '(indent' → logprob: -17.125001907348633
    5. '_' → logprob: -17.750001907348633
    6. '_ident' → logprob: -18.125001907348633
    7. '-indent' → logprob: -18.250001907348633
    8. ' indent' → logprob: -18.375001907348633
    9. 'Indent' → logprob: -18.500001907348633
    10. '_
' → logprob: -19.250001907348633

Token 588: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -3.128163257315464e-07
    2. 'ation' → logprob: -15.875
    3. '_' → logprob: -16.625
    4. '   ' → logprob: -18.375
    5. 'ATIONS' → logprob: -18.375
    6. 'itations' → logprob: -18.625
    7. 'entions' → logprob: -19.0
    8. 'a' → logprob: -19.25
    9. '
' → logprob: -19.5
    10. '_indent' → logprob: -19.875

Token 589: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -7.3458322731312364e-06
    2. 'and' → logprob: -11.875007629394531
    3. ' and' → logprob: -16.37500762939453
    4. '
' → logprob: -16.62500762939453
    5. '...' → logprob: -17.25000762939453
    6. '_' → logprob: -17.75000762939453
    7. 's' → logprob: -18.12500762939453
    8. '_an' → logprob: -18.50000762939453
    9. '```' → logprob: -18.87500762939453
    10. 'andr' → logprob: -19.25000762939453

Token 590: '_prefix' (ID: 33197)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -4.56102097814437e-05
    2. '_prefix' → logprob: -10.000045776367188
    3. ' prefixes' → logprob: -15.625045776367188
    4. 'refix' → logprob: -17.375045776367188
    5. ' prefix' → logprob: -17.625045776367188
    6. 'Prefixes' → logprob: -20.500045776367188
    7. '
' → logprob: -20.625045776367188
    8. 'br' → logprob: -20.625045776367188
    9. '(prefix' → logprob: -20.875045776367188
    10. '```' → logprob: -22.125045776367188

Token 591: 'es' (ID: 268)
  Prédit: 'ations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.36782217025756836
    2. 'es' → logprob: -1.8678221702575684
    3. 's' → logprob: -2.4928221702575684
    4. '()' → logprob: -3.3678221702575684
    5. '()
' → logprob: -3.8678221702575684
    6. '       ' → logprob: -4.867822170257568
    7. 'ers' → logprob: -6.242822170257568
    8. '   ' → logprob: -6.367822170257568
    9. 'ions' → logprob: -6.742822170257568
    10. 'ages' → logprob: -7.867822170257568

Token 592: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2557569146156311
    2. '
' → logprob: -1.5057568550109863
    3. '()
' → logprob: -6.130756855010986
    4. '        
' → logprob: -6.755756855010986
    5. '()' → logprob: -8.380757331848145
    6. '

' → logprob: -9.130757331848145
    7. 'for' → logprob: -10.130757331848145
    8. ' for' → logprob: -10.380757331848145
    9. '()

' → logprob: -11.130757331848145
    10. ',' → logprob: -11.130757331848145

Token 593: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029129309114068747
    2. '
' → logprob: -6.252912998199463
    3. 'for' → logprob: -7.377912998199463
    4. ' for' → logprob: -8.002912521362305
    5. '   ' → logprob: -11.627912521362305
    6. 'valid' → logprob: -11.752912521362305
    7. '        
' → logprob: -13.002912521362305
    8. ' valid' → logprob: -13.252912521362305
    9. 'styles' → logprob: -13.752912521362305
    10. '```' → logprob: -14.252912521362305

Token 594: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03498280420899391
    2. 'self' → logprob: -4.034982681274414
    3. '       ' → logprob: -5.034982681274414
    4. 'valid' → logprob: -5.159982681274414
    5. 'styles' → logprob: -6.284982681274414
    6. '
' → logprob: -6.909982681274414
    7. 'possible' → logprob: -6.909982681274414
    8. ' for' → logprob: -8.534982681274414
    9. 'results' → logprob: -9.534982681274414
    10. '        
' → logprob: -9.909982681274414

Token 595: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.006967796944081783
    2. 'r' → logprob: -5.631968021392822
    3. ' R' → logprob: -5.756968021392822
    4. '   ' → logprob: -9.006967544555664
    5. ' ' → logprob: -10.881967544555664
    6. '       ' → logprob: -11.631967544555664
    7. ' r' → logprob: -11.881967544555664
    8. '  ' → logprob: -11.881967544555664
    9. 'self' → logprob: -12.006967544555664
    10. 'i' → logprob: -12.381967544555664

Token 596: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03373398259282112
    2. 'in' → logprob: -3.408734083175659
    3. ' ' → logprob: -10.408734321594238
    4. '1' → logprob: -11.283734321594238
    5. '0' → logprob: -11.408734321594238
    6. ',' → logprob: -11.533734321594238
    7. '   ' → logprob: -12.033734321594238
    8. '
' → logprob: -12.158734321594238
    9. '  ' → logprob: -12.658734321594238
    10. '    ' → logprob: -13.158734321594238

Token 597: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0014901040121912956
    2. ' range' → logprob: -6.626490116119385
    3. '[' → logprob: -8.751489639282227
    4. '(range' → logprob: -12.376489639282227
    5. '(' → logprob: -14.251489639282227
    6. '[-' → logprob: -14.626489639282227
    7. '   ' → logprob: -15.751489639282227
    8. '	range' → logprob: -16.626489639282227
    9. '1' → logprob: -17.001489639282227
    10. '0' → logprob: -17.251489639282227

Token 598: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23112669587135315
    2. '1' → logprob: -2.1061267852783203
    3. '=' → logprob: -2.4811267852783203
    4. '21' → logprob: -7.10612678527832
    5. '11' → logprob: -9.23112678527832
    6. '`' → logprob: -10.98112678527832
    7. '-' → logprob: -11.23112678527832
    8. '{' → logprob: -11.35612678527832
    9. '}' → logprob: -11.85612678527832
    10. '   ' → logprob: -12.10612678527832

Token 599: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6650967001914978
    2. '21' → logprob: -0.9150967001914978
    3. '=' → logprob: -2.5400967597961426
    4. '11' → logprob: -5.165096759796143
    5. '-' → logprob: -7.915096759796143
    6. '(' → logprob: -8.790096282958984
    7. '`' → logprob: -9.540096282958984
    8. '+' → logprob: -11.040096282958984
    9. '}' → logprob: -11.165096282958984
    10. ''' → logprob: -11.165096282958984

Token 600: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03864597901701927
    2. ' ,' → logprob: -3.4136459827423096
    3. '0' → logprob: -6.4136457443237305
    4. '10' → logprob: -6.6636457443237305
    5. '1' → logprob: -8.03864574432373
    6. '100' → logprob: -8.03864574432373
    7. '3' → logprob: -8.28864574432373
    8. '
' → logprob: -8.78864574432373
    9. ' ' → logprob: -8.78864574432373
    10. '7' → logprob: -9.03864574432373

Token 601: ' ' (ID: 220)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -2.1888679839321412e-05
    2. '11' → logprob: -11.000021934509277
    3. '20' → logprob: -12.875021934509277
    4. '=' → logprob: -13.375021934509277
    5. '`' → logprob: -15.250021934509277
    6. '{' → logprob: -16.12502098083496
    7. ' ' → logprob: -16.37502098083496
    8. '41' → logprob: -16.50002098083496
    9. '101' → logprob: -16.75002098083496
    10. '

' → logprob: -16.93752098083496

Token 602: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -1.4259644558478612e-05
    2. '20' → logprob: -11.875014305114746
    3. '11' → logprob: -12.125014305114746
    4. '=' → logprob: -13.500014305114746
    5. '`' → logprob: -16.37501335144043
    6. '41' → logprob: -17.12501335144043
    7. '{' → logprob: -17.12501335144043
    8. '101' → logprob: -17.25001335144043
    9. '51' → logprob: -17.37501335144043
    10. '22' → logprob: -17.68751335144043

Token 603: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1602751910686493
    2. '):' → logprob: -1.9102752208709717
    3. ':' → logprob: -10.78527545928955
    4. '):
' → logprob: -11.66027545928955
    5. ')' → logprob: -11.78527545928955
    6. '       ' → logprob: -12.41027545928955
    7. ' ):
' → logprob: -12.78527545928955
    8. '   ' → logprob: -13.16027545928955
    9. ':
' → logprob: -13.91027545928955
    10. '):

' → logprob: -14.16027545928955

Token 604: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2995142936706543
    2. ' for' → logprob: -1.7995142936706543
    3. '       ' → logprob: -2.4245142936706543
    4. '<|end|>' → logprob: -5.924514293670654
    5. '               ' → logprob: -7.174514293670654
    6. ',' → logprob: -7.674514293670654
    7. '   ' → logprob: -7.799514293670654
    8. 'for' → logprob: -8.424514770507812
    9. ' ' → logprob: -8.674514770507812
    10. '	       ' → logprob: -9.424514770507812

Token 605: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5237540006637573
    2. ' for' → logprob: -1.2737540006637573
    3. 'for' (adapté à ' for') → logprob: -2.148754119873047
    4. '               ' → logprob: -4.523754119873047
    5. '   ' → logprob: -8.398754119873047
    6. ' ' → logprob: -9.023754119873047
    7. '	for' → logprob: -10.398754119873047
    8. '            ' → logprob: -11.023754119873047
    9. '       ' → logprob: -11.273754119873047
    10. '		' → logprob: -11.398754119873047

Token 606: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.3133651614189148
    2. ' C' → logprob: -1.3133652210235596
    3. ' ' → logprob: -9.31336498260498
    4. '   ' → logprob: -12.18836498260498
    5. '  ' → logprob: -12.56336498260498
    6. '    ' → logprob: -13.81336498260498
    7. '     ' → logprob: -14.06336498260498
    8. '	C' → logprob: -14.68836498260498
    9. '       ' → logprob: -14.81336498260498
    10. '
' → logprob: -14.81336498260498

Token 607: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006732541602104902
    2. 'in' → logprob: -5.00673246383667
    3. ' ' → logprob: -11.131732940673828
    4. '
' → logprob: -14.631732940673828
    5. '<|end|>' → logprob: -14.881732940673828
    6. 'In' → logprob: -15.506732940673828
    7. '	in' → logprob: -15.631732940673828
    8. ' 
' → logprob: -15.631732940673828
    9. ' i' → logprob: -15.756732940673828
    10. '   ' → logprob: -16.006732940673828

Token 608: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.062166884541511536
    2. ' range' → logprob: -2.812166929244995
    3. '1' → logprob: -8.562167167663574
    4. '(range' → logprob: -12.937167167663574
    5. '(' → logprob: -13.062167167663574
    6. ' ' → logprob: -13.562167167663574
    7. '   ' → logprob: -13.562167167663574
    8. '20' → logprob: -14.687167167663574
    9. '	range' → logprob: -16.062166213989258
    10. '```' → logprob: -16.812166213989258

Token 609: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012284684635233134
    2. '1' → logprob: -9.125123023986816
    3. '           ' → logprob: -11.750123023986816
    4. ' (' → logprob: -12.500123023986816
    5. '               ' → logprob: -13.875123023986816
    6. '(
' → logprob: -15.000123023986816
    7. ' ' → logprob: -15.125123023986816
    8. '0' → logprob: -15.375123023986816
    9. ',' → logprob: -16.0001220703125
    10. '   ' → logprob: -16.3751220703125

Token 610: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005262265913188457
    2. '0' → logprob: -8.250526428222656
    3. '21' → logprob: -8.375526428222656
    4. ' ' → logprob: -10.625526428222656
    5. '(' → logprob: -12.375526428222656
    6. '-' → logprob: -12.500526428222656
    7. '   ' → logprob: -14.125526428222656
    8. '20' → logprob: -14.125526428222656
    9. '
' → logprob: -15.250526428222656
    10. ' -' → logprob: -16.000526428222656

Token 611: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008051026379689574
    2. ' ,' → logprob: -7.250804901123047
    3. '1' → logprob: -9.500804901123047
    4. '(' → logprob: -12.125804901123047
    5. '20' → logprob: -12.250804901123047
    6. ' ' → logprob: -12.750804901123047
    7. '           ' → logprob: -13.250804901123047
    8. ',
' → logprob: -13.375804901123047
    9. '               ' → logprob: -13.500804901123047
    10. '   ' → logprob: -14.500804901123047

Token 612: ' ' (ID: 220)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.00020735491125378758
    2. ' ' → logprob: -8.50020694732666
    3. '   ' → logprob: -13.00020694732666
    4. '  ' → logprob: -14.50020694732666
    5. '    ' → logprob: -15.00020694732666
    6. '22' → logprob: -15.25020694732666
    7. '```' → logprob: -16.625207901000977
    8. '11' → logprob: -16.750207901000977
    9. '           ' → logprob: -16.750207901000977
    10. '     ' → logprob: -16.750207901000977

Token 613: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -1.2664456789934775e-06
    2. '11' → logprob: -14.250000953674316
    3. ' ' → logprob: -15.000000953674316
    4. '=' → logprob: -16.500001907348633
    5. '   ' → logprob: -16.500001907348633
    6. '(' → logprob: -17.625001907348633
    7. '{' → logprob: -17.875001907348633
    8. '201' → logprob: -18.625001907348633
    9. '

' → logprob: -18.750001907348633
    10. '`' → logprob: -19.000001907348633

Token 614: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.003300101263448596
    2. '):' → logprob: -5.753300189971924
    3. '               ' → logprob: -10.128299713134766
    4. '           ' → logprob: -10.253299713134766
    5. '):
' → logprob: -10.378299713134766
    6. '+' → logprob: -13.003299713134766
    7. '                   ' → logprob: -13.128299713134766
    8. ' ):
' → logprob: -13.128299713134766
    9. ':
' → logprob: -13.253299713134766
    10. '():
' → logprob: -13.378299713134766

Token 615: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.274932143744081e-05
    2. '                   ' → logprob: -11.125042915344238
    3. ' for' → logprob: -11.625042915344238
    4. '           ' → logprob: -12.375042915344238
    5. '	           ' → logprob: -12.625042915344238
    6. ':' → logprob: -12.750042915344238
    7. 'for' → logprob: -13.375042915344238
    8. '                       ' → logprob: -13.375042915344238
    9. '              ' → logprob: -13.375042915344238
    10. '             ' → logprob: -13.875042915344238

Token 616: ' for' (ID: 395)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0785418227314949
    2. 'for' (adapté à ' for') → logprob: -2.9535417556762695
    3. ' for' → logprob: -3.8285417556762695
    4. '   ' → logprob: -6.8285417556762695
    5. '           ' → logprob: -8.45354175567627
    6. '               ' → logprob: -8.95354175567627
    7. '                       ' → logprob: -9.45354175567627
    8. ' ' → logprob: -10.07854175567627
    9. '       ' → logprob: -10.20354175567627
    10. '	for' → logprob: -10.70354175567627

Token 617: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0011723674833774567
    2. ' S' → logprob: -6.7511725425720215
    3. '   ' → logprob: -14.251172065734863
    4. ' ' → logprob: -14.501172065734863
    5. '  ' → logprob: -15.251172065734863
    6. '       ' → logprob: -15.251172065734863
    7. '           ' → logprob: -16.68867301940918
    8. '    ' → logprob: -16.93867301940918
    9. '
' → logprob: -17.00117301940918
    10. 's' → logprob: -17.12617301940918

Token 618: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043006282299757004
    2. 'in' → logprob: -3.168006181716919
    3. ' ' → logprob: -13.16800594329834
    4. '	in' → logprob: -13.41800594329834
    5. '<|end|>' → logprob: -13.54300594329834
    6. 'In' → logprob: -13.91800594329834
    7. 'n' → logprob: -15.04300594329834
    8. '_in' → logprob: -15.66800594329834
    9. '```' → logprob: -15.66800594329834
    10. 'import' → logprob: -16.168006896972656

Token 619: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024808887392282486
    2. ' range' → logprob: -6.002480983734131
    3. '(range' → logprob: -12.377480506896973
    4. '(' → logprob: -14.002480506896973
    5. 'in' → logprob: -16.12748146057129
    6. ' in' → logprob: -16.75248146057129
    7. '20' → logprob: -17.25248146057129
    8. ' ' → logprob: -18.00248146057129
    9. '
' → logprob: -18.25248146057129
    10. '[' → logprob: -18.37748146057129

Token 620: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001249925117008388
    2. 'in' → logprob: -9.87512493133545
    3. ' in' → logprob: -10.37512493133545
    4. '1' → logprob: -10.62512493133545
    5. ' (' → logprob: -11.12512493133545
    6. '                   ' → logprob: -13.25012493133545
    7. '               ' → logprob: -13.87512493133545
    8. '(
' → logprob: -16.000125885009766
    9. ',' → logprob: -16.250125885009766
    10. ' ' → logprob: -16.500125885009766

Token 621: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023419586941599846
    2. '(' → logprob: -3.7734196186065674
    3. ' ' → logprob: -8.773419380187988
    4. '   ' → logprob: -12.148419380187988
    5. '
' → logprob: -13.148419380187988
    6. '21' → logprob: -13.398419380187988
    7. '20' → logprob: -13.648419380187988
    8. '-' → logprob: -13.648419380187988
    9. '           ' → logprob: -14.023419380187988
    10. '               ' → logprob: -14.210919380187988

Token 622: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6178341507911682
    2. ',' → logprob: -0.8678341507911682
    3. '(' → logprob: -3.2428340911865234
    4. ' ' → logprob: -6.867834091186523
    5. '   ' → logprob: -7.992834091186523
    6. ' ,' → logprob: -8.742834091186523
    7. '           ' → logprob: -9.117834091186523
    8. '               ' → logprob: -9.117834091186523
    9. '                   ' → logprob: -10.117834091186523
    10. '=' → logprob: -10.867834091186523

Token 623: ' ' (ID: 220)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -3.774276774493046e-05
    2. ' ' → logprob: -10.250038146972656
    3. '   ' → logprob: -14.000038146972656
    4. '22' → logprob: -15.000038146972656
    5. '20' → logprob: -15.375038146972656
    6. '  ' → logprob: -16.000038146972656
    7. '```' → logprob: -16.000038146972656
    8. '           ' → logprob: -16.125038146972656
    9. ')' → logprob: -16.250038146972656
    10. '    ' → logprob: -16.500038146972656

Token 624: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.375006675720215
    3. '   ' → logprob: -14.000006675720215
    4. '           ' → logprob: -15.125006675720215
    5. '22' → logprob: -15.375006675720215
    6. '20' → logprob: -15.625006675720215
    7. '
' → logprob: -16.1250057220459
    8. '       ' → logprob: -16.6250057220459
    9. '```' → logprob: -16.6250057220459
    10. '(' → logprob: -16.7500057220459

Token 625: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.35952624678611755
    2. '):
' → logprob: -1.23452627658844
    3. ':' → logprob: -4.60952615737915
    4. '                   ' → logprob: -7.23452615737915
    5. '               ' → logprob: -8.484526634216309
    6. ':
' → logprob: -9.984526634216309
    7. ')' → logprob: -10.484526634216309
    8. '           ' → logprob: -11.109526634216309
    9. '):
' → logprob: -11.484526634216309
    10. '                       ' → logprob: -11.734526634216309

Token 626: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.17122289538383484
    2. ':' → logprob: -2.0462229251861572
    3. '                       ' → logprob: -4.671222686767578
    4. '           ' → logprob: -4.921222686767578
    5. '               ' → logprob: -5.421222686767578
    6. '<|end|>' → logprob: -6.171222686767578
    7. ',' → logprob: -6.796222686767578
    8. ':
' → logprob: -7.171222686767578
    9. '                           ' → logprob: -7.171222686767578
    10. '       ' → logprob: -8.046222686767578

Token 627: ' if' (ID: 538)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.027857590466737747
    2. '                       ' → logprob: -4.402857780456543
    3. ' valid' → logprob: -5.152857780456543
    4. '                   ' → logprob: -5.402857780456543
    5. '   ' → logprob: -5.652857780456543
    6. 'is' → logprob: -6.902857780456543
    7. '       ' → logprob: -9.152857780456543
    8. 'all' → logprob: -9.152857780456543
    9. 'style' → logprob: -9.527857780456543
    10. ' ' → logprob: -10.402857780456543

Token 628: ' self' (ID: 1051)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5220592021942139
    2. 'self' → logprob: -1.1470592021942139
    3. ' all' → logprob: -2.522059202194214
    4. ' self' → logprob: -4.897059440612793
    5. '                   ' → logprob: -7.647059440612793
    6. ' ' → logprob: -8.772059440612793
    7. '   ' → logprob: -8.897059440612793
    8. 'valid' → logprob: -9.022059440612793
    9. 'True' → logprob: -9.522059440612793
    10. 'not' → logprob: -9.772059440612793

Token 629: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.1965520679950714
    2. '.check' → logprob: -2.321552038192749
    3. '._' → logprob: -3.696552038192749
    4. '.valid' → logprob: -4.071552276611328
    5. '.validate' → logprob: -4.071552276611328
    6. '.p' → logprob: -4.571552276611328
    7. '.can' → logprob: -5.196552276611328
    8. 'is' → logprob: -6.321552276611328
    9. '.test' → logprob: -6.571552276611328
    10. 'p' → logprob: -6.946552276611328

Token 630: '_style' (ID: 34532)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.023696238175034523
    2. 'valid' → logprob: -4.398696422576904
    3. '_style' → logprob: -4.648696422576904
    4. 'style' → logprob: -6.773696422576904
    5. '_possible' → logprob: -9.523695945739746
    6. 'Valid' → logprob: -9.898695945739746
    7. '_indent' → logprob: -10.398695945739746
    8. '_styles' → logprob: -10.398695945739746
    9. 'indent' → logprob: -10.523695945739746
    10. ' valid' → logprob: -10.773695945739746

Token 631: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.02426968142390251
    2. '(R' → logprob: -4.5242695808410645
    3. 'valid' → logprob: -4.8992695808410645
    4. '(' → logprob: -5.3992695808410645
    5. 'Valid' → logprob: -7.2742695808410645
    6. ' valid' → logprob: -8.399270057678223
    7. '_possible' → logprob: -9.899270057678223
    8. '(
' → logprob: -10.399270057678223
    9. '(valid' → logprob: -10.649270057678223
    10. '_' → logprob: -10.774270057678223

Token 632: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.034619901329278946
    2. '(' → logprob: -3.4096198081970215
    3. '(self' → logprob: -7.7846198081970215
    4. ' (' → logprob: -8.03462028503418
    5. '((' → logprob: -9.53462028503418
    6. '(
' → logprob: -9.53462028503418
    7. '(p' → logprob: -10.03462028503418
    8. '(None' → logprob: -11.15962028503418
    9. '                   ' → logprob: -11.28462028503418
    10. '               ' → logprob: -12.78462028503418

Token 633: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007385154603980482
    2. ' ,' → logprob: -8.125738143920898
    3. ',C' → logprob: -8.125738143920898
    4. '                   ' → logprob: -9.250738143920898
    5. ',
' → logprob: -10.500738143920898
    6. '               ' → logprob: -11.875738143920898
    7. '                       ' → logprob: -12.625738143920898
    8. '   ' → logprob: -13.000738143920898
    9. '                           ' → logprob: -13.250738143920898
    10. '           ' → logprob: -13.750738143920898

Token 634: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0005804349202662706
    2. ' C' → logprob: -7.500580310821533
    3. '   ' → logprob: -11.750580787658691
    4. '                   ' → logprob: -12.000580787658691
    5. '                       ' → logprob: -13.000580787658691
    6. '20' → logprob: -13.375580787658691
    7. ' ' → logprob: -13.625580787658691
    8. '                           ' → logprob: -13.625580787658691
    9. '                               ' → logprob: -13.875580787658691
    10. '  ' → logprob: -14.250580787658691

Token 635: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005349974613636732
    2. ',S' → logprob: -5.255350112915039
    3. ' ,' → logprob: -9.755350112915039
    4. ',C' → logprob: -10.630350112915039
    5. '                   ' → logprob: -11.380350112915039
    6. 'S' → logprob: -12.380350112915039
    7. '<|end|>' → logprob: -13.005350112915039
    8. '                           ' → logprob: -13.380350112915039
    9. ',
' → logprob: -13.380350112915039
    10. '                       ' → logprob: -13.505350112915039

Token 636: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0001733855315251276
    2. ' S' → logprob: -8.750173568725586
    3. '                   ' → logprob: -12.125173568725586
    4. '                       ' → logprob: -12.500173568725586
    5. '   ' → logprob: -14.000173568725586
    6. '                           ' → logprob: -14.125173568725586
    7. '                    ' → logprob: -14.500173568725586
    8. '               ' → logprob: -14.625173568725586
    9. '                     ' → logprob: -14.875173568725586
    10. '                               ' → logprob: -14.875173568725586

Token 637: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20168843865394592
    2. '):
' → logprob: -1.7016884088516235
    3. '                   ' → logprob: -9.076688766479492
    4. ')' → logprob: -9.701688766479492
    5. ',' → logprob: -10.451688766479492
    6. '):
' → logprob: -10.701688766479492
    7. ' ):' → logprob: -11.076688766479492
    8. '):

' → logprob: -11.451688766479492
    9. '                       ' → logprob: -11.951688766479492
    10. ':' → logprob: -12.076688766479492

Token 638: '                       ' (ID: 968)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48586294054985046
    2. '                       ' → logprob: -0.9858629703521729
    3. ':
' → logprob: -4.610862731933594
    4. '():' → logprob: -7.485862731933594
    5. '):' → logprob: -8.360862731933594
    6. ' :' → logprob: -8.610862731933594
    7. '                   ' → logprob: -8.860862731933594
    8. '                           ' → logprob: -9.110862731933594
    9. '():
' → logprob: -9.360862731933594
    10. '                               ' → logprob: -9.485862731933594

Token 639: ' self' (ID: 1051)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7304964065551758
    2. 'self' (adapté à ' self') → logprob: -0.8554964065551758
    3. ' self' → logprob: -2.480496406555176
    4. '                           ' → logprob: -4.730496406555176
    5. '   ' → logprob: -7.480496406555176
    6. '                               ' → logprob: -9.355496406555176
    7. '	self' → logprob: -10.855496406555176
    8. '           ' → logprob: -11.480496406555176
    9. '                   ' → logprob: -11.730496406555176
    10. '       ' → logprob: -11.730496406555176

Token 640: '.valid' (ID: 41805)
  Prédit: '.valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.valid' → logprob: -4.811348480870947e-05
    2. 'valid' → logprob: -10.50004768371582
    3. '.' → logprob: -11.00004768371582
    4. ' .' → logprob: -12.75004768371582
    5. '	valid' → logprob: -15.25004768371582
    6. '.invalid' → logprob: -15.62504768371582
    7. '           ' → logprob: -15.75004768371582
    8. '   ' → logprob: -16.62504768371582
    9. ' valid' → logprob: -16.75004768371582
    10. '.Valid' → logprob: -16.75004768371582

Token 641: '_styles' (ID: 95693)
  Prédit: '_styles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_styles' → logprob: -1.9361264946837764e-07
    2. 'styles' → logprob: -15.75
    3. '_style' → logprob: -18.0
    4. ' styles' → logprob: -19.5
    5. 'Styles' → logprob: -19.75
    6. '_types' → logprob: -21.25
    7. '_shapes' → logprob: -21.5
    8. '.styles' → logprob: -21.625
    9. '_sizes' → logprob: -21.75
    10. '_stats' → logprob: -22.125

Token 642: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0067415423691272736
    2. '.' → logprob: -5.006741523742676
    3. 'append' → logprob: -11.256741523742676
    4. '.app' → logprob: -11.756741523742676
    5. '.ap' → logprob: -12.631741523742676
    6. ' .' → logprob: -13.506741523742676
    7. '.add' → logprob: -16.256742477416992
    8. '   ' → logprob: -16.381742477416992
    9. ').' → logprob: -16.631742477416992
    10. '_append' → logprob: -16.631742477416992

Token 643: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0087516784551553e-05
    2. 'Indent' → logprob: -11.87501049041748
    3. '((' → logprob: -12.75001049041748
    4. ' (' → logprob: -15.75001049041748
    5. '(
' → logprob: -17.875009536743164
    6. '(indent' → logprob: -18.000009536743164
    7. '   ' → logprob: -18.125009536743164
    8. '(self' → logprob: -18.375009536743164
    9. 'indent' → logprob: -18.750009536743164
    10. '(R' → logprob: -19.000009536743164

Token 644: 'Indent' (ID: 62786)
  Prédit: 'Indent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Indent' → logprob: -0.004638149403035641
    2. ' Ind' → logprob: -5.379638195037842
    3. '(' → logprob: -11.754637718200684
    4. 'Indented' → logprob: -12.379637718200684
    5. 'indent' → logprob: -13.129637718200684
    6. ' indentation' → logprob: -13.379637718200684
    7. '   ' → logprob: -14.004637718200684
    8. ' ' → logprob: -14.754637718200684
    9. '  ' → logprob: -15.754637718200684
    10. ' (' → logprob: -16.004638671875

Token 645: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -9.491498531133402e-06
    2. 'entation' → logprob: -11.625009536743164
    3. 'ATION' → logprob: -15.000009536743164
    4. 'Indent' → logprob: -16.000009536743164
    5. 'a' → logprob: -16.500009536743164
    6. 'cation' → logprob: -18.125009536743164
    7. 'ion' → logprob: -18.375009536743164
    8. 'iation' → logprob: -18.875009536743164
    9. 'ati' → logprob: -19.000009536743164
    10. '(' → logprob: -19.000009536743164

Token 646: 'Style' (ID: 3977)
  Prédit: 'Style'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Style' → logprob: -1.259079363080673e-05
    2. '(R' → logprob: -12.000012397766113
    3. 'S' → logprob: -12.750012397766113
    4. 'Styl' → logprob: -13.375012397766113
    5. 'Sty' → logprob: -14.250012397766113
    6. 'style' → logprob: -14.625012397766113
    7. '(' → logprob: -15.000012397766113
    8. 'Styles' → logprob: -15.625012397766113
    9. ' Style' → logprob: -16.75001335144043
    10. '_style' → logprob: -16.87501335144043

Token 647: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.00028016636497341096
    2. '(' → logprob: -8.250280380249023
    3. ' (' → logprob: -11.125280380249023
    4. '(
' → logprob: -12.625280380249023
    5. ')' → logprob: -14.875280380249023
    6. ')(' → logprob: -16.000280380249023
    7. '((' → logprob: -16.000280380249023
    8. '   ' → logprob: -16.125280380249023
    9. '
' → logprob: -18.000280380249023
    10. ' ' → logprob: -18.000280380249023

Token 648: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0049568163231015205
    2. ',C' → logprob: -5.3799567222595215
    3. ' ,' → logprob: -8.00495719909668
    4. ',
' → logprob: -13.12995719909668
    5. ',R' → logprob: -15.12995719909668
    6. '   ' → logprob: -16.00495719909668
    7. 'C' → logprob: -16.75495719909668
    8. ',S' → logprob: -16.75495719909668
    9. '<|end|>' → logprob: -16.75495719909668
    10. ',

' → logprob: -17.37995719909668

Token 649: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.005233882926404476
    2. ' C' → logprob: -5.2552337646484375
    3. 'S' → logprob: -16.630233764648438
    4. ' ' → logprob: -19.005233764648438
    5. '   ' → logprob: -19.880233764648438
    6. '                               ' → logprob: -20.130233764648438
    7. '                                   ' → logprob: -20.505233764648438
    8. ',C' → logprob: -20.755233764648438
    9. '  ' → logprob: -20.880233764648438
    10. ',' → logprob: -21.255233764648438

Token 650: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003129351884126663
    2. ',S' → logprob: -5.878129482269287
    3. ' ,' → logprob: -8.753129005432129
    4. ',C' → logprob: -9.128129005432129
    5. ',
' → logprob: -10.378129005432129
    6. ')' → logprob: -12.378129005432129
    7. '                   ' → logprob: -12.628129005432129
    8. '           ' → logprob: -12.628129005432129
    9. '               ' → logprob: -12.753129005432129
    10. '                       ' → logprob: -13.253129005432129

Token 651: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0019286326132714748
    2. ' S' → logprob: -6.251928806304932
    3. ' ' → logprob: -19.376928329467773
    4. '                       ' → logprob: -19.501928329467773
    5. '<|end|>' → logprob: -19.626928329467773
    6. '   ' → logprob: -20.001928329467773
    7. ')' → logprob: -20.126928329467773
    8. '                               ' → logprob: -20.376928329467773
    9. '  ' → logprob: -20.501928329467773
    10. '
' → logprob: -21.126928329467773

Token 652: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1602613925933838
    2. '))' → logprob: -1.9102613925933838
    3. '))
' → logprob: -10.910261154174805
    4. ')
' → logprob: -11.785261154174805
    5. ')))' → logprob: -11.785261154174805
    6. '                       ' → logprob: -13.160261154174805
    7. '                   ' → logprob: -14.160261154174805
    8. '               ' → logprob: -15.035261154174805
    9. ' )' → logprob: -15.785261154174805
    10. '           ' → logprob: -15.910261154174805

Token 653: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1835278868675232
    2. '   ' → logprob: -1.808527946472168
    3. 'def' → logprob: -5.933527946472168
    4. '    
' → logprob: -7.308527946472168
    5. '

' → logprob: -8.308527946472168
    6. ' def' → logprob: -10.183527946472168
    7. '<|end|>' → logprob: -10.308527946472168
    8. ' ' → logprob: -10.433527946472168
    9. '```' → logprob: -10.433527946472168
    10. '        
' → logprob: -10.558527946472168

Token 654: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10041025280952454
    2. '   ' → logprob: -2.350410223007202
    3. ' def' → logprob: -8.725410461425781
    4. '
' → logprob: -10.225410461425781
    5. ' ' → logprob: -12.975410461425781
    6. '	def' → logprob: -13.100410461425781
    7. '    
' → logprob: -15.225410461425781
    8. '  ' → logprob: -15.600410461425781
    9. '```' → logprob: -15.850410461425781
    10. '       ' → logprob: -16.72541046142578

Token 655: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.02054235339164734
    2. ' is' → logprob: -3.8955423831939697
    3. '_is' → logprob: -15.64554214477539
    4. ' ' → logprob: -15.77054214477539
    5. '   ' → logprob: -15.89554214477539
    6. '	is' → logprob: -17.27054214477539
    7. '
' → logprob: -17.64554214477539
    8. '  ' → logprob: -17.89554214477539
    9. '

' → logprob: -18.52054214477539
    10. '.is' → logprob: -18.52054214477539

Token 656: '_style' (ID: 34532)
  Prédit: '_style'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_style' → logprob: -2.45848218582978e-06
    2. 'style' → logprob: -13.00000286102295
    3. '_valid' → logprob: -16.500001907348633
    4. '_styles' → logprob: -18.125001907348633
    5. ' _' → logprob: -18.250001907348633
    6. ' style' → logprob: -19.000001907348633
    7. '_STYLE' → logprob: -19.125001907348633
    8. '_' → logprob: -19.250001907348633
    9. '_is' → logprob: -20.000001907348633
    10. 'Style' → logprob: -20.125001907348633

Token 657: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -1.0325924449716695e-05
    2. 'valid' → logprob: -11.50001049041748
    3. 'Valid' → logprob: -17.125009536743164
    4. '_invalid' → logprob: -17.750009536743164
    5. ' valid' → logprob: -18.250009536743164
    6. '(valid' → logprob: -18.375009536743164
    7. '```' → logprob: -18.875009536743164
    8. '_possible' → logprob: -19.000009536743164
    9. '_VALID' → logprob: -19.125009536743164
    10. '_val' → logprob: -19.125009536743164

Token 658: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.3306015716807451e-05
    2. '(' → logprob: -11.25001335144043
    3. 'self' → logprob: -15.37501335144043
    4. '   ' → logprob: -17.75001335144043
    5. '       ' → logprob: -18.62501335144043
    6. 'def' → logprob: -18.75001335144043
    7. '(
' → logprob: -19.00001335144043
    8. ' (' → logprob: -20.87501335144043
    9. '(sel' → logprob: -21.25001335144043
    10. '
' → logprob: -21.62501335144043

Token 659: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017933472990989685
    2. 'self' → logprob: -6.626793384552002
    3. ',' → logprob: -7.876793384552002
    4. '(' → logprob: -10.126792907714844
    5. ')(' → logprob: -10.376792907714844
    6. ',self' → logprob: -12.376792907714844
    7. '       ' → logprob: -12.501792907714844
    8. '   ' → logprob: -12.626792907714844
    9. 'def' → logprob: -13.251792907714844
    10. ')' → logprob: -13.751792907714844

Token 660: ' R' (ID: 460)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2598060071468353
    2. 'R' → logprob: -1.5098060369491577
    3. ' self' → logprob: -5.384806156158447
    4. ' R' → logprob: -6.259806156158447
    5. '       ' → logprob: -6.884806156158447
    6. '   ' → logprob: -8.259805679321289
    7. '           ' → logprob: -10.759805679321289
    8. '(self' → logprob: -11.509805679321289
    9. ' ' → logprob: -11.634805679321289
    10. '               ' → logprob: -11.884805679321289

Token 661: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4060561776859686e-05
    2. ' ,' → logprob: -10.125043869018555
    3. ',C' → logprob: -12.875043869018555
    4. 'self' → logprob: -14.250043869018555
    5. ',self' → logprob: -15.375043869018555
    6. '   ' → logprob: -15.500043869018555
    7. '       ' → logprob: -15.625043869018555
    8. ',
' → logprob: -17.250043869018555
    9. '_,' → logprob: -17.375043869018555
    10. '           ' → logprob: -17.750043869018555

Token 662: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.01815837249159813
    2. ' C' → logprob: -4.018158435821533
    3. '   ' → logprob: -12.143157958984375
    4. ' ' → logprob: -13.518157958984375
    5. '    ' → logprob: -14.768157958984375
    6. '       ' → logprob: -14.768157958984375
    7. '  ' → logprob: -15.143157958984375
    8. 'S' → logprob: -16.143157958984375
    9. '           ' → logprob: -16.143157958984375
    10. '     ' → logprob: -16.393157958984375

Token 663: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.11996734328568e-05
    2. ' ,' → logprob: -10.750041007995605
    3. ',S' → logprob: -10.875041007995605
    4. '   ' → logprob: -14.625041007995605
    5. ',C' → logprob: -15.375041007995605
    6. ',
' → logprob: -17.000041961669922
    7. '       ' → logprob: -17.375041961669922
    8. ',int' → logprob: -17.375041961669922
    9. 'S' → logprob: -17.375041961669922
    10. ':' → logprob: -18.250041961669922

Token 664: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.004624272231012583
    2. ' S' → logprob: -5.379624366760254
    3. ' ' → logprob: -13.004624366760254
    4. '   ' → logprob: -14.004624366760254
    5. '  ' → logprob: -14.754624366760254
    6. '       ' → logprob: -16.129623413085938
    7. '    ' → logprob: -16.129623413085938
    8. ',' → logprob: -16.129623413085938
    9. '     ' → logprob: -16.504623413085938
    10. '
' → logprob: -17.004623413085938

Token 665: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.032599132508039474
    2. '):
' → logprob: -3.5325992107391357
    3. ',' → logprob: -5.907598972320557
    4. '       ' → logprob: -10.157599449157715
    5. 'self' → logprob: -10.157599449157715
    6. '   ' → logprob: -10.532599449157715
    7. ')' → logprob: -12.157599449157715
    8. '):
' → logprob: -12.282599449157715
    9. '):

' → logprob: -12.282599449157715
    10. '(self' → logprob: -12.532599449157715

Token 666: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.3199920178740285e-05
    2. '```' → logprob: -11.750022888183594
    3. '<|end|>' → logprob: -12.625022888183594
    4. ',' → logprob: -12.875022888183594
    5. ':' → logprob: -12.875022888183594
    6. '   ' → logprob: -13.250022888183594
    7. ' for' → logprob: -13.750022888183594
    8. '        
' → logprob: -14.000022888183594
    9. '#' → logprob: -14.375022888183594
    10. '``' → logprob: -15.250022888183594

Token 667: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10745959728956223
    2. 'prev' → logprob: -2.607459545135498
    3. 'for' → logprob: -4.607459545135498
    4. 'p' → logprob: -5.232459545135498
    5. 'indent' → logprob: -5.357459545135498
    6. ' for' → logprob: -6.482459545135498
    7. '           ' → logprob: -6.732459545135498
    8. 'previous' → logprob: -6.857459545135498
    9. 'def' → logprob: -7.232459545135498
    10. 'last' → logprob: -7.232459545135498

Token 668: ' First' (ID: 8338)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02091495506465435
    2. 'p' → logprob: -5.0209150314331055
    3. 'prev' → logprob: -5.7709150314331055
    4. '#' → logprob: -6.0209150314331055
    5. 'indent' → logprob: -6.3959150314331055
    6. 'expected' → logprob: -6.6459150314331055
    7. 'self' → logprob: -6.8959150314331055
    8. '       ' → logprob: -7.3959150314331055
    9. 'previous' → logprob: -7.3959150314331055
    10. 'ind' → logprob: -7.5209150314331055

Token 669: ' line' (ID: 2543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10406026989221573
    2. 'if' → logprob: -2.854060173034668
    3. 'indent' → logprob: -4.104060173034668
    4. 'line' → logprob: -4.604060173034668
    5. ' if' → logprob: -5.104060173034668
    6. '_indent' → logprob: -5.979060173034668
    7. 'for' → logprob: -6.479060173034668
    8. '   ' → logprob: -6.729060173034668
    9. ' indent' → logprob: -6.854060173034668
    10. ' line' → logprob: -7.604060173034668

Token 670: ' must' (ID: 2804)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7510807514190674
    2. '       ' → logprob: -0.7510807514190674
    3. ' if' → logprob: -4.001080513000488
    4. ' ==' → logprob: -4.501080513000488
    5. ',' → logprob: -5.001080513000488
    6. ':
' → logprob: -5.501080513000488
    7. ' =' → logprob: -5.876080513000488
    8. '
' → logprob: -6.376080513000488
    9. '==' → logprob: -6.376080513000488
    10. '        
' → logprob: -6.501080513000488

Token 671: ' have' (ID: 679)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5911473631858826
    2. ' be' → logprob: -1.3411474227905273
    3. '=' → logprob: -2.4661474227905273
    4. '       ' → logprob: -3.0911474227905273
    5. ' ==' → logprob: -3.9661474227905273
    6. 'return' → logprob: -4.341147422790527
    7. 'be' → logprob: -5.466147422790527
    8. 'indent' → logprob: -5.966147422790527
    9. '>' → logprob: -6.091147422790527
    10. ' return' → logprob: -6.216147422790527

Token 672: ' indentation' (ID: 170733)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2821662127971649
    2. 'self' → logprob: -1.6571662425994873
    3. 'indent' → logprob: -2.9071662425994873
    4. 'ind' → logprob: -8.407166481018066
    5. '       ' → logprob: -10.032166481018066
    6. 'no' → logprob: -10.032166481018066
    7. 'zero' → logprob: -10.532166481018066
    8. '   ' → logprob: -10.532166481018066
    9. '(self' → logprob: -10.532166481018066
    10. ' self' → logprob: -10.532166481018066

Token 673: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05900762975215912
    2. ' ==' → logprob: -3.9340076446533203
    3. ' and' → logprob: -4.55900764465332
    4. '==' → logprob: -4.93400764465332
    5. ',' → logprob: -5.18400764465332
    6. ' =' → logprob: -5.30900764465332
    7. ' if' → logprob: -5.80900764465332
    8. '0' → logprob: -6.18400764465332
    9. '=' → logprob: -6.43400764465332
    10. 'if' → logprob: -7.30900764465332

Token 674: '0' (ID: 15)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04450296238064766
    2. '=' → logprob: -3.9195029735565186
    3. ' ==' → logprob: -3.9195029735565186
    4. '0' → logprob: -6.1695027351379395
    5. '       ' → logprob: -6.5445027351379395
    6. ' =' → logprob: -9.669503211975098
    7. '()==' → logprob: -10.294503211975098
    8. ' and' → logprob: -10.419503211975098
    9. ',' → logprob: -10.544503211975098
    10. '==
' → logprob: -10.669503211975098

Token 675: ' always' (ID: 3324)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01000597607344389
    2. '
' → logprob: -4.635005950927734
    3. ',' → logprob: -8.510005950927734
    4. '<|end|>' → logprob: -11.260005950927734
    5. '        
' → logprob: -11.760005950927734
    6. ':' → logprob: -12.510005950927734
    7. ' if' → logprob: -12.635005950927734
    8. ' =' → logprob: -13.135005950927734
    9. 'if' → logprob: -13.135005950927734
    10. ' and' → logprob: -13.260005950927734

Token 676: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006930981762707233
    2. '
' → logprob: -5.006930828094482
    3. 'if' → logprob: -9.63193130493164
    4. ' if' → logprob: -10.13193130493164
    5. ',' → logprob: -10.25693130493164
    6. ' for' → logprob: -10.75693130493164
    7. 'for' → logprob: -11.00693130493164
    8. '
' → logprob: -11.88193130493164
    9. '        
' → logprob: -11.88193130493164
    10. '```' → logprob: -12.00693130493164

Token 677: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.9795445849886164e-05
    2. '
' → logprob: -10.500060081481934
    3. ' if' → logprob: -11.625060081481934
    4. '<|end|>' → logprob: -12.000060081481934
    5. ',' → logprob: -12.250060081481934
    6. '   ' → logprob: -12.875060081481934
    7. '```' → logprob: -13.125060081481934
    8. '        
' → logprob: -13.125060081481934
    9. ')' → logprob: -13.250060081481934
    10. 'if' → logprob: -13.500060081481934

Token 678: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6134734153747559
    2. 'if' (adapté à ' if') → logprob: -0.8634734153747559
    3. ' if' → logprob: -3.613473415374756
    4. 'for' → logprob: -4.738473415374756
    5. ' for' → logprob: -6.988473415374756
    6. '
' → logprob: -8.613473892211914
    7. '   ' → logprob: -11.738473892211914
    8. '```' → logprob: -12.363473892211914
    9. 'prev' → logprob: -13.238473892211914
    10. 'indent' → logprob: -13.613473892211914

Token 679: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1270754039287567
    2. ' self' → logprob: -2.127075433731079
    3. '       ' → logprob: -10.2520751953125
    4. 'len' → logprob: -10.2520751953125
    5. '0' → logprob: -10.5020751953125
    6. '           ' → logprob: -11.1270751953125
    7. ' not' → logprob: -11.3770751953125
    8. ' len' → logprob: -11.5020751953125
    9. 'not' → logprob: -12.0020751953125
    10. '(self' → logprob: -12.7520751953125

Token 680: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0010634170612320304
    2. '.valid' → logprob: -7.001063346862793
    3. '.' → logprob: -9.251063346862793
    4. '.ind' → logprob: -10.626063346862793
    5. 'valid' → logprob: -11.126063346862793
    6. 'p' → logprob: -11.751063346862793
    7. 'indent' → logprob: -12.501063346862793
    8. ' p' → logprob: -14.001063346862793
    9. ' .' → logprob: -14.001063346862793
    10. '.is' → logprob: -14.126063346862793

Token 681: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -4.978233846486546e-05
    2. '._' → logprob: -11.250049591064453
    3. '.program' → logprob: -11.375049591064453
    4. 'program' → logprob: -11.625049591064453
    5. '.p' → logprob: -11.875049591064453
    6. 'p' → logprob: -12.375049591064453
    7. 'rogram' → logprob: -13.750049591064453
    8. '_PROGRAM' → logprob: -13.875049591064453
    9. '.' → logprob: -14.000049591064453
    10. 'Program' → logprob: -14.500049591064453

Token 682: '.ind' (ID: 51969)
  Prédit: '.ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ind' → logprob: -0.00020890454470645636
    2. '.lines' → logprob: -8.500208854675293
    3. '.' → logprob: -12.750208854675293
    4. '.p' → logprob: -14.125208854675293
    5. '[ind' → logprob: -14.375208854675293
    6. 'indent' → logprob: -15.000208854675293
    7. '.indices' → logprob: -15.625208854675293
    8. '.def' → logprob: -16.00020980834961
    9. 'ind' → logprob: -16.50020980834961
    10. '   ' → logprob: -16.50020980834961

Token 683: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.0007118358626030385
    2. 'entation' → logprob: -8.000711441040039
    3. 'entions' → logprob: -8.125711441040039
    4. '   ' → logprob: -10.750711441040039
    5. 'indent' → logprob: -11.000711441040039
    6. '       ' → logprob: -11.625711441040039
    7. '```' → logprob: -11.875711441040039
    8. 'et' → logprob: -12.750711441040039
    9. 'nt' → logprob: -13.000711441040039
    10. 'ented' → logprob: -13.125711441040039

Token 684: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -1.8624639324116288e-06
    2. 'ation' → logprob: -13.500001907348633
    3. '[' → logprob: -15.125001907348633
    4. '   ' → logprob: -16.125001907348633
    5. 'ions' → logprob: -17.500001907348633
    6. 'entions' → logprob: -17.625001907348633
    7. 's' → logprob: -18.375001907348633
    8. '_' → logprob: -18.625001907348633
    9. '       ' → logprob: -19.125001907348633
    10. 'ings' → logprob: -19.375001907348633

Token 685: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. ' and' → logprob: -14.625000953674316
    3. '0' → logprob: -15.625000953674316
    4. '       ' → logprob: -16.75
    5. 'and' → logprob: -16.75
    6. '==' → logprob: -17.25
    7. '           ' → logprob: -17.25
    8. '   ' → logprob: -17.375
    9. '!=' → logprob: -17.375
    10. '```' → logprob: -17.5

Token 686: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.000001907348633
    3. '[' → logprob: -15.125001907348633
    4. ']' → logprob: -16.375001907348633
    5. '   ' → logprob: -16.375001907348633
    6. '][' → logprob: -16.500001907348633
    7. '
' → logprob: -16.625001907348633
    8. ')' → logprob: -17.500001907348633
    9. '```' → logprob: -17.750001907348633
    10. '1' → logprob: -17.750001907348633

Token 687: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.2515895962715149
    2. ' !=' → logprob: -2.00158953666687
    3. ']!=' → logprob: -2.62658953666687
    4. ']' → logprob: -4.251589775085449
    5. ')!=' → logprob: -7.251589775085449
    6. '()!=' → logprob: -10.87658977508545
    7. ')' → logprob: -12.12658977508545
    8. '!==' → logprob: -12.37658977508545
    9. ' ]' → logprob: -12.75158977508545
    10. '>' → logprob: -13.37658977508545

Token 688: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.002482434967532754
    2. ' !=' → logprob: -6.0024824142456055
    3. ')!=' → logprob: -12.252482414245605
    4. ']!=' → logprob: -13.877482414245605
    5. '()!=' → logprob: -14.627482414245605
    6. '!==' → logprob: -15.502482414245605
    7. '==' → logprob: -15.752482414245605
    8. '!=(' → logprob: -16.377483367919922
    9. '!="' → logprob: -16.627483367919922
    10. '!='' → logprob: -16.752483367919922

Token 689: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '   ' → logprob: -20.00020408630371
    4. '           ' → logprob: -21.12520408630371
    5. '۰' → logprob: -21.12520408630371
    6. '       ' → logprob: -22.25020408630371
    7. '=' → logprob: -22.37520408630371
    8. '  ' → logprob: -22.37520408630371
    9. ' ' → logprob: -22.50020408630371
    10. ' ' → logprob: -22.93770408630371

Token 690: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -19.62500762939453
    4. '۰' → logprob: -20.50000762939453
    5. '=' → logprob: -20.75000762939453
    6. '       ' → logprob: -21.12500762939453
    7. '           ' → logprob: -21.37500762939453
    8. ')' → logprob: -22.12500762939453
    9. '  ' → logprob: -22.50000762939453
    10. '     ' → logprob: -22.75000762939453

Token 691: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36519384384155273
    2. ':
' → logprob: -1.3651938438415527
    3. '           ' → logprob: -3.1151938438415527
    4. ':return' → logprob: -5.990193843841553
    5. ' or' → logprob: -6.115193843841553
    6. '       ' → logprob: -6.615193843841553
    7. '               ' → logprob: -9.615194320678711
    8. '):
' → logprob: -10.490194320678711
    9. ' and' → logprob: -10.990194320678711
    10. ',' → logprob: -11.365194320678711

Token 692: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003769327886402607
    2. '       ' → logprob: -6.253769397735596
    3. ':' → logprob: -6.878769397735596
    4. ':
' → logprob: -7.378769397735596
    5. '               ' → logprob: -9.753768920898438
    6. 'return' → logprob: -10.378768920898438
    7. '
' → logprob: -10.378768920898438
    8. ':return' → logprob: -10.503768920898438
    9. '                       ' → logprob: -11.878768920898438
    10. ' return' → logprob: -12.378768920898438

Token 693: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002541655208915472
    2. '           ' → logprob: -6.502541542053223
    3. ' return' → logprob: -7.002541542053223
    4. '               ' → logprob: -9.002541542053223
    5. '	return' → logprob: -12.627541542053223
    6. '
' → logprob: -14.127541542053223
    7. '{return' → logprob: -14.377541542053223
    8. ':return' → logprob: -14.502541542053223
    9. '       ' → logprob: -14.877541542053223
    10. '                       ' → logprob: -15.127541542053223

Token 694: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.5491004129871726e-05
    2. ' False' → logprob: -10.000045776367188
    3. '(False' → logprob: -17.625045776367188
    4. '=False' → logprob: -20.625045776367188
    5. '   ' → logprob: -20.750045776367188
    6. '
' → logprob: -21.250045776367188
    7. 'True' → logprob: -22.250045776367188
    8. 'F' → logprob: -23.125045776367188
    9. 'false' → logprob: -23.125045776367188
    10. 'FALSE' → logprob: -23.625045776367188

Token 695: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22592543065547943
    2. '
' → logprob: -1.6009254455566406
    3. '        
' → logprob: -7.850925445556641
    4. '<|end|>' → logprob: -10.60092544555664
    5. '

' → logprob: -10.85092544555664
    6. '   ' → logprob: -11.22592544555664
    7. '```' → logprob: -11.60092544555664
    8. '  
' → logprob: -11.60092544555664
    9. ' for' → logprob: -11.72592544555664
    10. 'for' → logprob: -11.72592544555664

Token 696: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014215784904081374
    2. 'for' → logprob: -9.375142097473145
    3. '
' → logprob: -10.625142097473145
    4. ' for' → logprob: -10.875142097473145
    5. '<|end|>' → logprob: -12.000142097473145
    6. '        
' → logprob: -12.750142097473145
    7. '```' → logprob: -14.000142097473145
    8. ',' → logprob: -14.125142097473145
    9. 'import' → logprob: -14.250142097473145
    10. '   ' → logprob: -14.375142097473145

Token 697: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0070808446034789085
    2. 'for' (adapté à ' for') → logprob: -5.257081031799316
    3. 'prev' → logprob: -6.882081031799316
    4. ' for' → logprob: -7.632081031799316
    5. 'previous' → logprob: -9.007081031799316
    6. 'br' → logprob: -9.882081031799316
    7. 'ro' → logprob: -10.757081031799316
    8. ' previous' → logprob: -10.757081031799316
    9. '
' → logprob: -10.757081031799316
    10. 'prefix' → logprob: -10.882081031799316

Token 698: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.015225415118038654
    2. ' i' → logprob: -4.265225410461426
    3. 'line' → logprob: -7.265225410461426
    4. 'idx' → logprob: -8.515225410461426
    5. '   ' → logprob: -9.640225410461426
    6. '       ' → logprob: -9.890225410461426
    7. ' idx' → logprob: -10.390225410461426
    8. ' line' → logprob: -11.515225410461426
    9. '           ' → logprob: -13.140225410461426
    10. ' linen' → logprob: -14.265225410461426

Token 699: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013314292300492525
    2. 'in' → logprob: -6.626331329345703
    3. '	in' → logprob: -13.001331329345703
    4. ' ' → logprob: -13.126331329345703
    5. ' i' → logprob: -14.876331329345703
    6. ',' → logprob: -15.751331329345703
    7. '   ' → logprob: -15.876331329345703
    8. '<|end|>' → logprob: -16.001331329345703
    9. '  ' → logprob: -16.376331329345703
    10. '1' → logprob: -16.376331329345703

Token 700: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06196914613246918
    2. ' range' → logprob: -2.811969041824341
    3. '   ' → logprob: -14.311968803405762
    4. ' ' → logprob: -14.436968803405762
    5. '(range' → logprob: -15.936968803405762
    6. '  ' → logprob: -16.311969757080078
    7. '	range' → logprob: -16.811969757080078
    8. '
' → logprob: -18.311969757080078
    9. '    ' → logprob: -18.436969757080078
    10. '[' → logprob: -18.561969757080078

Token 701: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20899637043476105
    2. '1' → logprob: -1.8339964151382446
    3. ' ' → logprob: -3.583996295928955
    4. ' (' → logprob: -7.333996295928955
    5. '   ' → logprob: -8.208996772766113
    6. '       ' → logprob: -10.083996772766113
    7. ',' → logprob: -10.833996772766113
    8. '[' → logprob: -10.958996772766113
    9. '    ' → logprob: -11.458996772766113
    10. '<|end|>' → logprob: -11.583996772766113

Token 702: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015085970517247915
    2. 'len' → logprob: -8.875150680541992
    3. 'p' → logprob: -11.500150680541992
    4. ' ' → logprob: -14.750150680541992
    5. '0' → logprob: -15.625150680541992
    6. '   ' → logprob: -16.375150680541992
    7. ' len' → logprob: -16.750150680541992
    8. '(' → logprob: -17.000150680541992
    9. 'i' → logprob: -17.875150680541992
    10. '(len' → logprob: -18.000150680541992

Token 703: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004083891399204731
    2. ',len' → logprob: -8.125408172607422
    3. ' ,' → logprob: -9.250408172607422
    4. ',p' → logprob: -11.250408172607422
    5. '       ' → logprob: -14.375408172607422
    6. ',length' → logprob: -14.375408172607422
    7. ',
' → logprob: -14.750408172607422
    8. ',i' → logprob: -14.875408172607422
    9. '<|end|>' → logprob: -15.250408172607422
    10. '   ' → logprob: -15.750408172607422

Token 704: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02398969791829586
    2. ' len' → logprob: -3.773989677429199
    3. 'p' → logprob: -7.523989677429199
    4. '       ' → logprob: -9.6489896774292
    5. 'i' → logprob: -10.2739896774292
    6. '           ' → logprob: -10.6489896774292
    7. '(len' → logprob: -10.7739896774292
    8. ' p' → logprob: -11.2739896774292
    9. '   ' → logprob: -11.2739896774292
    10. '	len' → logprob: -11.8989896774292

Token 705: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.4259644558478612e-05
    2. 'self' → logprob: -11.375014305114746
    3. '(' → logprob: -13.375014305114746
    4. ' self' → logprob: -14.625014305114746
    5. ' (' → logprob: -14.625014305114746
    6. '[self' → logprob: -15.875014305114746
    7. ')' → logprob: -16.75001335144043
    8. '(
' → logprob: -17.37501335144043
    9. '=self' → logprob: -17.75001335144043
    10. '(this' → logprob: -17.87501335144043

Token 706: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -9.088346359931165e-07
    2. '.' → logprob: -14.500000953674316
    3. ' .' → logprob: -16.0
    4. ').' → logprob: -16.0
    5. 'p' → logprob: -16.875
    6. '(p' → logprob: -18.625
    7. '.п' → logprob: -18.875
    8. '.user' → logprob: -19.125
    9. ')p' → logprob: -19.25
    10. '
' → logprob: -19.625

Token 707: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -0.07993065565824509
    2. '.p' → logprob: -2.579930543899536
    3. '.program' → logprob: -7.204930782318115
    4. 'rogram' → logprob: -8.704930305480957
    5. '.lines' → logprob: -10.329930305480957
    6. 'Program' → logprob: -10.954930305480957
    7. 'p' → logprob: -11.204930305480957
    8. '_PROGRAM' → logprob: -11.204930305480957
    9. 'program' → logprob: -11.704930305480957
    10. '.' → logprob: -11.954930305480957

Token 708: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -2.3915141355246305e-05
    2. '.ind' → logprob: -10.87502384185791
    3. '.' → logprob: -12.50002384185791
    4. 'lines' → logprob: -14.87502384185791
    5. '	lines' → logprob: -15.00002384185791
    6. ').' → logprob: -15.75002384185791
    7. '(lines' → logprob: -16.250024795532227
    8. ' lines' → logprob: -16.625024795532227
    9. '   ' → logprob: -16.750024795532227
    10. '.indices' → logprob: -16.875024795532227

Token 709: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09328000992536545
    2. ')):
' → logprob: -2.593280076980591
    3. '):' → logprob: -4.343279838562012
    4. ')):' → logprob: -6.718279838562012
    5. '       ' → logprob: -9.843279838562012
    6. '):
' → logprob: -11.343279838562012
    7. ' ):
' → logprob: -12.593279838562012
    8. ')):
' → logprob: -12.843279838562012
    9. ']):
' → logprob: -13.093279838562012
    10. '():
' → logprob: -13.093279838562012

Token 710: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.372916686814278e-05
    2. '       ' → logprob: -10.6250638961792
    3. ' indentation' → logprob: -11.8750638961792
    4. 'Indent' → logprob: -12.1250638961792
    5. '```' → logprob: -12.2500638961792
    6. '<|end|>' → logprob: -12.5000638961792
    7. ' if' → logprob: -12.7500638961792
    8. ',' → logprob: -13.0000638961792
    9. 'indent' → logprob: -13.1250638961792
    10. '          ' → logprob: -13.2500638961792

Token 711: ' prev' (ID: 10258)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008917202241718769
    2. 'prev' (adapté à ' prev') → logprob: -5.758917331695557
    3. 'indent' → logprob: -6.383917331695557
    4. ' indent' → logprob: -7.133917331695557
    5. ' if' → logprob: -7.508917331695557
    6. ' prev' → logprob: -7.633917331695557
    7. 'expected' → logprob: -8.008916854858398
    8. 'prefix' → logprob: -8.008916854858398
    9. '
' → logprob: -8.508916854858398
    10. 'if' → logprob: -8.633916854858398

Token 712: '_bc' (ID: 169152)
  Prédit: '_bc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bc' → logprob: -0.010493181645870209
    2. ' =' → logprob: -5.635493278503418
    3. '_indent' → logprob: -6.010493278503418
    4. 'bc' → logprob: -6.135493278503418
    5. '_prefix' → logprob: -7.510493278503418
    6. '=' → logprob: -7.635493278503418
    7. '_line' → logprob: -7.760493278503418
    8. '_counter' → logprob: -8.135493278503418
    9. '_br' → logprob: -9.010493278503418
    10. '_b' → logprob: -9.635493278503418

Token 713: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300444945693016
    2. '=' → logprob: -3.1680045127868652
    3. 'p' → logprob: -13.293004035949707
    4. ',' → logprob: -13.418004035949707
    5. 'prefix' → logprob: -14.293004035949707
    6. '   ' → logprob: -14.418004035949707
    7. '_prefix' → logprob: -14.918004035949707
    8. ' ' → logprob: -15.293004035949707
    9. '=p' → logprob: -16.293004989624023
    10. '       ' → logprob: -16.293004989624023

Token 714: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011767742689698935
    2. ' self' → logprob: -6.751176834106445
    3. '           ' → logprob: -12.876176834106445
    4. '       ' → logprob: -13.376176834106445
    5. '(self' → logprob: -13.876176834106445
    6. '[self' → logprob: -14.626176834106445
    7. '=self' → logprob: -14.751176834106445
    8. '               ' → logprob: -15.626176834106445
    9. '   ' → logprob: -15.626176834106445
    10. ' ' → logprob: -17.376176834106445

Token 715: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -7.584239938296378e-06
    2. '.' → logprob: -13.375007629394531
    3. 'p' → logprob: -13.375007629394531
    4. 'self' → logprob: -13.500007629394531
    5. ' .' → logprob: -14.125007629394531
    6. '.br' → logprob: -14.250007629394531
    7. '.b' → logprob: -15.000007629394531
    8. 'br' → logprob: -15.375007629394531
    9. 'Bracket' → logprob: -15.500007629394531
    10. ' p' → logprob: -15.875007629394531

Token 716: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -0.02740604057908058
    2. 'rogram' → logprob: -3.6524059772491455
    3. 'program' → logprob: -6.902406215667725
    4. '.program' → logprob: -9.777405738830566
    5. 'p' → logprob: -11.152405738830566
    6. '_style' → logprob: -12.277405738830566
    7. '_PROGRAM' → logprob: -12.527405738830566
    8. 'ro' → logprob: -12.652405738830566
    9. 'ogram' → logprob: -13.152405738830566
    10. 'Program' → logprob: -13.152405738830566

Token 717: '.br' (ID: 24828)
  Prédit: '.br'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.br' → logprob: -0.0015498562715947628
    2. 'br' → logprob: -6.50154972076416
    3. '.b' → logprob: -10.62654972076416
    4. 'Bracket' → logprob: -11.50154972076416
    5. '	br' → logprob: -11.75154972076416
    6. ' bracket' → logprob: -12.75154972076416
    7. '_br' → logprob: -14.37654972076416
    8. '   ' → logprob: -14.87654972076416
    9. ' .' → logprob: -15.25154972076416
    10. 'r' → logprob: -15.50154972076416

Token 718: 'acket' (ID: 8480)
  Prédit: 'acket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acket' → logprob: -0.00013166792632546276
    2. 'ack' → logprob: -9.750131607055664
    3. '```' → logprob: -9.875131607055664
    4. 'a' → logprob: -11.375131607055664
    5. 'ackets' → logprob: -12.875131607055664
    6. 'ACKET' → logprob: -13.500131607055664
    7. 'asket' → logprob: -13.750131607055664
    8. 'ocket' → logprob: -14.500131607055664
    9. 'cket' → logprob: -14.625131607055664
    10. '`' → logprob: -14.875131607055664

Token 719: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -2.0100624169572257e-05
    2. 'c' → logprob: -10.875020027160645
    3. 's' → logprob: -14.250020027160645
    4. '_counter' → logprob: -15.500020027160645
    5. 'Counters' → logprob: -16.00002098083496
    6. '[' → logprob: -16.37502098083496
    7. '_counts' → logprob: -18.00002098083496
    8. 'counter' → logprob: -18.12502098083496
    9. '```' → logprob: -18.12502098083496
    10. '[i' → logprob: -18.25002098083496

Token 720: 'ounters' (ID: 36761)
  Prédit: 'ounters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounters' → logprob: -0.011452141217887402
    2. '_c' → logprob: -4.7614521980285645
    3. 'c' → logprob: -5.8864521980285645
    4. 'ounter' → logprob: -10.011451721191406
    5. 'ount' → logprob: -11.761451721191406
    6. '[' → logprob: -14.261451721191406
    7. '_' → logprob: -14.636451721191406
    8. 's' → logprob: -14.761451721191406
    9. 'oun' → logprob: -14.886451721191406
    10. 'o' → logprob: -15.511451721191406

Token 721: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00020532844064291567
    2. '           ' → logprob: -9.375205039978027
    3. '
' → logprob: -9.750205039978027
    4. '[' → logprob: -10.500205039978027
    5. '       ' → logprob: -11.375205039978027
    6. '            
' → logprob: -12.125205039978027
    7. '[-' → logprob: -12.250205039978027
    8. ' [' → logprob: -13.250205039978027
    9. '[self' → logprob: -13.375205039978027
    10. '               ' → logprob: -13.500205039978027

Token 722: ']
' (ID: 1592)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02042953111231327
    2. ' -' → logprob: -4.020429611206055
    3. ']' → logprob: -6.145429611206055
    4. ']
' → logprob: -9.770429611206055
    5. '       ' → logprob: -11.395429611206055
    6. '1' → logprob: -11.520429611206055
    7. 'prev' → logprob: -11.645429611206055
    8. '[' → logprob: -11.645429611206055
    9. '   ' → logprob: -11.645429611206055
    10. '][' → logprob: -11.895429611206055

Token 723: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06268888711929321
    2. '<|end|>' → logprob: -3.0626888275146484
    3. '       ' → logprob: -5.187688827514648
    4. '
' → logprob: -6.062688827514648
    5. '               ' → logprob: -6.562688827514648
    6. ',' → logprob: -7.062688827514648
    7. ' if' → logprob: -7.312688827514648
    8. '<|end|>' → logprob: -7.562688827514648
    9. '            
' → logprob: -7.812688827514648
    10. '[' → logprob: -8.187688827514648

Token 724: ' indent' (ID: 37655)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.056367095559835434
    2. 'current' → logprob: -3.1813671588897705
    3. 'cur' → logprob: -5.181366920471191
    4. ' curr' → logprob: -5.681366920471191
    5. 'prev' → logprob: -6.056366920471191
    6. '           ' → logprob: -6.681366920471191
    7. 'indent' (adapté à ' indent') → logprob: -8.056366920471191
    8. 'next' → logprob: -8.306366920471191
    9. ' current' → logprob: -9.931366920471191
    10. 'expected' → logprob: -12.306366920471191

Token 725: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27799057960510254
    2. '_expected' → logprob: -2.1529905796051025
    3. '=' → logprob: -2.5279905796051025
    4. '_required' → logprob: -3.9029905796051025
    5. '_needed' → logprob: -4.027990341186523
    6. '_diff' → logprob: -6.152990341186523
    7. '_pred' → logprob: -6.402990341186523
    8. '_cal' → logprob: -7.152990341186523
    9. '_calc' → logprob: -7.152990341186523
    10. '_style' → logprob: -7.527990341186523

Token 726: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.033992234617471695
    2. ' R' → logprob: -3.658992290496826
    3. 'self' → logprob: -5.033992290496826
    4. ' self' → logprob: -6.783992290496826
    5. 'Indent' → logprob: -11.908991813659668
    6. 'indent' → logprob: -12.783991813659668
    7. ' ' → logprob: -13.283991813659668
    8. '0' → logprob: -13.283991813659668
    9. ' indent' → logprob: -13.783991813659668
    10. '	R' → logprob: -13.908991813659668

Token 727: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04318404570221901
    2. '*' → logprob: -3.1681840419769287
    3. '*self' → logprob: -9.293184280395508
    4. '*(' → logprob: -9.918184280395508
    5. '*p' → logprob: -10.168184280395508
    6. '*object' → logprob: -13.543184280395508
    7. ',' → logprob: -13.918184280395508
    8. '*out' → logprob: -14.543184280395508
    9. '*i' → logprob: -14.793184280395508
    10. ')' → logprob: -14.793184280395508

Token 728: ' (' (ID: 350)
  Prédit: '(prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -0.10637564212083817
    2. 'prev' → logprob: -2.3563756942749023
    3. ' (' → logprob: -5.981375694274902
    4. '(self' → logprob: -6.231375694274902
    5. '(' → logprob: -7.231375694274902
    6. '(p' → logprob: -8.106375694274902
    7. 'self' → logprob: -8.731375694274902
    8. ' prev' → logprob: -9.106375694274902
    9. '(previous' → logprob: -9.231375694274902
    10. '(
' → logprob: -9.231375694274902

Token 729: 'prev' (ID: 15969)
  Prédit: 'prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.024420809000730515
    2. '(prev' → logprob: -3.774420738220215
    3. 'self' → logprob: -7.524420738220215
    4. ' prev' → logprob: -8.024420738220215
    5. '(self' → logprob: -9.524420738220215
    6. '(' → logprob: -9.649420738220215
    7. ' (' → logprob: -9.774420738220215
    8. 'p' → logprob: -10.149420738220215
    9. '           ' → logprob: -11.399420738220215
    10. '(p' → logprob: -11.649420738220215

Token 730: '_bc' (ID: 169152)
  Prédit: '_bc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bc' → logprob: -0.01704765297472477
    2. '.open' → logprob: -4.267047882080078
    3. 'bc' → logprob: -6.642047882080078
    4. 'open' → logprob: -6.892047882080078
    5. '.bc' → logprob: -8.392047882080078
    6. '[' → logprob: -9.017047882080078
    7. 'BC' → logprob: -10.517047882080078
    8. '_.' → logprob: -10.642047882080078
    9. 'Bc' → logprob: -10.767047882080078
    10. '_open' → logprob: -10.892047882080078

Token 731: '.open' (ID: 9702)
  Prédit: '.open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.open' → logprob: -0.0002273774443892762
    2. '[' → logprob: -9.250226974487305
    3. 'open' → logprob: -9.500226974487305
    4. '.' → logprob: -9.875226974487305
    5. ' open' → logprob: -14.375226974487305
    6. ' .' → logprob: -14.500226974487305
    7. '.op' → logprob: -14.500226974487305
    8. '	open' → logprob: -14.625226974487305
    9. '=open' → logprob: -14.625226974487305
    10. '_open' → logprob: -15.375226974487305

Token 732: '_round' (ID: 79298)
  Prédit: '_round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_round' → logprob: -3.190178904333152e-05
    2. 'round' → logprob: -10.500031471252441
    3. '_' → logprob: -12.875031471252441
    4. ')_' → logprob: -14.875031471252441
    5. ' _' → logprob: -15.125031471252441
    6. '(round' → logprob: -15.125031471252441
    7. ')' → logprob: -15.250031471252441
    8. 'Round' → logprob: -16.375032424926758
    9. '```' → logprob: -16.375032424926758
    10. '[_' → logprob: -16.500032424926758

Token 733: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.003608267055824399
    2. '-' → logprob: -5.628608226776123
    3. ')' → logprob: -12.753608703613281
    4. ' ' → logprob: -13.128608703613281
    5. ' -
' → logprob: -13.878608703613281
    6. ' ' → logprob: -14.878608703613281
    7. '        ' → logprob: -14.878608703613281
    8. '   ' → logprob: -15.128608703613281
    9. '-R' → logprob: -15.378608703613281
    10. '```' → logprob: -15.378608703613281

Token 734: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.00022690063633490354
    2. ' prev' → logprob: -8.500226974487305
    3. '	prev' → logprob: -11.125226974487305
    4. 'self' → logprob: -12.375226974487305
    5. '(prev' → logprob: -13.125226974487305
    6. '_prev' → logprob: -13.875226974487305
    7. '           ' → logprob: -14.750226974487305
    8. '.prev' → logprob: -15.250226974487305
    9. 'p' → logprob: -15.875226974487305
    10. ')' → logprob: -16.000226974487305

Token 735: '_bc' (ID: 169152)
  Prédit: '_bc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bc' → logprob: -0.00023619852436240762
    2. '_round' → logprob: -9.000236511230469
    3. 'bc' → logprob: -9.500236511230469
    4. 'round' → logprob: -11.500236511230469
    5. '.round' → logprob: -12.000236511230469
    6. '.bc' → logprob: -12.250236511230469
    7. '_prev' → logprob: -12.625236511230469
    8. 'prev' → logprob: -12.750236511230469
    9. '_cur' → logprob: -13.250236511230469
    10. '_rc' → logprob: -13.500236511230469

Token 736: '.close' (ID: 8183)
  Prédit: '.close'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.close' → logprob: -0.0001544321421533823
    2. '.' → logprob: -9.375154495239258
    3. '.open' → logprob: -9.625154495239258
    4. 'close' → logprob: -13.500154495239258
    5. ' .' → logprob: -13.625154495239258
    6. '.closed' → logprob: -14.125154495239258
    7. ').' → logprob: -16.375154495239258
    8. '.Close' → logprob: -17.250154495239258
    9. '[' → logprob: -18.375154495239258
    10. ' close' → logprob: -18.500154495239258

Token 737: '_round' (ID: 79298)
  Prédit: '_round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_round' → logprob: -4.4418171455617994e-05
    2. 'round' → logprob: -10.250044822692871
    3. '_' → logprob: -11.750044822692871
    4. ')' → logprob: -15.000044822692871
    5. ')_' → logprob: -15.375044822692871
    6. '(round' → logprob: -16.000043869018555
    7. 'i' → logprob: -16.125043869018555
    8. ' _' → logprob: -16.500043869018555
    9. 'Round' → logprob: -17.000043869018555
    10. '```' → logprob: -17.125043869018555

Token 738: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008399999933317304
    2. ')+' → logprob: -7.875840187072754
    3. ' +' → logprob: -8.625840187072754
    4. '+' → logprob: -8.875840187072754
    5. ' )' → logprob: -9.500840187072754
    6. '<|end|>' → logprob: -10.625840187072754
    7. '```' → logprob: -11.375840187072754
    8. '           ' → logprob: -12.500840187072754
    9. '                ' → logprob: -12.500840187072754
    10. '+)' → logprob: -12.875840187072754

Token 739: ' \
' (ID: 6814)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.18233825266361237
    2. '+' → logprob: -1.8073382377624512
    3. '            ' → logprob: -6.932338237762451
    4. '<|end|>' → logprob: -7.557338237762451
    5. '                ' → logprob: -7.807338237762451
    6. '                    ' → logprob: -8.68233871459961
    7. '           ' → logprob: -8.80733871459961
    8. '               ' → logprob: -9.30733871459961
    9. '                   ' → logprob: -9.55733871459961
    10. '        ' → logprob: -10.18233871459961

Token 740: '                    ' (ID: 7692)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14342710375785828
    2. '+' → logprob: -2.0184271335601807
    3. '                ' → logprob: -8.268426895141602
    4. '            ' → logprob: -8.393426895141602
    5. '                    ' → logprob: -9.393426895141602
    6. '           ' → logprob: -10.018426895141602
    7. '        ' → logprob: -10.518426895141602
    8. '               ' → logprob: -10.643426895141602
    9. '                   ' → logprob: -10.768426895141602
    10. '          ' → logprob: -10.893426895141602

Token 741: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' (adapté à ' +') → logprob: -0.12723307311534882
    2. ' +' → logprob: -2.1272330284118652
    3. '                    ' → logprob: -8.377233505249023
    4. '                ' → logprob: -10.377233505249023
    5. '                   ' → logprob: -11.752233505249023
    6. '            ' → logprob: -11.877233505249023
    7. '                     ' → logprob: -12.377233505249023
    8. '          ' → logprob: -12.627233505249023
    9. '           ' → logprob: -12.627233505249023
    10. '                  ' → logprob: -12.627233505249023

Token 742: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.012623480521142483
    2. ' C' → logprob: -4.387623310089111
    3. '                    ' → logprob: -10.63762378692627
    4. '    ' → logprob: -11.38762378692627
    5. '                ' → logprob: -11.38762378692627
    6. '   ' → logprob: -11.51262378692627
    7. '        ' → logprob: -11.51262378692627
    8. '                   ' → logprob: -11.63762378692627
    9. '            ' → logprob: -12.01262378692627
    10. '          ' → logprob: -12.26262378692627

Token 743: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.008615872822701931
    2. '*' → logprob: -4.758615970611572
    3. '<|end|>' → logprob: -14.133615493774414
    4. '*(' → logprob: -14.758615493774414
    5. '*object' → logprob: -16.258615493774414
    6. ' ' → logprob: -16.883615493774414
    7. ')' → logprob: -16.883615493774414
    8. '```' → logprob: -17.383615493774414
    9. '**' → logprob: -17.508615493774414
    10. '*[' → logprob: -18.758615493774414

Token 744: ' (' (ID: 350)
  Prédit: '(prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -0.3134516775608063
    2. ' (' → logprob: -1.3134516477584839
    3. '(' → logprob: -8.813451766967773
    4. '(previous' → logprob: -10.438451766967773
    5. '(pre' → logprob: -12.313451766967773
    6. '(pr' → logprob: -13.063451766967773
    7. '(next' → logprob: -13.813451766967773
    8. '(priv' → logprob: -13.938451766967773
    9. '(self' → logprob: -14.313451766967773
    10. '(p' → logprob: -14.813451766967773

Token 745: 'prev' (ID: 15969)
  Prédit: 'prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.49684515595436096
    2. '(prev' → logprob: -0.9968451261520386
    3. ' prev' → logprob: -3.996845245361328
    4. ' (' → logprob: -5.496845245361328
    5. '(' → logprob: -11.246845245361328
    6. '	prev' → logprob: -11.496845245361328
    7. '_prev' → logprob: -12.371845245361328
    8. '.prev' → logprob: -12.746845245361328
    9. ')' → logprob: -13.371845245361328
    10. '           ' → logprob: -14.121845245361328

Token 746: '_bc' (ID: 169152)
  Prédit: '_bc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bc' → logprob: -3.4121114822482923e-06
    2. 'bc' → logprob: -12.750003814697266
    3. '.bc' → logprob: -15.375003814697266
    4. 'open' → logprob: -15.875003814697266
    5. 'round' → logprob: -17.750003814697266
    6. 'Bc' → logprob: -18.000003814697266
    7. '_mc' → logprob: -18.250003814697266
    8. '```' → logprob: -18.375003814697266
    9. '_bs' → logprob: -18.375003814697266
    10. '_bd' → logprob: -18.500003814697266

Token 747: '.open' (ID: 9702)
  Prédit: '.open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.open' → logprob: -0.0001475220051361248
    2. '.' → logprob: -9.125147819519043
    3. 'open' → logprob: -10.500147819519043
    4. ' .' → logprob: -11.750147819519043
    5. '`.' → logprob: -14.625147819519043
    6. ' open' → logprob: -14.875147819519043
    7. '.close' → logprob: -15.125147819519043
    8. '.openapi' → logprob: -15.250147819519043
    9. '.opend' → logprob: -15.250147819519043
    10. '	open' → logprob: -15.375147819519043

Token 748: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -2.0100624169572257e-05
    2. '_square' → logprob: -11.125020027160645
    3. 'cur' → logprob: -12.250020027160645
    4. '_curve' → logprob: -15.625020027160645
    5. '_' → logprob: -16.25002098083496
    6. 'Cur' → logprob: -16.37502098083496
    7. '_c' → logprob: -17.00002098083496
    8. '{' → logprob: -17.25002098083496
    9. '_round' → logprob: -17.37502098083496
    10. '[cur' → logprob: -17.75002098083496

Token 749: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.005394661333411932
    2. '_round' → logprob: -5.755394458770752
    3. '_cur' → logprob: -7.255394458770752
    4. 'round' → logprob: -7.505394458770752
    5. 'cur' → logprob: -8.13039493560791
    6. 'l' → logprob: -8.50539493560791
    7. '   ' → logprob: -10.38039493560791
    8. '```' → logprob: -10.38039493560791
    9. '               ' → logprob: -10.75539493560791
    10. '_square' → logprob: -10.88039493560791

Token 750: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03804987296462059
    2. '-' → logprob: -3.2880499362945557
    3. ')' → logprob: -12.913049697875977
    4. '                    ' → logprob: -12.913049697875977
    5. ' ' → logprob: -13.163049697875977
    6. '                     ' → logprob: -14.163049697875977
    7. ' ' → logprob: -14.913049697875977
    8. '```' → logprob: -16.163049697875977
    9. '                   ' → logprob: -16.413049697875977
    10. '                ' → logprob: -17.163049697875977

Token 751: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.10043084621429443
    2. ' prev' → logprob: -2.350430965423584
    3. '_prev' → logprob: -8.850430488586426
    4. '(prev' → logprob: -9.850430488586426
    5. '	prev' → logprob: -10.975430488586426
    6. 'previous' → logprob: -12.725430488586426
    7. '.prev' → logprob: -12.725430488586426
    8. 'Prev' → logprob: -12.850430488586426
    9. ' previous' → logprob: -13.850430488586426
    10. '<|end|>' → logprob: -14.100430488586426

Token 752: '_bc' (ID: 169152)
  Prédit: '_bc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bc' → logprob: -0.30183061957359314
    2. '_cur' → logprob: -1.6768306493759155
    3. 'bc' → logprob: -3.176830530166626
    4. 'cur' → logprob: -3.926830530166626
    5. 'prev' → logprob: -4.426830768585205
    6. '_prev' → logprob: -9.426830291748047
    7. '_c' → logprob: -10.426830291748047
    8. 'Cur' → logprob: -11.301830291748047
    9. 'BC' → logprob: -11.551830291748047
    10. 'Bc' → logprob: -11.676830291748047

Token 753: '.close' (ID: 8183)
  Prédit: '.close'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.close' → logprob: -0.03712688758969307
    2. '_cur' → logprob: -3.7871267795562744
    3. '.cur' → logprob: -4.7871270179748535
    4. 'close' → logprob: -6.0371270179748535
    5. 'cur' → logprob: -6.4121270179748535
    6. '_close' → logprob: -7.2871270179748535
    7. '.open' → logprob: -7.5371270179748535
    8. 'open' → logprob: -9.287126541137695
    9. ')' → logprob: -10.037126541137695
    10. '[cur' → logprob: -11.162126541137695

Token 754: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -6.694766489090398e-05
    2. 'cur' → logprob: -9.625066757202148
    3. 'Cur' → logprob: -14.750066757202148
    4. '[cur' → logprob: -16.37506675720215
    5. '{' → logprob: -16.62506675720215
    6. '_' → logprob: -16.75006675720215
    7. '_c' → logprob: -17.00006675720215
    8. '	cur' → logprob: -17.00006675720215
    9. '.cur' → logprob: -17.12506675720215
    10. '_curr' → logprob: -17.50006675720215

Token 755: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.00015109812375158072
    2. 'y' → logprob: -8.875150680541992
    3. 'l' → logprob: -13.000150680541992
    4. '        ' → logprob: -13.625150680541992
    5. '    ' → logprob: -13.875150680541992
    6. '1' → logprob: -13.875150680541992
    7. ' ' → logprob: -13.875150680541992
    8. '   ' → logprob: -14.250150680541992
    9. '  ' → logprob: -14.625150680541992
    10. '                   ' → logprob: -15.000150680541992

Token 756: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4378848391061183e-05
    2. ' )' → logprob: -12.125014305114746
    3. '                    ' → logprob: -12.500014305114746
    4. ')+' → logprob: -13.000014305114746
    5. '                   ' → logprob: -13.500014305114746
    6. ')
' → logprob: -14.250014305114746
    7. '```' → logprob: -15.375014305114746
    8. '                     ' → logprob: -15.500014305114746
    9. ')\
' → logprob: -15.875014305114746
    10. '   ' → logprob: -17.250015258789062

Token 757: ' \
' (ID: 6814)
  Prédit: '                    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                    ' → logprob: -0.0015442610019817948
    2. '                   ' → logprob: -6.87654447555542
    3. ' +' → logprob: -8.501543998718262
    4. '                     ' → logprob: -9.251543998718262
    5. '+' → logprob: -9.626543998718262
    6. '                        ' → logprob: -9.626543998718262
    7. '                ' → logprob: -10.876543998718262
    8. '                            ' → logprob: -10.876543998718262
    9. '            ' → logprob: -11.626543998718262
    10. '                  ' → logprob: -11.626543998718262

Token 758: '                    ' (ID: 7692)
  Prédit: '                    '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                    ' → logprob: -0.004606826696544886
    2. ' +' → logprob: -5.5046067237854
    3. '+' → logprob: -8.254607200622559
    4. '                     ' → logprob: -9.004607200622559
    5. '                   ' → logprob: -9.504607200622559
    6. '                ' → logprob: -10.629607200622559
    7. '            ' → logprob: -11.129607200622559
    8. '```' → logprob: -11.254607200622559
    9. '                        ' → logprob: -11.504607200622559
    10. '                  ' → logprob: -12.879607200622559

Token 759: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' (adapté à ' +') → logprob: -0.2048570215702057
    2. ' +' → logprob: -1.7048569917678833
    3. '                    ' → logprob: -5.704856872558594
    4. '                     ' → logprob: -9.454856872558594
    5. '                   ' → logprob: -12.079856872558594
    6. '                ' → logprob: -12.329856872558594
    7. '*' → logprob: -12.704856872558594
    8. '            ' → logprob: -12.829856872558594
    9. '```' → logprob: -13.079856872558594
    10. 'S' → logprob: -13.204856872558594

Token 760: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.38700202107429504
    2. ' S' → logprob: -1.1370019912719727
    3. '                    ' → logprob: -9.512001991271973
    4. '                   ' → logprob: -11.137001991271973
    5. ' ' → logprob: -12.012001991271973
    6. '           ' → logprob: -12.262001991271973
    7. '                     ' → logprob: -12.262001991271973
    8. '                ' → logprob: -12.387001991271973
    9. '          ' → logprob: -12.762001991271973
    10. '            ' → logprob: -12.887001991271973

Token 761: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.008615872822701931
    2. '*' → logprob: -4.758615970611572
    3. '*(' → logprob: -14.258615493774414
    4. '                    ' → logprob: -15.508615493774414
    5. '<|end|>' → logprob: -15.883615493774414
    6. ')' → logprob: -16.133615493774414
    7. '**' → logprob: -16.508615493774414
    8. ' ' → logprob: -16.883615493774414
    9. '```' → logprob: -17.008615493774414
    10. ' ' → logprob: -17.008615493774414

Token 762: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.20145650207996368
    2. '(prev' → logprob: -1.7014565467834473
    3. '(pre' → logprob: -11.201456069946289
    4. '(' → logprob: -11.326456069946289
    5. '(previous' → logprob: -11.326456069946289
    6. '(pr' → logprob: -13.326456069946289
    7. '(priv' → logprob: -13.951456069946289
    8. '(pref' → logprob: -13.951456069946289
    9. ' ' → logprob: -14.826456069946289
    10. '(pc' → logprob: -15.076456069946289

Token 763: 'prev' (ID: 15969)
  Prédit: '(prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -0.0006323783891275525
    2. ' (' → logprob: -7.375632286071777
    3. 'prev' → logprob: -13.125632286071777
    4. '(previous' → logprob: -13.125632286071777
    5. '(pr' → logprob: -14.625632286071777
    6. '(pre' → logprob: -15.000632286071777
    7. '(' → logprob: -15.125632286071777
    8. '(priv' → logprob: -15.750632286071777
    9. ')' → logprob: -16.250633239746094
    10. '(p' → logprob: -16.250633239746094

Token 764: '_bc' (ID: 169152)
  Prédit: '_bc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bc' → logprob: -7.886803359724581e-05
    2. 'bc' → logprob: -9.750079154968262
    3. '_sq' → logprob: -11.875079154968262
    4. '_square' → logprob: -12.375079154968262
    5. 'prev' → logprob: -13.000079154968262
    6. 'square' → logprob: -13.250079154968262
    7. '_prev' → logprob: -14.000079154968262
    8. '_round' → logprob: -14.250079154968262
    9. '_rc' → logprob: -14.375079154968262
    10. 'round' → logprob: -14.500079154968262

Token 765: '.open' (ID: 9702)
  Prédit: '.open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.open' → logprob: -1.8193366486229934e-05
    2. 'open' → logprob: -11.500018119812012
    3. '.' → logprob: -12.375018119812012
    4. ' .' → logprob: -13.375018119812012
    5. '.square' → logprob: -13.875018119812012
    6. '(open' → logprob: -15.375018119812012
    7. '.close' → logprob: -15.500018119812012
    8. '=open' → logprob: -15.625018119812012
    9. '	open' → logprob: -15.875018119812012
    10. '[' → logprob: -16.000019073486328

Token 766: '_square' (ID: 99463)
  Prédit: '_square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_square' → logprob: -1.8624639324116288e-06
    2. 'square' → logprob: -13.500001907348633
    3. '_' → logprob: -15.375001907348633
    4. '_squared' → logprob: -16.000001907348633
    5. '_s' → logprob: -17.875001907348633
    6. '_sq' → logprob: -18.375001907348633
    7. 'Square' → logprob: -18.750001907348633
    8. '_round' → logprob: -18.875001907348633
    9. ' square' → logprob: -19.125001907348633
    10. ' _' → logprob: -19.875001907348633

Token 767: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07930029183626175
    2. '-' → logprob: -2.5793004035949707
    3. ')' → logprob: -7.829300403594971
    4. ' ' → logprob: -11.829299926757812
    5. ' ' → logprob: -13.704299926757812
    6. ' -
' → logprob: -14.204299926757812
    7. '-)' → logprob: -14.454299926757812
    8. '<|end|>' → logprob: -14.579299926757812
    9. ' )' → logprob: -15.329299926757812
    10. ')-' → logprob: -15.454299926757812

Token 768: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.20142045617103577
    2. ' prev' → logprob: -1.7014204263687134
    3. '	prev' → logprob: -12.576420783996582
    4. '_prev' → logprob: -13.201420783996582
    5. '(prev' → logprob: -13.576420783996582
    6. '.prev' → logprob: -14.951420783996582
    7. ' ' → logprob: -16.701419830322266
    8. '           ' → logprob: -16.951419830322266
    9. 'Prev' → logprob: -17.076419830322266
    10. '-prev' → logprob: -17.201419830322266

Token 769: '_bc' (ID: 169152)
  Prédit: '_square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_square' → logprob: -0.2077399045228958
    2. 'prev' → logprob: -1.9577399492263794
    3. '_bc' → logprob: -3.45773983001709
    4. 'square' → logprob: -5.45773983001709
    5. 'bc' → logprob: -5.58273983001709
    6. '_sq' → logprob: -6.20773983001709
    7. '_cur' → logprob: -6.33273983001709
    8. 'cur' → logprob: -6.58273983001709
    9. '_sc' → logprob: -6.83273983001709
    10. '_prev' → logprob: -8.33273983001709

Token 770: '.close' (ID: 8183)
  Prédit: 'close'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'close' → logprob: -0.610654354095459
    2. '_square' → logprob: -0.860654354095459
    3. 'square' → logprob: -3.610654354095459
    4. '_sc' → logprob: -5.735654354095459
    5. 'sc' → logprob: -6.735654354095459
    6. '_close' → logprob: -6.985654354095459
    7. ')' → logprob: -7.610654354095459
    8. 'closed' → logprob: -8.235654830932617
    9. 'open' → logprob: -8.360654830932617
    10. ' close' → logprob: -8.485654830932617

Token 771: '_square' (ID: 99463)
  Prédit: '_square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_square' → logprob: -0.08474736660718918
    2. 'square' → logprob: -2.584747314453125
    3. ')' → logprob: -5.209747314453125
    4. '_round' → logprob: -8.584747314453125
    5. '[i' → logprob: -10.334747314453125
    6. '_s' → logprob: -10.584747314453125
    7. 'cur' → logprob: -10.959747314453125
    8. ']' → logprob: -11.084747314453125
    9. '_squared' → logprob: -11.334747314453125
    10. '```' → logprob: -11.334747314453125

Token 772: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002587192924693227
    2. ')
' → logprob: -6.00258731842041
    3. '           ' → logprob: -10.12758731842041
    4. '       ' → logprob: -11.12758731842041
    5. '               ' → logprob: -11.37758731842041
    6. '):
' → logprob: -11.37758731842041
    7. ')return' → logprob: -11.62758731842041
    8. ' )' → logprob: -11.75258731842041
    9. '                   ' → logprob: -12.12758731842041
    10. '<|end|>' → logprob: -12.87758731842041

Token 773: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00550208380445838
    2. '
' → logprob: -6.005502223968506
    3. '		' → logprob: -6.755502223968506
    4. ' ==' → logprob: -7.630502223968506
    5. '<|end|>' → logprob: -8.005501747131348
    6. '==' → logprob: -8.130501747131348
    7. '                   ' → logprob: -8.755501747131348
    8. '               ' → logprob: -9.130501747131348
    9. '       ' → logprob: -9.130501747131348
    10. '<|end|>' → logprob: -9.505501747131348

Token 774: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07815107703208923
    2. 'if' (adapté à ' if') → logprob: -2.703150987625122
    3. ' if' → logprob: -4.828151226043701
    4. '       ' → logprob: -9.328150749206543
    5. '```' → logprob: -10.203150749206543
    6. '
' → logprob: -10.953150749206543
    7. '   ' → logprob: -11.953150749206543
    8. '                   ' → logprob: -12.203150749206543
    9. 'If' → logprob: -12.328150749206543
    10. '            
' → logprob: -12.453150749206543

Token 775: ' indent' (ID: 37655)
  Prédit: 'indent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indent' → logprob: -0.2520367503166199
    2. ' indent' → logprob: -1.5020368099212646
    3. 'self' → logprob: -9.627037048339844
    4. ' self' → logprob: -10.377037048339844
    5. '(indent' → logprob: -12.252037048339844
    6. 'ind' → logprob: -13.002037048339844
    7. '   ' → logprob: -13.877037048339844
    8. ' ' → logprob: -14.127037048339844
    9. '_indent' → logprob: -14.252037048339844
    10. 'Indent' → logprob: -15.502037048339844

Token 776: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.10020828247070312
    2. ' !=' → logprob: -2.350208282470703
    3. ')!=' → logprob: -14.975208282470703
    4. '!==' → logprob: -15.225208282470703
    5. '()!=' → logprob: -15.350208282470703
    6. '!=(' → logprob: -15.475208282470703
    7. '!=-' → logprob: -15.975208282470703
    8. '<' → logprob: -16.100208282470703
    9. ']!=' → logprob: -16.475208282470703
    10. '   ' → logprob: -16.600208282470703

Token 777: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014165983535349369
    2. ' self' → logprob: -4.264165878295898
    3. '           ' → logprob: -13.639165878295898
    4. '[self' → logprob: -15.014165878295898
    5. '(self' → logprob: -15.389165878295898
    6. '       ' → logprob: -15.514165878295898
    7. '=self' → logprob: -16.0141658782959
    8. '	self' → logprob: -16.0141658782959
    9. '               ' → logprob: -16.3891658782959
    10. '   ' → logprob: -16.6391658782959

Token 778: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -6.511406809295295e-06
    2. 'p' → logprob: -12.250006675720215
    3. '.' → logprob: -13.500006675720215
    4. ' .' → logprob: -16.2500057220459
    5. ' p' → logprob: -16.3750057220459
    6. '<p' → logprob: -17.2500057220459
    7. ').' → logprob: -17.6250057220459
    8. '
' → logprob: -17.6250057220459
    9. 'Indent' → logprob: -17.8750057220459
    10. 'indent' → logprob: -18.0000057220459

Token 779: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -0.2831014394760132
    2. 'rogram' → logprob: -1.4081014394760132
    3. 'program' → logprob: -6.283101558685303
    4. 'p' → logprob: -10.783101081848145
    5. 'ogram' → logprob: -11.158101081848145
    6. 'ro' → logprob: -11.158101081848145
    7. '_style' → logprob: -11.783101081848145
    8. '```' → logprob: -12.908101081848145
    9. '_PROGRAM' → logprob: -12.908101081848145
    10. 'Program' → logprob: -13.033101081848145

Token 780: '.ind' (ID: 51969)
  Prédit: '.ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ind' → logprob: -0.005324362311512232
    2. '.' → logprob: -5.255324363708496
    3. ' .' → logprob: -10.255324363708496
    4. 'indent' → logprob: -10.630324363708496
    5. '[ind' → logprob: -11.005324363708496
    6. 'Indent' → logprob: -12.005324363708496
    7. ' indent' → logprob: -12.380324363708496
    8. '.lines' → logprob: -14.005324363708496
    9. 'ind' → logprob: -14.380324363708496
    10. '_indent' → logprob: -14.630324363708496

Token 781: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.0003672748862300068
    2. 'entions' → logprob: -8.625367164611816
    3. 'ations' → logprob: -8.750367164611816
    4. 'et' → logprob: -11.375367164611816
    5. 't' → logprob: -11.500367164611816
    6. 'entation' → logprob: -12.750367164611816
    7. 'indent' → logprob: -13.625367164611816
    8. 'ents' → logprob: -13.750367164611816
    9. '
' → logprob: -14.750367164611816
    10. '\' → logprob: -14.875367164611816

Token 782: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: 0.0
    2. 'ation' → logprob: -18.125
    3. 'ATIONS' → logprob: -19.0
    4. '_' → logprob: -19.625
    5. 't' → logprob: -19.875
    6. '   ' → logprob: -20.125
    7. '       ' → logprob: -20.375
    8. '[' → logprob: -20.5
    9. 's' → logprob: -20.625
    10. 'a' → logprob: -21.0

Token 783: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.107425062713446e-06
    2. '[' → logprob: -11.875006675720215
    3. '[
' → logprob: -16.00000762939453
    4. ' [' → logprob: -17.37500762939453
    5. 'i' → logprob: -19.00000762939453
    6. '   ' → logprob: -19.25000762939453
    7. '[I' → logprob: -20.12500762939453
    8. '       ' → logprob: -20.25000762939453
    9. '```' → logprob: -20.50000762939453
    10. '[self' → logprob: -20.62500762939453

Token 784: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6808411478996277
    2. ':' → logprob: -1.0558412075042725
    3. '):
' → logprob: -2.3058412075042725
    4. '               ' → logprob: -3.8058412075042725
    5. '           ' → logprob: -4.680840969085693
    6. '       ' → logprob: -5.430840969085693
    7. '):' → logprob: -5.680840969085693
    8. ':return' → logprob: -5.680840969085693
    9. '<|end|>' → logprob: -6.430840969085693
    10. ']:
' → logprob: -7.555840969085693

Token 785: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06653590500354767
    2. '                       ' → logprob: -2.8165359497070312
    3. '                   ' → logprob: -6.066535949707031
    4. '                               ' → logprob: -7.441535949707031
    5. '                           ' → logprob: -7.566535949707031
    6. '           ' → logprob: -8.066535949707031
    7. 'return' → logprob: -8.066535949707031
    8. ' return' → logprob: -9.191535949707031
    9. '                ' → logprob: -9.566535949707031
    10. '              ' → logprob: -9.941535949707031

Token 786: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00946706160902977
    2. '                   ' → logprob: -5.009467124938965
    3. '                       ' → logprob: -6.259467124938965
    4. ' return' → logprob: -7.259467124938965
    5. '               ' → logprob: -9.759467124938965
    6. '                           ' → logprob: -10.259467124938965
    7. '
' → logprob: -12.009467124938965
    8. '                               ' → logprob: -12.009467124938965
    9. '	return' → logprob: -12.134467124938965
    10. '           ' → logprob: -12.134467124938965

Token 787: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -9.088346359931165e-07
    2. ' False' → logprob: -14.000000953674316
    3. 'True' → logprob: -21.125
    4. 'false' → logprob: -22.75
    5. '(False' → logprob: -24.75
    6. '=False' → logprob: -25.25
    7. '_false' → logprob: -25.625
    8. 'F' → logprob: -25.75
    9. '
' → logprob: -26.5
    10. '   ' → logprob: -27.0

Token 788: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022758657578378916
    2. '
' → logprob: -6.7522759437561035
    3. '        
' → logprob: -6.8772759437561035
    4. '           ' → logprob: -11.252275466918945
    5. 'return' → logprob: -11.252275466918945
    6. '    
' → logprob: -11.877275466918945
    7. '            
' → logprob: -12.002275466918945
    8. '<|end|>' → logprob: -12.127275466918945
    9. '	' → logprob: -12.252275466918945
    10. '   ' → logprob: -12.502275466918945

Token 789: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00038658222183585167
    2. '           ' → logprob: -9.000386238098145
    3. '        
' → logprob: -9.000386238098145
    4. '
' → logprob: -9.500386238098145
    5. 'return' → logprob: -11.625386238098145
    6. '   ' → logprob: -11.625386238098145
    7. ' return' → logprob: -11.875386238098145
    8. '<|end|>' → logprob: -11.875386238098145
    9. '	' → logprob: -12.125386238098145
    10. '               ' → logprob: -12.125386238098145

Token 790: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00040409780922345817
    2. 'return' (adapté à ' return') → logprob: -8.375404357910156
    3. '   ' → logprob: -9.500404357910156
    4. '
' → logprob: -9.625404357910156
    5. '           ' → logprob: -10.875404357910156
    6. '               ' → logprob: -12.250404357910156
    7. ' return' → logprob: -12.375404357910156
    8. '        
' → logprob: -13.500404357910156
    9. '	return' → logprob: -13.875404357910156
    10. '	' → logprob: -14.250404357910156

Token 791: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -4.5491004129871726e-05
    2. ' True' → logprob: -10.000045776367188
    3. '(True' → logprob: -22.125045776367188
    4. '   ' → logprob: -22.625045776367188
    5. 'False' → logprob: -23.125045776367188
    6. 'true' → logprob: -24.250045776367188
    7. '=True' → logprob: -24.375045776367188
    8. '
' → logprob: -25.000045776367188
    9. '       ' → logprob: -25.750045776367188
    10. 'Tr' → logprob: -26.250045776367188

Token 792: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 793: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 794: ' Stylish' (ID: 144990)
  Prédit: 'Styl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Styl' → logprob: -0.22536562383174896
    2. 'Copy' → logprob: -3.22536563873291
    3. 'Solution' → logprob: -3.72536563873291
    4. 'User' → logprob: -4.22536563873291
    5. 'Problem' → logprob: -4.22536563873291
    6. 'Im' → logprob: -4.72536563873291
    7. 'Code' → logprob: -4.97536563873291
    8. 'Student' → logprob: -4.97536563873291
    9. 'Unknown' → logprob: -5.10036563873291
    10. 'Query' → logprob: -5.10036563873291

Token 795: 'Indent' (ID: 62786)
  Prédit: 'User'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'User' → logprob: -0.6800124645233154
    2. 'Solver' → logprob: -1.9300124645233154
    3. 'Finder' → logprob: -2.4300124645233154
    4. 'Predict' → logprob: -2.5550124645233154
    5. 'Lear' → logprob: -3.1800124645233154
    6. 'Program' → logprob: -4.0550127029418945
    7. 'Gu' → logprob: -4.5550127029418945
    8. 'Follower' → logprob: -4.5550127029418945
    9. 'Guess' → logprob: -4.6800127029418945
    10. 'Checker' → logprob: -5.3050127029418945

Token 796: 'ator' (ID: 1246)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.022364210337400436
    2. 'Predict' → logprob: -4.772364139556885
    3. 'ation' → logprob: -5.397364139556885
    4. 'or' → logprob: -6.147364139556885
    5. 'Finder' → logprob: -6.147364139556885
    6. 'ifier' → logprob: -6.397364139556885
    7. 'Solver' → logprob: -7.147364139556885
    8. 'Calculator' → logprob: -8.397364616394043
    9. 'Detector' → logprob: -8.397364616394043
    10. 'Gu' → logprob: -8.647364616394043

Token 797: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002492779865860939
    2. ':
' → logprob: -6.002492904663086
    3. ' :' → logprob: -12.002492904663086
    4. '<|end|>' → logprob: -12.627492904663086
    5. ':

' → logprob: -13.627492904663086
    6. '):' → logprob: -13.627492904663086
    7. '():' → logprob: -14.252492904663086
    8. ':def' → logprob: -14.377492904663086
    9. '>:' → logprob: -14.502492904663086
    10. '(' → logprob: -14.627492904663086

Token 798: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004198544193059206
    2. ' def' → logprob: -5.5041985511779785
    3. ':' → logprob: -9.25419807434082
    4. 'def' → logprob: -12.25419807434082
    5. '<|end|>' → logprob: -12.62919807434082
    6. ' class' → logprob: -13.00419807434082
    7. ',' → logprob: -13.50419807434082
    8. '‌' → logprob: -13.50419807434082
    9. '```' → logprob: -13.50419807434082
    10. '    
' → logprob: -13.62919807434082

Token 799: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008244574069976807
    2. ' def' → logprob: -5.008244514465332
    3. '   ' → logprob: -6.508244514465332
    4. 'class' → logprob: -10.258244514465332
    5. '	def' → logprob: -13.883244514465332
    6. '
' → logprob: -15.258244514465332
    7. '```' → logprob: -15.258244514465332
    8. ' ' → logprob: -16.00824546813965
    9. '__' → logprob: -17.13324546813965
    10. 'import' → logprob: -17.50824546813965

Token 800: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5398392081260681
    2. 'init' → logprob: -1.039839267730713
    3. 'def' → logprob: -2.789839267730713
    4. ' __' → logprob: -6.289839267730713
    5. '_init' → logprob: -8.414838790893555
    6. ' def' → logprob: -9.164838790893555
    7. '_' → logprob: -11.164838790893555
    8. '```' → logprob: -12.289838790893555
    9. 'staticmethod' → logprob: -12.914838790893555
    10. '___' → logprob: -13.289838790893555

Token 801: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. ' init' → logprob: -15.5
    3. 'def' → logprob: -16.0
    4. '  ' → logprob: -18.0
    5. '   ' → logprob: -18.25
    6. 'indent' → logprob: -18.25
    7. '
' → logprob: -18.875
    8. '```' → logprob: -19.625
    9. ' ' → logprob: -19.75
    10. 'in' → logprob: -19.75

Token 802: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.31499481201171875
    2. '(self' → logprob: -1.3149948120117188
    3. 'self' → logprob: -7.439994812011719
    4. ' (' → logprob: -7.564994812011719
    5. ',' → logprob: -8.189994812011719
    6. '   ' → logprob: -8.939994812011719
    7. '(' → logprob: -9.939994812011719
    8. '       ' → logprob: -10.314994812011719
    9. ')(' → logprob: -10.814994812011719
    10. '__' → logprob: -10.939994812011719

Token 803: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.028536492725834e-05
    2. ' self' → logprob: -10.250070571899414
    3. ',' → logprob: -10.750070571899414
    4. '   ' → logprob: -11.500070571899414
    5. '(self' → logprob: -13.375070571899414
    6. '       ' → logprob: -13.500070571899414
    7. ',self' → logprob: -16.125070571899414
    8. 'class' → logprob: -16.375070571899414
    9. ')' → logprob: -16.375070571899414
    10. '
' → logprob: -16.625070571899414

Token 804: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034789051860570908
    2. 'self' → logprob: -5.87847900390625
    3. '(self' → logprob: -7.37847900390625
    4. ',self' → logprob: -11.25347900390625
    5. '   ' → logprob: -11.75347900390625
    6. '__(' → logprob: -11.87847900390625
    7. ' (' → logprob: -12.25347900390625
    8. '):
' → logprob: -12.75347900390625
    9. ')(' → logprob: -13.00347900390625
    10. ',
' → logprob: -13.12847900390625

Token 805: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.654950737953186
    2. 'program' → logprob: -1.904950737953186
    3. 'self' → logprob: -2.2799506187438965
    4. 'known' → logprob: -2.9049506187438965
    5. 'styl' → logprob: -2.9049506187438965
    6. 'valid' → logprob: -3.7799506187438965
    7. 'style' → logprob: -4.1549506187438965
    8. 'master' → logprob: -4.2799506187438965
    9. 'styles' → logprob: -4.2799506187438965
    10. 's' → logprob: -5.4049506187438965

Token 806: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -0.02191203273832798
    2. 'rogram' → logprob: -3.896912097930908
    3. 'Program' → logprob: -7.521912097930908
    4. '):' → logprob: -8.14691162109375
    5. 'program' → logprob: -8.39691162109375
    6. ':' → logprob: -9.14691162109375
    7. '):
' → logprob: -9.64691162109375
    8. '```' → logprob: -10.14691162109375
    9. ')' → logprob: -10.64691162109375
    10. '_PROGRAM' → logprob: -10.77191162109375

Token 807: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.022205548360943794
    2. ':' → logprob: -4.522205352783203
    3. '):
' → logprob: -4.522205352783203
    4. ',' → logprob: -8.522205352783203
    5. '<|end|>' → logprob: -11.772205352783203
    6. '):
' → logprob: -12.147205352783203
    7. ' ):' → logprob: -12.522205352783203
    8. '=None' → logprob: -12.772205352783203
    9. '):

' → logprob: -13.147205352783203
    10. '}:' → logprob: -13.272205352783203

Token 808: ' Stylish' (ID: 144990)
  Prédit: 'Styl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Styl' → logprob: -2.951771421066951e-05
    2. 'St' → logprob: -11.125029563903809
    3. 'Sty' → logprob: -11.500029563903809
    4. 'Styled' → logprob: -13.375029563903809
    5. ')' → logprob: -13.375029563903809
    6. ' Stylish' → logprob: -14.000029563903809
    7. 'styl' → logprob: -14.875029563903809
    8. '   ' → logprob: -16.250028610229492
    9. '```' → logprob: -16.625028610229492
    10. 'Beautiful' → logprob: -17.375028610229492

Token 809: 'Program' (ID: 13587)
  Prédit: 'Program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Program' → logprob: -4.4418171455617994e-05
    2. 'program' → logprob: -10.625044822692871
    3. '.Program' → logprob: -11.625044822692871
    4. '_program' → logprob: -12.375044822692871
    5. ')' → logprob: -13.000044822692871
    6. '):
' → logprob: -13.250044822692871
    7. ' Program' → logprob: -14.000044822692871
    8. '):' → logprob: -14.250044822692871
    9. '   ' → logprob: -14.500044822692871
    10. '
' → logprob: -15.375044822692871

Token 810: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5760584473609924
    2. '):
' → logprob: -0.8260584473609924
    3. ',' → logprob: -9.701058387756348
    4. ':' → logprob: -10.826058387756348
    5. '       ' → logprob: -11.076058387756348
    6. '):
' → logprob: -11.701058387756348
    7. '   ' → logprob: -11.826058387756348
    8. ')' → logprob: -12.701058387756348
    9. '):

' → logprob: -13.076058387756348
    10. ' ):' → logprob: -15.076058387756348

Token 811: ' q' (ID: 2335)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1877615451812744
    2. ' s' → logprob: -1.8127615451812744
    3. 'p' → logprob: -2.4377615451812744
    4. 'm' → logprob: -2.5627615451812744
    5. 'q' → logprob: -2.9377615451812744
    6. ' master' → logprob: -3.0627615451812744
    7. 't' → logprob: -3.3127615451812744
    8. ' p' → logprob: -3.5627615451812744
    9. ' t' → logprob: -3.6877615451812744
    10. ' styles' → logprob: -3.8127615451812744

Token 812: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -0.00041577612864784896
    2. 'program' → logprob: -8.500415802001953
    3. ':' → logprob: -8.875415802001953
    4. '_' → logprob: -10.500415802001953
    5. 'rogram' → logprob: -11.125415802001953
    6. '_PROGRAM' → logprob: -11.750415802001953
    7. ')' → logprob: -11.875415802001953
    8. '_pro' → logprob: -12.875415802001953
    9. ' program' → logprob: -13.125415802001953
    10. '   ' → logprob: -13.375415802001953

Token 813: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20853430032730103
    2. '):' → logprob: -1.7085342407226562
    3. '):
' → logprob: -4.958534240722656
    4. ',' → logprob: -10.958534240722656
    5. ')' → logprob: -11.208534240722656
    6. '<|end|>' → logprob: -11.583534240722656
    7. ' :' → logprob: -11.708534240722656
    8. '<|end|>' → logprob: -12.333534240722656
    9. '):

' → logprob: -12.458534240722656
    10. '):
' → logprob: -12.583534240722656

Token 814: ' Stylish' (ID: 144990)
  Prédit: 'Styl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Styl' → logprob: -0.022004278376698494
    2. ' Stylish' → logprob: -3.8970043659210205
    3. ')' → logprob: -7.522004127502441
    4. ' ' → logprob: -8.647004127502441
    5. 'Beautiful' → logprob: -8.772004127502441
    6. '   ' → logprob: -8.897004127502441
    7. 'Class' → logprob: -9.272004127502441
    8. 'class' → logprob: -9.397004127502441
    9. 'Sty' → logprob: -9.522004127502441
    10. 'Styled' → logprob: -10.272004127502441

Token 815: 'Program' (ID: 13587)
  Prédit: 'Program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Program' → logprob: -0.4761279821395874
    2. ':' → logprob: -0.9761279821395874
    3. '_program' → logprob: -7.226128101348877
    4. '):
' → logprob: -7.601128101348877
    5. 'program' → logprob: -7.851128101348877
    6. '):' → logprob: -9.226127624511719
    7. ')' → logprob: -9.476127624511719
    8. '   ' → logprob: -9.726127624511719
    9. 'rogram' → logprob: -10.226127624511719
    10. 'Programm' → logprob: -10.476127624511719

Token 816: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4741215109825134
    2. '):
' → logprob: -0.9741215109825134
    3. '   ' → logprob: -10.97412109375
    4. '):
' → logprob: -11.22412109375
    5. '       ' → logprob: -11.97412109375
    6. ':' → logprob: -12.47412109375
    7. ',' → logprob: -12.84912109375
    8. '):

' → logprob: -14.47412109375
    9. ' ):' → logprob: -15.59912109375
    10. ' ):
' → logprob: -15.84912109375

Token 817: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.12354011833667755
    2. ' valid' → logprob: -2.623540163040161
    3. 'styles' → logprob: -4.248539924621582
    4. 'p' → logprob: -4.748539924621582
    5. 'master' → logprob: -5.623539924621582
    6. ' styles' → logprob: -5.748539924621582
    7. 'q' → logprob: -5.873539924621582
    8. 's' → logprob: -5.998539924621582
    9. ' p' → logprob: -6.623539924621582
    10. ' master' → logprob: -6.998539924621582

Token 818: '_styles' (ID: 95693)
  Prédit: '_styles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_styles' → logprob: -0.00036049127811565995
    2. 'styles' → logprob: -8.750360488891602
    3. '_' → logprob: -9.125360488891602
    4. '_tokens' → logprob: -10.375360488891602
    5. '_style' → logprob: -10.875360488891602
    6. '_codes' → logprob: -11.500360488891602
    7. '_s' → logprob: -11.500360488891602
    8. '_formats' → logprob: -12.875360488891602
    9. '_indent' → logprob: -13.000360488891602
    10. 's' → logprob: -13.375360488891602

Token 819: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08160611987113953
    2. '):
' → logprob: -2.581606149673462
    3. ':' → logprob: -5.956605911254883
    4. '=None' → logprob: -10.206605911254883
    5. ' ):' → logprob: -10.331605911254883
    6. '=' → logprob: -10.831605911254883
    7. '):
' → logprob: -11.456605911254883
    8. ')' → logprob: -11.706605911254883
    9. ',' → logprob: -12.456605911254883
    10. '   ' → logprob: -12.831605911254883

Token 820: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02215423807501793
    2. '   ' → logprob: -4.147154331207275
    3. ':' → logprob: -5.397154331207275
    4. ':
' → logprob: -7.772154331207275
    5. '):
' → logprob: -7.772154331207275
    6. 'def' → logprob: -8.397153854370117
    7. '<|end|>' → logprob: -8.397153854370117
    8. ' def' → logprob: -9.397153854370117
    9. '        
' → logprob: -10.147153854370117
    10. ',' → logprob: -10.147153854370117

Token 821: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0035124069545418024
    2. '       ' → logprob: -5.753512382507324
    3. ' self' → logprob: -8.003512382507324
    4. '   ' → logprob: -15.128512382507324
    5. '	self' → logprob: -17.00351333618164
    6. 'class' → logprob: -17.37851333618164
    7. '(self' → logprob: -18.12851333618164
    8. ' ' → logprob: -18.25351333618164
    9. 'def' → logprob: -18.25351333618164
    10. 'p' → logprob: -18.87851333618164

Token 822: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.01269646268337965
    2. 'p' → logprob: -4.387696266174316
    3. '.q' → logprob: -9.262696266174316
    4. 'valid' → logprob: -10.387696266174316
    5. '.valid' → logprob: -10.512696266174316
    6. 'q' → logprob: -11.262696266174316
    7. ' p' → logprob: -11.637696266174316
    8. '.' → logprob: -12.137696266174316
    9. '_p' → logprob: -13.137696266174316
    10. 'P' → logprob: -13.262696266174316

Token 823: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -0.0002470350591465831
    2. '._' → logprob: -8.87524700164795
    3. '_' → logprob: -11.00024700164795
    4. ' =' → logprob: -11.25024700164795
    5. '_pro' → logprob: -11.37524700164795
    6. '.' → logprob: -11.62524700164795
    7. ' _' → logprob: -11.87524700164795
    8. '_styles' → logprob: -12.12524700164795
    9. '_style' → logprob: -12.25024700164795
    10. '=' → logprob: -12.25024700164795

Token 824: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6452739834785461
    2. ' =' → logprob: -1.2702739238739014
    3. ',' → logprob: -2.3952739238739014
    4. '<|end|>' → logprob: -2.8952739238739014
    5. '.' → logprob: -3.2702739238739014
    6. ')' → logprob: -5.6452741622924805
    7. '       ' → logprob: -6.2702741622924805
    8. ':' → logprob: -6.5202741622924805
    9. '   ' → logprob: -7.0202741622924805
    10. ' ' → logprob: -7.2702741622924805

Token 825: ' p' (ID: 275)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.06740450114011765
    2. 'p' → logprob: -2.9424045085906982
    3. ' q' → logprob: -4.442404270172119
    4. ' p' → logprob: -7.317404270172119
    5. '       ' → logprob: -11.692404747009277
    6. '	q' → logprob: -13.567404747009277
    7. '        ' → logprob: -14.067404747009277
    8. '   ' → logprob: -14.192404747009277
    9. ' ' → logprob: -14.942404747009277
    10. '    ' → logprob: -15.067404747009277

Token 826: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -3.6550729419104755e-05
    2. '_q' → logprob: -10.750036239624023
    3. '._' → logprob: -12.625036239624023
    4. 'rogram' → logprob: -12.750036239624023
    5. 'program' → logprob: -13.250036239624023
    6. 'q' → logprob: -13.500036239624023
    7. '_' → logprob: -13.750036239624023
    8. '_pro' → logprob: -14.000036239624023
    9. '_PROGRAM' → logprob: -14.375036239624023
    10. '_p' → logprob: -14.625036239624023

Token 827: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016203110571950674
    2. '<|end|>' → logprob: -7.001620292663574
    3. 'self' → logprob: -7.376620292663574
    4. '
' → logprob: -9.876620292663574
    5. '<|end|>' → logprob: -11.001620292663574
    6. '   ' → logprob: -12.251620292663574
    7. ' self' → logprob: -12.626620292663574
    8. ',' → logprob: -12.751620292663574
    9. '        
' → logprob: -14.126620292663574
    10. '      ' → logprob: -14.626620292663574

Token 828: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31332477927207947
    2. '       ' → logprob: -1.3133248090744019
    3. ' self' → logprob: -9.688324928283691
    4. '   ' → logprob: -14.313324928283691
    5. '	self' → logprob: -15.938324928283691
    6. '
' → logprob: -16.563323974609375
    7. '      ' → logprob: -17.188323974609375
    8. 'def' → logprob: -17.188323974609375
    9. '           ' → logprob: -17.438323974609375
    10. ' ' → logprob: -17.688323974609375

Token 829: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.0445127372804563e-05
    2. ' self' → logprob: -11.75001049041748
    3. '       ' → logprob: -13.00001049041748
    4. 'q' → logprob: -15.37501049041748
    5. '	self' → logprob: -19.875009536743164
    6. '
' → logprob: -20.375009536743164
    7. '   ' → logprob: -20.500009536743164
    8. 'Q' → logprob: -21.375009536743164
    9. '=self' → logprob: -21.625009536743164
    10. '(self' → logprob: -22.000009536743164

Token 830: '.q' (ID: 20954)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0015549783129245043
    2. '.q' → logprob: -6.5015549659729
    3. 'valid' → logprob: -10.626555442810059
    4. ' q' → logprob: -11.376555442810059
    5. '_q' → logprob: -11.626555442810059
    6. '.valid' → logprob: -12.376555442810059
    7. '
' → logprob: -13.251555442810059
    8. '_valid' → logprob: -14.626555442810059
    9. ',q' → logprob: -15.251555442810059
    10. '.' → logprob: -15.501555442810059

Token 831: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -7.941850526549388e-06
    2. '_' → logprob: -12.750007629394531
    3. '._' → logprob: -13.625007629394531
    4. '_pro' → logprob: -13.750007629394531
    5. 'program' → logprob: -14.250007629394531
    6. ' _' → logprob: -14.625007629394531
    7. '_PROGRAM' → logprob: -15.000007629394531
    8. '_code' → logprob: -15.875007629394531
    9. '```' → logprob: -15.875007629394531
    10. '   ' → logprob: -16.00000762939453

Token 832: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014428675174713
    2. '=' → logprob: -1.701442837715149
    3. '<|end|>' → logprob: -11.32644271850586
    4. ' ' → logprob: -12.57644271850586
    5. '   ' → logprob: -12.70144271850586
    6. '=
' → logprob: -13.20144271850586
    7. ' =
' → logprob: -13.45144271850586
    8. ',' → logprob: -13.57644271850586
    9. 's' → logprob: -13.70144271850586
    10. 'import' → logprob: -14.07644271850586

Token 833: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0067156096920371056
    2. ' q' → logprob: -5.006715774536133
    3. '	q' → logprob: -15.256715774536133
    4. ' ' → logprob: -17.506715774536133
    5. 'p' → logprob: -17.881715774536133
    6. '   ' → logprob: -19.256715774536133
    7. '_q' → logprob: -19.631715774536133
    8. '$q' → logprob: -19.756715774536133
    9. 'valid' → logprob: -20.256715774536133
    10. '  ' → logprob: -20.506715774536133

Token 834: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -7.465036105713807e-06
    2. '._' → logprob: -12.875007629394531
    3. 'rogram' → logprob: -13.125007629394531
    4. 'program' → logprob: -13.750007629394531
    5. '_' → logprob: -14.250007629394531
    6. '_PROGRAM' → logprob: -15.000007629394531
    7. '_valid' → logprob: -15.250007629394531
    8. '_q' → logprob: -16.12500762939453
    9. '```' → logprob: -16.12500762939453
    10. ' _' → logprob: -16.25000762939453

Token 835: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42048344016075134
    2. '
' → logprob: -1.6704834699630737
    3. '   ' → logprob: -1.9204834699630737
    4. 'def' → logprob: -4.920483589172363
    5. 'self' → logprob: -6.920483589172363
    6. '<|end|>' → logprob: -9.795483589172363
    7. ' def' → logprob: -9.920483589172363
    8. ',' → logprob: -10.295483589172363
    9. ' ' → logprob: -10.420483589172363
    10. '

' → logprob: -10.920483589172363

Token 836: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5767105221748352
    2. 'def' → logprob: -1.3267104625701904
    3. '   ' → logprob: -2.0767104625701904
    4. '       ' → logprob: -3.0767104625701904
    5. '
' → logprob: -6.5767107009887695
    6. ' self' → logprob: -10.45171070098877
    7. ' def' → logprob: -11.32671070098877
    8. '    
' → logprob: -11.95171070098877
    9. 'from' → logprob: -12.20171070098877
    10. 'class' → logprob: -12.32671070098877

Token 837: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00027718624914996326
    2. 'def' → logprob: -8.625277519226074
    3. '       ' → logprob: -9.250277519226074
    4. ' self' → logprob: -14.000277519226074
    5. '   ' → logprob: -14.750277519226074
    6. '
' → logprob: -16.000276565551758
    7. '           ' → logprob: -17.500276565551758
    8. 'super' → logprob: -18.000276565551758
    9. '	self' → logprob: -18.000276565551758
    10. 'from' → logprob: -18.125276565551758

Token 838: '.valid' (ID: 41805)
  Prédit: '.valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.valid' → logprob: -0.0007763965986669064
    2. 'valid' → logprob: -8.000776290893555
    3. '.styles' → logprob: -8.375776290893555
    4. '.pos' → logprob: -8.625776290893555
    5. 'styles' → logprob: -11.875776290893555
    6. '.all' → logprob: -11.875776290893555
    7. '
' → logprob: -12.500776290893555
    8. '.ind' → logprob: -12.875776290893555
    9. '.' → logprob: -13.125776290893555
    10. '.invalid' → logprob: -13.250776290893555

Token 839: '_styles' (ID: 95693)
  Prédit: '_styles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_styles' → logprob: -7.107425062713446e-06
    2. '_' → logprob: -12.250006675720215
    3. '_style' → logprob: -13.500006675720215
    4. 'styles' → logprob: -15.250006675720215
    5. '_formats' → logprob: -15.500006675720215
    6. ' _' → logprob: -15.750006675720215
    7. '_s' → logprob: -16.87500762939453
    8. '_patterns' → logprob: -17.12500762939453
    9. '_scores' → logprob: -17.50000762939453
    10. '_codes' → logprob: -18.00000762939453

Token 840: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0025169195141643286
    2. ' =' → logprob: -6.002516746520996
    3. '=[]' → logprob: -10.377516746520996
    4. '=set' → logprob: -12.502516746520996
    5. '=
' → logprob: -13.127516746520996
    6. '.append' → logprob: -13.127516746520996
    7. '=

' → logprob: -14.002516746520996
    8. 's' → logprob: -14.502516746520996
    9. '=[]
' → logprob: -14.752516746520996
    10. 'append' → logprob: -15.627516746520996

Token 841: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.0002613358374219388
    2. ' valid' → logprob: -8.250261306762695
    3. '	valid' → logprob: -18.250261306762695
    4. '[' → logprob: -19.625261306762695
    5. '(valid' → logprob: -19.625261306762695
    6. '   ' → logprob: -20.500261306762695
    7. '.valid' → logprob: -21.125261306762695
    8. '[]' → logprob: -21.375261306762695
    9. 'set' → logprob: -21.750261306762695
    10. '_valid' → logprob: -22.000261306762695

Token 842: '_styles' (ID: 95693)
  Prédit: '_styles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_styles' → logprob: -0.00014764121442567557
    2. 'styles' → logprob: -8.875147819519043
    3. '_spaces' → logprob: -12.125147819519043
    4. 'Styles' → logprob: -13.625147819519043
    5. '_' → logprob: -15.250147819519043
    6. '_formats' → logprob: -15.375147819519043
    7. '_style' → logprob: -15.625147819519043
    8. ' styles' → logprob: -15.875147819519043
    9. '_types' → logprob: -16.625146865844727
    10. '_patterns' → logprob: -16.625146865844727

Token 843: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010925558395683765
    2. '
' → logprob: -4.885925769805908
    3. 'def' → logprob: -5.760925769805908
    4. '    
' → logprob: -9.01092529296875
    5. ' def' → logprob: -10.63592529296875
    6. '<|end|>' → logprob: -11.76092529296875
    7. '        
' → logprob: -12.26092529296875
    8. '<|end|>' → logprob: -12.63592529296875
    9. '

' → logprob: -13.76092529296875
    10. '	def' → logprob: -14.13592529296875

Token 844: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12705671787261963
    2. 'def' → logprob: -2.12705659866333
    3. ' def' → logprob: -9.377057075500488
    4. '
' → logprob: -10.127057075500488
    5. '    
' → logprob: -12.752057075500488
    6. '	def' → logprob: -14.502057075500488
    7. '       ' → logprob: -15.127057075500488
    8. '        
' → logprob: -15.627057075500488
    9. '```' → logprob: -16.627056121826172
    10. '

' → logprob: -18.002056121826172

Token 845: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.512236498361744e-07
    2. ' def' → logprob: -14.750000953674316
    3. '   ' → logprob: -16.0
    4. 'from' → logprob: -22.125
    5. '	def' → logprob: -24.0
    6. 'class' → logprob: -24.5
    7. ' ' → logprob: -24.5
    8. '    
' → logprob: -25.0
    9. '       ' → logprob: -25.375
    10. 'import' → logprob: -25.375

Token 846: ' indent' (ID: 37655)
  Prédit: 'indent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indent' → logprob: -0.9661723375320435
    2. 'predict' → logprob: -1.0911723375320435
    3. 'compute' → logprob: -1.3411723375320435
    4. 'get' → logprob: -4.841172218322754
    5. 'det' → logprob: -5.841172218322754
    6. ' indent' → logprob: -6.091172218322754
    7. ' predict' → logprob: -6.216172218322754
    8. 'calculate' → logprob: -6.341172218322754
    9. 'ded' → logprob: -6.466172218322754
    10. 'ind' → logprob: -6.966172218322754

Token 847: '_lines' (ID: 42980)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.47567644715309143
    2. '_lines' → logprob: -0.975676417350769
    3. '_line' → logprob: -7.725676536560059
    4. '_code' → logprob: -7.975676536560059
    5. '_' → logprob: -8.350676536560059
    6. 'ize' → logprob: -8.975676536560059
    7. '   ' → logprob: -9.600676536560059
    8. '_for' → logprob: -10.100676536560059
    9. '_all' → logprob: -10.350676536560059
    10. '(lines' → logprob: -10.350676536560059

Token 848: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.25000286102295
    3. 'self' → logprob: -15.25000286102295
    4. '   ' → logprob: -15.62500286102295
    5. '       ' → logprob: -15.62500286102295
    6. ' (' → logprob: -16.250001907348633
    7. '(Self' → logprob: -20.250001907348633
    8. ' ' → logprob: -20.375001907348633
    9. '(this' → logprob: -20.375001907348633
    10. '(
' → logprob: -20.375001907348633

Token 849: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.49955153465270996
    2. 'self' → logprob: -1.74955153465271
    3. '(self' → logprob: -2.12455153465271
    4. '):
' → logprob: -2.49955153465271
    5. '       ' → logprob: -4.749551773071289
    6. '   ' → logprob: -4.874551773071289
    7. ',' → logprob: -7.374551773071289
    8. ')' → logprob: -7.499551773071289
    9. ' self' → logprob: -10.249551773071289
    10. 'def' → logprob: -10.624551773071289

Token 850: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017258725129067898
    2. 'result' → logprob: -6.376725673675537
    3. 'results' → logprob: -11.126726150512695
    4. 'ind' → logprob: -13.251726150512695
    5. 'indent' → logprob: -13.251726150512695
    6. ' result' → logprob: -13.376726150512695
    7. '	' → logprob: -13.376726150512695
    8. 'output' → logprob: -14.251726150512695
    9. '	result' → logprob: -15.376726150512695
    10. 'lines' → logprob: -15.501726150512695

Token 851: ' self' (ID: 1051)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.16972346603870392
    2. 'results' → logprob: -2.2947235107421875
    3. 'ind' → logprob: -3.0447235107421875
    4. 'res' → logprob: -5.6697235107421875
    5. 'indent' → logprob: -5.6697235107421875
    6. 'output' → logprob: -8.169723510742188
    7. '       ' → logprob: -8.669723510742188
    8. '   ' → logprob: -8.794723510742188
    9. 'for' → logprob: -9.294723510742188
    10. 'outputs' → logprob: -10.169723510742188

Token 852: '.q' (ID: 20954)
  Prédit: '.q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.q' → logprob: -0.015387757681310177
    2. '.ind' → logprob: -4.515387535095215
    3. '.' → logprob: -6.515387535095215
    4. '.result' → logprob: -7.140387535095215
    5. '.lines' → logprob: -7.265387535095215
    6. '.valid' → logprob: -7.265387535095215
    7. '.p' → logprob: -8.640387535095215
    8. '._' → logprob: -9.515387535095215
    9. '.results' → logprob: -9.640387535095215
    10. '.output' → logprob: -9.765387535095215

Token 853: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -0.007691917475312948
    2. '._' → logprob: -5.257691860198975
    3. '.program' → logprob: -6.632691860198975
    4. '.' → logprob: -8.132692337036133
    5. '   ' → logprob: -8.132692337036133
    6. '_lines' → logprob: -8.132692337036133
    7. 'program' → logprob: -9.632692337036133
    8. '.lines' → logprob: -10.257692337036133
    9. '.ind' → logprob: -10.632692337036133
    10. '_.' → logprob: -10.757692337036133

Token 854: '.parse' (ID: 7259)
  Prédit: '.ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ind' → logprob: -0.25505349040031433
    2. '.parse' → logprob: -1.5050535202026367
    3. '.lines' → logprob: -6.505053520202637
    4. 'parse' → logprob: -7.505053520202637
    5. '.br' → logprob: -8.380053520202637
    6. '._' → logprob: -8.630053520202637
    7. 'indent' → logprob: -8.755053520202637
    8. '=parse' → logprob: -9.630053520202637
    9. '.compute' → logprob: -10.130053520202637
    10. '.par' → logprob: -10.130053520202637

Token 855: '_indent' (ID: 196408)
  Prédit: '_indent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indent' → logprob: -3.440506407059729e-05
    2. 'indent' → logprob: -10.37503433227539
    3. '_ind' → logprob: -12.87503433227539
    4. '_' → logprob: -14.62503433227539
    5. ' indent' → logprob: -16.87503433227539
    6. '_ident' → logprob: -17.12503433227539
    7. '(indent' → logprob: -17.25003433227539
    8. '-indent' → logprob: -17.75003433227539
    9. 'Indent' → logprob: -18.00003433227539
    10. '_int' → logprob: -18.25003433227539

Token 856: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.125000953674316
    3. '_indent' → logprob: -16.375
    4. 'ions' → logprob: -16.75
    5. 'indent' → logprob: -17.375
    6. 'ation' → logprob: -18.125
    7. '   ' → logprob: -18.75
    8. 't' → logprob: -18.75
    9. 'a' → logprob: -18.875
    10. '
' → logprob: -19.25

Token 857: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -1.1756367712223437e-05
    2. 'and' → logprob: -11.375011444091797
    3. ' and' → logprob: -16.500011444091797
    4. '...' → logprob: -17.250011444091797
    5. 'def' → logprob: -17.375011444091797
    6. '_an' → logprob: -17.375011444091797
    7. '_or' → logprob: -17.625011444091797
    8. '()' → logprob: -17.750011444091797
    9. '```' → logprob: -17.750011444091797
    10. '_' → logprob: -17.875011444091797

Token 858: '_prefix' (ID: 33197)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -2.2200749754119897e-06
    2. '_prefix' → logprob: -13.250001907348633
    3. ' prefixes' → logprob: -14.750001907348633
    4. 'refix' → logprob: -18.000001907348633
    5. 'parse' → logprob: -19.125001907348633
    6. 'Prefixes' → logprob: -20.375001907348633
    7. '
' → logprob: -21.250001907348633
    8. '(prefix' → logprob: -21.250001907348633
    9. ' prefix' → logprob: -21.500001907348633
    10. '.prefix' → logprob: -22.875001907348633

Token 859: 'es' (ID: 268)
  Prédit: 'ixes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ixes' → logprob: -0.24863187968730927
    2. 'fix' → logprob: -2.6236319541931152
    3. 'es' → logprob: -2.7486319541931152
    4. 'ses' → logprob: -4.248631954193115
    5. 'ises' → logprob: -4.373631954193115
    6. 'ices' → logprob: -4.873631954193115
    7. 'ces' → logprob: -5.123631954193115
    8. 'eses' → logprob: -5.248631954193115
    9. 'izes' → logprob: -5.248631954193115
    10. 'xes' → logprob: -5.373631954193115

Token 860: '()

' (ID: 5874)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002668757690116763
    2. '
' → logprob: -6.752668857574463
    3. 'result' → logprob: -6.752668857574463
    4. 'indent' → logprob: -8.877668380737305
    5. 'output' → logprob: -10.377668380737305
    6. 'results' → logprob: -10.377668380737305
    7. '        
' → logprob: -10.502668380737305
    8. ' result' → logprob: -10.627668380737305
    9. 'ind' → logprob: -11.252668380737305
    10. '           ' → logprob: -11.252668380737305

Token 861: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16329646110534668
    2. 'result' → logprob: -1.9132964611053467
    3. 'results' → logprob: -6.288296699523926
    4. 'ind' → logprob: -7.788296699523926
    5. 'lines' → logprob: -8.288296699523926
    6. 'output' → logprob: -8.288296699523926
    7. ' result' → logprob: -9.413296699523926
    8. 'res' → logprob: -9.413296699523926
    9. 'indent' → logprob: -10.038296699523926
    10. 'for' → logprob: -10.288296699523926

Token 862: ' results' (ID: 4376)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.35360947251319885
    2. 'results' (adapté à ' results') → logprob: -1.3536094427108765
    3. 'ind' → logprob: -3.853609561920166
    4. 'res' → logprob: -4.603609561920166
    5. 'indent' → logprob: -5.228609561920166
    6. 'for' → logprob: -6.603609561920166
    7. 'output' → logprob: -7.478609561920166
    8. 'outputs' → logprob: -7.728609561920166
    9. 'q' → logprob: -8.478609085083008
    10. 'answers' → logprob: -8.603609085083008

Token 863: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759732127189636
    2. '=' → logprob: -0.8259732127189636
    3. '   ' → logprob: -11.200973510742188
    4. '=[]' → logprob: -11.700973510742188
    5. ' ' → logprob: -12.325973510742188
    6. '[]' → logprob: -12.950973510742188
    7. '=[]
' → logprob: -13.325973510742188
    8. '  ' → logprob: -13.325973510742188
    9. '[' → logprob: -14.825973510742188
    10. '	' → logprob: -15.075973510742188

Token 864: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5760312080383301
    2. '[]
' → logprob: -0.8260312080383301
    3. '[]

' → logprob: -9.826030731201172
    4. '[' → logprob: -10.826030731201172
    5. ' []
' → logprob: -11.326030731201172
    6. ' []' → logprob: -12.326030731201172
    7. '[]"' → logprob: -14.701030731201172
    8. '"' → logprob: -14.701030731201172
    9. '   ' → logprob: -15.326030731201172
    10. '""' → logprob: -15.826030731201172

Token 865: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010517460759729147
    2. 'for' → logprob: -6.876051902770996
    3. ' for' → logprob: -11.376051902770996
    4. '
' → logprob: -12.376051902770996
    5. '   ' → logprob: -13.751051902770996
    6. '	for' → logprob: -14.126051902770996
    7. '	' → logprob: -14.251051902770996
    8. '```' → logprob: -14.501051902770996
    9. '        
' → logprob: -15.751051902770996
    10. '           ' → logprob: -16.25105094909668

Token 866: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.7432603272027336e-06
    2. '       ' → logprob: -13.750001907348633
    3. 'n' → logprob: -14.500001907348633
    4. ' for' → logprob: -15.625001907348633
    5. 'p' → logprob: -17.625001907348633
    6. 'bc' → logprob: -19.125001907348633
    7. 'if' → logprob: -20.000001907348633
    8. '	for' → logprob: -20.750001907348633
    9. '        
' → logprob: -21.125001907348633
    10. '
' → logprob: -21.625001907348633

Token 867: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.23148095607757568
    2. 'style' → logprob: -2.2314810752868652
    3. 'line' → logprob: -2.6064810752868652
    4. 'q' → logprob: -4.356481075286865
    5. 'indent' → logprob: -5.356481075286865
    6. 'bc' → logprob: -5.731481075286865
    7. 'idx' → logprob: -6.356481075286865
    8. 'R' → logprob: -6.606481075286865
    9. 'qc' → logprob: -7.606481075286865
    10. ' i' → logprob: -8.231480598449707

Token 868: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0010397175792604685
    2. 'in' → logprob: -6.876039505004883
    3. ',' → logprob: -12.251039505004883
    4. ' ' → logprob: -14.251039505004883
    5. '	in' → logprob: -14.751039505004883
    6. '   ' → logprob: -15.126039505004883
    7. ' ,' → logprob: -16.126039505004883
    8. ')' → logprob: -16.126039505004883
    9. '0' → logprob: -16.251039505004883
    10. 'n' → logprob: -16.501039505004883

Token 869: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20142608880996704
    2. ' range' → logprob: -1.7014260292053223
    3. 'self' → logprob: -11.57642650604248
    4. ' self' → logprob: -13.82642650604248
    5. 'len' → logprob: -14.07642650604248
    6. ' in' → logprob: -14.20142650604248
    7. 'in' → logprob: -15.57642650604248
    8. ' len' → logprob: -15.57642650604248
    9. '(range' → logprob: -15.82642650604248
    10. ' ' → logprob: -15.95142650604248

Token 870: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0013530949363484979
    2. '(' → logprob: -6.6263532638549805
    3. 'len' → logprob: -11.37635326385498
    4. ' len' → logprob: -11.50135326385498
    5. ' (' → logprob: -12.50135326385498
    6. ',len' → logprob: -14.25135326385498
    7. '<len' → logprob: -15.37635326385498
    8. '=len' → logprob: -15.50135326385498
    9. '	len' → logprob: -15.62635326385498
    10. '[len' → logprob: -15.87635326385498

Token 871: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.692145012086257e-05
    2. 'self' → logprob: -10.000046730041504
    3. '(' → logprob: -13.500046730041504
    4. ' self' → logprob: -17.25004768371582
    5. ' (' → logprob: -17.62504768371582
    6. '(
' → logprob: -18.25004768371582
    7. '=self' → logprob: -18.37504768371582
    8. '[self' → logprob: -18.75004768371582
    9. ')' → logprob: -20.00004768371582
    10. '	self' → logprob: -20.37504768371582

Token 872: '.q' (ID: 20954)
  Prédit: '.q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.q' → logprob: -2.15310683415737e-05
    2. '.p' → logprob: -11.375021934509277
    3. 'q' → logprob: -11.875021934509277
    4. ' .' → logprob: -14.250021934509277
    5. '.' → logprob: -14.250021934509277
    6. '	q' → logprob: -14.375021934509277
    7. '_q' → logprob: -14.875021934509277
    8. '_.' → logprob: -15.250021934509277
    9. 'self' → logprob: -16.00002098083496
    10. ').' → logprob: -16.25002098083496

Token 873: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -0.004498722963035107
    2. '.q' → logprob: -5.7544989585876465
    3. '.program' → logprob: -6.8794989585876465
    4. '.lines' → logprob: -8.879498481750488
    5. 'program' → logprob: -9.504498481750488
    6. 'q' → logprob: -10.129498481750488
    7. '_.' → logprob: -11.254498481750488
    8. '   ' → logprob: -12.129498481750488
    9. '.p' → logprob: -12.629498481750488
    10. '_q' → logprob: -13.004498481750488

Token 874: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -1.4617256056226324e-05
    2. '.' → logprob: -11.375014305114746
    3. ' .' → logprob: -13.750014305114746
    4. ').' → logprob: -14.250014305114746
    5. '.ind' → logprob: -14.500014305114746
    6. '   ' → logprob: -15.125014305114746
    7. '.line' → logprob: -15.875014305114746
    8. 'lines' → logprob: -16.250015258789062
    9. '	lines' → logprob: -16.250015258789062
    10. '.points' → logprob: -17.250015258789062

Token 875: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.387067049741745
    2. '):
' → logprob: -1.1370670795440674
    3. ')' → logprob: -9.012066841125488
    4. '       ' → logprob: -9.887066841125488
    5. '           ' → logprob: -11.637066841125488
    6. '):
' → logprob: -12.137066841125488
    7. ' ):' → logprob: -12.762066841125488
    8. '):

' → logprob: -13.012066841125488
    9. '   ' → logprob: -13.262066841125488
    10. ' ):
' → logprob: -14.137066841125488

Token 876: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001664717128733173
    2. ' if' → logprob: -9.625166893005371
    3. 'indent' → logprob: -10.000166893005371
    4. ' indentation' → logprob: -11.250166893005371
    5. '
' → logprob: -11.625166893005371
    6. 'if' → logprob: -11.875166893005371
    7. ' indent' → logprob: -12.000166893005371
    8. '   ' → logprob: -12.125166893005371
    9. 'possible' → logprob: -13.625166893005371
    10. '```' → logprob: -13.875166893005371

Token 877: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' (adapté à ' possible') → logprob: -0.7481947541236877
    2. 'indent' → logprob: -1.373194694519043
    3. 'if' → logprob: -1.623194694519043
    4. 'prefix' → logprob: -4.123194694519043
    5. 'valid' → logprob: -4.373194694519043
    6. '           ' → logprob: -4.373194694519043
    7. 'ind' → logprob: -5.123194694519043
    8. 'line' → logprob: -5.248194694519043
    9. 'bc' → logprob: -5.498194694519043
    10. 'min' → logprob: -5.873194694519043

Token 878: '_indent' (ID: 196408)
  Prédit: '_ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ind' → logprob: -0.6026953458786011
    2. '_indent' → logprob: -0.8526953458786011
    3. '_values' → logprob: -3.8526954650878906
    4. '_results' → logprob: -6.602695465087891
    5. ' =' → logprob: -6.977695465087891
    6. '_inds' → logprob: -7.227695465087891
    7. '=' → logprob: -7.477695465087891
    8. 's' → logprob: -7.727695465087891
    9. '_r' → logprob: -8.60269546508789
    10. '_indices' → logprob: -8.72769546508789

Token 879: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.6665956377983093
    2. 's' → logprob: -1.416595697402954
    3. '=' → logprob: -1.666595697402954
    4. ' =' → logprob: -2.916595697402954
    5. 'ation' → logprob: -6.916595458984375
    6. '=[]' → logprob: -12.666595458984375
    7. '=None' → logprob: -13.541595458984375
    8. '   ' → logprob: -13.666595458984375
    9. 'ions' → logprob: -13.791595458984375
    10. '=s' → logprob: -14.041595458984375

Token 880: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859861359000206
    2. '=' → logprob: -3.048598527908325
    3. '=[]' → logprob: -12.298598289489746
    4. '           ' → logprob: -12.673598289489746
    5. '=set' → logprob: -13.048598289489746
    6. '=[]
' → logprob: -15.173598289489746
    7. '            ' → logprob: -15.673598289489746
    8. ':' → logprob: -15.798598289489746
    9. '_set' → logprob: -15.923598289489746
    10. 's' → logprob: -16.048599243164062

Token 881: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0008426225394941866
    2. '[]' → logprob: -7.500842571258545
    3. '{}' → logprob: -8.250843048095703
    4. 'None' → logprob: -10.750843048095703
    5. ' set' → logprob: -12.375843048095703
    6. '[]
' → logprob: -13.250843048095703
    7. '{' → logprob: -14.250843048095703
    8. '{}
' → logprob: -14.750843048095703
    9. ' []' → logprob: -16.625843048095703
    10. '   ' → logprob: -17.625843048095703

Token 882: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03807259723544121
    2. '()
' → logprob: -3.2880725860595703
    3. '           ' → logprob: -10.91307258605957
    4. '()

' → logprob: -11.41307258605957
    5. '()
' → logprob: -14.66307258605957
    6. '               ' → logprob: -14.78807258605957
    7. '       ' → logprob: -15.78807258605957
    8. '(range' → logprob: -15.78807258605957
    9. '();' → logprob: -15.91307258605957
    10. '()</' → logprob: -15.91307258605957

Token 883: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015276329941116273
    2. 'for' → logprob: -9.125152587890625
    3. ' for' → logprob: -10.625152587890625
    4. '
' → logprob: -11.375152587890625
    5. '       ' → logprob: -11.875152587890625
    6. '   ' → logprob: -14.625152587890625
    7. '            
' → logprob: -15.375152587890625
    8. 'if' → logprob: -15.625152587890625
    9. '               ' → logprob: -16.250152587890625
    10. '                   ' → logprob: -17.250152587890625

Token 884: ' bc' (ID: 51743)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3484930694103241
    2. '           ' → logprob: -1.3484930992126465
    3. ' for' → logprob: -3.5984930992126465
    4. 'bc' (adapté à ' bc') → logprob: -5.3484930992126465
    5. 'prev' → logprob: -6.7234930992126465
    6. 'if' → logprob: -7.0984930992126465
    7. 'prefix' → logprob: -8.598492622375488
    8. 'line' → logprob: -8.598492622375488
    9. '   ' → logprob: -10.723492622375488
    10. 'br' → logprob: -10.848492622375488

Token 885: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033662643283605576
    2. '=' → logprob: -3.4086625576019287
    3. ' ' → logprob: -12.033662796020508
    4. '_prev' → logprob: -12.533662796020508
    5. 'q' → logprob: -12.658662796020508
    6. '_q' → logprob: -13.408662796020508
    7. '=q' → logprob: -14.283662796020508
    8. '_prefix' → logprob: -15.033662796020508
    9. 'prev' → logprob: -15.283662796020508
    10. '_' → logprob: -15.408662796020508

Token 886: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.048611775040626526
    2. ' self' → logprob: -3.048611879348755
    3. '           ' → logprob: -11.423611640930176
    4. '(self' → logprob: -12.173611640930176
    5. 'None' → logprob: -12.923611640930176
    6. ' ' → logprob: -13.423611640930176
    7. '0' → logprob: -13.673611640930176
    8. '   ' → logprob: -14.298611640930176
    9. '       ' → logprob: -14.423611640930176
    10. '=self' → logprob: -15.048611640930176

Token 887: '.q' (ID: 20954)
  Prédit: '.q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.q' → logprob: -2.9160102712921798e-05
    2. '.p' → logprob: -10.500029563903809
    3. 'q' → logprob: -13.875029563903809
    4. '.' → logprob: -14.500029563903809
    5. ' .' → logprob: -16.875028610229492
    6. '	q' → logprob: -17.625028610229492
    7. ' q' → logprob: -17.625028610229492
    8. '
' → logprob: -18.500028610229492
    9. 'self' → logprob: -18.625028610229492
    10. '.qu' → logprob: -19.250028610229492

Token 888: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -2.7133641196996905e-05
    2. '.program' → logprob: -11.50002670288086
    3. 'program' → logprob: -11.87502670288086
    4. '.q' → logprob: -12.12502670288086
    5. '._' → logprob: -12.62502670288086
    6. 'rogram' → logprob: -14.62502670288086
    7. '_PROGRAM' → logprob: -14.87502670288086
    8. 'q' → logprob: -15.87502670288086
    9. '.p' → logprob: -16.12502670288086
    10. '_pro' → logprob: -16.25002670288086

Token 889: '.br' (ID: 24828)
  Prédit: '.br'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.br' → logprob: -1.6240566083070007e-06
    2. '.b' → logprob: -14.000001907348633
    3. ' .' → logprob: -15.250001907348633
    4. '	br' → logprob: -15.625001907348633
    5. 'Bracket' → logprob: -15.750001907348633
    6. '   ' → logprob: -16.625001907348633
    7. 'br' → logprob: -16.625001907348633
    8. '.' → logprob: -16.750001907348633
    9. ' bracket' → logprob: -17.250001907348633
    10. '.prefix' → logprob: -18.125001907348633

Token 890: 'acket' (ID: 8480)
  Prédit: 'acket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acket' → logprob: -0.00029351349803619087
    2. 'r' → logprob: -8.375293731689453
    3. 'br' → logprob: -10.500293731689453
    4. 'a' → logprob: -11.500293731689453
    5. '```' → logprob: -11.500293731689453
    6. 'ack' → logprob: -11.875293731689453
    7. 'asket' → logprob: -13.125293731689453
    8. 'Bracket' → logprob: -13.375293731689453
    9. 'ACKET' → logprob: -13.500293731689453
    10. 'ackets' → logprob: -14.750293731689453

Token 891: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.9361264946837764e-07
    2. 'c' → logprob: -17.125
    3. '_counter' → logprob: -17.125
    4. 's' → logprob: -20.75
    5. 'Counters' → logprob: -20.875
    6. 'ounters' → logprob: -21.625
    7. '\' → logprob: -21.75
    8. 'counter' → logprob: -21.875
    9. '_counts' → logprob: -22.375
    10. 'self' → logprob: -23.375

Token 892: 'ounters' (ID: 36761)
  Prédit: 'ounters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounters' → logprob: -2.2200749754119897e-06
    2. 'ounter' → logprob: -13.375001907348633
    3. 'ount' → logprob: -15.250001907348633
    4. 'c' → logprob: -15.375001907348633
    5. 'oun' → logprob: -17.875001907348633
    6. '```' → logprob: -18.000001907348633
    7. 'ou' → logprob: -18.125001907348633
    8. '_c' → logprob: -18.250001907348633
    9. 'on' → logprob: -18.500001907348633
    10. 'ters' → logprob: -18.750001907348633

Token 893: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.250001907348633
    3. '           ' → logprob: -16.125001907348633
    4. '       ' → logprob: -16.375001907348633
    5. 'i' → logprob: -17.125001907348633
    6. ' [' → logprob: -17.625001907348633
    7. '[
' → logprob: -18.000001907348633
    8. 's' → logprob: -18.250001907348633
    9. '   ' → logprob: -18.375001907348633
    10. '[-' → logprob: -18.500001907348633

Token 894: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6698630452156067
    2. ']' → logprob: -0.9198630452156067
    3. ')
' → logprob: -3.169862985610962
    4. '       ' → logprob: -3.419862985610962
    5. ']
' → logprob: -4.544863224029541
    6. '           ' → logprob: -5.794863224029541
    7. '])' → logprob: -7.544863224029541
    8. '
' → logprob: -8.169862747192383
    9. '               ' → logprob: -9.044862747192383
    10. '        ' → logprob: -9.419862747192383

Token 895: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003025729674845934
    2. 'for' → logprob: -8.6253023147583
    3. ' for' → logprob: -9.1253023147583
    4. '       ' → logprob: -12.1253023147583
    5. '   ' → logprob: -13.0003023147583
    6. '<|end|>' → logprob: -13.1253023147583
    7. ' ' → logprob: -14.1253023147583
    8. '
' → logprob: -14.6253023147583
    9. '               ' → logprob: -14.7503023147583
    10. ',' → logprob: -14.8753023147583

Token 896: ' ro' (ID: 974)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004163876175880432
    2. '           ' → logprob: -5.50416374206543
    3. ' for' → logprob: -10.00416374206543
    4. 'possible' → logprob: -10.62916374206543
    5. 'indent' → logprob: -11.87916374206543
    6. '   ' → logprob: -12.87916374206543
    7. '       ' → logprob: -13.12916374206543
    8. 'if' → logprob: -13.25416374206543
    9. 'r' → logprob: -13.87916374206543
    10. '               ' → logprob: -15.12916374206543

Token 897: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8092718124389648
    2. ',' → logprob: -1.1842718124389648
    3. 'pen' → logprob: -1.4342718124389648
    4. '=' → logprob: -5.184271812438965
    5. '=open' → logprob: -5.809271812438965
    6. 'open' → logprob: -7.934271812438965
    7. '_pen' → logprob: -8.184271812438965
    8. 'und' → logprob: -8.434271812438965
    9. '   ' → logprob: -8.559271812438965
    10. 'p' → logprob: -8.684271812438965

Token 898: ' bc' (ID: 51743)
  Prédit: 'bc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' → logprob: -0.014227320440113544
    2. ' bc' → logprob: -4.264227390289307
    3. ' ' → logprob: -10.764226913452148
    4. '   ' → logprob: -10.889226913452148
    5. '0' → logprob: -11.264226913452148
    6. 'b' → logprob: -12.764226913452148
    7. '       ' → logprob: -13.389226913452148
    8. '  ' → logprob: -13.639226913452148
    9. '_bc' → logprob: -13.639226913452148
    10. '    ' → logprob: -14.389226913452148

Token 899: '.open' (ID: 9702)
  Prédit: '.open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.open' → logprob: -6.704273118884885e-07
    2. 'open' → logprob: -15.000000953674316
    3. '.' → logprob: -16.125
    4. '.op' → logprob: -16.125
    5. '=open' → logprob: -17.625
    6. '	open' → logprob: -18.25
    7. '.openapi' → logprob: -18.75
    8. ' .' → logprob: -18.875
    9. '.close' → logprob: -20.0
    10. '.Open' → logprob: -20.375

Token 900: '_round' (ID: 79298)
  Prédit: '_round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_round' → logprob: -7.553032628493384e-05
    2. 'round' → logprob: -9.500075340270996
    3. '_' → logprob: -14.625075340270996
    4. '(round' → logprob: -16.500076293945312
    5. 'Round' → logprob: -16.625076293945312
    6. ' round' → logprob: -18.375076293945312
    7. '_ring' → logprob: -18.875076293945312
    8. '-round' → logprob: -19.125076293945312
    9. ')' → logprob: -19.250076293945312
    10. '_roll' → logprob: -19.750076293945312

Token 901: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09814032167196274
    2. '           ' → logprob: -2.723140239715576
    3. '-' → logprob: -3.723140239715576
    4. ' -' → logprob: -6.598140239715576
    5. '-
' → logprob: -7.348140239715576
    6. ',' → logprob: -7.598140239715576
    7. '       ' → logprob: -8.223140716552734
    8. '		' → logprob: -8.723140716552734
    9. ';' → logprob: -8.973140716552734
    10. '            
' → logprob: -9.723140716552734

Token 902: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017785917734727263
    2. '		' → logprob: -6.751778602600098
    3. 'cc' → logprob: -7.876778602600098
    4. '       ' → logprob: -10.001778602600098
    5. '            ' → logprob: -10.251778602600098
    6. ',' → logprob: -10.376778602600098
    7. '		   ' → logprob: -11.251778602600098
    8. '        ' → logprob: -11.501778602600098
    9. '          ' → logprob: -11.501778602600098
    10. '               ' → logprob: -11.501778602600098

Token 903: ' rc' (ID: 23309)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.4923876225948334
    2. 'co' → logprob: -1.4923876523971558
    3. 'rc' (adapté à ' rc') → logprob: -1.8673876523971558
    4. '       ' → logprob: -4.867387771606445
    5. '   ' → logprob: -7.117387771606445
    6. '           ' → logprob: -7.617387771606445
    7. ' cc' → logprob: -8.492387771606445
    8. ' rc' → logprob: -9.242387771606445
    9. 'cco' → logprob: -9.492387771606445
    10. ' co' → logprob: -10.992387771606445

Token 904: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31328174471855164
    2. '=' → logprob: -1.313281774520874
    3. '<|end|>' → logprob: -11.063282012939453
    4. ' ' → logprob: -13.438282012939453
    5. '=
' → logprob: -14.813282012939453
    6. ' =
' → logprob: -15.063282012939453
    7. '<|end|>' → logprob: -15.188282012939453
    8. '   ' → logprob: -15.313282012939453
    9. ')' → logprob: -15.438282012939453
    10. '           ' → logprob: -15.438282012939453

Token 905: ' bc' (ID: 51743)
  Prédit: 'bc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' → logprob: -0.00033581978641450405
    2. ' bc' → logprob: -8.000335693359375
    3. 'b' → logprob: -15.625335693359375
    4. ' ' → logprob: -15.625335693359375
    5. '_bc' → logprob: -17.250335693359375
    6. '   ' → logprob: -17.875335693359375
    7. '     ' → logprob: -18.500335693359375
    8. '       ' → logprob: -18.625335693359375
    9. '0' → logprob: -18.625335693359375
    10. 'cb' → logprob: -18.875335693359375

Token 906: '.close' (ID: 8183)
  Prédit: '.close'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.close' → logprob: -9.877503907773644e-05
    2. 'close' → logprob: -9.750099182128906
    3. '.open' → logprob: -10.375099182128906
    4. '.' → logprob: -11.875099182128906
    5. ' .' → logprob: -14.000099182128906
    6. '_close' → logprob: -14.500099182128906
    7. '.round' → logprob: -15.375099182128906
    8. '._' → logprob: -15.500099182128906
    9. '.closed' → logprob: -15.500099182128906
    10. '       ' → logprob: -16.625099182128906

Token 907: '_round' (ID: 79298)
  Prédit: '_round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_round' → logprob: -7.493430894101039e-05
    2. 'round' → logprob: -9.500075340270996
    3. '_' → logprob: -17.75007438659668
    4. 'Round' → logprob: -18.87507438659668
    5. ' round' → logprob: -19.37507438659668
    6. '(round' → logprob: -19.87507438659668
    7. 'r' → logprob: -19.87507438659668
    8. '_r' → logprob: -20.50007438659668
    9. '_roll' → logprob: -20.62507438659668
    10. '_ro' → logprob: -20.75007438659668

Token 908: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10180305689573288
    2. '
' → logprob: -2.4768030643463135
    3. '                    ' → logprob: -5.351802825927734
    4. ',' → logprob: -5.851802825927734
    5. '               ' → logprob: -6.726802825927734
    6. '            ' → logprob: -7.101802825927734
    7. '                   ' → logprob: -7.476802825927734
    8. '            
' → logprob: -7.476802825927734
    9. '                ' → logprob: -8.226802825927734
    10. '       ' → logprob: -8.351802825927734

Token 909: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038381002843379974
    2. 'co' → logprob: -3.2883810997009277
    3. ' co' → logprob: -8.41338062286377
    4. ',' → logprob: -10.41338062286377
    5. '               ' → logprob: -11.16338062286377
    6. '(co' → logprob: -11.28838062286377
    7. '       ' → logprob: -11.41338062286377
    8. '   ' → logprob: -11.66338062286377
    9. '		' → logprob: -11.78838062286377
    10. '          ' → logprob: -11.91338062286377

Token 910: ' co' (ID: 1407)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' (adapté à ' co') → logprob: -6.034592388459714e-06
    2. '   ' → logprob: -12.625005722045898
    3. 'for' → logprob: -13.375005722045898
    4. '       ' → logprob: -14.000005722045898
    5. '           ' → logprob: -15.125005722045898
    6. '(co' → logprob: -17.5000057220459
    7. 'cco' → logprob: -17.6250057220459
    8. ' ' → logprob: -17.7500057220459
    9. ' co' → logprob: -17.7500057220459
    10. 'oco' → logprob: -18.0000057220459

Token 911: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18086574971675873
    2. '=' → logprob: -1.80586576461792
    3. 'unt' → logprob: -8.055865287780762
    4. ',' → logprob: -9.055865287780762
    5. '   ' → logprob: -9.555865287780762
    6. 'u' → logprob: -9.555865287780762
    7. ' ' → logprob: -9.805865287780762
    8. 's' → logprob: -9.930865287780762
    9. '        ' → logprob: -9.930865287780762
    10. 'unts' → logprob: -10.055865287780762

Token 912: ' bc' (ID: 51743)
  Prédit: 'bc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' → logprob: -9.662937372922897e-05
    2. ' bc' → logprob: -9.250096321105957
    3. 'b' → logprob: -15.750096321105957
    4. '_bc' → logprob: -16.250097274780273
    5. 'cb' → logprob: -16.500097274780273
    6. 'rc' → logprob: -16.625097274780273
    7. 'c' → logprob: -17.000097274780273
    8. 'xbc' → logprob: -17.750097274780273
    9. 'mc' → logprob: -18.000097274780273
    10. '.bc' → logprob: -18.750097274780273

Token 913: '.open' (ID: 9702)
  Prédit: '.open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.open' → logprob: -0.008643882349133492
    2. 'open' → logprob: -4.758644104003906
    3. '=open' → logprob: -10.633644104003906
    4. '_open' → logprob: -13.258644104003906
    5. '	open' → logprob: -13.758644104003906
    6. '   ' → logprob: -14.633644104003906
    7. ' .' → logprob: -15.258644104003906
    8. '.' → logprob: -15.258644104003906
    9. '.cur' → logprob: -15.383644104003906
    10. '.close' → logprob: -15.383644104003906

Token 914: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -4.5491004129871726e-05
    2. 'cur' → logprob: -10.000045776367188
    3. '_curr' → logprob: -17.000045776367188
    4. '[cur' → logprob: -17.750045776367188
    5. '_c' → logprob: -18.000045776367188
    6. '{' → logprob: -18.250045776367188
    7. 'Cur' → logprob: -18.500045776367188
    8. '_' → logprob: -18.625045776367188
    9. '.cur' → logprob: -19.000045776367188
    10. '	cur' → logprob: -19.375045776367188

Token 915: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.4154874086380005
    2. 'ur' → logprob: -1.6654874086380005
    3. 'cur' → logprob: -2.915487289428711
    4. ' curly' → logprob: -3.165487289428711
    5. 'r' → logprob: -4.290487289428711
    6. 'py' → logprob: -4.790487289428711
    7. 'l' → logprob: -5.040487289428711
    8. 'ury' → logprob: -5.040487289428711
    9. '_cur' → logprob: -5.540487289428711
    10. 'uly' → logprob: -6.290487289428711

Token 916: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18801122903823853
    2. '<|end|>' → logprob: -1.8130111694335938
    3. '            ' → logprob: -5.938011169433594
    4. '
' → logprob: -6.563011169433594
    5. ' ' → logprob: -6.563011169433594
    6. '       ' → logprob: -7.563011169433594
    7. '          ' → logprob: -7.688011169433594
    8. '            
' → logprob: -8.063011169433594
    9. '<|end|>' → logprob: -8.563011169433594
    10. '             ' → logprob: -8.688011169433594

Token 917: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.056140150874853134
    2. '            ' → logprob: -2.931140184402466
    3. '          ' → logprob: -7.931139945983887
    4. 'co' → logprob: -8.931139945983887
    5. '            
' → logprob: -9.056139945983887
    6. '             ' → logprob: -9.431139945983887
    7. '        ' → logprob: -9.806139945983887
    8. ',' → logprob: -9.806139945983887
    9. 'cc' → logprob: -9.806139945983887
    10. ' ' → logprob: -9.931139945983887

Token 918: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' (adapté à ' cc') → logprob: -0.01754898764193058
    2. 'co' → logprob: -4.14254903793335
    3. ' cc' → logprob: -7.01754903793335
    4. '           ' → logprob: -8.142548561096191
    5. ' co' → logprob: -8.767548561096191
    6. 'c' → logprob: -9.392548561096191
    7. 'ct' → logprob: -11.267548561096191
    8. 'rc' → logprob: -11.267548561096191
    9. '          ' → logprob: -11.767548561096191
    10. '	cc' → logprob: -11.892548561096191

Token 919: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 920: ' bc' (ID: 51743)
  Prédit: 'bc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' → logprob: -0.0019295861711725593
    2. ' bc' → logprob: -6.251929759979248
    3. ' ' → logprob: -14.87692928314209
    4. 'b' → logprob: -15.00192928314209
    5. 'c' → logprob: -15.25192928314209
    6. '_bc' → logprob: -16.626930236816406
    7. 'cb' → logprob: -17.126930236816406
    8. '.bc' → logprob: -18.501930236816406
    9. '0' → logprob: -18.626930236816406
    10. 'bcc' → logprob: -19.126930236816406

Token 921: '.close' (ID: 8183)
  Prédit: 'close'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'close' → logprob: -0.10310454666614532
    2. '.close' → logprob: -2.728104591369629
    3. '_close' → logprob: -3.853104591369629
    4. ' close' → logprob: -4.603104591369629
    5. ')' → logprob: -7.228104591369629
    6. '...' → logprob: -9.103104591369629
    7. '(close' → logprob: -9.103104591369629
    8. '       ' → logprob: -9.478104591369629
    9. '	close' → logprob: -9.728104591369629
    10. '=' → logprob: -10.103104591369629

Token 922: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.0006277294596657157
    2. 'cur' → logprob: -7.375627517700195
    3. 'Cur' → logprob: -14.125627517700195
    4. '	cur' → logprob: -16.125627517700195
    5. '.cur' → logprob: -16.500627517700195
    6. '-cur' → logprob: -16.750627517700195
    7. '[cur' → logprob: -17.125627517700195
    8. ' curly' → logprob: -17.250627517700195
    9. '_c' → logprob: -17.500627517700195
    10. '_' → logprob: -17.875627517700195

Token 923: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -4.008129963040119e-06
    2. ' curly' → logprob: -13.250003814697266
    3. 'y' → logprob: -13.875003814697266
    4. 'l' → logprob: -14.875003814697266
    5. '1' → logprob: -15.250003814697266
    6. 'py' → logprob: -16.500003814697266
    7. 'vy' → logprob: -16.625003814697266
    8. 'oly' → logprob: -16.875003814697266
    9. 'uly' → logprob: -16.875003814697266
    10. '0' → logprob: -17.000003814697266

Token 924: '
' (ID: 198)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.08028342574834824
    2. '           ' → logprob: -2.7052834033966064
    3. ' so' → logprob: -4.7052836418151855
    4. '
' → logprob: -7.4552836418151855
    5. '            
' → logprob: -8.955283164978027
    6. 'sc' → logprob: -9.455283164978027
    7. '          ' → logprob: -9.580283164978027
    8. '    
' → logprob: -9.705283164978027
    9. '   ' → logprob: -9.830283164978027
    10. ',' → logprob: -9.955283164978027

Token 925: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06197664886713028
    2. 'so' → logprob: -2.811976671218872
    3. ' so' → logprob: -13.061976432800293
    4. '          ' → logprob: -13.436976432800293
    5. '               ' → logprob: -13.686976432800293
    6. '                   ' → logprob: -13.686976432800293
    7. '       ' → logprob: -13.811976432800293
    8. '		' → logprob: -14.686976432800293
    9. '            ' → logprob: -14.686976432800293
    10. '   ' → logprob: -14.811976432800293

Token 926: ' so' (ID: 813)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' (adapté à ' so') → logprob: -3.79811754100956e-05
    2. 'sq' → logprob: -10.625038146972656
    3. ' so' → logprob: -11.750038146972656
    4. '   ' → logprob: -12.375038146972656
    5. '       ' → logprob: -13.750038146972656
    6. '```' → logprob: -16.500038146972656
    7. '[' → logprob: -16.750038146972656
    8. '
' → logprob: -16.750038146972656
    9. '           ' → logprob: -16.875038146972656
    10. 'sc' → logprob: -17.375038146972656

Token 927: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407805919647217
    2. ' =' → logprob: -0.9740780591964722
    3. ' ' → logprob: -14.849078178405762
    4. 's' → logprob: -15.349078178405762
    5. ',' → logprob: -15.849078178405762
    6. '<|end|>' → logprob: -16.474077224731445
    7. '=
' → logprob: -17.099077224731445
    8. '   ' → logprob: -17.474077224731445
    9. ' =
' → logprob: -17.599077224731445
    10. ' ' → logprob: -17.724077224731445

Token 928: ' bc' (ID: 51743)
  Prédit: 'bc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' → logprob: -0.0024758970830589533
    2. ' bc' → logprob: -6.002475738525391
    3. '_bc' → logprob: -16.12747573852539
    4. ' ' → logprob: -17.12747573852539
    5. '.bc' → logprob: -17.50247573852539
    6. 'b' → logprob: -18.00247573852539
    7. 'xbc' → logprob: -18.12747573852539
    8. 'cb' → logprob: -18.62747573852539
    9. 'bcc' → logprob: -19.62747573852539
    10. 'bb' → logprob: -19.75247573852539

Token 929: '.open' (ID: 9702)
  Prédit: '.open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.open' → logprob: -0.314998984336853
    2. 'open' → logprob: -1.314998984336853
    3. '.sc' → logprob: -6.564999103546143
    4. '=open' → logprob: -8.939998626708984
    5. 'sc' → logprob: -9.564998626708984
    6. ' open' → logprob: -9.814998626708984
    7. '_open' → logprob: -11.439998626708984
    8. '.square' → logprob: -11.564998626708984
    9. '	open' → logprob: -11.564998626708984
    10. '=' → logprob: -11.939998626708984

Token 930: '_square' (ID: 99463)
  Prédit: 'square'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'square' → logprob: -0.5759508609771729
    2. '_square' → logprob: -0.8259508609771729
    3. 's' → logprob: -12.200950622558594
    4. ' square' → logprob: -13.325950622558594
    5. '-square' → logprob: -13.575950622558594
    6. 'Square' → logprob: -13.575950622558594
    7. 'quare' → logprob: -14.200950622558594
    8. ' ' → logprob: -15.325950622558594
    9. '_squared' → logprob: -15.700950622558594
    10. 'sq' → logprob: -15.700950622558594

Token 931: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004514019936323166
    2. '
' → logprob: -5.754514217376709
    3. '               ' → logprob: -8.25451374053955
    4. '       ' → logprob: -8.37951374053955
    5. '            ' → logprob: -8.75451374053955
    6. '=' → logprob: -8.87951374053955
    7. '          ' → logprob: -8.87951374053955
    8. '<|end|>' → logprob: -9.37951374053955
    9. ',' → logprob: -9.62951374053955
    10. ' ' → logprob: -10.25451374053955

Token 932: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007083214353770018
    2. '            ' → logprob: -5.882083415985107
    3. '          ' → logprob: -6.257083415985107
    4. '<|end|>' → logprob: -7.382083415985107
    5. 'sc' → logprob: -8.00708293914795
    6. '        ' → logprob: -8.25708293914795
    7. '       ' → logprob: -8.38208293914795
    8. '               ' → logprob: -8.88208293914795
    9. '            
' → logprob: -9.38208293914795
    10. '
' → logprob: -9.50708293914795

Token 933: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' (adapté à ' sc') → logprob: -0.00012570773833431304
    2. ' sc' → logprob: -9.000125885009766
    3. '_sc' → logprob: -13.875125885009766
    4. 'cc' → logprob: -14.250125885009766
    5. '(sc' → logprob: -15.625125885009766
    6. '=sc' → logprob: -15.625125885009766
    7. '	sc' → logprob: -16.000125885009766
    8. '-sc' → logprob: -16.375125885009766
    9. 'bc' → logprob: -16.625125885009766
    10. 'Sc' → logprob: -16.625125885009766

Token 934: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38709592819213867
    2. ' =' → logprob: -1.1370959281921387
    3. ' +=' → logprob: -9.137096405029297
    4. '+=' → logprob: -9.387096405029297
    5. '<|end|>' → logprob: -10.762096405029297
    6. ')' → logprob: -12.012096405029297
    7. '=
' → logprob: -13.387096405029297
    8. ' =
' → logprob: -13.637096405029297
    9. '+' → logprob: -14.137096405029297
    10. ' ' → logprob: -14.262096405029297

Token 935: ' bc' (ID: 51743)
  Prédit: 'bc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' → logprob: -0.014164221473038197
    2. ' bc' → logprob: -4.264164447784424
    3. ' ' → logprob: -14.514163970947266
    4. '_bc' → logprob: -16.514163970947266
    5. 'b' → logprob: -17.014163970947266
    6. '0' → logprob: -17.264163970947266
    7. '.bc' → logprob: -18.139163970947266
    8. '   ' → logprob: -18.389163970947266
    9. '  ' → logprob: -19.014163970947266
    10. 'bb' → logprob: -19.264163970947266

Token 936: '.close' (ID: 8183)
  Prédit: '.close'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.close' → logprob: -0.6977858543395996
    2. 'close' → logprob: -0.6977858543395996
    3. 'sc' → logprob: -6.4477858543396
    4. 'bc' → logprob: -6.6977858543396
    5. ' close' → logprob: -7.4477858543396
    6. '.sc' → logprob: -7.5727858543396
    7. ' sc' → logprob: -9.072786331176758
    8. '_close' → logprob: -9.322786331176758
    9. '.bc' → logprob: -9.322786331176758
    10. 'self' → logprob: -9.697786331176758

Token 937: '_square' (ID: 99463)
  Prédit: '_square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_square' → logprob: -3.452426608419046e-05
    2. 'square' → logprob: -10.37503433227539
    3. '_squared' → logprob: -13.25003433227539
    4. '_round' → logprob: -14.37503433227539
    5. '```' → logprob: -14.62503433227539
    6. 'Square' → logprob: -16.00003433227539
    7. '_' → logprob: -16.87503433227539
    8. 'quare' → logprob: -16.87503433227539
    9. ' square' → logprob: -17.25003433227539
    10. '_cur' → logprob: -17.25003433227539

Token 938: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6149622201919556
    2. '
' → logprob: -1.1149622201919556
    3. '<|end|>' → logprob: -2.239962100982666
    4. '<|end|>' → logprob: -4.614962100982666
    5. '  
' → logprob: -5.239962100982666
    6. '            
' → logprob: -5.364962100982666
    7. ' 
' → logprob: -6.239962100982666
    8. '    
' → logprob: -6.864962100982666
    9. '\n' → logprob: -7.989962100982666
    10. ' ' → logprob: -8.614962577819824

Token 939: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.274932143744081e-05
    2. '       ' → logprob: -10.750042915344238
    3. 'for' → logprob: -11.500042915344238
    4. ' for' → logprob: -12.625042915344238
    5. '   ' → logprob: -12.625042915344238
    6. '
' → logprob: -14.125042915344238
    7. '```' → logprob: -14.125042915344238
    8. '<|end|>' → logprob: -14.500042915344238
    9. 'token' → logprob: -14.625042915344238
    10. '		' → logprob: -15.125042915344238

Token 940: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004280804190784693
    2. 'for' (adapté à ' for') → logprob: -5.6292805671691895
    3. ' for' → logprob: -7.6292805671691895
    4. '
' → logprob: -8.629281044006348
    5. '       ' → logprob: -11.629281044006348
    6. '   ' → logprob: -12.754281044006348
    7. '            
' → logprob: -13.379281044006348
    8. '               ' → logprob: -13.879281044006348
    9. '                   ' → logprob: -15.504281044006348
    10. ' ' → logprob: -15.754281044006348

Token 941: ' style' (ID: 2713)
  Prédit: 'style'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'style' → logprob: -0.004667099565267563
    2. ' style' → logprob: -5.379667282104492
    3. 'vs' → logprob: -10.754667282104492
    4. '(style' → logprob: -11.254667282104492
    5. 'R' → logprob: -12.629667282104492
    6. 'valid' → logprob: -12.754667282104492
    7. ' R' → logprob: -13.129667282104492
    8. '(R' → logprob: -13.629667282104492
    9. '(' → logprob: -14.629667282104492
    10. '   ' → logprob: -14.754667282104492

Token 942: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007142199319787323
    2. 'in' → logprob: -7.250714302062988
    3. ' ' → logprob: -12.625714302062988
    4. '	in' → logprob: -14.750714302062988
    5. '  ' → logprob: -15.500714302062988
    6. '<|end|>' → logprob: -15.875714302062988
    7. 'style' → logprob: -16.375713348388672
    8. 's' → logprob: -17.250713348388672
    9. ' ' → logprob: -17.500713348388672
    10. '<|end|>' → logprob: -17.625713348388672

Token 943: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029751643538475037
    2. ' self' → logprob: -3.5297515392303467
    3. '           ' → logprob: -14.529751777648926
    4. '       ' → logprob: -15.029751777648926
    5. '(self' → logprob: -15.654751777648926
    6. '   ' → logprob: -15.779751777648926
    7. '	self' → logprob: -16.90475082397461
    8. '[self' → logprob: -17.27975082397461
    9. ' ' → logprob: -17.90475082397461
    10. '    ' → logprob: -18.52975082397461

Token 944: '.valid' (ID: 41805)
  Prédit: '.valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.valid' → logprob: -1.1756367712223437e-05
    2. 'valid' → logprob: -11.375011444091797
    3. '	valid' → logprob: -15.500011444091797
    4. '(valid' → logprob: -18.625011444091797
    5. ' valid' → logprob: -18.625011444091797
    6. 'Valid' → logprob: -19.000011444091797
    7. '_valid' → logprob: -19.000011444091797
    8. '.' → logprob: -19.250011444091797
    9. ' .' → logprob: -19.625011444091797
    10. '.invalid' → logprob: -19.875011444091797

Token 945: '_styles' (ID: 95693)
  Prédit: '_styles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_styles' → logprob: -1.7432603272027336e-06
    2. '_style' → logprob: -14.125001907348633
    3. 'styles' → logprob: -14.250001907348633
    4. '_' → logprob: -16.375001907348633
    5. 'Styles' → logprob: -16.625001907348633
    6. ' styles' → logprob: -17.125001907348633
    7. '_
' → logprob: -17.625001907348633
    8. '(styles' → logprob: -17.875001907348633
    9. ' _' → logprob: -18.000001907348633
    10. '\' → logprob: -18.250001907348633

Token 946: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25249719619750977
    2. ':
' → logprob: -1.5024971961975098
    3. '               ' → logprob: -7.75249719619751
    4. ',' → logprob: -10.627496719360352
    5. '           ' → logprob: -10.752496719360352
    6. '):
' → logprob: -10.877496719360352
    7. '<|end|>' → logprob: -11.127496719360352
    8. '.' → logprob: -11.252496719360352
    9. ':

' → logprob: -11.252496719360352
    10. ':
' → logprob: -11.627496719360352

Token 947: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016170962480828166
    2. '
' → logprob: -7.751616954803467
    3. '           ' → logprob: -7.751616954803467
    4. '                               ' → logprob: -8.251617431640625
    5. '                
' → logprob: -9.501617431640625
    6. '<|end|>' → logprob: -9.626617431640625
    7. '                   ' → logprob: -10.126617431640625
    8. ' 
' → logprob: -10.376617431640625
    9. '                ' → logprob: -10.751617431640625
    10. '[' → logprob: -10.876617431640625

Token 948: ' indent' (ID: 37655)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.6780725121498108
    2. 'indent' (adapté à ' indent') → logprob: -1.178072452545166
    3. ' possible' → logprob: -2.428072452545166
    4. 'results' → logprob: -3.678072452545166
    5. ' indent' → logprob: -3.803072452545166
    6. '               ' → logprob: -4.178072452545166
    7. ' results' → logprob: -4.303072452545166
    8. ' indentation' → logprob: -4.803072452545166
    9. '           ' → logprob: -5.053072452545166
    10. 'ind' → logprob: -6.553072452545166

Token 949: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11409013718366623
    2. '=' → logprob: -2.2390902042388916
    3. 'ation' → logprob: -6.7390899658203125
    4. 'ations' → logprob: -10.239089965820312
    5. 's' → logprob: -10.989089965820312
    6. ' ' → logprob: -11.614089965820312
    7. '_possible' → logprob: -12.239089965820312
    8. '   ' → logprob: -12.739089965820312
    9. 'ed' → logprob: -12.739089965820312
    10. '_value' → logprob: -12.864089965820312

Token 950: ' style' (ID: 2713)
  Prédit: ' style'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' style' → logprob: -0.2519393861293793
    2. 'style' → logprob: -1.5019394159317017
    3. '(style' → logprob: -12.00193977355957
    4. ' ' → logprob: -13.37693977355957
    5. ''' → logprob: -13.87693977355957
    6. '"' → logprob: -14.25193977355957
    7. '	style' → logprob: -15.50193977355957
    8. 'space' → logprob: -16.12693977355957
    9. ' sty' → logprob: -16.50193977355957
    10. ' '' → logprob: -16.50193977355957

Token 951: '.compute' (ID: 60156)
  Prédit: '.compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -0.16217896342277527
    2. '.' → logprob: -1.9121789932250977
    3. '.R' → logprob: -6.537178993225098
    4. ' .' → logprob: -8.162178993225098
    5. 'compute' → logprob: -9.037178993225098
    6. '.S' → logprob: -10.037178993225098
    7. '.ind' → logprob: -11.287178993225098
    8. '   ' → logprob: -11.662178993225098
    9. ' compute' → logprob: -12.037178993225098
    10. '._' → logprob: -12.662178993225098

Token 952: '_indent' (ID: 196408)
  Prédit: '_indent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indent' → logprob: -4.961759259458631e-06
    2. '_ind' → logprob: -12.875004768371582
    3. '_' → logprob: -13.500004768371582
    4. 'indent' → logprob: -14.125004768371582
    5. '(indent' → logprob: -15.625004768371582
    6. '-indent' → logprob: -17.0000057220459
    7. ' _' → logprob: -17.7500057220459
    8. ' indent' → logprob: -18.0000057220459
    9. '(' → logprob: -18.0000057220459
    10. 'Indent' → logprob: -18.1250057220459

Token 953: '(ro' (ID: 193804)
  Prédit: '(ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ro' → logprob: -0.003180094063282013
    2. '(' → logprob: -5.753180027008057
    3. '(
' → logprob: -13.503180503845215
    4. ' (' → logprob: -13.878180503845215
    5. '(r' → logprob: -17.0031795501709
    6. '(rot' → logprob: -18.2531795501709
    7. '(lo' → logprob: -18.6281795501709
    8. '(

' → logprob: -18.8781795501709
    9. '(po' → logprob: -19.2531795501709
    10. '(vo' → logprob: -19.3781795501709

Token 954: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005541055579669774
    2. ' ,' → logprob: -8.125554084777832
    3. ' -' → logprob: -8.500554084777832
    4. '-' → logprob: -10.250554084777832
    5. ',
' → logprob: -11.500554084777832
    6. '       ' → logprob: -12.500554084777832
    7. '   ' → logprob: -13.375554084777832
    8. '        ' → logprob: -13.875554084777832
    9. '=' → logprob: -14.250554084777832
    10. '    ' → logprob: -14.625554084777832

Token 955: ' rc' (ID: 23309)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.02975199744105339
    2. ' rc' → logprob: -3.529752016067505
    3. '	rc' → logprob: -14.529751777648926
    4. '(rc' → logprob: -14.904751777648926
    5. '_rc' → logprob: -15.529751777648926
    6. ' ' → logprob: -15.654751777648926
    7. 'sc' → logprob: -16.404752731323242
    8. '
' → logprob: -16.404752731323242
    9. '   ' → logprob: -17.529752731323242
    10. '  ' → logprob: -17.654752731323242

Token 956: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034297199454158545
    2. ' ,' → logprob: -8.250343322753906
    3. 'co' → logprob: -9.500343322753906
    4. ',
' → logprob: -12.125343322753906
    5. ' co' → logprob: -13.750343322753906
    6. '(co' → logprob: -15.625343322753906
    7. '   ' → logprob: -16.750343322753906
    8. ',
' → logprob: -17.375343322753906
    9. ',\
' → logprob: -18.125343322753906
    10. ',c' → logprob: -18.500343322753906

Token 957: ' co' (ID: 1407)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.0002613358374219388
    2. ' co' → logprob: -8.250261306762695
    3. '(co' → logprob: -17.375261306762695
    4. ' ' → logprob: -18.625261306762695
    5. '   ' → logprob: -20.000261306762695
    6. '_co' → logprob: -20.375261306762695
    7. '.co' → logprob: -21.000261306762695
    8. ' ' → logprob: -21.750261306762695
    9. '  ' → logprob: -22.000261306762695
    10. '```' → logprob: -22.125261306762695

Token 958: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023619852436240762
    2. ' ,' → logprob: -8.375236511230469
    3. ',
' → logprob: -12.125236511230469
    4. ',

' → logprob: -17.37523651123047
    5. ' ,
' → logprob: -17.50023651123047
    6. ' cc' → logprob: -17.62523651123047
    7. ',\
' → logprob: -18.00023651123047
    8. ')' → logprob: -18.37523651123047
    9. ' ' → logprob: -18.62523651123047
    10. '
' → logprob: -19.00023651123047

Token 959: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.008615635335445404
    2. ' cc' → logprob: -4.758615493774414
    3. 'co' → logprob: -14.258615493774414
    4. '	cc' → logprob: -15.008615493774414
    5. '(cc' → logprob: -17.133615493774414
    6. '_cc' → logprob: -17.508615493774414
    7. 'cco' → logprob: -17.758615493774414
    8. ' ' → logprob: -18.133615493774414
    9. 'c' → logprob: -18.258615493774414
    10. ' co' → logprob: -18.383615493774414

Token 960: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.842555426876061e-06
    2. ' ,' → logprob: -12.375004768371582
    3. 'so' → logprob: -14.750004768371582
    4. ',
' → logprob: -17.0000057220459
    5. '```' → logprob: -17.1250057220459
    6. '               ' → logprob: -17.2500057220459
    7. ' so' → logprob: -17.6250057220459
    8. '_,' → logprob: -18.6250057220459
    9. '                   ' → logprob: -18.8750057220459
    10. ')' → logprob: -19.1250057220459

Token 961: ' so' (ID: 813)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.005929274018853903
    2. ' so' → logprob: -5.130929470062256
    3. ' ' → logprob: -14.880928993225098
    4. '  ' → logprob: -16.505929946899414
    5. 'So' → logprob: -16.505929946899414
    6. '_so' → logprob: -17.255929946899414
    7. '   ' → logprob: -17.380929946899414
    8. 's' → logprob: -17.630929946899414
    9. '
' → logprob: -17.880929946899414
    10. ' ' → logprob: -18.255929946899414

Token 962: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.392202976712724e-06
    2. ' ,' → logprob: -12.500006675720215
    3. ',
' → logprob: -12.875006675720215
    4. ')' → logprob: -17.2500057220459
    5. ',\
' → logprob: -18.7500057220459
    6. ',

' → logprob: -19.1250057220459
    7. '```' → logprob: -19.1250057220459
    8. '
' → logprob: -19.6250057220459
    9. ',s' → logprob: -19.6250057220459
    10. '=sc' → logprob: -19.8750057220459

Token 963: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.023245826363563538
    2. ' sc' → logprob: -3.7732458114624023
    3. '(sc' → logprob: -14.898245811462402
    4. '_sc' → logprob: -16.89824676513672
    5. '	sc' → logprob: -17.77324676513672
    6. 'Sc' → logprob: -18.27324676513672
    7. '=sc' → logprob: -18.39824676513672
    8. '-sc' → logprob: -18.77324676513672
    9. '.sc' → logprob: -19.64824676513672
    10. 'SC' → logprob: -20.02324676513672

Token 964: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02985253743827343
    2. ')' → logprob: -3.5298526287078857
    3. '               ' → logprob: -9.529852867126465
    4. ')
' → logprob: -10.779852867126465
    5. '           ' → logprob: -11.904852867126465
    6. '                   ' → logprob: -14.404852867126465
    7. ' )
' → logprob: -14.404852867126465
    8. ')

' → logprob: -14.404852867126465
    9. '              ' → logprob: -17.40485191345215
    10. '                       ' → logprob: -17.65485191345215

Token 965: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5570911169052124
    2. '
' → logprob: -0.9320911169052124
    3. '           ' → logprob: -3.807091236114502
    4. '                   ' → logprob: -5.307091236114502
    5. ')' → logprob: -6.432091236114502
    6. ' 
' → logprob: -6.682091236114502
    7. '  
' → logprob: -7.557091236114502
    8. '                
' → logprob: -7.682091236114502
    9. '                               ' → logprob: -8.182090759277344
    10. '                       ' → logprob: -8.182090759277344

Token 966: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' (adapté à ' possible') → logprob: -0.10668619722127914
    2. ' possible' → logprob: -2.4816861152648926
    3. ' if' → logprob: -5.106686115264893
    4. '               ' → logprob: -5.481686115264893
    5. 'if' → logprob: -5.481686115264893
    6. '           ' → logprob: -6.106686115264893
    7. 'results' → logprob: -7.356686115264893
    8. ' results' → logprob: -8.48168659210205
    9. '
' → logprob: -9.60668659210205
    10. '                   ' → logprob: -10.35668659210205

Token 967: '_indent' (ID: 196408)
  Prédit: '_indent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indent' → logprob: -5.049755782238208e-05
    2. '_ind' → logprob: -10.12505054473877
    3. '_' → logprob: -11.75005054473877
    4. 'indent' → logprob: -13.75005054473877
    5. '_ident' → logprob: -14.87505054473877
    6. 's' → logprob: -15.25005054473877
    7. '(indent' → logprob: -15.87505054473877
    8. 'Indent' → logprob: -16.125049591064453
    9. '_
' → logprob: -16.125049591064453
    10. '_possible' → logprob: -16.375049591064453

Token 968: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.00016599490481894463
    2. 's' → logprob: -9.125165939331055
    3. '_' → logprob: -10.375165939331055
    4. '=' → logprob: -11.875165939331055
    5. 'a' → logprob: -12.125165939331055
    6. ' =' → logprob: -12.750165939331055
    7. '   ' → logprob: -13.125165939331055
    8. 'ions' → logprob: -13.375165939331055
    9. 't' → logprob: -14.125165939331055
    10. '       ' → logprob: -14.125165939331055

Token 969: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.676292231422849e-05
    2. '.' → logprob: -11.000017166137695
    3. '.append' → logprob: -17.000017166137695
    4. ' .' → logprob: -17.125017166137695
    5. 'add' → logprob: -17.750017166137695
    6. '.update' → logprob: -18.250017166137695
    7. '.Add' → logprob: -20.000017166137695
    8. ' =' → logprob: -20.375017166137695
    9. '           ' → logprob: -20.625017166137695
    10. '   ' → logprob: -21.750017166137695

Token 970: '(indent' (ID: 184205)
  Prédit: '(indent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(indent' → logprob: -3.173704271830502e-06
    2. 'indent' → logprob: -13.00000286102295
    3. '(ind' → logprob: -14.00000286102295
    4. '(' → logprob: -17.250003814697266
    5. '(intent' → logprob: -19.875003814697266
    6. '(
' → logprob: -19.875003814697266
    7. '(int' → logprob: -20.000003814697266
    8. ' indent' → logprob: -20.000003814697266
    9. '(i' → logprob: -20.750003814697266
    10. '_indent' → logprob: -22.000003814697266

Token 971: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006343715358525515
    2. '           ' → logprob: -5.131343841552734
    3. ')
' → logprob: -8.131343841552734
    4. '               ' → logprob: -9.506343841552734
    5. '<|end|>' → logprob: -10.506343841552734
    6. '       ' → logprob: -11.756343841552734
    7. '<|end|>' → logprob: -13.506343841552734
    8. ')return' → logprob: -13.506343841552734
    9. '                   ' → logprob: -13.756343841552734
    10. '          ' → logprob: -13.881343841552734

Token 972: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01367105171084404
    2. '
' → logprob: -4.388670921325684
    3. 'if' → logprob: -7.263670921325684
    4. '       ' → logprob: -8.513670921325684
    5. ' if' → logprob: -8.513670921325684
    6. '
' → logprob: -10.888670921325684
    7. '   ' → logprob: -11.763670921325684
    8. '            
' → logprob: -12.013670921325684
    9. '               ' → logprob: -12.138670921325684
    10. '		' → logprob: -12.388670921325684

Token 973: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.31334301829338074
    2. '           ' → logprob: -1.3133430480957031
    3. ' if' → logprob: -9.563343048095703
    4. '       ' → logprob: -11.563343048095703
    5. '
' → logprob: -14.188343048095703
    6. '   ' → logprob: -14.313343048095703
    7. '```' → logprob: -15.563343048095703
    8. 'results' → logprob: -16.438343048095703
    9. '               ' → logprob: -17.188343048095703
    10. '            
' → logprob: -17.438343048095703

Token 974: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0022452964913100004
    2. ' len' → logprob: -6.1272454261779785
    3. 'possible' → logprob: -10.37724494934082
    4. ' ' → logprob: -11.25224494934082
    5. '(len' → logprob: -11.37724494934082
    6. '   ' → logprob: -13.50224494934082
    7. 'not' → logprob: -13.87724494934082
    8. '	len' → logprob: -14.25224494934082
    9. 'None' → logprob: -14.75224494934082
    10. '  ' → logprob: -14.87724494934082

Token 975: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.500001907348633
    3. 'possible' → logprob: -14.875001907348633
    4. 'pos' → logprob: -17.375001907348633
    5. ' possible' → logprob: -18.375001907348633
    6. 'Possible' → logprob: -18.625001907348633
    7. '[pos' → logprob: -18.875001907348633
    8. '_possible' → logprob: -19.375001907348633
    9. ' (' → logprob: -20.125001907348633
    10. '	pos' → logprob: -20.250001907348633

Token 976: 'sible' (ID: 15301)
  Prédit: 'sible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sible' → logprob: -6.396757089532912e-05
    2. 'possible' → logprob: -9.7500638961792
    3. 's' → logprob: -12.5000638961792
    4. 'oss' → logprob: -13.7500638961792
    5. '_possible' → logprob: -15.0000638961792
    6. 'ible' → logprob: -15.1250638961792
    7. 'isible' → logprob: -16.250064849853516
    8. 'os' → logprob: -17.250064849853516
    9. 'ss' → logprob: -17.500064849853516
    10. 'Possible' → logprob: -17.875064849853516

Token 977: '_indent' (ID: 196408)
  Prédit: '_indent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indent' → logprob: -0.0048150536604225636
    2. 's' → logprob: -6.629815101623535
    3. '_ind' → logprob: -6.629815101623535
    4. 'indent' → logprob: -7.504815101623535
    5. '(indent' → logprob: -7.629815101623535
    6. '_' → logprob: -7.629815101623535
    7. '_possible' → logprob: -7.754815101623535
    8. '```' → logprob: -9.879815101623535
    9. '_ident' → logprob: -11.004815101623535
    10. 'Indent' → logprob: -11.004815101623535

Token 978: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.002865258604288101
    2. 's' → logprob: -5.877865314483643
    3. 'ions' → logprob: -10.627864837646484
    4. 'a' → logprob: -11.377864837646484
    5. '>' → logprob: -11.877864837646484
    6. 't' → logprob: -11.877864837646484
    7. '   ' → logprob: -13.127864837646484
    8. 'ons' → logprob: -13.502864837646484
    9. '==' → logprob: -13.627864837646484
    10. 'es' → logprob: -13.627864837646484

Token 979: ')' (ID: 8)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.313746839761734
    2. ' >' → logprob: -2.063746929168701
    3. '==' → logprob: -2.313746929168701
    4. '>' → logprob: -3.188746929168701
    5. ')' → logprob: -6.313746929168701
    6. ' !=' → logprob: -8.563746452331543
    7. ')>' → logprob: -10.188746452331543
    8. '{' → logprob: -10.563746452331543
    9. '<|end|>' → logprob: -10.563746452331543
    10. '=' → logprob: -10.813746452331543

Token 980: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04338553547859192
    2. ' ==' → logprob: -3.1683855056762695
    3. '>' → logprob: -8.91838550567627
    4. '=' → logprob: -9.04338550567627
    5. '1' → logprob: -9.79338550567627
    6. ')' → logprob: -10.41838550567627
    7. '!=' → logprob: -10.54338550567627
    8. '===' → logprob: -12.16838550567627
    9. ')==' → logprob: -12.29338550567627
    10. '{' → logprob: -13.41838550567627

Token 981: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001867326645879075
    2. ' ' → logprob: -9.125186920166016
    3. '0' → logprob: -9.500186920166016
    4. '   ' → logprob: -13.625186920166016
    5. '  ' → logprob: -15.000186920166016
    6. '```' → logprob: -15.250186920166016
    7. '
' → logprob: -15.312686920166016
    8. '۱' → logprob: -15.562686920166016
    9. '=' → logprob: -15.562686920166016
    10. '

' → logprob: -16.125186920166016

Token 982: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.584861744660884e-05
    2. ' ' → logprob: -10.375045776367188
    3. '0' → logprob: -11.500045776367188
    4. '   ' → logprob: -12.750045776367188
    5. '```' → logprob: -14.750045776367188
    6. '=' → logprob: -14.875045776367188
    7. '  ' → logprob: -15.687545776367188
    8. '۱' → logprob: -15.750045776367188
    9. '
' → logprob: -15.937545776367188
    10. '

' → logprob: -16.750045776367188

Token 983: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25236645340919495
    2. ':
' → logprob: -1.5023664236068726
    3. '               ' → logprob: -8.502366065979004
    4. '           ' → logprob: -9.002366065979004
    5. ' and' → logprob: -10.127366065979004
    6. ',' → logprob: -10.877366065979004
    7. '):
' → logprob: -11.002366065979004
    8. ')' → logprob: -11.877366065979004
    9. '       ' → logprob: -11.877366065979004
    10. ':
' → logprob: -12.377366065979004

Token 984: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.061008237302303314
    2. ' results' → logprob: -3.1860082149505615
    3. 'results' → logprob: -4.061008453369141
    4. '           ' → logprob: -8.68600845336914
    5. ' next' → logprob: -9.18600845336914
    6. '   ' → logprob: -9.31100845336914
    7. '	results' → logprob: -9.93600845336914
    8. 'possible' → logprob: -10.18600845336914
    9. '                   ' → logprob: -10.31100845336914
    10. '			' → logprob: -10.68600845336914

Token 985: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.002048670779913664
    2. ' results' → logprob: -6.252048492431641
    3. '               ' → logprob: -9.37704849243164
    4. 'indent' → logprob: -11.00204849243164
    5. '           ' → logprob: -12.25204849243164
    6. '                   ' → logprob: -12.50204849243164
    7. '	results' → logprob: -13.00204849243164
    8. 'result' → logprob: -13.12704849243164
    9. '
' → logprob: -13.37704849243164
    10. '   ' → logprob: -13.50204849243164

Token 986: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0012494005495682359
    2. '.' → logprob: -6.751249313354492
    3. '.extend' → logprob: -9.876249313354492
    4. '.add' → logprob: -10.501249313354492
    5. ' .' → logprob: -16.251249313354492
    6. 'append' → logprob: -16.751249313354492
    7. '   ' → logprob: -17.126249313354492
    8. '.app' → logprob: -17.251249313354492
    9. '.ap' → logprob: -17.376249313354492
    10. '.update' → logprob: -18.126249313354492

Token 987: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.001815121271647513
    2. '(next' → logprob: -6.501815319061279
    3. '(list' → logprob: -8.251814842224121
    4. 'possible' → logprob: -10.626814842224121
    5. '(str' → logprob: -11.126814842224121
    6. '(results' → logprob: -11.876814842224121
    7. '(' → logprob: -12.876814842224121
    8. 'list' → logprob: -13.501814842224121
    9. 'pos' → logprob: -13.501814842224121
    10. 'next' → logprob: -14.876814842224121

Token 988: 'sible' (ID: 15301)
  Prédit: 'sible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sible' → logprob: -0.001941726659424603
    2. 'oss' → logprob: -6.501941680908203
    3. 'possible' → logprob: -7.876941680908203
    4. 's' → logprob: -9.876941680908203
    5. 'ss' → logprob: -13.251941680908203
    6. 'able' → logprob: -13.251941680908203
    7. 'ible' → logprob: -13.876941680908203
    8. '_possible' → logprob: -14.001941680908203
    9. 'iable' → logprob: -14.376941680908203
    10. ' possible' → logprob: -14.501941680908203

Token 989: '_indent' (ID: 196408)
  Prédit: '_indent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indent' → logprob: -0.04171990230679512
    2. '_ind' → logprob: -3.541719913482666
    3. 'indent' → logprob: -4.541719913482666
    4. '(indent' → logprob: -7.291719913482666
    5. 'Indent' → logprob: -7.791719913482666
    6. ' indent' → logprob: -9.916719436645508
    7. '_' → logprob: -10.791719436645508
    8. '_lines' → logprob: -11.541719436645508
    9. 'ations' → logprob: -11.791719436645508
    10. '```' → logprob: -11.916719436645508

Token 990: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.008853047154843807
    2. 'ation' → logprob: -4.758852958679199
    3. 't' → logprob: -9.0088529586792
    4. '   ' → logprob: -10.5088529586792
    5. 'ents' → logprob: -11.1338529586792
    6. 'results' → logprob: -11.3838529586792
    7. '       ' → logprob: -11.5088529586792
    8. '
' → logprob: -11.6338529586792
    9. 'e' → logprob: -11.7588529586792
    10. ' ' → logprob: -11.7588529586792

Token 991: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -4.961759259458631e-06
    2. '.' → logprob: -13.000004768371582
    3. '.copy' → logprob: -13.000004768371582
    4. 'pop' → logprob: -15.000004768371582
    5. '.clear' → logprob: -19.1250057220459
    6. '().' → logprob: -19.1250057220459
    7. '	pop' → logprob: -19.2500057220459
    8. ')' → logprob: -19.3750057220459
    9. ' pop' → logprob: -19.3750057220459
    10. '.get' → logprob: -19.5000057220459

Token 992: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0025119276251643896
    2. '()' → logprob: -6.002511978149414
    3. '())
' → logprob: -10.252511978149414
    4. '()
' → logprob: -15.127511978149414
    5. ' ())' → logprob: -15.252511978149414
    6. ')' → logprob: -15.627511978149414
    7. '())

' → logprob: -16.252511978149414
    8. '();)' → logprob: -16.502511978149414
    9. '()))' → logprob: -16.877511978149414
    10. '())
' → logprob: -16.877511978149414

Token 993: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023355770856142044
    2. 'else' → logprob: -3.773355722427368
    3. ' else' → logprob: -9.648355484008789
    4. '		' → logprob: -10.398355484008789
    5. '       ' → logprob: -12.023355484008789
    6. '
' → logprob: -12.273355484008789
    7. '```' → logprob: -13.273355484008789
    8. '   ' → logprob: -13.898355484008789
    9. '	else' → logprob: -14.523355484008789
    10. '	       ' → logprob: -14.648355484008789

Token 994: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2530783712863922
    2. '           ' → logprob: -1.5030783414840698
    3. ' else' → logprob: -7.253078460693359
    4. '       ' → logprob: -7.753078460693359
    5. '		' → logprob: -12.25307846069336
    6. '	else' → logprob: -12.75307846069336
    7. '   ' → logprob: -14.12807846069336
    8. 'elif' → logprob: -14.12807846069336
    9. '	       ' → logprob: -14.37807846069336
    10. '
' → logprob: -14.62807846069336

Token 995: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004300034139305353
    2. '           ' → logprob: -5.504300117492676
    3. '	           ' → logprob: -9.379300117492676
    4. ':
' → logprob: -10.379300117492676
    5. '		       ' → logprob: -10.504300117492676
    6. '	       ' → logprob: -10.629300117492676
    7. ':' → logprob: -11.754300117492676
    8. '                   ' → logprob: -11.879300117492676
    9. '			' → logprob: -12.129300117492676
    10. 'results' → logprob: -12.379300117492676

Token 996: '               ' (ID: 506)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.3951928913593292
    2. '           ' → logprob: -1.3951928615570068
    3. '               ' → logprob: -2.895192861557007
    4. ' results' → logprob: -3.770192861557007
    5. '0' → logprob: -9.520193099975586
    6. '                   ' → logprob: -9.770193099975586
    7. '	results' → logprob: -9.770193099975586
    8. '   ' → logprob: -10.020193099975586
    9. '            ' → logprob: -10.770193099975586
    10. ' ' → logprob: -10.895193099975586

Token 997: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.00020389800192788243
    2. ' results' → logprob: -8.625204086303711
    3. '-' → logprob: -11.250204086303711
    4. '                   ' → logprob: -12.375204086303711
    5. '               ' → logprob: -12.875204086303711
    6. '           ' → logprob: -13.000204086303711
    7. '   ' → logprob: -14.000204086303711
    8. '	results' → logprob: -14.125204086303711
    9. '-results' → logprob: -15.000204086303711
    10. 'result' → logprob: -15.500204086303711

Token 998: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005539863486774266
    2. '.' → logprob: -7.500554084777832
    3. '.app' → logprob: -14.500554084777832
    4. 'append' → logprob: -14.750554084777832
    5. '.extend' → logprob: -16.750553131103516
    6. '.ap' → logprob: -18.375553131103516
    7. '.Append' → logprob: -18.875553131103516
    8. ' .' → logprob: -19.125553131103516
    9. '.add' → logprob: -20.000553131103516
    10. '_append' → logprob: -20.250553131103516

Token 999: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25205814838409424
    2. '(-' → logprob: -1.5020581483840942
    3. '(' → logprob: -9.752058029174805
    4. '   ' → logprob: -10.627058029174805
    5. ' -' → logprob: -10.752058029174805
    6. '−' → logprob: -11.877058029174805
    7. '?' → logprob: -12.127058029174805
    8. '  ' → logprob: -12.877058029174805
    9. '       ' → logprob: -13.002058029174805
    10. '	' → logprob: -13.252058029174805

Token 1000: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -17.75
    3. '１' → logprob: -18.5
    4. '```' → logprob: -19.125
    5. '۱' → logprob: -19.625
    6. '१' → logprob: -19.75
    7. '100' → logprob: -19.8125
    8. '11' → logprob: -19.8125
    9. ' ' → logprob: -19.9375
    10. '১' → logprob: -20.0

Token 1001: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06251095235347748
    2. ')
' → logprob: -3.6875109672546387
    3. '       ' → logprob: -3.6875109672546387
    4. '           ' → logprob: -4.562510967254639
    5. ')return' → logprob: -10.81251049041748
    6. '
' → logprob: -10.93751049041748
    7. '<|end|>' → logprob: -10.93751049041748
    8. '   ' → logprob: -11.43751049041748
    9. '          ' → logprob: -12.68751049041748
    10. ' )' → logprob: -12.93751049041748

Token 1002: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007894070819020271
    2. '
' → logprob: -5.007894039154053
    3. 'return' → logprob: -6.757894039154053
    4. '   ' → logprob: -12.007894515991211
    5. ' return' → logprob: -12.007894515991211
    6. '           ' → logprob: -14.007894515991211
    7. '	return' → logprob: -14.257894515991211
    8. '	' → logprob: -14.382894515991211
    9. '
' → logprob: -14.382894515991211
    10. '        
' → logprob: -14.507894515991211

Token 1003: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3886571228504181
    2. '
' → logprob: -1.1386570930480957
    3. 'return' (adapté à ' return') → logprob: -6.388657093048096
    4. '   ' → logprob: -10.013657569885254
    5. ' return' → logprob: -10.263657569885254
    6. '
' → logprob: -11.513657569885254
    7. '        
' → logprob: -12.263657569885254
    8. '	return' → logprob: -13.138657569885254
    9. '           ' → logprob: -13.388657569885254
    10. '    
' → logprob: -13.638657569885254

Token 1004: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -3.547789674485102e-05
    2. ' results' → logprob: -10.250035285949707
    3. '	results' → logprob: -21.250036239624023
    4. '(results' → logprob: -23.000036239624023
    5. '.results' → logprob: -25.000036239624023
    6. '
' → logprob: -25.000036239624023
    7. 'result' → logprob: -25.250036239624023
    8. '[' → logprob: -25.500036239624023
    9. '_results' → logprob: -26.500036239624023
    10. 'Results' → logprob: -27.000036239624023

Token 1005: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1006: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.27722176909446716
    2. '<|end|>' → logprob: -2.1522216796875
    3. 'def' → logprob: -2.2772216796875
    4. '```' → logprob: -4.0272216796875
    5. '<|end|>' → logprob: -5.7772216796875
    6. 'class' → logprob: -7.6522216796875
    7. '
' → logprob: -8.1522216796875
    8. 'print' → logprob: -8.5272216796875
    9. '...' → logprob: -8.6522216796875
    10. 'import' → logprob: -8.9022216796875

Token 1007: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0020391526632010937
    2. 'main' → logprob: -6.252038955688477
    3. ' solve' → logprob: -9.127038955688477
    4. ' parse' → logprob: -14.502038955688477
    5. 'solve' → logprob: -14.502038955688477
    6. ' run' → logprob: -15.002038955688477
    7. ' process' → logprob: -15.377038955688477
    8. ' solution' → logprob: -15.627038955688477
    9. ' stylish' → logprob: -16.752038955688477
    10. '	main' → logprob: -17.127038955688477

Token 1008: '_dataset' (ID: 40568)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01650572381913662
    2. '():
' → logprob: -5.016505718231201
    3. '_lines' → logprob: -5.641505718231201
    4. '():' → logprob: -6.766505718231201
    5. '_line' → logprob: -6.766505718231201
    6. '_input' → logprob: -7.141505718231201
    7. '()>' → logprob: -7.516505718231201
    8. 'line' → logprob: -7.766505718231201
    9. '()
' → logprob: -8.01650619506836
    10. '()<' → logprob: -8.26650619506836

Token 1009: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.16088078916072845
    2. '():
' → logprob: -1.9108808040618896
    3. '(n' → logprob: -8.660881042480469
    4. ' ():' → logprob: -8.785881042480469
    5. '()' → logprob: -9.035881042480469
    6. '(lines' → logprob: -9.535881042480469
    7. '(num' → logprob: -10.035881042480469
    8. '(number' → logprob: -11.160881042480469
    9. '(' → logprob: -11.410881042480469
    10. '(filename' → logprob: -11.785881042480469

Token 1010: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0710289478302002
    2. ' n' → logprob: -3.0710289478302
    3. 'n' → logprob: -3.9460289478302
    4. ' import' → logprob: -6.571028709411621
    5. 'import' → logprob: -6.821028709411621
    6. '```' → logprob: -8.571028709411621
    7. '   ' → logprob: -9.071028709411621
    8. ' lines' → logprob: -10.696028709411621
    9. ' line' → logprob: -11.946028709411621
    10. ' try' → logprob: -12.696028709411621

Token 1011: ' while' (ID: 2049)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.43560791015625
    2. 'n' → logprob: -1.81060791015625
    3. 't' → logprob: -2.43560791015625
    4. 'N' → logprob: -3.18560791015625
    5. ' T' → logprob: -3.56060791015625
    6. 'import' → logprob: -4.18560791015625
    7. '   ' → logprob: -4.68560791015625
    8. ' t' → logprob: -5.56060791015625
    9. ' n' → logprob: -6.06060791015625
    10. ' import' → logprob: -7.43560791015625

Token 1012: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.07893551141023636
    2. ' True' → logprob: -2.5789356231689453
    3. '(True' → logprob: -10.203935623168945
    4. '
' → logprob: -12.453935623168945
    5. 'T' → logprob: -12.703935623168945
    6. '=True' → logprob: -13.828935623168945
    7. 'Tr' → logprob: -15.078935623168945
    8. '1' → logprob: -15.453935623168945
    9. 't' → logprob: -16.578935623168945
    10. 'true' → logprob: -16.703935623168945

Token 1013: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41807904839515686
    2. '       ' → logprob: -1.9180790185928345
    3. '():' → logprob: -2.293079137802124
    4. ':' → logprob: -2.543079137802124
    5. '():
' → logprob: -5.293078899383545
    6. ':
' → logprob: -5.293078899383545
    7. ' :' → logprob: -6.043078899383545
    8. ' line' → logprob: -7.543078899383545
    9. '(line' → logprob: -7.543078899383545
    10. '(' → logprob: -7.918078899383545

Token 1014: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03819756209850311
    2. 'try' → logprob: -3.5381975173950195
    3. ' try' → logprob: -5.2881975173950195
    4. '       ' → logprob: -5.7881975173950195
    5. ' line' → logprob: -9.03819751739502
    6. 'line' → logprob: -9.28819751739502
    7. '```' → logprob: -9.91319751739502
    8. 'n' → logprob: -10.66319751739502
    9. '   ' → logprob: -12.03819751739502
    10. ' n' → logprob: -12.78819751739502

Token 1015: ' line' (ID: 2543)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4152779281139374
    2. 'n' → logprob: -1.7902779579162598
    3. 'line' (adapté à ' line') → logprob: -2.4152779579162598
    4. 'L' → logprob: -3.4152779579162598
    5. 'P' → logprob: -3.9152779579162598
    6. 'try' → logprob: -4.04027795791626
    7. 'l' → logprob: -5.29027795791626
    8. 'p' → logprob: -5.91527795791626
    9. 'R' → logprob: -6.66527795791626
    10. '   ' → logprob: -6.66527795791626

Token 1016: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007614201866090298
    2. ' =' → logprob: -4.8826141357421875
    3. '=line' → logprob: -12.007614135742188
    4. 's' → logprob: -14.007614135742188
    5. '=
' → logprob: -14.632614135742188
    6. 'line' → logprob: -14.757614135742188
    7. '=input' → logprob: -15.257614135742188
    8. '＝' → logprob: -17.007614135742188
    9. '.=' → logprob: -17.007614135742188
    10. 'input' → logprob: -17.257614135742188

Token 1017: ' ''
' (ID: 25366)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0007104054093360901
    2. ' input' → logprob: -7.250710487365723
    3. '(input' → logprob: -15.000710487365723
    4. '=input' → logprob: -17.000709533691406
    5. '   ' → logprob: -17.250709533691406
    6. 'line' → logprob: -17.500709533691406
    7. '
' → logprob: -18.375709533691406
    8. '<input' → logprob: -18.500709533691406
    9. '	input' → logprob: -18.750709533691406
    10. '_input' → logprob: -21.000709533691406

Token 1018: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5470786690711975
    2. '       ' → logprob: -1.5470786094665527
    3. 'line' → logprob: -2.5470786094665527
    4. '=line' → logprob: -3.0470786094665527
    5. ' =' → logprob: -3.1720786094665527
    6. ' line' → logprob: -3.6720786094665527
    7. 'while' → logprob: -5.547078609466553
    8. '(line' → logprob: -5.672078609466553
    9. '   ' → logprob: -5.672078609466553
    10. 'try' → logprob: -5.922078609466553

Token 1019: ' while' (ID: 2049)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.3141450881958008
    2. 'try' → logprob: -1.3141450881958008
    3. '
' → logprob: -8.0641450881958
    4. '   ' → logprob: -8.4391450881958
    5. ' line' → logprob: -8.8141450881958
    6. '       ' → logprob: -9.5641450881958
    7. ' try' → logprob: -10.0641450881958
    8. 'while' (adapté à ' while') → logprob: -10.1891450881958
    9. '           ' → logprob: -10.8141450881958
    10. 'if' → logprob: -10.9391450881958

Token 1020: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.02128986269235611
    2. ' line' → logprob: -4.896289825439453
    3. '(line' → logprob: -4.896289825439453
    4. 'True' → logprob: -5.521289825439453
    5. 'not' → logprob: -7.271289825439453
    6. ' True' → logprob: -7.271289825439453
    7. '(True' → logprob: -8.021289825439453
    8. 'len' → logprob: -8.146289825439453
    9. ' not' → logprob: -9.396289825439453
    10. '(not' → logprob: -11.396289825439453

Token 1021: '.strip' (ID: 40613)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.18055908381938934
    2. '=' → logprob: -2.4305591583251953
    3. ':=' → logprob: -2.9305591583251953
    4. '.strip' → logprob: -4.055559158325195
    5. '().' → logprob: -5.555559158325195
    6. '()==' → logprob: -6.305559158325195
    7. 'strip' → logprob: -8.055559158325195
    8. ' ==' → logprob: -8.055559158325195
    9. ' :=' → logprob: -9.930559158325195
    10. ' =' → logprob: -10.680559158325195

Token 1022: '()' (ID: 416)
  Prédit: '()=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()==' → logprob: -0.4081959128379822
    2. '()' → logprob: -1.408195972442627
    3. '==' → logprob: -2.408195972442627
    4. '=' → logprob: -7.658195972442627
    5. '===' → logprob: -10.158195495605469
    6. ' ==' → logprob: -10.658195495605469
    7. '():' → logprob: -10.783195495605469
    8. '()!=' → logprob: -10.783195495605469
    9. '()<' → logprob: -12.658195495605469
    10. '()=="' → logprob: -12.783195495605469

Token 1023: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.013005747459828854
    2. '()==' → logprob: -4.38800573348999
    3. ' ==' → logprob: -8.513006210327148
    4. '=' → logprob: -8.513006210327148
    5. '()' → logprob: -9.388006210327148
    6. '===' → logprob: -11.763006210327148
    7. ':=' → logprob: -14.138006210327148
    8. ')==' → logprob: -14.888006210327148
    9. '!=' → logprob: -15.138006210327148
    10. '==
' → logprob: -15.263006210327148

Token 1024: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.023253632709383965
    2. ''' → logprob: -3.7732536792755127
    3. '""' → logprob: -12.398253440856934
    4. '"":' → logprob: -13.648253440856934
    5. '''.' → logprob: -13.648253440856934
    6. ''',' → logprob: -14.523253440856934
    7. ''''' → logprob: -14.523253440856934
    8. '''
' → logprob: -15.398253440856934
    9. ' '':
' → logprob: -16.14825439453125
    10. '''''' → logprob: -17.14825439453125

Token 1025: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5791696310043335
    2. ' line' → logprob: -1.4541696310043335
    3. 'line' → logprob: -1.8291696310043335
    4. '       ' → logprob: -3.829169750213623
    5. '(line' → logprob: -4.079169750213623
    6. '=line' → logprob: -5.579169750213623
    7. '   ' → logprob: -6.829169750213623
    8. ' =' → logprob: -7.579169750213623
    9. '=' → logprob: -8.079169273376465
    10. 'try' → logprob: -8.204169273376465

Token 1026: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.0015245062531903386
    2. 'try' → logprob: -6.501524448394775
    3. ' line' → logprob: -10.751524925231934
    4. '   ' → logprob: -15.001524925231934
    5. '	line' → logprob: -15.876524925231934
    6. '       ' → logprob: -16.001523971557617
    7. '           ' → logprob: -16.376523971557617
    8. 'import' → logprob: -16.876523971557617
    9. '
' → logprob: -17.126523971557617
    10. '#line' → logprob: -17.501523971557617

Token 1027: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010326596908271313
    2. '=line' → logprob: -4.635326385498047
    3. ' =' → logprob: -7.510326385498047
    4. 'line' → logprob: -10.885326385498047
    5. '=
' → logprob: -13.135326385498047
    6. '=input' → logprob: -13.635326385498047
    7. ':=' → logprob: -15.010326385498047
    8. ' line' → logprob: -15.760326385498047
    9. '(line' → logprob: -16.135326385498047
    10. '+=' → logprob: -16.260326385498047

Token 1028: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0325924449716695e-05
    2. ' input' → logprob: -11.50001049041748
    3. '(input' → logprob: -15.75001049041748
    4. '
' → logprob: -17.000009536743164
    5. '=input' → logprob: -17.500009536743164
    6. '<input' → logprob: -18.500009536743164
    7. '   ' → logprob: -19.000009536743164
    8. '	input' → logprob: -19.625009536743164
    9. 'int' → logprob: -20.875009536743164
    10. 'import' → logprob: -21.375009536743164

Token 1029: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0018486743792891502
    2. '()
' → logprob: -6.5018486976623535
    3. '().' → logprob: -8.001848220825195
    4. '())' → logprob: -13.251848220825195
    5. '(' → logprob: -13.376848220825195
    6. '()

' → logprob: -13.376848220825195
    7. '();' → logprob: -13.751848220825195
    8. '()?' → logprob: -13.876848220825195
    9. '<|end|>' → logprob: -14.251848220825195
    10. '()\' → logprob: -14.376848220825195

Token 1030: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023437170311808586
    2. '           ' → logprob: -3.773437261581421
    3. '<|end|>' → logprob: -8.8984375
    4. '   ' → logprob: -11.1484375
    5. ' if' → logprob: -11.6484375
    6. ',' → logprob: -12.1484375
    7. '
' → logprob: -12.2734375
    8. '<|end|>' → logprob: -12.3984375
    9. '               ' → logprob: -13.0234375
    10. '        
' → logprob: -13.1484375

Token 1031: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6747128963470459
    2. 'if' (adapté à ' if') → logprob: -1.424712896347046
    3. 'n' → logprob: -1.924712896347046
    4. 'N' → logprob: -2.424712896347046
    5. ' if' → logprob: -5.674713134765625
    6. 'try' → logprob: -5.674713134765625
    7. 'R' → logprob: -6.049713134765625
    8. 'P' → logprob: -6.674713134765625
    9. 'p' → logprob: -6.674713134765625
    10. 'A' → logprob: -7.174713134765625

Token 1032: ' not' (ID: 625)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.023328403010964394
    2. ' line' → logprob: -3.7733283042907715
    3. ' not' → logprob: -10.02332878112793
    4. 'not' → logprob: -10.89832878112793
    5. '   ' → logprob: -11.64832878112793
    6. ''' → logprob: -12.89832878112793
    7. '#line' → logprob: -13.02332878112793
    8. ' ' → logprob: -13.14832878112793
    9. '	line' → logprob: -13.64832878112793
    10. '
' → logprob: -13.89832878112793

Token 1033: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.005237906239926815
    2. ' line' → logprob: -5.255238056182861
    3. '(line' → logprob: -12.880237579345703
    4. '#line' → logprob: -14.505237579345703
    5. '	line' → logprob: -14.630237579345703
    6. 'int' → logprob: -16.130237579345703
    7. '
' → logprob: -16.255237579345703
    8. '[line' → logprob: -16.630237579345703
    9. 'len' → logprob: -17.005237579345703
    10. 'ine' → logprob: -17.255237579345703

Token 1034: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5762338638305664
    2. ':' → logprob: -1.4512338638305664
    3. '.strip' → logprob: -1.7012338638305664
    4. ' or' → logprob: -4.576233863830566
    5. '):
' → logprob: -5.576233863830566
    6. '.' → logprob: -6.576233863830566
    7. '=' → logprob: -6.576233863830566
    8. '.split' → logprob: -6.701233863830566
    9. ')' → logprob: -6.951233863830566
    10. '.startswith' → logprob: -7.076233863830566

Token 1035: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.041025277227163315
    2. '       ' → logprob: -3.291025161743164
    3. ':
' → logprob: -6.166025161743164
    4. ':' → logprob: -8.166025161743164
    5. '   ' → logprob: -8.291025161743164
    6. '               ' → logprob: -9.666025161743164
    7. ' or' → logprob: -9.916025161743164
    8. ' =' → logprob: -10.166025161743164
    9. '.strip' → logprob: -10.291025161743164
    10. '():
' → logprob: -10.541025161743164

Token 1036: ' return' (ID: 622)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.2881387174129486
    2. 'break' → logprob: -1.538138747215271
    3. '           ' → logprob: -3.5381386280059814
    4. '       ' → logprob: -5.1631388664245605
    5. 'return' (adapté à ' return') → logprob: -7.6631388664245605
    6. '	break' → logprob: -9.163138389587402
    7. ' return' → logprob: -9.288138389587402
    8. '   ' → logprob: -10.413138389587402
    9. '               ' → logprob: -10.538138389587402
    10. '_break' → logprob: -10.913138389587402

Token 1037: ' None' (ID: 4662)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4913595914840698
    2. '       ' → logprob: -1.4913595914840698
    3. ' n' → logprob: -2.2413597106933594
    4. 'r' → logprob: -4.241359710693359
    5. ' parts' → logprob: -4.241359710693359
    6. 'parts' → logprob: -4.366359710693359
    7. 'tokens' → logprob: -4.741359710693359
    8. ' break' → logprob: -6.616359710693359
    9. 'break' → logprob: -6.616359710693359
    10. 'try' → logprob: -7.366359710693359

Token 1038: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00038479414070025086
    2. ',' → logprob: -8.625384330749512
    3. '   ' → logprob: -9.250384330749512
    4. '
' → logprob: -10.250384330749512
    5. '           ' → logprob: -10.750384330749512
    6. '        
' → logprob: -11.250384330749512
    7. ' if' → logprob: -12.250384330749512
    8. '      ' → logprob: -12.500384330749512
    9. 'try' → logprob: -13.000384330749512
    10. ' s' → logprob: -13.000384330749512

Token 1039: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00036263695801608264
    2. '   ' → logprob: -8.375362396240234
    3. ',' → logprob: -9.875362396240234
    4. '           ' → logprob: -10.125362396240234
    5. '```' → logprob: -11.375362396240234
    6. '
' → logprob: -11.875362396240234
    7. '        
' → logprob: -12.500362396240234
    8. ' if' → logprob: -13.250362396240234
    9. 'try' → logprob: -13.250362396240234
    10. '      ' → logprob: -13.250362396240234

Token 1040: ' p' (ID: 275)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1922900527715683
    2. 'n' → logprob: -1.8172900676727295
    3. ' n' → logprob: -5.06728982925415
    4. 'try' → logprob: -5.69228982925415
    5. 'N' → logprob: -6.81728982925415
    6. 'parts' → logprob: -7.69228982925415
    7. '   ' → logprob: -8.192290306091309
    8. '
' → logprob: -8.817290306091309
    9. ' parts' → logprob: -8.942290306091309
    10. 'A' → logprob: -8.942290306091309

Token 1041: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025119276251643896
    2. ' ,' → logprob: -7.752511978149414
    3. '_,' → logprob: -7.752511978149414
    4. ',q' → logprob: -8.002511978149414
    5. ' =' → logprob: -8.127511978149414
    6. ',Q' → logprob: -8.502511978149414
    7. 'r' → logprob: -8.877511978149414
    8. '_line' → logprob: -9.377511978149414
    9. '_len' → logprob: -9.752511978149414
    10. '=' → logprob: -10.002511978149414

Token 1042: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00193149340339005
    2. ' q' → logprob: -6.251931667327881
    3. ',q' → logprob: -13.251931190490723
    4. 'Q' → logprob: -14.376931190490723
    5. ' ' → logprob: -15.626931190490723
    6. ',' → logprob: -16.12693214416504
    7. 'c' → logprob: -16.87693214416504
    8. '_q' → logprob: -17.37693214416504
    9. '
' → logprob: -17.62693214416504
    10. '  ' → logprob: -17.87693214416504

Token 1043: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20146244764328003
    2. ' =' → logprob: -1.7014625072479248
    3. ',' → logprob: -9.951462745666504
    4. '=line' → logprob: -14.326462745666504
    5. '=input' → logprob: -14.701462745666504
    6. ')' → logprob: -15.201462745666504
    7. '=int' → logprob: -16.826461791992188
    8. ')=' → logprob: -17.701461791992188
    9. '<|end|>' → logprob: -17.951461791992188
    10. ' ' → logprob: -18.076461791992188

Token 1044: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6932106614112854
    2. ' map' → logprob: -0.6932106614112854
    3. 'line' → logprob: -10.81821060180664
    4. ' line' → logprob: -10.81821060180664
    5. '[' → logprob: -10.94321060180664
    6. '(map' → logprob: -12.44321060180664
    7. '[line' → logprob: -14.06821060180664
    8. 'list' → logprob: -14.94321060180664
    9. ' [' → logprob: -15.31821060180664
    10. '	map' → logprob: -15.56821060180664

Token 1045: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0069939615204930305
    2. 'int' → logprob: -5.006993770599365
    3. '(str' → logprob: -8.256994247436523
    4. 'str' → logprob: -11.256994247436523
    5. 'input' → logprob: -13.131994247436523
    6. '[int' → logprob: -13.131994247436523
    7. '(input' → logprob: -14.131994247436523
    8. '(' → logprob: -14.381994247436523
    9. '<int' → logprob: -14.631994247436523
    10. '=int' → logprob: -16.131994247436523

Token 1046: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0005072805215604603
    2. '(' → logprob: -7.750507354736328
    3. '(input' → logprob: -10.500507354736328
    4. 'line' → logprob: -11.125507354736328
    5. '[line' → logprob: -11.250507354736328
    6. '=line' → logprob: -11.750507354736328
    7. '(
' → logprob: -13.000507354736328
    8. '#line' → logprob: -13.125507354736328
    9. ',line' → logprob: -13.375507354736328
    10. '(p' → logprob: -13.500507354736328

Token 1047: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.003275159979239106
    2. 'input' → logprob: -5.753275394439697
    3. ' line' → logprob: -9.253274917602539
    4. '(line' → logprob: -13.753274917602539
    5. ' input' → logprob: -14.878274917602539
    6. '           ' → logprob: -16.00327491760254
    7. '[line' → logprob: -17.50327491760254
    8. '   ' → logprob: -17.75327491760254
    9. '=line' → logprob: -17.87827491760254
    10. '       ' → logprob: -18.87827491760254

Token 1048: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004900231026113033
    2. '.split' → logprob: -5.3799004554748535
    3. '.strip' → logprob: -8.629899978637695
    4. '.' → logprob: -10.004899978637695
    5. '()' → logprob: -10.254899978637695
    6. '.readline' → logprob: -12.004899978637695
    7. '()[' → logprob: -12.379899978637695
    8. '   ' → logprob: -13.129899978637695
    9. '()
' → logprob: -13.254899978637695
    10. '[' → logprob: -13.879899978637695

Token 1049: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009080125950276852
    2. '()' → logprob: -4.759079933166504
    3. '())
' → logprob: -7.759079933166504
    4. '('' → logprob: -10.509079933166504
    5. ')' → logprob: -12.134079933166504
    6. '()
' → logprob: -12.509079933166504
    7. '())

' → logprob: -14.134079933166504
    8. '(' → logprob: -14.134079933166504
    9. '()]' → logprob: -15.009079933166504
    10. '(','' → logprob: -16.13408088684082

Token 1050: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024287392443511635
    2. 'if' → logprob: -8.500243186950684
    3. '
' → logprob: -11.250243186950684
    4. '   ' → logprob: -11.500243186950684
    5. ' if' → logprob: -11.875243186950684
    6. '           ' → logprob: -12.750243186950684
    7. '<|end|>' → logprob: -13.125243186950684
    8. '```' → logprob: -13.750243186950684
    9. '        
' → logprob: -14.250243186950684
    10. '	' → logprob: -15.000243186950684

Token 1051: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02344590611755848
    2. '       ' → logprob: -3.7734458446502686
    3. ' if' → logprob: -8.523446083068848
    4. '   ' → logprob: -14.648446083068848
    5. '```' → logprob: -14.898446083068848
    6. '	if' → logprob: -15.023446083068848
    7. 'If' → logprob: -15.523446083068848
    8. '           ' → logprob: -16.02344512939453
    9. '
' → logprob: -16.02344512939453
    10. 'import' → logprob: -16.39844512939453

Token 1052: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.5048530030981055e-06
    2. ' p' → logprob: -13.500001907348633
    3. '(p' → logprob: -17.125001907348633
    4. '       ' → logprob: -19.500001907348633
    5. '   ' → logprob: -20.375001907348633
    6. '
' → logprob: -21.000001907348633
    7. '           ' → logprob: -21.625001907348633
    8. 'P' → logprob: -22.375001907348633
    9. '_p' → logprob: -23.375001907348633
    10. '[p' → logprob: -23.750001907348633

Token 1053: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4740806519985199
    2. ' ==' → logprob: -0.9740806818008423
    3. ')==' → logprob: -13.974081039428711
    4. '<=' → logprob: -14.349081039428711
    5. '==
' → logprob: -14.349081039428711
    6. ']==' → logprob: -15.349081039428711
    7. '=' → logprob: -15.349081039428711
    8. '===' → logprob: -15.599081039428711
    9. '()==' → logprob: -15.724081039428711
    10. '   ' → logprob: -15.724081039428711

Token 1054: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. 'q' → logprob: -17.125001907348633
    4. '
' → logprob: -19.500001907348633
    5. '   ' → logprob: -21.250001907348633
    6. '۰' → logprob: -22.000001907348633
    7. ' q' → logprob: -22.375001907348633
    8. '```' → logprob: -22.500001907348633
    9. '     ' → logprob: -22.750001907348633
    10. '#' → logprob: -22.875001907348633

Token 1055: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. 'q' → logprob: -14.250000953674316
    3. ' ' → logprob: -14.875000953674316
    4. '
' → logprob: -18.375001907348633
    5. '۰' → logprob: -20.000001907348633
    6. 'o' → logprob: -20.625001907348633
    7. '０' → logprob: -21.500001907348633
    8. '```' → logprob: -21.875001907348633
    9. '   ' → logprob: -22.000001907348633
    10. ' q' → logprob: -22.000001907348633

Token 1056: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10020947456359863
    2. 'and' → logprob: -2.3502094745635986
    3. ' ' → logprob: -14.35020923614502
    4. '	and' → logprob: -14.60020923614502
    5. '   ' → logprob: -14.72520923614502
    6. '       ' → logprob: -15.10020923614502
    7. '           ' → logprob: -15.35020923614502
    8. '0' → logprob: -15.72520923614502
    9. ' ' → logprob: -16.100210189819336
    10. ' or' → logprob: -16.475210189819336

Token 1057: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0009115827269852161
    2. ' q' → logprob: -7.000911712646484
    3. '	q' → logprob: -18.250911712646484
    4. '   ' → logprob: -19.750911712646484
    5. '
' → logprob: -20.625911712646484
    6. '  ' → logprob: -21.250911712646484
    7. '       ' → logprob: -21.750911712646484
    8. ' ' → logprob: -22.125911712646484
    9. '           ' → logprob: -22.250911712646484
    10. '    ' → logprob: -22.375911712646484

Token 1058: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20141518115997314
    2. '==' → logprob: -1.7014151811599731
    3. ')==' → logprob: -14.076415061950684
    4. '==
' → logprob: -14.826415061950684
    5. ' ' → logprob: -14.951415061950684
    6. '=' → logprob: -15.701415061950684
    7. ']==' → logprob: -16.326416015625
    8. ' ==
' → logprob: -16.576416015625
    9. ' ' → logprob: -16.951416015625
    10. '()==' → logprob: -17.201416015625

Token 1059: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -19.500009536743164
    4. '
' → logprob: -20.750009536743164
    5. '  ' → logprob: -21.625009536743164
    6. '```' → logprob: -22.375009536743164
    7. '۰' → logprob: -22.375009536743164
    8. '<|end|>' → logprob: -22.500009536743164
    9. '<|end|>' → logprob: -23.250009536743164
    10. '[' → logprob: -23.375009536743164

Token 1060: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '۰' → logprob: -19.375
    4. '<|end|>' → logprob: -19.75
    5. '
' → logprob: -20.25
    6. '=' → logprob: -20.9375
    7. '<|end|>' → logprob: -21.3125
    8. '০' → logprob: -21.5
    9. 'return' → logprob: -21.625
    10. 'p' → logprob: -21.8125

Token 1061: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5456165075302124
    2. '           ' → logprob: -1.2956165075302124
    3. ':' → logprob: -1.9206165075302124
    4. ':return' → logprob: -8.920616149902344
    5. '               ' → logprob: -9.920616149902344
    6. '       ' → logprob: -10.670616149902344
    7. '		' → logprob: -11.295616149902344
    8. '):
' → logprob: -11.420616149902344
    9. ',' → logprob: -11.670616149902344
    10. '          ' → logprob: -11.795616149902344

Token 1062: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032435471657663584
    2. ':' → logprob: -5.878243446350098
    3. ':
' → logprob: -8.253243446350098
    4. '		' → logprob: -9.753243446350098
    5. '       ' → logprob: -10.253243446350098
    6. '               ' → logprob: -10.503243446350098
    7. '                       ' → logprob: -11.753243446350098
    8. ':return' → logprob: -11.753243446350098
    9. '<|end|>' → logprob: -12.003243446350098
    10. ',' → logprob: -12.128243446350098

Token 1063: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08036031574010849
    2. 'break' → logprob: -2.5803604125976562
    3. '           ' → logprob: -6.830360412597656
    4. ' return' → logprob: -8.330360412597656
    5. ' break' → logprob: -9.080360412597656
    6. '               ' → logprob: -10.330360412597656
    7. '	break' → logprob: -14.455360412597656
    8. '
' → logprob: -14.830360412597656
    9. '	return' → logprob: -15.205360412597656
    10. ':return' → logprob: -16.455360412597656

Token 1064: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.48710671067237854
    2. ' None' → logprob: -2.1121068000793457
    3. '
' → logprob: -2.3621068000793457
    4. '(None' → logprob: -3.1121068000793457
    5. '(p' → logprob: -3.4871068000793457
    6. ' (' → logprob: -4.362106800079346
    7. '       ' → logprob: -4.362106800079346
    8. '(line' → logprob: -4.487106800079346
    9. '\n' → logprob: -4.487106800079346
    10. '[]' → logprob: -4.987106800079346

Token 1065: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000513952283654362
    2. '<|end|>' → logprob: -8.000514030456543
    3. '        
' → logprob: -9.375514030456543
    4. '
' → logprob: -9.750514030456543
    5. '   ' → logprob: -11.125514030456543
    6. '           ' → logprob: -12.500514030456543
    7. '  
' → logprob: -12.875514030456543
    8. 'return' → logprob: -13.000514030456543
    9. ',' → logprob: -13.125514030456543
    10. '<|end|>' → logprob: -13.250514030456543

Token 1066: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.493430894101039e-05
    2. '   ' → logprob: -10.500075340270996
    3. '
' → logprob: -10.625075340270996
    4. '<|end|>' → logprob: -11.500075340270996
    5. '        
' → logprob: -12.250075340270996
    6. 'def' → logprob: -12.500075340270996
    7. '           ' → logprob: -13.750075340270996
    8. 'return' → logprob: -14.250075340270996
    9. '```' → logprob: -14.375075340270996
    10. 'class' → logprob: -14.750075340270996

Token 1067: ' p' (ID: 275)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006943171378225088
    2. 'lines' → logprob: -5.006943225860596
    3. ' lines' → logprob: -9.506942749023438
    4. '   ' → logprob: -10.131942749023438
    5. 'return' → logprob: -10.381942749023438
    6. '(lines' → logprob: -10.881942749023438
    7. 'program' → logprob: -11.256942749023438
    8. '	lines' → logprob: -11.381942749023438
    9. 'yield' → logprob: -11.881942749023438
    10. '```' → logprob: -12.131942749023438

Token 1068: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.1505359709262848
    2. ',' → logprob: -2.025536060333252
    3. 'lines' → logprob: -5.525536060333252
    4. '<|end|>' → logprob: -6.775536060333252
    5. ',q' → logprob: -7.025536060333252
    6. '<|end|>' → logprob: -8.275535583496094
    7. ' lines' → logprob: -8.400535583496094
    8. '	lines' → logprob: -8.650535583496094
    9. ' ,' → logprob: -8.775535583496094
    10. '_,' → logprob: -8.775535583496094

Token 1069: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39928704500198364
    2. ' =' → logprob: -1.1492869853973389
    3. '.append' → logprob: -5.274287223815918
    4. ',' → logprob: -5.274287223815918
    5. '.' → logprob: -7.774287223815918
    6. '=[]' → logprob: -8.024287223815918
    7. '   ' → logprob: -8.149287223815918
    8. '       ' → logprob: -8.274287223815918
    9. '<|end|>' → logprob: -9.274287223815918
    10. '[]' → logprob: -9.399287223815918

Token 1070: ' []
' (ID: 8911)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.015953663736581802
    2. '[' → logprob: -4.515953540802002
    3. '[]
' → logprob: -5.515953540802002
    4. '[input' → logprob: -8.01595401763916
    5. '[int' → logprob: -8.26595401763916
    6. '[]' → logprob: -9.01595401763916
    7. '[i' → logprob: -10.89095401763916
    8. '[ind' → logprob: -11.26595401763916
    9. '[next' → logprob: -11.26595401763916
    10. '[item' → logprob: -11.51595401763916

Token 1071: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12775808572769165
    2. 'for' → logprob: -2.127758026123047
    3. '           ' → logprob: -7.627758026123047
    4. '   ' → logprob: -8.627758026123047
    5. ' for' → logprob: -8.752758026123047
    6. '	for' → logprob: -13.002758026123047
    7. '               ' → logprob: -13.752758026123047
    8. '
' → logprob: -13.877758026123047
    9. 'while' → logprob: -14.377758026123047
    10. '	' → logprob: -14.752758026123047

Token 1072: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.000365259445970878
    2. '       ' → logprob: -8.000365257263184
    3. ' for' → logprob: -10.500365257263184
    4. '   ' → logprob: -13.625365257263184
    5. '           ' → logprob: -14.750365257263184
    6. '	for' → logprob: -15.250365257263184
    7. 'while' → logprob: -15.250365257263184
    8. '
' → logprob: -15.625365257263184
    9. '```' → logprob: -19.2503662109375
    10. '               ' → logprob: -19.7503662109375

Token 1073: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0683535037969705e-05
    2. '_i' → logprob: -12.12501049041748
    3. '_p' → logprob: -13.00001049041748
    4. '_in' → logprob: -13.62501049041748
    5. '_range' → logprob: -13.62501049041748
    6. '_
' → logprob: -15.75001049041748
    7. '_j' → logprob: -16.625011444091797
    8. '_=' → logprob: -16.750011444091797
    9. '
' → logprob: -17.250011444091797
    10. ' _' → logprob: -17.750011444091797

Token 1074: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00026169343618676066
    2. 'in' → logprob: -8.250261306762695
    3. 'range' → logprob: -16.250261306762695
    4. 'i' → logprob: -16.625261306762695
    5. ' ' → logprob: -17.250261306762695
    6. '
' → logprob: -17.500261306762695
    7. 'p' → logprob: -18.250261306762695
    8. '0' → logprob: -18.375261306762695
    9. 'import' → logprob: -18.625261306762695
    10. 's' → logprob: -18.625261306762695

Token 1075: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.511406809295295e-06
    2. ' range' → logprob: -12.000006675720215
    3. '_range' → logprob: -15.375006675720215
    4. '
' → logprob: -17.7500057220459
    5. '_' → logprob: -18.5000057220459
    6. 'p' → logprob: -18.6250057220459
    7. '_p' → logprob: -19.6250057220459
    8. '(range' → logprob: -20.2500057220459
    9. '	range' → logprob: -20.7500057220459
    10. '[' → logprob: -21.3750057220459

Token 1076: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.313314952421933e-05
    2. ' p' → logprob: -10.250062942504883
    3. '(p' → logprob: -10.500062942504883
    4. '_p' → logprob: -16.500062942504883
    5. ')p' → logprob: -17.125062942504883
    6. '	p' → logprob: -17.250062942504883
    7. '<p' → logprob: -18.375062942504883
    8. ',p' → logprob: -18.625062942504883
    9. '0' → logprob: -19.125062942504883
    10. '[p' → logprob: -19.250062942504883

Token 1077: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.009057678282260895
    2. '       ' → logprob: -5.259057521820068
    3. '):' → logprob: -6.259057521820068
    4. '           ' → logprob: -6.759057521820068
    5. ':
' → logprob: -8.134057998657227
    6. '():
' → logprob: -8.384057998657227
    7. '_lines' → logprob: -9.884057998657227
    8. '):
' → logprob: -10.134057998657227
    9. '_line' → logprob: -10.259057998657227
    10. ':' → logprob: -10.634057998657227

Token 1078: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00023488728038500994
    2. '   ' → logprob: -8.875234603881836
    3. 'p' → logprob: -10.125234603881836
    4. '       ' → logprob: -11.375234603881836
    5. ' line' → logprob: -11.500234603881836
    6. 'line' → logprob: -11.875234603881836
    7. '```' → logprob: -12.125234603881836
    8. '	       ' → logprob: -13.000234603881836
    9. '#line' → logprob: -13.000234603881836
    10. '		' → logprob: -13.250234603881836

Token 1079: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -1.8550976164988242e-05
    2. 'line' → logprob: -11.125018119812012
    3. '           ' → logprob: -13.125018119812012
    4. ' p' → logprob: -13.750018119812012
    5. '       ' → logprob: -15.250018119812012
    6. '   ' → logprob: -15.250018119812012
    7. 'pl' → logprob: -15.875018119812012
    8. 'pline' → logprob: -17.125019073486328
    9. ' line' → logprob: -18.375019073486328
    10. '               ' → logprob: -18.750019073486328

Token 1080: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.06199502944946289
    2. '_line' → logprob: -2.811995029449463
    3. 'line' → logprob: -10.811994552612305
    4. 'lines' → logprob: -13.061994552612305
    5. '_l' → logprob: -13.061994552612305
    6. '_' → logprob: -13.436994552612305
    7. '_input' → logprob: -14.936994552612305
    8. '
' → logprob: -15.061994552612305
    9. '_lineno' → logprob: -15.561994552612305
    10. '_lin' → logprob: -15.686994552612305

Token 1081: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00044532763422466815
    2. '=' → logprob: -7.875445365905762
    3. 'append' → logprob: -10.375445365905762
    4. '.' → logprob: -11.250445365905762
    5. '           ' → logprob: -12.250445365905762
    6. '+=' → logprob: -12.500445365905762
    7. '=line' → logprob: -12.625445365905762
    8. ' =' → logprob: -12.875445365905762
    9. 'line' → logprob: -13.375445365905762
    10. '=input' → logprob: -13.500445365905762

Token 1082: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -3.054500666621607e-06
    2. ' input' → logprob: -12.75000286102295
    3. '(input' → logprob: -17.750003814697266
    4. '   ' → logprob: -20.000003814697266
    5. '<input' → logprob: -21.875003814697266
    6. '.input' → logprob: -22.000003814697266
    7. '
' → logprob: -22.000003814697266
    8. '	input' → logprob: -22.125003814697266
    9. '=input' → logprob: -22.500003814697266
    10. 'str' → logprob: -23.125003814697266

Token 1083: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.019132224842905998
    2. '().' → logprob: -4.269132137298584
    3. '()' → logprob: -5.894132137298584
    4. '())
' → logprob: -6.144132137298584
    5. ' ())' → logprob: -10.769132614135742
    6. ')' → logprob: -11.019132614135742
    7. '()
' → logprob: -11.269132614135742
    8. '())

' → logprob: -13.144132614135742
    9. '();)' → logprob: -14.019132614135742
    10. '())
' → logprob: -14.519132614135742

Token 1084: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.313314952421933e-05
    2. '
' → logprob: -10.375062942504883
    3. '   ' → logprob: -10.875062942504883
    4. '<|end|>' → logprob: -11.875062942504883
    5. '<|end|>' → logprob: -13.625062942504883
    6. '        
' → logprob: -13.625062942504883
    7. 'q' → logprob: -13.875062942504883
    8. '```' → logprob: -13.875062942504883
    9. '           ' → logprob: -14.375062942504883
    10. 'n' → logprob: -15.500062942504883

Token 1085: ' q' (ID: 2335)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5761834979057312
    2. 'q' (adapté à ' q') → logprob: -0.8261834979057312
    3. 'for' → logprob: -8.826183319091797
    4. ' q' → logprob: -9.951183319091797
    5. '   ' → logprob: -10.576183319091797
    6. '	q' → logprob: -10.951183319091797
    7. '_q' → logprob: -13.701183319091797
    8. '           ' → logprob: -13.701183319091797
    9. '	' → logprob: -13.826183319091797
    10. '        
' → logprob: -14.326183319091797

Token 1086: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -3.531315314830863e-06
    2. '_line' → logprob: -13.375003814697266
    3. 'q' → logprob: -14.500003814697266
    4. 'lines' → logprob: -14.625003814697266
    5. 's' → logprob: -15.375003814697266
    6. '_q' → logprob: -15.500003814697266
    7. '
' → logprob: -16.250003814697266
    8. '_LINES' → logprob: -16.375003814697266
    9. '_' → logprob: -16.500003814697266
    10. '=' → logprob: -17.000003814697266

Token 1087: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007909284322522581
    2. '.' → logprob: -8.1257905960083
    3. '=' → logprob: -8.2507905960083
    4. ' =' → logprob: -9.0007905960083
    5. 'append' → logprob: -10.0007905960083
    6. '       ' → logprob: -10.5007905960083
    7. '=[]
' → logprob: -10.8757905960083
    8. '           ' → logprob: -11.5007905960083
    9. '=[]' → logprob: -12.2507905960083
    10. '().' → logprob: -14.1257905960083

Token 1088: ' []
' (ID: 8911)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.10844185948371887
    2. '[]
' → logprob: -2.3584418296813965
    3. '[' → logprob: -4.8584418296813965
    4. '[q' → logprob: -9.108442306518555
    5. '[]' → logprob: -9.108442306518555
    6. '[p' → logprob: -9.608442306518555
    7. '[int' → logprob: -9.858442306518555
    8. '[
' → logprob: -10.858442306518555
    9. '[line' → logprob: -11.483442306518555
    10. '[str' → logprob: -11.858442306518555

Token 1089: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6949552893638611
    2. 'for' → logprob: -0.6949552893638611
    3. ' for' → logprob: -6.694955348968506
    4. '	' → logprob: -7.694955348968506
    5. '           ' → logprob: -9.569954872131348
    6. '	for' → logprob: -10.319954872131348
    7. '   ' → logprob: -11.944954872131348
    8. '               ' → logprob: -13.319954872131348
    9. '	   ' → logprob: -13.819954872131348
    10. '
' → logprob: -14.819954872131348

Token 1090: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001757696009008214
    2. '       ' → logprob: -8.750175476074219
    3. ' for' → logprob: -11.000175476074219
    4. '	for' → logprob: -14.500175476074219
    5. '	' → logprob: -17.87517547607422
    6. '   ' → logprob: -18.00017547607422
    7. '           ' → logprob: -18.62517547607422
    8. '
' → logprob: -19.87517547607422
    9. '_for' → logprob: -21.50017547607422
    10. ' ' → logprob: -21.75017547607422

Token 1091: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9361264946837764e-07
    2. ' _' → logprob: -16.125
    3. '_
' → logprob: -17.75
    4. '_in' → logprob: -19.25
    5. '_range' → logprob: -19.375
    6. '_=' → logprob: -19.75
    7. ' in' → logprob: -20.5
    8. '_

' → logprob: -20.875
    9. '_
' → logprob: -20.875
    10. '
' → logprob: -22.75

Token 1092: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00013357517309486866
    2. ' in' → logprob: -9.000133514404297
    3. 'in' → logprob: -11.625133514404297
    4. ' _' → logprob: -14.000133514404297
    5. ' range' → logprob: -15.750133514404297
    6. 'range' → logprob: -16.125133514404297
    7. '_range' → logprob: -16.375133514404297
    8. '_in' → logprob: -17.000133514404297
    9. '_
' → logprob: -18.500133514404297
    10. '_=' → logprob: -19.375133514404297

Token 1093: ' range' (ID: 3352)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3944236934185028
    2. 'range' → logprob: -1.1444237232208252
    3. ' range' → logprob: -4.894423484802246
    4. '_range' → logprob: -10.519423484802246
    5. ' in' → logprob: -11.769423484802246
    6. 'in' → logprob: -13.894423484802246
    7. '(range' → logprob: -15.894423484802246
    8. ' _' → logprob: -16.394424438476562
    9. '
' → logprob: -17.269424438476562
    10. '	range' → logprob: -17.269424438476562

Token 1094: '(q' (ID: 21479)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00028612653841264546
    2. '(q' → logprob: -8.250286102294922
    3. ' q' → logprob: -10.750286102294922
    4. '_q' → logprob: -12.625286102294922
    5. 'int' → logprob: -16.875286102294922
    6. '	q' → logprob: -17.375286102294922
    7. '_' → logprob: -18.000286102294922
    8. '(' → logprob: -18.125286102294922
    9. '
' → logprob: -18.250286102294922
    10. '[q' → logprob: -19.000286102294922

Token 1095: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03193441778421402
    2. '():
' → logprob: -3.7819344997406006
    3. '           ' → logprob: -5.0319342613220215
    4. '):' → logprob: -7.0319342613220215
    5. ':
' → logprob: -7.7819342613220215
    6. '       ' → logprob: -8.03193473815918
    7. '()):
' → logprob: -8.03193473815918
    8. ':' → logprob: -10.03193473815918
    9. '_lines' → logprob: -10.90693473815918
    10. '   ' → logprob: -10.90693473815918

Token 1096: '           ' (ID: 352)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6963332891464233
    2. '           ' → logprob: -0.6963332891464233
    3. '       ' → logprob: -6.321333408355713
    4. '   ' → logprob: -6.821333408355713
    5. '	q' → logprob: -9.071332931518555
    6. ' q' → logprob: -9.446332931518555
    7. '               ' → logprob: -9.946332931518555
    8. '[q' → logprob: -11.446332931518555
    9. '(q' → logprob: -11.946332931518555
    10. '	       ' → logprob: -12.071332931518555

Token 1097: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -6.749814019713085e-06
    2. '           ' → logprob: -12.000006675720215
    3. ' q' → logprob: -14.625006675720215
    4. '               ' → logprob: -17.37500762939453
    5. '   ' → logprob: -17.75000762939453
    6. '       ' → logprob: -18.25000762939453
    7. '	q' → logprob: -18.37500762939453
    8. '
' → logprob: -19.12500762939453
    9. 'ql' → logprob: -19.75000762939453
    10. 'input' → logprob: -20.37500762939453

Token 1098: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0005000127712264657
    2. 'lines' → logprob: -7.750500202178955
    3. 'Lines' → logprob: -10.250499725341797
    4. '.append' → logprob: -11.125499725341797
    5. '_LINES' → logprob: -12.125499725341797
    6. '+=' → logprob: -12.500499725341797
    7. '_line' → logprob: -13.250499725341797
    8. 'line' → logprob: -13.625499725341797
    9. '_' → logprob: -14.000499725341797
    10. '-lines' → logprob: -14.125499725341797

Token 1099: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00015347852604463696
    2. 'append' → logprob: -8.875153541564941
    3. '.' → logprob: -11.250153541564941
    4. '.Append' → logprob: -15.750153541564941
    5. '       ' → logprob: -16.000152587890625
    6. '           ' → logprob: -16.125152587890625
    7. '_append' → logprob: -16.375152587890625
    8. 'Append' → logprob: -16.875152587890625
    9. '+=' → logprob: -17.250152587890625
    10. 'appen' → logprob: -17.500152587890625

Token 1100: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00020389800192788243
    2. '(input' → logprob: -8.500204086303711
    3. ' input' → logprob: -14.750204086303711
    4. '<input' → logprob: -18.50020408630371
    5. '   ' → logprob: -19.25020408630371
    6. '=input' → logprob: -20.25020408630371
    7. '	input' → logprob: -21.50020408630371
    8. '
' → logprob: -21.62520408630371
    9. '       ' → logprob: -21.75020408630371
    10. ' ' → logprob: -22.25020408630371

Token 1101: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.024823488667607307
    2. '())
' → logprob: -3.7748234272003174
    3. '()' → logprob: -6.5248236656188965
    4. ')' → logprob: -9.149823188781738
    5. '())
' → logprob: -13.399823188781738
    6. '()
' → logprob: -14.024823188781738
    7. ' ())' → logprob: -14.274823188781738
    8. ')
' → logprob: -14.524823188781738
    9. '       ' → logprob: -15.399823188781738
    10. '())

' → logprob: -16.024824142456055

Token 1102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.816093228830141e-06
    2. '   ' → logprob: -12.87500286102295
    3. 'return' → logprob: -16.000001907348633
    4. '        
' → logprob: -16.625001907348633
    5. '
' → logprob: -17.625001907348633
    6. '<|end|>' → logprob: -17.875001907348633
    7. 'yield' → logprob: -18.000001907348633
    8. '           ' → logprob: -18.000001907348633
    9. '```' → logprob: -18.000001907348633
    10. ' return' → logprob: -18.375001907348633

Token 1103: ' yield' (ID: 14376)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1537044793367386
    2. 'return' → logprob: -2.1537044048309326
    3. 'yield' (adapté à ' yield') → logprob: -3.6537044048309326
    4. 'p' → logprob: -8.653704643249512
    5. ' yield' → logprob: -8.778704643249512
    6. '   ' → logprob: -9.028704643249512
    7. ' return' → logprob: -9.528704643249512
    8. '	yield' → logprob: -13.153704643249512
    9. ' p' → logprob: -13.778704643249512
    10. '```' → logprob: -14.528704643249512

Token 1104: ' p' (ID: 275)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.39087143540382385
    2. 'p' → logprob: -1.1408714056015015
    3. '(S' → logprob: -5.890871524810791
    4. ' (' → logprob: -7.390871524810791
    5. '({'' → logprob: -8.640871047973633
    6. ' p' → logprob: -9.140871047973633
    7. '(St' → logprob: -9.140871047973633
    8. '((' → logprob: -9.640871047973633
    9. 'Styl' → logprob: -10.265871047973633
    10. '   ' → logprob: -10.515871047973633

Token 1105: '_lines' (ID: 42980)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003109503537416458
    2. '_lines' → logprob: -6.128109455108643
    3. ',q' → logprob: -7.128109455108643
    4. 'q' → logprob: -9.8781099319458
    5. ' ,' → logprob: -10.5031099319458
    6. '_,' → logprob: -10.6281099319458
    7. 'lines' → logprob: -12.2531099319458
    8. ',p' → logprob: -13.1281099319458
    9. 'Lines' → logprob: -13.2531099319458
    10. '<|end|>' → logprob: -13.2531099319458

Token 1106: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007419795263558626
    2. ',' → logprob: -5.382419586181641
    3. '<|end|>' → logprob: -6.382419586181641
    4. ',q' → logprob: -7.132419586181641
    5. '<|end|>' → logprob: -8.38241958618164
    6. '   ' → logprob: -10.75741958618164
    7. 'q' → logprob: -11.25741958618164
    8. 'def' → logprob: -11.75741958618164
    9. ' ,' → logprob: -11.88241958618164
    10. '           ' → logprob: -12.25741958618164

Token 1107: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0019288709154352546
    2. ' q' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.126928329467773
    4. '       ' → logprob: -16.376928329467773
    5. '	q' → logprob: -16.751928329467773
    6. '    ' → logprob: -18.001928329467773
    7. ' ' → logprob: -18.126928329467773
    8. '_q' → logprob: -18.501928329467773
    9. '
' → logprob: -18.751928329467773
    10. '           ' → logprob: -19.001928329467773

Token 1108: '_lines' (ID: 42980)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1109: '


' (ID: 2499)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00032247265335172415
    2. '
' → logprob: -8.250322341918945
    3. 'for' → logprob: -10.000322341918945
    4. '```' → logprob: -11.625322341918945
    5. 'import' → logprob: -12.500322341918945
    6. 'while' → logprob: -13.625322341918945
    7. 'if' → logprob: -13.750322341918945
    8. '

' → logprob: -15.250322341918945
    9. 'class' → logprob: -15.500322341918945
    10. 'from' → logprob: -16.000322341918945

Token 1110: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003255907678976655
    2. 'for' → logprob: -5.753255844116211
    3. 'if' → logprob: -9.503255844116211
    4. '```' → logprob: -12.753255844116211
    5. '
' → logprob: -14.628255844116211
    6. 'import' → logprob: -15.878255844116211
    7. 'while' → logprob: -17.00325584411621
    8. 'class' → logprob: -18.00325584411621
    9. '``' → logprob: -19.00325584411621
    10. ' def' → logprob: -19.12825584411621

Token 1111: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.6312321753939614e-05
    2. 'def' → logprob: -10.250036239624023
    3. 'solve' → logprob: -14.750036239624023
    4. 'process' → logprob: -15.000036239624023
    5. 'run' → logprob: -15.625036239624023
    6. ' main' → logprob: -16.375036239624023
    7. '
' → logprob: -20.250036239624023
    8. 'solution' → logprob: -21.625036239624023
    9. 'handle' → logprob: -21.875036239624023
    10. '_main' → logprob: -21.875036239624023

Token 1112: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0007102862582542002
    2. '():
' → logprob: -7.250710487365723
    3. ' ():' → logprob: -15.375710487365723
    4. '():
' → logprob: -16.125709533691406
    5. '()' → logprob: -17.375709533691406
    6. '():

' → logprob: -17.875709533691406
    7. ':' → logprob: -18.875709533691406
    8. 'def' → logprob: -19.625709533691406
    9. '().' → logprob: -20.000709533691406
    10. '();' → logprob: -20.250709533691406

Token 1113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018509265035390854
    2. 'for' → logprob: -4.018509387969971
    3. 'while' → logprob: -8.643508911132812
    4. ' for' → logprob: -9.768508911132812
    5. 'def' → logprob: -9.893508911132812
    6. 'line' → logprob: -10.768508911132812
    7. 'data' → logprob: -10.768508911132812
    8. '```' → logprob: -11.518508911132812
    9. 'datasets' → logprob: -12.018508911132812
    10. 'lines' → logprob: -12.018508911132812

Token 1114: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20203688740730286
    2. '   ' → logprob: -2.5770368576049805
    3. 'data' → logprob: -3.4520368576049805
    4. 'dataset' → logprob: -3.4520368576049805
    5. 'while' (adapté à ' while') → logprob: -3.5770368576049805
    6. 'datasets' → logprob: -4.3270368576049805
    7. 'try' → logprob: -6.9520368576049805
    8. 'import' → logprob: -7.7020368576049805
    9. ' for' → logprob: -7.8270368576049805
    10. 'line' → logprob: -7.9520368576049805

Token 1115: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.06199973449110985
    2. ' True' → logprob: -2.811999797821045
    3. '(True' → logprob: -10.436999320983887
    4. '   ' → logprob: -13.186999320983887
    5. '1' → logprob: -14.561999320983887
    6. 'true' → logprob: -15.186999320983887
    7. '=True' → logprob: -17.062000274658203
    8. '
' → logprob: -17.187000274658203
    9. 'line' → logprob: -17.687000274658203
    10. ' ' → logprob: -17.937000274658203

Token 1116: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004683237988501787
    2. '   ' → logprob: -6.504683017730713
    3. ' line' → logprob: -6.754683017730713
    4. ',' → logprob: -7.504683017730713
    5. ':' → logprob: -7.879683017730713
    6. '(line' → logprob: -8.129683494567871
    7. '<|end|>' → logprob: -8.254683494567871
    8. 'line' → logprob: -8.754683494567871
    9. ':
' → logprob: -9.879683494567871
    10. '```' → logprob: -10.004683494567871

Token 1117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16649359464645386
    2. '   ' → logprob: -1.9164936542510986
    3. 'try' → logprob: -5.2914934158325195
    4. 'line' → logprob: -7.4164934158325195
    5. ' line' → logprob: -7.7914934158325195
    6. ' try' → logprob: -8.91649341583252
    7. '```' → logprob: -9.79149341583252
    8. '#line' → logprob: -12.66649341583252
    9. '           ' → logprob: -13.41649341583252
    10. '	line' → logprob: -13.91649341583252

Token 1118: ' dataset' (ID: 20830)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.7134669423103333
    2. 'dataset' (adapté à ' dataset') → logprob: -0.9634669423103333
    3. 'line' → logprob: -2.8384668827056885
    4. 'res' → logprob: -3.9634668827056885
    5. 'result' → logprob: -4.088467121124268
    6. '       ' → logprob: -4.588467121124268
    7. 'inputs' → logprob: -4.713467121124268
    8. 'pq' → logprob: -5.963467121124268
    9. 'inp' → logprob: -6.088467121124268
    10. 'input' → logprob: -6.213467121124268

Token 1119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2530774474143982
    2. '=' → logprob: -1.503077507019043
    3. '   ' → logprob: -8.253077507019043
    4. '=line' → logprob: -8.628077507019043
    5. '_line' → logprob: -8.753077507019043
    6. '_' → logprob: -9.378077507019043
    7. 'line' → logprob: -9.503077507019043
    8. '<|end|>' → logprob: -9.753077507019043
    9. ' ' → logprob: -10.253077507019043
    10. ':' → logprob: -10.503077507019043

Token 1120: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.2422359734773636
    2. ' next' → logprob: -1.7422360181808472
    3. 'read' → logprob: -3.2422358989715576
    4. ' read' → logprob: -6.992236137390137
    5. '   ' → logprob: -13.117236137390137
    6. '(next' → logprob: -13.492236137390137
    7. 'list' → logprob: -13.867236137390137
    8. '       ' → logprob: -15.742236137390137
    9. '
' → logprob: -15.992236137390137
    10. 'None' → logprob: -16.11723518371582

Token 1121: '(read' (ID: 45738)
  Prédit: '(read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.2019188553094864
    2. 'read' → logprob: -1.7019188404083252
    3. '(iter' → logprob: -7.951919078826904
    4. ' read' → logprob: -10.201918601989746
    5. '(dataset' → logprob: -10.326918601989746
    6. '(input' → logprob: -11.076918601989746
    7. '	read' → logprob: -11.326918601989746
    8. '(' → logprob: -11.451918601989746
    9. '_read' → logprob: -11.826918601989746
    10. 'dataset' → logprob: -12.076918601989746

Token 1122: '_dataset' (ID: 40568)
  Prédit: '_dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dataset' → logprob: -0.0017124245641753078
    2. '_' → logprob: -6.876712322235107
    3. '()' → logprob: -7.751712322235107
    4. 'dataset' → logprob: -8.626712799072266
    5. '()
' → logprob: -11.001712799072266
    6. 'Dataset' → logprob: -11.001712799072266
    7. '())' → logprob: -12.001712799072266
    8. '_data' → logprob: -12.126712799072266
    9. ')_' → logprob: -12.126712799072266
    10. '())
' → logprob: -12.251712799072266

Token 1123: '(),' (ID: 2547)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.17056524753570557
    2. '(),' → logprob: -1.9205652475357056
    3. '())
' → logprob: -5.170565128326416
    4. '()' → logprob: -5.420565128326416
    5. ')' → logprob: -8.795565605163574
    6. '()
' → logprob: -11.420565605163574
    7. ' ())' → logprob: -11.670565605163574
    8. ',' → logprob: -13.170565605163574
    9. '()),' → logprob: -13.295565605163574
    10. '())
' → logprob: -13.545565605163574

Token 1124: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00012451570364646614
    2. ' None' → logprob: -9.00012493133545
    3. '   ' → logprob: -14.25012493133545
    4. '(None' → logprob: -14.75012493133545
    5. '       ' → logprob: -18.250123977661133
    6. ')' → logprob: -18.625123977661133
    7. '[]' → logprob: -18.750123977661133
    8. ',None' → logprob: -19.125123977661133
    9. '_None' → logprob: -20.375123977661133
    10. '
' → logprob: -20.750123977661133

Token 1125: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5876039862632751
    2. ')' → logprob: -0.8376039862632751
    3. '       ' → logprob: -4.71260404586792
    4. '):
' → logprob: -5.96260404586792
    5. '   ' → logprob: -10.712603569030762
    6. '):' → logprob: -12.337603569030762
    7. ' )
' → logprob: -12.462603569030762
    8. ' )' → logprob: -12.837603569030762
    9. ')
' → logprob: -13.587603569030762
    10. ')`
' → logprob: -13.837603569030762

Token 1126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000885730201844126
    2. ' if' → logprob: -8.000885963439941
    3. '   ' → logprob: -8.125885963439941
    4. 'if' → logprob: -8.375885963439941
    5. '	' → logprob: -11.500885963439941
    6. '           ' → logprob: -11.750885963439941
    7. '	if' → logprob: -13.500885963439941
    8. '<|end|>' → logprob: -13.500885963439941
    9. ',' → logprob: -13.750885963439941
    10. '	   ' → logprob: -14.375885963439941

Token 1127: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03035408817231655
    2. 'if' (adapté à ' if') → logprob: -3.5303540229797363
    3. ' if' → logprob: -7.780354022979736
    4. '   ' → logprob: -8.655354499816895
    5. '           ' → logprob: -11.655354499816895
    6. '	if' → logprob: -13.905354499816895
    7. '	' → logprob: -14.155354499816895
    8. '
' → logprob: -14.405354499816895
    9. '	   ' → logprob: -15.405354499816895
    10. '               ' → logprob: -15.780354499816895

Token 1128: ' dataset' (ID: 20830)
  Prédit: 'dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dataset' → logprob: -0.038159456104040146
    2. ' dataset' → logprob: -3.2881593704223633
    3. '       ' → logprob: -9.288159370422363
    4. ' not' → logprob: -11.288159370422363
    5. 'not' → logprob: -11.413159370422363
    6. '   ' → logprob: -14.163159370422363
    7. '(dataset' → logprob: -14.663159370422363
    8. '_dataset' → logprob: -15.288159370422363
    9. ' ' → logprob: -16.03816032409668
    10. 'datasets' → logprob: -16.53816032409668

Token 1129: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00027444821898825467
    2. 'is' → logprob: -8.250274658203125
    3. '==' → logprob: -12.500274658203125
    4. ' ==' → logprob: -13.000274658203125
    5. '	is' → logprob: -13.125274658203125
    6. '   ' → logprob: -13.250274658203125
    7. '       ' → logprob: -13.625274658203125
    8. '<|end|>' → logprob: -14.375274658203125
    9. ' ' → logprob: -14.750274658203125
    10. ' ' → logprob: -15.625274658203125

Token 1130: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0015028368216007948
    2. ' None' → logprob: -6.501502990722656
    3. '   ' → logprob: -15.251502990722656
    4. '_None' → logprob: -15.751502990722656
    5. '=None' → logprob: -16.126502990722656
    6. '(None' → logprob: -16.876502990722656
    7. '       ' → logprob: -16.876502990722656
    8. '           ' → logprob: -17.501502990722656
    9. ',None' → logprob: -18.751502990722656
    10. '                   ' → logprob: -19.751502990722656

Token 1131: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15316365659236908
    2. ':' → logprob: -2.5281636714935303
    3. ':
' → logprob: -2.7781636714935303
    4. '       ' → logprob: -11.02816390991211
    5. ',' → logprob: -11.27816390991211
    6. '		' → logprob: -12.27816390991211
    7. '          ' → logprob: -12.40316390991211
    8. '               ' → logprob: -12.90316390991211
    9. '():
' → logprob: -12.90316390991211
    10. '):
' → logprob: -13.65316390991211

Token 1132: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.981667537620524e-06
    2. '               ' → logprob: -14.375001907348633
    3. '       ' → logprob: -14.500001907348633
    4. '		' → logprob: -14.875001907348633
    5. '          ' → logprob: -15.875001907348633
    6. '	       ' → logprob: -16.125001907348633
    7. '                   ' → logprob: -16.625001907348633
    8. '   ' → logprob: -17.375001907348633
    9. 'break' → logprob: -17.625001907348633
    10. '         ' → logprob: -17.750001907348633

Token 1133: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017926320433616638
    2. 'break' (adapté à ' break') → logprob: -6.3767924308776855
    3. '               ' → logprob: -9.501792907714844
    4. '       ' → logprob: -11.876792907714844
    5. '		' → logprob: -12.501792907714844
    6. 'return' → logprob: -13.501792907714844
    7. ' break' → logprob: -13.501792907714844
    8. '	break' → logprob: -14.126792907714844
    9. '	       ' → logprob: -14.626792907714844
    10. '   ' → logprob: -14.751792907714844

Token 1134: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010563877876847982
    2. '        
' → logprob: -7.50105619430542
    3. '<|end|>' → logprob: -8.626056671142578
    4. '   ' → logprob: -8.751056671142578
    5. '
' → logprob: -8.876056671142578
    6. ',' → logprob: -11.251056671142578
    7. '    
' → logprob: -12.876056671142578
    8. '           ' → logprob: -13.126056671142578
    9. '<|end|>' → logprob: -13.251056671142578
    10. '```' → logprob: -13.501056671142578

Token 1135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009686299599707127
    2. '   ' → logprob: -7.0009684562683105
    3. 'p' → logprob: -10.000968933105469
    4. '        
' → logprob: -12.375968933105469
    5. '```' → logprob: -12.875968933105469
    6. ',' → logprob: -13.125968933105469
    7. '           ' → logprob: -13.875968933105469
    8. '(p' → logprob: -14.250968933105469
    9. '
' → logprob: -15.250968933105469
    10. ' ' → logprob: -15.500968933105469

Token 1136: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.0031802060548216105
    2. '       ' → logprob: -5.753180027008057
    3. '   ' → logprob: -13.628180503845215
    4. ' p' → logprob: -13.753180503845215
    5. '(p' → logprob: -15.503180503845215
    6. '```' → logprob: -17.2531795501709
    7. '	p' → logprob: -18.7531795501709
    8. '           ' → logprob: -18.7531795501709
    9. '[p' → logprob: -18.7531795501709
    10. '_p' → logprob: -18.8781795501709

Token 1137: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.16023732721805573
    2. '_program' → logprob: -1.9102373123168945
    3. '_' → logprob: -12.535237312316895
    4. ',' → logprob: -12.660237312316895
    5. 'program' → logprob: -12.660237312316895
    6. '_,' → logprob: -14.410237312316895
    7. '   ' → logprob: -14.785237312316895
    8. '_code' → logprob: -15.285237312316895
    9. '_line' → logprob: -15.535237312316895
    10. 'Lines' → logprob: -15.660237312316895

Token 1138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015455135144293308
    2. ',q' → logprob: -8.875154495239258
    3. '       ' → logprob: -12.000154495239258
    4. ' ,' → logprob: -12.625154495239258
    5. '=' → logprob: -12.750154495239258
    6. ',
' → logprob: -14.625154495239258
    7. '_,' → logprob: -14.750154495239258
    8. ',p' → logprob: -14.750154495239258
    9. ',Q' → logprob: -14.875154495239258
    10. ' =' → logprob: -15.375154495239258

Token 1139: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.061968132853507996
    2. ' q' → logprob: -2.8119680881500244
    3. '       ' → logprob: -14.686967849731445
    4. '   ' → logprob: -17.561967849731445
    5. '	q' → logprob: -17.686967849731445
    6. ' ' → logprob: -18.186967849731445
    7. '_q' → logprob: -18.436967849731445
    8. '           ' → logprob: -18.561967849731445
    9. '    ' → logprob: -19.436967849731445
    10. '        ' → logprob: -19.561967849731445

Token 1140: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -3.128163257315464e-07
    2. '_program' → logprob: -15.875
    3. '_' → logprob: -16.625
    4. '_line' → logprob: -17.0
    5. '```' → logprob: -17.75
    6. ')_' → logprob: -18.75
    7. '_LINES' → logprob: -18.875
    8. ' _' → logprob: -18.875
    9. '_codes' → logprob: -19.0
    10. ''_' → logprob: -19.0

Token 1141: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002025708556175232
    2. '<|end|>' → logprob: -6.752025604248047
    3. '        
' → logprob: -7.627025604248047
    4. '
' → logprob: -8.252025604248047
    5. ' =' → logprob: -10.377025604248047
    6. ',' → logprob: -10.377025604248047
    7. '<|end|>' → logprob: -10.877025604248047
    8. ')' → logprob: -11.627025604248047
    9. '=' → logprob: -12.377025604248047
    10. '   ' → logprob: -13.502025604248047

Token 1142: ' dataset' (ID: 20830)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.14776009321212769
    2. ' p' → logprob: -2.6477601528167725
    3. 'Styl' → logprob: -2.7727601528167725
    4. ' Stylish' → logprob: -6.022759914398193
    5. 'St' → logprob: -7.147759914398193
    6. 'Styled' → logprob: -9.022760391235352
    7. '(p' → logprob: -9.147760391235352
    8. ' Styl' → logprob: -9.272760391235352
    9. 'Beautiful' → logprob: -9.522760391235352
    10. '       ' → logprob: -9.647760391235352

Token 1143: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.692145012086257e-05
    2. '
' → logprob: -10.750046730041504
    3. '        
' → logprob: -11.125046730041504
    4. '   ' → logprob: -11.875046730041504
    5. 'p' → logprob: -13.500046730041504
    6. ',' → logprob: -14.125046730041504
    7. '```' → logprob: -14.375046730041504
    8. ' p' → logprob: -14.500046730041504
    9. '    
' → logprob: -16.00004768371582
    10. '           ' → logprob: -16.25004768371582

Token 1144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015288250870071352
    2. '   ' → logprob: -9.000152587890625
    3. ' p' → logprob: -11.375152587890625
    4. 'p' → logprob: -11.500152587890625
    5. '```' → logprob: -12.125152587890625
    6. '
' → logprob: -13.625152587890625
    7. '        
' → logprob: -14.375152587890625
    8. ',' → logprob: -15.000152587890625
    9. '           ' → logprob: -16.375152587890625
    10. ' ' → logprob: -17.125152587890625

Token 1145: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.12696193158626556
    2. '       ' → logprob: -2.1269619464874268
    3. '   ' → logprob: -10.626961708068848
    4. ' p' → logprob: -11.751961708068848
    5. '```' → logprob: -13.501961708068848
    6. '
' → logprob: -16.501962661743164
    7. '	p' → logprob: -16.501962661743164
    8. '      ' → logprob: -17.001962661743164
    9. '           ' → logprob: -17.126962661743164
    10. '        
' → logprob: -17.251962661743164

Token 1146: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -8.101369894575328e-05
    2. '_p' → logprob: -10.250081062316895
    3. '_lines' → logprob: -10.500081062316895
    4. '_prog' → logprob: -11.750081062316895
    5. 'p' → logprob: -12.375081062316895
    6. 'program' → logprob: -12.625081062316895
    7. 'rogram' → logprob: -13.625081062316895
    8. '_' → logprob: -14.500081062316895
    9. '_pro' → logprob: -15.750081062316895
    10. '_PROGRAM' → logprob: -16.125080108642578

Token 1147: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750604182481766
    2. '=' → logprob: -3.5297505855560303
    3. ',' → logprob: -17.40475082397461
    4. ' =
' → logprob: -17.90475082397461
    5. ' ' → logprob: -17.90475082397461
    6. '```' → logprob: -18.02975082397461
    7. 'p' → logprob: -18.15475082397461
    8. '   ' → logprob: -18.15475082397461
    9. '=
' → logprob: -18.27975082397461
    10. '
' → logprob: -18.40475082397461

Token 1148: ' Stylish' (ID: 144990)
  Prédit: 'Styl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Styl' → logprob: -0.00010330478107789531
    2. ' Stylish' → logprob: -9.250102996826172
    3. 'Sty' → logprob: -12.250102996826172
    4. 'St' → logprob: -13.750102996826172
    5. 'Styled' → logprob: -13.750102996826172
    6. 'Beautiful' → logprob: -16.375102996826172
    7. 'Smart' → logprob: -17.750102996826172
    8. 'styl' → logprob: -17.875102996826172
    9. 'Style' → logprob: -18.250102996826172
    10. ' Styl' → logprob: -18.625102996826172

Token 1149: 'Program' (ID: 13587)
  Prédit: 'Program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Program' → logprob: -1.9361264946837764e-07
    2. 'program' → logprob: -17.125
    3. '_program' → logprob: -17.25
    4. ' Program' → logprob: -17.375
    5. 'Programming' → logprob: -17.625
    6. 'Programm' → logprob: -18.75
    7. ' program' → logprob: -20.875
    8. 'PROGRAM' → logprob: -20.875
    9. 'Programs' → logprob: -21.125
    10. 'Programme' → logprob: -21.5

Token 1150: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.9361264946837764e-07
    2. 'p' → logprob: -16.625
    3. '       ' → logprob: -17.0
    4. '(' → logprob: -17.75
    5. ' (' → logprob: -18.375
    6. ' p' → logprob: -19.75
    7. '(
' → logprob: -20.5
    8. '(P' → logprob: -20.625
    9. '[p' → logprob: -21.125
    10. '   ' → logprob: -21.25

Token 1151: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.19763748347759247
    2. '(p' → logprob: -1.8226374387741089
    3. 'p' → logprob: -4.072637557983398
    4. 'lines' → logprob: -8.822637557983398
    5. ')' → logprob: -9.072637557983398
    6. 'Lines' → logprob: -9.197637557983398
    7. '```' → logprob: -9.947637557983398
    8. '   ' → logprob: -10.197637557983398
    9. ' p' → logprob: -10.322637557983398
    10. '_p' → logprob: -10.322637557983398

Token 1152: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6473758816719055
    2. ')
' → logprob: -1.0223758220672607
    3. ')' → logprob: -2.1473758220672607
    4. '<|end|>' → logprob: -10.14737606048584
    5. '<|end|>' → logprob: -12.89737606048584
    6. ',' → logprob: -13.02237606048584
    7. '   ' → logprob: -13.02237606048584
    8. ')
' → logprob: -13.14737606048584
    9. '),' → logprob: -14.14737606048584
    10. '
' → logprob: -14.64737606048584

Token 1153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031869823578745127
    2. 'q' → logprob: -5.75318717956543
    3. ' q' → logprob: -11.87818717956543
    4. '```' → logprob: -13.50318717956543
    5. '   ' → logprob: -14.37818717956543
    6. '
' → logprob: -15.37818717956543
    7. '           ' → logprob: -16.87818717956543
    8. '      ' → logprob: -17.25318717956543
    9. ' ' → logprob: -17.62818717956543
    10. 'Q' → logprob: -17.62818717956543

Token 1154: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.00010771531378850341
    2. '       ' → logprob: -9.500107765197754
    3. ' q' → logprob: -10.375107765197754
    4. 'valid' → logprob: -13.500107765197754
    5. '   ' → logprob: -16.375106811523438
    6. 'finder' → logprob: -17.500106811523438
    7. 'p' → logprob: -17.625106811523438
    8. '	q' → logprob: -18.125106811523438
    9. '           ' → logprob: -19.125106811523438
    10. 's' → logprob: -19.250106811523438

Token 1155: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -1.1472419600977446e-06
    2. 'program' → logprob: -14.625000953674316
    3. '_lines' → logprob: -14.875000953674316
    4. 'Program' → logprob: -15.500000953674316
    5. '_' → logprob: -16.875001907348633
    6. '```' → logprob: -17.875001907348633
    7. ' _' → logprob: -18.500001907348633
    8. '   ' → logprob: -19.000001907348633
    9. '_pro' → logprob: -19.125001907348633
    10. '_PROGRAM' → logprob: -19.125001907348633

Token 1156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889077812433243
    2. '=' → logprob: -2.578890800476074
    3. '       ' → logprob: -15.453890800476074
    4. '=
' → logprob: -15.578890800476074
    5. '   ' → logprob: -15.703890800476074
    6. '<|end|>' → logprob: -15.703890800476074
    7. ' =
' → logprob: -15.828890800476074
    8. ' ' → logprob: -16.328889846801758
    9. ')' → logprob: -16.328889846801758
    10. '        ' → logprob: -17.453889846801758

Token 1157: ' Stylish' (ID: 144990)
  Prédit: 'Styl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Styl' → logprob: -4.008129963040119e-06
    2. 'St' → logprob: -13.125003814697266
    3. 'Sty' → logprob: -13.500003814697266
    4. ' Stylish' → logprob: -14.500003814697266
    5. 'Styled' → logprob: -16.750003814697266
    6. 'Smart' → logprob: -18.500003814697266
    7. 'styl' → logprob: -19.000003814697266
    8. 'Beautiful' → logprob: -20.125003814697266
    9. 'Style' → logprob: -20.750003814697266
    10. '```' → logprob: -20.875003814697266

Token 1158: 'Program' (ID: 13587)
  Prédit: 'Program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Program' → logprob: -4.320199877838604e-07
    2. 'program' → logprob: -15.5
    3. '_program' → logprob: -16.125
    4. 'Programs' → logprob: -17.375
    5. 'Programming' → logprob: -18.0
    6. '(' → logprob: -18.125
    7. ' Program' → logprob: -18.125
    8. 'Programm' → logprob: -18.25
    9. 'Style' → logprob: -18.375
    10. '(q' → logprob: -18.375

Token 1159: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -7.493430894101039e-05
    2. 'q' → logprob: -9.500075340270996
    3. ' q' → logprob: -17.75007438659668
    4. '(' → logprob: -17.75007438659668
    5. '[q' → logprob: -17.75007438659668
    6. ' (' → logprob: -18.25007438659668
    7. '	q' → logprob: -18.37507438659668
    8. '       ' → logprob: -18.62507438659668
    9. '?q' → logprob: -20.62507438659668
    10. '(
' → logprob: -21.12507438659668

Token 1160: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: 0.0
    2. 'lines' → logprob: -17.625
    3. '_LINES' → logprob: -18.375
    4. '(lines' → logprob: -18.5
    5. 'Lines' → logprob: -19.25
    6. '_l' → logprob: -19.75
    7. '_' → logprob: -20.0
    8. '(q' → logprob: -20.0
    9. '_layers' → logprob: -20.75
    10. '_line' → logprob: -20.875

Token 1161: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5810539126396179
    2. ')' → logprob: -0.8310539126396179
    3. '<|end|>' → logprob: -5.331053733825684
    4. ')
' → logprob: -8.831053733825684
    5. '<|end|>' → logprob: -9.831053733825684
    6. ',' → logprob: -11.081053733825684
    7. '   ' → logprob: -11.331053733825684
    8. '
' → logprob: -11.581053733825684
    9. '        
' → logprob: -12.206053733825684
    10. ').' → logprob: -12.831053733825684

Token 1162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014029678422957659
    2. 'finder' → logprob: -7.001402854919434
    3. 'master' → logprob: -8.001402854919434
    4. '   ' → logprob: -9.626402854919434
    5. ' finder' → logprob: -10.001402854919434
    6. ' master' → logprob: -11.251402854919434
    7. 'sm' → logprob: -11.376402854919434
    8. 'ms' → logprob: -12.126402854919434
    9. '
' → logprob: -13.001402854919434
    10. '```' → logprob: -13.001402854919434

Token 1163: ' master' (ID: 9942)
  Prédit: 'finder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finder' → logprob: -0.30771180987358093
    2. 'master' (adapté à ' master') → logprob: -1.4327118396759033
    3. '       ' → logprob: -3.6827118396759033
    4. 'sm' → logprob: -8.057711601257324
    5. ' finder' → logprob: -8.182711601257324
    6. ' master' → logprob: -8.557711601257324
    7. 'style' → logprob: -9.557711601257324
    8. 'f' → logprob: -10.182711601257324
    9. 'styl' → logprob: -10.807711601257324
    10. 'sty' → logprob: -10.807711601257324

Token 1164: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.013258934020996094
    2. ' =' → logprob: -4.388258934020996
    3. '=' → logprob: -7.888258934020996
    4. 'Finder' → logprob: -8.013258934020996
    5. 'finder' → logprob: -11.138258934020996
    6. 'F' → logprob: -11.388258934020996
    7. '=find' → logprob: -12.013258934020996
    8. '   ' → logprob: -13.138258934020996
    9. '=f' → logprob: -13.263258934020996
    10. '
' → logprob: -14.138258934020996

Token 1165: 'inder' (ID: 5508)
  Prédit: 'inder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inder' → logprob: -2.816093228830141e-06
    2. 'ind' → logprob: -13.12500286102295
    3. ' inder' → logprob: -15.12500286102295
    4. 'finder' → logprob: -15.75000286102295
    5. 'iner' → logprob: -16.125001907348633
    6. '   ' → logprob: -16.500001907348633
    7. '_' → logprob: -17.500001907348633
    8. '
' → logprob: -17.625001907348633
    9. '#' → logprob: -17.625001907348633
    10. '```' → logprob: -18.000001907348633

Token 1166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10923144221305847
    2. '.find' → logprob: -3.109231472015381
    3. '=' → logprob: -3.609231472015381
    4. '.' → logprob: -3.609231472015381
    5. '=find' → logprob: -6.109231472015381
    6. '.valid' → logprob: -6.984231472015381
    7. '.=' → logprob: -7.484231472015381
    8. '       ' → logprob: -7.734231472015381
    9. '   ' → logprob: -8.234230995178223
    10. '.validate' → logprob: -9.609230995178223

Token 1167: ' Stylish' (ID: 144990)
  Prédit: 'Styl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Styl' → logprob: -0.023269474506378174
    2. ' Stylish' → logprob: -3.7732694149017334
    3. 'St' → logprob: -11.648269653320312
    4. ' Styl' → logprob: -11.773269653320312
    5. 'Sty' → logprob: -12.023269653320312
    6. 'Styled' → logprob: -13.773269653320312
    7. 'Beautiful' → logprob: -15.273269653320312
    8. 'Smart' → logprob: -17.148269653320312
    9. 'Style' → logprob: -17.398269653320312
    10. 'Elegant' → logprob: -17.523269653320312

Token 1168: 'Master' (ID: 18137)
  Prédit: 'Master'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Master' → logprob: -1.9361264946837764e-07
    2. 'master' → logprob: -16.625
    3. ' Master' → logprob: -19.125
    4. '_Master' → logprob: -19.5
    5. '_master' → logprob: -19.625
    6. 'Program' → logprob: -19.875
    7. 'Masters' → logprob: -20.375
    8. '
' → logprob: -22.0
    9. ' master' → logprob: -22.5
    10. '-master' → logprob: -22.625

Token 1169: 'Finder' (ID: 42976)
  Prédit: 'Finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Finder' → logprob: -8.77627644513268e-06
    2. 'finder' → logprob: -12.000008583068848
    3. 'Find' → logprob: -13.750008583068848
    4. ' Finder' → logprob: -14.375008583068848
    5. '(find' → logprob: -15.375008583068848
    6. 'Fetcher' → logprob: -15.375008583068848
    7. ' finder' → logprob: -15.750008583068848
    8. 'Master' → logprob: -15.875008583068848
    9. 'Indent' → logprob: -16.875009536743164
    10. 'find' → logprob: -17.125009536743164

Token 1170: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -4.513339445111342e-05
    2. '       ' → logprob: -10.125044822692871
    3. '(' → logprob: -13.250044822692871
    4. ' (' → logprob: -13.625044822692871
    5. '(
' → logprob: -13.875044822692871
    6. 'p' → logprob: -14.625044822692871
    7. '(master' → logprob: -14.875044822692871
    8. '   ' → logprob: -16.250045776367188
    9. ' p' → logprob: -16.625045776367188
    10. ')' → logprob: -16.875045776367188

Token 1171: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -0.00022654302301816642
    2. 'program' → logprob: -8.750226974487305
    3. 'master' → logprob: -9.750226974487305
    4. 'p' → logprob: -13.125226974487305
    5. 'rogram' → logprob: -13.500226974487305
    6. '_master' → logprob: -13.625226974487305
    7. '_PROGRAM' → logprob: -13.875226974487305
    8. '```' → logprob: -14.125226974487305
    9. '
' → logprob: -14.250226974487305
    10. 'Program' → logprob: -14.375226974487305

Token 1172: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14052161574363708
    2. '       ' → logprob: -2.14052152633667
    3. '<|end|>' → logprob: -4.64052152633667
    4. ')
' → logprob: -6.01552152633667
    5. '<|end|>' → logprob: -6.89052152633667
    6. ').' → logprob: -9.140522003173828
    7. '        
' → logprob: -9.515522003173828
    8. '   ' → logprob: -10.140522003173828
    9. ')(
' → logprob: -10.640522003173828
    10. '           ' → logprob: -11.515522003173828

Token 1173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024874303489923477
    2. 'master' → logprob: -6.002487659454346
    3. ' master' → logprob: -12.252487182617188
    4. '   ' → logprob: -12.627487182617188
    5. '
' → logprob: -12.877487182617188
    6. '(master' → logprob: -14.627487182617188
    7. '           ' → logprob: -15.252487182617188
    8. '        
' → logprob: -15.252487182617188
    9. '```' → logprob: -16.752487182617188
    10. '<|end|>' → logprob: -16.877487182617188

Token 1174: ' master' (ID: 9942)
  Prédit: 'master'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'master' (adapté à ' master') → logprob: -0.00026526954025030136
    2. '       ' → logprob: -8.500265121459961
    3. ' master' → logprob: -9.750265121459961
    4. '
' → logprob: -12.750265121459961
    5. '(master' → logprob: -15.375265121459961
    6. '   ' → logprob: -15.625265121459961
    7. '        
' → logprob: -16.50026512145996
    8. '.master' → logprob: -17.37526512145996
    9. '```' → logprob: -18.75026512145996
    10. 'masters' → logprob: -19.12526512145996

Token 1175: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -4.961759259458631e-06
    2. 'finder' → logprob: -12.375004768371582
    3. '       ' → logprob: -15.250004768371582
    4. 'master' → logprob: -15.875004768371582
    5. '_master' → logprob: -16.6250057220459
    6. '   ' → logprob: -16.7500057220459
    7. '_find' → logprob: -17.3750057220459
    8. '\' → logprob: -17.5000057220459
    9. '_found' → logprob: -17.8750057220459
    10. '```' → logprob: -18.1250057220459

Token 1176: 'inder' (ID: 5508)
  Prédit: 'inder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inder' → logprob: -0.00011021859245374799
    2. 'finder' → logprob: -9.125110626220703
    3. 'ind' → logprob: -14.000110626220703
    4. '_f' → logprob: -16.000110626220703
    5. 'nder' → logprob: -16.625110626220703
    6. 'master' → logprob: -16.625110626220703
    7. 'inds' → logprob: -17.125110626220703
    8. 'find' → logprob: -17.500110626220703
    9. 'INDER' → logprob: -17.875110626220703
    10. 'Finder' → logprob: -18.000110626220703

Token 1177: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -3.292907877039397e-06
    2. 'find' → logprob: -13.75000286102295
    3. '.findall' → logprob: -13.75000286102295
    4. '.' → logprob: -14.00000286102295
    5. '=find' → logprob: -16.250003814697266
    6. ' .' → logprob: -16.875003814697266
    7. '
' → logprob: -18.875003814697266
    8. '.valid' → logprob: -19.000003814697266
    9. '   ' → logprob: -19.875003814697266
    10. ')find' → logprob: -20.125003814697266

Token 1178: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -1.8624639324116288e-06
    2. 'all' → logprob: -13.375001907348633
    3. 'All' → logprob: -16.000001907348633
    4. '
' → logprob: -17.375001907348633
    5. '       ' → logprob: -18.000001907348633
    6. '_valid' → logprob: -18.500001907348633
    7. '                   ' → logprob: -18.500001907348633
    8. '   ' → logprob: -18.625001907348633
    9. '_out' → logprob: -18.625001907348633
    10. 's' → logprob: -18.625001907348633

Token 1179: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.00023321842309087515
    2. 'valid' → logprob: -8.37523365020752
    3. '_' → logprob: -13.62523365020752
    4. '(valid' → logprob: -14.87523365020752
    5. '_possible' → logprob: -15.00023365020752
    6. '_all' → logprob: -15.37523365020752
    7. '```' → logprob: -16.000232696533203
    8. '_styles' → logprob: -16.125232696533203
    9. ' valid' → logprob: -16.500232696533203
    10. '
' → logprob: -16.750232696533203

Token 1180: '_styles' (ID: 95693)
  Prédit: '_styles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_styles' → logprob: -9.253090865968261e-06
    2. 'styles' → logprob: -11.875009536743164
    3. '_' → logprob: -13.750009536743164
    4. '_style' → logprob: -15.125009536743164
    5. '(styles' → logprob: -15.125009536743164
    6. 'Styles' → logprob: -15.875009536743164
    7. ' _' → logprob: -16.500009536743164
    8. 's' → logprob: -16.750009536743164
    9. ' styles' → logprob: -17.125009536743164
    10. '\' → logprob: -17.125009536743164

Token 1181: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017948969034478068
    2. '
' → logprob: -7.501794815063477
    3. '        
' → logprob: -7.501794815063477
    4. '<|end|>' → logprob: -7.501794815063477
    5. 'indent' → logprob: -9.876794815063477
    6. '   ' → logprob: -9.876794815063477
    7. '           ' → logprob: -12.126794815063477
    8. '  
' → logprob: -12.251794815063477
    9. '```' → logprob: -12.501794815063477
    10. '    
' → logprob: -12.626794815063477

Token 1182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40988796949386597
    2. 'indent' → logprob: -1.1598880290985107
    3. '   ' → logprob: -4.409887790679932
    4. ' indent' → logprob: -4.909887790679932
    5. 'ind' → logprob: -7.159887790679932
    6. '(indent' → logprob: -7.159887790679932
    7. '
' → logprob: -7.534887790679932
    8. '```' → logprob: -7.909887790679932
    9. '_indent' → logprob: -8.03488826751709
    10. ' indentation' → logprob: -8.90988826751709

Token 1183: ' indent' (ID: 37655)
  Prédit: 'indent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indent' (adapté à ' indent') → logprob: -0.00850016251206398
    2. 'ind' → logprob: -5.133500099182129
    3. '       ' → logprob: -6.633500099182129
    4. ' indent' → logprob: -6.758500099182129
    5. '   ' → logprob: -10.508500099182129
    6. '(indent' → logprob: -10.758500099182129
    7. 'styl' → logprob: -10.758500099182129
    8. '_indent' → logprob: -12.008500099182129
    9. '        
' → logprob: -13.133500099182129
    10. 'sty' → logprob: -13.133500099182129

Token 1184: 'ator' (ID: 1246)
  Prédit: 'ations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.005893715191632509
    2. 'ed' → logprob: -5.880893707275391
    3. '_results' → logprob: -6.755893707275391
    4. '_lines' → logprob: -7.130893707275391
    5. 'ation' → logprob: -7.505893707275391
    6. 's' → logprob: -7.755893707275391
    7. 'results' → logprob: -9.88089370727539
    8. 'er' → logprob: -10.50589370727539
    9. ' =' → logprob: -11.50589370727539
    10. '=' → logprob: -11.50589370727539

Token 1185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1136908009648323
    2. '=' → logprob: -2.2386908531188965
    3. '.' → logprob: -7.2386908531188965
    4. '   ' → logprob: -10.113690376281738
    5. '(' → logprob: -11.113690376281738
    6. '<|end|>' → logprob: -11.113690376281738
    7. '_' → logprob: -11.613690376281738
    8. 's' → logprob: -11.988690376281738
    9. '.=' → logprob: -11.988690376281738
    10. ')' → logprob: -12.238690376281738

Token 1186: ' Stylish' (ID: 144990)
  Prédit: 'Styl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Styl' → logprob: -0.0024901647120714188
    2. ' Stylish' → logprob: -6.002490043640137
    3. 'St' → logprob: -11.377490043640137
    4. 'Sty' → logprob: -13.752490043640137
    5. '       ' → logprob: -14.127490043640137
    6. 'Styled' → logprob: -14.877490043640137
    7. ' Styl' → logprob: -14.877490043640137
    8. '   ' → logprob: -15.502490043640137
    9. 'Beautiful' → logprob: -15.627490043640137
    10. '```' → logprob: -16.502490997314453

Token 1187: 'Indent' (ID: 62786)
  Prédit: 'Indent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Indent' → logprob: -3.128163257315464e-07
    2. '_indent' → logprob: -15.375
    3. 'Ind' → logprob: -17.375
    4. '(indent' → logprob: -17.625
    5. 'Indented' → logprob: -19.25
    6. 'Ident' → logprob: -19.5
    7. '-indent' → logprob: -19.625
    8. '
' → logprob: -19.625
    9. 'indent' → logprob: -19.625
    10. 'Intent' → logprob: -19.875

Token 1188: 'ator' (ID: 1246)
  Prédit: 'ator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -1.9361264946837764e-07
    2. 'ate' → logprob: -17.25
    3. '_lines' → logprob: -17.25
    4. 'Lines' → logprob: -17.375
    5. '   ' → logprob: -17.625
    6. 'or' → logprob: -19.0
    7. 'атор' → logprob: -19.125
    8. '__' → logprob: -19.375
    9. 'ATOR' → logprob: -19.5
    10. 'ater' → logprob: -19.625

Token 1189: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00012654215970542282
    2. '       ' → logprob: -9.375126838684082
    3. '(q' → logprob: -10.250126838684082
    4. '(' → logprob: -12.500126838684082
    5. ' (' → logprob: -13.250126838684082
    6. '(
' → logprob: -15.250126838684082
    7. '   ' → logprob: -15.875126838684082
    8. 'q' → logprob: -15.875126838684082
    9. '```' → logprob: -16.125125885009766
    10. '(self' → logprob: -16.500125885009766

Token 1190: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -0.0005990233621560037
    2. 'rogram' → logprob: -8.000598907470703
    3. 'program' → logprob: -8.250598907470703
    4. 'p' → logprob: -13.375598907470703
    5. '_PROGRAM' → logprob: -14.875598907470703
    6. 'ogram' → logprob: -16.375598907470703
    7. 'Program' → logprob: -16.500598907470703
    8. 'master' → logprob: -16.500598907470703
    9. '_master' → logprob: -16.625598907470703
    10. 'q' → logprob: -16.750598907470703

Token 1191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.860340752406046e-05
    2. ',q' → logprob: -10.5000581741333
    3. ' ,' → logprob: -10.6250581741333
    4. ',
' → logprob: -12.1250581741333
    5. '       ' → logprob: -13.7500581741333
    6. 'q' → logprob: -15.8750581741333
    7. '
' → logprob: -17.750059127807617
    8. '<|end|>' → logprob: -17.750059127807617
    9. ',p' → logprob: -18.125059127807617
    10. '   ' → logprob: -18.125059127807617

Token 1192: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0002613358374219388
    2. ' q' → logprob: -8.250261306762695
    3. '	q' → logprob: -16.875261306762695
    4. '       ' → logprob: -18.875261306762695
    5. '
' → logprob: -19.250261306762695
    6. '           ' → logprob: -19.500261306762695
    7. '_q' → logprob: -20.750261306762695
    8. '   ' → logprob: -20.750261306762695
    9. '```' → logprob: -21.250261306762695
    10. '$q' → logprob: -21.625261306762695

Token 1193: '_program' (ID: 58929)
  Prédit: '_program'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_program' → logprob: -1.282920129597187e-05
    2. 'q' → logprob: -12.375012397766113
    3. 'rogram' → logprob: -12.375012397766113
    4. 'program' → logprob: -12.625012397766113
    5. '_q' → logprob: -13.875012397766113
    6. '_PROGRAM' → logprob: -16.75001335144043
    7. '_' → logprob: -18.12501335144043
    8. '_pro' → logprob: -19.00001335144043
    9. '```' → logprob: -19.00001335144043
    10. 'Program' → logprob: -19.25001335144043

Token 1194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010771531378850341
    2. '       ' → logprob: -9.750107765197754
    3. ' ,' → logprob: -10.000107765197754
    4. ',
' → logprob: -12.750107765197754
    5. '           ' → logprob: -14.375107765197754
    6. '   ' → logprob: -15.875107765197754
    7. ')' → logprob: -16.750106811523438
    8. '        ' → logprob: -17.125106811523438
    9. '<|end|>' → logprob: -17.125106811523438
    10. ',user' → logprob: -17.250106811523438

Token 1195: ' master' (ID: 9942)
  Prédit: 'master'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'master' → logprob: -0.0004331725067459047
    2. ' master' → logprob: -7.750432968139648
    3. '           ' → logprob: -13.125432968139648
    4. '       ' → logprob: -15.250432968139648
    5. '(master' → logprob: -16.50043296813965
    6. '               ' → logprob: -17.00043296813965
    7. 'masters' → logprob: -17.87543296813965
    8. '          ' → logprob: -18.12543296813965
    9. '   ' → logprob: -18.25043296813965
    10. '            ' → logprob: -18.62543296813965

Token 1196: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -3.128163257315464e-07
    2. 'master' → logprob: -16.375
    3. 'finder' → logprob: -16.375
    4. 'ator' → logprob: -17.125
    5. 'f' → logprob: -18.375
    6. '
' → logprob: -19.125
    7. 'or' → logprob: -19.625
    8. '\' → logprob: -20.375
    9. 'er' → logprob: -20.5
    10. 'inator' → logprob: -20.75

Token 1197: 'inder' (ID: 5508)
  Prédit: 'inder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inder' → logprob: -0.00034750174381770194
    2. 'aster' → logprob: -8.250347137451172
    3. 'ind' → logprob: -10.000347137451172
    4. '_styles' → logprob: -11.375347137451172
    5. 'styles' → logprob: -12.000347137451172
    6. 'master' → logprob: -12.375347137451172
    7. 'aller' → logprob: -13.000347137451172
    8. 'ather' → logprob: -13.000347137451172
    9. 'finder' → logprob: -13.375347137451172
    10. 'inds' → logprob: -13.375347137451172

Token 1198: '.valid' (ID: 41805)
  Prédit: '.valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.valid' → logprob: -9.088346359931165e-07
    2. 'valid' → logprob: -14.125000953674316
    3. '.' → logprob: -16.125
    4. ' .' → logprob: -17.375
    5. '   ' → logprob: -18.25
    6. '	valid' → logprob: -18.75
    7. ' valid' → logprob: -19.75
    8. '
' → logprob: -20.0
    9. '.invalid' → logprob: -20.0
    10. '(valid' → logprob: -20.625

Token 1199: '_styles' (ID: 95693)
  Prédit: '_styles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_styles' → logprob: -2.339278580620885e-06
    2. 'styles' → logprob: -13.000001907348633
    3. 'Styles' → logprob: -18.500001907348633
    4. ' styles' → logprob: -18.875001907348633
    5. '_' → logprob: -19.125001907348633
    6. '_style' → logprob: -19.500001907348633
    7. '
' → logprob: -20.000001907348633
    8. '_shapes' → logprob: -20.000001907348633
    9. '_sizes' → logprob: -20.250001907348633
    10. '_
' → logprob: -20.375001907348633

Token 1200: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5385832786560059
    2. ')
' → logprob: -1.0385832786560059
    3. '       ' → logprob: -2.788583278656006
    4. ').' → logprob: -7.538583278656006
    5. '   ' → logprob: -9.163583755493164
    6. '())
' → logprob: -9.538583755493164
    7. '<|end|>' → logprob: -9.913583755493164
    8. '()
' → logprob: -10.038583755493164
    9. ')
' → logprob: -10.288583755493164
    10. '()' → logprob: -10.288583755493164

Token 1201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03643401339650154
    2. 'results' → logprob: -3.5364339351654053
    3. 'print' → logprob: -5.161434173583984
    4. '   ' → logprob: -7.661434173583984
    5. ' results' → logprob: -8.286434173583984
    6. 'result' → logprob: -9.286434173583984
    7. '
' → logprob: -10.161434173583984
    8. '```' → logprob: -10.911434173583984
    9. '	results' → logprob: -11.286434173583984
    10. ' print' → logprob: -11.786434173583984

Token 1202: ' indent' (ID: 37655)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.026094866916537285
    2. 'result' → logprob: -3.776094913482666
    3. '       ' → logprob: -6.401094913482666
    4. ' results' → logprob: -7.776094913482666
    5. 'res' → logprob: -8.276094436645508
    6. 'indent' (adapté à ' indent') → logprob: -8.526094436645508
    7. 'output' → logprob: -8.651094436645508
    8. 'ind' → logprob: -9.776094436645508
    9. 'outputs' → logprob: -10.276094436645508
    10. 'print' → logprob: -11.026094436645508

Token 1203: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.0018954371334984899
    2. 'ed' → logprob: -6.751895427703857
    3. 'ation' → logprob: -7.501895427703857
    4. 's' → logprob: -10.126895904541016
    5. 'ated' → logprob: -10.376895904541016
    6. 'ator' → logprob: -10.626895904541016
    7. '   ' → logprob: -11.126895904541016
    8. 'results' → logprob: -11.126895904541016
    9. '_results' → logprob: -11.376895904541016
    10. 'result' → logprob: -11.751895904541016

Token 1204: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05495280772447586
    2. '=' → logprob: -2.92995285987854
    3. '   ' → logprob: -9.679952621459961
    4. '       ' → logprob: -13.054952621459961
    5. '    ' → logprob: -13.929952621459961
    6. '.append' → logprob: -14.179952621459961
    7. '.extend' → logprob: -14.304952621459961
    8. '=[]' → logprob: -14.304952621459961
    9. '_results' → logprob: -14.679952621459961
    10. 'results' → logprob: -15.054952621459961

Token 1205: ' indent' (ID: 37655)
  Prédit: 'indent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indent' → logprob: -0.00861681904643774
    2. ' indent' → logprob: -4.758616924285889
    3. 'ind' → logprob: -13.38361644744873
    4. '(indent' → logprob: -14.63361644744873
    5. '_indent' → logprob: -16.383617401123047
    6. 'Indent' → logprob: -16.508617401123047
    7. '-indent' → logprob: -16.758617401123047
    8. ' indentation' → logprob: -17.008617401123047
    9. 'ident' → logprob: -17.133617401123047
    10. '   ' → logprob: -19.008617401123047

Token 1206: 'ator' (ID: 1246)
  Prédit: 'ator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -7.465036105713807e-06
    2. 'ations' → logprob: -11.875007629394531
    3. '_lines' → logprob: -15.250007629394531
    4. 'ators' → logprob: -15.875007629394531
    5. 'ate' → logprob: -18.25000762939453
    6. '   ' → logprob: -18.62500762939453
    7. 'indent' → logprob: -18.62500762939453
    8. 'ATOR' → logprob: -18.87500762939453
    9. 'at' → logprob: -19.00000762939453
    10. '
' → logprob: -19.25000762939453

Token 1207: '.ind' (ID: 51969)
  Prédit: '.ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ind' → logprob: -0.16071920096874237
    2. 'indent' → logprob: -1.9107191562652588
    3. '_indent' → logprob: -7.910719394683838
    4. '_lines' → logprob: -9.53571891784668
    5. ' indent' → logprob: -10.78571891784668
    6. 'ind' → logprob: -11.28571891784668
    7. '(indent' → logprob: -12.03571891784668
    8. '_ind' → logprob: -12.16071891784668
    9. '-indent' → logprob: -12.78571891784668
    10. '.ident' → logprob: -13.03571891784668

Token 1208: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -6.56364209135063e-05
    2. 'entions' → logprob: -10.000065803527832
    3. 'entation' → logprob: -11.375065803527832
    4. 't' → logprob: -12.500065803527832
    5. 'dent' → logprob: -13.625065803527832
    6. 'nt' → logprob: -13.750065803527832
    7. 'ents' → logprob: -14.250065803527832
    8. 'et' → logprob: -14.750065803527832
    9. 'ations' → logprob: -14.875065803527832
    10. 'e' → logprob: -15.500065803527832

Token 1209: '_lines' (ID: 42980)
  Prédit: 'ations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.04864652454853058
    2. '_lines' → logprob: -3.0486464500427246
    3. 'ate' → logprob: -10.548646926879883
    4. 's' → logprob: -11.923646926879883
    5. 'ation' → logprob: -12.048646926879883
    6. 'lines' → logprob: -12.298646926879883
    7. '_results' → logprob: -12.548646926879883
    8. '
' → logprob: -12.798646926879883
    9. '```' → logprob: -13.173646926879883
    10. '_' → logprob: -14.048646926879883

Token 1210: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00029041420202702284
    2. '
' → logprob: -8.250290870666504
    3. '   ' → logprob: -10.875290870666504
    4. 'for' → logprob: -12.375290870666504
    5. 'print' → logprob: -13.000290870666504
    6. '        
' → logprob: -13.625290870666504
    7. '
' → logprob: -14.375290870666504
    8. ' for' → logprob: -14.500290870666504
    9. '           ' → logprob: -14.875290870666504
    10. '	' → logprob: -15.125290870666504

Token 1211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031532408320344985
    2. '   ' → logprob: -8.25031566619873
    3. 'for' → logprob: -10.00031566619873
    4. 'print' → logprob: -12.00031566619873
    5. '```' → logprob: -13.62531566619873
    6. '
' → logprob: -15.12531566619873
    7. '        
' → logprob: -15.25031566619873
    8. ' for' → logprob: -15.25031566619873
    9. '<|end|>' → logprob: -15.50031566619873
    10. '           ' → logprob: -16.125314712524414

Token 1212: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.47417718172073364
    2. '       ' → logprob: -0.9741771817207336
    3. 'for' → logprob: -9.724177360534668
    4. '   ' → logprob: -10.724177360534668
    5. ' print' → logprob: -10.974177360534668
    6. '```' → logprob: -14.099177360534668
    7. '
' → logprob: -15.974177360534668
    8. '        
' → logprob: -16.59917640686035
    9. ' for' → logprob: -16.84917640686035
    10. '           ' → logprob: -16.84917640686035

Token 1213: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.007328083273023367
    2. '("' → logprob: -5.507328033447266
    3. '(*' → logprob: -5.757328033447266
    4. '(' → logprob: -9.382328033447266
    5. ''' → logprob: -14.757328033447266
    6. '*' → logprob: -15.882328033447266
    7. '"' → logprob: -16.382328033447266
    8. '(len' → logprob: -17.007328033447266
    9. '()' → logprob: -17.507328033447266
    10. '(
' → logprob: -17.632328033447266

Token 1214: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07124122977256775
    2. '('' → logprob: -2.6962411403656006
    3. '"' → logprob: -6.94624137878418
    4. '(*' → logprob: -9.07124137878418
    5. ' '' → logprob: -9.32124137878418
    6. ''.' → logprob: -10.07124137878418
    7. '(' → logprob: -10.32124137878418
    8. '*' → logprob: -10.44624137878418
    9. '("' → logprob: -11.07124137878418
    10. '''.' → logprob: -11.69624137878418

Token 1215: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.21698030829429626
    2. 'print' → logprob: -1.7169803380966187
    3. ''.' → logprob: -4.716980457305908
    4. '.join' → logprob: -5.591980457305908
    5. ''' → logprob: -6.966980457305908
    6. ').' → logprob: -7.216980457305908
    7. 'end' → logprob: -7.716980457305908
    8. '```' → logprob: -8.59197998046875
    9. '''.' → logprob: -9.34197998046875
    10. ')' → logprob: -9.46697998046875

Token 1216: '(map' (ID: 16946)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.15710923075675964
    2. 'str' → logprob: -2.157109260559082
    3. '(map' → logprob: -3.907109260559082
    4. '(str' → logprob: -4.657109260559082
    5. '[str' → logprob: -8.907109260559082
    6. ' map' → logprob: -13.157109260559082
    7. '	map' → logprob: -15.657109260559082
    8. ' str' → logprob: -15.782109260559082
    9. '.map' → logprob: -16.157108306884766
    10. '   ' → logprob: -17.032108306884766

Token 1217: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.001171056181192398
    2. 'str' → logprob: -6.751171112060547
    3. '=str' → logprob: -15.251171112060547
    4. '```' → logprob: -15.501171112060547
    5. ' str' → logprob: -16.251171112060547
    6. '(' → logprob: -16.626171112060547
    7. '[str' → logprob: -16.876171112060547
    8. '	str' → logprob: -16.876171112060547
    9. ')' → logprob: -16.876171112060547
    10. ':str' → logprob: -18.626171112060547

Token 1218: ',' (ID: 11)
  Prédit: '(indent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(indent' → logprob: -0.0037705088034272194
    2. ',' → logprob: -5.878770351409912
    3. 'indent' → logprob: -7.128770351409912
    4. '(ind' → logprob: -9.12877082824707
    5. '(' → logprob: -10.25377082824707
    6. ' indent' → logprob: -11.50377082824707
    7. 'Indent' → logprob: -12.50377082824707
    8. '[ind' → logprob: -13.37877082824707
    9. '_indent' → logprob: -13.50377082824707
    10. ' (' → logprob: -13.75377082824707

Token 1219: ' indent' (ID: 37655)
  Prédit: 'indent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indent' → logprob: -1.771655115589965e-05
    2. ' indent' → logprob: -11.000018119812012
    3. '(indent' → logprob: -14.000018119812012
    4. '   ' → logprob: -16.875017166137695
    5. '           ' → logprob: -18.500017166137695
    6. '       ' → logprob: -18.625017166137695
    7. 'Indent' → logprob: -19.500017166137695
    8. 'ident' → logprob: -19.500017166137695
    9. '_indent' → logprob: -19.625017166137695
    10. ' ' → logprob: -20.125017166137695

Token 1220: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.00017350474081467837
    2. '(' → logprob: -8.875173568725586
    3. '(indent' → logprob: -10.375173568725586
    4. ')' → logprob: -13.750173568725586
    5. '   ' → logprob: -14.375173568725586
    6. 's' → logprob: -16.000173568725586
    7. 'indent' → logprob: -16.125173568725586
    8. '(ind' → logprob: -16.125173568725586
    9. 'entions' → logprob: -16.125173568725586
    10. '_' → logprob: -16.500173568725586

Token 1221: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -5.2524021157296374e-05
    2. ')))' → logprob: -10.625052452087402
    3. '()))' → logprob: -10.750052452087402
    4. '))
' → logprob: -12.000052452087402
    5. ' ))' → logprob: -15.000052452087402
    6. ')' → logprob: -16.50005340576172
    7. '(' → logprob: -16.87505340576172
    8. '   ' → logprob: -16.87505340576172
    9. '()' → logprob: -18.12505340576172
    10. '       ' → logprob: -18.50005340576172

Token 1222: ')


' (ID: 7861)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0024668595287948847
    2. ')' → logprob: -6.877466678619385
    3. '())
' → logprob: -7.252466678619385
    4. '()' → logprob: -7.252466678619385
    5. '()
' → logprob: -11.877467155456543
    6. ' ())' → logprob: -13.502467155456543
    7. '()]' → logprob: -13.752467155456543
    8. '(' → logprob: -14.127467155456543
    9. '[])' → logprob: -14.377467155456543
    10. '()+' → logprob: -14.377467155456543

Token 1223: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.939851037808694e-05
    2. 'main' → logprob: -10.500029563903809
    3. ' if' → logprob: -13.250029563903809
    4. '```' → logprob: -16.750028610229492
    5. '#' → logprob: -17.625028610229492
    6. 'for' → logprob: -17.750028610229492
    7. '
' → logprob: -19.750028610229492
    8. '#if' → logprob: -20.375028610229492
    9. '__' → logprob: -20.875028610229492
    10. 'If' → logprob: -21.000028610229492

Token 1224: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.029789136722683907
    2. ' __' → logprob: -3.5297892093658447
    3. 'name' → logprob: -10.404788970947266
    4. '_name' → logprob: -12.654788970947266
    5. '___' → logprob: -12.904788970947266
    6. ' ' → logprob: -14.279788970947266
    7. '_' → logprob: -15.029788970947266
    8. '  ' → logprob: -15.154788970947266
    9. '/__' → logprob: -15.279788970947266
    10. '```' → logprob: -15.529788970947266

Token 1225: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06189776211977005
    2. ' ==' → logprob: -3.3118977546691895
    3. 'name' → logprob: -4.5618977546691895
    4. '==' → logprob: -4.5618977546691895
    5. ' __' → logprob: -6.1868977546691895
    6. 'main' → logprob: -8.936898231506348
    7. '__.__' → logprob: -9.436898231506348
    8. '_name' → logprob: -9.811898231506348
    9. '__':
' → logprob: -9.936898231506348
    10. '=="' → logprob: -10.061898231506348

Token 1226: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.512236498361744e-07
    2. '__.__' → logprob: -15.375000953674316
    3. '____' → logprob: -16.625
    4. '__
' → logprob: -16.75
    5. '==' → logprob: -17.0
    6. '__.' → logprob: -17.875
    7. '__('' → logprob: -18.625
    8. '___' → logprob: -19.0
    9. ' ==' → logprob: -19.125
    10. '__

' → logprob: -19.625

Token 1227: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7154555916786194
    2. '__' → logprob: -0.7154555916786194
    3. ' ==' → logprob: -3.8404555320739746
    4. '=="' → logprob: -7.715455532073975
    5. '=='' → logprob: -9.340456008911133
    6. '==
' → logprob: -10.590456008911133
    7. '=' → logprob: -11.965456008911133
    8. '__.__' → logprob: -12.715456008911133
    9. '===' → logprob: -13.090456008911133
    10. '.__' → logprob: -13.590456008911133

Token 1228: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.011069757863879204
    2. ''' → logprob: -4.5110697746276855
    3. '__' → logprob: -11.136069297790527
    4. ' "__' → logprob: -11.886069297790527
    5. ' '__' → logprob: -15.636069297790527
    6. '"_' → logprob: -16.136070251464844
    7. '"class' → logprob: -16.886070251464844
    8. '"user' → logprob: -16.886070251464844
    9. '"'' → logprob: -17.261070251464844
    10. ''"' → logprob: -17.261070251464844

Token 1229: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.001516173011623323
    2. '__' → logprob: -6.501516342163086
    3. '"' → logprob: -11.376516342163086
    4. ''' → logprob: -13.751516342163086
    5. '_main' → logprob: -14.626516342163086
    6. 'name' → logprob: -15.126516342163086
    7. ' main' → logprob: -15.751516342163086
    8. 'python' → logprob: -16.001516342163086
    9. '__":
' → logprob: -16.751516342163086
    10. 'built' → logprob: -16.876516342163086

Token 1230: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.07205382734537125
    2. '__' → logprob: -2.697053909301758
    3. '__':
' → logprob: -6.322053909301758
    4. '__.' → logprob: -8.697053909301758
    5. '__:' → logprob: -9.447053909301758
    6. '__.__' → logprob: -10.322053909301758
    7. '__["' → logprob: -10.822053909301758
    8. '.' → logprob: -11.947053909301758
    9. '__
' → logprob: -12.072053909301758
    10. '.__' → logprob: -13.322053909301758

Token 1231: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.021283676847815514
    2. '   ' → logprob: -4.5212836265563965
    3. '__' → logprob: -4.7712836265563965
    4. ' main' → logprob: -6.5212836265563965
    5. '    
' → logprob: -9.396284103393555
    6. '	main' → logprob: -9.396284103393555
    7. '_main' → logprob: -11.146284103393555
    8. '
' → logprob: -11.271284103393555
    9. '(main' → logprob: -11.271284103393555
    10. '__":
' → logprob: -11.646284103393555

Token 1232: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.5
    3. '   ' → logprob: -16.75
    4. 'import' → logprob: -18.375
    5. '	main' → logprob: -19.375
    6. '(main' → logprob: -23.25
    7. '_main' → logprob: -23.75
    8. '.main' → logprob: -24.125
    9. '
' → logprob: -25.875
    10. '```' → logprob: -25.875

Token 1233: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1231
Tokens correctement prédits (1ère position, stricte): 611
Tokens correctement prédits (1ère position, avec adaptation): 692
Tokens correctement prédits (top 10): 1139
Précision stricte (1ère position): 49.63%
Précision adaptée (1ère position): 56.21%
Précision (top 10): 92.53%
================================================================================
