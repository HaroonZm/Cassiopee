================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n, m = map(int, input().split())
    if n == 0 and m == 0:
        break
    black = [tuple(map(int, input().split())) for _ in range(n)]
    white = [tuple(map(int, input().split())) for _ in range(m)]
    points = black + white

    def side(p1, p2, p):
        return (p2[0]-p1[0])*(p[1]-p1[1]) - (p2[1]-p1[1])*(p[0]-p1[0])

    def can_separate():
        # Try all pairs of points to define a candidate line
        for i in range(len(points)):
            for j in range(i+1, len(points)):
                p1 = points[i]
                p2 = points[j]
                on_positive = []
                on_negative = []
                on_line = False
                for k in range(len(points)):
                    if k == i or k == j:
                        continue
                    val = side(p1, p2, points[k])
                    if val == 0:
                        on_line = True
                        break
                    elif val > 0:
                        on_positive.append(k)
                    else:
                        on_negative.append(k)
                if on_line:
                    continue
                # Check if one side has only black and other only white
                def all_black(indices):
                    for idx in indices:
                        if idx >= n:
                            return False
                    return True
                def all_white(indices):
                    for idx in indices:
                        if idx < n:
                            return False
                    return True

                if (all_black(on_positive) and all_white(on_negative)) or (all_white(on_positive) and all_black(on_negative)):
                    return True
        return False

    if can_separate():
        print("YES")
    else:
        print("NO")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5137425661087036
    2. '    ' → logprob: -2.013742446899414
    3. ' ' → logprob: -2.638742446899414
    4. '    
' → logprob: -3.013742446899414
    5. '\n' → logprob: -3.138742446899414
    6. '\' → logprob: -3.388742446899414
    7. ' 
' → logprob: -4.013742446899414
    8. '```' → logprob: -4.388742446899414
    9. '  
' → logprob: -4.888742446899414
    10. '     
' → logprob: -5.013742446899414

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4779955744743347
    2. '    ' → logprob: -1.7279956340789795
    3. ' ' → logprob: -1.9779956340789795
    4. '```' → logprob: -3.6029956340789795
    5. '       ' → logprob: -4.7279953956604
    6. '  ' → logprob: -5.3529953956604
    7. '    
' → logprob: -5.6029953956604
    8. '        
' → logprob: -6.6029953956604
    9. 'pass' → logprob: -6.7279953956604
    10. '`' → logprob: -6.7279953956604

Token 5: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8869101405143738
    2. 'u' → logprob: -1.6369102001190186
    3. '=' → logprob: -2.1369102001190186
    4. '+' → logprob: -2.3869102001190186
    5. 'o' → logprob: -2.7619102001190186
    6. '   ' → logprob: -3.6369102001190186
    7. '_' → logprob: -4.1369099617004395
    8. '.' → logprob: -4.3869099617004395
    9. '%' → logprob: -4.5119099617004395
    10. ' =' → logprob: -4.8869099617004395

Token 6: ' m' (ID: 284)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.22054986655712128
    2. 'input' → logprob: -1.8455498218536377
    3. ' ' → logprob: -4.595550060272217
    4. ' s' → logprob: -4.595550060272217
    5. ' m' → logprob: -4.720550060272217
    6. 's' → logprob: -6.095550060272217
    7. '"' → logprob: -6.220550060272217
    8. 'm' → logprob: -6.345550060272217
    9. ' data' → logprob: -7.595550060272217
    10. ' n' → logprob: -7.720550060272217

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8374699354171753
    2. ' =' → logprob: -0.8374699354171753
    3. ',' → logprob: -2.087470054626465
    4. ' ,' → logprob: -4.837470054626465
    5. ')' → logprob: -6.712470054626465
    6. ' ' → logprob: -7.087470054626465
    7. '<|end|>' → logprob: -8.587470054626465
    8. '[' → logprob: -10.087470054626465
    9. '  ' → logprob: -10.087470054626465
    10. ' )' → logprob: -11.212470054626465

Token 8: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.045507851988077164
    2. 'map' → logprob: -3.1705079078674316
    3. ' input' → logprob: -6.170507907867432
    4. 'input' → logprob: -8.295507431030273
    5. ' ' → logprob: -9.420507431030273
    6. ' list' → logprob: -10.420507431030273
    7. ' int' → logprob: -10.795507431030273
    8. '0' → logprob: -11.545507431030273
    9. ' [' → logprob: -12.170507431030273
    10. 'int' → logprob: -12.420507431030273

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.039587266743183136
    2. '(' → logprob: -3.2895872592926025
    3. '(str' → logprob: -7.164587497711182
    4. '(lambda' → logprob: -7.539587497711182
    5. '<int' → logprob: -9.289587020874023
    6. 'int' → logprob: -9.664587020874023
    7. '[int' → logprob: -10.289587020874023
    8. '(input' → logprob: -10.664587020874023
    9. '=int' → logprob: -12.039587020874023
    10. '(
' → logprob: -12.789587020874023

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07857456058263779
    2. 'input' → logprob: -2.8285746574401855
    3. '(' → logprob: -4.9535746574401855
    4. ')' → logprob: -5.2035746574401855
    5. ' input' → logprob: -5.8285746574401855
    6. ',input' → logprob: -7.3285746574401855
    7. ',' → logprob: -8.953574180603027
    8. '=input' → logprob: -9.703574180603027
    9. '<input' → logprob: -10.703574180603027
    10. '[input' → logprob: -11.328574180603027

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16025987267494202
    2. ' input' → logprob: -1.9102598428726196
    3. ')' → logprob: -10.410260200500488
    4. '(input' → logprob: -12.660260200500488
    5. ' )' → logprob: -14.410260200500488
    6. '=input' → logprob: -14.660260200500488
    7. ' ' → logprob: -14.660260200500488
    8. '	input' → logprob: -15.410260200500488
    9. ',input' → logprob: -15.535260200500488
    10. '```' → logprob: -15.785260200500488

Token 12: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5373679995536804
    2. '())' → logprob: -1.1623680591583252
    3. '().' → logprob: -2.287368059158325
    4. '());' → logprob: -7.537367820739746
    5. '()))' → logprob: -8.037367820739746
    6. '('' → logprob: -8.912367820739746
    7. ')' → logprob: -9.412367820739746
    8. '(' → logprob: -9.662367820739746
    9. '()),' → logprob: -9.787367820739746
    10. '()));' → logprob: -10.287367820739746

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007164848502725363
    2. 'strip' → logprob: -7.250716686248779
    3. 'rstrip' → logprob: -12.125716209411621
    4. ' split' → logprob: -13.875716209411621
    5. '(split' → logprob: -16.000717163085938
    6. 'spl' → logprob: -16.875717163085938
    7. 'read' → logprob: -17.375717163085938
    8. ')' → logprob: -18.250717163085938
    9. 'replace' → logprob: -18.750717163085938
    10. '```' → logprob: -18.875717163085938

Token 14: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5472492575645447
    2. '())' → logprob: -1.1722493171691895
    3. '))' → logprob: -2.2972493171691895
    4. '()))' → logprob: -4.9222493171691895
    5. '()' → logprob: -5.5472493171691895
    6. '())
' → logprob: -11.047248840332031
    7. ')))' → logprob: -11.422248840332031
    8. '),' → logprob: -11.797248840332031
    9. '')' → logprob: -12.297248840332031
    10. '(' → logprob: -12.547248840332031

Token 15: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16324442625045776
    2. '   ' → logprob: -2.5382444858551025
    3. ')' → logprob: -3.9132444858551025
    4. '<|end|>' → logprob: -4.288244247436523
    5. '):' → logprob: -4.288244247436523
    6. ' if' → logprob: -5.038244247436523
    7. ',' → logprob: -5.288244247436523
    8. ' ' → logprob: -5.913244247436523
    9. ':
' → logprob: -6.163244247436523
    10. '       ' → logprob: -6.413244247436523

Token 16: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4752298891544342
    2. '   ' → logprob: -1.2252298593521118
    3. 'if' (adapté à ' if') → logprob: -3.7252299785614014
    4. '```' → logprob: -4.100229740142822
    5. '    ' → logprob: -4.225229740142822
    6. ' ' → logprob: -4.350229740142822
    7. '       ' → logprob: -5.100229740142822
    8. '    
' → logprob: -6.725229740142822
    9. ')' → logprob: -6.725229740142822
    10. 'i' → logprob: -6.975229740142822

Token 17: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.022560741752386093
    2. ' not' → logprob: -3.8975608348846436
    3. 'n' → logprob: -6.8975605964660645
    4. ' m' → logprob: -7.0225605964660645
    5. 'not' → logprob: -9.397561073303223
    6. 'm' → logprob: -11.022561073303223
    7. ' ' → logprob: -11.522561073303223
    8. ' ' → logprob: -12.647561073303223
    9. '(n' → logprob: -13.772561073303223
    10. ' (' → logprob: -15.022561073303223

Token 18: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07479651272296906
    2. '==' → logprob: -2.824796438217163
    3. ' <=' → logprob: -5.074796676635742
    4. ' <' → logprob: -5.949796676635742
    5. ' ' → logprob: -6.574796676635742
    6. '<' → logprob: -7.574796676635742
    7. ' >' → logprob: -7.699796676635742
    8. '>' → logprob: -8.074796676635742
    9. ')' → logprob: -8.199796676635742
    10. '<=' → logprob: -8.449796676635742

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10055094957351685
    2. '0' → logprob: -2.350550889968872
    3. ' m' → logprob: -8.725550651550293
    4. 'm' → logprob: -8.725550651550293
    5. ' -' → logprob: -11.725550651550293
    6. '-' → logprob: -12.350550651550293
    7. '  ' → logprob: -13.100550651550293
    8. '1' → logprob: -14.163050651550293
    9. '   ' → logprob: -14.225550651550293
    10. '=' → logprob: -14.350550651550293

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000386105413781479
    2. ' ' → logprob: -8.000386238098145
    3. 'm' → logprob: -10.250386238098145
    4. '-' → logprob: -11.625386238098145
    5. ' m' → logprob: -14.000386238098145
    6. '   ' → logprob: -14.000386238098145
    7. '```' → logprob: -14.000386238098145
    8. '  ' → logprob: -14.125386238098145
    9. ' -' → logprob: -14.250386238098145
    10. '1' → logprob: -14.312886238098145

Token 21: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.13030385971069336
    2. ':' → logprob: -2.1303038597106934
    3. 'and' → logprob: -5.755303859710693
    4. ' ' → logprob: -9.255304336547852
    5. ' or' → logprob: -9.505304336547852
    6. ' :' → logprob: -11.505304336547852
    7. ' a' → logprob: -11.505304336547852
    8. '   ' → logprob: -12.130304336547852
    9. ' an' → logprob: -13.255304336547852
    10. ',' → logprob: -13.505304336547852

Token 22: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.2519320547580719
    2. 'm' → logprob: -1.5019320249557495
    3. ' ' → logprob: -13.251932144165039
    4. '	m' → logprob: -14.626932144165039
    5. '    ' → logprob: -15.126932144165039
    6. '   ' → logprob: -15.126932144165039
    7. ' ' → logprob: -16.12693214416504
    8. '  ' → logprob: -16.25193214416504
    9. '<|end|>' → logprob: -17.87693214416504
    10. '&m' → logprob: -18.25193214416504

Token 23: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09509240835905075
    2. '==' → logprob: -2.470092296600342
    3. '<|end|>' → logprob: -6.220092296600342
    4. ' ' → logprob: -6.470092296600342
    5. '=' → logprob: -7.095092296600342
    6. ' ' → logprob: -7.220092296600342
    7. ')' → logprob: -7.845092296600342
    8. '<|end|>' → logprob: -8.4700927734375
    9. '```' → logprob: -9.0950927734375
    10. '  ' → logprob: -9.5950927734375

Token 24: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28115037083625793
    2. '0' → logprob: -1.4061503410339355
    3. ' ' → logprob: -16.406150817871094
    4. '  ' → logprob: -16.406150817871094
    5. '   ' → logprob: -18.093650817871094
    6. '۰' → logprob: -18.156150817871094
    7. '=' → logprob: -18.343650817871094
    8. '<|end|>' → logprob: -18.656150817871094
    9. '<|end|>' → logprob: -18.906150817871094
    10. '_' → logprob: -19.218650817871094

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005929982289671898
    2. ' ' → logprob: -5.130929946899414
    3. '  ' → logprob: -14.568429946899414
    4. '   ' → logprob: -15.380929946899414
    5. ' ' → logprob: -15.818429946899414
    6. '۰' → logprob: -16.068429946899414
    7. '1' → logprob: -16.193429946899414
    8. '```' → logprob: -16.693429946899414
    9. '    ' → logprob: -17.443429946899414
    10. ')' → logprob: -17.755929946899414

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00034821697045117617
    2. '       ' → logprob: -8.375348091125488
    3. ':
' → logprob: -9.500348091125488
    4. '   ' → logprob: -10.250348091125488
    5. '):' → logprob: -12.625348091125488
    6. ' :' → logprob: -13.750348091125488
    7. ':return' → logprob: -13.750348091125488
    8. ',' → logprob: -15.000348091125488
    9. ':\' → logprob: -15.500348091125488
    10. '    ' → logprob: -15.500348091125488

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013445195509120822
    2. '   ' → logprob: -7.376344680786133
    3. ' break' → logprob: -7.376344680786133
    4. '	break' → logprob: -10.126344680786133
    5. '\n' → logprob: -10.626344680786133
    6. ':' → logprob: -11.501344680786133
    7. 'break' → logprob: -12.126344680786133
    8. '<|end|>' → logprob: -13.251344680786133
    9. '      ' → logprob: -13.626344680786133
    10. '	' → logprob: -13.876344680786133

Token 28: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.21810908615589142
    2. 'break' (adapté à ' break') → logprob: -2.218109130859375
    3. '       ' → logprob: -2.468109130859375
    4. '   ' → logprob: -6.218109130859375
    5. '	break' → logprob: -7.843109130859375
    6. '           ' → logprob: -11.968109130859375
    7. '_break' → logprob: -12.468109130859375
    8. '```' → logprob: -13.218109130859375
    9. '-break' → logprob: -13.718109130859375
    10. ' ' → logprob: -13.718109130859375

Token 29: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5598404407501221
    2. ':' → logprob: -1.059840440750122
    3. '\n' → logprob: -2.934840440750122
    4. ')' → logprob: -5.309840202331543
    5. '\' → logprob: -5.309840202331543
    6. '    
' → logprob: -5.809840202331543
    7. '<|end|>' → logprob: -5.809840202331543
    8. ' ' → logprob: -6.059840202331543
    9. '       ' → logprob: -6.434840202331543
    10. '  ' → logprob: -6.434840202331543

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06746078282594681
    2. '    
' → logprob: -2.942460775375366
    3. '\n' → logprob: -5.442461013793945
    4. '```' → logprob: -5.692461013793945
    5. '\' → logprob: -6.817461013793945
    6. '       ' → logprob: -7.192461013793945
    7. ')' → logprob: -7.567461013793945
    8. '#' → logprob: -7.942461013793945
    9. '
' → logprob: -7.942461013793945
    10. 'n' → logprob: -8.192461013793945

Token 31: ' black' (ID: 5960)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05890141800045967
    2. ' ' → logprob: -4.308901309967041
    3. '    ' → logprob: -4.558901309967041
    4. '\n' → logprob: -5.058901309967041
    5. '       ' → logprob: -5.183901309967041
    6. '[' → logprob: -5.558901309967041
    7. '    
' → logprob: -5.683901309967041
    8. '\' → logprob: -6.058901309967041
    9. 'print' → logprob: -6.308901309967041
    10. '```' → logprob: -6.558901309967041

Token 32: ' =' (ID: 314)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.15414120256900787
    2. '_' → logprob: -2.2791411876678467
    3. '_tiles' → logprob: -4.529141426086426
    4. '_s' → logprob: -4.654141426086426
    5. 'cells' → logprob: -6.154141426086426
    6. ' ' → logprob: -6.154141426086426
    7. '=' → logprob: -6.404141426086426
    8. '_h' → logprob: -6.654141426086426
    9. 'holes' → logprob: -6.904141426086426
    10. '_rooms' → logprob: -7.029141426086426

Token 33: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6645260453224182
    2. ' []' → logprob: -1.0395259857177734
    3. ' set' → logprob: -2.7895259857177734
    4. '[' → logprob: -4.164525985717773
    5. ' ' → logprob: -4.164525985717773
    6. ' list' → logprob: -4.789525985717773
    7. '[]' → logprob: -5.414525985717773
    8. 'set' → logprob: -5.414525985717773
    9. '[int' → logprob: -5.414525985717773
    10. ' int' → logprob: -5.914525985717773

Token 34: 'tuple' (ID: 52834)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4185291528701782
    2. '0' → logprob: -1.6685291528701782
    3. 'int' → logprob: -2.9185290336608887
    4. ' list' → logprob: -3.6685290336608887
    5. '[]' → logprob: -3.6685290336608887
    6. ']' → logprob: -4.043529033660889
    7. '[int' → logprob: -4.918529033660889
    8. '[' → logprob: -5.043529033660889
    9. ' [' → logprob: -5.293529033660889
    10. '   ' → logprob: -6.168529033660889

Token 35: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0025317834224551916
    2. '(' → logprob: -6.877532005310059
    3. '(int' → logprob: -7.252532005310059
    4. '(input' → logprob: -7.752532005310059
    5. 'map' → logprob: -8.252532005310059
    6. '()' → logprob: -9.502532005310059
    7. ' map' → logprob: -12.127532005310059
    8. '(
' → logprob: -12.252532005310059
    9. '(sorted' → logprob: -12.377532005310059
    10. 'input' → logprob: -13.002532005310059

Token 36: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005593468667939305
    2. '(' → logprob: -7.625559329986572
    3. 'int' → logprob: -10.50055980682373
    4. ',int' → logprob: -11.00055980682373
    5. '[int' → logprob: -11.62555980682373
    6. '<int' → logprob: -11.87555980682373
    7. ')' → logprob: -12.37555980682373
    8. '=int' → logprob: -12.75055980682373
    9. ']int' → logprob: -13.12555980682373
    10. '(
' → logprob: -14.00055980682373

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2562568187713623
    2. ',input' → logprob: -1.5062568187713623
    3. '(input' → logprob: -5.881257057189941
    4. '(' → logprob: -7.256257057189941
    5. 'input' → logprob: -8.506257057189941
    6. '(),' → logprob: -8.506257057189941
    7. ' ,' → logprob: -8.881257057189941
    8. ',int' → logprob: -8.881257057189941
    9. ',i' → logprob: -10.506257057189941
    10. ',x' → logprob: -11.256257057189941

Token 38: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.17979034781455994
    2. 'input' → logprob: -1.8047903776168823
    3. ')' → logprob: -10.554790496826172
    4. '(input' → logprob: -11.929790496826172
    5. ' )' → logprob: -12.679790496826172
    6. '[input' → logprob: -12.929790496826172
    7. '=input' → logprob: -13.179790496826172
    8. ',input' → logprob: -13.429790496826172
    9. '	input' → logprob: -14.054790496826172
    10. '_input' → logprob: -14.429790496826172

Token 39: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.368984107510187e-05
    2. '()' → logprob: -10.375033378601074
    3. ' ().' → logprob: -14.125033378601074
    4. ')' → logprob: -14.375033378601074
    5. '()))' → logprob: -14.875033378601074
    6. '.' → logprob: -15.250033378601074
    7. '())' → logprob: -15.500033378601074
    8. '(' → logprob: -15.625033378601074
    9. '()
' → logprob: -17.00003433227539
    10. '.readline' → logprob: -17.50003433227539

Token 40: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. 'strip' → logprob: -14.375000953674316
    3. 'spl' → logprob: -16.75
    4. ' split' → logprob: -17.125
    5. '(split' → logprob: -17.25
    6. 'rstrip' → logprob: -17.625
    7. '.split' → logprob: -20.75
    8. ')' → logprob: -21.0
    9. 'plit' → logprob: -21.25
    10. 's' → logprob: -21.5

Token 41: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.02245536632835865
    2. '))' → logprob: -4.022455215454102
    3. '())' → logprob: -5.772455215454102
    4. '()' → logprob: -7.147455215454102
    5. '(' → logprob: -8.272455215454102
    6. '()))
' → logprob: -9.647455215454102
    7. ')' → logprob: -10.397455215454102
    8. '())))' → logprob: -11.397455215454102
    9. '()),' → logprob: -12.022455215454102
    10. '('' → logprob: -12.022455215454102

Token 42: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4353310167789459
    2. ')' → logprob: -1.5603309869766235
    3. 'for' → logprob: -2.685331106185913
    4. ' for' → logprob: -2.935331106185913
    5. '   ' → logprob: -5.310330867767334
    6. '()]' → logprob: -5.310330867767334
    7. '(' → logprob: -5.435330867767334
    8. ')]' → logprob: -5.685330867767334
    9. '())' → logprob: -6.310330867767334
    10. ']' → logprob: -6.935330867767334

Token 43: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0024483040906488895
    2. '_' → logprob: -6.752448081970215
    3. 'range' → logprob: -6.877448081970215
    4. ' _' → logprob: -8.627448081970215
    5. '_range' → logprob: -9.752448081970215
    6. '(range' → logprob: -12.502448081970215
    7. '	range' → logprob: -13.127448081970215
    8. ' ' → logprob: -13.377448081970215
    9. ' xrange' → logprob: -13.502448081970215
    10. ' rango' → logprob: -15.377448081970215

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07941591739654541
    2. 'in' → logprob: -3.204415798187256
    3. 'range' → logprob: -3.454415798187256
    4. ' range' → logprob: -5.579415798187256
    5. ' ' → logprob: -8.454416275024414
    6. '   ' → logprob: -10.329416275024414
    7. '	range' → logprob: -10.454416275024414
    8. '  ' → logprob: -10.579416275024414
    9. '    ' → logprob: -10.704416275024414
    10. '	in' → logprob: -11.579416275024414

Token 45: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01816176250576973
    2. ' range' → logprob: -4.018161773681641
    3. '[' → logprob: -12.64316177368164
    4. '	range' → logprob: -13.39316177368164
    5. '(range' → logprob: -13.51816177368164
    6. '   ' → logprob: -13.51816177368164
    7. ' ' → logprob: -13.64316177368164
    8. 'r' → logprob: -13.89316177368164
    9. 'rang' → logprob: -14.14316177368164
    10. '  ' → logprob: -15.14316177368164

Token 46: '(n' (ID: 2406)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.01872246339917183
    2. '(n' → logprob: -4.2687225341796875
    3. '(' → logprob: -5.3937225341796875
    4. ' (' → logprob: -13.018722534179688
    5. '(s' → logprob: -14.643722534179688
    6. 'm' → logprob: -14.893722534179688
    7. '(
' → logprob: -15.643722534179688
    8. '(M' → logprob: -16.018722534179688
    9. '(k' → logprob: -16.268722534179688
    10. ' m' → logprob: -16.893722534179688

Token 47: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.001741700922138989
    2. ']' → logprob: -6.626741886138916
    3. ')' → logprob: -7.876741886138916
    4. '   ' → logprob: -11.251741409301758
    5. ')]
' → logprob: -11.876741409301758
    6. ')])' → logprob: -12.626741409301758
    7. '])]' → logprob: -13.001741409301758
    8. ' )' → logprob: -13.126741409301758
    9. '')]' → logprob: -13.876741409301758
    10. '])' → logprob: -14.001741409301758

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06196298077702522
    2. '[' → logprob: -4.061963081359863
    3. 'white' → logprob: -4.061963081359863
    4. '```' → logprob: -4.186963081359863
    5. '    
' → logprob: -5.311963081359863
    6. '[]' → logprob: -7.311963081359863
    7. 'while' → logprob: -7.686963081359863
    8. ' white' → logprob: -7.686963081359863
    9. '<|end|>' → logprob: -7.686963081359863
    10. ' ' → logprob: -7.936963081359863

Token 49: ' white' (ID: 6461)
  Prédit: 'white'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'white' (adapté à ' white') → logprob: -0.34527602791786194
    2. '   ' → logprob: -1.4702759981155396
    3. ' white' → logprob: -3.095276117324829
    4. '    
' → logprob: -5.59527587890625
    5. 'w' → logprob: -6.34527587890625
    6. 'red' → logprob: -6.34527587890625
    7. '```' → logprob: -6.72027587890625
    8. '[' → logprob: -6.84527587890625
    9. 'result' → logprob: -7.09527587890625
    10. 'while' → logprob: -7.47027587890625

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016054311767220497
    2. '=' → logprob: -4.141054153442383
    3. ' ' → logprob: -12.266054153442383
    4. 's' → logprob: -12.391054153442383
    5. '_' → logprob: -12.516054153442383
    6. '[' → logprob: -13.766054153442383
    7. ',' → logprob: -13.766054153442383
    8. ')' → logprob: -14.141054153442383
    9. ' =[' → logprob: -14.391054153442383
    10. '=[]' → logprob: -14.516054153442383

Token 51: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4740907549858093
    2. ' [' → logprob: -0.9740907549858093
    3. ' ' → logprob: -12.724090576171875
    4. '[int' → logprob: -12.849090576171875
    5. '[(' → logprob: -12.974090576171875
    6. '[t' → logprob: -12.974090576171875
    7. ' [(' → logprob: -13.974090576171875
    8. '   ' → logprob: -15.099090576171875
    9. '[n' → logprob: -15.224090576171875
    10. '[list' → logprob: -15.224090576171875

Token 52: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.023723021149635315
    2. ' tuple' → logprob: -3.7737231254577637
    3. '(tuple' → logprob: -7.648723125457764
    4. 'tu' → logprob: -14.398722648620605
    5. 't' → logprob: -16.648723602294922
    6. '_tuple' → logprob: -16.773723602294922
    7. 'Tuple' → logprob: -17.523723602294922
    8. '(' → logprob: -17.648723602294922
    9. ' tuples' → logprob: -18.273723602294922
    10. '(t' → logprob: -18.398723602294922

Token 53: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.4498052223643754e-05
    2. '(' → logprob: -11.250014305114746
    3. ' (' → logprob: -14.125014305114746
    4. ',map' → logprob: -15.125014305114746
    5. '(int' → logprob: -15.625014305114746
    6. 'map' → logprob: -16.750015258789062
    7. '	map' → logprob: -17.250015258789062
    8. '(m' → logprob: -17.500015258789062
    9. '.map' → logprob: -17.875015258789062
    10. '(tuple' → logprob: -17.875015258789062

Token 54: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -6.170270353322849e-05
    2. '<int' → logprob: -10.625061988830566
    3. '[int' → logprob: -11.250061988830566
    4. ',int' → logprob: -11.375061988830566
    5. '=int' → logprob: -12.000061988830566
    6. ']int' → logprob: -13.000061988830566
    7. 'int' → logprob: -13.500061988830566
    8. ' (' → logprob: -13.750061988830566
    9. '(' → logprob: -13.750061988830566
    10. ':int' → logprob: -14.750061988830566

Token 55: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04156186804175377
    2. ',int' → logprob: -3.2915618419647217
    3. ',' → logprob: -5.916562080383301
    4. '[int' → logprob: -8.0415620803833
    5. '=int' → logprob: -8.5415620803833
    6. '<int' → logprob: -8.9165620803833
    7. '(' → logprob: -9.4165620803833
    8. ':int' → logprob: -10.6665620803833
    9. ' (' → logprob: -11.1665620803833
    10. '   ' → logprob: -11.4165620803833

Token 56: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -8.85235276655294e-05
    2. ' int' → logprob: -9.375088691711426
    3. '(int' → logprob: -13.000088691711426
    4. '<int' → logprob: -14.250088691711426
    5. '[int' → logprob: -15.000088691711426
    6. 'input' → logprob: -15.750088691711426
    7. ',int' → logprob: -16.25008773803711
    8. ']int' → logprob: -16.75008773803711
    9. '=int' → logprob: -16.87508773803711
    10. 'ints' → logprob: -17.12508773803711

Token 57: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.512236498361744e-07
    2. ' ().' → logprob: -15.250000953674316
    3. '()' → logprob: -16.0
    4. '.' → logprob: -16.5
    5. '(.' → logprob: -17.875
    6. '(int' → logprob: -18.375
    7. '(' → logprob: -18.625
    8. '[].' → logprob: -19.0
    9. '().__' → logprob: -19.25
    10. '()(' → logprob: -19.75

Token 58: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6240566083070007e-06
    2. ' split' → logprob: -14.125001907348633
    3. '(split' → logprob: -15.000001907348633
    4. 'spl' → logprob: -15.250001907348633
    5. 'plit' → logprob: -15.875001907348633
    6. '```' → logprob: -16.750001907348633
    7. 'int' → logprob: -17.625001907348633
    8. '.split' → logprob: -18.000001907348633
    9. '_split' → logprob: -18.375001907348633
    10. 'read' → logprob: -18.625001907348633

Token 59: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00031699295504949987
    2. '())' → logprob: -8.375316619873047
    3. '()' → logprob: -9.625316619873047
    4. '()[' → logprob: -11.750316619873047
    5. '))' → logprob: -12.375316619873047
    6. '()))
' → logprob: -13.250316619873047
    7. '()
' → logprob: -13.750316619873047
    8. '().' → logprob: -14.000316619873047
    9. '())).' → logprob: -14.000316619873047
    10. '()));' → logprob: -14.000316619873047

Token 60: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.68475741147995
    2. 'for' → logprob: -0.93475741147995
    3. ')' → logprob: -2.3097574710845947
    4. '()' → logprob: -5.809757232666016
    5. '   ' → logprob: -7.934757232666016
    6. ')]' → logprob: -8.684757232666016
    7. ']' → logprob: -9.309757232666016
    8. '(' → logprob: -9.809757232666016
    9. '(m' → logprob: -10.309757232666016
    10. '(n' → logprob: -10.934757232666016

Token 61: ' _' (ID: 1175)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07746665179729462
    2. ' range' → logprob: -3.0774667263031006
    3. '(m' → logprob: -4.3274664878845215
    4. '(' → logprob: -4.4524664878845215
    5. ' m' → logprob: -6.2024664878845215
    6. '(range' → logprob: -7.0774664878845215
    7. ' _' → logprob: -8.07746696472168
    8. '_' → logprob: -8.45246696472168
    9. 'range' → logprob: -9.32746696472168
    10. ' ' → logprob: -9.45246696472168

Token 62: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2841533422470093
    2. 'range' → logprob: -1.5341533422470093
    3. '(m' → logprob: -3.784153461456299
    4. '(range' → logprob: -5.034153461456299
    5. '(' → logprob: -6.659153461456299
    6. 'm' → logprob: -7.159153461456299
    7. ' m' → logprob: -8.28415298461914
    8. ' (' → logprob: -8.78415298461914
    9. '_range' → logprob: -13.40915298461914
    10. '	range' → logprob: -13.78415298461914

Token 63: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.48297983407974243
    2. 'range' → logprob: -0.9829798340797424
    3. 'm' → logprob: -4.732979774475098
    4. ' m' → logprob: -9.857979774475098
    5. '(range' → logprob: -11.732979774475098
    6. '(m' → logprob: -14.357979774475098
    7. '[' → logprob: -14.482979774475098
    8. ' ' → logprob: -14.982979774475098
    9. '[m' → logprob: -15.107979774475098
    10. '	range' → logprob: -15.107979774475098

Token 64: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0001246348983841017
    2. '(' → logprob: -9.62512493133545
    3. ' (' → logprob: -9.87512493133545
    4. 'm' → logprob: -12.37512493133545
    5. ' m' → logprob: -13.00012493133545
    6. '   ' → logprob: -15.37512493133545
    7. '(n' → logprob: -16.375123977661133
    8. '	m' → logprob: -16.500123977661133
    9. '(
' → logprob: -16.750123977661133
    10. '(M' → logprob: -16.875123977661133

Token 65: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004178025701548904
    2. ')' → logprob: -8.500417709350586
    3. ']' → logprob: -8.500417709350586
    4. '])]' → logprob: -12.375417709350586
    5. ')])' → logprob: -13.000417709350586
    6. '))' → logprob: -13.875417709350586
    7. '])' → logprob: -14.000417709350586
    8. ' )' → logprob: -14.375417709350586
    9. '')]' → logprob: -14.500417709350586
    10. ')]
' → logprob: -15.000417709350586

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17742876708507538
    2. '
' → logprob: -2.052428722381592
    3. '    
' → logprob: -4.427428722381592
    4. '<|end|>' → logprob: -4.677428722381592
    5. '```' → logprob: -5.802428722381592
    6. ':' → logprob: -6.552428722381592
    7. '  
' → logprob: -6.802428722381592
    8. '[' → logprob: -6.927428722381592
    9. '  ' → logprob: -7.802428722381592
    10. ')' → logprob: -7.802428722381592

Token 67: ' points' (ID: 5571)
  Prédit: 'black'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'black' → logprob: -1.2594188451766968
    2. '   ' → logprob: -1.3844188451766968
    3. 'result' → logprob: -1.5094188451766968
    4. 's' → logprob: -3.3844189643859863
    5. 'count' → logprob: -3.3844189643859863
    6. 'for' → logprob: -3.8844189643859863
    7. 'found' → logprob: -4.384418964385986
    8. 'res' → logprob: -4.509418964385986
    9. 'answer' → logprob: -4.634418964385986
    10. 'b' → logprob: -4.634418964385986

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07642798870801926
    2. '=' → logprob: -2.826427936553955
    3. '.' → logprob: -5.201427936553955
    4. '_' → logprob: -6.201427936553955
    5. ' ' → logprob: -6.951427936553955
    6. ')' → logprob: -6.951427936553955
    7. '<|end|>' → logprob: -6.951427936553955
    8. '1' → logprob: -7.576427936553955
    9. ':' → logprob: -7.701427936553955
    10. '[:]' → logprob: -8.076428413391113

Token 69: ' black' (ID: 5960)
  Prédit: ' black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.1636192947626114
    2. 'black' → logprob: -2.03861927986145
    3. ' set' → logprob: -4.538619518280029
    4. 'set' → logprob: -5.288619518280029
    5. ' white' → logprob: -6.663619518280029
    6. ' []' → logprob: -6.788619518280029
    7. '[]' → logprob: -6.913619518280029
    8. '[' → logprob: -7.538619518280029
    9. ' [' → logprob: -8.038619041442871
    10. '   ' → logprob: -8.413619041442871

Token 70: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5236327052116394
    2. ' +' → logprob: -0.8986327052116394
    3. '[:]' → logprob: -8.523633003234863
    4. '[' → logprob: -9.398633003234863
    5. '<|end|>' → logprob: -9.398633003234863
    6. '+[' → logprob: -9.898633003234863
    7. ' +
' → logprob: -10.523633003234863
    8. '[:' → logprob: -10.898633003234863
    9. '.copy' → logprob: -11.023633003234863
    10. '[::-' → logprob: -11.148633003234863

Token 71: ' white' (ID: 6461)
  Prédit: 'white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'white' → logprob: -0.38687628507614136
    2. ' white' → logprob: -1.1368763446807861
    3. '白' → logprob: -13.511876106262207
    4. '[' → logprob: -13.636876106262207
    5. ' ' → logprob: -13.886876106262207
    6. '.white' → logprob: -14.886876106262207
    7. 'wh' → logprob: -15.011876106262207
    8. 'black' → logprob: -15.136876106262207
    9. '   ' → logprob: -15.636876106262207
    10. '_white' → logprob: -15.886876106262207

Token 72: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05896896868944168
    2. '   ' → logprob: -3.683969020843506
    3. '    
' → logprob: -4.683969020843506
    4. '<|end|>' → logprob: -4.808969020843506
    5. '\n' → logprob: -5.183969020843506
    6. '.sort' → logprob: -6.558969020843506
    7. '
' → logprob: -6.683969020843506
    8. '  
' → logprob: -6.808969020843506
    9. '[' → logprob: -6.933969020843506
    10. '.' → logprob: -7.058969020843506

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1354493796825409
    2. '
' → logprob: -2.7604494094848633
    3. '    
' → logprob: -3.1354494094848633
    4. '```' → logprob: -5.385449409484863
    5. '<|end|>' → logprob: -5.885449409484863
    6. ' points' → logprob: -6.385449409484863
    7. ' 
' → logprob: -6.635449409484863
    8. '\n' → logprob: -6.760449409484863
    9. ',' → logprob: -7.010449409484863
    10. 'points' → logprob: -7.010449409484863

Token 74: ' def' (ID: 1056)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.4335211515426636
    2. 'conv' → logprob: -2.558521270751953
    3. 'black' → logprob: -2.558521270751953
    4. 'graph' → logprob: -2.683521270751953
    5. 'dp' → logprob: -2.933521270751953
    6. 'points' → logprob: -2.933521270751953
    7. 'for' → logprob: -3.058521270751953
    8. 'count' → logprob: -3.308521270751953
    9. 'from' → logprob: -3.433521270751953
    10. '   ' → logprob: -3.433521270751953

Token 75: ' side' (ID: 4307)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.8862937688827515
    2. ' distance' → logprob: -2.011293888092041
    3. ' calc' → logprob: -2.636293888092041
    4. ' is' → logprob: -2.636293888092041
    5. ' cross' → logprob: -2.886293888092041
    6. ' area' → logprob: -2.886293888092041
    7. ' calculate' → logprob: -3.011293888092041
    8. ' convex' → logprob: -3.511293888092041
    9. ' get' → logprob: -3.636293888092041
    10. 'dist' → logprob: -4.136293888092041

Token 76: '(p' (ID: 2407)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1613338589668274
    2. '(p' → logprob: -3.0363337993621826
    3. '(point' → logprob: -3.2863337993621826
    4. ' (' → logprob: -4.036334037780762
    5. '(points' → logprob: -4.411334037780762
    6. '((' → logprob: -4.661334037780762
    7. '(a' → logprob: -4.786334037780762
    8. '(line' → logprob: -5.536334037780762
    9. '(Point' → logprob: -5.661334037780762
    10. '(A' → logprob: -6.411334037780762

Token 77: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006513221189379692
    2. ',p' → logprob: -5.2565131187438965
    3. ',a' → logprob: -8.131513595581055
    4. ' ,' → logprob: -8.381513595581055
    5. 'oints' → logprob: -8.631513595581055
    6. 'oint' → logprob: -8.631513595581055
    7. 'a' → logprob: -8.756513595581055
    8. '(p' → logprob: -9.881513595581055
    9. 'A' → logprob: -10.881513595581055
    10. ',A' → logprob: -11.006513595581055

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027111053350381553
    2. ',p' → logprob: -8.50027084350586
    3. ' ,' → logprob: -9.62527084350586
    4. '):' → logprob: -14.87527084350586
    5. '‌,' → logprob: -15.37527084350586
    6. '<|end|>' → logprob: -15.37527084350586
    7. 'p' → logprob: -15.62527084350586
    8. ' p' → logprob: -15.87527084350586
    9. 's' → logprob: -16.25027084350586
    10. ' ' → logprob: -16.50027084350586

Token 79: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.34848228096961975
    2. 'p' → logprob: -1.2234822511672974
    3. ' ' → logprob: -10.723482131958008
    4. '  ' → logprob: -12.848482131958008
    5. ',' → logprob: -12.973482131958008
    6. '	p' → logprob: -13.098482131958008
    7. '   ' → logprob: -13.098482131958008
    8. '<|end|>' → logprob: -13.098482131958008
    9. '    ' → logprob: -14.410982131958008
    10. ',p' → logprob: -14.535982131958008

Token 80: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5306431651115417
    2. 'oints' → logprob: -2.0306432247161865
    3. 'oint' → logprob: -2.1556432247161865
    4. ',p' → logprob: -2.5306432247161865
    5. '1' → logprob: -2.9056432247161865
    6. 'p' → logprob: -4.280642986297607
    7. '2' → logprob: -4.405642986297607
    8. 'int' → logprob: -6.280642986297607
    9. ' ,' → logprob: -7.655642986297607
    10. '   ' → logprob: -7.780642986297607

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.961759259458631e-06
    2. ' ,' → logprob: -12.625004768371582
    3. ',p' → logprob: -14.000004768371582
    4. '):' → logprob: -14.625004768371582
    5. 'p' → logprob: -16.5000057220459
    6. ')' → logprob: -16.5000057220459
    7. ' ' → logprob: -17.8750057220459
    8. ' p' → logprob: -18.6250057220459
    9. '‌,' → logprob: -18.6250057220459
    10. '),' → logprob: -18.7500057220459

Token 82: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.14273932576179504
    2. 'p' → logprob: -2.0177392959594727
    3. ' ' → logprob: -9.767739295959473
    4. '	p' → logprob: -13.017739295959473
    5. '  ' → logprob: -13.892739295959473
    6. '<|end|>' → logprob: -14.267739295959473
    7. '   ' → logprob: -14.392739295959473
    8. ',' → logprob: -14.705239295959473
    9. ' point' → logprob: -15.455239295959473
    10. ')' → logprob: -15.455239295959473

Token 83: '):
' (ID: 1883)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.42358019948005676
    2. '1' → logprob: -1.9235801696777344
    3. '):' → logprob: -2.0485801696777344
    4. ')' → logprob: -3.1735801696777344
    5. ',' → logprob: -3.7985801696777344
    6. 'oint' → logprob: -5.423580169677734
    7. '2' → logprob: -7.048580169677734
    8. 'oints' → logprob: -7.798580169677734
    9. '):
' → logprob: -8.923580169677734
    10. '),' → logprob: -10.548580169677734

Token 84: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7048097848892212
    2. '(' → logprob: -1.0798097848892212
    3. '):' → logprob: -2.9548096656799316
    4. '   ' → logprob: -3.4548096656799316
    5. '    ' → logprob: -3.7048096656799316
    6. ')' → logprob: -4.204809665679932
    7. ',' → logprob: -4.579809665679932
    8. '       ' → logprob: -4.579809665679932
    9. ' :' → logprob: -4.829809665679932
    10. ' ' → logprob: -5.454809665679932

Token 85: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16771285235881805
    2. '    ' → logprob: -2.917712926864624
    3. ':' → logprob: -3.667712926864624
    4. '   ' → logprob: -3.667712926864624
    5. '(' → logprob: -4.167712688446045
    6. ',' → logprob: -4.542712688446045
    7. ')' → logprob: -4.792712688446045
    8. ' (' → logprob: -4.792712688446045
    9. '  ' → logprob: -6.542712688446045
    10. ' return' → logprob: -7.042712688446045

Token 86: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07924777269363403
    2. '(p' → logprob: -2.5792477130889893
    3. '(' → logprob: -8.07924747467041
    4. ' ((' → logprob: -11.32924747467041
    5. '((' → logprob: -11.57924747467041
    6. ' ' → logprob: -11.57924747467041
    7. ' p' → logprob: -11.82924747467041
    8. '1' → logprob: -11.95424747467041
    9. '0' → logprob: -13.57924747467041
    10. '   ' → logprob: -14.70424747467041

Token 87: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0015387886669486761
    2. ' p' → logprob: -6.8765387535095215
    3. '(p' → logprob: -7.6265387535095215
    4. ' (' → logprob: -11.25153923034668
    5. '	p' → logprob: -13.37653923034668
    6. '   ' → logprob: -13.50153923034668
    7. '(' → logprob: -13.50153923034668
    8. 'x' → logprob: -14.00153923034668
    9. ')p' → logprob: -16.12653923034668
    10. ')' → logprob: -16.62653923034668

Token 88: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0028871409595012665
    2. '2' → logprob: -6.25288724899292
    3. '1' → logprob: -7.00288724899292
    4. '[
' → logprob: -10.502886772155762
    5. '-' → logprob: -12.627886772155762
    6. '0' → logprob: -12.877886772155762
    7. ')' → logprob: -13.002886772155762
    8. 'x' → logprob: -13.377886772155762
    9. 'y' → logprob: -13.502886772155762
    10. 's' → logprob: -13.502886772155762

Token 89: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9862216504407115e-05
    2. 'x' → logprob: -11.625020027160645
    3. 'y' → logprob: -12.625020027160645
    4. '-' → logprob: -13.125020027160645
    5. '1' → logprob: -13.375020027160645
    6. '0' → logprob: -13.625020027160645
    7. '[
' → logprob: -13.625020027160645
    8. ' ' → logprob: -14.500020027160645
    9. ' [' → logprob: -14.875020027160645
    10. ')' → logprob: -15.250020027160645

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014287306112237275
    2. '1' → logprob: -8.875143051147461
    3. 'x' → logprob: -13.625143051147461
    4. '[' → logprob: -14.125143051147461
    5. '-' → logprob: -15.125143051147461
    6. '
' → logprob: -15.375143051147461
    7. ' ' → logprob: -15.625143051147461
    8. '

' → logprob: -15.812643051147461
    9. '```' → logprob: -16.43764305114746
    10. '   ' → logprob: -17.37514305114746

Token 91: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0181843563914299
    2. '-' → logprob: -4.018184185028076
    3. '<|end|>' → logprob: -10.768184661865234
    4. '-p' → logprob: -11.643184661865234
    5. ' ' → logprob: -13.018184661865234
    6. ' ' → logprob: -14.018184661865234
    7. ')' → logprob: -14.018184661865234
    8. ' –' → logprob: -16.018184661865234
    9. ' p' → logprob: -16.143184661865234
    10. '<|end|>' → logprob: -16.643184661865234

Token 92: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12710459530353546
    2. ' p' → logprob: -2.1271045207977295
    3. '<|end|>' → logprob: -8.752104759216309
    4. ' ' → logprob: -11.627104759216309
    5. '<|end|>' → logprob: -12.752104759216309
    6. '	p' → logprob: -12.877104759216309
    7. ')' → logprob: -13.627104759216309
    8. ')p' → logprob: -13.877104759216309
    9. '_p' → logprob: -15.252104759216309
    10. '  ' → logprob: -15.502104759216309

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1565985083580017
    2. '0' → logprob: -2.0315985679626465
    3. '[' → logprob: -4.2815985679626465
    4. ' ' → logprob: -12.406598091125488
    5. '```' → logprob: -13.781598091125488
    6. '   ' → logprob: -15.031598091125488
    7. '	' → logprob: -15.781598091125488
    8. '' → logprob: -15.781598091125488
    9. ' [' → logprob: -16.031599044799805
    10. ')' → logprob: -16.531599044799805

Token 94: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001601539261173457
    2. '0' → logprob: -8.750160217285156
    3. ')' → logprob: -14.750160217285156
    4. '][' → logprob: -14.750160217285156
    5. '[
' → logprob: -14.875160217285156
    6. '1' → logprob: -15.375160217285156
    7. ']' → logprob: -16.625160217285156
    8. 'x' → logprob: -17.125160217285156
    9. '```' → logprob: -17.125160217285156
    10. '(' → logprob: -17.750160217285156

Token 95: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.625003814697266
    3. '[' → logprob: -15.062503814697266
    4. '1' → logprob: -16.937503814697266
    5. '۰' → logprob: -17.000003814697266
    6. '
' → logprob: -17.125003814697266
    7. ']' → logprob: -17.812503814697266
    8. '```' → logprob: -17.875003814697266
    9. ')' → logprob: -18.125003814697266
    10. '   ' → logprob: -18.562503814697266

Token 96: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09867769479751587
    2. ')*(' → logprob: -2.473677635192871
    3. ')*' → logprob: -4.723677635192871
    4. ' )' → logprob: -7.223677635192871
    5. '*)' → logprob: -10.223677635192871
    6. '*' → logprob: -11.098677635192871
    7. '   ' → logprob: -12.098677635192871
    8. ')(' → logprob: -12.098677635192871
    9. ' ' → logprob: -12.973677635192871
    10. '）' → logprob: -13.098677635192871

Token 97: '*(' (ID: 14793)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4048270881175995
    2. '*' → logprob: -1.1548271179199219
    3. '*(' → logprob: -4.029827117919922
    4. ' *(' → logprob: -11.654827117919922
    5. '*p' → logprob: -12.779827117919922
    6. ' ' → logprob: -13.404827117919922
    7. ')*(' → logprob: -13.404827117919922
    8. ' *
' → logprob: -14.154827117919922
    9. ')' → logprob: -14.404827117919922
    10. ' ' → logprob: -14.529827117919922

Token 98: 'p' (ID: 79)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.47456255555152893
    2. 'p' → logprob: -0.9745625257492065
    3. ' p' → logprob: -8.599562644958496
    4. ' (' → logprob: -8.724562644958496
    5. '(' → logprob: -9.224562644958496
    6. '   ' → logprob: -10.974562644958496
    7. '	p' → logprob: -11.599562644958496
    8. '-p' → logprob: -12.849562644958496
    9. '[p' → logprob: -13.099562644958496
    10. '(
' → logprob: -13.349562644958496

Token 99: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.790129555156454e-05
    2. '1' → logprob: -9.625067710876465
    3. '-' → logprob: -13.500067710876465
    4. 'y' → logprob: -15.875067710876465
    5. ']' → logprob: -16.37506866455078
    6. '[
' → logprob: -16.62506866455078
    7. '][' → logprob: -17.37506866455078
    8. '
' → logprob: -17.37506866455078
    9. '2' → logprob: -17.75006866455078
    10. '

' → logprob: -17.75006866455078

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -14.375001907348633
    3. '

' → logprob: -14.500001907348633
    4. ' ' → logprob: -15.375001907348633
    5. '
' → logprob: -15.500001907348633
    6. '```' → logprob: -16.375001907348633
    7. ']' → logprob: -17.125001907348633
    8. '   ' → logprob: -17.312501907348633
    9. '-' → logprob: -17.562501907348633
    10. '' → logprob: -17.750001907348633

Token 101: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03057320974767208
    2. ' -' → logprob: -3.5305731296539307
    3. '-p' → logprob: -7.15557336807251
    4. '[' → logprob: -11.405572891235352
    5. '()-' → logprob: -11.905572891235352
    6. ')' → logprob: -12.530572891235352
    7. '-python' → logprob: -12.655572891235352
    8. '<|end|>' → logprob: -12.905572891235352
    9. ')-(' → logprob: -13.530572891235352
    10. '-m' → logprob: -13.905572891235352

Token 102: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0010332842357456684
    2. ' p' → logprob: -6.876033306121826
    3. '	p' → logprob: -15.876032829284668
    4. '<|end|>' → logprob: -16.126033782958984
    5. ')p' → logprob: -16.251033782958984
    6. ')' → logprob: -16.876033782958984
    7. ' ' → logprob: -17.126033782958984
    8. '   ' → logprob: -18.501033782958984
    9. '  ' → logprob: -18.626033782958984
    10. '-p' → logprob: -19.126033782958984

Token 103: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22558283805847168
    2. '1' → logprob: -1.6005828380584717
    3. '0' → logprob: -8.72558307647705
    4. '[
' → logprob: -13.10058307647705
    5. '```' → logprob: -13.72558307647705
    6. '<|end|>' → logprob: -14.10058307647705
    7. ' ' → logprob: -14.60058307647705
    8. '][' → logprob: -14.97558307647705
    9. ')' → logprob: -14.97558307647705
    10. 'p' → logprob: -15.22558307647705

Token 104: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.650518920039758e-06
    2. '0' → logprob: -12.625003814697266
    3. '[
' → logprob: -15.625003814697266
    4. '][' → logprob: -16.500003814697266
    5. '```' → logprob: -17.250003814697266
    6. '1' → logprob: -18.250003814697266
    7. ' [' → logprob: -18.500003814697266
    8. ']' → logprob: -18.500003814697266
    9. '.' → logprob: -19.000003814697266
    10. '(' → logprob: -19.875003814697266

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11284210532903671
    2. '0' → logprob: -2.237842082977295
    3. ' ' → logprob: -11.612842559814453
    4. '[' → logprob: -12.362842559814453
    5. ']' → logprob: -12.612842559814453
    6. '```' → logprob: -13.737842559814453
    7. '   ' → logprob: -14.737842559814453
    8. '<|end|>' → logprob: -15.112842559814453
    9. ')' → logprob: -15.237842559814453
    10. '])' → logprob: -15.237842559814453

Token 106: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009224193054251373
    2. ' )' → logprob: -7.125922203063965
    3. ')-' → logprob: -9.500922203063965
    4. ')-(' → logprob: -10.125922203063965
    5. '-' → logprob: -14.375922203063965
    6. ' ' → logprob: -15.000922203063965
    7. ')
' → logprob: -15.000922203063965
    8. '-)' → logprob: -15.500922203063965
    9. '')' → logprob: -15.500922203063965
    10. '    ' → logprob: -15.625922203063965

Token 107: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25272926688194275
    2. '-' → logprob: -1.5027292966842651
    3. '    ' → logprob: -8.752729415893555
    4. ' ' → logprob: -9.002729415893555
    5. ')' → logprob: -9.002729415893555
    6. ' -
' → logprob: -9.252729415893555
    7. '	' → logprob: -9.877729415893555
    8. ' ' → logprob: -10.002729415893555
    9. ')-(' → logprob: -10.252729415893555
    10. '        ' → logprob: -10.377729415893555

Token 108: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.20146021246910095
    2. '(p' → logprob: -1.7014602422714233
    3. '<|end|>' → logprob: -10.326459884643555
    4. '(' → logprob: -12.076459884643555
    5. ' ' → logprob: -12.451459884643555
    6. '(s' → logprob: -13.576459884643555
    7. '   ' → logprob: -13.701459884643555
    8. '(P' → logprob: -13.826459884643555
    9. '  ' → logprob: -15.576459884643555
    10. '	' → logprob: -15.576459884643555

Token 109: 'p' (ID: 79)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0028989017009735107
    2. ' (' → logprob: -6.252898693084717
    3. 'p' → logprob: -7.002898693084717
    4. '(' → logprob: -10.377899169921875
    5. ' p' → logprob: -10.627899169921875
    6. '   ' → logprob: -12.877899169921875
    7. ' ' → logprob: -14.002899169921875
    8. '  ' → logprob: -14.877899169921875
    9. '[p' → logprob: -14.877899169921875
    10. '	p' → logprob: -15.502899169921875

Token 110: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.696889623621246e-06
    2. '2' → logprob: -13.12500286102295
    3. '[
' → logprob: -14.62500286102295
    4. '1' → logprob: -17.375001907348633
    5. ')[' → logprob: -17.625001907348633
    6. '```' → logprob: -17.750001907348633
    7. ' [' → logprob: -17.875001907348633
    8. ' ' → logprob: -18.000001907348633
    9. '0' → logprob: -18.125001907348633
    10. '<|end|>' → logprob: -18.625001907348633

Token 111: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. '<|end|>' → logprob: -14.125001907348633
    3. '0' → logprob: -14.250001907348633
    4. ''[' → logprob: -15.625001907348633
    5. '1' → logprob: -16.125001907348633
    6. '[
' → logprob: -16.500001907348633
    7. ')[' → logprob: -16.625001907348633
    8. '<|end|>' → logprob: -16.625001907348633
    9. ')' → logprob: -17.125001907348633
    10. '][' → logprob: -17.250001907348633

Token 112: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12827590107917786
    2. '[' → logprob: -2.1282758712768555
    3. '1' → logprob: -6.6282758712768555
    4. ' ' → logprob: -11.003275871276855
    5. '```' → logprob: -13.878275871276855
    6. ')' → logprob: -14.003275871276855
    7. '<|end|>' → logprob: -14.003275871276855
    8. '[
' → logprob: -14.128275871276855
    9. '<|end|>' → logprob: -14.565775871276855
    10. '   ' → logprob: -14.628275871276855

Token 113: ']-' (ID: 27107)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6339370012283325
    2. '-' → logprob: -0.8839370012283325
    3. '-p' → logprob: -3.008936882019043
    4. ' -' → logprob: -5.133936882019043
    5. '<|end|>' → logprob: -6.883936882019043
    6. '-[' → logprob: -11.133936882019043
    7. '[p' → logprob: -11.383936882019043
    8. '-python' → logprob: -11.383936882019043
    9. '-user' → logprob: -12.133936882019043
    10. 'p' → logprob: -12.633936882019043

Token 114: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -8.113290095934644e-05
    2. '<|end|>' → logprob: -9.625081062316895
    3. ' p' → logprob: -11.125081062316895
    4. ')p' → logprob: -16.50008201599121
    5. '<p' → logprob: -17.00008201599121
    6. '(p' → logprob: -17.12508201599121
    7. '<|end|>' → logprob: -17.37508201599121
    8. ''p' → logprob: -17.50008201599121
    9. ' ' → logprob: -17.62508201599121
    10. ')' → logprob: -18.00008201599121

Token 115: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002932894742116332
    2. '0' → logprob: -6.377933025360107
    3. '1' → logprob: -6.752933025360107
    4. '<|end|>' → logprob: -10.00293254852295
    5. 'p' → logprob: -12.37793254852295
    6. '```' → logprob: -12.75293254852295
    7. '][' → logprob: -13.12793254852295
    8. '<|end|>' → logprob: -13.12793254852295
    9. '2' → logprob: -13.50293254852295
    10. '[
' → logprob: -13.50293254852295

Token 116: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.098748053773306e-05
    2. '0' → logprob: -9.75006103515625
    3. '][' → logprob: -13.87506103515625
    4. '<|end|>' → logprob: -14.62506103515625
    5. '```' → logprob: -14.62506103515625
    6. '[
' → logprob: -15.50006103515625
    7. '1' → logprob: -15.62506103515625
    8. ')[' → logprob: -16.37506103515625
    9. '-' → logprob: -16.62506103515625
    10. '<|end|>' → logprob: -16.75006103515625

Token 117: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012558852904476225
    2. '[' → logprob: -9.000125885009766
    3. '1' → logprob: -13.875125885009766
    4. ' ' → logprob: -14.000125885009766
    5. '   ' → logprob: -15.500125885009766
    6. '```' → logprob: -16.500125885009766
    7. '<|end|>' → logprob: -17.250125885009766
    8. '-' → logprob: -17.750125885009766
    9. ']' → logprob: -17.875125885009766
    10. '	' → logprob: -18.000125885009766

Token 118: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.7149556279182434
    2. ')' → logprob: -1.3399555683135986
    3. '])*' → logprob: -2.3399555683135986
    4. '[' → logprob: -2.8399555683135986
    5. ')p' → logprob: -3.8399555683135986
    6. '0' → logprob: -3.8399555683135986
    7. ']*' → logprob: -4.089955806732178
    8. ')*' → logprob: -4.214955806732178
    9. ']' → logprob: -4.714955806732178
    10. 'p' → logprob: -5.464955806732178

Token 119: '*(' (ID: 14793)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00023858259373810142
    2. '*(' → logprob: -8.750238418579102
    3. ' (' → logprob: -10.125238418579102
    4. 'p' → logprob: -11.375238418579102
    5. '[p' → logprob: -11.750238418579102
    6. '(' → logprob: -11.750238418579102
    7. '0' → logprob: -12.375238418579102
    8. '(x' → logprob: -13.000238418579102
    9. ')' → logprob: -13.375238418579102
    10. '*' → logprob: -13.625238418579102

Token 120: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005244191270321608
    2. ' p' → logprob: -5.255244255065918
    3. '(p' → logprob: -11.755244255065918
    4. ' (' → logprob: -13.505244255065918
    5. '(' → logprob: -14.630244255065918
    6. ')p' → logprob: -15.755244255065918
    7. ' ' → logprob: -15.755244255065918
    8. '[' → logprob: -16.2552433013916
    9. '[p' → logprob: -16.6302433013916
    10. ')' → logprob: -16.8802433013916

Token 121: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '[
' → logprob: -15.75
    3. '2' → logprob: -16.5
    4. '1' → logprob: -16.625
    5. '```' → logprob: -18.25
    6. ')[' → logprob: -18.375
    7. ' [' → logprob: -18.625
    8. '0' → logprob: -18.875
    9. '][' → logprob: -19.125
    10. ')' → logprob: -19.375

Token 122: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020461321400944144
    2. '[' → logprob: -8.500205039978027
    3. ' ' → logprob: -14.375205039978027
    4. '```' → logprob: -15.875205039978027
    5. '   ' → logprob: -16.62520408630371
    6. '1' → logprob: -16.75020408630371
    7. '2' → logprob: -16.87520408630371
    8. '۰' → logprob: -17.37520408630371
    9. 'x' → logprob: -17.50020408630371
    10. '][' → logprob: -18.00020408630371

Token 123: ']-' (ID: 27107)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.139963760972023
    2. '-' → logprob: -2.1399638652801514
    3. '-p' → logprob: -5.014963626861572
    4. ' -' → logprob: -5.139963626861572
    5. '-[' → logprob: -7.889963626861572
    6. '-)' → logprob: -12.01496410369873
    7. ')' → logprob: -12.13996410369873
    8. ' ' → logprob: -12.26496410369873
    9. '-
' → logprob: -12.51496410369873
    10. '–' → logprob: -12.51496410369873

Token 124: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.729906196298543e-06
    2. ' p' → logprob: -11.625009536743164
    3. '1' → logprob: -14.500009536743164
    4. '[' → logprob: -16.000009536743164
    5. '0' → logprob: -16.375009536743164
    6. ')p' → logprob: -17.750009536743164
    7. ')' → logprob: -18.000009536743164
    8. '   ' → logprob: -18.000009536743164
    9. '```' → logprob: -18.250009536743164
    10. ' ' → logprob: -18.750009536743164

Token 125: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07893308252096176
    2. '[' → logprob: -2.578933000564575
    3. ' ' → logprob: -11.203932762145996
    4. '1' → logprob: -11.828932762145996
    5. '][' → logprob: -11.828932762145996
    6. '   ' → logprob: -12.328932762145996
    7. '```' → logprob: -13.078932762145996
    8. ']' → logprob: -13.203932762145996
    9. '-' → logprob: -13.703932762145996
    10. '2' → logprob: -13.828932762145996

Token 126: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009429076453670859
    2. '0' → logprob: -7.000942707061768
    3. '-' → logprob: -11.125943183898926
    4. '][' → logprob: -12.250943183898926
    5. '.' → logprob: -12.875943183898926
    6. ']' → logprob: -13.125943183898926
    7. '[
' → logprob: -13.250943183898926
    8. '```' → logprob: -13.500943183898926
    9. ' ' → logprob: -13.875943183898926
    10. '   ' → logprob: -14.000943183898926

Token 127: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.875003814697266
    3. '   ' → logprob: -14.000003814697266
    4. '[' → logprob: -15.625003814697266
    5. '  ' → logprob: -15.750003814697266
    6. '```' → logprob: -15.750003814697266
    7. '    ' → logprob: -17.375003814697266
    8. '1' → logprob: -17.562503814697266
    9. ']' → logprob: -17.687503814697266
    10. '۰' → logprob: -18.500003814697266

Token 128: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10064224153757095
    2. '])' → logprob: -2.350642204284668
    3. ')])' → logprob: -8.475642204284668
    4. ')]' → logprob: -9.225642204284668
    5. '))' → logprob: -10.225642204284668
    6. '1' → logprob: -10.725642204284668
    7. ']' → logprob: -10.975642204284668
    8. ' )' → logprob: -11.100642204284668
    9. '0' → logprob: -11.350642204284668
    10. '])]' → logprob: -11.600642204284668

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03320414200425148
    2. ':' → logprob: -4.033204078674316
    3. '
' → logprob: -4.908204078674316
    4. '    
' → logprob: -6.158204078674316
    5. ' ' → logprob: -7.033204078674316
    6. ')' → logprob: -7.033204078674316
    7. 'def' → logprob: -7.533204078674316
    8. '(' → logprob: -7.533204078674316
    9. ' 
' → logprob: -7.658204078674316
    10. ' for' → logprob: -7.783204078674316

Token 130: ' def' (ID: 1056)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.7251983880996704
    2. 'conv' → logprob: -1.2251983880996704
    3. 'def' (adapté à ' def') → logprob: -2.975198268890381
    4. 'for' → logprob: -3.225198268890381
    5. 'ch' → logprob: -3.475198268890381
    6. 'inside' → logprob: -4.100198268890381
    7. 'ans' → logprob: -4.350198268890381
    8. 'result' → logprob: -4.350198268890381
    9. 'res' → logprob: -4.475198268890381
    10. 'answer' → logprob: -4.600198268890381

Token 131: ' can' (ID: 665)
  Prédit: ' convex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' convex' → logprob: -0.3335193991661072
    2. ' is' → logprob: -1.833519458770752
    3. ' point' → logprob: -3.833519458770752
    4. ' on' → logprob: -3.833519458770752
    5. ' distance' → logprob: -4.333519458770752
    6. ' cross' → logprob: -4.458519458770752
    7. ' area' → logprob: -4.583519458770752
    8. ' inside' → logprob: -5.083519458770752
    9. 'conv' → logprob: -5.208519458770752
    10. ' dist' → logprob: -5.208519458770752

Token 132: '_se' (ID: 7123)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08564493805170059
    2. '_place' → logprob: -3.9606449604034424
    3. ' _' → logprob: -4.335644721984863
    4. '_cover' → logprob: -4.960644721984863
    5. '_continue' → logprob: -5.460644721984863
    6. '_hold' → logprob: -5.585644721984863
    7. '_draw' → logprob: -5.585644721984863
    8. 'on' → logprob: -6.210644721984863
    9. '_choose' → logprob: -6.335644721984863
    10. '_insert' → logprob: -6.460644721984863

Token 133: 'parate' (ID: 60471)
  Prédit: 'parate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parate' → logprob: -0.3446156084537506
    2. 'p' → logprob: -1.4696155786514282
    3. 'perate' → logprob: -3.9696156978607178
    4. 'pare' → logprob: -4.094615459442139
    5. 'para' → logprob: -4.594615459442139
    6. 'par' → logprob: -4.969615459442139
    7. 'e' → logprob: -6.469615459442139
    8. 'pa' → logprob: -6.469615459442139
    9. 'lect' → logprob: -6.969615459442139
    10. 't' → logprob: -7.094615459442139

Token 134: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018354900181293488
    2. '(p' → logprob: -4.393354892730713
    3. ' (' → logprob: -5.643354892730713
    4. '(points' → logprob: -6.393354892730713
    5. '():' → logprob: -8.893355369567871
    6. '(s' → logprob: -9.018355369567871
    7. '(space' → logprob: -9.018355369567871
    8. '(a' → logprob: -9.268355369567871
    9. '(b' → logprob: -10.143355369567871
    10. '(`' → logprob: -10.893355369567871

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027463214471936226
    2. '   ' → logprob: -4.402463436126709
    3. '(' → logprob: -4.902463436126709
    4. '    ' → logprob: -5.402463436126709
    5. ' ' → logprob: -6.652463436126709
    6. '<|end|>' → logprob: -8.15246295928955
    7. '        
' → logprob: -8.40246295928955
    8. ' (' → logprob: -8.52746295928955
    9. '     ' → logprob: -8.90246295928955
    10. '      ' → logprob: -9.15246295928955

Token 136: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13994085788726807
    2. 'for' → logprob: -2.2649407386779785
    3. '   ' → logprob: -4.8899407386779785
    4. ' from' → logprob: -5.2649407386779785
    5. '       ' → logprob: -5.2649407386779785
    6. ' lines' → logprob: -5.7649407386779785
    7. ' points' → logprob: -5.8899407386779785
    8. 'from' → logprob: -7.1399407386779785
    9. 'points' → logprob: -7.2649407386779785
    10. ' edges' → logprob: -8.139941215515137

Token 137: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2886468768119812
    2. ' for' → logprob: -1.413646936416626
    3. 'points' → logprob: -6.538646697998047
    4. 'from' → logprob: -6.788646697998047
    5. ' points' → logprob: -7.038646697998047
    6. ' lines' → logprob: -7.413646697998047
    7. '       ' → logprob: -7.413646697998047
    8. '#' → logprob: -7.413646697998047
    9. '   ' → logprob: -7.413646697998047
    10. 'all' → logprob: -8.288646697998047

Token 138: ' all' (ID: 722)
  Prédit: ' black'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' black' → logprob: -0.4911372661590576
    2. '   ' → logprob: -2.2411372661590576
    3. ' for' → logprob: -2.2411372661590576
    4. ' all' → logprob: -2.4911372661590576
    5. ' points' → logprob: -3.8661372661590576
    6. '    ' → logprob: -4.241137504577637
    7. ' to' → logprob: -4.491137504577637
    8. ':' → logprob: -4.616137504577637
    9. 'for' → logprob: -4.616137504577637
    10. '       ' → logprob: -4.991137504577637

Token 139: ' pairs' (ID: 24702)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.9644725918769836
    2. ' points' → logprob: -1.2144725322723389
    3. ' black' → logprob: -1.4644725322723389
    4. 'black' → logprob: -3.214472532272339
    5. ' i' → logprob: -4.589472770690918
    6. ' for' → logprob: -4.714472770690918
    7. 'p' → logprob: -5.089472770690918
    8. '   ' → logprob: -5.339472770690918
    9. 'i' → logprob: -5.464472770690918
    10. 'for' → logprob: -5.839472770690918

Token 140: ' of' (ID: 328)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.9723707437515259
    2. '(' → logprob: -1.7223707437515259
    3. '<|end|>' → logprob: -2.0973706245422363
    4. '   ' → logprob: -2.0973706245422363
    5. ' for' → logprob: -2.7223706245422363
    6. '(p' → logprob: -2.8473706245422363
    7. ' (' → logprob: -3.9723706245422363
    8. ' of' → logprob: -4.597370624542236
    9. '       ' → logprob: -4.972370624542236
    10. '    ' → logprob: -5.097370624542236

Token 141: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.041679076850414276
    2. 'black' → logprob: -3.6666791439056396
    3. ' points' → logprob: -4.2916789054870605
    4. ' black' → logprob: -7.4166789054870605
    5. 'range' → logprob: -7.5416789054870605
    6. '(points' → logprob: -8.041679382324219
    7. ' range' → logprob: -10.291679382324219
    8. '(' → logprob: -10.791679382324219
    9. 'point' → logprob: -11.041679382324219
    10. '	points' → logprob: -11.041679382324219

Token 142: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03687896952033043
    2. '<|end|>' → logprob: -4.036879062652588
    3. ':' → logprob: -5.036879062652588
    4. ' for' → logprob: -5.286879062652588
    5. '   ' → logprob: -5.536879062652588
    6. ',' → logprob: -6.536879062652588
    7. '<|end|>' → logprob: -7.786879062652588
    8. ' ' → logprob: -7.911879062652588
    9. '    ' → logprob: -8.91187858581543
    10. '(' → logprob: -9.16187858581543

Token 143: ' define' (ID: 13174)
  Prédit: ' separate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' separate' → logprob: -0.6110689640045166
    2. ' for' → logprob: -1.3610689640045166
    3. ' check' → logprob: -2.9860689640045166
    4. ' form' → logprob: -3.8610689640045166
    5. 'for' → logprob: -3.8610689640045166
    6. '   ' → logprob: -3.8610689640045166
    7. ' select' → logprob: -4.3610687255859375
    8. ' get' → logprob: -4.6110687255859375
    9. ' define' → logprob: -4.7360687255859375
    10. '       ' → logprob: -5.1110687255859375

Token 144: ' a' (ID: 261)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: ' candidate' (ID: 17098)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.11513454467058182
    2. ' line' → logprob: -2.2401344776153564
    3. 'separator' → logprob: -7.3651347160339355
    4. ' separating' → logprob: -7.8651347160339355
    5. ' ' → logprob: -8.240134239196777
    6. 'boundary' → logprob: -8.240134239196777
    7. 'se' → logprob: -8.740134239196777
    8. '<|end|>' → logprob: -8.865134239196777
    9. 'cut' → logprob: -9.365134239196777
    10. '	line' → logprob: -9.740134239196777

Token 146: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.04084264859557152
    2. 'line' → logprob: -3.7908425331115723
    3. '<|end|>' → logprob: -4.540842533111572
    4. ' for' → logprob: -6.040842533111572
    5. ' lines' → logprob: -7.040842533111572
    6. ' separator' → logprob: -7.665842533111572
    7. '       ' → logprob: -7.790842533111572
    8. ' separating' → logprob: -7.915842533111572
    9. '   ' → logprob: -7.915842533111572
    10. ' edge' → logprob: -8.41584300994873

Token 147: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3262977600097656
    2. '<|end|>' → logprob: -1.9512977600097656
    3. ':' → logprob: -2.5762977600097656
    4. ' ' → logprob: -3.8262977600097656
    5. '   ' → logprob: -4.451297760009766
    6. '    ' → logprob: -4.451297760009766
    7. '        ' → logprob: -5.201297760009766
    8. '        
' → logprob: -6.576297760009766
    9. '<|end|>' → logprob: -6.701297760009766
    10. '\' → logprob: -6.826297760009766

Token 149: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2830485999584198
    2. ' 
' → logprob: -2.158048629760742
    3. '<|end|>' → logprob: -2.783048629760742
    4. '       ' → logprob: -3.658048629760742
    5. '\n' → logprob: -4.158048629760742
    6. '  
' → logprob: -4.908048629760742
    7. '    ' → logprob: -5.158048629760742
    8. '        
' → logprob: -5.658048629760742
    9. '        ' → logprob: -5.783048629760742
    10. '
' → logprob: -6.533048629760742

Token 150: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5249866247177124
    2. ' i' → logprob: -0.8999866247177124
    3. 'p' → logprob: -6.649986743927002
    4. ' p' → logprob: -7.524986743927002
    5. 'a' → logprob: -11.399986267089844
    6. ' ' → logprob: -12.399986267089844
    7. '   ' → logprob: -12.774986267089844
    8. '	i' → logprob: -12.774986267089844
    9. '_i' → logprob: -13.774986267089844
    10. ' a' → logprob: -13.899986267089844

Token 151: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029975872486829758
    2. 'in' → logprob: -3.5299758911132812
    3. ' ' → logprob: -8.654975891113281
    4. ',' → logprob: -10.779975891113281
    5. '	in' → logprob: -12.154975891113281
    6. ' i' → logprob: -12.529975891113281
    7. '  ' → logprob: -13.029975891113281
    8. 'n' → logprob: -13.029975891113281
    9. ' ,' → logprob: -13.029975891113281
    10. ')' → logprob: -13.154975891113281

Token 152: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0015024791937321424
    2. 'range' → logprob: -6.501502513885498
    3. '	range' → logprob: -16.001502990722656
    4. '(range' → logprob: -18.001502990722656
    5. ' xrange' → logprob: -18.001502990722656
    6. ' ' → logprob: -18.376502990722656
    7. '   ' → logprob: -19.626502990722656
    8. ' r' → logprob: -19.626502990722656
    9. ' ra' → logprob: -19.876502990722656
    10. '  ' → logprob: -20.001502990722656

Token 153: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.12939849495887756
    2. '(n' → logprob: -2.1293985843658447
    3. 'len' → logprob: -6.254398345947266
    4. ' len' → logprob: -8.504398345947266
    5. '(' → logprob: -8.879398345947266
    6. '   ' → logprob: -9.129398345947266
    7. 'n' → logprob: -9.504398345947266
    8. ' n' → logprob: -11.629398345947266
    9. '	len' → logprob: -12.379398345947266
    10. ' ' → logprob: -14.129398345947266

Token 154: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -2.463036435074173e-05
    2. 'points' → logprob: -11.125024795532227
    3. '(' → logprob: -12.125024795532227
    4. ' points' → logprob: -12.500024795532227
    5. '	points' → logprob: -14.375024795532227
    6. ' (' → logprob: -16.875024795532227
    7. ')' → logprob: -17.500024795532227
    8. 'Points' → logprob: -17.500024795532227
    9. '(point' → logprob: -17.625024795532227
    10. '(p' → logprob: -17.625024795532227

Token 155: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006327386014163494
    2. ')):' → logprob: -5.631327152252197
    3. '-' → logprob: -6.256327152252197
    4. '):
' → logprob: -8.006327629089355
    5. ' ):' → logprob: -8.256327629089355
    6. ' -' → logprob: -8.881327629089355
    7. ')' → logprob: -10.506327629089355
    8. ':' → logprob: -11.506327629089355
    9. '   ' → logprob: -11.631327629089355
    10. ')):
' → logprob: -11.756327629089355

Token 156: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4235371947288513
    2. '<|end|>' → logprob: -1.548537254333496
    3. ' ' → logprob: -2.923537254333496
    4. '   ' → logprob: -3.548537254333496
    5. ':' → logprob: -3.923537254333496
    6. '    ' → logprob: -4.548537254333496
    7. '        ' → logprob: -5.548537254333496
    8. '  ' → logprob: -5.673537254333496
    9. '           ' → logprob: -6.173537254333496
    10. '+' → logprob: -6.173537254333496

Token 157: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4123123288154602
    2. '       ' → logprob: -1.1623122692108154
    3. '   ' → logprob: -4.4123125076293945
    4. ' ' → logprob: -5.4123125076293945
    5. 'for' (adapté à ' for') → logprob: -5.5373125076293945
    6. '           ' → logprob: -6.6623125076293945
    7. '<|end|>' → logprob: -6.7873125076293945
    8. '    ' → logprob: -7.1623125076293945
    9. '	for' → logprob: -8.537312507629395
    10. '               ' → logprob: -8.662312507629395

Token 158: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17060886323451996
    2. ' j' → logprob: -2.6706087589263916
    3. 'i' → logprob: -2.7956087589263916
    4. 'j' → logprob: -4.045608997344971
    5. ' range' → logprob: -4.795608997344971
    6. 'range' → logprob: -7.420608997344971
    7. '   ' → logprob: -9.045608520507812
    8. ' ' → logprob: -9.920608520507812
    9. '(i' → logprob: -12.045608520507812
    10. '    ' → logprob: -12.295608520507812

Token 159: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.028605321422219276
    2. ' i' → logprob: -3.6536052227020264
    3. 'in' → logprob: -6.6536054611206055
    4. ' ' → logprob: -7.1536054611206055
    5. '(i' → logprob: -9.278605461120605
    6. ' j' → logprob: -9.903605461120605
    7. 'i' → logprob: -10.653605461120605
    8. '	in' → logprob: -11.278605461120605
    9. '=i' → logprob: -11.653605461120605
    10. ' (' → logprob: -11.778605461120605

Token 160: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3133569657802582
    2. 'range' → logprob: -1.3133569955825806
    3. ' i' → logprob: -9.93835735321045
    4. 'i' → logprob: -10.43835735321045
    5. '(range' → logprob: -11.43835735321045
    6. '(i' → logprob: -11.93835735321045
    7. ' ' → logprob: -15.81335735321045
    8. '[i' → logprob: -17.438356399536133
    9. '	range' → logprob: -17.438356399536133
    10. '   ' → logprob: -17.563356399536133

Token 161: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.002285979688167572
    2. '(len' → logprob: -6.127285957336426
    3. ' (' → logprob: -9.502285957336426
    4. 'range' → logprob: -11.627285957336426
    5. '(range' → logprob: -12.002285957336426
    6. '(' → logprob: -12.127285957336426
    7. ' range' → logprob: -12.502285957336426
    8. ' i' → logprob: -14.252285957336426
    9. 'len' → logprob: -14.252285957336426
    10. 'i' → logprob: -15.127285957336426

Token 162: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01603870838880539
    2. ' +' → logprob: -4.14103889465332
    3. '+i' → logprob: -13.26603889465332
    4. '1' → logprob: -13.51603889465332
    5. ')+' → logprob: -14.64103889465332
    6. '+j' → logprob: -15.01603889465332
    7. '+
' → logprob: -16.01603889465332
    8. ')' → logprob: -16.26603889465332
    9. '+)' → logprob: -16.39103889465332
    10. '   ' → logprob: -16.39103889465332

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.6250057220459
    4. '2' → logprob: -19.0000057220459
    5. '```' → logprob: -19.0000057220459
    6. 'i' → logprob: -19.1250057220459
    7. ')' → logprob: -19.1250057220459
    8. '0' → logprob: -19.8750057220459
    9. '１' → logprob: -20.3750057220459
    10. 'len' → logprob: -20.8125057220459

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030732521787285805
    2. ',len' → logprob: -3.5307326316833496
    3. ' ,' → logprob: -7.65573263168335
    4. '<len' → logprob: -9.155732154846191
    5. ',length' → logprob: -9.280732154846191
    6. ')' → logprob: -9.655732154846191
    7. '1' → logprob: -9.905732154846191
    8. '(len' → logprob: -10.155732154846191
    9. 'len' → logprob: -10.405732154846191
    10. '<|end|>' → logprob: -10.530732154846191

Token 165: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.014164687134325504
    2. ' len' → logprob: -4.264164924621582
    3. '(len' → logprob: -14.639164924621582
    4. '   ' → logprob: -15.014164924621582
    5. '	len' → logprob: -15.764164924621582
    6. ' ' → logprob: -16.764163970947266
    7. '<len' → logprob: -16.889163970947266
    8. '[len' → logprob: -17.139163970947266
    9. ',len' → logprob: -17.639163970947266
    10. ')' → logprob: -17.764163970947266

Token 166: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -2.248469718324486e-05
    2. 'points' → logprob: -10.750022888183594
    3. ' points' → logprob: -14.250022888183594
    4. '	points' → logprob: -15.500022888183594
    5. '(' → logprob: -16.250022888183594
    6. '.points' → logprob: -18.000022888183594
    7. ')' → logprob: -18.625022888183594
    8. '(parts' → logprob: -19.500022888183594
    9. '_points' → logprob: -19.750022888183594
    10. 'Points' → logprob: -20.000022888183594

Token 167: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.02275315299630165
    2. '):' → logprob: -4.0227532386779785
    3. ')):
' → logprob: -6.1477532386779785
    4. '))' → logprob: -6.1477532386779785
    5. ':' → logprob: -8.52275276184082
    6. ')' → logprob: -10.02275276184082
    7. '():' → logprob: -11.02275276184082
    8. ' ' → logprob: -11.77275276184082
    9. ']):' → logprob: -11.89775276184082
    10. ')):
' → logprob: -12.02275276184082

Token 168: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04356450214982033
    2. '       ' → logprob: -3.793564558029175
    3. '               ' → logprob: -4.793564319610596
    4. ':
' → logprob: -5.918564319610596
    5. ' :' → logprob: -5.918564319610596
    6. ' ' → logprob: -6.168564319610596
    7. '<|end|>' → logprob: -6.293564319610596
    8. '           ' → logprob: -7.168564319610596
    9. '   ' → logprob: -8.168564796447754
    10. ',' → logprob: -8.418564796447754

Token 169: ' p' (ID: 275)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.1167181059718132
    2. ' ' → logprob: -2.366718053817749
    3. '
' → logprob: -4.991718292236328
    4. '  
' → logprob: -6.616718292236328
    5. ':' → logprob: -6.741718292236328
    6. '    
' → logprob: -6.741718292236328
    7. '                   ' → logprob: -6.991718292236328
    8. ' if' → logprob: -7.366718292236328
    9. '                    
' → logprob: -7.366718292236328
    10. '<|end|>' → logprob: -7.491718292236328

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01934213936328888
    2. 'i' → logprob: -4.019341945648193
    3. '_i' → logprob: -8.019342422485352
    4. 's' → logprob: -8.144342422485352
    5. '_' → logprob: -8.269342422485352
    6. '0' → logprob: -9.894342422485352
    7. 'oints' → logprob: -9.894342422485352
    8. 'j' → logprob: -10.519342422485352
    9. ' =' → logprob: -10.769342422485352
    10. '=' → logprob: -10.769342422485352

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16424503922462463
    2. '=' → logprob: -2.414245128631592
    3. ',' → logprob: -2.789245128631592
    4. ' ,' → logprob: -7.789245128631592
    5. ',p' → logprob: -9.039244651794434
    6. ' =
' → logprob: -11.414244651794434
    7. ')' → logprob: -11.914244651794434
    8. '=p' → logprob: -11.914244651794434
    9. ' ' → logprob: -13.664244651794434
    10. '    ' → logprob: -14.039244651794434

Token 172: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.008614926598966122
    2. ' points' → logprob: -4.758615016937256
    3. '(points' → logprob: -15.008614540100098
    4. '	points' → logprob: -16.008615493774414
    5. '   ' → logprob: -17.758615493774414
    6. '.points' → logprob: -19.008615493774414
    7. 'point' → logprob: -19.258615493774414
    8. 'oints' → logprob: -20.633615493774414
    9. ' ' → logprob: -21.008615493774414
    10. '_points' → logprob: -21.008615493774414

Token 173: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.22323504090309143
    2. '[j' → logprob: -1.723235011100769
    3. '[' → logprob: -4.473235130310059
    4. ']' → logprob: -5.848235130310059
    5. 'points' → logprob: -6.098235130310059
    6. ' points' → logprob: -6.473235130310059
    7. '
' → logprob: -6.973235130310059
    8. '][' → logprob: -7.098235130310059
    9. 'oints' → logprob: -7.598235130310059
    10. '(points' → logprob: -8.098235130310059

Token 174: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3886532485485077
    2. ')
' → logprob: -1.76365327835083
    3. ']' → logprob: -2.01365327835083
    4. ']
' → logprob: -4.13865327835083
    5. '<|end|>' → logprob: -7.01365327835083
    6. '<|end|>' → logprob: -9.513652801513672
    7. '
' → logprob: -10.388652801513672
    8. ')p' → logprob: -10.763652801513672
    9. '  
' → logprob: -11.013652801513672
    10. ' ' → logprob: -11.013652801513672

Token 175: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00980472844094038
    2. '<|end|>' → logprob: -5.259804725646973
    3. '                ' → logprob: -6.384804725646973
    4. '                
' → logprob: -6.759804725646973
    5. ' ' → logprob: -7.509804725646973
    6. ' 
' → logprob: -8.009804725646973
    7. ' p' → logprob: -8.384804725646973
    8. '       ' → logprob: -9.134804725646973
    9. '<|end|>' → logprob: -9.509804725646973
    10. '              ' → logprob: -9.509804725646973

Token 176: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.24316728115081787
    2. ' p' → logprob: -1.6181672811508179
    3. '               ' → logprob: -4.618167400360107
    4. ' ' → logprob: -5.743167400360107
    5. '                ' → logprob: -6.243167400360107
    6. '	p' → logprob: -6.993167400360107
    7. ',p' → logprob: -7.493167400360107
    8. '                   ' → logprob: -8.86816692352295
    9. '           ' → logprob: -9.11816692352295
    10. '&p' → logprob: -9.24316692352295

Token 177: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4881879400927573e-05
    2. '[' → logprob: -10.750035285949707
    3. '1' → logprob: -12.125035285949707
    4. ' ' → logprob: -12.500035285949707
    5. '=' → logprob: -14.750035285949707
    6. '```' → logprob: -14.750035285949707
    7. 'j' → logprob: -14.875035285949707
    8. '<|end|>' → logprob: -15.125035285949707
    9. ',' → logprob: -15.250035285949707
    10. ':' → logprob: -15.562535285949707

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740796685218811
    2. '=' → logprob: -0.9740796685218811
    3. ')' → logprob: -14.099080085754395
    4. '<|end|>' → logprob: -14.099080085754395
    5. ' =
' → logprob: -14.849080085754395
    6. ' ' → logprob: -15.099080085754395
    7. '=p' → logprob: -15.724080085754395
    8. '=
' → logprob: -16.224079132080078
    9. ' =)' → logprob: -16.599079132080078
    10. ']' → logprob: -17.099079132080078

Token 179: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.4740794599056244
    2. ' points' → logprob: -0.9740794897079468
    3. '	points' → logprob: -13.599079132080078
    4. '(points' → logprob: -13.849079132080078
    5. '.points' → logprob: -15.974079132080078
    6. 'oints' → logprob: -16.474079132080078
    7. 'point' → logprob: -17.224079132080078
    8. '   ' → logprob: -17.349079132080078
    9. 'Points' → logprob: -18.099079132080078
    10. '_points' → logprob: -18.224079132080078

Token 180: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.127333340875339e-06
    2. '[' → logprob: -12.625003814697266
    3. 'j' → logprob: -14.875003814697266
    4. '[i' → logprob: -15.750003814697266
    5. '```' → logprob: -16.000003814697266
    6. '[
' → logprob: -16.375003814697266
    7. ']' → logprob: -17.625003814697266
    8. '	j' → logprob: -18.375003814697266
    9. '[]' → logprob: -18.500003814697266
    10. ' [' → logprob: -18.625003814697266

Token 181: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05804544314742088
    2. ')
' → logprob: -2.9330453872680664
    3. '               ' → logprob: -6.308045387268066
    4. ']' → logprob: -7.558045387268066
    5. '):' → logprob: -8.183045387268066
    6. '):
' → logprob: -8.308045387268066
    7. ':' → logprob: -9.558045387268066
    8. ':
' → logprob: -9.933045387268066
    9. ')
' → logprob: -10.058045387268066
    10. ']
' → logprob: -10.183045387268066

Token 182: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3842209577560425
    2. '
' → logprob: -2.384221076965332
    3. '<|end|>' → logprob: -2.509221076965332
    4. ':' → logprob: -3.384221076965332
    5. '       ' → logprob: -3.509221076965332
    6. '                
' → logprob: -4.009221076965332
    7. '  
' → logprob: -4.259221076965332
    8. ' 
' → logprob: -4.509221076965332
    9. '                   ' → logprob: -5.009221076965332
    10. '<|end|>' → logprob: -5.259221076965332

Token 183: ' on' (ID: 402)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.2862569093704224
    2. 'left' → logprob: -1.2862569093704224
    3. '               ' → logprob: -1.4112569093704224
    4. ' left' → logprob: -2.411256790161133
    5. ' sides' → logprob: -3.786256790161133
    6. ' pos' → logprob: -4.286256790161133
    7. 'if' → logprob: -4.911256790161133
    8. 'side' → logprob: -5.036256790161133
    9. 'positive' → logprob: -5.286256790161133
    10. '                   ' → logprob: -5.411256790161133

Token 184: '_positive' (ID: 137937)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.3277335464954376
    2. '_one' → logprob: -2.2027335166931152
    3. '_line' → logprob: -2.7027335166931152
    4. '_positive' → logprob: -3.5777335166931152
    5. '_black' → logprob: -3.7027335166931152
    6. '_same' → logprob: -3.8277335166931152
    7. 'line' → logprob: -5.202733516693115
    8. '_pos' → logprob: -5.452733516693115
    9. '_side' → logprob: -5.702733516693115
    10. 'e' → logprob: -5.827733516693115

Token 185: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07078853994607925
    2. ' =' → logprob: -2.695788621902466
    3. '_' → logprob: -7.820788383483887
    4. '_side' → logprob: -8.070788383483887
    5. '_=' → logprob: -10.070788383483887
    6. ',' → logprob: -10.195788383483887
    7. 'side' → logprob: -10.445788383483887
    8. 'Side' → logprob: -11.695788383483887
    9. 's' → logprob: -12.070788383483887
    10. '=True' → logprob: -12.695788383483887

Token 186: ' []
' (ID: 8911)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.4120261073112488
    2. 'False' → logprob: -1.5370261669158936
    3. ' True' → logprob: -2.6620261669158936
    4. 'on' → logprob: -3.9120261669158936
    5. 'None' → logprob: -4.0370259284973145
    6. ' False' → logprob: -4.9120259284973145
    7. ' on' → logprob: -5.4120259284973145
    8. ' None' → logprob: -6.1620259284973145
    9. 'set' → logprob: -7.5370259284973145
    10. '0' → logprob: -8.287026405334473

Token 187: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014987291768193245
    2. ' =' → logprob: -5.139987468719482
    3. ' on' → logprob: -5.389987468719482
    4. '=' → logprob: -6.889987468719482
    5. 'on' → logprob: -7.264987468719482
    6. '<|end|>' → logprob: -7.264987468719482
    7. '=True' → logprob: -7.389987468719482
    8. '=False' → logprob: -8.014986991882324
    9. '                
' → logprob: -8.264986991882324
    10. '                ' → logprob: -8.264986991882324

Token 188: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' (adapté à ' on') → logprob: -0.018743880093097687
    2. ' on' → logprob: -4.018743991851807
    3. '               ' → logprob: -7.518743991851807
    4. 'False' → logprob: -11.518743515014648
    5. '	on' → logprob: -11.893743515014648
    6. '   ' → logprob: -12.393743515014648
    7. '           ' → logprob: -12.643743515014648
    8. ' ' → logprob: -12.643743515014648
    9. '                ' → logprob: -12.768743515014648
    10. 'for' → logprob: -12.768743515014648

Token 189: '_negative' (ID: 134489)
  Prédit: '_negative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_negative' → logprob: -0.050930462777614594
    2. '_positive' → logprob: -3.0509305000305176
    3. 'negative' → logprob: -6.800930500030518
    4. '_' → logprob: -7.550930500030518
    5. '_false' → logprob: -7.925930500030518
    6. '<|end|>' → logprob: -9.55093002319336
    7. 'positive' → logprob: -9.67593002319336
    8. '_zero' → logprob: -10.30093002319336
    9. ' negative' → logprob: -10.55093002319336
    10. ' _' → logprob: -10.67593002319336

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08899367600679398
    2. '=' → logprob: -2.463993787765503
    3. '=[]' → logprob: -10.338994026184082
    4. ',' → logprob: -11.463994026184082
    5. ' ' → logprob: -12.338994026184082
    6. '   ' → logprob: -13.588994026184082
    7. '<|end|>' → logprob: -13.713994026184082
    8. '  ' → logprob: -14.338994026184082
    9. ']' → logprob: -14.588994026184082
    10. 's' → logprob: -14.713994026184082

Token 191: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.01133369468152523
    2. ' []' → logprob: -4.511333465576172
    3. '[]
' → logprob: -8.261333465576172
    4. '<|end|>' → logprob: -11.011333465576172
    5. '[]}' → logprob: -12.636333465576172
    6. '[' → logprob: -13.386333465576172
    7. '[]

' → logprob: -13.386333465576172
    8. ' []
' → logprob: -13.511333465576172
    9. ' ' → logprob: -13.511333465576172
    10. '  ' → logprob: -14.636333465576172

Token 192: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04829457402229309
    2. '                
' → logprob: -3.4232945442199707
    3. ' 
' → logprob: -5.298294544219971
    4. ' ' → logprob: -5.923294544219971
    5. '                ' → logprob: -6.048294544219971
    6. '<|end|>' → logprob: -6.673294544219971
    7. '                 
' → logprob: -7.048294544219971
    8. '  
' → logprob: -7.423294544219971
    9. '       ' → logprob: -8.048295021057129
    10. '        
' → logprob: -8.173295021057129

Token 193: ' on' (ID: 402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15841688215732574
    2. ' for' → logprob: -2.283416986465454
    3. 'for' → logprob: -3.658416986465454
    4. ' valid' → logprob: -4.783416748046875
    5. 'valid' → logprob: -5.533416748046875
    6. '                   ' → logprob: -5.908416748046875
    7. '   ' → logprob: -7.158416748046875
    8. ' separated' → logprob: -7.158416748046875
    9. '       ' → logprob: -8.033416748046875
    10. ' ' → logprob: -8.533416748046875

Token 194: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.13408620655536652
    2. '_side' → logprob: -2.2590861320495605
    3. '_zero' → logprob: -4.8840861320495605
    4. '_positive' → logprob: -5.7590861320495605
    5. '_point' → logprob: -6.5090861320495605
    6. '_' → logprob: -6.6340861320495605
    7. '_none' → logprob: -6.6340861320495605
    8. '_edge' → logprob: -7.1340861320495605
    9. '_col' → logprob: -7.2590861320495605
    10. 'line' → logprob: -7.3840861320495605

Token 195: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869045674800873
    2. ' =' → logprob: -1.1369045972824097
    3. '=[]' → logprob: -10.5119047164917
    4. ')' → logprob: -13.0119047164917
    5. ' ' → logprob: -14.2619047164917
    6. ',' → logprob: -14.3869047164917
    7. '=False' → logprob: -15.1369047164917
    8. ':' → logprob: -15.2619047164917
    9. '<|end|>' → logprob: -15.2619047164917
    10. ']' → logprob: -15.2619047164917

Token 196: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.13268151879310608
    2. '[]' → logprob: -2.1326816082000732
    3. ' False' → logprob: -5.257681369781494
    4. ' []' → logprob: -8.007681846618652
    5. '0' → logprob: -9.257681846618652
    6. '[]
' → logprob: -9.757681846618652
    7. 'True' → logprob: -10.507681846618652
    8. 'set' → logprob: -11.882681846618652
    9. ' ' → logprob: -12.632681846618652
    10. '[]

' → logprob: -13.257681846618652

Token 197: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01913619600236416
    2. '<|end|>' → logprob: -4.769136428833008
    3. '
' → logprob: -5.144136428833008
    4. '                
' → logprob: -5.894136428833008
    5. '<|end|>' → logprob: -7.894136428833008
    6. '  
' → logprob: -8.269136428833008
    7. '       ' → logprob: -8.519136428833008
    8. '    
' → logprob: -8.644136428833008
    9. '\n' → logprob: -9.019136428833008
    10. '           ' → logprob: -9.394136428833008

Token 198: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006186283193528652
    2. '<|end|>' → logprob: -6.131186485290527
    3. '                
' → logprob: -6.631186485290527
    4. '
' → logprob: -6.631186485290527
    5. ' 
' → logprob: -8.006186485290527
    6. '  
' → logprob: -8.131186485290527
    7. '       ' → logprob: -8.631186485290527
    8. '           ' → logprob: -9.506186485290527
    9. '    
' → logprob: -9.631186485290527
    10. '        
' → logprob: -9.631186485290527

Token 199: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028733551502227783
    2. ' for' → logprob: -3.653733491897583
    3. 'for' (adapté à ' for') → logprob: -6.153733730316162
    4. ' ' → logprob: -9.403733253479004
    5. '                
' → logprob: -9.903733253479004
    6. '                   ' → logprob: -10.153733253479004
    7. '                ' → logprob: -10.153733253479004
    8. '              ' → logprob: -10.528733253479004
    9. '       ' → logprob: -11.153733253479004
    10. '           ' → logprob: -11.278733253479004

Token 200: ' k' (ID: 372)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2073369324207306
    2. 'k' → logprob: -1.8323369026184082
    3. ' p' → logprob: -3.707336902618408
    4. ' k' → logprob: -5.957336902618408
    5. 'point' → logprob: -10.207337379455566
    6. 'pt' → logprob: -10.707337379455566
    7. ' point' → logprob: -11.832337379455566
    8. '   ' → logprob: -11.957337379455566
    9. ' ' → logprob: -12.082337379455566
    10. ' pt' → logprob: -12.832337379455566

Token 201: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023267609998583794
    2. 'in' → logprob: -3.7732675075531006
    3. ' ' → logprob: -11.39826774597168
    4. '	in' → logprob: -11.89826774597168
    5. ',' → logprob: -13.64826774597168
    6. '  ' → logprob: -14.39826774597168
    7. '   ' → logprob: -14.52326774597168
    8. 'In' → logprob: -15.02326774597168
    9. '    ' → logprob: -15.02326774597168
    10. 'range' → logprob: -15.52326774597168

Token 202: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01816246658563614
    2. ' range' → logprob: -4.018162250518799
    3. 'points' → logprob: -11.393162727355957
    4. '	range' → logprob: -14.643162727355957
    5. '(range' → logprob: -14.768162727355957
    6. ' ' → logprob: -16.14316177368164
    7. ' points' → logprob: -16.14316177368164
    8. '   ' → logprob: -16.64316177368164
    9. '  ' → logprob: -17.01816177368164
    10. '.range' → logprob: -18.14316177368164

Token 203: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -3.583550642360933e-05
    2. 'len' → logprob: -10.250036239624023
    3. '(' → logprob: -15.125036239624023
    4. ' len' → logprob: -16.250036239624023
    5. '(n' → logprob: -17.375036239624023
    6. '	len' → logprob: -18.500036239624023
    7. ',len' → logprob: -18.625036239624023
    8. '[len' → logprob: -19.125036239624023
    9. '=len' → logprob: -19.125036239624023
    10. '<len' → logprob: -19.875036239624023

Token 204: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.008619893342256546
    2. 'points' → logprob: -4.758619785308838
    3. ' points' → logprob: -12.258620262145996
    4. '	points' → logprob: -14.508620262145996
    5. '(' → logprob: -17.50861930847168
    6. 'Points' → logprob: -17.50861930847168
    7. '.points' → logprob: -17.63361930847168
    8. '_points' → logprob: -17.88361930847168
    9. 'black' → logprob: -18.50861930847168
    10. 'oints' → logprob: -18.75861930847168

Token 205: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25196921825408936
    2. '):
' → logprob: -1.5019692182540894
    3. '):
' → logprob: -10.626969337463379
    4. '):

' → logprob: -12.376969337463379
    5. ':' → logprob: -12.501969337463379
    6. ')' → logprob: -13.751969337463379
    7. ' ):' → logprob: -14.126969337463379
    8. ']):' → logprob: -14.126969337463379
    9. ')):' → logprob: -14.126969337463379
    10. '>):' → logprob: -14.251969337463379

Token 206: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01005543116480112
    2. '                    
' → logprob: -5.8850555419921875
    3. ':' → logprob: -6.3850555419921875
    4. '               ' → logprob: -6.5100555419921875
    5. '           ' → logprob: -7.2600555419921875
    6. '<|end|>' → logprob: -7.5100555419921875
    7. ' ' → logprob: -7.8850555419921875
    8. ':
' → logprob: -8.260055541992188
    9. '                       ' → logprob: -8.385055541992188
    10. '   ' → logprob: -8.385055541992188

Token 207: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9164027571678162
    2. ' p' → logprob: -1.041402816772461
    3. '                   ' → logprob: -3.041402816772461
    4. ' s' → logprob: -3.291402816772461
    5. ' t' → logprob: -3.291402816772461
    6. ' ' → logprob: -3.791402816772461
    7. '
' → logprob: -3.916402816772461
    8. 'if' (adapté à ' if') → logprob: -3.916402816772461
    9. ' side' → logprob: -4.166402816772461
    10. '                       ' → logprob: -4.541402816772461

Token 208: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1355229765176773
    2. ' k' → logprob: -2.2605230808258057
    3. ' side' → logprob: -4.760522842407227
    4. 'side' → logprob: -4.885522842407227
    5. 'points' → logprob: -5.635522842407227
    6. ' points' → logprob: -6.260522842407227
    7. 'p' → logprob: -8.010522842407227
    8. ' ' → logprob: -9.010522842407227
    9. ' p' → logprob: -9.260522842407227
    10. '(side' → logprob: -9.635522842407227

Token 209: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2530554234981537
    2. '==' → logprob: -1.503055453300476
    3. ' ' → logprob: -7.378055572509766
    4. ' <=' → logprob: -8.878055572509766
    5. '<=' → logprob: -9.503055572509766
    6. ']==' → logprob: -9.753055572509766
    7. ' !=' → logprob: -10.003055572509766
    8. ')' → logprob: -10.003055572509766
    9. '!=' → logprob: -10.378055572509766
    10. '=' → logprob: -10.503055572509766

Token 210: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003919463779311627
    2. ' i' → logprob: -7.875391960144043
    3. ' ' → logprob: -11.875391960144043
    4. '   ' → logprob: -13.250391960144043
    5. 'j' → logprob: -13.375391960144043
    6. '	i' → logprob: -13.750391960144043
    7. '  ' → logprob: -15.500391960144043
    8. '    ' → logprob: -16.375391006469727
    9. '     ' → logprob: -17.375391006469727
    10. '
' → logprob: -17.500391006469727

Token 211: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.19718003273010254
    2. ':' → logprob: -1.8221800327301025
    3. ':
' → logprob: -4.572179794311523
    4. 'or' → logprob: -5.197179794311523
    5. ' ' → logprob: -7.697179794311523
    6. ' continue' → logprob: -8.197179794311523
    7. '<|end|>' → logprob: -8.447179794311523
    8. 'continue' → logprob: -9.322179794311523
    9. '   ' → logprob: -9.447179794311523
    10. '	or' → logprob: -10.197179794311523

Token 212: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04416005313396454
    2. ' k' → logprob: -3.1691601276397705
    3. 'j' → logprob: -6.919159889221191
    4. ' j' → logprob: -9.419159889221191
    5. '    ' → logprob: -10.294159889221191
    6. '   ' → logprob: -11.044159889221191
    7. ' ' → logprob: -11.294159889221191
    8. '                   ' → logprob: -12.169159889221191
    9. '  ' → logprob: -12.544159889221191
    10. '	k' → logprob: -12.669159889221191

Token 213: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.003187339985743165
    2. ' ==' → logprob: -5.75318717956543
    3. '==
' → logprob: -12.00318717956543
    4. '=' → logprob: -13.12818717956543
    5. ']==' → logprob: -14.12818717956543
    6. '===' → logprob: -15.12818717956543
    7. ')==' → logprob: -15.25318717956543
    8. '==(' → logprob: -16.12818717956543
    9. '==-' → logprob: -17.50318717956543
    10. 'k' → logprob: -17.87818717956543

Token 214: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0017123052384704351
    2. ' j' → logprob: -6.376712322235107
    3. 'k' → logprob: -12.00171184539795
    4. '	j' → logprob: -13.25171184539795
    5. ' ' → logprob: -14.12671184539795
    6. '   ' → logprob: -14.12671184539795
    7. '  ' → logprob: -15.75171184539795
    8. '                   ' → logprob: -15.75171184539795
    9. '    ' → logprob: -16.251712799072266
    10. '[j' → logprob: -16.751712799072266

Token 215: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.43260979652404785
    2. ':' → logprob: -1.0576097965240479
    3. '                       ' → logprob: -5.682609558105469
    4. '       ' → logprob: -8.557609558105469
    5. '                   ' → logprob: -8.932609558105469
    6. '               ' → logprob: -10.432609558105469
    7. 'continue' → logprob: -10.682609558105469
    8. '                           ' → logprob: -10.807609558105469
    9. '                               ' → logprob: -11.057609558105469
    10. ' continue' → logprob: -11.057609558105469

Token 216: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.04368489608168602
    2. ':
' → logprob: -3.793684959411621
    3. '                   ' → logprob: -4.668684959411621
    4. ':' → logprob: -4.918684959411621
    5. ' continue' → logprob: -6.418684959411621
    6. '                           ' → logprob: -8.168684959411621
    7. 'continue' → logprob: -8.168684959411621
    8. '               ' → logprob: -8.418684959411621
    9. '                      ' → logprob: -8.668684959411621
    10. '	                   ' → logprob: -9.043684959411621

Token 217: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.0413326695561409
    2. 'continue' (adapté à ' continue') → logprob: -3.541332721710205
    3. '                   ' → logprob: -4.791332721710205
    4. '                       ' → logprob: -6.041332721710205
    5. '	continue' → logprob: -8.166332244873047
    6. '               ' → logprob: -8.791332244873047
    7. '                           ' → logprob: -9.291332244873047
    8. '
' → logprob: -9.791332244873047
    9. '           ' → logprob: -9.916332244873047
    10. '   ' → logprob: -10.041332244873047

Token 218: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07451541721820831
    2. '                   ' → logprob: -3.0745153427124023
    3. '  
' → logprob: -4.574515342712402
    4. '    
' → logprob: -5.449515342712402
    5. '<|end|>' → logprob: -5.574515342712402
    6. '               ' → logprob: -5.949515342712402
    7. '                    
' → logprob: -6.324515342712402
    8. '        
' → logprob: -7.574515342712402
    9. '                
' → logprob: -7.949515342712402
    10. '<|end|>' → logprob: -8.199515342712402

Token 219: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03871467709541321
    2. '               ' → logprob: -3.913714647293091
    3. '
' → logprob: -5.41371488571167
    4. '                    
' → logprob: -5.53871488571167
    5. '<|end|>' → logprob: -6.16371488571167
    6. '  
' → logprob: -6.78871488571167
    7. '    
' → logprob: -6.91371488571167
    8. ' 
' → logprob: -7.16371488571167
    9. '   ' → logprob: -7.41371488571167
    10. '                
' → logprob: -7.41371488571167

Token 220: ' val' (ID: 1459)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.47871387004852295
    2. ' side' → logprob: -1.728713870048523
    3. ' pos' → logprob: -2.7287139892578125
    4. ' p' → logprob: -3.1037139892578125
    5. 's' → logprob: -3.3537139892578125
    6. '                   ' → logprob: -3.9787139892578125
    7. 'pos' → logprob: -4.8537139892578125
    8. ' token' → logprob: -4.8537139892578125
    9. 'side' → logprob: -5.1037139892578125
    10. ' val' → logprob: -5.2287139892578125

Token 221: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687458634376526
    2. ' =' → logprob: -1.1368745565414429
    3. '   ' → logprob: -13.761874198913574
    4. ' ' → logprob: -14.136874198913574
    5. '    ' → logprob: -14.886874198913574
    6. '           ' → logprob: -15.886874198913574
    7. '       ' → logprob: -15.886874198913574
    8. ',' → logprob: -15.886874198913574
    9. '	' → logprob: -16.01187515258789
    10. '        ' → logprob: -16.13687515258789

Token 222: ' side' (ID: 4307)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.4740844964981079
    2. ' side' → logprob: -0.9740844964981079
    3. '(side' → logprob: -12.224084854125977
    4. '	side' → logprob: -12.974084854125977
    5. '.side' → logprob: -15.724084854125977
    6. '_side' → logprob: -17.224084854125977
    7. '   ' → logprob: -17.724084854125977
    8. ' ' → logprob: -18.849084854125977
    9. ' sid' → logprob: -19.099084854125977
    10. '
' → logprob: -19.099084854125977

Token 223: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00033784625702537596
    2. '(' → logprob: -8.000337600708008
    3. '(
' → logprob: -13.125337600708008
    4. ' (' → logprob: -15.625337600708008
    5. 'p' → logprob: -16.125337600708008
    6. '(points' → logprob: -16.250337600708008
    7. '(

' → logprob: -17.125337600708008
    8. '(P' → logprob: -18.250337600708008
    9. '((' → logprob: -18.875337600708008
    10. '(point' → logprob: -19.250337600708008

Token 224: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ',' → logprob: -13.937505722045898
    3. 'oints' → logprob: -14.125005722045898
    4. '<|end|>' → logprob: -14.312505722045898
    5. ')' → logprob: -14.375005722045898
    6. '2' → logprob: -14.437505722045898
    7. '(p' → logprob: -15.062505722045898
    8. '(points' → logprob: -15.437505722045898
    9. ' ' → logprob: -15.750005722045898
    10. '```' → logprob: -15.812505722045898

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048770856112241745
    2. ',p' → logprob: -3.0487709045410156
    3. ' ,' → logprob: -9.048770904541016
    4. '(p' → logprob: -10.173770904541016
    5. 'p' → logprob: -11.298770904541016
    6. ',
' → logprob: -11.798770904541016
    7. '(' → logprob: -12.423770904541016
    8. ',(' → logprob: -14.423770904541016
    9. ',

' → logprob: -14.673770904541016
    10. ' ' → logprob: -15.298770904541016

Token 226: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.547789674485102e-05
    2. ' p' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.500036239624023
    4. ' ' → logprob: -18.375036239624023
    5. '(p' → logprob: -18.625036239624023
    6. '                   ' → logprob: -18.875036239624023
    7. '  ' → logprob: -19.375036239624023
    8. '<p' → logprob: -19.375036239624023
    9. '           ' → logprob: -19.625036239624023
    10. ')' → logprob: -19.625036239624023

Token 227: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010306637705070898
    2. '[k' → logprob: -9.625102996826172
    3. ',' → logprob: -11.250102996826172
    4. 'k' → logprob: -11.625102996826172
    5. '[' → logprob: -12.250102996826172
    6. ',k' → logprob: -12.625102996826172
    7. ' ' → logprob: -13.125102996826172
    8. '```' → logprob: -13.500102996826172
    9. '1' → logprob: -14.625102996826172
    10. '
' → logprob: -14.750102996826172

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007997318170964718
    2. '(points' → logprob: -4.882997512817383
    3. ' ,' → logprob: -8.132997512817383
    4. 'points' → logprob: -10.257997512817383
    5. ')' → logprob: -10.882997512817383
    6. ' points' → logprob: -11.007997512817383
    7. '(' → logprob: -11.632997512817383
    8. ',p' → logprob: -12.507997512817383
    9. ',(' → logprob: -12.882997512817383
    10. '   ' → logprob: -13.007997512817383

Token 229: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0015045057516545057
    2. ' points' → logprob: -6.501504421234131
    3. ')' → logprob: -13.751504898071289
    4. '(points' → logprob: -14.126504898071289
    5. '	points' → logprob: -15.501504898071289
    6. '   ' → logprob: -16.37650489807129
    7. 'point' → logprob: -17.50150489807129
    8. ')
' → logprob: -17.75150489807129
    9. '.points' → logprob: -18.25150489807129
    10. '       ' → logprob: -18.25150489807129

Token 230: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.0564331205387134e-05
    2. 'k' → logprob: -11.50001049041748
    3. '[' → logprob: -16.625011444091797
    4. '(k' → logprob: -16.750011444091797
    5. ')[' → logprob: -16.875011444091797
    6. '
' → logprob: -17.125011444091797
    7. ')' → logprob: -17.250011444091797
    8. '[
' → logprob: -17.375011444091797
    9. '[i' → logprob: -17.500011444091797
    10. '	k' → logprob: -17.500011444091797

Token 231: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028884445782750845
    2. ')
' → logprob: -5.8778886795043945
    3. ' )' → logprob: -9.877888679504395
    4. '])' → logprob: -11.002888679504395
    5. ')`' → logprob: -12.377888679504395
    6. ')<' → logprob: -12.877888679504395
    7. ')>' → logprob: -13.002888679504395
    8. ' )
' → logprob: -13.752888679504395
    9. '）' → logprob: -13.877888679504395
    10. ')

' → logprob: -13.877888679504395

Token 232: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05772526562213898
    2. '               ' → logprob: -3.432725191116333
    3. '<|end|>' → logprob: -4.682725429534912
    4. ' ' → logprob: -5.432725429534912
    5. '           ' → logprob: -6.307725429534912
    6. ' if' → logprob: -6.557725429534912
    7. '       ' → logprob: -7.057725429534912
    8. '                       ' → logprob: -7.057725429534912
    9. '    ' → logprob: -7.182725429534912
    10. '   ' → logprob: -7.557725429534912

Token 233: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13225945830345154
    2. 'if' (adapté à ' if') → logprob: -2.8822593688964844
    3. ' ' → logprob: -3.3822593688964844
    4. '                   ' → logprob: -3.7572593688964844
    5. ' 
' → logprob: -5.632259368896484
    6. '                    ' → logprob: -6.257259368896484
    7. '               ' → logprob: -6.882259368896484
    8. '                    
' → logprob: -7.132259368896484
    9. '    ' → logprob: -7.382259368896484
    10. '                ' → logprob: -7.507259368896484

Token 234: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.0789082944393158
    2. 'val' → logprob: -2.5789082050323486
    3. '	val' → logprob: -12.20390796661377
    4. ' abs' → logprob: -12.82890796661377
    5. ' ' → logprob: -13.07890796661377
    6. '    ' → logprob: -13.32890796661377
    7. '0' → logprob: -13.32890796661377
    8. '(val' → logprob: -13.45390796661377
    9. '[val' → logprob: -13.82890796661377
    10. '>' → logprob: -14.20390796661377

Token 235: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.13498370349407196
    2. '>' → logprob: -2.134983777999878
    3. ' <' → logprob: -5.009983539581299
    4. '<' → logprob: -6.759983539581299
    5. ' ==' → logprob: -9.384984016418457
    6. ' ' → logprob: -10.384984016418457
    7. '==' → logprob: -10.509984016418457
    8. ')' → logprob: -10.634984016418457
    9. ')>' → logprob: -11.884984016418457
    10. '<|end|>' → logprob: -12.259984016418457

Token 236: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026300417259335518
    2. ' ' → logprob: -3.6513004302978516
    3. '<|end|>' → logprob: -17.15130043029785
    4. '  ' → logprob: -17.40130043029785
    5. ')' → logprob: -17.40130043029785
    6. '   ' → logprob: -17.77630043029785
    7. '۰' → logprob: -18.77630043029785
    8. '=' → logprob: -18.77630043029785
    9. '	' → logprob: -19.58880043029785
    10. ' ' → logprob: -19.65130043029785

Token 237: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. ')' → logprob: -18.375261306762695
    4. '۰' → logprob: -19.312761306762695
    5. '<|end|>' → logprob: -19.562761306762695
    6. '000' → logprob: -19.875261306762695
    7. '=' → logprob: -19.937761306762695
    8. '```' → logprob: -20.062761306762695
    9. '

' → logprob: -20.125261306762695
    10. '   ' → logprob: -20.375261306762695

Token 238: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07257313281297684
    2. ':
' → logprob: -2.822573184967041
    3. '<|end|>' → logprob: -5.072573184967041
    4. ' and' → logprob: -6.322573184967041
    5. ' or' → logprob: -6.447573184967041
    6. '                       ' → logprob: -8.197572708129883
    7. '                   ' → logprob: -9.197572708129883
    8. '               ' → logprob: -9.197572708129883
    9. ':return' → logprob: -9.197572708129883
    10. '<|end|>' → logprob: -9.447572708129883

Token 239: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.048835691064596176
    2. '                   ' → logprob: -4.298835754394531
    3. ' on' → logprob: -4.423835754394531
    4. '
' → logprob: -4.423835754394531
    5. '                        
' → logprob: -5.548835754394531
    6. '                           ' → logprob: -5.673835754394531
    7. '               ' → logprob: -7.673835754394531
    8. ' 
' → logprob: -7.798835754394531
    9. '                    
' → logprob: -7.798835754394531
    10. 'on' → logprob: -8.173835754394531

Token 240: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.07584736496210098
    2. 'on' (adapté à ' on') → logprob: -2.7008473873138428
    3. '                   ' → logprob: -5.950847148895264
    4. ' if' → logprob: -6.825847148895264
    5. '                       ' → logprob: -7.325847148895264
    6. ' return' → logprob: -7.575847148895264
    7. ' continue' → logprob: -7.700847148895264
    8. '               ' → logprob: -8.825847625732422
    9. '                           ' → logprob: -9.325847625732422
    10. 'return' → logprob: -9.700847625732422

Token 241: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00015681622608099133
    2. '_' → logprob: -8.87515640258789
    3. 'line' → logprob: -12.12515640258789
    4. ' _' → logprob: -12.25015640258789
    5. '_l' → logprob: -13.25015640258789
    6. ' line' → logprob: -13.87515640258789
    7. '_positive' → logprob: -14.62515640258789
    8. '_lines' → logprob: -14.75015640258789
    9. '_space' → logprob: -14.87515640258789
    10. '_linear' → logprob: -14.87515640258789

Token 242: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.694851815700531
    2. ' =' → logprob: -0.694851815700531
    3. '=True' → logprob: -6.444851875305176
    4. '=False' → logprob: -9.944851875305176
    5. '                           ' → logprob: -11.194851875305176
    6. '                   ' → logprob: -11.194851875305176
    7. '<|end|>' → logprob: -11.194851875305176
    8. '                       ' → logprob: -11.819851875305176
    9. ' ' → logprob: -12.569851875305176
    10. ' |=' → logprob: -12.569851875305176

Token 243: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00033581978641450405
    2. ' True' → logprob: -8.000335693359375
    3. 'False' → logprob: -15.000335693359375
    4. '   ' → logprob: -17.375335693359375
    5. '(True' → logprob: -18.000335693359375
    6. '=True' → logprob: -18.500335693359375
    7. ' ' → logprob: -20.375335693359375
    8. '1' → logprob: -20.875335693359375
    9. '
' → logprob: -21.375335693359375
    10. '  ' → logprob: -21.750335693359375

Token 244: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.21127758920192719
    2. '<|end|>' → logprob: -1.8362776041030884
    3. '                   ' → logprob: -3.836277484893799
    4. '                           ' → logprob: -5.461277484893799
    5. '               ' → logprob: -6.211277484893799
    6. '
' → logprob: -7.211277484893799
    7. '           ' → logprob: -7.211277484893799
    8. '       ' → logprob: -7.461277484893799
    9. '                        
' → logprob: -7.961277484893799
    10. '<|end|>' → logprob: -8.461277961730957

Token 245: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0012829720508307219
    2. '                   ' → logprob: -7.501283168792725
    3. '                           ' → logprob: -8.501282691955566
    4. '               ' → logprob: -8.751282691955566
    5. '                        
' → logprob: -9.001282691955566
    6. '                        ' → logprob: -9.501282691955566
    7. '<|end|>' → logprob: -9.751282691955566
    8. '           ' → logprob: -10.251282691955566
    9. '       ' → logprob: -11.001282691955566
    10. '                               ' → logprob: -11.876282691955566

Token 246: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.4788014590740204
    2. ' break' → logprob: -0.9788014888763428
    3. '                       ' → logprob: -5.478801250457764
    4. '                           ' → logprob: -7.853801250457764
    5. '                   ' → logprob: -9.353801727294922
    6. '                               ' → logprob: -10.478801727294922
    7. '	break' → logprob: -11.478801727294922
    8. '               ' → logprob: -11.603801727294922
    9. 'continue' → logprob: -12.353801727294922
    10. '           ' → logprob: -12.353801727294922

Token 247: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23116539418697357
    2. '                   ' → logprob: -1.6061654090881348
    3. '           ' → logprob: -5.856165409088135
    4. '                       ' → logprob: -7.231165409088135
    5. '
' → logprob: -7.856165409088135
    6. '<|end|>' → logprob: -8.106164932250977
    7. '```' → logprob: -8.231164932250977
    8. '   ' → logprob: -8.356164932250977
    9. '       ' → logprob: -8.856164932250977
    10. '                ' → logprob: -8.981164932250977

Token 248: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14869658648967743
    2. '               ' → logprob: -2.1486966609954834
    3. '
' → logprob: -5.523696422576904
    4. '   ' → logprob: -6.023696422576904
    5. '           ' → logprob: -6.023696422576904
    6. '	               ' → logprob: -6.398696422576904
    7. '                    
' → logprob: -7.023696422576904
    8. '				' → logprob: -7.023696422576904
    9. '       ' → logprob: -7.148696422576904
    10. '<|end|>' → logprob: -7.148696422576904

Token 249: ' elif' (ID: 9497)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5752606987953186
    2. ' elif' → logprob: -1.4502606391906738
    3. 'elif' (adapté à ' elif') → logprob: -2.075260639190674
    4. '               ' → logprob: -2.700260639190674
    5. '   ' → logprob: -6.200260639190674
    6. '    ' → logprob: -6.325260639190674
    7. ' if' → logprob: -6.325260639190674
    8. '                ' → logprob: -6.700260639190674
    9. '                    ' → logprob: -7.450260639190674
    10. '
' → logprob: -7.450260639190674

Token 250: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.0067156096920371056
    2. 'val' → logprob: -5.006715774536133
    3. '	val' → logprob: -15.256715774536133
    4. '(val' → logprob: -17.006715774536133
    5. '_val' → logprob: -18.256715774536133
    6. '[val' → logprob: -18.256715774536133
    7. ' ' → logprob: -18.506715774536133
    8. '    ' → logprob: -18.881715774536133
    9. ',val' → logprob: -19.256715774536133
    10. '.val' → logprob: -19.381715774536133

Token 251: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.010007272474467754
    2. '>' → logprob: -4.635007381439209
    3. ' <' → logprob: -8.38500690460205
    4. ' ' → logprob: -11.38500690460205
    5. ' ' → logprob: -12.51000690460205
    6. '<' → logprob: -12.88500690460205
    7. '<|end|>' → logprob: -12.88500690460205
    8. '[' → logprob: -14.38500690460205
    9. ')>' → logprob: -14.63500690460205
    10. ')' → logprob: -14.63500690460205

Token 252: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25194716453552246
    2. ' ' → logprob: -1.5019471645355225
    3. '<|end|>' → logprob: -11.001947402954102
    4. '   ' → logprob: -15.251947402954102
    5. '>' → logprob: -15.251947402954102
    6. '                   ' → logprob: -15.501947402954102
    7. '<|end|>' → logprob: -16.0019474029541
    8. '  ' → logprob: -16.0019474029541
    9. '```' → logprob: -16.1269474029541
    10. '                       ' → logprob: -16.3769474029541

Token 253: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00861468818038702
    2. ' ' → logprob: -4.758614540100098
    3. '<|end|>' → logprob: -17.258615493774414
    4. '   ' → logprob: -17.758615493774414
    5. '  ' → logprob: -19.008615493774414
    6. '۰' → logprob: -20.633615493774414
    7. ')' → logprob: -21.258615493774414
    8. '                   ' → logprob: -21.383615493774414
    9. '     ' → logprob: -21.508615493774414
    10. '    ' → logprob: -21.508615493774414

Token 254: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.040477290749549866
    2. ':
' → logprob: -3.4154772758483887
    3. '                       ' → logprob: -5.290477275848389
    4. '                   ' → logprob: -6.540477275848389
    5. '               ' → logprob: -9.040477752685547
    6. '<|end|>' → logprob: -9.540477752685547
    7. ' :' → logprob: -10.415477752685547
    8. ' :
' → logprob: -11.290477752685547
    9. '):
' → logprob: -11.290477752685547
    10. ':

' → logprob: -11.540477752685547

Token 255: '                       ' (ID: 968)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.018202153965830803
    2. '                       ' → logprob: -4.393202304840088
    3. 'on' → logprob: -5.643202304840088
    4. '                   ' → logprob: -6.643202304840088
    5. '               ' → logprob: -7.518202304840088
    6. '<|end|>' → logprob: -9.14320182800293
    7. '                        
' → logprob: -10.14320182800293
    8. ' ' → logprob: -10.76820182800293
    9. '```' → logprob: -10.89320182800293
    10. '
' → logprob: -10.89320182800293

Token 256: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.31329306960105896
    2. 'on' (adapté à ' on') → logprob: -1.3132930994033813
    3. '                       ' → logprob: -10.93829345703125
    4. '                   ' → logprob: -12.43829345703125
    5. '	on' → logprob: -13.06329345703125
    6. ' ' → logprob: -13.43829345703125
    7. '
' → logprob: -13.56329345703125
    8. '                           ' → logprob: -13.56329345703125
    9. '   ' → logprob: -13.81329345703125
    10. '               ' → logprob: -14.31329345703125

Token 257: '_positive' (ID: 137937)
  Prédit: '_positive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positive' → logprob: -0.0004178025701548904
    2. ' positive' → logprob: -8.750417709350586
    3. 'positive' → logprob: -8.875417709350586
    4. '_negative' → logprob: -9.500417709350586
    5. '_' → logprob: -10.750417709350586
    6. ' _' → logprob: -10.875417709350586
    7. ' on' → logprob: -13.500417709350586
    8. 'on' → logprob: -14.000417709350586
    9. ' ' → logprob: -14.125417709350586
    10. '+' → logprob: -15.250417709350586

Token 258: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03903951868414879
    2. '.' → logprob: -3.2890396118164062
    3. ' .' → logprob: -6.914039611816406
    4. '.add' → logprob: -13.414039611816406
    5. 'append' → logprob: -14.039039611816406
    6. '.push' → logprob: -14.789039611816406
    7. '.ap' → logprob: -15.164039611816406
    8. '.app' → logprob: -15.164039611816406
    9. ' append' → logprob: -15.664039611816406
    10. ').' → logprob: -15.789039611816406

Token 259: '(k' (ID: 12125)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.08484910428524017
    2. '(k' → logprob: -2.8348491191864014
    3. 'points' → logprob: -3.8348491191864014
    4. '(' → logprob: -7.334848880767822
    5. 'k' → logprob: -8.33484935760498
    6. '(True' → logprob: -9.45984935760498
    7. ' points' → logprob: -11.20984935760498
    8. '(False' → logprob: -11.45984935760498
    9. '(p' → logprob: -11.70984935760498
    10. '1' → logprob: -13.08484935760498

Token 260: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004249547782819718
    2. ')
' → logprob: -8.375425338745117
    3. ' )' → logprob: -8.875425338745117
    4. '<|end|>' → logprob: -9.875425338745117
    5. '())' → logprob: -14.750425338745117
    6. '                   ' → logprob: -15.000425338745117
    7. '                       ' → logprob: -15.000425338745117
    8. ')

' → logprob: -15.250425338745117
    9. '<|end|>' → logprob: -15.250425338745117
    10. ')return' → logprob: -15.625425338745117

Token 261: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.27378562092781067
    2. '
' → logprob: -2.2737855911254883
    3. '<|end|>' → logprob: -2.6487855911254883
    4. 'elif' → logprob: -3.8987855911254883
    5. ' elif' → logprob: -4.898785591125488
    6. '                        
' → logprob: -5.023785591125488
    7. ' 
' → logprob: -5.023785591125488
    8. '                    
' → logprob: -5.023785591125488
    9. '               ' → logprob: -5.148785591125488
    10. '                       ' → logprob: -5.898785591125488

Token 262: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5421936511993408
    2. ' elif' → logprob: -1.6671936511993408
    3. '                   ' → logprob: -1.9171936511993408
    4. 'else' (adapté à ' else') → logprob: -2.792193651199341
    5. 'elif' → logprob: -3.917193651199341
    6. '                    ' → logprob: -6.917193412780762
    7. ' ' → logprob: -9.167193412780762
    8. '               ' → logprob: -9.667193412780762
    9. '    ' → logprob: -9.917193412780762
    10. '                ' → logprob: -10.042193412780762

Token 263: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37900689244270325
    2. '                       ' → logprob: -1.2540068626403809
    3. ':
' → logprob: -3.879006862640381
    4. ' :' → logprob: -5.129006862640381
    5. ' :
' → logprob: -6.379006862640381
    6. '                   ' → logprob: -7.004006862640381
    7. '                        ' → logprob: -7.879006862640381
    8. '<|end|>' → logprob: -9.004007339477539
    9. ' on' → logprob: -9.629007339477539
    10. '                    ' → logprob: -9.629007339477539

Token 264: '                       ' (ID: 968)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.004366151988506317
    2. 'on' → logprob: -6.379365921020508
    3. '                       ' → logprob: -6.629365921020508
    4. ' ' → logprob: -7.629365921020508
    5. ' ' → logprob: -7.629365921020508
    6. '                        ' → logprob: -8.504365921020508
    7. '                    ' → logprob: -9.254365921020508
    8. '                   ' → logprob: -10.754365921020508
    9. '                ' → logprob: -11.129365921020508
    10. '    ' → logprob: -12.129365921020508

Token 265: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.38688066601753235
    2. 'on' (adapté à ' on') → logprob: -1.13688063621521
    3. '                       ' → logprob: -12.136880874633789
    4. '                   ' → logprob: -13.511880874633789
    5. '	on' → logprob: -13.511880874633789
    6. ' ' → logprob: -14.261880874633789
    7. ' ' → logprob: -15.386880874633789
    8. '               ' → logprob: -16.01188087463379
    9. '_on' → logprob: -16.26188087463379
    10. '                        ' → logprob: -16.38688087463379

Token 266: '_negative' (ID: 134489)
  Prédit: '_negative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_negative' → logprob: -0.002161444863304496
    2. '_positive' → logprob: -6.252161502838135
    3. 'negative' → logprob: -8.377161026000977
    4. '_' → logprob: -13.502161026000977
    5. ' negative' → logprob: -14.252161026000977
    6. 'Negative' → logprob: -15.627161026000977
    7. '_neg' → logprob: -15.752161026000977
    8. 'positive' → logprob: -16.752161026000977
    9. '_points' → logprob: -17.127161026000977
    10. '-negative' → logprob: -17.252161026000977

Token 267: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00016432604752480984
    2. '.' → logprob: -8.750164031982422
    3. ' .' → logprob: -12.375164031982422
    4. 'append' → logprob: -13.625164031982422
    5. '<|end|>' → logprob: -15.250164031982422
    6. '.app' → logprob: -16.250164031982422
    7. '.setdefault' → logprob: -17.125164031982422
    8. ').' → logprob: -17.750164031982422
    9. '.Append' → logprob: -17.750164031982422
    10. '_append' → logprob: -18.250164031982422

Token 268: '(k' (ID: 12125)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.020549247041344643
    2. '(k' → logprob: -3.8955492973327637
    3. '(' → logprob: -12.395548820495605
    4. ' k' → logprob: -12.895548820495605
    5. ' (' → logprob: -14.770548820495605
    6. '0' → logprob: -16.520549774169922
    7. '	k' → logprob: -16.895549774169922
    8. '{k' → logprob: -16.895549774169922
    9. ' ' → logprob: -17.520549774169922
    10. '_k' → logprob: -17.645549774169922

Token 269: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016146517009474337
    2. '<|end|>' → logprob: -8.875161170959473
    3. ' )' → logprob: -11.750161170959473
    4. '               ' → logprob: -12.625161170959473
    5. ')
' → logprob: -12.750161170959473
    6. ')return' → logprob: -13.250161170959473
    7. '<|end|>' → logprob: -13.750161170959473
    8. '())' → logprob: -14.250161170959473
    9. '))' → logprob: -14.625161170959473
    10. '                   ' → logprob: -14.875161170959473

Token 270: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004174917936325073
    2. '
' → logprob: -6.504174709320068
    3. '                   ' → logprob: -7.129174709320068
    4. '<|end|>' → logprob: -7.879174709320068
    5. '                
' → logprob: -8.129175186157227
    6. '           ' → logprob: -8.254175186157227
    7. '       ' → logprob: -8.629175186157227
    8. '                       ' → logprob: -8.754175186157227
    9. '```' → logprob: -9.129175186157227
    10. '  
' → logprob: -9.254175186157227

Token 271: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003545901272445917
    2. '<|end|>' → logprob: -6.003545761108398
    3. '
' → logprob: -8.378545761108398
    4. '                   ' → logprob: -8.753545761108398
    5. '                
' → logprob: -8.878545761108398
    6. ' ' → logprob: -9.128545761108398
    7. '           ' → logprob: -9.253545761108398
    8. '                ' → logprob: -9.378545761108398
    9. '  
' → logprob: -10.128545761108398
    10. '       ' → logprob: -10.128545761108398

Token 272: ' on' (ID: 402)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.09815911948680878
    2. ' on' → logprob: -2.473159074783325
    3. 'not' → logprob: -5.223159313201904
    4. 'on' → logprob: -6.348159313201904
    5. ' (' → logprob: -7.098159313201904
    6. ' len' → logprob: -7.348159313201904
    7. '(not' → logprob: -8.723158836364746
    8. ' ' → logprob: -8.848158836364746
    9. '(' → logprob: -9.473158836364746
    10. '   ' → logprob: -9.598158836364746

Token 273: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0007254178053699434
    2. '_positive' → logprob: -7.500725269317627
    3. 'line' → logprob: -9.250725746154785
    4. '_on' → logprob: -10.125725746154785
    5. '_' → logprob: -11.625725746154785
    6. 'on' → logprob: -11.750725746154785
    7. '_not' → logprob: -12.750725746154785
    8. '_linear' → logprob: -12.750725746154785
    9. 'positive' → logprob: -12.875725746154785
    10. 'not' → logprob: -13.250725746154785

Token 274: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018235981464385986
    2. ':
' → logprob: -4.39323616027832
    3. '==' → logprob: -5.39323616027832
    4. ' ==' → logprob: -7.64323616027832
    5. '           ' → logprob: -8.76823616027832
    6. ' continue' → logprob: -8.89323616027832
    7. '       ' → logprob: -9.14323616027832
    8. 'continue' → logprob: -9.64323616027832
    9. ' continues' → logprob: -10.14323616027832
    10. '=' → logprob: -10.51823616027832

Token 275: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.057917650789022446
    2. ' continue' → logprob: -3.557917594909668
    3. '           ' → logprob: -3.807917594909668
    4. '               ' → logprob: -6.057917594909668
    5. 'continue' → logprob: -6.807917594909668
    6. '                       ' → logprob: -6.807917594909668
    7. '	continue' → logprob: -7.807917594909668
    8. '       ' → logprob: -8.557917594909668
    9. '   ' → logprob: -9.307917594909668
    10. ' continues' → logprob: -9.307917594909668

Token 276: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.11822107434272766
    2. '                   ' → logprob: -2.6182210445404053
    3. ' continue' → logprob: -3.3682210445404053
    4. '                       ' → logprob: -6.493221282958984
    5. '	continue' → logprob: -6.743221282958984
    6. '               ' → logprob: -6.743221282958984
    7. '           ' → logprob: -9.243221282958984
    8. '   ' → logprob: -9.368221282958984
    9. '_continue' → logprob: -10.993221282958984
    10. '       ' → logprob: -11.243221282958984

Token 277: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.051739372313022614
    2. '                
' → logprob: -3.551739454269409
    3. '<|end|>' → logprob: -4.30173921585083
    4. '
' → logprob: -5.30173921585083
    5. '                ' → logprob: -6.80173921585083
    6. '  
' → logprob: -7.42673921585083
    7. '<|end|>' → logprob: -7.92673921585083
    8. '    
' → logprob: -8.551739692687988
    9. '                    
' → logprob: -8.926739692687988
    10. '                 
' → logprob: -9.051739692687988

Token 278: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018490545451641083
    2. '                ' → logprob: -4.268490314483643
    3. '                
' → logprob: -5.643490314483643
    4. '                   ' → logprob: -8.6434907913208
    5. '<|end|>' → logprob: -8.7684907913208
    6. '                 
' → logprob: -9.1434907913208
    7. '              ' → logprob: -9.6434907913208
    8. '                    
' → logprob: -10.0184907913208
    9. '  
' → logprob: -10.7684907913208
    10. '               
' → logprob: -10.7684907913208

Token 279: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6428629755973816
    2. ' if' → logprob: -0.8928629755973816
    3. '       ' → logprob: -3.5178630352020264
    4. 'if' → logprob: -4.267862796783447
    5. '                ' → logprob: -5.392862796783447
    6. '                
' → logprob: -5.517862796783447
    7. '   ' → logprob: -6.017862796783447
    8. ' ' → logprob: -6.392862796783447
    9. ' black' → logprob: -6.642862796783447
    10. ' all' → logprob: -6.767862796783447

Token 280: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9670756459236145
    2. ' if' → logprob: -0.9670756459236145
    3. 'pos' → logprob: -2.8420755863189697
    4. ' all' → logprob: -2.9670755863189697
    5. 'all' → logprob: -3.4670755863189697
    6. ' black' → logprob: -3.7170755863189697
    7. 'black' → logprob: -3.9670755863189697
    8. ' pos' → logprob: -4.217075824737549
    9. 'colors' → logprob: -4.592075824737549
    10. 'labels' → logprob: -4.717075824737549

Token 281: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0037126655224710703
    2. 'if' → logprob: -5.6287126541137695
    3. ' all' → logprob: -10.00371265411377
    4. ' (' → logprob: -10.37871265411377
    5. '               ' → logprob: -11.12871265411377
    6. ' whether' → logprob: -11.50371265411377
    7. '                   ' → logprob: -12.75371265411377
    8. ' len' → logprob: -12.75371265411377
    9. '   ' → logprob: -13.37871265411377
    10. '(' → logprob: -14.00371265411377

Token 282: ' one' (ID: 1001)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8805966973304749
    2. '(len' → logprob: -0.8805966973304749
    3. ' all' → logprob: -3.13059663772583
    4. '(' → logprob: -3.38059663772583
    5. 'len' → logprob: -3.75559663772583
    6. 'all' → logprob: -4.00559663772583
    7. '(all' → logprob: -4.00559663772583
    8. '(set' → logprob: -4.25559663772583
    9. ' len' → logprob: -4.50559663772583
    10. ' set' → logprob: -6.13059663772583

Token 283: ' side' (ID: 4307)
  Prédit: ' side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' side' → logprob: -0.07270682603120804
    2. ' of' → logprob: -3.322706937789917
    3. 'side' → logprob: -3.697706937789917
    4. ' set' → logprob: -5.072706699371338
    5. '   ' → logprob: -7.197706699371338
    6. ' group' → logprob: -7.322706699371338
    7. 'of' → logprob: -7.822706699371338
    8. 's' → logprob: -7.947706699371338
    9. ' ' → logprob: -8.322707176208496
    10. 'set' → logprob: -9.072707176208496

Token 284: ' has' (ID: 853)
  Prédit: ' contains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contains' → logprob: -0.6226392388343811
    2. 'contains' → logprob: -1.1226391792297363
    3. ' has' → logprob: -3.2476391792297363
    4. ' is' → logprob: -3.4976391792297363
    5. ' only' → logprob: -4.247639179229736
    6. 'is' → logprob: -4.497639179229736
    7. 'only' → logprob: -4.497639179229736
    8. ' ==' → logprob: -5.372639179229736
    9. '==' → logprob: -5.497639179229736
    10. 'has' → logprob: -5.497639179229736

Token 285: ' only' (ID: 1606)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.4170740246772766
    2. ' all' → logprob: -1.9170739650726318
    3. 'black' → logprob: -2.542073965072632
    4. ' black' → logprob: -3.292073965072632
    5. ' points' → logprob: -3.667073965072632
    6. 'points' → logprob: -3.792073965072632
    7. 'only' → logprob: -4.042074203491211
    8. ' only' → logprob: -5.167074203491211
    9. 'len' → logprob: -5.917074203491211
    10. 'no' → logprob: -6.417074203491211

Token 286: ' black' (ID: 5960)
  Prédit: 'black'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'black' → logprob: -0.12341990321874619
    2. ' black' → logprob: -2.748420000076294
    3. 'points' → logprob: -3.123420000076294
    4. ' points' → logprob: -4.998419761657715
    5. 'indices' → logprob: -7.123419761657715
    6. 'white' → logprob: -8.248419761657715
    7. ' indices' → logprob: -9.123419761657715
    8. 'indexes' → logprob: -10.498419761657715
    9. ' blacks' → logprob: -10.623419761657715
    10. 'n' → logprob: -11.248419761657715

Token 287: ' and' (ID: 326)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.6460315585136414
    2. 'points' → logprob: -1.5210316181182861
    3. ' points' → logprob: -2.021031618118286
    4. '_points' → logprob: -3.271031618118286
    5. ' ' → logprob: -3.771031618118286
    6. '<|end|>' → logprob: -4.271031379699707
    7. ' and' → logprob: -4.396031379699707
    8. '_' → logprob: -5.021031379699707
    9. 'or' → logprob: -5.271031379699707
    10. 'tokens' → logprob: -5.396031379699707

Token 288: ' other' (ID: 1273)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.0548204183578491
    2. 'white' → logprob: -1.1798204183578491
    3. ' white' → logprob: -1.8048204183578491
    4. 'all' → logprob: -1.9298204183578491
    5. '   ' → logprob: -4.179820537567139
    6. ' not' → logprob: -5.554820537567139
    7. ' black' → logprob: -5.929820537567139
    8. 'black' → logprob: -6.054820537567139
    9. ' ' → logprob: -6.304820537567139
    10. ' on' → logprob: -6.804820537567139

Token 289: ' only' (ID: 1606)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.24051421880722046
    2. 'points' → logprob: -2.4905142784118652
    3. ' or' → logprob: -2.6155142784118652
    4. '_points' → logprob: -4.490514278411865
    5. ':' → logprob: -4.615514278411865
    6. ' is' → logprob: -4.990514278411865
    7. ' sides' → logprob: -5.615514278411865
    8. ' has' → logprob: -5.740514278411865
    9. '   ' → logprob: -5.990514278411865
    10. ' black' → logprob: -5.990514278411865

Token 290: ' white' (ID: 6461)
  Prédit: 'black'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'black' → logprob: -0.1300322711467743
    2. ' black' → logprob: -2.5050323009490967
    3. 'white' → logprob: -3.2550323009490967
    4. ' white' → logprob: -6.630032062530518
    5. 'points' → logprob: -8.755032539367676
    6. '   ' → logprob: -9.630032539367676
    7. '_black' → logprob: -9.880032539367676
    8. ' points' → logprob: -10.380032539367676
    9. ' ' → logprob: -11.630032539367676
    10. ' blacks' → logprob: -11.755032539367676

Token 291: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001860807416960597
    2. ':' → logprob: -7.626860618591309
    3. ',' → logprob: -7.876860618591309
    4. '                
' → logprob: -8.001860618591309
    5. '       ' → logprob: -8.876860618591309
    6. '<|end|>' → logprob: -9.001860618591309
    7. '                   ' → logprob: -9.501860618591309
    8. ':
' → logprob: -9.626860618591309
    9. '           ' → logprob: -9.876860618591309
    10. '   ' → logprob: -10.751860618591309

Token 292: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013483305228874087
    2. '                
' → logprob: -7.126348495483398
    3. '                   ' → logprob: -8.376348495483398
    4. '                ' → logprob: -9.376348495483398
    5. '       ' → logprob: -9.501348495483398
    6. '           ' → logprob: -10.626348495483398
    7. ',' → logprob: -11.251348495483398
    8. '<|end|>' → logprob: -11.376348495483398
    9. '  
' → logprob: -11.501348495483398
    10. '
' → logprob: -11.501348495483398

Token 293: ' def' (ID: 1056)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7036202549934387
    2. '               ' → logprob: -0.8286202549934387
    3. ' black' → logprob: -3.203620195388794
    4. 'if' → logprob: -3.953620195388794
    5. 'black' → logprob: -5.828620433807373
    6. '                   ' → logprob: -6.328620433807373
    7. ' positive' → logprob: -6.578620433807373
    8. ' pos' → logprob: -8.078619956970215
    9. 'positive' → logprob: -8.328619956970215
    10. '                ' → logprob: -8.453619956970215

Token 294: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.6341983675956726
    2. ' is' → logprob: -1.1341984272003174
    3. 'all' → logprob: -3.1341984272003174
    4. ' check' → logprob: -3.8841984272003174
    5. 'is' → logprob: -4.259198188781738
    6. ' points' → logprob: -4.259198188781738
    7. ' color' → logprob: -4.384198188781738
    8. ' point' → logprob: -5.009198188781738
    9. ' get' → logprob: -5.509198188781738
    10. ' black' → logprob: -5.759198188781738

Token 295: '_black' (ID: 92024)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.20673944056034088
    2. '(' → logprob: -2.0817394256591797
    3. '_black' → logprob: -4.33173942565918
    4. '(x' → logprob: -4.58173942565918
    5. '(points' → logprob: -5.08173942565918
    6. ' (' → logprob: -5.08173942565918
    7. '(_' → logprob: -5.20673942565918
    8. '(color' → logprob: -5.58173942565918
    9. '(point' → logprob: -5.95673942565918
    10. '(p' → logprob: -6.33173942565918

Token 296: '(indices' (ID: 161036)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.3110843300819397
    2. '(lst' → logprob: -2.311084270477295
    3. '=' → logprob: -3.061084270477295
    4. '():' → logprob: -3.311084270477295
    5. ' =' → logprob: -3.436084270477295
    6. '(' → logprob: -4.061084270477295
    7. '(indices' → logprob: -4.561084270477295
    8. '():
' → logprob: -5.811084270477295
    9. '   ' → logprob: -5.811084270477295
    10. '(idx' → logprob: -6.061084270477295

Token 297: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2537473142147064
    2. '):
' → logprob: -1.5037473440170288
    3. '():
' → logprob: -7.378747463226318
    4. ')' → logprob: -7.753747463226318
    5. '():' → logprob: -8.00374698638916
    6. '()' → logprob: -8.50374698638916
    7. '()):
' → logprob: -9.25374698638916
    8. '):
' → logprob: -10.00374698638916
    9. '):

' → logprob: -10.87874698638916
    10. '   ' → logprob: -11.00374698638916

Token 298: '                   ' (ID: 699)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6206995248794556
    2. ' for' → logprob: -1.7456995248794556
    3. '   ' → logprob: -1.9956995248794556
    4. ':' → logprob: -3.245699405670166
    5. ' if' → logprob: -4.245699405670166
    6. '       ' → logprob: -4.495699405670166
    7. '(' → logprob: -4.745699405670166
    8. ' indices' → logprob: -4.745699405670166
    9. '<|end|>' → logprob: -4.995699405670166
    10. ' (' → logprob: -4.995699405670166

Token 299: ' for' (ID: 395)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.346909761428833
    2. 'for' (adapté à ' for') → logprob: -1.346909761428833
    3. ' for' → logprob: -1.471909761428833
    4. ' return' → logprob: -1.596909761428833
    5. '   ' → logprob: -3.596909761428833
    6. '       ' → logprob: -3.971909761428833
    7. '                   ' → logprob: -7.596909523010254
    8. ' all' → logprob: -7.971909523010254
    9. '    ' → logprob: -8.221909523010254
    10. '                       ' → logprob: -8.346909523010254

Token 300: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00250217504799366
    2. ' idx' → logprob: -6.752501964569092
    3. 'index' → logprob: -6.752501964569092
    4. 'i' → logprob: -9.00250244140625
    5. 'x' → logprob: -10.25250244140625
    6. 'ind' → logprob: -13.25250244140625
    7. 'id' → logprob: -13.37750244140625
    8. 'ix' → logprob: -14.37750244140625
    9. ' index' → logprob: -15.50250244140625
    10. 'ii' → logprob: -15.50250244140625

Token 301: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06995488703250885
    2. 'in' → logprob: -2.6949548721313477
    3. '   ' → logprob: -12.319954872131348
    4. ' ' → logprob: -12.444954872131348
    5. '	in' → logprob: -12.819954872131348
    6. 's' → logprob: -13.194954872131348
    7. '_in' → logprob: -13.444954872131348
    8. '  ' → logprob: -13.819954872131348
    9. 'not' → logprob: -13.944954872131348
    10. '<|end|>' → logprob: -14.694954872131348

Token 302: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.009895743802189827
    2. ' indices' → logprob: -4.6348958015441895
    3. 'indexes' → logprob: -10.009895324707031
    4. '   ' → logprob: -10.259895324707031
    5. 'on' → logprob: -11.259895324707031
    6. '(indices' → logprob: -11.384895324707031
    7. ' on' → logprob: -12.009895324707031
    8. '.indices' → logprob: -12.259895324707031
    9. '                   ' → logprob: -12.509895324707031
    10. ' ' → logprob: -12.634895324707031

Token 303: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5224108695983887
    2. '       ' → logprob: -1.5224108695983887
    3. ':
' → logprob: -1.8974108695983887
    4. '   ' → logprob: -4.147410869598389
    5. '<|end|>' → logprob: -4.897410869598389
    6. '                       ' → logprob: -5.022410869598389
    7. ' if' → logprob: -6.147410869598389
    8. ' in' → logprob: -6.897410869598389
    9. '                           ' → logprob: -7.272410869598389
    10. '                               ' → logprob: -7.397410869598389

Token 304: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.2559907138347626
    2. ' if' → logprob: -2.255990743637085
    3. '       ' → logprob: -2.630990743637085
    4. '   ' → logprob: -3.755990743637085
    5. '                           ' → logprob: -5.505990505218506
    6. 'if' → logprob: -5.505990505218506
    7. ':' → logprob: -5.630990505218506
    8. ':
' → logprob: -6.255990505218506
    9. '                   ' → logprob: -6.505990505218506
    10. '           ' → logprob: -6.630990505218506

Token 305: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20333200693130493
    2. 'if' (adapté à ' if') → logprob: -1.7033319473266602
    3. '                       ' → logprob: -6.70333194732666
    4. '                           ' → logprob: -7.82833194732666
    5. '   ' → logprob: -8.95333194732666
    6. '	if' → logprob: -9.07833194732666
    7. ' ' → logprob: -11.45333194732666
    8. '                               ' → logprob: -11.45333194732666
    9. '       ' → logprob: -11.95333194732666
    10. '           ' → logprob: -12.32833194732666

Token 306: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6554153561592102
    2. ' points' → logprob: -1.5304152965545654
    3. 'points' → logprob: -1.7804152965545654
    4. ' idx' → logprob: -2.4054152965545654
    5. '                           ' → logprob: -6.5304155349731445
    6. '                       ' → logprob: -7.0304155349731445
    7. '(idx' → logprob: -7.7804155349731445
    8. 'white' → logprob: -7.7804155349731445
    9. 'indices' → logprob: -8.155415534973145
    10. '(points' → logprob: -8.280415534973145

Token 307: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7989715337753296
    2. '>=' → logprob: -1.4239715337753296
    3. ' not' → logprob: -1.6739715337753296
    4. 'not' → logprob: -2.548971652984619
    5. ']>=' → logprob: -3.673971652984619
    6. ']' → logprob: -5.173971652984619
    7. ' <' → logprob: -5.798971652984619
    8. '<' → logprob: -6.298971652984619
    9. ' in' → logprob: -6.548971652984619
    10. '<len' → logprob: -6.673971652984619

Token 308: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0015943651087582111
    2. 'len' → logprob: -6.626594543457031
    3. ' n' → logprob: -8.501594543457031
    4. '   ' → logprob: -9.876594543457031
    5. '0' → logprob: -12.251594543457031
    6. 'black' → logprob: -12.251594543457031
    7. ' len' → logprob: -13.376594543457031
    8. '	n' → logprob: -13.501594543457031
    9. ' ' → logprob: -14.626594543457031
    10. '  ' → logprob: -14.876594543457031

Token 309: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7925404906272888
    2. ':' → logprob: -1.0425405502319336
    3. ' or' → logprob: -2.2925405502319336
    4. ' and' → logprob: -3.0425405502319336
    5. 'and' → logprob: -3.4175405502319336
    6. '                       ' → logprob: -5.417540550231934
    7. '                           ' → logprob: -6.042540550231934
    8. 'or' → logprob: -6.292540550231934
    9. '):
' → logprob: -6.792540550231934
    10. ':return' → logprob: -7.542540550231934

Token 310: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.1958373636007309
    2. ':
' → logprob: -2.8208372592926025
    3. ':' → logprob: -2.9458372592926025
    4. '                       ' → logprob: -2.9458372592926025
    5. '                               ' → logprob: -5.820837497711182
    6. ' return' → logprob: -6.570837497711182
    7. '):
' → logprob: -6.820837497711182
    8. ':return' → logprob: -6.945837497711182
    9. ' :' → logprob: -7.070837497711182
    10. '           ' → logprob: -7.070837497711182

Token 311: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4462510645389557
    2. 'return' (adapté à ' return') → logprob: -1.0712510347366333
    3. '                       ' → logprob: -4.446250915527344
    4. '                           ' → logprob: -5.321250915527344
    5. '                               ' → logprob: -7.571250915527344
    6. '   ' → logprob: -9.196250915527344
    7. '	return' → logprob: -9.821250915527344
    8. 'False' → logprob: -10.946250915527344
    9. '       ' → logprob: -11.196250915527344
    10. ' ' → logprob: -11.321250915527344

Token 312: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0004306692280806601
    2. ' False' → logprob: -7.750430583953857
    3. 'True' → logprob: -17.375431060791016
    4. 'false' → logprob: -21.875431060791016
    5. '(False' → logprob: -22.000431060791016
    6. 'F' → logprob: -22.250431060791016
    7. '   ' → logprob: -22.250431060791016
    8. '0' → logprob: -22.375431060791016
    9. '
' → logprob: -24.125431060791016
    10. ' True' → logprob: -24.625431060791016

Token 313: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.036949511617422104
    2. '                       ' → logprob: -4.036949634552002
    3. '               ' → logprob: -4.286949634552002
    4. '           ' → logprob: -6.661949634552002
    5. '       ' → logprob: -7.411949634552002
    6. ' return' → logprob: -7.411949634552002
    7. ')' → logprob: -7.536949634552002
    8. '   ' → logprob: -7.661949634552002
    9. '<|end|>' → logprob: -7.661949634552002
    10. 'return' → logprob: -8.286949157714844

Token 314: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11005296558141708
    2. '               ' → logprob: -2.985053062438965
    3. '                       ' → logprob: -3.110053062438965
    4. '           ' → logprob: -5.860053062438965
    5. '
' → logprob: -6.110053062438965
    6. '       ' → logprob: -6.860053062438965
    7. '   ' → logprob: -7.110053062438965
    8. '    
' → logprob: -8.110053062438965
    9. ' return' → logprob: -8.110053062438965
    10. '                  ' → logprob: -8.610053062438965

Token 315: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13343943655490875
    2. '               ' → logprob: -2.133439540863037
    3. '           ' → logprob: -6.133439540863037
    4. 'return' (adapté à ' return') → logprob: -6.383439540863037
    5. '                       ' → logprob: -7.008439540863037
    6. '       ' → logprob: -7.133439540863037
    7. ' return' → logprob: -7.633439540863037
    8. '   ' → logprob: -8.258439064025879
    9. '	return' → logprob: -9.883439064025879
    10. '
' → logprob: -10.133439064025879

Token 316: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.04858941584825516
    2. ' True' → logprob: -3.0485894680023193
    3. '   ' → logprob: -13.173589706420898
    4. '(True' → logprob: -15.923589706420898
    5. '=True' → logprob: -18.1735897064209
    6. 'False' → logprob: -18.2985897064209
    7. '               ' → logprob: -19.1735897064209
    8. ' ' → logprob: -19.1735897064209
    9. '                   ' → logprob: -19.1735897064209
    10. '
' → logprob: -19.5485897064209

Token 317: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 318: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011086373589932919
    2. '<|end|>' → logprob: -5.386086463928223
    3. '                
' → logprob: -5.761086463928223
    4. '
' → logprob: -7.136086463928223
    5. '                    
' → logprob: -8.011086463928223
    6. ')' → logprob: -8.011086463928223
    7. '                   ' → logprob: -8.261086463928223
    8. '  
' → logprob: -8.261086463928223
    9. '    
' → logprob: -8.386086463928223
    10. '                ' → logprob: -8.511086463928223

Token 319: ' def' (ID: 1056)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006666939705610275
    2. 'def' (adapté à ' def') → logprob: -5.131667137145996
    3. '                
' → logprob: -7.631667137145996
    4. ' def' → logprob: -8.756667137145996
    5. '```' → logprob: -10.256667137145996
    6. '                   ' → logprob: -11.381667137145996
    7. '
' → logprob: -11.381667137145996
    8. '                ' → logprob: -11.381667137145996
    9. '                    
' → logprob: -12.756667137145996
    10. '              ' → logprob: -12.756667137145996

Token 320: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.016040468588471413
    2. ' all' → logprob: -4.141040325164795
    3. ' ' → logprob: -13.016040802001953
    4. '   ' → logprob: -13.141040802001953
    5. '	all' → logprob: -14.141040802001953
    6. 'any' → logprob: -14.641040802001953
    7. 'not' → logprob: -16.391040802001953
    8. '  ' → logprob: -16.641040802001953
    9. 'def' → logprob: -16.766040802001953
    10. 'is' → logprob: -16.766040802001953

Token 321: '_white' (ID: 105599)
  Prédit: '_white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_white' → logprob: -0.00016313401283696294
    2. '_black' → logprob: -8.750163078308105
    3. 'white' → logprob: -12.500163078308105
    4. '_' → logprob: -14.875163078308105
    5. '_wh' → logprob: -15.000163078308105
    6. ' _' → logprob: -16.250164031982422
    7. '_WHITE' → logprob: -17.000164031982422
    8. ' white' → logprob: -17.625164031982422
    9. '
' → logprob: -18.250164031982422
    10. '_w' → logprob: -18.375164031982422

Token 322: '(indices' (ID: 161036)
  Prédit: '(indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(indices' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.50000286102295
    3. ' (' → logprob: -14.00000286102295
    4. '"indices' → logprob: -15.62500286102295
    5. '(ids' → logprob: -17.000001907348633
    6. '(ind' → logprob: -17.125001907348633
    7. 'indices' → logprob: -17.625001907348633
    8. '(points' → logprob: -19.125001907348633
    9. '(idx' → logprob: -19.375001907348633
    10. '(index' → logprob: -19.500001907348633

Token 323: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.282781720161438
    2. '):' → logprob: -1.407781720161438
    3. '(indices' → logprob: -6.782781600952148
    4. '):
' → logprob: -8.282781600952148
    5. '):

' → logprob: -9.282781600952148
    6. 'indices' → logprob: -10.282781600952148
    7. '   ' → logprob: -10.657781600952148
    8. ' ):
' → logprob: -10.782781600952148
    9. ')' → logprob: -11.032781600952148
    10. ':' → logprob: -11.407781600952148

Token 324: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.027129599824547768
    2. ' for' → logprob: -4.277129650115967
    3. '   ' → logprob: -5.027129650115967
    4. '           ' → logprob: -6.402129650115967
    5. '               ' → logprob: -6.402129650115967
    6. '       ' → logprob: -7.027129650115967
    7. '    ' → logprob: -8.152129173278809
    8. '                    
' → logprob: -8.152129173278809
    9. '    
' → logprob: -8.277129173278809
    10. '                       ' → logprob: -8.652129173278809

Token 325: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.012352706864476204
    2. 'for' (adapté à ' for') → logprob: -4.51235294342041
    3. '                   ' → logprob: -6.76235294342041
    4. '   ' → logprob: -9.63735294342041
    5. '	for' → logprob: -10.76235294342041
    6. '               ' → logprob: -10.76235294342041
    7. '                       ' → logprob: -11.01235294342041
    8. '       ' → logprob: -11.63735294342041
    9. ' ' → logprob: -11.88735294342041
    10. '           ' → logprob: -12.01235294342041

Token 326: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.20141500234603882
    2. 'idx' → logprob: -1.7014150619506836
    3. '	idx' → logprob: -13.826415061950684
    4. 'index' → logprob: -15.701415061950684
    5. '_idx' → logprob: -16.076414108276367
    6. ' ' → logprob: -16.201414108276367
    7. '(idx' → logprob: -16.201414108276367
    8. '[idx' → logprob: -16.326414108276367
    9. '   ' → logprob: -16.451414108276367
    10. 'x' → logprob: -17.076414108276367

Token 327: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011823695385828614
    2. 'in' → logprob: -6.751182556152344
    3. '                    ' → logprob: -13.126182556152344
    4. ' not' → logprob: -13.251182556152344
    5. '	in' → logprob: -13.251182556152344
    6. '                   ' → logprob: -13.376182556152344
    7. ' ' → logprob: -13.501182556152344
    8. '                ' → logprob: -14.376182556152344
    9. '_in' → logprob: -14.501182556152344
    10. 'not' → logprob: -14.626182556152344

Token 328: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.0620146282017231
    2. ' indices' → logprob: -2.812014579772949
    3. '(indices' → logprob: -10.93701457977295
    4. 'indexes' → logprob: -11.68701457977295
    5. '   ' → logprob: -12.56201457977295
    6. 'points' → logprob: -12.93701457977295
    7. '.indices' → logprob: -13.06201457977295
    8. 'range' → logprob: -13.06201457977295
    9. ' points' → logprob: -13.18701457977295
    10. ' range' → logprob: -13.18701457977295

Token 329: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.37512102723121643
    2. ':
' → logprob: -1.875120997428894
    3. ':' → logprob: -2.0001211166381836
    4. '                   ' → logprob: -4.000121116638184
    5. '                      ' → logprob: -6.875121116638184
    6. '>=' → logprob: -6.875121116638184
    7. '               ' → logprob: -7.000121116638184
    8. ' >=' → logprob: -7.375121116638184
    9. '):
' → logprob: -7.625121116638184
    10. '       ' → logprob: -8.000121116638184

Token 330: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.000509187753777951
    2. '                   ' → logprob: -8.125509262084961
    3. '                      ' → logprob: -9.750509262084961
    4. '               ' → logprob: -9.875509262084961
    5. ' if' → logprob: -10.375509262084961
    6. '       ' → logprob: -10.375509262084961
    7. '   ' → logprob: -11.625509262084961
    8. '                     ' → logprob: -11.750509262084961
    9. '                        ' → logprob: -12.125509262084961
    10. '           ' → logprob: -12.625509262084961

Token 331: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28563886880874634
    2. 'if' (adapté à ' if') → logprob: -1.5356388092041016
    3. '                   ' → logprob: -3.6606388092041016
    4. 'idx' → logprob: -6.035638809204102
    5. '   ' → logprob: -6.410638809204102
    6. '                       ' → logprob: -6.535638809204102
    7. '                           ' → logprob: -7.535638809204102
    8. ' idx' → logprob: -7.785638809204102
    9. '           ' → logprob: -8.035638809204102
    10. '               ' → logprob: -8.035638809204102

Token 332: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.38690245151519775
    2. ' idx' → logprob: -1.1369024515151978
    3. '	idx' → logprob: -11.261902809143066
    4. '(idx' → logprob: -12.011902809143066
    5. '[idx' → logprob: -12.136902809143066
    6. '0' → logprob: -13.011902809143066
    7. '                           ' → logprob: -13.761902809143066
    8. '                       ' → logprob: -13.761902809143066
    9. ' ' → logprob: -14.011902809143066
    10. '                   ' → logprob: -14.136902809143066

Token 333: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3067523241043091
    2. '<' → logprob: -1.556752324104309
    3. '<n' → logprob: -2.9317522048950195
    4. '<int' → logprob: -11.43175220489502
    5. '<len' → logprob: -11.55675220489502
    6. '<size' → logprob: -12.55675220489502
    7. '<N' → logprob: -12.68175220489502
    8. '<m' → logprob: -12.80675220489502
    9. '<num' → logprob: -12.93175220489502
    10. 'n' → logprob: -13.05675220489502

Token 334: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02325887233018875
    2. ' n' → logprob: -3.773258924484253
    3. '0' → logprob: -11.273259162902832
    4. '	n' → logprob: -14.648259162902832
    5. '   ' → logprob: -15.523259162902832
    6. ' ' → logprob: -16.773258209228516
    7. '_n' → logprob: -18.648258209228516
    8. '
' → logprob: -18.898258209228516
    9. 'black' → logprob: -19.023258209228516
    10. '    ' → logprob: -19.523258209228516

Token 335: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14037595689296722
    2. '                           ' → logprob: -2.140375852584839
    3. ':' → logprob: -4.515376091003418
    4. '):
' → logprob: -6.640376091003418
    5. '           ' → logprob: -7.765376091003418
    6. '                       ' → logprob: -7.890376091003418
    7. ':return' → logprob: -8.890376091003418
    8. '():
' → logprob: -9.890376091003418
    9. '                   ' → logprob: -10.390376091003418
    10. '               ' → logprob: -11.390376091003418

Token 336: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0006297559011727571
    2. ' return' → logprob: -8.375629425048828
    3. ':
' → logprob: -9.000629425048828
    4. 'return' → logprob: -9.125629425048828
    5. '                       ' → logprob: -9.375629425048828
    6. '           ' → logprob: -10.625629425048828
    7. '                               ' → logprob: -11.125629425048828
    8. ':' → logprob: -11.625629425048828
    9. '                   ' → logprob: -11.875629425048828
    10. '):
' → logprob: -12.125629425048828

Token 337: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.48107674717903137
    2. 'return' (adapté à ' return') → logprob: -0.981076717376709
    3. '                           ' → logprob: -4.981076717376709
    4. '                       ' → logprob: -9.731077194213867
    5. '           ' → logprob: -10.981077194213867
    6. '                   ' → logprob: -11.731077194213867
    7. '	return' → logprob: -11.856077194213867
    8. '   ' → logprob: -12.481077194213867
    9. '
' → logprob: -12.606077194213867
    10. '               ' → logprob: -12.981077194213867

Token 338: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.165027217415627e-05
    2. ' False' → logprob: -10.750021934509277
    3. 'True' → logprob: -16.50002098083496
    4. '   ' → logprob: -21.25002098083496
    5. '(False' → logprob: -22.75002098083496
    6. '
' → logprob: -23.87502098083496
    7. '=False' → logprob: -24.75002098083496
    8. 'false' → logprob: -25.25002098083496
    9. '_false' → logprob: -25.87502098083496
    10. '       ' → logprob: -26.12502098083496

Token 339: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.020174765959382057
    2. '               ' → logprob: -4.145174980163574
    3. '                       ' → logprob: -6.395174980163574
    4. '           ' → logprob: -7.145174980163574
    5. ' return' → logprob: -7.645174980163574
    6. 'return' → logprob: -8.145174980163574
    7. ')' → logprob: -8.145174980163574
    8. '   ' → logprob: -8.395174980163574
    9. '
' → logprob: -9.145174980163574
    10. '                           ' → logprob: -9.520174980163574

Token 340: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5315099358558655
    2. '               ' → logprob: -0.9065099358558655
    3. '                       ' → logprob: -5.031509876251221
    4. ' return' → logprob: -7.406509876251221
    5. '           ' → logprob: -7.781509876251221
    6. 'return' → logprob: -7.906509876251221
    7. '
' → logprob: -8.406510353088379
    8. '   ' → logprob: -9.656510353088379
    9. '                           ' → logprob: -10.031510353088379
    10. '       ' → logprob: -10.156510353088379

Token 341: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.032122716307640076
    2. 'return' (adapté à ' return') → logprob: -4.532122611999512
    3. '                   ' → logprob: -4.532122611999512
    4. ' return' → logprob: -5.032122611999512
    5. '           ' → logprob: -6.157122611999512
    6. '   ' → logprob: -7.532122611999512
    7. '       ' → logprob: -7.657122611999512
    8. '                       ' → logprob: -8.407122611999512
    9. '
' → logprob: -8.907122611999512
    10. '	return' → logprob: -9.907122611999512

Token 342: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.008615872822701931
    2. ' True' → logprob: -4.758615970611572
    3. 'False' → logprob: -13.508615493774414
    4. '(True' → logprob: -18.883615493774414
    5. ' False' → logprob: -20.633615493774414
    6. '=True' → logprob: -22.133615493774414
    7. 'Tr' → logprob: -24.383615493774414
    8. '   ' → logprob: -24.383615493774414
    9. '
' → logprob: -24.758615493774414
    10. 'T' → logprob: -24.758615493774414

Token 343: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1695907711982727
    2. '
' → logprob: -1.919590711593628
    3. '                
' → logprob: -5.294590950012207
    4. '<|end|>' → logprob: -5.794590950012207
    5. '  
' → logprob: -7.919590950012207
    6. '    
' → logprob: -8.544590950012207
    7. '<|end|>' → logprob: -9.169590950012207
    8. '           ' → logprob: -9.419590950012207
    9. '            
' → logprob: -9.544590950012207
    10. ')' → logprob: -9.919590950012207

Token 344: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00016635251813568175
    2. '                
' → logprob: -8.875165939331055
    3. '
' → logprob: -12.000165939331055
    4. '                   ' → logprob: -12.125165939331055
    5. '    
' → logprob: -12.625165939331055
    6. '           ' → logprob: -12.750165939331055
    7. '  
' → logprob: -13.500165939331055
    8. '                ' → logprob: -13.875165939331055
    9. '<|end|>' → logprob: -13.875165939331055
    10. '                    
' → logprob: -14.000165939331055

Token 345: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005115681560710073
    2. 'if' (adapté à ' if') → logprob: -7.750511646270752
    3. ' if' → logprob: -9.875511169433594
    4. '                
' → logprob: -11.125511169433594
    5. '                   ' → logprob: -12.250511169433594
    6. '
' → logprob: -12.250511169433594
    7. '           ' → logprob: -12.875511169433594
    8. '   ' → logprob: -14.250511169433594
    9. '    
' → logprob: -14.375511169433594
    10. '                ' → logprob: -15.125511169433594

Token 346: ' (' (ID: 350)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.06889801472425461
    2. 'all' → logprob: -3.3188979625701904
    3. ' (' → logprob: -3.5688979625701904
    4. '(all' → logprob: -6.4438982009887695
    5. ' on' → logprob: -8.56889820098877
    6. '(' → logprob: -8.81889820098877
    7. '   ' → logprob: -8.81889820098877
    8. ' ' → logprob: -9.69389820098877
    9. '    ' → logprob: -10.81889820098877
    10. '  ' → logprob: -11.94389820098877

Token 347: 'all' (ID: 586)
  Prédit: 'all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.024297839030623436
    2. ' all' → logprob: -3.8992979526519775
    3. '(all' → logprob: -5.774297714233398
    4. ' (' → logprob: -7.524297714233398
    5. '   ' → logprob: -10.524297714233398
    6. '(' → logprob: -10.774297714233398
    7. ' ' → logprob: -11.274297714233398
    8. 'len' → logprob: -11.274297714233398
    9. '(len' → logprob: -12.149297714233398
    10. 'on' → logprob: -12.524297714233398

Token 348: '_black' (ID: 92024)
  Prédit: '_black'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_black' → logprob: -0.000182921823579818
    2. '_white' → logprob: -8.62518310546875
    3. '_' → logprob: -13.75018310546875
    4. '_positive' → logprob: -14.12518310546875
    5. ')_' → logprob: -14.75018310546875
    6. ' _' → logprob: -14.87518310546875
    7. '_blue' → logprob: -15.87518310546875
    8. '_bl' → logprob: -16.00018310546875
    9. '_blank' → logprob: -16.12518310546875
    10. '```' → logprob: -16.50018310546875

Token 349: '(on' (ID: 46994)
  Prédit: '(on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(on' → logprob: -9.746380237629637e-05
    2. ' (' → logprob: -9.500097274780273
    3. '(' → logprob: -10.750097274780273
    4. '(up' → logprob: -15.000097274780273
    5. '(indices' → logprob: -15.750097274780273
    6. '(or' → logprob: -16.250097274780273
    7. '(On' → logprob: -16.625097274780273
    8. '(for' → logprob: -16.625097274780273
    9. ' on' → logprob: -17.000097274780273
    10. '(in' → logprob: -17.000097274780273

Token 350: '_positive' (ID: 137937)
  Prédit: '_positive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positive' → logprob: -0.00014728360110893846
    2. '_negative' → logprob: -8.875146865844727
    3. 'positive' → logprob: -12.125146865844727
    4. '_' → logprob: -13.375146865844727
    5. ')_' → logprob: -15.875146865844727
    6. ' _' → logprob: -16.500146865844727
    7. '```' → logprob: -17.000146865844727
    8. ')' → logprob: -18.000146865844727
    9. '_possible' → logprob: -18.125146865844727
    10. ' positive' → logprob: -18.125146865844727

Token 351: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025767285842448473
    2. ' )' → logprob: -6.00257682800293
    3. ' and' → logprob: -9.87757682800293
    4. 'and' → logprob: -10.00257682800293
    5. '))' → logprob: -14.12757682800293
    6. ')
' → logprob: -14.12757682800293
    7. '())' → logprob: -14.37757682800293
    8. ')&&' → logprob: -14.75257682800293
    9. '   ' → logprob: -15.00257682800293
    10. ' ' → logprob: -15.00257682800293

Token 352: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.016166450455784798
    2. 'and' → logprob: -4.766166687011719
    3. ' or' → logprob: -4.891166687011719
    4. ')' → logprob: -12.516166687011719
    5. 'or' → logprob: -12.766166687011719
    6. ' ' → logprob: -13.141166687011719
    7. '               ' → logprob: -14.141166687011719
    8. '                   ' → logprob: -14.391166687011719
    9. '                ' → logprob: -14.891166687011719
    10. '            ' → logprob: -16.01616668701172

Token 353: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.20143964886665344
    2. ' all' → logprob: -1.701439619064331
    3. ' ' → logprob: -11.45143985748291
    4. '   ' → logprob: -12.07643985748291
    5. '(all' → logprob: -12.32643985748291
    6. ' (' → logprob: -13.70143985748291
    7. '  ' → logprob: -14.32643985748291
    8. ' not' → logprob: -14.45143985748291
    9. '	all' → logprob: -14.57643985748291
    10. 'not' → logprob: -14.70143985748291

Token 354: '_white' (ID: 105599)
  Prédit: '_white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_white' → logprob: -0.0006353547796607018
    2. '_black' → logprob: -7.375635147094727
    3. 'white' → logprob: -12.125635147094727
    4. '_negative' → logprob: -14.375635147094727
    5. '_blue' → logprob: -14.500635147094727
    6. '```' → logprob: -15.000635147094727
    7. 'White' → logprob: -15.375635147094727
    8. '_wh' → logprob: -15.500635147094727
    9. '_blank' → logprob: -15.500635147094727
    10. '_positive' → logprob: -15.625635147094727

Token 355: '(on' (ID: 46994)
  Prédit: '(on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(on' → logprob: -0.0007110013975761831
    2. ' (' → logprob: -7.250710964202881
    3. '(' → logprob: -14.250711441040039
    4. '(or' → logprob: -15.000711441040039
    5. '(of' → logprob: -18.25071144104004
    6. '(On' → logprob: -18.37571144104004
    7. '(up' → logprob: -19.12571144104004
    8. '(out' → logprob: -19.25071144104004
    9. '(off' → logprob: -19.25071144104004
    10. '(op' → logprob: -19.87571144104004

Token 356: '_negative' (ID: 134489)
  Prédit: '_negative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_negative' → logprob: -0.03808681666851044
    2. '(' → logprob: -4.038086891174316
    3. 'negative' → logprob: -4.163086891174316
    4. '(on' → logprob: -5.788086891174316
    5. 'on' → logprob: -6.913086891174316
    6. ' negative' → logprob: -10.413086891174316
    7. 'Negative' → logprob: -10.663086891174316
    8. ' on' → logprob: -11.038086891174316
    9. '-negative' → logprob: -11.163086891174316
    10. ')' → logprob: -11.413086891174316

Token 357: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06728313863277435
    2. '))' → logprob: -2.9422831535339355
    3. '):' → logprob: -4.5672831535339355
    4. ')):' → logprob: -6.9422831535339355
    5. '):
' → logprob: -7.4422831535339355
    6. '())' → logprob: -8.942282676696777
    7. ')):
' → logprob: -9.192282676696777
    8. '               ' → logprob: -9.817282676696777
    9. ' )' → logprob: -9.817282676696777
    10. '):

' → logprob: -11.567282676696777

Token 358: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0044076829217374325
    2. ':' → logprob: -6.62940788269043
    3. '                   ' → logprob: -6.75440788269043
    4. 'or' → logprob: -6.87940788269043
    5. '               ' → logprob: -7.37940788269043
    6. '                       ' → logprob: -9.75440788269043
    7. '                ' → logprob: -10.00440788269043
    8. ' and' → logprob: -10.25440788269043
    9. ')' → logprob: -10.50440788269043
    10. '<|end|>' → logprob: -11.00440788269043

Token 359: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.008722944185137749
    2. '(all' → logprob: -4.75872278213501
    3. '               ' → logprob: -9.633723258972168
    4. ' all' → logprob: -10.383723258972168
    5. '(on' → logprob: -12.758723258972168
    6. '(' → logprob: -12.883723258972168
    7. '              ' → logprob: -13.258723258972168
    8. '                   ' → logprob: -13.883723258972168
    9. '   ' → logprob: -13.883723258972168
    10. ' ' → logprob: -14.258723258972168

Token 360: 'all' (ID: 586)
  Prédit: 'all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.4740851819515228
    2. ' all' → logprob: -0.9740852117538452
    3. ' ' → logprob: -13.224084854125977
    4. '(all' → logprob: -13.599084854125977
    5. '	all' → logprob: -13.724084854125977
    6. '   ' → logprob: -13.724084854125977
    7. '
' → logprob: -14.224084854125977
    8. '               ' → logprob: -14.849084854125977
    9. '           ' → logprob: -15.599084854125977
    10. '  ' → logprob: -15.599084854125977

Token 361: '_white' (ID: 105599)
  Prédit: '_white'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_white' → logprob: -0.12696537375450134
    2. '_black' → logprob: -2.126965284347534
    3. '_positive' → logprob: -11.126965522766113
    4. '_negative' → logprob: -11.626965522766113
    5. '_' → logprob: -12.251965522766113
    6. 'white' → logprob: -12.501965522766113
    7. '(' → logprob: -13.751965522766113
    8. ' _' → logprob: -14.501965522766113
    9. '_blue' → logprob: -14.501965522766113
    10. 'black' → logprob: -14.751965522766113

Token 362: '(on' (ID: 46994)
  Prédit: '(on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(on' → logprob: -1.981667537620524e-06
    2. ' (' → logprob: -13.625001907348633
    3. '(' → logprob: -14.500001907348633
    4. 'on' → logprob: -15.750001907348633
    5. ' on' → logprob: -18.375001907348633
    6. '(
' → logprob: -19.375001907348633
    7. '(or' → logprob: -19.750001907348633
    8. '/on' → logprob: -19.875001907348633
    9. ',on' → logprob: -19.875001907348633
    10. '(On' → logprob: -20.125001907348633

Token 363: '_positive' (ID: 137937)
  Prédit: '_positive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positive' → logprob: -0.04344512149691582
    2. 'positive' → logprob: -3.168445110321045
    3. 'on' → logprob: -8.418445587158203
    4. '(' → logprob: -9.168445587158203
    5. '_negative' → logprob: -9.293445587158203
    6. 'negative' → logprob: -11.543445587158203
    7. ')' → logprob: -12.168445587158203
    8. '-positive' → logprob: -12.293445587158203
    9. ' positive' → logprob: -12.668445587158203
    10. '(on' → logprob: -13.793445587158203

Token 364: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019102399528492242
    2. ' )' → logprob: -8.875190734863281
    3. 'and' → logprob: -10.500190734863281
    4. ' and' → logprob: -10.750190734863281
    5. ')&&' → logprob: -14.500190734863281
    6. ')
' → logprob: -14.625190734863281
    7. '))' → logprob: -14.875190734863281
    8. '   ' → logprob: -15.875190734863281
    9. ' ' → logprob: -16.12519073486328
    10. '`)' → logprob: -16.87519073486328

Token 365: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029834603890776634
    2. 'and' → logprob: -3.529834508895874
    3. ')' → logprob: -9.404834747314453
    4. ' ' → logprob: -13.904834747314453
    5. ' )' → logprob: -15.279834747314453
    6. '```' → logprob: -15.279834747314453
    7. '&&' → logprob: -16.279834747314453
    8. '	and' → logprob: -16.904834747314453
    9. '   ' → logprob: -17.029834747314453
    10. ' и' → logprob: -17.154834747314453

Token 366: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.38687655329704285
    2. 'all' → logprob: -1.1368765830993652
    3. ' on' → logprob: -12.886876106262207
    4. '(all' → logprob: -13.386876106262207
    5. 'on' → logprob: -14.136876106262207
    6. '_all' → logprob: -15.261876106262207
    7. ' ' → logprob: -15.511876106262207
    8. '	all' → logprob: -15.636876106262207
    9. '   ' → logprob: -17.511877059936523
    10. ' ' → logprob: -17.636877059936523

Token 367: '_black' (ID: 92024)
  Prédit: '_negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_negative' → logprob: -0.47667956352233887
    2. '_black' → logprob: -0.9766795635223389
    3. '_white' → logprob: -5.976679801940918
    4. '_positive' → logprob: -9.851679801940918
    5. 'black' → logprob: -12.351679801940918
    6. 'negative' → logprob: -12.601679801940918
    7. '_' → logprob: -13.976679801940918
    8. '_wh' → logprob: -15.726679801940918
    9. '_normal' → logprob: -16.1016788482666
    10. '```' → logprob: -16.6016788482666

Token 368: '(on' (ID: 46994)
  Prédit: '(on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(on' → logprob: -5.512236498361744e-07
    2. 'on' → logprob: -15.000000953674316
    3. '(' → logprob: -16.625
    4. ' (' → logprob: -17.375
    5. '```' → logprob: -19.75
    6. ',on' → logprob: -20.5
    7. ' on' → logprob: -21.125
    8. '(
' → logprob: -21.125
    9. '	on' → logprob: -21.25
    10. '/on' → logprob: -21.375

Token 369: '_negative' (ID: 134489)
  Prédit: '_negative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_negative' → logprob: -0.15429507195949554
    2. 'negative' → logprob: -2.154294967651367
    3. '(' → logprob: -3.904294967651367
    4. 'on' → logprob: -5.029294967651367
    5. '(on' → logprob: -9.029294967651367
    6. '_positive' → logprob: -9.279294967651367
    7. '-negative' → logprob: -10.529294967651367
    8. ')' → logprob: -10.779294967651367
    9. 'Negative' → logprob: -11.404294967651367
    10. ' negative' → logprob: -11.904294967651367

Token 370: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3564532399177551
    2. ')):' → logprob: -1.6064531803131104
    3. '):
' → logprob: -2.7314531803131104
    4. ')):
' → logprob: -3.6064531803131104
    5. ')' → logprob: -5.6064534187316895
    6. '))' → logprob: -5.7314534187316895
    7. '):

' → logprob: -11.606452941894531
    8. ' ):' → logprob: -11.731452941894531
    9. ')):
' → logprob: -11.856452941894531
    10. '               ' → logprob: -11.856452941894531

Token 371: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6713586449623108
    2. ':' → logprob: -0.7963586449623108
    3. ':
' → logprob: -3.421358585357666
    4. '                       ' → logprob: -5.421358585357666
    5. '):
' → logprob: -8.171359062194824
    6. '):' → logprob: -8.171359062194824
    7. '               ' → logprob: -8.671359062194824
    8. '                    
' → logprob: -10.296359062194824
    9. ':return' → logprob: -10.796359062194824
    10. '():
' → logprob: -10.796359062194824

Token 372: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3598151206970215
    2. ' return' → logprob: -1.3598151206970215
    3. 'return' (adapté à ' return') → logprob: -3.1098151206970215
    4. '                       ' → logprob: -7.2348151206970215
    5. '               ' → logprob: -9.60981559753418
    6. '           ' → logprob: -10.48481559753418
    7. '
' → logprob: -10.60981559753418
    8. '       ' → logprob: -10.73481559753418
    9. '   ' → logprob: -11.60981559753418
    10. '                    
' → logprob: -13.85981559753418

Token 373: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0032390321139246225
    2. ' True' → logprob: -5.753239154815674
    3. '"' → logprob: -9.753238677978516
    4. '   ' → logprob: -13.128238677978516
    5. ''' → logprob: -13.878238677978516
    6. '(True' → logprob: -16.628238677978516
    7. ''T' → logprob: -16.753238677978516
    8. 'False' → logprob: -16.753238677978516
    9. '1' → logprob: -17.378238677978516
    10. ' "' → logprob: -18.003238677978516

Token 374: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2116798311471939
    2. '
' → logprob: -2.0866799354553223
    3. '               ' → logprob: -3.8366799354553223
    4. '        
' → logprob: -3.9616799354553223
    5. '    
' → logprob: -4.961679935455322
    6. '                
' → logprob: -5.711679935455322
    7. '  
' → logprob: -5.836679935455322
    8. '   ' → logprob: -5.836679935455322
    9. '           ' → logprob: -6.336679935455322
    10. '<|end|>' → logprob: -6.336679935455322

Token 375: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003003850346431136
    2. '        
' → logprob: -7.12800407409668
    3. '   ' → logprob: -7.25300407409668
    4. '
' → logprob: -7.62800407409668
    5. '           ' → logprob: -8.37800407409668
    6. '               ' → logprob: -8.37800407409668
    7. '                
' → logprob: -8.87800407409668
    8. 'return' → logprob: -9.12800407409668
    9. '    
' → logprob: -9.12800407409668
    10. '                    
' → logprob: -10.25300407409668

Token 376: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1470530778169632
    2. '   ' → logprob: -2.0220530033111572
    3. '           ' → logprob: -6.397053241729736
    4. '    
' → logprob: -6.772053241729736
    5. 'return' (adapté à ' return') → logprob: -7.522053241729736
    6. '
' → logprob: -8.022052764892578
    7. '               ' → logprob: -8.522052764892578
    8. '        
' → logprob: -8.647052764892578
    9. ' return' → logprob: -8.897052764892578
    10. '<|end|>' → logprob: -10.647052764892578

Token 377: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0019286326132714748
    2. ' False' → logprob: -6.251928806304932
    3. '(False' → logprob: -19.501928329467773
    4. 'false' → logprob: -22.376928329467773
    5. '   ' → logprob: -22.751928329467773
    6. '_false' → logprob: -23.501928329467773
    7. '=False' → logprob: -23.626928329467773
    8. 'True' → logprob: -23.751928329467773
    9. '.False' → logprob: -25.376928329467773
    10. 'F' → logprob: -25.501928329467773

Token 378: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03400987386703491
    2. '<|end|>' → logprob: -4.40900993347168
    3. '    
' → logprob: -4.65900993347168
    4. '
' → logprob: -5.15900993347168
    5. ':' → logprob: -6.28400993347168
    6. '       ' → logprob: -6.90900993347168
    7. '()' → logprob: -6.90900993347168
    8. '  
' → logprob: -8.03400993347168
    9. '<|end|>' → logprob: -8.15900993347168
    10. ')' → logprob: -8.28400993347168

Token 379: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48691970109939575
    2. 'print' → logprob: -0.9869197010993958
    3. ' print' → logprob: -4.48691987991333
    4. 'if' → logprob: -6.98691987991333
    5. ' if' → logprob: -7.61191987991333
    6. '    
' → logprob: -9.986919403076172
    7. 'result' → logprob: -10.861919403076172
    8. '
' → logprob: -11.861919403076172
    9. '       ' → logprob: -11.986919403076172
    10. ' result' → logprob: -12.861919403076172

Token 380: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04992109537124634
    2. '   ' → logprob: -3.2999210357666016
    3. 'if' (adapté à ' if') → logprob: -4.549921035766602
    4. ' print' → logprob: -7.049921035766602
    5. 'result' → logprob: -8.424921035766602
    6. ' if' → logprob: -8.799921035766602
    7. ' result' → logprob: -13.424921035766602
    8. '    
' → logprob: -13.924921035766602
    9. 'answer' → logprob: -14.549921035766602
    10. '```' → logprob: -15.049921035766602

Token 381: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -8.542423165636137e-05
    2. 'can' → logprob: -9.375085830688477
    3. '(can' → logprob: -15.375085830688477
    4. ' not' → logprob: -15.750085830688477
    5. '	can' → logprob: -15.750085830688477
    6. ' ' → logprob: -17.625085830688477
    7. '_can' → logprob: -19.250085830688477
    8. ' ca' → logprob: -19.500085830688477
    9. ' could' → logprob: -20.375085830688477
    10. '"' → logprob: -20.375085830688477

Token 382: '_se' (ID: 7123)
  Prédit: '_se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_se' → logprob: -9.138441237155348e-05
    2. 'se' → logprob: -10.000091552734375
    3. '_sep' → logprob: -10.750091552734375
    4. '_' → logprob: -11.000091552734375
    5. '_separator' → logprob: -12.500091552734375
    6. '()' → logprob: -13.625091552734375
    7. '_continue' → logprob: -14.000091552734375
    8. 'Separate' → logprob: -14.375091552734375
    9. ' separate' → logprob: -14.750091552734375
    10. '_s' → logprob: -15.125091552734375

Token 383: 'parate' (ID: 60471)
  Prédit: 'parate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parate' → logprob: -0.0001382241171086207
    2. 'pare' → logprob: -9.625138282775879
    3. 'par' → logprob: -10.000138282775879
    4. 'perate' → logprob: -10.750138282775879
    5. 'p' → logprob: -12.375138282775879
    6. 'para' → logprob: -15.250138282775879
    7. 'parated' → logprob: -15.500138282775879
    8. 'pr' → logprob: -15.750138282775879
    9. '_par' → logprob: -16.500137329101562
    10. 'rate' → logprob: -16.625137329101562

Token 384: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.396757089532912e-05
    2. '():
' → logprob: -9.7500638961792
    3. ' ():' → logprob: -12.2500638961792
    4. '()' → logprob: -14.0000638961792
    5. ':' → logprob: -17.500064849853516
    6. '():
' → logprob: -17.625064849853516
    7. '(' → logprob: -17.625064849853516
    8. '()==' → logprob: -18.625064849853516
    9. '():

' → logprob: -19.750064849853516
    10. '()>' → logprob: -20.750064849853516

Token 385: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.2961512513575144e-05
    2. ' print' → logprob: -11.500022888183594
    3. 'print' → logprob: -11.500022888183594
    4. '   ' → logprob: -13.625022888183594
    5. '           ' → logprob: -14.375022888183594
    6. '
' → logprob: -15.125022888183594
    7. '        
' → logprob: -15.500022888183594
    8. '```' → logprob: -15.875022888183594
    9. '    
' → logprob: -16.375022888183594
    10. '	   ' → logprob: -16.750022888183594

Token 386: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2696554958820343
    2. ' print' → logprob: -1.644655466079712
    3. 'print' (adapté à ' print') → logprob: -3.394655466079712
    4. '   ' → logprob: -4.644655704498291
    5. '	print' → logprob: -10.144655227661133
    6. '    ' → logprob: -10.644655227661133
    7. '           ' → logprob: -11.019655227661133
    8. '
' → logprob: -11.519655227661133
    9. '     ' → logprob: -12.394655227661133
    10. '    
' → logprob: -12.394655227661133

Token 387: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.05027066171169281
    2. '(' → logprob: -3.0502705574035645
    3. '('' → logprob: -6.4252705574035645
    4. '("("' → logprob: -9.800271034240723
    5. '()' → logprob: -13.675271034240723
    6. ' ("' → logprob: -13.925271034240723
    7. '(("' → logprob: -13.925271034240723
    8. '"' → logprob: -13.925271034240723
    9. '("(' → logprob: -14.050271034240723
    10. '("")' → logprob: -14.550271034240723

Token 388: 'YES' (ID: 31958)
  Prédit: 'YES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.3181706964969635
    2. 'Yes' → logprob: -1.3181706666946411
    3. ' Yes' → logprob: -7.193170547485352
    4. '1' → logprob: -7.318170547485352
    5. '"' → logprob: -7.443170547485352
    6. '“Yes' → logprob: -7.568170547485352
    7. '+' → logprob: -7.943170547485352
    8. 'The' → logprob: -8.068170547485352
    9. ' YES' → logprob: -8.443170547485352
    10. 'Separ' → logprob: -8.568170547485352

Token 389: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0620461031794548
    2. '")
' → logprob: -2.8120460510253906
    3. ')' → logprob: -9.56204605102539
    4. '"' → logprob: -12.81204605102539
    5. '")
' → logprob: -13.18704605102539
    6. ')
' → logprob: -13.31204605102539
    7. '   ' → logprob: -14.31204605102539
    8. ')")' → logprob: -14.31204605102539
    9. ' ")' → logprob: -15.93704605102539
    10. ')")
' → logprob: -16.18704605102539

Token 390: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001061867456883192
    2. 'else' → logprob: -7.001061916351318
    3. ' else' → logprob: -8.87606143951416
    4. '	else' → logprob: -11.87606143951416
    5. '    
' → logprob: -12.87606143951416
    6. '       ' → logprob: -14.37606143951416
    7. '```' → logprob: -15.75106143951416
    8. '<|end|>' → logprob: -15.87606143951416
    9. '        
' → logprob: -17.001062393188477
    10. '
' → logprob: -17.126062393188477

Token 391: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026526466012001038
    2. ' else' → logprob: -4.27652645111084
    3. 'else' (adapté à ' else') → logprob: -4.40152645111084
    4. '	else' → logprob: -10.52652645111084
    5. '    
' → logprob: -14.27652645111084
    6. '       ' → logprob: -15.52652645111084
    7. '    ' → logprob: -16.276527404785156
    8. '  ' → logprob: -16.401527404785156
    9. '```' → logprob: -16.526527404785156
    10. ' ' → logprob: -16.651527404785156

Token 392: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00690517108887434
    2. ':
' → logprob: -5.0069050788879395
    3. '       ' → logprob: -9.131905555725098
    4. '   ' → logprob: -9.506905555725098
    5. ' :' → logprob: -12.881905555725098
    6. '{' → logprob: -13.506905555725098
    7. '    ' → logprob: -14.631905555725098
    8. ':

' → logprob: -14.756905555725098
    9. '.' → logprob: -15.256905555725098
    10. '```' → logprob: -15.256905555725098

Token 393: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007938655093312263
    2. '   ' → logprob: -4.882938861846924
    3. ' print' → logprob: -8.757938385009766
    4. '    ' → logprob: -9.507938385009766
    5. '           ' → logprob: -10.757938385009766
    6. '     ' → logprob: -11.007938385009766
    7. '    
' → logprob: -11.507938385009766
    8. '      ' → logprob: -11.882938385009766
    9. '"' → logprob: -12.007938385009766
    10. '<|end|>' → logprob: -12.257938385009766

Token 394: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.03811068832874298
    2. 'print' (adapté à ' print') → logprob: -3.2881107330322266
    3. '   ' → logprob: -9.913110733032227
    4. '       ' → logprob: -11.038110733032227
    5. '	print' → logprob: -13.288110733032227
    6. '    ' → logprob: -13.913110733032227
    7. '(print' → logprob: -14.163110733032227
    8. '```' → logprob: -16.288110733032227
    9. '.print' → logprob: -16.663110733032227
    10. ' ' → logprob: -17.038110733032227

Token 395: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0067156096920371056
    2. '(' → logprob: -5.006715774536133
    3. '(
' → logprob: -15.631715774536133
    4. '('' → logprob: -16.131715774536133
    5. '("("' → logprob: -16.881715774536133
    6. '("""' → logprob: -18.756715774536133
    7. '(

' → logprob: -18.881715774536133
    8. '()' → logprob: -18.881715774536133
    9. '("")' → logprob: -18.881715774536133
    10. '(""' → logprob: -18.881715774536133

Token 396: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -5.512236498361744e-07
    2. '"' → logprob: -15.000000953674316
    3. '"No' → logprob: -16.25
    4. ' NO' → logprob: -17.375
    5. '"N' → logprob: -18.125
    6. '(NO' → logprob: -21.0
    7. '.NO' → logprob: -21.5
    8. 'N' → logprob: -21.75
    9. 'NA' → logprob: -22.5
    10. 'No' → logprob: -22.625

Token 397: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.062390781939029694
    2. ')' → logprob: -2.8123908042907715
    3. ')")' → logprob: -7.8123908042907715
    4. '()' → logprob: -11.062390327453613
    5. '")
' → logprob: -13.937390327453613
    6. '())' → logprob: -13.937390327453613
    7. '}")' → logprob: -14.812390327453613
    8. '')' → logprob: -15.437390327453613
    9. ')"' → logprob: -16.68739128112793
    10. ')
' → logprob: -16.68739128112793


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 395
Tokens correctement prédits (1ère position, stricte): 206
Tokens correctement prédits (1ère position, avec adaptation): 211
Tokens correctement prédits (top 10): 345
Précision stricte (1ère position): 52.15%
Précision adaptée (1ère position): 53.42%
Précision (top 10): 87.34%
================================================================================
