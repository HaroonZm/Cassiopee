================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:14:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def is_prime(x):
    if x < 2:
        return False
    if x % 2 == 0:
        return x == 2
    r = int(math.sqrt(x))
    for i in range(3, r + 1, 2):
        if x % i == 0:
            return False
    return True

def main():
    input_line = sys.stdin.readline().strip()
    n, c = input_line.split()
    n = int(n)
    c = int(c)

    # For n pairs (b_i, g_i), we need to find digits for these pairs
    # such that the constructed number is maximal under problem rules.
    # Since pairs must carry identical digits and order is:
    #     b1 b2 ... bn [c] gn ... g2 g1 (g reversed)
    # The digits for b and g must match per pair.
    # We want to output a number (string) accordingly.
    # The best approach:
    #   - Try digits from 9 to 0 to assign to pairs.
    #   - For each pair, assign the largest available digit d (0-9)
    #   - Construct number and check primality.
    #   - Try both including c (if c>=0) and excluding c (if c<0)
    #   - Choose the number that "does not lose":
    #     1. If prime && opponent not prime => win
    #     2. If both prime or both not prime => larger number wins
    #
    # Since no opponent number is given, the problem wants to output a number
    # that would not lose against any other number constructed similarly.
    # This essentially means outputting the largest prime number possible
    # with the construction rules, or if none prime, the largest number.
    #
    # We can generate all possible assignments of digits to n pairs
    # (each digit from 0..9), but that's 10^n, too large when n=10.
    #
    # So we use a heuristic: 
    #   - Try digits from 9 down to 0 for all pairs (same digit for all pairs)
    #     Note: pairs can have different digits, but since problem allows
    #     choosing any digit per pair, we try to maximize the number.
    #
    # However, problem examples suggest choosing all pairs the same digit
    # doesn't always work. So we try to generate digits representing a
    # palindrome considering the condition b's and g's correspond.
    #
    # We'll try to assign digits from high to low per pair, generate number
    # and test primality.
    
    # We'll produce all candidate numbers this way:
    # - For each possible digit combination for b (length n)
    #   - For each digit d_i in b, g_i = d_i (same digit)
    # - Number is b1 b2 ... bn [c if c>=0] gn ... g2 g1
    # - Must not start with 0, and last digit (g1) not 0 (to avoid leading 0 of reversed side)
    #
    # Since brute force over 10^10 is impossible, we apply a backtracking with pruning:
    # We try to build the digits from most significant (b1) to least significant (b_n)
    # and prune impossible paths:
    #
    # We will implement backtracking to find the largest number satisfying rules:
    # - b1 != 0 and g1 != 0
    # - combined number no leading zero
    # - number formed is prime or maximal
    
    # We test with and without c depending on c value

    # Since problem is complex, and time limited, implement a backtracking to find best number.

    best_num = None
    best_prime = False

    # Helper to build full number string from b digits, c, and g digits reversed
    def build_number(b_digits, c_digit):
        g_digits = b_digits[::-1]
        if c_digit >= 0:
            num_str = ''.join(str(d) for d in b_digits) + str(c_digit) + ''.join(str(d) for d in g_digits)
        else:
            num_str = ''.join(str(d) for d in b_digits) + ''.join(str(d) for d in g_digits)
        return num_str

    # Check leading zeros:
    # num_str cannot start with '0' or end with '0'
    # The first digit is b1, last digit is g1
    # So b_digits[0] != 0 and b_digits[-1] != 0.
    # Also, the problem forbids outputs starting with 0, so strictly no leading zero overall

    def valid_digits(b_digits):
        if b_digits[0] == 0:
            return False
        if b_digits[-1] == 0:
            return False
        return True

    # Backtracking to find best number
    from itertools import product

    # Because 10^n is too big, try to only check at most a subset:
    # We'll try all digit combos with digits in descending order to get maximum:
    # For each pair, try digits 9 to 0
    # We'll limit the number of candidates to check by pruning

    # We'll implement a DFS with early pruning, choosing highest digit per position first

    def dfs(pos, b_digits):
        nonlocal best_num, best_prime
        if pos == n:
            if not valid_digits(b_digits):
                return
            num_str = build_number(b_digits, c)
            if num_str[0] == '0' or num_str[-1] == '0':
                return
            num = int(num_str)
            prime = is_prime(num)
            if prime:
                if not best_prime or (best_prime and num > int(best_num)):
                    best_num = num_str
                    best_prime = True
            else:
                if not best_prime:
                    if best_num is None or num > int(best_num):
                        best_num = num_str
            return

        # try digits from 9 down to 0
        for d in range(9, -1, -1):
            b_digits.append(d)
            # pruning: if first digit zero at pos=0, skip
            if pos == 0 and d == 0:
                b_digits.pop()
                continue
            # later pruning on last digit will happen at end
            dfs(pos + 1, b_digits)
            b_digits.pop()

    dfs(0, [])

    # If c<0, try also same without c - to check if better number possible
    if c < 0:
        # try without c means c = -1 in build_number
        best_num_wo_c = None
        best_prime_wo_c = False

        def dfs_wo_c(pos, b_digits):
            nonlocal best_num_wo_c, best_prime_wo_c
            if pos == n:
                if not valid_digits(b_digits):
                    return
                num_str = build_number(b_digits, -1)
                if num_str[0] == '0' or num_str[-1] == '0':
                    return
                num = int(num_str)
                prime = is_prime(num)
                if prime:
                    if not best_prime_wo_c or (best_prime_wo_c and num > int(best_num_wo_c)):
                        best_num_wo_c = num_str
                        best_prime_wo_c = True
                else:
                    if not best_prime_wo_c:
                        if best_num_wo_c is None or num > int(best_num_wo_c):
                            best_num_wo_c = num_str
                return
            for d in range(9, -1, -1):
                b_digits.append(d)
                if pos == 0 and d == 0:
                    b_digits.pop()
                    continue
                dfs_wo_c(pos + 1, b_digits)
                b_digits.pop()

        dfs_wo_c(0, [])

        # Compare best with c and best without c
        # According to rules:
        # If prime vs nonprime: prime wins
        # both prime or both nonprime: larger number wins
        # We want not to lose, so take best accordingly.

        # So pick best prime number, or max number if no prime.

        if best_prime and best_prime_wo_c:
            # both prime, pick larger number
            if int(best_num_wo_c) > int(best_num):
                best_num = best_num_wo_c
                best_prime = True
        elif best_prime_wo_c and not best_prime:
            best_num = best_num_wo_c
            best_prime = True
        elif not best_prime_wo_c and not best_prime:
            # both non prime pick max
            if best_num_wo_c is not None:
                if int(best_num_wo_c) > int(best_num):
                    best_num = best_num_wo_c

    print(best_num)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1822601556777954
    2. '\n' → logprob: -2.057260036468506
    3. '<|end|>' → logprob: -4.182260036468506
    4. '\' → logprob: -4.432260036468506
    5. 'newline' → logprob: -5.557260036468506
    6. 'import' → logprob: -6.057260036468506
    7. '<|end|>' → logprob: -6.682260036468506
    8. '```' → logprob: -7.432260036468506
    9. ';' → logprob: -7.557260036468506
    10. '' → logprob: -7.682260036468506

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3479432463645935
    2. '\n' → logprob: -2.3479433059692383
    3. 'import' → logprob: -2.7229433059692383
    4. '
' → logprob: -2.9729433059692383
    5. '\' → logprob: -3.2229433059692383
    6. '```' → logprob: -4.222943305969238
    7. '

' → logprob: -4.597943305969238
    8. ',' → logprob: -5.722943305969238
    9. '' → logprob: -5.722943305969238
    10. '<|end|>' → logprob: -5.847943305969238

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5420268177986145
    2. '\n' → logprob: -1.9170267581939697
    3. '\' → logprob: -2.2920267581939697
    4. 'import' → logprob: -2.4170267581939697
    5. '```' → logprob: -3.4170267581939697
    6. '
' → logprob: -4.417026996612549
    7. ',' → logprob: -4.542026996612549
    8. 'def' → logprob: -4.917026996612549
    9. '<|end|>' → logprob: -5.667026996612549
    10. '#' → logprob: -5.917026996612549

Token 7: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0015667574480175972
    2. ' calculate' → logprob: -7.1265668869018555
    3. '_' → logprob: -8.001566886901855
    4. ' ' → logprob: -8.751566886901855
    5. ' space' → logprob: -9.876566886901855
    6. ' factorial' → logprob: -10.501566886901855
    7. ' math' → logprob: -10.751566886901855
    8. ' add' → logprob: -11.001566886901855
    9. ' ```' → logprob: -11.251566886901855
    10. '_space' → logprob: -11.501566886901855

Token 8: '_prime' (ID: 98616)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4396243691444397
    2. '_prime' → logprob: -1.189624309539795
    3. '_pal' → logprob: -3.064624309539795
    4. '_even' → logprob: -6.689624309539795
    5. ' ' → logprob: -7.064624309539795
    6. '_space' → logprob: -7.689624309539795
    7. ' _' → logprob: -7.814624309539795
    8. '_valid' → logprob: -7.939624309539795
    9. 'space' → logprob: -8.189624786376953
    10. 'prime' → logprob: -8.189624786376953

Token 9: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004533142491709441
    2. '_' → logprob: -8.000452995300293
    3. ' (' → logprob: -9.750452995300293
    4. '("("' → logprob: -10.500452995300293
    5. '('' → logprob: -12.250452995300293
    6. '(n' → logprob: -12.375452995300293
    7. '(_' → logprob: -12.500452995300293
    8. '_(' → logprob: -12.500452995300293
    9. '(x' → logprob: -12.875452995300293
    10. '(token' → logprob: -13.000452995300293

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02342715673148632
    2. ')' → logprob: -3.7734272480010986
    3. ':' → logprob: -8.77342700958252
    4. '):
' → logprob: -11.27342700958252
    5. ' ):' → logprob: -11.77342700958252
    6. '(' → logprob: -13.27342700958252
    7. ')：' → logprob: -13.89842700958252
    8. '):

' → logprob: -14.77342700958252
    9. '(x' → logprob: -14.89842700958252
    10. ',' → logprob: -14.89842700958252

Token 11: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05464053526520729
    2. '():' → logprob: -3.929640531539917
    3. '):' → logprob: -4.179640769958496
    4. '   ' → logprob: -4.679640769958496
    5. '(' → logprob: -5.179640769958496
    6. ':
' → logprob: -6.054640769958496
    7. '):
' → logprob: -8.554640769958496
    8. ')' → logprob: -8.554640769958496
    9. '():
' → logprob: -8.929640769958496
    10. '```' → logprob: -9.304640769958496

Token 12: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028708068653941154
    2. ' if' → logprob: -4.778707981109619
    3. ' 
' → logprob: -5.153707981109619
    4. ' ' → logprob: -5.278707981109619
    5. '    ' → logprob: -5.278707981109619
    6. '```' → logprob: -7.153707981109619
    7. '\' → logprob: -7.903707981109619
    8. '    
' → logprob: -7.903707981109619
    9. ' \' → logprob: -8.028708457946777
    10. '     
' → logprob: -8.153708457946777

Token 13: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.008637377060949802
    2. 'x' → logprob: -4.758637428283691
    3. ' ' → logprob: -10.758637428283691
    4. '	x' → logprob: -13.633637428283691
    5. '   ' → logprob: -15.883637428283691
    6. ' ' → logprob: -16.633636474609375
    7. '2' → logprob: -17.633636474609375
    8. '```' → logprob: -17.633636474609375
    9. '  ' → logprob: -17.758636474609375
    10. '1' → logprob: -17.883636474609375

Token 14: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0743648111820221
    2. ' <=' → logprob: -2.8243649005889893
    3. '<' → logprob: -4.94936466217041
    4. ' ' → logprob: -6.07436466217041
    5. '<=' → logprob: -6.44936466217041
    6. ' %' → logprob: -6.94936466217041
    7. '%' → logprob: -8.19936466217041
    8. '   ' → logprob: -9.32436466217041
    9. '  ' → logprob: -12.19936466217041
    10. ' ==' → logprob: -12.57436466217041

Token 15: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2254151701927185
    2. ' ' → logprob: -1.6004152297973633
    3. '```' → logprob: -13.850415229797363
    4. '3' → logprob: -14.850415229797363
    5. ' ' → logprob: -14.975415229797363
    6. '=' → logprob: -15.350415229797363
    7. '_' → logprob: -15.725415229797363
    8. '   ' → logprob: -16.100414276123047
    9. '(' → logprob: -16.475414276123047
    10. '4' → logprob: -17.100414276123047

Token 16: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -16.0
    4. '   ' → logprob: -17.125
    5. '=' → logprob: -17.375
    6. '3' → logprob: -17.5
    7. '２' → logprob: -17.625
    8. '۲' → logprob: -18.125
    9. '_' → logprob: -18.25
    10. '"' → logprob: -18.5

Token 17: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017758574103936553
    2. ':return' → logprob: -7.001775741577148
    3. ':
' → logprob: -7.126775741577148
    4. ' :' → logprob: -9.876775741577148
    5. '   ' → logprob: -12.501775741577148
    6. ' :
' → logprob: -13.251775741577148
    7. ' or' → logprob: -13.751775741577148
    8. '):' → logprob: -13.751775741577148
    9. '       ' → logprob: -14.001775741577148
    10. ':**' → logprob: -15.626775741577148

Token 18: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07934258133172989
    2. ' return' → logprob: -3.4543426036834717
    3. '   ' → logprob: -4.329342365264893
    4. 'return' → logprob: -4.829342365264893
    5. ':' → logprob: -4.954342365264893
    6. ':return' → logprob: -5.329342365264893
    7. '    ' → logprob: -5.454342365264893
    8. ':
' → logprob: -5.704342365264893
    9. '
' → logprob: -6.454342365264893
    10. '\n' → logprob: -6.704342365264893

Token 19: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.21211478114128113
    2. 'return' (adapté à ' return') → logprob: -1.7121148109436035
    3. '   ' → logprob: -5.0871148109436035
    4. '       ' → logprob: -5.4621148109436035
    5. '    ' → logprob: -9.212114334106445
    6. ':return' → logprob: -9.587114334106445
    7. ' 
' → logprob: -10.962114334106445
    8. ' ' → logprob: -11.087114334106445
    9. '	return' → logprob: -11.462114334106445
    10. '
' → logprob: -12.962114334106445

Token 20: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.011047814972698689
    2. 'False' → logprob: -4.511047840118408
    3. ' True' → logprob: -16.76104736328125
    4. ' ' → logprob: -18.13604736328125
    5. ' false' → logprob: -19.51104736328125
    6. '(False' → logprob: -20.01104736328125
    7. ' None' → logprob: -20.88604736328125
    8. ' ' → logprob: -21.51104736328125
    9. '_false' → logprob: -21.76104736328125
    10. 'True' → logprob: -22.13604736328125

Token 21: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04716215282678604
    2. '
' → logprob: -3.6721620559692383
    3. '    
' → logprob: -4.047162055969238
    4. '\n' → logprob: -6.422162055969238
    5. '  
' → logprob: -7.672162055969238
    6. '   
' → logprob: -8.172162055969238
    7. ' 
' → logprob: -8.797162055969238
    8. '  ' → logprob: -9.047162055969238
    9. '<|end|>' → logprob: -9.297162055969238
    10. '```' → logprob: -9.672162055969238

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013313100207597017
    2. '    
' → logprob: -7.126331329345703
    3. '
' → logprob: -7.751331329345703
    4. '  ' → logprob: -10.751331329345703
    5. '  
' → logprob: -11.001331329345703
    6. '```' → logprob: -11.251331329345703
    7. '   
' → logprob: -11.501331329345703
    8. '\n' → logprob: -11.626331329345703
    9. '    ' → logprob: -12.251331329345703
    10. ' 
' → logprob: -12.501331329345703

Token 23: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6075147986412048
    2. ' for' → logprob: -0.8575147986412048
    3. '   ' → logprob: -3.4825148582458496
    4. '    
' → logprob: -8.482514381408691
    5. '	for' → logprob: -10.732514381408691
    6. '  ' → logprob: -10.982514381408691
    7. '   
' → logprob: -10.982514381408691
    8. ')' → logprob: -11.482514381408691
    9. ' ' → logprob: -11.607514381408691
    10. ':' → logprob: -11.857514381408691

Token 24: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.28117185831069946
    2. 'x' → logprob: -1.4061717987060547
    3. '	x' → logprob: -12.281171798706055
    4. '(x' → logprob: -12.656171798706055
    5. '   ' → logprob: -12.781171798706055
    6. ' math' → logprob: -13.281171798706055
    7. ' ' → logprob: -13.406171798706055
    8. 'int' → logprob: -13.406171798706055
    9. '```' → logprob: -14.031171798706055
    10. '2' → logprob: -14.406171798706055

Token 25: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.08590971678495407
    2. '%' → logprob: -2.710909605026245
    3. ' ==' → logprob: -4.210909843444824
    4. '==' → logprob: -7.585909843444824
    5. ' ' → logprob: -8.710909843444824
    6. '%i' → logprob: -9.210909843444824
    7. '**' → logprob: -9.585909843444824
    8. ' **' → logprob: -10.210909843444824
    9. '%s' → logprob: -10.460909843444824
    10. ' in' → logprob: -10.585909843444824

Token 26: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2519325315952301
    2. ' ' → logprob: -1.5019325017929077
    3. ' i' → logprob: -13.751932144165039
    4. 'import' → logprob: -14.501932144165039
    5. 'i' → logprob: -15.126932144165039
    6. '```' → logprob: -15.126932144165039
    7. '   ' → logprob: -15.376932144165039
    8. ' x' → logprob: -15.814432144165039
    9. '  ' → logprob: -16.00193214416504
    10. 'x' → logprob: -16.25193214416504

Token 27: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.7146746763028204e-05
    2. ' ' → logprob: -10.25003719329834
    3. 'i' → logprob: -13.62503719329834
    4. 'x' → logprob: -14.62503719329834
    5. 'div' → logprob: -18.375036239624023
    6. '   ' → logprob: -18.500036239624023
    7. ' i' → logprob: -19.000036239624023
    8. '1' → logprob: -19.125036239624023
    9. '```' → logprob: -20.000036239624023
    10. '3' → logprob: -20.000036239624023

Token 28: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.016178887337446213
    2. '==' → logprob: -4.141179084777832
    3. ' ' → logprob: -9.266179084777832
    4. ' !=' → logprob: -10.016179084777832
    5. '=' → logprob: -13.141179084777832
    6. ' ' → logprob: -14.016179084777832
    7. '0' → logprob: -14.141179084777832
    8. ' =' → logprob: -14.266179084777832
    9. '!=' → logprob: -15.016179084777832
    10. ':' → logprob: -15.516179084777832

Token 29: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3132629096508026
    2. '0' → logprob: -1.313262939453125
    3. '1' → logprob: -14.063262939453125
    4. ' ' → logprob: -15.563262939453125
    5. '  ' → logprob: -16.438262939453125
    6. '```' → logprob: -16.938262939453125
    7. '   ' → logprob: -17.063262939453125
    8. '=' → logprob: -17.438262939453125
    9. '2' → logprob: -17.688262939453125
    10. '3' → logprob: -18.125762939453125

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028053484857082367
    2. ' ' → logprob: -5.877805233001709
    3. '1' → logprob: -14.627805709838867
    4. '=' → logprob: -17.877805709838867
    5. '==' → logprob: -18.065305709838867
    6. '  ' → logprob: -18.190305709838867
    7. '2' → logprob: -18.315305709838867
    8. '00' → logprob: -18.315305709838867
    9. '```' → logprob: -18.440305709838867
    10. '   ' → logprob: -18.502805709838867

Token 31: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00467991828918457
    2. 'and' → logprob: -5.5046796798706055
    3. '   ' → logprob: -7.6296796798706055
    4. ' ' → logprob: -9.754679679870605
    5. ':' → logprob: -10.004679679870605
    6. '       ' → logprob: -12.004679679870605
    7. '  ' → logprob: -13.004679679870605
    8. '    ' → logprob: -13.504679679870605
    9. '	and' → logprob: -13.879679679870605
    10. ':return' → logprob: -14.254679679870605

Token 32: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7247733473777771
    2. '       ' → logprob: -0.8497733473777771
    3. ' return' → logprob: -3.349773406982422
    4. ' ' → logprob: -3.724773406982422
    5. '    ' → logprob: -3.724773406982422
    6. '  ' → logprob: -6.349773406982422
    7. '1' → logprob: -7.349773406982422
    8. '<|end|>' → logprob: -7.474773406982422
    9. 'return' → logprob: -7.724773406982422
    10. ' 
' → logprob: -8.474773406982422

Token 33: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.05758392810821533
    2. 'return' (adapté à ' return') → logprob: -2.932583808898926
    3. '       ' → logprob: -6.557583808898926
    4. '   ' → logprob: -6.932583808898926
    5. ' ' → logprob: -8.682583808898926
    6. '    ' → logprob: -9.807583808898926
    7. ' if' → logprob: -10.682583808898926
    8. '	return' → logprob: -11.432583808898926
    9. ' False' → logprob: -11.557583808898926
    10. '  ' → logprob: -11.807583808898926

Token 34: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5390592217445374
    2. 'x' → logprob: -0.9140592217445374
    3. 'False' → logprob: -4.914059162139893
    4. ' False' → logprob: -5.664059162139893
    5. ' True' → logprob: -5.789059162139893
    6. 'True' → logprob: -6.289059162139893
    7. ' ' → logprob: -9.53905963897705
    8. '	x' → logprob: -12.66405963897705
    9. '1' → logprob: -12.91405963897705
    10. '(x' → logprob: -14.03905963897705

Token 35: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5401543974876404
    2. '==' → logprob: -1.0401544570922852
    3. ' ' → logprob: -3.040154457092285
    4. '2' → logprob: -4.290154457092285
    5. '=' → logprob: -6.165154457092285
    6. '3' → logprob: -9.040154457092285
    7. '1' → logprob: -9.415154457092285
    8. ' =' → logprob: -10.540154457092285
    9. 'is' → logprob: -10.915154457092285
    10. ' is' → logprob: -11.040154457092285

Token 36: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012509774416685104
    2. ' ' → logprob: -4.387509822845459
    3. '3' → logprob: -16.262510299682617
    4. ' ' → logprob: -18.262510299682617
    5. '  ' → logprob: -18.512510299682617
    6. '   ' → logprob: -18.762510299682617
    7. '۲' → logprob: -19.637510299682617
    8. '1' → logprob: -20.012510299682617
    9. '２' → logprob: -20.012510299682617
    10. '    ' → logprob: -20.700010299682617

Token 37: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '3' → logprob: -18.875139236450195
    4. '  ' → logprob: -19.625139236450195
    5. '   ' → logprob: -20.000139236450195
    6. '۲' → logprob: -20.125139236450195
    7. '２' → logprob: -20.375139236450195
    8. '₂' → logprob: -20.625139236450195
    9. ' ' → logprob: -21.500139236450195
    10. '```' → logprob: -21.500139236450195

Token 38: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.6960687041282654
    2. '    
' → logprob: -1.6960687637329102
    3. '
' → logprob: -2.32106876373291
    4. '\n' → logprob: -2.57106876373291
    5. '   ' → logprob: -2.69606876373291
    6. '  
' → logprob: -2.94606876373291
    7. '   
' → logprob: -4.19606876373291
    8. '\' → logprob: -5.07106876373291
    9. '```' → logprob: -7.19606876373291
    10. 'n' → logprob: -7.94606876373291

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29486560821533203
    2. '\n' → logprob: -2.294865608215332
    3. '    
' → logprob: -2.294865608215332
    4. '
' → logprob: -4.044865608215332
    5. '  
' → logprob: -4.544865608215332
    6. ' 
' → logprob: -4.544865608215332
    7. '   
' → logprob: -4.669865608215332
    8. '\' → logprob: -5.669865608215332
    9. 'n' → logprob: -7.669865608215332
    10. ' for' → logprob: -7.794865608215332

Token 40: ' r' (ID: 428)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.28896456956863403
    2. ' for' → logprob: -1.9139645099639893
    3. '   ' → logprob: -2.7889645099639893
    4. '    
' → logprob: -4.163964748382568
    5. ' 
' → logprob: -4.913964748382568
    6. 'for' → logprob: -4.913964748382568
    7. 'i' → logprob: -5.288964748382568
    8. ' ' → logprob: -6.038964748382568
    9. '  
' → logprob: -6.288964748382568
    10. '   
' → logprob: -6.663964748382568

Token 41: ' =' (ID: 314)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.0004905993700958788
    2. 'a' → logprob: -7.875490665435791
    3. ' ange' → logprob: -10.750490188598633
    4. 'oot' → logprob: -10.875490188598633
    5. 'ang' → logprob: -11.000490188598633
    6. 'an' → logprob: -11.125490188598633
    7. 'range' → logprob: -11.500490188598633
    8. 'angep' → logprob: -12.375490188598633
    9. 'anger' → logprob: -12.750490188598633
    10. ':' → logprob: -12.875490188598633

Token 42: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3139290511608124
    2. 'int' → logprob: -1.3139290809631348
    3. ' ' → logprob: -7.938929080963135
    4. ' math' → logprob: -8.563928604125977
    5. '1' → logprob: -9.438928604125977
    6. ' i' → logprob: -11.438928604125977
    7. '	int' → logprob: -12.063928604125977
    8. 'math' → logprob: -12.063928604125977
    9. '2' → logprob: -12.188928604125977
    10. ' in' → logprob: -12.438928604125977

Token 43: '(math' (ID: 86464)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5766741633415222
    2. '(math' → logprob: -0.8266741633415222
    3. '(s' → logprob: -7.951673984527588
    4. '(x' → logprob: -7.951673984527588
    5. '(m' → logprob: -11.076674461364746
    6. '(Math' → logprob: -12.701674461364746
    7. '(mat' → logprob: -12.951674461364746
    8. '(ma' → logprob: -12.951674461364746
    9. '(
' → logprob: -13.076674461364746
    10. 'math' → logprob: -13.701674461364746

Token 44: '.sqrt' (ID: 38011)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.048822514712810516
    2. '.sqrt' → logprob: -3.0488224029541016
    3. '.s' → logprob: -8.423822402954102
    4. '.
' → logprob: -11.923822402954102
    5. '.Sqrt' → logprob: -12.048822402954102
    6. 'sqrt' → logprob: -13.798822402954102
    7. 's' → logprob: -14.048822402954102
    8. '​.' → logprob: -15.298822402954102
    9. '.​' → logprob: -15.673822402954102
    10. '.square' → logprob: -15.798822402954102

Token 45: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.011282775551080704
    2. '(' → logprob: -4.511282920837402
    3. 'x' → logprob: -8.386282920837402
    4. ')' → logprob: -12.636282920837402
    5. ' (' → logprob: -13.511282920837402
    6. ')x' → logprob: -14.011282920837402
    7. ' x' → logprob: -14.261282920837402
    8. '(
' → logprob: -14.511282920837402
    9. ')(' → logprob: -15.886282920837402
    10. ' ' → logprob: -16.136281967163086

Token 46: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001951945130713284
    2. '))' → logprob: -6.251952171325684
    3. ')+' → logprob: -10.751952171325684
    4. ' )' → logprob: -13.876952171325684
    5. '))+' → logprob: -14.501952171325684
    6. '(' → logprob: -15.001952171325684
    7. '())' → logprob: -16.876951217651367
    8. ' ' → logprob: -17.126951217651367
    9. ')
' → logprob: -17.251951217651367
    10. ')))' → logprob: -17.751951217651367

Token 47: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1035168245434761
    2. ' +' → logprob: -2.7285168170928955
    3. '   ' → logprob: -3.7285168170928955
    4. ' ' → logprob: -5.228517055511475
    5. '(' → logprob: -6.103517055511475
    6. ' for' → logprob: -7.978517055511475
    7. ')' → logprob: -7.978517055511475
    8. '  ' → logprob: -8.728516578674316
    9. '
' → logprob: -9.728516578674316
    10. '+
' → logprob: -9.728516578674316

Token 48: ' for' (ID: 395)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22465552389621735
    2. ' +' → logprob: -2.3496556282043457
    3. '   ' → logprob: -2.8496556282043457
    4. ' for' → logprob: -3.8496556282043457
    5. ' ' → logprob: -3.9746556282043457
    6. ')' → logprob: -5.849655628204346
    7. '<|end|>' → logprob: -6.849655628204346
    8. 'for' (adapté à ' for') → logprob: -7.224655628204346
    9. '+
' → logprob: -7.724655628204346
    10. '  ' → logprob: -7.974655628204346

Token 49: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00038527094875462353
    2. 'i' → logprob: -8.000385284423828
    3. ' ' → logprob: -10.000385284423828
    4. '	i' → logprob: -12.875385284423828
    5. ' n' → logprob: -14.000385284423828
    6. ' d' → logprob: -15.250385284423828
    7. '(i' → logprob: -15.375385284423828
    8. ' p' → logprob: -16.000385284423828
    9. 'n' → logprob: -16.375385284423828
    10. ' _' → logprob: -16.375385284423828

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004695107229053974
    2. 'in' → logprob: -5.629694938659668
    3. ' ' → logprob: -6.879694938659668
    4. ' i' → logprob: -10.629694938659668
    5. '  ' → logprob: -10.879694938659668
    6. '   ' → logprob: -11.879694938659668
    7. '	in' → logprob: -12.254694938659668
    8. '6' → logprob: -12.879694938659668
    9. '    ' → logprob: -13.504694938659668
    10. '2' → logprob: -13.629694938659668

Token 51: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.001207495923154056
    2. 'range' → logprob: -6.75120735168457
    3. ' ' → logprob: -10.50120735168457
    4. '	range' → logprob: -12.25120735168457
    5. ' xrange' → logprob: -12.37620735168457
    6. '(range' → logprob: -14.50120735168457
    7. '  ' → logprob: -17.00120735168457
    8. ' ran' → logprob: -17.25120735168457
    9. '2' → logprob: -18.00120735168457
    10. '.range' → logprob: -18.62620735168457

Token 52: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.1008713702030946e-06
    2. '(
' → logprob: -13.375001907348633
    3. ' (' → logprob: -14.750001907348633
    4. '<|end|>' → logprob: -16.500001907348633
    5. '2' → logprob: -17.875001907348633
    6. '3' → logprob: -18.625001907348633
    7. ' ' → logprob: -19.000001907348633
    8. '(

' → logprob: -19.125001907348633
    9. ')' → logprob: -19.125001907348633
    10. '```' → logprob: -20.500001907348633

Token 53: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.750001907348633
    3. ')' → logprob: -15.250001907348633
    4. '(' → logprob: -17.125001907348633
    5. '   ' → logprob: -17.250001907348633
    6. '۳' → logprob: -17.375001907348633
    7. '３' → logprob: -18.750001907348633
    8. '```' → logprob: -19.000001907348633
    9. '³' → logprob: -19.125001907348633
    10. '  ' → logprob: -19.750001907348633

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027111053350381553
    2. ' ,' → logprob: -8.25027084350586
    3. ',i' → logprob: -12.50027084350586
    4. '   ' → logprob: -13.50027084350586
    5. ' ' → logprob: -13.75027084350586
    6. ',r' → logprob: -13.87527084350586
    7. ',int' → logprob: -14.87527084350586
    8. ',to' → logprob: -15.00027084350586
    9. ',len' → logprob: -15.25027084350586
    10. ',n' → logprob: -15.37527084350586

Token 55: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002477677771821618
    2. ' r' → logprob: -6.002477645874023
    3. '	r' → logprob: -13.127477645874023
    4. '   ' → logprob: -17.752477645874023
    5. ' ' → logprob: -19.002477645874023
    6. '    ' → logprob: -19.127477645874023
    7. '­r' → logprob: -20.127477645874023
    8. '_r' → logprob: -20.377477645874023
    9. '(r' → logprob: -21.377477645874023
    10. '  ' → logprob: -21.502477645874023

Token 56: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519635558128357
    2. ' +' → logprob: -1.5019636154174805
    3. ' ' → logprob: -10.37696361541748
    4. ',' → logprob: -13.37696361541748
    5. '+
' → logprob: -14.50196361541748
    6. ' ,' → logprob: -14.62696361541748
    7. ' +
' → logprob: -15.12696361541748
    8. '+,' → logprob: -15.12696361541748
    9. '   ' → logprob: -16.751962661743164
    10. ' ' → logprob: -16.876962661743164

Token 57: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014271625317633152
    2. ' ' → logprob: -4.2642717361450195
    3. '2' → logprob: -9.13927173614502
    4. '  ' → logprob: -15.01427173614502
    5. '   ' → logprob: -15.38927173614502
    6. '    ' → logprob: -15.63927173614502
    7. '```' → logprob: -17.514270782470703
    8. ' ' → logprob: -17.764270782470703
    9. '     ' → logprob: -18.389270782470703
    10. ',' → logprob: -19.264270782470703

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '2' → logprob: -15.750035285949707
    4. '   ' → logprob: -17.250036239624023
    5. '  ' → logprob: -17.375036239624023
    6. '    ' → logprob: -19.125036239624023
    7. ' ' → logprob: -20.125036239624023
    8. '{' → logprob: -20.250036239624023
    9. '```' → logprob: -20.375036239624023
    10. '     ' → logprob: -20.625036239624023

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011844364780699834
    2. '2' → logprob: -9.500118255615234
    3. ' ,' → logprob: -10.125118255615234
    4. '   ' → logprob: -13.500118255615234
    5. '3' → logprob: -14.000118255615234
    6. '6' → logprob: -14.250118255615234
    7. ',
' → logprob: -15.500118255615234
    8. '```' → logprob: -15.875118255615234
    9. '7' → logprob: -16.500118255615234
    10. ' ' → logprob: -16.750118255615234

Token 60: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03804149478673935
    2. ' ' → logprob: -3.288041591644287
    3. ')' → logprob: -17.038042068481445
    4. ' ' → logprob: -18.038042068481445
    5. '```' → logprob: -18.163042068481445
    6. '  ' → logprob: -18.413042068481445
    7. '２' → logprob: -18.538042068481445
    8. '۲' → logprob: -18.538042068481445
    9. '   ' → logprob: -18.913042068481445
    10. '	' → logprob: -19.600542068481445

Token 61: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '```' → logprob: -18.000139236450195
    4. ')' → logprob: -18.125139236450195
    5. '۲' → logprob: -18.125139236450195
    6. '２' → logprob: -19.000139236450195
    7. '  ' → logprob: -19.000139236450195
    8. '२' → logprob: -19.500139236450195
    9. '<|end|>' → logprob: -20.062639236450195
    10. '   ' → logprob: -20.187639236450195

Token 62: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001194275333546102
    2. ':' → logprob: -7.126194477081299
    3. ')' → logprob: -8.50119400024414
    4. ' ):' → logprob: -9.00119400024414
    5. '):
' → logprob: -9.75119400024414
    6. '   ' → logprob: -13.00119400024414
    7. ',' → logprob: -13.50119400024414
    8. ' ' → logprob: -14.87619400024414
    9. ' :' → logprob: -15.25119400024414
    10. ' )' → logprob: -15.25119400024414

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03902541473507881
    2. ' :' → logprob: -4.66402530670166
    3. ' ' → logprob: -4.78902530670166
    4. ':' → logprob: -4.78902530670166
    5. '   ' → logprob: -5.28902530670166
    6. '    ' → logprob: -5.41402530670166
    7. 'if' → logprob: -7.16402530670166
    8. '<|end|>' → logprob: -7.78902530670166
    9. ' if' → logprob: -8.03902530670166
    10. '        ' → logprob: -8.66402530670166

Token 64: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.39888668060302734
    2. ' if' → logprob: -1.1488866806030273
    3. '       ' → logprob: -4.523886680603027
    4. '   ' → logprob: -7.523886680603027
    5. '           ' → logprob: -8.273886680603027
    6. '    ' → logprob: -8.773886680603027
    7. ' ' → logprob: -9.773886680603027
    8. '        ' → logprob: -10.273886680603027
    9. 'i' → logprob: -11.523886680603027
    10. ' i' → logprob: -11.523886680603027

Token 65: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0015028368216007948
    2. 'x' → logprob: -6.501502990722656
    3. '	x' → logprob: -15.626502990722656
    4. ' ' → logprob: -16.126502990722656
    5. ' ' → logprob: -16.501502990722656
    6. ' (' → logprob: -17.501502990722656
    7. '(x' → logprob: -18.626502990722656
    8. '   ' → logprob: -19.001502990722656
    9. '    ' → logprob: -20.126502990722656
    10. ')x' → logprob: -20.251502990722656

Token 66: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.31328821182250977
    2. '%' → logprob: -1.3132882118225098
    3. ' ' → logprob: -10.938287734985352
    4. '%i' → logprob: -11.938287734985352
    5. ' ' → logprob: -13.438287734985352
    6. '   ' → logprob: -15.313287734985352
    7. '%x' → logprob: -16.06328773498535
    8. '%s' → logprob: -16.31328773498535
    9. '	' → logprob: -16.81328773498535
    10. '%e' → logprob: -17.18828773498535

Token 67: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1002156138420105
    2. ' i' → logprob: -2.3502156734466553
    3. ' ' → logprob: -12.100215911865234
    4. '	i' → logprob: -12.850215911865234
    5. '   ' → logprob: -15.100215911865234
    6. '  ' → logprob: -15.850215911865234
    7. ' ' → logprob: -16.100215911865234
    8. '<|end|>' → logprob: -16.100215911865234
    9. '    ' → logprob: -17.600215911865234
    10. '0' → logprob: -18.100215911865234

Token 68: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1002766489982605
    2. '==' → logprob: -2.3502767086029053
    3. '=' → logprob: -9.725276947021484
    4. ' =' → logprob: -12.475276947021484
    5. '===' → logprob: -12.975276947021484
    6. ' ' → logprob: -12.975276947021484
    7. ')==' → logprob: -14.350276947021484
    8. ']==' → logprob: -15.100276947021484
    9. ' ===' → logprob: -15.225276947021484
    10. '	' → logprob: -15.725276947021484

Token 69: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1602243334054947
    2. ' ' → logprob: -1.9102243185043335
    3. ' ' → logprob: -16.66022491455078
    4. '  ' → logprob: -17.53522491455078
    5. '<|end|>' → logprob: -17.91022491455078
    6. '۰' → logprob: -18.91022491455078
    7. '00' → logprob: -18.91022491455078
    8. '=' → logprob: -19.03522491455078
    9. '```' → logprob: -19.03522491455078
    10. ' ' → logprob: -19.41022491455078

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '۰' → logprob: -18.625179290771484
    4. '٠' → logprob: -19.875179290771484
    5. '  ' → logprob: -20.500179290771484
    6. '०' → logprob: -20.750179290771484
    7. '０' → logprob: -20.750179290771484
    8. '   ' → logprob: -21.125179290771484
    9. '```' → logprob: -21.250179290771484
    10. '০' → logprob: -21.875179290771484

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031388550996780396
    2. ':
' → logprob: -6.128139019012451
    3. ':return' → logprob: -7.128139019012451
    4. '           ' → logprob: -8.878138542175293
    5. '       ' → logprob: -12.003138542175293
    6. '):' → logprob: -12.628138542175293
    7. ' :' → logprob: -14.003138542175293
    8. ':
' → logprob: -14.753138542175293
    9. 'return' → logprob: -15.253138542175293
    10. '):
' → logprob: -15.628138542175293

Token 72: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017302792984992266
    2. ' return' → logprob: -7.001730442047119
    3. '       ' → logprob: -7.376730442047119
    4. 'return' → logprob: -9.251729965209961
    5. '               ' → logprob: -10.501729965209961
    6. ' ' → logprob: -11.126729965209961
    7. '   ' → logprob: -11.251729965209961
    8. '          ' → logprob: -11.376729965209961
    9. '	       ' → logprob: -12.376729965209961
    10. ' ' → logprob: -12.626729965209961

Token 73: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4901575744152069
    2. ' return' → logprob: -0.9901576042175293
    3. '               ' → logprob: -4.240157604217529
    4. '           ' → logprob: -6.615157604217529
    5. '       ' → logprob: -8.865157127380371
    6. '   ' → logprob: -10.365157127380371
    7. ' ' → logprob: -10.990157127380371
    8. '	return' → logprob: -11.990157127380371
    9. ':return' → logprob: -12.365157127380371
    10. '```' → logprob: -13.490157127380371

Token 74: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.4740770161151886
    2. ' False' → logprob: -0.9740769863128662
    3. ' ' → logprob: -19.224077224731445
    4. ' True' → logprob: -19.974077224731445
    5. '(False' → logprob: -20.224077224731445
    6. 'True' → logprob: -20.224077224731445
    7. ' ' → logprob: -20.974077224731445
    8. '=False' → logprob: -21.224077224731445
    9. 'F' → logprob: -21.349077224731445
    10. ' false' → logprob: -22.099077224731445

Token 75: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009032041765749454
    2. '
' → logprob: -4.759032249450684
    3. '    
' → logprob: -7.884032249450684
    4. '  
' → logprob: -11.509032249450684
    5. 'return' → logprob: -11.634032249450684
    6. '       ' → logprob: -12.259032249450684
    7. ' return' → logprob: -12.509032249450684
    8. '```' → logprob: -12.759032249450684
    9. ' 
' → logprob: -13.009032249450684
    10. '        
' → logprob: -13.134032249450684

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001375089050270617
    2. ' return' → logprob: -9.375137329101562
    3. 'return' → logprob: -10.625137329101562
    4. '
' → logprob: -10.750137329101562
    5. '    
' → logprob: -13.125137329101562
    6. '       ' → logprob: -13.375137329101562
    7. '```' → logprob: -13.500137329101562
    8. '	return' → logprob: -13.875137329101562
    9. '   ' → logprob: -15.000137329101562
    10. ' ' → logprob: -15.250137329101562

Token 77: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.21853074431419373
    2. '   ' → logprob: -1.7185307741165161
    3. ' return' → logprob: -4.093530654907227
    4. ' ' → logprob: -8.593530654907227
    5. '  ' → logprob: -9.968530654907227
    6. '    
' → logprob: -10.718530654907227
    7. '
' → logprob: -11.843530654907227
    8. '	return' → logprob: -11.843530654907227
    9. '```' → logprob: -11.968530654907227
    10. '  
' → logprob: -12.093530654907227

Token 78: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0024756586644798517
    2. ' True' → logprob: -6.002475738525391
    3. '   ' → logprob: -19.75247573852539
    4. 'Tr' → logprob: -20.25247573852539
    5. '(True' → logprob: -20.62747573852539
    6. '=True' → logprob: -22.00247573852539
    7. ' ' → logprob: -22.25247573852539
    8. 'False' → logprob: -22.62747573852539
    9. 'true' → logprob: -23.12747573852539
    10. ' Tru' → logprob: -23.37747573852539

Token 79: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7323697209358215
    2. '#' → logprob: -0.9823697209358215
    3. 'd' → logprob: -3.4823696613311768
    4. 'n' → logprob: -3.7323696613311768
    5. '
' → logprob: -3.8573696613311768
    6. '\' → logprob: -4.232369899749756
    7. ' ' → logprob: -4.482369899749756
    8. '<|end|>' → logprob: -4.607369899749756
    9. '```' → logprob: -4.982369899749756
    10. ' 
' → logprob: -5.357369899749756

Token 81: ' main' (ID: 2758)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.0372071266174316
    2. ' main' → logprob: -1.1622071266174316
    3. ' prime' → logprob: -2.2872071266174316
    4. ' factorial' → logprob: -2.4122071266174316
    5. ' ' → logprob: -3.0372071266174316
    6. ' check' → logprob: -3.7872071266174316
    7. ' next' → logprob: -4.287207126617432
    8. ' calculate' → logprob: -4.662207126617432
    9. ' factor' → logprob: -4.787207126617432
    10. ' fibonacci' → logprob: -4.912207126617432

Token 82: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4751681983470917
    2. '(' → logprob: -0.9751682281494141
    3. '(:' → logprob: -7.225168228149414
    4. '()' → logprob: -8.225168228149414
    5. ':' → logprob: -10.600168228149414
    6. '(**' → logprob: -11.100168228149414
    7. '(":' → logprob: -11.225168228149414
    8. ' ():' → logprob: -11.850168228149414
    9. '(x' → logprob: -12.475168228149414
    10. '(_:' → logprob: -12.600168228149414

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3088191747665405
    2. ' ' → logprob: -1.8088191747665405
    3. '    ' → logprob: -2.43381929397583
    4. ' n' → logprob: -5.05881929397583
    5. 'n' → logprob: -6.18381929397583
    6. ' for' → logprob: -6.68381929397583
    7. '  ' → logprob: -7.43381929397583
    8. '    
' → logprob: -7.55881929397583
    9. ' input' → logprob: -7.55881929397583
    10. ' i' → logprob: -7.68381929397583

Token 84: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1194363534450531
    2. ' n' → logprob: -2.244436264038086
    3. '   ' → logprob: -5.619436264038086
    4. 'num' → logprob: -6.869436264038086
    5. ' for' → logprob: -7.619436264038086
    6. 'for' → logprob: -7.744436264038086
    7. ' num' → logprob: -7.994436264038086
    8. 'number' → logprob: -8.494436264038086
    9. ' number' → logprob: -8.744436264038086
    10. ' while' → logprob: -9.744436264038086

Token 85: '_line' (ID: 14418)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11267958581447601
    2. '(' → logprob: -3.1126794815063477
    3. '_' → logprob: -3.3626794815063477
    4. '_data' → logprob: -4.237679481506348
    5. '_line' → logprob: -4.737679481506348
    6. '_str' → logprob: -7.362679481506348
    7. '_text' → logprob: -7.737679481506348
    8. ' =' → logprob: -7.987679481506348
    9. '().' → logprob: -8.112679481506348
    10. 's' → logprob: -8.112679481506348

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019673319533467293
    2. '=' → logprob: -4.0196733474731445
    3. '()' → logprob: -6.6446733474731445
    4. 's' → logprob: -8.644673347473145
    5. '(' → logprob: -11.019673347473145
    6. ' ' → logprob: -11.144673347473145
    7. '   ' → logprob: -11.894673347473145
    8. '_' → logprob: -12.644673347473145
    9. ')' → logprob: -14.019673347473145
    10. ':' → logprob: -14.144673347473145

Token 87: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2559519410133362
    2. 'input' → logprob: -1.7559518814086914
    3. ' sys' → logprob: -3.0059518814086914
    4. 'sys' → logprob: -5.630951881408691
    5. ' ' → logprob: -14.380951881408691
    6. '=sys' → logprob: -15.505951881408691
    7. '=input' → logprob: -16.130952835083008
    8. '	input' → logprob: -16.380952835083008
    9. '	sys' → logprob: -16.880952835083008
    10. '(sys' → logprob: -17.130952835083008

Token 88: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.014920581132173538
    2. '.' → logprob: -4.264920711517334
    3. '.argv' → logprob: -7.514920711517334
    4. '.stdout' → logprob: -9.389920234680176
    5. '.readline' → logprob: -9.639920234680176
    6. '.input' → logprob: -9.889920234680176
    7. '.std' → logprob: -12.014920234680176
    8. ' .' → logprob: -12.889920234680176
    9. '.st' → logprob: -13.764920234680176
    10. '.standard' → logprob: -14.014920234680176

Token 89: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00023226479243021458
    2. '.' → logprob: -8.375232696533203
    3. '.readlines' → logprob: -14.250232696533203
    4. '.read' → logprob: -14.250232696533203
    5. ' readline' → logprob: -15.125232696533203
    6. 'read' → logprob: -16.750232696533203
    7. ' .' → logprob: -17.875232696533203
    8. '```' → logprob: -20.000232696533203
    9. 'r' → logprob: -20.250232696533203
    10. '
' → logprob: -20.375232696533203

Token 90: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25195103883743286
    2. '().' → logprob: -1.501950979232788
    3. '(' → logprob: -11.001951217651367
    4. '()
' → logprob: -13.251951217651367
    5. ' ()' → logprob: -13.876951217651367
    6. '()

' → logprob: -14.126951217651367
    7. '())' → logprob: -14.876951217651367
    8. '.strip' → logprob: -15.001951217651367
    9. '()`' → logprob: -15.126951217651367
    10. '（）' → logprob: -15.126951217651367

Token 91: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0001234428636962548
    2. 'rstrip' → logprob: -9.000123023986816
    3. ' strip' → logprob: -17.250123977661133
    4. '_strip' → logprob: -19.500123977661133
    5. 'str' → logprob: -21.625123977661133
    6. 'split' → logprob: -21.750123977661133
    7. '(strip' → logprob: -22.375123977661133
    8. 'Strip' → logprob: -22.750123977661133
    9. 'decode' → logprob: -22.750123977661133
    10. '-strip' → logprob: -22.875123977661133

Token 92: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003460712905507535
    2. '(' → logprob: -8.000346183776855
    3. '()`' → logprob: -12.625346183776855
    4. '()
' → logprob: -13.125346183776855
    5. '()"' → logprob: -13.625346183776855
    6. '('' → logprob: -13.750346183776855
    7. '())' → logprob: -14.750346183776855
    8. '(),' → logprob: -14.875346183776855
    9. '().' → logprob: -14.875346183776855
    10. '()(' → logprob: -15.125346183776855

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005641259253025055
    2. 'n' → logprob: -6.880641460418701
    3. ' ' → logprob: -6.880641460418701
    4. '    
' → logprob: -7.505641460418701
    5. ' if' → logprob: -7.505641460418701
    6. ' n' → logprob: -7.630641460418701
    7. '    ' → logprob: -7.755641460418701
    8. 'if' → logprob: -7.880641460418701
    9. ',' → logprob: -8.755640983581543
    10. 's' → logprob: -8.880640983581543

Token 94: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9349749088287354
    2. 'n' (adapté à ' n') → logprob: -1.0599749088287354
    3. 'num' → logprob: -2.3099749088287354
    4. ' num' → logprob: -3.3099749088287354
    5. 'if' → logprob: -3.5599749088287354
    6. ' if' → logprob: -3.6849749088287354
    7. 'number' → logprob: -3.8099749088287354
    8. ' number' → logprob: -4.309974670410156
    9. ' numbers' → logprob: -4.309974670410156
    10. 'numbers' → logprob: -5.059974670410156

Token 95: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0038885537069290876
    2. '=' → logprob: -5.6288886070251465
    3. ' ' → logprob: -8.253888130187988
    4. ',' → logprob: -10.878888130187988
    5. '=int' → logprob: -12.878888130187988
    6. ' ,' → logprob: -13.753888130187988
    7. 's' → logprob: -13.878888130187988
    8. ' =
' → logprob: -14.003888130187988
    9. ')' → logprob: -14.128888130187988
    10. '_' → logprob: -14.128888130187988

Token 96: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3078360855579376
    2. ' m' → logprob: -2.0578360557556152
    3. 'm' → logprob: -2.9328360557556152
    4. ' =' → logprob: -3.0578360557556152
    5. ' s' → logprob: -4.932836055755615
    6. ' k' → logprob: -5.057836055755615
    7. 's' → logprob: -5.057836055755615
    8. '=' → logprob: -5.557836055755615
    9. ' p' → logprob: -6.307836055755615
    10. ' input' → logprob: -6.432836055755615

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.523185133934021
    2. '=' → logprob: -0.898185133934021
    3. ' ' → logprob: -9.898184776306152
    4. ',' → logprob: -12.273184776306152
    5. '  ' → logprob: -12.898184776306152
    6. 's' → logprob: -14.023184776306152
    7. '=int' → logprob: -14.148184776306152
    8. '   ' → logprob: -14.398184776306152
    9. ')' → logprob: -14.648184776306152
    10. ' ,' → logprob: -15.835684776306152

Token 98: ' input' (ID: 3422)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.008174104616045952
    2. 'map' → logprob: -4.883173942565918
    3. ' input' → logprob: -7.758173942565918
    4. ' [' → logprob: -9.758173942565918
    5. ' list' → logprob: -10.133173942565918
    6. 'input' → logprob: -10.883173942565918
    7. ' ' → logprob: -11.258173942565918
    8. '[' → logprob: -12.133173942565918
    9. '(map' → logprob: -13.633173942565918
    10. ' m' → logprob: -13.758173942565918

Token 99: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -7.350386295001954e-05
    2. '_lines' → logprob: -11.000073432922363
    3. '_' → logprob: -11.125073432922363
    4. 'line' → logprob: -12.000073432922363
    5. '_li' → logprob: -12.000073432922363
    6. '_split' → logprob: -12.250073432922363
    7. '_l' → logprob: -12.375073432922363
    8. '"_' → logprob: -13.000073432922363
    9. ' _' → logprob: -13.250073432922363
    10. '_lin' → logprob: -13.625073432922363

Token 100: '.split' (ID: 10347)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.695784866809845
    2. '.split' → logprob: -0.695784866809845
    3. ' .' → logprob: -7.070785045623779
    4. ' =' → logprob: -7.195785045623779
    5. '=' → logprob: -7.195785045623779
    6. '.s' → logprob: -8.695784568786621
    7. '.strip' → logprob: -9.945784568786621
    8. ',' → logprob: -10.070784568786621
    9. 'split' → logprob: -11.445784568786621
    10. '.=' → logprob: -11.820784568786621

Token 101: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.36088094115257263
    2. '()' → logprob: -1.235880970954895
    3. '(' → logprob: -5.1108808517456055
    4. '("("' → logprob: -5.1108808517456055
    5. ''' → logprob: -9.110880851745605
    6. '("' → logprob: -9.235880851745605
    7. '(',' → logprob: -9.735880851745605
    8. '('(' → logprob: -11.485880851745605
    9. '('.')' → logprob: -12.360880851745605
    10. '(None' → logprob: -13.360880851745605

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18597246706485748
    2. 'n' → logprob: -2.5609724521636963
    3. '
' → logprob: -3.1859724521636963
    4. '    
' → logprob: -3.5609724521636963
    5. '<|end|>' → logprob: -4.560972690582275
    6. ' 
' → logprob: -6.185972690582275
    7. '  
' → logprob: -6.435972690582275
    8. '   
' → logprob: -6.810972690582275
    9. ' n' → logprob: -6.810972690582275
    10. ' ' → logprob: -6.935972690582275

Token 103: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.2020478993654251
    2. ' n' → logprob: -1.7020479440689087
    3. ' 
' → logprob: -7.952047824859619
    4. ' ' → logprob: -8.952048301696777
    5. '   ' → logprob: -9.077048301696777
    6. '	n' → logprob: -11.327048301696777
    7. '    ' → logprob: -11.702048301696777
    8. 'c' → logprob: -12.202048301696777
    9. '    
' → logprob: -12.452048301696777
    10. ' c' → logprob: -13.327048301696777

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03380141407251358
    2. '=' → logprob: -3.408801317214966
    3. '=int' → logprob: -9.533801078796387
    4. ',' → logprob: -9.533801078796387
    5. ' ' → logprob: -11.783801078796387
    6. ' =
' → logprob: -13.783801078796387
    7. '   ' → logprob: -14.533801078796387
    8. ')' → logprob: -14.533801078796387
    9. 'int' → logprob: -14.908801078796387
    10. ' ,' → logprob: -15.408801078796387

Token 105: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10020699352025986
    2. 'int' → logprob: -2.3502070903778076
    3. ' in' → logprob: -15.975207328796387
    4. '=int' → logprob: -16.47520637512207
    5. '[int' → logprob: -16.97520637512207
    6. ' ' → logprob: -17.22520637512207
    7. '	int' → logprob: -17.85020637512207
    8. '<int' → logprob: -18.10020637512207
    9. '(int' → logprob: -18.10020637512207
    10. ' ' → logprob: -19.60020637512207

Token 106: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011048882268369198
    2. '(' → logprob: -4.511048793792725
    3. ' (' → logprob: -13.886049270629883
    4. 'n' → logprob: -17.136049270629883
    5. '(
' → logprob: -17.136049270629883
    6. ' ' → logprob: -17.261049270629883
    7. '(c' → logprob: -17.511049270629883
    8. '((' → logprob: -18.386049270629883
    9. '()' → logprob: -18.636049270629883
    10. ' n' → logprob: -18.886049270629883

Token 107: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005426656571216881
    2. ')
' → logprob: -7.750542640686035
    3. ' )' → logprob: -9.125542640686035
    4. ' )
' → logprob: -13.625542640686035
    5. ')

' → logprob: -14.375542640686035
    6. '<|end|>' → logprob: -15.000542640686035
    7. ' ' → logprob: -15.250542640686035
    8. '   ' → logprob: -15.750542640686035
    9. ')
' → logprob: -16.25054359436035
    10. ')#' → logprob: -16.25054359436035

Token 108: '   ' (ID: 271)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.7446063160896301
    2. '   ' → logprob: -1.1196062564849854
    3. 'c' → logprob: -1.6196062564849854
    4. ' ' → logprob: -7.8696064949035645
    5. '	c' → logprob: -8.869606018066406
    6. '  ' → logprob: -9.369606018066406
    7. '    ' → logprob: -10.119606018066406
    8. ',' → logprob: -10.994606018066406
    9. ',c' → logprob: -12.119606018066406
    10. '<|end|>' → logprob: -12.119606018066406

Token 109: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.018156379461288452
    2. ' c' → logprob: -4.0181565284729
    3. '   ' → logprob: -12.018156051635742
    4. '	c' → logprob: -15.518156051635742
    5. ' ' → logprob: -16.643156051635742
    6. '  ' → logprob: -17.268156051635742
    7. '
' → logprob: -18.018156051635742
    8. '    ' → logprob: -18.643156051635742
    9. '_c' → logprob: -19.768156051635742
    10. ' 
' → logprob: -19.768156051635742

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132782578468323
    2. '=' → logprob: -1.3132781982421875
    3. '=int' → logprob: -11.313278198242188
    4. ' ' → logprob: -12.688278198242188
    5. ')' → logprob: -15.063278198242188
    6. '  ' → logprob: -15.563278198242188
    7. ' =
' → logprob: -15.813278198242188
    8. ' =)' → logprob: -15.813278198242188
    9. '<|end|>' → logprob: -16.563278198242188
    10. '   ' → logprob: -16.688278198242188

Token 111: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16022513806819916
    2. 'int' → logprob: -1.9102251529693604
    3. ' in' → logprob: -14.535224914550781
    4. ' ' → logprob: -16.16022491455078
    5. '=int' → logprob: -16.28522491455078
    6. '	int' → logprob: -16.53522491455078
    7. '[int' → logprob: -17.03522491455078
    8. '   ' → logprob: -17.03522491455078
    9. ' ' → logprob: -17.28522491455078
    10. '(int' → logprob: -17.53522491455078

Token 112: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.47411292791366577
    2. '(' → logprob: -0.9741129279136658
    3. ' (' → logprob: -11.474112510681152
    4. 'c' → logprob: -11.724112510681152
    5. '(
' → logprob: -12.099112510681152
    6. '()' → logprob: -12.224112510681152
    7. '('' → logprob: -12.474112510681152
    8. ')' → logprob: -14.099112510681152
    9. ')c' → logprob: -14.224112510681152
    10. '(C' → logprob: -14.599112510681152

Token 113: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.796184723294573e-06
    2. ')
' → logprob: -12.500005722045898
    3. ' )' → logprob: -13.250005722045898
    4. '   ' → logprob: -15.875005722045898
    5. ')#' → logprob: -17.3750057220459
    6. ')

' → logprob: -17.7500057220459
    7. '))' → logprob: -18.6250057220459
    8. ' ' → logprob: -18.7500057220459
    9. '),' → logprob: -19.0000057220459
    10. '<|end|>' → logprob: -19.3750057220459

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04177888482809067
    2. 'pr' → logprob: -3.541778802871704
    3. ' primes' → logprob: -4.666779041290283
    4. '    
' → logprob: -7.291779041290283
    5. 'nums' → logprob: -7.291779041290283
    6. 'prime' → logprob: -8.166778564453125
    7. 'numbers' → logprob: -8.416778564453125
    8. 'def' → logprob: -8.666778564453125
    9. 'all' → logprob: -9.041778564453125
    10. '#' → logprob: -10.166778564453125

Token 115: ' #' (ID: 1069)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.01051854994148016
    2. 'nums' → logprob: -4.885518550872803
    3. 'lst' → logprob: -7.760518550872803
    4. 'numbers' → logprob: -7.760518550872803
    5. '#' (adapté à ' #') → logprob: -8.010518074035645
    6. 'prime' → logprob: -8.260518074035645
    7. 'arr' → logprob: -8.260518074035645
    8. 'def' → logprob: -8.385518074035645
    9. 'if' → logprob: -8.385518074035645
    10. 'seq' → logprob: -9.260518074035645

Token 116: ' For' (ID: 2214)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.07520249485969543
    2. ' primes' → logprob: -2.950202465057373
    3. 'nums' → logprob: -4.450202465057373
    4. 'if' → logprob: -5.825202465057373
    5. 'prime' → logprob: -7.200202465057373
    6. '#' → logprob: -7.575202465057373
    7. ' nums' → logprob: -7.575202465057373
    8. 'result' → logprob: -7.700202465057373
    9. ' if' → logprob: -7.825202465057373
    10. 'numbers' → logprob: -7.950202465057373

Token 117: ' n' (ID: 297)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12041894346475601
    2. ' n' → logprob: -3.1204190254211426
    3. ' ' → logprob: -4.495419025421143
    4. 'i' → logprob: -4.745419025421143
    5. ' primes' → logprob: -4.745419025421143
    6. ' the' → logprob: -4.995419025421143
    7. ' all' → logprob: -5.245419025421143
    8. ' x' → logprob: -5.370419025421143
    9. ' each' → logprob: -5.620419025421143
    10. ' _' → logprob: -5.870419025421143

Token 118: ' pairs' (ID: 24702)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.7852115631103516
    2. '<=' → logprob: -1.2852115631103516
    3. '=' → logprob: -1.9102115631103516
    4. ',' → logprob: -3.6602115631103516
    5. ' ' → logprob: -3.7852115631103516
    6. ' <' → logprob: -3.7852115631103516
    7. '   ' → logprob: -4.535211563110352
    8. ' >=' → logprob: -5.035211563110352
    9. ' =' → logprob: -5.285211563110352
    10. '>' → logprob: -5.535211563110352

Token 119: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6208754777908325
    2. '   ' → logprob: -1.6208754777908325
    3. ':' → logprob: -2.120875358581543
    4. '<|end|>' → logprob: -2.370875358581543
    5. '
' → logprob: -4.245875358581543
    6. ' of' → logprob: -5.120875358581543
    7. '<|end|>' → logprob: -5.120875358581543
    8. ':
' → logprob: -5.745875358581543
    9. '(' → logprob: -5.870875358581543
    10. ' =' → logprob: -5.995875358581543

Token 120: 'b' (ID: 65)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6695079803466797
    2. '),' → logprob: -1.2945079803466797
    3. ',' → logprob: -2.0445079803466797
    4. ' of' → logprob: -3.9195079803466797
    5. 'of' → logprob: -4.66950798034668
    6. ' )' → logprob: -5.04450798034668
    7. ' n' → logprob: -5.16950798034668
    8. ' ),' → logprob: -5.16950798034668
    9. ' ,' → logprob: -5.54450798034668
    10. ' ' → logprob: -5.54450798034668

Token 121: '_i' (ID: 10853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1438739001750946
    2. ')' → logprob: -2.768873929977417
    3. 'y' → logprob: -3.518873929977417
    4. 'etween' → logprob: -4.143873691558838
    5. ',)' → logprob: -4.768873691558838
    6. '),' → logprob: -5.518873691558838
    7. 'ase' → logprob: -6.268873691558838
    8. ' ,' → logprob: -6.643873691558838
    9. '/' → logprob: -6.643873691558838
    10. 'efore' → logprob: -7.143873691558838

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6748567819595337
    2. ')' → logprob: -1.0498567819595337
    3. '),' → logprob: -2.174856662750244
    4. '+' → logprob: -5.549856662750244
    5. ' ,' → logprob: -5.549856662750244
    6. '=' → logprob: -5.549856662750244
    7. ',)' → logprob: -5.799856662750244
    8. ' =' → logprob: -5.924856662750244
    9. '//' → logprob: -6.174856662750244
    10. '*' → logprob: -6.424856662750244

Token 123: ' g' (ID: 329)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14374804496765137
    2. 'c' → logprob: -2.6437480449676514
    3. 'd' → logprob: -3.7687480449676514
    4. 'p' → logprob: -4.7687482833862305
    5. 'k' → logprob: -4.8937482833862305
    6. 'b' → logprob: -5.5187482833862305
    7. 'l' → logprob: -5.6437482833862305
    8. 'e' → logprob: -6.1437482833862305
    9. 'r' → logprob: -6.2687482833862305
    10. 's' → logprob: -6.3937482833862305

Token 124: '_i' (ID: 10853)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12369846552610397
    2. '),' → logprob: -2.8736984729766846
    3. '_i' → logprob: -2.8736984729766846
    4. 'i' → logprob: -6.9986982345581055
    5. ')_' → logprob: -7.1236982345581055
    6. '_' → logprob: -7.6236982345581055
    7. ')
' → logprob: -8.373698234558105
    8. ')i' → logprob: -8.498698234558105
    9. '):' → logprob: -8.748698234558105
    10. 's' → logprob: -9.623698234558105

Token 125: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5220693349838257
    2. '),' → logprob: -1.0220693349838257
    3. '):' → logprob: -3.1470694541931152
    4. '):
' → logprob: -5.897069454193115
    5. ')
' → logprob: -7.272069454193115
    6. '   ' → logprob: -9.147068977355957
    7. '),
' → logprob: -9.397068977355957
    8. '):

' → logprob: -9.772068977355957
    9. ',' → logprob: -10.022068977355957
    10. '#' → logprob: -10.522068977355957

Token 126: ' we' (ID: 581)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.07790795713663101
    2. 'pairs' → logprob: -2.7029080390930176
    3. ' primes' → logprob: -5.702908039093018
    4. ' b' → logprob: -7.077908039093018
    5. 'b' → logprob: -7.327908039093018
    6. '   ' → logprob: -7.452908039093018
    7. ' results' → logprob: -7.827908039093018
    8. ' for' → logprob: -8.32790756225586
    9. ' boys' → logprob: -8.70290756225586
    10. ' numbers' → logprob: -9.07790756225586

Token 127: ' need' (ID: 1309)
  Prédit: ' need'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.6573010087013245
    2. ' will' → logprob: -2.4073009490966797
    3. 'need' → logprob: -2.7823009490966797
    4. ' can' → logprob: -3.0323009490966797
    5. ''ll' → logprob: -3.0323009490966797
    6. '   ' → logprob: -3.1573009490966797
    7. ' should' → logprob: -3.4073009490966797
    8. 'ill' → logprob: -3.9073009490966797
    9. 'will' → logprob: -4.03230094909668
    10. ' want' → logprob: -4.15730094909668

Token 128: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.21466754376888275
    2. 'to' → logprob: -1.714667558670044
    3. '   ' → logprob: -4.339667320251465
    4. '  ' → logprob: -10.714667320251465
    5. '[]' → logprob: -10.714667320251465
    6. '    ' → logprob: -11.089667320251465
    7. '<|end|>' → logprob: -11.714667320251465
    8. 'a' → logprob: -11.839667320251465
    9. ' ' → logprob: -11.839667320251465
    10. 'def' → logprob: -11.964667320251465

Token 129: ' find' (ID: 1646)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.46129295229911804
    2. 'collect' → logprob: -2.3362929821014404
    3. ' read' → logprob: -2.9612929821014404
    4. 'read' → logprob: -3.2112929821014404
    5. 'find' → logprob: -3.4612929821014404
    6. ' find' → logprob: -3.5862929821014404
    7. 'generate' → logprob: -3.7112929821014404
    8. 'process' → logprob: -3.7112929821014404
    9. ' process' → logprob: -3.9612929821014404
    10. 'store' → logprob: -4.211292743682861

Token 130: ' digits' (ID: 37806)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9618543982505798
    2. ' pairs' → logprob: -1.0868544578552246
    3. ' all' → logprob: -1.8368544578552246
    4. 'the' → logprob: -3.4618544578552246
    5. 'all' → logprob: -4.086854457855225
    6. ' a' → logprob: -4.336854457855225
    7. 'pairs' → logprob: -4.336854457855225
    8. ' primes' → logprob: -4.586854457855225
    9. '<|end|>' → logprob: -4.711854457855225
    10. ' ' → logprob: -4.961854457855225

Token 131: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46218377351760864
    2. '(' → logprob: -2.462183713912964
    3. 'for' → logprob: -2.837183713912964
    4. ' for' → logprob: -2.962183713912964
    5. '[]' → logprob: -3.087183713912964
    6. '()' → logprob: -3.837183713912964
    7. '<|end|>' → logprob: -3.837183713912964
    8. ' =' → logprob: -4.337183952331543
    9. 'def' → logprob: -4.587183952331543
    10. ',' → logprob: -4.712183952331543

Token 132: ' these' (ID: 1879)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.2179614305496216
    2. ' each' → logprob: -1.3429614305496216
    3. 'b' → logprob: -1.8429614305496216
    4. ' the' → logprob: -2.342961311340332
    5. 'the' → logprob: -3.217961311340332
    6. ' b' → logprob: -3.467961311340332
    7. ' i' → logprob: -3.592961311340332
    8. 'i' → logprob: -4.092961311340332
    9. ' ' → logprob: -4.342961311340332
    10. 'boys' → logprob: -4.717961311340332

Token 133: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.8207932114601135
    2. ' pairs' → logprob: -0.9457932114601135
    3. 'def' → logprob: -3.0707931518554688
    4. '
' → logprob: -3.9457931518554688
    5. ',' → logprob: -4.195793151855469
    6. ' that' → logprob: -4.820793151855469
    7. ' ' → logprob: -4.945793151855469
    8. 'for' → logprob: -4.945793151855469
    9. ' for' → logprob: -5.070793151855469
    10. ' to' → logprob: -5.320793151855469

Token 134: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009413564577698708
    2. '
' → logprob: -5.884413719177246
    3. '<|end|>' → logprob: -5.884413719177246
    4. ',' → logprob: -6.384413719177246
    5. '    
' → logprob: -7.134413719177246
    6. '.' → logprob: -7.884413719177246
    7. ' for' → logprob: -8.259413719177246
    8. 'def' → logprob: -8.634413719177246
    9. 'for' → logprob: -9.134413719177246
    10. '<|end|>' → logprob: -9.384413719177246

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004062132444232702
    2. '<|end|>' → logprob: -6.504062175750732
    3. ',' → logprob: -6.754062175750732
    4. '
' → logprob: -7.629062175750732
    5. '.' → logprob: -8.254061698913574
    6. ' for' → logprob: -8.754061698913574
    7. '    
' → logprob: -9.254061698913574
    8. 'def' → logprob: -9.379061698913574
    9. 'for' → logprob: -9.504061698913574
    10. ' to' → logprob: -9.879061698913574

Token 136: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6150891780853271
    2. '   ' → logprob: -0.8650891780853271
    3. '<|end|>' → logprob: -3.740089178085327
    4. '    
' → logprob: -4.865089416503906
    5. ',' → logprob: -6.115089416503906
    6. ' for' → logprob: -7.115089416503906
    7. '<|end|>' → logprob: -7.615089416503906
    8. '  
' → logprob: -7.615089416503906
    9. '.' → logprob: -7.990089416503906
    10. '\n' → logprob: -8.115089416503906

Token 137: ' such' (ID: 2238)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.8627721071243286
    2. 'pairs' → logprob: -1.4877721071243286
    3. '   ' → logprob: -1.8627721071243286
    4. 'digits' → logprob: -2.362771987915039
    5. ' digits' → logprob: -2.737771987915039
    6. ' ' → logprob: -4.737771987915039
    7. '<|end|>' → logprob: -4.862771987915039
    8. '    
' → logprob: -6.112771987915039
    9. ' b' → logprob: -6.237771987915039
    10. ' 
' → logprob: -6.487771987915039

Token 138: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.31940409541130066
    2. 'that' → logprob: -1.319404125213623
    3. '<|end|>' → logprob: -6.069404125213623
    4. ' as' → logprob: -7.319404125213623
    5. 'as' → logprob: -7.569404125213623
    6. ',' → logprob: -8.069403648376465
    7. 'at' → logprob: -8.069403648376465
    8. '_that' → logprob: -8.194403648376465
    9. '   ' → logprob: -8.319403648376465
    10. '#' → logprob: -8.444403648376465

Token 139: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2751816213130951
    2. ' each' → logprob: -3.025181531906128
    3. 'the' → logprob: -3.275181531906128
    4. ' all' → logprob: -3.650181531906128
    5. ' their' → logprob: -3.775181531906128
    6. 'b' → logprob: -3.900181531906128
    7. ' for' → logprob: -4.150181770324707
    8. ' b' → logprob: -4.400181770324707
    9. 'each' → logprob: -4.400181770324707
    10. 'sum' → logprob: -4.775181770324707

Token 140: ' constructed' (ID: 30248)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -1.1754348278045654
    2. ' product' → logprob: -1.6754348278045654
    3. 'y' → logprob: -2.6754348278045654
    4. ' code' → logprob: -3.3004348278045654
    5. ' number' → logprob: -3.4254348278045654
    6. ' difference' → logprob: -3.4254348278045654
    7. 'ir' → logprob: -3.5504348278045654
    8. 'sum' → logprob: -3.5504348278045654
    9. ' combined' → logprob: -3.6754348278045654
    10. ' digits' → logprob: -3.9879348278045654

Token 141: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.23431432247161865
    2. 'number' → logprob: -1.7343143224716187
    3. ' numbers' → logprob: -4.109314441680908
    4. 'numbers' → logprob: -5.234314441680908
    5. ' code' → logprob: -6.109314441680908
    6. '_number' → logprob: -6.359314441680908
    7. ' digits' → logprob: -6.859314441680908
    8. 'digits' → logprob: -6.984314441680908
    9. 'num' → logprob: -7.109314441680908
    10. ' ' → logprob: -7.109314441680908

Token 142: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3004618287086487
    2. '<|end|>' → logprob: -2.425461769104004
    3. '<|end|>' → logprob: -3.050461769104004
    4. 's' → logprob: -3.425461769104004
    5. ' has' → logprob: -4.050461769104004
    6. '   ' → logprob: -4.300461769104004
    7. '#' → logprob: -4.425461769104004
    8. ' remains' → logprob: -4.425461769104004
    9. ''s' → logprob: -5.050461769104004
    10. ' #' → logprob: -5.300461769104004

Token 143: ' maximal' (ID: 65414)
  Prédit: ' prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.8340094685554504
    2. ' divisible' → logprob: -1.0840094089508057
    3. 'prime' → logprob: -1.7090094089508057
    4. ' a' → logprob: -3.9590094089508057
    5. '_prime' → logprob: -4.459009647369385
    6. ' not' → logprob: -5.084009647369385
    7. ' composite' → logprob: -6.209009647369385
    8. ' ' → logprob: -6.709009647369385
    9. 'a' → logprob: -7.271509647369385
    10. '<|end|>' → logprob: -7.521509647369385

Token 144: ' under' (ID: 1641)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25932177901268005
    2. ',' → logprob: -2.009321689605713
    3. '<|end|>' → logprob: -3.134321689605713
    4. '.' → logprob: -4.134321689605713
    5. '
' → logprob: -4.634321689605713
    6. '<|end|>' → logprob: -5.134321689605713
    7. 'def' → logprob: -5.259321689605713
    8. ' and' → logprob: -5.259321689605713
    9. '#' → logprob: -5.884321689605713
    10. '    
' → logprob: -7.009321689605713

Token 145: ' problem' (ID: 4792)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.575977623462677
    2. ' given' → logprob: -1.2009775638580322
    3. ' certain' → logprob: -2.5759775638580322
    4. ' some' → logprob: -3.4509775638580322
    5. 'the' → logprob: -4.200977802276611
    6. ' constraints' → logprob: -5.450977802276611
    7. 'certain' → logprob: -5.575977802276611
    8. 'given' → logprob: -6.200977802276611
    9. 'some' → logprob: -6.575977802276611
    10. ' these' → logprob: -7.450977802276611

Token 146: ' rules' (ID: 9607)
  Prédit: ' constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.019267531111836433
    2. 'constraints' → logprob: -4.019267559051514
    3. '_constraints' → logprob: -7.394267559051514
    4. '   ' → logprob: -8.769267082214355
    5. ''s' → logprob: -9.269267082214355
    6. 'constraint' → logprob: -9.769267082214355
    7. ' constraint' → logprob: -9.769267082214355
    8. '<|end|>' → logprob: -10.644267082214355
    9. 'atic' → logprob: -11.019267082214355
    10. '-specific' → logprob: -11.019267082214355

Token 147: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8945344090461731
    2. '<|end|>' → logprob: -0.8945344090461731
    3. '   ' → logprob: -1.7695343494415283
    4. '    
' → logprob: -5.519534587860107
    5. '<|end|>' → logprob: -5.519534587860107
    6. ',' → logprob: -6.144534587860107
    7. '  
' → logprob: -7.644534587860107
    8. '.' → logprob: -8.26953411102295
    9. '#' → logprob: -8.51953411102295
    10. ' ' → logprob: -8.89453411102295

Token 148: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5159701108932495
    2. '   ' → logprob: -1.2659701108932495
    3. '<|end|>' → logprob: -2.390970230102539
    4. '    
' → logprob: -4.015970230102539
    5. '  
' → logprob: -5.390970230102539
    6. ' ' → logprob: -6.265970230102539
    7. ' 
' → logprob: -6.390970230102539
    8. '   
' → logprob: -7.390970230102539
    9. '<|end|>' → logprob: -7.640970230102539
    10. ',' → logprob: -7.765970230102539

Token 149: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7800207734107971
    2. '
' → logprob: -1.6550207138061523
    3. '<|end|>' → logprob: -2.4050207138061523
    4. 'digits' → logprob: -2.5300207138061523
    5. '#' (adapté à ' #') → logprob: -2.9050207138061523
    6. '    
' → logprob: -3.2800207138061523
    7. ' digits' → logprob: -3.6550207138061523
    8. 'pairs' → logprob: -4.530020713806152
    9. ' pairs' → logprob: -4.655020713806152
    10. ' #' → logprob: -4.655020713806152

Token 150: ' Since' (ID: 12265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.508543848991394
    2. 'digits' → logprob: -1.758543848991394
    3. ' pairs' → logprob: -1.883543848991394
    4. 'pairs' → logprob: -2.1335439682006836
    5. ' 
' → logprob: -2.6335439682006836
    6. ' digits' → logprob: -2.6335439682006836
    7. '    
' → logprob: -3.2585439682006836
    8. '<|end|>' → logprob: -3.3835439682006836
    9. '#' → logprob: -3.6335439682006836
    10. '
' → logprob: -3.6335439682006836

Token 151: ' pairs' (ID: 24702)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10548920184373856
    2. ' not' → logprob: -3.1054892539978027
    3. 'n' → logprob: -3.3554892539978027
    4. ' c' → logprob: -4.855489253997803
    5. ' is' → logprob: -5.855489253997803
    6. ' the' → logprob: -5.980489253997803
    7. ' len' → logprob: -6.105489253997803
    8. ' True' → logprob: -6.855489253997803
    9. ' False' → logprob: -7.105489253997803
    10. 'not' → logprob: -7.105489253997803

Token 152: ' must' (ID: 2804)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.0650554895401001
    2. ' =' → logprob: -3.8150553703308105
    3. '<|end|>' → logprob: -4.6900553703308105
    4. ':' → logprob: -5.3150553703308105
    5. '=' → logprob: -5.6900553703308105
    6. ' have' → logprob: -5.6900553703308105
    7. ' can' → logprob: -5.9400553703308105
    8. 'are' → logprob: -6.0650553703308105
    9. '<|end|>' → logprob: -6.0650553703308105
    10. ' ' → logprob: -6.3150553703308105

Token 153: ' carry' (ID: 9852)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.008759216405451298
    2. ' not' → logprob: -5.883759021759033
    3. ' have' → logprob: -6.258759021759033
    4. ' only' → logprob: -6.758759021759033
    5. ' satisfy' → logprob: -7.633759021759033
    6. ' consist' → logprob: -7.758759021759033
    7. 'be' → logprob: -8.133759498596191
    8. ' remain' → logprob: -8.633759498596191
    9. ' each' → logprob: -8.758759498596191
    10. 'each' → logprob: -9.133759498596191

Token 154: ' identical' (ID: 32820)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.20068882405757904
    2. ' a' → logprob: -2.9506888389587402
    3. ' the' → logprob: -3.4506888389587402
    4. ' over' → logprob: -3.4506888389587402
    5. 'over' → logprob: -4.45068883895874
    6. ' out' → logprob: -4.45068883895874
    7. 'on' → logprob: -4.95068883895874
    8. ' ' → logprob: -4.95068883895874
    9. ' an' → logprob: -5.32568883895874
    10. ' forward' → logprob: -5.57568883895874

Token 155: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.08479052037000656
    2. 'digits' → logprob: -2.5847904682159424
    3. 'digit' → logprob: -6.8347907066345215
    4. ' ' → logprob: -6.8347907066345215
    5. '_digits' → logprob: -7.3347907066345215
    6. ' digit' → logprob: -7.4597907066345215
    7. '<|end|>' → logprob: -7.7097907066345215
    8. 's' → logprob: -7.8347907066345215
    9. 'd' → logprob: -7.8347907066345215
    10. ' spaces' → logprob: -8.459790229797363

Token 156: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015552095137536526
    2. ' ,' → logprob: -7.251555442810059
    3. ' for' → logprob: -7.876555442810059
    4. ',
' → logprob: -8.251555442810059
    5. '   ' → logprob: -9.626555442810059
    6. '<|end|>' → logprob: -9.626555442810059
    7. ':' → logprob: -11.501555442810059
    8. ' and' → logprob: -11.626555442810059
    9. 'for' → logprob: -11.876555442810059
    10. 's' → logprob: -12.001555442810059

Token 157: ' order' (ID: 2569)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -1.4624032974243164
    2. ' b' → logprob: -1.8374032974243164
    3. ' all' → logprob: -1.8374032974243164
    4. ' the' → logprob: -2.0874032974243164
    5. ' len' → logprob: -2.3374032974243164
    6. ' i' → logprob: -3.0874032974243164
    7. ' n' → logprob: -3.7124032974243164
    8. ' be' → logprob: -3.8374032974243164
    9. ' not' → logprob: -4.212403297424316
    10. ' there' → logprob: -4.212403297424316

Token 158: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: ':
' (ID: 734)
  Prédit: ' preserved'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' preserved' → logprob: -0.3872252106666565
    2. ' maintained' → logprob: -1.6372251510620117
    3. 'pres' → logprob: -3.3872251510620117
    4. 'maint' → logprob: -3.7622251510620117
    5. 'strict' → logprob: -3.8872251510620117
    6. ' non' → logprob: -4.012225151062012
    7. 'non' → logprob: -4.387225151062012
    8. ' strictly' → logprob: -5.137225151062012
    9. ' kept' → logprob: -5.887225151062012
    10. ' fixed' → logprob: -5.887225151062012

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7937259674072266
    2. ' b' → logprob: -1.1687259674072266
    3. ' for' → logprob: -2.2937259674072266
    4. 'b' → logprob: -3.2937259674072266
    5. '    ' → logprob: -3.4187259674072266
    6. ' ' → logprob: -4.168725967407227
    7. ' '' → logprob: -4.543725967407227
    8. 'for' → logprob: -4.668725967407227
    9. ' n' → logprob: -4.918725967407227
    10. ' "' → logprob: -5.293725967407227

Token 161: ' #' (ID: 1069)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.9890679121017456
    2. 'b' → logprob: -1.4890679121017456
    3. ' for' → logprob: -2.489068031311035
    4. '   ' → logprob: -2.864068031311035
    5. 'for' → logprob: -2.864068031311035
    6. '"' → logprob: -2.989068031311035
    7. ''b' → logprob: -3.239068031311035
    8. ' '' → logprob: -3.614068031311035
    9. ' "' → logprob: -3.864068031311035
    10. 'range' → logprob: -4.114068031311035

Token 162: '    ' (ID: 257)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4018743932247162
    2. ' b' → logprob: -1.5268744230270386
    3. 'for' → logprob: -2.526874303817749
    4. 'b' → logprob: -4.151874542236328
    5. '   ' → logprob: -5.651874542236328
    6. ' range' → logprob: -5.651874542236328
    7. ' #' → logprob: -6.526874542236328
    8. ' '' → logprob: -6.651874542236328
    9. ' ' → logprob: -6.651874542236328
    10. ' (' → logprob: -7.151874542236328

Token 163: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.08396418392658234
    2. 'for' → logprob: -2.8339641094207764
    3. 'from' → logprob: -5.8339643478393555
    4. 'g' → logprob: -6.2089643478393555
    5. '0' → logprob: -6.4589643478393555
    6. ' b' → logprob: -6.4589643478393555
    7. '(b' → logprob: -6.4589643478393555
    8. '2' → logprob: -6.5839643478393555
    9. '(' → logprob: -6.7089643478393555
    10. '1' → logprob: -6.8339643478393555

Token 164: '1' (ID: 16)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.3412865698337555
    2. '_' → logprob: -1.591286540031433
    3. ',' → logprob: -2.9662866592407227
    4. 'i' → logprob: -4.466286659240723
    5. '_digits' → logprob: -5.216286659240723
    6. '_,' → logprob: -5.466286659240723
    7. ')' → logprob: -5.591286659240723
    8. ' _' → logprob: -6.966286659240723
    9. ' =' → logprob: -6.966286659240723
    10. '_digit' → logprob: -7.091286659240723

Token 165: ' b' (ID: 287)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27453646063804626
    2. '_digits' → logprob: -2.774536371231079
    3. ' =' → logprob: -3.024536371231079
    4. 'g' → logprob: -3.149536371231079
    5. 'digits' → logprob: -4.274536609649658
    6. ' g' → logprob: -4.399536609649658
    7. '_digit' → logprob: -4.399536609649658
    8. ',g' → logprob: -5.024536609649658
    9. ' ,' → logprob: -5.149536609649658
    10. '   ' → logprob: -5.149536609649658

Token 166: '2' (ID: 17)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.45660534501075745
    2. '_i' → logprob: -1.081605315208435
    3. '1' → logprob: -3.8316054344177246
    4. 'i' → logprob: -5.956605434417725
    5. '_g' → logprob: -6.831605434417725
    6. 'g' → logprob: -7.456605434417725
    7. '_c' → logprob: -7.581605434417725
    8. ' _' → logprob: -8.331604957580566
    9. ' ' → logprob: -8.706604957580566
    10. 'c' → logprob: -8.956604957580566

Token 167: ' ...' (ID: 2550)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.3010387718677521
    2. ' b' → logprob: -2.1760387420654297
    3. ',' → logprob: -3.3010387420654297
    4. ' ' → logprob: -3.5510387420654297
    5. '   ' → logprob: -3.6760387420654297
    6. ' ...' → logprob: -3.6760387420654297
    7. '...' → logprob: -4.17603874206543
    8. '    ' → logprob: -5.30103874206543
    9. ' c' → logprob: -6.05103874206543
    10. ' ,' → logprob: -6.17603874206543

Token 168: ' bn' (ID: 71312)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.23477688431739807
    2. ' g' → logprob: -1.8597768545150757
    3. 'b' → logprob: -4.109776973724365
    4. ' c' → logprob: -4.359776973724365
    5. ' ...' → logprob: -4.734776973724365
    6. '...' → logprob: -5.359776973724365
    7. 'g' → logprob: -5.359776973724365
    8. ' ' → logprob: -5.484776973724365
    9. 'c' → logprob: -7.484776973724365
    10. '    ' → logprob: -7.734776973724365

Token 169: ' [' (ID: 723)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.2106281816959381
    2. '   ' → logprob: -2.0856282711029053
    3. ' b' → logprob: -3.4606282711029053
    4. ' ' → logprob: -4.710628032684326
    5. 'g' → logprob: -4.835628032684326
    6. ',' → logprob: -5.335628032684326
    7. '<|end|>' → logprob: -6.335628032684326
    8. ' def' → logprob: -6.460628032684326
    9. 'def' → logprob: -6.585628032684326
    10. 'b' → logprob: -6.710628032684326

Token 170: 'c' (ID: 66)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.9691526889801025
    2. ' g' → logprob: -1.2191526889801025
    3. ' b' → logprob: -2.2191526889801025
    4. 'b' → logprob: -2.8441526889801025
    5. ']' → logprob: -3.0941526889801025
    6. '   ' → logprob: -3.2191526889801025
    7. ' c' → logprob: -4.219152450561523
    8. 'c' → logprob: -4.344152450561523
    9. ' ' → logprob: -4.719152450561523
    10. 'n' → logprob: -4.719152450561523

Token 171: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16600710153579712
    2. ' ]' → logprob: -3.1660070419311523
    3. ' ' → logprob: -3.7910070419311523
    4. '*' → logprob: -4.041007041931152
    5. ' pairs' → logprob: -4.791007041931152
    6. ' *' → logprob: -4.916007041931152
    7. ' b' → logprob: -5.166007041931152
    8. ' digits' → logprob: -5.166007041931152
    9. ' c' → logprob: -5.416007041931152
    10. '...' → logprob: -5.416007041931152

Token 172: ' gn' (ID: 45450)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 173: ' ...' (ID: 2550)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.702255368232727
    2. '_' → logprob: -1.702255368232727
    3. '<|end|>' → logprob: -1.702255368232727
    4. '
' → logprob: -3.0772552490234375
    5. ')' → logprob: -3.8272552490234375
    6. 'def' → logprob: -3.9522552490234375
    7. ' _' → logprob: -4.4522552490234375
    8. ' ' → logprob: -5.0772552490234375
    9. '[' → logprob: -5.2022552490234375
    10. '<|end|>' → logprob: -5.3272552490234375

Token 174: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -1.1238911151885986
    2. 'g' → logprob: -2.1238911151885986
    3. 'n' → logprob: -2.3738911151885986
    4. ' n' → logprob: -2.4988911151885986
    5. ' b' → logprob: -2.6238911151885986
    6. ' c' → logprob: -2.7488911151885986
    7. '   ' → logprob: -2.8738911151885986
    8. ' gn' → logprob: -2.8738911151885986
    9. 'gn' → logprob: -3.7488911151885986
    10. '...' → logprob: -3.7488911151885986

Token 175: '2' (ID: 17)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.495595782995224
    2. '1' → logprob: -1.6205958127975464
    3. 'i' → logprob: -2.745595693588257
    4. 'n' → logprob: -2.870595693588257
    5. '_i' → logprob: -3.620595693588257
    6. 'b' → logprob: -4.120595932006836
    7. 'c' → logprob: -4.245595932006836
    8. '_n' → logprob: -4.620595932006836
    9. 'g' → logprob: -5.995595932006836
    10. '```' → logprob: -7.745595932006836

Token 176: ' g' (ID: 329)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3196636438369751
    2. '<|end|>' → logprob: -1.819663643836975
    3. '
' → logprob: -3.1946635246276855
    4. 'def' → logprob: -3.8196635246276855
    5. '[' → logprob: -4.3196635246276855
    6. ' ' → logprob: -4.4446635246276855
    7. ')' → logprob: -5.5696635246276855
    8. ',' → logprob: -5.6946635246276855
    9. '<|end|>' → logprob: -5.8196635246276855
    10. ' def' → logprob: -5.8196635246276855

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10693400353193283
    2. '_' → logprob: -2.981934070587158
    3. '_i' → logprob: -3.356934070587158
    4. '3' → logprob: -4.731934070587158
    5. 'i' → logprob: -5.481934070587158
    6. 'n' → logprob: -6.731934070587158
    7. '_n' → logprob: -7.231934070587158
    8. '<|end|>' → logprob: -7.856934070587158
    9. 'I' → logprob: -9.48193359375
    10. '2' → logprob: -9.60693359375

Token 178: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3194081783294678
    2. '
' → logprob: -1.5694081783294678
    3. '<|end|>' → logprob: -2.9444081783294678
    4. ',' → logprob: -5.194408416748047
    5. '    
' → logprob: -6.444408416748047
    6. '<|end|>' → logprob: -6.444408416748047
    7. 'def' → logprob: -7.194408416748047
    8. ')' → logprob: -7.444408416748047
    9. '  
' → logprob: -7.444408416748047
    10. '#' → logprob: -7.819408416748047

Token 179: 'g' (ID: 70)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15531569719314575
    2. '   ' → logprob: -2.030315637588501
    3. ')
' → logprob: -4.90531587600708
    4. ' )' → logprob: -5.90531587600708
    5. ']' → logprob: -7.65531587600708
    6. 'def' → logprob: -7.65531587600708
    7. ')n' → logprob: -8.655315399169922
    8. ',' → logprob: -8.780315399169922
    9. ' ' → logprob: -8.905315399169922
    10. '),' → logprob: -9.030315399169922

Token 180: ' reversed' (ID: 57184)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6053222417831421
    2. '1' → logprob: -2.1053223609924316
    3. 'c' → logprob: -2.2303223609924316
    4. 'n' → logprob: -2.4803223609924316
    5. '_n' → logprob: -3.3553223609924316
    6. '_' → logprob: -3.7303223609924316
    7. '=' → logprob: -4.605322360992432
    8. '_i' → logprob: -4.605322360992432
    9. '   ' → logprob: -5.105322360992432
    10. ')n' → logprob: -5.230322360992432

Token 181: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0073897442780435085
    2. ' )' → logprob: -5.507389545440674
    3. ')
' → logprob: -6.632389545440674
    4. '   ' → logprob: -7.007389545440674
    5. '[::-' → logprob: -8.507390022277832
    6. ' ' → logprob: -8.882390022277832
    7. '),' → logprob: -9.132390022277832
    8. '[' → logprob: -10.132390022277832
    9. ',' → logprob: -10.382390022277832
    10. ')

' → logprob: -10.382390022277832

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05976732075214386
    2. '<|end|>' → logprob: -3.434767246246338
    3. '
' → logprob: -4.309767246246338
    4. ',' → logprob: -5.684767246246338
    5. '<|end|>' → logprob: -5.934767246246338
    6. '    
' → logprob: -6.059767246246338
    7. ')' → logprob: -6.559767246246338
    8. ' ' → logprob: -7.559767246246338
    9. 'def' → logprob: -7.934767246246338
    10. 'n' → logprob: -8.184767723083496

Token 183: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02204299531877041
    2. '<|end|>' → logprob: -4.647043228149414
    3. '
' → logprob: -4.772043228149414
    4. '    
' → logprob: -6.647043228149414
    5. '#' (adapté à ' #') → logprob: -7.147043228149414
    6. ')' → logprob: -7.897043228149414
    7. 'def' → logprob: -8.147043228149414
    8. ',' → logprob: -8.272043228149414
    9. '<|end|>' → logprob: -8.397043228149414
    10. 'n' → logprob: -9.147043228149414

Token 184: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007975910790264606
    2. '<|end|>' → logprob: -6.007976055145264
    3. '
' → logprob: -6.132976055145264
    4. '    
' → logprob: -7.007976055145264
    5. '#' → logprob: -7.757976055145264
    6. 'def' → logprob: -7.882976055145264
    7. ' ' → logprob: -8.382975578308105
    8. 'n' → logprob: -8.507975578308105
    9. 'digits' → logprob: -8.632975578308105
    10. '  
' → logprob: -9.382975578308105

Token 185: ' digits' (ID: 37806)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.090034008026123
    2. ' pairs' → logprob: -1.840034008026123
    3. ' code' → logprob: -2.340034008026123
    4. ' #' → logprob: -2.590034008026123
    5. ' digits' → logprob: -2.715034008026123
    6. ' b' → logprob: -3.090034008026123
    7. ' next' → logprob: -3.590034008026123
    8. ' rest' → logprob: -3.590034008026123
    9. 'digits' → logprob: -4.090034008026123
    10. 'n' → logprob: -4.340034008026123

Token 186: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4341285526752472
    2. ' for' → logprob: -1.6841285228729248
    3. '<|end|>' → logprob: -2.809128522872925
    4. ' must' → logprob: -3.059128522872925
    5. ' are' → logprob: -4.184128761291504
    6. ' ' → logprob: -4.434128761291504
    7. 'for' → logprob: -4.684128761291504
    8. '=' → logprob: -5.434128761291504
    9. '<|end|>' → logprob: -5.559128761291504
    10. ' to' → logprob: -5.809128761291504

Token 187: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6457588076591492
    2. ' b' → logprob: -1.270758867263794
    3. ' the' → logprob: -2.520758867263794
    4. ' each' → logprob: -3.270758867263794
    5. ' all' → logprob: -3.645758867263794
    6. 'the' → logprob: -3.895758867263794
    7. 'each' → logprob: -4.270758628845215
    8. '<|end|>' → logprob: -5.145758628845215
    9. ' pairs' → logprob: -5.770758628845215
    10. 'all' → logprob: -6.020758628845215

Token 188: ' and' (ID: 326)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5815958976745605
    2. '_i' → logprob: -0.8315958976745605
    3. 'i' → logprob: -6.3315958976745605
    4. '<|end|>' → logprob: -6.4565958976745605
    5. '1' → logprob: -6.9565958976745605
    6. 's' → logprob: -7.0815958976745605
    7. '<|end|>' → logprob: -8.456596374511719
    8. '_s' → logprob: -9.081596374511719
    9. ' _' → logprob: -10.206596374511719
    10. '```' → logprob: -10.706596374511719

Token 189: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.06393472850322723
    2. 'g' → logprob: -2.813934803009033
    3. ' ' → logprob: -6.438934803009033
    4. '_' → logprob: -9.313934326171875
    5. '_g' → logprob: -9.313934326171875
    6. ' ' → logprob: -10.313934326171875
    7. ' for' → logprob: -10.438934326171875
    8. ' b' → logprob: -11.251434326171875
    9. '  ' → logprob: -11.688934326171875
    10. '	g' → logprob: -11.876434326171875

Token 190: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.4313139021396637
    2. ' are' → logprob: -2.181313991546631
    3. ' for' → logprob: -2.806313991546631
    4. ' arrays' → logprob: -2.931313991546631
    5. ' should' → logprob: -3.431313991546631
    6. ' can' → logprob: -3.806313991546631
    7. ' lists' → logprob: -3.931313991546631
    8. ' ' → logprob: -4.306313991546631
    9. ' s' → logprob: -4.931313991546631
    10. ' pairs' → logprob: -5.556313991546631

Token 191: ' match' (ID: 3981)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.026664258912205696
    2. ' satisfy' → logprob: -4.1516642570495605
    3. ' all' → logprob: -5.7766642570495605
    4. ' not' → logprob: -6.4016642570495605
    5. ' remain' → logprob: -7.1516642570495605
    6. ' match' → logprob: -7.1516642570495605
    7. ' follow' → logprob: -7.5266642570495605
    8. ' continue' → logprob: -7.6516642570495605
    9. ' also' → logprob: -7.7766642570495605
    10. 'be' → logprob: -7.9016642570495605

Token 192: ' per' (ID: 777)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3670569658279419
    2. '<|end|>' → logprob: -1.617056965827942
    3. ',' → logprob: -3.1170568466186523
    4. '.' → logprob: -3.8670568466186523
    5. '
' → logprob: -3.9920568466186523
    6. '<|end|>' → logprob: -4.367056846618652
    7. ' and' → logprob: -4.867056846618652
    8. '    
' → logprob: -6.617056846618652
    9. ' for' → logprob: -7.742056846618652
    10. ' ' → logprob: -7.867056846618652

Token 193: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.6665738224983215
    2. 'pair' → logprob: -0.7915738224983215
    3. ' index' → logprob: -4.166574001312256
    4. 'index' → logprob: -4.791574001312256
    5. 'position' → logprob: -5.916574001312256
    6. 'each' → logprob: -6.916574001312256
    7. ' position' → logprob: -7.041574001312256
    8. ' each' → logprob: -7.041574001312256
    9. ' corresponding' → logprob: -7.166574001312256
    10. ' pairs' → logprob: -7.791574001312256

Token 194: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02837938629090786
    2. '<|end|>' → logprob: -3.903379440307617
    3. '
' → logprob: -6.028379440307617
    4. '    
' → logprob: -6.278379440307617
    5. ',' → logprob: -6.903379440307617
    6. '<|end|>' → logprob: -7.028379440307617
    7. 'def' → logprob: -7.653379440307617
    8. '.' → logprob: -7.903379440307617
    9. '#' → logprob: -8.153379440307617
    10. ' and' → logprob: -9.278379440307617

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012032858096063137
    2. '
' → logprob: -5.387032985687256
    3. '<|end|>' → logprob: -5.512032985687256
    4. '    
' → logprob: -6.512032985687256
    5. '#' → logprob: -7.512032985687256
    6. 'def' → logprob: -7.887032985687256
    7. '  
' → logprob: -8.762032508850098
    8. '<|end|>' → logprob: -8.887032508850098
    9. ' ' → logprob: -9.012032508850098
    10. '  ' → logprob: -9.887032508850098

Token 196: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01959044300019741
    2. '
' → logprob: -4.769590377807617
    3. '    
' → logprob: -5.769590377807617
    4. '#' (adapté à ' #') → logprob: -6.019590377807617
    5. '<|end|>' → logprob: -6.019590377807617
    6. ' ' → logprob: -7.394590377807617
    7. ' 
' → logprob: -7.394590377807617
    8. '  
' → logprob: -8.144590377807617
    9. 'n' → logprob: -8.394590377807617
    10. ' #' → logprob: -8.519590377807617

Token 197: ' We' (ID: 1416)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.850127637386322
    2. 'digits' → logprob: -1.8501276969909668
    3. 'b' → logprob: -2.225127696990967
    4. '   ' → logprob: -2.350127696990967
    5. 'pairs' → logprob: -2.850127696990967
    6. ' #' → logprob: -2.975127696990967
    7. ' digits' → logprob: -3.350127696990967
    8. ' pairs' → logprob: -3.850127696990967
    9. ' b' → logprob: -4.725127696990967
    10. 'max' → logprob: -5.475127696990967

Token 198: ' want' (ID: 1682)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5881592035293579
    2. ' ' → logprob: -1.588159203529358
    3. '=' → logprob: -3.0881590843200684
    4. '   ' → logprob: -3.2131590843200684
    5. '    ' → logprob: -3.4631590843200684
    6. '_' → logprob: -3.5881590843200684
    7. ' #' → logprob: -3.5881590843200684
    8. '#' → logprob: -3.8381590843200684
    9. ' need' → logprob: -4.338159084320068
    10. 'def' → logprob: -4.463159084320068

Token 199: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.04353254288434982
    2. 'to' → logprob: -3.168532609939575
    3. '   ' → logprob: -8.418532371520996
    4. 'def' → logprob: -8.793532371520996
    5. 'digits' → logprob: -10.293532371520996
    6. '#' → logprob: -10.793532371520996
    7. 'max' → logprob: -10.918532371520996
    8. ' t' → logprob: -11.168532371520996
    9. ' ' → logprob: -11.293532371520996
    10. ' digits' → logprob: -11.668532371520996

Token 200: ' output' (ID: 4733)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.6111752390861511
    2. ' maximize' → logprob: -1.361175298690796
    3. 'maximize' → logprob: -1.986175298690796
    4. 'max' → logprob: -3.861175298690796
    5. ' max' → logprob: -3.861175298690796
    6. 'find' → logprob: -4.486175060272217
    7. '   ' → logprob: -5.861175060272217
    8. ' generate' → logprob: -6.986175060272217
    9. ' try' → logprob: -7.236175060272217
    10. ' for' → logprob: -7.236175060272217

Token 201: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.1876858025789261
    2. ' a' → logprob: -2.31268572807312
    3. 'the' → logprob: -3.06268572807312
    4. ' ' → logprob: -4.062685966491699
    5. '   ' → logprob: -6.187685966491699
    6. 'a' → logprob: -7.062685966491699
    7. 'max' → logprob: -7.187685966491699
    8. '<|end|>' → logprob: -7.812685966491699
    9. ' maximal' → logprob: -7.937685966491699
    10. ' max' → logprob: -8.0626859664917

Token 202: ' number' (ID: 2086)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15374179184436798
    2. 'max' → logprob: -3.0287418365478516
    3. 'n' → logprob: -3.4037418365478516
    4. ' maximal' → logprob: -4.153741836547852
    5. ' max' → logprob: -4.903741836547852
    6. '   ' → logprob: -5.403741836547852
    7. ' n' → logprob: -5.528741836547852
    8. ' number' → logprob: -5.528741836547852
    9. '  ' → logprob: -5.903741836547852
    10. ' space' → logprob: -6.278741836547852

Token 203: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5700951814651489
    2. '<|end|>' → logprob: -1.570095181465149
    3. ' ' → logprob: -2.5700950622558594
    4. ',' → logprob: -3.1950950622558594
    5. ' that' → logprob: -3.5700950622558594
    6. ' =' → logprob: -3.6950950622558594
    7. '    ' → logprob: -4.570095062255859
    8. '_' → logprob: -4.695095062255859
    9. '<|end|>' → logprob: -4.695095062255859
    10. ' with' → logprob: -5.945095062255859

Token 204: 'string' (ID: 1655)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.050049688667058945
    2. ' as' → logprob: -4.300049781799316
    3. ' )' → logprob: -4.425049781799316
    4. '   ' → logprob: -5.425049781799316
    5. ' ' → logprob: -5.925049781799316
    6. ' n' → logprob: -5.925049781799316
    7. 'n' → logprob: -6.175049781799316
    8. 'string' → logprob: -6.300049781799316
    9. '
' → logprob: -6.800049781799316
    10. ' that' → logprob: -6.800049781799316

Token 205: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002593130338937044
    2. ' )' → logprob: -9.375259399414062
    3. ' of' → logprob: -9.500259399414062
    4. '   ' → logprob: -11.000259399414062
    5. ',' → logprob: -11.000259399414062
    6. ' that' → logprob: -11.250259399414062
    7. '')' → logprob: -11.375259399414062
    8. ' ' → logprob: -11.875259399414062
    9. '),' → logprob: -12.250259399414062
    10. ' with' → logprob: -12.500259399414062

Token 206: ' accordingly' (ID: 44041)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47530561685562134
    2. '<|end|>' → logprob: -1.6003055572509766
    3. ' that' → logprob: -2.4753055572509766
    4. ',' → logprob: -3.4753055572509766
    5. ' ' → logprob: -3.6003055572509766
    6. '<|end|>' → logprob: -4.975305557250977
    7. '    ' → logprob: -5.850305557250977
    8. ' composed' → logprob: -5.975305557250977
    9. ')' → logprob: -5.975305557250977
    10. '  ' → logprob: -6.350305557250977

Token 207: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5542531609535217
    2. '<|end|>' → logprob: -0.9292531609535217
    3. '
' → logprob: -3.929253101348877
    4. '<|end|>' → logprob: -5.304253101348877
    5. ',' → logprob: -6.179253101348877
    6. '    
' → logprob: -6.304253101348877
    7. '#' → logprob: -7.179253101348877
    8. '.' → logprob: -7.929253101348877
    9. 'def' → logprob: -8.929253578186035
    10. '  
' → logprob: -8.929253578186035

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00903983972966671
    2. '<|end|>' → logprob: -5.759039878845215
    3. '    
' → logprob: -6.134039878845215
    4. '
' → logprob: -6.759039878845215
    5. '#' → logprob: -7.634039878845215
    6. ' ' → logprob: -8.009039878845215
    7. ' 
' → logprob: -8.134039878845215
    8. '  
' → logprob: -8.259039878845215
    9. ',' → logprob: -8.884039878845215
    10. 'def' → logprob: -9.009039878845215

Token 209: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0726625993847847
    2. '    
' → logprob: -3.822662591934204
    3. '
' → logprob: -4.072662830352783
    4. '#' (adapté à ' #') → logprob: -4.947662830352783
    5. ' 
' → logprob: -5.572662830352783
    6. '<|end|>' → logprob: -5.697662830352783
    7. 'digits' → logprob: -5.697662830352783
    8. 'pairs' → logprob: -6.322662830352783
    9. '  
' → logprob: -6.572662830352783
    10. 'n' → logprob: -6.697662830352783

Token 210: ' The' (ID: 623)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -1.188959002494812
    2. '   ' → logprob: -1.563959002494812
    3. 'pairs' → logprob: -1.813959002494812
    4. '#' → logprob: -2.5639591217041016
    5. ' pairs' → logprob: -2.5639591217041016
    6. 'b' → logprob: -2.8139591217041016
    7. ' digits' → logprob: -2.8139591217041016
    8. ' #' → logprob: -4.438959121704102
    9. ' b' → logprob: -4.563959121704102
    10. 'd' → logprob: -4.813959121704102

Token 211: ' best' (ID: 1636)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.061699390411377
    2. ' pairs' → logprob: -1.311699390411377
    3. 'pairs' → logprob: -2.061699390411377
    4. ' digits' → logprob: -3.061699390411377
    5. ' #' → logprob: -3.311699390411377
    6. 'digits' → logprob: -3.436699390411377
    7. 'def' → logprob: -3.811699390411377
    8. ' next' → logprob: -4.186699390411377
    9. 'b' → logprob: -4.186699390411377
    10. 'n' → logprob: -4.561699390411377

Token 212: ' approach' (ID: 7139)
  Prédit: '_digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_digits' → logprob: -1.2339452505111694
    2. '_digit' → logprob: -1.2339452505111694
    3. 'digit' → logprob: -3.108945369720459
    4. '_' → logprob: -3.233945369720459
    5. 'digits' → logprob: -3.358945369720459
    6. '_d' → logprob: -3.608945369720459
    7. '_candidate' → logprob: -3.733945369720459
    8. ' =' → logprob: -3.733945369720459
    9. '_num' → logprob: -3.983945369720459
    10. '_number' → logprob: -3.983945369720459

Token 213: ':
' (ID: 734)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.15385186672210693
    2. ':' → logprob: -3.0288519859313965
    3. ' =' → logprob: -3.0288519859313965
    4. ' would' → logprob: -3.6538519859313965
    5. '<|end|>' → logprob: -5.1538519859313965
    6. '    ' → logprob: -5.6538519859313965
    7. '   ' → logprob: -5.9038519859313965
    8. ' for' → logprob: -6.1538519859313965
    9. ' will' → logprob: -6.7788519859313965
    10. ',' → logprob: -7.0288519859313965

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008052219054661691
    2. '    ' → logprob: -7.625805377960205
    3. '#' → logprob: -9.000804901123047
    4. '    
' → logprob: -9.000804901123047
    5. ' #' → logprob: -11.375804901123047
    6. '  ' → logprob: -11.500804901123047
    7. '<|end|>' → logprob: -11.875804901123047
    8. 'import' → logprob: -12.000804901123047
    9. '    
    
' → logprob: -12.125804901123047
    10. 'def' → logprob: -12.250804901123047

Token 215: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9841004014015198
    2. ' digits' → logprob: -0.9841004014015198
    3. ' b' → logprob: -2.859100341796875
    4. 'digits' → logprob: -3.109100341796875
    5. ' pairs' → logprob: -3.234100341796875
    6. ' #' → logprob: -3.484100341796875
    7. '#' (adapté à ' #') → logprob: -4.109100341796875
    8. ' freq' → logprob: -4.359100341796875
    9. ' counts' → logprob: -4.859100341796875
    10. 'pairs' → logprob: -4.984100341796875

Token 216: '  ' (ID: 256)
  Prédit: ' digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' digits' → logprob: -1.1448756456375122
    2. ' pairs' → logprob: -1.8948756456375122
    3. '#' → logprob: -2.0198755264282227
    4. ' #' → logprob: -2.3948755264282227
    5. '   ' → logprob: -3.2698755264282227
    6. ' from' → logprob: -3.3948755264282227
    7. ' for' → logprob: -3.5198755264282227
    8. 'digits' → logprob: -3.7698755264282227
    9. ' b' → logprob: -3.8948755264282227
    10. ' def' → logprob: -3.8948755264282227

Token 217: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2680854797363281
    2. ' digits' → logprob: -1.6430854797363281
    3. 'digits' → logprob: -2.268085479736328
    4. ' #' → logprob: -3.143085479736328
    5. 'b' → logprob: -3.143085479736328
    6. ' pairs' → logprob: -3.518085479736328
    7. 'from' → logprob: -3.893085479736328
    8. ' from' → logprob: -4.143085479736328
    9. 'pairs' → logprob: -4.268085479736328
    10. ' count' → logprob: -4.268085479736328

Token 218: ' Try' (ID: 14720)
  Prédit: ' Find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Find' → logprob: -2.2775328159332275
    2. ' Collect' → logprob: -2.6525328159332275
    3. '#' → logprob: -2.9025328159332275
    4. ' Read' → logprob: -2.9025328159332275
    5. 'Generate' → logprob: -3.1525328159332275
    6. 'Calculate' → logprob: -3.1525328159332275
    7. ' Generate' → logprob: -3.2775328159332275
    8. 'Create' → logprob: -3.5275328159332275
    9. ' digits' → logprob: -3.5275328159332275
    10. ' For' → logprob: -3.6525328159332275

Token 219: ' digits' (ID: 37806)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.7968334555625916
    2. ' digits' → logprob: -1.1718335151672363
    3. 'digits' → logprob: -1.5468335151672363
    4. 'all' → logprob: -4.296833515167236
    5. ' ' → logprob: -5.671833515167236
    6. ' to' → logprob: -6.421833515167236
    7. '0' → logprob: -6.671833515167236
    8. '   ' → logprob: -6.921833515167236
    9. 'd' → logprob: -7.046833515167236
    10. ' d' → logprob: -7.171833515167236

Token 220: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3503391146659851
    2. '=' → logprob: -1.9753391742706299
    3. 'from' → logprob: -2.72533917427063
    4. ' from' → logprob: -2.85033917427063
    5. ' ' → logprob: -3.72533917427063
    6. ' in' → logprob: -5.225338935852051
    7. '0' → logprob: -6.725338935852051
    8. '(' → logprob: -6.850338935852051
    9. '   ' → logprob: -7.850338935852051
    10. ' for' → logprob: -7.975338935852051

Token 221: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.28144314885139465
    2. ' ' → logprob: -1.4064431190490723
    3. '1' → logprob: -8.78144359588623
    4. ''' → logprob: -9.90644359588623
    5. ' '' → logprob: -9.90644359588623
    6. '   ' → logprob: -11.03144359588623
    7. '10' → logprob: -12.71894359588623
    8. '
' → logprob: -12.96894359588623
    9. '```' → logprob: -13.59394359588623
    10. ' n' → logprob: -13.84394359588623

Token 222: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.000585918256547302
    2. ' ' → logprob: -7.625586032867432
    3. ''' → logprob: -9.500585556030273
    4. '1' → logprob: -11.750585556030273
    5. '   ' → logprob: -12.375585556030273
    6. '[' → logprob: -13.125585556030273
    7. ' '' → logprob: -13.938085556030273
    8. '['' → logprob: -14.313085556030273
    9. '"' → logprob: -14.375585556030273
    10. '0' → logprob: -14.375585556030273

Token 223: ' to' (ID: 316)
  Prédit: ' down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' down' → logprob: -0.3010932207107544
    2. ' to' → logprob: -1.8010932207107544
    3. ' ' → logprob: -3.051093101501465
    4. '   ' → logprob: -4.301093101501465
    5. ',' → logprob: -4.551093101501465
    6. '9' → logprob: -4.801093101501465
    7. 'down' → logprob: -5.051093101501465
    8. 'to' → logprob: -6.176093101501465
    9. '  ' → logprob: -6.301093101501465
    10. '<|end|>' → logprob: -6.301093101501465

Token 224: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47607240080833435
    2. ' ' → logprob: -0.9760724306106567
    3. '1' → logprob: -6.226072311401367
    4. '
' → logprob: -13.101072311401367
    5. '   ' → logprob: -13.288572311401367
    6. '2' → logprob: -13.476072311401367
    7. '```' → logprob: -13.538572311401367
    8. ' ' → logprob: -14.038572311401367
    9. '9' → logprob: -14.163572311401367
    10. '4' → logprob: -14.226072311401367

Token 225: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03044937551021576
    2. ' ' → logprob: -3.530449390411377
    3. '1' → logprob: -7.280449390411377
    4. '   ' → logprob: -13.405448913574219
    5. '9' → logprob: -13.530448913574219
    6. '2' → logprob: -13.780448913574219
    7. '```' → logprob: -14.405448913574219
    8. '4' → logprob: -14.530448913574219
    9. '5' → logprob: -14.717948913574219
    10. '  ' → logprob: -14.717948913574219

Token 226: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8915404081344604
    2. '   ' → logprob: -1.5165404081344604
    3. ' for' → logprob: -1.7665404081344604
    4. '<|end|>' → logprob: -2.26654052734375
    5. 'for' → logprob: -3.14154052734375
    6. ',' → logprob: -3.89154052734375
    7. ' ' → logprob: -4.26654052734375
    8. '  ' → logprob: -5.51654052734375
    9. '<|end|>' → logprob: -5.64154052734375
    10. '    ' → logprob: -6.26654052734375

Token 227: ' assign' (ID: 14975)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.3868682086467743
    2. ' assign' → logprob: -1.7618682384490967
    3. ' select' → logprob: -3.3868682384490967
    4. ' choose' → logprob: -3.5118682384490967
    5. ' determine' → logprob: -4.011868000030518
    6. ' ' → logprob: -4.261868000030518
    7. ' check' → logprob: -4.761868000030518
    8. ' try' → logprob: -5.011868000030518
    9. ' build' → logprob: -5.136868000030518
    10. ' fill' → logprob: -5.261868000030518

Token 228: ' to' (ID: 316)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1113794595003128
    2. ' to' → logprob: -3.361379384994507
    3. ' ' → logprob: -3.986379384994507
    4. 'for' → logprob: -3.986379384994507
    5. ',' → logprob: -4.111379623413086
    6. '   ' → logprob: -4.736379623413086
    7. ':' → logprob: -6.111379623413086
    8. ' ,' → logprob: -6.111379623413086
    9. '<|end|>' → logprob: -6.361379623413086
    10. '    ' → logprob: -7.361379623413086

Token 229: ' pairs' (ID: 24702)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.13388101756572723
    2. 'each' → logprob: -2.258881092071533
    3. ' pairs' → logprob: -4.633881092071533
    4. ' all' → logprob: -5.133881092071533
    5. 'b' → logprob: -6.383881092071533
    6. ' b' → logprob: -6.883881092071533
    7. ' the' → logprob: -6.883881092071533
    8. 'pairs' → logprob: -7.258881092071533
    9. ' both' → logprob: -8.508880615234375
    10. 'the' → logprob: -8.883880615234375

Token 230: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20989541709423065
    2. ',' → logprob: -2.084895372390747
    3. '   ' → logprob: -3.834895372390747
    4. '<|end|>' → logprob: -4.084895610809326
    5. ' for' → logprob: -4.834895610809326
    6. '.' → logprob: -5.334895610809326
    7. ' ' → logprob: -5.584895610809326
    8. ' ,' → logprob: -6.334895610809326
    9. 'for' → logprob: -6.334895610809326
    10. ' :' → logprob: -6.459895610809326

Token 231: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9060880541801453
    2. '   ' → logprob: -1.15608811378479
    3. ' ' → logprob: -2.40608811378479
    4. ':' → logprob: -2.90608811378479
    5. '  
' → logprob: -3.40608811378479
    6. ' for' → logprob: -3.65608811378479
    7. '<|end|>' → logprob: -3.78108811378479
    8. 'for' → logprob: -4.281087875366211
    9. ' 
' → logprob: -4.281087875366211
    10. '    
' → logprob: -4.781087875366211

Token 232: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037430308759212494
    2. '#' (adapté à ' #') → logprob: -4.412430286407471
    3. '
' → logprob: -4.787430286407471
    4. ' ' → logprob: -5.162430286407471
    5. ' for' → logprob: -5.537430286407471
    6. 'for' → logprob: -6.412430286407471
    7. '    
' → logprob: -6.912430286407471
    8. '<|end|>' → logprob: -7.162430286407471
    9. ',' → logprob: -7.787430286407471
    10. ' #' → logprob: -7.787430286407471

Token 233: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07815835624933243
    2. ' ' → logprob: -3.828158378601074
    3. '
' → logprob: -3.953158378601074
    4. ' for' → logprob: -4.078158378601074
    5. 'for' → logprob: -5.453158378601074
    6. '    
' → logprob: -5.703158378601074
    7. ' 
' → logprob: -5.828158378601074
    8. '  
' → logprob: -6.453158378601074
    9. '#' → logprob: -6.703158378601074
    10. '<|end|>' → logprob: -7.078158378601074

Token 234: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06210806593298912
    2. '   ' → logprob: -3.312108039855957
    3. ' for' → logprob: -3.812108039855957
    4. ' ' → logprob: -6.812108039855957
    5. '#' → logprob: -8.687108039855957
    6. ' #' → logprob: -9.062108039855957
    7. '       ' → logprob: -9.687108039855957
    8. '  ' → logprob: -9.812108039855957
    9. '
' → logprob: -10.562108039855957
    10. 'or' → logprob: -10.687108039855957

Token 235: ' For' (ID: 2214)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5047879219055176
    2. ' used' → logprob: -2.1297879219055176
    3. ' digits' → logprob: -2.2547879219055176
    4. ' assigned' → logprob: -2.3797879219055176
    5. 'for' → logprob: -3.8797879219055176
    6. ' result' → logprob: -4.254787921905518
    7. ' b' → logprob: -4.754787921905518
    8. '   ' → logprob: -5.254787921905518
    9. ' #' → logprob: -5.379787921905518
    10. ' ' → logprob: -5.629787921905518

Token 236: ' each' (ID: 2454)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.0205990076065063
    2. ' i' → logprob: -1.1455990076065063
    3. ' digit' → logprob: -1.5205990076065063
    4. ' _' → logprob: -3.520598888397217
    5. ' pair' → logprob: -3.520598888397217
    6. 'd' → logprob: -4.770598888397217
    7. ' each' → logprob: -4.770598888397217
    8. 'digit' → logprob: -4.770598888397217
    9. ' b' → logprob: -5.020598888397217
    10. 'i' → logprob: -5.895598888397217

Token 237: ' pair' (ID: 10610)
  Prédit: ' digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digit' → logprob: -0.6615473628044128
    2. ' pair' → logprob: -1.6615474224090576
    3. 'digit' → logprob: -1.9115474224090576
    4. ' d' → logprob: -2.2865474224090576
    5. 'pair' → logprob: -4.0365471839904785
    6. 'd' → logprob: -4.1615471839904785
    7. ' i' → logprob: -4.6615471839904785
    8. 'i' → logprob: -7.1615471839904785
    9. ' ' → logprob: -8.286547660827637
    10. ' p' → logprob: -8.661547660827637

Token 238: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09044216573238373
    2. ',' → logprob: -2.715442180633545
    3. '   ' → logprob: -5.090442180633545
    4. ' in' → logprob: -5.090442180633545
    5. '=' → logprob: -6.340442180633545
    6. ' ' → logprob: -6.340442180633545
    7. ' =' → logprob: -6.590442180633545
    8. ' :' → logprob: -6.840442180633545
    9. ' ,' → logprob: -7.465442180633545
    10. ' (' → logprob: -8.715441703796387

Token 239: ' assign' (ID: 14975)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8416286706924438
    2. ' for' → logprob: -1.5916286706924438
    3. '    ' → logprob: -1.7166286706924438
    4. '   ' → logprob: -2.5916285514831543
    5. ' if' → logprob: -3.2166285514831543
    6. 'for' → logprob: -3.9666285514831543
    7. '       ' → logprob: -4.216628551483154
    8. ' #' → logprob: -4.341628551483154
    9. ' try' → logprob: -5.466628551483154
    10. ' 
' → logprob: -5.966628551483154

Token 240: ' the' (ID: 290)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7956931591033936
    2. 'd' → logprob: -0.9206931591033936
    3. '9' → logprob: -2.7956931591033936
    4. 'digit' → logprob: -3.1706931591033936
    5. ' ' → logprob: -3.9206931591033936
    6. ' digit' → logprob: -4.670693397521973
    7. ' digits' → logprob: -5.170693397521973
    8. ' a' → logprob: -5.295693397521973
    9. 'digits' → logprob: -5.670693397521973
    10. ' the' → logprob: -5.795693397521973

Token 241: ' largest' (ID: 10574)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.7629101872444153
    2. '9' → logprob: -1.6379101276397705
    3. ' highest' → logprob: -2.7629101276397705
    4. ' digit' → logprob: -2.7629101276397705
    5. 'same' → logprob: -3.2629101276397705
    6. ' same' → logprob: -3.2629101276397705
    7. 'highest' → logprob: -3.5129101276397705
    8. ' best' → logprob: -3.6379101276397705
    9. ' ' → logprob: -3.8879101276397705
    10. 'd' → logprob: -4.01291036605835

Token 242: ' available' (ID: 2839)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.30957669019699097
    2. ' digit' → logprob: -1.5595767498016357
    3. ' possible' → logprob: -3.1845767498016357
    4. 'possible' → logprob: -4.309576511383057
    5. ' available' → logprob: -7.559576511383057
    6. 'd' → logprob: -8.934576988220215
    7. 'available' → logprob: -9.059576988220215
    8. '_digit' → logprob: -9.184576988220215
    9. '```' → logprob: -9.809576988220215
    10. ' valid' → logprob: -9.934576988220215

Token 243: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.1798931062221527
    2. ' digit' → logprob: -1.804893136024475
    3. 'possible' → logprob: -9.804893493652344
    4. ' possible' → logprob: -10.554893493652344
    5. '_digit' → logprob: -10.554893493652344
    6. 'digits' → logprob: -11.679893493652344
    7. ' available' → logprob: -11.804893493652344
    8. 'available' → logprob: -11.929893493652344
    9. 'd' → logprob: -12.179893493652344
    10. '-digit' → logprob: -13.179893493652344

Token 244: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5387423634529114
    2. '   ' → logprob: -2.1637423038482666
    3. 's' → logprob: -2.5387423038482666
    4. ' for' → logprob: -2.5387423038482666
    5. 'for' → logprob: -3.1637423038482666
    6. ',' → logprob: -3.7887423038482666
    7. ':' → logprob: -4.038742542266846
    8. '(s' → logprob: -4.163742542266846
    9. '    ' → logprob: -4.788742542266846
    10. '<|end|>' → logprob: -4.788742542266846

Token 245: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1117594242095947
    2. '<|end|>' → logprob: -1.1117594242095947
    3. '   ' → logprob: -2.6117594242095947
    4. ' ' → logprob: -2.7367594242095947
    5. ' for' → logprob: -3.4867594242095947
    6. ':' → logprob: -3.9867594242095947
    7. '       ' → logprob: -3.9867594242095947
    8. ' to' → logprob: -4.111759185791016
    9. ' ,' → logprob: -4.486759185791016
    10. '    ' → logprob: -4.611759185791016

Token 246: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23516425490379333
    2. ' )' → logprob: -1.7351642847061157
    3. ')
' → logprob: -4.985164165496826
    4. '0' → logprob: -4.985164165496826
    5. ' from' → logprob: -5.360164165496826
    6. ' ' → logprob: -5.485164165496826
    7. 'from' → logprob: -5.735164165496826
    8. ' )
' → logprob: -5.860164165496826
    9. '   ' → logprob: -6.985164165496826
    10. ' if' → logprob: -7.235164165496826

Token 247: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21636436879634857
    2. ',' → logprob: -1.8413643836975098
    3. '-' → logprob: -4.21636438369751
    4. ' )' → logprob: -5.21636438369751
    5. '-)' → logprob: -5.46636438369751
    6. '9' → logprob: -5.96636438369751
    7. '   ' → logprob: -6.09136438369751
    8. ',)' → logprob: -6.71636438369751
    9. ' -' → logprob: -7.21636438369751
    10. ' to' → logprob: -7.21636438369751

Token 248: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.014253536239266396
    2. ' ' → logprob: -4.264253616333008
    3. '   ' → logprob: -10.139253616333008
    4. '1' → logprob: -10.889253616333008
    5. '
' → logprob: -11.264253616333008
    6. '```' → logprob: -12.764253616333008
    7. '  ' → logprob: -12.889253616333008
    8. ')' → logprob: -13.014253616333008
    9. '=' → logprob: -13.014253616333008
    10. ',' → logprob: -13.201753616333008

Token 249: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004446731880307198
    2. ')
' → logprob: -5.754446506500244
    3. ').' → logprob: -7.629446506500244
    4. '),' → logprob: -8.129446983337402
    5. '   ' → logprob: -8.504446983337402
    6. '):
' → logprob: -9.004446983337402
    7. '):' → logprob: -9.254446983337402
    8. ' )' → logprob: -10.254446983337402
    9. ')

' → logprob: -11.629446983337402
    10. '       ' → logprob: -12.504446983337402

Token 250: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0652293935418129
    2. ',' → logprob: -3.8152294158935547
    3. ' for' → logprob: -4.065229415893555
    4. '    ' → logprob: -4.315229415893555
    5. ' to' → logprob: -5.690229415893555
    6. '.' → logprob: -6.815229415893555
    7. ' that' → logprob: -6.940229415893555
    8. ' ' → logprob: -7.190229415893555
    9. ':' → logprob: -7.315229415893555
    10. ')' → logprob: -7.315229415893555

Token 251: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5867618322372437
    2. ' that' → logprob: -1.4617618322372437
    3. ',' → logprob: -2.836761951446533
    4. ' for' → logprob: -2.961761951446533
    5. ' to' → logprob: -3.586761951446533
    6. ')' → logprob: -4.086761951446533
    7. ' ' → logprob: -4.211761951446533
    8. '    ' → logprob: -4.836761951446533
    9. '.' → logprob: -4.961761951446533
    10. '       ' → logprob: -5.711761951446533

Token 252: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22949664294719696
    2. '       ' → logprob: -2.229496717453003
    3. ' ' → logprob: -3.229496717453003
    4. '    ' → logprob: -3.979496717453003
    5. ':' → logprob: -4.854496479034424
    6. '    
' → logprob: -4.979496479034424
    7. ',' → logprob: -5.104496479034424
    8. '.' → logprob: -5.729496479034424
    9. '
' → logprob: -6.104496479034424
    10. '  ' → logprob: -6.354496479034424

Token 253: ' -' (ID: 533)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6265193819999695
    2. 'for' → logprob: -2.0015194416046143
    3. '   ' → logprob: -2.2515194416046143
    4. ' that' → logprob: -2.6265194416046143
    5. '#' → logprob: -2.8765194416046143
    6. ' #' → logprob: -3.7515194416046143
    7. ' to' → logprob: -4.251519203186035
    8. ' assigned' → logprob: -4.251519203186035
    9. ' ' → logprob: -4.751519203186035
    10. 'that' → logprob: -5.251519203186035

Token 254: ' Construct' (ID: 36230)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.041283130645752
    2. '#' → logprob: -1.416283130645752
    3. ' for' → logprob: -1.791283130645752
    4. ' #' → logprob: -2.291283130645752
    5. 'for' → logprob: -3.041283130645752
    6. ' ' → logprob: -3.666283130645752
    7. '    ' → logprob: -4.041283130645752
    8. ' continue' → logprob: -4.291283130645752
    9. '       ' → logprob: -4.916283130645752
    10. 'continue' → logprob: -5.416283130645752

Token 255: ' number' (ID: 2086)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.23079834878444672
    2. 'the' → logprob: -2.6057982444763184
    3. 'number' → logprob: -3.2307982444763184
    4. ' number' → logprob: -3.2307982444763184
    5. ' a' → logprob: -3.6057982444763184
    6. 'ed' → logprob: -4.355798244476318
    7. 'result' → logprob: -6.355798244476318
    8. ' numbers' → logprob: -6.355798244476318
    9. '   ' → logprob: -6.730798244476318
    10. 'a' → logprob: -6.730798244476318

Token 256: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23124343156814575
    2. ' =' → logprob: -3.106243371963501
    3. ':' → logprob: -3.356243371963501
    4. '_' → logprob: -3.481243371963501
    5. 's' → logprob: -4.10624361038208
    6. ' ' → logprob: -4.23124361038208
    7. ' for' → logprob: -4.48124361038208
    8. '
' → logprob: -5.10624361038208
    9. '(s' → logprob: -5.23124361038208
    10. ',' → logprob: -5.35624361038208

Token 257: ' check' (ID: 2371)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07185936719179153
    2. ' print' → logprob: -2.696859359741211
    3. 'return' → logprob: -6.446859359741211
    4. ' return' → logprob: -8.571859359741211
    5. ' output' → logprob: -9.946859359741211
    6. 'output' → logprob: -10.071859359741211
    7. '   ' → logprob: -10.946859359741211
    8. '```' → logprob: -11.071859359741211
    9. 'break' → logprob: -11.821859359741211
    10. '
' → logprob: -13.196859359741211

Token 258: ' primal' (ID: 181789)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.502915620803833
    2. ' for' → logprob: -1.752915620803833
    3. '   ' → logprob: -2.252915620803833
    4. ' ' → logprob: -3.252915620803833
    5. '    ' → logprob: -4.252915382385254
    6. 'for' → logprob: -4.377915382385254
    7. '_' → logprob: -5.127915382385254
    8. ' 
' → logprob: -5.252915382385254
    9. '
' → logprob: -5.377915382385254
    10. '#' → logprob: -5.377915382385254

Token 259: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -0.0005692371050827205
    2. '   ' → logprob: -8.125569343566895
    3. '       ' → logprob: -9.875569343566895
    4. 'if' → logprob: -9.875569343566895
    5. ')' → logprob: -10.000569343566895
    6. 'i' → logprob: -10.125569343566895
    7. 'it' → logprob: -10.750569343566895
    8. '#' → logprob: -11.625569343566895
    9. 'e' → logprob: -11.875569343566895
    10. '```' → logprob: -12.125569343566895

Token 260: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019705044105648994
    2. ' for' → logprob: -7.126970291137695
    3. '<|end|>' → logprob: -7.751970291137695
    4. 'for' → logprob: -8.001970291137695
    5. 'def' → logprob: -8.626970291137695
    6. 'digits' → logprob: -9.876970291137695
    7. '    
' → logprob: -10.126970291137695
    8. ',' → logprob: -10.376970291137695
    9. '.' → logprob: -10.626970291137695
    10. '<|end|>' → logprob: -11.001970291137695

Token 261: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006576312007382512
    2. '    
' → logprob: -8.12565803527832
    3. '
' → logprob: -8.87565803527832
    4. '<|end|>' → logprob: -9.37565803527832
    5. 'for' → logprob: -10.25065803527832
    6. '#' → logprob: -10.87565803527832
    7. ' for' → logprob: -10.87565803527832
    8. 'def' → logprob: -11.12565803527832
    9. '       ' → logprob: -11.75065803527832
    10. ',' → logprob: -11.87565803527832

Token 262: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008935939986258745
    2. '    
' → logprob: -7.875893592834473
    3. 'for' → logprob: -9.125893592834473
    4. '
' → logprob: -9.375893592834473
    5. ' for' → logprob: -9.375893592834473
    6. '#' (adapté à ' #') → logprob: -9.500893592834473
    7. '    ' → logprob: -10.750893592834473
    8. 'digits' → logprob: -10.750893592834473
    9. 'def' → logprob: -10.875893592834473
    10. ')' → logprob: -11.500893592834473

Token 263: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00292873359285295
    2. '    
' → logprob: -7.377928733825684
    3. ' for' → logprob: -7.627928733825684
    4. '
' → logprob: -8.002928733825684
    5. 'digits' → logprob: -8.002928733825684
    6. '#' → logprob: -8.377928733825684
    7. 'for' → logprob: -8.502928733825684
    8. ' ' → logprob: -8.877928733825684
    9. ' digits' → logprob: -9.627928733825684
    10. 'digit' → logprob: -10.002928733825684

Token 264: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4115992784500122
    2. '   ' → logprob: -1.4115992784500122
    3. ' for' → logprob: -2.6615991592407227
    4. 'digits' → logprob: -4.036599159240723
    5. '#' → logprob: -6.536599159240723
    6. ' digits' → logprob: -6.786599159240723
    7. ' ' → logprob: -6.786599159240723
    8. 'digit' → logprob: -7.161599159240723
    9. 'max' → logprob: -8.411599159240723
    10. 'd' → logprob: -8.411599159240723

Token 265: ' Try' (ID: 14720)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1615325212478638
    2. '   ' → logprob: -1.2865325212478638
    3. ' return' → logprob: -2.036532402038574
    4. ' #' → logprob: -2.536532402038574
    5. '#' → logprob: -2.661532402038574
    6. 'for' → logprob: -2.786532402038574
    7. 'return' → logprob: -4.161532402038574
    8. ' continue' → logprob: -4.911532402038574
    9. 'Continue' → logprob: -4.911532402038574
    10. 'import' → logprob: -5.161532402038574

Token 266: ' both' (ID: 2973)
  Prédit: ' digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.7152152061462402
    2. 'digits' → logprob: -1.0902152061462402
    3. ' all' → logprob: -2.5902152061462402
    4. 'd' → logprob: -3.0902152061462402
    5. ' next' → logprob: -3.8402152061462402
    6. ' d' → logprob: -3.8402152061462402
    7. ' to' → logprob: -5.84021520614624
    8. '   ' → logprob: -6.21521520614624
    9. ' ' → logprob: -6.84021520614624
    10. 'all' → logprob: -7.09021520614624

Token 267: ' including' (ID: 3463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.293509840965271
    2. '    ' → logprob: -2.2935099601745605
    3. ' (' → logprob: -2.5435099601745605
    4. ':' → logprob: -2.9185099601745605
    5. '   ' → logprob: -2.9185099601745605
    6. ' with' → logprob: -3.0435099601745605
    7. ' b' → logprob: -3.2935099601745605
    8. ' '' → logprob: -3.4185099601745605
    9. ' digits' → logprob: -3.5435099601745605
    10. ')' → logprob: -3.7935099601745605

Token 268: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6501791477203369
    2. ' and' → logprob: -1.525179147720337
    3. 'c' → logprob: -1.650179147720337
    4. 'and' → logprob: -3.650179147720337
    5. ' or' → logprob: -3.775179147720337
    6. ' the' → logprob: -4.275178909301758
    7. 'the' → logprob: -6.150178909301758
    8. '0' → logprob: -7.150178909301758
    9. ' ' → logprob: -7.275178909301758
    10. 'or' → logprob: -7.775178909301758

Token 269: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4372326135635376
    2. ' and' → logprob: -1.6872326135635376
    3. '_' → logprob: -3.187232494354248
    4. ' ' → logprob: -3.187232494354248
    5. '   ' → logprob: -3.812232494354248
    6. ' or' → logprob: -4.312232494354248
    7. ' )' → logprob: -4.312232494354248
    8. '=' → logprob: -4.437232494354248
    9. ',' → logprob: -4.437232494354248
    10. 'and' → logprob: -5.937232494354248

Token 270: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2783176004886627
    2. 'c' → logprob: -2.27831768989563
    3. ' c' → logprob: -2.65331768989563
    4. ' )' → logprob: -3.15331768989563
    5. ' ' → logprob: -5.403317451477051
    6. ' or' → logprob: -5.653317451477051
    7. ' and' → logprob: -5.778317451477051
    8. ' the' → logprob: -6.153317451477051
    9. 'the' → logprob: -6.653317451477051
    10. '#' → logprob: -6.778317451477051

Token 271: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.38975027203559875
    2. 'c' → logprob: -1.1397502422332764
    3. ' isinstance' → logprob: -7.0147504806518555
    4. ' ' → logprob: -7.1397504806518555
    5. '0' → logprob: -7.7647504806518555
    6. '   ' → logprob: -8.764750480651855
    7. ' not' → logprob: -9.014750480651855
    8. ' True' → logprob: -9.764750480651855
    9. '  ' → logprob: -10.139750480651855
    10. ' str' → logprob: -10.264750480651855

Token 272: '>=' (ID: 20974)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.817393958568573
    2. '>' → logprob: -1.6923940181732178
    3. ' >' → logprob: -2.1923940181732178
    4. ')' → logprob: -2.1923940181732178
    5. '!=' → logprob: -2.3173940181732178
    6. ' is' → logprob: -3.6923940181732178
    7. ' )' → logprob: -4.192393779754639
    8. '==' → logprob: -6.317393779754639
    9. ' >=' → logprob: -6.317393779754639
    10. ' ' → logprob: -6.442393779754639

Token 273: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018839456140995026
    2. '1' → logprob: -4.643839359283447
    3. '2' → logprob: -4.768839359283447
    4. ' ' → logprob: -7.768839359283447
    5. ')' → logprob: -9.893839836120605
    6. '   ' → logprob: -10.643839836120605
    7. '3' → logprob: -11.643839836120605
    8. '```' → logprob: -11.643839836120605
    9. '10' → logprob: -11.706339836120605
    10. '=' → logprob: -11.893839836120605

Token 274: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09883980453014374
    2. ' and' → logprob: -2.59883975982666
    3. ' )' → logprob: -4.09883975982666
    4. '),' → logprob: -6.97383975982666
    5. '   ' → logprob: -7.34883975982666
    6. '0' → logprob: -7.84883975982666
    7. 'and' → logprob: -7.97383975982666
    8. '):' → logprob: -8.09883975982666
    9. ' or' → logprob: -8.59883975982666
    10. ',' → logprob: -9.59883975982666

Token 275: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06295990943908691
    2. '
' → logprob: -3.937959909439087
    3. 'def' → logprob: -4.312959671020508
    4. ')' → logprob: -4.687959671020508
    5. '    
' → logprob: -5.312959671020508
    6. ':' → logprob: -5.812959671020508
    7. ' for' → logprob: -6.062959671020508
    8. '<|end|>' → logprob: -6.062959671020508
    9. ',' → logprob: -6.687959671020508
    10. ' and' → logprob: -7.062959671020508

Token 276: ' excluding' (ID: 76651)
  Prédit: ' excluding'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' excluding' → logprob: -0.3655140697956085
    2. 'excluding' → logprob: -1.2405140399932861
    3. ' not' → logprob: -4.615514278411865
    4. 'not' → logprob: -5.365514278411865
    5. 'without' → logprob: -6.865514278411865
    6. ' om' → logprob: -7.115514278411865
    7. ' without' → logprob: -7.865514278411865
    8. 'om' → logprob: -11.115513801574707
    9. ' possibly' → logprob: -11.615513801574707
    10. 'ex' → logprob: -11.740513801574707

Token 277: ' c' (ID: 274)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7928014397621155
    2. ' c' → logprob: -1.5428013801574707
    3. ' ' → logprob: -1.9178013801574707
    4. 'c' → logprob: -2.2928013801574707
    5. ' _' → logprob: -3.6678013801574707
    6. ' the' → logprob: -3.6678013801574707
    7. '_c' → logprob: -3.7928013801574707
    8. ' it' → logprob: -5.417801380157471
    9. ' (' → logprob: -6.917801380157471
    10. 'the' → logprob: -6.917801380157471

Token 278: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004913751035928726
    2. '
' → logprob: -6.504913806915283
    3. '<|end|>' → logprob: -6.629913806915283
    4. '    
' → logprob: -7.129913806915283
    5. ',' → logprob: -8.004913330078125
    6. 'def' → logprob: -8.379913330078125
    7. '#' → logprob: -8.754913330078125
    8. ' for' → logprob: -8.879913330078125
    9. '.' → logprob: -8.879913330078125
    10. 'for' → logprob: -9.754913330078125

Token 279: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003825848689302802
    2. ' )' → logprob: -6.378825664520264
    3. ').' → logprob: -7.003825664520264
    4. ' if' → logprob: -7.753825664520264
    5. 'if' → logprob: -7.878825664520264
    6. '),' → logprob: -9.128826141357422
    7. '):' → logprob: -9.253826141357422
    8. ')
' → logprob: -9.753826141357422
    9. '#' → logprob: -9.878826141357422
    10. '0' → logprob: -10.628826141357422

Token 280: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.22799567878246307
    2. ' c' → logprob: -1.6029956340789795
    3. 'True' → logprob: -6.602995872497559
    4. ' True' → logprob: -7.227995872497559
    5. '0' → logprob: -8.852995872497559
    6. 'False' → logprob: -9.227995872497559
    7. '   ' → logprob: -9.727995872497559
    8. ' ' → logprob: -10.102995872497559
    9. ' False' → logprob: -10.852995872497559
    10. '#' → logprob: -11.290495872497559

Token 281: '<' (ID: 27)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.3862879276275635
    2. '>=' → logprob: -1.3862879276275635
    3. ' >' → logprob: -3.3862879276275635
    4. '>' → logprob: -3.7612879276275635
    5. ')' → logprob: -4.636287689208984
    6. ' <' → logprob: -6.636287689208984
    7. '<' → logprob: -8.386287689208984
    8. ')>=' → logprob: -8.386287689208984
    9. '=' → logprob: -8.511287689208984
    10. ' )' → logprob: -8.511287689208984

Token 282: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12149929255247116
    2. '=' → logprob: -2.2464993000030518
    3. ' ' → logprob: -4.871499061584473
    4. ')' → logprob: -7.371499061584473
    5. '   ' → logprob: -9.371499061584473
    6. ' =' → logprob: -9.996499061584473
    7. '>' → logprob: -9.996499061584473
    8. '1' → logprob: -10.746499061584473
    9. '```' → logprob: -10.746499061584473
    10. '9' → logprob: -10.933999061584473

Token 283: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01465548388659954
    2. '):' → logprob: -4.264655590057373
    3. '   ' → logprob: -8.014655113220215
    4. ').' → logprob: -9.639655113220215
    5. ' )' → logprob: -10.389655113220215
    6. '):
' → logprob: -10.389655113220215
    7. ')
' → logprob: -11.139655113220215
    8. '),' → logprob: -11.514655113220215
    9. ':' → logprob: -13.014655113220215
    10. '.' → logprob: -13.889655113220215

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015693645924329758
    2. '
' → logprob: -4.640693664550781
    3. '    
' → logprob: -5.265693664550781
    4. '<|end|>' → logprob: -8.640693664550781
    5. '#' → logprob: -9.265693664550781
    6. ' for' → logprob: -9.515693664550781
    7. 'for' → logprob: -9.515693664550781
    8. ',' → logprob: -9.640693664550781
    9. 'def' → logprob: -9.890693664550781
    10. '  
' → logprob: -10.515693664550781

Token 285: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013905025087296963
    2. '
' → logprob: -4.763905048370361
    3. '    
' → logprob: -5.388905048370361
    4. '#' (adapté à ' #') → logprob: -8.388904571533203
    5. '<|end|>' → logprob: -9.638904571533203
    6. ',' → logprob: -9.763904571533203
    7. 'for' → logprob: -9.763904571533203
    8. ' for' → logprob: -10.138904571533203
    9. 'def' → logprob: -10.263904571533203
    10. '  
' → logprob: -10.388904571533203

Token 286: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06370635330677032
    2. '
' → logprob: -2.938706398010254
    3. '    
' → logprob: -5.563706398010254
    4. '#' → logprob: -6.813706398010254
    5. 'digits' → logprob: -6.938706398010254
    6. ' for' → logprob: -7.813706398010254
    7. 'def' → logprob: -7.938706398010254
    8. ' 
' → logprob: -7.938706398010254
    9. 'for' → logprob: -8.063706398010254
    10. '  
' → logprob: -8.688706398010254

Token 287: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3568662106990814
    2. 'for' → logprob: -1.6068662405014038
    3. ' for' → logprob: -2.7318661212921143
    4. '
' → logprob: -4.606866359710693
    5. '#' → logprob: -5.106866359710693
    6. '    
' → logprob: -5.981866359710693
    7. ' ' → logprob: -5.981866359710693
    8. 'digits' → logprob: -6.106866359710693
    9. ':' → logprob: -6.231866359710693
    10. 'd' → logprob: -6.231866359710693

Token 288: ' Choose' (ID: 25151)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.9244222044944763
    2. 'for' → logprob: -1.674422264099121
    3. 'pairs' → logprob: -1.799422264099121
    4. ' digits' → logprob: -2.674422264099121
    5. ' for' → logprob: -2.799422264099121
    6. '#' → logprob: -3.049422264099121
    7. ' pairs' → logprob: -3.299422264099121
    8. 'result' → logprob: -5.049422264099121
    9. 'd' → logprob: -5.674422264099121
    10. ' #' → logprob: -5.924422264099121

Token 289: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.05943915620446205
    2. ' best' → logprob: -4.059439182281494
    3. 'd' → logprob: -4.934439182281494
    4. 'the' → logprob: -4.934439182281494
    5. 'digits' → logprob: -5.059439182281494
    6. ' ' → logprob: -5.434439182281494
    7. ' digits' → logprob: -5.809439182281494
    8. ' d' → logprob: -6.184439182281494
    9. '   ' → logprob: -6.309439182281494
    10. '```' → logprob: -6.559439182281494

Token 290: ' number' (ID: 2086)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.08291159570217133
    2. 'best' → logprob: -3.207911491394043
    3. ' largest' → logprob: -4.082911491394043
    4. 'largest' → logprob: -4.457911491394043
    5. ' maximal' → logprob: -6.207911491394043
    6. ' one' → logprob: -6.332911491394043
    7. ' highest' → logprob: -7.457911491394043
    8. 'digit' → logprob: -7.457911491394043
    9. 'max' → logprob: -7.457911491394043
    10. ' first' → logprob: -7.707911491394043

Token 291: ' that' (ID: 484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3046475350856781
    2. '   ' → logprob: -1.4296475648880005
    3. ' ' → logprob: -4.679647445678711
    4. 'def' → logprob: -5.554647445678711
    5. ' :' → logprob: -5.804647445678711
    6. ',' → logprob: -6.929647445678711
    7. ':
' → logprob: -7.054647445678711
    8. ' for' → logprob: -7.179647445678711
    9. '    
' → logprob: -7.554647445678711
    10. '  ' → logprob: -7.679647445678711

Token 292: ' "' (ID: 392)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7016002535820007
    2. 'is' → logprob: -1.5766003131866455
    3. ' maxim' → logprob: -2.0766003131866455
    4. 'max' → logprob: -2.2016003131866455
    5. ' yields' → logprob: -3.2016003131866455
    6. ' results' → logprob: -4.951600074768066
    7. 'results' → logprob: -5.451600074768066
    8. ' produces' → logprob: -6.076600074768066
    9. ' has' → logprob: -6.326600074768066
    10. '```' → logprob: -6.701600074768066

Token 293: 'does' (ID: 52256)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.710271418094635
    2. ' is' → logprob: -0.710271418094635
    3. 'max' → logprob: -4.58527135848999
    4. 's' → logprob: -6.58527135848999
    5. '```' → logprob: -6.71027135848999
    6. ' has' → logprob: -6.96027135848999
    7. ' yields' → logprob: -7.21027135848999
    8. ' maxim' → logprob: -7.46027135848999
    9. '   ' → logprob: -8.210271835327148
    10. 'has' → logprob: -8.585271835327148

Token 294: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2830633223056793
    2. 'not' → logprob: -1.408063292503357
    3. 'n't' → logprob: -6.2830634117126465
    4. '```' → logprob: -11.158062934875488
    5. '_' → logprob: -11.533062934875488
    6. '_not' → logprob: -11.783062934875488
    7. 'n' → logprob: -12.408062934875488
    8. 'nt' → logprob: -13.408062934875488
    9. '	not' → logprob: -14.408062934875488
    10. '>' → logprob: -14.408062934875488

Token 295: ' lose' (ID: 12577)
  Prédit: ' contain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' contain' → logprob: -0.9692559838294983
    2. ' break' → logprob: -1.3442559242248535
    3. ' include' → logprob: -1.8442559242248535
    4. ' violate' → logprob: -2.2192559242248535
    5. 'contain' → logprob: -3.0942559242248535
    6. ' have' → logprob: -4.3442559242248535
    7. ' return' → logprob: -4.4692559242248535
    8. 'include' → logprob: -4.8442559242248535
    9. ' exist' → logprob: -5.5942559242248535
    10. 'break' → logprob: -5.8442559242248535

Token 296: '":
' (ID: 9213)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6393800973892212
    2. '")' → logprob: -1.0143800973892212
    3. ' to' → logprob: -3.1393799781799316
    4. ' out' → logprob: -4.139379978179932
    5. ' "' → logprob: -4.764379978179932
    6. ' leading' → logprob: -4.764379978179932
    7. ')' → logprob: -5.264379978179932
    8. ' the' → logprob: -5.639379978179932
    9. ' ")' → logprob: -5.639379978179932
    10. ' any' → logprob: -6.139379978179932

Token 297: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49575796723365784
    2. '#' → logprob: -1.6207579374313354
    3. ' ' → logprob: -2.495758056640625
    4. ' #' → logprob: -3.370758056640625
    5. '    ' → logprob: -3.620758056640625
    6. ' for' → logprob: -4.745758056640625
    7. '<|end|>' → logprob: -4.870758056640625
    8. ')' → logprob: -5.120758056640625
    9. '0' → logprob: -5.745758056640625
    10. '"' → logprob: -6.120758056640625

Token 298: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12496888637542725
    2. '#' (adapté à ' #') → logprob: -3.249969005584717
    3. ' ' → logprob: -4.374969005584717
    4. '    ' → logprob: -4.749969005584717
    5. 'def' → logprob: -4.999969005584717
    6. ' #' → logprob: -5.124969005584717
    7. '0' → logprob: -5.249969005584717
    8. '"' → logprob: -5.249969005584717
    9. '       ' → logprob: -5.374969005584717
    10. ' if' → logprob: -5.624969005584717

Token 299: '    ' (ID: 257)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.270101934671402
    2. '#' → logprob: -2.270102024078369
    3. '    ' → logprob: -2.645102024078369
    4. ' #' → logprob: -3.520102024078369
    5. ' ' → logprob: -4.645102024078369
    6. ' for' → logprob: -5.020102024078369
    7. 'def' → logprob: -5.645102024078369
    8. ' if' → logprob: -5.895102024078369
    9. '  ' → logprob: -6.520102024078369
    10. ')' → logprob: -6.895102024078369

Token 300: ' ' (ID: 220)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.2692652940750122
    2. '#' → logprob: -2.3942651748657227
    3. '   ' → logprob: -2.7692651748657227
    4. ' True' → logprob: -2.7692651748657227
    5. ' #' → logprob: -2.8942651748657227
    6. ' n' → logprob: -3.0192651748657227
    7. ' if' → logprob: -3.0192651748657227
    8. ' def' → logprob: -3.0192651748657227
    9. ' return' → logprob: -3.1442651748657227
    10. ' ' → logprob: -3.3942651748657227

Token 301: '1' (ID: 16)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.6034907102584839
    2. '    ' → logprob: -2.4784908294677734
    3. ' max' → logprob: -2.4784908294677734
    4. ' pass' → logprob: -2.4784908294677734
    5. ' #' → logprob: -2.6034908294677734
    6. '#' → logprob: -2.8534908294677734
    7. ' return' → logprob: -2.8534908294677734
    8. ' ' → logprob: -2.9784908294677734
    9. '   ' → logprob: -3.1034908294677734
    10. ' True' → logprob: -3.3534908294677734

Token 302: '.' (ID: 13)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43361473083496094
    2. '.' → logprob: -1.308614730834961
    3. ' and' → logprob: -3.558614730834961
    4. ' or' → logprob: -4.683614730834961
    5. ' if' → logprob: -4.808614730834961
    6. 'def' → logprob: -4.808614730834961
    7. '#' → logprob: -4.933614730834961
    8. '   ' → logprob: -4.933614730834961
    9. 'and' → logprob: -6.433614730834961
    10. ' ' → logprob: -6.433614730834961

Token 303: ' If' (ID: 1843)
  Prédit: ' Max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Max' → logprob: -1.295782208442688
    2. ' The' → logprob: -1.795782208442688
    3. ' max' → logprob: -2.2957820892333984
    4. ' length' → logprob: -2.5457820892333984
    5. 'Max' → logprob: -2.9207820892333984
    6. ' maximal' → logprob: -3.0457820892333984
    7. ' maximize' → logprob: -3.4207820892333984
    8. ' len' → logprob: -3.6707820892333984
    9. ' Length' → logprob: -3.7957820892333984
    10. 'max' → logprob: -3.9207820892333984

Token 304: ' prime' (ID: 9197)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.5803135633468628
    2. ' c' → logprob: -1.5803135633468628
    3. ' the' → logprob: -1.9553135633468628
    4. 'len' → logprob: -2.5803136825561523
    5. ' including' → logprob: -3.0803136825561523
    6. ' n' → logprob: -3.0803136825561523
    7. 'including' → logprob: -3.2053136825561523
    8. 'n' → logprob: -3.3303136825561523
    9. 'the' → logprob: -3.3303136825561523
    10. ' len' → logprob: -3.4553136825561523

Token 305: ' &&' (ID: 1725)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1108393669128418
    2. '   ' → logprob: -2.610839366912842
    3. ',' → logprob: -4.235839366912842
    4. 'def' → logprob: -5.610839366912842
    5. ':
' → logprob: -5.985839366912842
    6. ')' → logprob: -6.235839366912842
    7. ' :' → logprob: -6.360839366912842
    8. '):' → logprob: -6.360839366912842
    9. ' ' → logprob: -6.610839366912842
    10. '<|end|>' → logprob: -7.235839366912842

Token 306: ' opponent' (ID: 38519)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9155480861663818
    2. 'c' → logprob: -1.6655480861663818
    3. ' c' → logprob: -2.415548086166382
    4. ' len' → logprob: -2.790548086166382
    5. ' (' → logprob: -3.040548086166382
    6. '(' → logprob: -3.540548086166382
    7. '(True' → logprob: -3.540548086166382
    8. ' length' → logprob: -3.665548086166382
    9. 'True' → logprob: -3.665548086166382
    10. ' True' → logprob: -3.790548086166382

Token 307: ' not' (ID: 625)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3026158809661865
    2. ' ' → logprob: -1.8026158809661865
    3. '<|end|>' → logprob: -1.9276158809661865
    4. ''s' → logprob: -2.1776158809661865
    5. ' is' → logprob: -2.8026158809661865
    6. '   ' → logprob: -3.4276158809661865
    7. 'def' → logprob: -4.052616119384766
    8. '  ' → logprob: -4.177616119384766
    9. '_' → logprob: -4.427616119384766
    10. '==' → logprob: -4.427616119384766

Token 308: ' prime' (ID: 9197)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5730131268501282
    2. '<|end|>' → logprob: -2.3230130672454834
    3. ',' → logprob: -2.5730130672454834
    4. '_' → logprob: -3.3230130672454834
    5. 'def' → logprob: -3.3230130672454834
    6. ')' → logprob: -3.4480130672454834
    7. '
' → logprob: -3.5730130672454834
    8. '<|end|>' → logprob: -3.6980130672454834
    9. '):' → logprob: -4.4480133056640625
    10. ' or' → logprob: -4.5730133056640625

Token 309: ' =>' (ID: 871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2960646152496338
    2. ':' → logprob: -2.046064615249634
    3. ')' → logprob: -3.296064615249634
    4. '<|end|>' → logprob: -3.296064615249634
    5. ',' → logprob: -3.921064615249634
    6. '       ' → logprob: -4.296064376831055
    7. '
' → logprob: -5.796064376831055
    8. '    ' → logprob: -5.796064376831055
    9. '<|end|>' → logprob: -6.296064376831055
    10. '    
' → logprob: -6.421064376831055

Token 310: ' win' (ID: 4449)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.18710868060588837
    2. 'return' → logprob: -1.8121086359024048
    3. ' print' → logprob: -5.812108516693115
    4. 'print' → logprob: -6.312108516693115
    5. '   ' → logprob: -7.437108516693115
    6. ' ' → logprob: -7.812108516693115
    7. '       ' → logprob: -7.812108516693115
    8. '    ' → logprob: -8.312108993530273
    9. '           ' → logprob: -8.812108993530273
    10. ' True' → logprob: -8.812108993530273

Token 311: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03354622796177864
    2. '
' → logprob: -3.658546209335327
    3. '<|end|>' → logprob: -6.033546447753906
    4. '    
' → logprob: -7.158546447753906
    5. ')' → logprob: -7.533546447753906
    6. 'def' → logprob: -7.783546447753906
    7. ':' → logprob: -7.908546447753906
    8. '\n' → logprob: -7.908546447753906
    9. '       ' → logprob: -7.908546447753906
    10. ',' → logprob: -8.158546447753906

Token 312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012708705849945545
    2. '       ' → logprob: -5.51270866394043
    3. ')' → logprob: -6.26270866394043
    4. ',' → logprob: -6.63770866394043
    5. '    
' → logprob: -6.88770866394043
    6. '    ' → logprob: -7.13770866394043
    7. '<|end|>' → logprob: -7.38770866394043
    8. '
' → logprob: -7.63770866394043
    9. '```' → logprob: -8.38770866394043
    10. ':' → logprob: -8.51270866394043

Token 313: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022376857232302427
    2. '    ' → logprob: -7.127237796783447
    3. '       ' → logprob: -7.627237796783447
    4. '#' (adapté à ' #') → logprob: -8.377237319946289
    5. '
' → logprob: -8.877237319946289
    6. ' ' → logprob: -8.877237319946289
    7. '  ' → logprob: -9.252237319946289
    8. ',' → logprob: -9.627237319946289
    9. '<|end|>' → logprob: -9.752237319946289
    10. 'def' → logprob: -10.252237319946289

Token 314: '    ' (ID: 257)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00859022606164217
    2. '    ' → logprob: -5.508590221405029
    3. '       ' → logprob: -6.758590221405029
    4. '#' → logprob: -6.883590221405029
    5. ' elif' → logprob: -7.258590221405029
    6. ' ' → logprob: -7.883590221405029
    7. 'elif' → logprob: -7.883590221405029
    8. '  ' → logprob: -8.758590698242188
    9. '2' → logprob: -8.883590698242188
    10. '     ' → logprob: -9.383590698242188

Token 315: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11041118949651718
    2. '2' → logprob: -3.2354111671447754
    3. ' ' → logprob: -3.7354111671447754
    4. '    ' → logprob: -3.9854111671447754
    5. '#' → logprob: -4.610411167144775
    6. 'elif' → logprob: -4.985411167144775
    7. ' elif' → logprob: -5.985411167144775
    8. '  ' → logprob: -6.735411167144775
    9. ' #' → logprob: -7.235411167144775
    10. '       ' → logprob: -7.485411167144775

Token 316: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.36463919281959534
    2. 'elif' → logprob: -2.1146392822265625
    3. '   ' → logprob: -2.4896392822265625
    4. ' elif' → logprob: -3.2396392822265625
    5. ' ' → logprob: -3.3646392822265625
    6. '    ' → logprob: -4.1146392822265625
    7. '
' → logprob: -4.9896392822265625
    8. '  ' → logprob: -6.7396392822265625
    9. '       ' → logprob: -7.1146392822265625
    10. '     ' → logprob: -7.2396392822265625

Token 317: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0026085947174578905
    2. 'elif' → logprob: -6.502608776092529
    3. '   ' → logprob: -7.502608776092529
    4. ' elif' → logprob: -7.877608776092529
    5. ')' → logprob: -9.877608299255371
    6. '.
' → logprob: -10.627608299255371
    7. ':' → logprob: -10.877608299255371
    8. '#' → logprob: -10.877608299255371
    9. ',' → logprob: -11.252608299255371
    10. ' if' → logprob: -11.377608299255371

Token 318: ' If' (ID: 1843)
  Prédit: 'If'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'If' → logprob: -1.011813998222351
    2. ' elif' → logprob: -1.386813998222351
    3. ' If' → logprob: -2.2618141174316406
    4. 'elif' → logprob: -2.2618141174316406
    5. ' if' → logprob: -2.3868141174316406
    6. '   ' → logprob: -3.8868141174316406
    7. 'if' → logprob: -4.261814117431641
    8. ' else' → logprob: -4.261814117431641
    9. '#' → logprob: -4.386814117431641
    10. ' #' → logprob: -5.011814117431641

Token 319: ' both' (ID: 2973)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.2211695909500122
    2. ' prime' → logprob: -1.3461695909500122
    3. ' opponent' → logprob: -1.7211695909500122
    4. 'prime' → logprob: -2.0961694717407227
    5. 'not' → logprob: -2.5961694717407227
    6. ' both' → logprob: -3.2211694717407227
    7. 'both' → logprob: -3.9711694717407227
    8. 'op' → logprob: -4.971169471740723
    9. ' c' → logprob: -7.221169471740723
    10. ' neither' → logprob: -7.346169471740723

Token 320: ' prime' (ID: 9197)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.3262288570404053
    2. ' not' → logprob: -2.0762288570404053
    3. 'prime' → logprob: -2.3262288570404053
    4. ' prime' → logprob: -3.7012288570404053
    5. 'are' → logprob: -4.201229095458984
    6. 'not' → logprob: -4.326229095458984
    7. 'pr' → logprob: -7.951229095458984
    8. ' lose' → logprob: -7.951229095458984
    9. '_prime' → logprob: -8.326229095458984
    10. ' win' → logprob: -8.576229095458984

Token 321: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.524225115776062
    2. ':' → logprob: -1.274225115776062
    3. ' or' → logprob: -2.3992252349853516
    4. 'and' → logprob: -4.149225234985352
    5. '   ' → logprob: -5.024225234985352
    6. ':
' → logprob: -5.774225234985352
    7. '<|end|>' → logprob: -5.899225234985352
    8. ',' → logprob: -6.399225234985352
    9. ')' → logprob: -7.024225234985352
    10. '=' → logprob: -7.149225234985352

Token 322: ' both' (ID: 2973)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.765497088432312
    2. 'both' → logprob: -1.015497088432312
    3. ' both' → logprob: -2.3904972076416016
    4. ' not' → logprob: -2.5154972076416016
    5. ' neither' → logprob: -9.015497207641602
    6. '
' → logprob: -9.890497207641602
    7. ' ' → logprob: -11.515497207641602
    8. ' opponent' → logprob: -11.640497207641602
    9. 'False' → logprob: -11.890497207641602
    10. 'one' → logprob: -11.890497207641602

Token 323: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.22793959081172943
    2. ' not' → logprob: -1.6029396057128906
    3. 'non' → logprob: -6.227939605712891
    4. ' non' → logprob: -8.35293960571289
    5. ' are' → logprob: -9.22793960571289
    6. 'lose' → logprob: -9.97793960571289
    7. '```' → logprob: -10.47793960571289
    8. ' lose' → logprob: -10.85293960571289
    9. 'are' → logprob: -11.10293960571289
    10. '!' → logprob: -11.10293960571289

Token 324: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.202015683054924
    2. ' prime' → logprob: -1.7020156383514404
    3. '_prime' → logprob: -7.4520158767700195
    4. 'pr' → logprob: -12.07701587677002
    5. 'win' → logprob: -12.57701587677002
    6. ' ' → logprob: -12.70201587677002
    7. '_' → logprob: -13.32701587677002
    8. '```' → logprob: -13.45201587677002
    9. '   ' → logprob: -14.07701587677002
    10. 'prim' → logprob: -14.32701587677002

Token 325: ' =>' (ID: 871)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4121674597263336
    2. '   ' → logprob: -2.162167549133301
    3. ',' → logprob: -2.287167549133301
    4. '       ' → logprob: -2.787167549133301
    5. ':
' → logprob: -4.037167549133301
    6. '<|end|>' → logprob: -4.662167549133301
    7. 'def' → logprob: -5.287167549133301
    8. '#' → logprob: -5.662167549133301
    9. ')' → logprob: -5.662167549133301
    10. '    ' → logprob: -5.912167549133301

Token 326: ' larger' (ID: 12384)
  Prédit: ' choose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' choose' → logprob: -1.1726398468017578
    2. ' compare' → logprob: -1.2976398468017578
    3. 'choose' → logprob: -2.297639846801758
    4. 'compare' → logprob: -2.672639846801758
    5. ' the' → logprob: -2.797639846801758
    6. ' number' → logprob: -3.547639846801758
    7. ' return' → logprob: -4.047639846801758
    8. 'the' → logprob: -4.172639846801758
    9. 'number' → logprob: -4.297639846801758
    10. ' check' → logprob: -4.422639846801758

Token 327: ' number' (ID: 2086)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05170484632253647
    2. ')' → logprob: -3.8017048835754395
    3. '<|end|>' → logprob: -4.5517048835754395
    4. ' ' → logprob: -5.3017048835754395
    5. 'def' → logprob: -6.0517048835754395
    6. '_' → logprob: -6.3017048835754395
    7. '    
' → logprob: -6.3017048835754395
    8. '  ' → logprob: -6.5517048835754395
    9. '
' → logprob: -6.8017048835754395
    10. '  
' → logprob: -7.1767048835754395

Token 328: ' wins' (ID: 25327)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16129957139492035
    2. '
' → logprob: -2.036299467086792
    3. '    
' → logprob: -4.411299705505371
    4. 'def' → logprob: -6.036299705505371
    5. '<|end|>' → logprob: -6.036299705505371
    6. '#' → logprob: -8.161299705505371
    7. '  
' → logprob: -8.286299705505371
    8. '   
' → logprob: -8.786299705505371
    9. ',' → logprob: -9.036299705505371
    10. '<|end|>' → logprob: -9.411299705505371

Token 329: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027064047753810883
    2. 'digits' → logprob: -4.402063846588135
    3. 'def' → logprob: -5.652063846588135
    4. '    
' → logprob: -5.652063846588135
    5. '
' → logprob: -6.027063846588135
    6. '#' → logprob: -6.152063846588135
    7. 'pairs' → logprob: -6.152063846588135
    8. ' digits' → logprob: -8.902064323425293
    9. 'digit' → logprob: -9.277064323425293
    10. 'b' → logprob: -9.652064323425293

Token 330: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012731545604765415
    2. '<|end|>' → logprob: -4.762731552124023
    3. '
' → logprob: -6.262731552124023
    4. '    
' → logprob: -6.762731552124023
    5. '<|end|>' → logprob: -8.012731552124023
    6. '#' → logprob: -8.887731552124023
    7. 'def' → logprob: -9.137731552124023
    8. ',' → logprob: -9.262731552124023
    9. '.' → logprob: -9.762731552124023
    10. ')' → logprob: -10.012731552124023

Token 331: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016212785616517067
    2. '    
' → logprob: -4.8912129402160645
    3. '
' → logprob: -6.0162129402160645
    4. '<|end|>' → logprob: -6.1412129402160645
    5. ')' → logprob: -6.7662129402160645
    6. '    ' → logprob: -7.1412129402160645
    7. '#' → logprob: -7.2662129402160645
    8. ',' → logprob: -8.391212463378906
    9. 'def' → logprob: -8.641212463378906
    10. '<|end|>' → logprob: -9.391212463378906

Token 332: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03158024325966835
    2. 'pairs' → logprob: -4.656580448150635
    3. 'digits' → logprob: -5.406580448150635
    4. 'def' → logprob: -5.406580448150635
    5. '#' → logprob: -5.531580448150635
    6. '    
' → logprob: -5.781580448150635
    7. ' pairs' → logprob: -6.031580448150635
    8. '<|end|>' → logprob: -6.531580448150635
    9. '
' → logprob: -7.781580448150635
    10. ' digits' → logprob: -7.906580448150635

Token 333: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8514190316200256
    2. 'pairs' → logprob: -1.2264189720153809
    3. 'digits' → logprob: -2.101418972015381
    4. ' pairs' → logprob: -2.851418972015381
    5. '#' (adapté à ' #') → logprob: -2.976418972015381
    6. ' digits' → logprob: -3.851418972015381
    7. ' #' → logprob: -4.476418972015381
    8. '    
' → logprob: -6.226418972015381
    9. 'def' → logprob: -6.351418972015381
    10. 'dp' → logprob: -6.351418972015381

Token 334: ' Since' (ID: 12265)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.8819725513458252
    2. '   ' → logprob: -1.7569725513458252
    3. 'digits' → logprob: -1.7569725513458252
    4. '#' → logprob: -2.381972551345825
    5. 'b' → logprob: -2.506972551345825
    6. 'd' → logprob: -4.506972312927246
    7. 'for' → logprob: -4.631972312927246
    8. ' pairs' → logprob: -4.756972312927246
    9. ' #' → logprob: -5.256972312927246
    10. 'def' → logprob: -5.631972312927246

Token 335: ' no' (ID: 860)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.23178449273109436
    2. ' the' → logprob: -2.2317845821380615
    3. 'n' → logprob: -3.6067845821380615
    4. ' we' → logprob: -3.8567845821380615
    5. 'the' → logprob: -4.231784343719482
    6. ' pairs' → logprob: -4.356784343719482
    7. ' there' → logprob: -4.731784343719482
    8. ' range' → logprob: -6.231784343719482
    9. 'we' → logprob: -6.481784343719482
    10. ' code' → logprob: -6.606784343719482

Token 336: ' opponent' (ID: 38519)
  Prédit: ' further'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' further' → logprob: -1.0030715465545654
    2. ' more' → logprob: -1.3780715465545654
    3. ' additional' → logprob: -2.8780715465545654
    4. 'n' → logprob: -3.2530715465545654
    5. 't' → logprob: -3.3780715465545654
    6. ' code' → logprob: -3.5030715465545654
    7. ' pair' → logprob: -3.7530715465545654
    8. 'w' → logprob: -3.8780715465545654
    9. ' pairs' → logprob: -3.8780715465545654
    10. ' input' → logprob: -4.2530717849731445

Token 337: ' number' (ID: 2086)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 338: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.292262077331543
    2. ' is' → logprob: -1.417262077331543
    3. '   ' → logprob: -2.167262077331543
    4. '<|end|>' → logprob: -2.167262077331543
    5. ',' → logprob: -2.917262077331543
    6. ')' → logprob: -3.042262077331543
    7. '<|end|>' → logprob: -3.542262077331543
    8. ' for' → logprob: -3.917262077331543
    9. '):' → logprob: -4.417262077331543
    10. ' ' → logprob: -4.542262077331543

Token 339: ' given' (ID: 4335)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.9527294039726257
    2. ' given' → logprob: -1.3277294635772705
    3. 'provided' → logprob: -1.5777294635772705
    4. ' provided' → logprob: -2.7027294635772705
    5. 'mentioned' → logprob: -2.9527294635772705
    6. ' mentioned' → logprob: -4.702729225158691
    7. 'available' → logprob: -6.077729225158691
    8. 'specified' → logprob: -6.077729225158691
    9. ' specified' → logprob: -6.702729225158691
    10. 'in' → logprob: -6.827729225158691

Token 340: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8778172135353088
    2. '   ' → logprob: -0.8778172135353088
    3. ',' → logprob: -1.877817153930664
    4. ' for' → logprob: -6.002817153930664
    5. ':
' → logprob: -6.377817153930664
    6. '<|end|>' → logprob: -6.627817153930664
    7. '    
' → logprob: -6.627817153930664
    8. ')' → logprob: -6.877817153930664
    9. '):' → logprob: -6.877817153930664
    10. 'for' → logprob: -6.877817153930664

Token 341: ' the' (ID: 290)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6817233562469482
    2. '   ' → logprob: -0.8067233562469482
    3. 'return' → logprob: -3.3067233562469482
    4. ' return' → logprob: -4.806723594665527
    5. ' #' → logprob: -6.306723594665527
    6. 'pass' → logprob: -7.681723594665527
    7. ' we' → logprob: -8.306723594665527
    8. 'def' → logprob: -8.306723594665527
    9. 'we' → logprob: -9.556723594665527
    10. ' ' → logprob: -10.181723594665527

Token 342: ' problem' (ID: 4792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7368640303611755
    2. ' code' → logprob: -1.8618640899658203
    3. 'op' → logprob: -2.3618640899658203
    4. ' opponent' → logprob: -2.7368640899658203
    5. 'problem' → logprob: -2.8618640899658203
    6. ' problem' → logprob: -2.9868640899658203
    7. ' best' → logprob: -3.9868640899658203
    8. 'code' → logprob: -3.9868640899658203
    9. 'user' → logprob: -4.86186408996582
    10. 'best' → logprob: -4.86186408996582

Token 343: ' wants' (ID: 10648)
  Prédit: ' statement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' statement' → logprob: -1.6280100345611572
    2. ' is' → logprob: -1.7530100345611572
    3. ' seems' → logprob: -2.5030100345611572
    4. ' description' → logprob: -2.7530100345611572
    5. ' context' → logprob: -2.7530100345611572
    6. ' ends' → logprob: -2.8780100345611572
    7. 'statement' → logprob: -2.8780100345611572
    8. 'context' → logprob: -3.1280100345611572
    9. 'description' → logprob: -3.5030100345611572
    10. ' states' → logprob: -3.5030100345611572

Token 344: ' to' (ID: 316)
  Prédit: ' us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' us' → logprob: -0.44580304622650146
    2. 'us' → logprob: -1.6958030462265015
    3. ' only' → logprob: -2.945803165435791
    4. ' to' → logprob: -3.570803165435791
    5. 'the' → logprob: -3.695803165435791
    6. ' the' → logprob: -3.820803165435791
    7. 'to' → logprob: -4.320803165435791
    8. 'only' → logprob: -4.445803165435791
    9. ' you' → logprob: -4.695803165435791
    10. 'you' → logprob: -5.195803165435791

Token 345: ' output' (ID: 4733)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.4017924666404724
    2. 'det' → logprob: -2.901792526245117
    3. 'generate' → logprob: -3.026792526245117
    4. 'output' → logprob: -3.151792526245117
    5. 'implement' → logprob: -3.276792526245117
    6. 'maximize' → logprob: -3.401792526245117
    7. 'construct' → logprob: -3.651792526245117
    8. 'print' → logprob: -3.901792526245117
    9. 'complete' → logprob: -4.401792526245117
    10. ' find' → logprob: -4.526792526245117

Token 346: ' a' (ID: 261)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.03003152646124363
    2. ' the' → logprob: -3.530031442642212
    3. 'a' → logprob: -8.780031204223633
    4. 'only' → logprob: -9.905031204223633
    5. '<|end|>' → logprob: -10.530031204223633
    6. 'an' → logprob: -11.655031204223633
    7. '   ' → logprob: -11.655031204223633
    8. '...' → logprob: -12.030031204223633
    9. ' only' → logprob: -12.280031204223633
    10. ' a' → logprob: -12.655031204223633

Token 347: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.3523140847682953
    2. 'valid' → logprob: -1.7273141145706177
    3. 'max' → logprob: -2.852313995361328
    4. 'prime' → logprob: -3.727313995361328
    5. 'string' → logprob: -4.852313995361328
    6. 'result' → logprob: -4.977313995361328
    7. 'possible' → logprob: -5.477313995361328
    8. ' valid' → logprob: -5.602313995361328
    9. 'pal' → logprob: -6.102313995361328
    10. ' maximal' → logprob: -6.727313995361328

Token 348: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03447238728404045
    2. '<|end|>' → logprob: -4.659472465515137
    3. '    ' → logprob: -5.159472465515137
    4. ')' → logprob: -5.409472465515137
    5. ' for' → logprob: -5.784472465515137
    6. ',' → logprob: -5.784472465515137
    7. '    
' → logprob: -6.534472465515137
    8. ' ' → logprob: -6.659472465515137
    9. ':' → logprob: -7.534472465515137
    10. '  ' → logprob: -7.784472465515137

Token 349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0070757558569312096
    2. ' that' → logprob: -6.007075786590576
    3. ' for' → logprob: -6.757075786590576
    4. 'def' → logprob: -7.507075786590576
    5. ')' → logprob: -7.632075786590576
    6. ',' → logprob: -7.882075786590576
    7. '<|end|>' → logprob: -8.132075309753418
    8. '    ' → logprob: -8.257075309753418
    9. '    
' → logprob: -8.757075309753418
    10. '#' → logprob: -8.757075309753418

Token 350: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14511750638484955
    2. ' that' → logprob: -2.3951175212860107
    3. ' for' → logprob: -3.7701175212860107
    4. '#' (adapté à ' #') → logprob: -5.770117282867432
    5. 'that' → logprob: -5.895117282867432
    6. ',' → logprob: -6.020117282867432
    7. '.' → logprob: -6.145117282867432
    8. 'for' → logprob: -6.145117282867432
    9. ')' → logprob: -6.270117282867432
    10. ' ' → logprob: -7.270117282867432

Token 351: ' that' (ID: 484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00618355255573988
    2. ' ' → logprob: -6.506183624267578
    3. ' for' → logprob: -6.506183624267578
    4. '#' → logprob: -7.381183624267578
    5. 'for' → logprob: -7.756183624267578
    6. '    
' → logprob: -7.881183624267578
    7. 'def' → logprob: -8.006183624267578
    8. ',' → logprob: -8.631183624267578
    9. '<|end|>' → logprob: -8.756183624267578
    10. '  ' → logprob: -8.881183624267578

Token 352: ' would' (ID: 1481)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2288563251495361
    2. ' maxim' → logprob: -1.4788563251495361
    3. ' is' → logprob: -1.8538563251495361
    4. 'is' → logprob: -1.9788563251495361
    5. 'does' → logprob: -3.353856325149536
    6. '#' → logprob: -3.478856325149536
    7. 'cannot' → logprob: -3.853856325149536
    8. 'def' → logprob: -3.853856325149536
    9. 'wins' → logprob: -4.228856086730957
    10. 'can' → logprob: -4.728856086730957

Token 353: ' not' (ID: 625)
  Prédit: 'maximize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximize' → logprob: -0.6819191575050354
    2. 'beat' → logprob: -1.6819190979003906
    3. ' beat' → logprob: -2.6819190979003906
    4. ' maximize' → logprob: -2.8069190979003906
    5. 'win' → logprob: -3.1819190979003906
    6. 'not' → logprob: -3.5569190979003906
    7. 'be' → logprob: -4.056919097900391
    8. 'def' → logprob: -4.181919097900391
    9. ' not' → logprob: -4.306919097900391
    10. ' win' → logprob: -4.556919097900391

Token 354: ' lose' (ID: 12577)
  Prédit: ' lose'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lose' → logprob: -0.22593627870082855
    2. 'lose' → logprob: -1.6009362936019897
    3. 'los' → logprob: -8.850935935974121
    4. ' be' → logprob: -8.975935935974121
    5. 'be' → logprob: -9.475935935974121
    6. ' ' → logprob: -10.725935935974121
    7. '```' → logprob: -10.725935935974121
    8. 'lo' → logprob: -11.100935935974121
    9. '_' → logprob: -11.225935935974121
    10. 'l' → logprob: -11.600935935974121

Token 355: ' against' (ID: 4372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036308251321315765
    2. 'digits' → logprob: -3.6613082885742188
    3. 'def' → logprob: -5.911308288574219
    4. 'pairs' → logprob: -6.161308288574219
    5. '#' → logprob: -6.411308288574219
    6. '    
' → logprob: -7.036308288574219
    7. '<|end|>' → logprob: -7.161308288574219
    8. '
' → logprob: -7.786308288574219
    9. ' digits' → logprob: -8.411308288574219
    10. ',' → logprob: -8.661308288574219

Token 356: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.2735426425933838
    2. ' all' → logprob: -2.398542642593384
    3. 'any' → logprob: -2.523542642593384
    4. ' ' → logprob: -4.398542404174805
    5. ' the' → logprob: -4.398542404174805
    6. 'all' → logprob: -4.648542404174805
    7. ' a' → logprob: -5.023542404174805
    8. ' an' → logprob: -5.023542404174805
    9. ' itself' → logprob: -5.148542404174805
    10. 'the' → logprob: -5.648542404174805

Token 357: ' other' (ID: 1273)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031833499670028687
    2. '#' → logprob: -4.781833648681641
    3. 'digits' → logprob: -4.781833648681641
    4. '
' → logprob: -5.781833648681641
    5. 'def' → logprob: -5.781833648681641
    6. '    
' → logprob: -6.531833648681641
    7. ' digits' → logprob: -6.781833648681641
    8. ' for' → logprob: -6.906833648681641
    9. '<|end|>' → logprob: -7.156833648681641
    10. ' #' → logprob: -7.531833648681641

Token 358: ' number' (ID: 2086)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07494020462036133
    2. '
' → logprob: -2.9499402046203613
    3. 'def' → logprob: -4.949940204620361
    4. '    
' → logprob: -5.199940204620361
    5. '#' → logprob: -5.949940204620361
    6. 'digits' → logprob: -6.699940204620361
    7. '```' → logprob: -7.324940204620361
    8. ':' → logprob: -7.574940204620361
    9. '  
' → logprob: -8.324939727783203
    10. '<|end|>' → logprob: -8.449939727783203

Token 359: ' constructed' (ID: 30248)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04623210057616234
    2. '<|end|>' → logprob: -3.296231985092163
    3. 'def' → logprob: -6.421232223510742
    4. '#' → logprob: -6.671232223510742
    5. '    
' → logprob: -6.796232223510742
    6. ':' → logprob: -7.171232223510742
    7. '
' → logprob: -7.171232223510742
    8. ')' → logprob: -7.671232223510742
    9. '<|end|>' → logprob: -7.921232223510742
    10. ',' → logprob: -8.046232223510742

Token 360: ' similarly' (ID: 60314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17543549835681915
    2. ':' → logprob: -2.1754355430603027
    3. '<|end|>' → logprob: -3.8004355430603027
    4. '
' → logprob: -4.925435543060303
    5. ',' → logprob: -5.800435543060303
    6. '    
' → logprob: -5.925435543060303
    7. '#' → logprob: -6.550435543060303
    8. ' ' → logprob: -6.800435543060303
    9. '  
' → logprob: -6.925435543060303
    10. '```' → logprob: -7.050435543060303

Token 361: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009878743439912796
    2. '<|end|>' → logprob: -5.009878635406494
    3. '
' → logprob: -7.009878635406494
    4. '    
' → logprob: -7.259878635406494
    5. '#' → logprob: -7.509878635406494
    6. 'def' → logprob: -7.759878635406494
    7. ',' → logprob: -9.134879112243652
    8. '<|end|>' → logprob: -9.759879112243652
    9. ':' → logprob: -10.009879112243652
    10. ')' → logprob: -10.009879112243652

Token 362: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0073201656341552734
    2. '
' → logprob: -6.007320404052734
    3. '    
' → logprob: -6.507320404052734
    4. 'def' → logprob: -6.507320404052734
    5. '#' → logprob: -7.257320404052734
    6. '<|end|>' → logprob: -8.757320404052734
    7. ')' → logprob: -9.132320404052734
    8. ' ' → logprob: -9.132320404052734
    9. '  
' → logprob: -9.257320404052734
    10. ':' → logprob: -9.257320404052734

Token 363: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004943766165524721
    2. '    
' → logprob: -6.50494384765625
    3. '
' → logprob: -7.25494384765625
    4. '    ' → logprob: -7.50494384765625
    5. 'def' → logprob: -7.50494384765625
    6. ' ' → logprob: -7.75494384765625
    7. '#' (adapté à ' #') → logprob: -8.00494384765625
    8. '<|end|>' → logprob: -8.50494384765625
    9. 'n' → logprob: -9.25494384765625
    10. '  ' → logprob: -9.37994384765625

Token 364: ' This' (ID: 1328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007877510972321033
    2. 'digits' → logprob: -6.257877349853516
    3. '#' → logprob: -6.632877349853516
    4. ' ' → logprob: -7.007877349853516
    5. 'def' → logprob: -7.257877349853516
    6. '    
' → logprob: -7.507877349853516
    7. '
' → logprob: -7.757877349853516
    8. ' digits' → logprob: -8.382877349853516
    9. ' #' → logprob: -8.507877349853516
    10. ' for' → logprob: -8.632877349853516

Token 365: ' essentially' (ID: 29212)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8029714822769165
    2. '#' → logprob: -2.427971363067627
    3. ' def' → logprob: -2.427971363067627
    4. ' code' → logprob: -2.427971363067627
    5. 'def' → logprob: -2.927971363067627
    6. ' #' → logprob: -3.552971363067627
    7. ' continues' → logprob: -3.802971363067627
    8. ' ' → logprob: -3.927971363067627
    9. ' seems' → logprob: -4.052971363067627
    10. ' will' → logprob: -4.427971363067627

Token 366: ' means' (ID: 4748)
  Prédit: 'means'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'means' → logprob: -0.6584393978118896
    2. ' means' → logprob: -0.7834393978118896
    3. ' continues' → logprob: -5.158439636230469
    4. 'def' → logprob: -5.533439636230469
    5. ' is' → logprob: -5.783439636230469
    6. ' def' → logprob: -6.283439636230469
    7. '#' → logprob: -6.283439636230469
    8. ' implies' → logprob: -6.408439636230469
    9. 'is' → logprob: -6.533439636230469
    10. 'contin' → logprob: -7.033439636230469

Token 367: ' output' (ID: 4733)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.390114665031433
    2. ' we' → logprob: -1.515114665031433
    3. ' that' → logprob: -1.765114665031433
    4. ' maximizing' → logprob: -2.2651147842407227
    5. ' trying' → logprob: -2.5151147842407227
    6. ' assigning' → logprob: -3.1401147842407227
    7. ' choosing' → logprob: -3.2651147842407227
    8. 'assign' → logprob: -4.140114784240723
    9. 'we' → logprob: -4.265114784240723
    10. 'the' → logprob: -4.515114784240723

Token 368: 'ting' (ID: 1744)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.24659141898155212
    2. 'ting' → logprob: -2.746591329574585
    3. ' a' → logprob: -2.871591329574585
    4. '_' → logprob: -2.996591329574585
    5. ' the' → logprob: -3.746591329574585
    6. ' ' → logprob: -4.746591567993164
    7. '   ' → logprob: -5.621591567993164
    8. ''' → logprob: -5.621591567993164
    9. '"' → logprob: -5.996591567993164
    10. 'the' → logprob: -6.496591567993164

Token 369: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5943620204925537
    2. ' the' → logprob: -1.2193620204925537
    3. ''' → logprob: -2.7193620204925537
    4. '9' → logprob: -3.4693620204925537
    5. 'digits' → logprob: -3.7193620204925537
    6. 'a' → logprob: -4.469362258911133
    7. ' a' → logprob: -4.844362258911133
    8. '"' → logprob: -5.969362258911133
    9. ' digits' → logprob: -6.219362258911133
    10. ' code' → logprob: -6.469362258911133

Token 370: ' largest' (ID: 10574)
  Prédit: 'largest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'largest' → logprob: -0.5413693785667419
    2. 'number' → logprob: -1.5413694381713867
    3. '9' → logprob: -2.9163694381713867
    4. 'max' → logprob: -3.0413694381713867
    5. ' number' → logprob: -3.7913694381713867
    6. 'maximum' → logprob: -4.166369438171387
    7. ' code' → logprob: -4.291369438171387
    8. ' largest' → logprob: -4.291369438171387
    9. 'highest' → logprob: -4.791369438171387
    10. ' maximal' → logprob: -4.791369438171387

Token 371: ' prime' (ID: 9197)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.46343618631362915
    2. 'digit' → logprob: -2.3384361267089844
    3. 'possible' → logprob: -2.3384361267089844
    4. ' number' → logprob: -2.5884361267089844
    5. ' digit' → logprob: -2.8384361267089844
    6. ' ' → logprob: -3.8384361267089844
    7. 'number' → logprob: -4.463436126708984
    8. '_' → logprob: -6.088436126708984
    9. ' digits' → logprob: -6.338436126708984
    10. 'digits' → logprob: -6.338436126708984

Token 372: ' number' (ID: 2086)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9171082377433777
    2. ' number' → logprob: -1.2921082973480225
    3. 'number' → logprob: -2.4171082973480225
    4. '<|end|>' → logprob: -2.6671082973480225
    5. ' ' → logprob: -2.7921082973480225
    6. 'digit' → logprob: -3.2921082973480225
    7. ')' → logprob: -4.417108058929443
    8. 'possible' → logprob: -4.667108058929443
    9. ' digit' → logprob: -4.792108058929443
    10. ' possible' → logprob: -5.042108058929443

Token 373: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19471073150634766
    2. ' ' → logprob: -2.4447107315063477
    3. '_' → logprob: -3.4447107315063477
    4. '<|end|>' → logprob: -3.6947107315063477
    5. 'def' → logprob: -4.819710731506348
    6. ' for' → logprob: -5.319710731506348
    7. '  ' → logprob: -5.694710731506348
    8. ',' → logprob: -5.819710731506348
    9. '    ' → logprob: -5.819710731506348
    10. ')' → logprob: -6.319710731506348

Token 374: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00811722595244646
    2. 'def' → logprob: -6.258117198944092
    3. '    
' → logprob: -6.508117198944092
    4. ' for' → logprob: -6.508117198944092
    5. '<|end|>' → logprob: -7.258117198944092
    6. 'for' → logprob: -7.633117198944092
    7. '
' → logprob: -7.758117198944092
    8. ',' → logprob: -7.758117198944092
    9. ' ' → logprob: -8.25811767578125
    10. '  
' → logprob: -9.00811767578125

Token 375: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4343147277832031
    2. '   ' → logprob: -1.6843147277832031
    3. ',' → logprob: -1.9343147277832031
    4. '<|end|>' → logprob: -2.059314727783203
    5. ' or' → logprob: -2.559314727783203
    6. ' ' → logprob: -3.059314727783203
    7. ')' → logprob: -3.559314727783203
    8. ' that' → logprob: -3.809314727783203
    9. ' possible' → logprob: -3.809314727783203
    10. '.' → logprob: -4.059314727783203

Token 376: ' #' (ID: 1069)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -1.4998615980148315
    2. 'possible' → logprob: -1.7498615980148315
    3. '<|end|>' → logprob: -1.9998615980148315
    4. ' or' → logprob: -2.374861717224121
    5. '   ' → logprob: -2.624861717224121
    6. ',' → logprob: -2.624861717224121
    7. '.' → logprob: -2.874861717224121
    8. ' that' → logprob: -3.249861717224121
    9. '#' (adapté à ' #') → logprob: -3.499861717224121
    10. ' ' → logprob: -3.624861717224121

Token 377: ' with' (ID: 483)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9948950409889221
    2. ',' → logprob: -2.1198949813842773
    3. ' possible' → logprob: -2.2448949813842773
    4. ' for' → logprob: -2.9948949813842773
    5. '<|end|>' → logprob: -2.9948949813842773
    6. 'possible' → logprob: -3.2448949813842773
    7. ')' → logprob: -3.3698949813842773
    8. ' that' → logprob: -3.6198949813842773
    9. '   ' → logprob: -3.7448949813842773
    10. ' with' → logprob: -3.7448949813842773

Token 378: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.752450704574585
    2. ' the' → logprob: -1.127450704574585
    3. 'n' → logprob: -2.377450704574585
    4. 'digits' → logprob: -3.377450704574585
    5. ' n' → logprob: -3.502450704574585
    6. ' pairs' → logprob: -4.127450942993164
    7. 'pairs' → logprob: -4.752450942993164
    8. '<|end|>' → logprob: -5.377450942993164
    9. ' digits' → logprob: -5.627450942993164
    10. ' given' → logprob: -5.752450942993164

Token 379: ' construction' (ID: 9770)
  Prédit: ' given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' given' → logprob: -1.0107336044311523
    2. 'given' → logprob: -1.1357336044311523
    3. 'pairs' → logprob: -1.8857336044311523
    4. ' pairs' → logprob: -2.3857336044311523
    5. 'digits' → logprob: -3.6357336044311523
    6. 'same' → logprob: -4.760733604431152
    7. 'assigned' → logprob: -4.885733604431152
    8. 'available' → logprob: -5.635733604431152
    9. ' available' → logprob: -5.760733604431152
    10. ' assigned' → logprob: -5.885733604431152

Token 380: ' rules' (ID: 9607)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012707178480923176
    2. '
' → logprob: -5.637707233428955
    3. '<|end|>' → logprob: -5.637707233428955
    4. 'def' → logprob: -6.137707233428955
    5. '    
' → logprob: -7.137707233428955
    6. ',' → logprob: -7.512707233428955
    7. '#' → logprob: -8.012706756591797
    8. ' for' → logprob: -8.137706756591797
    9. ' ' → logprob: -8.387706756591797
    10. 'digits' → logprob: -8.762706756591797

Token 381: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022459449246525764
    2. 'digits' → logprob: -5.022459506988525
    3. 'def' → logprob: -5.272459506988525
    4. '    
' → logprob: -5.647459506988525
    5. '#' → logprob: -6.522459506988525
    6. '
' → logprob: -6.647459506988525
    7. 'pairs' → logprob: -6.772459506988525
    8. ' ' → logprob: -7.522459506988525
    9. 'for' → logprob: -7.772459506988525
    10. ' for' → logprob: -8.147459030151367

Token 382: ' or' (ID: 503)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32499179244041443
    2. '   ' → logprob: -1.9499918222427368
    3. '    ' → logprob: -2.8249917030334473
    4. ' or' → logprob: -3.1999917030334473
    5. ' 
' → logprob: -5.074991703033447
    6. '#' → logprob: -5.074991703033447
    7. '<|end|>' → logprob: -5.449991703033447
    8. '    
' → logprob: -5.699991703033447
    9. ')' → logprob: -6.074991703033447
    10. '  ' → logprob: -6.449991703033447

Token 383: ' if' (ID: 538)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.020150899887085
    2. ' at' → logprob: -1.395150899887085
    3. ' if' → logprob: -1.520150899887085
    4. ' a' → logprob: -2.895150899887085
    5. 'if' → logprob: -3.520150899887085
    6. 'the' → logprob: -4.145151138305664
    7. ' all' → logprob: -4.145151138305664
    8. ' output' → logprob: -4.520151138305664
    9. ' return' → logprob: -5.145151138305664
    10. 'output' → logprob: -5.395151138305664

Token 384: ' none' (ID: 12698)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.731891393661499
    2. 'not' → logprob: -1.731891393661499
    3. 'none' → logprob: -1.856891393661499
    4. ' no' → logprob: -2.606891393661499
    5. ' none' → logprob: -2.606891393661499
    6. ' not' → logprob: -3.606891393661499
    7. 'prime' → logprob: -4.606891632080078
    8. ' prime' → logprob: -6.981891632080078
    9. 'all' → logprob: -10.106891632080078
    10. ' impossible' → logprob: -10.106891632080078

Token 385: ' prime' (ID: 9197)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7328698635101318
    2. ' available' → logprob: -2.357869863510132
    3. ',' → logprob: -2.482869863510132
    4. ' possible' → logprob: -2.982869863510132
    5. '_possible' → logprob: -2.982869863510132
    6. ' can' → logprob: -3.107869863510132
    7. ' exists' → logprob: -3.482869863510132
    8. ' found' → logprob: -3.732869863510132
    9. ':' → logprob: -3.732869863510132
    10. 'possible' → logprob: -3.982869863510132

Token 386: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8042921423912048
    2. ' is' → logprob: -1.3042922019958496
    3. 'found' → logprob: -2.1792922019958496
    4. 'possible' → logprob: -2.5542922019958496
    5. ' found' → logprob: -3.4292922019958496
    6. 'is' → logprob: -3.8042922019958496
    7. '_possible' → logprob: -4.80429220199585
    8. ' possible' → logprob: -4.92929220199585
    9. ' exists' → logprob: -5.67929220199585
    10. 'exists' → logprob: -5.67929220199585

Token 387: ' the' (ID: 290)
  Prédit: ' output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' output' → logprob: -0.012587939389050007
    2. 'output' → logprob: -4.512588024139404
    3. ' the' → logprob: -7.137588024139404
    4. ' print' → logprob: -7.637588024139404
    5. ' return' → logprob: -8.762587547302246
    6. 'the' → logprob: -10.262587547302246
    7. 'print' → logprob: -11.262587547302246
    8. ' then' → logprob: -11.512587547302246
    9. ' ' → logprob: -11.762587547302246
    10. ' choose' → logprob: -11.887587547302246

Token 388: ' largest' (ID: 10574)
  Prédit: ' largest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' largest' → logprob: -0.5232836604118347
    2. 'largest' → logprob: -0.8982836604118347
    3. 'max' → logprob: -9.023283958435059
    4. ' biggest' → logprob: -11.648283958435059
    5. ' maximal' → logprob: -11.773283958435059
    6. 'Largest' → logprob: -12.523283958435059
    7. 'maximum' → logprob: -13.023283958435059
    8. ' one' → logprob: -13.273283958435059
    9. ' max' → logprob: -13.273283958435059
    10. '9' → logprob: -13.398283958435059

Token 389: ' number' (ID: 2086)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0588181018829346
    2. ' ' → logprob: -1.6838181018829346
    3. ' possible' → logprob: -1.9338181018829346
    4. 'digit' → logprob: -2.1838181018829346
    5. ' number' → logprob: -2.9338181018829346
    6. 'possible' → logprob: -3.1838181018829346
    7. ' digit' → logprob: -3.1838181018829346
    8. ' available' → logprob: -3.9338181018829346
    9. '_possible' → logprob: -4.8088178634643555
    10. '_digit' → logprob: -4.9338178634643555

Token 390: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07390889525413513
    2. '
' → logprob: -2.823908805847168
    3. '    
' → logprob: -4.823908805847168
    4. 'def' → logprob: -6.823908805847168
    5. 'digits' → logprob: -7.573908805847168
    6. '<|end|>' → logprob: -7.823908805847168
    7. ',' → logprob: -8.323908805847168
    8. '  
' → logprob: -8.323908805847168
    9. ' ' → logprob: -8.448908805847168
    10. ' 
' → logprob: -8.573908805847168

Token 391: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023086605593562126
    2. '
' → logprob: -4.3980865478515625
    3. '    
' → logprob: -4.7730865478515625
    4. 'def' → logprob: -7.5230865478515625
    5. '  
' → logprob: -7.8980865478515625
    6. ' 
' → logprob: -8.148086547851562
    7. '\n' → logprob: -8.398086547851562
    8. '\' → logprob: -8.648086547851562
    9. '   
' → logprob: -8.898086547851562
    10. 'n' → logprob: -10.023086547851562

Token 392: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011725515127182007
    2. 'pairs' → logprob: -5.386725425720215
    3. ' pairs' → logprob: -6.261725425720215
    4. '    
' → logprob: -6.386725425720215
    5. 'digits' → logprob: -6.386725425720215
    6. '
' → logprob: -7.511725425720215
    7. '#' → logprob: -8.511725425720215
    8. ' digits' → logprob: -8.886725425720215
    9. ' ' → logprob: -9.011725425720215
    10. '   
' → logprob: -9.011725425720215

Token 393: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010734978131949902
    2. '
' → logprob: -5.385735034942627
    3. '    
' → logprob: -5.510735034942627
    4. 'pairs' → logprob: -7.260735034942627
    5. ' pairs' → logprob: -7.635735034942627
    6. 'def' → logprob: -8.510734558105469
    7. 'digits' → logprob: -8.760734558105469
    8. '  
' → logprob: -8.885734558105469
    9. '#' → logprob: -9.760734558105469
    10. ' digits' → logprob: -9.885734558105469

Token 394: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.061015248298645
    2. 'digits' → logprob: -1.311015248298645
    3. 'pairs' → logprob: -1.686015248298645
    4. '#' (adapté à ' #') → logprob: -2.6860151290893555
    5. ' digits' → logprob: -2.8110151290893555
    6. ' pairs' → logprob: -3.0610151290893555
    7. ' #' → logprob: -4.8110151290893555
    8. 'max' → logprob: -5.4360151290893555
    9. 'def' → logprob: -5.9360151290893555
    10. ' assigned' → logprob: -6.8110151290893555

Token 395: ' We' (ID: 1416)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.5336809158325195
    2. 'pairs' → logprob: -1.0336809158325195
    3. '#' → logprob: -3.9086809158325195
    4. ' digits' → logprob: -4.6586809158325195
    5. 'max' → logprob: -5.6586809158325195
    6. 'best' → logprob: -5.6586809158325195
    7. ' pairs' → logprob: -5.6586809158325195
    8. '   ' → logprob: -5.7836809158325195
    9. 'digit' → logprob: -6.0336809158325195
    10. 'res' → logprob: -6.1586809158325195

Token 396: ' can' (ID: 665)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.038273051381111145
    2. '_' → logprob: -4.413272857666016
    3. ' #' → logprob: -5.288272857666016
    4. ' need' → logprob: -5.788272857666016
    5. ' want' → logprob: -6.163272857666016
    6. ' continue' → logprob: -6.163272857666016
    7. ' =' → logprob: -6.663272857666016
    8. ' will' → logprob: -6.788272857666016
    9. '    ' → logprob: -6.788272857666016
    10. ' can' → logprob: -7.163272857666016

Token 397: ' generate' (ID: 10419)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5861933827400208
    2. 'try' → logprob: -1.086193323135376
    3. ' try' → logprob: -2.836193323135376
    4. '   ' → logprob: -4.461193561553955
    5. 'generate' → logprob: -4.711193561553955
    6. 'continue' → logprob: -5.086193561553955
    7. '#' → logprob: -5.961193561553955
    8. 'define' → logprob: -5.961193561553955
    9. '```' → logprob: -6.086193561553955
    10. 'attempt' → logprob: -6.461193561553955

Token 398: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.16533084213733673
    2. 'all' → logprob: -2.7903308868408203
    3. 'digits' → logprob: -3.5403308868408203
    4. 'd' → logprob: -4.54033088684082
    5. ' digits' → logprob: -4.54033088684082
    6. 'digit' → logprob: -4.91533088684082
    7. 'possible' → logprob: -5.16533088684082
    8. ' combinations' → logprob: -5.54033088684082
    9. 'pairs' → logprob: -5.79033088684082
    10. ' pairs' → logprob: -5.91533088684082

Token 399: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.9382320642471313
    2. ' pairs' → logprob: -1.3132320642471313
    3. ' combinations' → logprob: -1.6882320642471313
    4. 'possible' → logprob: -3.188231945037842
    5. ' ' → logprob: -3.688231945037842
    6. 'pairs' → logprob: -3.688231945037842
    7. ' digits' → logprob: -4.063231945037842
    8. '_' → logprob: -5.063231945037842
    9. '   ' → logprob: -5.063231945037842
    10. '_pairs' → logprob: -5.063231945037842

Token 400: ' assignments' (ID: 41477)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.5576046705245972
    2. ' combinations' → logprob: -2.3076047897338867
    3. ' digits' → logprob: -2.3076047897338867
    4. 'digits' → logprob: -3.0576047897338867
    5. 'pairs' → logprob: -3.1826047897338867
    6. 'digit' → logprob: -3.3076047897338867
    7. ' digit' → logprob: -3.4326047897338867
    8. ' ' → logprob: -3.9326047897338867
    9. ' d' → logprob: -4.557604789733887
    10. 'd' → logprob: -4.557604789733887

Token 401: ' of' (ID: 328)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6677599549293518
    2. ' ' → logprob: -1.667759895324707
    3. '<|end|>' → logprob: -1.917759895324707
    4. ' to' → logprob: -3.167759895324707
    5. ',' → logprob: -3.542759895324707
    6. 'for' → logprob: -4.042759895324707
    7. ' of' → logprob: -4.667759895324707
    8. ' ,' → logprob: -4.792759895324707
    9. '   ' → logprob: -4.792759895324707
    10. '_' → logprob: -5.292759895324707

Token 402: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.5996850728988647
    2. ' digits' → logprob: -0.8496850728988647
    3. ' pairs' → logprob: -4.099685192108154
    4. 'pairs' → logprob: -5.349685192108154
    5. 'digit' → logprob: -7.349685192108154
    6. 'd' → logprob: -7.474685192108154
    7. 'b' → logprob: -8.474684715270996
    8. '9' → logprob: -8.849684715270996
    9. ' pair' → logprob: -9.474684715270996
    10. ' digit' → logprob: -9.599684715270996

Token 403: ' to' (ID: 316)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2911297082901
    2. ' for' → logprob: -1.2911297082901
    3. '<|end|>' → logprob: -1.5411297082901
    4. ' to' → logprob: -2.0411295890808105
    5. ',' → logprob: -3.2911295890808105
    6. '_' → logprob: -4.2911295890808105
    7. 'for' → logprob: -4.5411295890808105
    8. ' (' → logprob: -4.7911295890808105
    9. '<|end|>' → logprob: -4.7911295890808105
    10. ' ,' → logprob: -5.0411295890808105

Token 404: ' n' (ID: 297)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.5353177189826965
    2. 'pairs' → logprob: -0.9103177189826965
    3. 'n' → logprob: -5.035317897796631
    4. 'range' → logprob: -6.160317897796631
    5. ' range' → logprob: -6.535317897796631
    6. ' n' → logprob: -7.535317897796631
    7. 'the' → logprob: -7.660317897796631
    8. ' the' → logprob: -8.160317420959473
    9. '<|end|>' → logprob: -8.285317420959473
    10. 'each' → logprob: -9.035317420959473

Token 405: ' pairs' (ID: 24702)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8178080320358276
    2. ' pairs' → logprob: -1.3178080320358276
    3. ' _' → logprob: -1.8178080320358276
    4. '_pairs' → logprob: -2.442808151245117
    5. 'pairs' → logprob: -4.067808151245117
    6. ' ' → logprob: -4.192808151245117
    7. ')' → logprob: -5.317808151245117
    8. '   ' → logprob: -7.192808151245117
    9. '!' → logprob: -7.567808151245117
    10. ',' → logprob: -8.067808151245117

Token 406: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 407: '   ' (ID: 271)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1923892498016357
    2. ',' → logprob: -1.3173892498016357
    3. ' from' → logprob: -1.4423892498016357
    4. '   ' → logprob: -1.9423892498016357
    5. ' for' → logprob: -4.317389488220215
    6. ' and' → logprob: -4.692389488220215
    7. 'import' → logprob: -5.317389488220215
    8. ' (' → logprob: -5.567389488220215
    9. ' ,' → logprob: -5.692389488220215
    10. ' ' → logprob: -6.192389488220215

Token 408: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.48875030875205994
    2. ' from' → logprob: -1.8637503385543823
    3. '   ' → logprob: -2.2387502193450928
    4. ',' → logprob: -2.7387502193450928
    5. ' for' → logprob: -4.238750457763672
    6. ' and' → logprob: -4.238750457763672
    7. 'for' → logprob: -4.988750457763672
    8. '#' (adapté à ' #') → logprob: -5.113750457763672
    9. 'import' → logprob: -5.613750457763672
    10. ' ' → logprob: -5.738750457763672

Token 409: ' (' (ID: 350)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0725984573364258
    2. ' from' → logprob: -1.4475984573364258
    3. ',' → logprob: -1.8225984573364258
    4. ' for' → logprob: -2.447598457336426
    5. ' ' → logprob: -3.322598457336426
    6. '<|end|>' → logprob: -3.572598457336426
    7. ' and' → logprob: -4.072598457336426
    8. '   ' → logprob: -4.322598457336426
    9. '#' → logprob: -4.447598457336426
    10. 'for' → logprob: -4.447598457336426

Token 410: 'each' (ID: 21309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5414837002754211
    2. ' ' → logprob: -1.7914836406707764
    3. '0' → logprob: -2.1664836406707764
    4. ' )' → logprob: -2.4164836406707764
    5. 'd' → logprob: -4.4164838790893555
    6. '9' → logprob: -4.4164838790893555
    7. ' d' → logprob: -5.0414838790893555
    8. ' digits' → logprob: -5.4164838790893555
    9. ' range' → logprob: -6.2914838790893555
    10. '   ' → logprob: -6.4164838790893555

Token 411: ' digit' (ID: 19181)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.6344287395477295
    2. '_' → logprob: -1.5094287395477295
    3. ' ' → logprob: -1.6344287395477295
    4. ')' → logprob: -4.134428977966309
    5. ' d' → logprob: -4.509428977966309
    6. ' pair' → logprob: -5.134428977966309
    7. ' )' → logprob: -5.384428977966309
    8. ' digit' → logprob: -6.009428977966309
    9. ' space' → logprob: -6.509428977966309
    10. ' i' → logprob: -6.634428977966309

Token 412: ' from' (ID: 591)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.37567582726478577
    2. ')' → logprob: -2.000675916671753
    3. ' in' → logprob: -3.250675916671753
    4. 'from' → logprob: -3.625675916671753
    5. '=' → logprob: -3.750675916671753
    6. ' ranging' → logprob: -3.875675916671753
    7. ' from' → logprob: -4.000675678253174
    8. ' s' → logprob: -4.625675678253174
    9. ' =' → logprob: -4.875675678253174
    10. ' can' → logprob: -4.875675678253174

Token 413: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.22792762517929077
    2. '0' → logprob: -1.6029276847839355
    3. ' ' → logprob: -6.2279276847839355
    4. '10' → logprob: -7.9779276847839355
    5. '[' → logprob: -10.352927207946777
    6. '```' → logprob: -10.352927207946777
    7. 'range' → logprob: -10.352927207946777
    8. '1' → logprob: -10.727927207946777
    9. '
' → logprob: -10.727927207946777
    10. '   ' → logprob: -10.977927207946777

Token 414: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.428911030292511
    2. '9' → logprob: -1.0539109706878662
    3. '10' → logprob: -9.053911209106445
    4. ' ' → logprob: -10.053911209106445
    5. '[' → logprob: -10.553911209106445
    6. 'range' → logprob: -11.928911209106445
    7. '1' → logprob: -12.053911209106445
    8. '```' → logprob: -12.428911209106445
    9. '   ' → logprob: -13.366411209106445
    10. ')' → logprob: -14.241411209106445

Token 415: '..' (ID: 485)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.11596300452947617
    2. 'to' → logprob: -2.6159629821777344
    3. ',' → logprob: -3.8659629821777344
    4. ')' → logprob: -4.740962982177734
    5. ' ' → logprob: -5.865962982177734
    6. '   ' → logprob: -6.865962982177734
    7. '<|end|>' → logprob: -6.865962982177734
    8. '-' → logprob: -7.865962982177734
    9. '	to' → logprob: -8.365962982177734
    10. '
' → logprob: -8.865962982177734

Token 416: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.20603168499656e-05
    2. ' ' → logprob: -9.750061988830566
    3. '
' → logprob: -13.500061988830566
    4. '1' → logprob: -14.375061988830566
    5. '```' → logprob: -14.375061988830566
    6. ',' → logprob: -15.000061988830566
    7. '10' → logprob: -15.375061988830566
    8. ')' → logprob: -15.500061988830566
    9. '   ' → logprob: -16.000062942504883
    10. '0' → logprob: -17.500062942504883

Token 417: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0153802540153265
    2. ',' → logprob: -5.140380382537842
    3. ' for' → logprob: -6.015380382537842
    4. '):' → logprob: -6.140380382537842
    5. '),' → logprob: -6.390380382537842
    6. '):
' → logprob: -6.515380382537842
    7. ' )' → logprob: -7.515380382537842
    8. 'for' → logprob: -7.765380382537842
    9. ' to' → logprob: -8.890379905700684
    10. ').' → logprob: -8.890379905700684

Token 418: ' but' (ID: 889)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1967010200023651
    2. '<|end|>' → logprob: -2.5717010498046875
    3. ' but' → logprob: -3.3217010498046875
    4. ' #' → logprob: -3.8217010498046875
    5. ' and' → logprob: -4.3217010498046875
    6. '   ' → logprob: -4.4467010498046875
    7. ' ' → logprob: -5.4467010498046875
    8. '
' → logprob: -6.0717010498046875
    9. '<|end|>' → logprob: -6.0717010498046875
    10. 'and' → logprob: -6.6967010498046875

Token 419: ' that's' (ID: 10954)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0404372215270996
    2. ' given' → logprob: -1.5404372215270996
    3. '#' → logprob: -1.6654372215270996
    4. 'the' → logprob: -1.9154372215270996
    5. ' it's' → logprob: -3.7904372215270996
    6. 'given' → logprob: -4.4154372215271
    7. ' due' → logprob: -4.5404372215271
    8. 'import' → logprob: -5.1654372215271
    9. ' that' → logprob: -5.2904372215271
    10. ' #' → logprob: -5.2904372215271

Token 420: ' ' (ID: 220)
  Prédit: ' too'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' too' → logprob: -0.7934942841529846
    2. ' computational' → logprob: -1.0434942245483398
    3. ' not' → logprob: -2.66849422454834
    4. 'not' → logprob: -3.54349422454834
    5. 'too' → logprob: -3.54349422454834
    6. ' infe' → logprob: -4.04349422454834
    7. ' exponential' → logprob: -4.29349422454834
    8. 'ex' → logprob: -4.54349422454834
    9. ' impr' → logprob: -5.04349422454834
    10. ' very' → logprob: -5.41849422454834

Token 421: '10' (ID: 702)
  Prédit: 'too'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'too' → logprob: -0.7185512185096741
    2. '10' → logprob: -1.2185511589050293
    3. ' too' → logprob: -2.4685511589050293
    4. '9' → logprob: -2.4685511589050293
    5. ' ' → logprob: -4.343551158905029
    6. 'ex' → logprob: -4.468551158905029
    7. '   ' → logprob: -5.843551158905029
    8. ' computational' → logprob: -5.843551158905029
    9. '
' → logprob: -6.343551158905029
    10. 'com' → logprob: -6.468551158905029

Token 422: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.037631940096616745
    2. ' **' → logprob: -3.4126319885253906
    3. '^' → logprob: -5.537631988525391
    4. '0' → logprob: -10.78763198852539
    5. '000' → logprob: -11.91263198852539
    6. '^{' → logprob: -12.41263198852539
    7. '9' → logprob: -12.91263198852539
    8. '
' → logprob: -13.16263198852539
    9. '*' → logprob: -13.41263198852539
    10. '\xe2\x81' → logprob: -13.66263198852539

Token 423: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.050155702978372574
    2. '9' → logprob: -3.1751556396484375
    3. ' n' → logprob: -5.0501556396484375
    4. '0' → logprob: -8.675155639648438
    5. '(n' → logprob: -8.675155639648438
    6. '
' → logprob: -9.175155639648438
    7. '(' → logprob: -9.425155639648438
    8. '10' → logprob: -10.050155639648438
    9. '```' → logprob: -10.550155639648438
    10. ' ' → logprob: -11.300155639648438

Token 424: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 425: ' too' (ID: 3101)
  Prédit: ' which'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' which' → logprob: -0.11522781103849411
    2. ' so' → logprob: -2.740227699279785
    3. 'which' → logprob: -3.615227699279785
    4. '#' → logprob: -4.490227699279785
    5. ' and' → logprob: -6.740227699279785
    6. '   ' → logprob: -6.865227699279785
    7. ' not' → logprob: -6.990227699279785
    8. ' ' → logprob: -7.490227699279785
    9. ' #' → logprob: -7.615227699279785
    10. ' 
' → logprob: -7.865227699279785

Token 426: ' large' (ID: 4410)
  Prédit: ' large'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' large' → logprob: -0.3200591206550598
    2. ' much' → logprob: -2.570059061050415
    3. '
' → logprob: -2.945059061050415
    4. '_' → logprob: -3.320059061050415
    5. ' big' → logprob: -3.695059061050415
    6. ' many' → logprob: -4.570059299468994
    7. ' ' → logprob: -4.570059299468994
    8. ' 
' → logprob: -4.695059299468994
    9. '\n' → logprob: -4.695059299468994
    10. ' slow' → logprob: -4.695059299468994

Token 427: ' when' (ID: 1261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7728412747383118
    2. ' for' → logprob: -1.522841215133667
    3. '<|end|>' → logprob: -1.647841215133667
    4. '.' → logprob: -3.272841215133667
    5. ',' → logprob: -3.647841215133667
    6. 'for' → logprob: -4.147841453552246
    7. '<|end|>' → logprob: -4.397841453552246
    8. ')' → logprob: -4.522841453552246
    9. '
' → logprob: -4.897841453552246
    10. ' ' → logprob: -5.522841453552246

Token 428: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5759475827217102
    2. 'n' → logprob: -0.8259475827217102
    3. '	n' → logprob: -12.825947761535645
    4. '<|end|>' → logprob: -13.325947761535645
    5. '<|end|>' → logprob: -13.825947761535645
    6. '
' → logprob: -14.075947761535645
    7. '   ' → logprob: -14.325947761535645
    8. ' ' → logprob: -14.825947761535645
    9. ')n' → logprob: -14.825947761535645
    10. ' ' → logprob: -16.075946807861328

Token 429: '=' (ID: 28)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.34981071949005127
    2. '>' → logprob: -1.2248107194900513
    3. ' >=' → logprob: -6.974810600280762
    4. ' <=' → logprob: -8.974810600280762
    5. '>=' → logprob: -8.974810600280762
    6. ' is' → logprob: -9.724810600280762
    7. '<=' → logprob: -10.724810600280762
    8. ' <' → logprob: -10.724810600280762
    9. ' >
' → logprob: -11.599810600280762
    10. '```' → logprob: -11.724810600280762

Token 430: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0245590209960938
    2. '20' → logprob: -1.1495590209960938
    3. '9' → logprob: -2.2745590209960938
    4. '100' → logprob: -2.3995590209960938
    5. '50' → logprob: -2.8995590209960938
    6. '15' → logprob: -3.8995590209960938
    7. ' ' → logprob: -4.399559020996094
    8. '5' → logprob: -4.649559020996094
    9. '6' → logprob: -5.149559020996094
    10. '30' → logprob: -5.274559020996094

Token 431: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0978671982884407
    2. '<|end|>' → logprob: -3.722867250442505
    3. ',' → logprob: -3.972867250442505
    4. '#' → logprob: -4.222867012023926
    5. ')' → logprob: -4.972867012023926
    6. '.' → logprob: -5.097867012023926
    7. ' ' → logprob: -5.222867012023926
    8. '
' → logprob: -5.597867012023926
    9. '<|end|>' → logprob: -6.097867012023926
    10. '    
' → logprob: -6.347867012023926

Token 432: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004205663222819567
    2. '    
' → logprob: -6.629205703735352
    3. ' ' → logprob: -6.879205703735352
    4. '    ' → logprob: -8.004205703735352
    5. '#' → logprob: -8.629205703735352
    6. '  
' → logprob: -8.629205703735352
    7. '\' → logprob: -8.754205703735352
    8. ',' → logprob: -8.754205703735352
    9. '
' → logprob: -8.879205703735352
    10. '_' → logprob: -9.254205703735352

Token 433: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026474790647625923
    2. '#' → logprob: -7.127647399902344
    3. '
' → logprob: -7.252647399902344
    4. '    
' → logprob: -7.502647399902344
    5. 'def' → logprob: -8.627647399902344
    6. ' ' → logprob: -9.377647399902344
    7. ' #' → logprob: -9.752647399902344
    8. '```' → logprob: -9.877647399902344
    9. 'import' → logprob: -10.502647399902344
    10. '  
' → logprob: -10.502647399902344

Token 434: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002611686708405614
    2. '#' → logprob: -6.0026116371154785
    3. '    
' → logprob: -9.377612113952637
    4. '
' → logprob: -10.627612113952637
    5. '```' → logprob: -11.502612113952637
    6. 'import' → logprob: -12.627612113952637
    7. 'from' → logprob: -12.877612113952637
    8. ' #' → logprob: -13.752612113952637
    9. 'Let's' → logprob: -13.877612113952637
    10. 'def' → logprob: -13.877612113952637

Token 435: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5251264572143555
    2. '#' (adapté à ' #') → logprob: -0.9001264572143555
    3. ' #' → logprob: -6.7751264572143555
    4. '
' → logprob: -7.5251264572143555
    5. '```' → logprob: -9.650126457214355
    6. '    
' → logprob: -9.900126457214355
    7. 'for' → logprob: -10.150126457214355
    8. 'return' → logprob: -10.275126457214355
    9. 'import' → logprob: -10.525126457214355
    10. ' for' → logprob: -10.775126457214355

Token 436: ' So' (ID: 2632)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09289757907390594
    2. ' #' → logprob: -2.842897653579712
    3. '   ' → logprob: -4.467897415161133
    4. ' return' → logprob: -5.842897415161133
    5. ' if' → logprob: -5.967897415161133
    6. 'from' → logprob: -6.092897415161133
    7. 'return' → logprob: -6.217897415161133
    8. ' for' → logprob: -6.342897415161133
    9. ' from' → logprob: -6.592897415161133
    10. 'def' → logprob: -6.592897415161133

Token 437: ' we' (ID: 581)
  Prédit: ' we'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.7954516410827637
    2. '   ' → logprob: -1.0454516410827637
    3. 'def' → logprob: -2.9204516410827637
    4. '    ' → logprob: -3.1704516410827637
    5. ' for' → logprob: -3.6704516410827637
    6. ' #' → logprob: -4.045451641082764
    7. ' def' → logprob: -4.170451641082764
    8. ' ' → logprob: -4.670451641082764
    9. ' let's' → logprob: -4.920451641082764
    10. '#' → logprob: -5.545451641082764

Token 438: ' use' (ID: 1199)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.13519656658172607
    2. 'can' → logprob: -3.5101966857910156
    3. ' will' → logprob: -3.8851966857910156
    4. ' should' → logprob: -4.010196685791016
    5. ' try' → logprob: -4.635196685791016
    6. ''ll' → logprob: -4.635196685791016
    7. ' need' → logprob: -4.760196685791016
    8. 'def' → logprob: -4.760196685791016
    9. ' #' → logprob: -5.760196685791016
    10. '   ' → logprob: -6.135196685791016

Token 439: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7071464657783508
    2. 'a' → logprob: -0.8321464657783508
    3. ' back' → logprob: -3.332146406173706
    4. ' dynamic' → logprob: -3.707146406173706
    5. ' greedy' → logprob: -5.457146644592285
    6. 'back' → logprob: -5.582146644592285
    7. 'dynamic' → logprob: -7.332146644592285
    8. ' heuristic' → logprob: -7.332146644592285
    9. ' the' → logprob: -7.457146644592285
    10. ' an' → logprob: -7.957146644592285

Token 440: ' heuristic' (ID: 146226)
  Prédit: 'gre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gre' → logprob: -0.45295295119285583
    2. 'back' → logprob: -1.5779529809951782
    3. ' greedy' → logprob: -2.3279528617858887
    4. ' heuristic' → logprob: -3.4529528617858887
    5. ' back' → logprob: -3.9529528617858887
    6. 'heur' → logprob: -5.452952861785889
    7. 'digit' → logprob: -6.702952861785889
    8. 'dfs' → logprob: -7.452952861785889
    9. 'dynamic' → logprob: -7.452952861785889
    10. 'b' → logprob: -7.577952861785889

Token 441: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7725258469581604
    2. ':' → logprob: -1.0225257873535156
    3. 'def' → logprob: -2.6475257873535156
    4. ' ' → logprob: -3.2725257873535156
    5. '#' → logprob: -4.397525787353516
    6. ' for' → logprob: -4.522525787353516
    7. '
' → logprob: -4.647525787353516
    8. ' :' → logprob: -4.897525787353516
    9. '_' → logprob: -5.022525787353516
    10. '9' → logprob: -5.147525787353516

Token 442: ' 
' (ID: 793)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3748255968093872
    2. '   ' → logprob: -2.1248254776000977
    3. ' digits' → logprob: -2.9998254776000977
    4. ' digit' → logprob: -3.6248254776000977
    5. 'for' → logprob: -3.7498254776000977
    6. ' best' → logprob: -3.7498254776000977
    7. ' assigned' → logprob: -4.124825477600098
    8. 'digit' → logprob: -4.499825477600098
    9. 'digits' → logprob: -4.749825477600098
    10. '
' → logprob: -4.874825477600098

Token 443: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007092170417308807
    2. ' for' → logprob: -7.875709056854248
    3. 'for' → logprob: -8.875709533691406
    4. '#' → logprob: -9.750709533691406
    5. '    ' → logprob: -10.125709533691406
    6. '    
' → logprob: -10.375709533691406
    7. '
' → logprob: -10.750709533691406
    8. ' ' → logprob: -11.375709533691406
    9. ' #' → logprob: -11.625709533691406
    10. '  ' → logprob: -12.000709533691406

Token 444: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01185735035687685
    2. '#' (adapté à ' #') → logprob: -4.886857509613037
    3. ' #' → logprob: -6.261857509613037
    4. ' for' → logprob: -6.761857509613037
    5. 'for' → logprob: -7.261857509613037
    6. '
' → logprob: -8.761857032775879
    7. ' ' → logprob: -9.136857032775879
    8. '    ' → logprob: -9.511857032775879
    9. '    
' → logprob: -9.511857032775879
    10. '  ' → logprob: -10.386857032775879

Token 445: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5497592091560364
    2. ' for' → logprob: -1.0497591495513916
    3. 'for' → logprob: -3.5497591495513916
    4. ' #' → logprob: -3.6747591495513916
    5. '    ' → logprob: -5.424759387969971
    6. ' try' → logprob: -5.424759387969971
    7. ' ' → logprob: -5.924759387969971
    8. '#' → logprob: -6.174759387969971
    9. '
' → logprob: -7.174759387969971
    10. ' Try' → logprob: -7.174759387969971

Token 446: ' -' (ID: 533)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4078439772129059
    2. 'for' → logprob: -1.6578439474105835
    3. ' try' → logprob: -3.032844066619873
    4. '   ' → logprob: -3.282844066619873
    5. ' Try' → logprob: -4.032844066619873
    6. ' #' → logprob: -4.157844066619873
    7. 'Try' → logprob: -4.782844066619873
    8. '#' → logprob: -5.782844066619873
    9. ' For' → logprob: -5.782844066619873
    10. 'Use' → logprob: -6.907844066619873

Token 447: ' Try' (ID: 14720)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23231175541877747
    2. 'for' → logprob: -2.232311725616455
    3. ' Try' → logprob: -2.732311725616455
    4. 'Try' → logprob: -4.232311725616455
    5. ' try' → logprob: -4.357311725616455
    6. ' For' → logprob: -5.482311725616455
    7. 'For' → logprob: -7.357311725616455
    8. 'Assign' → logprob: -7.857311725616455
    9. ' Assign' → logprob: -7.982311725616455
    10. 'try' → logprob: -8.357312202453613

Token 448: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.48940321803092957
    2. 'digits' → logprob: -0.989403247833252
    3. ' all' → logprob: -4.864403247833252
    4. 'd' → logprob: -5.739403247833252
    5. ' d' → logprob: -6.614403247833252
    6. ' assigning' → logprob: -7.489403247833252
    7. ' for' → logprob: -7.739403247833252
    8. '   ' → logprob: -7.989403247833252
    9. ' to' → logprob: -8.489402770996094
    10. 'digit' → logprob: -8.489402770996094

Token 449: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.7430773377418518
    2. ' =' → logprob: -1.493077278137207
    3. 'from' → logprob: -1.743077278137207
    4. '=' → logprob: -2.243077278137207
    5. ' ' → logprob: -4.118077278137207
    6. 's' → logprob: -7.368077278137207
    7. ' for' → logprob: -7.868077278137207
    8. '9' → logprob: -8.243077278137207
    9. ' s' → logprob: -8.493077278137207
    10. '   ' → logprob: -8.618077278137207

Token 450: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.008618000894784927
    2. ' ' → logprob: -4.758617877960205
    3. '
' → logprob: -14.633618354797363
    4. '10' → logprob: -14.633618354797363
    5. '   ' → logprob: -14.946118354797363
    6. '```' → logprob: -15.133618354797363
    7. ')' → logprob: -15.446118354797363
    8. '1' → logprob: -15.446118354797363
    9. '[' → logprob: -15.446118354797363
    10. ' ' → logprob: -15.883618354797363

Token 451: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00014740281039848924
    2. ' ' → logprob: -8.875147819519043
    3. '[' → logprob: -12.625147819519043
    4. '   ' → logprob: -13.750147819519043
    5. '
' → logprob: -13.875147819519043
    6. '0' → logprob: -14.000147819519043
    7. '  ' → logprob: -15.500147819519043
    8. '```' → logprob: -15.625147819519043
    9. '[
' → logprob: -16.062646865844727
    10. ' [' → logprob: -16.250146865844727

Token 452: ' down' (ID: 1917)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6299628615379333
    2. ' down' → logprob: -0.8799628615379333
    3. 'down' → logprob: -4.129962921142578
    4. ' ' → logprob: -4.254962921142578
    5. 'to' → logprob: -4.254962921142578
    6. '-' → logprob: -5.754962921142578
    7. ' for' → logprob: -6.754962921142578
    8. ' -' → logprob: -6.879962921142578
    9. ' dow' → logprob: -7.379962921142578
    10. 'for' → logprob: -7.629962921142578

Token 453: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.24460428953170776
    2. 'to' → logprob: -2.2446043491363525
    3. '   ' → logprob: -2.4946043491363525
    4. 'wards' → logprob: -4.119604110717773
    5. ' ' → logprob: -5.744604110717773
    6. '       ' → logprob: -5.869604110717773
    7. '9' → logprob: -6.619604110717773
    8. '0' → logprob: -6.619604110717773
    9. 'ward' → logprob: -6.744604110717773
    10. 'from' → logprob: -8.119604110717773

Token 454: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34884265065193176
    2. ' ' → logprob: -1.2238426208496094
    3. '1' → logprob: -8.34884262084961
    4. '9' → logprob: -9.22384262084961
    5. '10' → logprob: -10.34884262084961
    6. '<|end|>' → logprob: -11.53634262084961
    7. ')' → logprob: -11.78634262084961
    8. '8' → logprob: -13.09884262084961
    9. '```' → logprob: -13.84884262084961
    10. '
' → logprob: -13.91134262084961

Token 455: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.125123977661133
    3. '1' → logprob: -11.875123977661133
    4. '```' → logprob: -12.750123977661133
    5. '9' → logprob: -13.250123977661133
    6. '
' → logprob: -13.500123977661133
    7. ')' → logprob: -15.375123977661133
    8. '10' → logprob: -15.875123977661133
    9. 'd' → logprob: -16.000123977661133
    10. 'c' → logprob: -16.250123977661133

Token 456: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6846809387207031
    2. '   ' → logprob: -0.8096809387207031
    3. 'for' → logprob: -3.684680938720703
    4. ':' → logprob: -4.059680938720703
    5. ',' → logprob: -5.809680938720703
    6. '
' → logprob: -6.684680938720703
    7. ' ' → logprob: -6.684680938720703
    8. ')' → logprob: -7.809680938720703
    9. '	for' → logprob: -7.809680938720703
    10. ' to' → logprob: -8.184680938720703

Token 457: ' all' (ID: 722)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.4179307520389557
    2. ' each' → logprob: -1.2929307222366333
    3. 'pairs' → logprob: -3.667930841445923
    4. ' pairs' → logprob: -4.417930603027344
    5. 'i' → logprob: -5.167930603027344
    6. 'pair' → logprob: -5.167930603027344
    7. 'd' → logprob: -5.667930603027344
    8. 'the' → logprob: -5.792930603027344
    9. ' i' → logprob: -5.917930603027344
    10. ' the' → logprob: -6.167930603027344

Token 458: ' pairs' (ID: 24702)
  Prédit: ' pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.23401561379432678
    2. 'pairs' → logprob: -1.6090155839920044
    3. ' i' → logprob: -5.984015464782715
    4. '_pairs' → logprob: -6.109015464782715
    5. '_' → logprob: -6.859015464782715
    6. 'i' → logprob: -7.609015464782715
    7. ' ' → logprob: -8.234015464782715
    8. ' digits' → logprob: -8.234015464782715
    9. 'digits' → logprob: -8.234015464782715
    10. ' _' → logprob: -8.359015464782715

Token 459: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.580102801322937
    2. ':' → logprob: -1.455102801322937
    3. ' for' → logprob: -2.4551029205322266
    4. 'for' → logprob: -2.9551029205322266
    5. ',' → logprob: -3.9551029205322266
    6. 'def' → logprob: -4.205102920532227
    7. '
' → logprob: -4.830102920532227
    8. ' ' → logprob: -5.205102920532227
    9. ':
' → logprob: -5.330102920532227
    10. '9' → logprob: -6.330102920532227

Token 460: 'same' (ID: 48581)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5473902225494385
    2. '   ' → logprob: -2.2973902225494385
    3. '):
' → logprob: -2.4223902225494385
    4. '):' → logprob: -2.6723902225494385
    5. ')
' → logprob: -2.6723902225494385
    6. ' for' → logprob: -2.9223902225494385
    7. ' )' → logprob: -4.797389984130859
    8. 'for' → logprob: -4.922389984130859
    9. ':' → logprob: -5.422389984130859
    10. '),' → logprob: -5.547389984130859

Token 461: ' digit' (ID: 19181)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6419383883476257
    2. '   ' → logprob: -1.7669384479522705
    3. ' for' → logprob: -2.5169384479522705
    4. ' )' → logprob: -2.8919384479522705
    5. 'for' → logprob: -3.5169384479522705
    6. ' digits' → logprob: -3.8919384479522705
    7. ' ' → logprob: -4.141938209533691
    8. 'digits' → logprob: -4.141938209533691
    9. '):' → logprob: -4.516938209533691
    10. 'digit' → logprob: -4.516938209533691

Token 462: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5220738649368286
    2. 's' → logprob: -2.022073745727539
    3. ' for' → logprob: -2.647073745727539
    4. ' )' → logprob: -2.647073745727539
    5. ' assignment' → logprob: -3.147073745727539
    6. ' assignments' → logprob: -3.147073745727539
    7. ' assigned' → logprob: -4.147073745727539
    8. 'for' → logprob: -4.522073745727539
    9. '   ' → logprob: -5.272073745727539
    10. ' ' → logprob: -5.772073745727539

Token 463: ' all' (ID: 722)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.34724143147468567
    2. 'each' → logprob: -1.7222414016723633
    3. ' all' → logprob: -2.8472414016723633
    4. ' pairs' → logprob: -4.097241401672363
    5. ' the' → logprob: -4.847241401672363
    6. 'b' → logprob: -5.222241401672363
    7. 'the' → logprob: -5.222241401672363
    8. ' both' → logprob: -5.347241401672363
    9. 'pairs' → logprob: -5.347241401672363
    10. 'all' → logprob: -6.097241401672363

Token 464: ' pairs' (ID: 24702)
  Prédit: ' pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.09027750790119171
    2. ')' → logprob: -3.3402774333953857
    3. 'pairs' → logprob: -3.9652774333953857
    4. ' )' → logprob: -3.9652774333953857
    5. ' s' → logprob: -5.715277671813965
    6. '_pairs' → logprob: -5.715277671813965
    7. ' ' → logprob: -6.090277671813965
    8. '   ' → logprob: -6.965277671813965
    9. 's' → logprob: -7.090277671813965
    10. ' _' → logprob: -7.215277671813965

Token 465: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.325853556394577
    2. 's' → logprob: -1.4508535861968994
    3. '):' → logprob: -3.3258535861968994
    4. '   ' → logprob: -5.82585334777832
    5. '9' → logprob: -6.95085334777832
    6. '[' → logprob: -7.45085334777832
    7. ')s' → logprob: -7.57585334777832
    8. '),' → logprob: -7.70085334777832
    9. ':' → logprob: -8.07585334777832
    10. '):
' → logprob: -8.07585334777832

Token 466: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48398327827453613
    2. ':' → logprob: -1.3589832782745361
    3. '_' → logprob: -3.608983278274536
    4. '):' → logprob: -4.108983039855957
    5. ')' → logprob: -4.233983039855957
    6. 's' → logprob: -4.358983039855957
    7. ',' → logprob: -4.483983039855957
    8. '[' → logprob: -5.108983039855957
    9. 'for' → logprob: -5.233983039855957
    10. ' for' → logprob: -5.233983039855957

Token 467: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11226934939622879
    2. ':' → logprob: -2.612269401550293
    3. ',' → logprob: -4.362269401550293
    4. ')' → logprob: -5.112269401550293
    5. ' for' → logprob: -5.987269401550293
    6. 'def' → logprob: -6.237269401550293
    7. 'for' → logprob: -6.487269401550293
    8. '
' → logprob: -6.737269401550293
    9. ' ' → logprob: -6.737269401550293
    10. 's' → logprob: -6.987269401550293

Token 468: '    ' (ID: 257)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1778859943151474
    2. 'for' → logprob: -2.9278860092163086
    3. ':' → logprob: -3.0528860092163086
    4. ' for' → logprob: -3.4278860092163086
    5. ')' → logprob: -5.052886009216309
    6. ',' → logprob: -5.302886009216309
    7. ' ' → logprob: -5.552886009216309
    8. '_' → logprob: -5.677886009216309
    9. ' =' → logprob: -6.427886009216309
    10. 'def' → logprob: -6.677886009216309

Token 469: ' Note' (ID: 12225)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44443920254707336
    2. 'for' → logprob: -1.944439172744751
    3. '   ' → logprob: -2.194439172744751
    4. ' for' → logprob: -2.944439172744751
    5. ':
' → logprob: -4.19443941116333
    6. ',' → logprob: -4.31943941116333
    7. ')' → logprob: -4.94443941116333
    8. ' ' → logprob: -5.56943941116333
    9. '):' → logprob: -6.19443941116333
    10. 'd' → logprob: -6.56943941116333

Token 470: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17287613451480865
    2. ':' → logprob: -1.9228761196136475
    3. '    
' → logprob: -5.047876358032227
    4. ')' → logprob: -6.672876358032227
    5. ' :' → logprob: -6.922876358032227
    6. ' for' → logprob: -7.797876358032227
    7. 'def' → logprob: -7.922876358032227
    8. '       ' → logprob: -8.047876358032227
    9. '    ' → logprob: -8.047876358032227
    10. 'for' → logprob: -8.422876358032227

Token 471: ' pairs' (ID: 24702)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18547862768173218
    2. '   ' → logprob: -1.935478687286377
    3. 'for' → logprob: -3.935478687286377
    4. ' pass' → logprob: -6.435478687286377
    5. ' #' → logprob: -6.685478687286377
    6. ' ' → logprob: -7.185478687286377
    7. '#' → logprob: -7.810478687286377
    8. '    ' → logprob: -8.435478210449219
    9. ' n' → logprob: -8.560478210449219
    10. ' if' → logprob: -8.810478210449219

Token 472: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1834203004837036
    2. 's' → logprob: -2.183420181274414
    3. ' for' → logprob: -2.308420181274414
    4. ')' → logprob: -2.558420181274414
    5. ' are' → logprob: -2.558420181274414
    6. '_' → logprob: -2.558420181274414
    7. '=' → logprob: -2.933420181274414
    8. '[' → logprob: -3.058420181274414
    9. ':' → logprob: -3.308420181274414
    10. 'for' → logprob: -3.433420181274414

Token 473: ' have' (ID: 679)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.10038059949874878
    2. ' have' → logprob: -2.6003806591033936
    3. ' vary' → logprob: -4.2253804206848145
    4. ' not' → logprob: -5.8503804206848145
    5. ' also' → logprob: -7.1003804206848145
    6. ' share' → logprob: -7.6003804206848145
    7. ' use' → logprob: -7.6003804206848145
    8. ' only' → logprob: -7.8503804206848145
    9. ' ' → logprob: -8.475380897521973
    10. ' =' → logprob: -8.975380897521973

Token 474: ' different' (ID: 2647)
  Prédit: 'different'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'different' → logprob: -0.4904309809207916
    2. ' different' → logprob: -0.9904309511184692
    3. ' the' → logprob: -4.86543083190918
    4. 'the' → logprob: -5.36543083190918
    5. ' only' → logprob: -6.61543083190918
    6. 'only' → logprob: -7.99043083190918
    7. ' either' → logprob: -7.99043083190918
    8. ' at' → logprob: -8.11543083190918
    9. 'same' → logprob: -8.61543083190918
    10. ' multiple' → logprob: -8.86543083190918

Token 475: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.11273720860481262
    2. 'digits' → logprob: -2.7377371788024902
    3. ' ' → logprob: -3.8627371788024902
    4. 'digit' → logprob: -4.98773717880249
    5. '_digits' → logprob: -5.36273717880249
    6. ' digit' → logprob: -5.73773717880249
    7. '_digit' → logprob: -5.86273717880249
    8. 's' → logprob: -6.73773717880249
    9. 'd' → logprob: -7.61273717880249
    10. ' s' → logprob: -8.237737655639648

Token 476: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21622619032859802
    2. ' for' → logprob: -3.091226100921631
    3. 'for' → logprob: -3.091226100921631
    4. '_' → logprob: -3.591226100921631
    5. 'def' → logprob: -3.591226100921631
    6. '
' → logprob: -4.591226100921631
    7. '<|end|>' → logprob: -4.591226100921631
    8. ' ' → logprob: -5.591226100921631
    9. ':' → logprob: -5.841226100921631
    10. ',' → logprob: -6.091226100921631

Token 477: ' but' (ID: 889)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6968275904655457
    2. ' but' → logprob: -2.1968276500701904
    3. '#' → logprob: -2.3218276500701904
    4. ')' → logprob: -2.4468276500701904
    5. '<|end|>' → logprob: -2.8218276500701904
    6. '   ' → logprob: -3.5718276500701904
    7. ' 
' → logprob: -3.9468276500701904
    8. ' for' → logprob: -3.9468276500701904
    9. '    ' → logprob: -4.071827411651611
    10. ' not' → logprob: -4.821827411651611

Token 478: ' since' (ID: 3630)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.7693378329277039
    2. ' for' → logprob: -1.6443378925323486
    3. ' the' → logprob: -1.8943378925323486
    4. ' given' → logprob: -2.3943378925323486
    5. ' here' → logprob: -3.7693378925323486
    6. ' since' → logprob: -4.2693376541137695
    7. ' due' → logprob: -4.2693376541137695
    8. ' in' → logprob: -4.6443376541137695
    9. 'we' → logprob: -4.6443376541137695
    10. ' let's' → logprob: -5.3943376541137695

Token 479: ' problem' (ID: 4792)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9784114360809326
    2. ' pairs' → logprob: -0.9784114360809326
    3. ' we' → logprob: -2.3534114360809326
    4. 'the' → logprob: -3.1034114360809326
    5. ' n' → logprob: -3.8534114360809326
    6. 'we' → logprob: -4.228411674499512
    7. 'pairs' → logprob: -4.353411674499512
    8. ' each' → logprob: -4.603411674499512
    9. ' code' → logprob: -4.978411674499512
    10. ' it's' → logprob: -5.353411674499512

Token 480: ' allows' (ID: 7927)
  Prédit: ' constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.7743754386901855
    2. ' is' → logprob: -2.0243754386901855
    3. ' wants' → logprob: -2.5243754386901855
    4. ' does' → logprob: -3.0243754386901855
    5. '#' → logprob: -3.2743754386901855
    6. ' cannot' → logprob: -3.8993754386901855
    7. '   ' → logprob: -3.8993754386901855
    8. ' continues' → logprob: -4.0243754386901855
    9. ' states' → logprob: -4.1493754386901855
    10. ' only' → logprob: -4.2743754386901855

Token 481: '
' (ID: 198)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' only' → logprob: -1.6178441047668457
    2. '   ' → logprob: -1.7428441047668457
    3. ' trying' → logprob: -2.1178441047668457
    4. ' assigning' → logprob: -2.2428441047668457
    5. ' them' → logprob: -2.7428441047668457
    6. ' for' → logprob: -3.2428441047668457
    7. ' pairs' → logprob: -3.3678441047668457
    8. ' the' → logprob: -3.3678441047668457
    9. ' digits' → logprob: -3.6178441047668457
    10. ' to' → logprob: -3.8678441047668457

Token 482: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6455376148223877
    2. ' for' → logprob: -1.1455376148223877
    3. ' to' → logprob: -2.1455376148223877
    4. 'for' → logprob: -3.6455376148223877
    5. '    ' → logprob: -6.020537376403809
    6. '       ' → logprob: -6.145537376403809
    7. 'to' → logprob: -6.145537376403809
    8. ' ' → logprob: -6.645537376403809
    9. ',' → logprob: -7.020537376403809
    10. ' only' → logprob: -7.145537376403809

Token 483: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18464070558547974
    2. '#' (adapté à ' #') → logprob: -2.309640645980835
    3. ' #' → logprob: -3.434640645980835
    4. ' for' → logprob: -3.934640645980835
    5. '    ' → logprob: -5.309640884399414
    6. ' ' → logprob: -6.184640884399414
    7. 'for' → logprob: -6.309640884399414
    8. ' to' → logprob: -6.559640884399414
    9. '       ' → logprob: -6.934640884399414
    10. ' each' → logprob: -7.184640884399414

Token 484: '    ' (ID: 257)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42065125703811646
    2. '#' → logprob: -1.7956511974334717
    3. ' #' → logprob: -2.2956511974334717
    4. ' for' → logprob: -3.0456511974334717
    5. '    ' → logprob: -4.670651435852051
    6. ' ' → logprob: -5.545651435852051
    7. ' the' → logprob: -5.670651435852051
    8. ' each' → logprob: -5.795651435852051
    9. '       ' → logprob: -6.545651435852051
    10. 'for' → logprob: -6.795651435852051

Token 485: ' choosing' (ID: 20296)
  Prédit: ' digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' digits' → logprob: -1.8281490802764893
    2. ' assigning' → logprob: -2.3281490802764893
    3. '   ' → logprob: -2.4531490802764893
    4. ' the' → logprob: -2.5781490802764893
    5. ' for' → logprob: -2.7031490802764893
    6. ' trying' → logprob: -2.8281490802764893
    7. ' only' → logprob: -2.9531490802764893
    8. ' we' → logprob: -2.9531490802764893
    9. '#' → logprob: -3.0781490802764893
    10. ' pairs' → logprob: -3.0781490802764893

Token 486: ' any' (ID: 1062)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9694277048110962
    2. ' digits' → logprob: -1.4694277048110962
    3. ' one' → logprob: -2.3444275856018066
    4. ' a' → logprob: -2.4694275856018066
    5. ' all' → logprob: -2.8444275856018066
    6. ' ' → logprob: -3.0944275856018066
    7. ' each' → logprob: -3.3444275856018066
    8. ' for' → logprob: -3.5944275856018066
    9. ' only' → logprob: -4.469427585601807
    10. ' different' → logprob: -4.594427585601807

Token 487: ' digit' (ID: 19181)
  Prédit: ' digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digit' → logprob: -0.3754768371582031
    2. 'digit' → logprob: -2.250476837158203
    3. ' ' → logprob: -2.750476837158203
    4. ' d' → logprob: -3.250476837158203
    5. 'd' → logprob: -3.375476837158203
    6. '_digit' → logprob: -3.500476837158203
    7. '_' → logprob: -4.250476837158203
    8. ' digits' → logprob: -4.250476837158203
    9. '9' → logprob: -5.750476837158203
    10. '<|end|>' → logprob: -6.500476837158203

Token 488: ' per' (ID: 777)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 489: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.015355832874774933
    2. 'pair' → logprob: -4.265356063842773
    3. ' pairs' → logprob: -7.515356063842773
    4. ' space' → logprob: -7.890356063842773
    5. ' ' → logprob: -8.765356063842773
    6. 'space' → logprob: -9.765356063842773
    7. 'pairs' → logprob: -11.015356063842773
    8. '_pair' → logprob: -11.390356063842773
    9. ' paire' → logprob: -11.765356063842773
    10. '_pairs' → logprob: -12.890356063842773

Token 490: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20870740711688995
    2. ' for' → logprob: -2.458707332611084
    3. '   ' → logprob: -2.458707332611084
    4. 'for' → logprob: -5.458707332611084
    5. ' ,' → logprob: -5.958707332611084
    6. ':' → logprob: -6.083707332611084
    7. '9' → logprob: -6.208707332611084
    8. 's' → logprob: -6.708707332611084
    9. ',
' → logprob: -7.208707332611084
    10. ')' → logprob: -7.333707332611084

Token 491: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5378425717353821
    2. '   ' → logprob: -1.0378425121307373
    3. ' for' → logprob: -3.2878425121307373
    4. ' we' → logprob: -4.662842750549316
    5. ' #' → logprob: -4.787842750549316
    6. 'for' → logprob: -6.037842750549316
    7. ' continue' → logprob: -6.662842750549316
    8. '       ' → logprob: -7.662842750549316
    9. ' ' → logprob: -7.662842750549316
    10. '<|end|>' → logprob: -7.662842750549316

Token 492: ' try' (ID: 2075)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.06895086914300919
    2. ' continue' → logprob: -3.193950891494751
    3. '#' → logprob: -5.318950653076172
    4. ' #' → logprob: -5.318950653076172
    5. ' try' → logprob: -5.318950653076172
    6. ' will' → logprob: -6.443950653076172
    7. ' could' → logprob: -6.443950653076172
    8. ' have' → logprob: -6.568950653076172
    9. ' may' → logprob: -7.068950653076172
    10. ' should' → logprob: -7.318950653076172

Token 493: ' to' (ID: 316)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.9781652688980103
    2. '   ' → logprob: -1.2281652688980103
    3. ' for' → logprob: -1.8531652688980103
    4. ' ' → logprob: -3.2281651496887207
    5. ' digits' → logprob: -3.2281651496887207
    6. ' to' → logprob: -3.6031651496887207
    7. 'digits' → logprob: -3.9781651496887207
    8. ' the' → logprob: -4.603165149688721
    9. ' from' → logprob: -5.353165149688721
    10. '9' → logprob: -5.478165149688721

Token 494: ' maximize' (ID: 44207)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.7304440140724182
    2. ' assign' → logprob: -0.7304440140724182
    3. 'choose' → logprob: -4.730443954467773
    4. ' for' → logprob: -4.980443954467773
    5. 'for' → logprob: -5.480443954467773
    6. ' choose' → logprob: -5.730443954467773
    7. 'generate' → logprob: -5.980443954467773
    8. ' try' → logprob: -5.980443954467773
    9. ' generate' → logprob: -6.230443954467773
    10. ' use' → logprob: -6.980443954467773

Token 495: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5736387372016907
    2. ' for' → logprob: -1.573638677597046
    3. ' digits' → logprob: -2.948638677597046
    4. ' each' → logprob: -3.073638677597046
    5. '_' → logprob: -3.823638677597046
    6. 'digits' → logprob: -3.823638677597046
    7. 'for' → logprob: -4.073638916015625
    8. 'the' → logprob: -4.198638916015625
    9. ')' → logprob: -4.448638916015625
    10. 'd' → logprob: -4.948638916015625

Token 496: ' number' (ID: 2086)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digit' → logprob: -1.1549830436706543
    2. ' ' → logprob: -1.9049830436706543
    3. ' digit' → logprob: -2.0299830436706543
    4. ' digits' → logprob: -2.1549830436706543
    5. 'digits' → logprob: -2.5299830436706543
    6. ' first' → logprob: -3.2799830436706543
    7. ' next' → logprob: -3.7799830436706543
    8. 'd' → logprob: -4.029983043670654
    9. ' d' → logprob: -4.154983043670654
    10. ' assigned' → logprob: -4.279983043670654

Token 497: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1689740419387817
    2. '<|end|>' → logprob: -1.5439740419387817
    3. ' ' → logprob: -2.043973922729492
    4. 's' → logprob: -2.168973922729492
    5. '_' → logprob: -2.793973922729492
    6. ' for' → logprob: -2.793973922729492
    7. ')' → logprob: -4.168973922729492
    8. '[' → logprob: -4.168973922729492
    9. 'for' → logprob: -4.168973922729492
    10. ',' → logprob: -4.668973922729492

Token 498: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005930813029408455
    2. ' for' → logprob: -6.7559309005737305
    3. ' ' → logprob: -7.1309309005737305
    4. '_' → logprob: -7.3809309005737305
    5. 'for' → logprob: -7.3809309005737305
    6. ')' → logprob: -7.5059309005737305
    7. ',' → logprob: -7.8809309005737305
    8. ':' → logprob: -8.38093090057373
    9. '#' → logprob: -8.50593090057373
    10. '    
' → logprob: -8.50593090057373

Token 499: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003623985394369811
    2. '    
' → logprob: -9.125362396240234
    3. '#' → logprob: -9.625362396240234
    4. 'def' → logprob: -10.250362396240234
    5. ' for' → logprob: -10.500362396240234
    6. 'for' → logprob: -10.625362396240234
    7. ',' → logprob: -10.750362396240234
    8. '    ' → logprob: -10.875362396240234
    9. ')' → logprob: -11.375362396240234
    10. '
' → logprob: -11.500362396240234

Token 500: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011236425780225545
    2. ' for' → logprob: -10.750112533569336
    3. 'for' → logprob: -11.000112533569336
    4. '    
' → logprob: -11.250112533569336
    5. '    ' → logprob: -11.375112533569336
    6. '#' → logprob: -11.875112533569336
    7. ' ' → logprob: -11.875112533569336
    8. '       ' → logprob: -12.125112533569336
    9. 'def' → logprob: -12.375112533569336
    10. '```' → logprob: -12.625112533569336

Token 501: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009560576640069485
    2. '#' (adapté à ' #') → logprob: -5.009560585021973
    3. 'for' → logprob: -6.509560585021973
    4. ' for' → logprob: -7.134560585021973
    5. ' #' → logprob: -8.384560585021973
    6. '
' → logprob: -8.634560585021973
    7. '    
' → logprob: -9.509560585021973
    8. 'def' → logprob: -11.009560585021973
    9. '```' → logprob: -11.509560585021973
    10. '    ' → logprob: -11.884560585021973

Token 502: ' However' (ID: 5551)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4507724642753601
    2. ' for' → logprob: -1.8257725238800049
    3. 'for' → logprob: -1.9507725238800049
    4. 'digits' → logprob: -3.825772523880005
    5. '#' → logprob: -4.200772285461426
    6. ' digits' → logprob: -4.950772285461426
    7. ' #' → logprob: -5.700772285461426
    8. 'def' → logprob: -6.200772285461426
    9. ' best' → logprob: -6.825772285461426
    10. 'digit' → logprob: -6.950772285461426

Token 503: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3201189935207367
    2. '   ' → logprob: -1.695119023323059
    3. ':' → logprob: -3.0701189041137695
    4. ' we' → logprob: -4.4451189041137695
    5. ' for' → logprob: -4.8201189041137695
    6. '#' → logprob: -5.0701189041137695
    7. '<|end|>' → logprob: -5.1951189041137695
    8. '<|end|>' → logprob: -6.0701189041137695
    9. ' the' → logprob: -6.3201189041137695
    10. '    ' → logprob: -6.5701189041137695

Token 504: ' problem' (ID: 4792)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25332626700401306
    2. ' we' → logprob: -2.503326177597046
    3. '   ' → logprob: -3.253326177597046
    4. 'for' → logprob: -3.753326177597046
    5. ' ' → logprob: -4.503326416015625
    6. '    ' → logprob: -4.753326416015625
    7. ' ' → logprob: -4.753326416015625
    8. ' indentation' → logprob: -4.753326416015625
    9. ' since' → logprob: -5.003326416015625
    10. ' continue' → logprob: -5.128326416015625

Token 505: ' examples' (ID: 15652)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.160081386566162
    2. '   ' → logprob: -1.535081386566162
    3. '#' → logprob: -1.785081386566162
    4. ' allows' → logprob: -2.785081386566162
    5. ' constraints' → logprob: -2.910081386566162
    6. ':' → logprob: -3.910081386566162
    7. 'def' → logprob: -4.160081386566162
    8. ' wants' → logprob: -4.285081386566162
    9. 'allows' → logprob: -4.410081386566162
    10. ' can' → logprob: -4.535081386566162

Token 506: ' suggest' (ID: 6108)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 507: ' choosing' (ID: 20296)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.11072295159101486
    2. ' the' → logprob: -3.1107230186462402
    3. ' we' → logprob: -3.7357230186462402
    4. ' trying' → logprob: -4.48572301864624
    5. ' pairs' → logprob: -4.48572301864624
    6. 'that' → logprob: -5.36072301864624
    7. ' assigning' → logprob: -5.98572301864624
    8. 'the' → logprob: -6.36072301864624
    9. ' for' → logprob: -6.61072301864624
    10. 'we' → logprob: -7.36072301864624

Token 508: ' all' (ID: 722)
  Prédit: ' digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.5025272965431213
    2. ' the' → logprob: -1.8775272369384766
    3. ' all' → logprob: -2.2525272369384766
    4. 'digits' → logprob: -2.5025272369384766
    5. ' a' → logprob: -4.502527236938477
    6. 'the' → logprob: -4.627527236938477
    7. ' pairs' → logprob: -5.127527236938477
    8. ' different' → logprob: -5.252527236938477
    9. ' each' → logprob: -5.752527236938477
    10. 'all' → logprob: -5.877527236938477

Token 509: ' pairs' (ID: 24702)
  Prédit: ' pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.6191631555557251
    2. ' ' → logprob: -1.369163155555725
    3. '9' → logprob: -1.994163155555725
    4. ' digits' → logprob: -3.4941630363464355
    5. 'pairs' → logprob: -3.8691630363464355
    6. '_' → logprob: -4.8691630363464355
    7. 'digits' → logprob: -5.3691630363464355
    8. ' assigned' → logprob: -6.3691630363464355
    9. '   ' → logprob: -6.4941630363464355
    10. ' the' → logprob: -6.9941630363464355

Token 510: ' the' (ID: 290)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.881816565990448
    2. '_' → logprob: -1.0068166255950928
    3. '=' → logprob: -3.0068166255950928
    4. '   ' → logprob: -3.5068166255950928
    5. ' to' → logprob: -4.006816387176514
    6. ' with' → logprob: -4.131816387176514
    7. ' as' → logprob: -4.381816387176514
    8. '```' → logprob: -4.381816387176514
    9. ''' → logprob: -4.631816387176514
    10. ' _' → logprob: -4.756816387176514

Token 511: ' same' (ID: 2684)
  Prédit: ' same'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' same' → logprob: -0.20598763227462769
    2. 'same' → logprob: -1.7059876918792725
    3. '9' → logprob: -5.455987453460693
    4. ' ' → logprob: -9.330987930297852
    5. '_same' → logprob: -10.080987930297852
    6. 'ms' → logprob: -10.455987930297852
    7. 's' → logprob: -10.580987930297852
    8. '```' → logprob: -11.080987930297852
    9. ' digits' → logprob: -11.330987930297852
    10. ' ' → logprob: -11.705987930297852

Token 512: ' digit' (ID: 19181)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2665120363235474
    2. '_' → logprob: -1.3915120363235474
    3. 'digit' → logprob: -2.016511917114258
    4. 'def' → logprob: -2.516511917114258
    5. 'digits' → logprob: -3.266511917114258
    6. '_digit' → logprob: -3.266511917114258
    7. ' digits' → logprob: -3.391511917114258
    8. ' for' → logprob: -3.516511917114258
    9. ' digit' → logprob: -3.641511917114258
    10. ' _' → logprob: -4.141511917114258

Token 513: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1658160388469696
    2. ':' → logprob: -2.415816068649292
    3. ' for' → logprob: -4.040815830230713
    4. 'for' → logprob: -4.540815830230713
    5. '9' → logprob: -5.040815830230713
    6. 'def' → logprob: -5.290815830230713
    7. '<|end|>' → logprob: -5.540815830230713
    8. ')' → logprob: -5.665815830230713
    9. ',' → logprob: -6.040815830230713
    10. '_' → logprob: -6.415815830230713

Token 514: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3949371874332428
    2. ' for' → logprob: -1.6449371576309204
    3. ' is' → logprob: -3.26993727684021
    4. 's' → logprob: -3.76993727684021
    5. 'for' → logprob: -4.019937038421631
    6. '.' → logprob: -4.644937038421631
    7. '#' → logprob: -5.019937038421631
    8. ' s' → logprob: -5.394937038421631
    9. ',' → logprob: -5.644937038421631
    10. ' ' → logprob: -5.769937038421631

Token 515: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24562092125415802
    2. '.' → logprob: -3.2456209659576416
    3. ' for' → logprob: -3.2456209659576416
    4. '   ' → logprob: -3.6206209659576416
    5. ' s' → logprob: -3.7456209659576416
    6. ')' → logprob: -3.9956209659576416
    7. 'for' → logprob: -4.2456207275390625
    8. '<|end|>' → logprob: -4.3706207275390625
    9. ',' → logprob: -4.8706207275390625
    10. ' is' → logprob: -4.9956207275390625

Token 516: ' doesn't' (ID: 8740)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2074414491653442
    2. '   ' → logprob: -1.5824414491653442
    3. '_' → logprob: -2.3324413299560547
    4. ' for' → logprob: -2.3324413299560547
    5. ':' → logprob: -2.4574413299560547
    6. 's' → logprob: -2.7074413299560547
    7. 'for' → logprob: -2.9574413299560547
    8. ' ' → logprob: -3.5824413299560547
    9. 'def' → logprob: -4.332441329956055
    10. '=' → logprob: -4.332441329956055

Token 517: ' always' (ID: 3324)
  Prédit: ' work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' work' → logprob: -0.8489812016487122
    2. 'work' → logprob: -0.9739812016487122
    3. ' guarantee' → logprob: -2.3489811420440674
    4. 'always' → logprob: -3.2239811420440674
    5. ' always' → logprob: -3.3489811420440674
    6. ' hold' → logprob: -5.7239813804626465
    7. ' seem' → logprob: -5.8489813804626465
    8. 'hold' → logprob: -6.0989813804626465
    9. 'make' → logprob: -6.2239813804626465
    10. 'necessarily' → logprob: -6.2239813804626465

Token 518: ' work' (ID: 1101)
  Prédit: ' work'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' work' → logprob: -0.23560287058353424
    2. 'work' → logprob: -1.610602855682373
    3. ' produce' → logprob: -6.235602855682373
    4. ' guarantee' → logprob: -6.235602855682373
    5. 'maximize' → logprob: -6.735602855682373
    6. ' hold' → logprob: -6.860602855682373
    7. 'yield' → logprob: -6.985602855682373
    8. ' yield' → logprob: -7.485602855682373
    9. 'produce' → logprob: -7.485602855682373
    10. 'hold' → logprob: -7.735602855682373

Token 519: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1945611834526062
    2. 'def' → logprob: -2.569561243057251
    3. '
' → logprob: -3.569561243057251
    4. ':' → logprob: -4.194561004638672
    5. ' for' → logprob: -4.569561004638672
    6. 'for' → logprob: -4.819561004638672
    7. '#' → logprob: -4.944561004638672
    8. '_' → logprob: -4.944561004638672
    9. ' ' → logprob: -4.944561004638672
    10. '<|end|>' → logprob: -5.694561004638672

Token 520: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02543044649064541
    2. ' ' → logprob: -5.025430679321289
    3. '_' → logprob: -5.525430679321289
    4. ' for' → logprob: -5.900430679321289
    5. 'for' → logprob: -6.025430679321289
    6. '9' → logprob: -6.775430679321289
    7. ' 
' → logprob: -6.775430679321289
    8. 'd' → logprob: -6.900430679321289
    9. ',' → logprob: -7.150430679321289
    10. 'def' → logprob: -7.150430679321289

Token 521: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.40743815898895264
    2. '   ' → logprob: -2.157438278198242
    3. ' continue' → logprob: -2.782438278198242
    4. '#' → logprob: -2.907438278198242
    5. 'for' → logprob: -3.032438278198242
    6. ' #' → logprob: -4.282438278198242
    7. ' we' → logprob: -4.407438278198242
    8. 'continue' → logprob: -4.657438278198242
    9. '    ' → logprob: -5.657438278198242
    10. ' return' → logprob: -5.782438278198242

Token 522: ' try' (ID: 2075)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5280367136001587
    2. ' try' → logprob: -1.1530367136001587
    3. ' need' → logprob: -2.778036594390869
    4. ' can' → logprob: -5.028036594390869
    5. ' must' → logprob: -5.028036594390869
    6. ' #' → logprob: -5.153036594390869
    7. 'continue' → logprob: -5.903036594390869
    8. '#' → logprob: -5.903036594390869
    9. ' will' → logprob: -6.653036594390869
    10. ' ' → logprob: -7.028036594390869

Token 523: ' to' (ID: 316)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32945936918258667
    2. 'for' → logprob: -2.0794594287872314
    3. '   ' → logprob: -3.2044594287872314
    4. 'digits' → logprob: -3.5794594287872314
    5. 'from' → logprob: -3.8294594287872314
    6. ' from' → logprob: -4.079459190368652
    7. ' digits' → logprob: -4.454459190368652
    8. 'def' → logprob: -4.829459190368652
    9. 'd' → logprob: -5.204459190368652
    10. ' d' → logprob: -5.704459190368652

Token 524: ' generate' (ID: 10419)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -1.2742278575897217
    2. 'generate' → logprob: -1.8992278575897217
    3. ' for' → logprob: -2.0242278575897217
    4. ' continue' → logprob: -2.5242278575897217
    5. 'assign' → logprob: -2.6492278575897217
    6. ' generate' → logprob: -2.7742278575897217
    7. 'for' → logprob: -3.3992278575897217
    8. ' code' → logprob: -3.6492278575897217
    9. 'try' → logprob: -3.7742278575897217
    10. 'continue' → logprob: -3.8992278575897217

Token 525: ' digits' (ID: 37806)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.8163791298866272
    2. ' all' → logprob: -0.9413791298866272
    3. 'digits' → logprob: -2.8163790702819824
    4. ' digits' → logprob: -4.441379070281982
    5. 'assign' → logprob: -4.566379070281982
    6. ' combinations' → logprob: -4.566379070281982
    7. ' code' → logprob: -4.691379070281982
    8. 'def' → logprob: -4.816379070281982
    9. ' assignments' → logprob: -5.191379070281982
    10. ' next' → logprob: -5.441379070281982

Token 526: ' representing' (ID: 25389)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9993622303009033
    2. 's' → logprob: -1.1243622303009033
    3. '<|end|>' → logprob: -2.6243622303009033
    4. ' for' → logprob: -2.8743622303009033
    5. ' =' → logprob: -3.1243622303009033
    6. '[' → logprob: -3.3743622303009033
    7. ' ' → logprob: -3.7493622303009033
    8. 'for' → logprob: -4.374361991882324
    9. '<|end|>' → logprob: -4.749361991882324
    10. '_for' → logprob: -4.874361991882324

Token 527: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7829976081848145
    2. ' pairs' → logprob: -2.0329976081848145
    3. ' a' → logprob: -2.2829976081848145
    4. 'the' → logprob: -3.0329976081848145
    5. 'pairs' → logprob: -3.0329976081848145
    6. ' each' → logprob: -3.2829976081848145
    7. ' all' → logprob: -3.5329976081848145
    8. ' different' → logprob: -3.5329976081848145
    9. 'a' → logprob: -3.9079976081848145
    10. 'each' → logprob: -4.2829976081848145

Token 528: '
' (ID: 198)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.7034664750099182
    2. ' list' → logprob: -2.3284664154052734
    3. ' combination' → logprob: -2.4534664154052734
    4. ' range' → logprob: -2.9534664154052734
    5. 'n' → logprob: -3.2034664154052734
    6. 'list' → logprob: -3.7034664154052734
    7. ' partial' → logprob: -4.078466415405273
    8. ' sequence' → logprob: -4.203466415405273
    9. 'range' → logprob: -4.203466415405273
    10. 'sequence' → logprob: -4.453466415405273

Token 529: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.6328585147857666
    2. ' list' → logprob: -1.8828585147857666
    3. ' combination' → logprob: -2.6328585147857666
    4. ' single' → logprob: -2.8828585147857666
    5. ' subset' → logprob: -3.0078585147857666
    6. ' full' → logprob: -3.1328585147857666
    7. ' few' → logprob: -3.1328585147857666
    8. ' sequence' → logprob: -3.1328585147857666
    9. ' complete' → logprob: -3.2578585147857666
    10. ' n' → logprob: -3.3828585147857666

Token 530: ' #' (ID: 1069)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.8175951242446899
    2. ' combination' → logprob: -1.44259512424469
    3. 'range' → logprob: -2.5675950050354004
    4. 'll' → logprob: -3.4425950050354004
    5. ' single' → logprob: -3.8175950050354004
    6. 'n' → logprob: -4.1925950050354
    7. ' larger' → logprob: -4.3175950050354
    8. 'different' → logprob: -4.4425950050354
    9. ' different' → logprob: -4.6925950050354
    10. ' new' → logprob: -4.9425950050354

Token 531: ' palindrome' (ID: 160469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2771131992340088
    2. ' sequence' → logprob: -2.027113199234009
    3. ' decreasing' → logprob: -2.902113199234009
    4. 'sequence' → logprob: -2.902113199234009
    5. ' combination' → logprob: -3.027113199234009
    6. ' range' → logprob: -3.277113199234009
    7. ' recursive' → logprob: -3.277113199234009
    8. ' partial' → logprob: -3.527113199234009
    9. 'back' → logprob: -3.652113199234009
    10. ' list' → logprob: -3.777113199234009

Token 532: ' considering' (ID: 17227)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44508519768714905
    2. '   ' → logprob: -1.6950851678848267
    3. '_' → logprob: -3.195085287094116
    4. 'def' → logprob: -3.570085287094116
    5. ',' → logprob: -4.070085048675537
    6. '[' → logprob: -4.320085048675537
    7. 's' → logprob: -4.445085048675537
    8. ' for' → logprob: -4.820085048675537
    9. ' =' → logprob: -5.070085048675537
    10. '_digits' → logprob: -5.320085048675537

Token 533: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.04739421606063843
    2. 'the' → logprob: -3.422394275665283
    3. ' pairs' → logprob: -4.797394275665283
    4. ' each' → logprob: -7.047394275665283
    5. ' digits' → logprob: -7.172394275665283
    6. ' all' → logprob: -7.172394275665283
    7. ' that' → logprob: -7.672394275665283
    8. ' ' → logprob: -7.922394275665283
    9. 'pairs' → logprob: -7.922394275665283
    10. ' n' → logprob: -8.047393798828125

Token 534: ' condition' (ID: 7060)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.5800467133522034
    2. 'pairs' → logprob: -2.4550466537475586
    3. ' constraints' → logprob: -2.9550466537475586
    4. ' symmetry' → logprob: -2.9550466537475586
    5. 'digits' → logprob: -2.9550466537475586
    6. ' digits' → logprob: -3.0800466537475586
    7. ' number' → logprob: -3.4550466537475586
    8. ' remaining' → logprob: -4.330046653747559
    9. ' length' → logprob: -4.455046653747559
    10. ' first' → logprob: -4.580046653747559

Token 535: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08247874677181244
    2. '_' → logprob: -3.5824787616729736
    3. ':' → logprob: -3.9574787616729736
    4. ' ' → logprob: -4.4574785232543945
    5. 'def' → logprob: -4.7074785232543945
    6. ',' → logprob: -6.2074785232543945
    7. ')' → logprob: -6.4574785232543945
    8. '#' → logprob: -6.7074785232543945
    9. ' for' → logprob: -6.8324785232543945
    10. ' =' → logprob: -7.3324785232543945

Token 536: ''s' (ID: 885)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13576540350914001
    2. '_i' → logprob: -2.135765314102173
    3. 'i' → logprob: -5.760765552520752
    4. '_)' → logprob: -6.385765552520752
    5. ')' → logprob: -6.510765552520752
    6. ')_' → logprob: -7.385765552520752
    7. '[i' → logprob: -7.760765552520752
    8. '1' → logprob: -8.510765075683594
    9. 's' → logprob: -8.760765075683594
    10. '[' → logprob: -9.010765075683594

Token 537: ' and' (ID: 326)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007052087690681219
    2. ' _' → logprob: -5.882051944732666
    3. '_i' → logprob: -6.632051944732666
    4. '[' → logprob: -7.007051944732666
    5. 's' → logprob: -7.632051944732666
    6. ' =' → logprob: -8.257052421569824
    7. ',' → logprob: -8.507052421569824
    8. '[i' → logprob: -8.632052421569824
    9. '   ' → logprob: -8.882052421569824
    10. '=' → logprob: -9.382052421569824

Token 538: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.5764790177345276
    2. ' g' → logprob: -0.8264790177345276
    3. ' ' → logprob: -8.451478958129883
    4. '_g' → logprob: -8.951478958129883
    5. '_' → logprob: -9.951478958129883
    6. ' ' → logprob: -10.326478958129883
    7. ''' → logprob: -10.326478958129883
    8. '   ' → logprob: -11.076478958129883
    9. ''g' → logprob: -11.826478958129883
    10. ' _' → logprob: -12.201478958129883

Token 539: ''s' (ID: 885)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.058941882103681564
    2. '_i' → logprob: -3.0589418411254883
    3. '_digits' → logprob: -5.058941841125488
    4. '[i' → logprob: -7.558941841125488
    5. 's' → logprob: -7.558941841125488
    6. ' _' → logprob: -7.933941841125488
    7. '```' → logprob: -8.308941841125488
    8. '_
' → logprob: -8.308941841125488
    9. ')' → logprob: -8.683941841125488
    10. 'digits' → logprob: -8.683941841125488

Token 540: ' correspond' (ID: 11095)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012899132445454597
    2. ':' → logprob: -4.887898921966553
    3. 'def' → logprob: -6.012898921966553
    4. '_' → logprob: -7.262898921966553
    5. ' ' → logprob: -7.387898921966553
    6. '
' → logprob: -8.387899398803711
    7. ' =' → logprob: -8.637899398803711
    8. ',' → logprob: -8.637899398803711
    9. '[' → logprob: -9.387899398803711
    10. '    
' → logprob: -9.512899398803711

Token 541: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1721872091293335
    2. ' =' → logprob: -1.6721872091293335
    3. ' to' → logprob: -2.047187328338623
    4. ')' → logprob: -2.297187328338623
    5. '=' → logprob: -2.297187328338623
    6. 'ing' → logprob: -3.297187328338623
    7. '_' → logprob: -3.797187328338623
    8. '[' → logprob: -4.047187328338623
    9. '[]' → logprob: -4.297187328338623
    10. '_to' → logprob: -4.547187328338623

Token 542: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011320956982672215
    2. '_' → logprob: -4.761321067810059
    3. ' ' → logprob: -6.886321067810059
    4. 'def' → logprob: -7.636321067810059
    5. ')' → logprob: -8.761321067810059
    6. '    ' → logprob: -8.886321067810059
    7. ',' → logprob: -8.886321067810059
    8. ' for' → logprob: -9.136321067810059
    9. '    
' → logprob: -9.136321067810059
    10. '
' → logprob: -9.386321067810059

Token 543: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005589892389252782
    2. '    
' → logprob: -8.375558853149414
    3. ' ' → logprob: -9.625558853149414
    4. '    ' → logprob: -10.125558853149414
    5. '       ' → logprob: -10.375558853149414
    6. '#' → logprob: -10.750558853149414
    7. ')' → logprob: -10.875558853149414
    8. ',' → logprob: -11.125558853149414
    9. '
' → logprob: -11.125558853149414
    10. '  
' → logprob: -11.125558853149414

Token 544: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00048060089466162026
    2. '    
' → logprob: -8.125480651855469
    3. '
' → logprob: -9.625480651855469
    4. '#' → logprob: -10.375480651855469
    5. '    ' → logprob: -10.875480651855469
    6. '       ' → logprob: -11.500480651855469
    7. '```' → logprob: -11.500480651855469
    8. 'def' → logprob: -11.750480651855469
    9. '<|end|>' → logprob: -12.125480651855469
    10. 'import' → logprob: -12.375480651855469

Token 545: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006199907511472702
    2. 'digits' → logprob: -5.631199836730957
    3. '#' (adapté à ' #') → logprob: -6.881199836730957
    4. ' #' → logprob: -8.006199836730957
    5. 'for' → logprob: -8.381199836730957
    6. 'def' → logprob: -8.506199836730957
    7. ' digits' → logprob: -8.631199836730957
    8. '
' → logprob: -8.631199836730957
    9. '    
' → logprob: -8.881199836730957
    10. ' for' → logprob: -9.256199836730957

Token 546: ' We'll' (ID: 46830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2722751498222351
    2. 'digits' → logprob: -1.7722752094268799
    3. '#' → logprob: -3.64727520942688
    4. 'for' → logprob: -4.147274971008301
    5. 'def' → logprob: -4.272274971008301
    6. ' digits' → logprob: -5.772274971008301
    7. 'from' → logprob: -6.022274971008301
    8. ' for' → logprob: -6.147274971008301
    9. ' #' → logprob: -6.647274971008301
    10. '
' → logprob: -7.397274971008301

Token 547: ' try' (ID: 2075)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.066313624382019
    2. ' try' → logprob: -1.441313624382019
    3. '   ' → logprob: -1.816313624382019
    4. 'continue' → logprob: -2.1913137435913086
    5. 'def' → logprob: -2.5663137435913086
    6. ' implement' → logprob: -4.316313743591309
    7. 'try' → logprob: -4.566313743591309
    8. ' def' → logprob: -4.941313743591309
    9. ' for' → logprob: -5.316313743591309
    10. ' indent' → logprob: -5.316313743591309

Token 548: ' to' (ID: 316)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.530320405960083
    2. ' digits' → logprob: -1.280320405960083
    3. ' all' → logprob: -2.905320405960083
    4. '   ' → logprob: -3.655320405960083
    5. ' to' → logprob: -3.905320405960083
    6. ' for' → logprob: -4.530320167541504
    7. 'def' → logprob: -4.905320167541504
    8. 'd' → logprob: -5.905320167541504
    9. ' assigning' → logprob: -6.155320167541504
    10. 'all' → logprob: -6.280320167541504

Token 549: ' assign' (ID: 14975)
  Prédit: ' assign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' assign' → logprob: -1.2003787755966187
    2. 'assign' → logprob: -1.3253787755966187
    3. ' generate' → logprob: -1.9503787755966187
    4. 'generate' → logprob: -2.075378894805908
    5. ' def' → logprob: -3.575378894805908
    6. ' build' → logprob: -3.700378894805908
    7. 'build' → logprob: -4.200378894805908
    8. 'def' → logprob: -4.325378894805908
    9. ' construct' → logprob: -4.575378894805908
    10. ' for' → logprob: -4.700378894805908

Token 550: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.5072323679924011
    2. 'digits' → logprob: -1.007232427597046
    3. 'd' → logprob: -4.382232189178467
    4. ' the' → logprob: -5.007232189178467
    5. ' d' → logprob: -5.632232189178467
    6. ' pairs' → logprob: -6.007232189178467
    7. ' each' → logprob: -6.382232189178467
    8. 'pairs' → logprob: -6.507232189178467
    9. 'digit' → logprob: -7.257232189178467
    10. 'each' → logprob: -7.632232189178467

Token 551: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.771408200263977
    2. ' for' → logprob: -1.521408200263977
    3. ' ' → logprob: -2.2714080810546875
    4. ' to' → logprob: -2.8964080810546875
    5. '_' → logprob: -3.0214080810546875
    6. '   ' → logprob: -3.2714080810546875
    7. 'for' → logprob: -3.6464080810546875
    8. '[' → logprob: -4.0214080810546875
    9. '=' → logprob: -5.1464080810546875
    10. ' _' → logprob: -5.2714080810546875

Token 552: ' high' (ID: 1932)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00045605594641529024
    2. '[' → logprob: -8.000455856323242
    3. ' ' → logprob: -9.125455856323242
    4. ' [' → logprob: -12.625455856323242
    5. '[
' → logprob: -12.750455856323242
    6. '```' → logprob: -12.875455856323242
    7. '0' → logprob: -14.125455856323242
    8. '   ' → logprob: -14.500455856323242
    9. '`' → logprob: -14.750455856323242
    10. '
' → logprob: -15.375455856323242

Token 553: ' to' (ID: 316)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.036468371748924255
    2. 'er' → logprob: -4.161468505859375
    3. '9' → logprob: -4.411468505859375
    4. 'e' → logprob: -5.786468505859375
    5. ' est' → logprob: -6.286468505859375
    6. 'ests' → logprob: -6.536468505859375
    7. 'es' → logprob: -7.036468505859375
    8. ' ' → logprob: -8.786468505859375
    9. '   ' → logprob: -9.036468505859375
    10. '       ' → logprob: -9.286468505859375

Token 554: ' low' (ID: 4465)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0784572958946228
    2. ' ' → logprob: -2.7034573554992676
    3. '0' → logprob: -4.828457355499268
    4. 'down' → logprob: -8.70345687866211
    5. '1' → logprob: -9.82845687866211
    6. '```' → logprob: -9.95345687866211
    7. 'highest' → logprob: -9.95345687866211
    8. ')' → logprob: -10.45345687866211
    9. '   ' → logprob: -10.70345687866211
    10. 'lowest' → logprob: -10.82845687866211

Token 555: ' per' (ID: 777)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19333837926387787
    2. ' to' → logprob: -2.443338394165039
    3. 'for' → logprob: -2.818338394165039
    4. '   ' → logprob: -4.068338394165039
    5. ' ' → logprob: -4.943338394165039
    6. ',' → logprob: -6.193338394165039
    7. '0' → logprob: -7.568338394165039
    8. ')' → logprob: -8.193338394165039
    9. 'to' → logprob: -8.193338394165039
    10. ' ,' → logprob: -8.318338394165039

Token 556: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.32199957966804504
    2. 'pair' → logprob: -1.3219995498657227
    3. ' i' → logprob: -5.446999549865723
    4. 'i' → logprob: -6.196999549865723
    5. ' pairs' → logprob: -7.571999549865723
    6. 'pairs' → logprob: -8.321999549865723
    7. '_pair' → logprob: -8.321999549865723
    8. ' index' → logprob: -8.446999549865723
    9. ' range' → logprob: -8.446999549865723
    10. 'position' → logprob: -8.571999549865723

Token 557: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07828346639871597
    2. 'for' → logprob: -3.5782835483551025
    3. ' for' → logprob: -3.9532835483551025
    4. ':' → logprob: -4.328283309936523
    5. '_' → logprob: -5.078283309936523
    6. ' =' → logprob: -5.953283309936523
    7. 'def' → logprob: -6.578283309936523
    8. ' ' → logprob: -6.703283309936523
    9. ',' → logprob: -7.453283309936523
    10. '    
' → logprob: -7.953283309936523

Token 558: ' generate' (ID: 10419)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.557888388633728
    2. ' for' → logprob: -1.932888388633728
    3. ' and' → logprob: -2.1828885078430176
    4. ' then' → logprob: -3.1828885078430176
    5. ' ' → logprob: -3.6828885078430176
    6. ' starting' → logprob: -3.9328885078430176
    7. '    ' → logprob: -4.182888507843018
    8. 'for' → logprob: -4.432888507843018
    9. ' with' → logprob: -4.932888507843018
    10. '#' → logprob: -5.057888507843018

Token 559: ' number' (ID: 2086)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.12436546385288239
    2. ' the' → logprob: -3.6243655681610107
    3. ' ' → logprob: -3.7493655681610107
    4. ' code' → logprob: -3.8743655681610107
    5. ' digits' → logprob: -4.249365329742432
    6. ' possible' → logprob: -4.999365329742432
    7. ' combinations' → logprob: -5.124365329742432
    8. 'all' → logprob: -5.374365329742432
    9. ' a' → logprob: -5.999365329742432
    10. '   ' → logprob: -6.124365329742432

Token 560: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17422784864902496
    2. 's' → logprob: -2.6742279529571533
    3. ' =' → logprob: -3.5492279529571533
    4. '[' → logprob: -4.049227714538574
    5. '_' → logprob: -4.924227714538574
    6. ',' → logprob: -5.174227714538574
    7. ')' → logprob: -5.674227714538574
    8. ' s' → logprob: -5.674227714538574
    9. ' ' → logprob: -5.924227714538574
    10. '[]' → logprob: -6.174227714538574

Token 561: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.967481255531311
    2. '   ' → logprob: -1.217481255531311
    3. ' =' → logprob: -2.7174811363220215
    4. '=' → logprob: -2.8424811363220215
    5. 's' → logprob: -2.8424811363220215
    6. '_' → logprob: -2.9674811363220215
    7. '<|end|>' → logprob: -3.8424811363220215
    8. '    ' → logprob: -4.3424811363220215
    9. ' ' → logprob: -4.4674811363220215
    10. ')' → logprob: -4.7174811363220215

Token 562: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1110938787460327
    2. '_' → logprob: -1.3610938787460327
    3. '   ' → logprob: -1.8610938787460327
    4. ')' → logprob: -2.3610939979553223
    5. 's' → logprob: -2.6110939979553223
    6. ' =' → logprob: -3.6110939979553223
    7. '=' → logprob: -4.736093997955322
    8. ' ' → logprob: -4.736093997955322
    9. '[' → logprob: -4.736093997955322
    10. ' ,' → logprob: -4.736093997955322

Token 563: ' and' (ID: 326)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.610760509967804
    2. ' ' → logprob: -2.110760450363159
    3. ' =' → logprob: -2.235760450363159
    4. '   ' → logprob: -2.610760450363159
    5. '=' → logprob: -3.360760450363159
    6. '[' → logprob: -3.485760450363159
    7. 's' → logprob: -3.860760450363159
    8. ',' → logprob: -3.985760450363159
    9. ')' → logprob: -4.110760688781738
    10. 'for' → logprob: -4.735760688781738

Token 564: ' test' (ID: 1746)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.053813640028238297
    2. ' return' → logprob: -3.5538136959075928
    3. ' continue' → logprob: -4.803813457489014
    4. '   ' → logprob: -5.053813457489014
    5. 'check' → logprob: -5.928813457489014
    6. ' validate' → logprob: -6.428813457489014
    7. 'return' → logprob: -6.803813457489014
    8. ' try' → logprob: -6.928813457489014
    9. ' break' → logprob: -7.428813457489014
    10. '
' → logprob: -7.803813457489014

Token 565: ' primal' (ID: 181789)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10346642136573792
    2. '
' → logprob: -3.353466510772705
    3. ' for' → logprob: -3.728466510772705
    4. 'for' → logprob: -4.603466510772705
    5. '    
' → logprob: -5.728466510772705
    6. 'def' → logprob: -5.853466510772705
    7. '    ' → logprob: -5.978466510772705
    8. ' ' → logprob: -5.978466510772705
    9. '```' → logprob: -5.978466510772705
    10. ' tokens' → logprob: -6.103466510772705

Token 566: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -0.0031790214125066996
    2. ')' → logprob: -6.87817907333374
    3. '_' → logprob: -6.87817907333374
    4. 'i' → logprob: -7.25317907333374
    5. 'it' → logprob: -8.378178596496582
    6. '   ' → logprob: -10.503178596496582
    7. 'e' → logprob: -10.628178596496582
    8. '#' → logprob: -10.753178596496582
    9. 'ality' → logprob: -11.503178596496582
    10. 'y' → logprob: -11.878178596496582

Token 567: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14096598327159882
    2. ':' → logprob: -2.1409659385681152
    3. '_' → logprob: -5.390965938568115
    4. '    
' → logprob: -6.640965938568115
    5. ',' → logprob: -6.890965938568115
    6. '(' → logprob: -7.265965938568115
    7. 'def' → logprob: -7.390965938568115
    8. '):' → logprob: -7.640965938568115
    9. '(n' → logprob: -7.765965938568115
    10. '():' → logprob: -7.765965938568115

Token 568: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002101133344694972
    2. '    
' → logprob: -6.502100944519043
    3. 'def' → logprob: -8.752100944519043
    4. '
' → logprob: -9.002100944519043
    5. '\' → logprob: -9.752100944519043
    6. '  
' → logprob: -10.502100944519043
    7. '```' → logprob: -10.502100944519043
    8. ',' → logprob: -10.627100944519043
    9. ' for' → logprob: -11.002100944519043
    10. ' 
' → logprob: -11.002100944519043

Token 569: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001762882457114756
    2. ' for' → logprob: -7.251762866973877
    3. '    
' → logprob: -8.001763343811035
    4. ' ' → logprob: -8.376763343811035
    5. 'for' → logprob: -8.501763343811035
    6. 'def' → logprob: -9.376763343811035
    7. '
' → logprob: -9.876763343811035
    8. '    ' → logprob: -10.626763343811035
    9. 'digits' → logprob: -10.876763343811035
    10. '  ' → logprob: -11.001763343811035

Token 570: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3318307101726532
    2. 'digits' → logprob: -1.4568307399749756
    3. 'pairs' → logprob: -4.4568305015563965
    4. '#' (adapté à ' #') → logprob: -4.7068305015563965
    5. 'for' → logprob: -4.8318305015563965
    6. 'best' → logprob: -5.2068305015563965
    7. ' digits' → logprob: -5.4568305015563965
    8. 'max' → logprob: -6.3318305015563965
    9. ' for' → logprob: -6.5818305015563965
    10. 'digit' → logprob: -6.8318305015563965

Token 571: ' We'll' (ID: 46830)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.3314751088619232
    2. '   ' → logprob: -2.456475019454956
    3. 'pairs' → logprob: -2.956475019454956
    4. 'for' → logprob: -3.206475019454956
    5. 'result' → logprob: -3.706475019454956
    6. 'best' → logprob: -3.706475019454956
    7. 'def' → logprob: -4.706475257873535
    8. '#' → logprob: -4.831475257873535
    9. 'c' → logprob: -4.831475257873535
    10. 'results' → logprob: -4.956475257873535

Token 572: ' produce' (ID: 10635)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.37410208582878113
    2. 'for' → logprob: -1.9991021156311035
    3. ' for' → logprob: -2.6241021156311035
    4. ' continue' → logprob: -3.6241021156311035
    5. 'try' → logprob: -3.6241021156311035
    6. '   ' → logprob: -3.9991021156311035
    7. 'def' → logprob: -4.7491021156311035
    8. ' import' → logprob: -5.3741021156311035
    9. '    ' → logprob: -5.7491021156311035
    10. 'import' → logprob: -5.8741021156311035

Token 573: ' all' (ID: 722)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5177122950553894
    2. ' all' → logprob: -1.5177123546600342
    3. ' ' → logprob: -3.142712354660034
    4. 'all' → logprob: -3.892712354660034
    5. '    ' → logprob: -4.017712116241455
    6. ' a' → logprob: -4.017712116241455
    7. 'digits' → logprob: -4.392712116241455
    8. ' code' → logprob: -4.517712116241455
    9. 'def' → logprob: -4.767712116241455
    10. '_' → logprob: -5.267712116241455

Token 574: ' candidate' (ID: 17098)
  Prédit: ' combinations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' combinations' → logprob: -0.579351544380188
    2. ' possible' → logprob: -1.579351544380188
    3. ' digits' → logprob: -2.9543514251708984
    4. ' pairs' → logprob: -3.0793514251708984
    5. 'possible' → logprob: -3.3293514251708984
    6. 'digits' → logprob: -3.4543514251708984
    7. 'pairs' → logprob: -3.7043514251708984
    8. ' ' → logprob: -4.829351425170898
    9. 'from' → logprob: -5.079351425170898
    10. '   ' → logprob: -5.204351425170898

Token 575: ' numbers' (ID: 8663)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.30715686082839966
    2. '_digits' → logprob: -1.4321568012237549
    3. '_s' → logprob: -5.057157039642334
    4. '_assign' → logprob: -5.182157039642334
    5. '_' → logprob: -5.557157039642334
    6. '_numbers' → logprob: -5.807157039642334
    7. '_digit' → logprob: -6.307157039642334
    8. '_pairs' → logprob: -6.432157039642334
    9. '_com' → logprob: -7.682157039642334
    10. '_candidates' → logprob: -7.807157039642334

Token 576: ' this' (ID: 495)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12174039334058762
    2. ':' → logprob: -2.6217403411865234
    3. '=' → logprob: -4.121740341186523
    4. '   ' → logprob: -5.246740341186523
    5. '_candidates' → logprob: -5.496740341186523
    6. '_' → logprob: -5.871740341186523
    7. '=[]' → logprob: -5.996740341186523
    8. '[]' → logprob: -6.121740341186523
    9. 'def' → logprob: -6.246740341186523
    10. 's' → logprob: -6.746740341186523

Token 577: ' way' (ID: 2006)
  Prédit: ' year'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' year' → logprob: -0.3938973844051361
    2. ':' → logprob: -2.143897294998169
    3. '   ' → logprob: -3.268897294998169
    4. ' day' → logprob: -3.393897294998169
    5. 'for' → logprob: -3.518897294998169
    6. 'year' → logprob: -3.643897294998169
    7. ' time' → logprob: -4.143897533416748
    8. ' way' → logprob: -4.393897533416748
    9. ' for' → logprob: -4.393897533416748
    10. '#' → logprob: -5.143897533416748

Token 578: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12149212509393692
    2. ':' → logprob: -2.3714921474456787
    3. '    
' → logprob: -4.7464919090271
    4. '
' → logprob: -5.6214919090271
    5. 'for' → logprob: -6.1214919090271
    6. ' for' → logprob: -6.1214919090271
    7. ',' → logprob: -7.2464919090271
    8. '  
' → logprob: -7.2464919090271
    9. ' ' → logprob: -7.7464919090271
    10. '   
' → logprob: -7.9964919090271

Token 579: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00047368707600980997
    2. '    
' → logprob: -8.375473976135254
    3. 'for' → logprob: -9.375473976135254
    4. ' for' → logprob: -9.500473976135254
    5. '
' → logprob: -9.750473976135254
    6. 'import' → logprob: -12.250473976135254
    7. '```' → logprob: -12.250473976135254
    8. 'from' → logprob: -12.500473976135254
    9. ' candidates' → logprob: -13.000473976135254
    10. '    ' → logprob: -13.000473976135254

Token 580: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057534292340278625
    2. ' for' → logprob: -3.3075342178344727
    3. 'for' → logprob: -4.182534217834473
    4. 'digits' → logprob: -6.307534217834473
    5. ' candidates' → logprob: -6.807534217834473
    6. ' digits' → logprob: -8.057534217834473
    7. 'pairs' → logprob: -9.182534217834473
    8. 'c' → logprob: -9.307534217834473
    9. '
' → logprob: -9.557534217834473
    10. '    
' → logprob: -9.557534217834473

Token 581: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7759585380554199
    2. ' for' → logprob: -1.02595853805542
    3. 'for' → logprob: -2.40095853805542
    4. ' candidates' → logprob: -3.27595853805542
    5. 'digits' → logprob: -4.52595853805542
    6. ' digits' → logprob: -4.65095853805542
    7. 'from' → logprob: -4.77595853805542
    8. ' from' → logprob: -4.90095853805542
    9. 'c' → logprob: -5.65095853805542
    10. '
' → logprob: -6.15095853805542

Token 582: ' For' (ID: 2214)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38651376962661743
    2. ' from' → logprob: -2.0115137100219727
    3. 'for' → logprob: -2.1365137100219727
    4. 'from' → logprob: -2.8865137100219727
    5. ' digits' → logprob: -5.136513710021973
    6. ' candidates' → logprob: -6.386513710021973
    7. 'digits' → logprob: -6.386513710021973
    8. ' import' → logprob: -6.886513710021973
    9. 'import' → logprob: -7.886513710021973
    10. ' numbers' → logprob: -8.386513710021973

Token 583: ' each' (ID: 2454)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -1.2895965576171875
    2. ' d' → logprob: -1.9145965576171875
    3. ' i' → logprob: -2.0395965576171875
    4. ' digits' → logprob: -2.6645965576171875
    5. ' pairs' → logprob: -2.9145965576171875
    6. ' p' → logprob: -3.0395965576171875
    7. 'd' → logprob: -3.1645965576171875
    8. 'digits' → logprob: -3.2895965576171875
    9. ' pair' → logprob: -3.4145965576171875
    10. 'pairs' → logprob: -3.5395965576171875

Token 584: ' possible' (ID: 4149)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.5534374713897705
    2. ' i' → logprob: -1.6784374713897705
    3. ' length' → logprob: -1.9284374713897705
    4. ' pair' → logprob: -1.9284374713897705
    5. 'd' → logprob: -2.8034374713897705
    6. ' digit' → logprob: -2.9284374713897705
    7. 'i' → logprob: -3.5534374713897705
    8. 'pair' → logprob: -3.5534374713897705
    9. ' digits' → logprob: -3.6784374713897705
    10. 'digits' → logprob: -3.9284374713897705

Token 585: ' digit' (ID: 19181)
  Prédit: ' digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digit' → logprob: -1.3347389698028564
    2. 'digits' → logprob: -1.7097389698028564
    3. 'digit' → logprob: -1.9597389698028564
    4. ' digits' → logprob: -2.0847389698028564
    5. ' d' → logprob: -2.2097389698028564
    6. 'd' → logprob: -3.0847389698028564
    7. ' i' → logprob: -3.5847389698028564
    8. ' pair' → logprob: -3.8347389698028564
    9. 'pair' → logprob: -4.209738731384277
    10. ' length' → logprob: -4.209738731384277

Token 586: ' combination' (ID: 14083)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2514022588729858
    2. ' ' → logprob: -1.7514022588729858
    3. ' d' → logprob: -1.7514022588729858
    4. 's' → logprob: -2.3764023780822754
    5. ' _' → logprob: -2.5014023780822754
    6. ' in' → logprob: -2.7514023780822754
    7. ' s' → logprob: -2.7514023780822754
    8. 'd' → logprob: -4.376402378082275
    9. ' i' → logprob: -4.626402378082275
    10. '0' → logprob: -4.626402378082275

Token 587: ' for' (ID: 395)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29635706543922424
    2. '[' → logprob: -2.6713571548461914
    3. ' ' → logprob: -3.2963571548461914
    4. ' for' → logprob: -3.4213571548461914
    5. ',' → logprob: -3.5463571548461914
    6. 'for' → logprob: -4.171357154846191
    7. 's' → logprob: -4.421357154846191
    8. ' (' → logprob: -4.546357154846191
    9. '   ' → logprob: -4.796357154846191
    10. ' _' → logprob: -4.796357154846191

Token 588: ' b' (ID: 287)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.074432134628296
    2. 'pairs' → logprob: -1.324432134628296
    3. 'pair' → logprob: -2.074432134628296
    4. ' i' → logprob: -2.199432134628296
    5. ' pairs' → logprob: -2.824432134628296
    6. ' pair' → logprob: -3.074432134628296
    7. 'range' → logprob: -4.199432373046875
    8. ' range' → logprob: -4.324432373046875
    9. 'n' → logprob: -5.574432373046875
    10. 'the' → logprob: -6.074432373046875

Token 589: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1105581521987915
    2. 's' → logprob: -1.1105581521987915
    3. '_s' → logprob: -1.4855581521987915
    4. '_i' → logprob: -2.235558032989502
    5. '_pairs' → logprob: -5.610558032989502
    6. '```' → logprob: -7.485558032989502
    7. '_digits' → logprob: -7.485558032989502
    8. 'i' → logprob: -7.610558032989502
    9. ')' → logprob: -7.860558032989502
    10. '_list' → logprob: -8.23555850982666

Token 590: 'length' (ID: 7914)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0189015865325928
    2. ')' → logprob: -1.3939015865325928
    3. 'i' → logprob: -2.3939015865325928
    4. 'range' → logprob: -2.5189015865325928
    5. '0' → logprob: -3.3939015865325928
    6. '_' → logprob: -3.5189015865325928
    7. '[i' → logprob: -3.5189015865325928
    8. '   ' → logprob: -3.8939015865325928
    9. '_i' → logprob: -4.143901824951172
    10. ' range' → logprob: -4.393901824951172

Token 591: ' n' (ID: 297)
  Prédit: '=n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=n' → logprob: -0.5243117213249207
    2. '=' → logprob: -1.7743117809295654
    3. 'n' → logprob: -1.8993117809295654
    4. ' =' → logprob: -2.6493117809295654
    5. ' n' → logprob: -4.274311542510986
    6. ')' → logprob: -6.899311542510986
    7. '   ' → logprob: -7.024311542510986
    8. '
' → logprob: -7.399311542510986
    9. ')n' → logprob: -8.024312019348145
    10. '=
' → logprob: -8.149312019348145

Token 592: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.36971399188041687
    2. '):
' → logprob: -1.4947140216827393
    3. ')' → logprob: -2.9947140216827393
    4. '),' → logprob: -4.24471378326416
    5. '   ' → logprob: -4.74471378326416
    6. '[' → logprob: -6.24471378326416
    7. '+' → logprob: -6.24471378326416
    8. '):

' → logprob: -6.49471378326416
    9. '=' → logprob: -7.11971378326416
    10. ',' → logprob: -7.11971378326416

Token 593: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09824459999799728
    2. ':' → logprob: -3.5982446670532227
    3. ',' → logprob: -3.7232446670532227
    4. '#' → logprob: -3.7232446670532227
    5. 'from' → logprob: -4.473244667053223
    6. 'for' → logprob: -6.598244667053223
    7. 'import' → logprob: -7.098244667053223
    8. ' for' → logprob: -7.223244667053223
    9. ' #' → logprob: -7.348244667053223
    10. ':
' → logprob: -7.723244667053223

Token 594: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11517680436372757
    2. ',' → logprob: -2.9901769161224365
    3. ':' → logprob: -3.7401769161224365
    4. '#' (adapté à ' #') → logprob: -4.365176677703857
    5. 'for' → logprob: -5.615176677703857
    6. 'from' → logprob: -5.865176677703857
    7. ' for' → logprob: -5.990176677703857
    8. ' ' → logprob: -5.990176677703857
    9. '=' → logprob: -6.615176677703857
    10. ':
' → logprob: -6.615176677703857

Token 595: '  ' (ID: 256)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29587656259536743
    2. ' for' → logprob: -1.7958765029907227
    3. '   ' → logprob: -2.5458765029907227
    4. ' ' → logprob: -5.545876502990723
    5. 'from' → logprob: -5.795876502990723
    6. '#' → logprob: -6.545876502990723
    7. ',' → logprob: -7.170876502990723
    8. ' #' → logprob: -7.670876502990723
    9. 'import' → logprob: -7.795876502990723
    10. '
' → logprob: -7.920876502990723

Token 596: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1736069917678833
    2. 'from' → logprob: -1.1736069917678833
    3. '   ' → logprob: -1.7986069917678833
    4. '#' → logprob: -2.5486068725585938
    5. ' for' → logprob: -2.5486068725585938
    6. 'import' → logprob: -3.6736068725585938
    7. ',' → logprob: -4.798606872558594
    8. ' from' → logprob: -4.798606872558594
    9. ' ' → logprob: -5.423606872558594
    10. '
' → logprob: -5.673606872558594

Token 597: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6216338872909546
    2. ' for' → logprob: -0.8716338872909546
    3. 'import' → logprob: -4.246634006500244
    4. 'from' → logprob: -4.496634006500244
    5. '#' → logprob: -5.246634006500244
    6. ' #' → logprob: -5.996634006500244
    7. 'g' → logprob: -5.996634006500244
    8. 'For' → logprob: -6.371634006500244
    9. ' For' → logprob: -6.371634006500244
    10. '   ' → logprob: -6.746634006500244

Token 598: ' each' (ID: 2454)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -1.1143550872802734
    2. 'g' → logprob: -1.9893550872802734
    3. ' each' → logprob: -2.1143550872802734
    4. ' d' → logprob: -2.1143550872802734
    5. 'each' → logprob: -2.7393550872802734
    6. ' ' → logprob: -2.9893550872802734
    7. ' c' → logprob: -3.1143550872802734
    8. ' i' → logprob: -3.2393550872802734
    9. 'd' → logprob: -3.2393550872802734
    10. 'c' → logprob: -3.7393550872802734

Token 599: ' digit' (ID: 19181)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.9013252854347229
    2. 'digit' → logprob: -1.1513252258300781
    3. 'possible' → logprob: -2.151325225830078
    4. ' digit' → logprob: -2.276325225830078
    5. ' c' → logprob: -4.026325225830078
    6. 'c' → logprob: -4.776325225830078
    7. 'd' → logprob: -5.026325225830078
    8. ' d' → logprob: -5.401325225830078
    9. ' g' → logprob: -5.401325225830078
    10. 'g' → logprob: -5.526325225830078

Token 600: ' d' (ID: 272)
  Prédit: ' combination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' combination' → logprob: -0.888228178024292
    2. '_comb' → logprob: -1.263228178024292
    3. 'comb' → logprob: -3.138228178024292
    4. '0' → logprob: -3.138228178024292
    5. ' in' → logprob: -3.513228178024292
    6. '_' → logprob: -3.513228178024292
    7. '_combo' → logprob: -3.638228178024292
    8. ' for' → logprob: -3.888228178024292
    9. ' ' → logprob: -4.013228416442871
    10. 'for' → logprob: -4.138228416442871

Token 601: '_i' (ID: 10853)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011042879894375801
    2. 'in' → logprob: -5.011043071746826
    3. 'for' → logprob: -7.011043071746826
    4. ' for' → logprob: -7.636043071746826
    5. ' ' → logprob: -7.636043071746826
    6. '_' → logprob: -7.886043071746826
    7. '0' → logprob: -8.011042594909668
    8. '_in' → logprob: -8.261042594909668
    9. '1' → logprob: -8.386042594909668
    10. 'from' → logprob: -9.011042594909668

Token 602: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01672215200960636
    2. 'in' → logprob: -4.766722202301025
    3. ' ' → logprob: -6.266722202301025
    4. 's' → logprob: -6.516722202301025
    5. 'x' → logprob: -6.766722202301025
    6. 'n' → logprob: -7.141722202301025
    7. ',' → logprob: -7.516722202301025
    8. '   ' → logprob: -7.516722202301025
    9. ')' → logprob: -8.391721725463867
    10. 'for' → logprob: -8.391721725463867

Token 603: ' b' (ID: 287)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.28170013427734375
    2. ' range' → logprob: -1.4067001342773438
    3. '[' → logprob: -7.906700134277344
    4. '0' → logprob: -9.531700134277344
    5. 'b' → logprob: -10.281700134277344
    6. ' b' → logprob: -10.781700134277344
    7. '   ' → logprob: -10.906700134277344
    8. ' [' → logprob: -11.281700134277344
    9. ' ' → logprob: -11.531700134277344
    10. '(range' → logprob: -12.906700134277344

Token 604: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11883392184972763
    2. '_' → logprob: -2.8688340187072754
    3. '):' → logprob: -3.9938340187072754
    4. '   ' → logprob: -4.118834018707275
    5. '_:' → logprob: -4.993834018707275
    6. '_i' → logprob: -5.368834018707275
    7. ':
' → logprob: -6.118834018707275
    8. ',' → logprob: -6.868834018707275
    9. '[' → logprob: -7.243834018707275
    10. '[i' → logprob: -7.368834018707275

Token 605: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.610097348690033
    2. '       ' → logprob: -2.1100974082946777
    3. '   ' → logprob: -2.4850974082946777
    4. 'g' → logprob: -2.8600974082946777
    5. '#' → logprob: -3.2350974082946777
    6. ' #' → logprob: -3.2350974082946777
    7. '    ' → logprob: -3.7350974082946777
    8. ' generate' → logprob: -4.610097408294678
    9. ' ' → logprob: -4.735097408294678
    10. ' if' → logprob: -4.860097408294678

Token 606: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8044075965881348
    2. '_i' → logprob: -0.8044075965881348
    3. ' =' → logprob: -3.1794075965881348
    4. '_' → logprob: -4.429407596588135
    5. '[_' → logprob: -4.679407596588135
    6. '[' → logprob: -5.179407596588135
    7. ' _' → logprob: -5.304407596588135
    8. 's' → logprob: -5.304407596588135
    9. '=' → logprob: -5.679407596588135
    10. '=_' → logprob: -5.679407596588135

Token 607: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3534887433052063
    2. ' =' → logprob: -1.2284886837005615
    3. 's' → logprob: -6.228488922119141
    4. ')' → logprob: -7.228488922119141
    5. '   ' → logprob: -7.478488922119141
    6. ']' → logprob: -7.728488922119141
    7. ' is' → logprob: -9.10348892211914
    8. '==' → logprob: -9.10348892211914
    9. ']=' → logprob: -9.22848892211914
    10. 'def' → logprob: -9.35348892211914

Token 608: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005099153146147728
    2. 'b' → logprob: -6.005099296569824
    3. ' d' → logprob: -6.005099296569824
    4. '   ' → logprob: -9.255099296569824
    5. ' b' → logprob: -10.505099296569824
    6. ' ' → logprob: -11.630099296569824
    7. '`' → logprob: -12.380099296569824
    8. '           ' → logprob: -12.755099296569824
    9. '       ' → logprob: -12.880099296569824
    10. '    ' → logprob: -13.255099296569824

Token 609: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.14707963168621063
    2. '[i' → logprob: -2.3970797061920166
    3. 'i' → logprob: -3.6470797061920166
    4. 'b' → logprob: -4.6470794677734375
    5. '[' → logprob: -5.8970794677734375
    6. '_' → logprob: -6.2720794677734375
    7. 'd' → logprob: -7.1470794677734375
    8. '```' → logprob: -7.1470794677734375
    9. '   ' → logprob: -7.8970794677734375
    10. 'igits' → logprob: -8.147079467773438

Token 610: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5762023329734802
    2. '
' → logprob: -0.9512023329734802
    3. '<|end|>' → logprob: -4.201202392578125
    4. 'import' → logprob: -4.451202392578125
    5. 'from' → logprob: -4.701202392578125
    6. '    
' → logprob: -5.326202392578125
    7. 'def' → logprob: -5.826202392578125
    8. ',' → logprob: -6.076202392578125
    9. '<|end|>' → logprob: -7.076202392578125
    10. '  
' → logprob: -7.326202392578125

Token 611: 'same' (ID: 48581)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014126134105026722
    2. ')
' → logprob: -4.389126300811768
    3. '   ' → logprob: -6.639126300811768
    4. ')

' → logprob: -9.51412582397461
    5. '
' → logprob: -10.01412582397461
    6. '),' → logprob: -10.13912582397461
    7. ' )' → logprob: -10.63912582397461
    8. '#' → logprob: -10.76412582397461
    9. '```' → logprob: -11.13912582397461
    10. '       ' → logprob: -11.26412582397461

Token 612: ' digit' (ID: 19181)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015002087689936161
    2. ' )' → logprob: -4.390002250671387
    3. '
' → logprob: -7.515002250671387
    4. ')
' → logprob: -7.515002250671387
    5. '   ' → logprob: -8.265002250671387
    6. ' ' → logprob: -8.390002250671387
    7. '<|end|>' → logprob: -9.140002250671387
    8. '#' → logprob: -9.515002250671387
    9. ']' → logprob: -9.640002250671387
    10. '[' → logprob: -9.765002250671387

Token 613: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011976911686360836
    2. 's' → logprob: -5.136976718902588
    3. '   ' → logprob: -5.761976718902588
    4. ')
' → logprob: -6.386976718902588
    5. ' for' → logprob: -8.511977195739746
    6. ')s' → logprob: -8.511977195739746
    7. '<|end|>' → logprob: -9.011977195739746
    8. 'for' → logprob: -9.136977195739746
    9. ' )' → logprob: -9.511977195739746
    10. '       ' → logprob: -9.761977195739746

Token 614: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02511497214436531
    2. '
' → logprob: -4.275115013122559
    3. '    
' → logprob: -5.775115013122559
    4. ',' → logprob: -6.150115013122559
    5. '#' → logprob: -6.650115013122559
    6. ')' → logprob: -7.025115013122559
    7. '       ' → logprob: -7.400115013122559
    8. '  
' → logprob: -7.775115013122559
    9. '<|end|>' → logprob: -7.775115013122559
    10. '<|end|>' → logprob: -8.650115013122559

Token 615: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06327797472476959
    2. '
' → logprob: -3.0632779598236084
    3. '    
' → logprob: -5.1882781982421875
    4. '#' (adapté à ' #') → logprob: -6.0632781982421875
    5. ',' → logprob: -6.4382781982421875
    6. '<|end|>' → logprob: -6.5632781982421875
    7. '  
' → logprob: -7.4382781982421875
    8. '<|end|>' → logprob: -7.6882781982421875
    9. 'import' → logprob: -8.063278198242188
    10. '\' → logprob: -8.063278198242188

Token 616: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025129390880465508
    2. '
' → logprob: -3.9001293182373047
    3. '    
' → logprob: -6.275129318237305
    4. '#' → logprob: -6.525129318237305
    5. 'import' → logprob: -8.525129318237305
    6. '  
' → logprob: -8.775129318237305
    7. '       ' → logprob: -9.275129318237305
    8. ' ' → logprob: -9.400129318237305
    9. 'for' → logprob: -9.400129318237305
    10. '```' → logprob: -9.525129318237305

Token 617: ' Number' (ID: 9184)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7205393314361572
    2. '   ' → logprob: -1.5955393314361572
    3. ' from' → logprob: -2.2205393314361572
    4. 'import' → logprob: -2.5955393314361572
    5. ' for' → logprob: -2.8455393314361572
    6. 'for' → logprob: -3.3455393314361572
    7. '
' → logprob: -4.595539093017578
    8. ' import' → logprob: -4.845539093017578
    9. ' #' → logprob: -5.345539093017578
    10. ' ' → logprob: -5.345539093017578

Token 618: ' is' (ID: 382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.016513466835022
    2. ' =' → logprob: -1.016513466835022
    3. '_' → logprob: -2.1415133476257324
    4. '   ' → logprob: -2.6415133476257324
    5. '=' → logprob: -3.6415133476257324
    6. '_parts' → logprob: -4.266513347625732
    7. '_str' → logprob: -4.391513347625732
    8. '_chars' → logprob: -4.516513347625732
    9. '_digits' → logprob: -5.266513347625732
    10. '_s' → logprob: -5.766513347625732

Token 619: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7701294422149658
    2. '"' → logprob: -1.6451294422149658
    3. '""' → logprob: -2.020129442214966
    4. '''' → logprob: -2.895129442214966
    5. '''.' → logprob: -3.145129442214966
    6. ' b' → logprob: -3.270129442214966
    7. '   ' → logprob: -3.770129442214966
    8. ' ' → logprob: -4.395129203796387
    9. 'str' → logprob: -4.395129203796387
    10. ''' → logprob: -4.770129203796387

Token 620: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3341341018676758
    2. ' +' → logprob: -1.4591341018676758
    3. '+' → logprob: -3.584134101867676
    4. ' =' → logprob: -5.209134101867676
    5. 's' → logprob: -5.584134101867676
    6. '[:]' → logprob: -5.709134101867676
    7. '_i' → logprob: -6.209134101867676
    8. ' _' → logprob: -6.334134101867676
    9. '   ' → logprob: -6.709134101867676
    10. '[' → logprob: -6.834134101867676

Token 621: ' b' (ID: 287)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4118350148200989
    2. ' ' → logprob: -1.911834955215454
    3. '+' → logprob: -2.661834955215454
    4. 'b' → logprob: -3.661834955215454
    5. ' d' → logprob: -3.786834955215454
    6. 'd' → logprob: -3.786834955215454
    7. ' b' → logprob: -4.286835193634033
    8. '[' → logprob: -4.911835193634033
    9. '```' → logprob: -5.286835193634033
    10. '   ' → logprob: -5.411835193634033

Token 622: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21795697510242462
    2. '_' → logprob: -1.7179570198059082
    3. '_i' → logprob: -4.967957019805908
    4. 'i' → logprob: -5.092957019805908
    5. '[' → logprob: -6.717957019805908
    6. 'c' → logprob: -6.717957019805908
    7. '```' → logprob: -8.21795654296875
    8. ' ' → logprob: -8.71795654296875
    9. '[i' → logprob: -9.09295654296875
    10. '_c' → logprob: -10.09295654296875

Token 623: ' ...' (ID: 2550)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3707156479358673
    2. '...' → logprob: -1.495715618133545
    3. '[' → logprob: -3.245715618133545
    4. ' _' → logprob: -4.495715618133545
    5. ' ...' → logprob: -4.745715618133545
    6. '[i' → logprob: -4.995715618133545
    7. ' ' → logprob: -5.370715618133545
    8. '   ' → logprob: -5.745715618133545
    9. '```' → logprob: -5.870715618133545
    10. ',' → logprob: -7.120715618133545

Token 624: ' bn' (ID: 71312)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.8979647755622864
    2. ' g' → logprob: -1.3979647159576416
    3. 'c' → logprob: -2.2729647159576416
    4. 'n' → logprob: -2.6479647159576416
    5. ' c' → logprob: -2.8979647159576416
    6. ' n' → logprob: -3.5229647159576416
    7. 'b' → logprob: -4.022964954376221
    8. '[' → logprob: -4.272964954376221
    9. '[n' → logprob: -4.397964954376221
    10. ' b' → logprob: -4.647964954376221

Token 625: ' [' (ID: 723)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 626: 'c' (ID: 66)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.4107069671154022
    2. 'c' → logprob: -1.1607069969177246
    3. ' str' → logprob: -4.160706996917725
    4. ''' → logprob: -6.160706996917725
    5. '(str' → logprob: -6.160706996917725
    6. ' c' → logprob: -6.285706996917725
    7. ']' → logprob: -7.660706996917725
    8. '']' → logprob: -7.910706996917725
    9. '   ' → logprob: -8.160706520080566
    10. ' (' → logprob: -8.785706520080566

Token 627: ' if' (ID: 538)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08081705868244171
    2. ' ]' → logprob: -2.5808169841766357
    3. '']' → logprob: -6.830817222595215
    4. '   ' → logprob: -7.705817222595215
    5. ' if' → logprob: -9.705817222595215
    6. ' ' → logprob: -9.830817222595215
    7. '"]' → logprob: -10.080817222595215
    8. 'if' → logprob: -10.330817222595215
    9. 'c' → logprob: -10.455817222595215
    10. ' ']' → logprob: -10.705817222595215

Token 628: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.18186697363853455
    2. 'c' → logprob: -1.806867003440857
    3. ' >=' → logprob: -7.0568671226501465
    4. '>=' → logprob: -7.0568671226501465
    5. ' ' → logprob: -8.431866645812988
    6. ' not' → logprob: -10.681866645812988
    7. '0' → logprob: -10.681866645812988
    8. ' (' → logprob: -11.056866645812988
    9. '	c' → logprob: -11.306866645812988
    10. ' None' → logprob: -11.306866645812988

Token 629: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.1428063064813614
    2. ' >=' → logprob: -2.0178062915802
    3. ']>=' → logprob: -9.767806053161621
    4. '>' → logprob: -9.892806053161621
    5. ' >' → logprob: -12.142806053161621
    6. '≥' → logprob: -12.392806053161621
    7. ']' → logprob: -12.517806053161621
    8. ')>=' → logprob: -12.642806053161621
    9. '!=' → logprob: -13.517806053161621
    10. ' !=' → logprob: -13.642806053161621

Token 630: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011734402505680919
    2. ' ' → logprob: -6.751173496246338
    3. '   ' → logprob: -13.12617301940918
    4. '
' → logprob: -14.62617301940918
    5. '>=' → logprob: -15.50117301940918
    6. '=' → logprob: -16.12617301940918
    7. '  ' → logprob: -16.50117301940918
    8. ')' → logprob: -16.50117301940918
    9. '>' → logprob: -17.06367301940918
    10. ' >=' → logprob: -17.12617301940918

Token 631: ']' (ID: 60)
  Prédit: ' ]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ]' → logprob: -0.5779882073402405
    2. ']' → logprob: -0.8279882073402405
    3. ' if' → logprob: -7.327988147735596
    4. ' ']' → logprob: -7.577988147735596
    5. '']' → logprob: -8.077988624572754
    6. '   ' → logprob: -8.327988624572754
    7. 'if' → logprob: -8.577988624572754
    8. ' ' → logprob: -10.077988624572754
    9. ' "]' → logprob: -10.952988624572754
    10. ''' → logprob: -10.952988624572754

Token 632: ' gn' (ID: 45450)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0011793375015259
    2. ' ' → logprob: -1.1261793375015259
    3. ' g' → logprob: -2.3761792182922363
    4. '<|end|>' → logprob: -2.7511792182922363
    5. '    ' → logprob: -3.0011792182922363
    6. '  ' → logprob: -3.2511792182922363
    7. 'g' → logprob: -4.376179218292236
    8. '[' → logprob: -4.501179218292236
    9. '    
' → logprob: -4.751179218292236
    10. ')' → logprob: -5.251179218292236

Token 633: ' ...' (ID: 2550)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.5250006914138794
    2. '1' → logprob: -1.9000006914138794
    3. ' ' → logprob: -1.9000006914138794
    4. '   ' → logprob: -2.15000057220459
    5. 'def' → logprob: -2.52500057220459
    6. '_' → logprob: -2.90000057220459
    7. '...' → logprob: -3.90000057220459
    8. '  ' → logprob: -4.02500057220459
    9. '       ' → logprob: -4.40000057220459
    10. '"' → logprob: -4.40000057220459

Token 634: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.7432291507720947
    2. ' g' → logprob: -0.9932291507720947
    3. 'n' → logprob: -2.3682291507720947
    4. ' n' → logprob: -3.2432291507720947
    5. 'b' → logprob: -5.618228912353516
    6. 'gn' → logprob: -5.743228912353516
    7. 'c' → logprob: -6.118228912353516
    8. ' c' → logprob: -6.243228912353516
    9. ' b' → logprob: -6.368228912353516
    10. '   ' → logprob: -6.368228912353516

Token 635: '2' (ID: 17)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35878700017929077
    2. '   ' → logprob: -1.4837870597839355
    3. '
' → logprob: -3.9837870597839355
    4. 'def' → logprob: -4.1087870597839355
    5. '\' → logprob: -4.8587870597839355
    6. '\n' → logprob: -4.9837870597839355
    7. '    
' → logprob: -5.3587870597839355
    8. ')' → logprob: -5.7337870597839355
    9. '[' → logprob: -5.9837870597839355
    10. '```' → logprob: -6.3587870597839355

Token 636: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.010254738852381706
    2. 'g' → logprob: -5.010254859924316
    3. ' ' → logprob: -6.635254859924316
    4. ' ' → logprob: -6.885254859924316
    5. '```' → logprob: -8.385254859924316
    6. ' f' → logprob: -8.635254859924316
    7. ''' → logprob: -9.385254859924316
    8. '1' → logprob: -9.510254859924316
    9. '...' → logprob: -9.510254859924316
    10. '`' → logprob: -9.510254859924316

Token 637: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01657678373157978
    2. '_' → logprob: -4.516576766967773
    3. 'g' → logprob: -6.391576766967773
    4. ' g' → logprob: -7.016576766967773
    5. ' ' → logprob: -7.016576766967773
    6. '_i' → logprob: -7.016576766967773
    7. 'i' → logprob: -7.266576766967773
    8. '```' → logprob: -8.766576766967773
    9. ' _' → logprob: -9.141576766967773
    10. '[' → logprob: -10.016576766967773

Token 638: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08006997406482697
    2. '
' → logprob: -2.7050700187683105
    3. '    
' → logprob: -4.8300700187683105
    4. 'def' → logprob: -8.080069541931152
    5. 'for' → logprob: -8.205069541931152
    6. 'from' → logprob: -8.580069541931152
    7. 'import' → logprob: -8.580069541931152
    8. '#' → logprob: -8.705069541931152
    9. '  
' → logprob: -8.705069541931152
    10. '   
' → logprob: -8.955069541931152

Token 639: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010926724411547184
    2. '
' → logprob: -4.885926723480225
    3. '    
' → logprob: -6.010926723480225
    4. 'def' → logprob: -8.010927200317383
    5. 'from' → logprob: -8.135927200317383
    6. 'import' → logprob: -8.885927200317383
    7. '<|end|>' → logprob: -10.510927200317383
    8. '#' → logprob: -11.135927200317383
    9. '```' → logprob: -11.135927200317383
    10. '        
' → logprob: -12.010927200317383

Token 640: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02269033156335354
    2. '
' → logprob: -4.022690296173096
    3. '    
' → logprob: -5.522690296173096
    4. 'def' → logprob: -9.147690773010254
    5. 'import' → logprob: -9.647690773010254
    6. 'from' → logprob: -9.647690773010254
    7. '\' → logprob: -9.897690773010254
    8. '#' (adapté à ' #') → logprob: -10.022690773010254
    9. '\n' → logprob: -10.272690773010254
    10. '  
' → logprob: -10.522690773010254

Token 641: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014491130597889423
    2. '
' → logprob: -4.764491081237793
    3. '    
' → logprob: -5.764491081237793
    4. 'from' → logprob: -6.764491081237793
    5. 'def' → logprob: -7.889491081237793
    6. 'import' → logprob: -8.139491081237793
    7. 'for' → logprob: -8.889491081237793
    8. '  
' → logprob: -9.014491081237793
    9. '#' → logprob: -9.139491081237793
    10. '   
' → logprob: -9.514491081237793

Token 642: ' Must' (ID: 20953)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.7541089057922363
    2. 'c' → logprob: -1.8791089057922363
    3. ' best' → logprob: -2.1291089057922363
    4. 'for' → logprob: -2.2541089057922363
    5. 'digits' → logprob: -2.5041089057922363
    6. '#' → logprob: -2.8791089057922363
    7. ' candidates' → logprob: -2.8791089057922363
    8. '   ' → logprob: -3.0041089057922363
    9. ' for' → logprob: -3.0041089057922363
    10. 'best' → logprob: -3.0041089057922363

Token 643: ' not' (ID: 625)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.19404102861881256
    2. 'try' → logprob: -2.3190410137176514
    3. ' be' → logprob: -3.4440410137176514
    4. ' generate' → logprob: -4.3190412521362305
    5. 'generate' → logprob: -4.6940412521362305
    6. 'def' → logprob: -5.6940412521362305
    7. '   ' → logprob: -5.9440412521362305
    8. ' not' → logprob: -6.4440412521362305
    9. '_try' → logprob: -6.4440412521362305
    10. ' ensure' → logprob: -6.5690412521362305

Token 644: ' start' (ID: 1604)
  Prédit: ' lose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lose' → logprob: -0.9521928429603577
    2. ' exceed' → logprob: -1.702192783355713
    3. ' be' → logprob: -1.827192783355713
    4. ' include' → logprob: -2.577192783355713
    5. ' have' → logprob: -2.577192783355713
    6. ' use' → logprob: -3.327192783355713
    7. ' generate' → logprob: -4.327192783355713
    8. ' contain' → logprob: -4.452192783355713
    9. 'lose' → logprob: -5.202192783355713
    10. ' lead' → logprob: -5.202192783355713

Token 645: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.3570525050163269
    2. 'with' → logprob: -1.6070525646209717
    3. '0' → logprob: -2.3570525646209717
    4. ' ' → logprob: -5.357052326202393
    5. '   ' → logprob: -8.98205280303955
    6. '_' → logprob: -9.35705280303955
    7. ' w' → logprob: -9.98205280303955
    8. ' '' → logprob: -10.98205280303955
    9. 'from' → logprob: -11.35705280303955
    10. ' zero' → logprob: -11.48205280303955

Token 646: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2119356244802475
    2. ''' → logprob: -1.7119356393814087
    3. ' ' → logprob: -5.336935520172119
    4. ' '' → logprob: -5.461935520172119
    5. '"' → logprob: -7.586935520172119
    6. 'str' → logprob: -7.836935520172119
    7. 'b' → logprob: -8.086935997009277
    8. '`' → logprob: -10.211935997009277
    9. '   ' → logprob: -10.336935997009277
    10. ' b' → logprob: -10.336935997009277

Token 647: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16057108342647552
    2. ''' → logprob: -1.9105710983276367
    3. '"' → logprob: -8.410571098327637
    4. ' '' → logprob: -9.660571098327637
    5. ' ' → logprob: -9.910571098327637
    6. '`' → logprob: -12.535571098327637
    7. 'str' → logprob: -12.785571098327637
    8. 'b' → logprob: -13.660571098327637
    9. 'zero' → logprob: -14.035571098327637
    10. '   ' → logprob: -14.785571098327637

Token 648: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28313106298446655
    2. '
' → logprob: -1.5331311225891113
    3. '    
' → logprob: -3.7831311225891113
    4. ' 
' → logprob: -6.033131122589111
    5. 'def' → logprob: -6.658131122589111
    6. '  
' → logprob: -6.658131122589111
    7. '   
' → logprob: -6.908131122589111
    8. 'for' → logprob: -7.783131122589111
    9. ' for' → logprob: -8.283130645751953
    10. '\n' → logprob: -8.283130645751953

Token 649: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6979183554649353
    2. ' 
' → logprob: -1.44791841506958
    3. '    
' → logprob: -1.94791841506958
    4. '    ' → logprob: -3.19791841506958
    5. '     
' → logprob: -3.82291841506958
    6. ' ' → logprob: -4.32291841506958
    7. '  
' → logprob: -5.07291841506958
    8. '       ' → logprob: -5.19791841506958
    9. '   
' → logprob: -5.19791841506958
    10. ' so' → logprob: -5.32291841506958

Token 650: ' last' (ID: 2174)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.22681006789207458
    2. ' ' → logprob: -2.3518099784851074
    3. ' all' → logprob: -3.6018099784851074
    4. ' not' → logprob: -4.101809978485107
    5. ' len' → logprob: -4.351809978485107
    6. ' be' → logprob: -4.851809978485107
    7. ' #' → logprob: -5.101809978485107
    8. '   ' → logprob: -5.476809978485107
    9. ' no' → logprob: -5.476809978485107
    10. 'must' → logprob: -5.726809978485107

Token 651: ' digit' (ID: 19181)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17326705157756805
    2. ' ' → logprob: -3.048267126083374
    3. 'digit' → logprob: -3.173267126083374
    4. ')' → logprob: -3.923267126083374
    5. '_digit' → logprob: -4.423266887664795
    6. ' _' → logprob: -4.423266887664795
    7. ' digit' → logprob: -4.548266887664795
    8. '0' → logprob: -5.548266887664795
    9. 'd' → logprob: -6.173266887664795
    10. '   ' → logprob: -6.423266887664795

Token 652: ' (' (ID: 350)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.42835327982902527
    2. ' must' → logprob: -1.4283533096313477
    3. ' not' → logprob: -3.1783533096313477
    4. 'must' → logprob: -4.053353309631348
    5. ' ' → logprob: -4.428353309631348
    6. '0' → logprob: -5.303353309631348
    7. ')' → logprob: -5.303353309631348
    8. ' should' → logprob: -5.428353309631348
    9. '!=' → logprob: -5.553353309631348
    10. ' is' → logprob: -5.803353309631348

Token 653: 'g' (ID: 70)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21020422875881195
    2. 'g' → logprob: -2.8352041244506836
    3. 'b' → logprob: -2.9602041244506836
    4. '1' → logprob: -3.7102041244506836
    5. '0' → logprob: -4.585204124450684
    6. 'n' → logprob: -4.710204124450684
    7. ' g' → logprob: -5.335204124450684
    8. ')
' → logprob: -5.460204124450684
    9. '9' → logprob: -5.710204124450684
    10. ' b' → logprob: -5.835204124450684

Token 654: '1' (ID: 16)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.5498675107955933
    2. 'n' → logprob: -1.5498675107955933
    3. '1' → logprob: -2.424867630004883
    4. '_' → logprob: -2.674867630004883
    5. '_i' → logprob: -3.924867630004883
    6. '[n' → logprob: -4.549867630004883
    7. '[' → logprob: -4.674867630004883
    8. '[-' → logprob: -5.174867630004883
    9. ')' → logprob: -5.924867630004883
    10. 'i' → logprob: -7.299867630004883

Token 655: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05259186029434204
    2. ' !=' → logprob: -3.1775918006896973
    3. '!=' → logprob: -5.177591800689697
    4. ' )' → logprob: -6.927591800689697
    5. ')!=' → logprob: -6.927591800689697
    6. '')' → logprob: -7.552591800689697
    7. '   ' → logprob: -8.427592277526855
    8. ' must' → logprob: -8.552592277526855
    9. ' ' → logprob: -9.302592277526855
    10. '0' → logprob: -9.302592277526855

Token 656: ' not' (ID: 625)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.024876972660422325
    2. '!=' → logprob: -4.399877071380615
    3. ' must' → logprob: -5.524877071380615
    4. ')' → logprob: -5.899877071380615
    5. ' ' → logprob: -6.399877071380615
    6. '=' → logprob: -7.399877071380615
    7. '```' → logprob: -7.524877071380615
    8. '   ' → logprob: -7.774877071380615
    9. ' =' → logprob: -8.274876594543457
    10. 'must' → logprob: -8.399876594543457

Token 657: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033657804131507874
    2. ' ' → logprob: -3.4086577892303467
    3. ' in' → logprob: -11.908658027648926
    4. 'in' → logprob: -13.408658027648926
    5. ' zero' → logprob: -13.908658027648926
    6. '=' → logprob: -14.158658027648926
    7. '```' → logprob: -14.158658027648926
    8. 'zero' → logprob: -14.283658027648926
    9. ' be' → logprob: -15.158658027648926
    10. '  ' → logprob: -15.783658027648926

Token 658: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.668304245569743e-05
    2. ' ' → logprob: -10.000046730041504
    3. '```' → logprob: -14.375046730041504
    4. '=' → logprob: -15.125046730041504
    5. '
' → logprob: -15.625046730041504
    6. 'in' → logprob: -16.500045776367188
    7. 'zero' → logprob: -16.500045776367188
    8. '`' → logprob: -17.375045776367188
    9. '==' → logprob: -18.000045776367188
    10. ' in' → logprob: -18.000045776367188

Token 659: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05050530284643173
    2. '
' → logprob: -3.1755053997039795
    3. '    
' → logprob: -5.1755051612854
    4. 'def' → logprob: -7.0505051612854
    5. '  
' → logprob: -9.175505638122559
    6. '<|end|>' → logprob: -9.175505638122559
    7. 'for' → logprob: -9.300505638122559
    8. '#' → logprob: -9.550505638122559
    9. ' 
' → logprob: -9.550505638122559
    10. ' for' → logprob: -9.550505638122559

Token 660: 'to' (ID: 935)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07973199337720871
    2. ')
' → logprob: -2.7047319412231445
    3. '   ' → logprob: -5.0797319412231445
    4. ')

' → logprob: -6.3297319412231445
    5. ').' → logprob: -7.4547319412231445
    6. '):' → logprob: -7.9547319412231445
    7. '):
' → logprob: -8.204731941223145
    8. 'def' → logprob: -8.579731941223145
    9. ')
' → logprob: -9.579731941223145
    10. '),' → logprob: -10.579731941223145

Token 661: ' avoid' (ID: 8397)
  Prédit: ' avoid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avoid' → logprob: -0.055544570088386536
    2. 'avoid' → logprob: -3.43054461479187
    3. ' ensure' → logprob: -4.680544376373291
    4. ')' → logprob: -4.805544376373291
    5. ' prevent' → logprob: -6.305544376373291
    6. ' be' → logprob: -7.555544376373291
    7. 'ensure' → logprob: -7.680544376373291
    8. 'def' → logprob: -7.805544376373291
    9. ' not' → logprob: -8.43054485321045
    10. ' allow' → logprob: -8.55554485321045

Token 662: ' leading' (ID: 8117)
  Prédit: ' leading'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leading' → logprob: -0.13104382157325745
    2. ' division' → logprob: -3.7560439109802246
    3. 'leading' → logprob: -4.006043910980225
    4. ' divis' → logprob: -4.131043910980225
    5. ' composite' → logprob: -4.381043910980225
    6. ' trailing' → logprob: -4.631043910980225
    7. ' ' → logprob: -4.756043910980225
    8. ' being' → logprob: -5.506043910980225
    9. ' non' → logprob: -5.506043910980225
    10. ' divisible' → logprob: -5.756043910980225

Token 663: ' ' (ID: 220)
  Prédit: ' zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.17367437481880188
    2. ' zero' → logprob: -2.0486743450164795
    3. '0' → logprob: -4.423674583435059
    4. ' ' → logprob: -4.923674583435059
    5. 'zero' → logprob: -5.173674583435059
    6. 'zeros' → logprob: -5.548674583435059
    7. ' digit' → logprob: -7.423674583435059
    8. ')' → logprob: -7.798674583435059
    9. 'digit' → logprob: -7.798674583435059
    10. '_zero' → logprob: -9.798674583435059

Token 664: '0' (ID: 15)
  Prédit: ' zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.2436840534210205
    2. 'zero' → logprob: -2.4936840534210205
    3. 'zeros' → logprob: -2.7436840534210205
    4. ' zero' → logprob: -3.1186840534210205
    5. '0' → logprob: -3.7436840534210205
    6. 'digit' → logprob: -7.118683815002441
    7. ' ' → logprob: -7.868683815002441
    8. ' digit' → logprob: -9.118683815002441
    9. ')' → logprob: -10.368683815002441
    10. '_zero' → logprob: -10.743683815002441

Token 665: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008487983606755733
    2. ')
' → logprob: -6.008488178253174
    3. ' )' → logprob: -6.008488178253174
    4. 's' → logprob: -6.383488178253174
    5. '0' → logprob: -6.758488178253174
    6. ' and' → logprob: -8.508487701416016
    7. ' or' → logprob: -9.508487701416016
    8. ''s' → logprob: -9.883487701416016
    9. '')' → logprob: -10.008487701416016
    10. ').' → logprob: -10.008487701416016

Token 666: ' reversed' (ID: 57184)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6245959997177124
    2. 'the' → logprob: -1.4995959997177124
    3. 'number' → logprob: -2.624596118927002
    4. ' number' → logprob: -2.749596118927002
    5. 'g' → logprob: -3.499596118927002
    6. ' g' → logprob: -3.749596118927002
    7. 'b' → logprob: -4.749596118927002
    8. ' ' → logprob: -5.249596118927002
    9. ' b' → logprob: -5.249596118927002
    10. ' next' → logprob: -5.624596118927002

Token 667: ' side' (ID: 4307)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8616412878036499
    2. ')' → logprob: -1.73664128780365
    3. ' part' → logprob: -2.2366414070129395
    4. 'g' → logprob: -2.4866414070129395
    5. ' b' → logprob: -2.4866414070129395
    6. ' digit' → logprob: -3.3616414070129395
    7. 'digit' → logprob: -3.4866414070129395
    8. ' g' → logprob: -4.2366414070129395
    9. 'part' → logprob: -5.2366414070129395
    10. ' number' → logprob: -5.4866414070129395

Token 668: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009410137310624123
    2. ')
' → logprob: -5.5094099044799805
    3. '):' → logprob: -6.0094099044799805
    4. '1' → logprob: -7.3844099044799805
    5. ' )' → logprob: -7.7594099044799805
    6. '0' → logprob: -8.00940990447998
    7. '):
' → logprob: -8.50940990447998
    8. '   ' → logprob: -8.63440990447998
    9. 's' → logprob: -8.88440990447998
    10. '_' → logprob: -9.13440990447998

Token 669: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06723877787590027
    2. '
' → logprob: -2.8172388076782227
    3. '    
' → logprob: -5.442238807678223
    4. 'def' → logprob: -8.192238807678223
    5. 'for' → logprob: -9.192238807678223
    6. '  
' → logprob: -9.442238807678223
    7. 'import' → logprob: -9.442238807678223
    8. '#' → logprob: -9.567238807678223
    9. '```' → logprob: -9.692238807678223
    10. ',' → logprob: -9.942238807678223

Token 670: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08466862142086029
    2. '
' → logprob: -2.8346686363220215
    3. '    
' → logprob: -3.8346686363220215
    4. 'def' → logprob: -8.584668159484863
    5. '#' → logprob: -9.334668159484863
    6. '   
' → logprob: -9.334668159484863
    7. 'for' → logprob: -9.584668159484863
    8. ' 
' → logprob: -9.584668159484863
    9. '  
' → logprob: -9.709668159484863
    10. 'import' → logprob: -9.959668159484863

Token 671: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002423814032226801
    2. '
' → logprob: -6.2524237632751465
    3. '    
' → logprob: -8.502424240112305
    4. 'def' → logprob: -9.627424240112305
    5. 'import' → logprob: -10.252424240112305
    6. 'for' → logprob: -10.252424240112305
    7. 'digits' → logprob: -10.252424240112305
    8. ' for' → logprob: -10.502424240112305
    9. 'from' → logprob: -10.627424240112305
    10. '```' → logprob: -11.502424240112305

Token 672: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11143140494823456
    2. 'for' → logprob: -2.986431360244751
    3. 'digits' → logprob: -3.986431360244751
    4. ' for' → logprob: -4.23643159866333
    5. '#' (adapté à ' #') → logprob: -5.11143159866333
    6. 'c' → logprob: -5.36143159866333
    7. 'best' → logprob: -6.23643159866333
    8. ' digits' → logprob: -6.48643159866333
    9. 'b' → logprob: -6.86143159866333
    10. ' best' → logprob: -6.98643159866333

Token 673: ' Since' (ID: 12265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34559357166290283
    2. '   ' → logprob: -2.0955934524536133
    3. 'digits' → logprob: -2.8455934524536133
    4. 'c' → logprob: -3.0955934524536133
    5. 'from' → logprob: -3.4705934524536133
    6. 'def' → logprob: -4.845593452453613
    7. 'best' → logprob: -4.970593452453613
    8. ' for' → logprob: -4.970593452453613
    9. '#' → logprob: -5.595593452453613
    10. 'b' → logprob: -6.095593452453613

Token 674: ' brute' (ID: 128602)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.18219886720180511
    2. 'n' → logprob: -1.8071988821029663
    3. ' c' → logprob: -7.057199001312256
    4. ' True' → logprob: -7.307199001312256
    5. ' len' → logprob: -8.557198524475098
    6. 'c' → logprob: -8.932198524475098
    7. ' ' → logprob: -9.057198524475098
    8. ' not' → logprob: -9.057198524475098
    9. ' the' → logprob: -9.807198524475098
    10. '   ' → logprob: -10.057198524475098

Token 675: ' force' (ID: 9578)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008851985447108746
    2. '_force' → logprob: -5.133852005004883
    3. ' _' → logprob: -6.008852005004883
    4. ' force' → logprob: -8.008852005004883
    5. '-' → logprob: -10.258852005004883
    6. ' ' → logprob: -11.258852005004883
    7. '_FORCE' → logprob: -11.258852005004883
    8. ')' → logprob: -11.258852005004883
    9. '   ' → logprob: -11.383852005004883
    10. ' forcing' → logprob: -11.758852005004883

Token 676: ' over' (ID: 1072)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.763886034488678
    2. ' is' → logprob: -2.013885974884033
    3. '<|end|>' → logprob: -2.263885974884033
    4. ' for' → logprob: -2.638885974884033
    5. '_' → logprob: -2.763885974884033
    6. ',' → logprob: -4.013885974884033
    7. '<|end|>' → logprob: -4.013885974884033
    8. ' continues' → logprob: -4.138885974884033
    9. '#' → logprob: -4.263885974884033
    10. 'for' → logprob: -4.638885974884033

Token 677: ' ' (ID: 220)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.6607689261436462
    2. ' n' → logprob: -1.285768985748291
    3. ' range' → logprob: -2.285768985748291
    4. 'n' → logprob: -3.535768985748291
    5. ' pairs' → logprob: -4.285768985748291
    6. ' ' → logprob: -4.535768985748291
    7. ' digits' → logprob: -4.535768985748291
    8. 'all' → logprob: -4.785768985748291
    9. 'digits' → logprob: -4.785768985748291
    10. ' the' → logprob: -4.910768985748291

Token 678: '10' (ID: 702)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1541585624217987
    2. 'digits' → logprob: -2.904158592224121
    3. '10' → logprob: -3.279158592224121
    4. 'all' → logprob: -4.029158592224121
    5. '9' → logprob: -4.404158592224121
    6. 'range' → logprob: -5.404158592224121
    7. ' n' → logprob: -5.654158592224121
    8. 'b' → logprob: -5.779158592224121
    9. 'pairs' → logprob: -5.904158592224121
    10. 'the' → logprob: -5.904158592224121

Token 679: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.49808469414711
    2. ' **' → logprob: -0.9980846643447876
    3. '0' → logprob: -4.248084545135498
    4. '^' → logprob: -4.873084545135498
    5. ' ' → logprob: -7.623084545135498
    6. '
' → logprob: -7.998084545135498
    7. ' ^' → logprob: -8.498085021972656
    8. ' *' → logprob: -8.623085021972656
    9. '_' → logprob: -8.873085021972656
    10. '000' → logprob: -8.998085021972656

Token 680: '10' (ID: 702)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014200292527675629
    2. ' n' → logprob: -4.264200210571289
    3. '10' → logprob: -10.639200210571289
    4. '9' → logprob: -12.639200210571289
    5. '```' → logprob: -12.764200210571289
    6. '(n' → logprob: -12.889200210571289
    7. '0' → logprob: -14.014200210571289
    8. ' ' → logprob: -14.139200210571289
    9. '	n' → logprob: -14.264200210571289
    10. '^' → logprob: -14.764200210571289

Token 681: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 682: ' impossible' (ID: 19786)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6972477436065674
    2. ' impossible' → logprob: -0.9472477436065674
    3. ' infe' → logprob: -2.5722477436065674
    4. ' too' → logprob: -4.072247505187988
    5. 'not' → logprob: -4.572247505187988
    6. ' impr' → logprob: -6.322247505187988
    7. ' un' → logprob: -6.572247505187988
    8. 'n' → logprob: -6.697247505187988
    9. 'in' → logprob: -6.822247505187988
    10. ' in' → logprob: -6.947247505187988

Token 683: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14373371005058289
    2. '   ' → logprob: -2.6437337398529053
    3. ':' → logprob: -3.1437337398529053
    4. '<|end|>' → logprob: -4.893733501434326
    5. '<|end|>' → logprob: -5.643733501434326
    6. '.' → logprob: -6.393733501434326
    7. ',
' → logprob: -6.393733501434326
    8. ' for' → logprob: -6.768733501434326
    9. 'for' → logprob: -7.018733501434326
    10. ':
' → logprob: -7.518733501434326

Token 684: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.47826749086380005
    2. '   ' → logprob: -0.9782674908638
    3. ' we' → logprob: -6.478267669677734
    4. ' #' → logprob: -6.728267669677734
    5. ' for' → logprob: -8.103267669677734
    6. 'we' → logprob: -8.103267669677734
    7. 'for' → logprob: -8.228267669677734
    8. 'import' → logprob: -8.603267669677734
    9. 'def' → logprob: -9.228267669677734
    10. ' continue' → logprob: -9.603267669677734

Token 685: ' apply' (ID: 6096)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.039028525352478
    2. '#' → logprob: -1.414028525352478
    3. ' #' → logprob: -2.0390286445617676
    4. '   ' → logprob: -2.4140286445617676
    5. ' try' → logprob: -3.1640286445617676
    6. ' will' → logprob: -3.1640286445617676
    7. ' can' → logprob: -3.2890286445617676
    8. ' ' → logprob: -4.039028644561768
    9. 'import' → logprob: -4.789028644561768
    10. ''ll' → logprob: -4.789028644561768

Token 686: ' a' (ID: 261)
  Prédit: ' pruning'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pruning' → logprob: -0.8842292428016663
    2. ' a' → logprob: -1.1342291831970215
    3. 'a' → logprob: -1.7592291831970215
    4. ' back' → logprob: -2.8842291831970215
    5. ' heur' → logprob: -4.7592291831970215
    6. ' heuristic' → logprob: -4.8842291831970215
    7. 'back' → logprob: -5.0092291831970215
    8. 'pr' → logprob: -5.5092291831970215
    9. ' an' → logprob: -5.7592291831970215
    10. ' some' → logprob: -6.1342291831970215

Token 687: ' back' (ID: 1602)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6136285662651062
    2. 'def' → logprob: -2.113628625869751
    3. ' pruning' → logprob: -2.238628625869751
    4. ' for' → logprob: -3.363628625869751
    5. ' combination' → logprob: -3.488628625869751
    6. 'n' → logprob: -3.863628625869751
    7. 'for' → logprob: -4.238628387451172
    8. ' combin' → logprob: -4.238628387451172
    9. ' heuristic' → logprob: -4.363628387451172
    10. 'pr' → logprob: -4.488628387451172

Token 688: 'tracking' (ID: 83383)
  Prédit: 'tracking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tracking' → logprob: -0.17964978516101837
    2. 't' → logprob: -2.429649829864502
    3. 'track' → logprob: -3.429649829864502
    4. 'tr' → logprob: -3.804649829864502
    5. '   ' → logprob: -4.804649829864502
    6. 'trace' → logprob: -5.554649829864502
    7. 'str' → logprob: -6.179649829864502
    8. ' ' → logprob: -6.554649829864502
    9. '_' → logprob: -6.679649829864502
    10. 'tracker' → logprob: -7.054649829864502

Token 689: ' with' (ID: 483)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42175886034965515
    2. ' approach' → logprob: -2.0467588901519775
    3. '    ' → logprob: -2.6717588901519775
    4. '   ' → logprob: -3.1717588901519775
    5. '<|end|>' → logprob: -3.1717588901519775
    6. '_' → logprob: -4.671758651733398
    7. '  ' → logprob: -4.671758651733398
    8. '<|end|>' → logprob: -4.921758651733398
    9. 'def' → logprob: -5.421758651733398
    10. ' search' → logprob: -5.421758651733398

Token 690: ' pruning' (ID: 135775)
  Prédit: ' pruning'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pruning' → logprob: -0.030376989394426346
    2. 'pr' → logprob: -4.65537691116333
    3. ' depth' → logprob: -5.28037691116333
    4. 'depth' → logprob: -5.90537691116333
    5. 'memo' → logprob: -6.03037691116333
    6. 'early' → logprob: -6.03037691116333
    7. ' early' → logprob: -6.15537691116333
    8. ' memo' → logprob: -6.28037691116333
    9. 'limit' → logprob: -6.90537691116333
    10. 'def' → logprob: -7.03037691116333

Token 691: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7223777174949646
    2. '(' → logprob: -1.2223777770996094
    3. 'def' → logprob: -2.0973777770996094
    4. ':' → logprob: -3.2223777770996094
    5. ' ' → logprob: -4.472377777099609
    6. '_' → logprob: -4.972377777099609
    7. ' (' → logprob: -5.097377777099609
    8. '(n' → logprob: -5.347377777099609
    9. '    ' → logprob: -5.722377777099609
    10. '(
' → logprob: -5.847377777099609

Token 692: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004644672852009535
    2. ' def' → logprob: -6.379644870758057
    3. '    
' → logprob: -6.754644870758057
    4. 'def' → logprob: -6.879644870758057
    5. '    ' → logprob: -7.629644870758057
    6. '
' → logprob: -8.504644393920898
    7. ' indentation' → logprob: -11.754644393920898
    8. ' 
' → logprob: -12.004644393920898
    9. '     
' → logprob: -12.129644393920898
    10. ' for' → logprob: -12.129644393920898

Token 693: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00611838698387146
    2. ' def' → logprob: -5.881118297576904
    3. '    
' → logprob: -6.631118297576904
    4. '
' → logprob: -7.256118297576904
    5. '    ' → logprob: -7.381118297576904
    6. 'def' → logprob: -7.506118297576904
    7. ' 
' → logprob: -10.381118774414062
    8. ' for' → logprob: -11.006118774414062
    9. ' indentation' → logprob: -11.006118774414062
    10. ' indent' → logprob: -11.131118774414062

Token 694: ' We' (ID: 1416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0073592099361121655
    2. '    
' → logprob: -5.882359027862549
    3. '    ' → logprob: -6.132359027862549
    4. ' def' → logprob: -6.632359027862549
    5. '
' → logprob: -7.507359027862549
    6. 'def' → logprob: -8.632359504699707
    7. ' 
' → logprob: -9.007359504699707
    8. '     
' → logprob: -10.132359504699707
    9. ' ' → logprob: -10.382359504699707
    10. '       ' → logprob: -10.632359504699707

Token 695: ' try' (ID: 2075)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6249105930328369
    2. ' continue' → logprob: -1.499910593032837
    3. ' def' → logprob: -2.874910593032837
    4. ' will' → logprob: -3.124910593032837
    5. '   ' → logprob: -3.374910593032837
    6. 'def' → logprob: -3.874910593032837
    7. ' try' → logprob: -3.999910593032837
    8. ' can' → logprob: -4.624910354614258
    9. ' ' → logprob: -4.749910354614258
    10. '    ' → logprob: -4.749910354614258

Token 696: ' to' (ID: 316)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.5761293768882751
    2. '   ' → logprob: -1.32612943649292
    3. ' to' → logprob: -2.57612943649292
    4. ' ' → logprob: -3.07612943649292
    5. 'digits' → logprob: -4.70112943649292
    6. '\t' → logprob: -4.95112943649292
    7. '       ' → logprob: -5.57612943649292
    8. ' for' → logprob: -5.57612943649292
    9. 'to' → logprob: -5.70112943649292
    10. ' digits' → logprob: -6.20112943649292

Token 697: ' build' (ID: 3024)
  Prédit: ' assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' assign' → logprob: -0.10999851673841476
    2. 'assign' → logprob: -2.4849984645843506
    3. ' build' → logprob: -4.73499870300293
    4. 'build' → logprob: -6.60999870300293
    5. ' choose' → logprob: -6.60999870300293
    6. ' generate' → logprob: -6.73499870300293
    7. 'choose' → logprob: -6.98499870300293
    8. ' search' → logprob: -6.98499870300293
    9. ' def' → logprob: -7.23499870300293
    10. ' ' → logprob: -7.48499870300293

Token 698: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5295096039772034
    2. 'digits' → logprob: -1.4045095443725586
    3. 'the' → logprob: -2.4045095443725586
    4. ' digits' → logprob: -3.5295095443725586
    5. 'b' → logprob: -4.654509544372559
    6. '   ' → logprob: -4.779509544372559
    7. 'd' → logprob: -4.779509544372559
    8. ' ' → logprob: -5.154509544372559
    9. 'number' → logprob: -5.904509544372559
    10. ' b' → logprob: -6.029509544372559

Token 699: ' digits' (ID: 37806)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -1.3974977731704712
    2. ' digits' → logprob: -1.6474977731704712
    3. 'digits' → logprob: -2.1474976539611816
    4. ' ' → logprob: -2.1474976539611816
    5. ' next' → logprob: -2.7724976539611816
    6. ' current' → logprob: -3.1474976539611816
    7. ' b' → logprob: -3.2724976539611816
    8. ' code' → logprob: -3.3974976539611816
    9. 'b' → logprob: -3.5224976539611816
    10. 'd' → logprob: -3.7724976539611816

Token 700: ' from' (ID: 591)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8182195425033569
    2. '   ' → logprob: -1.193219542503357
    3. ' for' → logprob: -2.0682196617126465
    4. ' =' → logprob: -3.4432196617126465
    5. 'for' → logprob: -3.5682196617126465
    6. ' of' → logprob: -4.1932196617126465
    7. '[' → logprob: -4.6932196617126465
    8. '[]' → logprob: -4.8182196617126465
    9. 'def' → logprob: -5.0682196617126465
    10. '_for' → logprob: -5.1932196617126465

Token 701: ' most' (ID: 1645)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002278957748785615
    2. 'i' → logprob: -7.002278804779053
    3. ' ' → logprob: -7.252278804779053
    4. ' i' → logprob: -8.502279281616211
    5. 'left' → logprob: -8.627279281616211
    6. 'n' → logprob: -9.502279281616211
    7. 'the' → logprob: -10.127279281616211
    8. 'b' → logprob: -10.502279281616211
    9. ' the' → logprob: -10.627279281616211
    10. ' left' → logprob: -10.627279281616211

Token 702: ' significant' (ID: 6933)
  Prédit: ' significant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' significant' → logprob: -0.3697482645511627
    2. '_' → logprob: -1.7447482347488403
    3. '_sign' → logprob: -3.24474835395813
    4. ')' → logprob: -3.99474835395813
    5. 'sign' → logprob: -3.99474835395813
    6. '```' → logprob: -4.619748115539551
    7. '   ' → logprob: -4.869748115539551
    8. ' ' → logprob: -5.869748115539551
    9. '_indent' → logprob: -5.994748115539551
    10. ' valuable' → logprob: -5.994748115539551

Token 703: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7415340542793274
    2. '_' → logprob: -0.8665340542793274
    3. ' _' → logprob: -2.9915339946746826
    4. '_digit' → logprob: -3.2415339946746826
    5. ' digit' → logprob: -5.491534233093262
    6. 'digit' → logprob: -5.741534233093262
    7. ' position' → logprob: -6.616534233093262
    8. ' ' → logprob: -6.991534233093262
    9. '  ' → logprob: -7.741534233093262
    10. '_b' → logprob: -7.866534233093262

Token 704: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5746284127235413
    2. '0' → logprob: -1.0746283531188965
    3. ' b' → logprob: -2.9496283531188965
    4. ')' → logprob: -3.8246283531188965
    5. 'n' → logprob: -4.8246283531188965
    6. ' ' → logprob: -5.3246283531188965
    7. ')b' → logprob: -6.3246283531188965
    8. 'i' → logprob: -6.5746283531188965
    9. '```' → logprob: -7.5746283531188965
    10. 'def' → logprob: -7.8246283531188965

Token 705: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09738032519817352
    2. '_i' → logprob: -3.2223803997039795
    3. ')' → logprob: -3.3473803997039795
    4. ')_' → logprob: -4.7223801612854
    5. 'i' → logprob: -5.5973801612854
    6. '_)' → logprob: -6.3473801612854
    7. '1' → logprob: -6.7223801612854
    8. ' _' → logprob: -7.3473801612854
    9. '[' → logprob: -7.7223801612854
    10. '   ' → logprob: -8.597380638122559

Token 706: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018208006396889687
    2. ' )' → logprob: -4.393208026885986
    3. '   ' → logprob: -6.268208026885986
    4. ',' → logprob: -6.893208026885986
    5. '_' → logprob: -7.518208026885986
    6. ' ' → logprob: -7.643208026885986
    7. ')
' → logprob: -7.768208026885986
    8. '=' → logprob: -9.018207550048828
    9. '[' → logprob: -9.143207550048828
    10. 'd' → logprob: -9.143207550048828

Token 707: ' to' (ID: 316)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.702631413936615
    2. '   ' → logprob: -1.7026314735412598
    3. ' ' → logprob: -1.9526314735412598
    4. ')' → logprob: -2.7026314735412598
    5. ' =' → logprob: -3.7026314735412598
    6. ',' → logprob: -3.7026314735412598
    7. '=' → logprob: -4.20263147354126
    8. '    ' → logprob: -4.82763147354126
    9. '  ' → logprob: -5.07763147354126
    10. '```' → logprob: -5.07763147354126

Token 708: ' least' (ID: 5153)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.899266242980957
    2. ' b' → logprob: -1.274266242980957
    3. ' least' → logprob: -1.774266242980957
    4. 'least' → logprob: -2.149266242980957
    5. 'most' → logprob: -4.274266242980957
    6. ' the' → logprob: -5.399266242980957
    7. ' most' → logprob: -6.024266242980957
    8. 'last' → logprob: -6.524266242980957
    9. ' last' → logprob: -6.524266242980957
    10. 'the' → logprob: -6.899266242980957

Token 709: ' significant' (ID: 6933)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08886966854333878
    2. ' _' → logprob: -2.963869571685791
    3. ' ' → logprob: -4.088869571685791
    4. '```' → logprob: -5.088869571685791
    5. '   ' → logprob: -5.588869571685791
    6. '    ' → logprob: -6.588869571685791
    7. '  ' → logprob: -7.338869571685791
    8. '       ' → logprob: -7.588869571685791
    9. '     ' → logprob: -8.21387004852295
    10. '_d' → logprob: -8.21387004852295

Token 710: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17855042219161987
    2. '_digit' → logprob: -2.8035504817962646
    3. ' _' → logprob: -3.0535504817962646
    4. 'digit' → logprob: -4.0535502433776855
    5. ')' → logprob: -4.9285502433776855
    6. '```' → logprob: -5.0535502433776855
    7. '   ' → logprob: -5.0535502433776855
    8. ' ' → logprob: -5.3035502433776855
    9. ' digit' → logprob: -5.4285502433776855
    10. '_d' → logprob: -6.4285502433776855

Token 711: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04255865886807442
    2. ' b' → logprob: -4.042558670043945
    3. 'g' → logprob: -4.292558670043945
    4. 'n' → logprob: -5.417558670043945
    5. '...' → logprob: -6.417558670043945
    6. 'bn' → logprob: -6.417558670043945
    7. 'i' → logprob: -7.292558670043945
    8. ')' → logprob: -7.542558670043945
    9. ' g' → logprob: -7.542558670043945
    10. 'gn' → logprob: -8.042558670043945

Token 712: '_n' (ID: 2170)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7649315595626831
    2. 'i' → logprob: -1.389931559562683
    3. '_i' → logprob: -2.1399316787719727
    4. '2' → logprob: -2.8899316787719727
    5. '_n' → logprob: -3.0149316787719727
    6. ')' → logprob: -3.1399316787719727
    7. '_' → logprob: -4.639931678771973
    8. '1' → logprob: -5.014931678771973
    9. ')_' → logprob: -6.389931678771973
    10. '_)' → logprob: -7.264931678771973

Token 713: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006051208823919296
    2. '):' → logprob: -5.756051063537598
    3. '_' → logprob: -6.631051063537598
    4. 'b' → logprob: -7.881051063537598
    5. '),' → logprob: -8.131051063537598
    6. '1' → logprob: -8.756051063537598
    7. ')_' → logprob: -8.881051063537598
    8. 'd' → logprob: -9.131051063537598
    9. ',' → logprob: -9.381051063537598
    10. '):
' → logprob: -10.006051063537598

Token 714: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09597697854042053
    2. ':' → logprob: -3.0959770679473877
    3. '_' → logprob: -3.7209770679473877
    4. ',' → logprob: -5.345976829528809
    5. '       ' → logprob: -5.345976829528809
    6. ')' → logprob: -5.595976829528809
    7. '):' → logprob: -5.970976829528809
    8. ' ' → logprob: -6.970976829528809
    9. '    ' → logprob: -6.970976829528809
    10. '.' → logprob: -7.220976829528809

Token 715: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05716227367520332
    2. ':' → logprob: -3.057162284851074
    3. '       ' → logprob: -5.807162284851074
    4. '):' → logprob: -6.682162284851074
    5. ',' → logprob: -6.932162284851074
    6. '    
' → logprob: -7.057162284851074
    7. '_' → logprob: -7.557162284851074
    8. '    ' → logprob: -8.057162284851074
    9. ')' → logprob: -8.307162284851074
    10. '\' → logprob: -8.432162284851074

Token 716: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011993051506578922
    2. ':' → logprob: -5.761992931365967
    3. '_' → logprob: -5.761992931365967
    4. ' ' → logprob: -6.261992931365967
    5. '       ' → logprob: -6.761992931365967
    6. '    ' → logprob: -7.511992931365967
    7. ',' → logprob: -7.636992931365967
    8. '    
' → logprob: -7.761992931365967
    9. '[' → logprob: -9.011993408203125
    10. '  ' → logprob: -9.136993408203125

Token 717: ' prune' (ID: 140388)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.7522763609886169
    2. ' prune' → logprob: -1.7522764205932617
    3. ' try' → logprob: -2.0022764205932617
    4. ' back' → logprob: -2.8772764205932617
    5. ' search' → logprob: -3.6272764205932617
    6. ' stop' → logprob: -4.002276420593262
    7. ' skip' → logprob: -4.127276420593262
    8. ' continue' → logprob: -4.127276420593262
    9. ' def' → logprob: -4.502276420593262
    10. ' validate' → logprob: -4.627276420593262

Token 718: ' impossible' (ID: 19786)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7362362742424011
    2. '_' → logprob: -1.236236333847046
    3. '   ' → logprob: -2.236236333847046
    4. '    ' → logprob: -2.611236333847046
    5. '       ' → logprob: -4.736236095428467
    6. '	' → logprob: -4.861236095428467
    7. '  ' → logprob: -5.111236095428467
    8. '<|end|>' → logprob: -5.236236095428467
    9. '        ' → logprob: -5.986236095428467
    10. '\' → logprob: -5.986236095428467

Token 719: ' paths' (ID: 23373)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1845276355743408
    2. ' ' → logprob: -1.5595276355743408
    3. '   ' → logprob: -1.5595276355743408
    4. '_digit' → logprob: -2.059527635574341
    5. '_digits' → logprob: -3.059527635574341
    6. '_tokens' → logprob: -3.809527635574341
    7. '    ' → logprob: -4.309527397155762
    8. '  ' → logprob: -4.559527397155762
    9. 'digits' → logprob: -4.934527397155762
    10. '_token' → logprob: -4.934527397155762

Token 720: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007230812683701515
    2. 'def' → logprob: -5.882230758666992
    3. '
' → logprob: -6.382230758666992
    4. ':' → logprob: -6.757230758666992
    5. '    
' → logprob: -6.882230758666992
    6. '\' → logprob: -9.507230758666992
    7. '    ' → logprob: -9.882230758666992
    8. ' for' → logprob: -10.007230758666992
    9. ' def' → logprob: -10.132230758666992
    10. ' ' → logprob: -10.132230758666992

Token 721: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008970508933998644
    2. '    
' → logprob: -7.50089693069458
    3. '    ' → logprob: -8.250897407531738
    4. '       ' → logprob: -10.000897407531738
    5. '
' → logprob: -11.625897407531738
    6. '     
' → logprob: -12.250897407531738
    7. '        
' → logprob: -12.875897407531738
    8. '  ' → logprob: -12.875897407531738
    9. '   
' → logprob: -13.000897407531738
    10. '\' → logprob: -13.125897407531738

Token 722: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016370968660339713
    2. '    
' → logprob: -7.126636981964111
    3. '    ' → logprob: -7.251636981964111
    4. '       ' → logprob: -9.87663745880127
    5. '
' → logprob: -10.87663745880127
    6. ' for' → logprob: -11.87663745880127
    7. ' 
' → logprob: -12.00163745880127
    8. '  ' → logprob: -12.12663745880127
    9. 'for' → logprob: -12.12663745880127
    10. '     
' → logprob: -12.12663745880127

Token 723: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007827070076018572
    2. '    
' → logprob: -7.500782489776611
    3. '
' → logprob: -9.25078296661377
    4. '    ' → logprob: -9.75078296661377
    5. '#' → logprob: -10.37578296661377
    6. '```' → logprob: -11.62578296661377
    7. '       ' → logprob: -11.75078296661377
    8. '    
    
' → logprob: -12.75078296661377
    9. '<|end|>' → logprob: -12.75078296661377
    10. '   ' → logprob: -13.12578296661377

Token 724: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000410415610531345
    2. '    ' → logprob: -8.500410079956055
    3. '    
' → logprob: -9.875410079956055
    4. 'def' → logprob: -10.000410079956055
    5. '
' → logprob: -10.250410079956055
    6. 'for' → logprob: -10.500410079956055
    7. ' for' → logprob: -10.750410079956055
    8. '       ' → logprob: -11.500410079956055
    9. '#' (adapté à ' #') → logprob: -11.875410079956055
    10. '  ' → logprob: -13.500410079956055

Token 725: ' We' (ID: 1416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20442520081996918
    2. 'def' → logprob: -2.204425096511841
    3. ' for' → logprob: -3.329425096511841
    4. ' def' → logprob: -3.454425096511841
    5. 'for' → logprob: -5.70442533493042
    6. ' if' → logprob: -6.57942533493042
    7. '
' → logprob: -7.32942533493042
    8. ' digit' → logprob: -8.454424858093262
    9. ' digits' → logprob: -8.704424858093262
    10. 'if' → logprob: -8.954424858093262

Token 726: ' will' (ID: 738)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8127419352531433
    2. ' continue' → logprob: -0.9377419352531433
    3. ' try' → logprob: -2.062741994857788
    4. ' =' → logprob: -5.187741756439209
    5. ' will' → logprob: -5.312741756439209
    6. ' have' → logprob: -5.812741756439209
    7. '.' → logprob: -5.937741756439209
    8. ' can' → logprob: -6.062741756439209
    9. ' ' → logprob: -6.312741756439209
    10. 'continue' → logprob: -6.312741756439209

Token 727: ' implement' (ID: 6365)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7342715263366699
    2. ' def' → logprob: -1.60927152633667
    3. '   ' → logprob: -2.48427152633667
    4. ' try' → logprob: -2.48427152633667
    5. ' continue' → logprob: -2.73427152633667
    6. 'continue' → logprob: -3.48427152633667
    7. ' use' → logprob: -4.98427152633667
    8. ' ' → logprob: -5.10927152633667
    9. '    ' → logprob: -5.23427152633667
    10. ' proceed' → logprob: -5.35927152633667

Token 728: ' back' (ID: 1602)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11499661207199097
    2. '    ' → logprob: -2.9899966716766357
    3. 'def' → logprob: -3.3649966716766357
    4. '    
' → logprob: -4.364996433258057
    5. '```' → logprob: -5.364996433258057
    6. '
' → logprob: -6.614996433258057
    7. '\t' → logprob: -6.864996433258057
    8. '     
' → logprob: -7.114996433258057
    9. '\' → logprob: -7.489996433258057
    10. ' def' → logprob: -7.864996433258057

Token 729: 'tracking' (ID: 83383)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5364784002304077
    2. 't' → logprob: -1.5364784002304077
    3. 'tracking' → logprob: -1.9114784002304077
    4. '   ' → logprob: -4.036478519439697
    5. '_t' → logprob: -4.161478519439697
    6. 'tr' → logprob: -4.786478519439697
    7. 'track' → logprob: -5.786478519439697
    8. '_tracking' → logprob: -6.411478519439697
    9. '\' → logprob: -6.786478519439697
    10. '_tr' → logprob: -6.911478519439697

Token 730: ' to' (ID: 316)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.06795334815979
    2. ':' → logprob: -1.06795334815979
    3. '   ' → logprob: -1.56795334815979
    4. '(n' → logprob: -3.31795334815979
    5. 'def' → logprob: -3.56795334815979
    6. '(
' → logprob: -3.94295334815979
    7. '_' → logprob: -5.192953109741211
    8. '():' → logprob: -5.442953109741211
    9. '
' → logprob: -5.567953109741211
    10. ':
' → logprob: -7.067953109741211

Token 731: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.2680408954620361
    2. ' find' → logprob: -1.6430408954620361
    3. 'build' → logprob: -1.8930408954620361
    4. ' try' → logprob: -2.518040895462036
    5. 'assign' → logprob: -2.643040895462036
    6. ' build' → logprob: -2.643040895462036
    7. 'search' → logprob: -3.768040895462036
    8. 'generate' → logprob: -3.768040895462036
    9. ' search' → logprob: -3.893040895462036
    10. 'try' → logprob: -4.018040657043457

Token 732: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8186749219894409
    2. 'digits' → logprob: -1.068674921989441
    3. 'the' → logprob: -2.1936750411987305
    4. ' digits' → logprob: -3.0686750411987305
    5. 'def' → logprob: -3.4436750411987305
    6. '   ' → logprob: -4.5686750411987305
    7. ' a' → logprob: -5.4436750411987305
    8. 'a' → logprob: -5.9436750411987305
    9. 'b' → logprob: -6.4436750411987305
    10. 'possible' → logprob: -7.1936750411987305

Token 733: ' largest' (ID: 10574)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.9517990350723267
    2. ' next' → logprob: -0.9517990350723267
    3. 'best' → logprob: -2.326798915863037
    4. 'digits' → logprob: -3.076798915863037
    5. 'next' → logprob: -3.201798915863037
    6. ' digits' → logprob: -3.576798915863037
    7. 'def' → logprob: -5.326798915863037
    8. 'b' → logprob: -6.326798915863037
    9. ' assigned' → logprob: -6.451798915863037
    10. ' first' → logprob: -6.951798915863037

Token 734: ' number' (ID: 2086)
  Prédit: ' digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' digit' → logprob: -0.7072132229804993
    2. ' ' → logprob: -1.7072131633758545
    3. 'digit' → logprob: -1.9572131633758545
    4. '_' → logprob: -2.4572131633758545
    5. '_digit' → logprob: -3.0822131633758545
    6. ' possible' → logprob: -3.8322131633758545
    7. 'possible' → logprob: -5.457213401794434
    8. ' digits' → logprob: -5.582213401794434
    9. '_possible' → logprob: -5.582213401794434
    10. ' _' → logprob: -5.582213401794434

Token 735: ' satisfying' (ID: 52718)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9138281345367432
    2. '(' → logprob: -1.6638281345367432
    3. ':' → logprob: -1.6638281345367432
    4. '_' → logprob: -1.9138281345367432
    5. ' ' → logprob: -4.163827896118164
    6. '(
' → logprob: -4.538827896118164
    7. ' (' → logprob: -4.538827896118164
    8. ',' → logprob: -5.413827896118164
    9. ' :' → logprob: -5.538827896118164
    10. '    ' → logprob: -5.788827896118164

Token 736: ' rules' (ID: 9607)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.12197140604257584
    2. ' the' → logprob: -2.621971368789673
    3. '   ' → logprob: -3.371971368789673
    4. '```' → logprob: -5.121971607208252
    5. '
' → logprob: -8.246971130371094
    6. '``' → logprob: -8.496971130371094
    7. 'prime' → logprob: -8.746971130371094
    8. 'that' → logprob: -8.746971130371094
    9. 'constraints' → logprob: -9.121971130371094
    10. 'possible' → logprob: -9.246971130371094

Token 737: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18783339858055115
    2. ':' → logprob: -2.062833309173584
    3. '(' → logprob: -4.187833309173584
    4. 'def' → logprob: -4.687833309173584
    5. '(n' → logprob: -4.937833309173584
    6. '():' → logprob: -5.437833309173584
    7. '
' → logprob: -6.062833309173584
    8. '    
' → logprob: -7.062833309173584
    9. '(
' → logprob: -7.062833309173584
    10. '_' → logprob: -7.312833309173584

Token 738: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002022974193096161
    2. '    
' → logprob: -6.752022743225098
    3. 'def' → logprob: -8.002022743225098
    4. '    ' → logprob: -8.127022743225098
    5. '
' → logprob: -8.877022743225098
    6. ' def' → logprob: -9.877022743225098
    7. ' 
' → logprob: -12.252022743225098
    8. '       ' → logprob: -12.252022743225098
    9. '     
' → logprob: -12.377022743225098
    10. '   
' → logprob: -12.627022743225098

Token 739: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026886097621172667
    2. '    
' → logprob: -6.252688407897949
    3. '
' → logprob: -7.627688407897949
    4. '    ' → logprob: -8.37768840789795
    5. 'def' → logprob: -11.50268840789795
    6. ' 
' → logprob: -12.00268840789795
    7. '     
' → logprob: -12.00268840789795
    8. '       ' → logprob: -12.37768840789795
    9. '   
' → logprob: -12.50268840789795
    10. '        
' → logprob: -12.62768840789795

Token 740: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013145409524440765
    2. 'def' → logprob: -5.138145446777344
    3. ' def' → logprob: -5.263145446777344
    4. '
' → logprob: -6.513145446777344
    5. '    
' → logprob: -8.388145446777344
    6. ' digits' → logprob: -8.763145446777344
    7. ' for' → logprob: -10.263145446777344
    8. 'digits' → logprob: -10.263145446777344
    9. ' indentation' → logprob: -11.013145446777344
    10. ' indent' → logprob: -11.013145446777344

Token 741: ' b' (ID: 287)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26717469096183777
    2. ' def' → logprob: -1.5171747207641602
    3. '   ' → logprob: -5.01717472076416
    4. ' for' → logprob: -5.26717472076416
    5. '
' → logprob: -7.26717472076416
    6. 'for' → logprob: -7.39217472076416
    7. ' indent' → logprob: -8.01717472076416
    8. ' #' → logprob: -8.26717472076416
    9. ' ' → logprob: -8.39217472076416
    10. ' 
' → logprob: -8.51717472076416

Token 742: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0029460862278938293
    2. '_i' → logprob: -6.502945899963379
    3. 'i' → logprob: -7.752945899963379
    4. ')' → logprob: -8.127945899963379
    5. '1' → logprob: -8.377945899963379
    6. '[' → logprob: -9.127945899963379
    7. '_)' → logprob: -10.002945899963379
    8. 'e' → logprob: -10.127945899963379
    9. ')_' → logprob: -10.127945899963379
    10. ',' → logprob: -10.502945899963379

Token 743: ' !=' (ID: 1666)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5164724588394165
    2. ' =' → logprob: -1.5164724588394165
    3. ',' → logprob: -1.6414724588394165
    4. '   ' → logprob: -2.141472339630127
    5. ')' → logprob: -2.766472339630127
    6. '_' → logprob: -3.016472339630127
    7. '[' → logprob: -3.141472339630127
    8. ' ' → logprob: -3.141472339630127
    9. '    ' → logprob: -4.391472339630127
    10. '  ' → logprob: -4.766472339630127

Token 744: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024762547109276056
    2. ' ' → logprob: -6.002476215362549
    3. ' ' → logprob: -15.877476692199707
    4. '
' → logprob: -16.00247573852539
    5. '   ' → logprob: -16.25247573852539
    6. '  ' → logprob: -17.00247573852539
    7. ' 
' → logprob: -17.12747573852539
    8. '```' → logprob: -18.00247573852539
    9. '  
' → logprob: -18.25247573852539
    10. '1' → logprob: -18.75247573852539

Token 745: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026169343618676066
    2. ' ' → logprob: -8.250261306762695
    3. ''' → logprob: -15.500261306762695
    4. '   ' → logprob: -17.000261306762695
    5. '
' → logprob: -17.000261306762695
    6. '"' → logprob: -17.500261306762695
    7. '  ' → logprob: -17.625261306762695
    8. ' ' → logprob: -17.687761306762695
    9. '`' → logprob: -17.875261306762695
    10. '```' → logprob: -18.500261306762695

Token 746: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6928370594978333
    2. '_' → logprob: -1.1928369998931885
    3. ':' → logprob: -1.9428369998931885
    4. ' ' → logprob: -4.692837238311768
    5. 'def' → logprob: -5.067837238311768
    6. ',' → logprob: -5.442837238311768
    7. '    
' → logprob: -5.567837238311768
    8. ' :' → logprob: -5.692837238311768
    9. '       ' → logprob: -5.692837238311768
    10. '(' → logprob: -5.692837238311768

Token 747: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.10129429399967194
    2. 'g' → logprob: -2.3512942790985107
    3. ' b' → logprob: -7.72629451751709
    4. ' ' → logprob: -8.22629451751709
    5. ' ' → logprob: -8.47629451751709
    6. '   ' → logprob: -9.60129451751709
    7. 'b' → logprob: -9.72629451751709
    8. ' (' → logprob: -11.85129451751709
    9. '  ' → logprob: -12.35129451751709
    10. ' n' → logprob: -12.35129451751709

Token 748: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12082362920045853
    2. '_' → logprob: -2.245823621749878
    3. '_i' → logprob: -4.995823860168457
    4. 'i' → logprob: -7.245823860168457
    5. '_n' → logprob: -9.245823860168457
    6. 'n' → logprob: -9.620823860168457
    7. 'g' → logprob: -9.620823860168457
    8. '```' → logprob: -10.495823860168457
    9. '_
' → logprob: -10.745823860168457
    10. ' _' → logprob: -10.745823860168457

Token 749: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.02229403518140316
    2. '!=' → logprob: -4.022294044494629
    3. ')' → logprob: -6.772294044494629
    4. ' ' → logprob: -7.022294044494629
    5. '   ' → logprob: -7.897294044494629
    6. '!' → logprob: -8.022294044494629
    7. '[' → logprob: -8.147294044494629
    8. '_' → logprob: -8.272294044494629
    9. '```' → logprob: -8.522294044494629
    10. ')!=' → logprob: -8.897294044494629

Token 750: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04861132428050041
    2. ' ' → logprob: -3.0486114025115967
    3. '   ' → logprob: -12.173611640930176
    4. '=' → logprob: -12.298611640930176
    5. '1' → logprob: -12.423611640930176
    6. '9' → logprob: -13.048611640930176
    7. '  ' → logprob: -13.548611640930176
    8. '_' → logprob: -14.173611640930176
    9. 'b' → logprob: -14.423611640930176
    10. 'n' → logprob: -14.548611640930176

Token 751: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011915886716451496
    2. ' ' → logprob: -9.12511920928955
    3. '=' → logprob: -12.62511920928955
    4. '1' → logprob: -13.00011920928955
    5. '9' → logprob: -13.12511920928955
    6. '
' → logprob: -14.75011920928955
    7. ''' → logprob: -15.12511920928955
    8. 'b' → logprob: -15.43761920928955
    9. '`' → logprob: -15.62511920928955
    10. '   ' → logprob: -15.75011920928955

Token 752: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11494731158018112
    2. '_' → logprob: -3.1149473190307617
    3. ':' → logprob: -3.6149473190307617
    4. 'def' → logprob: -3.7399473190307617
    5. '    
' → logprob: -6.239947319030762
    6. '(' → logprob: -6.489947319030762
    7. ',' → logprob: -6.614947319030762
    8. '
' → logprob: -7.114947319030762
    9. ' ' → logprob: -7.239947319030762
    10. 'for' → logprob: -7.489947319030762

Token 753: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08045239001512527
    2. ':' → logprob: -3.0804524421691895
    3. '
' → logprob: -4.4554524421691895
    4. '    
' → logprob: -4.9554524421691895
    5. 'def' → logprob: -4.9554524421691895
    6. ',' → logprob: -6.3304524421691895
    7. '  
' → logprob: -7.2054524421691895
    8. '   
' → logprob: -7.7054524421691895
    9. '_' → logprob: -7.8304524421691895
    10. ')' → logprob: -8.080451965332031

Token 754: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04435095191001892
    2. ':' → logprob: -3.5443508625030518
    3. 'def' → logprob: -5.544351100921631
    4. '    
' → logprob: -5.669351100921631
    5. '
' → logprob: -5.919351100921631
    6. ',' → logprob: -6.669351100921631
    7. ')' → logprob: -7.919351100921631
    8. '  
' → logprob: -7.919351100921631
    9. '\' → logprob: -8.044350624084473
    10. '_' → logprob: -8.044350624084473

Token 755: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005399764981120825
    2. 'def' → logprob: -6.005399703979492
    3. '    
' → logprob: -6.755399703979492
    4. ':' → logprob: -7.005399703979492
    5. '
' → logprob: -8.380399703979492
    6. '    ' → logprob: -9.005399703979492
    7. '       ' → logprob: -9.130399703979492
    8. '_' → logprob: -9.630399703979492
    9. ',' → logprob: -9.880399703979492
    10. '   
' → logprob: -10.005399703979492

Token 756: ' combined' (ID: 15890)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2987096905708313
    2. ' def' → logprob: -2.1737096309661865
    3. 'for' → logprob: -2.6737096309661865
    4. ' for' → logprob: -2.7987096309661865
    5. '   ' → logprob: -4.298709869384766
    6. 'd' → logprob: -8.423709869384766
    7. 'digits' → logprob: -8.548709869384766
    8. '
' → logprob: -8.673709869384766
    9. ' ' → logprob: -9.173709869384766
    10. 'digit' → logprob: -10.173709869384766

Token 757: ' number' (ID: 2086)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07047795504331589
    2. ' _' → logprob: -3.8204779624938965
    3. '_number' → logprob: -3.9454779624938965
    4. '_digit' → logprob: -4.1954779624938965
    5. 'number' → logprob: -5.8204779624938965
    6. ' ' → logprob: -6.0704779624938965
    7. ' number' → logprob: -6.0704779624938965
    8. 'digit' → logprob: -6.9454779624938965
    9. '_digits' → logprob: -6.9454779624938965
    10. '_num' → logprob: -8.320477485656738

Token 758: ' no' (ID: 860)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07569176703691483
    2. ' =' → logprob: -2.9506916999816895
    3. '=' → logprob: -4.7006916999816895
    4. ' _' → logprob: -5.0756916999816895
    5. '[' → logprob: -6.3256916999816895
    6. 's' → logprob: -6.9506916999816895
    7. ')' → logprob: -7.2006916999816895
    8. ' ' → logprob: -7.3256916999816895
    9. '_=' → logprob: -8.450692176818848
    10. ''' → logprob: -9.325692176818848

Token 759: ' leading' (ID: 8117)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7383485436439514
    2. 'w' → logprob: -1.6133484840393066
    3. '=' → logprob: -1.9883484840393066
    4. 'n' → logprob: -2.4883484840393066
    5. '_' → logprob: -3.1133484840393066
    6. ' =' → logprob: -3.6133484840393066
    7. ' ' → logprob: -5.363348484039307
    8. '
' → logprob: -5.738348484039307
    9. ' 
' → logprob: -5.863348484039307
    10. '[' → logprob: -6.238348484039307

Token 760: ' zero' (ID: 12421)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.015042589977383614
    2. '0' → logprob: -4.640042781829834
    3. ' _' → logprob: -5.640042781829834
    4. ' ' → logprob: -6.515042781829834
    5. '_zero' → logprob: -9.265042304992676
    6. 'zero' → logprob: -10.140042304992676
    7. 'space' → logprob: -10.140042304992676
    8. ' zeros' → logprob: -11.390042304992676
    9. '_space' → logprob: -11.515042304992676
    10. ' zero' → logprob: -11.515042304992676

Token 761: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0605054646730423
    2. 'def' → logprob: -3.0605053901672363
    3. ':' → logprob: -5.310505390167236
    4. '    
' → logprob: -6.185505390167236
    5. '_' → logprob: -6.560505390167236
    6. '
' → logprob: -7.685505390167236
    7. ' def' → logprob: -7.810505390167236
    8. '    ' → logprob: -7.810505390167236
    9. '(' → logprob: -8.060505867004395
    10. ',' → logprob: -8.185505867004395

Token 762: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016114603728055954
    2. 'def' → logprob: -4.766114711761475
    3. '_' → logprob: -6.141114711761475
    4. ',' → logprob: -6.766114711761475
    5. '    
' → logprob: -7.016114711761475
    6. ')' → logprob: -7.266114711761475
    7. ':' → logprob: -7.641114711761475
    8. '       ' → logprob: -7.891114711761475
    9. '
' → logprob: -8.016114234924316
    10. ' ' → logprob: -9.016114234924316

Token 763: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03583530709147453
    2. '_' → logprob: -4.160835266113281
    3. 'def' → logprob: -5.285835266113281
    4. '       ' → logprob: -6.160835266113281
    5. '    
' → logprob: -6.285835266113281
    6. ':' → logprob: -6.535835266113281
    7. '\' → logprob: -6.660835266113281
    8. '(' → logprob: -6.785835266113281
    9. '
' → logprob: -6.785835266113281
    10. ' ' → logprob: -6.910835266113281

Token 764: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026830181013792753
    2. '    
' → logprob: -7.252683162689209
    3. 'def' → logprob: -7.252683162689209
    4. '
' → logprob: -7.877683162689209
    5. '    ' → logprob: -8.25268268585205
    6. ' ' → logprob: -9.12768268585205
    7. ' 
' → logprob: -9.50268268585205
    8. '       ' → logprob: -9.75268268585205
    9. ')' → logprob: -9.87768268585205
    10. '\' → logprob: -10.25268268585205

Token 765: ' number' (ID: 2086)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20925189554691315
    2. '   ' → logprob: -2.209251880645752
    3. 'for' → logprob: -3.459251880645752
    4. ' def' → logprob: -3.709251880645752
    5. ' for' → logprob: -3.959251880645752
    6. 'd' → logprob: -6.709251880645752
    7. 'digits' → logprob: -6.834251880645752
    8. 'digit' → logprob: -7.834251880645752
    9. 'indent' → logprob: -8.45925235748291
    10. '       ' → logprob: -8.58425235748291

Token 766: ' formed' (ID: 20680)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2573978006839752
    2. ' =' → logprob: -1.7573977708816528
    3. '=' → logprob: -3.3823978900909424
    4. ' ' → logprob: -5.007397651672363
    5. 's' → logprob: -5.632397651672363
    6. ')' → logprob: -5.882397651672363
    7. '[' → logprob: -6.382397651672363
    8. ' _' → logprob: -6.632397651672363
    9. '#' → logprob: -7.132397651672363
    10. '<|end|>' → logprob: -7.507397651672363

Token 767: ' is' (ID: 382)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.34352532029151917
    2. ' =' → logprob: -1.4685252904891968
    3. '=' → logprob: -2.9685254096984863
    4. 's' → logprob: -5.968525409698486
    5. '   ' → logprob: -6.593525409698486
    6. ')' → logprob: -7.343525409698486
    7. ' +=' → logprob: -7.593525409698486
    8. ',' → logprob: -7.718525409698486
    9. ' ' → logprob: -7.718525409698486
    10. '[' → logprob: -7.843525409698486

Token 768: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.5091418027877808
    2. ' prime' → logprob: -1.1341418027877808
    3. '_prime' → logprob: -2.7591419219970703
    4. '   ' → logprob: -5.63414192199707
    5. '_' → logprob: -6.13414192199707
    6. 'def' → logprob: -6.63414192199707
    7. ' a' → logprob: -7.13414192199707
    8. '
' → logprob: -7.25914192199707
    9. '```' → logprob: -7.88414192199707
    10. ''' → logprob: -7.88414192199707

Token 769: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013894330710172653
    2. 'def' → logprob: -5.263894557952881
    3. '    
' → logprob: -5.513894557952881
    4. '
' → logprob: -5.638894557952881
    5. '_' → logprob: -7.638894557952881
    6. '    ' → logprob: -9.388894081115723
    7. '   
' → logprob: -9.638894081115723
    8. ' 
' → logprob: -9.763894081115723
    9. '\' → logprob: -9.888894081115723
    10. ':' → logprob: -9.888894081115723

Token 770: ' maximal' (ID: 65414)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9045754075050354
    2. ' equal' → logprob: -1.9045753479003906
    3. ' larger' → logprob: -2.0295753479003906
    4. ' at' → logprob: -2.1545753479003906
    5. ' return' → logprob: -3.1545753479003906
    6. ' the' → logprob: -3.6545753479003906
    7. ' no' → logprob: -4.154575347900391
    8. ' if' → logprob: -4.529575347900391
    9. ' greater' → logprob: -4.654575347900391
    10. ' ' → logprob: -4.654575347900391

Token 771: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0124862315133214
    2. 'def' → logprob: -5.137486457824707
    3. '_' → logprob: -5.637486457824707
    4. '    
' → logprob: -6.887486457824707
    5. '    ' → logprob: -8.137486457824707
    6. '
' → logprob: -8.137486457824707
    7. '       ' → logprob: -8.887486457824707
    8. ' 
' → logprob: -9.012486457824707
    9. ':' → logprob: -9.262486457824707
    10. '\' → logprob: -9.512486457824707

Token 772: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003077421337366104
    2. '    
' → logprob: -6.378077507019043
    3. '
' → logprob: -6.878077507019043
    4. 'def' → logprob: -8.128077507019043
    5. ':' → logprob: -11.753077507019043
    6. '    ' → logprob: -11.878077507019043
    7. '       ' → logprob: -12.378077507019043
    8. '        
' → logprob: -12.378077507019043
    9. '   
' → logprob: -12.503077507019043
    10. ' 
' → logprob: -12.753077507019043

Token 773: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002948697656393051
    2. 'def' → logprob: -6.127948760986328
    3. 'digits' → logprob: -7.377948760986328
    4. '    
' → logprob: -9.377948760986328
    5. '
' → logprob: -10.502948760986328
    6. '```' → logprob: -12.002948760986328
    7. ' digits' → logprob: -12.127948760986328
    8. 'b' → logprob: -12.502948760986328
    9. 'digit' → logprob: -12.752948760986328
    10. ' def' → logprob: -13.752948760986328

Token 774: ' We' (ID: 1416)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5062413215637207
    2. '   ' → logprob: -1.0062413215637207
    3. 'digits' → logprob: -3.5062413215637207
    4. ' def' → logprob: -7.131241321563721
    5. ' digits' → logprob: -8.006240844726562
    6. 'from' → logprob: -8.256240844726562
    7. '
' → logprob: -9.506240844726562
    8. '    
' → logprob: -9.881240844726562
    9. 'result' → logprob: -10.256240844726562
    10. 'digit' → logprob: -11.006240844726562

Token 775: ' test' (ID: 1746)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2614009380340576
    2. ' =' → logprob: -2.2614009380340576
    3. '_' → logprob: -3.0114009380340576
    4. ' will' → logprob: -4.011401176452637
    5. 'def' → logprob: -4.511401176452637
    6. ' try' → logprob: -4.636401176452637
    7. ' continue' → logprob: -4.636401176452637
    8. '=' → logprob: -5.136401176452637
    9. '.' → logprob: -5.761401176452637
    10. ' want' → logprob: -6.011401176452637

Token 776: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035295743495225906
    2. 'def' → logprob: -4.5352959632873535
    3. 'for' → logprob: -5.2852959632873535
    4. ':' → logprob: -5.5352959632873535
    5. '    ' → logprob: -5.5352959632873535
    6. ' for' → logprob: -6.0352959632873535
    7. ' ' → logprob: -6.2852959632873535
    8. '_' → logprob: -6.2852959632873535
    9. '       ' → logprob: -6.5352959632873535
    10. '  ' → logprob: -7.6602959632873535

Token 777: ' and' (ID: 326)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0552791357040405
    2. 'digits' → logprob: -1.8052791357040405
    3. ' range' → logprob: -2.30527925491333
    4. '0' → logprob: -2.93027925491333
    5. 'range' → logprob: -2.93027925491333
    6. 'n' → logprob: -3.05527925491333
    7. '9' → logprob: -3.05527925491333
    8. ' a' → logprob: -3.80527925491333
    9. ' digits' → logprob: -3.80527925491333
    10. 'a' → logprob: -3.80527925491333

Token 778: ' without' (ID: 2935)
  Prédit: 'without'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'without' → logprob: -0.3136453628540039
    2. ' without' → logprob: -1.313645362854004
    3. ' ' → logprob: -9.063645362854004
    4. '_without' → logprob: -9.438645362854004
    5. 'Without' → logprob: -10.438645362854004
    6. 'with' → logprob: -10.688645362854004
    7. '   ' → logprob: -10.813645362854004
    8. 'out' → logprob: -10.813645362854004
    9. ' try' → logprob: -11.313645362854004
    10. 'try' → logprob: -11.688645362854004

Token 779: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.2855483591556549
    2. 'c' → logprob: -1.4105483293533325
    3. '_c' → logprob: -6.910548210144043
    4. ''' → logprob: -6.910548210144043
    5. ' ' → logprob: -7.660548210144043
    6. ' space' → logprob: -8.035548210144043
    7. ' '' → logprob: -8.160548210144043
    8. '_' → logprob: -8.285548210144043
    9. ' _' → logprob: -8.410548210144043
    10. '"' → logprob: -8.410548210144043

Token 780: ' depending' (ID: 14537)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06798136979341507
    2. '
' → logprob: -3.567981481552124
    3. 'def' → logprob: -3.567981481552124
    4. '    
' → logprob: -5.692981243133545
    5. ':' → logprob: -6.192981243133545
    6. 'digits' → logprob: -6.442981243133545
    7. '_' → logprob: -6.942981243133545
    8. '_digits' → logprob: -8.442981719970703
    9. ' def' → logprob: -8.942981719970703
    10. ' ' → logprob: -9.192981719970703

Token 781: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.019235603511333466
    2. 'on' → logprob: -4.769235610961914
    3. '   ' → logprob: -4.769235610961914
    4. '=' → logprob: -6.269235610961914
    5. ':' → logprob: -10.394235610961914
    6. '    ' → logprob: -10.644235610961914
    7. '  ' → logprob: -10.769235610961914
    8. '	on' → logprob: -10.769235610961914
    9. ' if' → logprob: -11.144235610961914
    10. ' =' → logprob: -11.269235610961914

Token 782: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4936756491661072
    2. ' c' → logprob: -0.9936756491661072
    3. '0' → logprob: -4.618675708770752
    4. ' the' → logprob: -5.618675708770752
    5. ' ' → logprob: -6.243675708770752
    6. ' (' → logprob: -6.493675708770752
    7. ' whether' → logprob: -7.118675708770752
    8. '>=' → logprob: -7.993675708770752
    9. 'the' → logprob: -8.118675231933594
    10. ' >=' → logprob: -8.118675231933594

Token 783: ' value' (ID: 1432)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18352560698986053
    2. 'def' → logprob: -2.433525562286377
    3. '_' → logprob: -2.933525562286377
    4. ':' → logprob: -4.183525562286377
    5. '
' → logprob: -6.183525562286377
    6. ')' → logprob: -6.433525562286377
    7. '    
' → logprob: -6.808525562286377
    8. ' ' → logprob: -6.933525562286377
    9. ' =' → logprob: -6.933525562286377
    10. ' _' → logprob: -7.683525562286377

Token 784: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04188578203320503
    2. 'def' → logprob: -3.9168858528137207
    3. '_' → logprob: -4.416885852813721
    4. ':' → logprob: -6.041885852813721
    5. '    
' → logprob: -6.166885852813721
    6. '
' → logprob: -6.541885852813721
    7. ' 
' → logprob: -7.916885852813721
    8. ' _' → logprob: -7.916885852813721
    9. '    ' → logprob: -8.291885375976562
    10. ',' → logprob: -8.416885375976562

Token 785: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059900153428316116
    2. 'def' → logprob: -3.0599000453948975
    3. '
' → logprob: -4.934900283813477
    4. '    
' → logprob: -5.809900283813477
    5. ' def' → logprob: -8.059900283813477
    6. 'digits' → logprob: -8.184900283813477
    7. 'from' → logprob: -9.184900283813477
    8. 'import' → logprob: -9.559900283813477
    9. ' 
' → logprob: -10.184900283813477
    10. ' digits' → logprob: -10.434900283813477

Token 786: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7120716571807861
    2. 'def' → logprob: -0.8370716571807861
    3. 'digits' → logprob: -3.337071657180786
    4. ' def' → logprob: -3.587071657180786
    5. ' digits' → logprob: -4.962071418762207
    6. 'digit' → logprob: -6.587071418762207
    7. 'pairs' → logprob: -6.587071418762207
    8. 'max' → logprob: -7.462071418762207
    9. '
' → logprob: -7.712071418762207
    10. ' pairs' → logprob: -7.712071418762207

Token 787: ' Since' (ID: 12265)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3744712471961975
    2. '   ' → logprob: -1.4994711875915527
    3. 'digits' → logprob: -3.1244711875915527
    4. ' def' → logprob: -3.4994711875915527
    5. 'from' → logprob: -5.499471187591553
    6. 'c' → logprob: -6.124471187591553
    7. ' digits' → logprob: -6.249471187591553
    8. ' from' → logprob: -6.499471187591553
    9. '
' → logprob: -6.874471187591553
    10. 'best' → logprob: -7.749471187591553

Token 788: ' problem' (ID: 4792)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8765943646430969
    2. ' c' → logprob: -1.2515943050384521
    3. 'n' → logprob: -1.6265943050384521
    4. 'c' → logprob: -2.376594305038452
    5. ' True' → logprob: -5.626594543457031
    6. '   ' → logprob: -6.126594543457031
    7. ' ' → logprob: -7.126594543457031
    8. ' not' → logprob: -7.501594543457031
    9. ' len' → logprob: -8.001594543457031
    10. 'True' → logprob: -8.876594543457031

Token 789: ' is' (ID: 382)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.37534642219543457
    2. ':' → logprob: -2.0003464221954346
    3. ' ' → logprob: -2.7503464221954346
    4. '   ' → logprob: -3.3753464221954346
    5. 'def' → logprob: -4.0003461837768555
    6. ' =' → logprob: -4.3753461837768555
    7. '=' → logprob: -5.0003461837768555
    8. ''' → logprob: -5.3753461837768555
    9. ' _' → logprob: -5.3753461837768555
    10. '

' → logprob: -5.6253461837768555

Token 790: ' complex' (ID: 8012)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.3866162896156311
    2. 'hard' → logprob: -2.5116162300109863
    3. 'too' → logprob: -2.8866162300109863
    4. 'not' → logprob: -3.3866162300109863
    5. 'very' → logprob: -3.6366162300109863
    6. 'in' → logprob: -4.136616230010986
    7. 'def' → logprob: -4.511616230010986
    8. 'unfinished' → logprob: -4.636616230010986
    9. ' complex' → logprob: -4.636616230010986
    10. 'd' → logprob: -4.886616230010986

Token 791: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7434939742088318
    2. ':' → logprob: -0.9934939742088318
    3. 'def' → logprob: -2.6184940338134766
    4. ',' → logprob: -2.9934940338134766
    5. '
' → logprob: -4.368494033813477
    6. ':
' → logprob: -4.993494033813477
    7. '    
' → logprob: -6.118494033813477
    8. 'import' → logprob: -6.618494033813477
    9. ' def' → logprob: -7.118494033813477
    10. ' :' → logprob: -7.118494033813477

Token 792: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3010575771331787
    2. 'def' → logprob: -1.4260575771331787
    3. ' def' → logprob: -4.801057815551758
    4. '#' → logprob: -5.301057815551758
    5. '    
' → logprob: -6.176057815551758
    6. ' #' → logprob: -7.051057815551758
    7. ' for' → logprob: -7.426057815551758
    8. '
' → logprob: -7.426057815551758
    9. '    ' → logprob: -7.926057815551758
    10. 'digits' → logprob: -7.926057815551758

Token 793: ' time' (ID: 1058)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0350604057312012
    2. ' True' → logprob: -1.5350604057312012
    3. '#' → logprob: -1.9100604057312012
    4. 'n' → logprob: -2.660060405731201
    5. 'True' → logprob: -2.785060405731201
    6. 'def' → logprob: -2.910060405731201
    7. ' n' → logprob: -2.910060405731201
    8. '
' → logprob: -4.035060405731201
    9. 'False' → logprob: -4.785060405731201
    10. 'import' → logprob: -5.910060405731201

Token 794: ' limited' (ID: 9913)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02864852175116539
    2. '_' → logprob: -4.028648376464844
    3. ':' → logprob: -5.778648376464844
    4. '_limit' → logprob: -6.278648376464844
    5. '    ' → logprob: -6.403648376464844
    6. 'import' → logprob: -6.778648376464844
    7. 'def' → logprob: -7.153648376464844
    8. '  ' → logprob: -8.028648376464844
    9. 'limit' → logprob: -8.528648376464844
    10. '       ' → logprob: -8.528648376464844

Token 795: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2676120102405548
    2. '   ' → logprob: -1.6426119804382324
    3. ',' → logprob: -3.5176119804382324
    4. ':
' → logprob: -5.392611980438232
    5. 'def' → logprob: -6.142611980438232
    6. '):' → logprob: -7.017611980438232
    7. '():' → logprob: -7.267611980438232
    8. '
' → logprob: -7.517611980438232
    9. '<|end|>' → logprob: -7.517611980438232
    10. '<|end|>' → logprob: -8.01761245727539

Token 796: ' implement' (ID: 6365)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012090926058590412
    2. 'def' → logprob: -5.137091159820557
    3. ' def' → logprob: -6.887091159820557
    4. 'digits' → logprob: -6.887091159820557
    5. ' digits' → logprob: -7.137091159820557
    6. '    
' → logprob: -7.262091159820557
    7. ' pass' → logprob: -7.762091159820557
    8. ' return' → logprob: -7.887091159820557
    9. ' for' → logprob: -8.012090682983398
    10. '#' → logprob: -8.137090682983398

Token 797: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02555060014128685
    2. 'def' → logprob: -4.025550365447998
    3. '    ' → logprob: -5.775550365447998
    4. ' def' → logprob: -7.150550365447998
    5. '
' → logprob: -7.650550365447998
    6. ' indentation' → logprob: -7.775550365447998
    7. '    
' → logprob: -8.025550842285156
    8. '\t' → logprob: -8.025550842285156
    9. 'n' → logprob: -8.525550842285156
    10. ' n' → logprob: -8.775550842285156

Token 798: ' back' (ID: 1602)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18606628477573395
    2. ' def' → logprob: -1.8110662698745728
    3. '```' → logprob: -7.436066150665283
    4. 'import' → logprob: -7.561066150665283
    5. ' complete' → logprob: -7.561066150665283
    6. 'for' → logprob: -7.936066150665283
    7. ' for' → logprob: -8.061066627502441
    8. ' #' → logprob: -8.186066627502441
    9. ' ```' → logprob: -8.186066627502441
    10. 'n' → logprob: -8.186066627502441

Token 799: 'tracking' (ID: 83383)
  Prédit: 'tracking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tracking' → logprob: -0.3812333643436432
    2. '   ' → logprob: -1.3812333345413208
    3. 'track' → logprob: -4.256233215332031
    4. '       ' → logprob: -4.506233215332031
    5. '\t' → logprob: -4.506233215332031
    6. 'def' → logprob: -4.756233215332031
    7. '	' → logprob: -5.006233215332031
    8. 'tab' → logprob: -5.381233215332031
    9. '_' → logprob: -5.881233215332031
    10. '_tracking' → logprob: -6.256233215332031

Token 800: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7777901291847229
    2. '(' → logprob: -0.9027901291847229
    3. ':' → logprob: -2.902790069580078
    4. '(n' → logprob: -3.402790069580078
    5. '   ' → logprob: -3.527790069580078
    6. ' def' → logprob: -5.527790069580078
    7. '(
' → logprob: -5.527790069580078
    8. '_' → logprob: -5.527790069580078
    9. '(depth' → logprob: -6.402790069580078
    10. '(def' → logprob: -7.402790069580078

Token 801: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.0342886745929718
    2. ' def' → logprob: -4.7842888832092285
    3. ' generate' → logprob: -5.1592888832092285
    4. ' search' → logprob: -5.4092888832092285
    5. ' build' → logprob: -5.6592888832092285
    6. ' try' → logprob: -5.7842888832092285
    7. ' pass' → logprob: -5.9092888832092285
    8. '   ' → logprob: -7.1592888832092285
    9. 'find' → logprob: -7.1592888832092285
    10. ' solve' → logprob: -7.1592888832092285

Token 802: ' best' (ID: 1636)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47869133949279785
    2. '    ' → logprob: -1.4786913394927979
    3. 'digits' → logprob: -2.853691339492798
    4. ' digits' → logprob: -2.978691339492798
    5. ' the' → logprob: -4.353691101074219
    6. ' ' → logprob: -4.353691101074219
    7. ')' → logprob: -5.853691101074219
    8. '       ' → logprob: -5.978691101074219
    9. 'def' → logprob: -6.353691101074219
    10. 'the' → logprob: -6.353691101074219

Token 803: ' number' (ID: 2086)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04051736742258072
    2. ':' → logprob: -3.5405173301696777
    3. 'def' → logprob: -5.040517330169678
    4. '    ' → logprob: -6.915517330169678
    5. 'digits' → logprob: -7.290517330169678
    6. '    
' → logprob: -7.790517330169678
    7. '_digits' → logprob: -7.915517330169678
    8. '
' → logprob: -8.290517807006836
    9. '_' → logprob: -8.415517807006836
    10. '_digit' → logprob: -8.665517807006836

Token 804: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05680655688047409
    2. 'def' → logprob: -3.4318065643310547
    3. ':' → logprob: -3.9318065643310547
    4. '
' → logprob: -7.056806564331055
    5. '    
' → logprob: -7.056806564331055
    6. ',' → logprob: -8.181806564331055
    7. '(' → logprob: -8.431806564331055
    8. 'import' → logprob: -8.556806564331055
    9. 'digits' → logprob: -8.681806564331055
    10. '_digits' → logprob: -8.931806564331055

Token 805: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004321522079408169
    2. 'def' → logprob: -5.504321575164795
    3. '    
' → logprob: -9.254321098327637
    4. '
' → logprob: -10.004321098327637
    5. 'import' → logprob: -10.129321098327637
    6. 'digits' → logprob: -10.629321098327637
    7. 'from' → logprob: -11.754321098327637
    8. ':' → logprob: -11.879321098327637
    9. ',' → logprob: -12.754321098327637
    10. 'n' → logprob: -12.879321098327637

Token 806: ' best' (ID: 1636)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1965494155883789
    2. 'best' (adapté à ' best') → logprob: -1.946549415588379
    3. 'def' → logprob: -3.446549415588379
    4. 'digits' → logprob: -6.196549415588379
    5. 'result' → logprob: -7.571549415588379
    6. ' best' → logprob: -7.946549415588379
    7. 'pairs' → logprob: -8.196549415588379
    8. 'from' → logprob: -8.446549415588379
    9. 'assigned' → logprob: -9.446549415588379
    10. '    
' → logprob: -9.446549415588379

Token 807: '_num' (ID: 9834)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.38078582286834717
    2. '_number' → logprob: -1.6307858228683472
    3. '_num' → logprob: -2.1307859420776367
    4. '_digit' → logprob: -7.255785942077637
    5. ' =' → logprob: -7.755785942077637
    6. '_digits' → logprob: -7.880785942077637
    7. '_candidate' → logprob: -8.505785942077637
    8. ' _' → logprob: -9.505785942077637
    9. '=' → logprob: -9.755785942077637
    10. '_value' → logprob: -9.755785942077637

Token 808: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4774355888366699
    2. '=' → logprob: -0.9774355888366699
    3. '_' → logprob: -5.72743558883667
    4. '   ' → logprob: -10.477436065673828
    5. ',' → logprob: -10.727436065673828
    6. ')' → logprob: -11.102436065673828
    7. 's' → logprob: -11.477436065673828
    8. '_=' → logprob: -11.852436065673828
    9. ' ' → logprob: -12.102436065673828
    10. '  ' → logprob: -12.727436065673828

Token 809: ' None' (ID: 4662)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.3149382472038269
    2. 'None' → logprob: -1.5649383068084717
    3. '''' → logprob: -2.8149383068084717
    4. ' None' → logprob: -7.439938068389893
    5. '"' → logprob: -7.564938068389893
    6. ' ""' → logprob: -10.43993854522705
    7. ''' → logprob: -11.43993854522705
    8. '"",' → logprob: -12.56493854522705
    9. '   ' → logprob: -13.06493854522705
    10. ' ''' → logprob: -13.18993854522705

Token 810: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.367624431848526
    2. 'def' → logprob: -1.6176244020462036
    3. '    
' → logprob: -2.992624521255493
    4. '
' → logprob: -3.117624521255493
    5. ',' → logprob: -4.992624282836914
    6. 'for' → logprob: -6.367624282836914
    7. '.' → logprob: -7.242624282836914
    8. ' =' → logprob: -7.367624282836914
    9. '#' → logprob: -7.617624282836914
    10. '   
' → logprob: -7.617624282836914

Token 811: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6906471848487854
    2. '
' → logprob: -1.5656471252441406
    3. 'def' → logprob: -1.5656471252441406
    4. 'best' → logprob: -3.0656471252441406
    5. '    
' → logprob: -4.565647125244141
    6. 'digits' → logprob: -4.690647125244141
    7. 'for' → logprob: -5.440647125244141
    8. ' best' → logprob: -5.690647125244141
    9. 'candidate' → logprob: -6.690647125244141
    10. ',' → logprob: -6.815647125244141

Token 812: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.5974932312965393
    2. 'def' → logprob: -0.8474932312965393
    3. 'digits' → logprob: -4.5974931716918945
    4. ' best' → logprob: -5.7224931716918945
    5. '
' → logprob: -5.8474931716918945
    6. '   ' → logprob: -6.8474931716918945
    7. 'candidate' → logprob: -7.0974931716918945
    8. ' def' → logprob: -7.3474931716918945
    9. 'c' → logprob: -7.9724931716918945
    10. 'for' → logprob: -8.097493171691895

Token 813: '_prime' (ID: 98616)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.13732583820819855
    2. '_' → logprob: -3.1373257637023926
    3. '_prime' → logprob: -3.3873257637023926
    4. '_is' → logprob: -3.7623257637023926
    5. '_token' → logprob: -4.762325763702393
    6. '_val' → logprob: -5.512325763702393
    7. '_result' → logprob: -5.637325763702393
    8. '_score' → logprob: -5.637325763702393
    9. '_win' → logprob: -6.262325763702393
    10. '_candidate' → logprob: -6.387325763702393

Token 814: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005968018900603056
    2. ' =' → logprob: -5.13096809387207
    3. 'd' → logprob: -10.63096809387207
    4. '=True' → logprob: -11.63096809387207
    5. '_' → logprob: -12.88096809387207
    6. '=False' → logprob: -13.63096809387207
    7. '=None' → logprob: -14.25596809387207
    8. '_=' → logprob: -14.25596809387207
    9. '_found' → logprob: -14.88096809387207
    10. ')' → logprob: -15.25596809387207

Token 815: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00032402228680439293
    2. ' False' → logprob: -8.250324249267578
    3. 'None' → logprob: -10.000324249267578
    4. '-' → logprob: -11.000324249267578
    5. 'True' → logprob: -14.875324249267578
    6. '(False' → logprob: -16.125324249267578
    7. '=False' → logprob: -16.750324249267578
    8. '   ' → logprob: -16.875324249267578
    9. '0' → logprob: -17.250324249267578
    10. ' -' → logprob: -17.625324249267578

Token 816: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6984137296676636
    2. 'def' → logprob: -1.1984137296676636
    3. '   ' → logprob: -1.8234137296676636
    4. '    
' → logprob: -3.448413848876953
    5. 'digits' → logprob: -5.073413848876953
    6. '	
' → logprob: -8.448413848876953
    7. ' def' → logprob: -8.573413848876953
    8. '  
' → logprob: -8.948413848876953
    9. 'for' → logprob: -9.073413848876953
    10. '   
' → logprob: -9.198413848876953

Token 817: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25275102257728577
    2. '   ' → logprob: -1.8777509927749634
    3. 'def' → logprob: -3.377751111984253
    4. '    
' → logprob: -3.377751111984253
    5. 'digits' → logprob: -6.377750873565674
    6. '```' → logprob: -9.127751350402832
    7. 'import' → logprob: -9.502751350402832
    8. '        
' → logprob: -10.127751350402832
    9. ' 
' → logprob: -10.252751350402832
    10. '   
' → logprob: -10.502751350402832

Token 818: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003718842286616564
    2. 'digits' → logprob: -6.128718852996826
    3. '
' → logprob: -6.753718852996826
    4. '   ' → logprob: -8.253718376159668
    5. 'from' → logprob: -10.128718376159668
    6. 'digit' → logprob: -10.253718376159668
    7. 'for' → logprob: -11.753718376159668
    8. ' def' → logprob: -11.878718376159668
    9. '    
' → logprob: -12.253718376159668
    10. 'import' → logprob: -12.753718376159668

Token 819: ' Helper' (ID: 31006)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0020561658311635256
    2. 'from' → logprob: -6.627056121826172
    3. '   ' → logprob: -7.877056121826172
    4. 'for' → logprob: -8.752056121826172
    5. 'import' → logprob: -9.377056121826172
    6. 'indent' → logprob: -9.752056121826172
    7. 'digits' → logprob: -10.127056121826172
    8. 'digit' → logprob: -12.377056121826172
    9. '
' → logprob: -13.252056121826172
    10. ' def' → logprob: -13.627056121826172

Token 820: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02355187200009823
    2. ' def' → logprob: -3.7735519409179688
    3. '    ' → logprob: -8.648551940917969
    4. '   ' → logprob: -9.773551940917969
    5. '
' → logprob: -11.023551940917969
    6. ')' → logprob: -11.773551940917969
    7. '

' → logprob: -12.023551940917969
    8. ':def' → logprob: -12.023551940917969
    9. 'ndef' → logprob: -12.148551940917969
    10. ' ' → logprob: -12.273551940917969

Token 821: ' build' (ID: 3024)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2912774384021759
    2. 'construct' → logprob: -2.9162774085998535
    3. 'compare' → logprob: -3.4162774085998535
    4. 'check' → logprob: -3.5412774085998535
    5. ' check' → logprob: -3.5412774085998535
    6. ' def' → logprob: -3.9162774085998535
    7. 'build' → logprob: -4.0412774085998535
    8. ' construct' → logprob: -4.1662774085998535
    9. ' compare' → logprob: -4.6662774085998535
    10. 'generate' → logprob: -4.7912774085998535

Token 822: ' full' (ID: 3149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02323080040514469
    2. 'number' → logprob: -4.398231029510498
    3. 'digits' → logprob: -5.648231029510498
    4. 'num' → logprob: -6.023231029510498
    5. ' def' → logprob: -6.148231029510498
    6. '_number' → logprob: -7.273231029510498
    7. ' number' → logprob: -7.523231029510498
    8. '_num' → logprob: -8.14823055267334
    9. ')' → logprob: -8.39823055267334
    10. 'string' → logprob: -8.64823055267334

Token 823: ' number' (ID: 2086)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.7448287010192871
    2. '_number' → logprob: -0.7448287010192871
    3. 'num' → logprob: -3.619828701019287
    4. 'number' → logprob: -4.244828701019287
    5. 'def' → logprob: -4.869828701019287
    6. ' number' → logprob: -7.369828701019287
    7. '_string' → logprob: -7.869828701019287
    8. 'string' → logprob: -8.994829177856445
    9. '_str' → logprob: -9.619829177856445
    10. '_digit' → logprob: -9.744829177856445

Token 824: ' string' (ID: 1621)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004692611284554005
    2. '   ' → logprob: -6.629692554473877
    3. '
' → logprob: -7.004692554473877
    4. ' def' → logprob: -7.004692554473877
    5. '_def' → logprob: -8.129693031311035
    6. '(
' → logprob: -8.379693031311035
    7. '_' → logprob: -8.504693031311035
    8. '(' → logprob: -8.879693031311035
    9. '(n' → logprob: -9.129693031311035
    10. '_num' → logprob: -9.129693031311035

Token 825: ' from' (ID: 591)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005528642795979977
    2. '   ' → logprob: -6.130528450012207
    3. ' def' → logprob: -6.255528450012207
    4. '
' → logprob: -7.005528450012207
    5. '(
' → logprob: -9.005528450012207
    6. '_def' → logprob: -9.255528450012207
    7. '\' → logprob: -9.505528450012207
    8. '_' → logprob: -10.005528450012207
    9. '(' → logprob: -10.255528450012207
    10. ':def' → logprob: -10.630528450012207

Token 826: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7097502946853638
    2. 'digits' → logprob: -0.7097502946853638
    3. 'bs' → logprob: -4.709750175476074
    4. 'pairs' → logprob: -5.459750175476074
    5. 'prefix' → logprob: -6.459750175476074
    6. 'bd' → logprob: -7.959750175476074
    7. 'def' → logprob: -8.084750175476074
    8. 'partial' → logprob: -8.709750175476074
    9. 'pair' → logprob: -8.834750175476074
    10. ' digits' → logprob: -9.084750175476074

Token 827: ' digits' (ID: 37806)
  Prédit: '_digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.14954134821891785
    2. 's' → logprob: -2.1495413780212402
    3. '_d' → logprob: -4.64954137802124
    4. '_s' → logprob: -5.64954137802124
    5. '_' → logprob: -5.77454137802124
    6. 'digits' → logprob: -5.89954137802124
    7. '_list' → logprob: -7.52454137802124
    8. ' =' → logprob: -7.77454137802124
    9. '```' → logprob: -7.89954137802124
    10. ')' → logprob: -8.399540901184082

Token 828: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.052968766540288925
    2. '   ' → logprob: -3.427968740463257
    3. '
' → logprob: -4.802968978881836
    4. '_' → logprob: -5.677968978881836
    5. ' def' → logprob: -6.177968978881836
    6. ',' → logprob: -7.177968978881836
    7. '(' → logprob: -7.302968978881836
    8. '_digits' → logprob: -7.677968978881836
    9. '_
' → logprob: -7.802968978881836
    10. '(b' → logprob: -8.052968978881836

Token 829: ' c' (ID: 274)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.07923950254917145
    2. ' g' → logprob: -2.5792396068573
    3. '   ' → logprob: -9.079239845275879
    4. '    ' → logprob: -9.204239845275879
    5. '[g' → logprob: -10.954239845275879
    6. ' ' → logprob: -11.329239845275879
    7. '[' → logprob: -11.454239845275879
    8. 'b' → logprob: -11.579239845275879
    9. 'def' → logprob: -11.579239845275879
    10. '_g' → logprob: -11.704239845275879

Token 830: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7356523275375366
    2. '_digits' → logprob: -0.8606523275375366
    3. '_g' → logprob: -3.235652446746826
    4. 'digits' → logprob: -4.110652446746826
    5. '_' → logprob: -4.485652446746826
    6. 'g' → logprob: -4.860652446746826
    7. '_,' → logprob: -5.110652446746826
    8. 's' → logprob: -5.610652446746826
    9. 'and' → logprob: -6.360652446746826
    10. '_d' → logprob: -6.735652446746826

Token 831: ' and' (ID: 326)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.03871719539165497
    2. ' g' → logprob: -3.288717269897461
    3. ' and' → logprob: -7.788717269897461
    4. 'and' → logprob: -8.788717269897461
    5. 'b' → logprob: -10.163717269897461
    6. '   ' → logprob: -11.288717269897461
    7. ' b' → logprob: -11.913717269897461
    8. '[' → logprob: -12.038717269897461
    9. '    ' → logprob: -12.163717269897461
    10. ' ' → logprob: -12.288717269897461

Token 832: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0013290488859638572
    2. ' g' → logprob: -6.626328945159912
    3. '[g' → logprob: -14.12632942199707
    4. '_g' → logprob: -14.12632942199707
    5. 'b' → logprob: -14.50132942199707
    6. '[' → logprob: -15.25132942199707
    7. '```' → logprob: -15.62632942199707
    8. 'a' → logprob: -15.75132942199707
    9. '	g' → logprob: -16.25132942199707
    10. '[]' → logprob: -16.37632942199707

Token 833: ' digits' (ID: 37806)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012199746444821358
    2. '_' → logprob: -5.637199878692627
    3. '_digits' → logprob: -5.762199878692627
    4. 's' → logprob: -6.387199878692627
    5. '_def' → logprob: -7.262199878692627
    6. '
' → logprob: -7.387199878692627
    7. ')' → logprob: -7.512199878692627
    8. '_s' → logprob: -7.762199878692627
    9. '```' → logprob: -7.762199878692627
    10. '   ' → logprob: -8.387199401855469

Token 834: ' reversed' (ID: 57184)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12733635306358337
    2. '   ' → logprob: -2.252336263656616
    3. '
' → logprob: -4.252336502075195
    4. '    
' → logprob: -9.252336502075195
    5. ' def' → logprob: -9.627336502075195
    6. '```' → logprob: -12.377336502075195
    7. '\' → logprob: -12.627336502075195
    8. '_def' → logprob: -13.627336502075195
    9. 'ndef' → logprob: -13.752336502075195
    10. '	def' → logprob: -13.752336502075195

Token 835: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018397968262434006
    2. '
' → logprob: -4.018397808074951
    3. '   ' → logprob: -8.64339828491211
    4. '\' → logprob: -10.51839828491211
    5. ' def' → logprob: -10.76839828491211
    6. '    
' → logprob: -12.01839828491211
    7. '_def' → logprob: -12.01839828491211
    8. ':def' → logprob: -12.64339828491211
    9. '```' → logprob: -13.26839828491211
    10. '\n' → logprob: -13.64339828491211

Token 836: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.044143397361040115
    2. '   ' → logprob: -3.2941434383392334
    3. '
' → logprob: -5.669143199920654
    4. '_' → logprob: -6.794143199920654
    5. ' def' → logprob: -7.044143199920654
    6. ')' → logprob: -9.044143676757812
    7. ':' → logprob: -9.169143676757812
    8. '    
' → logprob: -9.294143676757812
    9. '_def' → logprob: -9.294143676757812
    10. '\' → logprob: -9.919143676757812

Token 837: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.013205057941377163
    2. '
' → logprob: -4.763205051422119
    3. '   ' → logprob: -5.513205051422119
    4. ' def' → logprob: -7.638205051422119
    5. '    
' → logprob: -10.013205528259277
    6. '```' → logprob: -11.763205528259277
    7. '\' → logprob: -12.638205528259277
    8. ' 
' → logprob: -13.263205528259277
    9. '  
' → logprob: -13.638205528259277
    10. '	def' → logprob: -13.888205528259277

Token 838: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.0003074566484428942
    2. ' build' → logprob: -8.250307083129883
    3. 'construct' → logprob: -10.000307083129883
    4. 'make' → logprob: -14.250307083129883
    5. 'number' → logprob: -16.500307083129883
    6. 'compose' → logprob: -16.625307083129883
    7. ' construct' → logprob: -17.000307083129883
    8. '_build' → logprob: -17.625307083129883
    9. 'assemble' → logprob: -18.500307083129883
    10. 'get' → logprob: -19.250307083129883

Token 839: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.027672892436385155
    2. '_num' → logprob: -3.7776730060577393
    3. '_' → logprob: -6.02767276763916
    4. '_string' → logprob: -7.02767276763916
    5. '(' → logprob: -7.77767276763916
    6. 'number' → logprob: -7.90267276763916
    7. ' (' → logprob: -9.77767276763916
    8. '_str' → logprob: -9.90267276763916
    9. ' number' → logprob: -10.40267276763916
    10. 'string' → logprob: -10.40267276763916

Token 840: '(b' (ID: 3229)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16531062126159668
    2. '(b' → logprob: -1.9153106212615967
    3. '(d' → logprob: -5.915310859680176
    4. '(_' → logprob: -7.415310859680176
    5. '_' → logprob: -7.540310859680176
    6. '_string' → logprob: -8.165310859680176
    7. '(s' → logprob: -9.040310859680176
    8. '("("' → logprob: -9.040310859680176
    9. '(bits' → logprob: -10.040310859680176
    10. '(a' → logprob: -10.040310859680176

Token 841: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.26413968205451965
    2. '):' → logprob: -2.2641396522521973
    3. '):
' → logprob: -2.6391396522521973
    4. 'digits' → logprob: -3.1391396522521973
    5. '_' → logprob: -5.639139652252197
    6. ',' → logprob: -5.764139652252197
    7. '_d' → logprob: -6.014139652252197
    8. 'd' → logprob: -6.639139652252197
    9. 's' → logprob: -6.764139652252197
    10. '   ' → logprob: -8.014140129089355

Token 842: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07234262675046921
    2. '):' → logprob: -2.69734263420105
    3. ',b' → logprob: -6.322342395782471
    4. '):
' → logprob: -7.697342395782471
    5. '   ' → logprob: -9.697342872619629
    6. ')' → logprob: -10.572342872619629
    7. ':' → logprob: -11.322342872619629
    8. ' ,' → logprob: -11.447342872619629
    9. 'b' → logprob: -11.447342872619629
    10. ',d' → logprob: -12.197342872619629

Token 843: ' c' (ID: 274)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.005645882338285446
    2. 'c' → logprob: -5.380645751953125
    3. ' g' → logprob: -7.005645751953125
    4. '[g' → logprob: -10.380645751953125
    5. ')' → logprob: -11.005645751953125
    6. ' c' → logprob: -11.505645751953125
    7. '   ' → logprob: -11.505645751953125
    8. 'b' → logprob: -11.755645751953125
    9. '[' → logprob: -11.880645751953125
    10. 'def' → logprob: -12.255645751953125

Token 844: '_digit' (ID: 119592)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0320424847304821
    2. '_' → logprob: -4.407042503356934
    3. '):
' → logprob: -4.532042503356934
    4. ',' → logprob: -5.532042503356934
    5. '=None' → logprob: -5.907042503356934
    6. '=' → logprob: -7.532042503356934
    7. '_digits' → logprob: -7.907042503356934
    8. ')' → logprob: -8.032042503356934
    9. '   ' → logprob: -8.782042503356934
    10. '_d' → logprob: -8.907042503356934

Token 845: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18189609050750732
    2. '):' → logprob: -1.8068960905075073
    3. ',' → logprob: -7.056896209716797
    4. '=None' → logprob: -7.181896209716797
    5. '=' → logprob: -8.431896209716797
    6. '):

' → logprob: -9.056896209716797
    7. ')' → logprob: -9.681896209716797
    8. '):
' → logprob: -9.681896209716797
    9. '   ' → logprob: -9.806896209716797
    10. ')=' → logprob: -13.681896209716797

Token 846: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5368660688400269
    2. '   ' → logprob: -1.5368660688400269
    3. '(' → logprob: -2.6618661880493164
    4. '):' → logprob: -2.7868661880493164
    5. '       ' → logprob: -3.1618661880493164
    6. '():' → logprob: -3.9118661880493164
    7. ')' → logprob: -6.036866188049316
    8. '(
' → logprob: -7.536866188049316
    9. ',' → logprob: -7.786866188049316
    10. '    ' → logprob: -8.036866188049316

Token 847: ' g' (ID: 329)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19225582480430603
    2. '       ' → logprob: -1.8172558546066284
    3. 'return' → logprob: -4.817255973815918
    4. 'number' → logprob: -6.567255973815918
    5. 'num' → logprob: -6.817255973815918
    6. ' return' → logprob: -7.567255973815918
    7. 'n' → logprob: -7.817255973815918
    8. ' number' → logprob: -8.442255973815918
    9. ' s' → logprob: -8.817255973815918
    10. 'result' → logprob: -8.817255973815918

Token 848: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.015843374654650688
    2. '_' → logprob: -4.515843391418457
    3. '_d' → logprob: -5.515843391418457
    4. ' =' → logprob: -8.265843391418457
    5. '=' → logprob: -8.640843391418457
    6. '=_' → logprob: -9.265843391418457
    7. '_digit' → logprob: -9.640843391418457
    8. '_i' → logprob: -10.140843391418457
    9. 'digits' → logprob: -10.640843391418457
    10. ' _' → logprob: -11.265843391418457

Token 849: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519306540489197
    2. ' =' → logprob: -1.5019307136535645
    3. '   ' → logprob: -14.751930236816406
    4. '=[' → logprob: -15.126930236816406
    5. ')' → logprob: -15.251930236816406
    6. ' ' → logprob: -15.751930236816406
    7. '=[]' → logprob: -15.876930236816406
    8. ',' → logprob: -15.876930236816406
    9. ' =[' → logprob: -17.001930236816406
    10. '[' → logprob: -17.126930236816406

Token 850: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0010178061202168465
    2. ' b' → logprob: -7.0010175704956055
    3. 'list' → logprob: -9.501017570495605
    4. '[b' → logprob: -10.626017570495605
    5. '[' → logprob: -12.501017570495605
    6. ' list' → logprob: -13.251017570495605
    7. '   ' → logprob: -14.126017570495605
    8. ' ' → logprob: -15.001017570495605
    9. '	b' → logprob: -15.501017570495605
    10. ' [' → logprob: -15.501017570495605

Token 851: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.0002382249804213643
    2. 'digits' → logprob: -8.750238418579102
    3. '[::-' → logprob: -10.250238418579102
    4. '_' → logprob: -11.125238418579102
    5. '_d' → logprob: -11.750238418579102
    6. '[_' → logprob: -12.875238418579102
    7. '[' → logprob: -13.125238418579102
    8. '```' → logprob: -13.250238418579102
    9. '
' → logprob: -13.375238418579102
    10. ' _' → logprob: -13.750238418579102

Token 852: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.00010723850573413074
    2. '[:]' → logprob: -9.250106811523438
    3. '[' → logprob: -11.625106811523438
    4. '[:' → logprob: -13.375106811523438
    5. '[
' → logprob: -15.375106811523438
    6. '[:-' → logprob: -16.375106811523438
    7. '[-' → logprob: -16.500106811523438
    8. '.copy' → logprob: -17.000106811523438
    9. '
' → logprob: -17.375106811523438
    10. '   ' → logprob: -17.500106811523438

Token 853: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0033290917053818703
    2. '-' → logprob: -5.753329277038574
    3. '```' → logprob: -10.503329277038574
    4. '+' → logprob: -10.878329277038574
    5. '::-' → logprob: -11.003329277038574
    6. '``' → logprob: -11.128329277038574
    7. 'er' → logprob: -11.128329277038574
    8. ':' → logprob: -11.128329277038574
    9. '[::-' → logprob: -11.753329277038574
    10. ' ' → logprob: -11.878329277038574

Token 854: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003261679667048156
    2. ')
' → logprob: -8.500326156616211
    3. ']' → logprob: -9.375326156616211
    4. '       ' → logprob: -11.125326156616211
    5. '])' → logprob: -11.875326156616211
    6. '   ' → logprob: -12.125326156616211
    7. ' )' → logprob: -13.000326156616211
    8. '）' → logprob: -13.125326156616211
    9. '<|end|>' → logprob: -13.375326156616211
    10. '')' → logprob: -13.500326156616211

Token 855: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16891933977603912
    2. '   ' → logprob: -1.918919324874878
    3. 'return' → logprob: -5.918919563293457
    4. '
' → logprob: -6.543919563293457
    5. ')' → logprob: -6.793919563293457
    6. '        
' → logprob: -6.793919563293457
    7. '    
' → logprob: -6.793919563293457
    8. '  
' → logprob: -8.418919563293457
    9. '<|end|>' → logprob: -8.793919563293457
    10. ' return' → logprob: -9.043919563293457

Token 856: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12547533214092255
    2. 'return' → logprob: -2.7504754066467285
    3. '   ' → logprob: -4.0004754066467285
    4. 'if' (adapté à ' if') → logprob: -4.1254754066467285
    5. 'num' → logprob: -4.3754754066467285
    6. 'number' → logprob: -5.5004754066467285
    7. ' if' → logprob: -7.0004754066467285
    8. ' return' → logprob: -7.1254754066467285
    9. 'parts' → logprob: -7.6254754066467285
    10. 'digits' → logprob: -9.00047492980957

Token 857: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2520749270915985
    2. ' c' → logprob: -1.502074956893921
    3. 'len' → logprob: -9.6270751953125
    4. ' not' → logprob: -10.5020751953125
    5. ' len' → logprob: -10.7520751953125
    6. '   ' → logprob: -11.2520751953125
    7. '       ' → logprob: -12.5020751953125
    8. 'not' → logprob: -13.0020751953125
    9. ' ' → logprob: -13.0020751953125
    10. 'b' → logprob: -13.5020751953125

Token 858: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.041997700929641724
    2. '_' → logprob: -3.2919976711273193
    3. '_d' → logprob: -6.541997909545898
    4. ' is' → logprob: -6.791997909545898
    5. '>' → logprob: -7.541997909545898
    6. ' _' → logprob: -8.791997909545898
    7. '   ' → logprob: -9.541997909545898
    8. '_c' → logprob: -9.541997909545898
    9. 'digit' → logprob: -9.666997909545898
    10. ' ' → logprob: -9.791997909545898

Token 859: ' >=' (ID: 5064)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.48583993315696716
    2. '>=' → logprob: -1.1108399629592896
    3. ' >=' → logprob: -3.36083984375
    4. 'is' → logprob: -4.86083984375
    5. '<' → logprob: -5.23583984375
    6. '==' → logprob: -5.48583984375
    7. ' <' → logprob: -6.11083984375
    8. ' ==' → logprob: -7.48583984375
    9. ')' → logprob: -7.73583984375
    10. '!=' → logprob: -8.86083984375

Token 860: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.250003814697266
    4. '
' → logprob: -18.875003814697266
    5. '00' → logprob: -19.500003814697266
    6. '  ' → logprob: -20.625003814697266
    7. '1' → logprob: -20.625003814697266
    8. '=' → logprob: -20.750003814697266
    9. '۰' → logprob: -20.875003814697266
    10. '０' → logprob: -21.562503814697266

Token 861: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '۰' → logprob: -20.250001907348633
    4. '00' → logprob: -20.500001907348633
    5. '   ' → logprob: -20.625001907348633
    6. '０' → logprob: -21.625001907348633
    7. '=' → logprob: -21.625001907348633
    8. '
' → logprob: -22.000001907348633
    9. ' ' → logprob: -22.250001907348633
    10. '  ' → logprob: -23.000001907348633

Token 862: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3187355697154999
    2. ':
' → logprob: -1.6937355995178223
    3. '           ' → logprob: -2.6937355995178223
    4. '       ' → logprob: -3.9437355995178223
    5. ' and' → logprob: -6.818735599517822
    6. '):
' → logprob: -8.693735122680664
    7. '):' → logprob: -8.818735122680664
    8. ')' → logprob: -9.068735122680664
    9. ',' → logprob: -9.193735122680664
    10. ' :' → logprob: -9.443735122680664

Token 863: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011073057539761066
    2. '       ' → logprob: -4.636073112487793
    3. 'return' → logprob: -7.011073112487793
    4. ' return' → logprob: -8.886073112487793
    5. '        ' → logprob: -9.386073112487793
    6. '	       ' → logprob: -10.136073112487793
    7. '          ' → logprob: -10.386073112487793
    8. '         ' → logprob: -10.886073112487793
    9. '```' → logprob: -11.011073112487793
    10. '               ' → logprob: -11.386073112487793

Token 864: ' num' (ID: 2269)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5961425304412842
    2. 'return' → logprob: -1.0961425304412842
    3. 'num' (adapté à ' num') → logprob: -3.096142530441284
    4. ' return' → logprob: -3.596142530441284
    5. '       ' → logprob: -4.221142768859863
    6. 'number' → logprob: -4.596142768859863
    7. 'parts' → logprob: -5.846142768859863
    8. 's' → logprob: -5.971142768859863
    9. ' parts' → logprob: -6.096142768859863
    10. 'digits' → logprob: -6.096142768859863

Token 865: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.007550904527306557
    2. 'ber' → logprob: -5.7575507164001465
    3. ' =' → logprob: -5.8825507164001465
    4. 'str' → logprob: -6.6325507164001465
    5. '=' → logprob: -8.507551193237305
    6. '_string' → logprob: -10.882551193237305
    7. 'er' → logprob: -11.757551193237305
    8. '_' → logprob: -12.132551193237305
    9. '   ' → logprob: -12.257551193237305
    10. '=str' → logprob: -12.257551193237305

Token 866: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.230805441737175
    2. ' =' → logprob: -1.7308053970336914
    3. '+=' → logprob: -3.8558053970336914
    4. ' +=' → logprob: -4.855805397033691
    5. '+' → logprob: -11.355805397033691
    6. '       ' → logprob: -12.980805397033691
    7. '+="' → logprob: -13.105805397033691
    8. '           ' → logprob: -13.230805397033691
    9. '        ' → logprob: -13.355805397033691
    10. '+='' → logprob: -13.355805397033691

Token 867: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.1063556969165802
    2. '"' → logprob: -2.356355667114258
    3. ' ''.' → logprob: -5.981355667114258
    4. ' "".' → logprob: -6.481355667114258
    5. '""' → logprob: -6.481355667114258
    6. '''' → logprob: -8.106355667114258
    7. '   ' → logprob: -8.731355667114258
    8. ''' → logprob: -9.731355667114258
    9. '''
' → logprob: -12.231355667114258
    10. '"",' → logprob: -12.231355667114258

Token 868: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.9361264946837764e-07
    2. '''.' → logprob: -16.875
    3. ' join' → logprob: -17.375
    4. 'jo' → logprob: -18.375
    5. '.join' → logprob: -18.875
    6. 'j' → logprob: -18.875
    7. ''.' → logprob: -19.625
    8. '```' → logprob: -19.75
    9. '.' → logprob: -21.25
    10. '(join' → logprob: -21.875

Token 869: '(str' (ID: 7946)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.47999173402786255
    2. '(str' → logprob: -1.2299916744232178
    3. '([' → logprob: -2.9799916744232178
    4. 'b' → logprob: -4.104991912841797
    5. '(map' → logprob: -4.729991912841797
    6. 'str' → logprob: -4.854991912841797
    7. '[b' → logprob: -5.854991912841797
    8. 'map' → logprob: -6.729991912841797
    9. '[str' → logprob: -6.979991912841797
    10. '(list' → logprob: -11.479991912841797

Token 870: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0022200802341103554
    2. '(b' → logprob: -6.877220153808594
    3. 'd' → logprob: -7.127220153808594
    4. '(x' → logprob: -7.877220153808594
    5. '(i' → logprob: -13.252220153808594
    6. 'b' → logprob: -13.502220153808594
    7. 'x' → logprob: -14.627220153808594
    8. 'digit' → logprob: -15.377220153808594
    9. ')d' → logprob: -15.877220153808594
    10. '(dd' → logprob: -16.377220153808594

Token 871: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005788127426058054
    2. 'igit' → logprob: -5.255788326263428
    3. '(d' → logprob: -8.63078784942627
    4. ')d' → logprob: -8.75578784942627
    5. 'd' → logprob: -9.13078784942627
    6. 'ig' → logprob: -9.38078784942627
    7. 'x' → logprob: -11.75578784942627
    8. 'i' → logprob: -11.88078784942627
    9. 'digit' → logprob: -13.00578784942627
    10. 'igits' → logprob: -13.13078784942627

Token 872: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1885662078857422
    2. ' for' → logprob: -2.063566207885742
    3. 'd' → logprob: -3.688566207885742
    4. ')' → logprob: -4.563566207885742
    5. '+' → logprob: -5.063566207885742
    6. '(d' → logprob: -6.188566207885742
    7. ')+' → logprob: -7.688566207885742
    8. '+d' → logprob: -8.188566207885742
    9. '[d' → logprob: -9.063566207885742
    10. ' +' → logprob: -9.813566207885742

Token 873: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.017984049394726753
    2. ' d' → logprob: -4.392983913421631
    3. 'b' → logprob: -5.267983913421631
    4. ' b' → logprob: -8.267984390258789
    5. 'num' → logprob: -11.642984390258789
    6. '	d' → logprob: -12.267984390258789
    7. ' in' → logprob: -12.642984390258789
    8. '
' → logprob: -12.892984390258789
    9. '(d' → logprob: -12.892984390258789
    10. 'digit' → logprob: -12.892984390258789

Token 874: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5996810793876648
    2. ' in' → logprob: -0.8496810793876648
    3. 'b' → logprob: -4.0996809005737305
    4. '_digits' → logprob: -5.8496809005737305
    5. 'igits' → logprob: -6.0996809005737305
    6. 'd' → logprob: -7.2246809005737305
    7. ')' → logprob: -8.22468090057373
    8. ' b' → logprob: -8.84968090057373
    9. '<|end|>' → logprob: -9.09968090057373
    10. 'digits' → logprob: -9.34968090057373

Token 875: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.054500666621607e-06
    2. ' b' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.875003814697266
    4. '(b' → logprob: -17.375003814697266
    5. '[b' → logprob: -17.375003814697266
    6. '[' → logprob: -18.500003814697266
    7. '
' → logprob: -18.500003814697266
    8. '	b' → logprob: -19.375003814697266
    9. ')b' → logprob: -19.500003814697266
    10. '    ' → logprob: -20.250003814697266

Token 876: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.0004299540014471859
    2. 'digits' → logprob: -7.875430107116699
    3. '_d' → logprob: -10.5004301071167
    4. '_' → logprob: -11.0004301071167
    5. 'igits' → logprob: -13.6254301071167
    6. 'd' → logprob: -13.6254301071167
    7. '_digit' → logprob: -13.8754301071167
    8. '_
' → logprob: -14.7504301071167
    9. '
' → logprob: -15.3754301071167
    10. '```' → logprob: -15.3754301071167

Token 877: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044663884909823537
    2. ')+' → logprob: -7.750446796417236
    3. ')+'' → logprob: -11.625446319580078
    4. '+' → logprob: -12.875446319580078
    5. '   ' → logprob: -13.250446319580078
    6. ' )' → logprob: -13.875446319580078
    7. ')
' → logprob: -14.250446319580078
    8. ')+"' → logprob: -14.875446319580078
    9. '       ' → logprob: -15.250446319580078
    10. '+)' → logprob: -16.125446319580078

Token 878: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006052040029317141
    2. ' +' → logprob: -5.256052017211914
    3. '+
' → logprob: -7.506052017211914
    4. '           ' → logprob: -8.631052017211914
    5. '<|end|>' → logprob: -10.756052017211914
    6. ')' → logprob: -10.881052017211914
    7. '+c' → logprob: -11.506052017211914
    8. '+')' → logprob: -11.631052017211914
    9. ' +
' → logprob: -11.881052017211914
    10. ')+' → logprob: -12.506052017211914

Token 879: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -9.29340603761375e-05
    2. ' str' → logprob: -9.375092506408691
    3. '(str' → logprob: -11.750092506408691
    4. ''' → logprob: -16.250093460083008
    5. '	str' → logprob: -17.000093460083008
    6. '   ' → logprob: -18.375093460083008
    7. '=str' → logprob: -18.375093460083008
    8. ' ' → logprob: -18.500093460083008
    9. '[str' → logprob: -18.500093460083008
    10. '_str' → logprob: -20.125093460083008

Token 880: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -4.68022444692906e-05
    2. '(' → logprob: -10.000046730041504
    3. 'c' → logprob: -14.000046730041504
    4. '(
' → logprob: -14.500046730041504
    5. '(chr' → logprob: -17.12504768371582
    6. '((' → logprob: -18.62504768371582
    7. '(C' → logprob: -19.00004768371582
    8. '©' → logprob: -19.50004768371582
    9. '('' → logprob: -19.50004768371582
    10. ' (' → logprob: -19.75004768371582

Token 881: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -3.2855416066013277e-05
    2. 'digit' → logprob: -10.750032424926758
    3. 'Digit' → logprob: -12.625032424926758
    4. 'c' → logprob: -12.875032424926758
    5. 'igit' → logprob: -13.125032424926758
    6. '_c' → logprob: -14.125032424926758
    7. ')' → logprob: -14.125032424926758
    8. '-digit' → logprob: -14.875032424926758
    9. '   ' → logprob: -15.000032424926758
    10. '_d' → logprob: -15.125032424926758

Token 882: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012005893513560295
    2. ')+' → logprob: -7.0012006759643555
    3. '+' → logprob: -8.251200675964355
    4. ' )' → logprob: -11.876200675964355
    5. '<|end|>' → logprob: -12.251200675964355
    6. '')' → logprob: -12.626200675964355
    7. ')+'' → logprob: -12.876200675964355
    8. ' +' → logprob: -13.001200675964355
    9. '+)' → logprob: -13.001200675964355
    10. '+')' → logprob: -13.126200675964355

Token 883: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018153922632336617
    2. ' +' → logprob: -4.018154144287109
    3. '+
' → logprob: -13.26815414428711
    4. ')' → logprob: -14.89315414428711
    5. '+'' → logprob: -15.01815414428711
    6. '   ' → logprob: -15.01815414428711
    7. '+')' → logprob: -15.39315414428711
    8. '<|end|>' → logprob: -15.51815414428711
    9. '       ' → logprob: -15.64315414428711
    10. '           ' → logprob: -16.01815414428711

Token 884: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.0006323783891275525
    2. ' ''.' → logprob: -7.375632286071777
    3. '''' → logprob: -12.500632286071777
    4. '   ' → logprob: -14.250632286071777
    5. ''' → logprob: -14.375632286071777
    6. '('' → logprob: -15.750632286071777
    7. '''
' → logprob: -15.750632286071777
    8. ''',' → logprob: -16.125633239746094
    9. '       ' → logprob: -16.500633239746094
    10. ' ' → logprob: -16.875633239746094

Token 885: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.9361264946837764e-07
    2. '''.' → logprob: -16.25
    3. ' join' → logprob: -17.25
    4. 'jo' → logprob: -18.25
    5. 'j' → logprob: -19.25
    6. ''.' → logprob: -20.375
    7. '.join' → logprob: -20.5
    8. '(join' → logprob: -22.25
    9. 'joins' → logprob: -22.625
    10. '_join' → logprob: -23.625

Token 886: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -1.3306015716807451e-05
    2. 'str' → logprob: -11.25001335144043
    3. '[str' → logprob: -15.62501335144043
    4. '(' → logprob: -17.50001335144043
    5. '=str' → logprob: -18.62501335144043
    6. '	str' → logprob: -20.25001335144043
    7. ' str' → logprob: -21.00001335144043
    8. ':str' → logprob: -21.62501335144043
    9. ',str' → logprob: -22.62501335144043
    10. '.str' → logprob: -22.87501335144043

Token 887: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: 0.0
    2. 'd' → logprob: -17.75
    3. '(g' → logprob: -17.875
    4. '(' → logprob: -18.75
    5. '	d' → logprob: -19.875
    6. '[d' → logprob: -21.375
    7. '(
' → logprob: -21.875
    8. '((' → logprob: -22.875
    9. ')d' → logprob: -22.875
    10. '(e' → logprob: -23.625

Token 888: ')' (ID: 8)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0008771585416980088
    2. ')' → logprob: -7.750877380371094
    3. 'for' → logprob: -7.750877380371094
    4. 'd' → logprob: -11.750877380371094
    5. ' for' → logprob: -12.375877380371094
    6. '(' → logprob: -13.000877380371094
    7. '(g' → logprob: -14.375877380371094
    8. '(e' → logprob: -15.000877380371094
    9. ')d' → logprob: -15.000877380371094
    10. '   ' → logprob: -15.625877380371094

Token 889: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004090035799890757
    2. ' for' → logprob: -5.504089832305908
    3. '(d' → logprob: -11.629090309143066
    4. '(for' → logprob: -13.754090309143066
    5. '	for' → logprob: -14.129090309143066
    6. ')' → logprob: -14.379090309143066
    7. '...' → logprob: -16.12908935546875
    8. '(' → logprob: -16.50408935546875
    9. '   ' → logprob: -16.62908935546875
    10. '
' → logprob: -17.25408935546875

Token 890: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04998551309108734
    2. 'g' → logprob: -3.049985408782959
    3. '(d' → logprob: -7.299985408782959
    4. '(g' → logprob: -7.674985408782959
    5. ' d' → logprob: -8.424985885620117
    6. ' g' → logprob: -10.924985885620117
    7. 're' → logprob: -11.424985885620117
    8. '	d' → logprob: -12.424985885620117
    9. '	g' → logprob: -12.924985885620117
    10. ' reversed' → logprob: -13.799985885620117

Token 891: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5259789228439331
    2. 'in' → logprob: -0.9009789228439331
    3. 'd' → logprob: -5.900979042053223
    4. '_d' → logprob: -10.025979042053223
    5. ' ' → logprob: -11.025979042053223
    6. ' d' → logprob: -11.900979042053223
    7. '[::-' → logprob: -11.900979042053223
    8. 's' → logprob: -12.025979042053223
    9. '_digits' → logprob: -12.150979042053223
    10. 'g' → logprob: -12.400979042053223

Token 892: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0009337326046079397
    2. ' g' → logprob: -7.000933647155762
    3. 're' → logprob: -11.375933647155762
    4. 'b' → logprob: -11.625933647155762
    5. ' reversed' → logprob: -14.000933647155762
    6. '   ' → logprob: -15.625933647155762
    7. '[g' → logprob: -15.750933647155762
    8. '	g' → logprob: -15.875933647155762
    9. '(g' → logprob: -15.875933647155762
    10. ' b' → logprob: -16.375934600830078

Token 893: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -5.407366916188039e-05
    2. 'digits' → logprob: -9.875054359436035
    3. 'igits' → logprob: -13.625054359436035
    4. ')' → logprob: -15.125054359436035
    5. '```' → logprob: -15.625054359436035
    6. '_' → logprob: -15.750054359436035
    7. 'Digits' → logprob: -15.750054359436035
    8. '[' → logprob: -16.25005340576172
    9. 'd' → logprob: -16.87505340576172
    10. ']' → logprob: -17.00005340576172

Token 894: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012190054985694587
    2. ')
' → logprob: -9.8751220703125
    3. ')+' → logprob: -10.3751220703125
    4. '+' → logprob: -11.0001220703125
    5. '       ' → logprob: -11.7501220703125
    6. '   ' → logprob: -12.8751220703125
    7. '<|end|>' → logprob: -12.8751220703125
    8. ' )' → logprob: -13.1251220703125
    9. '')' → logprob: -13.3751220703125
    10. ')+'' → logprob: -13.7501220703125

Token 895: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004433797672390938
    2. '           ' → logprob: -6.254433631896973
    3. '
' → logprob: -7.129433631896973
    4. '   ' → logprob: -7.379433631896973
    5. ')' → logprob: -7.754433631896973
    6. 'return' → logprob: -8.504433631896973
    7. 'else' → logprob: -8.879433631896973
    8. '<|end|>' → logprob: -9.254433631896973
    9. '        
' → logprob: -9.879433631896973
    10. '    
' → logprob: -10.254433631896973

Token 896: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.07242812216281891
    2. '       ' → logprob: -3.0724282264709473
    3. ' else' → logprob: -3.9474282264709473
    4. ')' → logprob: -7.072428226470947
    5. ':' → logprob: -7.447428226470947
    6. '<|end|>' → logprob: -7.697428226470947
    7. '=' → logprob: -7.947428226470947
    8. '   ' → logprob: -7.947428226470947
    9. 'return' → logprob: -8.447427749633789
    10. ':
' → logprob: -8.572427749633789

Token 897: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028502441942691803
    2. ':
' → logprob: -3.7785024642944336
    3. '       ' → logprob: -5.403502464294434
    4. '           ' → logprob: -7.903502464294434
    5. '{' → logprob: -8.403502464294434
    6. '   ' → logprob: -10.153502464294434
    7. '        ' → logprob: -10.278502464294434
    8. ':return' → logprob: -11.153502464294434
    9. ' :' → logprob: -11.403502464294434
    10. '=' → logprob: -12.153502464294434

Token 898: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06904222071170807
    2. '           ' → logprob: -2.944042205810547
    3. 'return' → logprob: -4.569042205810547
    4. 'num' → logprob: -6.194042205810547
    5. ' return' → logprob: -6.944042205810547
    6. '   ' → logprob: -7.819042205810547
    7. ' num' → logprob: -8.944042205810547
    8. '        ' → logprob: -9.069042205810547
    9. '               ' → logprob: -11.819042205810547
    10. '      ' → logprob: -12.319042205810547

Token 899: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.0001234428636962548
    2. '       ' → logprob: -10.000123023986816
    3. ' num' → logprob: -10.000123023986816
    4. 'return' → logprob: -10.500123023986816
    5. '   ' → logprob: -12.750123023986816
    6. '	num' → logprob: -14.125123023986816
    7. '           ' → logprob: -14.500123023986816
    8. '
' → logprob: -15.500123023986816
    9. '        
' → logprob: -15.750123023986816
    10. '        ' → logprob: -16.000123977661133

Token 900: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.6286106983898208e-05
    2. 'str' → logprob: -11.250016212463379
    3. '_' → logprob: -12.875016212463379
    4. '_s' → logprob: -15.125016212463379
    5. 's' → logprob: -15.625016212463379
    6. ' _' → logprob: -16.000017166137695
    7. 'Str' → logprob: -17.250017166137695
    8. '_st' → logprob: -17.875017166137695
    9. 'r' → logprob: -18.375017166137695
    10. '__' → logprob: -18.625017166137695

Token 901: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01105159055441618
    2. ' =' → logprob: -4.511051654815674
    3. '+=' → logprob: -12.636051177978516
    4. ' +=' → logprob: -15.136051177978516
    5. '=
' → logprob: -15.261051177978516
    6. ')' → logprob: -18.011051177978516
    7. ' =
' → logprob: -18.636051177978516
    8. ' ' → logprob: -18.636051177978516
    9. '='' → logprob: -18.761051177978516
    10. '.=' → logprob: -18.761051177978516

Token 902: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.00041398804751224816
    2. ' ''.' → logprob: -7.87541389465332
    3. '''' → logprob: -10.37541389465332
    4. '   ' → logprob: -14.00041389465332
    5. ''' → logprob: -14.25041389465332
    6. ''',' → logprob: -15.50041389465332
    7. '         ' → logprob: -15.50041389465332
    8. '       ' → logprob: -15.50041389465332
    9. '''
' → logprob: -15.50041389465332
    10. '           ' → logprob: -16.12541389465332

Token 903: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.0005539863486774266
    2. '''.' → logprob: -7.500554084777832
    3. ''.' → logprob: -15.000554084777832
    4. '.join' → logprob: -15.250554084777832
    5. '''' → logprob: -15.625554084777832
    6. ' join' → logprob: -16.500553131103516
    7. ''' → logprob: -17.250553131103516
    8. 'Join' → logprob: -17.875553131103516
    9. '```' → logprob: -18.250553131103516
    10. ' ''.' → logprob: -18.500553131103516

Token 904: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00012475410767365247
    2. 'str' → logprob: -9.00012493133545
    3. '[str' → logprob: -13.62512493133545
    4. '(' → logprob: -18.125123977661133
    5. '('' → logprob: -19.875123977661133
    6. ' str' → logprob: -19.875123977661133
    7. '=str' → logprob: -20.000123977661133
    8. '```' → logprob: -20.500123977661133
    9. '([' → logprob: -20.625123977661133
    10. '	str' → logprob: -20.625123977661133

Token 905: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.1160349458805285e-05
    2. 'd' → logprob: -12.250011444091797
    3. '(b' → logprob: -12.250011444091797
    4. '(str' → logprob: -14.125011444091797
    5. '(' → logprob: -14.375011444091797
    6. 'b' → logprob: -16.875011444091797
    7. '[d' → logprob: -16.875011444091797
    8. ' (' → logprob: -17.000011444091797
    9. '((' → logprob: -18.375011444091797
    10. '([' → logprob: -18.500011444091797

Token 906: ')' (ID: 8)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.24842211604118347
    2. ')' → logprob: -1.9984221458435059
    3. 'for' → logprob: -2.498422145843506
    4. ' for' → logprob: -6.623422145843506
    5. 'd' → logprob: -7.123422145843506
    6. ')d' → logprob: -10.748421669006348
    7. '   ' → logprob: -10.998421669006348
    8. '[d' → logprob: -11.998421669006348
    9. '(e' → logprob: -12.123421669006348
    10. '(' → logprob: -12.373421669006348

Token 907: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008155301213264465
    2. ' for' → logprob: -5.508155345916748
    3. '(d' → logprob: -5.508155345916748
    4. ')' → logprob: -12.00815486907959
    5. '	for' → logprob: -12.75815486907959
    6. '(for' → logprob: -12.75815486907959
    7. 'd' → logprob: -13.50815486907959
    8. '   ' → logprob: -14.75815486907959
    9. '[d' → logprob: -14.75815486907959
    10. '```' → logprob: -15.13315486907959

Token 908: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00323938624933362
    2. ' d' → logprob: -6.128239154815674
    3. 'b' → logprob: -6.878239154815674
    4. '_' → logprob: -11.378239631652832
    5. ' b' → logprob: -12.128239631652832
    6. '_d' → logprob: -12.878239631652832
    7. ' ' → logprob: -14.128239631652832
    8. '	d' → logprob: -14.253239631652832
    9. ')d' → logprob: -14.503239631652832
    10. ')' → logprob: -14.878239631652832

Token 909: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5842306613922119
    2. 'in' → logprob: -0.8342306613922119
    3. 'b' → logprob: -5.084230422973633
    4. '_digits' → logprob: -6.459230422973633
    5. ')' → logprob: -8.459230422973633
    6. ' ' → logprob: -9.459230422973633
    7. '   ' → logprob: -9.959230422973633
    8. '_' → logprob: -10.334230422973633
    9. '  ' → logprob: -10.709230422973633
    10. '_b' → logprob: -11.334230422973633

Token 910: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009139667963609099
    2. ' b' → logprob: -7.000914096832275
    3. '   ' → logprob: -14.000913619995117
    4. ' ' → logprob: -14.500913619995117
    5. '(b' → logprob: -15.125913619995117
    6. ')b' → logprob: -15.250913619995117
    7. '	b' → logprob: -15.875913619995117
    8. ')' → logprob: -16.125913619995117
    9. '[b' → logprob: -16.125913619995117
    10. '           ' → logprob: -16.875913619995117

Token 911: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.0006304710987024009
    2. 'digits' → logprob: -7.3756303787231445
    3. 'igits' → logprob: -12.625630378723145
    4. 'Digits' → logprob: -14.875630378723145
    5. '```' → logprob: -16.75063133239746
    6. ')' → logprob: -17.00063133239746
    7. '_bits' → logprob: -17.00063133239746
    8. '_' → logprob: -17.12563133239746
    9. 'b' → logprob: -17.25063133239746
    10. ' digits' → logprob: -17.25063133239746

Token 912: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011304454877972603
    2. '+' → logprob: -4.7613043785095215
    3. ')+' → logprob: -6.0113043785095215
    4. ' +' → logprob: -8.51130485534668
    5. '   ' → logprob: -10.76130485534668
    6. '+)' → logprob: -12.01130485534668
    7. ')
' → logprob: -13.63630485534668
    8. ' )' → logprob: -13.88630485534668
    9. '+
' → logprob: -14.01130485534668
    10. ')+'' → logprob: -14.13630485534668

Token 913: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.140337735414505
    2. ' +' → logprob: -2.2653377056121826
    3. ')' → logprob: -4.015337944030762
    4. '+
' → logprob: -4.890337944030762
    5. '<|end|>' → logprob: -7.640337944030762
    6. '   ' → logprob: -8.515337944030762
    7. ')+' → logprob: -8.515337944030762
    8. '       ' → logprob: -8.640337944030762
    9. ' +
' → logprob: -8.890337944030762
    10. 'return' → logprob: -9.265337944030762

Token 914: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.002314880257472396
    2. ' ''.' → logprob: -6.127315044403076
    3. '''' → logprob: -9.002314567565918
    4. '   ' → logprob: -13.252314567565918
    5. '''
' → logprob: -14.252314567565918
    6. ' ' → logprob: -14.377314567565918
    7. ''',' → logprob: -14.502314567565918
    8. 'str' → logprob: -14.627314567565918
    9. '       ' → logprob: -14.877314567565918
    10. '           ' → logprob: -15.002314567565918

Token 915: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.00020663968462031335
    2. '''.' → logprob: -8.62520694732666
    3. '''' → logprob: -10.75020694732666
    4. '.join' → logprob: -13.62520694732666
    5. ''' → logprob: -13.87520694732666
    6. 'strip' → logprob: -13.87520694732666
    7. '(join' → logprob: -14.50020694732666
    8. '''
' → logprob: -14.87520694732666
    9. ' join' → logprob: -15.00020694732666
    10. 'j' → logprob: -15.62520694732666

Token 916: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00012368128227535635
    2. 'str' → logprob: -9.000123977661133
    3. '[str' → logprob: -15.750123977661133
    4. '(' → logprob: -17.375123977661133
    5. '=str' → logprob: -18.000123977661133
    6. ' str' → logprob: -20.375123977661133
    7. '	str' → logprob: -20.625123977661133
    8. ' (' → logprob: -21.250123977661133
    9. ',str' → logprob: -22.625123977661133
    10. '$str' → logprob: -22.625123977661133

Token 917: '(d' (ID: 2572)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.07957577705383301
    2. '(d' → logprob: -2.579575777053833
    3. 'str' → logprob: -7.329575538635254
    4. '(' → logprob: -10.829575538635254
    5. '(int' → logprob: -12.579575538635254
    6. '[str' → logprob: -12.704575538635254
    7. 'd' → logprob: -12.954575538635254
    8. '((' → logprob: -15.204575538635254
    9. '(g' → logprob: -15.454575538635254
    10. '	str' → logprob: -15.829575538635254

Token 918: ')' (ID: 8)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45084521174430847
    2. '(d' → logprob: -1.5758452415466309
    3. ')' → logprob: -1.9508452415466309
    4. ' for' → logprob: -4.325845241546631
    5. 'd' → logprob: -7.950845241546631
    6. '   ' → logprob: -8.950844764709473
    7. '	for' → logprob: -10.325844764709473
    8. '=d' → logprob: -10.575844764709473
    9. '[d' → logprob: -10.700844764709473
    10. '  ' → logprob: -10.950844764709473

Token 919: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014189241454005241
    2. ' for' → logprob: -4.26418924331665
    3. ')' → logprob: -10.639188766479492
    4. '(d' → logprob: -14.014188766479492
    5. '   ' → logprob: -15.014188766479492
    6. '	for' → logprob: -15.014188766479492
    7. '
' → logprob: -16.389188766479492
    8. ' ' → logprob: -16.514188766479492
    9. 'd' → logprob: -16.514188766479492
    10. '  ' → logprob: -17.139188766479492

Token 920: ' d' (ID: 272)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -3.6789137084269896e-05
    2. ' g' → logprob: -10.25003719329834
    3. '(g' → logprob: -14.62503719329834
    4. '[g' → logprob: -15.37503719329834
    5. '   ' → logprob: -15.75003719329834
    6. 'd' → logprob: -15.75003719329834
    7. 'c' → logprob: -16.250036239624023
    8. ' ' → logprob: -16.500036239624023
    9. ')' → logprob: -16.625036239624023
    10. '	g' → logprob: -17.000036239624023

Token 921: ' in' (ID: 306)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.39564844965934753
    2. 'for' → logprob: -1.89564847946167
    3. '_digits' → logprob: -2.27064847946167
    4. 'b' → logprob: -3.27064847946167
    5. 'igits' → logprob: -3.64564847946167
    6. ')' → logprob: -5.02064847946167
    7. 'digits' → logprob: -7.14564847946167
    8. ' for' → logprob: -8.020648002624512
    9. '   ' → logprob: -8.520648002624512
    10. 'in' → logprob: -8.645648002624512

Token 922: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.000815466046333313
    2. ' g' → logprob: -7.750815391540527
    3. 'b' → logprob: -7.875815391540527
    4. '[g' → logprob: -13.000815391540527
    5. ' b' → logprob: -13.500815391540527
    6. ' ' → logprob: -15.250815391540527
    7. '   ' → logprob: -15.375815391540527
    8. 'c' → logprob: -15.500815391540527
    9. '	g' → logprob: -16.000816345214844
    10. ')' → logprob: -16.125816345214844

Token 923: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.0032806212548166513
    2. 'digits' → logprob: -5.7532806396484375
    3. 'igits' → logprob: -9.253280639648438
    4. 'b' → logprob: -12.878280639648438
    5. 'Digits' → logprob: -13.128280639648438
    6. ' digits' → logprob: -14.253280639648438
    7. '```' → logprob: -14.628280639648438
    8. 'g' → logprob: -15.253280639648438
    9. 'd' → logprob: -15.628280639648438
    10. '[' → logprob: -15.753280639648438

Token 924: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014564243610948324
    2. '       ' → logprob: -6.876456260681152
    3. ')
' → logprob: -7.876456260681152
    4. '   ' → logprob: -10.626456260681152
    5. '')' → logprob: -12.376456260681152
    6. ')return' → logprob: -12.751456260681152
    7. '+' → logprob: -12.876456260681152
    8. '`)' → logprob: -13.751456260681152
    9. '```' → logprob: -13.751456260681152
    10. ')+' → logprob: -13.751456260681152

Token 925: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002434699417790398
    2. '
' → logprob: -9.125243186950684
    3. '   ' → logprob: -9.250243186950684
    4. '           ' → logprob: -10.875243186950684
    5. 'return' → logprob: -11.625243186950684
    6. ' return' → logprob: -12.750243186950684
    7. '<|end|>' → logprob: -12.750243186950684
    8. '```' → logprob: -14.125243186950684
    9. '        
' → logprob: -14.250243186950684
    10. '
' → logprob: -14.375243186950684

Token 926: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009364743018522859
    2. 'return' (adapté à ' return') → logprob: -7.375936508178711
    3. '   ' → logprob: -8.375936508178711
    4. ' return' → logprob: -9.875936508178711
    5. '
' → logprob: -11.250936508178711
    6. '           ' → logprob: -12.125936508178711
    7. '	return' → logprob: -12.750936508178711
    8. '<|end|>' → logprob: -13.625936508178711
    9. '        
' → logprob: -13.750936508178711
    10. '      ' → logprob: -14.000936508178711

Token 927: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.07889022678136826
    2. ' num' → logprob: -2.578890323638916
    3. '	num' → logprob: -16.203889846801758
    4. '(num' → logprob: -16.703889846801758
    5. 'nu' → logprob: -16.828889846801758
    6. ' ' → logprob: -16.953889846801758
    7. '[num' → logprob: -17.453889846801758
    8. 'n' → logprob: -17.703889846801758
    9. '   ' → logprob: -17.828889846801758
    10. '_num' → logprob: -17.953889846801758

Token 928: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -2.7252845029579476e-05
    2. 'str' → logprob: -11.375027656555176
    3. 'r' → logprob: -11.875027656555176
    4. 'Str' → logprob: -12.625027656555176
    5. '```' → logprob: -12.875027656555176
    6. 's' → logprob: -13.875027656555176
    7. '_s' → logprob: -14.750027656555176
    8. '_' → logprob: -15.250027656555176
    9. 't' → logprob: -15.625027656555176
    10. 'ber' → logprob: -15.875027656555176

Token 929: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6017053127288818
    2. '   ' → logprob: -0.8517053127288818
    3. '    
' → logprob: -3.726705312728882
    4. 'def' → logprob: -7.351705551147461
    5. '```' → logprob: -8.351705551147461
    6. '<|end|>' → logprob: -8.351705551147461
    7. '        
' → logprob: -9.601705551147461
    8. '

' → logprob: -9.851705551147461
    9. '  
' → logprob: -10.101705551147461
    10. '<|end|>' → logprob: -10.851705551147461

Token 930: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029508396983146667
    2. 'def' → logprob: -6.377950668334961
    3. '
' → logprob: -6.877950668334961
    4. '    
' → logprob: -8.502950668334961
    5. '```' → logprob: -11.877950668334961
    6. ' def' → logprob: -12.377950668334961
    7. 'import' → logprob: -13.252950668334961
    8. '        
' → logprob: -14.377950668334961
    9. 'for' → logprob: -14.877950668334961
    10. 'from' → logprob: -15.377950668334961

Token 931: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1610174924135208
    2. 'def' → logprob: -1.9110175371170044
    3. '
' → logprob: -7.661017417907715
    4. '    
' → logprob: -8.786017417907715
    5. 'for' → logprob: -9.286017417907715
    6. ' def' → logprob: -10.161017417907715
    7. 'from' → logprob: -11.411017417907715
    8. 'indent' → logprob: -11.661017417907715
    9. 'n' → logprob: -11.786017417907715
    10. 'import' → logprob: -12.286017417907715

Token 932: ' Check' (ID: 6208)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00037621514638885856
    2. 'from' → logprob: -8.000375747680664
    3. '   ' → logprob: -10.375375747680664
    4. 'import' → logprob: -11.875375747680664
    5. '
' → logprob: -13.500375747680664
    6. ' def' → logprob: -13.875375747680664
    7. '```' → logprob: -16.125375747680664
    8. 'digits' → logprob: -16.375375747680664
    9. 'indent' → logprob: -16.875375747680664
    10. 'for' → logprob: -17.250375747680664

Token 933: ' leading' (ID: 8117)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22164815664291382
    2. '   ' → logprob: -1.8466482162475586
    3. 'if' → logprob: -4.721648216247559
    4. '_number' → logprob: -5.346648216247559
    5. '_' → logprob: -5.721648216247559
    6. '_num' → logprob: -5.721648216247559
    7. 'for' → logprob: -5.971648216247559
    8. '_line' → logprob: -6.096648216247559
    9. ' def' → logprob: -6.471648216247559
    10. 'len' → logprob: -6.596648216247559

Token 934: ' zeros' (ID: 42274)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11651664972305298
    2. '_zero' → logprob: -2.366516590118408
    3. '_digits' → logprob: -5.616516590118408
    4. ' zeros' → logprob: -5.741516590118408
    5. 'zero' → logprob: -6.116516590118408
    6. '_digit' → logprob: -6.241516590118408
    7. 'zeros' → logprob: -6.491516590118408
    8. 'def' → logprob: -7.116516590118408
    9. '_num' → logprob: -7.241516590118408
    10. ' zero' → logprob: -7.366516590118408

Token 935: ':
' (ID: 734)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0186337698251009
    2. ' =' → logprob: -5.143633842468262
    3. '   ' → logprob: -5.393633842468262
    4. 'if' → logprob: -6.018633842468262
    5. ' def' → logprob: -6.768633842468262
    6. '_' → logprob: -7.018633842468262
    7. '_b' → logprob: -7.268633842468262
    8. '_num' → logprob: -7.393633842468262
    9. 'b' → logprob: -7.643633842468262
    10. '=' → logprob: -8.018633842468262

Token 936: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.3822154111694545e-05
    2. 'def' → logprob: -10.500043869018555
    3. '    
' → logprob: -12.125043869018555
    4. '
' → logprob: -12.750043869018555
    5. 'if' → logprob: -12.750043869018555
    6. ' if' → logprob: -12.875043869018555
    7. '```' → logprob: -13.625043869018555
    8. '       ' → logprob: -14.500043869018555
    9. ' def' → logprob: -14.625043869018555
    10. '#' → logprob: -17.125043869018555

Token 937: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020513281226158142
    2. 'def' → logprob: -4.77051305770874
    3. 'if' → logprob: -5.02051305770874
    4. ' if' → logprob: -5.27051305770874
    5. ' def' → logprob: -9.395513534545898
    6. '    
' → logprob: -13.770513534545898
    7. '
' → logprob: -13.895513534545898
    8. '```' → logprob: -14.520513534545898
    9. '       ' → logprob: -15.395513534545898
    10. '#' (adapté à ' #') → logprob: -15.520513534545898

Token 938: ' num' (ID: 2269)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16767223179340363
    2. ' if' → logprob: -2.4176721572875977
    3. 'if' → logprob: -2.9176721572875977
    4. 'def' → logprob: -4.542672157287598
    5. ' def' → logprob: -7.667672157287598
    6. '
' → logprob: -10.167672157287598
    7. '```' → logprob: -11.167672157287598
    8. '#' → logprob: -11.542672157287598
    9. '    
' → logprob: -12.667672157287598
    10. '       ' → logprob: -14.542672157287598

Token 939: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0009986326331272721
    2. '_' → logprob: -7.375998497009277
    3. '   ' → logprob: -8.500998497009277
    4. '_len' → logprob: -9.625998497009277
    5. 'str' → logprob: -10.125998497009277
    6. '```' → logprob: -11.875998497009277
    7. '_digits' → logprob: -11.875998497009277
    8. ' =' → logprob: -12.125998497009277
    9. ' _' → logprob: -12.625998497009277
    10. '_s' → logprob: -12.750998497009277

Token 940: ' cannot' (ID: 6284)
  Prédit: '.startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.3284890055656433
    2. ' =' → logprob: -1.578489065170288
    3. '   ' → logprob: -3.328489065170288
    4. '[' → logprob: -4.078488826751709
    5. 'startswith' → logprob: -4.703488826751709
    6. '=' → logprob: -5.578488826751709
    7. 'def' → logprob: -5.953488826751709
    8. 'if' → logprob: -6.453488826751709
    9. '_num' → logprob: -7.078488826751709
    10. '[:' → logprob: -7.453488826751709

Token 941: ' start' (ID: 1604)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.025700144469738007
    2. '.startswith' → logprob: -4.025700092315674
    3. 'start' → logprob: -5.400700092315674
    4. ' start' → logprob: -6.150700092315674
    5. '.' → logprob: -7.900700092315674
    6. 'startswith' → logprob: -8.025700569152832
    7. '```' → logprob: -8.900700569152832
    8. ' be' → logprob: -11.275700569152832
    9. '_start' → logprob: -12.275700569152832
    10. ' .' → logprob: -12.400700569152832

Token 942: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.06898023933172226
    2. ' with' → logprob: -3.4439802169799805
    3. '==' → logprob: -3.8189802169799805
    4. '=' → logprob: -4.6939802169799805
    5. ' ==' → logprob: -6.9439802169799805
    6. ' =' → logprob: -7.6939802169799805
    7. '_with' → logprob: -7.6939802169799805
    8. ' or' → logprob: -8.19398021697998
    9. 'if' → logprob: -8.31898021697998
    10. '[' → logprob: -8.31898021697998

Token 943: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03442436084151268
    2. '0' → logprob: -3.409424304962158
    3. ' '' → logprob: -7.409424304962158
    4. '"' → logprob: -9.159424781799316
    5. 'b' → logprob: -10.284424781799316
    6. ' ' → logprob: -11.284424781799316
    7. ''b' → logprob: -11.909424781799316
    8. 'str' → logprob: -12.159424781799316
    9. '`' → logprob: -12.409424781799316
    10. '('' → logprob: -14.034424781799316

Token 944: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004377022560220212
    2. ''' → logprob: -7.7504377365112305
    3. '1' → logprob: -12.87543773651123
    4. 'b' → logprob: -13.25043773651123
    5. ' ' → logprob: -13.37543773651123
    6. '')' → logprob: -14.75043773651123
    7. ' '' → logprob: -15.50043773651123
    8. '"' → logprob: -16.375436782836914
    9. '9' → logprob: -16.625436782836914
    10. '`' → logprob: -16.625436782836914

Token 945: ''' (ID: 6)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017655229195952415
    2. ' if' → logprob: -4.517655372619629
    3. 'if' → logprob: -5.392655372619629
    4. ' or' → logprob: -6.517655372619629
    5. ' and' → logprob: -8.392655372619629
    6. 'and' → logprob: -9.267655372619629
    7. 'def' → logprob: -9.267655372619629
    8. '
' → logprob: -10.142655372619629
    9. 'or' → logprob: -10.267655372619629
    10. ',' → logprob: -10.517655372619629

Token 946: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005191182252019644
    2. 'if' → logprob: -5.880191326141357
    3. ' if' → logprob: -6.130191326141357
    4. '
' → logprob: -9.0051908493042
    5. '    
' → logprob: -10.2551908493042
    6. 'def' → logprob: -10.5051908493042
    7. ',' → logprob: -12.0051908493042
    8. '       ' → logprob: -12.7551908493042
    9. ' ' → logprob: -13.1301908493042
    10. '  
' → logprob: -13.2551908493042

Token 947: ' end' (ID: 1268)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.2534453570842743
    2. ' num' → logprob: -1.7534453868865967
    3. ' g' → logprob: -3.6284453868865967
    4. 'g' → logprob: -3.8784453868865967
    5. ''' → logprob: -6.628445148468018
    6. ''g' → logprob: -7.628445148468018
    7. ' be' → logprob: -8.253445625305176
    8. '(num' → logprob: -8.378445625305176
    9. ' (' → logprob: -8.503445625305176
    10. 'len' → logprob: -8.878445625305176

Token 948: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.021667087450623512
    2. ' with' → logprob: -3.896667003631592
    3. '_with' → logprob: -8.14666748046875
    4. 'num' → logprob: -8.52166748046875
    5. '_' → logprob: -9.02166748046875
    6. ''' → logprob: -9.27166748046875
    7. '```' → logprob: -9.39666748046875
    8. '==' → logprob: -9.39666748046875
    9. '_str' → logprob: -10.27166748046875
    10. '(num' → logprob: -10.52166748046875

Token 949: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0011446223361417651
    2. ''g' → logprob: -7.6261444091796875
    3. ' '' → logprob: -8.626144409179688
    4. 'g' → logprob: -8.751144409179688
    5. '0' → logprob: -9.001144409179688
    6. ''b' → logprob: -9.501144409179688
    7. 'b' → logprob: -9.876144409179688
    8. 'str' → logprob: -10.626144409179688
    9. ' g' → logprob: -11.126144409179688
    10. 'num' → logprob: -11.751144409179688

Token 950: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012814993970096111
    2. ''' → logprob: -4.887814998626709
    3. 'g' → logprob: -5.512814998626709
    4. 'b' → logprob: -7.387814998626709
    5. '1' → logprob: -8.88781452178955
    6. '')' → logprob: -9.76281452178955
    7. '"' → logprob: -9.88781452178955
    8. ''g' → logprob: -9.88781452178955
    9. '9' → logprob: -10.01281452178955
    10. ' ' → logprob: -10.63781452178955

Token 951: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7934446930885315
    2. ')' → logprob: -1.4184446334838867
    3. ' or' → logprob: -2.5434446334838867
    4. '')' → logprob: -3.1684446334838867
    5. ''' → logprob: -3.2934446334838867
    6. ')
' → logprob: -3.4184446334838867
    7. 'def' → logprob: -3.7934446334838867
    8. ':
' → logprob: -4.168444633483887
    9. ':' → logprob: -4.418444633483887
    10. ' and' → logprob: -4.793444633483887

Token 952: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029577314853668213
    2. '
' → logprob: -6.627957820892334
    3. 'def' → logprob: -6.627957820892334
    4. '    
' → logprob: -8.502957344055176
    5. ' def' → logprob: -10.127957344055176
    6. '<|end|>' → logprob: -10.752957344055176
    7. ' if' → logprob: -11.627957344055176
    8. '<|end|>' → logprob: -12.002957344055176
    9. '#' → logprob: -12.127957344055176
    10. '```' → logprob: -12.502957344055176

Token 953: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021998681768309325
    2. '
' → logprob: -8.75022029876709
    3. 'def' → logprob: -10.37522029876709
    4. 'if' → logprob: -11.12522029876709
    5. ' if' → logprob: -11.50022029876709
    6. '    
' → logprob: -12.62522029876709
    7. '```' → logprob: -13.50022029876709
    8. '       ' → logprob: -15.37522029876709
    9. ' def' → logprob: -15.37522029876709
    10. '#' (adapté à ' #') → logprob: -17.125219345092773

Token 954: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04144727811217308
    2. '
' → logprob: -3.541447162628174
    3. 'def' → logprob: -4.541447162628174
    4. '    
' → logprob: -7.166447162628174
    5. 'for' → logprob: -9.166447639465332
    6. '#' → logprob: -10.541447639465332
    7. 'if' → logprob: -10.666447639465332
    8. '```' → logprob: -11.166447639465332
    9. ' def' → logprob: -11.291447639465332
    10. '
' → logprob: -12.916447639465332

Token 955: ' first' (ID: 1577)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8793713450431824
    2. ' if' → logprob: -1.1293714046478271
    3. 'def' → logprob: -2.379371404647827
    4. ' first' → logprob: -2.379371404647827
    5. '   ' → logprob: -3.879371404647827
    6. ' def' → logprob: -4.379371166229248
    7. 'first' → logprob: -4.879371166229248
    8. 'b' → logprob: -5.004371166229248
    9. ' last' → logprob: -5.254371166229248
    10. ' b' → logprob: -5.379371166229248

Token 956: ' digit' (ID: 19181)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0948905944824219
    2. ' ' → logprob: -2.094890594482422
    3. '_digit' → logprob: -2.219890594482422
    4. 'digit' → logprob: -2.594890594482422
    5. ' b' → logprob: -2.719890594482422
    6. ' character' → logprob: -2.719890594482422
    7. 'b' → logprob: -2.844890594482422
    8. '_char' → logprob: -3.219890594482422
    9. ' digit' → logprob: -3.969890594482422
    10. ' if' → logprob: -4.094890594482422

Token 957: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4918100833892822
    2. ' !=' → logprob: -1.7418100833892822
    3. '=' → logprob: -1.9918100833892822
    4. '   ' → logprob: -2.2418100833892822
    5. ' if' → logprob: -2.8668100833892822
    6. '[' → logprob: -2.8668100833892822
    7. ' not' → logprob: -2.9918100833892822
    8. 'def' → logprob: -3.4918100833892822
    9. '!=' → logprob: -3.7418100833892822
    10. ' ' → logprob: -3.8668100833892822

Token 958: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3225863575935364
    2. 'str' → logprob: -1.3225862979888916
    3. '   ' → logprob: -4.822586536407471
    4. ' str' → logprob: -7.697586536407471
    5. ' b' → logprob: -8.572586059570312
    6. '`' → logprob: -8.947586059570312
    7. ''b' → logprob: -9.572586059570312
    8. 'best' → logprob: -9.822586059570312
    9. '```' → logprob: -9.947586059570312
    10. 'def' → logprob: -10.447586059570312

Token 959: '1' (ID: 16)
  Prédit: '_digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.1311800628900528
    2. '_' → logprob: -2.1311800479888916
    3. '_digit' → logprob: -6.506180286407471
    4. '_d' → logprob: -7.131180286407471
    5. 'digits' → logprob: -7.756180286407471
    6. '1' → logprob: -8.006179809570312
    7. 's' → logprob: -8.381179809570312
    8. '_chars' → logprob: -8.756179809570312
    9. '[' → logprob: -9.006179809570312
    10. 'def' → logprob: -9.381179809570312

Token 960: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013365156948566437
    2. 'def' → logprob: -5.388365268707275
    3. ' if' → logprob: -5.513365268707275
    4. 'if' → logprob: -6.388365268707275
    5. '
' → logprob: -6.638365268707275
    6. ':' → logprob: -7.013365268707275
    7. '    
' → logprob: -8.013364791870117
    8. ':
' → logprob: -9.138364791870117
    9. ' =' → logprob: -9.263364791870117
    10. ')' → logprob: -10.388364791870117

Token 961: ' last' (ID: 2174)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42908191680908203
    2. ' and' → logprob: -2.679081916809082
    3. ' if' → logprob: -2.679081916809082
    4. ' the' → logprob: -3.054081916809082
    5. ' g' → logprob: -3.304081916809082
    6. 'and' → logprob: -3.429081916809082
    7. 'g' → logprob: -3.929081916809082
    8. 'if' → logprob: -4.054081916809082
    9. 'the' → logprob: -4.054081916809082
    10. '#' → logprob: -4.304081916809082

Token 962: ' digit' (ID: 19181)
  Prédit: '_digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.8331578969955444
    2. 'digit' → logprob: -2.083158016204834
    3. '_' → logprob: -2.583158016204834
    4. '_num' → logprob: -2.833158016204834
    5. ' digit' → logprob: -2.958158016204834
    6. ' ' → logprob: -3.208158016204834
    7. '_char' → logprob: -3.333158016204834
    8. 'num' → logprob: -3.458158016204834
    9. '   ' → logprob: -3.708158016204834
    10. '_str' → logprob: -3.958158016204834

Token 963: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6794552803039551
    2. ' is' → logprob: -1.804455280303955
    3. ' ==' → logprob: -2.054455280303955
    4. ' of' → logprob: -3.429455280303955
    5. ')' → logprob: -3.804455280303955
    6. '   ' → logprob: -4.054455280303955
    7. ' cannot' → logprob: -4.054455280303955
    8. ' must' → logprob: -4.179455280303955
    9. 'def' → logprob: -4.179455280303955
    10. ' num' → logprob: -4.554455280303955

Token 964: ' g' (ID: 329)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.6503883004188538
    2. 'g' → logprob: -0.7753883004188538
    3. 'b' → logprob: -4.900388240814209
    4. ' str' → logprob: -5.275388240814209
    5. ' g' → logprob: -5.400388240814209
    6. 'num' → logprob: -9.025388717651367
    7. ''g' → logprob: -9.275388717651367
    8. '''.' → logprob: -9.650388717651367
    9. ' b' → logprob: -9.775388717651367
    10. '`' → logprob: -10.025388717651367

Token 965: '1' (ID: 16)
  Prédit: '_digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.004584872629493475
    2. '_' → logprob: -6.004584789276123
    3. 'digits' → logprob: -7.254584789276123
    4. '1' → logprob: -7.504584789276123
    5. '_digit' → logprob: -8.254585266113281
    6. '_str' → logprob: -8.379585266113281
    7. '```' → logprob: -9.379585266113281
    8. '_chars' → logprob: -9.879585266113281
    9. '`' → logprob: -10.254585266113281
    10. '_d' → logprob: -10.754585266113281

Token 966: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004171833395957947
    2. '
' → logprob: -6.004171848297119
    3. 'def' → logprob: -6.879171848297119
    4. '    
' → logprob: -7.754171848297119
    5. '<|end|>' → logprob: -9.129171371459961
    6. '<|end|>' → logprob: -9.754171371459961
    7. '```' → logprob: -11.254171371459961
    8. ' if' → logprob: -11.379171371459961
    9. ':' → logprob: -11.754171371459961
    10. ' def' → logprob: -11.879171371459961

Token 967: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005690688267350197
    2. 'def' → logprob: -5.505690574645996
    3. '
' → logprob: -6.880690574645996
    4. '    
' → logprob: -7.880690574645996
    5. ' def' → logprob: -8.755690574645996
    6. ' if' → logprob: -11.505690574645996
    7. '```' → logprob: -11.630690574645996
    8. '<|end|>' → logprob: -12.505690574645996
    9. '       ' → logprob: -12.755690574645996
    10. ',' → logprob: -13.005690574645996

Token 968: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006260605878196657
    2. '
' → logprob: -7.500626087188721
    3. '    
' → logprob: -10.250625610351562
    4. 'def' → logprob: -10.750625610351562
    5. ' if' → logprob: -12.000625610351562
    6. 'if' → logprob: -12.125625610351562
    7. '```' → logprob: -12.875625610351562
    8. '       ' → logprob: -13.875625610351562
    9. '#' (adapté à ' #') → logprob: -14.875625610351562
    10. ',' → logprob: -15.875625610351562

Token 969: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005554959177970886
    2. 'def' → logprob: -5.630555152893066
    3. 'if' → logprob: -6.630555152893066
    4. '
' → logprob: -7.505555152893066
    5. 'for' → logprob: -10.505555152893066
    6. ' if' → logprob: -10.755555152893066
    7. '    
' → logprob: -10.880555152893066
    8. '#' → logprob: -12.005555152893066
    9. 'b' → logprob: -12.255555152893066
    10. ' def' → logprob: -12.880555152893066

Token 970: ' b' (ID: 287)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4593312740325928
    2. ' if' → logprob: -1.7093312740325928
    3. '   ' → logprob: -2.2093312740325928
    4. 'b' → logprob: -2.7093312740325928
    5. ' b' → logprob: -5.334331512451172
    6. 'not' → logprob: -5.959331512451172
    7. ' not' → logprob: -6.084331512451172
    8. 'return' → logprob: -7.209331512451172
    9. 'def' → logprob: -8.334331512451172
    10. ' return' → logprob: -8.834331512451172

Token 971: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.017911570146679878
    2. '_' → logprob: -4.142911434173584
    3. '[' → logprob: -7.642911434173584
    4. 'digits' → logprob: -7.767911434173584
    5. '1' → logprob: -8.017911911010742
    6. '_d' → logprob: -8.017911911010742
    7. '```' → logprob: -9.767911911010742
    8. '_digit' → logprob: -9.892911911010742
    9. 'Digits' → logprob: -10.392911911010742
    10. '_i' → logprob: -10.767911911010742

Token 972: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006460758158937097
    2. 'and' → logprob: -7.500646114349365
    3. ' and' → logprob: -10.375645637512207
    4. '==' → logprob: -10.875645637512207
    5. '[-' → logprob: -11.375645637512207
    6. '   ' → logprob: -11.625645637512207
    7. 'must' → logprob: -12.500645637512207
    8. 'def' → logprob: -12.750645637512207
    9. ':' → logprob: -13.125645637512207
    10. '[
' → logprob: -13.250645637512207

Token 973: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.082895273109898e-05
    2. '-' → logprob: -11.250030517578125
    3. '[' → logprob: -12.000030517578125
    4. ' ' → logprob: -12.000030517578125
    5. ']' → logprob: -12.750030517578125
    6. '```' → logprob: -14.375030517578125
    7. '
' → logprob: -14.625030517578125
    8. '   ' → logprob: -14.875030517578125
    9. ')' → logprob: -15.000030517578125
    10. '`' → logprob: -15.375030517578125

Token 974: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018920281901955605
    2. ']!=' → logprob: -4.768920421600342
    3. ' !=' → logprob: -4.768920421600342
    4. '!=' → logprob: -7.018920421600342
    5. '[' → logprob: -7.893920421600342
    6. ' ]' → logprob: -8.143919944763184
    7. '']' → logprob: -9.893919944763184
    8. '```' → logprob: -10.018919944763184
    9. ']!='' → logprob: -10.518919944763184
    10. 'and' → logprob: -10.643919944763184

Token 975: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.05226527526974678
    2. ' !=' → logprob: -3.052265167236328
    3. '==' → logprob: -6.052265167236328
    4. '>' → logprob: -7.302265167236328
    5. 'and' → logprob: -8.802265167236328
    6. '=' → logprob: -8.927265167236328
    7. '[' → logprob: -9.427265167236328
    8. ' ==' → logprob: -9.927265167236328
    9. '!==' → logprob: -9.927265167236328
    10. '   ' → logprob: -10.052265167236328

Token 976: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. ''' → logprob: -15.625204086303711
    4. '=' → logprob: -19.00020408630371
    5. ' ' → logprob: -19.00020408630371
    6. '`' → logprob: -19.12520408630371
    7. '```' → logprob: -19.50020408630371
    8. '
' → logprob: -19.81270408630371
    9. '   ' → logprob: -19.93770408630371
    10. '  ' → logprob: -20.12520408630371

Token 977: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. ''' → logprob: -18.125001907348633
    4. '`' → logprob: -22.625001907348633
    5. '=' → logprob: -23.000001907348633
    6. '```' → logprob: -23.125001907348633
    7. '   ' → logprob: -23.500001907348633
    8. ' ' → logprob: -23.625001907348633
    9. '[' → logprob: -23.875001907348633
    10. '۰' → logprob: -24.000001907348633

Token 978: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09618045389652252
    2. ' and' → logprob: -2.5961804389953613
    3. 'and' → logprob: -4.096180438995361
    4. 'def' → logprob: -8.47118091583252
    5. ',' → logprob: -9.09618091583252
    6. ':' → logprob: -9.97118091583252
    7. '```' → logprob: -10.09618091583252
    8. '       ' → logprob: -10.97118091583252
    9. ' or' → logprob: -11.09618091583252
    10. '    
' → logprob: -11.09618091583252

Token 979: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00516141252592206
    2. 'g' → logprob: -5.630161285400391
    3. ' b' → logprob: -6.505161285400391
    4. '   ' → logprob: -10.00516128540039
    5. ' g' → logprob: -11.00516128540039
    6. '`' → logprob: -14.00516128540039
    7. ' ' → logprob: -14.38016128540039
    8. '```' → logprob: -14.75516128540039
    9. '	b' → logprob: -15.38016128540039
    10. '  ' → logprob: -15.63016128540039

Token 980: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.00020747410599142313
    2. 'digits' → logprob: -8.750207901000977
    3. '```' → logprob: -11.125207901000977
    4. '_' → logprob: -11.500207901000977
    5. '[' → logprob: -12.125207901000977
    6. '_d' → logprob: -12.500207901000977
    7. 'Digits' → logprob: -12.500207901000977
    8. '\' → logprob: -13.125207901000977
    9. '
' → logprob: -13.375207901000977
    10. ' _' → logprob: -13.750207901000977

Token 981: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.062042076140642166
    2. '[' → logprob: -2.812041997909546
    3. '[len' → logprob: -10.687042236328125
    4. '[n' → logprob: -11.437042236328125
    5. '```' → logprob: -11.562042236328125
    6. '][-' → logprob: -11.937042236328125
    7. '   ' → logprob: -12.062042236328125
    8. '[
' → logprob: -12.562042236328125
    9. ']' → logprob: -12.687042236328125
    10. '0' → logprob: -12.812042236328125

Token 982: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.62500286102295
    3. '0' → logprob: -13.87500286102295
    4. ']' → logprob: -15.87500286102295
    5. '   ' → logprob: -17.000001907348633
    6. '-' → logprob: -17.750001907348633
    7. '```' → logprob: -18.062501907348633
    8. '
' → logprob: -18.062501907348633
    9. '}' → logprob: -18.562501907348633
    10. '9' → logprob: -18.687501907348633

Token 983: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02229449525475502
    2. ']!=' → logprob: -4.147294521331787
    3. '!=' → logprob: -5.397294521331787
    4. ' !=' → logprob: -6.647294521331787
    5. '']' → logprob: -9.397294044494629
    6. '`]' → logprob: -9.397294044494629
    7. '```' → logprob: -9.522294044494629
    8. '[' → logprob: -9.647294044494629
    9. ' ]' → logprob: -10.397294044494629
    10. ')!=' → logprob: -10.897294044494629

Token 984: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.2257218211889267
    2. ' !=' → logprob: -1.600721836090088
    3. ')!=' → logprob: -9.10072135925293
    4. ']!=' → logprob: -10.35072135925293
    5. '```' → logprob: -10.35072135925293
    6. ')' → logprob: -10.47572135925293
    7. ' ' → logprob: -10.85072135925293
    8. '   ' → logprob: -10.97572135925293
    9. '()!=' → logprob: -11.10072135925293
    10. '>' → logprob: -11.47572135925293

Token 985: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.250045776367188
    4. '`' → logprob: -17.250045776367188
    5. '```' → logprob: -17.250045776367188
    6. '۰' → logprob: -17.625045776367188
    7. '
' → logprob: -17.812545776367188
    8. '=' → logprob: -17.937545776367188
    9. '...' → logprob: -18.500045776367188
    10. '1' → logprob: -18.687545776367188

Token 986: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.64708495605737e-05
    2. ' ' → logprob: -9.625066757202148
    3. '1' → logprob: -16.06256675720215
    4. '`' → logprob: -16.81256675720215
    5. '```' → logprob: -17.25006675720215
    6. '   ' → logprob: -17.43756675720215
    7. '۰' → logprob: -17.43756675720215
    8. '=' → logprob: -17.56256675720215
    9. '
' → logprob: -17.93756675720215
    10. ''' → logprob: -18.25006675720215

Token 987: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5869874358177185
    2. '   ' → logprob: -0.9619874358177185
    3. '    
' → logprob: -2.8369874954223633
    4. '<|end|>' → logprob: -6.586987495422363
    5. '<|end|>' → logprob: -7.836987495422363
    6. '  
' → logprob: -7.961987495422363
    7. 'def' → logprob: -7.961987495422363
    8. '

' → logprob: -9.336987495422363
    9. '   
' → logprob: -9.336987495422363
    10. '```' → logprob: -9.336987495422363

Token 988: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6562036871910095
    2. '
' → logprob: -0.7812036871910095
    3. '    
' → logprob: -4.031203746795654
    4. 'def' → logprob: -5.281203746795654
    5. 'import' → logprob: -8.656203269958496
    6. '        
' → logprob: -9.781203269958496
    7. '```' → logprob: -9.906203269958496
    8. '<|end|>' → logprob: -10.156203269958496
    9. '   
' → logprob: -10.281203269958496
    10. '

' → logprob: -10.531203269958496

Token 989: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5293071269989014
    2. '
' → logprob: -1.0293071269989014
    3. 'def' → logprob: -3.0293071269989014
    4. '    
' → logprob: -5.2793073654174805
    5. '
' → logprob: -9.65430736541748
    6. '```' → logprob: -9.77930736541748
    7. '#' (adapté à ' #') → logprob: -10.15430736541748
    8. 'import' → logprob: -10.40430736541748
    9. ' def' → logprob: -10.52930736541748
    10. 'indent' → logprob: -11.02930736541748

Token 990: ' Also' (ID: 8820)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032655101269483566
    2. 'def' → logprob: -3.5326550006866455
    3. '
' → logprob: -5.907655239105225
    4. '    
' → logprob: -9.282654762268066
    5. ' def' → logprob: -9.532654762268066
    6. 'for' → logprob: -11.907654762268066
    7. '```' → logprob: -12.657654762268066
    8. 'import' → logprob: -13.157654762268066
    9. ' for' → logprob: -13.782654762268066
    10. 'from' → logprob: -14.157654762268066

Token 991: ',' (ID: 11)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.635237455368042
    2. 'def' → logprob: -1.760237455368042
    3. ' c' → logprob: -2.135237455368042
    4. 'b' → logprob: -2.260237455368042
    5. ' len' → logprob: -2.510237455368042
    6. 'c' → logprob: -2.760237455368042
    7. ' def' → logprob: -2.885237455368042
    8. ' b' → logprob: -2.885237455368042
    9. ' if' → logprob: -3.135237455368042
    10. '   ' → logprob: -3.385237455368042

Token 992: ' the' (ID: 290)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6021169424057007
    2. 'c' → logprob: -1.6021169424057007
    3. ' c' → logprob: -2.3521170616149902
    4. 'b' → logprob: -3.4771170616149902
    5. ' def' → logprob: -3.6021170616149902
    6. 'g' → logprob: -3.8521170616149902
    7. 'if' → logprob: -3.9771170616149902
    8. 'len' → logprob: -3.9771170616149902
    9. ' if' → logprob: -4.85211706161499
    10. ' all' → logprob: -4.97711706161499

Token 993: ' problem' (ID: 4792)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31467199325561523
    2. 'if' → logprob: -2.0646719932556152
    3. '#' → logprob: -2.5646719932556152
    4. 'c' → logprob: -4.064671993255615
    5. 'g' → logprob: -4.439671993255615
    6. ' if' → logprob: -4.689671993255615
    7. 'for' → logprob: -4.814671993255615
    8. '   ' → logprob: -5.689671993255615
    9. 'import' → logprob: -5.939671993255615
    10. 'last' → logprob: -6.064671993255615

Token 994: ' forb' (ID: 109718)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3285170793533325
    2. 'def' → logprob: -2.203516960144043
    3. ' continues' → logprob: -3.828516960144043
    4. ' must' → logprob: -3.828516960144043
    5. 'digits' → logprob: -3.828516960144043
    6. ' def' → logprob: -4.328516960144043
    7. '#' → logprob: -4.453516960144043
    8. ')' → logprob: -5.078516960144043
    9. ' digits' → logprob: -5.078516960144043
    10. ' wants' → logprob: -5.328516960144043

Token 995: 'ids' (ID: 3375)
  Prédit: 'ids'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ids' → logprob: -0.003921906929463148
    2. 'ides' → logprob: -5.878921985626221
    3. '```' → logprob: -7.503921985626221
    4. 'idden' → logprob: -8.878921508789062
    5. 'id' → logprob: -9.003921508789062
    6. '#' → logprob: -9.753921508789062
    7. 'e' → logprob: -10.003921508789062
    8. '[' → logprob: -10.128921508789062
    9. 'inds' → logprob: -10.378921508789062
    10. 'iden' → logprob: -10.503921508789062

Token 996: ' outputs' (ID: 32725)
  Prédit: 'leading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'leading' → logprob: -1.241783857345581
    2. 'b' → logprob: -1.491783857345581
    3. 'c' → logprob: -1.991783857345581
    4. ' leading' → logprob: -2.491783857345581
    5. 'digits' → logprob: -2.616783857345581
    6. 'g' → logprob: -2.991783857345581
    7. 'the' → logprob: -3.241783857345581
    8. '0' → logprob: -3.991783857345581
    9. ' the' → logprob: -4.11678409576416
    10. 'any' → logprob: -4.49178409576416

Token 997: ' starting' (ID: 8601)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1344936192035675
    2. 'def' → logprob: -3.509493589401245
    3. ' of' → logprob: -3.759493589401245
    4. ' that' → logprob: -4.134493827819824
    5. ' to' → logprob: -4.384493827819824
    6. 'from' → logprob: -4.634493827819824
    7. ' for' → logprob: -4.884493827819824
    8. '```' → logprob: -5.384493827819824
    9. 'b' → logprob: -5.634493827819824
    10. '[' → logprob: -5.759493827819824

Token 998: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.030134348198771477
    2. ' with' → logprob: -3.530134439468384
    3. 'from' → logprob: -8.905134201049805
    4. 'or' → logprob: -9.155134201049805
    5. 'and' → logprob: -10.280134201049805
    6. ' or' → logprob: -10.530134201049805
    7. '0' → logprob: -10.780134201049805
    8. '=' → logprob: -11.280134201049805
    9. 'not' → logprob: -11.655134201049805
    10. '   ' → logprob: -11.655134201049805

Token 999: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03681187331676483
    2. ''' → logprob: -3.4118118286132812
    3. ' ' → logprob: -6.161811828613281
    4. 'b' → logprob: -8.286811828613281
    5. ' '' → logprob: -8.661811828613281
    6. '`' → logprob: -8.786811828613281
    7. '"' → logprob: -9.036811828613281
    8. 'a' → logprob: -9.286811828613281
    9. 'zero' → logprob: -9.911811828613281
    10. '#' → logprob: -10.036811828613281

Token 1000: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6341999173164368
    2. ''' → logprob: -0.7591999173164368
    3. '"' → logprob: -7.259200096130371
    4. ' '' → logprob: -8.259200096130371
    5. '`' → logprob: -8.384200096130371
    6. ' ' → logprob: -9.134200096130371
    7. ''b' → logprob: -9.259200096130371
    8. 'def' → logprob: -9.259200096130371
    9. 'b' → logprob: -9.759200096130371
    10. 'zero' → logprob: -11.009200096130371

Token 1001: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14209628105163574
    2. '
' → logprob: -2.3920962810516357
    3. 'def' → logprob: -3.2670962810516357
    4. '    
' → logprob: -5.892096519470215
    5. ' def' → logprob: -9.642096519470215
    6. 'import' → logprob: -11.267096519470215
    7. 'for' → logprob: -11.517096519470215
    8. '        
' → logprob: -11.517096519470215
    9. '

' → logprob: -11.642096519470215
    10. '#' → logprob: -11.767096519470215

Token 1002: ' so' (ID: 813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019559819251298904
    2. 'b' → logprob: -5.519559860229492
    3. 'if' → logprob: -5.769559860229492
    4. 'def' → logprob: -5.769559860229492
    5. 'and' → logprob: -6.144559860229492
    6. '#' → logprob: -6.144559860229492
    7. ' if' → logprob: -6.644559860229492
    8. '       ' → logprob: -6.894559860229492
    9. ' so' → logprob: -7.019559860229492
    10. ' and' → logprob: -7.144559860229492

Token 1003: ' strictly' (ID: 38971)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4930482804775238
    2. ' b' → logprob: -1.8680483102798462
    3. ' if' → logprob: -1.9930483102798462
    4. '   ' → logprob: -2.8680481910705566
    5. 'if' → logprob: -3.2430481910705566
    6. 'def' → logprob: -7.368048191070557
    7. 'g' → logprob: -7.743048191070557
    8. ' return' → logprob: -7.868048191070557
    9. 'return' → logprob: -8.118048667907715
    10. ' g' → logprob: -8.618048667907715

Token 1004: ' no' (ID: 860)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0280015468597412
    2. '   ' → logprob: -1.1530015468597412
    3. 'def' → logprob: -1.2780015468597412
    4. 'b' → logprob: -3.528001546859741
    5. ' if' → logprob: -4.27800178527832
    6. ' def' → logprob: -6.40300178527832
    7. 'while' → logprob: -6.52800178527832
    8. ' b' → logprob: -7.40300178527832
    9. '```' → logprob: -8.65300178527832
    10. 'continue' → logprob: -8.77800178527832

Token 1005: ' leading' (ID: 8117)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.30620360374450684
    2. ' b' → logprob: -1.6812036037445068
    3. ' leading' → logprob: -3.556203603744507
    4. '0' → logprob: -4.056203842163086
    5. '```' → logprob: -5.306203842163086
    6. '   ' → logprob: -5.556203842163086
    7. ' ' → logprob: -5.556203842163086
    8. 'def' → logprob: -5.806203842163086
    9. ' zero' → logprob: -5.931203842163086
    10. ' return' → logprob: -6.181203842163086

Token 1006: ' zero' (ID: 12421)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05320006608963013
    2. '0' → logprob: -3.8032000064849854
    3. '_zero' → logprob: -5.0532002449035645
    4. ' zeros' → logprob: -5.1782002449035645
    5. '_
' → logprob: -5.3032002449035645
    6. 'zero' → logprob: -5.9282002449035645
    7. 'zeros' → logprob: -5.9282002449035645
    8. ' _' → logprob: -6.1782002449035645
    9. ' zero' → logprob: -6.4282002449035645
    10. '```' → logprob: -6.6782002449035645

Token 1007: ' overall' (ID: 10705)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02288249135017395
    2. '
' → logprob: -4.522882461547852
    3. 'def' → logprob: -4.772882461547852
    4. '    
' → logprob: -5.772882461547852
    5. ' def' → logprob: -10.022882461547852
    6. ',' → logprob: -11.022882461547852
    7. ':' → logprob: -11.022882461547852
    8. '       ' → logprob: -11.397882461547852
    9. '        
' → logprob: -11.397882461547852
    10. ')' → logprob: -11.647882461547852

Token 1008: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07754088938236237
    2. '
' → logprob: -2.827540874481201
    3. 'def' → logprob: -4.202540874481201
    4. '    
' → logprob: -7.702540874481201
    5. ' def' → logprob: -10.82754135131836
    6. 'import' → logprob: -11.95254135131836
    7. '
' → logprob: -12.70254135131836
    8. 'from' → logprob: -12.70254135131836
    9. '        
' → logprob: -12.82754135131836
    10. '

' → logprob: -13.45254135131836

Token 1009: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05059823393821716
    2. 'def' → logprob: -3.30059814453125
    3. '
' → logprob: -4.42559814453125
    4. '    
' → logprob: -7.92559814453125
    5. ' def' → logprob: -9.42559814453125
    6. 'import' → logprob: -10.30059814453125
    7. '```' → logprob: -10.67559814453125
    8. 'from' → logprob: -12.55059814453125
    9. 'for' → logprob: -12.67559814453125
    10. '        
' → logprob: -13.55059814453125

Token 1010: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01864909753203392
    2. '   ' → logprob: -4.018649101257324
    3. '
' → logprob: -8.143649101257324
    4. 'from' → logprob: -9.143649101257324
    5. 'import' → logprob: -10.268649101257324
    6. 'indent' → logprob: -10.893649101257324
    7. '    
' → logprob: -11.143649101257324
    8. '```' → logprob: -11.393649101257324
    9. 'for' → logprob: -11.518649101257324
    10. ' def' → logprob: -11.893649101257324

Token 1011: ' valid' (ID: 4529)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.05167008936405182
    2. ' back' → logprob: -3.0516700744628906
    3. 'can' → logprob: -6.301670074462891
    4. 'valid' → logprob: -7.801670074462891
    5. 'is' → logprob: -7.926670074462891
    6. ' can' → logprob: -8.92667007446289
    7. 'best' → logprob: -9.05167007446289
    8. 'search' → logprob: -9.80167007446289
    9. ' valid' → logprob: -10.17667007446289
    10. ' is' → logprob: -10.42667007446289

Token 1012: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.627643883228302
    2. '_' → logprob: -1.3776438236236572
    3. '_num' → logprob: -2.6276438236236572
    4. '_digit' → logprob: -2.7526438236236572
    5. '_number' → logprob: -3.1276438236236572
    6. '_b' → logprob: -4.252644062042236
    7. '_valid' → logprob: -4.377644062042236
    8. '_numbers' → logprob: -6.127644062042236
    9. '_d' → logprob: -6.627644062042236
    10. '_token' → logprob: -6.752644062042236

Token 1013: '(b' (ID: 3229)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6946634650230408
    2. '(b' → logprob: -0.9446634650230408
    3. '(d' → logprob: -2.1946635246276855
    4. '(a' → logprob: -9.194663047790527
    5. ' (' → logprob: -9.444663047790527
    6. '(i' → logprob: -10.069663047790527
    7. '(s' → logprob: -10.694663047790527
    8. '(x' → logprob: -10.694663047790527
    9. '(_' → logprob: -11.069663047790527
    10. '_' → logprob: -11.319663047790527

Token 1014: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.0025760135613381863
    2. ')_' → logprob: -6.627575874328613
    3. '_' → logprob: -7.127575874328613
    4. '_d' → logprob: -8.127575874328613
    5. '_tokens' → logprob: -10.752575874328613
    6. ''_' → logprob: -10.752575874328613
    7. '```' → logprob: -10.877575874328613
    8. ')' → logprob: -11.252575874328613
    9. '_chars' → logprob: -11.627575874328613
    10. '_digit' → logprob: -11.627575874328613

Token 1015: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.575997531414032
    2. '):
' → logprob: -0.825997531414032
    3. ')' → logprob: -10.075997352600098
    4. '):
' → logprob: -11.575997352600098
    5. '):

' → logprob: -12.700997352600098
    6. '   ' → logprob: -12.950997352600098
    7. ' ):' → logprob: -15.325997352600098
    8. ':' → logprob: -15.450997352600098
    9. ',' → logprob: -15.825997352600098
    10. '[]):' → logprob: -15.950997352600098

Token 1016: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04303058981895447
    2. '       ' → logprob: -3.1680305004119873
    3. '    
' → logprob: -10.793030738830566
    4. '	   ' → logprob: -13.043030738830566
    5. 'return' → logprob: -13.293030738830566
    6. '	return' → logprob: -13.418030738830566
    7. '```' → logprob: -13.418030738830566
    8. ' return' → logprob: -14.168030738830566
    9. '        
' → logprob: -14.293030738830566
    10. '(' → logprob: -14.793030738830566

Token 1017: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005536287208087742
    2. 'return' → logprob: -7.500553607940674
    3. ' return' → logprob: -15.000554084777832
    4. '       ' → logprob: -15.375554084777832
    5. '
' → logprob: -16.500553131103516
    6. '    
' → logprob: -18.000553131103516
    7. '	return' → logprob: -18.125553131103516
    8. 'if' (adapté à ' if') → logprob: -19.125553131103516
    9. '   ' → logprob: -19.375553131103516
    10. '    ' → logprob: -20.500553131103516

Token 1018: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02980452962219715
    2. ' b' → logprob: -3.5298044681549072
    3. '   ' → logprob: -10.029804229736328
    4. 'len' → logprob: -12.279804229736328
    5. ' not' → logprob: -13.404804229736328
    6. 'not' → logprob: -13.654804229736328
    7. ' ' → logprob: -14.029804229736328
    8. '    ' → logprob: -14.404804229736328
    9. ' len' → logprob: -14.779804229736328
    10. '       ' → logprob: -15.029804229736328

Token 1019: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.0006719246739521623
    2. '_d' → logprob: -7.375671863555908
    3. '_' → logprob: -10.875672340393066
    4. 'digits' → logprob: -11.000672340393066
    5. '_digit' → logprob: -13.125672340393066
    6. '[' → logprob: -13.750672340393066
    7. 'igits' → logprob: -13.750672340393066
    8. '_
' → logprob: -14.000672340393066
    9. 'd' → logprob: -14.125672340393066
    10. '_di' → logprob: -14.375672340393066

Token 1020: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2200749754119897e-06
    2. '```' → logprob: -14.125001907348633
    3. '==' → logprob: -15.000001907348633
    4. '   ' → logprob: -15.375001907348633
    5. '0' → logprob: -15.500001907348633
    6. '       ' → logprob: -15.750001907348633
    7. ')[' → logprob: -16.000001907348633
    8. ' [' → logprob: -16.375001907348633
    9. ')' → logprob: -16.500001907348633
    10. '][' → logprob: -16.625001907348633

Token 1021: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. '[' → logprob: -12.875005722045898
    3. ' ' → logprob: -12.875005722045898
    4. '   ' → logprob: -16.0000057220459
    5. '
' → logprob: -17.2500057220459
    6. ')' → logprob: -17.8750057220459
    7. '       ' → logprob: -18.2500057220459
    8. ']' → logprob: -18.3750057220459
    9. '...' → logprob: -18.7500057220459
    10. '][' → logprob: -18.8750057220459

Token 1022: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.13220536708831787
    2. ' !=' → logprob: -2.3822054862976074
    3. ']!=' → logprob: -4.507205486297607
    4. ']' → logprob: -4.757205486297607
    5. ')' → logprob: -5.257205486297607
    6. ')!=' → logprob: -5.382205486297607
    7. '()!=' → logprob: -7.382205486297607
    8. '[' → logprob: -7.507205486297607
    9. '0' → logprob: -8.50720500946045
    10. '==' → logprob: -8.63220500946045

Token 1023: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.005696623120456934
    2. '0' → logprob: -6.255696773529053
    3. ' !=' → logprob: -6.255696773529053
    4. '==' → logprob: -6.880696773529053
    5. '!' → logprob: -8.005696296691895
    6. '=' → logprob: -8.255696296691895
    7. '```' → logprob: -9.630696296691895
    8. ')!=' → logprob: -10.130696296691895
    9. '!==' → logprob: -10.505696296691895
    10. '>' → logprob: -10.880696296691895

Token 1024: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -21.7500057220459
    4. '
' → logprob: -23.1250057220459
    5. '۰' → logprob: -24.1250057220459
    6. '```' → logprob: -24.5000057220459
    7. '  ' → logprob: -25.0000057220459
    8. '       ' → logprob: -25.2500057220459
    9. '00' → logprob: -25.2500057220459
    10. '０' → logprob: -25.3750057220459

Token 1025: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.375001907348633
    4. '۰' → logprob: -21.125001907348633
    5. '  ' → logprob: -22.125001907348633
    6. '０' → logprob: -22.375001907348633
    7. '```' → logprob: -22.562501907348633
    8. '    ' → logprob: -22.687501907348633
    9. ''' → logprob: -22.750001907348633
    10. '০' → logprob: -22.812501907348633

Token 1026: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.02825470082461834
    2. 'or' → logprob: -3.653254747390747
    3. '       ' → logprob: -6.278254508972168
    4. ':' → logprob: -10.278254508972168
    5. '	or' → logprob: -11.278254508972168
    6. ':return' → logprob: -11.403254508972168
    7. '   ' → logprob: -12.278254508972168
    8. '           ' → logprob: -12.403254508972168
    9. ')' → logprob: -13.153254508972168
    10. ':
' → logprob: -13.153254508972168

Token 1027: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008562328293919563
    2. '           ' → logprob: -4.8835625648498535
    3. ':' → logprob: -7.6335625648498535
    4. ' or' → logprob: -8.258562088012695
    5. ':
' → logprob: -9.008562088012695
    6. ':return' → logprob: -9.758562088012695
    7. 'return' → logprob: -12.008562088012695
    8. '   ' → logprob: -12.133562088012695
    9. '        ' → logprob: -12.758562088012695
    10. ' and' → logprob: -13.008562088012695

Token 1028: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2025979906320572
    2. 'return' (adapté à ' return') → logprob: -1.702597975730896
    3. '           ' → logprob: -7.0775980949401855
    4. ' return' → logprob: -8.077597618103027
    5. '   ' → logprob: -11.077597618103027
    6. '
' → logprob: -11.952597618103027
    7. '	return' → logprob: -12.327597618103027
    8. '               ' → logprob: -13.577597618103027
    9. ':return' → logprob: -14.077597618103027
    10. '{return' → logprob: -15.077597618103027

Token 1029: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.493430894101039e-05
    2. ' False' → logprob: -9.500075340270996
    3. '   ' → logprob: -18.75007438659668
    4. '(False' → logprob: -21.50007438659668
    5. 'F' → logprob: -21.75007438659668
    6. 'True' → logprob: -21.87507438659668
    7. 'false' → logprob: -22.00007438659668
    8. '    ' → logprob: -22.25007438659668
    9. '
' → logprob: -22.62507438659668
    10. '0' → logprob: -24.00007438659668

Token 1030: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002146226615877822
    2. '
' → logprob: -9.125214576721191
    3. '   ' → logprob: -9.375214576721191
    4. '<|end|>' → logprob: -11.000214576721191
    5. '	' → logprob: -13.750214576721191
    6. '      ' → logprob: -13.875214576721191
    7. '           ' → logprob: -14.500214576721191
    8. '    
' → logprob: -15.125214576721191
    9. '        
' → logprob: -15.375214576721191
    10. '	   ' → logprob: -15.500214576721191

Token 1031: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032164494041353464
    2. '   ' → logprob: -5.75321626663208
    3. 'if' → logprob: -11.253216743469238
    4. '```' → logprob: -11.753216743469238
    5. '
' → logprob: -12.128216743469238
    6. '           ' → logprob: -12.253216743469238
    7. '    ' → logprob: -13.378216743469238
    8. ' if' → logprob: -13.503216743469238
    9. '      ' → logprob: -13.753216743469238
    10. '	' → logprob: -13.878216743469238

Token 1032: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6118962168693542
    2. 'if' (adapté à ' if') → logprob: -0.8618962168693542
    3. '   ' → logprob: -3.361896276473999
    4. ' if' → logprob: -7.36189603805542
    5. 'return' → logprob: -11.611896514892578
    6. '	if' → logprob: -13.236896514892578
    7. '     ' → logprob: -14.361896514892578
    8. '      ' → logprob: -14.361896514892578
    9. '           ' → logprob: -14.611896514892578
    10. '```' → logprob: -15.111896514892578

Token 1033: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001719446387141943
    2. ' b' → logprob: -6.3767194747924805
    3. '   ' → logprob: -11.00171947479248
    4. '	b' → logprob: -15.37671947479248
    5. '       ' → logprob: -16.126718521118164
    6. ' ' → logprob: -16.126718521118164
    7. '    ' → logprob: -16.626718521118164
    8. '  ' → logprob: -17.126718521118164
    9. ' ' → logprob: -17.626718521118164
    10. '           ' → logprob: -18.251718521118164

Token 1034: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.00034511767444200814
    2. 'digits' → logprob: -8.000345230102539
    3. 'Digits' → logprob: -12.750345230102539
    4. 'b' → logprob: -12.875345230102539
    5. 'igits' → logprob: -13.500345230102539
    6. '[' → logprob: -14.375345230102539
    7. '```' → logprob: -14.625345230102539
    8. 'd' → logprob: -14.875345230102539
    9. '_d' → logprob: -15.125345230102539
    10. '_letters' → logprob: -15.500345230102539

Token 1035: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.306760805164231e-05
    2. '   ' → logprob: -12.25001335144043
    3. '[' → logprob: -12.62501335144043
    4. '       ' → logprob: -12.62501335144043
    5. '][-' → logprob: -15.00001335144043
    6. '>' → logprob: -15.25001335144043
    7. '==' → logprob: -15.37501335144043
    8. '#' → logprob: -16.00001335144043
    9. '[::-' → logprob: -16.12501335144043
    10. '```' → logprob: -16.12501335144043

Token 1036: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ']' → logprob: -14.125001907348633
    3. ' ' → logprob: -14.375001907348633
    4. '0' → logprob: -15.500001907348633
    5. '   ' → logprob: -17.375001907348633
    6. ':' → logprob: -18.062501907348633
    7. ']==' → logprob: -18.312501907348633
    8. '=' → logprob: -18.812501907348633
    9. '}' → logprob: -18.875001907348633
    10. ')' → logprob: -18.937501907348633

Token 1037: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8032196760177612
    2. ' ==' → logprob: -0.8032196760177612
    3. ']' → logprob: -2.553219795227051
    4. ']==' → logprob: -3.803219795227051
    5. ')' → logprob: -5.803219795227051
    6. ')==' → logprob: -6.928219795227051
    7. '   ' → logprob: -10.67821979522705
    8. '()==' → logprob: -10.67821979522705
    9. '']==' → logprob: -11.05321979522705
    10. '}' → logprob: -11.80321979522705

Token 1038: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20156966149806976
    2. ' ==' → logprob: -1.701569676399231
    3. '0' → logprob: -9.326569557189941
    4. ')==' → logprob: -10.701569557189941
    5. ']==' → logprob: -10.951569557189941
    6. ' ' → logprob: -11.326569557189941
    7. '()==' → logprob: -12.076569557189941
    8. '   ' → logprob: -12.451569557189941
    9. '=' → logprob: -12.826569557189941
    10. ')' → logprob: -13.701569557189941

Token 1039: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002619318547658622
    2. ' ' → logprob: -8.250262260437012
    3. '   ' → logprob: -14.750262260437012
    4. 'zero' → logprob: -17.062761306762695
    5. '۰' → logprob: -17.125261306762695
    6. '=' → logprob: -17.125261306762695
    7. '```' → logprob: -17.937761306762695
    8. '  ' → logprob: -18.062761306762695
    9. '00' → logprob: -18.500261306762695
    10. ')' → logprob: -18.500261306762695

Token 1040: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.750009536743164
    4. '=' → logprob: -18.375009536743164
    5. '۰' → logprob: -19.375009536743164
    6. '<|end|>' → logprob: -19.375009536743164
    7. 'def' → logprob: -19.562509536743164
    8. '
' → logprob: -19.687509536743164
    9. 'zero' → logprob: -19.687509536743164
    10. '```' → logprob: -19.750009536743164

Token 1041: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16622932255268097
    2. ':
' → logprob: -1.9162293672561646
    3. ':' → logprob: -5.291229248046875
    4. '           ' → logprob: -7.541229248046875
    5. ':return' → logprob: -8.416229248046875
    6. '   ' → logprob: -9.041229248046875
    7. '):
' → logprob: -9.666229248046875
    8. '	' → logprob: -12.541229248046875
    9. '      ' → logprob: -13.166229248046875
    10. 'return' → logprob: -13.666229248046875

Token 1042: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020868144929409027
    2. '           ' → logprob: -3.8958680629730225
    3. ':' → logprob: -8.770868301391602
    4. ':
' → logprob: -8.895868301391602
    5. ':return' → logprob: -11.395868301391602
    6. '   ' → logprob: -11.520868301391602
    7. '	       ' → logprob: -12.645868301391602
    8. 'return' → logprob: -12.770868301391602
    9. '               ' → logprob: -13.270868301391602
    10. '	' → logprob: -14.145868301391602

Token 1043: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3198027014732361
    2. 'return' (adapté à ' return') → logprob: -1.3198027610778809
    3. ' return' → logprob: -5.069802761077881
    4. '           ' → logprob: -9.069802284240723
    5. '   ' → logprob: -9.194802284240723
    6. '	return' → logprob: -11.694802284240723
    7. ':return' → logprob: -11.694802284240723
    8. '               ' → logprob: -13.944802284240723
    9. '{return' → logprob: -14.819802284240723
    10. '      ' → logprob: -14.944802284240723

Token 1044: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0002613358374219388
    2. ' False' → logprob: -8.250261306762695
    3. 'True' → logprob: -18.625261306762695
    4. '(False' → logprob: -19.500261306762695
    5. '   ' → logprob: -20.250261306762695
    6. '=False' → logprob: -21.375261306762695
    7. 'F' → logprob: -23.250261306762695
    8. '.False' → logprob: -24.375261306762695
    9. '_false' → logprob: -24.500261306762695
    10. '
' → logprob: -24.750261306762695

Token 1045: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0087887616828084
    2. '   ' → logprob: -4.758788585662842
    3. ')' → logprob: -9.7587890625
    4. '	' → logprob: -10.2587890625
    5. '<|end|>' → logprob: -10.5087890625
    6. 'return' → logprob: -11.1337890625
    7. '	return' → logprob: -11.2587890625
    8. '           ' → logprob: -11.7587890625
    9. '
' → logprob: -12.8837890625
    10. ' return' → logprob: -13.2587890625

Token 1046: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000363590574124828
    2. '   ' → logprob: -8.00036334991455
    3. '	' → logprob: -10.62536334991455
    4. '	   ' → logprob: -13.12536334991455
    5. '<|end|>' → logprob: -14.25036334991455
    6. '	return' → logprob: -15.00036334991455
    7. '           ' → logprob: -15.25036334991455
    8. 'return' → logprob: -15.37536334991455
    9. '
' → logprob: -15.50036334991455
    10. ')' → logprob: -17.125364303588867

Token 1047: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002561745699495077
    2. '   ' → logprob: -6.002561569213867
    3. 'return' (adapté à ' return') → logprob: -9.627561569213867
    4. '	' → logprob: -11.752561569213867
    5. '           ' → logprob: -12.127561569213867
    6. '	   ' → logprob: -12.627561569213867
    7. '
' → logprob: -13.877561569213867
    8. ' return' → logprob: -14.127561569213867
    9. '	return' → logprob: -14.627561569213867
    10. '    ' → logprob: -14.627561569213867

Token 1048: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00417100265622139
    2. ' True' → logprob: -5.504170894622803
    3. 'all' → logprob: -10.004171371459961
    4. 'False' → logprob: -10.129171371459961
    5. 'len' → logprob: -12.129171371459961
    6. ' all' → logprob: -13.754171371459961
    7. 'b' → logprob: -14.629171371459961
    8. '   ' → logprob: -15.379171371459961
    9. '(True' → logprob: -15.754171371459961
    10. 'bool' → logprob: -16.75417137145996

Token 1049: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5025633573532104
    2. '<|end|>' → logprob: -1.7525633573532104
    3. '    
' → logprob: -2.2525634765625
    4. '
' → logprob: -2.2525634765625
    5. 'def' → logprob: -5.0025634765625
    6. '<|end|>' → logprob: -6.1275634765625
    7. '  
' → logprob: -6.7525634765625
    8. ' 
' → logprob: -8.0025634765625
    9. '	
' → logprob: -8.5025634765625
    10. '```' → logprob: -8.7525634765625

Token 1050: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2591864764690399
    2. 'def' → logprob: -1.5091865062713623
    3. '
' → logprob: -5.134186267852783
    4. '    
' → logprob: -6.884186267852783
    5. '```' → logprob: -8.509186744689941
    6. 'from' → logprob: -10.009186744689941
    7. 'import' → logprob: -10.509186744689941
    8. 'n' → logprob: -11.134186744689941
    9. ' def' → logprob: -11.634186744689941
    10. 'indent' → logprob: -12.134186744689941

Token 1051: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4749995172023773
    2. '   ' → logprob: -0.9749995470046997
    3. '
' → logprob: -7.22499942779541
    4. 'from' → logprob: -9.22499942779541
    5. '    
' → logprob: -10.09999942779541
    6. 'import' → logprob: -10.34999942779541
    7. ' def' → logprob: -10.84999942779541
    8. '#' (adapté à ' #') → logprob: -14.09999942779541
    9. '```' → logprob: -14.47499942779541
    10. 'n' → logprob: -15.22499942779541

Token 1052: ' Back' (ID: 9793)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011100047267973423
    2. '   ' → logprob: -4.511099815368652
    3. 'import' → logprob: -10.636099815368652
    4. 'from' → logprob: -11.136099815368652
    5. 'indent' → logprob: -11.511099815368652
    6. ' def' → logprob: -13.511099815368652
    7. '    
' → logprob: -14.011099815368652
    8. '
' → logprob: -14.136099815368652
    9. 'IND' → logprob: -15.511099815368652
    10. 'n' → logprob: -15.636099815368652

Token 1053: 'tracking' (ID: 83383)
  Prédit: 'tracking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tracking' → logprob: -0.20507077872753143
    2. '   ' → logprob: -1.7050707340240479
    3. 'track' → logprob: -6.080070972442627
    4. 'def' → logprob: -6.830070972442627
    5. 't' → logprob: -9.580070495605469
    6. 'tracker' → logprob: -9.830070495605469
    7. '       ' → logprob: -10.080070495605469
    8. '\t' → logprob: -10.955070495605469
    9. 'tracked' → logprob: -10.955070495605469
    10. '_tracking' → logprob: -10.955070495605469

Token 1054: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018509382382035255
    2. '   ' → logprob: -4.018509387969971
    3. '
' → logprob: -8.143508911132812
    4. ' def' → logprob: -9.893508911132812
    5. '    
' → logprob: -11.143508911132812
    6. '```' → logprob: -13.643508911132812
    7. 'import' → logprob: -14.393508911132812
    8. ':' → logprob: -14.768508911132812
    9. '       ' → logprob: -15.518508911132812
    10. 'indent' → logprob: -15.643508911132812

Token 1055: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.8006106615066528
    2. 'search' → logprob: -1.4256106615066528
    3. 'back' → logprob: -1.9256106615066528
    4. 'def' → logprob: -2.0506105422973633
    5. 'assign' → logprob: -4.675610542297363
    6. 'choose' → logprob: -4.675610542297363
    7. 'b' → logprob: -5.425610542297363
    8. ' back' → logprob: -5.550610542297363
    9. ' search' → logprob: -6.050610542297363
    10. 'dfs' → logprob: -6.175610542297363

Token 1056: ' best' (ID: 1636)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.26240310072898865
    2. 'def' → logprob: -1.512403130531311
    3. 'n' → logprob: -5.6374030113220215
    4. '   ' → logprob: -6.5124030113220215
    5. 'i' → logprob: -6.5124030113220215
    6. 'digits' → logprob: -7.0124030113220215
    7. 'best' → logprob: -7.0124030113220215
    8. '#' → logprob: -7.2624030113220215
    9. ' b' → logprob: -8.13740348815918
    10. 'pos' → logprob: -8.26240348815918

Token 1057: ' number' (ID: 2086)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00024287392443511635
    2. '   ' → logprob: -9.125243186950684
    3. 'digits' → logprob: -9.750243186950684
    4. ' def' → logprob: -9.875243186950684
    5. '_digits' → logprob: -11.125243186950684
    6. '
' → logprob: -12.125243186950684
    7. 'b' → logprob: -13.375243186950684
    8. 'from' → logprob: -13.625243186950684
    9. '```' → logprob: -15.125243186950684
    10. ' digits' → logprob: -15.500243186950684

Token 1058: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029617056250572205
    2. '   ' → logprob: -3.7796170711517334
    3. '
' → logprob: -5.154616832733154
    4. '    
' → logprob: -7.529616832733154
    5. ' def' → logprob: -10.654617309570312
    6. 'import' → logprob: -11.404617309570312
    7. 'from' → logprob: -12.654617309570312
    8. '        
' → logprob: -13.279617309570312
    9. '   
' → logprob: -14.279617309570312
    10. '  
' → logprob: -15.029617309570312

Token 1059: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3787215054035187
    2. 'def' → logprob: -1.3787214756011963
    3. '
' → logprob: -2.8787214756011963
    4. '    
' → logprob: -5.128721714019775
    5. ' def' → logprob: -7.378721714019775
    6. '```' → logprob: -8.878721237182617
    7. '(' → logprob: -9.503721237182617
    8. '        
' → logprob: -9.628721237182617
    9. ',' → logprob: -9.628721237182617
    10. '(
' → logprob: -10.003721237182617

Token 1060: ' from' (ID: 591)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3306015716807451e-05
    2. '   ' → logprob: -11.25001335144043
    3. ' def' → logprob: -15.75001335144043
    4. '
' → logprob: -15.87501335144043
    5. 'from' (adapté à ' from') → logprob: -16.87501335144043
    6. 'import' → logprob: -19.25001335144043
    7. '    
' → logprob: -20.00001335144043
    8. 'stack' → logprob: -20.62501335144043
    9. 'digits' → logprob: -21.37501335144043
    10. '	def' → logprob: -21.87501335144043

Token 1061: ' itertools' (ID: 103178)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.019050825387239456
    2. 'fun' → logprob: -4.269050598144531
    3. 'math' → logprob: -6.644050598144531
    4. 'it' → logprob: -6.644050598144531
    5. 'sys' → logprob: -7.019050598144531
    6. 'heap' → logprob: -7.394050598144531
    7. 'copy' → logprob: -8.019050598144531
    8. 'typing' → logprob: -8.394050598144531
    9. 'bis' → logprob: -9.144050598144531
    10. 'queue' → logprob: -10.019050598144531

Token 1062: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.03653009608387947
    2. ' import' → logprob: -3.536530017852783
    3. 'ertools' → logprob: -5.786530017852783
    4. '_import' → logprob: -6.911530017852783
    5. '	import' → logprob: -7.286530017852783
    6. '<|end|>' → logprob: -7.411530017852783
    7. '```' → logprob: -8.536530494689941
    8. 'ab' → logprob: -9.724030494689941
    9. ')' → logprob: -9.786530494689941
    10. ':' → logprob: -9.786530494689941

Token 1063: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -1.9361264946837764e-07
    2. ' product' → logprob: -15.875
    3. '.product' → logprob: -17.875
    4. 'per' → logprob: -18.0
    5. '(product' → logprob: -18.875
    6. 'Product' → logprob: -19.375
    7. '-product' → logprob: -20.375
    8. '_product' → logprob: -20.5
    9. '```' → logprob: -20.875
    10. 'com' → logprob: -21.625

Token 1064: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07719047367572784
    2. '   ' → logprob: -3.702190399169922
    3. '
' → logprob: -3.952190399169922
    4. 'for' → logprob: -4.077190399169922
    5. 'digits' → logprob: -4.452190399169922
    6. '```' → logprob: -6.577190399169922
    7. ' for' → logprob: -8.952190399169922
    8. '    
' → logprob: -9.577190399169922
    9. ' def' → logprob: -10.327190399169922
    10. 'import' → logprob: -10.452190399169922

Token 1065: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22788728773593903
    2. 'def' → logprob: -1.8528872728347778
    3. '
' → logprob: -3.3528873920440674
    4. '```' → logprob: -5.102887153625488
    5. '    
' → logprob: -5.477887153625488
    6. 'digits' → logprob: -7.102887153625488
    7. 'for' → logprob: -7.727887153625488
    8. '``' → logprob: -9.352887153625488
    9. ',' → logprob: -9.727887153625488
    10. 'import' → logprob: -10.102887153625488

Token 1066: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22075015306472778
    2. 'digits' → logprob: -2.220750093460083
    3. 'for' → logprob: -2.470750093460083
    4. '   ' → logprob: -5.595750331878662
    5. 'stack' → logprob: -6.845750331878662
    6. '#' (adapté à ' #') → logprob: -9.220749855041504
    7. 'possible' → logprob: -10.470749855041504
    8. '
' → logprob: -10.470749855041504
    9. 'max' → logprob: -10.595749855041504
    10. 'digit' → logprob: -10.720749855041504

Token 1067: ' Because' (ID: 13602)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1724567711353302
    2. 'for' → logprob: -2.172456741333008
    3. 'digits' → logprob: -3.172456741333008
    4. '   ' → logprob: -6.672456741333008
    5. 'stack' → logprob: -6.797456741333008
    6. 'max' → logprob: -9.547456741333008
    7. 'digit' → logprob: -9.922456741333008
    8. 'queue' → logprob: -10.172456741333008
    9. '#' → logprob: -11.047456741333008
    10. 'possible' → logprob: -11.422456741333008

Token 1068: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3495096266269684
    2. ' n' → logprob: -1.224509596824646
    3. ' True' → logprob: -8.224509239196777
    4. ' best' → logprob: -8.974509239196777
    5. 'True' → logprob: -8.974509239196777
    6. 'b' → logprob: -9.224509239196777
    7. 'best' → logprob: -9.474509239196777
    8. '#' → logprob: -9.599509239196777
    9. ' len' → logprob: -10.349509239196777
    10. ' for' → logprob: -10.349509239196777

Token 1069: '10' (ID: 702)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0027812200132757425
    2. 'best' → logprob: -7.252781391143799
    3. '10' → logprob: -7.752781391143799
    4. 'b' → logprob: -7.877781391143799
    5. 'True' → logprob: -8.37778091430664
    6. '#' → logprob: -8.50278091430664
    7. ' n' → logprob: -8.50278091430664
    8. 'range' → logprob: -8.62778091430664
    9. 'all' → logprob: -9.00278091430664
    10. '9' → logprob: -9.12778091430664

Token 1070: '^' (ID: 61)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9960985779762268
    2. ':' → logprob: -0.9960985779762268
    3. '):' → logprob: -2.496098518371582
    4. '**' → logprob: -2.746098518371582
    5. '
' → logprob: -3.746098518371582
    6. '=' → logprob: -3.996098518371582
    7. '0' → logprob: -4.246098518371582
    8. ' ' → logprob: -4.746098518371582
    9. 'for' → logprob: -4.996098518371582
    10. ',' → logprob: -5.246098518371582

Token 1071: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2772532105445862
    2. '9' → logprob: -1.9022531509399414
    3. '10' → logprob: -2.6522531509399414
    4. '0' → logprob: -4.902253150939941
    5. '**' → logprob: -5.777253150939941
    6. ' n' → logprob: -6.027253150939941
    7. '(' → logprob: -6.277253150939941
    8. '(n' → logprob: -6.277253150939941
    9. ' ' → logprob: -6.777253150939941
    10. 'b' → logprob: -6.902253150939941

Token 1072: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.986241340637207
    2. 'for' → logprob: -1.486241340637207
    3. '
' → logprob: -2.236241340637207
    4. '[' → logprob: -2.736241340637207
    5. '=' → logprob: -3.361241340637207
    6. ':' → logprob: -3.861241340637207
    7. '_' → logprob: -3.861241340637207
    8. ' for' → logprob: -3.861241340637207
    9. '   ' → logprob: -4.236241340637207
    10. '...' → logprob: -4.361241340637207

Token 1073: ' too' (ID: 3101)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4347820281982422
    2. 'too' → logprob: -1.4347820281982422
    3. '1' → logprob: -1.5597820281982422
    4. ' ' → logprob: -2.184782028198242
    5. '10' → logprob: -3.059782028198242
    6. ' too' → logprob: -3.184782028198242
    7. 'n' → logprob: -3.434782028198242
    8. '9' → logprob: -3.559782028198242
    9. '   ' → logprob: -5.434782028198242
    10. ')' → logprob: -5.684782028198242

Token 1074: ' big' (ID: 3464)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.12353380024433136
    2. ' large' → logprob: -2.2485337257385254
    3. '#' → logprob: -5.123533725738525
    4. 'big' → logprob: -6.623533725738525
    5. '
' → logprob: -7.623533725738525
    6. '_' → logprob: -7.748533725738525
    7. '9' → logprob: -7.998533725738525
    8. '_large' → logprob: -8.123534202575684
    9. '   ' → logprob: -8.373534202575684
    10. '0' → logprob: -8.373534202575684

Token 1075: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3628731071949005
    2. 'for' → logprob: -1.9878730773925781
    3. ' for' → logprob: -2.237873077392578
    4. '   ' → logprob: -3.112873077392578
    5. ',
' → logprob: -4.987873077392578
    6. '#' → logprob: -5.862873077392578
    7. ')' → logprob: -5.862873077392578
    8. '
' → logprob: -7.362873077392578
    9. ' ,' → logprob: -7.612873077392578
    10. 'digits' → logprob: -7.737873077392578

Token 1076: ' try' (ID: 2075)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5870569348335266
    2. '   ' → logprob: -1.7120568752288818
    3. ' for' → logprob: -1.8370568752288818
    4. '#' → logprob: -2.337056875228882
    5. 'def' → logprob: -4.962057113647461
    6. ' #' → logprob: -8.587057113647461
    7. 'continue' → logprob: -8.962057113647461
    8. ' we' → logprob: -9.462057113647461
    9. '
' → logprob: -9.587057113647461
    10. 'we' → logprob: -10.212057113647461

Token 1077: ' to' (ID: 316)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.2274689674377441
    2. 'digits' → logprob: -1.3524689674377441
    3. 'for' → logprob: -1.4774689674377441
    4. '[' → logprob: -2.102468967437744
    5. 'def' → logprob: -2.727468967437744
    6. ' range' → logprob: -5.102468967437744
    7. '   ' → logprob: -5.227468967437744
    8. '
' → logprob: -5.852468967437744
    9. ' for' → logprob: -5.852468967437744
    10. ' [' → logprob: -6.102468967437744

Token 1078: ' only' (ID: 1606)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2835205793380737
    2. 'pr' → logprob: -1.6585205793380737
    3. 'import' → logprob: -1.9085205793380737
    4. 'from' → logprob: -2.2835206985473633
    5. 'limit' → logprob: -3.0335206985473633
    6. 'continue' → logprob: -3.2835206985473633
    7. 'range' → logprob: -3.7835206985473633
    8. 'n' → logprob: -3.7835206985473633
    9. 'try' → logprob: -3.9085206985473633
    10. 'min' → logprob: -4.033520698547363

Token 1079: ' check' (ID: 2371)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.3986625075340271
    2. 'generate' → logprob: -1.7736625671386719
    3. 'expl' → logprob: -3.398662567138672
    4. 'import' → logprob: -3.898662567138672
    5. 'go' → logprob: -4.148662567138672
    6. 'choose' → logprob: -4.273662567138672
    7. 'consider' → logprob: -4.398662567138672
    8. ' try' → logprob: -4.398662567138672
    9. 'iterate' → logprob: -4.773662567138672
    10. 'use' → logprob: -4.898662567138672

Token 1080: ' at' (ID: 540)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.8061177730560303
    2. '[' → logprob: -1.0561177730560303
    3. '[(' → logprob: -2.3061177730560303
    4. 'range' → logprob: -3.5561177730560303
    5. 'for' → logprob: -4.306118011474609
    6. '   ' → logprob: -4.806118011474609
    7. 'all' → logprob: -4.931118011474609
    8. 'b' → logprob: -5.056118011474609
    9. '#' → logprob: -5.306118011474609
    10. 'ranges' → logprob: -5.431118011474609

Token 1081: ' most' (ID: 1645)
  Prédit: 'most'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.07197163999080658
    2. 'least' → logprob: -3.3219716548919678
    3. 'each' → logprob: -4.446971416473389
    4. 'n' → logprob: -4.446971416473389
    5. ' most' → logprob: -4.946971416473389
    6. 'depth' → logprob: -7.446971416473389
    7. 'def' → logprob: -7.571971416473389
    8. ' least' → logprob: -7.946971416473389
    9. 'first' → logprob: -8.571971893310547
    10. 'b' → logprob: -9.321971893310547

Token 1082: ' a' (ID: 261)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.2919301390647888
    2. '10' → logprob: -2.4169301986694336
    3. '9' → logprob: -2.5419301986694336
    4. '3' → logprob: -3.4169301986694336
    5. '1' → logprob: -4.291930198669434
    6. '5' → logprob: -4.541930198669434
    7. 'n' → logprob: -4.791930198669434
    8. ' ' → logprob: -4.916930198669434
    9. '2' → logprob: -5.916930198669434
    10. '20' → logprob: -6.541930198669434

Token 1083: ' subset' (ID: 58845)
  Prédit: 'few'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'few' → logprob: -0.07380116730928421
    2. 'll' → logprob: -3.323801279067993
    3. ' few' → logprob: -3.573801279067993
    4. 'l' → logprob: -6.448801040649414
    5. 'limited' → logprob: -6.698801040649414
    6. 'subset' → logprob: -7.323801040649414
    7. '100' → logprob: -7.573801040649414
    8. ' subset' → logprob: -7.573801040649414
    9. 'b' → logprob: -7.698801040649414
    10. 'certain' → logprob: -8.073801040649414

Token 1084: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08905681222677231
    2. 'for' → logprob: -3.2140567302703857
    3. ',' → logprob: -4.714056968688965
    4. ' for' → logprob: -4.839056968688965
    5. ':' → logprob: -5.089056968688965
    6. '(' → logprob: -5.589056968688965
    7. 'def' → logprob: -6.339056968688965
    8. ' =' → logprob: -6.339056968688965
    9. '=' → logprob: -6.464056968688965
    10. '(
' → logprob: -6.464056968688965

Token 1085: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002474231878295541
    2. ' for' → logprob: -6.502474308013916
    3. 'for' → logprob: -8.127473831176758
    4. '
' → logprob: -8.502473831176758
    5. '    
' → logprob: -8.752473831176758
    6. 'digits' → logprob: -9.127473831176758
    7. '```' → logprob: -9.377473831176758
    8. ' digits' → logprob: -10.127473831176758
    9. '#' → logprob: -11.252473831176758
    10. 'def' → logprob: -11.377473831176758

Token 1086: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06026262417435646
    2. 'for' → logprob: -3.435262680053711
    3. ' for' → logprob: -4.310262680053711
    4. 'digits' → logprob: -5.310262680053711
    5. '#' (adapté à ' #') → logprob: -5.685262680053711
    6. '
' → logprob: -6.435262680053711
    7. ' digits' → logprob: -6.810262680053711
    8. 'def' → logprob: -7.310262680053711
    9. 'max' → logprob: -7.560262680053711
    10. ' #' → logprob: -8.810262680053711

Token 1087: ' We'll' (ID: 46830)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5082845687866211
    2. 'digits' → logprob: -1.383284568786621
    3. '   ' → logprob: -2.758284568786621
    4. 'def' → logprob: -2.883284568786621
    5. 'max' → logprob: -4.133284568786621
    6. '#' → logprob: -5.258284568786621
    7. ' for' → logprob: -5.883284568786621
    8. 'stack' → logprob: -6.508284568786621
    9. ' digits' → logprob: -7.133284568786621
    10. 'c' → logprob: -8.008284568786621

Token 1088: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.25954949855804443
    2. ' try' → logprob: -1.6345494985580444
    3. 'for' → logprob: -4.759549617767334
    4. ' for' → logprob: -5.009549617767334
    5. 'limit' → logprob: -5.384549617767334
    6. 'attempt' → logprob: -6.134549617767334
    7. 'def' → logprob: -6.384549617767334
    8. 'implement' → logprob: -6.509549617767334
    9. '   ' → logprob: -7.009549617767334
    10. 'import' → logprob: -7.134549617767334

Token 1089: ' all' (ID: 722)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.6031810641288757
    2. 'for' → logprob: -1.4781811237335205
    3. 'range' → logprob: -2.4781811237335205
    4. ' for' → logprob: -3.6031811237335205
    5. ' digits' → logprob: -3.6031811237335205
    6. '   ' → logprob: -3.9781811237335205
    7. ' range' → logprob: -3.9781811237335205
    8. '[' → logprob: -4.478180885314941
    9. 'd' → logprob: -4.603180885314941
    10. 'def' → logprob: -4.853180885314941

Token 1090: ' digit' (ID: 19181)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.12126078456640244
    2. '(' → logprob: -2.87126088142395
    3. ' digits' → logprob: -3.99626088142395
    4. 'd' → logprob: -4.496260643005371
    5. 'range' → logprob: -5.496260643005371
    6. '[' → logprob: -5.496260643005371
    7. 'b' → logprob: -5.746260643005371
    8. 'for' → logprob: -5.871260643005371
    9. '(b' → logprob: -5.996260643005371
    10. '(d' → logprob: -6.371260643005371

Token 1091: ' combos' (ID: 150243)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5660688877105713
    2. ' s' → logprob: -1.3160688877105713
    3. ' combinations' → logprob: -2.0660688877105713
    4. '_s' → logprob: -4.816068649291992
    5. '_' → logprob: -4.941068649291992
    6. 'com' → logprob: -5.316068649291992
    7. '_com' → logprob: -5.441068649291992
    8. '   ' → logprob: -6.191068649291992
    9. ' =' → logprob: -6.316068649291992
    10. ' ' → logprob: -6.566068649291992

Token 1092: ' with' (ID: 483)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5089166164398193
    2. '(' → logprob: -2.0089166164398193
    3. ' =' → logprob: -2.3839166164398193
    4. '   ' → logprob: -2.7589166164398193
    5. '=' → logprob: -3.0089166164398193
    6. '(range' → logprob: -4.383916854858398
    7. ',' → logprob: -4.508916854858398
    8. ' for' → logprob: -4.508916854858398
    9. '(n' → logprob: -4.633916854858398
    10. 'from' → logprob: -5.633916854858398

Token 1093: ' digits' (ID: 37806)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1135213375091553
    2. 'range' → logprob: -1.3635213375091553
    3. 'n' → logprob: -1.6135213375091553
    4. '9' → logprob: -2.3635213375091553
    5. 'product' → logprob: -3.3635213375091553
    6. '0' → logprob: -3.6135213375091553
    7. '(' → logprob: -3.7385213375091553
    8. 'digits' → logprob: -4.863521575927734
    9. 'all' → logprob: -5.363521575927734
    10. 'b' → logprob: -5.613521575927734

Token 1094: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.28306907415390015
    2. 'from' → logprob: -2.533069133758545
    3. 'for' → logprob: -3.033069133758545
    4. '=' → logprob: -3.533069133758545
    5. ' in' → logprob: -3.533069133758545
    6. ' =' → logprob: -4.158069133758545
    7. 'range' → logprob: -4.408069133758545
    8. '(range' → logprob: -5.033069133758545
    9. '(' → logprob: -5.283069133758545
    10. 'r' → logprob: -5.658069133758545

Token 1095: ' descending' (ID: 89489)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11926368623971939
    2. '[' → logprob: -2.2442636489868164
    3. 're' → logprob: -5.994263648986816
    4. '(' → logprob: -5.994263648986816
    5. '[(' → logprob: -7.494263648986816
    6. ' range' → logprob: -8.119263648986816
    7. '(range' → logprob: -8.244263648986816
    8. '[
' → logprob: -9.494263648986816
    9. '[[' → logprob: -9.869263648986816
    10. '9' → logprob: -9.994263648986816

Token 1096: ' order' (ID: 2569)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07917111366987228
    2. '(range' → logprob: -2.7041711807250977
    3. ' range' → logprob: -5.704171180725098
    4. '[' → logprob: -6.079171180725098
    5. '9' → logprob: -7.079171180725098
    6. ')' → logprob: -7.704171180725098
    7. '(' → logprob: -8.079171180725098
    8. 'digits' → logprob: -8.329171180725098
    9. 'ranges' → logprob: -8.329171180725098
    10. ']' → logprob: -8.829171180725098

Token 1097: ' to' (ID: 316)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.500131607055664
    2. 'for' → logprob: -1.500131607055664
    3. ' for' → logprob: -2.125131607055664
    4. '   ' → logprob: -2.250131607055664
    5. '(range' → logprob: -3.000131607055664
    6. ',' → logprob: -3.125131607055664
    7. ' =' → logprob: -3.250131607055664
    8. '[' → logprob: -3.750131607055664
    9. ' (' → logprob: -3.750131607055664
    10. 'range' → logprob: -3.875131607055664

Token 1098: ' get' (ID: 717)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.41154745221138
    2. 'try' → logprob: -1.9115474224090576
    3. 'assign' → logprob: -3.0365474224090576
    4. '[' → logprob: -3.0365474224090576
    5. ' range' → logprob: -3.9115474224090576
    6. '9' → logprob: -4.161547660827637
    7. '10' → logprob: -4.661547660827637
    8. 'check' → logprob: -4.786547660827637
    9. ' try' → logprob: -5.286547660827637
    10. 'b' → logprob: -5.411547660827637

Token 1099: ' maximum' (ID: 10562)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14579303562641144
    2. '[' → logprob: -2.1457929611206055
    3. '(' → logprob: -5.0207929611206055
    4. '9' → logprob: -5.3957929611206055
    5. ' range' → logprob: -5.3957929611206055
    6. '(range' → logprob: -6.8957929611206055
    7. 'digits' → logprob: -7.6457929611206055
    8. 'product' → logprob: -7.7707929611206055
    9. ' [' → logprob: -8.270792961120605
    10. 're' → logprob: -8.645792961120605

Token 1100: ':
' (ID: 734)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7507521510124207
    2. ' for' → logprob: -2.1257522106170654
    3. 'digits' → logprob: -2.2507522106170654
    4. 'range' → logprob: -2.5007522106170654
    5. '_digits' → logprob: -2.5007522106170654
    6. ' =' → logprob: -4.250751972198486
    7. '(range' → logprob: -4.250751972198486
    8. '_range' → logprob: -4.375751972198486
    9. '   ' → logprob: -4.375751972198486
    10. '=' → logprob: -4.625751972198486

Token 1101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05623864382505417
    2. ' for' → logprob: -3.9312386512756348
    3. ' digits' → logprob: -4.181238651275635
    4. 'digits' → logprob: -4.306238651275635
    5. 'for' → logprob: -5.681238651275635
    6. '```' → logprob: -6.931238651275635
    7. 'd' → logprob: -8.056238174438477
    8. 'def' → logprob: -8.056238174438477
    9. '
' → logprob: -8.181238174438477
    10. ' possible' → logprob: -8.556238174438477

Token 1102: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5860905647277832
    2. 'for' → logprob: -1.5860905647277832
    3. 'digits' → logprob: -1.7110905647277832
    4. ' for' → logprob: -3.211090564727783
    5. 'def' → logprob: -4.336090564727783
    6. ' digits' → logprob: -5.711090564727783
    7. '#' (adapté à ' #') → logprob: -8.211090087890625
    8. '
' → logprob: -8.336090087890625
    9. ' def' → logprob: -8.461090087890625
    10. 'possible' → logprob: -8.711090087890625

Token 1103: ' For' (ID: 2214)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.5944427251815796
    2. 'for' → logprob: -1.2194427251815796
    3. '   ' → logprob: -2.094442844390869
    4. ' for' → logprob: -3.969442844390869
    5. ' digits' → logprob: -4.969442844390869
    6. 'def' → logprob: -6.219442844390869
    7. 'b' → logprob: -8.219442367553711
    8. '#' → logprob: -8.219442367553711
    9. 'd' → logprob: -8.469442367553711
    10. 'possible' → logprob: -8.594442367553711

Token 1104: ' each' (ID: 2454)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -1.1988813877105713
    2. 'd' → logprob: -1.3238813877105713
    3. ' digits' → logprob: -1.9488813877105713
    4. 'b' → logprob: -2.6988813877105713
    5. ' d' → logprob: -2.6988813877105713
    6. 'i' → logprob: -2.9488813877105713
    7. ' b' → logprob: -3.1988813877105713
    8. ' i' → logprob: -4.073881149291992
    9. ' length' → logprob: -4.698881149291992
    10. 'n' → logprob: -5.073881149291992

Token 1105: ' pair' (ID: 10610)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.6460810899734497
    2. 'digit' → logprob: -1.0210810899734497
    3. 'd' → logprob: -2.64608097076416
    4. 'b' → logprob: -4.02108097076416
    5. ' digits' → logprob: -5.14608097076416
    6. 'prefix' → logprob: -5.77108097076416
    7. 'i' → logprob: -5.89608097076416
    8. ' digit' → logprob: -6.02108097076416
    9. 'pos' → logprob: -6.14608097076416
    10. 'first' → logprob: -6.52108097076416

Token 1106: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2271196842193604
    2. '   ' → logprob: -1.7271196842193604
    3. ':' → logprob: -2.4771196842193604
    4. ' in' → logprob: -2.4771196842193604
    5. ' =' → logprob: -2.7271196842193604
    6. 'in' → logprob: -2.9771196842193604
    7. ' for' → logprob: -3.2271196842193604
    8. '_digits' → logprob: -3.3521196842193604
    9. 'd' → logprob: -3.6021196842193604
    10. ',' → logprob: -3.7271196842193604

Token 1107: ' try' (ID: 2075)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7819222807884216
    2. 'for' → logprob: -0.7819222807884216
    3. 'digits' → logprob: -2.9069223403930664
    4. ' digits' → logprob: -3.7819223403930664
    5. '   ' → logprob: -5.531922340393066
    6. 'd' → logprob: -6.406922340393066
    7. ' possible' → logprob: -7.281922340393066
    8. ' d' → logprob: -8.156922340393066
    9. 'digit' → logprob: -8.156922340393066
    10. 'possible' → logprob: -8.906922340393066

Token 1108: ' digits' (ID: 37806)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.024069180712103844
    2. 'digit' → logprob: -4.024069309234619
    3. 'range' → logprob: -6.024069309234619
    4. '9' → logprob: -6.774069309234619
    5. ' d' → logprob: -7.149069309234619
    6. 'for' → logprob: -7.524069309234619
    7. 'digits' → logprob: -7.524069309234619
    8. '   ' → logprob: -8.274068832397461
    9. '[' → logprob: -10.024068832397461
    10. ' digit' → logprob: -10.149068832397461

Token 1109: ' ' (ID: 220)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.5352544784545898
    2. ' in' → logprob: -1.5352544784545898
    3. 'from' → logprob: -1.6602544784545898
    4. '   ' → logprob: -2.03525447845459
    5. 'for' → logprob: -2.66025447845459
    6. ' =' → logprob: -3.28525447845459
    7. '=' → logprob: -3.66025447845459
    8. 'd' → logprob: -4.03525447845459
    9. '[' → logprob: -4.03525447845459
    10. '(' → logprob: -4.78525447845459

Token 1110: '9' (ID: 24)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10844849795103073
    2. 'from' → logprob: -2.6084485054016113
    3. '9' → logprob: -4.483448505401611
    4. ' in' → logprob: -4.983448505401611
    5. 'for' → logprob: -5.108448505401611
    6. 'range' → logprob: -6.108448505401611
    7. '(' → logprob: -7.108448505401611
    8. 'd' → logprob: -7.608448505401611
    9. '(range' → logprob: -7.983448505401611
    10. '=' → logprob: -8.108448028564453

Token 1111: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027421588078141212
    2. '   ' → logprob: -5.527421474456787
    3. '
' → logprob: -5.527421474456787
    4. ' down' → logprob: -5.902421474456787
    5. ',-' → logprob: -6.027421474456787
    6. ',
' → logprob: -6.277421474456787
    7. 'for' → logprob: -6.402421474456787
    8. ' ,' → logprob: -6.402421474456787
    9. 'to' → logprob: -6.402421474456787
    10. '-' → logprob: -6.777421474456787

Token 1112: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002989968634210527
    2. ' ' → logprob: -8.125299453735352
    3. '
' → logprob: -13.625299453735352
    4. '-' → logprob: -14.000299453735352
    5. '9' → logprob: -15.375299453735352
    6. '```' → logprob: -15.500299453735352
    7. '1' → logprob: -16.18779945373535
    8. ' -' → logprob: -16.50029945373535
    9. '   ' → logprob: -16.87529945373535
    10. '۰' → logprob: -17.31279945373535

Token 1113: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.599403423024341e-05
    2. '9' → logprob: -10.000065803527832
    3. ' ' → logprob: -11.250065803527832
    4. '1' → logprob: -12.000065803527832
    5. 'b' → logprob: -14.750065803527832
    6. 'd' → logprob: -15.375065803527832
    7. '-' → logprob: -15.937565803527832
    8. '   ' → logprob: -16.43756675720215
    9. '```' → logprob: -16.62506675720215
    10. '2' → logprob: -17.12506675720215

Token 1114: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6356744170188904
    2. 'def' → logprob: -1.0106744766235352
    3. 'digits' → logprob: -3.385674476623535
    4. 'for' → logprob: -3.510674476623535
    5. ' for' → logprob: -3.885674476623535
    6. ':' → logprob: -5.010674476623535
    7. ' def' → logprob: -5.510674476623535
    8. ' digits' → logprob: -6.135674476623535
    9. 'from' → logprob: -6.635674476623535
    10. '9' → logprob: -7.010674476623535

Token 1115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1389184147119522
    2. ':' → logprob: -2.138918399810791
    3. 'for' → logprob: -5.388918399810791
    4. 'def' → logprob: -5.763918399810791
    5. ',' → logprob: -6.513918399810791
    6. ':
' → logprob: -6.513918399810791
    7. ' for' → logprob: -7.263918399810791
    8. '):' → logprob: -9.01391887664795
    9. '    
' → logprob: -9.51391887664795
    10. '```' → logprob: -9.63891887664795

Token 1116: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007384651806205511
    2. 'def' → logprob: -5.132384777069092
    3. '
' → logprob: -7.007384777069092
    4. 'for' → logprob: -8.632384300231934
    5. '    
' → logprob: -8.882384300231934
    6. ' for' → logprob: -9.757384300231934
    7. ',' → logprob: -9.882384300231934
    8. ' def' → logprob: -10.382384300231934
    9. 'digits' → logprob: -10.507384300231934
    10. ':' → logprob: -10.632384300231934

Token 1117: ' We'll' (ID: 46830)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.419624000787735
    2. '   ' → logprob: -1.2946239709854126
    3. 'for' → logprob: -2.794624090194702
    4. 'digits' → logprob: -5.669623851776123
    5. ' for' → logprob: -5.919623851776123
    6. 'stack' → logprob: -7.794623851776123
    7. ' def' → logprob: -7.794623851776123
    8. '
' → logprob: -7.794623851776123
    9. ':' → logprob: -10.544624328613281
    10. '    
' → logprob: -10.794624328613281

Token 1118: ' limit' (ID: 5967)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.8960019946098328
    2. 'import' → logprob: -1.2710020542144775
    3. ' import' → logprob: -2.1460020542144775
    4. 'def' → logprob: -2.5210020542144775
    5. 'try' → logprob: -2.8960020542144775
    6. ' def' → logprob: -4.021001815795898
    7. '   ' → logprob: -4.646001815795898
    8. ' continue' → logprob: -5.021001815795898
    9. 'continue' → logprob: -5.271001815795898
    10. ' use' → logprob: -5.396001815795898

Token 1119: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4841802716255188
    2. 'the' → logprob: -1.859180212020874
    3. 'depth' → logprob: -2.359180212020874
    4. ' depth' → logprob: -2.859180212020874
    5. 'for' → logprob: -4.484180450439453
    6. '   ' → logprob: -4.484180450439453
    7. 'n' → logprob: -4.859180450439453
    8. 'def' → logprob: -5.109180450439453
    9. ' for' → logprob: -5.234180450439453
    10. ' n' → logprob: -5.359180450439453

Token 1120: ' number' (ID: 2086)
  Prédit: ' depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' depth' → logprob: -0.6730201244354248
    2. 'depth' → logprob: -0.9230201244354248
    3. ' search' → logprob: -4.298020362854004
    4. 'n' → logprob: -4.423020362854004
    5. '10' → logprob: -4.423020362854004
    6. 'def' → logprob: -4.548020362854004
    7. ' recursion' → logprob: -4.548020362854004
    8. ' n' → logprob: -5.048020362854004
    9. ' def' → logprob: -5.173020362854004
    10. 'max' → logprob: -5.423020362854004

Token 1121: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13779906928539276
    2. 's' → logprob: -2.887799024581909
    3. '   ' → logprob: -3.762799024581909
    4. '_of' → logprob: -4.637799263000488
    5. ' _' → logprob: -4.762799263000488
    6. ' =' → logprob: -4.762799263000488
    7. ' of' → logprob: -5.387799263000488
    8. '=' → logprob: -6.137799263000488
    9. ')' → logprob: -6.387799263000488
    10. 'of' → logprob: -6.512799263000488

Token 1122: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0439761877059937
    2. 'com' → logprob: -1.5439761877059937
    3. 'pairs' → logprob: -1.9189761877059937
    4. 'states' → logprob: -2.668976306915283
    5. 'attempt' → logprob: -3.168976306915283
    6. 'digits' → logprob: -3.418976306915283
    7. ' candidates' → logprob: -3.543976306915283
    8. ' attempts' → logprob: -4.043976306915283
    9. ' pairs' → logprob: -4.293976306915283
    10. ' states' → logprob: -4.543976306915283

Token 1123: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32074233889579773
    2. 'def' → logprob: -1.6957423686981201
    3. 'for' → logprob: -3.44574236869812
    4. ' for' → logprob: -3.57074236869812
    5. 'digits' → logprob: -4.195742130279541
    6. ':' → logprob: -4.695742130279541
    7. ':
' → logprob: -6.445742130279541
    8. ' def' → logprob: -6.820742130279541
    9. '
' → logprob: -7.195742130279541
    10. '    
' → logprob: -7.320742130279541

Token 1124: ' check' (ID: 2371)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.015214377082884312
    2. '10' → logprob: -4.390214443206787
    3. '500' → logprob: -6.390214443206787
    4. ' ' → logprob: -7.765214443206787
    5. '200' → logprob: -7.890214443206787
    6. '50' → logprob: -9.515213966369629
    7. '1' → logprob: -9.890213966369629
    8. '300' → logprob: -10.390213966369629
    9. '5' → logprob: -11.015213966369629
    10. '   ' → logprob: -11.265213966369629

Token 1125: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39233124256134033
    2. ':' → logprob: -1.5173312425613403
    3. 'def' → logprob: -2.892331123352051
    4. 'digits' → logprob: -3.767331123352051
    5. 'for' → logprob: -4.517331123352051
    6. ':
' → logprob: -5.642331123352051
    7. ' :' → logprob: -6.017331123352051
    8. ' for' → logprob: -6.267331123352051
    9. '#' → logprob: -7.267331123352051
    10. '):
' → logprob: -7.392331123352051

Token 1126: ' pruning' (ID: 135775)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.8025252819061279
    2. '10' → logprob: -1.177525281906128
    3. 'import' → logprob: -2.302525281906128
    4. '1' → logprob: -2.927525281906128
    5. ' ' → logprob: -3.552525281906128
    6. '50' → logprob: -4.677525520324707
    7. '5' → logprob: -4.677525520324707
    8. 'n' → logprob: -5.302525520324707
    9. '9' → logprob: -5.427525520324707
    10. '20' → logprob: -5.427525520324707

Token 1127: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19686688482761383
    2. 'def' → logprob: -1.8218668699264526
    3. 'for' → logprob: -4.821866989135742
    4. ' for' → logprob: -5.321866989135742
    5. 'digits' → logprob: -6.696866989135742
    6. '
' → logprob: -6.946866989135742
    7. ':' → logprob: -7.196866989135742
    8. ' def' → logprob: -7.696866989135742
    9. '    
' → logprob: -8.696866989135742
    10. ' digits' → logprob: -9.321866989135742

Token 1128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0361371710896492
    2. 'def' → logprob: -3.411137104034424
    3. '
' → logprob: -6.286137104034424
    4. '    
' → logprob: -7.911137104034424
    5. 'for' → logprob: -9.161137580871582
    6. ' def' → logprob: -9.661137580871582
    7. 'digits' → logprob: -10.661137580871582
    8. '```' → logprob: -10.786137580871582
    9. ' for' → logprob: -10.911137580871582
    10. 'import' → logprob: -11.036137580871582

Token 1129: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05669279396533966
    2. 'digits' → logprob: -3.3066928386688232
    3. 'stack' → logprob: -4.806692600250244
    4. '   ' → logprob: -5.431692600250244
    5. 'for' → logprob: -5.681692600250244
    6. 'max' → logprob: -6.556692600250244
    7. 'from' → logprob: -7.431692600250244
    8. 'import' → logprob: -8.931693077087402
    9. 'queue' → logprob: -9.181693077087402
    10. 'digit' → logprob: -9.806693077087402

Token 1130: ' We'll' (ID: 46830)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.030113987624645233
    2. 'digits' → logprob: -4.15511417388916
    3. '   ' → logprob: -5.28011417388916
    4. 'stack' → logprob: -5.65511417388916
    5. 'for' → logprob: -5.78011417388916
    6. 'from' → logprob: -6.78011417388916
    7. 'max' → logprob: -7.03011417388916
    8. 'import' → logprob: -9.15511417388916
    9. 'digit' → logprob: -9.65511417388916
    10. 'DIG' → logprob: -10.65511417388916

Token 1131: ' implement' (ID: 6365)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13978537917137146
    2. 'import' → logprob: -3.1397852897644043
    3. '   ' → logprob: -3.5147852897644043
    4. ' def' → logprob: -4.014785289764404
    5. 'for' → logprob: -4.889785289764404
    6. 'indent' → logprob: -4.889785289764404
    7. 'try' → logprob: -5.139785289764404
    8. ' for' → logprob: -5.139785289764404
    9. 'continue' → logprob: -5.264785289764404
    10. ' try' → logprob: -6.514785289764404

Token 1132: ' a' (ID: 261)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0018737860955297947
    2. ' def' → logprob: -6.626873970031738
    3. '```' → logprob: -8.126873970031738
    4. '   ' → logprob: -8.876873970031738
    5. '
' → logprob: -10.001873970031738
    6. 'for' → logprob: -10.376873970031738
    7. 'import' → logprob: -11.251873970031738
    8. 'a' → logprob: -12.126873970031738
    9. ' a' → logprob: -12.251873970031738
    10. 'from' → logprob: -12.376873970031738

Token 1133: ' DFS' (ID: 115767)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002318203216418624
    2. 'from' → logprob: -6.752318382263184
    3. 'stack' → logprob: -7.127318382263184
    4. 'import' → logprob: -8.627318382263184
    5. ' def' → logprob: -9.252318382263184
    6. 'for' → logprob: -10.377318382263184
    7. 'back' → logprob: -11.627318382263184
    8. '
' → logprob: -12.127318382263184
    9. '```' → logprob: -12.252318382263184
    10. 'queue' → logprob: -12.502318382263184

Token 1134: ' with' (ID: 483)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07759704440832138
    2. '   ' → logprob: -3.327597141265869
    3. '(' → logprob: -3.827597141265869
    4. '(n' → logprob: -4.702597141265869
    5. '(
' → logprob: -5.702597141265869
    6. '(depth' → logprob: -6.702597141265869
    7. '
' → logprob: -6.827597141265869
    8. '(def' → logprob: -7.452597141265869
    9. ' def' → logprob: -7.577597141265869
    10. '(b' → logprob: -7.702597141265869

Token 1135: ' early' (ID: 6047)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6624269485473633
    2. 'depth' → logprob: -0.9124269485473633
    3. ' depth' → logprob: -3.5374269485473633
    4. 'limit' → logprob: -3.6624269485473633
    5. ' def' → logprob: -4.037426948547363
    6. 'memo' → logprob: -5.662426948547363
    7. 'pos' → logprob: -6.662426948547363
    8. 'index' → logprob: -6.912426948547363
    9. 'pr' → logprob: -7.162426948547363
    10. 'b' → logprob: -7.287426948547363

Token 1136: ' pruning' (ID: 135775)
  Prédit: ' stopping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stopping' → logprob: -1.1050662994384766
    2. '_stop' → logprob: -1.1050662994384766
    3. '_return' → logprob: -2.1050662994384766
    4. 'return' → logprob: -2.9800662994384766
    5. ' return' → logprob: -3.6050662994384766
    6. 'stop' → logprob: -3.7300662994384766
    7. '   ' → logprob: -3.8550662994384766
    8. ')' → logprob: -3.9800662994384766
    9. 'def' → logprob: -4.230066299438477
    10. '_continue' → logprob: -4.355066299438477

Token 1137: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.49141180515289307
    2. '   ' → logprob: -0.9914118051528931
    3. '
' → logprob: -4.1164116859436035
    4. '    
' → logprob: -8.116412162780762
    5. ' def' → logprob: -8.116412162780762
    6. 'import' → logprob: -8.991412162780762
    7. ':' → logprob: -9.616412162780762
    8. '```' → logprob: -9.866412162780762
    9. ',' → logprob: -11.866412162780762
    10. 'from' → logprob: -12.116412162780762

Token 1138: ' choosing' (ID: 20296)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25680774450302124
    2. '   ' → logprob: -1.881807804107666
    3. '
' → logprob: -3.131807804107666
    4. ' def' → logprob: -3.631807804107666
    5. ' stack' → logprob: -6.006807804107666
    6. 'stack' → logprob: -7.256807804107666
    7. 'import' → logprob: -7.631807804107666
    8. '    
' → logprob: -8.381807327270508
    9. 'from' → logprob: -10.631807327270508
    10. 'digits' → logprob: -11.131807327270508

Token 1139: ' highest' (ID: 11639)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.4739655554294586
    2. 'd' → logprob: -2.098965644836426
    3. 'digit' → logprob: -2.348965644836426
    4. 'def' → logprob: -2.848965644836426
    5. ' digits' → logprob: -2.973965644836426
    6. '   ' → logprob: -3.848965644836426
    7. 'for' → logprob: -4.723965644836426
    8. ' def' → logprob: -5.348965644836426
    9. 'b' → logprob: -5.473965644836426
    10. ' d' → logprob: -5.723965644836426

Token 1140: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.3205123245716095
    2. '_digit' → logprob: -1.570512294769287
    3. 'digits' → logprob: -3.445512294769287
    4. ' digit' → logprob: -4.695512294769287
    5. '   ' → logprob: -5.070512294769287
    6. '_digits' → logprob: -5.195512294769287
    7. ')' → logprob: -5.945512294769287
    8. ' digits' → logprob: -6.195512294769287
    9. 'possible' → logprob: -6.320512294769287
    10. '```' → logprob: -6.820512294769287

Token 1141: ' per' (ID: 777)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14530959725379944
    2. '   ' → logprob: -2.1453096866607666
    3. '(' → logprob: -4.6453094482421875
    4. ':' → logprob: -5.7703094482421875
    5. ' def' → logprob: -6.2703094482421875
    6. 'for' → logprob: -6.5203094482421875
    7. ',' → logprob: -7.2703094482421875
    8. ' for' → logprob: -8.520309448242188
    9. '(
' → logprob: -8.645309448242188
    10. ' (' → logprob: -9.020309448242188

Token 1142: ' position' (ID: 4010)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.5293105244636536
    2. 'position' → logprob: -0.9043105244636536
    3. 'level' → logprob: -5.779310703277588
    4. ' pair' → logprob: -6.779310703277588
    5. 'depth' → logprob: -7.279310703277588
    6. ' position' → logprob: -7.779310703277588
    7. 'index' → logprob: -7.904310703277588
    8. 'pos' → logprob: -8.27931022644043
    9. 'digit' → logprob: -9.15431022644043
    10. ' level' → logprob: -10.40431022644043

Token 1143: ' first' (ID: 1577)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5280032753944397
    2. '   ' → logprob: -0.9030032753944397
    3. ' def' → logprob: -5.778003215789795
    4. '
' → logprob: -7.278003215789795
    5. ':' → logprob: -7.653003215789795
    6. ':
' → logprob: -9.403003692626953
    7. 'import' → logprob: -9.528003692626953
    8. '):
' → logprob: -9.778003692626953
    9. 'for' → logprob: -9.778003692626953
    10. '    
' → logprob: -10.028003692626953

Token 1144: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.397503525018692
    2. '   ' → logprob: -1.1475034952163696
    3. '
' → logprob: -4.64750337600708
    4. ':' → logprob: -7.89750337600708
    5. ' def' → logprob: -8.397503852844238
    6. '```' → logprob: -8.772503852844238
    7. '    
' → logprob: -9.397503852844238
    8. 'import' → logprob: -10.272503852844238
    9. ':
' → logprob: -11.022503852844238
    10. ',' → logprob: -11.022503852844238

Token 1145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09245501458644867
    2. 'def' → logprob: -2.5924549102783203
    3. '
' → logprob: -4.34245491027832
    4. '    
' → logprob: -8.34245491027832
    5. ' def' → logprob: -9.09245491027832
    6. 'import' → logprob: -9.59245491027832
    7. 'from' → logprob: -10.71745491027832
    8. '```' → logprob: -11.34245491027832
    9. ',' → logprob: -11.96745491027832
    10. 'for' → logprob: -13.34245491027832

Token 1146: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.47735512256622314
    2. '   ' → logprob: -0.9773551225662231
    3. '
' → logprob: -5.977355003356934
    4. ' def' → logprob: -7.602355003356934
    5. '    
' → logprob: -9.102355003356934
    6. 'stack' → logprob: -9.727355003356934
    7. 'import' → logprob: -10.352355003356934
    8. '```' → logprob: -11.352355003356934
    9. 'indent' → logprob: -11.852355003356934
    10. 'from' → logprob: -11.977355003356934

Token 1147: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.12146278470754623
    2. 'back' → logprob: -2.621462821960449
    3. ' dfs' → logprob: -3.371462821960449
    4. 'search' → logprob: -5.621462821960449
    5. ' back' → logprob: -5.621462821960449
    6. ' search' → logprob: -9.37146282196045
    7. 'solve' → logprob: -11.87146282196045
    8. 'best' → logprob: -12.62146282196045
    9. 'find' → logprob: -12.74646282196045
    10. 'bt' → logprob: -13.99646282196045

Token 1148: '(pos' (ID: 24566)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.094224452972412
    2. '(depth' → logprob: -1.344224452972412
    3. '(b' → logprob: -1.844224452972412
    4. '(index' → logprob: -2.719224452972412
    5. '(pos' → logprob: -2.844224452972412
    6. '(' → logprob: -2.969224452972412
    7. '(level' → logprob: -3.719224452972412
    8. '(n' → logprob: -3.844224452972412
    9. '(position' → logprob: -4.219224452972412
    10. '(idx' → logprob: -5.594224452972412

Token 1149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.040976881980895996
    2. '):' → logprob: -4.0409770011901855
    3. '   ' → logprob: -4.2909770011901855
    4. '):
' → logprob: -5.9159770011901855
    5. '+' → logprob: -6.0409770011901855
    6. ' ,' → logprob: -6.1659770011901855
    7. ':' → logprob: -8.040976524353027
    8. '=' → logprob: -8.165976524353027
    9. ' +' → logprob: -8.665976524353027
    10. ',
' → logprob: -8.790976524353027

Token 1150: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.015363002195954323
    2. 'path' → logprob: -4.7653632164001465
    3. ' b' → logprob: -5.6403632164001465
    4. 'digits' → logprob: -6.3903632164001465
    5. 'current' → logprob: -7.0153632164001465
    6. ' path' → logprob: -8.140362739562988
    7. 'curr' → logprob: -9.265362739562988
    8. 'chosen' → logprob: -9.890362739562988
    9. 'assigned' → logprob: -10.265362739562988
    10. 'partial' → logprob: -10.390362739562988

Token 1151: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.00014036978245712817
    2. 'digits' → logprob: -9.000140190124512
    3. '_tokens' → logprob: -12.000140190124512
    4. 'Digits' → logprob: -12.875140190124512
    5. ')_' → logprob: -13.000140190124512
    6. '_d' → logprob: -13.250140190124512
    7. '```' → logprob: -14.250140190124512
    8. '_' → logprob: -14.625140190124512
    9. '_bits' → logprob: -14.625140190124512
    10. '   ' → logprob: -14.750140190124512

Token 1152: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004456852038856596
    2. '):' → logprob: -8.750445365905762
    3. '):
' → logprob: -9.000445365905762
    4. ',d' → logprob: -10.250445365905762
    5. ',b' → logprob: -10.625445365905762
    6. ',
' → logprob: -11.000445365905762
    7. '[],' → logprob: -11.250445365905762
    8. ',p' → logprob: -11.375445365905762
    9. ',n' → logprob: -11.500445365905762
    10. '=[],' → logprob: -11.625445365905762

Token 1153: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08786474913358688
    2. ':' → logprob: -2.712864637374878
    3. ':
' → logprob: -4.962864875793457
    4. ',' → logprob: -5.587864875793457
    5. '):' → logprob: -6.087864875793457
    6. '):
' → logprob: -6.087864875793457
    7. '       ' → logprob: -7.337864875793457
    8. '    
' → logprob: -7.712864875793457
    9. ' if' → logprob: -8.337864875793457
    10. ')' → logprob: -8.587864875793457

Token 1154: ' non' (ID: 2893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0628618523478508
    2. 'global' → logprob: -2.812861919403076
    3. 'if' → logprob: -7.062861919403076
    4. ' global' → logprob: -10.687861442565918
    5. '   ' → logprob: -12.062861442565918
    6. ' if' → logprob: -12.437861442565918
    7. '	global' → logprob: -12.562861442565918
    8. 'non' (adapté à ' non') → logprob: -14.312861442565918
    9. '    
' → logprob: -14.687861442565918
    10. '       ' → logprob: -16.562862396240234

Token 1155: 'local' (ID: 5818)
  Prédit: 'local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.0010392407421022654
    2. 'space' → logprob: -7.501039028167725
    3. '_' → logprob: -8.251039505004883
    4. 'e' → logprob: -10.251039505004883
    5. ':' → logprob: -10.251039505004883
    6. ' local' → logprob: -10.376039505004883
    7. 'locals' → logprob: -10.751039505004883
    8. 'def' → logprob: -11.001039505004883
    9. '_t' → logprob: -12.126039505004883
    10. '_local' → logprob: -12.126039505004883

Token 1156: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -9.615255839889869e-05
    2. ' best' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.25009536743164
    4. '	best' → logprob: -20.50009536743164
    5. '
' → logprob: -21.37509536743164
    6. 'b' → logprob: -21.37509536743164
    7. ' ' → logprob: -21.50009536743164
    8. '  ' → logprob: -22.87509536743164
    9. '(best' → logprob: -23.50009536743164
    10. '_best' → logprob: -23.87509536743164

Token 1157: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0006386925233528018
    2. '_' → logprob: -7.625638484954834
    3. '_prime' → logprob: -9.125638961791992
    4. 'num' → logprob: -10.500638961791992
    5. '_digits' → logprob: -12.250638961791992
    6. '_nums' → logprob: -13.625638961791992
    7. '_
' → logprob: -14.250638961791992
    8. '_n' → logprob: -14.500638961791992
    9. '_pos' → logprob: -14.500638961791992
    10. ' _' → logprob: -14.500638961791992

Token 1158: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7727624177932739
    2. ',' → logprob: -1.022762417793274
    3. ':' → logprob: -2.5227622985839844
    4. '):
' → logprob: -4.022762298583984
    5. '    
' → logprob: -4.147762298583984
    6. ':
' → logprob: -4.397762298583984
    7. ')' → logprob: -4.522762298583984
    8. '):' → logprob: -4.772762298583984
    9. '       ' → logprob: -4.772762298583984
    10. '
' → logprob: -4.897762298583984

Token 1159: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.011049000546336174
    2. ' best' → logprob: -4.511048793792725
    3. '
' → logprob: -14.636049270629883
    4. '	best' → logprob: -15.136049270629883
    5. 'b' → logprob: -15.261049270629883
    6. '   ' → logprob: -16.386049270629883
    7. '(best' → logprob: -17.136049270629883
    8. 'Best' → logprob: -17.761049270629883
    9. '
' → logprob: -18.261049270629883
    10. '_best' → logprob: -18.511049270629883

Token 1160: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -5.717296517104842e-05
    2. 'prime' → logprob: -10.500057220458984
    3. '_' → logprob: -10.750057220458984
    4. '_num' → logprob: -11.875057220458984
    5. '_digit' → logprob: -14.125057220458984
    6. '_digits' → logprob: -15.625057220458984
    7. '_pr' → logprob: -16.250057220458984
    8. '\' → logprob: -16.750057220458984
    9. '
' → logprob: -16.875057220458984
    10. '_p' → logprob: -17.375057220458984

Token 1161: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5900412797927856
    2. ':' → logprob: -1.7150412797927856
    3. '       ' → logprob: -1.9650412797927856
    4. ':
' → logprob: -2.590041160583496
    5. '):
' → logprob: -3.840041160583496
    6. '):' → logprob: -4.840041160583496
    7. '    
' → logprob: -4.965041160583496
    8. ',' → logprob: -5.090041160583496
    9. '        
' → logprob: -5.715041160583496
    10. '
' → logprob: -6.965041160583496

Token 1162: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022720585111528635
    2. '       ' → logprob: -6.127272129058838
    3. '    
' → logprob: -10.37727165222168
    4. ':' → logprob: -10.62727165222168
    5. ' if' → logprob: -11.50227165222168
    6. 'if' → logprob: -11.87727165222168
    7. '```' → logprob: -12.00227165222168
    8. '        
' → logprob: -13.00227165222168
    9. ',' → logprob: -13.62727165222168
    10. '   ' → logprob: -13.75227165222168

Token 1163: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3163844048976898
    2. ' if' → logprob: -1.9413844347000122
    3. 'if' (adapté à ' if') → logprob: -2.0663843154907227
    4. ':' → logprob: -7.441384315490723
    5. '       ' → logprob: -8.566384315490723
    6. '    
' → logprob: -8.691384315490723
    7. '	if' → logprob: -10.566384315490723
    8. ':
' → logprob: -11.066384315490723
    9. '```' → logprob: -11.066384315490723
    10. '
' → logprob: -11.316384315490723

Token 1164: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.02324547804892063
    2. ' pos' → logprob: -3.7732455730438232
    3. '	pos' → logprob: -19.273244857788086
    4. '   ' → logprob: -20.523244857788086
    5. '_pos' → logprob: -20.773244857788086
    6. 'len' → logprob: -21.523244857788086
    7. '(pos' → logprob: -22.148244857788086
    8. ' ' → logprob: -22.523244857788086
    9. '.pos' → logprob: -23.273244857788086
    10. '[pos' → logprob: -23.773244857788086

Token 1165: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6327185034751892
    2. ' ==' → logprob: -0.7577185034751892
    3. ')' → logprob: -10.632718086242676
    4. ')==' → logprob: -10.757718086242676
    5. '=' → logprob: -11.257718086242676
    6. '>=' → logprob: -11.257718086242676
    7. '===' → logprob: -11.757718086242676
    8. '==
' → logprob: -11.757718086242676
    9. ']==' → logprob: -12.007718086242676
    10. ' >=' → logprob: -12.132718086242676

Token 1166: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006473870598711073
    2. 'len' → logprob: -7.37564754486084
    3. ' n' → logprob: -10.87564754486084
    4. '   ' → logprob: -13.62564754486084
    5. ' len' → logprob: -14.75064754486084
    6. '_n' → logprob: -16.625646591186523
    7. 'ndef' → logprob: -16.750646591186523
    8. '
' → logprob: -16.875646591186523
    9. '	n' → logprob: -17.250646591186523
    10. 'import' → logprob: -17.625646591186523

Token 1167: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036326120607554913
    2. ':
' → logprob: -5.628632545471191
    3. ':return' → logprob: -10.753632545471191
    4. '):' → logprob: -12.003632545471191
    5. '   ' → logprob: -12.753632545471191
    6. ' :' → logprob: -14.503632545471191
    7. '       ' → logprob: -15.128632545471191
    8. '<|end|>' → logprob: -15.253632545471191
    9. '):
' → logprob: -15.503632545471191
    10. ':def' → logprob: -15.503632545471191

Token 1168: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.506374716758728
    2. ':' → logprob: -1.006374716758728
    3. ':
' → logprob: -3.5063748359680176
    4. '):' → logprob: -7.631374835968018
    5. '{' → logprob: -8.13137435913086
    6. '):
' → logprob: -8.25637435913086
    7. '           ' → logprob: -8.38137435913086
    8. '   ' → logprob: -8.63137435913086
    9. '```' → logprob: -9.50637435913086
    10. '<|end|>' → logprob: -9.63137435913086

Token 1169: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16538105905056
    2. 'num' → logprob: -1.9153810739517212
    3. '           ' → logprob: -6.290380954742432
    4. 'number' → logprob: -6.415380954742432
    5. 'if' (adapté à ' if') → logprob: -6.665380954742432
    6. '   ' → logprob: -9.54038143157959
    7. '               ' → logprob: -9.79038143157959
    8. ' num' → logprob: -9.91538143157959
    9. 'candidate' → logprob: -9.91538143157959
    10. ' if' → logprob: -10.41538143157959

Token 1170: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1735834777355194
    2. ' valid' → logprob: -1.9235835075378418
    3. 'not' → logprob: -4.548583507537842
    4. 'valid' → logprob: -5.923583507537842
    5. '   ' → logprob: -11.673583030700684
    6. '    ' → logprob: -13.798583030700684
    7. '(valid' → logprob: -14.048583030700684
    8. ' ' → logprob: -14.423583030700684
    9. '           ' → logprob: -14.923583030700684
    10. '       ' → logprob: -15.423583030700684

Token 1171: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -4.584861744660884e-05
    2. ' valid' → logprob: -10.000045776367188
    3. '
' → logprob: -15.500045776367188
    4. '(valid' → logprob: -16.625045776367188
    5. 'val' → logprob: -16.750045776367188
    6. '   ' → logprob: -18.000045776367188
    7. '	valid' → logprob: -18.375045776367188
    8. 'v' → logprob: -18.500045776367188
    9. '.valid' → logprob: -19.375045776367188
    10. 'validate' → logprob: -19.500045776367188

Token 1172: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.0005032312474213541
    2. '_' → logprob: -8.125503540039062
    3. '_d' → logprob: -9.500503540039062
    4. '_b' → logprob: -10.250503540039062
    5. '(b' → logprob: -10.500503540039062
    6. '```' → logprob: -11.125503540039062
    7. '(_' → logprob: -11.625503540039062
    8. ' _' → logprob: -12.250503540039062
    9. 'digits' → logprob: -12.250503540039062
    10. '\' → logprob: -12.250503540039062

Token 1173: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0013961880467832088
    2. '(' → logprob: -6.626396179199219
    3. '(
' → logprob: -9.751396179199219
    4. 'b' → logprob: -12.501396179199219
    5. ')' → logprob: -13.126396179199219
    6. ' (' → logprob: -13.501396179199219
    7. '   ' → logprob: -13.626396179199219
    8. '```' → logprob: -14.126396179199219
    9. '([' → logprob: -14.251396179199219
    10. '           ' → logprob: -14.751396179199219

Token 1174: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -6.134509021649137e-05
    2. 'digits' → logprob: -9.75006103515625
    3. ')' → logprob: -14.25006103515625
    4. '```' → logprob: -14.25006103515625
    5. 'Digits' → logprob: -14.87506103515625
    6. '_' → logprob: -15.37506103515625
    7. ' digits' → logprob: -15.87506103515625
    8. 'igits' → logprob: -16.00006103515625
    9. ')_' → logprob: -16.00006103515625
    10. '[]' → logprob: -16.25006103515625

Token 1175: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08524371683597565
    2. '):' → logprob: -2.5852437019348145
    3. '       ' → logprob: -5.4602437019348145
    4. ':
' → logprob: -6.4602437019348145
    5. ':' → logprob: -7.8352437019348145
    6. '           ' → logprob: -9.710244178771973
    7. ')' → logprob: -10.710244178771973
    8. '   ' → logprob: -10.960244178771973
    9. '():
' → logprob: -11.960244178771973
    10. '               ' → logprob: -11.960244178771973

Token 1176: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017764028161764145
    2. '           ' → logprob: -4.142764091491699
    3. ':' → logprob: -6.767764091491699
    4. '       ' → logprob: -8.3927640914917
    5. ':
' → logprob: -8.3927640914917
    6. ':return' → logprob: -9.6427640914917
    7. 'return' → logprob: -11.6427640914917
    8. ' return' → logprob: -11.7677640914917
    9. '                   ' → logprob: -11.7677640914917
    10. '             ' → logprob: -12.3927640914917

Token 1177: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2921019494533539
    2. '               ' → logprob: -1.5421019792556763
    3. 'return' (adapté à ' return') → logprob: -3.2921018600463867
    4. ' return' → logprob: -6.167101860046387
    5. ':return' → logprob: -10.417101860046387
    6. '       ' → logprob: -10.667101860046387
    7. '	       ' → logprob: -11.292101860046387
    8. '   ' → logprob: -11.542101860046387
    9. '	return' → logprob: -12.042101860046387
    10. '                   ' → logprob: -12.042101860046387

Token 1178: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3189554512500763
    2. '           ' → logprob: -1.443955421447754
    3. '
' → logprob: -3.318955421447754
    4. '        
' → logprob: -7.818955421447754
    5. '```' → logprob: -8.193955421447754
    6. '   ' → logprob: -9.818955421447754
    7. '\n' → logprob: -9.943955421447754
    8. '    
' → logprob: -10.193955421447754
    9. '            
' → logprob: -11.193955421447754
    10. '<|end|>' → logprob: -11.318955421447754

Token 1179: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048333317041397095
    2. '
' → logprob: -3.2983334064483643
    3. '           ' → logprob: -5.173333168029785
    4. '        
' → logprob: -5.548333168029785
    5. '    
' → logprob: -8.548333168029785
    6. '   ' → logprob: -8.548333168029785
    7. '```' → logprob: -9.173333168029785
    8. '  
' → logprob: -9.798333168029785
    9. '            
' → logprob: -9.923333168029785
    10. '
' → logprob: -10.548333168029785

Token 1180: ' num' (ID: 2269)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8551614284515381
    2. '           ' → logprob: -1.105161428451538
    3. 'num' (adapté à ' num') → logprob: -1.480161428451538
    4. '
' → logprob: -4.730161666870117
    5. 'number' → logprob: -5.105161666870117
    6. '   ' → logprob: -7.855161666870117
    7. '        
' → logprob: -7.980161666870117
    8. 'candidate' → logprob: -9.105161666870117
    9. ' num' → logprob: -9.480161666870117
    10. '    
' → logprob: -9.855161666870117

Token 1181: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -2.7372048862162046e-05
    2. '_' → logprob: -10.625027656555176
    3. 'str' → logprob: -13.625027656555176
    4. '_string' → logprob: -13.750027656555176
    5. '_s' → logprob: -14.500027656555176
    6. ' _' → logprob: -17.37502670288086
    7. 's' → logprob: -17.50002670288086
    8. '_st' → logprob: -17.62502670288086
    9. 'Str' → logprob: -17.75002670288086
    10. '_STR' → logprob: -18.37502670288086

Token 1182: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06211993843317032
    2. ' =' → logprob: -2.812119960784912
    3. '           ' → logprob: -8.937119483947754
    4. '       ' → logprob: -11.687119483947754
    5. '=
' → logprob: -12.437119483947754
    6. ')' → logprob: -13.062119483947754
    7. '        ' → logprob: -13.312119483947754
    8. '               ' → logprob: -14.187119483947754
    9. '            ' → logprob: -14.312119483947754
    10. '   ' → logprob: -14.312119483947754

Token 1183: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.02324768900871277
    2. ' build' → logprob: -3.773247718811035
    3. '   ' → logprob: -14.023247718811035
    4. '           ' → logprob: -14.273247718811035
    5. '	build' → logprob: -15.148247718811035
    6. '       ' → logprob: -16.02324676513672
    7. '(build' → logprob: -16.14824676513672
    8. '    ' → logprob: -17.64824676513672
    9. 'built' → logprob: -17.64824676513672
    10. ' buil' → logprob: -17.64824676513672

Token 1184: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.000464035285403952
    2. '_digits' → logprob: -7.875463962554932
    3. '_num' → logprob: -10.25046443939209
    4. '_numbers' → logprob: -10.50046443939209
    5. 'number' → logprob: -11.87546443939209
    6. '_' → logprob: -12.00046443939209
    7. '_n' → logprob: -12.75046443939209
    8. '```' → logprob: -13.50046443939209
    9. '(b' → logprob: -13.75046443939209
    10. '_b' → logprob: -14.37546443939209

Token 1185: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.012594180181622505
    2. 'b' → logprob: -4.387594223022461
    3. '(' → logprob: -9.887594223022461
    4. ' b' → logprob: -11.012594223022461
    5. ' (' → logprob: -12.387594223022461
    6. '```' → logprob: -12.512594223022461
    7. '(
' → logprob: -13.262594223022461
    8. ')' → logprob: -13.262594223022461
    9. ')b' → logprob: -13.887594223022461
    10. '           ' → logprob: -14.137594223022461

Token 1186: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.00014478032244369388
    2. 'digits' → logprob: -8.875144958496094
    3. '_' → logprob: -13.000144958496094
    4. 'igits' → logprob: -14.625144958496094
    5. 'Digits' → logprob: -14.625144958496094
    6. '_d' → logprob: -14.750144958496094
    7. '```' → logprob: -15.125144958496094
    8. ' digits' → logprob: -15.500144958496094
    9. 'pos' → logprob: -16.500144958496094
    10. '_digit' → logprob: -16.500144958496094

Token 1187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004953731782734394
    2. ',b' → logprob: -6.004953861236572
    3. '           ' → logprob: -6.254953861236572
    4. ')' → logprob: -8.004953384399414
    5. ' ,' → logprob: -9.379953384399414
    6. '       ' → logprob: -10.254953384399414
    7. ',c' → logprob: -11.004953384399414
    8. '               ' → logprob: -11.129953384399414
    9. 'b' → logprob: -11.254953384399414
    10. ',
' → logprob: -11.754953384399414

Token 1188: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0003403495065867901
    2. ' c' → logprob: -8.000340461730957
    3. '   ' → logprob: -12.625340461730957
    4. '-' → logprob: -14.125340461730957
    5. ')c' → logprob: -14.750340461730957
    6. '-c' → logprob: -15.750340461730957
    7. '
' → logprob: -15.875340461730957
    8. '	c' → logprob: -16.37533950805664
    9. '_c' → logprob: -17.62533950805664
    10. '       ' → logprob: -17.62533950805664

Token 1189: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06840996444225311
    2. ')
' → logprob: -2.8184099197387695
    3. '   ' → logprob: -6.0684099197387695
    4. ' )' → logprob: -6.4434099197387695
    5. '_digit' → logprob: -6.6934099197387695
    6. ' )
' → logprob: -7.9434099197387695
    7. '_)' → logprob: -8.69340991973877
    8. '       ' → logprob: -9.44340991973877
    9. '_' → logprob: -9.56840991973877
    10. '    ' → logprob: -9.69340991973877

Token 1190: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006096584722399712
    2. '       ' → logprob: -5.506096363067627
    3. ')' → logprob: -6.756096363067627
    4. '   ' → logprob: -8.506096839904785
    5. '<|end|>' → logprob: -8.631096839904785
    6. '<|end|>' → logprob: -9.006096839904785
    7. '
' → logprob: -9.381096839904785
    8. '```' → logprob: -10.006096839904785
    9. ',' → logprob: -10.131096839904785
    10. 'if' → logprob: -10.256096839904785

Token 1191: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.44299033284187317
    2. '           ' → logprob: -1.0679903030395508
    3. ' if' → logprob: -4.817990303039551
    4. '       ' → logprob: -5.442990303039551
    5. '
' → logprob: -6.942990303039551
    6. 'num' → logprob: -7.692990303039551
    7. '   ' → logprob: -9.19299030303955
    8. '#' → logprob: -9.31799030303955
    9. '            
' → logprob: -10.31799030303955
    10. '```' → logprob: -10.31799030303955

Token 1192: ' num' (ID: 2269)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.09839943051338196
    2. ' is' → logprob: -2.4733994007110596
    3. 'len' → logprob: -5.223399639129639
    4. 'not' → logprob: -6.598399639129639
    5. 'num' → logprob: -6.848399639129639
    6. ' len' → logprob: -7.348399639129639
    7. ' not' → logprob: -7.848399639129639
    8. 'best' → logprob: -8.34839916229248
    9. 'int' → logprob: -8.97339916229248
    10. ' num' → logprob: -10.09839916229248

Token 1193: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00032044618274085224
    2. 'str' → logprob: -9.250320434570312
    3. 'is' → logprob: -10.000320434570312
    4. 's' → logprob: -10.125320434570312
    5. 'sys' → logprob: -11.000320434570312
    6. ''_' → logprob: -11.125320434570312
    7. 'prime' → logprob: -11.375320434570312
    8. '_' → logprob: -11.375320434570312
    9. '   ' → logprob: -11.625320434570312
    10. 'Str' → logprob: -11.625320434570312

Token 1194: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7383172512054443
    2. '.startswith' → logprob: -1.3633172512054443
    3. '==' → logprob: -1.8633172512054443
    4. ' ==' → logprob: -3.2383172512054443
    5. '           ' → logprob: -3.8633172512054443
    6. '.is' → logprob: -4.488317489624023
    7. ' and' → logprob: -4.738317489624023
    8. '.' → logprob: -5.238317489624023
    9. ':
' → logprob: -5.363317489624023
    10. ':' → logprob: -5.613317489624023

Token 1195: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.87500286102295
    3. '
' → logprob: -14.37500286102295
    4. '[' → logprob: -14.75000286102295
    5. '```' → logprob: -15.12500286102295
    6. ''' → logprob: -15.87500286102295
    7. ']' → logprob: -16.250001907348633
    8. '   ' → logprob: -16.812501907348633
    9. ':' → logprob: -17.437501907348633
    10. '==' → logprob: -17.500001907348633

Token 1196: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1953115314245224
    2. ' !=' → logprob: -2.5703115463256836
    3. '!=' → logprob: -2.8203115463256836
    4. ']!=' → logprob: -4.445311546325684
    5. '']' → logprob: -4.695311546325684
    6. '!='' → logprob: -5.070311546325684
    7. ')' → logprob: -5.695311546325684
    8. ']!='' → logprob: -5.945311546325684
    9. '```' → logprob: -6.070311546325684
    10. ''' → logprob: -6.445311546325684

Token 1197: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.18247243762016296
    2. ''' → logprob: -2.3074724674224854
    3. '!='' → logprob: -3.1824724674224854
    4. '==' → logprob: -4.307472229003906
    5. ' !=' → logprob: -5.432472229003906
    6. '"' → logprob: -6.307472229003906
    7. '=='' → logprob: -6.432472229003906
    8. '```' → logprob: -6.432472229003906
    9. '0' → logprob: -6.807472229003906
    10. '!' → logprob: -7.432472229003906

Token 1198: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -2.129266067640856e-05
    2. '0' → logprob: -11.375020980834961
    3. '"' → logprob: -12.250020980834961
    4. ' '' → logprob: -12.250020980834961
    5. ' ' → logprob: -16.25002098083496
    6. '   ' → logprob: -17.25002098083496
    7. '
' → logprob: -17.75002098083496
    8. '`' → logprob: -18.12502098083496
    9. '('' → logprob: -18.75002098083496
    10. '       ' → logprob: -19.00002098083496

Token 1199: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020545506849884987
    2. ''' → logprob: -3.895545482635498
    3. ' ' → logprob: -13.270545959472656
    4. '')' → logprob: -14.020545959472656
    5. ' '' → logprob: -14.645545959472656
    6. '"' → logprob: -15.020545959472656
    7. '1' → logprob: -15.645545959472656
    8. ''-' → logprob: -16.520545959472656
    9. ''"' → logprob: -17.270545959472656
    10. '   ' → logprob: -17.395545959472656

Token 1200: ''' (ID: 6)
  Prédit: '':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.24744614958763123
    2. ''):
' → logprob: -2.247446060180664
    3. '':' → logprob: -3.247446060180664
    4. ''' → logprob: -3.497446060180664
    5. ':
' → logprob: -3.872446060180664
    6. '           ' → logprob: -4.997446060180664
    7. '):
' → logprob: -5.372446060180664
    8. ':' → logprob: -5.747446060180664
    9. '       ' → logprob: -5.997446060180664
    10. '')' → logprob: -6.122446060180664

Token 1201: ' or' (ID: 503)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2439904659986496
    2. ':' → logprob: -2.243990421295166
    3. '               ' → logprob: -2.368990421295166
    4. '           ' → logprob: -4.618990421295166
    5. ':return' → logprob: -5.493990421295166
    6. ' or' → logprob: -5.993990421295166
    7. '       ' → logprob: -8.493990898132324
    8. '):
' → logprob: -9.868990898132324
    9. 'return' → logprob: -9.868990898132324
    10. '                       ' → logprob: -10.993990898132324

Token 1202: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0011724866926670074
    2. ' num' → logprob: -6.7511725425720215
    3. '(num' → logprob: -13.126172065734863
    4. ' (' → logprob: -15.876172065734863
    5. '   ' → logprob: -17.25117301940918
    6. '(' → logprob: -17.75117301940918
    7. '
' → logprob: -18.25117301940918
    8. '	num' → logprob: -18.25117301940918
    9. ' ' → logprob: -18.37617301940918
    10. 'len' → logprob: -18.75117301940918

Token 1203: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00015288250870071352
    2. 'str' → logprob: -9.000152587890625
    3. 'Str' → logprob: -11.750152587890625
    4. '_' → logprob: -12.500152587890625
    5. '_len' → logprob: -12.750152587890625
    6. '[' → logprob: -12.875152587890625
    7. '
' → logprob: -13.375152587890625
    8. '```' → logprob: -13.500152587890625
    9. '   ' → logprob: -13.875152587890625
    10. '_STR' → logprob: -14.000152587890625

Token 1204: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0032011198345571756
    2. '[' → logprob: -6.003201007843018
    3. '[len' → logprob: -8.128201484680176
    4. '==' → logprob: -8.378201484680176
    5. '.endswith' → logprob: -9.003201484680176
    6. ' ==' → logprob: -10.253201484680176
    7. '```' → logprob: -11.003201484680176
    8. 'len' → logprob: -12.128201484680176
    9. '[
' → logprob: -12.253201484680176
    10. '   ' → logprob: -12.503201484680176

Token 1205: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.016282685101032257
    2. '0' → logprob: -4.141282558441162
    3. '   ' → logprob: -9.01628303527832
    4. ' '' → logprob: -10.01628303527832
    5. ' ' → logprob: -10.14128303527832
    6. '  ' → logprob: -11.26628303527832
    7. ']' → logprob: -11.76628303527832
    8. 'num' → logprob: -12.26628303527832
    9. 'str' → logprob: -12.76628303527832
    10. '']' → logprob: -12.89128303527832

Token 1206: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04498273879289627
    2. '']' → logprob: -3.294982671737671
    3. ']==' → logprob: -5.16998291015625
    4. '==' → logprob: -7.41998291015625
    5. ']=='' → logprob: -8.29498291015625
    6. ''' → logprob: -9.41998291015625
    7. '']==' → logprob: -9.54498291015625
    8. ' ==' → logprob: -9.79498291015625
    9. '']=='' → logprob: -9.79498291015625
    10. '[' → logprob: -10.16998291015625

Token 1207: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.034752555191516876
    2. ' ==' → logprob: -3.784752607345581
    3. '=='' → logprob: -4.909752368927002
    4. ''' → logprob: -5.534752368927002
    5. ']==' → logprob: -10.28475284576416
    6. '=' → logprob: -10.90975284576416
    7. ']' → logprob: -11.40975284576416
    8. '==
' → logprob: -11.65975284576416
    9. '   ' → logprob: -12.03475284576416
    10. ' '' → logprob: -12.03475284576416

Token 1208: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0002525184245314449
    2. '0' → logprob: -8.375252723693848
    3. ' '' → logprob: -11.625252723693848
    4. '"' → logprob: -12.000252723693848
    5. ' ' → logprob: -12.500252723693848
    6. '
' → logprob: -13.875252723693848
    7. '('' → logprob: -14.375252723693848
    8. '   ' → logprob: -14.500252723693848
    9. 'str' → logprob: -16.25025177001953
    10. '           ' → logprob: -16.25025177001953

Token 1209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03374562785029411
    2. ''' → logprob: -3.408745527267456
    3. '1' → logprob: -9.408745765686035
    4. ' ' → logprob: -12.408745765686035
    5. '')' → logprob: -12.783745765686035
    6. '9' → logprob: -12.783745765686035
    7. '"' → logprob: -13.533745765686035
    8. '`' → logprob: -14.158745765686035
    9. ''s' → logprob: -14.158745765686035
    10. '```' → logprob: -14.533745765686035

Token 1210: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.05700193718075752
    2. ''):
' → logprob: -4.057002067565918
    3. ':
' → logprob: -4.432002067565918
    4. '):
' → logprob: -4.932002067565918
    5. '       ' → logprob: -5.057002067565918
    6. '':' → logprob: -5.182002067565918
    7. ''' → logprob: -5.932002067565918
    8. ':' → logprob: -6.307002067565918
    9. ')' → logprob: -6.557002067565918
    10. '           ' → logprob: -7.807002067565918

Token 1211: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03279930353164673
    2. ':
' → logprob: -3.907799243927002
    3. ':' → logprob: -4.782799243927002
    4. '           ' → logprob: -5.657799243927002
    5. ':return' → logprob: -8.65779972076416
    6. '                   ' → logprob: -10.40779972076416
    7. '       ' → logprob: -10.65779972076416
    8. ' or' → logprob: -11.15779972076416
    9. '):
' → logprob: -11.28279972076416
    10. '                       ' → logprob: -11.53279972076416

Token 1212: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001957179047167301
    2. ' return' → logprob: -6.751957416534424
    3. 'return' (adapté à ' return') → logprob: -7.251957416534424
    4. '                   ' → logprob: -9.751956939697266
    5. '           ' → logprob: -11.501956939697266
    6. '   ' → logprob: -12.626956939697266
    7. ':return' → logprob: -13.501956939697266
    8. '
' → logprob: -13.626956939697266
    9. ':
' → logprob: -14.001956939697266
    10. '              ' → logprob: -14.376956939697266

Token 1213: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02085833251476288
    2. '       ' → logprob: -4.020858287811279
    3. '
' → logprob: -6.145858287811279
    4. '\n' → logprob: -8.520858764648438
    5. '   ' → logprob: -9.020858764648438
    6. '		' → logprob: -9.520858764648438
    7. '    
' → logprob: -10.270858764648438
    8. '        
' → logprob: -10.770858764648438
    9. '            
' → logprob: -11.145858764648438
    10. '	       ' → logprob: -11.520858764648438

Token 1214: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11631249636411667
    2. '
' → logprob: -2.4913125038146973
    3. '       ' → logprob: -3.6163125038146973
    4. '   ' → logprob: -10.116312026977539
    5. '```' → logprob: -10.616312026977539
    6. '        
' → logprob: -10.866312026977539
    7. '    
' → logprob: -11.366312026977539
    8. '            
' → logprob: -11.741312026977539
    9. '
' → logprob: -12.491312026977539
    10. '\n' → logprob: -12.866312026977539

Token 1215: ' num' (ID: 2269)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38999250531196594
    2. '       ' → logprob: -1.3899924755096436
    3. 'if' → logprob: -3.1399924755096436
    4. '
' → logprob: -4.139992713928223
    5. '   ' → logprob: -4.514992713928223
    6. ' if' → logprob: -5.639992713928223
    7. '        
' → logprob: -10.139992713928223
    8. '    
' → logprob: -10.764992713928223
    9. '            
' → logprob: -10.889992713928223
    10. '     ' → logprob: -11.139992713928223

Token 1216: ' =' (ID: 314)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.005113749299198389
    2. '_' → logprob: -5.38011360168457
    3. '_s' → logprob: -9.00511360168457
    4. ' =' → logprob: -9.88011360168457
    5. 'str' → logprob: -10.00511360168457
    6. '_val' → logprob: -10.25511360168457
    7. '=_' → logprob: -10.50511360168457
    8. '=' → logprob: -10.75511360168457
    9. '_is' → logprob: -11.25511360168457
    10. '_len' → logprob: -11.38011360168457

Token 1217: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00016241880075540394
    2. ' int' → logprob: -8.750162124633789
    3. '   ' → logprob: -12.500162124633789
    4. '       ' → logprob: -16.50016212463379
    5. '=int' → logprob: -16.50016212463379
    6. '           ' → logprob: -16.87516212463379
    7. '(int' → logprob: -17.00016212463379
    8. '[int' → logprob: -17.62516212463379
    9. '	int' → logprob: -18.12516212463379
    10. '<int' → logprob: -19.12516212463379

Token 1218: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.00046677692444063723
    2. 'num' → logprob: -7.875466823577881
    3. '(' → logprob: -9.375466346740723
    4. '(
' → logprob: -13.750466346740723
    5. ' (' → logprob: -15.250466346740723
    6. ',num' → logprob: -15.875466346740723
    7. ' num' → logprob: -15.875466346740723
    8. '=num' → logprob: -16.25046730041504
    9. '[num' → logprob: -16.37546730041504
    10. '	num' → logprob: -17.12546730041504

Token 1219: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.759734732331708e-05
    2. 'str' → logprob: -11.125017166137695
    3. ')' → logprob: -13.250017166137695
    4. '_num' → logprob: -15.000017166137695
    5. 'Str' → logprob: -15.500017166137695
    6. '   ' → logprob: -15.875017166137695
    7. '(num' → logprob: -16.250017166137695
    8. '_STR' → logprob: -16.875017166137695
    9. '(str' → logprob: -16.875017166137695
    10. 'num' → logprob: -17.250017166137695

Token 1220: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018298016861081123
    2. ')
' → logprob: -4.018298149108887
    3. '       ' → logprob: -10.268298149108887
    4. '           ' → logprob: -10.268298149108887
    5. '   ' → logprob: -10.393298149108887
    6. '())' → logprob: -11.768298149108887
    7. '
' → logprob: -11.893298149108887
    8. ',' → logprob: -12.018298149108887
    9. '):
' → logprob: -12.143298149108887
    10. '               ' → logprob: -12.393298149108887

Token 1221: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004428243264555931
    2. '       ' → logprob: -7.750442981719971
    3. '   ' → logprob: -11.875442504882812
    4. '```' → logprob: -12.875442504882812
    5. '	       ' → logprob: -14.125442504882812
    6. '<|end|>' → logprob: -14.500442504882812
    7. '               ' → logprob: -14.750442504882812
    8. ',' → logprob: -15.125442504882812
    9. '
' → logprob: -15.375442504882812
    10. '		' → logprob: -16.375442504882812

Token 1222: ' prime' (ID: 9197)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11769945919513702
    2. 'if' → logprob: -2.242699384689331
    3. ' if' → logprob: -5.86769962310791
    4. '       ' → logprob: -6.24269962310791
    5. '   ' → logprob: -10.11769962310791
    6. '
' → logprob: -10.24269962310791
    7. '               ' → logprob: -12.36769962310791
    8. '```' → logprob: -12.61769962310791
    9. '          ' → logprob: -13.61769962310791
    10. '#' → logprob: -13.74269962310791

Token 1223: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8570866584777832
    2. ' =' → logprob: -1.4820866584777832
    3. ')' → logprob: -2.107086658477783
    4. '_' → logprob: -2.857086658477783
    5. '(' → logprob: -2.982086658477783
    6. ',' → logprob: -3.607086658477783
    7. '<|end|>' → logprob: -3.982086658477783
    8. '=True' → logprob: -4.107086658477783
    9. '<|end|>' → logprob: -4.357086658477783
    10. ':' → logprob: -4.982086658477783

Token 1224: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.006716436706483364
    2. ' is' → logprob: -5.006716251373291
    3. 'True' → logprob: -14.88171672821045
    4. '   ' → logprob: -15.00671672821045
    5. '           ' → logprob: -16.756715774536133
    6. '(is' → logprob: -16.881715774536133
    7. '	is' → logprob: -16.881715774536133
    8. '       ' → logprob: -17.381715774536133
    9. 'False' → logprob: -17.881715774536133
    10. ' True' → logprob: -18.006715774536133

Token 1225: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0010650822659954429
    2. 'prime' → logprob: -6.876065254211426
    3. '_' → logprob: -11.376065254211426
    4. '
' → logprob: -11.626065254211426
    5. ' prime' → logprob: -12.876065254211426
    6. '_
' → logprob: -13.376065254211426
    7. 'Prime' → logprob: -13.626065254211426
    8. '_true' → logprob: -13.751065254211426
    9. '```' → logprob: -13.751065254211426
    10. ' _' → logprob: -13.876065254211426

Token 1226: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.009417573921382427
    2. '(' → logprob: -4.759417533874512
    3. '(
' → logprob: -7.384417533874512
    4. 'num' → logprob: -8.884417533874512
    5. '(token' → logprob: -11.384417533874512
    6. '(number' → logprob: -12.009417533874512
    7. '(x' → logprob: -12.134417533874512
    8. '[num' → logprob: -12.259417533874512
    9. ' (' → logprob: -12.384417533874512
    10. '(n' → logprob: -12.759417533874512

Token 1227: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09381316602230072
    2. '):' → logprob: -2.593813180923462
    3. '):
' → logprob: -4.218812942504883
    4. ')
' → logprob: -9.593812942504883
    5. '   ' → logprob: -12.093812942504883
    6. '       ' → logprob: -12.218812942504883
    7. '           ' → logprob: -12.218812942504883
    8. ')**' → logprob: -12.843812942504883
    9. '):

' → logprob: -13.343812942504883
    10. ')==' → logprob: -13.343812942504883

Token 1228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005822229431942105
    2. '       ' → logprob: -7.750582218170166
    3. '```' → logprob: -9.750582695007324
    4. '<|end|>' → logprob: -10.250582695007324
    5. '               ' → logprob: -11.000582695007324
    6. '   ' → logprob: -11.000582695007324
    7. '
' → logprob: -12.250582695007324
    8. ')' → logprob: -12.875582695007324
    9. '<|end|>' → logprob: -12.875582695007324
    10. ' ' → logprob: -13.000582695007324

Token 1229: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004901180975139141
    2. 'if' (adapté à ' if') → logprob: -5.50490140914917
    3. ' if' → logprob: -7.12990140914917
    4. '       ' → logprob: -10.879900932312012
    5. '   ' → logprob: -14.004900932312012
    6. '
' → logprob: -14.254900932312012
    7. '               ' → logprob: -14.629900932312012
    8. '```' → logprob: -14.754900932312012
    9. '          ' → logprob: -16.379901885986328
    10. '                   ' → logprob: -16.504901885986328

Token 1230: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.394400954246521
    2. ' prime' → logprob: -1.269400954246521
    3. 'best' → logprob: -4.3944010734558105
    4. ' (' → logprob: -4.7694010734558105
    5. ' best' → logprob: -4.8944010734558105
    6. '(pr' → logprob: -4.8944010734558105
    7. '(best' → logprob: -6.0194010734558105
    8. ' not' → logprob: -6.3944010734558105
    9. '   ' → logprob: -6.7694010734558105
    10. 'not' → logprob: -6.8944010734558105

Token 1231: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.21792609989643097
    2. ':' → logprob: -2.217926025390625
    3. 'and' → logprob: -2.967926025390625
    4. ':
' → logprob: -4.467926025390625
    5. '               ' → logprob: -4.592926025390625
    6. '           ' → logprob: -4.717926025390625
    7. '==' → logprob: -6.592926025390625
    8. '<|end|>' → logprob: -7.092926025390625
    9. '<|end|>' → logprob: -7.217926025390625
    10. ' or' → logprob: -7.467926025390625

Token 1232: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003036457928828895
    2. '           ' → logprob: -8.625303268432617
    3. ':' → logprob: -10.250303268432617
    4. ' and' → logprob: -10.375303268432617
    5. '<|end|>' → logprob: -10.625303268432617
    6. ':
' → logprob: -11.750303268432617
    7. '                   ' → logprob: -12.125303268432617
    8. ',' → logprob: -12.625303268432617
    9. '```' → logprob: -12.625303268432617
    10. '              ' → logprob: -12.875303268432617

Token 1233: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002369704656302929
    2. '               ' → logprob: -6.7523698806762695
    3. ' if' → logprob: -7.2523698806762695
    4. '           ' → logprob: -7.6273698806762695
    5. '                   ' → logprob: -13.37736988067627
    6. '#' → logprob: -14.00236988067627
    7. '   ' → logprob: -14.12736988067627
    8. '       ' → logprob: -15.37736988067627
    9. '```' → logprob: -17.252368927001953
    10. '                       ' → logprob: -17.377368927001953

Token 1234: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.0425732135772705
    2. 'best' → logprob: -1.1675732135772705
    3. '(best' → logprob: -1.9175732135772705
    4. '(not' → logprob: -2.0425732135772705
    5. ' not' → logprob: -3.1675732135772705
    6. ' best' → logprob: -4.292572975158691
    7. '           ' → logprob: -5.917572975158691
    8. ' (' → logprob: -7.417572975158691
    9. '               ' → logprob: -7.792572975158691
    10. '(True' → logprob: -10.042572975158691

Token 1235: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.001140453852713108
    2. ' best' → logprob: -7.251140594482422
    3. '(best' → logprob: -7.751140594482422
    4. '	best' → logprob: -16.501140594482422
    5. '
' → logprob: -17.751140594482422
    6. '           ' → logprob: -18.126140594482422
    7. '   ' → logprob: -18.626140594482422
    8. ' (' → logprob: -18.876140594482422
    9. 'beste' → logprob: -18.876140594482422
    10. '.best' → logprob: -19.251140594482422

Token 1236: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.008524383418262005
    2. '_num' → logprob: -4.883524417877197
    3. '_pr' → logprob: -7.758524417877197
    4. '_' → logprob: -7.758524417877197
    5. 'prime' → logprob: -10.633523941040039
    6. '_
' → logprob: -11.383523941040039
    7. '_p' → logprob: -11.633523941040039
    8. ''_' → logprob: -12.008523941040039
    9. '
' → logprob: -12.508523941040039
    10. '_prior' → logprob: -13.633523941040039

Token 1237: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.12389268726110458
    2. ':' → logprob: -2.3738927841186523
    3. 'or' → logprob: -4.748892784118652
    4. '               ' → logprob: -5.498892784118652
    5. '           ' → logprob: -5.623892784118652
    6. ':
' → logprob: -5.748892784118652
    7. '                   ' → logprob: -5.873892784118652
    8. '                       ' → logprob: -8.373892784118652
    9. ' and' → logprob: -8.498892784118652
    10. ')' → logprob: -9.373892784118652

Token 1238: ' (' (ID: 350)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4742416739463806
    2. 'num' → logprob: -1.5992417335510254
    3. '(len' → logprob: -2.2242417335510254
    4. 'int' → logprob: -3.5992417335510254
    5. '(num' → logprob: -3.5992417335510254
    6. '(int' → logprob: -4.849241733551025
    7. ' len' → logprob: -6.099241733551025
    8. ' (' → logprob: -6.974241733551025
    9. ' num' → logprob: -7.599241733551025
    10. '(' → logprob: -8.099241256713867

Token 1239: 'best' (ID: 17844)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.008424387313425541
    2. 'len' → logprob: -4.883424282073975
    3. 'int' → logprob: -7.383424282073975
    4. '(num' → logprob: -9.383424758911133
    5. ' num' → logprob: -9.633424758911133
    6. 'prime' → logprob: -11.133424758911133
    7. '
' → logprob: -11.383424758911133
    8. 'pos' → logprob: -12.133424758911133
    9. '(len' → logprob: -12.758424758911133
    10. '   ' → logprob: -13.133424758911133

Token 1240: '_prime' (ID: 98616)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.1188913881778717
    2. '_prime' → logprob: -2.243891477584839
    3. 'prime' → logprob: -6.36889123916626
    4. 'num' → logprob: -6.49389123916626
    5. '_' → logprob: -6.74389123916626
    6. '_token' → logprob: -7.61889123916626
    7. ')' → logprob: -8.368891716003418
    8. '_pr' → logprob: -8.743891716003418
    9. '   ' → logprob: -9.493891716003418
    10. '_str' → logprob: -9.868891716003418

Token 1241: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3872285783290863
    2. 'and' → logprob: -1.1372286081314087
    3. '==' → logprob: -8.262228965759277
    4. ')' → logprob: -10.387228965759277
    5. '
' → logprob: -10.762228965759277
    6. '           ' → logprob: -11.262228965759277
    7. '   ' → logprob: -12.012228965759277
    8. '=' → logprob: -12.137228965759277
    9. '               ' → logprob: -12.762228965759277
    10. '       ' → logprob: -13.012228965759277

Token 1242: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.014316986314952374
    2. 'len' → logprob: -4.889317035675049
    3. 'int' → logprob: -5.014317035675049
    4. ' num' → logprob: -10.38931655883789
    5. '(num' → logprob: -12.13931655883789
    6. '
' → logprob: -12.63931655883789
    7. '   ' → logprob: -13.13931655883789
    8. ' int' → logprob: -13.76431655883789
    9. 'n' → logprob: -14.38931655883789
    10. ' len' → logprob: -14.51431655883789

Token 1243: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.17985467612743378
    2. ' >' → logprob: -1.8048546314239502
    3. ')' → logprob: -10.054854393005371
    4. '   ' → logprob: -10.679854393005371
    5. '>
' → logprob: -11.054854393005371
    6. '               ' → logprob: -12.679854393005371
    7. ' ' → logprob: -12.679854393005371
    8. ' >
' → logprob: -12.679854393005371
    9. '<|end|>' → logprob: -12.804854393005371
    10. '                   ' → logprob: -12.929854393005371

Token 1244: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14484116435050964
    2. 'best' → logprob: -2.019841194152832
    3. 'num' → logprob: -6.394841194152832
    4. ' int' → logprob: -8.269841194152832
    5. ' best' → logprob: -10.144841194152832
    6. '
' → logprob: -10.144841194152832
    7. '   ' → logprob: -10.144841194152832
    8. 'max' → logprob: -10.519841194152832
    9. '(int' → logprob: -11.019841194152832
    10. '(best' → logprob: -11.519841194152832

Token 1245: '(best' (ID: 118299)
  Prédit: '(best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(best' → logprob: -0.011048408225178719
    2. 'best' → logprob: -4.511048316955566
    3. ' best' → logprob: -14.886048316955566
    4. '(' → logprob: -15.886048316955566
    5. '	best' → logprob: -16.386049270629883
    6. ')' → logprob: -17.011049270629883
    7. '(build' → logprob: -17.886049270629883
    8. '(
' → logprob: -18.886049270629883
    9. '```' → logprob: -19.636049270629883
    10. '
' → logprob: -19.761049270629883

Token 1246: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -4.36574100604048e-06
    2. '_str' → logprob: -13.500004768371582
    3. '_' → logprob: -13.625004768371582
    4. 'num' → logprob: -14.125004768371582
    5. '_)' → logprob: -15.375004768371582
    6. 'Num' → logprob: -16.125003814697266
    7. '_
' → logprob: -16.125003814697266
    8. '_n' → logprob: -16.375003814697266
    9. '_nums' → logprob: -16.500003814697266
    10. ')' → logprob: -16.750003814697266

Token 1247: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.31851306557655334
    2. ')):' → logprob: -2.1935131549835205
    3. '):
' → logprob: -2.1935131549835205
    4. '):' → logprob: -3.0685131549835205
    5. '))' → logprob: -6.568512916564941
    6. ')' → logprob: -7.068512916564941
    7. ')):
' → logprob: -7.693512916564941
    8. '           ' → logprob: -9.318512916564941
    9. ':' → logprob: -9.443512916564941
    10. '               ' → logprob: -9.568512916564941

Token 1248: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011855114251375198
    2. '                       ' → logprob: -4.886855125427246
    3. '               ' → logprob: -6.011855125427246
    4. ':' → logprob: -7.011855125427246
    5. ':
' → logprob: -7.511855125427246
    6. '):
' → logprob: -9.636855125427246
    7. '):' → logprob: -9.761855125427246
    8. '                           ' → logprob: -10.011855125427246
    9. '           ' → logprob: -10.136855125427246
    10. '                  ' → logprob: -10.386855125427246

Token 1249: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.41575393080711365
    2. ' best' → logprob: -1.165753960609436
    3. '                       ' → logprob: -3.6657538414001465
    4. '                   ' → logprob: -6.0407538414001465
    5. '               ' → logprob: -8.040754318237305
    6. '	best' → logprob: -9.290754318237305
    7. '(best' → logprob: -11.165754318237305
    8. '                    ' → logprob: -11.165754318237305
    9. '           ' → logprob: -11.540754318237305
    10. '_best' → logprob: -11.540754318237305

Token 1250: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.00012844942102674395
    2. '_' → logprob: -9.000128746032715
    3. ' _' → logprob: -13.750128746032715
    4. '_n' → logprob: -14.000128746032715
    5. 'num' → logprob: -14.125128746032715
    6. '_nums' → logprob: -14.750128746032715
    7. '_prime' → logprob: -15.250128746032715
    8. '_NUM' → logprob: -15.375128746032715
    9. '_token' → logprob: -15.500128746032715
    10. '_str' → logprob: -15.875128746032715

Token 1251: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003177952254191041
    2. ' =' → logprob: -5.753178119659424
    3. '=
' → logprob: -15.753177642822266
    4. '=

' → logprob: -17.003177642822266
    5. '    ' → logprob: -17.378177642822266
    6. '＝' → logprob: -17.878177642822266
    7. '   ' → logprob: -18.128177642822266
    8. ')' → logprob: -19.378177642822266
    9. ' =
' → logprob: -20.003177642822266
    10. '=}' → logprob: -20.253177642822266

Token 1252: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0014057096559554338
    2. 'str' → logprob: -7.001405715942383
    3. ' num' → logprob: -7.626405715942383
    4. '   ' → logprob: -12.376405715942383
    5. ' str' → logprob: -13.251405715942383
    6. '`' → logprob: -14.876405715942383
    7. ' ' → logprob: -16.251405715942383
    8. '	num' → logprob: -16.751405715942383
    9. '    ' → logprob: -16.876405715942383
    10. '           ' → logprob: -17.001405715942383

Token 1253: '_str' (ID: 6182)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9975813627243042
    2. '                   ' → logprob: -1.1225813627243042
    3. '               ' → logprob: -1.2475813627243042
    4. '<|end|>' → logprob: -4.997581481933594
    5. '       ' → logprob: -5.372581481933594
    6. ')' → logprob: -5.747581481933594
    7. '<|end|>' → logprob: -6.997581481933594
    8. '                ' → logprob: -7.872581481933594
    9. '                       ' → logprob: -7.997581481933594
    10. '   ' → logprob: -7.997581481933594

Token 1254: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6992367506027222
    2. '           ' → logprob: -1.3242367506027222
    3. '                   ' → logprob: -1.4492367506027222
    4. '       ' → logprob: -7.324236869812012
    5. ')' → logprob: -7.574236869812012
    6. '                       ' → logprob: -8.449236869812012
    7. '                ' → logprob: -8.699236869812012
    8. '		' → logprob: -9.324236869812012
    9. '[' → logprob: -9.574236869812012
    10. '                    
' → logprob: -9.949236869812012

Token 1255: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07952568680047989
    2. '               ' → logprob: -2.5795257091522217
    3. '           ' → logprob: -7.579525470733643
    4. '<|end|>' → logprob: -10.4545259475708
    5. '                       ' → logprob: -10.7045259475708
    6. ')' → logprob: -10.8295259475708
    7. '```' → logprob: -10.8295259475708
    8. '                  ' → logprob: -12.0795259475708
    9. '                    
' → logprob: -12.0795259475708
    10. '       ' → logprob: -12.3295259475708

Token 1256: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.21236777305603027
    2. '                   ' → logprob: -1.7123677730560303
    3. ' best' → logprob: -5.337368011474609
    4. '           ' → logprob: -5.712368011474609
    5. '               ' → logprob: -5.962368011474609
    6. '       ' → logprob: -9.71236801147461
    7. '                       ' → logprob: -9.83736801147461
    8. '   ' → logprob: -9.96236801147461
    9. '	best' → logprob: -11.46236801147461
    10. '                  ' → logprob: -11.83736801147461

Token 1257: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0002833848411682993
    2. '_' → logprob: -8.375283241271973
    3. '_token' → logprob: -10.625283241271973
    4. '_num' → logprob: -12.000283241271973
    5. '
' → logprob: -12.125283241271973
    6. '_prior' → logprob: -13.000283241271973
    7. '_
' → logprob: -13.250283241271973
    8. 'prime' → logprob: -13.250283241271973
    9. '_pr' → logprob: -13.500283241271973
    10. '<|end|>' → logprob: -13.875283241271973

Token 1258: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005323412362486124
    2. ' =' → logprob: -5.38032341003418
    3. '=True' → logprob: -7.38032341003418
    4. '                   ' → logprob: -10.50532341003418
    5. '               ' → logprob: -11.13032341003418
    6. '=
' → logprob: -11.50532341003418
    7. '                       ' → logprob: -11.88032341003418
    8. '=False' → logprob: -12.63032341003418
    9. '                ' → logprob: -13.00532341003418
    10. '<|end|>' → logprob: -13.00532341003418

Token 1259: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0004306692280806601
    2. ' True' → logprob: -7.750430583953857
    3. '   ' → logprob: -17.875431060791016
    4. '(True' → logprob: -18.625431060791016
    5. '=True' → logprob: -20.375431060791016
    6. 'False' → logprob: -22.625431060791016
    7. 'Tr' → logprob: -22.750431060791016
    8. 'true' → logprob: -23.250431060791016
    9. '                   ' → logprob: -23.375431060791016
    10. 'T' → logprob: -23.375431060791016

Token 1260: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.775320291519165
    2. '           ' → logprob: -0.900320291519165
    3. '               ' → logprob: -2.025320291519165
    4. '       ' → logprob: -6.900320053100586
    5. '   ' → logprob: -11.275320053100586
    6. 'return' → logprob: -11.400320053100586
    7. '                       ' → logprob: -11.650320053100586
    8. '
' → logprob: -13.275320053100586
    9. '		' → logprob: -13.400320053100586
    10. '		           ' → logprob: -13.900320053100586

Token 1261: '           ' (ID: 352)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6952378153800964
    2. '           ' → logprob: -0.9452378153800964
    3. '               ' → logprob: -2.195237874984741
    4. '       ' → logprob: -6.820237636566162
    5. 'return' → logprob: -11.32023811340332
    6. '```' → logprob: -11.82023811340332
    7. '   ' → logprob: -12.57023811340332
    8. '                       ' → logprob: -12.57023811340332
    9. '		' → logprob: -12.69523811340332
    10. '		           ' → logprob: -13.82023811340332

Token 1262: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19442887604236603
    2. 'else' (adapté à ' else') → logprob: -1.9444289207458496
    3. '               ' → logprob: -3.9444289207458496
    4. '                   ' → logprob: -5.06942892074585
    5. ' else' → logprob: -5.44442892074585
    6. '       ' → logprob: -6.06942892074585
    7. 'return' → logprob: -6.81942892074585
    8. 'elif' → logprob: -8.569428443908691
    9. '   ' → logprob: -10.319428443908691
    10. ' return' → logprob: -11.569428443908691

Token 1263: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3837421238422394
    2. ':' → logprob: -1.633742094039917
    3. '           ' → logprob: -2.258742094039917
    4. ':
' → logprob: -4.008742332458496
    5. '<|end|>' → logprob: -8.883742332458496
    6. ',' → logprob: -9.133742332458496
    7. '                   ' → logprob: -9.258742332458496
    8. ' and' → logprob: -9.383742332458496
    9. ' if' → logprob: -9.383742332458496
    10. '              ' → logprob: -10.008742332458496

Token 1264: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.348580539226532
    2. '           ' → logprob: -1.2235805988311768
    3. '       ' → logprob: -9.973580360412598
    4. 'if' → logprob: -10.348580360412598
    5. '   ' → logprob: -11.223580360412598
    6. '```' → logprob: -11.223580360412598
    7. ' if' → logprob: -11.348580360412598
    8. '                   ' → logprob: -12.223580360412598
    9. '              ' → logprob: -12.473580360412598
    10. '	       ' → logprob: -13.098580360412598

Token 1265: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4067937433719635
    2. '               ' → logprob: -1.4067937135696411
    3. ' if' → logprob: -2.5317938327789307
    4. '           ' → logprob: -4.656793594360352
    5. '   ' → logprob: -8.906793594360352
    6. '                   ' → logprob: -9.531793594360352
    7. '	if' → logprob: -11.531793594360352
    8. '       ' → logprob: -11.531793594360352
    9. '              ' → logprob: -11.531793594360352
    10. ' ' → logprob: -11.781793594360352

Token 1266: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07055606693029404
    2. 'not' → logprob: -2.945556163787842
    3. '(not' → logprob: -4.820556163787842
    4. ' best' → logprob: -5.695556163787842
    5. ' (' → logprob: -5.945556163787842
    6. '   ' → logprob: -7.070556163787842
    7. 'best' → logprob: -7.695556163787842
    8. '(best' → logprob: -9.070555686950684
    9. '(' → logprob: -9.570555686950684
    10. ' ' → logprob: -11.945555686950684

Token 1267: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.048588622361421585
    2. ' best' → logprob: -3.048588514328003
    3. '(best' → logprob: -14.298588752746582
    4. '	best' → logprob: -14.923588752746582
    5. '
' → logprob: -16.423587799072266
    6. '   ' → logprob: -16.423587799072266
    7. '           ' → logprob: -16.673587799072266
    8. 'b' → logprob: -17.423587799072266
    9. '_best' → logprob: -17.923587799072266
    10. 'Best' → logprob: -18.548587799072266

Token 1268: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0015446186298504472
    2. '_num' → logprob: -6.50154447555542
    3. 'prime' → logprob: -10.501544952392578
    4. '_' → logprob: -11.501544952392578
    5. 'num' → logprob: -13.251544952392578
    6. '_pr' → logprob: -14.376544952392578
    7. 'Prime' → logprob: -14.751544952392578
    8. '```' → logprob: -15.251544952392578
    9. ''_' → logprob: -15.251544952392578
    10. '
' → logprob: -15.501544952392578

Token 1269: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.011432097293436527
    2. 'or' → logprob: -4.51143217086792
    3. ' and' → logprob: -9.011431694030762
    4. '               ' → logprob: -9.136431694030762
    5. '           ' → logprob: -10.011431694030762
    6. ':' → logprob: -10.261431694030762
    7. '                   ' → logprob: -10.511431694030762
    8. 'and' → logprob: -11.386431694030762
    9. ':
' → logprob: -12.011431694030762
    10. '   ' → logprob: -12.136431694030762

Token 1270: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003751744283363223
    2. '               ' → logprob: -6.253751754760742
    3. '                       ' → logprob: -6.503751754760742
    4. '<|end|>' → logprob: -10.003751754760742
    5. '	               ' → logprob: -10.253751754760742
    6. '                  ' → logprob: -10.378751754760742
    7. ' if' → logprob: -10.503751754760742
    8. ' and' → logprob: -10.628751754760742
    9. '                    ' → logprob: -10.878751754760742
    10. '		           ' → logprob: -10.878751754760742

Token 1271: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9822462201118469
    2. 'num' → logprob: -1.1072461605072021
    3. ' if' → logprob: -1.4822461605072021
    4. ' num' → logprob: -3.107246160507202
    5. '                   ' → logprob: -4.232246398925781
    6. '               ' → logprob: -6.107246398925781
    7. 'n' → logprob: -6.232246398925781
    8. 'b' → logprob: -6.232246398925781
    9. '                       ' → logprob: -7.357246398925781
    10. '   ' → logprob: -7.482246398925781

Token 1272: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.614286482334137
    2. 'num' → logprob: -1.4892864227294922
    3. ' best' → logprob: -2.489286422729492
    4. ' num' → logprob: -2.489286422729492
    5. 'int' → logprob: -3.114286422729492
    6. ' int' → logprob: -4.239286422729492
    7. '   ' → logprob: -5.864286422729492
    8. '                   ' → logprob: -6.239286422729492
    9. '               ' → logprob: -6.614286422729492
    10. '           ' → logprob: -7.239286422729492

Token 1273: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.007259458303451538
    2. '_' → logprob: -5.007259368896484
    3. '_n' → logprob: -8.757259368896484
    4. 'num' → logprob: -8.757259368896484
    5. '_str' → logprob: -9.507259368896484
    6. ' _' → logprob: -10.507259368896484
    7. '_digits' → logprob: -10.632259368896484
    8. '_nums' → logprob: -10.757259368896484
    9. '_digit' → logprob: -11.507259368896484
    10. 'Num' → logprob: -11.757259368896484

Token 1274: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.019377898424863815
    2. 'is' → logprob: -4.144377708435059
    3. '==' → logprob: -6.019377708435059
    4. '=None' → logprob: -8.144377708435059
    5. '                    ' → logprob: -8.644377708435059
    6. '                   ' → logprob: -9.144377708435059
    7. '=' → logprob: -9.394377708435059
    8. '                       ' → logprob: -9.644377708435059
    9. '                        ' → logprob: -10.519377708435059
    10. ')' → logprob: -10.644377708435059

Token 1275: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00010986098641296849
    2. ' None' → logprob: -9.125109672546387
    3. 'N' → logprob: -14.750109672546387
    4. '   ' → logprob: -15.750109672546387
    5. '                       ' → logprob: -16.125110626220703
    6. '                   ' → logprob: -16.750110626220703
    7. '=None' → logprob: -17.250110626220703
    8. '_None' → logprob: -17.250110626220703
    9. '(None' → logprob: -17.500110626220703
    10. '                               ' → logprob: -17.750110626220703

Token 1276: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.007983716204762459
    2. 'or' → logprob: -5.257983684539795
    3. '                   ' → logprob: -6.382983684539795
    4. '                       ' → logprob: -7.007983684539795
    5. '                    ' → logprob: -9.257984161376953
    6. '                        ' → logprob: -11.257984161376953
    7. '                      ' → logprob: -11.882984161376953
    8. '               ' → logprob: -12.257984161376953
    9. '           ' → logprob: -12.382984161376953
    10. '                  ' → logprob: -12.507984161376953

Token 1277: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.22552725672721863
    2. ' num' → logprob: -1.725527286529541
    3. 'int' → logprob: -3.850527286529541
    4. ' int' → logprob: -5.975527286529541
    5. '   ' → logprob: -11.850526809692383
    6. '                   ' → logprob: -12.725526809692383
    7. '               ' → logprob: -13.600526809692383
    8. '    ' → logprob: -13.850526809692383
    9. '	num' → logprob: -13.850526809692383
    10. 'len' → logprob: -14.100526809692383

Token 1278: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5232551693916321
    2. '>' → logprob: -0.8982551693916321
    3. '>
' → logprob: -9.898255348205566
    4. ' >
' → logprob: -10.023255348205566
    5. '                   ' → logprob: -11.148255348205566
    6. '                       ' → logprob: -12.148255348205566
    7. '                    ' → logprob: -12.398255348205566
    8. ' ' → logprob: -13.148255348205566
    9. '   ' → logprob: -13.648255348205566
    10. ')' → logprob: -13.648255348205566

Token 1279: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031804447062313557
    2. ' int' → logprob: -5.753180503845215
    3. 'best' → logprob: -12.878180503845215
    4. '   ' → logprob: -16.3781795501709
    5. ' best' → logprob: -16.5031795501709
    6. '(int' → logprob: -18.6281795501709
    7. '=int' → logprob: -18.6281795501709
    8. '           ' → logprob: -18.7531795501709
    9. '                   ' → logprob: -19.3781795501709
    10. '               ' → logprob: -19.3781795501709

Token 1280: '(best' (ID: 118299)
  Prédit: '(best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(best' → logprob: -0.011048170737922192
    2. 'best' → logprob: -4.511048316955566
    3. ' best' → logprob: -15.511048316955566
    4. '	best' → logprob: -16.63604736328125
    5. '(' → logprob: -18.13604736328125
    6. '(b' → logprob: -19.51104736328125
    7. '-best' → logprob: -20.26104736328125
    8. '.best' → logprob: -20.88604736328125
    9. '(
' → logprob: -21.13604736328125
    10. 'Best' → logprob: -21.26104736328125

Token 1281: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -2.165027217415627e-05
    2. 'best' → logprob: -12.250021934509277
    3. 'num' → logprob: -12.375021934509277
    4. '_str' → logprob: -12.750021934509277
    5. '(best' → logprob: -12.875021934509277
    6. 'Num' → logprob: -13.250021934509277
    7. ')' → logprob: -13.375021934509277
    8. '_best' → logprob: -13.750021934509277
    9. '```' → logprob: -14.000021934509277
    10. '_NUM' → logprob: -14.750021934509277

Token 1282: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04512574523687363
    2. '):' → logprob: -3.295125722885132
    3. ')' → logprob: -5.420125961303711
    4. '                       ' → logprob: -6.545125961303711
    5. '                   ' → logprob: -6.920125961303711
    6. '       ' → logprob: -9.670125961303711
    7. '               ' → logprob: -9.920125961303711
    8. ':
' → logprob: -10.795125961303711
    9. ''):
' → logprob: -11.045125961303711
    10. '):
' → logprob: -11.295125961303711

Token 1283: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.003185198176652193
    2. '                   ' → logprob: -6.128185272216797
    3. '                           ' → logprob: -8.128185272216797
    4. '                        ' → logprob: -8.503185272216797
    5. '                        
' → logprob: -8.878185272216797
    6. '                    ' → logprob: -9.378185272216797
    7. '                      ' → logprob: -9.753185272216797
    8. '               ' → logprob: -10.128185272216797
    9. '```' → logprob: -10.253185272216797
    10. '                               ' → logprob: -10.878185272216797

Token 1284: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.3589979410171509
    2. ' best' → logprob: -1.3589979410171509
    3. '                       ' → logprob: -3.1089978218078613
    4. '	best' → logprob: -10.98399829864502
    5. '                   ' → logprob: -11.35899829864502
    6. '                           ' → logprob: -11.48399829864502
    7. '   ' → logprob: -11.98399829864502
    8. '               ' → logprob: -12.23399829864502
    9. '           ' → logprob: -12.60899829864502
    10. '       ' → logprob: -13.23399829864502

Token 1285: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0002585978072602302
    2. '_' → logprob: -8.500258445739746
    3. ' _' → logprob: -10.375258445739746
    4. '_n' → logprob: -11.625258445739746
    5. '_str' → logprob: -11.875258445739746
    6. '=' → logprob: -12.875258445739746
    7. 'num' → logprob: -13.500258445739746
    8. '_=' → logprob: -14.750258445739746
    9. ' =' → logprob: -14.875258445739746
    10. '_nums' → logprob: -14.875258445739746

Token 1286: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14267969131469727
    2. ' =' → logprob: -2.0176796913146973
    3. ')' → logprob: -13.767679214477539
    4. '<|end|>' → logprob: -14.017679214477539
    5. '                        ' → logprob: -14.892679214477539
    6. ' ' → logprob: -15.017679214477539
    7. '＝' → logprob: -15.142679214477539
    8. '_' → logprob: -15.267679214477539
    9. ',' → logprob: -15.642679214477539
    10. '=
' → logprob: -15.767679214477539

Token 1287: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.20141714811325073
    2. ' num' → logprob: -1.7014172077178955
    3. 'str' → logprob: -13.451416969299316
    4. '	num' → logprob: -14.201416969299316
    5. '(num' → logprob: -14.826416969299316
    6. ''' → logprob: -15.201416969299316
    7. '[num' → logprob: -15.451416969299316
    8. '"' → logprob: -16.076417922973633
    9. '=num' → logprob: -16.076417922973633
    10. '                   ' → logprob: -16.451417922973633

Token 1288: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.06458992511034012
    2. '_' → logprob: -3.4395899772644043
    3. ''' → logprob: -4.439589977264404
    4. 'str' → logprob: -4.564589977264404
    5. '"' → logprob: -6.064589977264404
    6. ' ' → logprob: -6.314589977264404
    7. ')' → logprob: -7.064589977264404
    8. 'Str' → logprob: -7.689589977264404
    9. '   ' → logprob: -8.064589500427246
    10. '_
' → logprob: -8.314589500427246

Token 1289: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2715185880661011
    2. '       ' → logprob: -1.646518588066101
    3. '                       ' → logprob: -3.3965187072753906
    4. '               ' → logprob: -5.021518707275391
    5. '                   ' → logprob: -5.521518707275391
    6. '   ' → logprob: -7.521518707275391
    7. '                        
' → logprob: -8.89651870727539
    8. '        
' → logprob: -9.89651870727539
    9. '            
' → logprob: -10.27151870727539
    10. '                           ' → logprob: -10.39651870727539

Token 1290: '           ' (ID: 352)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.25087711215019226
    2. '           ' → logprob: -2.2508771419525146
    3. '               ' → logprob: -2.6258771419525146
    4. '                   ' → logprob: -4.0008769035339355
    5. '                        
' → logprob: -4.0008769035339355
    6. '       ' → logprob: -5.1258769035339355
    7. '```' → logprob: -7.3758769035339355
    8. '            
' → logprob: -8.625877380371094
    9. '<|end|>' → logprob: -9.125877380371094
    10. '                    
' → logprob: -9.125877380371094

Token 1291: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6329468488693237
    2. '       ' → logprob: -0.7579468488693237
    3. '           ' → logprob: -8.507946968078613
    4. '    
' → logprob: -9.507946968078613
    5. '        
' → logprob: -10.882946968078613
    6. '
' → logprob: -11.382946968078613
    7. '	return' → logprob: -11.632946968078613
    8. '\t' → logprob: -11.882946968078613
    9. 'return' (adapté à ' return') → logprob: -12.132946968078613
    10. ' return' → logprob: -12.257946968078613

Token 1292: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004338614176958799
    2. '   ' → logprob: -5.62933874130249
    3. '        
' → logprob: -7.50433874130249
    4. '
' → logprob: -9.254338264465332
    5. '    
' → logprob: -9.754338264465332
    6. '```' → logprob: -10.504338264465332
    7. '	' → logprob: -13.254338264465332
    8. '            
' → logprob: -13.879338264465332
    9. '​' → logprob: -14.254338264465332
    10. '``' → logprob: -15.254338264465332

Token 1293: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003647353034466505
    2. '       ' → logprob: -5.878647327423096
    3. '    
' → logprob: -7.878647327423096
    4. ' for' → logprob: -8.253647804260254
    5. 'for' → logprob: -9.128647804260254
    6. '        
' → logprob: -10.378647804260254
    7. '
' → logprob: -10.378647804260254
    8. '```' → logprob: -10.628647804260254
    9. '   ' → logprob: -13.003647804260254
    10. '	for' → logprob: -13.378647804260254

Token 1294: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07994132488965988
    2. '   ' → logprob: -2.5799412727355957
    3. ' for' → logprob: -6.954941272735596
    4. '       ' → logprob: -9.954941749572754
    5. '	for' → logprob: -10.079941749572754
    6. '```' → logprob: -12.204941749572754
    7. '    
' → logprob: -13.704941749572754
    8. '
' → logprob: -13.954941749572754
    9. '        
' → logprob: -15.079941749572754
    10. '   ' → logprob: -15.329941749572754

Token 1295: ' try' (ID: 2075)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.729906196298543e-06
    2. '   ' → logprob: -12.250009536743164
    3. ' for' → logprob: -12.250009536743164
    4. '       ' → logprob: -17.125009536743164
    5. '	for' → logprob: -17.625009536743164
    6. '
' → logprob: -18.250009536743164
    7. '        
' → logprob: -19.750009536743164
    8. '    
' → logprob: -20.125009536743164
    9. 'fo' → logprob: -21.000009536743164
    10. 'd' → logprob: -21.125009536743164

Token 1296: ' digits' (ID: 37806)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.002817358821630478
    2. 'd' → logprob: -6.252817153930664
    3. ' ' → logprob: -7.502817153930664
    4. '   ' → logprob: -8.752817153930664
    5. 'digit' → logprob: -9.252817153930664
    6. ' d' → logprob: -10.752817153930664
    7. 'digits' → logprob: -10.877817153930664
    8. 'for' → logprob: -11.252817153930664
    9. 'i' → logprob: -11.377817153930664
    10. 'range' → logprob: -11.627817153930664

Token 1297: ' from' (ID: 591)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.17283932864665985
    2. ' ' → logprob: -2.297839403152466
    3. '(' → logprob: -3.547839403152466
    4. ' in' → logprob: -4.547839164733887
    5. 'for' → logprob: -5.172839164733887
    6. ' =' → logprob: -5.672839164733887
    7. ' for' → logprob: -6.047839164733887
    8. 'in' → logprob: -6.172839164733887
    9. '=' → logprob: -6.422839164733887
    10. '   ' → logprob: -6.922839164733887

Token 1298: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -15.875006675720215
    4. '
' → logprob: -19.62500762939453
    5. '  ' → logprob: -20.50000762939453
    6. '    ' → logprob: -21.25000762939453
    7. '     ' → logprob: -21.50000762939453
    8. '۹' → logprob: -21.50000762939453
    9. '```' → logprob: -21.75000762939453
    10. '`' → logprob: -22.00000762939453

Token 1299: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -16.500001907348633
    4. '
' → logprob: -19.500001907348633
    5. '  ' → logprob: -20.125001907348633
    6. '۹' → logprob: -20.250001907348633
    7. '９' → logprob: -21.000001907348633
    8. '९' → logprob: -21.125001907348633
    9. '```' → logprob: -21.375001907348633
    10. '    ' → logprob: -21.625001907348633

Token 1300: ' down' (ID: 1917)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.09144985675811768
    2. 'to' → logprob: -3.091449737548828
    3. ' down' → logprob: -3.466449737548828
    4. ',' → logprob: -5.341449737548828
    5. ' ' → logprob: -5.841449737548828
    6. 'down' → logprob: -7.466449737548828
    7. '   ' → logprob: -7.716449737548828
    8. '-' → logprob: -8.091449737548828
    9. '<|end|>' → logprob: -8.091449737548828
    10. ' -' → logprob: -8.216449737548828

Token 1301: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4336269199848175
    2. ' to' → logprob: -1.0586268901824951
    3. '       ' → logprob: -6.058627128601074
    4. '   ' → logprob: -6.683627128601074
    5. '0' → logprob: -8.558627128601074
    6. 'for' → logprob: -8.558627128601074
    7. '    ' → logprob: -8.808627128601074
    8. ' ' → logprob: -9.058627128601074
    9. ',' → logprob: -9.433627128601074
    10. '9' → logprob: -9.808627128601074

Token 1302: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.862962229410186e-05
    2. '0' → logprob: -9.500078201293945
    3. ' ' → logprob: -12.500078201293945
    4. '   ' → logprob: -18.750078201293945
    5. '
' → logprob: -18.875078201293945
    6. '```' → logprob: -21.000078201293945
    7. ')' → logprob: -21.250078201293945
    8. ''' → logprob: -21.750078201293945
    9. '  ' → logprob: -22.125078201293945
    10. '1' → logprob: -22.250078201293945

Token 1303: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2014467716217041
    2. '9' → logprob: -1.701446771621704
    3. ' ' → logprob: -10.326446533203125
    4. '
' → logprob: -14.451446533203125
    5. '   ' → logprob: -15.951446533203125
    6. '```' → logprob: -16.451446533203125
    7. ')' → logprob: -17.201446533203125
    8. '  ' → logprob: -18.326446533203125
    9. '09' → logprob: -18.951446533203125
    10. 'd' → logprob: -18.951446533203125

Token 1304: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29229411482810974
    2. '   ' → logprob: -2.0422940254211426
    3. ':
' → logprob: -2.6672940254211426
    4. ' for' → logprob: -3.5422940254211426
    5. '       ' → logprob: -4.167294025421143
    6. '        
' → logprob: -6.292294025421143
    7. ' :' → logprob: -6.292294025421143
    8. '    
' → logprob: -6.542294025421143
    9. 'for' → logprob: -6.667294025421143
    10. '
' → logprob: -7.417294025421143

Token 1305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1730385720729828
    2. '   ' → logprob: -2.5480384826660156
    3. ':' → logprob: -3.0480384826660156
    4. '        
' → logprob: -4.673038482666016
    5. ' for' → logprob: -4.798038482666016
    6. ':
' → logprob: -5.173038482666016
    7. '    
' → logprob: -5.798038482666016
    8. ' 
' → logprob: -6.298038482666016
    9. ' ' → logprob: -6.798038482666016
    10. '
' → logprob: -7.048038482666016

Token 1306: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49558722972869873
    2. ' for' → logprob: -1.1205872297286987
    3. '   ' → logprob: -3.3705873489379883
    4. 'for' (adapté à ' for') → logprob: -4.370587348937988
    5. ' 
' → logprob: -5.120587348937988
    6. '
' → logprob: -5.495587348937988
    7. '        
' → logprob: -6.120587348937988
    8. 'd' → logprob: -6.120587348937988
    9. ' ' → logprob: -7.495587348937988
    10. '    
' → logprob: -7.620587348937988

Token 1307: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.029798507690429688
    2. ' d' → logprob: -3.5297985076904297
    3. 'digit' → logprob: -10.02979850769043
    4. ' digit' → logprob: -12.90479850769043
    5. '9' → logprob: -14.02979850769043
    6. 'dig' → logprob: -15.40479850769043
    7. ' ' → logprob: -15.90479850769043
    8. '   ' → logprob: -15.90479850769043
    9. 'i' → logprob: -16.52979850769043
    10. '	d' → logprob: -17.02979850769043

Token 1308: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01843460276722908
    2. 'in' → logprob: -4.018434524536133
    3. ' i' → logprob: -9.268434524536133
    4. ' ' → logprob: -9.518434524536133
    5. 'i' → logprob: -10.768434524536133
    6. '_' → logprob: -11.018434524536133
    7. ' ' → logprob: -11.018434524536133
    8. 'd' → logprob: -11.268434524536133
    9. 'n' → logprob: -11.518434524536133
    10. '=' → logprob: -11.768434524536133

Token 1309: ' range' (ID: 3352)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.6444644927978516
    2. 'range' → logprob: -1.0194644927978516
    3. ' range' → logprob: -2.2694644927978516
    4. '[' → logprob: -5.394464492797852
    5. ' ' → logprob: -5.519464492797852
    6. ' reversed' → logprob: -6.769464492797852
    7. 're' → logprob: -7.394464492797852
    8. ' [' → logprob: -8.019464492797852
    9. '   ' → logprob: -8.519464492797852
    10. '(range' → logprob: -11.144464492797852

Token 1310: '(' (ID: 7)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -18.125
    4. '
' → logprob: -21.125
    5. '۹' → logprob: -21.25
    6. '९' → logprob: -21.875
    7. '```' → logprob: -22.25
    8. ',' → logprob: -22.5
    9. '９' → logprob: -22.5
    10. '  ' → logprob: -22.75

Token 1311: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. ' ' → logprob: -20.5
    3. '۹' → logprob: -21.0
    4. '９' → logprob: -21.0
    5. '९' → logprob: -21.375
    6. '   ' → logprob: -22.0
    7. '৯' → logprob: -23.0
    8. 'nine' → logprob: -23.0
    9. '٩' → logprob: -23.125
    10. '```' → logprob: -24.375

Token 1312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016945181414484978
    2. ' ,' → logprob: -8.87516975402832
    3. ',-' → logprob: -11.12516975402832
    4. ',
' → logprob: -11.25016975402832
    5. ',d' → logprob: -13.62516975402832
    6. ' ,-' → logprob: -16.37516975402832
    7. ',\
' → logprob: -16.75016975402832
    8. '-' → logprob: -17.00016975402832
    9. '‌,' → logprob: -17.00016975402832
    10. 'd' → logprob: -17.12516975402832

Token 1313: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00022034443099983037
    2. ' -' → logprob: -8.50022029876709
    3. 'd' → logprob: -11.12522029876709
    4. '
' → logprob: -13.50022029876709
    5. '-d' → logprob: -15.25022029876709
    6. '   ' → logprob: -15.62522029876709
    7. ' ' → logprob: -15.87522029876709
    8. '-
' → logprob: -16.125221252441406
    9. ' d' → logprob: -17.125221252441406
    10. '     ' → logprob: -17.250221252441406

Token 1314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.87500286102295
    3. ',' → logprob: -15.75000286102295
    4. '=' → logprob: -16.000003814697266
    5. '
' → logprob: -16.250003814697266
    6. ':' → logprob: -17.375003814697266
    7. ')' → logprob: -17.500003814697266
    8. '   ' → logprob: -17.500003814697266
    9. ' -' → logprob: -17.937503814697266
    10. '...' → logprob: -18.875003814697266

Token 1315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09960763901472092
    2. ',-' → logprob: -2.8496077060699463
    3. '-' → logprob: -3.3496077060699463
    4. ' -' → logprob: -7.099607467651367
    5. ' ,' → logprob: -7.224607467651367
    6. ',
' → logprob: -8.849607467651367
    7. '-,' → logprob: -9.849607467651367
    8. ' ,-' → logprob: -10.349607467651367
    9. '<|end|>' → logprob: -11.099607467651367
    10. ',-
' → logprob: -11.724607467651367

Token 1316: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001398929744027555
    2. ' -' → logprob: -8.875140190124512
    3. ')' → logprob: -17.250139236450195
    4. 'd' → logprob: -17.875139236450195
    5. '-d' → logprob: -18.000139236450195
    6. '−' → logprob: -18.500139236450195
    7. '):
' → logprob: -18.625139236450195
    8. '-
' → logprob: -18.750139236450195
    9. '   ' → logprob: -19.125139236450195
    10. ')-' → logprob: -19.375139236450195

Token 1317: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '
' → logprob: -20.75
    4. ')' → logprob: -21.0
    5. '   ' → logprob: -21.125
    6. ' -' → logprob: -21.25
    7. '```' → logprob: -21.375
    8. '0' → logprob: -21.5
    9. '-' → logprob: -21.875
    10. '2' → logprob: -22.0

Token 1318: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04408146068453789
    2. '):' → logprob: -3.169081449508667
    3. '       ' → logprob: -7.919081687927246
    4. ':' → logprob: -8.169081687927246
    5. '):
' → logprob: -8.919081687927246
    6. ':
' → logprob: -9.294081687927246
    7. '   ' → logprob: -9.794081687927246
    8. '           ' → logprob: -9.919081687927246
    9. '():
' → logprob: -10.419081687927246
    10. ',' → logprob: -11.169081687927246

Token 1319: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5836353302001953
    2. '       ' → logprob: -0.8336353302001953
    3. '   ' → logprob: -6.083635330200195
    4. '        
' → logprob: -6.583635330200195
    5. ' if' → logprob: -7.208635330200195
    6. '        ' → logprob: -7.708635330200195
    7. '<|end|>' → logprob: -7.708635330200195
    8. '               ' → logprob: -7.833635330200195
    9. '	       ' → logprob: -8.208635330200195
    10. '[' → logprob: -8.583635330200195

Token 1320: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0551704466342926
    2. '           ' → logprob: -3.3051705360412598
    3. ' b' → logprob: -4.80517053604126
    4. '       ' → logprob: -4.80517053604126
    5. '   ' → logprob: -8.305170059204102
    6. ' if' → logprob: -9.430170059204102
    7. '               ' → logprob: -9.430170059204102
    8. 'if' → logprob: -9.680170059204102
    9. 'd' → logprob: -10.055170059204102
    10. '	b' → logprob: -10.430170059204102

Token 1321: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -6.034592388459714e-06
    2. 'digits' → logprob: -12.125005722045898
    3. '_d' → logprob: -16.1250057220459
    4. 'Digits' → logprob: -16.2500057220459
    5. '_digit' → logprob: -16.6250057220459
    6. '_' → logprob: -16.6250057220459
    7. 'b' → logprob: -16.8750057220459
    8. 'igits' → logprob: -16.8750057220459
    9. '.append' → logprob: -17.2500057220459
    10. '   ' → logprob: -17.2500057220459

Token 1322: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.158350151963532e-05
    2. '[pos' → logprob: -10.500061988830566
    3. 'append' → logprob: -10.875061988830566
    4. '.app' → logprob: -11.875061988830566
    5. '_append' → logprob: -12.625061988830566
    6. '.' → logprob: -13.125061988830566
    7. 'Append' → logprob: -13.250061988830566
    8. ' append' → logprob: -14.625061988830566
    9. '.Append' → logprob: -15.875061988830566
    10. '.ap' → logprob: -16.37506103515625

Token 1323: '(d' (ID: 2572)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0005530327325686812
    2. ' d' → logprob: -7.500553131103516
    3. '	d' → logprob: -17.000553131103516
    4. '(d' → logprob: -18.000553131103516
    5. ')d' → logprob: -18.625553131103516
    6. '
' → logprob: -19.000553131103516
    7. '   ' → logprob: -22.250553131103516
    8. '_d' → logprob: -22.500553131103516
    9. '[d' → logprob: -22.625553131103516
    10. '\d' → logprob: -22.875553131103516

Token 1324: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00978182628750801
    2. ')
' → logprob: -4.634781837463379
    3. '           ' → logprob: -11.134781837463379
    4. '<|end|>' → logprob: -12.884781837463379
    5. ')return' → logprob: -13.134781837463379
    6. ');' → logprob: -13.509781837463379
    7. '<|end|>' → logprob: -14.009781837463379
    8. '):
' → logprob: -14.134781837463379
    9. ')
' → logprob: -14.134781837463379
    10. '       ' → logprob: -14.134781837463379

Token 1325: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03950166702270508
    2. '            
' → logprob: -4.414501667022705
    3. '<|end|>' → logprob: -4.539501667022705
    4. '               ' → logprob: -4.914501667022705
    5. '       ' → logprob: -6.289501667022705
    6. '```' → logprob: -7.039501667022705
    7. '    
' → logprob: -7.164501667022705
    8. '   ' → logprob: -7.289501667022705
    9. '
' → logprob: -7.539501667022705
    10. '        
' → logprob: -7.539501667022705

Token 1326: ' #' (ID: 1069)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0016224568244069815
    2. ' dfs' → logprob: -7.251622676849365
    3. '           ' → logprob: -7.376622676849365
    4. 'if' → logprob: -8.251622200012207
    5. '#' (adapté à ' #') → logprob: -11.251622200012207
    6. '
' → logprob: -12.501622200012207
    7. 'df' → logprob: -12.876622200012207
    8. ' if' → logprob: -13.126622200012207
    9. '       ' → logprob: -13.251622200012207
    10. '               ' → logprob: -14.626622200012207

Token 1327: ' pruning' (ID: 135775)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.017107533290982246
    2. 'if' → logprob: -4.1421074867248535
    3. '#' → logprob: -7.5171074867248535
    4. '           ' → logprob: -7.6421074867248535
    5. ' dfs' → logprob: -10.892107963562012
    6. '       ' → logprob: -11.267107963562012
    7. '   ' → logprob: -12.517107963562012
    8. ' if' → logprob: -12.642107963562012
    9. '               ' → logprob: -13.017107963562012
    10. '
' → logprob: -13.642107963562012

Token 1328: ':' (ID: 25)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6625996232032776
    2. ' if' → logprob: -0.7875996232032776
    3. '           ' → logprob: -3.537599563598633
    4. '#' → logprob: -8.912599563598633
    5. '            
' → logprob: -9.037599563598633
    6. '<|end|>' → logprob: -9.662599563598633
    7. ' =' → logprob: -10.787599563598633
    8. '<|end|>' → logprob: -11.037599563598633
    9. ',' → logprob: -11.412599563598633
    10. '       ' → logprob: -11.412599563598633

Token 1329: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0001805377542041242
    2. ' if' → logprob: -9.3751802444458
    3. '           ' → logprob: -9.7501802444458
    4. '#' → logprob: -10.2501802444458
    5. 'continue' → logprob: -13.6251802444458
    6. '            
' → logprob: -15.1251802444458
    7. '```' → logprob: -15.6251802444458
    8. 'valid' → logprob: -15.8751802444458
    9. '
' → logprob: -16.250181198120117
    10. 'pass' → logprob: -16.750181198120117

Token 1330: ' first' (ID: 1577)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.33699458837509155
    2. 'b' → logprob: -2.0869946479797363
    3. 'not' → logprob: -2.8369946479797363
    4. 'best' → logprob: -3.8369946479797363
    5. 'len' → logprob: -4.086994647979736
    6. 'd' → logprob: -4.086994647979736
    7. ' pos' → logprob: -4.211994647979736
    8. ' not' → logprob: -4.336994647979736
    9. 'c' → logprob: -4.961994647979736
    10. 'n' → logprob: -5.461994647979736

Token 1331: ' digit' (ID: 19181)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2814817428588867
    2. 'b' → logprob: -1.5314817428588867
    3. '==' → logprob: -4.531481742858887
    4. ' ==' → logprob: -5.156481742858887
    5. ' pos' → logprob: -5.406481742858887
    6. 'd' → logprob: -5.906481742858887
    7. 'digit' → logprob: -6.406481742858887
    8. 'position' → logprob: -6.531481742858887
    9. ' b' → logprob: -7.156481742858887
    10. 'token' → logprob: -7.781481742858887

Token 1332: ' zero' (ID: 12421)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08738205581903458
    2. ' ==' → logprob: -2.8373820781707764
    3. '!=' → logprob: -4.587381839752197
    4. '           ' → logprob: -5.087381839752197
    5. 'pos' → logprob: -5.212381839752197
    6. ' !=' → logprob: -6.212381839752197
    7. '               ' → logprob: -7.462381839752197
    8. 'b' → logprob: -8.087382316589355
    9. 'and' → logprob: -9.087382316589355
    10. ' and' → logprob: -9.837382316589355

Token 1333: ' at' (ID: 540)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5705404877662659
    2. '           ' → logprob: -1.320540428161621
    3. '               ' → logprob: -2.945540428161621
    4. 'and' → logprob: -2.945540428161621
    5. ':
' → logprob: -3.195540428161621
    6. ':' → logprob: -4.445540428161621
    7. ' ==' → logprob: -5.195540428161621
    8. ' or' → logprob: -6.445540428161621
    9. '==' → logprob: -6.445540428161621
    10. ',' → logprob: -8.320540428161621

Token 1334: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.18297410011291504
    2. '0' → logprob: -1.807974100112915
    3. 'position' → logprob: -5.807973861694336
    4. ' pos' → logprob: -9.057973861694336
    5. 'b' → logprob: -9.682973861694336
    6. ' ' → logprob: -11.807973861694336
    7. '==' → logprob: -11.807973861694336
    8. '#' → logprob: -12.807973861694336
    9. '   ' → logprob: -12.807973861694336
    10. 'positions' → logprob: -12.807973861694336

Token 1335: '=' (ID: 28)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47650036215782166
    2. ' ==' → logprob: -0.976500391960144
    3. '0' → logprob: -6.851500511169434
    4. '           ' → logprob: -7.726500511169434
    5. ' !=' → logprob: -7.976500511169434
    6. '=' → logprob: -8.601500511169434
    7. '!=' → logprob: -8.851500511169434
    8. '               ' → logprob: -9.851500511169434
    9. ')' → logprob: -10.476500511169434
    10. ' =' → logprob: -10.851500511169434

Token 1336: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.375000953674316
    3. '=' → logprob: -14.500000953674316
    4. '1' → logprob: -16.250001907348633
    5. '==' → logprob: -16.750001907348633
    6. '```' → logprob: -17.625001907348633
    7. '>' → logprob: -18.562501907348633
    8. '
' → logprob: -18.937501907348633
    9. '[' → logprob: -18.937501907348633
    10. '#' → logprob: -19.000001907348633

Token 1337: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6720049977302551
    2. ' and' → logprob: -1.6720049381256104
    3. '           ' → logprob: -1.7970049381256104
    4. ':
' → logprob: -2.5470049381256104
    5. ':' → logprob: -3.1720049381256104
    6. 'and' → logprob: -4.7970051765441895
    7. ' or' → logprob: -5.4220051765441895
    8. ',' → logprob: -7.0470051765441895
    9. ' ==' → logprob: -7.7970051765441895
    10. '==' → logprob: -8.172004699707031

Token 1338: ' skip' (ID: 16677)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04788944125175476
    2. 'b' → logprob: -3.297889471054077
    3. ' b' → logprob: -5.047889232635498
    4. 'continue' → logprob: -6.047889232635498
    5. ' continue' → logprob: -7.672889232635498
    6. 'return' → logprob: -8.297889709472656
    7. 'break' → logprob: -9.172889709472656
    8. '           ' → logprob: -9.422889709472656
    9. ' return' → logprob: -9.922889709472656
    10. '              ' → logprob: -11.297889709472656

Token 1339: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002679463941603899
    2. '               ' → logprob: -6.002679347991943
    3. ' if' → logprob: -9.627679824829102
    4. '            
' → logprob: -10.127679824829102
    5. 'if' → logprob: -10.877679824829102
    6. '                   ' → logprob: -11.127679824829102
    7. '                       ' → logprob: -11.127679824829102
    8. '       ' → logprob: -11.627679824829102
    9. 'continue' → logprob: -12.002679824829102
    10. ',' → logprob: -12.002679824829102

Token 1340: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0628945380449295
    2. '               ' → logprob: -2.812894582748413
    3. '            
' → logprob: -7.937894344329834
    4. '		' → logprob: -8.687894821166992
    5. '                   ' → logprob: -9.437894821166992
    6. '                       ' → logprob: -9.937894821166992
    7. '<|end|>' → logprob: -10.062894821166992
    8. '                           ' → logprob: -10.562894821166992
    9. '       ' → logprob: -10.687894821166992
    10. ' 
' → logprob: -11.062894821166992

Token 1341: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003253335307817906
    2. 'if' (adapté à ' if') → logprob: -8.750325202941895
    3. ' if' → logprob: -8.750325202941895
    4. '               ' → logprob: -12.250325202941895
    5. '
' → logprob: -13.500325202941895
    6. '   ' → logprob: -14.500325202941895
    7. '       ' → logprob: -14.500325202941895
    8. '            
' → logprob: -15.125325202941895
    9. '                       ' → logprob: -15.250325202941895
    10. '                   ' → logprob: -15.500325202941895

Token 1342: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2759287655353546
    2. 'b' → logprob: -1.5259287357330322
    3. 'd' → logprob: -4.150928974151611
    4. ' pos' → logprob: -5.150928974151611
    5. ' b' → logprob: -6.650928974151611
    6. ' d' → logprob: -7.900928974151611
    7. '           ' → logprob: -7.900928974151611
    8. 'len' → logprob: -10.525928497314453
    9. '   ' → logprob: -10.775928497314453
    10. '       ' → logprob: -10.775928497314453

Token 1343: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2844197154045105
    2. ' ==' → logprob: -1.4094197750091553
    3. ' !=' → logprob: -6.409419536590576
    4. '!=' → logprob: -6.909419536590576
    5. '=' → logprob: -8.784420013427734
    6. '>' → logprob: -8.784420013427734
    7. ' ' → logprob: -9.409420013427734
    8. '0' → logprob: -9.659420013427734
    9. ' >' → logprob: -10.159420013427734
    10. '===' → logprob: -10.784420013427734

Token 1344: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029625516617670655
    2. ' ' → logprob: -8.125296592712402
    3. '=' → logprob: -15.500296592712402
    4. '   ' → logprob: -17.250295639038086
    5. '1' → logprob: -18.125295639038086
    6. '
' → logprob: -18.125295639038086
    7. '```' → logprob: -18.875295639038086
    8. '           ' → logprob: -19.250295639038086
    9. '[' → logprob: -19.500295639038086
    10. '#' → logprob: -19.625295639038086

Token 1345: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '۰' → logprob: -19.75
    4. '=' → logprob: -21.25
    5. '1' → logprob: -21.875
    6. '00' → logprob: -22.25
    7. '০' → logprob: -22.25
    8. '   ' → logprob: -22.625
    9. '<|end|>' → logprob: -22.75
    10. '[' → logprob: -22.875

Token 1346: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.701322078704834
    2. 'and' → logprob: -0.701322078704834
    3. '               ' → logprob: -4.826322078704834
    4. '	and' → logprob: -9.576322555541992
    5. '           ' → logprob: -10.951322555541992
    6. '              ' → logprob: -11.951322555541992
    7. ':
' → logprob: -12.076322555541992
    8. '==' → logprob: -12.201322555541992
    9. ' ' → logprob: -12.201322555541992
    10. '   ' → logprob: -12.451322555541992

Token 1347: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10924319922924042
    2. 'b' → logprob: -2.359243154525757
    3. ' d' → logprob: -4.859243392944336
    4. ' b' → logprob: -6.734243392944336
    5. '           ' → logprob: -10.109243392944336
    6. '   ' → logprob: -12.984243392944336
    7. '               ' → logprob: -13.234243392944336
    8. '       ' → logprob: -13.484243392944336
    9. '                   ' → logprob: -14.109243392944336
    10. '	d' → logprob: -14.484243392944336

Token 1348: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00848479475826025
    2. ' ==' → logprob: -5.258484840393066
    3. '!=' → logprob: -5.758484840393066
    4. ' !=' → logprob: -9.758484840393066
    5. '==
' → logprob: -11.133484840393066
    6. '=' → logprob: -12.258484840393066
    7. ')==' → logprob: -12.508484840393066
    8. '0' → logprob: -12.883484840393066
    9. ']==' → logprob: -13.008484840393066
    10. '	' → logprob: -13.508484840393066

Token 1349: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '۰' → logprob: -19.75
    4. '<|end|>' → logprob: -20.875
    5. '```' → logprob: -21.75
    6. '০' → logprob: -22.125
    7. '   ' → logprob: -22.25
    8. '
' → logprob: -22.625
    9. '０' → logprob: -22.75
    10. '٠' → logprob: -23.0

Token 1350: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '۰' → logprob: -19.75
    4. '০' → logprob: -22.0
    5. '   ' → logprob: -22.375
    6. '०' → logprob: -22.625
    7. '٠' → logprob: -22.75
    8. '```' → logprob: -22.75
    9. '０' → logprob: -23.0625
    10. '<|end|>' → logprob: -23.25

Token 1351: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22961273789405823
    2. ':
' → logprob: -1.6046127080917358
    3. ':' → logprob: -5.729612827301025
    4. '           ' → logprob: -7.354612827301025
    5. '):
' → logprob: -8.854612350463867
    6. '<|end|>' → logprob: -10.854612350463867
    7. '                   ' → logprob: -10.979612350463867
    8. '	           ' → logprob: -11.229612350463867
    9. '                       ' → logprob: -11.354612350463867
    10. ',' → logprob: -11.354612350463867

Token 1352: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011350970016792417
    2. ':
' → logprob: -7.126134872436523
    3. ':' → logprob: -8.376134872436523
    4. '           ' → logprob: -10.126134872436523
    5. '                   ' → logprob: -11.376134872436523
    6. '```' → logprob: -11.376134872436523
    7. ',' → logprob: -11.501134872436523
    8. '<|end|>' → logprob: -12.251134872436523
    9. 'b' → logprob: -12.751134872436523
    10. '):
' → logprob: -12.751134872436523

Token 1353: ' b' (ID: 287)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.47763463854789734
    2. 'b' (adapté à ' b') → logprob: -0.9776346683502197
    3. ' b' → logprob: -5.852634429931641
    4. '           ' → logprob: -7.352634429931641
    5. '   ' → logprob: -11.10263442993164
    6. '                   ' → logprob: -11.47763442993164
    7. '             ' → logprob: -12.22763442993164
    8. '              ' → logprob: -12.97763442993164
    9. '            ' → logprob: -13.60263442993164
    10. '                ' → logprob: -13.72763442993164

Token 1354: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -3.531315314830863e-06
    2. 'igits' → logprob: -13.125003814697266
    3. 'digits' → logprob: -14.000003814697266
    4. '_tokens' → logprob: -15.500003814697266
    5. 'Digits' → logprob: -16.125003814697266
    6. '               ' → logprob: -16.250003814697266
    7. '_d' → logprob: -16.375003814697266
    8. '           ' → logprob: -16.500003814697266
    9. '_' → logprob: -17.500003814697266
    10. '                   ' → logprob: -17.625003814697266

Token 1355: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -2.3915141355246305e-05
    2. 'pop' → logprob: -10.75002384185791
    3. '.' → logprob: -13.00002384185791
    4. '	pop' → logprob: -16.375024795532227
    5. '_pop' → logprob: -16.875024795532227
    6. ' .' → logprob: -17.375024795532227
    7. ' pop' → logprob: -17.500024795532227
    8. '.Pop' → logprob: -17.500024795532227
    9. '(pop' → logprob: -17.875024795532227
    10. 'Pop' → logprob: -18.000024795532227

Token 1356: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000766148732509464
    2. 'continue' → logprob: -7.500766277313232
    3. '           ' → logprob: -9.000765800476074
    4. ' continue' → logprob: -9.875765800476074
    5. '                   ' → logprob: -10.875765800476074
    6. '	continue' → logprob: -12.000765800476074
    7. '
' → logprob: -12.875765800476074
    8. '	           ' → logprob: -13.250765800476074
    9. '                       ' → logprob: -13.250765800476074
    10. '		       ' → logprob: -13.875765800476074

Token 1357: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.9888433093437925e-05
    2. '           ' → logprob: -11.000040054321289
    3. 'continue' → logprob: -11.375040054321289
    4. '                   ' → logprob: -12.000040054321289
    5. '```' → logprob: -12.875040054321289
    6. '<|end|>' → logprob: -14.125040054321289
    7. ' continue' → logprob: -14.500040054321289
    8. '       ' → logprob: -14.625040054321289
    9. '                       ' → logprob: -15.375040054321289
    10. 'Continu' → logprob: -15.750040054321289

Token 1358: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.3875177502632141
    2. '               ' → logprob: -1.1375176906585693
    3. ' continue' → logprob: -7.387517929077148
    4. '	continue' → logprob: -11.137517929077148
    5. '_continue' → logprob: -12.012517929077148
    6. '                   ' → logprob: -13.137517929077148
    7. 'continu' → logprob: -13.262517929077148
    8. '           ' → logprob: -13.262517929077148
    9. 'contin' → logprob: -14.887517929077148
    10. 'Continue' → logprob: -15.387517929077148

Token 1359: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002895834331866354
    2. 'b' → logprob: -8.375289916992188
    3. '<|end|>' → logprob: -10.375289916992188
    4. '```' → logprob: -11.875289916992188
    5. '       ' → logprob: -12.500289916992188
    6. 'continue' → logprob: -12.500289916992188
    7. '   ' → logprob: -12.625289916992188
    8. ' b' → logprob: -12.625289916992188
    9. '               ' → logprob: -13.250289916992188
    10. 'd' → logprob: -13.375289916992188

Token 1360: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002850998193025589
    2. 'b' → logprob: -5.8778510093688965
    3. '```' → logprob: -11.002850532531738
    4. ' b' → logprob: -11.377850532531738
    5. '   ' → logprob: -12.252850532531738
    6. '       ' → logprob: -12.377850532531738
    7. '<|end|>' → logprob: -13.002850532531738
    8. 'continue' → logprob: -13.502850532531738
    9. '            
' → logprob: -13.877850532531738
    10. 'd' → logprob: -14.002850532531738

Token 1361: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06976012140512466
    2. '#' (adapté à ' #') → logprob: -3.5697600841522217
    3. 'if' → logprob: -3.8197600841522217
    4. 'dfs' → logprob: -4.069760322570801
    5. '            
' → logprob: -9.4447603225708
    6. 'b' → logprob: -9.6947603225708
    7. '       ' → logprob: -10.3197603225708
    8. 'elif' → logprob: -11.3197603225708
    9. 'df' → logprob: -12.5697603225708
    10. '```' → logprob: -12.8197603225708

Token 1362: ' later' (ID: 4849)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6686729788780212
    2. 'if' → logprob: -1.418673038482666
    3. 'dfs' → logprob: -1.793673038482666
    4. '           ' → logprob: -2.543673038482666
    5. 'b' → logprob: -8.043672561645508
    6. '            
' → logprob: -9.668672561645508
    7. ' if' → logprob: -10.043672561645508
    8. '       ' → logprob: -10.168672561645508
    9. 'If' → logprob: -10.293672561645508
    10. ' #' → logprob: -10.418672561645508

Token 1363: ' pruning' (ID: 135775)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2700018584728241
    2. 'b' → logprob: -2.2700018882751465
    3. 'if' → logprob: -2.6450018882751465
    4. ' if' → logprob: -2.8950018882751465
    5. 'digits' → logprob: -6.3950018882751465
    6. '               ' → logprob: -6.7700018882751465
    7. ':' → logprob: -7.1450018882751465
    8. 'continue' → logprob: -7.5200018882751465
    9. '#' → logprob: -7.7700018882751465
    10. ':
' → logprob: -7.8950018882751465

Token 1364: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007486367831006646
    2. 'if' → logprob: -7.750748634338379
    3. ' if' → logprob: -8.750748634338379
    4. 'b' → logprob: -9.875748634338379
    5. '       ' → logprob: -9.875748634338379
    6. '<|end|>' → logprob: -10.500748634338379
    7. '#' → logprob: -11.625748634338379
    8. '   ' → logprob: -12.375748634338379
    9. '               ' → logprob: -12.500748634338379
    10. ',' → logprob: -13.250748634338379

Token 1365: ' last' (ID: 2174)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1928735375404358
    2. '           ' → logprob: -3.192873477935791
    3. ' b' → logprob: -3.567873477935791
    4. 'the' → logprob: -3.567873477935791
    5. 'pos' → logprob: -3.567873477935791
    6. 'len' → logprob: -4.192873477935791
    7. ' the' → logprob: -4.442873477935791
    8. 'if' → logprob: -5.567873477935791
    9. '       ' → logprob: -5.692873477935791
    10. 'valid' → logprob: -6.192873477935791

Token 1366: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.7738611102104187
    2. '_digits' → logprob: -1.5238611698150635
    3. 'digits' → logprob: -1.8988611698150635
    4. '_digit' → logprob: -2.0238611698150635
    5. ' digit' → logprob: -4.648860931396484
    6. ' digits' → logprob: -4.773860931396484
    7. 'if' → logprob: -5.273860931396484
    8. 'd' → logprob: -5.648860931396484
    9. 'b' → logprob: -5.773860931396484
    10. '   ' → logprob: -6.273860931396484

Token 1367: ' will' (ID: 738)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001971577061340213
    2. 'b' → logprob: -6.75197172164917
    3. '<|end|>' → logprob: -8.626971244812012
    4. ',' → logprob: -8.751971244812012
    5. '       ' → logprob: -9.126971244812012
    6. '   ' → logprob: -9.876971244812012
    7. ',
' → logprob: -10.251971244812012
    8. ')' → logprob: -10.376971244812012
    9. '               ' → logprob: -10.626971244812012
    10. ' if' → logprob: -10.626971244812012

Token 1368: ' happen' (ID: 5659)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.27388280630111694
    2. 'h' → logprob: -1.6488828659057617
    3. ' happen' → logprob: -4.648882865905762
    4. 'occur' → logprob: -4.773882865905762
    5. 'continue' → logprob: -5.023882865905762
    6. 'not' → logprob: -5.148882865905762
    7. ' be' → logprob: -5.148882865905762
    8. 'come' → logprob: -5.773882865905762
    9. 'fail' → logprob: -6.523882865905762
    10. 'skip' → logprob: -6.523882865905762

Token 1369: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.968934758333489e-05
    2. '       ' → logprob: -10.375069618225098
    3. 'b' → logprob: -11.000069618225098
    4. '<|end|>' → logprob: -11.625069618225098
    5. '<|end|>' → logprob: -12.625069618225098
    6. '               ' → logprob: -13.125069618225098
    7. '   ' → logprob: -13.250069618225098
    8. 'd' → logprob: -13.375069618225098
    9. 'continue' → logprob: -14.000069618225098
    10. '```' → logprob: -14.125069618225098

Token 1370: ' end' (ID: 1268)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.16821493208408356
    2. 'return' → logprob: -2.168215036392212
    3. 'the' → logprob: -4.043214797973633
    4. 'end' → logprob: -4.418214797973633
    5. 'n' → logprob: -5.293214797973633
    6. 'completion' → logprob: -5.668214797973633
    7. 'final' → logprob: -7.418214797973633
    8. 'dfs' → logprob: -7.668214797973633
    9. 'next' → logprob: -7.793214797973633
    10. 'depth' → logprob: -7.918214797973633

Token 1371: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00028493450372479856
    2. '<|end|>' → logprob: -8.750285148620605
    3. '```' → logprob: -10.250285148620605
    4. 'b' → logprob: -10.500285148620605
    5. '       ' → logprob: -10.625285148620605
    6. '   ' → logprob: -11.000285148620605
    7. '               ' → logprob: -12.000285148620605
    8. '<|end|>' → logprob: -12.500285148620605
    9. '            
' → logprob: -13.125285148620605
    10. '          ' → logprob: -13.500285148620605

Token 1372: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.845798710244708e-05
    2. 'b' → logprob: -10.625038146972656
    3. '       ' → logprob: -12.125038146972656
    4. '```' → logprob: -12.750038146972656
    5. '<|end|>' → logprob: -13.500038146972656
    6. '               ' → logprob: -13.625038146972656
    7. '		' → logprob: -14.125038146972656
    8. '          ' → logprob: -14.625038146972656
    9. '   ' → logprob: -14.625038146972656
    10. '	       ' → logprob: -15.000038146972656

Token 1373: ' dfs' (ID: 51252)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007648983504623175
    2. 'b' → logprob: -4.882648944854736
    3. ' b' → logprob: -10.882649421691895
    4. '       ' → logprob: -11.257649421691895
    5. 'if' → logprob: -13.007649421691895
    6. '   ' → logprob: -13.007649421691895
    7. '               ' → logprob: -13.382649421691895
    8. 'd' → logprob: -13.507649421691895
    9. 'continue' → logprob: -13.757649421691895
    10. '```' → logprob: -14.132649421691895

Token 1374: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.00010604646377032623
    2. '(' → logprob: -9.500105857849121
    3. '(
' → logprob: -11.250105857849121
    4. 'pos' → logprob: -12.000105857849121
    5. ',pos' → logprob: -12.750105857849121
    6. '(len' → logprob: -12.875105857849121
    7. ' (' → logprob: -13.000105857849121
    8. '[pos' → logprob: -13.750105857849121
    9. ' pos' → logprob: -14.500105857849121
    10. '(position' → logprob: -14.500105857849121

Token 1375: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1002068892121315
    2. ' +' → logprob: -2.3502068519592285
    3. '+
' → logprob: -15.975207328796387
    4. '＋' → logprob: -16.97520637512207
    5. ' +
' → logprob: -18.60020637512207
    6. '()+' → logprob: -19.35020637512207
    7. ' plus' → logprob: -19.35020637512207
    8. '   ' → logprob: -19.85020637512207
    9. '1' → logprob: -20.10020637512207
    10. ',' → logprob: -20.60020637512207

Token 1376: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.253713218029588e-05
    2. ' ' → logprob: -9.750062942504883
    3. '   ' → logprob: -13.250062942504883
    4. ')' → logprob: -13.750062942504883
    5. 'n' → logprob: -14.500062942504883
    6. ',' → logprob: -14.625062942504883
    7. '```' → logprob: -15.875062942504883
    8. ' n' → logprob: -16.250062942504883
    9. '           ' → logprob: -16.750062942504883
    10. '       ' → logprob: -16.875062942504883

Token 1377: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.12500286102295
    3. '   ' → logprob: -15.50000286102295
    4. 'len' → logprob: -16.500001907348633
    5. 'n' → logprob: -16.750001907348633
    6. ')' → logprob: -16.750001907348633
    7. '
' → logprob: -17.250001907348633
    8. '0' → logprob: -17.500001907348633
    9. '```' → logprob: -17.500001907348633
    10. 'b' → logprob: -17.687501907348633

Token 1378: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007540722843259573
    2. ',b' → logprob: -6.007540702819824
    3. ')' → logprob: -6.382540702819824
    4. '           ' → logprob: -6.507540702819824
    5. '       ' → logprob: -7.132540702819824
    6. 'b' → logprob: -7.882540702819824
    7. '   ' → logprob: -8.632540702819824
    8. '(' → logprob: -9.132540702819824
    9. ',
' → logprob: -9.632540702819824
    10. '<|end|>' → logprob: -9.757540702819824

Token 1379: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02325887233018875
    2. ' b' → logprob: -3.773258924484253
    3. '           ' → logprob: -12.273259162902832
    4. '        ' → logprob: -12.773259162902832
    5. '    ' → logprob: -13.398259162902832
    6. '       ' → logprob: -13.773259162902832
    7. '          ' → logprob: -14.023259162902832
    8. ')b' → logprob: -14.273259162902832
    9. '            ' → logprob: -14.398259162902832
    10. '   ' → logprob: -14.523259162902832

Token 1380: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.0007865179213695228
    2. 'digits' → logprob: -7.375786304473877
    3. 'igits' → logprob: -8.750786781311035
    4. 'Digits' → logprob: -13.625786781311035
    5. '```' → logprob: -15.875786781311035
    6. '[' → logprob: -16.37578582763672
    7. '_tokens' → logprob: -16.62578582763672
    8. ' digits' → logprob: -17.12578582763672
    9. '_bits' → logprob: -17.87578582763672
    10. '_letters' → logprob: -18.12578582763672

Token 1381: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.44781962037086487
    2. ')
' → logprob: -1.4478195905685425
    3. ')' → logprob: -2.072819709777832
    4. ')b' → logprob: -10.447819709777832
    5. '       ' → logprob: -11.322819709777832
    6. '               ' → logprob: -11.822819709777832
    7. 'b' → logprob: -12.197819709777832
    8. '                   ' → logprob: -12.697819709777832
    9. '   ' → logprob: -13.197819709777832
    10. '          ' → logprob: -13.322819709777832

Token 1382: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011415231710998341
    2. 'b' → logprob: -9.125114440917969
    3. '```' → logprob: -12.500114440917969
    4. '       ' → logprob: -13.750114440917969
    5. '	       ' → logprob: -16.00011444091797
    6. '		' → logprob: -16.00011444091797
    7. '   ' → logprob: -16.25011444091797
    8. '               ' → logprob: -17.00011444091797
    9. '          ' → logprob: -17.37511444091797
    10. '                   ' → logprob: -17.75011444091797

Token 1383: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.5764095187187195
    2. '           ' → logprob: -0.8264095187187195
    3. ' b' → logprob: -7.826409339904785
    4. '       ' → logprob: -9.701409339904785
    5. '   ' → logprob: -12.201409339904785
    6. '          ' → logprob: -13.201409339904785
    7. '```' → logprob: -13.451409339904785
    8. '	b' → logprob: -14.326409339904785
    9. '               ' → logprob: -15.451409339904785
    10. '		' → logprob: -15.701409339904785

Token 1384: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -6.511406809295295e-06
    2. 'igits' → logprob: -12.125006675720215
    3. '_letters' → logprob: -15.000006675720215
    4. 'digits' → logprob: -15.750006675720215
    5. '[-' → logprob: -16.0000057220459
    6. '_tokens' → logprob: -16.5000057220459
    7. 'Digits' → logprob: -17.1250057220459
    8. '\' → logprob: -17.1250057220459
    9. '_pixels' → logprob: -17.1250057220459
    10. 'pop' → logprob: -17.2500057220459

Token 1385: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -3.6789137084269896e-05
    2. '.append' → logprob: -10.75003719329834
    3. '.' → logprob: -11.25003719329834
    4. 'pop' → logprob: -13.12503719329834
    5. '_pop' → logprob: -15.62503719329834
    6. '	pop' → logprob: -17.000036239624023
    7. '.remove' → logprob: -17.125036239624023
    8. '.Pop' → logprob: -17.375036239624023
    9. '.p' → logprob: -18.500036239624023
    10. ' .' → logprob: -18.625036239624023

Token 1386: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1387: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23665566742420197
    2. '   ' → logprob: -1.6116557121276855
    3. '
' → logprob: -5.3616557121276855
    4. 'main' → logprob: -5.9866557121276855
    5. ' if' → logprob: -6.8616557121276855
    6. 'return' → logprob: -6.9866557121276855
    7. '    
' → logprob: -7.1116557121276855
    8. 'dfs' → logprob: -7.4866557121276855
    9. '```' → logprob: -8.111655235290527
    10. 'print' → logprob: -8.736655235290527

Token 1388: ' dfs' (ID: 51252)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5776268839836121
    2. 'dfs' (adapté à ' dfs') → logprob: -0.8276268839836121
    3. '
' → logprob: -6.577626705169678
    4. '    
' → logprob: -9.327627182006836
    5. 'if' → logprob: -9.452627182006836
    6. '```' → logprob: -9.702627182006836
    7. ' dfs' → logprob: -10.827627182006836
    8. 'def' → logprob: -10.952627182006836
    9. '#' → logprob: -11.202627182006836
    10. 'd' → logprob: -12.327627182006836

Token 1389: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.7697225252486533e-06
    2. '0' → logprob: -13.000003814697266
    3. '(n' → logprob: -14.250003814697266
    4. '(
' → logprob: -14.375003814697266
    5. ' (' → logprob: -15.750003814697266
    6. '```' → logprob: -19.125003814697266
    7. '(pos' → logprob: -19.625003814697266
    8. '(len' → logprob: -19.750003814697266
    9. '(None' → logprob: -20.625003814697266
    10. '()' → logprob: -20.750003814697266

Token 1390: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. 'n' → logprob: -17.375
    3. ' ' → logprob: -17.5
    4. ')' → logprob: -18.25
    5. '   ' → logprob: -21.0
    6. '۰' → logprob: -21.5
    7. '
' → logprob: -21.75
    8. '=' → logprob: -22.0
    9. '```' → logprob: -22.125
    10. ')n' → logprob: -22.125

Token 1391: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018201241036877036
    2. ')' → logprob: -6.376820087432861
    3. '   ' → logprob: -9.62682056427002
    4. ',b' → logprob: -11.37682056427002
    5. ',)' → logprob: -11.50182056427002
    6. '(' → logprob: -11.87682056427002
    7. ' ,' → logprob: -12.00182056427002
    8. ',:)' → logprob: -12.87682056427002
    9. ',
' → logprob: -13.00182056427002
    10. '[' → logprob: -13.12682056427002

Token 1392: ' [])

' (ID: 124233)
  Prédit: '[])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[])' → logprob: -0.023266442120075226
    2. '[]' → logprob: -3.773266553878784
    3. '[])
' → logprob: -11.148266792297363
    4. ' [])' → logprob: -12.898266792297363
    5. '[]
' → logprob: -13.273266792297363
    6. ')' → logprob: -13.273266792297363
    7. '[]}' → logprob: -15.023266792297363
    8. '[' → logprob: -15.648266792297363
    9. '[]>' → logprob: -15.898266792297363
    10. '[]):' → logprob: -16.398265838623047

Token 1393: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2020304650068283
    2. '   ' → logprob: -1.9520304203033447
    3. 'if' → logprob: -3.2020304203033447
    4. '
' → logprob: -8.702030181884766
    5. '```' → logprob: -10.327030181884766
    6. ' if' → logprob: -10.827030181884766
    7. '    
' → logprob: -10.952030181884766
    8. ' print' → logprob: -11.327030181884766
    9. 'main' → logprob: -12.077030181884766
    10. '#' → logprob: -12.452030181884766

Token 1394: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31380632519721985
    2. '   ' → logprob: -1.5638062953948975
    3. 'print' → logprob: -2.8138062953948975
    4. ' if' → logprob: -11.063806533813477
    5. '```' → logprob: -11.688806533813477
    6. '
' → logprob: -14.813806533813477
    7. '    
' → logprob: -15.188806533813477
    8. ' print' → logprob: -15.438806533813477
    9. 'import' → logprob: -15.813806533813477
    10. '#' (adapté à ' #') → logprob: -15.813806533813477

Token 1395: ' If' (ID: 1843)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09571126848459244
    2. 'if' → logprob: -2.5957112312316895
    3. 'print' → logprob: -4.0957112312316895
    4. ' if' → logprob: -10.595711708068848
    5. '```' → logprob: -11.470711708068848
    6. '
' → logprob: -14.470711708068848
    7. ' print' → logprob: -14.970711708068848
    8. '    
' → logprob: -15.720711708068848
    9. 'import' → logprob: -15.720711708068848
    10. '#' → logprob: -16.09571075439453

Token 1396: ' c' (ID: 274)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.10020763427019119
    2. 'best' → logprob: -2.350207567214966
    3. '(best' → logprob: -14.475207328796387
    4. '	best' → logprob: -15.475207328796387
    5. ' not' → logprob: -15.600207328796387
    6. ' ' → logprob: -18.600208282470703
    7. '   ' → logprob: -18.850208282470703
    8. 'not' → logprob: -18.975208282470703
    9. '_best' → logprob: -19.225208282470703
    10. 'b' → logprob: -19.475208282470703

Token 1397: '<' (ID: 27)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.4288417100906372
    2. ' <' → logprob: -1.6788417100906372
    3. '>=' → logprob: -2.1788415908813477
    4. '<' → logprob: -3.0538415908813477
    5. ' ' → logprob: -6.553841590881348
    6. ' is' → logprob: -9.303841590881348
    7. '>' → logprob: -9.803841590881348
    8. ' !=' → logprob: -9.803841590881348
    9. ' ==' → logprob: -10.303841590881348
    10. ')' → logprob: -10.303841590881348

Token 1398: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08222075551748276
    2. ' ' → logprob: -2.5822207927703857
    3. '=' → logprob: -5.707220554351807
    4. ' =' → logprob: -13.582221031188965
    5. '   ' → logprob: -14.457221031188965
    6. '  ' → logprob: -14.832221031188965
    7. '>' → logprob: -15.207221031188965
    8. '>=' → logprob: -15.332221031188965
    9. '
' → logprob: -15.832221031188965
    10. '1' → logprob: -15.957221031188965

Token 1399: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028723590075969696
    2. '   ' → logprob: -4.40372371673584
    3. ':
' → logprob: -5.02872371673584
    4. ' ==' → logprob: -5.15372371673584
    5. '==' → logprob: -6.15372371673584
    6. 'if' → logprob: -7.02872371673584
    7. ' if' → logprob: -7.90372371673584
    8. 'else' → logprob: -9.02872371673584
    9. ' and' → logprob: -9.15372371673584
    10. '{' → logprob: -10.77872371673584

Token 1400: ' try' (ID: 2075)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8215331435203552
    2. '   ' → logprob: -1.071533203125
    3. 'if' → logprob: -2.321533203125
    4. 'dfs' → logprob: -2.696533203125
    5. 'best' → logprob: -4.196533203125
    6. 'print' → logprob: -4.446533203125
    7. 'pass' → logprob: -4.446533203125
    8. ' if' → logprob: -5.696533203125
    9. '
' → logprob: -6.196533203125
    10. '```' → logprob: -6.196533203125

Token 1401: ' also' (ID: 1217)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.19778667390346527
    2. '   ' → logprob: -2.322786569595337
    3. 'def' → logprob: -3.322786569595337
    4. ' dfs' → logprob: -4.072786808013916
    5. '(' → logprob: -5.197786808013916
    6. 'c' → logprob: -5.572786808013916
    7. '(
' → logprob: -5.697786808013916
    8. '
' → logprob: -6.197786808013916
    9. 'None' → logprob: -6.322786808013916
    10. '(None' → logprob: -6.822786808013916

Token 1402: ' same' (ID: 2684)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.42751336097717285
    2. '   ' → logprob: -1.1775133609771729
    3. 'def' → logprob: -4.052513122558594
    4. ' dfs' → logprob: -4.302513122558594
    5. '
' → logprob: -6.177513122558594
    6. ':' → logprob: -6.302513122558594
    7. 'c' → logprob: -6.552513122558594
    8. ':
' → logprob: -6.927513122558594
    9. '    
' → logprob: -7.677513122558594
    10. 'None' → logprob: -8.177513122558594

Token 1403: ' without' (ID: 2935)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0520023107528687
    2. 'if' → logprob: -1.3020023107528687
    3. '   ' → logprob: -2.052002429962158
    4. '
' → logprob: -2.302002429962158
    5. ' if' → logprob: -2.302002429962158
    6. '``' → logprob: -3.927002429962158
    7. 'dfs' → logprob: -4.927002429962158
    8. '    
' → logprob: -5.052002429962158
    9. 'def' → logprob: -5.552002429962158
    10. 'c' → logprob: -5.802002429962158

Token 1404: ' c' (ID: 274)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2145269364118576
    2. 'c' → logprob: -2.214526891708374
    3. '   ' → logprob: -3.089526891708374
    4. '
' → logprob: -3.714526891708374
    5. ' if' → logprob: -4.464527130126953
    6. ' c' → logprob: -6.839527130126953
    7. '```' → logprob: -7.714527130126953
    8. '    
' → logprob: -7.839527130126953
    9. 'dfs' → logprob: -8.464527130126953
    10. '_c' → logprob: -9.339527130126953

Token 1405: ' -' (ID: 533)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2633804678916931
    2. '   ' → logprob: -1.513380527496338
    3. '
' → logprob: -4.513380527496338
    4. ' if' → logprob: -7.888380527496338
    5. '    
' → logprob: -10.13838005065918
    6. '```' → logprob: -12.13838005065918
    7. '	if' → logprob: -14.13838005065918
    8. 'import' → logprob: -14.38838005065918
    9. '
' → logprob: -14.38838005065918
    10. '``' → logprob: -14.51338005065918

Token 1406: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2606143951416016
    2. ' if' → logprob: -1.5106143951416016
    3. '
' → logprob: -1.6356143951416016
    4. ' dfs' → logprob: -2.1356143951416016
    5. 'if' → logprob: -2.3856143951416016
    6. 'dfs' → logprob: -2.7606143951416016
    7. '    
' → logprob: -4.885614395141602
    8. '\n' → logprob: -5.010614395141602
    9. ' for' → logprob: -6.510614395141602
    10. ':
' → logprob: -7.135614395141602

Token 1407: ' check' (ID: 2371)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.2211969494819641
    2. 'try' → logprob: -3.2211968898773193
    3. 'find' → logprob: -3.3461968898773193
    4. ' dfs' → logprob: -3.5961968898773193
    5. 'check' → logprob: -4.346197128295898
    6. '
' → logprob: -4.346197128295898
    7. 'ensure' → logprob: -4.471197128295898
    8. 'expand' → logprob: -4.596197128295898
    9. 'expl' → logprob: -4.846197128295898
    10. 'def' → logprob: -5.096197128295898

Token 1408: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9416725635528564
    2. 'if' → logprob: -1.1916725635528564
    3. '   ' → logprob: -1.8166725635528564
    4. ' if' → logprob: -2.4416725635528564
    5. 'def' → logprob: -3.5666725635528564
    6. 'c' → logprob: -4.691672325134277
    7. 'b' → logprob: -5.191672325134277
    8. '    
' → logprob: -5.316672325134277
    9. 'dfs' → logprob: -5.691672325134277
    10. '```' → logprob: -6.691672325134277

Token 1409: ' better' (ID: 3432)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9600327014923096
    2. 'True' → logprob: -1.0850327014923096
    3. 'best' → logprob: -1.4600327014923096
    4. ' True' → logprob: -3.8350327014923096
    5. ' best' → logprob: -4.8350324630737305
    6. ' c' → logprob: -5.4600324630737305
    7. '
' → logprob: -6.0850324630737305
    8. 'not' → logprob: -6.3350324630737305
    9. 'possible' → logprob: -6.7100324630737305
    10. '(True' → logprob: -6.7100324630737305

Token 1410: ' number' (ID: 2086)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3147561550140381
    2. '
' → logprob: -1.814756155014038
    3. '   ' → logprob: -2.439756155014038
    4. ' if' → logprob: -3.939756155014038
    5. '    
' → logprob: -8.189756393432617
    6. 'def' → logprob: -9.064756393432617
    7. 'c' → logprob: -10.064756393432617
    8. '```' → logprob: -10.439756393432617
    9. '

' → logprob: -10.939756393432617
    10. 'dfs' → logprob: -11.564756393432617

Token 1411: ' possible' (ID: 4149)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07927673310041428
    2. '   ' → logprob: -2.5792768001556396
    3. '
' → logprob: -8.079277038574219
    4. ' if' → logprob: -9.829277038574219
    5. 'def' → logprob: -11.329277038574219
    6. '    
' → logprob: -12.329277038574219
    7. '```' → logprob: -13.079277038574219
    8. 'best' → logprob: -13.329277038574219
    9. 'dfs' → logprob: -13.954277038574219
    10. 'c' → logprob: -14.204277038574219

Token 1412: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47517481446266174
    2. 'if' → logprob: -0.9751747846603394
    3. ' if' → logprob: -6.850174903869629
    4. '
' → logprob: -10.475174903869629
    5. '    
' → logprob: -12.350174903869629
    6. 'def' → logprob: -13.100174903869629
    7. '```' → logprob: -13.225174903869629
    8. '	if' → logprob: -14.225174903869629
    9. 'import' → logprob: -15.100174903869629
    10. 'If' → logprob: -16.100173950195312

Token 1413: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6991758942604065
    2. 'if' → logprob: -0.6991758942604065
    3. '
' → logprob: -5.199175834655762
    4. ' if' → logprob: -8.449175834655762
    5. '```' → logprob: -8.699175834655762
    6. '    
' → logprob: -9.199175834655762
    7. '``' → logprob: -12.074175834655762
    8. '	if' → logprob: -14.949175834655762
    9. 'elif' → logprob: -14.949175834655762
    10. '  
' → logprob: -15.074175834655762

Token 1414: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.012266982346773148
    2. '
' → logprob: -4.512267112731934
    3. '   ' → logprob: -6.762267112731934
    4. ' if' → logprob: -10.387267112731934
    5. '```' → logprob: -10.762267112731934
    6. '    
' → logprob: -11.762267112731934
    7. '``' → logprob: -13.512267112731934
    8. '

' → logprob: -15.387267112731934
    9. '`
' → logprob: -15.637267112731934
    10. 'elif' → logprob: -16.512266159057617

Token 1415: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.31349271535873413
    2. ' c' → logprob: -1.313492774963379
    3. '   ' → logprob: -8.438492774963379
    4. '	c' → logprob: -12.563492774963379
    5. ' ' → logprob: -12.688492774963379
    6. '
' → logprob: -13.563492774963379
    7. '    ' → logprob: -13.688492774963379
    8. '(c' → logprob: -13.688492774963379
    9. '\
' → logprob: -13.938492774963379
    10. '  ' → logprob: -14.188492774963379

Token 1416: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.30497297644615173
    2. '<' → logprob: -1.5549730062484741
    3. ' >=' → logprob: -3.0549728870391846
    4. '>=' → logprob: -5.429973125457764
    5. '>' → logprob: -9.929972648620605
    6. ' ' → logprob: -10.304972648620605
    7. ' >' → logprob: -10.429972648620605
    8. ')' → logprob: -11.554972648620605
    9. ' ==' → logprob: -11.679972648620605
    10. '   ' → logprob: -12.429972648620605

Token 1417: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1928003813372925e-05
    2. ' ' → logprob: -10.125051498413086
    3. '=' → logprob: -11.375051498413086
    4. '   ' → logprob: -15.500051498413086
    5. '>' → logprob: -17.250051498413086
    6. '
' → logprob: -17.500051498413086
    7. '1' → logprob: -17.625051498413086
    8. '۰' → logprob: -18.250051498413086
    9. '<|end|>' → logprob: -18.250051498413086
    10. '  ' → logprob: -18.500051498413086

Token 1418: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.372916686814278e-05
    2. ' ' → logprob: -9.7500638961792
    3. '=' → logprob: -12.2500638961792
    4. '   ' → logprob: -15.1250638961792
    5. '
' → logprob: -15.7500638961792
    6. '1' → logprob: -17.000062942504883
    7. '>' → logprob: -17.375062942504883
    8. '  ' → logprob: -17.625062942504883
    9. ' =' → logprob: -17.750062942504883
    10. '۰' → logprob: -18.125062942504883

Token 1419: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06214302033185959
    2. ':' → logprob: -2.937143087387085
    3. '   ' → logprob: -4.937142848968506
    4. '       ' → logprob: -10.562143325805664
    5. '):
' → logprob: -11.312143325805664
    6. ' :
' → logprob: -12.062143325805664
    7. ':

' → logprob: -12.437143325805664
    8. '==' → logprob: -12.687143325805664
    9. '():
' → logprob: -12.687143325805664
    10. ':
' → logprob: -13.187143325805664

Token 1420: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002730932552367449
    2. ':
' → logprob: -6.127730846405029
    3. ':' → logprob: -7.877730846405029
    4. '    
' → logprob: -9.627731323242188
    5. ' dfs' → logprob: -10.252731323242188
    6. '):
' → logprob: -11.377731323242188
    7. 'dfs' → logprob: -11.627731323242188
    8. '
' → logprob: -11.627731323242188
    9. ' :
' → logprob: -11.877731323242188
    10. '       ' → logprob: -12.252731323242188

Token 1421: ' #' (ID: 1069)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.6034132838249207
    2. '   ' → logprob: -0.8534132838249207
    3. 'c' → logprob: -4.103413105010986
    4. 'dfs' → logprob: -5.478413105010986
    5. 'def' → logprob: -5.728413105010986
    6. ' best' → logprob: -6.853413105010986
    7. '       ' → logprob: -7.478413105010986
    8. '
' → logprob: -7.603413105010986
    9. '{
' → logprob: -7.978413105010986
    10. 'for' → logprob: -8.978413581848145

Token 1422: ' try' (ID: 2075)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1718105524778366
    2. 'best' → logprob: -1.921810507774353
    3. 'c' → logprob: -4.671810626983643
    4. ' best' → logprob: -6.671810626983643
    5. 'def' → logprob: -8.046810150146484
    6. ' c' → logprob: -8.421810150146484
    7. '
' → logprob: -8.796810150146484
    8. '       ' → logprob: -10.546810150146484
    9. '    
' → logprob: -10.546810150146484
    10. 'b' → logprob: -10.796810150146484

Token 1423: ' without' (ID: 2935)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.19427989423274994
    2. '
' → logprob: -2.319279909133911
    3. 'def' → logprob: -3.694279909133911
    4. '   ' → logprob: -3.694279909133911
    5. 'best' → logprob: -4.569279670715332
    6. 'c' → logprob: -4.694279670715332
    7. ' dfs' → logprob: -5.569279670715332
    8. '0' → logprob: -6.444279670715332
    9. ':
' → logprob: -6.569279670715332
    10. '    
' → logprob: -7.944279670715332

Token 1424: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07296395301818848
    2. 'dfs' → logprob: -2.8229639530181885
    3. '   ' → logprob: -5.322963714599609
    4. '#' → logprob: -6.447963714599609
    5. 'def' → logprob: -6.447963714599609
    6. '_c' → logprob: -6.947963714599609
    7. 'back' → logprob: -7.822963714599609
    8. ' c' → logprob: -7.947963714599609
    9. ' dfs' → logprob: -8.32296371459961
    10. '    
' → logprob: -8.82296371459961

Token 1425: ' means' (ID: 4748)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9089758992195129
    2. ':
' → logprob: -1.1589758396148682
    3. ':' → logprob: -1.4089758396148682
    4. '       ' → logprob: -3.658975839614868
    5. ' =' → logprob: -5.783976078033447
    6. '
' → logprob: -5.783976078033447
    7. '=' → logprob: -6.158976078033447
    8. 'def' → logprob: -6.658976078033447
    9. ' :
' → logprob: -7.908976078033447
    10. '    
' → logprob: -8.158975601196289

Token 1426: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3471450209617615
    2. 'dfs' → logprob: -1.7221450805664062
    3. '   ' → logprob: -3.0971450805664062
    4. 'best' → logprob: -3.4721450805664062
    5. ' c' → logprob: -4.597145080566406
    6. 'def' → logprob: -4.597145080566406
    7. ' dfs' → logprob: -4.847145080566406
    8. 'None' → logprob: -5.472145080566406
    9. ' best' → logprob: -5.847145080566406
    10. '0' → logprob: -7.097145080566406

Token 1427: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09427813440561295
    2. ' =' → logprob: -2.59427809715271
    3. '=-' → logprob: -4.344278335571289
    4. '_digit' → logprob: -6.719278335571289
    5. '=None' → logprob: -7.219278335571289
    6. '-' → logprob: -9.219278335571289
    7. '_=' → logprob: -9.469278335571289
    8. '_' → logprob: -9.719278335571289
    9. 'digit' → logprob: -11.094278335571289
    10. '   ' → logprob: -11.344278335571289

Token 1428: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0325924449716695e-05
    2. ' -' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.75001049041748
    4. '0' → logprob: -17.750009536743164
    5. '-c' → logprob: -18.500009536743164
    6. ' ' → logprob: -19.250009536743164
    7. '  ' → logprob: -20.625009536743164
    8. '−' → logprob: -20.750009536743164
    9. 'None' → logprob: -20.875009536743164
    10. '\-' → logprob: -21.125009536743164

Token 1429: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.759734732331708e-05
    2. '2' → logprob: -11.000017166137695
    3. ' ' → logprob: -14.250017166137695
    4. '   ' → logprob: -17.000017166137695
    5. '10' → logprob: -17.750017166137695
    6. '=' → logprob: -18.000017166137695
    7. '۱' → logprob: -18.625017166137695
    8. '999' → logprob: -18.750017166137695
    9. '100' → logprob: -18.875017166137695
    10. '１' → logprob: -19.000017166137695

Token 1430: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031177984550595284
    2. ' =' → logprob: -4.406177997589111
    3. '   ' → logprob: -5.031177997589111
    4. '=' → logprob: -5.906177997589111
    5. 'c' → logprob: -5.906177997589111
    6. ':' → logprob: -6.031177997589111
    7. '
' → logprob: -6.781177997589111
    8. ' -' → logprob: -7.281177997589111
    9. '-' → logprob: -7.656177997589111
    10. ',' → logprob: -7.656177997589111

Token 1431: ' build' (ID: 3024)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.3318660259246826
    2. 'def' → logprob: -1.4568660259246826
    3. 'dfs' → logprob: -1.5818660259246826
    4. 'range' → logprob: -1.8318660259246826
    5. 'c' → logprob: -2.7068660259246826
    6. '   ' → logprob: -3.8318660259246826
    7. 'the' → logprob: -4.331866264343262
    8. '0' → logprob: -4.956866264343262
    9. '#' → logprob: -5.706866264343262
    10. 'code' → logprob: -5.831866264343262

Token 1432: '_number' (ID: 11733)
  Prédit: '_digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.5086160898208618
    2. 'def' → logprob: -1.8836160898208618
    3. '_digit' → logprob: -2.1336159706115723
    4. '   ' → logprob: -2.6336159706115723
    5. 'digits' → logprob: -3.3836159706115723
    6. 'digit' → logprob: -5.758615970611572
    7. '       ' → logprob: -6.133615970611572
    8. ')' → logprob: -6.133615970611572
    9. ',' → logprob: -6.383615970611572
    10. '()
' → logprob: -6.508615970611572

Token 1433: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5653645396232605
    2. '   ' → logprob: -1.1903645992279053
    3. ':' → logprob: -2.8153645992279053
    4. ':
' → logprob: -4.065364360809326
    5. 'def' → logprob: -4.440364360809326
    6. '
' → logprob: -4.940364360809326
    7. ',' → logprob: -5.190364360809326
    8. '(' → logprob: -5.440364360809326
    9. ')' → logprob: -5.940364360809326
    10. '```' → logprob: -6.190364360809326

Token 1434: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.347435861825943
    2. '       ' → logprob: -1.4724358320236206
    3. ':' → logprob: -3.09743595123291
    4. ':
' → logprob: -4.22243595123291
    5. '
' → logprob: -6.47243595123291
    6. ',' → logprob: -6.47243595123291
    7. ',
' → logprob: -8.72243595123291
    8. '    
' → logprob: -8.97243595123291
    9. '):
' → logprob: -8.97243595123291
    10. ' and' → logprob: -9.09743595123291

Token 1435: ' best' (ID: 1636)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10717563331127167
    2. 'def' → logprob: -2.732175588607788
    3. 'dfs' → logprob: -3.607175588607788
    4. 'c' → logprob: -5.357175827026367
    5. 'best' (adapté à ' best') → logprob: -5.982175827026367
    6. '       ' → logprob: -7.107175827026367
    7. '
' → logprob: -7.607175827026367
    8. ' dfs' → logprob: -7.982175827026367
    9. ' c' → logprob: -8.857175827026367
    10. ' best' → logprob: -9.607175827026367

Token 1436: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.001560450647957623
    2. '_' → logprob: -6.626560688018799
    3. 'num' → logprob: -9.62656021118164
    4. '_digits' → logprob: -10.00156021118164
    5. '_nums' → logprob: -11.12656021118164
    6. '=' → logprob: -11.25156021118164
    7. '_c' → logprob: -11.37656021118164
    8. ' =' → logprob: -11.75156021118164
    9. 'Num' → logprob: -11.75156021118164
    10. '_=' → logprob: -12.25156021118164

Token 1437: '_' (ID: 62)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06869469583034515
    2. ',' → logprob: -3.443694591522217
    3. ' =' → logprob: -3.568694591522217
    4. '_' → logprob: -6.568694591522217
    5. '=None' → logprob: -6.943694591522217
    6. '_backup' → logprob: -7.318694591522217
    7. '+=' → logprob: -7.818694591522217
    8. '_=' → logprob: -7.818694591522217
    9. ' is' → logprob: -7.943694591522217
    10. '_temp' → logprob: -8.693695068359375

Token 1438: 'wo' (ID: 1338)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9986708164215088
    2. '_c' → logprob: -1.4986708164215088
    3. '=' → logprob: -2.123670816421509
    4. 'candidate' → logprob: -2.873670816421509
    5. '_candidate' → logprob: -2.998670816421509
    6. 'without' → logprob: -2.998670816421509
    7. '_tmp' → logprob: -3.748670816421509
    8. '=None' → logprob: -3.873670816421509
    9. 'backup' → logprob: -4.24867057800293
    10. 'tmp' → logprob: -4.62367057800293

Token 1439: '_c' (ID: 1303)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11788368225097656
    2. ' =' → logprob: -2.4928836822509766
    3. 'c' → logprob: -3.9928836822509766
    4. '_c' → logprob: -4.742883682250977
    5. '_' → logprob: -7.492883682250977
    6. '_=' → logprob: -8.492883682250977
    7. 'r' → logprob: -8.617883682250977
    8. 'u' → logprob: -9.492883682250977
    9. 'w' → logprob: -9.492883682250977
    10. '=c' → logprob: -9.617883682250977

Token 1440: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11327777057886124
    2. ' =' → logprob: -2.2382776737213135
    3. '_' → logprob: -8.613277435302734
    4. '=None' → logprob: -9.113277435302734
    5. ',' → logprob: -9.488277435302734
    6. '_=' → logprob: -10.488277435302734
    7. ' is' → logprob: -11.488277435302734
    8. ')' → logprob: -11.488277435302734
    9. '=
' → logprob: -11.988277435302734
    10. ' ' → logprob: -12.363277435302734

Token 1441: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0005026352009736001
    2. ' None' → logprob: -7.750502586364746
    3. 'best' → logprob: -9.750502586364746
    4. '   ' → logprob: -11.375502586364746
    5. 'N' → logprob: -14.250502586364746
    6. 'No' → logprob: -14.500502586364746
    7. '
' → logprob: -15.750502586364746
    8. 'none' → logprob: -15.750502586364746
    9. '(None' → logprob: -16.250503540039062
    10. 'Non' → logprob: -16.250503540039062

Token 1442: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07783351093530655
    2. ',' → logprob: -3.077833414077759
    3. '<|end|>' → logprob: -4.202833652496338
    4. '
' → logprob: -5.452833652496338
    5. 'def' → logprob: -5.702833652496338
    6. '   ' → logprob: -5.952833652496338
    7. '        
' → logprob: -7.327833652496338
    8. ' =' → logprob: -7.702833652496338
    9. ',
' → logprob: -8.07783317565918
    10. ' and' → logprob: -8.07783317565918

Token 1443: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8192233443260193
    2. '       ' → logprob: -1.194223403930664
    3. 'best' → logprob: -1.444223403930664
    4. '
' → logprob: -5.194223403930664
    5. '	best' → logprob: -5.194223403930664
    6. ' best' → logprob: -5.319223403930664
    7. '_best' → logprob: -6.569223403930664
    8. ',' → logprob: -7.569223403930664
    9. '           ' → logprob: -7.694223403930664
    10. 'def' → logprob: -7.944223403930664

Token 1444: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -9.253090865968261e-06
    2. ' best' → logprob: -12.500009536743164
    3. '   ' → logprob: -13.000009536743164
    4. 'def' → logprob: -13.000009536743164
    5. '       ' → logprob: -14.250009536743164
    6. '	best' → logprob: -16.125009536743164
    7. 'import' → logprob: -16.625009536743164
    8. '
' → logprob: -17.375009536743164
    9. 'Best' → logprob: -18.125009536743164
    10. '    ' → logprob: -18.250009536743164

Token 1445: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0007348202052526176
    2. '_' → logprob: -7.875734806060791
    3. '_num' → logprob: -8.12573528289795
    4. '_pr' → logprob: -10.87573528289795
    5. ''_' → logprob: -11.00073528289795
    6. '```' → logprob: -12.00073528289795
    7. '_token' → logprob: -13.00073528289795
    8. '\' → logprob: -13.50073528289795
    9. '_p' → logprob: -13.50073528289795
    10. '_c' → logprob: -13.62573528289795

Token 1446: '_' (ID: 62)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2521674633026123
    2. ' =' → logprob: -1.5021674633026123
    3. '=True' → logprob: -8.377167701721191
    4. '=False' → logprob: -12.002167701721191
    5. ',' → logprob: -14.377167701721191
    6. '_=' → logprob: -14.752167701721191
    7. '_' → logprob: -15.002167701721191
    8. ' ' → logprob: -15.502167701721191
    9. ')' → logprob: -15.752167701721191
    10. '   ' → logprob: -15.752167701721191

Token 1447: 'wo' (ID: 1338)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -7.219262624857947e-05
    2. ' =' → logprob: -10.250072479248047
    3. '=True' → logprob: -10.500072479248047
    4. '=
' → logprob: -11.875072479248047
    5. '=False' → logprob: -13.000072479248047
    6. 'found' → logprob: -17.750072479248047
    7. '_=' → logprob: -18.125072479248047
    8. '=None' → logprob: -18.250072479248047
    9. '=

' → logprob: -18.250072479248047
    10. 'True' → logprob: -18.875072479248047

Token 1448: '_c' (ID: 1303)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.1450032740831375
    2. '=False' → logprob: -2.270003318786621
    3. '=' → logprob: -4.020003318786621
    4. 'True' → logprob: -5.270003318786621
    5. ' =' → logprob: -5.395003318786621
    6. '=True' → logprob: -6.145003318786621
    7. ' False' → logprob: -6.770003318786621
    8. '_' → logprob: -8.395003318786621
    9. '_false' → logprob: -8.645003318786621
    10. '(False' → logprob: -9.270003318786621

Token 1449: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038091402500867844
    2. ' =' → logprob: -3.2880914211273193
    3. ',' → logprob: -10.913091659545898
    4. '=
' → logprob: -11.038091659545898
    5. '=None' → logprob: -12.038091659545898
    6. ')' → logprob: -12.413091659545898
    7. '=True' → logprob: -13.663091659545898
    8. '   ' → logprob: -13.788091659545898
    9. ' ' → logprob: -14.163091659545898
    10. '=False' → logprob: -14.413091659545898

Token 1450: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00026169343618676066
    2. ' False' → logprob: -8.250261306762695
    3. 'F' → logprob: -16.375261306762695
    4. '   ' → logprob: -16.500261306762695
    5. '=False' → logprob: -16.625261306762695
    6. '(False' → logprob: -16.625261306762695
    7. 'True' → logprob: -18.000261306762695
    8. 'Fa' → logprob: -18.125261306762695
    9. 'Fal' → logprob: -19.000261306762695
    10. '.False' → logprob: -19.250261306762695

Token 1451: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002335804980248213
    2. '   ' → logprob: -7.252336025238037
    3. '       ' → logprob: -7.252336025238037
    4. 'def' → logprob: -7.502336025238037
    5. '    
' → logprob: -9.252335548400879
    6. '

' → logprob: -9.252335548400879
    7. '        
' → logprob: -10.002335548400879
    8. '```' → logprob: -10.127335548400879
    9. '
' → logprob: -10.377335548400879
    10. '<|end|>' → logprob: -11.252335548400879

Token 1452: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6808342337608337
    2. '   ' → logprob: -0.8058342337608337
    3. '       ' → logprob: -3.6808342933654785
    4. '
' → logprob: -4.4308342933654785
    5. ' def' → logprob: -4.6808342933654785
    6. 'for' → logprob: -8.18083381652832
    7. '```' → logprob: -8.43083381652832
    8. ' for' → logprob: -9.18083381652832
    9. '    
' → logprob: -10.80583381652832
    10. 'dfs' → logprob: -10.93083381652832

Token 1453: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00301086506806314
    2. ' def' → logprob: -6.3780107498168945
    3. '   ' → logprob: -7.0030107498168945
    4. '       ' → logprob: -8.378010749816895
    5. '
' → logprob: -8.753010749816895
    6. 'for' → logprob: -12.128010749816895
    7. 'best' → logprob: -12.753010749816895
    8. '```' → logprob: -14.128010749816895
    9. 'b' → logprob: -14.628010749816895
    10. 'from' → logprob: -14.878010749816895

Token 1454: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.00013202552509028465
    2. ' dfs' → logprob: -9.625131607055664
    3. 'back' → logprob: -9.875131607055664
    4. 'df' → logprob: -12.250131607055664
    5. 'best' → logprob: -12.625131607055664
    6. 'helper' → logprob: -14.125131607055664
    7. 'd' → logprob: -14.125131607055664
    8. 'backup' → logprob: -14.250131607055664
    9. 'def' → logprob: -14.500131607055664
    10. '   ' → logprob: -15.000131607055664

Token 1455: '_' (ID: 62)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.014097685925662518
    2. '(' → logprob: -4.389097690582275
    3. 'pos' → logprob: -6.889097690582275
    4. ' (' → logprob: -8.764097213745117
    5. '_without' → logprob: -8.889097213745117
    6. '(
' → logprob: -9.139097213745117
    7. '_' → logprob: -10.264097213745117
    8. '_no' → logprob: -10.514097213745117
    9. 'dfs' → logprob: -10.764097213745117
    10. ' pos' → logprob: -10.889097213745117

Token 1456: 'wo' (ID: 1338)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.17383027076721191
    2. 'pos' → logprob: -2.548830270767212
    3. '(pos' → logprob: -3.173830270767212
    4. '(' → logprob: -3.798830270767212
    5. '0' → logprob: -4.548830032348633
    6. 'wo' → logprob: -5.548830032348633
    7. 'd' → logprob: -7.298830032348633
    8. 'df' → logprob: -7.548830032348633
    9. '1' → logprob: -8.048830032348633
    10. 'def' → logprob: -8.548830032348633

Token 1457: '_c' (ID: 1303)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4753497838973999
    2. '_c' → logprob: -0.9753497838973999
    3. '(' → logprob: -7.6003499031066895
    4. 'dfs' → logprob: -8.600349426269531
    5. '_' → logprob: -8.725349426269531
    6. 'pos' → logprob: -8.850349426269531
    7. 'f' → logprob: -9.475349426269531
    8. '(
' → logprob: -10.475349426269531
    9. '```' → logprob: -10.725349426269531
    10. ')' → logprob: -11.225349426269531

Token 1458: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0058088707737624645
    2. '(' → logprob: -5.2558088302612305
    3. '_' → logprob: -8.00580883026123
    4. '_(' → logprob: -9.00580883026123
    5. '(_' → logprob: -9.38080883026123
    6. ' (' → logprob: -11.25580883026123
    7. '(
' → logprob: -12.00580883026123
    8. '(p' → logprob: -13.50580883026123
    9. '[pos' → logprob: -13.50580883026123
    10. 'pos' → logprob: -13.50580883026123

Token 1459: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024311232846230268
    2. ',pos' → logprob: -9.250243186950684
    3. '       ' → logprob: -9.625243186950684
    4. ' ,' → logprob: -10.625243186950684
    5. ',b' → logprob: -10.750243186950684
    6. '   ' → logprob: -10.875243186950684
    7. '           ' → logprob: -12.500243186950684
    8. ',
' → logprob: -12.875243186950684
    9. '‌,' → logprob: -13.125243186950684
    10. '،' → logprob: -13.750243186950684

Token 1460: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.012515068985521793
    2. ' b' → logprob: -4.387515068054199
    3. '   ' → logprob: -13.5125150680542
    4. '       ' → logprob: -13.7625150680542
    5. '           ' → logprob: -14.1375150680542
    6. '    ' → logprob: -14.5125150680542
    7. '	b' → logprob: -15.3875150680542
    8. '        ' → logprob: -15.5125150680542
    9. '     ' → logprob: -15.5125150680542
    10. '[]' → logprob: -15.6375150680542

Token 1461: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -8.029847231227905e-05
    2. '_' → logprob: -10.250080108642578
    3. '_d' → logprob: -10.875080108642578
    4. 'digits' → logprob: -11.875080108642578
    5. '```' → logprob: -12.000080108642578
    6. '_tokens' → logprob: -12.250080108642578
    7. '_digit' → logprob: -13.000080108642578
    8. ''_' → logprob: -13.250080108642578
    9. 'Digits' → logprob: -13.750080108642578
    10. '_
' → logprob: -14.500080108642578

Token 1462: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0384693369269371
    2. '):' → logprob: -4.038469314575195
    3. '       ' → logprob: -4.288469314575195
    4. '   ' → logprob: -5.413469314575195
    5. ':
' → logprob: -7.913469314575195
    6. '():
' → logprob: -7.913469314575195
    7. '           ' → logprob: -8.038469314575195
    8. ':' → logprob: -8.413469314575195
    9. ')' → logprob: -8.788469314575195
    10. '):
' → logprob: -9.163469314575195

Token 1463: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05067133530974388
    2. '   ' → logprob: -3.175671339035034
    3. '	   ' → logprob: -5.550671100616455
    4. '	       ' → logprob: -6.300671100616455
    5. '           ' → logprob: -7.175671100616455
    6. '[' → logprob: -8.300671577453613
    7. '	' → logprob: -8.550671577453613
    8. '```' → logprob: -8.675671577453613
    9. '(' → logprob: -9.550671577453613
    10. '    ' → logprob: -9.800671577453613

Token 1464: ' non' (ID: 2893)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6032143235206604
    2. '   ' → logprob: -1.6032142639160156
    3. '           ' → logprob: -2.1032142639160156
    4. '               ' → logprob: -3.4782142639160156
    5. '	       ' → logprob: -3.4782142639160156
    6. '	' → logprob: -3.8532142639160156
    7. '[' → logprob: -4.478214263916016
    8. '	tab' → logprob: -4.603214263916016
    9. '	   ' → logprob: -5.478214263916016
    10. ' non' → logprob: -5.728214263916016

Token 1465: 'local' (ID: 5818)
  Prédit: 'local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -2.45848218582978e-06
    2. 'non' → logprob: -14.50000286102295
    3. 'global' → logprob: -14.87500286102295
    4. '   ' → logprob: -15.37500286102295
    5. 'None' → logprob: -15.37500286102295
    6. ' local' → logprob: -15.62500286102295
    7. 'def' → logprob: -15.62500286102295
    8. 'tab' → logprob: -15.62500286102295
    9. 'locals' → logprob: -15.62500286102295
    10. '
' → logprob: -15.75000286102295

Token 1466: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.005234002135694027
    2. ' best' → logprob: -5.2552337646484375
    3. '	best' → logprob: -16.255233764648438
    4. '(best' → logprob: -16.755233764648438
    5. '           ' → logprob: -17.505233764648438
    6. '   ' → logprob: -17.630233764648438
    7. '_best' → logprob: -18.255233764648438
    8. 'Best' → logprob: -19.755233764648438
    9. 'b' → logprob: -20.005233764648438
    10. '       ' → logprob: -20.005233764648438

Token 1467: '_num' (ID: 9834)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.47441622614860535
    2. '_num' → logprob: -0.9744162559509277
    3. 'prime' → logprob: -8.22441577911377
    4. '_' → logprob: -10.34941577911377
    5. 'num' → logprob: -11.72441577911377
    6. 'Prime' → logprob: -12.22441577911377
    7. '_pr' → logprob: -12.34941577911377
    8. '```' → logprob: -12.34941577911377
    9. '_best' → logprob: -12.47441577911377
    10. '_digits' → logprob: -12.84941577911377

Token 1468: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014653606340289116
    2. ',' → logprob: -4.26465368270874
    3. '           ' → logprob: -8.389653205871582
    4. '   ' → logprob: -9.889653205871582
    5. 'wo' → logprob: -10.389653205871582
    6. '       ' → logprob: -10.764653205871582
    7. '          ' → logprob: -10.889653205871582
    8. '_,' → logprob: -11.014653205871582
    9. ' ,' → logprob: -11.139653205871582
    10. '
' → logprob: -11.139653205871582

Token 1469: 'wo' (ID: 1338)
  Prédit: 'wo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wo' → logprob: -0.002628573216497898
    2. '_' → logprob: -6.377628803253174
    3. 'None' → logprob: -7.627628803253174
    4. '   ' → logprob: -9.502628326416016
    5. 'w' → logprob: -9.877628326416016
    6. '_w' → logprob: -10.502628326416016
    7. '```' → logprob: -10.502628326416016
    8. '_none' → logprob: -10.752628326416016
    9. '
' → logprob: -10.877628326416016
    10. 'ow' → logprob: -11.065128326416016

Token 1470: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.048674799501895905
    2. 'c' → logprob: -3.0486748218536377
    3. 'C' → logprob: -10.298674583435059
    4. '_' → logprob: -10.798674583435059
    5. '
' → logprob: -12.048674583435059
    6. ',' → logprob: -12.048674583435059
    7. '   ' → logprob: -12.548674583435059
    8. ' c' → logprob: -13.548674583435059
    9. '```' → logprob: -13.736174583435059
    10. ' ' → logprob: -14.173674583435059

Token 1471: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00801979098469019
    2. '           ' → logprob: -4.883019924163818
    3. ',b' → logprob: -9.00801944732666
    4. ',
' → logprob: -9.25801944732666
    5. '
' → logprob: -10.00801944732666
    6. '=' → logprob: -10.13301944732666
    7. ' ,' → logprob: -10.25801944732666
    8. '       ' → logprob: -11.50801944732666
    9. '   ' → logprob: -11.50801944732666
    10. '          ' → logprob: -11.75801944732666

Token 1472: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.001504982472397387
    2. ' best' → logprob: -6.501504898071289
    3. '           ' → logprob: -12.876504898071289
    4. '       ' → logprob: -17.75150489807129
    5. '   ' → logprob: -17.87650489807129
    6. '	best' → logprob: -18.00150489807129
    7. '(best' → logprob: -18.62650489807129
    8. '               ' → logprob: -18.75150489807129
    9. '          ' → logprob: -19.12650489807129
    10. '         ' → logprob: -19.37650489807129

Token 1473: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -6.2729995988775045e-06
    2. 'prime' → logprob: -13.000006675720215
    3. '_' → logprob: -13.125006675720215
    4. '_num' → logprob: -13.875006675720215
    5. '```' → logprob: -15.250006675720215
    6. ''_' → logprob: -15.375006675720215
    7. '_p' → logprob: -16.1250057220459
    8. 'Prime' → logprob: -16.2500057220459
    9. '
' → logprob: -16.5000057220459
    10. '_pr' → logprob: -17.1250057220459

Token 1474: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00010211274639004841
    2. '           ' → logprob: -10.500102043151855
    3. '   ' → logprob: -11.125102043151855
    4. '       ' → logprob: -11.250102043151855
    5. '
' → logprob: -11.500102043151855
    6. ',' → logprob: -11.500102043151855
    7. 'wo' → logprob: -12.000102043151855
    8. '```' → logprob: -12.250102043151855
    9. '               ' → logprob: -12.375102043151855
    10. '_w' → logprob: -13.000102043151855

Token 1475: 'wo' (ID: 1338)
  Prédit: 'wo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wo' → logprob: -0.09018296003341675
    2. '_' → logprob: -2.4651830196380615
    3. 'Wo' → logprob: -8.21518325805664
    4. '=True' → logprob: -8.71518325805664
    5. '
' → logprob: -8.96518325805664
    6. '_w' → logprob: -9.46518325805664
    7. '   ' → logprob: -9.59018325805664
    8. 'True' → logprob: -9.71518325805664
    9. '```' → logprob: -9.96518325805664
    10. '=' → logprob: -10.09018325805664

Token 1476: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.011088728904724121
    2. 'c' → logprob: -4.511088848114014
    3. 'C' → logprob: -10.761088371276855
    4. 'True' → logprob: -11.886088371276855
    5. 'False' → logprob: -11.886088371276855
    6. '
' → logprob: -13.011088371276855
    7. '=False' → logprob: -14.261088371276855
    8. 'u' → logprob: -14.636088371276855
    9. '=True' → logprob: -15.136088371276855
    10. '=' → logprob: -15.386088371276855

Token 1477: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003972966689616442
    2. '
' → logprob: -6.003973007202148
    3. '	       ' → logprob: -8.378973007202148
    4. '            
' → logprob: -8.628973007202148
    5. '          ' → logprob: -8.753973007202148
    6. '       ' → logprob: -8.753973007202148
    7. '<|end|>' → logprob: -8.878973007202148
    8. ',' → logprob: -9.253973007202148
    9. '		' → logprob: -9.503973007202148
    10. '   ' → logprob: -9.753973007202148

Token 1478: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8128487467765808
    2. '       ' → logprob: -0.9378487467765808
    3. '	       ' → logprob: -2.3128488063812256
    4. '	' → logprob: -3.8128488063812256
    5. '		' → logprob: -4.4378485679626465
    6. '	   ' → logprob: -4.6878485679626465
    7. '   ' → logprob: -5.3128485679626465
    8. '    	' → logprob: -5.5628485679626465
    9. '[' → logprob: -6.1878485679626465
    10. '(' → logprob: -6.4378485679626465

Token 1479: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4331762492656708
    2. '   ' → logprob: -1.6831762790679932
    3. '       ' → logprob: -2.058176279067993
    4. 'if' (adapté à ' if') → logprob: -4.058176040649414
    5. '	       ' → logprob: -4.683176040649414
    6. '	if' → logprob: -5.808176040649414
    7. '	   ' → logprob: -6.058176040649414
    8. '		' → logprob: -6.308176040649414
    9. '	' → logprob: -6.433176040649414
    10. '               ' → logprob: -7.058176040649414

Token 1480: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.10020699352025986
    2. ' pos' → logprob: -2.3502070903778076
    3. '           ' → logprob: -15.850207328796387
    4. '(pos' → logprob: -16.10020637512207
    5. '_pos' → logprob: -16.97520637512207
    6. '	pos' → logprob: -17.85020637512207
    7. '.pos' → logprob: -17.97520637512207
    8. 'p' → logprob: -19.60020637512207
    9. '[pos' → logprob: -19.60020637512207
    10. 'position' → logprob: -19.97520637512207

Token 1481: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01819724030792713
    2. ' ==' → logprob: -4.018197059631348
    3. '==
' → logprob: -10.268197059631348
    4. '===' → logprob: -12.268197059631348
    5. '()==' → logprob: -13.143197059631348
    6. '=' → logprob: -13.268197059631348
    7. ')==' → logprob: -13.393197059631348
    8. ']==' → logprob: -13.893197059631348
    9. '==(' → logprob: -14.143197059631348
    10. ' ==
' → logprob: -15.893197059631348

Token 1482: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.4391956685576588e-05
    2. ' n' → logprob: -10.625024795532227
    3. '           ' → logprob: -17.625024795532227
    4. '   ' → logprob: -17.750024795532227
    5. '10' → logprob: -18.125024795532227
    6. '	n' → logprob: -18.250024795532227
    7. '_n' → logprob: -18.875024795532227
    8. '       ' → logprob: -19.250024795532227
    9. '...' → logprob: -20.000024795532227
    10. '(n' → logprob: -20.250024795532227

Token 1483: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2849397361278534
    2. ':' → logprob: -1.4099397659301758
    3. '       ' → logprob: -6.034939765930176
    4. '{
' → logprob: -7.409939765930176
    5. '           ' → logprob: -7.784939765930176
    6. '{' → logprob: -8.909939765930176
    7. '):
' → logprob: -9.409939765930176
    8. '   ' → logprob: -10.159939765930176
    9. '[' → logprob: -10.659939765930176
    10. '```' → logprob: -10.784939765930176

Token 1484: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5251817107200623
    2. '           ' → logprob: -0.9001817107200623
    3. '       ' → logprob: -6.400181770324707
    4. ':' → logprob: -8.525181770324707
    5. ':
' → logprob: -10.025181770324707
    6. '{
' → logprob: -10.400181770324707
    7. '   ' → logprob: -10.775181770324707
    8. '                   ' → logprob: -11.150181770324707
    9. '                       ' → logprob: -11.275181770324707
    10. '{' → logprob: -11.525181770324707

Token 1485: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23732909560203552
    2. '           ' → logprob: -1.612329125404358
    3. '                   ' → logprob: -4.612329006195068
    4. 'if' (adapté à ' if') → logprob: -6.362329006195068
    5. ' if' → logprob: -9.487329483032227
    6. '   ' → logprob: -9.612329483032227
    7. '       ' → logprob: -11.112329483032227
    8. '                       ' → logprob: -11.237329483032227
    9. '              ' → logprob: -12.362329483032227
    10. '	           ' → logprob: -12.862329483032227

Token 1486: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.31327101588249207
    2. 'not' → logprob: -1.3132710456848145
    3. '           ' → logprob: -12.063270568847656
    4. '               ' → logprob: -13.313270568847656
    5. '	not' → logprob: -14.563270568847656
    6. '(not' → logprob: -15.063270568847656
    7. 'n' → logprob: -15.188270568847656
    8. ' ' → logprob: -15.688270568847656
    9. 'b' → logprob: -15.938270568847656
    10. ' ' → logprob: -16.438270568847656

Token 1487: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.004078401252627373
    2. ' valid' → logprob: -5.504078388214111
    3. '(valid' → logprob: -18.004077911376953
    4. '.valid' → logprob: -19.879077911376953
    5. '_valid' → logprob: -20.504077911376953
    6. '	valid' → logprob: -20.754077911376953
    7. 'Valid' → logprob: -21.504077911376953
    8. 'v' → logprob: -22.504077911376953
    9. '           ' → logprob: -22.879077911376953
    10. 'b' → logprob: -22.879077911376953

Token 1488: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.005896680057048798
    2. 'digits' → logprob: -5.38089656829834
    3. '(b' → logprob: -7.38089656829834
    4. 'b' → logprob: -7.88089656829834
    5. 'Digits' → logprob: -8.88089656829834
    6. '_b' → logprob: -9.13089656829834
    7. '_d' → logprob: -12.13089656829834
    8. '```' → logprob: -12.25589656829834
    9. '_' → logprob: -12.50589656829834
    10. '   ' → logprob: -13.25589656829834

Token 1489: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -7.3458322731312364e-06
    2. '           ' → logprob: -12.750007629394531
    3. 'b' → logprob: -13.250007629394531
    4. '               ' → logprob: -13.500007629394531
    5. '```' → logprob: -14.750007629394531
    6. '(
' → logprob: -15.250007629394531
    7. '                   ' → logprob: -15.625007629394531
    8. '[b' → logprob: -15.875007629394531
    9. '       ' → logprob: -16.50000762939453
    10. '   ' → logprob: -17.00000762939453

Token 1490: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.21299156546592712
    2. 'b' → logprob: -2.08799147605896
    3. 'igits' → logprob: -2.96299147605896
    4. 'digits' → logprob: -4.212991714477539
    5. '(b' → logprob: -7.337991714477539
    6. '```' → logprob: -8.962991714477539
    7. ' b' → logprob: -9.087991714477539
    8. '[b' → logprob: -9.212991714477539
    9. ')' → logprob: -9.212991714477539
    10. ')b' → logprob: -9.462991714477539

Token 1491: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10075445473194122
    2. '               ' → logprob: -3.350754499435425
    3. '                   ' → logprob: -3.350754499435425
    4. '):' → logprob: -4.100754261016846
    5. ':
' → logprob: -4.975754261016846
    6. '():
' → logprob: -6.725754261016846
    7. ':' → logprob: -7.350754261016846
    8. ')' → logprob: -8.725754737854004
    9. '           ' → logprob: -9.350754737854004
    10. ''):
' → logprob: -9.975754737854004

Token 1492: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0028185509145259857
    2. '               ' → logprob: -5.877818584442139
    3. '                       ' → logprob: -12.12781810760498
    4. '           ' → logprob: -12.62781810760498
    5. '                  ' → logprob: -13.50281810760498
    6. '```' → logprob: -13.75281810760498
    7. 'return' → logprob: -14.12781810760498
    8. ':
' → logprob: -14.75281810760498
    9. '{
' → logprob: -14.87781810760498
    10. '       ' → logprob: -15.00281810760498

Token 1493: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.577226459980011
    2. 'return' (adapté à ' return') → logprob: -0.827226459980011
    3. '               ' → logprob: -6.952226638793945
    4. ' return' → logprob: -8.077226638793945
    5. '                       ' → logprob: -11.827226638793945
    6. '   ' → logprob: -11.827226638793945
    7. '       ' → logprob: -13.327226638793945
    8. '           ' → logprob: -14.452226638793945
    9. '                  ' → logprob: -14.577226638793945
    10. '	return' → logprob: -14.827226638793945

Token 1494: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00010449681576574221
    2. '           ' → logprob: -9.250104904174805
    3. '                   ' → logprob: -12.125104904174805
    4. '
' → logprob: -13.500104904174805
    5. '```' → logprob: -14.500104904174805
    6. 'num' → logprob: -15.125104904174805
    7. '              ' → logprob: -15.500104904174805
    8. 'return' → logprob: -15.750104904174805
    9. 'b' → logprob: -16.250104904174805
    10. '			' → logprob: -16.250104904174805

Token 1495: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2352385965641588e-05
    2. '           ' → logprob: -12.250012397766113
    3. '                   ' → logprob: -12.375012397766113
    4. '```' → logprob: -13.125012397766113
    5. '			' → logprob: -15.000012397766113
    6. '       ' → logprob: -15.250012397766113
    7. '
' → logprob: -15.500012397766113
    8. '              ' → logprob: -16.250011444091797
    9. '<|end|>' → logprob: -16.250011444091797
    10. '                       ' → logprob: -16.375011444091797

Token 1496: ' num' (ID: 2269)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31545552611351013
    2. '               ' → logprob: -1.9404555559158325
    3. 'num' (adapté à ' num') → logprob: -2.065455436706543
    4. '                   ' → logprob: -9.690455436706543
    5. ' num' → logprob: -10.690455436706543
    6. '       ' → logprob: -11.440455436706543
    7. '   ' → logprob: -11.690455436706543
    8. '            ' → logprob: -11.815455436706543
    9. '              ' → logprob: -12.065455436706543
    10. '          ' → logprob: -12.065455436706543

Token 1497: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0011046138824895024
    2. '_' → logprob: -6.876104831695557
    3. '_s' → logprob: -10.876104354858398
    4. ' =' → logprob: -11.501104354858398
    5. 'str' → logprob: -11.501104354858398
    6. '           ' → logprob: -11.876104354858398
    7. ' _' → logprob: -12.251104354858398
    8. '```' → logprob: -12.626104354858398
    9. 'Str' → logprob: -13.626104354858398
    10. '_
' → logprob: -13.751104354858398

Token 1498: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11302439868450165
    2. '=' → logprob: -2.2380244731903076
    3. '               ' → logprob: -9.238024711608887
    4. '           ' → logprob: -9.988024711608887
    5. '                   ' → logprob: -10.613024711608887
    6. '                ' → logprob: -10.863024711608887
    7. '            ' → logprob: -12.113024711608887
    8. '```' → logprob: -12.988024711608887
    9. '=
' → logprob: -13.488024711608887
    10. '                       ' → logprob: -13.863024711608887

Token 1499: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.3142065703868866
    2. ' build' → logprob: -1.314206600189209
    3. '''.' → logprob: -7.814206600189209
    4. '           ' → logprob: -8.43920612335205
    5. ' ''.' → logprob: -9.31420612335205
    6. '               ' → logprob: -9.81420612335205
    7. '   ' → logprob: -9.93920612335205
    8. '                   ' → logprob: -10.31420612335205
    9. '	build' → logprob: -10.81420612335205
    10. '(build' → logprob: -11.43920612335205

Token 1500: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -5.466968650580384e-05
    2. '```' → logprob: -10.750054359436035
    3. '               ' → logprob: -11.750054359436035
    4. 'number' → logprob: -12.125054359436035
    5. '_' → logprob: -12.500054359436035
    6. 'str' → logprob: -13.000054359436035
    7. '           ' → logprob: -13.250054359436035
    8. '   ' → logprob: -13.375054359436035
    9. '_digits' → logprob: -13.375054359436035
    10. '_code' → logprob: -13.375054359436035

Token 1501: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -5.240481914370321e-05
    2. 'b' → logprob: -10.125052452087402
    3. '(' → logprob: -12.500052452087402
    4. '[b' → logprob: -13.375052452087402
    5. '```' → logprob: -13.375052452087402
    6. '           ' → logprob: -13.500052452087402
    7. '               ' → logprob: -14.250052452087402
    8. '	b' → logprob: -14.375052452087402
    9. ',b' → logprob: -14.375052452087402
    10. ')b' → logprob: -14.375052452087402

Token 1502: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.0032635112293064594
    2. 'digits' → logprob: -5.753263473510742
    3. 'igits' → logprob: -10.378263473510742
    4. '_' → logprob: -11.253263473510742
    5. 'Digits' → logprob: -11.503263473510742
    6. '```' → logprob: -11.878263473510742
    7. '_d' → logprob: -12.128263473510742
    8. '[' → logprob: -12.878263473510742
    9. '[]' → logprob: -13.003263473510742
    10. ')' → logprob: -13.128263473510742

Token 1503: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011264061322435737
    2. '           ' → logprob: -7.501126289367676
    3. ',-' → logprob: -8.501126289367676
    4. ',b' → logprob: -9.126126289367676
    5. '[:-' → logprob: -9.876126289367676
    6. ' ,' → logprob: -10.001126289367676
    7. '               ' → logprob: -10.626126289367676
    8. ',None' → logprob: -10.876126289367676
    9. '```' → logprob: -11.126126289367676
    10. '                   ' → logprob: -11.251126289367676

Token 1504: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.191489642835222e-05
    2. ' -' → logprob: -10.625041961669922
    3. '-c' → logprob: -11.875041961669922
    4. '           ' → logprob: -13.000041961669922
    5. '   ' → logprob: -13.000041961669922
    6. '                   ' → logprob: -13.375041961669922
    7. '       ' → logprob: -13.750041961669922
    8. 'c' → logprob: -13.875041961669922
    9. '-
' → logprob: -14.375041961669922
    10. '
' → logprob: -14.375041961669922

Token 1505: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. '2' → logprob: -11.750008583068848
    3. ' ' → logprob: -15.375008583068848
    4. '   ' → logprob: -16.00000762939453
    5. '
' → logprob: -17.12500762939453
    6. '' → logprob: -18.06250762939453
    7. '۱' → logprob: -18.06250762939453
    8. '१' → logprob: -18.68750762939453
    9. '১' → logprob: -19.06250762939453
    10. '  ' → logprob: -19.68750762939453

Token 1506: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48627060651779175
    2. ')
' → logprob: -0.9862706065177917
    3. '           ' → logprob: -4.486270427703857
    4. '               ' → logprob: -7.111270427703857
    5. '       ' → logprob: -11.111270904541016
    6. ')
' → logprob: -11.486270904541016
    7. '                   ' → logprob: -12.486270904541016
    8. ')`
' → logprob: -12.861270904541016
    9. ')

' → logprob: -13.861270904541016
    10. '   ' → logprob: -13.861270904541016

Token 1507: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000581388536375016
    2. ')' → logprob: -7.75058126449585
    3. '<|end|>' → logprob: -9.625581741333008
    4. '           ' → logprob: -10.375581741333008
    5. '```' → logprob: -11.125581741333008
    6. '		       ' → logprob: -11.625581741333008
    7. '       ' → logprob: -12.000581741333008
    8. '                   ' → logprob: -12.250581741333008
    9. '              ' → logprob: -12.500581741333008
    10. '<|end|>' → logprob: -13.000581741333008

Token 1508: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003951475024223328
    2. '           ' → logprob: -5.878951549530029
    3. ' if' → logprob: -7.003951549530029
    4. 'if' (adapté à ' if') → logprob: -8.378951072692871
    5. '                   ' → logprob: -12.753951072692871
    6. '       ' → logprob: -13.128951072692871
    7. '   ' → logprob: -13.628951072692871
    8. '              ' → logprob: -14.503951072692871
    9. '
' → logprob: -14.628951072692871
    10. '```' → logprob: -15.503951072692871

Token 1509: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.12692873179912567
    2. ' num' → logprob: -2.1269288063049316
    3. '           ' → logprob: -15.251928329467773
    4. '               ' → logprob: -15.251928329467773
    5. 'len' → logprob: -16.376928329467773
    6. '(num' → logprob: -17.001928329467773
    7. '   ' → logprob: -17.251928329467773
    8. 'not' → logprob: -17.376928329467773
    9. ' ' → logprob: -17.751928329467773
    10. '                   ' → logprob: -18.001928329467773

Token 1510: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00044044392416253686
    2. '[' → logprob: -7.87544059753418
    3. 'str' → logprob: -10.37544059753418
    4. ''' → logprob: -11.87544059753418
    5. '0' → logprob: -12.00044059753418
    6. ''_' → logprob: -12.12544059753418
    7. ''[' → logprob: -12.62544059753418
    8. '   ' → logprob: -13.37544059753418
    9. '```' → logprob: -13.87544059753418
    10. 'Str' → logprob: -14.62544059753418

Token 1511: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2200749754119897e-06
    2. '           ' → logprob: -14.250001907348633
    3. '```' → logprob: -14.375001907348633
    4. '               ' → logprob: -14.500001907348633
    5. '==' → logprob: -15.750001907348633
    6. '                   ' → logprob: -16.375001907348633
    7. '   ' → logprob: -16.625001907348633
    8. ' [' → logprob: -17.125001907348633
    9. ' ==' → logprob: -17.250001907348633
    10. '[
' → logprob: -17.375001907348633

Token 1512: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013011827832087874
    2. '[' → logprob: -9.250129699707031
    3. ' ' → logprob: -10.375129699707031
    4. ''' → logprob: -13.625129699707031
    5. '   ' → logprob: -14.250129699707031
    6. ' [' → logprob: -15.875129699707031
    7. '﻿' → logprob: -15.875129699707031
    8. '
' → logprob: -16.00012969970703
    9. '```' → logprob: -16.12512969970703
    10. '#' → logprob: -17.00012969970703

Token 1513: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018264309037476778
    2. ']==' → logprob: -6.876826286315918
    3. '==' → logprob: -8.501826286315918
    4. ']!=' → logprob: -8.876826286315918
    5. '']' → logprob: -9.001826286315918
    6. ']=='' → logprob: -9.376826286315918
    7. ']!='' → logprob: -9.626826286315918
    8. ' ==' → logprob: -10.001826286315918
    9. ' !=' → logprob: -10.376826286315918
    10. '[' → logprob: -10.626826286315918

Token 1514: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3919229805469513
    2. ' ==' → logprob: -1.141922950744629
    3. '=='' → logprob: -5.391922950744629
    4. ' !=' → logprob: -9.016922950744629
    5. ']==' → logprob: -9.516922950744629
    6. '!=' → logprob: -9.891922950744629
    7. ' =='' → logprob: -9.891922950744629
    8. '==
' → logprob: -10.141922950744629
    9. ']' → logprob: -10.141922950744629
    10. '```' → logprob: -10.516922950744629

Token 1515: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0002124806633219123
    2. ' '' → logprob: -8.500212669372559
    3. '0' → logprob: -12.250212669372559
    4. '"' → logprob: -12.625212669372559
    5. ' ' → logprob: -15.000212669372559
    6. '
' → logprob: -15.375212669372559
    7. '`' → logprob: -16.625211715698242
    8. ''
' → logprob: -17.000211715698242
    9. '('' → logprob: -17.375211715698242
    10. '```' → logprob: -17.375211715698242

Token 1516: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011714138090610504
    2. ''' → logprob: -6.751171588897705
    3. ' ' → logprob: -13.876171112060547
    4. '')' → logprob: -15.126171112060547
    5. '"' → logprob: -17.126171112060547
    6. ' '' → logprob: -17.751171112060547
    7. '`' → logprob: -18.501171112060547
    8. ''s' → logprob: -18.626171112060547
    9. '```' → logprob: -19.126171112060547
    10. '1' → logprob: -19.251171112060547

Token 1517: ''' (ID: 6)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0041548567824065685
    2. 'or' → logprob: -6.254154682159424
    3. '               ' → logprob: -6.754154682159424
    4. ')' → logprob: -7.129154682159424
    5. ''or' → logprob: -9.504155158996582
    6. '           ' → logprob: -9.754155158996582
    7. ']' → logprob: -10.379155158996582
    8. '')' → logprob: -10.379155158996582
    9. '              ' → logprob: -10.879155158996582
    10. ''' → logprob: -10.879155158996582

Token 1518: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.036383312195539474
    2. 'or' → logprob: -3.5363833904266357
    3. '               ' → logprob: -5.036383152008057
    4. ')' → logprob: -10.286383628845215
    5. ':
' → logprob: -10.786383628845215
    6. '              ' → logprob: -10.911383628845215
    7. ''or' → logprob: -11.036383628845215
    8. '           ' → logprob: -11.786383628845215
    9. '                   ' → logprob: -12.161383628845215
    10. ':' → logprob: -12.661383628845215

Token 1519: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.5759397745132446
    2. ' num' → logprob: -0.8259397745132446
    3. '               ' → logprob: -16.200939178466797
    4. '           ' → logprob: -16.450939178466797
    5. '	num' → logprob: -16.700939178466797
    6. 'len' → logprob: -17.825939178466797
    7. '   ' → logprob: -18.200939178466797
    8. '(num' → logprob: -18.450939178466797
    9. '            ' → logprob: -18.575939178466797
    10. '[num' → logprob: -18.950939178466797

Token 1520: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.009099856950342655
    2. 'num' → logprob: -5.134099960327148
    3. '_num' → logprob: -6.009099960327148
    4. 'str' → logprob: -7.259099960327148
    5. '[num' → logprob: -13.384099960327148
    6. ' num' → logprob: -13.509099960327148
    7. '```' → logprob: -13.634099960327148
    8. 'Str' → logprob: -14.009099960327148
    9. '_' → logprob: -15.384099960327148
    10. '_len' → logprob: -15.509099960327148

Token 1521: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.05537889897823334
    2. '_str' → logprob: -2.9303789138793945
    3. 'str' → logprob: -8.680378913879395
    4. 'num' → logprob: -8.805378913879395
    5. '_num' → logprob: -9.555378913879395
    6. 'Str' → logprob: -9.805378913879395
    7. '   ' → logprob: -12.055378913879395
    8. '[' → logprob: -12.180378913879395
    9. '```' → logprob: -12.305378913879395
    10. '#' → logprob: -12.680378913879395

Token 1522: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0052360063418745995
    2. ''' → logprob: -5.6302361488342285
    3. ']' → logprob: -6.7552361488342285
    4. '']' → logprob: -8.13023567199707
    5. '0' → logprob: -9.88023567199707
    6. ')' → logprob: -10.38023567199707
    7. ' ' → logprob: -10.88023567199707
    8. '')' → logprob: -11.00523567199707
    9. ']'' → logprob: -11.25523567199707
    10. '   ' → logprob: -12.00523567199707

Token 1523: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014590282924473286
    2. ']==' → logprob: -5.014590263366699
    3. '']' → logprob: -5.389590263366699
    4. '==' → logprob: -6.264590263366699
    5. ']=='' → logprob: -7.514590263366699
    6. ' ==' → logprob: -7.514590263366699
    7. ''' → logprob: -9.0145902633667
    8. '=='' → logprob: -9.7645902633667
    9. '']==' → logprob: -10.2645902633667
    10. '']=='' → logprob: -10.3895902633667

Token 1524: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14950305223464966
    2. '==' → logprob: -2.024502992630005
    3. '=='' → logprob: -5.399503231048584
    4. ''' → logprob: -6.274503231048584
    5. ' =='' → logprob: -8.274502754211426
    6. ']==' → logprob: -10.149502754211426
    7. '[' → logprob: -10.899502754211426
    8. '```' → logprob: -11.149502754211426
    9. ' ' → logprob: -11.649502754211426
    10. ' '' → logprob: -11.649502754211426

Token 1525: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0014484523562714458
    2. '0' → logprob: -7.126448631286621
    3. ' '' → logprob: -7.376448631286621
    4. ' ' → logprob: -11.376448631286621
    5. '`' → logprob: -13.126448631286621
    6. '"' → logprob: -13.376448631286621
    7. '('' → logprob: -14.376448631286621
    8. ' ' → logprob: -14.376448631286621
    9. '   ' → logprob: -14.876448631286621
    10. '='' → logprob: -15.501448631286621

Token 1526: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.451116051815916e-05
    2. ''' → logprob: -10.875024795532227
    3. ' ' → logprob: -13.125024795532227
    4. '```' → logprob: -13.875024795532227
    5. '`' → logprob: -14.125024795532227
    6. '   ' → logprob: -15.125024795532227
    7. '1' → logprob: -15.375024795532227
    8. '9' → logprob: -15.625024795532227
    9. '')' → logprob: -15.875024795532227
    10. '...' → logprob: -15.937524795532227

Token 1527: '':
' (ID: 7669)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.38445329666137695
    2. ':
' → logprob: -1.509453296661377
    3. '                   ' → logprob: -3.134453296661377
    4. '):
' → logprob: -3.509453296661377
    5. ''):
' → logprob: -4.134453296661377
    6. ':' → logprob: -5.259453296661377
    7. '           ' → logprob: -6.634453296661377
    8. '':
' → logprob: -7.134453296661377
    9. '):' → logprob: -8.134452819824219
    10. '                       ' → logprob: -8.259452819824219

Token 1528: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.016230138018727303
    2. '               ' → logprob: -4.26623010635376
    3. '                       ' → logprob: -6.26623010635376
    4. ':
' → logprob: -9.516230583190918
    5. '                  ' → logprob: -10.391230583190918
    6. ':' → logprob: -11.641230583190918
    7. '                           ' → logprob: -11.766230583190918
    8. '<|end|>' → logprob: -11.766230583190918
    9. '                    ' → logprob: -12.016230583190918
    10. '                ' → logprob: -12.141230583190918

Token 1529: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004242823924869299
    2. 'return' (adapté à ' return') → logprob: -5.879242897033691
    3. '                       ' → logprob: -6.754242897033691
    4. ' return' → logprob: -8.629242897033691
    5. '               ' → logprob: -9.629242897033691
    6. 'continue' → logprob: -11.129242897033691
    7. '           ' → logprob: -12.879242897033691
    8. '                  ' → logprob: -13.004242897033691
    9. '
' → logprob: -13.129242897033691
    10. '                    ' → logprob: -13.379242897033691

Token 1530: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.026791462674736977
    2. '                   ' → logprob: -3.651791572570801
    3. '                       ' → logprob: -8.0267915725708
    4. '           ' → logprob: -9.1517915725708
    5. '                ' → logprob: -10.6517915725708
    6. '              ' → logprob: -11.9017915725708
    7. '```' → logprob: -12.0267915725708
    8. 'b' → logprob: -12.6517915725708
    9. '                           ' → logprob: -12.7767915725708
    10. '                
' → logprob: -13.0267915725708

Token 1531: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.204720582696609e-05
    2. '                   ' → logprob: -10.250052452087402
    3. '```' → logprob: -11.875052452087402
    4. '                ' → logprob: -13.000052452087402
    5. '              ' → logprob: -13.000052452087402
    6. '           ' → logprob: -13.375052452087402
    7. '                       ' → logprob: -13.625052452087402
    8. '                
' → logprob: -14.000052452087402
    9. '
' → logprob: -14.125052452087402
    10. '       ' → logprob: -15.875052452087402

Token 1532: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.6830204129219055
    2. '               ' → logprob: -0.8080204129219055
    3. '           ' → logprob: -3.0580203533172607
    4. ' num' → logprob: -6.18302059173584
    5. '
' → logprob: -9.93302059173584
    6. '                   ' → logprob: -10.68302059173584
    7. '```' → logprob: -10.93302059173584
    8. 'prime' → logprob: -11.43302059173584
    9. '   ' → logprob: -12.30802059173584
    10. '              ' → logprob: -12.68302059173584

Token 1533: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3155370056629181
    2. '=' → logprob: -1.8155369758605957
    3. '_str' → logprob: -2.3155369758605957
    4. '           ' → logprob: -6.065536975860596
    5. '=int' → logprob: -6.065536975860596
    6. '_' → logprob: -6.190536975860596
    7. ')' → logprob: -7.815536975860596
    8. '_tokens' → logprob: -8.315537452697754
    9. ' ' → logprob: -8.440537452697754
    10. '   ' → logprob: -8.565537452697754

Token 1534: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023809511214494705
    2. 'num' → logprob: -3.7738094329833984
    3. ' int' → logprob: -7.523809432983398
    4. ' num' → logprob: -10.648809432983398
    5. '(int' → logprob: -17.2738094329834
    6. '   ' → logprob: -17.7738094329834
    7. '	int' → logprob: -18.2738094329834
    8. '=int' → logprob: -18.5238094329834
    9. '<int' → logprob: -19.0238094329834
    10. '```' → logprob: -19.5238094329834

Token 1535: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.0015993680572137237
    2. 'num' → logprob: -6.501599311828613
    3. '(' → logprob: -9.251599311828613
    4. '[num' → logprob: -14.751599311828613
    5. '(
' → logprob: -15.626599311828613
    6. ',num' → logprob: -15.876599311828613
    7. ' num' → logprob: -16.37660026550293
    8. '	num' → logprob: -16.50160026550293
    9. ' (' → logprob: -16.62660026550293
    10. '```' → logprob: -16.62660026550293

Token 1536: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.8193366486229934e-05
    2. ''_' → logprob: -11.125018119812012
    3. 'str' → logprob: -13.750018119812012
    4. '_num' → logprob: -14.375018119812012
    5. ')' → logprob: -14.375018119812012
    6. '_' → logprob: -15.000018119812012
    7. ')_' → logprob: -15.625018119812012
    8. '```' → logprob: -15.625018119812012
    9. 'Str' → logprob: -16.000019073486328
    10. '_)' → logprob: -16.375019073486328

Token 1537: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6045811772346497
    2. ')
' → logprob: -0.8545811772346497
    3. '               ' → logprob: -3.729581117630005
    4. '           ' → logprob: -5.479581356048584
    5. ')
' → logprob: -10.354580879211426
    6. '):
' → logprob: -11.354580879211426
    7. '                   ' → logprob: -12.354580879211426
    8. '              ' → logprob: -12.854580879211426
    9. '       ' → logprob: -12.979580879211426
    10. ')`
' → logprob: -13.604580879211426

Token 1538: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07077798247337341
    2. '           ' → logprob: -2.6957778930664062
    3. '```' → logprob: -7.320777893066406
    4. '                   ' → logprob: -9.570777893066406
    5. '              ' → logprob: -10.945777893066406
    6. '                       ' → logprob: -10.945777893066406
    7. '       ' → logprob: -10.945777893066406
    8. '            
' → logprob: -11.445777893066406
    9. '<|end|>' → logprob: -11.570777893066406
    10. '
' → logprob: -12.070777893066406

Token 1539: ' prime' (ID: 9197)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16826984286308289
    2. 'prime' (adapté à ' prime') → logprob: -1.9182698726654053
    3. ' prime' → logprob: -4.918269634246826
    4. '```' → logprob: -7.793269634246826
    5. '_prime' → logprob: -9.293270111083984
    6. '           ' → logprob: -9.793270111083984
    7. '                   ' → logprob: -9.918270111083984
    8. 'prim' → logprob: -10.543270111083984
    9. '
' → logprob: -11.043270111083984
    10. '``' → logprob: -11.668270111083984

Token 1540: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1942281424999237
    2. ' =' → logprob: -1.819228172302246
    3. ')' → logprob: -4.819228172302246
    4. '==' → logprob: -5.819228172302246
    5. ' ==' → logprob: -6.444228172302246
    6. ':' → logprob: -7.944228172302246
    7. '           ' → logprob: -8.069228172302246
    8. '=True' → logprob: -8.194228172302246
    9. ')==' → logprob: -8.569228172302246
    10. '<|end|>' → logprob: -9.069228172302246

Token 1541: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.12692853808403015
    2. ' is' → logprob: -2.1269285678863525
    3. 'True' → logprob: -14.626928329467773
    4. 'False' → logprob: -18.001928329467773
    5. '	is' → logprob: -18.126928329467773
    6. '(is' → logprob: -18.376928329467773
    7. ' True' → logprob: -18.376928329467773
    8. '```' → logprob: -18.376928329467773
    9. 'not' → logprob: -18.501928329467773
    10. '           ' → logprob: -19.251928329467773

Token 1542: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0028462447226047516
    2. 'prime' → logprob: -5.8778462409973145
    3. '_true' → logprob: -10.627846717834473
    4. 'is' → logprob: -11.627846717834473
    5. 'Prime' → logprob: -12.377846717834473
    6. 'True' → logprob: -12.752846717834473
    7. '_false' → logprob: -14.877846717834473
    8. '```' → logprob: -15.502846717834473
    9. ' prime' → logprob: -15.627846717834473
    10. '_' → logprob: -16.502845764160156

Token 1543: '(num' (ID: 15828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2370128333568573
    2. '(num' → logprob: -1.6120128631591797
    3. '(
' → logprob: -4.48701286315918
    4. '(pr' → logprob: -9.48701286315918
    5. 'num' → logprob: -9.48701286315918
    6. ')' → logprob: -9.98701286315918
    7. '(n' → logprob: -10.73701286315918
    8. ' (' → logprob: -10.73701286315918
    9. '(

' → logprob: -11.86201286315918
    10. '(token' → logprob: -11.98701286315918

Token 1544: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18034759163856506
    2. ')
' → logprob: -1.8053475618362427
    3. '(num' → logprob: -8.305347442626953
    4. '):
' → logprob: -8.930347442626953
    5. '(' → logprob: -9.430347442626953
    6. '')' → logprob: -10.680347442626953
    7. '):' → logprob: -11.180347442626953
    8. '(
' → logprob: -11.430347442626953
    9. ')(
' → logprob: -11.430347442626953
    10. ')`
' → logprob: -11.930347442626953

Token 1545: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001433216268196702
    2. '                   ' → logprob: -7.501433372497559
    3. '           ' → logprob: -8.126433372497559
    4. ')' → logprob: -8.376433372497559
    5. '```' → logprob: -8.876433372497559
    6. '<|end|>' → logprob: -9.376433372497559
    7. '                ' → logprob: -10.126433372497559
    8. '              ' → logprob: -10.751433372497559
    9. '                       ' → logprob: -11.251433372497559
    10. '                
' → logprob: -11.626433372497559

Token 1546: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006852717488072813
    2. '                   ' → logprob: -7.875685214996338
    3. ' if' → logprob: -9.125685691833496
    4. 'if' (adapté à ' if') → logprob: -9.250685691833496
    5. '                       ' → logprob: -10.375685691833496
    6. '           ' → logprob: -10.375685691833496
    7. '```' → logprob: -11.000685691833496
    8. '                ' → logprob: -11.750685691833496
    9. '              ' → logprob: -12.375685691833496
    10. '                               ' → logprob: -12.500685691833496

Token 1547: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.5759612321853638
    2. ' prime' → logprob: -0.8259612321853638
    3. '               ' → logprob: -11.825961112976074
    4. '_prime' → logprob: -12.325961112976074
    5. ' not' → logprob: -12.700961112976074
    6. '                   ' → logprob: -12.825961112976074
    7. '           ' → logprob: -13.325961112976074
    8. 'not' → logprob: -13.700961112976074
    9. 'pr' → logprob: -14.700961112976074
    10. 'prim' → logprob: -15.825961112976074

Token 1548: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15422405302524567
    2. ':' → logprob: -2.029224157333374
    3. '):
' → logprob: -5.279223918914795
    4. '                   ' → logprob: -5.529223918914795
    5. '               ' → logprob: -6.279223918914795
    6. '                       ' → logprob: -9.029224395751953
    7. '=' → logprob: -9.279224395751953
    8. '):' → logprob: -9.404224395751953
    9. '           ' → logprob: -9.529224395751953
    10. '==' → logprob: -9.654224395751953

Token 1549: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0055444128811359406
    2. '               ' → logprob: -5.755544185638428
    3. '                       ' → logprob: -6.380544185638428
    4. '```' → logprob: -8.630544662475586
    5. '                  ' → logprob: -9.255544662475586
    6. ':' → logprob: -9.380544662475586
    7. ':
' → logprob: -9.630544662475586
    8. '                           ' → logprob: -9.630544662475586
    9. '                 ' → logprob: -10.380544662475586
    10. '           ' → logprob: -10.505544662475586

Token 1550: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.009193053469061852
    2. '                   ' → logprob: -5.259192943572998
    3. ' if' → logprob: -6.009192943572998
    4. '                       ' → logprob: -6.509192943572998
    5. '               ' → logprob: -12.884193420410156
    6. '                    ' → logprob: -14.134193420410156
    7. '                           ' → logprob: -14.259193420410156
    8. '                     ' → logprob: -14.384193420410156
    9. '                               ' → logprob: -14.884193420410156
    10. '           ' → logprob: -15.259193420410156

Token 1551: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.20146061480045319
    2. 'not' → logprob: -1.701460599899292
    3. '(not' → logprob: -10.326460838317871
    4. '                   ' → logprob: -11.576460838317871
    5. '                       ' → logprob: -13.326460838317871
    6. '               ' → logprob: -13.451460838317871
    7. '	not' → logprob: -14.326460838317871
    8. ' ' → logprob: -15.076460838317871
    9. '                    ' → logprob: -15.201460838317871
    10. '                           ' → logprob: -15.576460838317871

Token 1552: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.006716079078614712
    2. ' best' → logprob: -5.006716251373291
    3. '(best' → logprob: -14.131715774536133
    4. '	best' → logprob: -17.631715774536133
    5. '   ' → logprob: -18.506715774536133
    6. '           ' → logprob: -19.506715774536133
    7. '
' → logprob: -20.256715774536133
    8. '_best' → logprob: -20.381715774536133
    9. 'Best' → logprob: -20.881715774536133
    10. '       ' → logprob: -21.006715774536133

Token 1553: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.001418803702108562
    2. '_num' → logprob: -6.626418590545654
    3. '_' → logprob: -9.626419067382812
    4. 'prime' → logprob: -11.376419067382812
    5. '
' → logprob: -12.376419067382812
    6. '_pr' → logprob: -12.876419067382812
    7. '```' → logprob: -13.126419067382812
    8. '_
' → logprob: -13.251419067382812
    9. '_true' → logprob: -14.126419067382812
    10. '_p' → logprob: -14.126419067382812

Token 1554: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0002458430244587362
    2. ' or' → logprob: -8.500246047973633
    3. 'or' → logprob: -11.250246047973633
    4. '_or' → logprob: -11.250246047973633
    5. '                   ' → logprob: -12.750246047973633
    6. '               ' → logprob: -13.000246047973633
    7. '\' → logprob: -13.125246047973633
    8. '```' → logprob: -13.375246047973633
    9. '           ' → logprob: -13.625246047973633
    10. '   ' → logprob: -13.750246047973633

Token 1555: 'wo' (ID: 1338)
  Prédit: 'wo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wo' → logprob: -0.34862345457077026
    2. '_' → logprob: -1.223623514175415
    3. '_w' → logprob: -9.473623275756836
    4. 'w' → logprob: -10.598623275756836
    5. '
' → logprob: -10.973623275756836
    6. '   ' → logprob: -11.223623275756836
    7. '```' → logprob: -11.723623275756836
    8. '_
' → logprob: -12.848623275756836
    9. ' wo' → logprob: -12.973623275756836
    10. '	' → logprob: -13.098623275756836

Token 1556: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.029753033071756363
    2. '_' → logprob: -3.5297529697418213
    3. 'wo' → logprob: -14.029752731323242
    4. 'c' → logprob: -14.654752731323242
    5. '_co' → logprob: -14.779752731323242
    6. '   ' → logprob: -15.779752731323242
    7. '```' → logprob: -16.154752731323242
    8. '_
' → logprob: -16.279752731323242
    9. '
' → logprob: -16.279752731323242
    10. '_so' → logprob: -16.404752731323242

Token 1557: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.009759158827364445
    2. 'or' → logprob: -4.634758949279785
    3. '                   ' → logprob: -13.509758949279785
    4. '```' → logprob: -15.134758949279785
    5. '	or' → logprob: -15.259758949279785
    6. '                       ' → logprob: -15.509758949279785
    7. '                           ' → logprob: -15.634758949279785
    8. '           ' → logprob: -15.884758949279785
    9. '               ' → logprob: -15.884758949279785
    10. ' ' → logprob: -16.0097599029541

Token 1558: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.09554529935121536
    2. '(num' → logprob: -2.4705452919006348
    3. '(' → logprob: -6.095545291900635
    4. '(best' → logprob: -6.220545291900635
    5. '(pr' → logprob: -6.470545291900635
    6. '                   ' → logprob: -8.095545768737793
    7. 'num' → logprob: -8.720545768737793
    8. '(not' → logprob: -9.095545768737793
    9. ' num' → logprob: -9.720545768737793
    10. '(d' → logprob: -10.345545768737793

Token 1559: 'best' (ID: 17844)
  Prédit: 'best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.013286931440234184
    2. ' best' → logprob: -4.76328706741333
    3. '(best' → logprob: -5.76328706741333
    4. 'prime' → logprob: -6.63828706741333
    5. 'num' → logprob: -8.763286590576172
    6. ' prime' → logprob: -10.638286590576172
    7. ' (' → logprob: -11.513286590576172
    8. ' num' → logprob: -12.388286590576172
    9. '           ' → logprob: -12.638286590576172
    10. '(num' → logprob: -12.888286590576172

Token 1560: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.31352344155311584
    2. '_num' → logprob: -1.3135234117507935
    3. '_' → logprob: -9.438523292541504
    4. '_digit' → logprob: -9.813523292541504
    5. '_pr' → logprob: -9.938523292541504
    6. ''_' → logprob: -10.563523292541504
    7. '_token' → logprob: -11.063523292541504
    8. ')_' → logprob: -11.938523292541504
    9. '_digits' → logprob: -12.063523292541504
    10. ' _' → logprob: -12.313523292541504

Token 1561: '_' (ID: 62)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5268036127090454
    2. '_' → logprob: -1.5268036127090454
    3. 'and' → logprob: -1.6518036127090454
    4. '_and' → logprob: -7.776803493499756
    5. ')' → logprob: -10.776803970336914
    6. '                   ' → logprob: -11.026803970336914
    7. '           ' → logprob: -11.151803970336914
    8. '```' → logprob: -11.276803970336914
    9. '_num' → logprob: -11.401803970336914
    10. ' or' → logprob: -11.651803970336914

Token 1562: 'wo' (ID: 1338)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.172189861536026
    2. ' and' → logprob: -1.9221898317337036
    3. 'True' → logprob: -5.172189712524414
    4. 'wo' → logprob: -5.422189712524414
    5. ' True' → logprob: -7.922189712524414
    6. '9' → logprob: -8.172189712524414
    7. '=True' → logprob: -8.297189712524414
    8. 'w' → logprob: -8.797189712524414
    9. '_' → logprob: -8.922189712524414
    10. '           ' → logprob: -9.297189712524414

Token 1563: '_c' (ID: 1303)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.01125259604305029
    2. ' and' → logprob: -4.511252403259277
    3. '           ' → logprob: -9.886252403259277
    4. '                   ' → logprob: -10.511252403259277
    5. '        ' → logprob: -10.761252403259277
    6. '            ' → logprob: -11.261252403259277
    7. '   ' → logprob: -11.386252403259277
    8. '               ' → logprob: -11.511252403259277
    9. '                ' → logprob: -11.511252403259277
    10. '    ' → logprob: -11.761252403259277

Token 1564: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.062005553394556046
    2. 'and' → logprob: -2.8120055198669434
    3. '                       ' → logprob: -11.187005996704102
    4. '                   ' → logprob: -11.312005996704102
    5. '                    ' → logprob: -12.687005996704102
    6. ')' → logprob: -13.062005996704102
    7. '                     ' → logprob: -13.437005996704102
    8. '                        ' → logprob: -14.062005996704102
    9. '                           ' → logprob: -14.187005996704102
    10. ' ' → logprob: -14.437005996704102

Token 1565: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.5759395360946655
    2. 'num' → logprob: -0.8259395360946655
    3. '(num' → logprob: -16.575939178466797
    4. '[num' → logprob: -18.075939178466797
    5. 'number' → logprob: -18.325939178466797
    6. '	num' → logprob: -18.325939178466797
    7. '               ' → logprob: -18.450939178466797
    8. ' ' → logprob: -18.825939178466797
    9. '$num' → logprob: -18.825939178466797
    10. 'd' → logprob: -18.825939178466797

Token 1566: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.25196123123168945
    2. '>' → logprob: -1.5019612312316895
    3. ' >
' → logprob: -11.376960754394531
    4. '[' → logprob: -12.501960754394531
    5. '>
' → logprob: -12.501960754394531
    6. '```' → logprob: -12.626960754394531
    7. ' ' → logprob: -13.126960754394531
    8. '   ' → logprob: -13.251960754394531
    9. '_str' → logprob: -14.001960754394531
    10. ' ' → logprob: -14.001960754394531

Token 1567: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00408053956925869
    2. ' int' → logprob: -5.504080772399902
    3. 'best' → logprob: -13.254080772399902
    4. '(int' → logprob: -15.129080772399902
    5. '[int' → logprob: -17.004079818725586
    6. '<int' → logprob: -17.379079818725586
    7. '=int' → logprob: -17.379079818725586
    8. ' best' → logprob: -17.879079818725586
    9. '           ' → logprob: -18.129079818725586
    10. ':int' → logprob: -18.879079818725586

Token 1568: '(best' (ID: 118299)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.3132651150226593
    2. '(best' → logprob: -1.313265085220337
    3. ' best' → logprob: -13.188264846801758
    4. '	best' → logprob: -14.313264846801758
    5. 'str' → logprob: -15.063264846801758
    6. '(str' → logprob: -15.188264846801758
    7. '(' → logprob: -15.438264846801758
    8. '(
' → logprob: -17.188264846801758
    9. 'beste' → logprob: -17.438264846801758
    10. 'b' → logprob: -17.938264846801758

Token 1569: '_num' (ID: 9834)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.16645927727222443
    2. '_best' → logprob: -2.166459321975708
    3. '(best' → logprob: -3.666459321975708
    4. '_num' → logprob: -4.416459083557129
    5. ' best' → logprob: -7.041459083557129
    6. ''_' → logprob: -9.541459083557129
    7. '_' → logprob: -10.041459083557129
    8. '	best' → logprob: -10.291459083557129
    9. '```' → logprob: -10.541459083557129
    10. ')' → logprob: -11.041459083557129

Token 1570: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0011008031433448195
    2. ')_' → logprob: -7.751101016998291
    3. '_)' → logprob: -7.876101016998291
    4. ')' → logprob: -9.001100540161133
    5. '_str' → logprob: -9.876100540161133
    6. ''_' → logprob: -9.876100540161133
    7. '[' → logprob: -11.376100540161133
    8. '```' → logprob: -11.751100540161133
    9. '_]' → logprob: -12.251100540161133
    10. '}_' → logprob: -12.376100540161133

Token 1571: 'wo' (ID: 1338)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24894113838672638
    2. '_str' → logprob: -1.74894118309021
    3. '_num' → logprob: -3.87394118309021
    4. 'wo' → logprob: -3.99894118309021
    5. ')' → logprob: -6.123940944671631
    6. '```' → logprob: -6.123940944671631
    7. 'num' → logprob: -6.998940944671631
    8. 'str' → logprob: -7.123940944671631
    9. '_)' → logprob: -8.748941421508789
    10. 'b' → logprob: -8.748941421508789

Token 1572: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0003096023283433169
    2. '_' → logprob: -8.625309944152832
    3. ''_' → logprob: -9.625309944152832
    4. '_str' → logprob: -10.250309944152832
    5. ')_' → logprob: -11.750309944152832
    6. '```' → logprob: -12.000309944152832
    7. '_)' → logprob: -12.375309944152832
    8. 'c' → logprob: -12.375309944152832
    9. ')' → logprob: -13.375309944152832
    10. '_
' → logprob: -13.375309944152832

Token 1573: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.013870924711227417
    2. '):' → logprob: -4.513870716094971
    3. ')' → logprob: -6.388870716094971
    4. ')):
' → logprob: -8.013871192932129
    5. '                       ' → logprob: -8.638871192932129
    6. ''):
' → logprob: -8.763871192932129
    7. '                   ' → logprob: -9.263871192932129
    8. '               ' → logprob: -9.513871192932129
    9. '           ' → logprob: -10.013871192932129
    10. '()):
' → logprob: -10.013871192932129

Token 1574: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0036478189285844564
    2. ')' → logprob: -6.503647804260254
    3. '                   ' → logprob: -7.503647804260254
    4. '                        ' → logprob: -8.003647804260254
    5. '```' → logprob: -8.128647804260254
    6. '                           ' → logprob: -8.378647804260254
    7. '                    ' → logprob: -8.628647804260254
    8. '                               ' → logprob: -9.128647804260254
    9. '                        
' → logprob: -9.378647804260254
    10. '                     ' → logprob: -9.878647804260254

Token 1575: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.048609621822834015
    2. ' best' → logprob: -3.048609733581543
    3. 'b' → logprob: -11.423609733581543
    4. '(best' → logprob: -12.423609733581543
    5. '                           ' → logprob: -12.798609733581543
    6. '                       ' → logprob: -13.673609733581543
    7. '```' → logprob: -13.798609733581543
    8. '	best' → logprob: -13.923609733581543
    9. '                               ' → logprob: -14.673609733581543
    10. '                   ' → logprob: -15.298609733581543

Token 1576: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -7.822646693966817e-06
    2. '_token' → logprob: -12.500007629394531
    3. '_' → logprob: -13.625007629394531
    4. '```' → logprob: -13.750007629394531
    5. ''_' → logprob: -15.000007629394531
    6. '_str' → logprob: -15.125007629394531
    7. '_nums' → logprob: -15.750007629394531
    8. '_tokens' → logprob: -15.875007629394531
    9. ')_' → logprob: -16.00000762939453
    10. '\' → logprob: -16.12500762939453

Token 1577: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00013572083844337612
    2. '_=' → logprob: -9.50013542175293
    3. '=' → logprob: -10.25013542175293
    4. '_str' → logprob: -11.50013542175293
    5. '=_' → logprob: -13.12513542175293
    6. '```' → logprob: -13.37513542175293
    7. ' =' → logprob: -13.75013542175293
    8. '  ' → logprob: -14.00013542175293
    9. '_
' → logprob: -14.12513542175293
    10. ' _' → logprob: -14.12513542175293

Token 1578: 'wo' (ID: 1338)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.9520977139472961
    2. 'wo' → logprob: -1.0770976543426514
    3. '=' → logprob: -1.5770976543426514
    4. 'str' → logprob: -3.2020976543426514
    5. '=num' → logprob: -4.9520978927612305
    6. '_str' → logprob: -5.4520978927612305
    7. '_' → logprob: -5.4520978927612305
    8. '_=' → logprob: -5.8270978927612305
    9. '+=' → logprob: -6.4520978927612305
    10. ' =' → logprob: -6.7020978927612305

Token 1579: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00013047587708570063
    2. '_' → logprob: -9.000130653381348
    3. 'c' → logprob: -12.375130653381348
    4. '_str' → logprob: -14.000130653381348
    5. '```' → logprob: -14.250130653381348
    6. ' _' → logprob: -14.625130653381348
    7. ''_' → logprob: -15.250130653381348
    8. '_
' → logprob: -15.750130653381348
    9. 'str' → logprob: -16.50012969970703
    10. '   ' → logprob: -16.62512969970703

Token 1580: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00861669983714819
    2. ' =' → logprob: -4.758616924285889
    3. '_=' → logprob: -13.75861644744873
    4. '_' → logprob: -15.13361644744873
    5. '                        ' → logprob: -15.25861644744873
    6. '=None' → logprob: -16.258617401123047
    7. ']=' → logprob: -16.258617401123047
    8. '=
' → logprob: -16.508617401123047
    9. '=True' → logprob: -16.633617401123047
    10. '=str' → logprob: -16.758617401123047

Token 1581: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.048590775579214096
    2. ' num' → logprob: -3.048590660095215
    3. 'str' → logprob: -12.923590660095215
    4. '	num' → logprob: -14.548590660095215
    5. '[num' → logprob: -15.798590660095215
    6. ' ' → logprob: -15.923590660095215
    7. ' str' → logprob: -16.29859161376953
    8. '   ' → logprob: -17.04859161376953
    9. '(num' → logprob: -17.17359161376953
    10. '=num' → logprob: -18.29859161376953

Token 1582: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00010735770774772391
    2. 'str' → logprob: -9.375107765197754
    3. 'Str' → logprob: -11.750107765197754
    4. '_' → logprob: -12.000107765197754
    5. ''_' → logprob: -12.625107765197754
    6. '```' → logprob: -13.250107765197754
    7. ')' → logprob: -14.250107765197754
    8. '=' → logprob: -15.000107765197754
    9. '_STR' → logprob: -15.250107765197754
    10. ' =' → logprob: -15.500107765197754

Token 1583: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0010674663353711367
    2. '<|end|>' → logprob: -7.376067638397217
    3. '                   ' → logprob: -8.501067161560059
    4. '                        
' → logprob: -9.376067161560059
    5. '               ' → logprob: -10.126067161560059
    6. '                        ' → logprob: -10.376067161560059
    7. '                      ' → logprob: -10.626067161560059
    8. '           ' → logprob: -10.876067161560059
    9. ')' → logprob: -11.626067161560059
    10. '```' → logprob: -11.751067161560059

Token 1584: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0015716375783085823
    2. ')' → logprob: -7.8765716552734375
    3. '<|end|>' → logprob: -8.001571655273438
    4. '                        ' → logprob: -8.501571655273438
    5. '                      ' → logprob: -8.626571655273438
    6. '                   ' → logprob: -8.626571655273438
    7. '                        
' → logprob: -9.251571655273438
    8. '                           ' → logprob: -9.876571655273438
    9. '                     ' → logprob: -10.376571655273438
    10. '```' → logprob: -10.501571655273438

Token 1585: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.008624859154224396
    2. ' best' → logprob: -4.758625030517578
    3. '                       ' → logprob: -11.508625030517578
    4. '           ' → logprob: -16.633625030517578
    5. '                   ' → logprob: -16.758625030517578
    6. '	best' → logprob: -17.758625030517578
    7. '       ' → logprob: -18.133625030517578
    8. '               ' → logprob: -18.133625030517578
    9. '(best' → logprob: -18.133625030517578
    10. '                           ' → logprob: -18.633625030517578

Token 1586: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -1.5451681974809617e-05
    2. '_' → logprob: -11.875015258789062
    3. '_num' → logprob: -12.375015258789062
    4. 'prime' → logprob: -13.000015258789062
    5. '_pr' → logprob: -14.750015258789062
    6. ''_' → logprob: -14.750015258789062
    7. '_p' → logprob: -15.375015258789062
    8. '```' → logprob: -15.750015258789062
    9. 'Prime' → logprob: -16.250015258789062
    10. '
' → logprob: -16.500015258789062

Token 1587: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002772785723209381
    2. '=' → logprob: -6.752772808074951
    3. '=True' → logprob: -6.752772808074951
    4. ' =' → logprob: -8.377772331237793
    5. '=False' → logprob: -9.752772331237793
    6. '_=' → logprob: -10.377772331237793
    7. '```' → logprob: -10.627772331237793
    8. ')' → logprob: -11.377772331237793
    9. 'wo' → logprob: -11.502772331237793
    10. '_w' → logprob: -11.502772331237793

Token 1588: 'wo' (ID: 1338)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.014641853980720043
    2. '=True' → logprob: -4.514641761779785
    3. '=' → logprob: -5.639641761779785
    4. ' True' → logprob: -10.764641761779785
    5. ' =' → logprob: -13.014641761779785
    6. 'Wo' → logprob: -13.014641761779785
    7. '(True' → logprob: -13.139641761779785
    8. '_=' → logprob: -13.264641761779785
    9. '_' → logprob: -13.764641761779785
    10. '_true' → logprob: -14.014641761779785

Token 1589: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.008673430420458317
    2. 'c' → logprob: -4.758673667907715
    3. '_' → logprob: -10.633673667907715
    4. 'C' → logprob: -11.133673667907715
    5. 'o' → logprob: -12.258673667907715
    6. 'True' → logprob: -12.383673667907715
    7. '   ' → logprob: -13.258673667907715
    8. '=' → logprob: -13.508673667907715
    9. 'wo' → logprob: -13.633673667907715
    10. '=True' → logprob: -13.758673667907715

Token 1590: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0021255186293274164
    2. ' =' → logprob: -6.8771257400512695
    3. '=True' → logprob: -7.0021257400512695
    4. '+=' → logprob: -9.50212574005127
    5. '                       ' → logprob: -10.25212574005127
    6. '                           ' → logprob: -11.37712574005127
    7. '=
' → logprob: -12.00212574005127
    8. '=False' → logprob: -12.00212574005127
    9. '           ' → logprob: -12.25212574005127
    10. '<|end|>' → logprob: -12.25212574005127

Token 1591: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0067156096920371056
    2. ' True' → logprob: -5.006715774536133
    3. '(True' → logprob: -15.131715774536133
    4. '=True' → logprob: -17.631715774536133
    5. 'T' → logprob: -18.506715774536133
    6. 'Tr' → logprob: -19.756715774536133
    7. '1' → logprob: -20.131715774536133
    8. ' ' → logprob: -20.381715774536133
    9. 'False' → logprob: -20.631715774536133
    10. '.True' → logprob: -21.131715774536133

Token 1592: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018293224275112152
    2. '                       ' → logprob: -4.768293380737305
    3. '               ' → logprob: -5.143293380737305
    4. '                   ' → logprob: -6.143293380737305
    5. '<|end|>' → logprob: -7.268293380737305
    6. '                           ' → logprob: -7.893293380737305
    7. ')' → logprob: -8.393293380737305
    8. '       ' → logprob: -9.018293380737305
    9. '```' → logprob: -9.143293380737305
    10. '                        ' → logprob: -10.768293380737305

Token 1593: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02263556607067585
    2. '               ' → logprob: -4.022635459899902
    3. '                   ' → logprob: -5.897635459899902
    4. '                       ' → logprob: -6.897635459899902
    5. ')' → logprob: -8.522635459899902
    6. '```' → logprob: -9.272635459899902
    7. '                           ' → logprob: -9.397635459899902
    8. '		' → logprob: -9.522635459899902
    9. '            ' → logprob: -9.897635459899902
    10. '          ' → logprob: -9.897635459899902

Token 1594: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.301513671875
    2. '           ' → logprob: -1.426513671875
    3. '                       ' → logprob: -4.301513671875
    4. '                   ' → logprob: -5.301513671875
    5. '                           ' → logprob: -7.301513671875
    6. 'else' (adapté à ' else') → logprob: -7.801513671875
    7. 'b' → logprob: -9.176513671875
    8. '       ' → logprob: -9.426513671875
    9. '                               ' → logprob: -9.551513671875
    10. '```' → logprob: -9.801513671875

Token 1595: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.165448859333992
    2. '               ' → logprob: -1.9154489040374756
    3. '                       ' → logprob: -6.0404486656188965
    4. '                ' → logprob: -6.9154486656188965
    5. '<|end|>' → logprob: -8.040449142456055
    6. '                           ' → logprob: -8.165449142456055
    7. '           ' → logprob: -8.540449142456055
    8. ':' → logprob: -8.540449142456055
    9. '                  ' → logprob: -8.915449142456055
    10. ' if' → logprob: -9.165449142456055

Token 1596: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17320169508457184
    2. '                   ' → logprob: -2.0482017993927
    3. '                       ' → logprob: -3.5482017993927
    4. '                           ' → logprob: -7.923201560974121
    5. '                ' → logprob: -8.298201560974121
    6. '                               ' → logprob: -8.548201560974121
    7. '           ' → logprob: -8.673201560974121
    8. '```' → logprob: -9.548201560974121
    9. '<|end|>' → logprob: -10.048201560974121
    10. '                        ' → logprob: -10.298201560974121

Token 1597: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.34821411967277527
    2. '                   ' → logprob: -1.7232141494750977
    3. ' if' → logprob: -2.3482141494750977
    4. '                       ' → logprob: -3.9732141494750977
    5. '               ' → logprob: -7.348214149475098
    6. '                           ' → logprob: -8.348214149475098
    7. '           ' → logprob: -9.348214149475098
    8. '```' → logprob: -9.598214149475098
    9. '                    ' → logprob: -9.723214149475098
    10. '                               ' → logprob: -10.723214149475098

Token 1598: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3862096667289734
    2. 'not' → logprob: -1.7612097263336182
    3. ' best' → logprob: -2.636209726333618
    4. 'best' → logprob: -2.636209726333618
    5. '(best' → logprob: -5.886209487915039
    6. '(not' → logprob: -6.011209487915039
    7. ' (' → logprob: -10.636209487915039
    8. '           ' → logprob: -11.886209487915039
    9. '   ' → logprob: -12.886209487915039
    10. '(' → logprob: -13.011209487915039

Token 1599: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.01815146580338478
    2. ' best' → logprob: -4.01815128326416
    3. '(best' → logprob: -13.39315128326416
    4. '	best' → logprob: -17.393152236938477
    5. '   ' → logprob: -18.393152236938477
    6. '           ' → logprob: -18.393152236938477
    7. '
' → logprob: -19.393152236938477
    8. '_best' → logprob: -19.393152236938477
    9. '       ' → logprob: -20.268152236938477
    10. '                   ' → logprob: -20.643152236938477

Token 1600: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.47424307465553284
    2. '_num' → logprob: -0.9742430448532104
    3. 'prime' → logprob: -9.2242431640625
    4. '_' → logprob: -10.0992431640625
    5. '_pr' → logprob: -11.2242431640625
    6. 'num' → logprob: -12.3492431640625
    7. 'Prime' → logprob: -12.4742431640625
    8. ''_' → logprob: -13.0992431640625
    9. '```' → logprob: -14.5992431640625
    10. '_prob' → logprob: -14.8492431640625

Token 1601: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.512236498361744e-07
    2. 'wo' → logprob: -15.875000953674316
    3. '```' → logprob: -16.5
    4. '   ' → logprob: -17.0
    5. '[' → logprob: -17.25
    6. '\' → logprob: -17.375
    7. ')' → logprob: -17.625
    8. '`' → logprob: -17.625
    9. '
' → logprob: -17.875
    10. '_w' → logprob: -18.25

Token 1602: 'wo' (ID: 1338)
  Prédit: 'wo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wo' → logprob: -0.0024774393532425165
    2. '_' → logprob: -6.002477645874023
    3. '
' → logprob: -15.002477645874023
    4. '   ' → logprob: -15.627477645874023
    5. 'Wo' → logprob: -15.752477645874023
    6. 'wor' → logprob: -16.002477645874023
    7. '_w' → logprob: -16.377477645874023
    8. 'ow' → logprob: -16.502477645874023
    9. '(' → logprob: -16.502477645874023
    10. '`' → logprob: -16.627477645874023

Token 1603: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.016256995499134064
    2. '_' → logprob: -4.141256809234619
    3. 'wo' → logprob: -9.516257286071777
    4. 'c' → logprob: -9.891257286071777
    5. '   ' → logprob: -10.266257286071777
    6. 'None' → logprob: -11.266257286071777
    7. '           ' → logprob: -11.891257286071777
    8. '       ' → logprob: -12.016257286071777
    9. '  ' → logprob: -12.516257286071777
    10. '```' → logprob: -12.516257286071777

Token 1604: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.02976749837398529
    2. 'or' → logprob: -3.5297675132751465
    3. '                   ' → logprob: -11.154767036437988
    4. '                       ' → logprob: -13.654767036437988
    5. '               ' → logprob: -14.779767036437988
    6. '           ' → logprob: -15.029767036437988
    7. '	or' → logprob: -15.529767036437988
    8. '[' → logprob: -15.654767036437988
    9. '```' → logprob: -16.529767990112305
    10. ' ' → logprob: -16.904767990112305

Token 1605: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.009216801263391972
    2. '                   ' → logprob: -4.759216785430908
    3. '```' → logprob: -8.259217262268066
    4. '<|end|>' → logprob: -9.259217262268066
    5. '                           ' → logprob: -10.134217262268066
    6. '                      ' → logprob: -10.134217262268066
    7. '                        ' → logprob: -10.509217262268066
    8. '                    ' → logprob: -10.509217262268066
    9. '                               ' → logprob: -10.509217262268066
    10. '               ' → logprob: -11.134217262268066

Token 1606: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2042187601327896
    2. ' if' → logprob: -1.7042187452316284
    3. '                       ' → logprob: -6.204218864440918
    4. '                           ' → logprob: -7.829218864440918
    5. ' b' → logprob: -9.079218864440918
    6. 'b' → logprob: -9.329218864440918
    7. '                               ' → logprob: -10.454218864440918
    8. '                   ' → logprob: -10.454218864440918
    9. '```' → logprob: -10.454218864440918
    10. '(' → logprob: -10.579218864440918

Token 1607: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.38697871565818787
    2. ' best' → logprob: -1.1369787454605103
    3. '(best' → logprob: -9.136979103088379
    4. '	best' → logprob: -16.261978149414062
    5. ' (' → logprob: -18.386978149414062
    6. '_best' → logprob: -19.511978149414062
    7. '.best' → logprob: -19.636978149414062
    8. '(' → logprob: -19.761978149414062
    9. 'b' → logprob: -19.761978149414062
    10. 'Best' → logprob: -20.011978149414062

Token 1608: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -1.4736459888808895e-05
    2. 'num' → logprob: -11.250014305114746
    3. '_len' → logprob: -14.500014305114746
    4. '_nums' → logprob: -15.125014305114746
    5. '_n' → logprob: -15.375014305114746
    6. 'Num' → logprob: -15.750014305114746
    7. '```' → logprob: -16.000015258789062
    8. '_' → logprob: -16.375015258789062
    9. '_NUM' → logprob: -16.750015258789062
    10. '
' → logprob: -17.000015258789062

Token 1609: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02043408714234829
    2. ' is' → logprob: -4.0204339027404785
    3. 'is' → logprob: -6.1454339027404785
    4. '_is' → logprob: -10.145434379577637
    5. '==' → logprob: -10.645434379577637
    6. ' ==' → logprob: -11.145434379577637
    7. '!=' → logprob: -11.520434379577637
    8. '_str' → logprob: -11.895434379577637
    9. '_=' → logprob: -11.895434379577637
    10. '```' → logprob: -12.270434379577637

Token 1610: 'wo' (ID: 1338)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5968194603919983
    2. '_' → logprob: -0.9718194603919983
    3. ' None' → logprob: -3.0968194007873535
    4. 'wo' → logprob: -4.0968194007873535
    5. '_none' → logprob: -5.0968194007873535
    6. ' is' → logprob: -6.4718194007873535
    7. '_None' → logprob: -7.3468194007873535
    8. 'Wo' → logprob: -7.9718194007873535
    9. '=None' → logprob: -8.721819877624512
    10. '_is' → logprob: -9.721819877624512

Token 1611: '_c' (ID: 1303)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.5190027356147766
    2. 'None' → logprob: -1.6440026760101318
    3. '_' → logprob: -1.7690026760101318
    4. '_num' → logprob: -4.019002914428711
    5. ' None' → logprob: -4.144002914428711
    6. '=None' → logprob: -6.019002914428711
    7. '_None' → logprob: -6.019002914428711
    8. '_none' → logprob: -6.894002914428711
    9. '_c' → logprob: -8.269002914428711
    10. '_s' → logprob: -8.519002914428711

Token 1612: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0009574358118698001
    2. 'is' → logprob: -7.000957489013672
    3. '                        ' → logprob: -11.125957489013672
    4. '==' → logprob: -11.375957489013672
    5. '                           ' → logprob: -11.375957489013672
    6. '                       ' → logprob: -13.625957489013672
    7. '                         ' → logprob: -13.625957489013672
    8. '                            ' → logprob: -14.125957489013672
    9. ' ==' → logprob: -14.250957489013672
    10. ' ' → logprob: -14.250957489013672

Token 1613: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00033558503491804004
    2. ' None' → logprob: -8.000335693359375
    3. '=None' → logprob: -16.750335693359375
    4. '   ' → logprob: -17.500335693359375
    5. '(None' → logprob: -17.500335693359375
    6. 'No' → logprob: -17.625335693359375
    7. '                       ' → logprob: -17.750335693359375
    8. '0' → logprob: -17.875335693359375
    9. '_None' → logprob: -18.000335693359375
    10. '                   ' → logprob: -18.500335693359375

Token 1614: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.1603289246559143
    2. 'or' → logprob: -1.9103288650512695
    3. '                           ' → logprob: -9.66032886505127
    4. '                       ' → logprob: -10.78532886505127
    5. '```' → logprob: -11.66032886505127
    6. '	or' → logprob: -12.53532886505127
    7. ')' → logprob: -13.28532886505127
    8. '                               ' → logprob: -13.66032886505127
    9. ''or' → logprob: -14.16032886505127
    10. '                   ' → logprob: -14.41032886505127

Token 1615: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.10020667314529419
    2. 'num' → logprob: -2.3502066135406494
    3. '(num' → logprob: -17.47520637512207
    4. '                   ' → logprob: -18.72520637512207
    5. '	num' → logprob: -19.22520637512207
    6. '               ' → logprob: -19.47520637512207
    7. '[num' → logprob: -19.47520637512207
    8. 'int' → logprob: -19.60020637512207
    9. ' ' → logprob: -19.72520637512207
    10. ' ' → logprob: -19.85020637512207

Token 1616: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.020558007061481476
    2. '>' → logprob: -3.8955581188201904
    3. '_str' → logprob: -11.64555835723877
    4. ' ' → logprob: -13.27055835723877
    5. ' >
' → logprob: -13.39555835723877
    6. '>
' → logprob: -14.02055835723877
    7. ' ' → logprob: -14.02055835723877
    8. '[' → logprob: -14.77055835723877
    9. '                           ' → logprob: -15.02055835723877
    10. ')>' → logprob: -15.14555835723877

Token 1617: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06196768581867218
    2. ' int' → logprob: -2.811967611312866
    3. '(int' → logprob: -18.061967849731445
    4. '[int' → logprob: -20.061967849731445
    5. '=int' → logprob: -20.311967849731445
    6. '	int' → logprob: -20.436967849731445
    7. ' ' → logprob: -20.561967849731445
    8. '<int' → logprob: -21.186967849731445
    9. '           ' → logprob: -21.436967849731445
    10. '               ' → logprob: -21.436967849731445

Token 1618: '(best' (ID: 118299)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.0009252764866687357
    2. '(best' → logprob: -7.000925064086914
    3. ' best' → logprob: -11.250925064086914
    4. '	best' → logprob: -14.125925064086914
    5. '.best' → logprob: -17.750925064086914
    6. '_best' → logprob: -18.000925064086914
    7. '-best' → logprob: -18.500925064086914
    8. 'b' → logprob: -19.125925064086914
    9. 'beste' → logprob: -19.125925064086914
    10. '
' → logprob: -20.750925064086914

Token 1619: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -2.951771421066951e-05
    2. 'num' → logprob: -11.250029563903809
    3. 'best' → logprob: -11.250029563903809
    4. '_best' → logprob: -13.250029563903809
    5. 'Num' → logprob: -13.750029563903809
    6. '(best' → logprob: -15.875029563903809
    7. '_' → logprob: -16.125028610229492
    8. '_NUM' → logprob: -16.375028610229492
    9. '
' → logprob: -17.000028610229492
    10. '```' → logprob: -17.250028610229492

Token 1620: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0007135047344490886
    2. '_num' → logprob: -7.375713348388672
    3. 'wo' → logprob: -10.000713348388672
    4. 'Wo' → logprob: -12.000713348388672
    5. '_w' → logprob: -12.125713348388672
    6. ')_' → logprob: -12.250713348388672
    7. '```' → logprob: -12.500713348388672
    8. '_str' → logprob: -12.750713348388672
    9. '}_' → logprob: -12.750713348388672
    10. '_)' → logprob: -12.875713348388672

Token 1621: 'wo' (ID: 1338)
  Prédit: 'wo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wo' → logprob: -0.23156936466693878
    2. '_' → logprob: -1.6065694093704224
    3. '_num' → logprob: -5.856569290161133
    4. 'ow' → logprob: -6.356569290161133
    5. 'num' → logprob: -6.731569290161133
    6. 'c' → logprob: -9.481569290161133
    7. 'w' → logprob: -9.856569290161133
    8. 'wor' → logprob: -9.981569290161133
    9. 'best' → logprob: -10.356569290161133
    10. '(' → logprob: -10.481569290161133

Token 1622: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00012451570364646614
    2. 'c' → logprob: -9.25012493133545
    3. '_str' → logprob: -10.87512493133545
    4. '_' → logprob: -12.25012493133545
    5. 'C' → logprob: -13.37512493133545
    6. '```' → logprob: -14.37512493133545
    7. ')' → logprob: -14.75012493133545
    8. '_cl' → logprob: -15.00012493133545
    9. ''_' → logprob: -15.12512493133545
    10. 'с' → logprob: -15.75012493133545

Token 1623: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.020228970795869827
    2. '                       ' → logprob: -4.020228862762451
    3. ':
' → logprob: -6.895228862762451
    4. '):' → logprob: -7.645228862762451
    5. '                           ' → logprob: -8.02022933959961
    6. '                   ' → logprob: -9.77022933959961
    7. ''):
' → logprob: -9.89522933959961
    8. '():
' → logprob: -10.02022933959961
    9. ')' → logprob: -10.39522933959961
    10. '           ' → logprob: -11.02022933959961

Token 1624: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.5676832795143127
    2. '                       ' → logprob: -0.9426832795143127
    3. '                               ' → logprob: -3.817683219909668
    4. '```' → logprob: -4.567683219909668
    5. ' d' → logprob: -5.317683219909668
    6. '                        ' → logprob: -5.942683219909668
    7. '                          ' → logprob: -7.317683219909668
    8. '                         ' → logprob: -7.442683219909668
    9. 'd' → logprob: -7.692683219909668
    10. '<|end|>' → logprob: -7.942683219909668

Token 1625: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.2909793257713318
    2. ' best' → logprob: -1.4159793853759766
    3. '                           ' → logprob: -5.040979385375977
    4. '                               ' → logprob: -5.790979385375977
    5. 'b' → logprob: -9.290979385375977
    6. '                            ' → logprob: -10.040979385375977
    7. '                       ' → logprob: -10.290979385375977
    8. '                                   ' → logprob: -10.915979385375977
    9. '	best' → logprob: -11.415979385375977
    10. ' b' → logprob: -11.540979385375977

Token 1626: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -9.198043699143454e-05
    2. '_digits' → logprob: -9.875091552734375
    3. '_' → logprob: -10.500091552734375
    4. '_nums' → logprob: -12.750091552734375
    5. '_n' → logprob: -12.875091552734375
    6. '_str' → logprob: -13.375091552734375
    7. '_tokens' → logprob: -13.375091552734375
    8. '_token' → logprob: -13.750091552734375
    9. '_digit' → logprob: -14.250091552734375
    10. 'num' → logprob: -14.375091552734375

Token 1627: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002675537718459964
    2. '_num' → logprob: -7.002675533294678
    3. '_str' → logprob: -7.127675533294678
    4. '_=' → logprob: -7.252675533294678
    5. '=' → logprob: -8.627676010131836
    6. ' =' → logprob: -10.252676010131836
    7. '=_' → logprob: -12.252676010131836
    8. '_
' → logprob: -12.252676010131836
    9. ' _' → logprob: -12.752676010131836
    10. '```' → logprob: -13.127676010131836

Token 1628: 'wo' (ID: 1338)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.6553067564964294
    2. 'str' → logprob: -1.1553068161010742
    3. 'wo' → logprob: -2.030306816101074
    4. '_' → logprob: -3.405306816101074
    5. 'w' → logprob: -8.030306816101074
    6. '_w' → logprob: -8.155306816101074
    7. 'c' → logprob: -8.530306816101074
    8. 'None' → logprob: -9.905306816101074
    9. '_c' → logprob: -10.030306816101074
    10. 'num' → logprob: -10.280306816101074

Token 1629: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.1155887246131897
    2. '_' → logprob: -2.740588665008545
    3. '_str' → logprob: -4.115588665008545
    4. '=' → logprob: -4.490588665008545
    5. 'c' → logprob: -4.615588665008545
    6. 'C' → logprob: -5.740588665008545
    7. '_=' → logprob: -6.740588665008545
    8. ' =' → logprob: -7.365588665008545
    9. '_cm' → logprob: -8.240589141845703
    10. '_chars' → logprob: -8.365589141845703

Token 1630: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002494802698493004
    2. ' =' → logprob: -6.002494812011719
    3. '=
' → logprob: -11.127494812011719
    4. '+=' → logprob: -13.252494812011719
    5. ']=' → logprob: -14.502494812011719
    6. '=None' → logprob: -14.627494812011719
    7. '_=' → logprob: -15.002494812011719
    8. '=True' → logprob: -15.377494812011719
    9. '=

' → logprob: -16.00249481201172
    10. '=b' → logprob: -16.00249481201172

Token 1631: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.5759401917457581
    2. ' num' → logprob: -0.8259401917457581
    3. ''' → logprob: -15.075940132141113
    4. ' ' → logprob: -15.825940132141113
    5. 'n' → logprob: -16.07594108581543
    6. '_num' → logprob: -16.70094108581543
    7. '	num' → logprob: -16.95094108581543
    8. '"' → logprob: -16.95094108581543
    9. 'b' → logprob: -17.32594108581543
    10. '`' → logprob: -17.45094108581543

Token 1632: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.12046036869287491
    2. 'str' → logprob: -3.370460271835327
    3. ''' → logprob: -3.495460271835327
    4. '_' → logprob: -3.620460271835327
    5. '```' → logprob: -4.995460510253906
    6. ')' → logprob: -5.745460510253906
    7. 'Str' → logprob: -5.745460510253906
    8. '`' → logprob: -6.870460510253906
    9. ''_' → logprob: -6.995460510253906
    10. '[' → logprob: -7.245460510253906

Token 1633: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.166177436709404
    2. '                           ' → logprob: -1.9161773920059204
    3. '               ' → logprob: -5.916177272796631
    4. '                       ' → logprob: -6.166177272796631
    5. '                   ' → logprob: -7.666177272796631
    6. '       ' → logprob: -7.666177272796631
    7. '```' → logprob: -9.416177749633789
    8. '                               ' → logprob: -10.416177749633789
    9. '<|end|>' → logprob: -10.416177749633789
    10. '                          ' → logprob: -11.666177749633789

Token 1634: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.866691529750824
    2. '           ' → logprob: -0.991691529750824
    3. '                           ' → logprob: -1.6166915893554688
    4. '               ' → logprob: -4.991691589355469
    5. '                       ' → logprob: -6.241691589355469
    6. '                   ' → logprob: -7.491691589355469
    7. '   ' → logprob: -7.491691589355469
    8. '```' → logprob: -8.866691589355469
    9. '                               ' → logprob: -10.241691589355469
    10. '                            
' → logprob: -10.366691589355469

Token 1635: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31345000863075256
    2. '                           ' → logprob: -1.4384499788284302
    3. '               ' → logprob: -3.9384500980377197
    4. 'b' → logprob: -5.063449859619141
    5. '                   ' → logprob: -6.188449859619141
    6. '       ' → logprob: -6.188449859619141
    7. '                       ' → logprob: -7.438449859619141
    8. '                               ' → logprob: -7.563449859619141
    9. 'return' (adapté à ' return') → logprob: -8.68844985961914
    10. '   ' → logprob: -8.68844985961914

Token 1636: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.266944157890975e-05
    2. '
' → logprob: -10.125072479248047
    3. '            
' → logprob: -11.500072479248047
    4. '       ' → logprob: -12.000072479248047
    5. 'for' → logprob: -12.875072479248047
    6. '    
' → logprob: -13.000072479248047
    7. 'd' → logprob: -13.000072479248047
    8. 'b' → logprob: -13.625072479248047
    9. '          ' → logprob: -13.625072479248047
    10. '#' → logprob: -13.625072479248047

Token 1637: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023573332000523806
    2. '
' → logprob: -6.627357482910156
    3. '       ' → logprob: -7.002357482910156
    4. '#' → logprob: -10.127357482910156
    5. '```' → logprob: -10.377357482910156
    6. 'for' → logprob: -10.877357482910156
    7. '   ' → logprob: -11.002357482910156
    8. '
' → logprob: -12.002357482910156
    9. '            
' → logprob: -13.127357482910156
    10. '               ' → logprob: -13.377357482910156

Token 1638: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16462883353233337
    2. '       ' → logprob: -2.039628744125366
    3. '   ' → logprob: -4.539628982543945
    4. 'for' (adapté à ' for') → logprob: -4.539628982543945
    5. ' for' → logprob: -8.289628982543945
    6. '         ' → logprob: -10.289628982543945
    7. '          ' → logprob: -11.039628982543945
    8. '	for' → logprob: -11.664628982543945
    9. '```' → logprob: -12.039628982543945
    10. '	   ' → logprob: -12.039628982543945

Token 1639: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.17352886497974396
    2. '9' → logprob: -2.4235289096832275
    3. ' d' → logprob: -2.6735289096832275
    4. ' ' → logprob: -6.423528671264648
    5. '   ' → logprob: -9.673528671264648
    6. '  ' → logprob: -13.673528671264648
    7. '    ' → logprob: -14.048528671264648
    8. 'digit' → logprob: -14.673528671264648
    9. '	d' → logprob: -15.048528671264648
    10. '     ' → logprob: -15.548528671264648

Token 1640: ' in' (ID: 306)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.11657574772834778
    2. ' in' → logprob: -2.9915757179260254
    3. 'in' → logprob: -3.3665757179260254
    4. ' ' → logprob: -4.116575717926025
    5. '(' → logprob: -4.741575717926025
    6. 'range' → logprob: -8.616576194763184
    7. ' range' → logprob: -9.616576194763184
    8. ' (' → logprob: -10.491576194763184
    9. '[' → logprob: -11.366576194763184
    10. '=' → logprob: -13.241576194763184

Token 1641: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10495376586914062
    2. '9' → logprob: -2.3549537658691406
    3. ' range' → logprob: -5.354953765869141
    4. ' ' → logprob: -12.22995376586914
    5. '(range' → logprob: -12.35495376586914
    6. '(' → logprob: -13.22995376586914
    7. '[' → logprob: -16.10495376586914
    8. 're' → logprob: -16.22995376586914
    9. '   ' → logprob: -16.85495376586914
    10. '	range' → logprob: -16.97995376586914

Token 1642: '(' (ID: 7)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.375000953674316
    3. ' ' → logprob: -17.0
    4. '   ' → logprob: -20.5
    5. '९' → logprob: -20.875
    6. '۹' → logprob: -20.875
    7. '９' → logprob: -22.25
    8. ',' → logprob: -22.25
    9. '٩' → logprob: -22.375
    10. ' nine' → logprob: -22.625

Token 1643: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. ' ' → logprob: -19.125
    3. '९' → logprob: -21.25
    4. '۹' → logprob: -21.625
    5. '９' → logprob: -21.875
    6. '   ' → logprob: -22.25
    7. '৯' → logprob: -22.875
    8. '```' → logprob: -23.5
    9. '٩' → logprob: -23.5
    10. '(' → logprob: -23.875

Token 1644: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.60414821645827e-06
    2. ' ,' → logprob: -12.625004768371582
    3. ',-' → logprob: -14.125004768371582
    4. '9' → logprob: -15.000004768371582
    5. ',
' → logprob: -16.000003814697266
    6. '-' → logprob: -18.750003814697266
    7. ',...' → logprob: -19.000003814697266
    8. '0' → logprob: -19.750003814697266
    9. '‌,' → logprob: -20.500003814697266
    10. '7' → logprob: -20.750003814697266

Token 1645: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00091217877343297
    2. ' -' → logprob: -7.000912189483643
    3. '0' → logprob: -14.125911712646484
    4. '9' → logprob: -17.625911712646484
    5. '10' → logprob: -20.000911712646484
    6. ' ' → logprob: -20.125911712646484
    7. '...' → logprob: -20.250911712646484
    8. '           ' → logprob: -20.500911712646484
    9. ',' → logprob: -20.750911712646484
    10. '```' → logprob: -21.375911712646484

Token 1646: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -17.0
    3. ' ' → logprob: -17.375
    4. ',' → logprob: -17.5
    5. '10' → logprob: -17.625
    6. '0' → logprob: -17.625
    7. '...' → logprob: -18.5
    8. '9' → logprob: -18.5
    9. ')' → logprob: -18.625
    10. '           ' → logprob: -19.125

Token 1647: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028525441884994507
    2. ',-' → logprob: -6.002852439880371
    3. ' ,' → logprob: -8.627852439880371
    4. '-' → logprob: -8.752852439880371
    5. ' -' → logprob: -10.502852439880371
    6. ' ,-' → logprob: -12.752852439880371
    7. ',
' → logprob: -12.877852439880371
    8. '           ' → logprob: -13.752852439880371
    9. '   ' → logprob: -13.877852439880371
    10. '0' → logprob: -14.002852439880371

Token 1648: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00012356207298580557
    2. ' -' → logprob: -9.000123977661133
    3. '           ' → logprob: -17.250123977661133
    4. '                   ' → logprob: -18.000123977661133
    5. '   ' → logprob: -18.250123977661133
    6. '9' → logprob: -18.250123977661133
    7. 'd' → logprob: -18.625123977661133
    8. '               ' → logprob: -18.750123977661133
    9. '0' → logprob: -19.500123977661133
    10. '−' → logprob: -19.500123977661133

Token 1649: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -16.75
    4. ')' → logprob: -18.625
    5. '...' → logprob: -18.875
    6. '
' → logprob: -19.5
    7. '-' → logprob: -19.5625
    8. ',' → logprob: -19.75
    9. '0' → logprob: -19.9375
    10. '१' → logprob: -20.0

Token 1650: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05072980374097824
    2. '):' → logprob: -3.050729751586914
    3. ',' → logprob: -6.800729751586914
    4. ':
' → logprob: -8.050729751586914
    5. '           ' → logprob: -8.300729751586914
    6. ':' → logprob: -8.800729751586914
    7. '):
' → logprob: -9.550729751586914
    8. '():
' → logprob: -9.675729751586914
    9. '       ' → logprob: -9.925729751586914
    10. '               ' → logprob: -10.300729751586914

Token 1651: '               ' (ID: 506)
  Prédit: '	       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	       ' → logprob: -0.57675701379776
    2. '           ' → logprob: -0.95175701379776
    3. '       ' → logprob: -3.7017569541931152
    4. '```' → logprob: -4.826756954193115
    5. '	   ' → logprob: -4.951756954193115
    6. '		' → logprob: -5.826756954193115
    7. '	           ' → logprob: -6.451756954193115
    8. '[' → logprob: -6.826756954193115
    9. '   ' → logprob: -7.201756954193115
    10. 'd' → logprob: -7.326756954193115

Token 1652: ' b' (ID: 287)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8680441975593567
    2. ' b' → logprob: -1.118044137954712
    3. 'b' (adapté à ' b') → logprob: -1.493044137954712
    4. '           ' → logprob: -4.493044376373291
    5. '   ' → logprob: -4.493044376373291
    6. '	b' → logprob: -6.118044376373291
    7. '                   ' → logprob: -6.118044376373291
    8. '       ' → logprob: -7.368044376373291
    9. '	           ' → logprob: -7.618044376373291
    10. '	       ' → logprob: -8.368043899536133

Token 1653: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -5.9153885558771435e-06
    2. 'digits' → logprob: -12.625005722045898
    3. 'Digits' → logprob: -13.875005722045898
    4. '_tokens' → logprob: -14.500005722045898
    5. '_d' → logprob: -15.125005722045898
    6. '_' → logprob: -15.500005722045898
    7. '```' → logprob: -15.750005722045898
    8. '   ' → logprob: -16.3750057220459
    9. 'igits' → logprob: -16.5000057220459
    10. '_bits' → logprob: -17.2500057220459

Token 1654: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.014684110297821e-06
    2. '.app' → logprob: -12.375008583068848
    3. '.' → logprob: -12.750008583068848
    4. '.pop' → logprob: -14.000008583068848
    5. 'append' → logprob: -14.375008583068848
    6. ' .' → logprob: -15.875008583068848
    7. 'Append' → logprob: -16.750009536743164
    8. '_append' → logprob: -17.250009536743164
    9. '.ap' → logprob: -17.625009536743164
    10. '.push' → logprob: -17.625009536743164

Token 1655: '(d' (ID: 2572)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.967624019831419e-05
    2. '(d' → logprob: -9.750060081481934
    3. ' d' → logprob: -13.625060081481934
    4. ')d' → logprob: -17.250059127807617
    5. '	d' → logprob: -17.750059127807617
    6. '[d' → logprob: -18.500059127807617
    7. '_d' → logprob: -18.875059127807617
    8. '>d' → logprob: -19.125059127807617
    9. '*d' → logprob: -19.750059127807617
    10. '=d' → logprob: -20.500059127807617

Token 1656: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07853046804666519
    2. ')' → logprob: -2.9535305500030518
    3. ')
' → logprob: -3.8285305500030518
    4. '<|end|>' → logprob: -7.203530311584473
    5. '           ' → logprob: -7.828530311584473
    6. '```' → logprob: -8.953530311584473
    7. '
' → logprob: -9.328530311584473
    8. '       ' → logprob: -10.328530311584473
    9. '                   ' → logprob: -10.328530311584473
    10. '	           ' → logprob: -10.828530311584473

Token 1657: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018734284676611423
    2. '<|end|>' → logprob: -7.75187349319458
    3. '			' → logprob: -8.001873016357422
    4. '```' → logprob: -8.126873016357422
    5. '	           ' → logprob: -8.626873016357422
    6. '                
' → logprob: -9.001873016357422
    7. '		       ' → logprob: -9.251873016357422
    8. '                   ' → logprob: -9.626873016357422
    9. '                ' → logprob: -9.626873016357422
    10. '	               ' → logprob: -10.001873016357422

Token 1658: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.027471330016851425
    2. ' if' → logprob: -4.277471542358398
    3. '           ' → logprob: -4.777471542358398
    4. 'if' (adapté à ' if') → logprob: -6.402471542358398
    5. '```' → logprob: -6.777471542358398
    6. '       ' → logprob: -6.902471542358398
    7. '                   ' → logprob: -7.777471542358398
    8. '#' → logprob: -8.277471542358398
    9. '   ' → logprob: -9.027471542358398
    10. '                ' → logprob: -9.527471542358398

Token 1659: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0067156096920371056
    2. ' pos' → logprob: -5.006715774536133
    3. '(pos' → logprob: -16.131715774536133
    4. 'd' → logprob: -16.631715774536133
    5. '	pos' → logprob: -17.756715774536133
    6. 'p' → logprob: -18.506715774536133
    7. '_pos' → logprob: -18.756715774536133
    8. '[pos' → logprob: -19.506715774536133
    9. 'position' → logprob: -20.256715774536133
    10. 'not' → logprob: -20.631715774536133

Token 1660: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1269301027059555
    2. '==' → logprob: -2.126929998397827
    3. '=' → logprob: -14.501930236816406
    4. '==
' → logprob: -14.876930236816406
    5. ' ' → logprob: -15.376930236816406
    6. '[' → logprob: -15.751930236816406
    7. ')==' → logprob: -16.001930236816406
    8. '===' → logprob: -16.126930236816406
    9. ']==' → logprob: -16.251930236816406
    10. '()==' → logprob: -16.376930236816406

Token 1661: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '                   ' → logprob: -17.500017166137695
    4. '               ' → logprob: -18.000017166137695
    5. '=' → logprob: -18.125017166137695
    6. '   ' → logprob: -18.625017166137695
    7. '1' → logprob: -18.625017166137695
    8. '```' → logprob: -18.875017166137695
    9. '           ' → logprob: -19.625017166137695
    10. ' ' → logprob: -19.750017166137695

Token 1662: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '=' → logprob: -19.0
    4. '۰' → logprob: -20.25
    5. ' ' → logprob: -21.125
    6. '
' → logprob: -21.375
    7. '```' → logprob: -21.625
    8. '   ' → logprob: -21.9375
    9. '1' → logprob: -22.125
    10. '  ' → logprob: -22.1875

Token 1663: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07345818728208542
    2. 'and' → logprob: -2.698458194732666
    3. '               ' → logprob: -5.698458194732666
    4. '                   ' → logprob: -8.823457717895508
    5. '<|end|>' → logprob: -12.323457717895508
    6. '                       ' → logprob: -12.823457717895508
    7. '	and' → logprob: -13.198457717895508
    8. '                ' → logprob: -13.323457717895508
    9. '           ' → logprob: -13.698457717895508
    10. ':
' → logprob: -14.073457717895508

Token 1664: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00317783304490149
    2. ' d' → logprob: -5.753177642822266
    3. '0' → logprob: -16.128177642822266
    4. '	d' → logprob: -18.378177642822266
    5. '(d' → logprob: -19.878177642822266
    6. ' ' → logprob: -19.878177642822266
    7. '_d' → logprob: -20.753177642822266
    8. ')d' → logprob: -20.878177642822266
    9. '                   ' → logprob: -21.628177642822266
    10. '   ' → logprob: -22.253177642822266

Token 1665: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4740963280200958
    2. ' ==' → logprob: -0.9740962982177734
    3. '=' → logprob: -11.724096298217773
    4. '==
' → logprob: -12.224096298217773
    5. '0' → logprob: -13.224096298217773
    6. ')==' → logprob: -13.724096298217773
    7. '```' → logprob: -14.224096298217773
    8. '()==' → logprob: -14.474096298217773
    9. ']==' → logprob: -14.849096298217773
    10. ' ' → logprob: -14.849096298217773

Token 1666: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -21.750001907348633
    4. '                   ' → logprob: -22.625001907348633
    5. '۰' → logprob: -22.875001907348633
    6. '               ' → logprob: -22.875001907348633
    7. ' ' → logprob: -23.625001907348633
    8. '  ' → logprob: -24.000001907348633
    9. '
' → logprob: -24.000001907348633
    10. '```' → logprob: -24.000001907348633

Token 1667: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '۰' → logprob: -20.5
    4. '```' → logprob: -20.5
    5. '   ' → logprob: -20.625
    6. ' ' → logprob: -21.0
    7. '<|end|>' → logprob: -21.125
    8. '=' → logprob: -21.75
    9. '০' → logprob: -21.8125
    10. '  ' → logprob: -21.9375

Token 1668: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.48993152379989624
    2. '               ' → logprob: -1.364931583404541
    3. ':
' → logprob: -2.239931583404541
    4. ':' → logprob: -3.989931583404541
    5. '<|end|>' → logprob: -5.739931583404541
    6. '                       ' → logprob: -6.489931583404541
    7. '```' → logprob: -7.739931583404541
    8. '                           ' → logprob: -7.739931583404541
    9. '           ' → logprob: -8.239931106567383
    10. '):
' → logprob: -8.989931106567383

Token 1669: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.35302847623825073
    2. '                   ' → logprob: -1.2280285358428955
    3. 'b' → logprob: -6.478028297424316
    4. '                       ' → logprob: -7.353028297424316
    5. '           ' → logprob: -7.478028297424316
    6. '   ' → logprob: -7.603028297424316
    7. '```' → logprob: -7.728028297424316
    8. '<|end|>' → logprob: -7.853028297424316
    9. ' b' → logprob: -9.353028297424316
    10. '       ' → logprob: -9.353028297424316

Token 1670: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0019132846500724554
    2. '               ' → logprob: -6.501913070678711
    3. ' b' → logprob: -8.501913070678711
    4. '                   ' → logprob: -8.501913070678711
    5. '           ' → logprob: -13.501913070678711
    6. '	b' → logprob: -13.751913070678711
    7. '```' → logprob: -14.126913070678711
    8. '                       ' → logprob: -14.501913070678711
    9. '   ' → logprob: -14.751913070678711
    10. '                ' → logprob: -15.376913070678711

Token 1671: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -1.6286106983898208e-05
    2. 'igits' → logprob: -11.250016212463379
    3. 'digits' → logprob: -13.375016212463379
    4. '_d' → logprob: -14.000016212463379
    5. 'b' → logprob: -15.250016212463379
    6. 'Digits' → logprob: -16.000017166137695
    7. '_letters' → logprob: -16.000017166137695
    8. '_' → logprob: -16.500017166137695
    9. '_bits' → logprob: -16.875017166137695
    10. '_inches' → logprob: -17.375017166137695

Token 1672: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -8.2994620242971e-06
    2. 'pop' → logprob: -11.875008583068848
    3. '.' → logprob: -13.875008583068848
    4. '	pop' → logprob: -15.500008583068848
    5. '.append' → logprob: -17.50000762939453
    6. '           ' → logprob: -17.62500762939453
    7. '```' → logprob: -17.62500762939453
    8. ' .' → logprob: -18.00000762939453
    9. '_pop' → logprob: -18.12500762939453
    10. '               ' → logprob: -18.50000762939453

Token 1673: '()
' (ID: 1234)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01657678373157978
    2. '               ' → logprob: -4.141576766967773
    3. '                       ' → logprob: -8.141576766967773
    4. 'continue' → logprob: -9.141576766967773
    5. '<|end|>' → logprob: -9.766576766967773
    6. '```' → logprob: -9.891576766967773
    7. '           ' → logprob: -11.891576766967773
    8. '	               ' → logprob: -12.266576766967773
    9. '                           ' → logprob: -12.266576766967773
    10. '		           ' → logprob: -12.516576766967773

Token 1674: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010186430998146534
    2. '               ' → logprob: -4.760186195373535
    3. '```' → logprob: -7.260186195373535
    4. '                       ' → logprob: -7.635186195373535
    5. '<|end|>' → logprob: -9.260186195373535
    6. '           ' → logprob: -9.510186195373535
    7. '	               ' → logprob: -10.260186195373535
    8. 'continue' → logprob: -10.385186195373535
    9. '                           ' → logprob: -10.635186195373535
    10. '		           ' → logprob: -11.010186195373535

Token 1675: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.20188133418560028
    2. '                   ' → logprob: -1.7018812894821167
    3. ' continue' → logprob: -7.826881408691406
    4. '               ' → logprob: -10.701881408691406
    5. '	continue' → logprob: -10.701881408691406
    6. '_continue' → logprob: -11.826881408691406
    7. '                       ' → logprob: -12.326881408691406
    8. 'contin' → logprob: -12.826881408691406
    9. 'continu' → logprob: -13.201881408691406
    10. '```' → logprob: -13.451881408691406

Token 1676: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00013166792632546276
    2. 'dfs' → logprob: -9.625131607055664
    3. ' dfs' → logprob: -10.500131607055664
    4. '```' → logprob: -10.500131607055664
    5. '           ' → logprob: -13.250131607055664
    6. '   ' → logprob: -13.250131607055664
    7. 'd' → logprob: -13.750131607055664
    8. '              ' → logprob: -14.000131607055664
    9. '                
' → logprob: -14.125131607055664
    10. '                   ' → logprob: -14.375131607055664

Token 1677: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00022153646568767726
    2. 'dfs' → logprob: -10.000221252441406
    3. '```' → logprob: -10.125221252441406
    4. '       ' → logprob: -10.250221252441406
    5. '           ' → logprob: -10.250221252441406
    6. ' dfs' → logprob: -10.625221252441406
    7. '   ' → logprob: -11.375221252441406
    8. 'd' → logprob: -11.625221252441406
    9. '              ' → logprob: -12.125221252441406
    10. '                   ' → logprob: -12.125221252441406

Token 1678: ' dfs' (ID: 51252)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06283184885978699
    2. ' dfs' → logprob: -3.4378318786621094
    3. 'dfs' (adapté à ' dfs') → logprob: -3.5628318786621094
    4. 'd' → logprob: -8.68783187866211
    5. '       ' → logprob: -9.06283187866211
    6. '   ' → logprob: -9.56283187866211
    7. '```' → logprob: -11.31283187866211
    8. '           ' → logprob: -11.43783187866211
    9. '              ' → logprob: -11.93783187866211
    10. ' d' → logprob: -12.93783187866211

Token 1679: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47621089220046997
    2. '(pos' → logprob: -0.97621089220047
    3. '(' → logprob: -6.851211071014404
    4. 'pos' → logprob: -6.976211071014404
    5. '_pos' → logprob: -9.976210594177246
    6. '[pos' → logprob: -10.976210594177246
    7. '```' → logprob: -10.976210594177246
    8. '               ' → logprob: -11.351210594177246
    9. ' pos' → logprob: -11.601210594177246
    10. '	pos' → logprob: -11.851210594177246

Token 1680: 'wo' (ID: 1338)
  Prédit: 'wo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wo' → logprob: -0.1093510314822197
    2. 'pos' → logprob: -2.3593509197235107
    3. '_' → logprob: -5.48435115814209
    4. '(pos' → logprob: -5.85935115814209
    5. '0' → logprob: -6.48435115814209
    6. '_w' → logprob: -9.10935115814209
    7. 'w' → logprob: -9.85935115814209
    8. '   ' → logprob: -9.85935115814209
    9. 'Wo' → logprob: -10.23435115814209
    10. '       ' → logprob: -10.48435115814209

Token 1681: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0005048964521847665
    2. '(pos' → logprob: -7.750504970550537
    3. 'c' → logprob: -9.875504493713379
    4. '   ' → logprob: -12.750504493713379
    5. '(' → logprob: -12.875504493713379
    6. 'pos' → logprob: -12.938004493713379
    7. '_' → logprob: -13.313004493713379
    8. '```' → logprob: -13.625504493713379
    9. '(c' → logprob: -13.750504493713379
    10. '[pos' → logprob: -13.875504493713379

Token 1682: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0006042646709829569
    2. '(' → logprob: -7.500604152679443
    3. 'pos' → logprob: -10.125604629516602
    4. '```' → logprob: -12.500604629516602
    5. '               ' → logprob: -13.125604629516602
    6. '[pos' → logprob: -13.250604629516602
    7. '           ' → logprob: -13.875604629516602
    8. ',pos' → logprob: -14.250604629516602
    9. ' pos' → logprob: -14.500604629516602
    10. '                   ' → logprob: -14.875604629516602

Token 1683: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759503841400146
    2. ' +' → logprob: -0.8259503841400146
    3. '1' → logprob: -12.075950622558594
    4. '[' → logprob: -13.950950622558594
    5. '+
' → logprob: -14.325950622558594
    6. '<|end|>' → logprob: -14.325950622558594
    7. '＋' → logprob: -14.700950622558594
    8. '   ' → logprob: -14.700950622558594
    9. ' ' → logprob: -14.825950622558594
    10. '0' → logprob: -15.200950622558594

Token 1684: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -16.25
    4. '```' → logprob: -17.875
    5. '+' → logprob: -19.5
    6. '0' → logprob: -20.25
    7. '=' → logprob: -20.375
    8. ')' → logprob: -20.375
    9. '       ' → logprob: -20.5
    10. '۱' → logprob: -20.75

Token 1685: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.750003814697266
    3. '   ' → logprob: -16.125003814697266
    4. '0' → logprob: -16.687503814697266
    5. '```' → logprob: -16.937503814697266
    6. '
' → logprob: -17.125003814697266
    7. '2' → logprob: -17.312503814697266
    8. '10' → logprob: -17.375003814697266
    9. '``' → logprob: -18.375003814697266
    10. '+' → logprob: -18.437503814697266

Token 1686: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008829995640553534
    2. ',b' → logprob: -7.250883102416992
    3. 'b' → logprob: -9.375883102416992
    4. '               ' → logprob: -10.250883102416992
    5. '           ' → logprob: -10.875883102416992
    6. '```' → logprob: -11.125883102416992
    7. '   ' → logprob: -12.500883102416992
    8. '       ' → logprob: -12.500883102416992
    9. '                   ' → logprob: -12.500883102416992
    10. ' ,' → logprob: -13.000883102416992

Token 1687: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001175820711068809
    2. ' b' → logprob: -6.751175880432129
    3. '[]' → logprob: -13.251175880432129
    4. '[' → logprob: -13.501175880432129
    5. '[b' → logprob: -13.501175880432129
    6. '[])' → logprob: -14.751175880432129
    7. '   ' → logprob: -15.876175880432129
    8. ' ' → logprob: -16.126174926757812
    9. ')b' → logprob: -16.626174926757812
    10. '	b' → logprob: -16.876174926757812

Token 1688: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.006119690835475922
    2. 'igits' → logprob: -5.131119728088379
    3. 'digits' → logprob: -9.506119728088379
    4. 'its' → logprob: -11.006119728088379
    5. '   ' → logprob: -11.131119728088379
    6. '```' → logprob: -11.381119728088379
    7. 'Digits' → logprob: -11.506119728088379
    8. '[' → logprob: -11.631119728088379
    9. ')' → logprob: -11.881119728088379
    10. '[]' → logprob: -12.256119728088379

Token 1689: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15628491342067719
    2. '           ' → logprob: -2.156284809112549
    3. ')' → logprob: -3.656284809112549
    4. 'b' → logprob: -6.031284809112549
    5. '                   ' → logprob: -8.656285285949707
    6. '       ' → logprob: -8.906285285949707
    7. ')b' → logprob: -9.281285285949707
    8. '<|end|>' → logprob: -9.531285285949707
    9. '              ' → logprob: -10.531285285949707
    10. '	           ' → logprob: -10.906285285949707

Token 1690: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12462449073791504
    2. '           ' → logprob: -2.374624490737915
    3. '```' → logprob: -3.999624490737915
    4. 'b' → logprob: -5.374624252319336
    5. '                   ' → logprob: -8.124624252319336
    6. '<|end|>' → logprob: -8.499624252319336
    7. '   ' → logprob: -8.624624252319336
    8. '       ' → logprob: -9.249624252319336
    9. '``' → logprob: -9.374624252319336
    10. ' b' → logprob: -9.749624252319336

Token 1691: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.02559766173362732
    2. '               ' → logprob: -3.90059757232666
    3. '           ' → logprob: -5.90059757232666
    4. ' b' → logprob: -6.15059757232666
    5. '	b' → logprob: -9.65059757232666
    6. '       ' → logprob: -9.90059757232666
    7. '   ' → logprob: -10.52559757232666
    8. '```' → logprob: -10.77559757232666
    9. '                   ' → logprob: -12.15059757232666
    10. '              ' → logprob: -13.77559757232666

Token 1692: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.00014239625306800008
    2. 'digits' → logprob: -9.250142097473145
    3. 'igits' → logprob: -10.000142097473145
    4. 'Digits' → logprob: -14.375142097473145
    5. '_d' → logprob: -15.625142097473145
    6. ' digits' → logprob: -17.62514305114746
    7. 'd' → logprob: -17.87514305114746
    8. '_bits' → logprob: -18.00014305114746
    9. '_di' → logprob: -18.12514305114746
    10. 'b' → logprob: -18.25014305114746

Token 1693: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00900309719145298
    2. 'pop' → logprob: -4.759003162384033
    3. '_pop' → logprob: -7.884003162384033
    4. '	pop' → logprob: -11.634002685546875
    5. '(pop' → logprob: -14.009002685546875
    6. 'op' → logprob: -14.259002685546875
    7. '```' → logprob: -14.759002685546875
    8. '.' → logprob: -15.509002685546875
    9. '.p' → logprob: -15.509002685546875
    10. ' pop' → logprob: -15.759002685546875

Token 1694: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3339862525463104
    2. '<|end|>' → logprob: -1.5839862823486328
    3. '       ' → logprob: -3.458986282348633
    4. '   ' → logprob: -3.833986282348633
    5. '<|end|>' → logprob: -4.083986282348633
    6. '()
' → logprob: -6.208986282348633
    7. '()\' → logprob: -6.208986282348633
    8. '())' → logprob: -7.083986282348633
    9. ')' → logprob: -7.583986282348633
    10. '()<' → logprob: -7.583986282348633

Token 1695: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03488921746611595
    2. 'if' → logprob: -3.4098892211914062
    3. '
' → logprob: -7.034889221191406
    4. ' if' → logprob: -8.784889221191406
    5. '```' → logprob: -9.159889221191406
    6. '    
' → logprob: -9.909889221191406
    7. '       ' → logprob: -10.159889221191406
    8. '``' → logprob: -12.659889221191406
    9. '        
' → logprob: -12.909889221191406
    10. '#' → logprob: -12.909889221191406

Token 1696: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.0005019200034439564
    2. '       ' → logprob: -8.12550163269043
    3. ' dfs' → logprob: -9.25050163269043
    4. '   ' → logprob: -9.37550163269043
    5. '
' → logprob: -10.75050163269043
    6. '```' → logprob: -13.25050163269043
    7. '``' → logprob: -14.87550163269043
    8. '        
' → logprob: -15.00050163269043
    9. '           ' → logprob: -15.25050163269043
    10. 'df' → logprob: -15.37550163269043

Token 1697: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.992775888647884e-05
    2. '(' → logprob: -9.625069618225098
    3. '   ' → logprob: -13.000069618225098
    4. '```' → logprob: -14.500069618225098
    5. '       ' → logprob: -15.375069618225098
    6. '_(' → logprob: -15.500069618225098
    7. 'wo' → logprob: -15.625069618225098
    8. '  ' → logprob: -16.500070571899414
    9. '__' → logprob: -16.875070571899414
    10. '0' → logprob: -17.000070571899414

Token 1698: 'wo' (ID: 1338)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2864692807197571
    2. 'wo' → logprob: -1.4114692211151123
    3. '(' → logprob: -5.536469459533691
    4. '_' → logprob: -6.786469459533691
    5. 'w' → logprob: -10.536469459533691
    6. 'o' → logprob: -10.786469459533691
    7. 'n' → logprob: -10.911469459533691
    8. ' ' → logprob: -11.161469459533691
    9. '-' → logprob: -11.286469459533691
    10. 'ow' → logprob: -11.473969459533691

Token 1699: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0010628211311995983
    2. 'c' → logprob: -6.876062870025635
    3. 'C' → logprob: -10.876062393188477
    4. '(' → logprob: -11.876062393188477
    5. '_' → logprob: -13.876062393188477
    6. '0' → logprob: -14.751062393188477
    7. '_C' → logprob: -15.063562393188477
    8. '(_' → logprob: -15.251062393188477
    9. '_ct' → logprob: -15.376062393188477
    10. '```' → logprob: -15.688562393188477

Token 1700: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031830633524805307
    2. '0' → logprob: -5.753182888031006
    3. '()' → logprob: -12.378183364868164
    4. '(-' → logprob: -14.628183364868164
    5. ' (' → logprob: -14.878183364868164
    6. '   ' → logprob: -15.128183364868164
    7. ' ' → logprob: -17.503183364868164
    8. '(
' → logprob: -17.753183364868164
    9. '()
' → logprob: -18.003183364868164
    10. '       ' → logprob: -18.128183364868164

Token 1701: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.0100624169572257e-05
    2. 'n' → logprob: -11.125020027160645
    3. ' ' → logprob: -12.750020027160645
    4. ')' → logprob: -13.750020027160645
    5. '(' → logprob: -14.875020027160645
    6. 'pos' → logprob: -15.375020027160645
    7. '   ' → logprob: -15.375020027160645
    8. '(n' → logprob: -16.50002098083496
    9. '10' → logprob: -16.62502098083496
    10. '1' → logprob: -16.87502098083496

Token 1702: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013369438238441944
    2. ')' → logprob: -9.750133514404297
    3. '   ' → logprob: -10.375133514404297
    4. ' ,' → logprob: -11.375133514404297
    5. '<|end|>' → logprob: -11.500133514404297
    6. '       ' → logprob: -11.750133514404297
    7. ',b' → logprob: -12.375133514404297
    8. '(' → logprob: -13.375133514404297
    9. ',
' → logprob: -13.375133514404297
    10. ',user' → logprob: -13.500133514404297

Token 1703: ' [])

' (ID: 124233)
  Prédit: '[])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[])' → logprob: -0.014727138914167881
    2. '[]' → logprob: -4.2647271156311035
    3. ')' → logprob: -7.5147271156311035
    4. '[])
' → logprob: -11.014727592468262
    5. ' [])' → logprob: -14.014727592468262
    6. '[]
' → logprob: -14.139727592468262
    7. '[' → logprob: -15.264727592468262
    8. '[]}' → logprob: -15.889727592468262
    9. '[]):' → logprob: -16.639726638793945
    10. '[]>' → logprob: -17.139726638793945

Token 1704: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011737978784367442
    2. 'if' → logprob: -6.751173973083496
    3. '```' → logprob: -13.001173973083496
    4. '
' → logprob: -13.876173973083496
    5. ' if' → logprob: -15.251173973083496
    6. '    
' → logprob: -16.50117301940918
    7. '       ' → logprob: -17.12617301940918
    8. 'If' → logprob: -19.25117301940918
    9. 'import' → logprob: -19.50117301940918
    10. '#' → logprob: -19.50117301940918

Token 1705: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03917261213064194
    2. '   ' → logprob: -3.289172649383545
    3. '       ' → logprob: -6.789172649383545
    4. ' if' → logprob: -12.539172172546387
    5. '
' → logprob: -14.539172172546387
    6. '```' → logprob: -15.039172172546387
    7. '#' (adapté à ' #') → logprob: -15.539172172546387
    8. '	if' → logprob: -17.289173126220703
    9. '           ' → logprob: -19.164173126220703
    10. 'If' → logprob: -19.414173126220703

Token 1706: ' Compare' (ID: 38200)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16258756816387177
    2. '   ' → logprob: -1.9125875234603882
    3. '       ' → logprob: -6.162587642669678
    4. ' if' → logprob: -8.28758716583252
    5. '```' → logprob: -13.91258716583252
    6. '#' → logprob: -14.03758716583252
    7. '
' → logprob: -14.78758716583252
    8. 'If' → logprob: -16.037588119506836
    9. '	if' → logprob: -16.412588119506836
    10. 'import' → logprob: -17.537588119506836

Token 1707: ' best' (ID: 1636)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12959590554237366
    2. '   ' → logprob: -2.129595994949341
    3. '       ' → logprob: -6.129595756530762
    4. ' if' → logprob: -7.629595756530762
    5. '
' → logprob: -14.754595756530762
    6. '	if' → logprob: -15.379595756530762
    7. '           ' → logprob: -16.004596710205078
    8. '```' → logprob: -16.129596710205078
    9. ' ' → logprob: -17.129596710205078
    10. '  ' → logprob: -17.254596710205078

Token 1708: ' with' (ID: 483)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21337386965751648
    2. '_num' → logprob: -2.088373899459839
    3. '_prime' → logprob: -3.338373899459839
    4. '   ' → logprob: -3.838373899459839
    5. ' if' → logprob: -4.83837366104126
    6. '       ' → logprob: -6.33837366104126
    7. '_digit' → logprob: -7.46337366104126
    8. '
' → logprob: -8.213374137878418
    9. 'prime' → logprob: -8.463374137878418
    10. '_digits' → logprob: -8.963374137878418

Token 1709: ' c' (ID: 274)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.002547839190810919
    2. '(best' → logprob: -6.127547740936279
    3. '0' → logprob: -8.377548217773438
    4. ' best' → logprob: -9.377548217773438
    5. '(' → logprob: -10.752548217773438
    6. '   ' → logprob: -12.002548217773438
    7. '_best' → logprob: -12.002548217773438
    8. ' (' → logprob: -12.627548217773438
    9. '
' → logprob: -12.752548217773438
    10. '1' → logprob: -13.377548217773438

Token 1710: ' and' (ID: 326)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.26482954621315
    2. '   ' → logprob: -2.139829635620117
    3. ' if' → logprob: -2.639829635620117
    4. '       ' → logprob: -3.139829635620117
    5. ':' → logprob: -9.764829635620117
    6. ' =' → logprob: -9.889829635620117
    7. '```' → logprob: -10.514829635620117
    8. '_' → logprob: -10.764829635620117
    9. ' and' → logprob: -10.764829635620117
    10. '=' → logprob: -10.889829635620117

Token 1711: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.008584083057940006
    2. '(best' → logprob: -5.508584022521973
    3. 'without' → logprob: -5.758584022521973
    4. '#' → logprob: -7.508584022521973
    5. ' best' → logprob: -7.508584022521973
    6. '_best' → logprob: -8.758584022521973
    7. '(' → logprob: -10.758584022521973
    8. 'not' → logprob: -11.383584022521973
    9. '   ' → logprob: -11.383584022521973
    10. '       ' → logprob: -12.008584022521973

Token 1712: ' without' (ID: 2935)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1004958152770996
    2. '_' → logprob: -1.4754958152770996
    3. '_num' → logprob: -1.8504958152770996
    4. 'if' → logprob: -2.1004958152770996
    5. 'without' → logprob: -2.7254958152770996
    6. '_without' → logprob: -3.2254958152770996
    7. '   ' → logprob: -3.4754958152770996
    8. 'with' → logprob: -5.2254958152771
    9. '#' → logprob: -5.7254958152771
    10. ' without' → logprob: -6.3504958152771

Token 1713: ' c' (ID: 274)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009038181975483894
    2. '       ' → logprob: -5.384037971496582
    3. '   ' → logprob: -5.634037971496582
    4. ' if' → logprob: -7.134037971496582
    5. 'c' → logprob: -10.884037971496582
    6. '
' → logprob: -11.509037971496582
    7. '```' → logprob: -12.884037971496582
    8. '           ' → logprob: -13.634037971496582
    9. 'best' → logprob: -13.759037971496582
    10. '#' → logprob: -14.134037971496582

Token 1714: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18197192251682281
    2. 'if' → logprob: -2.181972026824951
    3. '       ' → logprob: -2.931972026824951
    4. ' if' → logprob: -8.681971549987793
    5. '
' → logprob: -9.306971549987793
    6. '```' → logprob: -13.556971549987793
    7. '    
' → logprob: -13.681971549987793
    8. '        
' → logprob: -14.556971549987793
    9. '           ' → logprob: -14.806971549987793
    10. '	if' → logprob: -14.806971549987793

Token 1715: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1279556304216385
    2. 'if' → logprob: -2.127955675125122
    3. ' if' → logprob: -7.252955436706543
    4. '       ' → logprob: -8.252955436706543
    5. '
' → logprob: -10.252955436706543
    6. '```' → logprob: -10.877955436706543
    7. '	if' → logprob: -12.877955436706543
    8. '    
' → logprob: -14.002955436706543
    9. '``' → logprob: -15.127955436706543
    10. 'If' → logprob: -15.252955436706543

Token 1716: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01860920712351799
    2. '   ' → logprob: -4.018609046936035
    3. '       ' → logprob: -8.268609046936035
    4. ' if' → logprob: -8.518609046936035
    5. '```' → logprob: -12.893609046936035
    6. '	if' → logprob: -15.018609046936035
    7. '``' → logprob: -16.26861000061035
    8. '
' → logprob: -16.39361000061035
    9. '           ' → logprob: -18.51861000061035
    10. '  ' → logprob: -18.64361000061035

Token 1717: ' According' (ID: 16344)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16086627542972565
    2. '   ' → logprob: -2.1608662605285645
    3. '       ' → logprob: -3.4108662605285645
    4. ' if' → logprob: -8.035866737365723
    5. '
' → logprob: -10.410866737365723
    6. '```' → logprob: -13.660866737365723
    7. '	if' → logprob: -14.910866737365723
    8. '           ' → logprob: -15.160866737365723
    9. '  ' → logprob: -16.035865783691406
    10. '    
' → logprob: -16.535865783691406

Token 1718: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0086546391248703
    2. '   ' → logprob: -5.258654594421387
    3. '       ' → logprob: -6.383654594421387
    4. ' to' → logprob: -7.258654594421387
    5. '#' → logprob: -7.508654594421387
    6. '```' → logprob: -8.883654594421387
    7. '_to' → logprob: -9.383654594421387
    8. '
' → logprob: -9.383654594421387
    9. 'on' → logprob: -10.133654594421387
    10. ':' → logprob: -11.008654594421387

Token 1719: ' rules' (ID: 9607)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.027087487280368805
    2. '#' → logprob: -4.527087688446045
    3. '   ' → logprob: -5.027087688446045
    4. '(best' → logprob: -5.152087688446045
    5. '
' → logprob: -6.902087688446045
    6. ' best' → logprob: -6.902087688446045
    7. 'c' → logprob: -7.902087688446045
    8. 'True' → logprob: -8.277087211608887
    9. '       ' → logprob: -8.402087211608887
    10. 'not' → logprob: -8.652087211608887

Token 1720: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9183153510093689
    2. '       ' → logprob: -0.9183153510093689
    3. 'if' → logprob: -1.6683154106140137
    4. ' if' → logprob: -4.543315410614014
    5. '
' → logprob: -6.043315410614014
    6. '        
' → logprob: -11.543314933776855
    7. '           ' → logprob: -11.793314933776855
    8. '    
' → logprob: -12.168314933776855
    9. '```' → logprob: -12.293314933776855
    10. '#' → logprob: -12.543314933776855

Token 1721: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003236655378714204
    2. 'if' → logprob: -5.753236770629883
    3. '       ' → logprob: -10.503236770629883
    4. ' if' → logprob: -10.503236770629883
    5. '```' → logprob: -12.878236770629883
    6. '
' → logprob: -13.503236770629883
    7. '	if' → logprob: -16.253236770629883
    8. '``' → logprob: -16.753236770629883
    9. '    
' → logprob: -17.628236770629883
    10. '`' → logprob: -19.003236770629883

Token 1722: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21497151255607605
    2. '   ' → logprob: -1.7149715423583984
    3. ' if' → logprob: -4.589971542358398
    4. '       ' → logprob: -5.714971542358398
    5. '```' → logprob: -11.839971542358398
    6. '
' → logprob: -13.214971542358398
    7. ' ' → logprob: -13.464971542358398
    8. '	if' → logprob: -13.589971542358398
    9. '    ' → logprob: -13.964971542358398
    10. '  ' → logprob: -13.964971542358398

Token 1723: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06268160045146942
    2. '   ' → logprob: -3.0626816749572754
    3. '       ' → logprob: -4.312681674957275
    4. ' if' → logprob: -7.437681674957275
    5. '```' → logprob: -12.812681198120117
    6. '#' → logprob: -13.062681198120117
    7. '
' → logprob: -13.187681198120117
    8. 'If' → logprob: -13.812681198120117
    9. '           ' → logprob: -14.687681198120117
    10. '	if' → logprob: -14.687681198120117

Token 1724: ' prime' (ID: 9197)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.07029406726360321
    2. ' best' → logprob: -2.695294141769409
    3. '(best' → logprob: -8.320294380187988
    4. '   ' → logprob: -9.570294380187988
    5. 'not' → logprob: -10.570294380187988
    6. '	best' → logprob: -12.195294380187988
    7. 'c' → logprob: -12.695294380187988
    8. ' not' → logprob: -12.945294380187988
    9. '       ' → logprob: -13.320294380187988
    10. '
' → logprob: -13.695294380187988

Token 1725: ' vs' (ID: 10217)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.453494668006897
    2. 'and' → logprob: -1.078494668006897
    3. ':' → logprob: -4.828494548797607
    4. '==' → logprob: -5.078494548797607
    5. ' or' → logprob: -5.328494548797607
    6. '   ' → logprob: -6.703494548797607
    7. ':
' → logprob: -6.703494548797607
    8. 'or' → logprob: -6.828494548797607
    9. '           ' → logprob: -7.578494548797607
    10. '       ' → logprob: -7.578494548797607

Token 1726: ' non' (ID: 2893)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.5333294868469238
    2. 'not' → logprob: -1.2833294868469238
    3. ' not' → logprob: -2.783329486846924
    4. 'op' → logprob: -3.533329486846924
    5. 'non' → logprob: -3.783329486846924
    6. ' prime' → logprob: -4.033329486846924
    7. ' opponent' → logprob: -6.783329486846924
    8. 'best' → logprob: -6.908329486846924
    9. ' non' → logprob: -7.033329486846924
    10. ' ' → logprob: -7.158329486846924

Token 1727: 'prime' (ID: 46441)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.6438025832176208
    2. 'prime' → logprob: -0.8938025832176208
    3. ' prime' → logprob: -2.7688026428222656
    4. ':' → logprob: -6.893802642822266
    5. '-pr' → logprob: -7.018802642822266
    6. '   ' → logprob: -8.143802642822266
    7. ' or' → logprob: -8.768802642822266
    8. '_' → logprob: -9.143802642822266
    9. '-' → logprob: -9.393802642822266
    10. ' best' → logprob: -9.643802642822266

Token 1728: ':' (ID: 25)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.41936320066452026
    2. '       ' → logprob: -1.419363260269165
    3. ':' → logprob: -2.794363260269165
    4. 'if' → logprob: -4.044363021850586
    5. ' if' → logprob: -4.419363021850586
    6. '   ' → logprob: -5.294363021850586
    7. ' and' → logprob: -5.919363021850586
    8. ' or' → logprob: -7.669363021850586
    9. ',' → logprob: -7.794363021850586
    10. '           ' → logprob: -7.919363021850586

Token 1729: ' prime' (ID: 9197)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.27093034982681274
    2. ' if' → logprob: -1.520930290222168
    3. '       ' → logprob: -4.020930290222168
    4. '   ' → logprob: -7.645930290222168
    5. '           ' → logprob: -8.895930290222168
    6. 'If' → logprob: -9.770930290222168
    7. 'best' → logprob: -9.895930290222168
    8. '
' → logprob: -10.395930290222168
    9. ' best' → logprob: -10.520930290222168
    10. '#' → logprob: -10.520930290222168

Token 1730: ' wins' (ID: 25327)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6409978270530701
    2. ' or' → logprob: -1.5159978866577148
    3. 'and' → logprob: -2.515997886657715
    4. ':' → logprob: -2.640997886657715
    5. 'if' → logprob: -3.515997886657715
    6. ':
' → logprob: -3.640997886657715
    7. 'or' → logprob: -4.265997886657715
    8. ' if' → logprob: -4.515997886657715
    9. '           ' → logprob: -5.640997886657715
    10. '   ' → logprob: -6.015997886657715

Token 1731: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04965433105826378
    2. '
' → logprob: -4.174654483795166
    3. 'if' → logprob: -4.174654483795166
    4. '   ' → logprob: -4.174654483795166
    5. ' if' → logprob: -6.174654483795166
    6. '        
' → logprob: -9.924654006958008
    7. '```' → logprob: -9.924654006958008
    8. '    
' → logprob: -10.674654006958008
    9. '``' → logprob: -11.174654006958008
    10. 'elif' → logprob: -11.549654006958008

Token 1732: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08133404701948166
    2. '   ' → logprob: -2.581334114074707
    3. 'if' → logprob: -6.081334114074707
    4. ' if' → logprob: -9.831334114074707
    5. '```' → logprob: -9.956334114074707
    6. '
' → logprob: -10.581334114074707
    7. 'elif' → logprob: -11.081334114074707
    8. '           ' → logprob: -12.331334114074707
    9. '#' → logprob: -12.706334114074707
    10. '``' → logprob: -12.831334114074707

Token 1733: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16346311569213867
    2. 'if' → logprob: -2.1634631156921387
    3. '   ' → logprob: -3.4134631156921387
    4. 'elif' → logprob: -6.288463115692139
    5. 'else' → logprob: -7.663463115692139
    6. '```' → logprob: -7.913463115692139
    7. '
' → logprob: -8.913463592529297
    8. ' if' → logprob: -9.538463592529297
    9. '``' → logprob: -10.663463592529297
    10. '#' (adapté à ' #') → logprob: -10.788463592529297

Token 1734: ' both' (ID: 2973)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0950397327542305
    2. 'if' → logprob: -2.8450398445129395
    3. '   ' → logprob: -3.4700398445129395
    4. '
' → logprob: -7.3450398445129395
    5. ' if' → logprob: -7.9700398445129395
    6. 'elif' → logprob: -8.595039367675781
    7. 'else' → logprob: -8.720039367675781
    8. '```' → logprob: -10.220039367675781
    9. '#' → logprob: -11.095039367675781
    10. '           ' → logprob: -12.095039367675781

Token 1735: ' prime' (ID: 9197)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.37304776906967163
    2. 'prime' → logprob: -1.6230478286743164
    3. '_num' → logprob: -2.7480478286743164
    4. ' are' → logprob: -4.748047828674316
    5. ' prime' → logprob: -4.998047828674316
    6. ' ==' → logprob: -5.248047828674316
    7. ' is' → logprob: -5.373047828674316
    8. ' if' → logprob: -5.748047828674316
    9. ' and' → logprob: -5.873047828674316
    10. ' =' → logprob: -6.123047828674316

Token 1736: ' or' (ID: 503)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.2400788068771362
    2. ':' → logprob: -1.6150788068771362
    3. ' and' → logprob: -1.7400788068771362
    4. '       ' → logprob: -1.7400788068771362
    5. ' or' → logprob: -2.490078926086426
    6. '   ' → logprob: -3.490078926086426
    7. 'and' → logprob: -4.615078926086426
    8. 'if' → logprob: -4.615078926086426
    9. ' if' → logprob: -4.865078926086426
    10. 'or' → logprob: -5.490078926086426

Token 1737: ' both' (ID: 2973)
  Prédit: 'both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'both' → logprob: -0.07587830722332001
    2. ' both' → logprob: -2.700878381729126
    3. 'non' → logprob: -5.575878143310547
    4. 'not' → logprob: -6.325878143310547
    5. ' not' → logprob: -8.700878143310547
    6. ' non' → logprob: -9.450878143310547
    7. 'prime' → logprob: -9.825878143310547
    8. '       ' → logprob: -11.450878143310547
    9. '           ' → logprob: -11.450878143310547
    10. '   ' → logprob: -11.700878143310547

Token 1738: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.7341612577438354
    2. 'not' → logprob: -1.2341612577438354
    3. 'prime' → logprob: -1.4841612577438354
    4. ' not' → logprob: -6.484161376953125
    5. ' non' → logprob: -7.734161376953125
    6. ' prime' → logprob: -8.109161376953125
    7. '   ' → logprob: -10.859161376953125
    8. 'none' → logprob: -11.609161376953125
    9. 'both' → logprob: -12.109161376953125
    10. 'pr' → logprob: -12.234161376953125

Token 1739: 'prime' (ID: 46441)
  Prédit: 'prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.037569254636764526
    2. '_prime' → logprob: -3.412569284439087
    3. '   ' → logprob: -6.787569046020508
    4. ' prime' → logprob: -6.787569046020508
    5. 'pr' → logprob: -8.287569046020508
    6. '-pr' → logprob: -8.412569046020508
    7. 'None' → logprob: -8.412569046020508
    8. ':' → logprob: -8.662569046020508
    9. ' None' → logprob: -8.662569046020508
    10. '       ' → logprob: -9.287569046020508

Token 1740: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06912487000226974
    2. ':' → logprob: -3.819124937057495
    3. '   ' → logprob: -4.319124698638916
    4. ':
' → logprob: -4.319124698638916
    5. ' or' → logprob: -4.944124698638916
    6. ' if' → logprob: -5.444124698638916
    7. ' and' → logprob: -5.694124698638916
    8. ',' → logprob: -7.319124698638916
    9. 'if' → logprob: -7.319124698638916
    10. 'else' → logprob: -8.319125175476074

Token 1741: ' larger' (ID: 12384)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011525211855769157
    2. ' if' → logprob: -4.5115251541137695
    3. '       ' → logprob: -8.51152515411377
    4. '           ' → logprob: -8.76152515411377
    5. '
' → logprob: -9.76152515411377
    6. 'num' → logprob: -10.51152515411377
    7. '   ' → logprob: -10.88652515411377
    8. '#' → logprob: -11.76152515411377
    9. '```' → logprob: -12.51152515411377
    10. '               ' → logprob: -13.13652515411377

Token 1742: ' number' (ID: 2086)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014228259213268757
    2. '   ' → logprob: -4.764228343963623
    3. ' if' → logprob: -5.389228343963623
    4. '       ' → logprob: -7.389228343963623
    5. '
' → logprob: -7.889228343963623
    6. '```' → logprob: -10.639227867126465
    7. '``' → logprob: -11.639227867126465
    8. '    
' → logprob: -13.264227867126465
    9. '        
' → logprob: -13.389227867126465
    10. '`
' → logprob: -13.889227867126465

Token 1743: ' wins' (ID: 25327)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10940905660390854
    2. 'if' → logprob: -2.3594090938568115
    3. '       ' → logprob: -5.109408855438232
    4. '
' → logprob: -5.859408855438232
    5. ' if' → logprob: -8.48440933227539
    6. '```' → logprob: -9.98440933227539
    7. '    
' → logprob: -11.73440933227539
    8. '        
' → logprob: -13.23440933227539
    9. '``' → logprob: -13.23440933227539
    10. '	if' → logprob: -14.23440933227539

Token 1744: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013958984985947609
    2. 'if' → logprob: -5.138958930969238
    3. '       ' → logprob: -5.263958930969238
    4. '
' → logprob: -5.888958930969238
    5. ' if' → logprob: -10.513958930969238
    6. '```' → logprob: -11.138958930969238
    7. '    
' → logprob: -11.638958930969238
    8. '        
' → logprob: -13.638958930969238
    9. '``' → logprob: -14.513958930969238
    10. 'else' → logprob: -14.763958930969238

Token 1745: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03836734965443611
    2. 'if' → logprob: -3.28836727142334
    3. '       ' → logprob: -8.78836727142334
    4. ' if' → logprob: -9.03836727142334
    5. '
' → logprob: -10.53836727142334
    6. '```' → logprob: -10.53836727142334
    7. '    
' → logprob: -14.41336727142334
    8. '``' → logprob: -14.53836727142334
    9. '	if' → logprob: -15.28836727142334
    10. '`' → logprob: -16.038368225097656

Token 1746: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38735231757164
    2. 'if' → logprob: -1.1373523473739624
    3. '       ' → logprob: -7.887352466583252
    4. '
' → logprob: -9.637351989746094
    5. ' if' → logprob: -10.262351989746094
    6. '```' → logprob: -12.262351989746094
    7. 'elif' → logprob: -15.387351989746094
    8. '    
' → logprob: -15.887351989746094
    9. '``' → logprob: -16.012351989746094
    10. '	if' → logprob: -16.137351989746094

Token 1747: ' We' (ID: 1416)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02396281063556671
    2. '   ' → logprob: -3.7739627361297607
    3. '       ' → logprob: -7.39896297454834
    4. ' if' → logprob: -9.39896297454834
    5. '```' → logprob: -11.39896297454834
    6. '
' → logprob: -11.52396297454834
    7. '``' → logprob: -14.14896297454834
    8. '	if' → logprob: -16.148962020874023
    9. '`' → logprob: -16.398962020874023
    10. '    
' → logprob: -16.773962020874023

Token 1748: ' want' (ID: 1682)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08212193101644516
    2. '   ' → logprob: -2.9571218490600586
    3. ' if' → logprob: -3.7071218490600586
    4. '
' → logprob: -6.707121849060059
    5. ' =' → logprob: -7.707121849060059
    6. '#' → logprob: -8.457121849060059
    7. '=' → logprob: -8.832121849060059
    8. 'def' → logprob: -9.332121849060059
    9. 'try' → logprob: -9.832121849060059
    10. '       ' → logprob: -10.332121849060059

Token 1749: ' not' (ID: 625)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13645456731319427
    2. 'best' → logprob: -2.7614545822143555
    3. '   ' → logprob: -3.1364545822143555
    4. ' if' → logprob: -4.8864545822143555
    5. '
' → logprob: -5.6364545822143555
    6. '       ' → logprob: -6.0114545822143555
    7. '(best' → logprob: -6.1364545822143555
    8. '#' → logprob: -6.2614545822143555
    9. ' best' → logprob: -6.7614545822143555
    10. 'None' → logprob: -7.5114545822143555

Token 1750: ' to' (ID: 316)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.09851804375648499
    2. 'best' → logprob: -2.723518133163452
    3. ' losing' → logprob: -4.723517894744873
    4. '(best' → logprob: -5.348517894744873
    5. '_best' → logprob: -5.473517894744873
    6. ' (' → logprob: -5.723517894744873
    7. ' lose' → logprob: -6.598517894744873
    8. '   ' → logprob: -6.598517894744873
    9. '_' → logprob: -7.098517894744873
    10. ' ' → logprob: -7.348517894744873

Token 1751: ' lose' (ID: 12577)
  Prédit: 'lose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lose' → logprob: -0.048749733716249466
    2. ' lose' → logprob: -3.0487496852874756
    3. 'lo' → logprob: -9.173749923706055
    4. 'los' → logprob: -10.048749923706055
    5. 'loss' → logprob: -12.548749923706055
    6. 'have' → logprob: -13.173749923706055
    7. 'change' → logprob: -13.298749923706055
    8. 'return' → logprob: -13.548749923706055
    9. 'lost' → logprob: -13.798749923706055
    10. '```' → logprob: -13.923749923706055

Token 1752: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7326430678367615
    2. 'if' → logprob: -0.7326430678367615
    3. '
' → logprob: -3.4826431274414062
    4. '       ' → logprob: -5.607643127441406
    5. ' if' → logprob: -5.607643127441406
    6. '    
' → logprob: -8.232643127441406
    7. '```' → logprob: -8.607643127441406
    8. '        
' → logprob: -9.357643127441406
    9. '#' → logprob: -10.607643127441406
    10. '``' → logprob: -10.732643127441406

Token 1753: ' so' (ID: 813)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21912917494773865
    2. '   ' → logprob: -2.2191290855407715
    3. ' if' → logprob: -2.4691290855407715
    4. '       ' → logprob: -5.9691290855407715
    5. '
' → logprob: -7.0941290855407715
    6. '```' → logprob: -11.59412956237793
    7. '#' → logprob: -12.09412956237793
    8. '           ' → logprob: -12.59412956237793
    9. '    
' → logprob: -12.96912956237793
    10. '    ' → logprob: -13.34412956237793

Token 1754: ' take' (ID: 2304)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007833030540496111
    2. ' if' → logprob: -7.500783443450928
    3. '   ' → logprob: -8.62578296661377
    4. '       ' → logprob: -10.75078296661377
    5. '```' → logprob: -10.87578296661377
    6. '
' → logprob: -12.00078296661377
    7. 'best' → logprob: -13.00078296661377
    8. '``' → logprob: -14.00078296661377
    9. '#' → logprob: -14.50078296661377
    10. '           ' → logprob: -15.00078296661377

Token 1755: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.020194627344608307
    2. '(best' → logprob: -4.3951945304870605
    3. ' best' → logprob: -5.7701945304870605
    4. 'if' → logprob: -6.2701945304870605
    5. '   ' → logprob: -6.8951945304870605
    6. '(
' → logprob: -6.8951945304870605
    7. '(' → logprob: -8.395195007324219
    8. '
' → logprob: -8.645195007324219
    9. 'prime' → logprob: -9.770195007324219
    10. '_best' → logprob: -9.770195007324219

Token 1756: ' accordingly' (ID: 44041)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06368856877088547
    2. '   ' → logprob: -3.5636885166168213
    3. '       ' → logprob: -3.6886885166168213
    4. '_num' → logprob: -6.3136887550354
    5. ' if' → logprob: -6.3136887550354
    6. '
' → logprob: -6.4386887550354
    7. ' =' → logprob: -6.4386887550354
    8. '```' → logprob: -7.1886887550354
    9. '``' → logprob: -8.563688278198242
    10. '=' → logprob: -9.313688278198242

Token 1757: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5784990191459656
    2. 'if' → logprob: -0.8284990191459656
    3. '       ' → logprob: -6.578498840332031
    4. ' if' → logprob: -7.078498840332031
    5. '
' → logprob: -8.453498840332031
    6. '```' → logprob: -9.203498840332031
    7. '	if' → logprob: -12.828498840332031
    8. '    
' → logprob: -12.953498840332031
    9. '``' → logprob: -12.953498840332031
    10. '        
' → logprob: -14.078498840332031

Token 1758: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20248758792877197
    2. 'if' → logprob: -1.702487587928772
    3. ' if' → logprob: -7.077487468719482
    4. '
' → logprob: -8.70248794555664
    5. '```' → logprob: -9.82748794555664
    6. '    
' → logprob: -12.45248794555664
    7. '       ' → logprob: -12.70248794555664
    8. '``' → logprob: -13.32748794555664
    9. '	if' → logprob: -14.70248794555664
    10. '`' → logprob: -15.70248794555664

Token 1759: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.018192904070019722
    2. '   ' → logprob: -4.018192768096924
    3. ' if' → logprob: -10.268193244934082
    4. '       ' → logprob: -11.893193244934082
    5. '
' → logprob: -14.143193244934082
    6. '```' → logprob: -14.393193244934082
    7. '	if' → logprob: -16.393192291259766
    8. 'If' → logprob: -18.143192291259766
    9. '``' → logprob: -18.143192291259766
    10. '    
' → logprob: -18.268192291259766

Token 1760: ' So' (ID: 2632)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4779679775238037
    2. '   ' → logprob: -0.9779679775238037
    3. '       ' → logprob: -6.102968215942383
    4. ' if' → logprob: -6.727968215942383
    5. '
' → logprob: -7.727968215942383
    6. '```' → logprob: -11.852968215942383
    7. '#' → logprob: -13.852968215942383
    8. 'def' → logprob: -14.852968215942383
    9. '``' → logprob: -14.977968215942383
    10. '    
' → logprob: -15.227968215942383

Token 1761: ' pick' (ID: 5230)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011945223435759544
    2. ' if' → logprob: -4.5119452476501465
    3. '   ' → logprob: -7.3869452476501465
    4. '
' → logprob: -8.511944770812988
    5. '       ' → logprob: -9.636944770812988
    6. 'best' → logprob: -12.136944770812988
    7. '#' → logprob: -12.511944770812988
    8. 'result' → logprob: -14.886944770812988
    9. ' best' → logprob: -15.136944770812988
    10. '        
' → logprob: -15.261944770812988

Token 1762: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.08389271795749664
    2. '(best' → logprob: -3.208892822265625
    3. 'if' → logprob: -3.708892822265625
    4. '   ' → logprob: -4.458892822265625
    5. '(
' → logprob: -6.458892822265625
    6. ' best' → logprob: -6.708892822265625
    7. '(' → logprob: -7.708892822265625
    8. '
' → logprob: -8.458892822265625
    9. '```' → logprob: -8.958892822265625
    10. '((' → logprob: -9.333892822265625

Token 1763: ' prime' (ID: 9197)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05103592947125435
    2. ' =' → logprob: -3.9260358810424805
    3. '_num' → logprob: -4.1760358810424805
    4. '=' → logprob: -5.8010358810424805
    5. '
' → logprob: -6.0510358810424805
    6. '       ' → logprob: -6.3010358810424805
    7. 'final' → logprob: -6.5510358810424805
    8. '   ' → logprob: -6.6760358810424805
    9. 'result' → logprob: -6.9260358810424805
    10. '_result' → logprob: -7.4260358810424805

Token 1764: ' number' (ID: 2086)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7376847863197327
    2. ' if' → logprob: -1.737684726715088
    3. 'if' → logprob: -1.737684726715088
    4. '   ' → logprob: -2.237684726715088
    5. '=' → logprob: -3.862684726715088
    6. '       ' → logprob: -4.487684726715088
    7. ' or' → logprob: -4.862684726715088
    8. '_' → logprob: -5.362684726715088
    9. ',' → logprob: -5.612684726715088
    10. '_num' → logprob: -5.612684726715088

Token 1765: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7258301377296448
    2. ' if' → logprob: -1.975830078125
    3. 'if' → logprob: -2.225830078125
    4. '_' → logprob: -2.725830078125
    5. '   ' → logprob: -3.350830078125
    6. '=' → logprob: -3.350830078125
    7. ':' → logprob: -3.475830078125
    8. '_num' → logprob: -3.600830078125
    9. ',' → logprob: -3.975830078125
    10. ' or' → logprob: -4.350830078125

Token 1766: ' or' (ID: 503)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.000763287884183228
    2. ' if' → logprob: -7.500763416290283
    3. '       ' → logprob: -8.625762939453125
    4. '#' → logprob: -11.125762939453125
    5. 'best' → logprob: -11.500762939453125
    6. 'elif' → logprob: -12.875762939453125
    7. '```' → logprob: -13.125762939453125
    8. '
' → logprob: -14.125762939453125
    9. '   ' → logprob: -14.500762939453125
    10. '(best' → logprob: -16.875762939453125

Token 1767: ' max' (ID: 2999)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02390100434422493
    2. 'best' → logprob: -4.273900985717773
    3. '#' → logprob: -5.023900985717773
    4. ' if' → logprob: -6.023900985717773
    5. '(best' → logprob: -8.648900985717773
    6. 'pick' → logprob: -8.898900985717773
    7. '(if' → logprob: -9.273900985717773
    8. '   ' → logprob: -9.523900985717773
    9. 'the' → logprob: -9.773900985717773
    10. 'largest' → logprob: -10.023900985717773

Token 1768: ' number' (ID: 2086)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.529930055141449
    2. 'if' → logprob: -1.1549301147460938
    3. 'num' → logprob: -2.9049301147460938
    4. ' =' → logprob: -4.029930114746094
    5. '   ' → logprob: -4.529930114746094
    6. '=' → logprob: -5.904930114746094
    7. '       ' → logprob: -6.154930114746094
    8. '_number' → logprob: -6.529930114746094
    9. ' if' → logprob: -6.904930114746094
    10. 'best' → logprob: -7.279930114746094

Token 1769: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2130620926618576
    2. '   ' → logprob: -2.338062047958374
    3. ' =' → logprob: -3.213062047958374
    4. ' if' → logprob: -3.338062047958374
    5. '       ' → logprob: -4.463062286376953
    6. '
' → logprob: -5.713062286376953
    7. '=' → logprob: -6.213062286376953
    8. ':' → logprob: -7.463062286376953
    9. '```' → logprob: -7.963062286376953
    10. 'num' → logprob: -8.088062286376953

Token 1770: ' no' (ID: 860)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.10702665150165558
    2. 'not' → logprob: -2.9820265769958496
    3. '(best' → logprob: -3.7320265769958496
    4. ' best' → logprob: -3.8570265769958496
    5. '(not' → logprob: -5.73202657699585
    6. 'both' → logprob: -6.73202657699585
    7. ' not' → logprob: -6.73202657699585
    8. '   ' → logprob: -10.482027053833008
    9. ' both' → logprob: -11.107027053833008
    10. '	best' → logprob: -11.357027053833008

Token 1771: ' prime' (ID: 9197)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.6475517749786377
    2. 'prime' → logprob: -1.1475517749786377
    3. '_prime' → logprob: -2.2725517749786377
    4. ' best' → logprob: -3.5225517749786377
    5. ' prime' → logprob: -4.397551536560059
    6. '(best' → logprob: -5.147551536560059
    7. '_best' → logprob: -5.397551536560059
    8. '_num' → logprob: -6.647551536560059
    9. 't' → logprob: -7.147551536560059
    10. '_' → logprob: -8.022551536560059

Token 1772: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035910410806536674
    2. '
' → logprob: -6.128591060638428
    3. 'if' → logprob: -6.628591060638428
    4. ' if' → logprob: -10.12859058380127
    5. '    
' → logprob: -11.12859058380127
    6. '       ' → logprob: -11.37859058380127
    7. '```' → logprob: -11.37859058380127
    8. 'def' → logprob: -12.62859058380127
    9. '        
' → logprob: -14.25359058380127
    10. '``' → logprob: -15.00359058380127

Token 1773: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39427557587623596
    2. 'if' → logprob: -1.1442755460739136
    3. '       ' → logprob: -5.269275665283203
    4. '
' → logprob: -6.269275665283203
    5. ' if' → logprob: -8.519275665283203
    6. '```' → logprob: -9.019275665283203
    7. '    
' → logprob: -11.644275665283203
    8. '``' → logprob: -12.894275665283203
    9. '        
' → logprob: -13.019275665283203
    10. '`' → logprob: -14.644275665283203

Token 1774: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008173751644790173
    2. '   ' → logprob: -5.508173942565918
    3. '       ' → logprob: -5.508173942565918
    4. ' if' → logprob: -10.508173942565918
    5. '
' → logprob: -12.133173942565918
    6. '```' → logprob: -14.758173942565918
    7. '	if' → logprob: -16.1331729888916
    8. '        
' → logprob: -17.3831729888916
    9. 'If' → logprob: -17.6331729888916
    10. 'best' → logprob: -17.6331729888916

Token 1775: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.028331294655799866
    2. '(best' → logprob: -3.6533312797546387
    3. ' best' → logprob: -6.278331279754639
    4. '(' → logprob: -10.028331756591797
    5. ' (' → logprob: -10.028331756591797
    6. '   ' → logprob: -10.153331756591797
    7. '((' → logprob: -12.028331756591797
    8. '(not' → logprob: -12.153331756591797
    9. '       ' → logprob: -12.278331756591797
    10. 'not' → logprob: -12.653331756591797

Token 1776: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.28419139981269836
    2. '_num' → logprob: -1.409191370010376
    3. '_' → logprob: -6.284191608428955
    4. '_pr' → logprob: -7.159191608428955
    5. 'prime' → logprob: -8.409191131591797
    6. 'num' → logprob: -10.034191131591797
    7. ''_' → logprob: -10.409191131591797
    8. '_p' → logprob: -11.034191131591797
    9. '_
' → logprob: -11.909191131591797
    10. ' _' → logprob: -11.909191131591797

Token 1777: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.21315523982048035
    2. 'and' → logprob: -1.7131552696228027
    3. '_' → logprob: -4.713155269622803
    4. ' or' → logprob: -6.838155269622803
    5. '==' → logprob: -6.963155269622803
    6. '   ' → logprob: -8.588154792785645
    7. ' ==' → logprob: -8.963154792785645
    8. ':' → logprob: -9.338154792785645
    9. 'or' → logprob: -9.588154792785645
    10. ':
' → logprob: -9.713154792785645

Token 1778: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.5646620392799377
    2. '(best' → logprob: -1.064661979675293
    3. 'not' → logprob: -2.814661979675293
    4. '(not' → logprob: -3.689661979675293
    5. ' best' → logprob: -7.439661979675293
    6. ' not' → logprob: -8.064661979675293
    7. ' (' → logprob: -8.314661979675293
    8. '(' → logprob: -8.439661979675293
    9. '   ' → logprob: -9.564661979675293
    10. '((' → logprob: -9.939661979675293

Token 1779: '_prime' (ID: 98616)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.18189917504787445
    2. '_prime' → logprob: -1.8068991899490356
    3. '_' → logprob: -6.556899070739746
    4. 'prime' → logprob: -7.931899070739746
    5. '_pr' → logprob: -8.806899070739746
    6. 'num' → logprob: -8.806899070739746
    7. '```' → logprob: -11.306899070739746
    8. ''_' → logprob: -11.681899070739746
    9. '_pos' → logprob: -12.181899070739746
    10. '_
' → logprob: -12.806899070739746

Token 1780: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8920766711235046
    2. '==' → logprob: -1.3920767307281494
    3. 'and' → logprob: -2.1420767307281494
    4. ' and' → logprob: -2.2670767307281494
    5. ':
' → logprob: -3.0170767307281494
    6. ':' → logprob: -3.5170767307281494
    7. '       ' → logprob: -4.76707649230957
    8. ' ==' → logprob: -4.76707649230957
    9. 'or' → logprob: -5.01707649230957
    10. ' or' → logprob: -5.64207649230957

Token 1781: 'wo' (ID: 1338)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5772761702537537
    2. 'wo' → logprob: -0.9522761702537537
    3. 'w' → logprob: -5.077276229858398
    4. '_' → logprob: -5.077276229858398
    5. 'and' → logprob: -5.202276229858398
    6. 'true' → logprob: -5.452276229858398
    7. 'or' → logprob: -5.577276229858398
    8. ':' → logprob: -5.577276229858398
    9. '   ' → logprob: -5.577276229858398
    10. 'True' → logprob: -6.077276229858398

Token 1782: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0006304710987024009
    2. 'c' → logprob: -7.3756303787231445
    3. '_' → logprob: -12.625630378723145
    4. 'C' → logprob: -14.500630378723145
    5. '_
' → logprob: -17.50063133239746
    6. '   ' → logprob: -17.75063133239746
    7. '```' → logprob: -17.87563133239746
    8. '	c' → logprob: -18.87563133239746
    9. '-c' → logprob: -19.00063133239746
    10. ' c' → logprob: -19.00063133239746

Token 1783: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.605014979839325
    2. ' and' → logprob: -1.8550150394439697
    3. ':' → logprob: -1.9800150394439697
    4. 'and' → logprob: -2.1050150394439697
    5. ' ==' → logprob: -3.8550150394439697
    6. ':
' → logprob: -4.730014801025391
    7. '   ' → logprob: -6.355014801025391
    8. '>' → logprob: -6.480014801025391
    9. '>=' → logprob: -6.980014801025391
    10. '       ' → logprob: -7.230014801025391

Token 1784: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04336155578494072
    2. ' and' → logprob: -3.9183616638183594
    3. '   ' → logprob: -4.293361663818359
    4. ':' → logprob: -5.418361663818359
    5. ':
' → logprob: -5.543361663818359
    6. 'and' → logprob: -8.04336166381836
    7. '           ' → logprob: -9.16836166381836
    8. '```' → logprob: -9.79336166381836
    9. '):
' → logprob: -11.04336166381836
    10. ' or' → logprob: -11.16836166381836

Token 1785: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24723540246486664
    2. '   ' → logprob: -1.8722354173660278
    3. 'if' → logprob: -2.7472352981567383
    4. ' if' → logprob: -6.872235298156738
    5. '           ' → logprob: -9.247235298156738
    6. '	if' → logprob: -11.997235298156738
    7. '```' → logprob: -11.997235298156738
    8. '[' → logprob: -12.497235298156738
    9. ':' → logprob: -12.747235298156738
    10. ':
' → logprob: -13.622235298156738

Token 1786: ' both' (ID: 2973)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1548709124326706
    2. ' if' → logprob: -2.5298709869384766
    3. '       ' → logprob: -2.7798709869384766
    4. '   ' → logprob: -6.654870986938477
    5. 'best' → logprob: -8.529870986938477
    6. '           ' → logprob: -9.154870986938477
    7. '#' → logprob: -10.029870986938477
    8. '```' → logprob: -10.404870986938477
    9. 'num' → logprob: -10.529870986938477
    10. ' best' → logprob: -11.154870986938477

Token 1787: ' prime' (ID: 9197)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.1520257294178009
    2. 'if' → logprob: -2.9020256996154785
    3. '_prime' → logprob: -3.5270256996154785
    4. '>' → logprob: -4.1520256996154785
    5. ' if' → logprob: -4.7770256996154785
    6. '=' → logprob: -4.9020256996154785
    7. 'num' → logprob: -5.1520256996154785
    8. ':' → logprob: -5.7770256996154785
    9. '   ' → logprob: -6.2770256996154785
    10. '==' → logprob: -6.4020256996154785

Token 1788: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6047003269195557
    2. ':' → logprob: -1.4797003269195557
    3. '       ' → logprob: -1.9797003269195557
    4. ' and' → logprob: -2.8547003269195557
    5. '           ' → logprob: -4.104700088500977
    6. '   ' → logprob: -5.354700088500977
    7. 'and' → logprob: -5.604700088500977
    8. '               ' → logprob: -6.229700088500977
    9. ' if' → logprob: -7.229700088500977
    10. '):
' → logprob: -7.604700088500977

Token 1789: ' pick' (ID: 5230)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.019639307633042336
    2. ' if' → logprob: -4.144639492034912
    3. '           ' → logprob: -5.644639492034912
    4. '   ' → logprob: -10.519639015197754
    5. '       ' → logprob: -10.644639015197754
    6. '               ' → logprob: -11.519639015197754
    7. 'continue' → logprob: -14.519639015197754
    8. '#' → logprob: -15.519639015197754
    9. '```' → logprob: -15.894639015197754
    10. '	if' → logprob: -16.39463996887207

Token 1790: ' larger' (ID: 12384)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.14752128720283508
    2. ' best' → logprob: -2.0225212574005127
    3. 'max' → logprob: -5.897521495819092
    4. '   ' → logprob: -6.772521495819092
    5. ' max' → logprob: -7.397521495819092
    6. 'int' → logprob: -8.772521018981934
    7. ' int' → logprob: -9.897521018981934
    8. '	best' → logprob: -10.522521018981934
    9. '(best' → logprob: -10.897521018981934
    10. 'num' → logprob: -10.897521018981934

Token 1791: ' number' (ID: 2086)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6756614446640015
    2. ' if' → logprob: -1.0506614446640015
    3. '_num' → logprob: -2.800661563873291
    4. ' =' → logprob: -3.300661563873291
    5. '=' → logprob: -3.925661563873291
    6. ':
' → logprob: -4.925661563873291
    7. '           ' → logprob: -5.300661563873291
    8. ':' → logprob: -5.550661563873291
    9. '   ' → logprob: -6.050661563873291
    10. 'num' → logprob: -6.550661563873291

Token 1792: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37219011783599854
    2. ':
' → logprob: -1.7471901178359985
    3. ' =' → logprob: -3.122189998626709
    4. ':' → logprob: -3.622189998626709
    5. ' if' → logprob: -3.622189998626709
    6. '   ' → logprob: -4.497189998626709
    7. '=' → logprob: -4.747189998626709
    8. 'if' → logprob: -4.872189998626709
    9. '       ' → logprob: -5.122189998626709
    10. '):
' → logprob: -6.747189998626709

Token 1793: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20485061407089233
    2. '       ' → logprob: -1.829850673675537
    3. '   ' → logprob: -4.079850673675537
    4. 'if' → logprob: -5.454850673675537
    5. ':' → logprob: -6.829850673675537
    6. ' if' → logprob: -6.829850673675537
    7. ' =' → logprob: -7.579850673675537
    8. ':
' → logprob: -8.579850196838379
    9. '               ' → logprob: -8.579850196838379
    10. '=' → logprob: -8.704850196838379

Token 1794: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8041293025016785
    2. '           ' → logprob: -1.4291293621063232
    3. '       ' → logprob: -2.1791293621063232
    4. '   ' → logprob: -2.3041293621063232
    5. ' if' → logprob: -2.3041293621063232
    6. '```' → logprob: -9.429129600524902
    7. '               ' → logprob: -10.554129600524902
    8. ' ' → logprob: -10.804129600524902
    9. '	if' → logprob: -11.679129600524902
    10. '
' → logprob: -11.679129600524902

Token 1795: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001263567479327321
    2. 'best' → logprob: -6.751263618469238
    3. ' int' → logprob: -9.376263618469238
    4. '   ' → logprob: -12.001263618469238
    5. 'max' → logprob: -13.376263618469238
    6. ' best' → logprob: -15.001263618469238
    7. '  ' → logprob: -15.376263618469238
    8. ' ' → logprob: -15.626263618469238
    9. '(int' → logprob: -15.751263618469238
    10. '    ' → logprob: -17.626262664794922

Token 1796: '(best' (ID: 118299)
  Prédit: '(best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(best' → logprob: -0.0009114635176956654
    2. 'best' → logprob: -7.000911235809326
    3. '	best' → logprob: -18.000911712646484
    4. ' best' → logprob: -18.125911712646484
    5. '_best' → logprob: -20.250911712646484
    6. 'Best' → logprob: -20.625911712646484
    7. '.best' → logprob: -21.250911712646484
    8. '```' → logprob: -22.000911712646484
    9. '-best' → logprob: -22.125911712646484
    10. '(b' → logprob: -22.250911712646484

Token 1797: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -9.162282367469743e-05
    2. '_' → logprob: -9.500091552734375
    3. 'num' → logprob: -11.500091552734375
    4. '_prime' → logprob: -13.250091552734375
    5. '```' → logprob: -14.125091552734375
    6. 'Num' → logprob: -14.375091552734375
    7. '_str' → logprob: -14.750091552734375
    8. '_best' → logprob: -14.750091552734375
    9. ''_' → logprob: -14.750091552734375
    10. '_pr' → logprob: -15.125091552734375

Token 1798: '_' (ID: 62)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0071818106807768345
    2. ')>' → logprob: -5.007181644439697
    3. ' )' → logprob: -7.882181644439697
    4. '>)' → logprob: -10.507182121276855
    5. ')>=' → logprob: -10.882182121276855
    6. ' >' → logprob: -11.007182121276855
    7. ')<' → logprob: -11.257182121276855
    8. '>' → logprob: -11.757182121276855
    9. '')' → logprob: -13.382182121276855
    10. '   ' → logprob: -13.757182121276855

Token 1799: 'wo' (ID: 1338)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008639389649033546
    2. ')>' → logprob: -4.758639335632324
    3. ')>=' → logprob: -11.508639335632324
    4. '>)' → logprob: -12.258639335632324
    5. '')' → logprob: -13.133639335632324
    6. '>' → logprob: -13.633639335632324
    7. ')<' → logprob: -13.633639335632324
    8. ' )' → logprob: -13.758639335632324
    9. '[' → logprob: -13.883639335632324
    10. ')>
' → logprob: -14.008639335632324

Token 1800: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -9.968312951968983e-06
    2. '_' → logprob: -12.375009536743164
    3. ')' → logprob: -13.750009536743164
    4. ')_' → logprob: -13.750009536743164
    5. '```' → logprob: -13.750009536743164
    6. 'c' → logprob: -14.125009536743164
    7. ''_' → logprob: -14.250009536743164
    8. '_str' → logprob: -15.250009536743164
    9. '_)' → logprob: -15.250009536743164
    10. ')>' → logprob: -15.750009536743164

Token 1801: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018442092463374138
    2. ')>' → logprob: -4.393442153930664
    3. '>' → logprob: -5.518442153930664
    4. ' >' → logprob: -6.643442153930664
    5. ' )' → logprob: -7.643442153930664
    6. '>)' → logprob: -9.143442153930664
    7. ')>
' → logprob: -12.893442153930664
    8. '[' → logprob: -13.268442153930664
    9. ')>=' → logprob: -13.393442153930664
    10. '```' → logprob: -13.393442153930664

Token 1802: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.18472373485565186
    2. '>' → logprob: -1.8097237348556519
    3. ' <' → logprob: -5.934723854064941
    4. ' >=' → logprob: -6.434723854064941
    5. ' <=' → logprob: -7.809723854064941
    6. '>=' → logprob: -9.184723854064941
    7. '<' → logprob: -9.309723854064941
    8. ')' → logprob: -10.184723854064941
    9. ' >
' → logprob: -10.309723854064941
    10. '```' → logprob: -11.184723854064941

Token 1803: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00020354038861114532
    2. ' int' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.75020408630371
    4. ' ' → logprob: -20.75020408630371
    5. '=int' → logprob: -21.00020408630371
    6. '(int' → logprob: -21.37520408630371
    7. '  ' → logprob: -22.00020408630371
    8. '	int' → logprob: -22.00020408630371
    9. '
' → logprob: -22.12520408630371
    10. '[int' → logprob: -22.25020408630371

Token 1804: '(best' (ID: 118299)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.011380011215806007
    2. '(best' → logprob: -4.511380195617676
    3. ' best' → logprob: -8.011380195617676
    4. '	best' → logprob: -14.761380195617676
    5. '_best' → logprob: -17.63637924194336
    6. '.best' → logprob: -17.63637924194336
    7. '-best' → logprob: -18.13637924194336
    8. 'Best' → logprob: -18.63637924194336
    9. '```' → logprob: -18.88637924194336
    10. '`' → logprob: -19.13637924194336

Token 1805: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -3.2020991056924686e-05
    2. 'num' → logprob: -10.375032424926758
    3. 'Num' → logprob: -15.125032424926758
    4. '```' → logprob: -15.250032424926758
    5. '_NUM' → logprob: -15.875032424926758
    6. ')' → logprob: -18.250032424926758
    7. ' _' → logprob: -18.625032424926758
    8. '`' → logprob: -18.750032424926758
    9. '-num' → logprob: -18.750032424926758
    10. 'user' → logprob: -19.000032424926758

Token 1806: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02647213451564312
    2. '):' → logprob: -3.6514720916748047
    3. ' ):
' → logprob: -10.026472091674805
    4. '):
' → logprob: -10.151472091674805
    5. ')' → logprob: -10.401472091674805
    6. ''):
' → logprob: -11.026472091674805
    7. '   ' → logprob: -11.026472091674805
    8. '       ' → logprob: -11.151472091674805
    9. ' ):' → logprob: -13.276472091674805
    10. '"):
' → logprob: -13.276472091674805

Token 1807: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00688290735706687
    2. ':
' → logprob: -5.881883144378662
    3. ':' → logprob: -6.631883144378662
    4. '           ' → logprob: -7.256883144378662
    5. '                       ' → logprob: -7.506883144378662
    6. '):
' → logprob: -7.756883144378662
    7. ')' → logprob: -8.131882667541504
    8. '                   ' → logprob: -8.506882667541504
    9. '):' → logprob: -8.631882667541504
    10. '                               ' → logprob: -9.256882667541504

Token 1808: ' best' (ID: 1636)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5793040990829468
    2. ' best' → logprob: -1.2043040990829468
    3. 'best' (adapté à ' best') → logprob: -2.4543042182922363
    4. '               ' → logprob: -3.4543042182922363
    5. '                   ' → logprob: -4.329304218292236
    6. '   ' → logprob: -4.829304218292236
    7. '	best' → logprob: -7.329304218292236
    8. '(best' → logprob: -8.954303741455078
    9. '                       ' → logprob: -9.079303741455078
    10. '       ' → logprob: -9.704303741455078

Token 1809: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -3.054500666621607e-06
    2. '_' → logprob: -12.87500286102295
    3. 'num' → logprob: -15.75000286102295
    4. '```' → logprob: -16.875003814697266
    5. '_number' → logprob: -17.000003814697266
    6. '_n' → logprob: -17.125003814697266
    7. '}_' → logprob: -17.375003814697266
    8. '_nums' → logprob: -17.500003814697266
    9. ''_' → logprob: -17.875003814697266
    10. '_NUM' → logprob: -18.000003814697266

Token 1810: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08932416141033173
    2. ' =' → logprob: -2.5893242359161377
    3. '_' → logprob: -4.589323997497559
    4. '_=' → logprob: -8.464323997497559
    5. ' ' → logprob: -13.214323997497559
    6. '=_' → logprob: -13.464323997497559
    7. '   ' → logprob: -13.714323997497559
    8. '	' → logprob: -14.089323997497559
    9. '    ' → logprob: -14.214323997497559
    10. ',' → logprob: -14.339323997497559

Token 1811: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.0067156096920371056
    2. ' best' → logprob: -5.006715774536133
    3. '	best' → logprob: -15.506715774536133
    4. '(best' → logprob: -16.631715774536133
    5. 'b' → logprob: -17.881715774536133
    6. '.best' → logprob: -19.756715774536133
    7. '_best' → logprob: -19.881715774536133
    8. '   ' → logprob: -20.006715774536133
    9. '-best' → logprob: -21.006715774536133
    10. '```' → logprob: -21.256715774536133

Token 1812: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -3.249780638725497e-05
    2. '_' → logprob: -10.375032424926758
    3. 'num' → logprob: -14.125032424926758
    4. '```' → logprob: -15.000032424926758
    5. '\' → logprob: -16.250032424926758
    6. '
' → logprob: -17.000032424926758
    7. ''_' → logprob: -17.125032424926758
    8. '`' → logprob: -17.500032424926758
    9. ' _' → logprob: -17.875032424926758
    10. 'Num' → logprob: -18.125032424926758

Token 1813: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.7432603272027336e-06
    2. 'wo' → logprob: -14.500001907348633
    3. '   ' → logprob: -15.000001907348633
    4. '```' → logprob: -15.625001907348633
    5. '_
' → logprob: -16.125001907348633
    6. '
' → logprob: -16.750001907348633
    7. 'Wo' → logprob: -16.875001907348633
    8. ' _' → logprob: -17.125001907348633
    9. '       ' → logprob: -17.125001907348633
    10. '\' → logprob: -17.250001907348633

Token 1814: 'wo' (ID: 1338)
  Prédit: 'wo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wo' → logprob: -0.02340700849890709
    2. 'c' → logprob: -3.773406982421875
    3. 'co' → logprob: -9.273406982421875
    4. '_c' → logprob: -10.898406982421875
    5. '1' → logprob: -11.273406982421875
    6. '0' → logprob: -12.023406982421875
    7. '   ' → logprob: -12.898406982421875
    8. '```' → logprob: -13.023406982421875
    9. 'oc' → logprob: -13.398406982421875
    10. '2' → logprob: -13.398406982421875

Token 1815: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00020532844064291567
    2. 'c' → logprob: -8.500205039978027
    3. '_' → logprob: -14.250205039978027
    4. '```' → logprob: -15.875205039978027
    5. '   ' → logprob: -16.187705993652344
    6. 'C' → logprob: -16.562705993652344
    7. '	c' → logprob: -16.625205993652344
    8. 'w' → logprob: -16.687705993652344
    9. '-c' → logprob: -16.875205993652344
    10. '_co' → logprob: -17.000205993652344

Token 1816: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14555315673351288
    2. '       ' → logprob: -2.0205531120300293
    3. 'else' → logprob: -6.395553112030029
    4. 'elif' → logprob: -7.020553112030029
    5. '   ' → logprob: -8.770553588867188
    6. '
' → logprob: -9.395553588867188
    7. '               ' → logprob: -10.645553588867188
    8. ' else' → logprob: -11.645553588867188
    9. 'if' → logprob: -11.770553588867188
    10. '```' → logprob: -12.020553588867188

Token 1817: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13558907806873322
    2. 'else' → logprob: -2.760589122772217
    3. '       ' → logprob: -3.135589122772217
    4. '               ' → logprob: -4.385589122772217
    5. 'elif' → logprob: -5.635589122772217
    6. '```' → logprob: -5.635589122772217
    7. '   ' → logprob: -8.010588645935059
    8. ' else' → logprob: -9.510588645935059
    9. '[' → logprob: -11.135588645935059
    10. '	       ' → logprob: -11.760588645935059

Token 1818: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.10245917737483978
    2. '               ' → logprob: -2.352459192276001
    3. '           ' → logprob: -6.227458953857422
    4. ' best' → logprob: -8.727458953857422
    5. '       ' → logprob: -9.727458953857422
    6. '   ' → logprob: -10.852458953857422
    7. '	best' → logprob: -11.977458953857422
    8. '
' → logprob: -12.227458953857422
    9. 'c' → logprob: -12.477458953857422
    10. '              ' → logprob: -12.602458953857422

Token 1819: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -9.17420256882906e-05
    2. 'prime' → logprob: -9.375091552734375
    3. '_num' → logprob: -12.375091552734375
    4. '_' → logprob: -13.375091552734375
    5. '
' → logprob: -14.625091552734375
    6. '_true' → logprob: -15.875091552734375
    7. '```' → logprob: -16.625091552734375
    8. '   ' → logprob: -16.625091552734375
    9. 'Prime' → logprob: -17.125091552734375
    10. 'num' → logprob: -17.750091552734375

Token 1820: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0386081263422966
    2. ' =' → logprob: -3.2886080741882324
    3. '=True' → logprob: -7.538608074188232
    4. '_' → logprob: -10.78860855102539
    5. '=False' → logprob: -11.91360855102539
    6. '=
' → logprob: -12.28860855102539
    7. '_=' → logprob: -13.53860855102539
    8. '   ' → logprob: -15.28860855102539
    9. '               ' → logprob: -15.53860855102539
    10. '==' → logprob: -15.91360855102539

Token 1821: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.005421938840299845
    2. 'best' → logprob: -5.255422115325928
    3. ' True' → logprob: -8.63042163848877
    4. 'False' → logprob: -12.00542163848877
    5. ' best' → logprob: -12.75542163848877
    6. '   ' → logprob: -15.25542163848877
    7. 'true' → logprob: -16.130422592163086
    8. '(True' → logprob: -16.630422592163086
    9. '       ' → logprob: -17.130422592163086
    10. '           ' → logprob: -18.130422592163086

Token 1822: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14449508488178253
    2. '           ' → logprob: -2.0194950103759766
    3. 'elif' → logprob: -7.144495010375977
    4. '
' → logprob: -7.769495010375977
    5. 'else' → logprob: -8.019495010375977
    6. '```' → logprob: -8.394495010375977
    7. '   ' → logprob: -10.144495010375977
    8. ' elif' → logprob: -12.394495010375977
    9. ' else' → logprob: -12.769495010375977
    10. '               ' → logprob: -13.269495010375977

Token 1823: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022108007688075304
    2. 'elif' → logprob: -6.25221061706543
    3. 'else' → logprob: -8.75221061706543
    4. '   ' → logprob: -9.75221061706543
    5. '```' → logprob: -10.00221061706543
    6. '           ' → logprob: -11.37721061706543
    7. '
' → logprob: -11.87721061706543
    8. ' elif' → logprob: -13.37721061706543
    9. ' else' → logprob: -15.62721061706543
    10. '               ' → logprob: -16.00221061706543

Token 1824: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16223226487636566
    2. 'else' → logprob: -2.6622321605682373
    3. 'elif' (adapté à ' elif') → logprob: -2.6622321605682373
    4. '   ' → logprob: -4.662232398986816
    5. ' else' → logprob: -7.912232398986816
    6. ' elif' → logprob: -8.537232398986816
    7. '```' → logprob: -9.037232398986816
    8. '
' → logprob: -10.537232398986816
    9. '           ' → logprob: -11.412232398986816
    10. '	elif' → logprob: -12.912232398986816

Token 1825: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.034231994301080704
    2. ' best' → logprob: -3.4092319011688232
    3. 'not' → logprob: -7.784232139587402
    4. '   ' → logprob: -9.409232139587402
    5. ' not' → logprob: -9.534232139587402
    6. '       ' → logprob: -12.159232139587402
    7. '(best' → logprob: -12.284232139587402
    8. '	best' → logprob: -12.784232139587402
    9. '           ' → logprob: -13.784232139587402
    10. ' ' → logprob: -14.409232139587402

Token 1826: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.03441169857978821
    2. '_num' → logprob: -3.409411668777466
    3. 'prime' → logprob: -7.534411907196045
    4. '_' → logprob: -8.534411430358887
    5. 'num' → logprob: -10.659411430358887
    6. '_pr' → logprob: -13.034411430358887
    7. 'Prime' → logprob: -13.784411430358887
    8. '```' → logprob: -13.909411430358887
    9. '_prob' → logprob: -14.534411430358887
    10. ' prime' → logprob: -14.909411430358887

Token 1827: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3040042221546173
    2. '==' → logprob: -1.679004192352295
    3. ' or' → logprob: -3.679004192352295
    4. ' ==' → logprob: -4.054004192352295
    5. ' and' → logprob: -4.679004192352295
    6. ':' → logprob: -5.429004192352295
    7. 'and' → logprob: -5.554004192352295
    8. '=False' → logprob: -5.804004192352295
    9. '<|end|>' → logprob: -5.804004192352295
    10. '=' → logprob: -6.054004192352295

Token 1828: 'wo' (ID: 1338)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.2520734369754791
    2. '_' → logprob: -2.2520735263824463
    3. ' and' → logprob: -2.8770735263824463
    4. 'wo' → logprob: -3.0020735263824463
    5. '==' → logprob: -5.252073287963867
    6. ':' → logprob: -6.127073287963867
    7. 'or' → logprob: -6.627073287963867
    8. '       ' → logprob: -8.002073287963867
    9. ' or' → logprob: -8.002073287963867
    10. '   ' → logprob: -8.252073287963867

Token 1829: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -7.791440293658525e-05
    2. '_' → logprob: -9.500078201293945
    3. 'c' → logprob: -13.500078201293945
    4. ' _' → logprob: -14.250078201293945
    5. '_C' → logprob: -15.625078201293945
    6. '```' → logprob: -16.125078201293945
    7. ''_' → logprob: -16.375078201293945
    8. 'C' → logprob: -16.375078201293945
    9. '_
' → logprob: -16.625078201293945
    10. '_ct' → logprob: -17.000078201293945

Token 1830: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.57134610414505
    2. ':' → logprob: -1.4463460445404053
    3. ':
' → logprob: -2.1963460445404053
    4. 'and' → logprob: -2.4463460445404053
    5. '<|end|>' → logprob: -7.196346282958984
    6. '==' → logprob: -7.821346282958984
    7. '   ' → logprob: -8.196346282958984
    8. '<|end|>' → logprob: -9.196346282958984
    9. ' ==' → logprob: -9.446346282958984
    10. '>' → logprob: -9.946346282958984

Token 1831: ' not' (ID: 625)
  Prédit: '(not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(not' → logprob: -0.15837639570236206
    2. 'not' → logprob: -2.283376455307007
    3. '(best' → logprob: -3.408376455307007
    4. '(True' → logprob: -5.408376216888428
    5. ' (' → logprob: -6.033376216888428
    6. '(int' → logprob: -6.658376216888428
    7. 'best' → logprob: -6.783376216888428
    8. ' not' → logprob: -6.783376216888428
    9. 'True' → logprob: -8.158376693725586
    10. '(' → logprob: -8.408376693725586

Token 1832: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.00043102685594931245
    2. ' best' → logprob: -7.750431060791016
    3. '(best' → logprob: -15.250431060791016
    4. '	best' → logprob: -17.125431060791016
    5. '   ' → logprob: -18.750431060791016
    6. 'b' → logprob: -19.875431060791016
    7. '
' → logprob: -19.875431060791016
    8. 'Best' → logprob: -20.375431060791016
    9. ' ' → logprob: -20.500431060791016
    10. 'beste' → logprob: -20.500431060791016

Token 1833: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.005578671582043171
    2. '_num' → logprob: -5.255578517913818
    3. 'prime' → logprob: -8.005578994750977
    4. '_' → logprob: -11.880578994750977
    5. 'num' → logprob: -12.755578994750977
    6. '_pr' → logprob: -14.255578994750977
    7. '_pred' → logprob: -15.880578994750977
    8. 'Prime' → logprob: -16.005578994750977
    9. '_primary' → logprob: -16.380578994750977
    10. '
' → logprob: -16.630578994750977

Token 1834: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.01452825590968132
    2. ':' → logprob: -4.264528274536133
    3. '       ' → logprob: -8.139528274536133
    4. '           ' → logprob: -10.889528274536133
    5. '   ' → logprob: -11.639528274536133
    6. '==' → logprob: -11.639528274536133
    7. '=' → logprob: -11.764528274536133
    8. '):
' → logprob: -11.889528274536133
    9. ':

' → logprob: -12.139528274536133
    10. ':
' → logprob: -13.014528274536133

Token 1835: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011227133683860302
    2. '       ' → logprob: -4.636227130889893
    3. ':
' → logprob: -7.136227130889893
    4. ':' → logprob: -8.13622760772705
    5. '   ' → logprob: -8.26122760772705
    6. '               ' → logprob: -10.26122760772705
    7. '```' → logprob: -10.38622760772705
    8. '	       ' → logprob: -11.51122760772705
    9. '(best' → logprob: -12.13622760772705
    10. '	   ' → logprob: -12.13622760772705

Token 1836: ' best' (ID: 1636)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17040571570396423
    2. 'best' (adapté à ' best') → logprob: -2.545405626296997
    3. '       ' → logprob: -2.670405626296997
    4. ' best' → logprob: -4.795405864715576
    5. '(best' → logprob: -8.170405387878418
    6. '   ' → logprob: -8.295405387878418
    7. '	best' → logprob: -8.920405387878418
    8. '{
' → logprob: -10.795405387878418
    9. '```' → logprob: -10.920405387878418
    10. '               ' → logprob: -11.045405387878418

Token 1837: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0007131471065804362
    2. '_prime' → logprob: -7.250713348388672
    3. '_' → logprob: -13.750713348388672
    4. 'num' → logprob: -13.875713348388672
    5. 'prime' → logprob: -15.000713348388672
    6. ' =' → logprob: -15.125713348388672
    7. '=' → logprob: -15.875713348388672
    8. '_pr' → logprob: -16.000713348388672
    9. '   ' → logprob: -16.000713348388672
    10. '    ' → logprob: -17.250713348388672

Token 1838: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868734836578369
    2. '=' → logprob: -1.136873483657837
    3. '   ' → logprob: -13.511873245239258
    4. ',' → logprob: -15.511873245239258
    5. '    ' → logprob: -15.761873245239258
    6. '_' → logprob: -16.011873245239258
    7. '           ' → logprob: -16.136873245239258
    8. '＝' → logprob: -16.511873245239258
    9. ' ' → logprob: -16.636873245239258
    10. '       ' → logprob: -17.011873245239258

Token 1839: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.0009115827269852161
    2. ' best' → logprob: -7.000911712646484
    3. '	best' → logprob: -16.875911712646484
    4. '(best' → logprob: -17.250911712646484
    5. '   ' → logprob: -19.250911712646484
    6. '_best' → logprob: -20.750911712646484
    7. 'Best' → logprob: -21.000911712646484
    8. 'b' → logprob: -21.000911712646484
    9. '-best' → logprob: -21.250911712646484
    10. '.best' → logprob: -21.750911712646484

Token 1840: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.07893330603837967
    2. '_' → logprob: -2.5789332389831543
    3. 'num' → logprob: -10.203933715820312
    4. '```' → logprob: -13.203933715820312
    5. ''_' → logprob: -13.828933715820312
    6. 'Num' → logprob: -13.953933715820312
    7. '\' → logprob: -14.578933715820312
    8. '`' → logprob: -14.703933715820312
    9. 'wo' → logprob: -15.203933715820312
    10. '_prime' → logprob: -15.953933715820312

Token 1841: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.512236498361744e-07
    2. 'wo' → logprob: -15.375000953674316
    3. '```' → logprob: -16.375
    4. 'Wo' → logprob: -16.5
    5. '\' → logprob: -16.75
    6. '
' → logprob: -17.75
    7. ' _' → logprob: -17.875
    8. ' wo' → logprob: -18.125
    9. '   ' → logprob: -18.125
    10. '‌' → logprob: -18.875

Token 1842: 'wo' (ID: 1338)
  Prédit: 'wo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wo' → logprob: -1.318681188422488e-05
    2. '_' → logprob: -11.25001335144043
    3. '```' → logprob: -17.50001335144043
    4. 'Wo' → logprob: -18.25001335144043
    5. '
' → logprob: -18.37501335144043
    6. '   ' → logprob: -18.75001335144043
    7. ' wo' → logprob: -18.87501335144043
    8. '\' → logprob: -18.87501335144043
    9. 'w' → logprob: -20.37501335144043
    10. '``' → logprob: -20.50001335144043

Token 1843: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00018804390856530517
    2. 'c' → logprob: -8.625187873840332
    3. 'C' → logprob: -12.125187873840332
    4. '_' → logprob: -14.437687873840332
    5. '
' → logprob: -15.562687873840332
    6. '	c' → logprob: -15.625187873840332
    7. 'prime' → logprob: -15.875187873840332
    8. '```' → logprob: -15.937687873840332
    9. '   ' → logprob: -16.25018882751465
    10. '0' → logprob: -16.50018882751465

Token 1844: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005769816925749183
    2. '       ' → logprob: -8.000576972961426
    3. '
' → logprob: -9.250576972961426
    4. '<|end|>' → logprob: -9.250576972961426
    5. '```' → logprob: -10.875576972961426
    6. '   ' → logprob: -11.125576972961426
    7. '               ' → logprob: -11.625576972961426
    8. ',' → logprob: -13.500576972961426
    9. '<|end|>' → logprob: -13.500576972961426
    10. '                   ' → logprob: -14.375576972961426

Token 1845: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.065341517329216
    2. '       ' → logprob: -2.9403414726257324
    3. '   ' → logprob: -5.065341472625732
    4. '```' → logprob: -5.690341472625732
    5. '<|end|>' → logprob: -7.690341472625732
    6. 'else' → logprob: -9.44034194946289
    7. '               ' → logprob: -10.19034194946289
    8. '``' → logprob: -10.56534194946289
    9. '                   ' → logprob: -11.06534194946289
    10. '[' → logprob: -11.19034194946289

Token 1846: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.048600319772958755
    2. ' best' → logprob: -3.048600435256958
    3. '           ' → logprob: -11.673600196838379
    4. '	best' → logprob: -12.548600196838379
    5. '(best' → logprob: -15.173600196838379
    6. '       ' → logprob: -15.423600196838379
    7. '.best' → logprob: -16.048601150512695
    8. 'Best' → logprob: -16.423601150512695
    9. '```' → logprob: -16.673601150512695
    10. '   ' → logprob: -17.048601150512695

Token 1847: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -1.27099974633893e-05
    2. 'prime' → logprob: -11.625012397766113
    3. '_num' → logprob: -12.625012397766113
    4. '_' → logprob: -14.875012397766113
    5. '_prefix' → logprob: -16.75001335144043
    6. 'num' → logprob: -17.50001335144043
    7. '
' → logprob: -18.25001335144043
    8. '_token' → logprob: -18.62501335144043
    9. '_prior' → logprob: -18.87501335144043
    10. 'Prime' → logprob: -19.00001335144043

Token 1848: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01112834457308054
    2. ' =' → logprob: -4.5111284255981445
    3. '=True' → logprob: -9.511128425598145
    4. '_' → logprob: -12.761128425598145
    5. '_=' → logprob: -12.886128425598145
    6. '=False' → logprob: -14.261128425598145
    7. '=
' → logprob: -15.011128425598145
    8. '   ' → logprob: -16.886127471923828
    9. '           ' → logprob: -17.011127471923828
    10. '       ' → logprob: -17.761127471923828

Token 1849: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0005530327325686812
    2. ' True' → logprob: -7.500553131103516
    3. 'Tr' → logprob: -18.500553131103516
    4. '(True' → logprob: -19.625553131103516
    5. '=True' → logprob: -20.375553131103516
    6. 'T' → logprob: -21.125553131103516
    7. 'False' → logprob: -21.750553131103516
    8. '   ' → logprob: -21.875553131103516
    9. '.True' → logprob: -24.125553131103516
    10. ' Tru' → logprob: -24.375553131103516

Token 1850: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.8286948204040527
    2. 'elif' → logprob: -0.8286948204040527
    3. '       ' → logprob: -2.3286948204040527
    4. '   ' → logprob: -3.5786948204040527
    5. '```' → logprob: -7.203694820404053
    6. 'print' → logprob: -7.953694820404053
    7. ' else' → logprob: -8.453695297241211
    8. ' elif' → logprob: -9.703695297241211
    9. '#' → logprob: -11.453695297241211
    10. '[' → logprob: -11.703695297241211

Token 1851: '       ' (ID: 309)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.1766870617866516
    2. 'else' → logprob: -1.9266870021820068
    3. '       ' → logprob: -4.176687240600586
    4. '   ' → logprob: -7.051687240600586
    5. '```' → logprob: -10.301687240600586
    6. ' elif' → logprob: -10.926687240600586
    7. '<|end|>' → logprob: -11.301687240600586
    8. '	elif' → logprob: -11.551687240600586
    9. '[' → logprob: -11.551687240600586
    10. 'print' → logprob: -11.801687240600586

Token 1852: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.06279613822698593
    2. 'else' → logprob: -2.812796115875244
    3. '       ' → logprob: -7.437796115875244
    4. ' elif' → logprob: -8.937796592712402
    5. '```' → logprob: -9.687796592712402
    6. '   ' → logprob: -10.937796592712402
    7. ' else' → logprob: -11.187796592712402
    8. '	elif' → logprob: -12.312796592712402
    9. '#' → logprob: -12.687796592712402
    10. '#elif' → logprob: -13.187796592712402

Token 1853: ' not' (ID: 625)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.31623637676239014
    2. ' best' → logprob: -1.4412363767623901
    3. ' not' → logprob: -3.8162364959716797
    4. 'not' → logprob: -4.44123649597168
    5. '(best' → logprob: -7.44123649597168
    6. '   ' → logprob: -10.31623649597168
    7. '(not' → logprob: -10.44123649597168
    8. ' (' → logprob: -11.06623649597168
    9. '	best' → logprob: -11.56623649597168
    10. ' ' → logprob: -12.31623649597168

Token 1854: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.0002613358374219388
    2. ' best' → logprob: -8.250261306762695
    3. '(best' → logprob: -18.500261306762695
    4. '	best' → logprob: -19.750261306762695
    5. 'Best' → logprob: -22.500261306762695
    6. '_best' → logprob: -22.875261306762695
    7. '.best' → logprob: -23.000261306762695
    8. '-best' → logprob: -24.000261306762695
    9. '
' → logprob: -24.000261306762695
    10. 'b' → logprob: -24.125261306762695

Token 1855: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -4.5491004129871726e-05
    2. 'prime' → logprob: -10.000045776367188
    3. '_' → logprob: -17.750045776367188
    4. '_pr' → logprob: -18.375045776367188
    5. 'Prime' → logprob: -18.625045776367188
    6. '_best' → logprob: -18.750045776367188
    7. '_num' → logprob: -19.125045776367188
    8. '_primary' → logprob: -19.250045776367188
    9. ' prime' → logprob: -19.750045776367188
    10. '_prob' → logprob: -19.875045776367188

Token 1856: '_' (ID: 62)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.18302752077579498
    2. 'and' → logprob: -1.8080275058746338
    3. ':' → logprob: -6.808027744293213
    4. ':
' → logprob: -7.058027744293213
    5. ' or' → logprob: -7.433027744293213
    6. '   ' → logprob: -7.558027744293213
    7. '_' → logprob: -9.058027267456055
    8. 'or' → logprob: -10.308027267456055
    9. '       ' → logprob: -10.683027267456055
    10. '_and' → logprob: -12.058027267456055

Token 1857: 'wo' (ID: 1338)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.017213817685842514
    2. 'wo' → logprob: -4.392213821411133
    3. ' and' → logprob: -6.267213821411133
    4. '_' → logprob: -6.517213821411133
    5. 'or' → logprob: -6.892213821411133
    6. '   ' → logprob: -8.517213821411133
    7. '       ' → logprob: -10.392213821411133
    8. ' ' → logprob: -11.017213821411133
    9. '  ' → logprob: -11.767213821411133
    10. '    ' → logprob: -11.892213821411133

Token 1858: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.001057102927006781
    2. 'c' → logprob: -6.876057147979736
    3. 'and' → logprob: -11.376056671142578
    4. 'C' → logprob: -12.001056671142578
    5. '   ' → logprob: -12.376056671142578
    6. '_' → logprob: -13.751056671142578
    7. '  ' → logprob: -14.876056671142578
    8. 'True' → logprob: -15.126056671142578
    9. ' and' → logprob: -15.876056671142578
    10. ' ' → logprob: -16.001056671142578

Token 1859: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09058558195829391
    2. 'and' → logprob: -2.465585470199585
    3. ':
' → logprob: -7.090585708618164
    4. ':' → logprob: -7.215585708618164
    5. '   ' → logprob: -9.590585708618164
    6. ' or' → logprob: -12.715585708618164
    7. '       ' → logprob: -13.465585708618164
    8. '<|end|>' → logprob: -13.590585708618164
    9. '	and' → logprob: -14.090585708618164
    10. ' ' → logprob: -14.465585708618164

Token 1860: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.7870867848396301
    2. 'best' → logprob: -1.0370867252349854
    3. ' not' → logprob: -2.2870867252349854
    4. '(best' → logprob: -2.9120867252349854
    5. '(not' → logprob: -3.9120867252349854
    6. ' best' → logprob: -4.2870869636535645
    7. ' (' → logprob: -7.5370869636535645
    8. '(' → logprob: -10.412086486816406
    9. '   ' → logprob: -10.412086486816406
    10. '(b' → logprob: -10.787086486816406

Token 1861: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -5.836499985889532e-05
    2. ' best' → logprob: -9.7500581741333
    3. '(best' → logprob: -18.750059127807617
    4. '	best' → logprob: -18.750059127807617
    5. 'Best' → logprob: -20.875059127807617
    6. '   ' → logprob: -21.375059127807617
    7. '
' → logprob: -22.125059127807617
    8. 'better' → logprob: -22.250059127807617
    9. ' ' → logprob: -22.375059127807617
    10. 'b' → logprob: -22.500059127807617

Token 1862: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.003620743053033948
    2. 'prime' → logprob: -5.628620624542236
    3. 'best' → logprob: -11.003621101379395
    4. '_best' → logprob: -12.753621101379395
    5. ' prime' → logprob: -14.878621101379395
    6. 'Prime' → logprob: -15.128621101379395
    7. '_pr' → logprob: -15.253621101379395
    8. 'principal' → logprob: -16.378620147705078
    9. 'prim' → logprob: -16.878620147705078
    10. '_' → logprob: -17.128620147705078

Token 1863: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5016494989395142
    2. ':
' → logprob: -1.5016494989395142
    3. ':' → logprob: -2.0016493797302246
    4. 'and' → logprob: -3.6266493797302246
    5. '       ' → logprob: -5.376649379730225
    6. '   ' → logprob: -5.501649379730225
    7. ' or' → logprob: -6.876649379730225
    8. ',' → logprob: -9.626649856567383
    9. '           ' → logprob: -9.751649856567383
    10. '=' → logprob: -10.251649856567383

Token 1864: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02472078986465931
    2. '   ' → logprob: -3.7747209072113037
    3. '           ' → logprob: -7.274720668792725
    4. ' if' → logprob: -7.274720668792725
    5. 'if' → logprob: -9.899721145629883
    6. '```' → logprob: -11.149721145629883
    7. '<|end|>' → logprob: -12.774721145629883
    8. '	   ' → logprob: -12.774721145629883
    9. ',' → logprob: -12.899721145629883
    10. ':' → logprob: -13.024721145629883

Token 1865: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9086007475852966
    2. ' if' → logprob: -0.9086007475852966
    3. '       ' → logprob: -1.9086008071899414
    4. '           ' → logprob: -3.7836008071899414
    5. '   ' → logprob: -3.7836008071899414
    6. '	if' → logprob: -10.408600807189941
    7. ' ' → logprob: -11.408600807189941
    8. '               ' → logprob: -12.158600807189941
    9. '```' → logprob: -13.408600807189941
    10. '    ' → logprob: -13.533600807189941

Token 1866: ' both' (ID: 2973)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.39953333139419556
    2. '           ' → logprob: -1.1495332717895508
    3. ' if' → logprob: -5.024533271789551
    4. '   ' → logprob: -5.399533271789551
    5. '       ' → logprob: -6.524533271789551
    6. '               ' → logprob: -12.14953327178955
    7. ' ' → logprob: -12.77453327178955
    8. '	if' → logprob: -12.89953327178955
    9. 'elif' → logprob: -13.14953327178955
    10. 'If' → logprob: -13.39953327178955

Token 1867: ' non' (ID: 2893)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.10503179579973221
    2. '(best' → logprob: -3.605031728744507
    3. '           ' → logprob: -3.730031728744507
    4. ' best' → logprob: -4.230031967163086
    5. 'None' → logprob: -4.355031967163086
    6. '_num' → logprob: -4.480031967163086
    7. 'int' → logprob: -6.230031967163086
    8. ' None' → logprob: -6.480031967163086
    9. 'num' → logprob: -7.105031967163086
    10. '
' → logprob: -7.105031967163086

Token 1868: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.1802375167608261
    2. '_prime' → logprob: -1.8052375316619873
    3. 'None' → logprob: -8.805237770080566
    4. '   ' → logprob: -9.055237770080566
    5. ' prime' → logprob: -9.055237770080566
    6. '_none' → logprob: -10.555237770080566
    7. 'pr' → logprob: -11.055237770080566
    8. 'best' → logprob: -11.180237770080566
    9. '_pr' → logprob: -11.180237770080566
    10. 'none' → logprob: -11.430237770080566

Token 1869: ' pick' (ID: 5230)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005472925025969744
    2. ' if' → logprob: -6.0054731369018555
    3. '       ' → logprob: -6.8804731369018555
    4. '   ' → logprob: -7.3804731369018555
    5. 'if' → logprob: -7.6304731369018555
    6. ':
' → logprob: -8.130473136901855
    7. ':' → logprob: -8.130473136901855
    8. ' and' → logprob: -9.130473136901855
    9. ',' → logprob: -9.380473136901855
    10. '               ' → logprob: -10.130473136901855

Token 1870: ' max' (ID: 2999)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7064708471298218
    2. 'best' → logprob: -0.7064708471298218
    3. 'max' → logprob: -5.206470966339111
    4. ' int' → logprob: -5.706470966339111
    5. ' best' → logprob: -5.831470966339111
    6. 'num' → logprob: -7.206470966339111
    7. '   ' → logprob: -7.956470966339111
    8. '           ' → logprob: -8.706470489501953
    9. '(best' → logprob: -9.456470489501953
    10. ' max' → logprob: -9.831470489501953

Token 1871: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1779705137014389
    2. ' if' → logprob: -1.9279705286026
    3. 'if' → logprob: -4.4279704093933105
    4. '       ' → logprob: -6.0529704093933105
    5. '_num' → logprob: -6.4279704093933105
    6. '   ' → logprob: -7.5529704093933105
    7. ' =' → logprob: -7.6779704093933105
    8. 'num' → logprob: -8.177970886230469
    9. ',' → logprob: -8.802970886230469
    10. '               ' → logprob: -9.802970886230469

Token 1872: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0028991398867219687
    2. '       ' → logprob: -6.002899169921875
    3. '   ' → logprob: -8.502899169921875
    4. 'if' → logprob: -8.877899169921875
    5. ' if' → logprob: -10.002899169921875
    6. '               ' → logprob: -11.377899169921875
    7. ':' → logprob: -11.502899169921875
    8. '```' → logprob: -12.377899169921875
    9. '          ' → logprob: -13.252899169921875
    10. ',' → logprob: -13.627899169921875

Token 1873: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02309604175388813
    2. ' if' → logprob: -4.273096084594727
    3. '           ' → logprob: -5.273096084594727
    4. '       ' → logprob: -5.898096084594727
    5. '   ' → logprob: -6.898096084594727
    6. ' ' → logprob: -12.898096084594727
    7. '	if' → logprob: -13.023096084594727
    8. '               ' → logprob: -13.023096084594727
    9. 'best' → logprob: -13.273096084594727
    10. '```' → logprob: -14.398096084594727

Token 1874: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.01772444322705269
    2. ' best' → logprob: -4.267724514007568
    3. '(best' → logprob: -5.642724514007568
    4. '   ' → logprob: -12.26772403717041
    5. ' (' → logprob: -12.51772403717041
    6. '	best' → logprob: -13.14272403717041
    7. '       ' → logprob: -14.89272403717041
    8. '           ' → logprob: -14.89272403717041
    9. '(' → logprob: -16.017724990844727
    10. '  ' → logprob: -16.517724990844727

Token 1875: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0003589416155591607
    2. 'num' → logprob: -8.125358581542969
    3. '_' → logprob: -9.750358581542969
    4. '   ' → logprob: -14.250358581542969
    5. 'Num' → logprob: -14.250358581542969
    6. '```' → logprob: -14.250358581542969
    7. '>' → logprob: -14.875358581542969
    8. ' _' → logprob: -15.125358581542969
    9. '_NUM' → logprob: -15.625358581542969
    10. '_n' → logprob: -15.750358581542969

Token 1876: '_' (ID: 62)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.465326189994812
    2. '_' → logprob: -1.090326189994812
    3. 'is' → logprob: -3.3403263092041016
    4. '_is' → logprob: -7.965326309204102
    5. 'wo' → logprob: -8.840326309204102
    6. '=None' → logprob: -11.340326309204102
    7. '   ' → logprob: -12.215326309204102
    8. '_num' → logprob: -12.215326309204102
    9. '	is' → logprob: -12.715326309204102
    10. '=' → logprob: -12.715326309204102

Token 1877: 'wo' (ID: 1338)
  Prédit: 'wo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wo' → logprob: -0.004958593752235174
    2. '_' → logprob: -6.004958629608154
    3. ' is' → logprob: -7.129958629608154
    4. 'None' → logprob: -7.379958629608154
    5. 'num' → logprob: -8.004958152770996
    6. 'is' → logprob: -8.004958152770996
    7. '_num' → logprob: -9.004958152770996
    8. ' None' → logprob: -9.504958152770996
    9. ' ' → logprob: -10.379958152770996
    10. 'none' → logprob: -10.504958152770996

Token 1878: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -6.170270353322849e-05
    2. 'c' → logprob: -9.750061988830566
    3. '_' → logprob: -12.875061988830566
    4. 'C' → logprob: -14.500061988830566
    5. 'None' → logprob: -16.75006103515625
    6. '   ' → logprob: -17.50006103515625
    7. '
' → logprob: -17.62506103515625
    8. '_num' → logprob: -17.62506103515625
    9. 'is' → logprob: -17.87506103515625
    10. ' is' → logprob: -17.87506103515625

Token 1879: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.002643437124788761
    2. 'is' → logprob: -6.377643585205078
    3. ' and' → logprob: -7.502643585205078
    4. '>' → logprob: -8.377643585205078
    5. 'and' → logprob: -8.877643585205078
    6. ' >' → logprob: -10.877643585205078
    7. ' ' → logprob: -15.252643585205078
    8. '   ' → logprob: -16.002643585205078
    9. '!=' → logprob: -16.252643585205078
    10. '    ' → logprob: -17.002643585205078

Token 1880: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.1809842437505722
    2. 'None' → logprob: -1.9309842586517334
    3. ' not' → logprob: -3.9309842586517334
    4. ' None' → logprob: -7.055984020233154
    5. 'n' → logprob: -10.680984497070312
    6. 'Not' → logprob: -10.805984497070312
    7. 'No' → logprob: -11.680984497070312
    8. 'N' → logprob: -12.305984497070312
    9. 'no' → logprob: -13.555984497070312
    10. '   ' → logprob: -14.430984497070312

Token 1881: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0013344056205824018
    2. ' None' → logprob: -6.626334190368652
    3. 'not' → logprob: -11.876334190368652
    4. '_None' → logprob: -14.376334190368652
    5. '(None' → logprob: -14.876334190368652
    6. 'none' → logprob: -15.751334190368652
    7. '=None' → logprob: -16.25133514404297
    8. ' ' → logprob: -16.50133514404297
    9. 'Not' → logprob: -16.50133514404297
    10. 'N' → logprob: -16.62633514404297

Token 1882: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12732575833797455
    2. 'and' → logprob: -2.1273257732391357
    3. '               ' → logprob: -8.377326011657715
    4. '           ' → logprob: -9.127326011657715
    5. '>' → logprob: -10.377326011657715
    6. '                   ' → logprob: -11.627326011657715
    7. '          ' → logprob: -12.127326011657715
    8. '              ' → logprob: -12.502326011657715
    9. '   ' → logprob: -12.877326011657715
    10. '                       ' → logprob: -13.752326011657715

Token 1883: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.026455190032720566
    2. ' and' → logprob: -3.9014551639556885
    3. '           ' → logprob: -5.401455402374268
    4. 'and' → logprob: -7.026455402374268
    5. ' if' → logprob: -8.52645492553711
    6. '       ' → logprob: -9.77645492553711
    7. '```' → logprob: -9.77645492553711
    8. 'if' → logprob: -9.90145492553711
    9. '   ' → logprob: -9.90145492553711
    10. '                   ' → logprob: -10.90145492553711

Token 1884: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3003472685813904
    2. 'if' (adapté à ' if') → logprob: -1.4253473281860352
    3. '               ' → logprob: -4.175347328186035
    4. '           ' → logprob: -5.925347328186035
    5. '   ' → logprob: -7.550347328186035
    6. '                   ' → logprob: -7.800347328186035
    7. '       ' → logprob: -12.050347328186035
    8. ' ' → logprob: -12.175347328186035
    9. '	if' → logprob: -12.175347328186035
    10. ' best' → logprob: -12.425347328186035

Token 1885: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011051355861127377
    2. ' int' → logprob: -4.511051177978516
    3. 'best' → logprob: -12.636051177978516
    4. ' best' → logprob: -16.511051177978516
    5. '   ' → logprob: -16.636051177978516
    6. '(int' → logprob: -17.511051177978516
    7. '               ' → logprob: -17.761051177978516
    8. '           ' → logprob: -18.261051177978516
    9. '<int' → logprob: -18.636051177978516
    10. '	int' → logprob: -19.136051177978516

Token 1886: '(best' (ID: 118299)
  Prédit: '(best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(best' → logprob: -0.0001234428636962548
    2. 'best' → logprob: -9.000123023986816
    3. '(' → logprob: -17.875123977661133
    4. ' best' → logprob: -18.375123977661133
    5. '	best' → logprob: -18.750123977661133
    6. '(b' → logprob: -20.250123977661133
    7. '```' → logprob: -21.250123977661133
    8. '_best' → logprob: -21.250123977661133
    9. '.best' → logprob: -22.125123977661133
    10. 'Best' → logprob: -22.375123977661133

Token 1887: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -6.153795766294934e-06
    2. 'num' → logprob: -12.125005722045898
    3. '_' → logprob: -15.250005722045898
    4. '```' → logprob: -15.250005722045898
    5. ')' → logprob: -17.3750057220459
    6. '
' → logprob: -17.5000057220459
    7. 'Num' → logprob: -17.5000057220459
    8. '`' → logprob: -18.5000057220459
    9. ')_' → logprob: -18.8750057220459
    10. '_NUM' → logprob: -18.8750057220459

Token 1888: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0280383548888494e-06
    2. ')' → logprob: -14.375000953674316
    3. '   ' → logprob: -15.375000953674316
    4. 'num' → logprob: -17.000001907348633
    5. '_num' → logprob: -17.125001907348633
    6. '[' → logprob: -17.875001907348633
    7. '>' → logprob: -18.125001907348633
    8. '```' → logprob: -18.250001907348633
    9. '    ' → logprob: -18.375001907348633
    10. ')>' → logprob: -18.500001907348633

Token 1889: 'wo' (ID: 1338)
  Prédit: 'wo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wo' → logprob: -0.6326620578765869
    2. '_' → logprob: -0.7576620578765869
    3. 'Wo' → logprob: -11.257661819458008
    4. 'num' → logprob: -12.132661819458008
    5. '_num' → logprob: -12.382661819458008
    6. 'ow' → logprob: -12.382661819458008
    7. '```' → logprob: -12.382661819458008
    8. '   ' → logprob: -12.632661819458008
    9. 'wor' → logprob: -12.882661819458008
    10. ' wo' → logprob: -12.882661819458008

Token 1890: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -2.522638169466518e-05
    2. 'c' → logprob: -10.750024795532227
    3. '_' → logprob: -13.250024795532227
    4. '```' → logprob: -14.875024795532227
    5. ' _' → logprob: -15.375024795532227
    6. '
' → logprob: -15.812524795532227
    7. '0' → logprob: -15.812524795532227
    8. '   ' → logprob: -16.000024795532227
    9. '	c' → logprob: -16.125024795532227
    10. ''_' → logprob: -16.312524795532227

Token 1891: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24418993294239044
    2. '>' → logprob: -1.744189977645874
    3. ' >' → logprob: -3.244189977645874
    4. ')>' → logprob: -5.869189739227295
    5. ' )' → logprob: -10.619190216064453
    6. '()' → logprob: -11.994190216064453
    7. '()>' → logprob: -12.119190216064453
    8. '   ' → logprob: -12.244190216064453
    9. ' ' → logprob: -12.744190216064453
    10. '[' → logprob: -13.494190216064453

Token 1892: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1269463747739792
    2. ' >' → logprob: -2.126946449279785
    3. ')' → logprob: -12.001946449279785
    4. '>
' → logprob: -12.126946449279785
    5. ' >
' → logprob: -13.376946449279785
    6. '[' → logprob: -13.376946449279785
    7. '```' → logprob: -13.751946449279785
    8. '   ' → logprob: -14.501946449279785
    9. ')>' → logprob: -14.501946449279785
    10. ' ' → logprob: -14.626946449279785

Token 1893: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001234428636962548
    2. ' int' → logprob: -9.000123023986816
    3. 'best' → logprob: -19.125123977661133
    4. '   ' → logprob: -19.375123977661133
    5. '(int' → logprob: -20.625123977661133
    6. '           ' → logprob: -20.875123977661133
    7. '               ' → logprob: -21.500123977661133
    8. '[int' → logprob: -21.625123977661133
    9. '=int' → logprob: -21.750123977661133
    10. '<int' → logprob: -22.125123977661133

Token 1894: '(best' (ID: 118299)
  Prédit: '(best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(best' → logprob: -0.06196869537234306
    2. 'best' → logprob: -2.8119688034057617
    3. ' best' → logprob: -13.936968803405762
    4. '	best' → logprob: -16.561967849731445
    5. '.best' → logprob: -18.811967849731445
    6. '-best' → logprob: -19.561967849731445
    7. '_best' → logprob: -20.061967849731445
    8. 'beste' → logprob: -20.186967849731445
    9. '(b' → logprob: -20.936967849731445
    10. '(' → logprob: -21.061967849731445

Token 1895: '_num' (ID: 9834)
  Prédit: '(best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(best' → logprob: -0.7949519753456116
    2. '_num' → logprob: -1.2949519157409668
    3. 'best' → logprob: -1.2949519157409668
    4. 'Num' → logprob: -7.919951915740967
    5. 'num' → logprob: -8.794952392578125
    6. ' best' → logprob: -10.669952392578125
    7. '_best' → logprob: -10.794952392578125
    8. '(' → logprob: -11.919952392578125
    9. '[' → logprob: -12.919952392578125
    10. 'user' → logprob: -13.544952392578125

Token 1896: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.009090523235499859
    2. '):' → logprob: -4.759090423583984
    3. '():
' → logprob: -8.509090423583984
    4. ')' → logprob: -10.009090423583984
    5. '       ' → logprob: -10.009090423583984
    6. '           ' → logprob: -10.384090423583984
    7. '   ' → logprob: -10.384090423583984
    8. '):
' → logprob: -10.509090423583984
    9. ':
' → logprob: -10.509090423583984
    10. '               ' → logprob: -10.759090423583984

Token 1897: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.015374619513750076
    2. '               ' → logprob: -4.640374660491943
    3. ':
' → logprob: -5.765374660491943
    4. ':' → logprob: -6.765374660491943
    5. '                       ' → logprob: -7.890374660491943
    6. '):
' → logprob: -8.765374183654785
    7. '           ' → logprob: -9.140374183654785
    8. ' =' → logprob: -9.140374183654785
    9. '```' → logprob: -9.140374183654785
    10. '():
' → logprob: -9.390374183654785

Token 1898: ' best' (ID: 1636)
  Prédit: ' best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.4773363173007965
    2. 'best' (adapté à ' best') → logprob: -0.9773362874984741
    3. '                   ' → logprob: -6.102336406707764
    4. '   ' → logprob: -7.227336406707764
    5. '	best' → logprob: -9.102335929870605
    6. '               ' → logprob: -9.477335929870605
    7. '           ' → logprob: -9.727335929870605
    8. '       ' → logprob: -10.977335929870605
    9. '(best' → logprob: -11.477335929870605
    10. '                       ' → logprob: -11.852335929870605

Token 1899: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -5.512236498361744e-07
    2. 'num' → logprob: -15.875000953674316
    3. 'Num' → logprob: -16.0
    4. '_' → logprob: -17.0
    5. '_NUM' → logprob: -17.0
    6. ' _' → logprob: -18.125
    7. '_n' → logprob: -18.5
    8. '```' → logprob: -18.5
    9. '_Num' → logprob: -18.5
    10. ' =' → logprob: -18.875

Token 1900: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42483842372894287
    2. '_' → logprob: -1.4248384237289429
    3. ' =' → logprob: -2.2998385429382324
    4. '_num' → logprob: -5.424838542938232
    5. '=_' → logprob: -7.299838542938232
    6. '_=' → logprob: -8.674838066101074
    7. '=num' → logprob: -10.299838066101074
    8. ' _' → logprob: -12.049838066101074
    9. '```' → logprob: -12.799838066101074
    10. '_best' → logprob: -12.924838066101074

Token 1901: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.20141372084617615
    2. ' best' → logprob: -1.7014137506484985
    3. '(best' → logprob: -15.326414108276367
    4. '	best' → logprob: -15.826414108276367
    5. 'b' → logprob: -17.201414108276367
    6. '.best' → logprob: -17.826414108276367
    7. '_best' → logprob: -18.451414108276367
    8. 'Best' → logprob: -18.701414108276367
    9. '-best' → logprob: -19.201414108276367
    10. '   ' → logprob: -20.701414108276367

Token 1902: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.16025470197200775
    2. '_' → logprob: -1.910254716873169
    3. 'num' → logprob: -10.66025447845459
    4. ''_' → logprob: -12.78525447845459
    5. 'Num' → logprob: -12.91025447845459
    6. '```' → logprob: -14.28525447845459
    7. '"_' → logprob: -15.66025447845459
    8. '`' → logprob: -15.91025447845459
    9. '_NUM' → logprob: -16.160255432128906
    10. '_str' → logprob: -16.160255432128906

Token 1903: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -14.875
    3. '
' → logprob: -17.125
    4. '\' → logprob: -17.75
    5. ''_' → logprob: -18.5
    6. '`' → logprob: -18.5
    7. '_
' → logprob: -19.0
    8. '"_' → logprob: -19.25
    9. ' _' → logprob: -19.625
    10. '__' → logprob: -19.625

Token 1904: 'wo' (ID: 1338)
  Prédit: 'wo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wo' → logprob: -2.081584716506768e-05
    2. '_' → logprob: -11.875020980834961
    3. 'w' → logprob: -12.125020980834961
    4. 'wc' → logprob: -13.000020980834961
    5. 'ow' → logprob: -14.000020980834961
    6. 'Wo' → logprob: -14.125020980834961
    7. '_c' → logprob: -14.375020980834961
    8. 'c' → logprob: -14.750020980834961
    9. ' wo' → logprob: -15.000020980834961
    10. '   ' → logprob: -15.125020980834961

Token 1905: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -8.65707261255011e-06
    2. 'c' → logprob: -12.125008583068848
    3. '_' → logprob: -13.125008583068848
    4. '0' → logprob: -14.875008583068848
    5. 'C' → logprob: -15.125008583068848
    6. '   ' → logprob: -16.250009536743164
    7. 'ow' → logprob: -16.500009536743164
    8. '```' → logprob: -16.625009536743164
    9. '	c' → logprob: -16.750009536743164
    10. '-c' → logprob: -17.000009536743164

Token 1906: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11056948453187943
    2. '
' → logprob: -2.860569477081299
    3. '       ' → logprob: -3.985569477081299
    4. 'print' → logprob: -4.610569477081299
    5. '                   ' → logprob: -5.485569477081299
    6. '<|end|>' → logprob: -5.610569477081299
    7. '           ' → logprob: -5.860569477081299
    8. ')' → logprob: -6.360569477081299
    9. '               ' → logprob: -6.485569477081299
    10. '    
' → logprob: -6.610569477081299

Token 1907: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009361599572002888
    2. 'print' → logprob: -4.759361743927002
    3. '    
' → logprob: -7.884361743927002
    4. '
' → logprob: -8.009361267089844
    5. '```' → logprob: -10.884361267089844
    6. 'if' → logprob: -11.134361267089844
    7. '        
' → logprob: -13.509361267089844
    8. '  
' → logprob: -13.634361267089844
    9. '       ' → logprob: -14.759361267089844
    10. '<|end|>' → logprob: -14.884361267089844

Token 1908: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12825722992420197
    2. 'print' (adapté à ' print') → logprob: -2.1282572746276855
    3. 'if' → logprob: -6.6282572746276855
    4. '```' → logprob: -12.753256797790527
    5. '    
' → logprob: -13.628256797790527
    6. '
' → logprob: -13.753256797790527
    7. ' print' → logprob: -14.628256797790527
    8. '	print' → logprob: -17.003257751464844
    9. '       ' → logprob: -17.253257751464844
    10. ' if' → logprob: -17.253257751464844

Token 1909: '(best' (ID: 118299)
  Prédit: '(best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(best' → logprob: -0.04194089025259018
    2. '('' → logprob: -3.791940927505493
    3. '(' → logprob: -4.041940689086914
    4. '("("' → logprob: -7.041940689086914
    5. '(f' → logprob: -9.791940689086914
    6. '("' → logprob: -11.291940689086914
    7. '()' → logprob: -12.291940689086914
    8. 'best' → logprob: -12.666940689086914
    9. '(b' → logprob: -12.666940689086914
    10. '('(' → logprob: -14.166940689086914

Token 1910: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -14.500001907348633
    3. ')_' → logprob: -14.750001907348633
    4. ')' → logprob: -15.125001907348633
    5. '_NUM' → logprob: -15.875001907348633
    6. '_Num' → logprob: -16.375001907348633
    7. '_n' → logprob: -16.500001907348633
    8. ' _' → logprob: -16.625001907348633
    9. '_number' → logprob: -17.375001907348633
    10. 'Num' → logprob: -17.500001907348633

Token 1911: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. '())' → logprob: -13.000004768371582
    3. ' )' → logprob: -14.125004768371582
    4. '   ' → logprob: -15.125004768371582
    5. ')
' → logprob: -15.375004768371582
    6. '')' → logprob: -15.375004768371582
    7. '")' → logprob: -15.375004768371582
    8. '))' → logprob: -15.750004768371582
    9. '`)' → logprob: -16.000003814697266
    10. '()' → logprob: -16.125003814697266

Token 1912: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1913: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06312735378742218
    2. ' __' → logprob: -2.813127279281616
    3. '_' → logprob: -6.938127517700195
    4. '___' → logprob: -8.938127517700195
    5. '_name' → logprob: -10.188127517700195
    6. 'name' → logprob: -12.188127517700195
    7. '____' → logprob: -12.313127517700195
    8. ''' → logprob: -12.313127517700195
    9. '"' → logprob: -13.063127517700195
    10. 'Name' → logprob: -14.188127517700195

Token 1914: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05282052606344223
    2. ' ==' → logprob: -3.5528204441070557
    3. '==' → logprob: -4.052820682525635
    4. 'name' → logprob: -6.927820682525635
    5. '=="' → logprob: -7.052820682525635
    6. '__":
' → logprob: -7.427820682525635
    7. '=='' → logprob: -7.427820682525635
    8. '__.__' → logprob: -7.677820682525635
    9. '```' → logprob: -7.927820682525635
    10. '__':
' → logprob: -8.302820205688477

Token 1915: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.000193527273950167
    2. '__.__' → logprob: -9.50019359588623
    3. '==' → logprob: -10.12519359588623
    4. '```' → logprob: -10.62519359588623
    5. '=="' → logprob: -11.62519359588623
    6. '__('' → logprob: -11.62519359588623
    7. '___' → logprob: -11.75019359588623
    8. '__["' → logprob: -12.25019359588623
    9. '____' → logprob: -12.50019359588623
    10. '__":
' → logprob: -12.50019359588623

Token 1916: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05475521460175514
    2. '==' → logprob: -3.054755210876465
    3. '=="' → logprob: -5.554755210876465
    4. ' ==' → logprob: -6.679755210876465
    5. '=='' → logprob: -6.929755210876465
    6. '```' → logprob: -11.054755210876465
    7. '==
' → logprob: -12.054755210876465
    8. '_' → logprob: -12.179755210876465
    9. '()==' → logprob: -12.554755210876465
    10. '___' → logprob: -13.054755210876465

Token 1917: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01105265598744154
    2. ''' → logprob: -4.51105260848999
    3. '__' → logprob: -12.386053085327148
    4. ' "__' → logprob: -14.636053085327148
    5. '"user' → logprob: -16.38605308532715
    6. ''"' → logprob: -17.13605308532715
    7. '"name' → logprob: -17.76105308532715
    8. '"class' → logprob: -18.13605308532715
    9. '   ' → logprob: -18.38605308532715
    10. '"'' → logprob: -18.38605308532715

Token 1918: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.524808406829834
    2. 'main' → logprob: -0.899808406829834
    3. '"' → logprob: -7.399808406829834
    4. '__":
' → logprob: -7.649808406829834
    5. '____' → logprob: -8.524808883666992
    6. '___' → logprob: -8.899808883666992
    7. '```' → logprob: -9.024808883666992
    8. 'name' → logprob: -10.274808883666992
    9. ''' → logprob: -10.899808883666992
    10. 'built' → logprob: -11.149808883666992

Token 1919: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.004633995704352856
    2. '__' → logprob: -5.504633903503418
    3. '__':
' → logprob: -7.504633903503418
    4. '__["' → logprob: -13.004633903503418
    5. '__.__' → logprob: -13.629633903503418
    6. '__.' → logprob: -14.254633903503418
    7. '__
' → logprob: -15.004633903503418
    8. '__()
' → logprob: -16.129634857177734
    9. '__("' → logprob: -16.504634857177734
    10. '__",' → logprob: -16.504634857177734

Token 1920: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.04526623710989952
    2. '   ' → logprob: -3.1702661514282227
    3. '	main' → logprob: -6.295266151428223
    4. ' main' → logprob: -8.795266151428223
    5. '```' → logprob: -9.045266151428223
    6. '__' → logprob: -9.420266151428223
    7. '_main' → logprob: -10.420266151428223
    8. '(main' → logprob: -10.920266151428223
    9. '    
' → logprob: -12.045266151428223
    10. 'def' → logprob: -12.295266151428223

Token 1921: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -16.5
    3. ' main' → logprob: -16.75
    4. '	main' → logprob: -18.75
    5. '_main' → logprob: -24.25
    6. '(main' → logprob: -26.125
    7. '.main' → logprob: -26.25
    8. 'Main' → logprob: -26.75
    9. 'sys' → logprob: -27.625
    10. ' ' → logprob: -27.75

Token 1922: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1920
Tokens correctement prédits (1ère position, stricte): 587
Tokens correctement prédits (1ère position, avec adaptation): 630
Tokens correctement prédits (top 10): 1339
Précision stricte (1ère position): 30.57%
Précision adaptée (1ère position): 32.81%
Précision (top 10): 69.74%
================================================================================
