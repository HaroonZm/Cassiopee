================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def decompress_length(s):
    # Return the length of the decompressed string without decompressing whole string
    stack = []
    i = 0
    n = len(s)
    length = 0
    while i < n:
        if s[i].isdigit():
            # read number
            num = 0
            while i < n and s[i].isdigit():
                num = num * 10 + int(s[i])
                i += 1
            if i < n and s[i] == '(':
                # find matching ')'
                start = i + 1
                cnt = 1
                i += 1
                while i < n and cnt > 0:
                    if s[i] == '(':
                        cnt += 1
                    elif s[i] == ')':
                        cnt -= 1
                    i += 1
                end = i -1
                seq_len = decompress_length(s[start:end])
                length += num * seq_len
            else:
                # single letter after number
                length += num
                i += 1
        else:
            # normal letter
            length += 1
            i += 1
    return length

def char_at(s, index):
    # Return the character at decompressed string position index or '0' if out of range
    n = len(s)
    i = 0
    while i < n:
        if s[i].isdigit():
            # get repeat number
            num = 0
            while i < n and s[i].isdigit():
                num = num * 10 + int(s[i])
                i += 1
            if i < n and s[i] == '(':
                # get sequence inside parentheses
                i += 1
                start = i
                count_p = 1
                while i < n and count_p > 0:
                    if s[i] == '(':
                        count_p += 1
                    elif s[i] == ')':
                        count_p -= 1
                    i += 1
                end = i - 1
                seq_len = decompress_length(s[start:end])
                total_len = num * seq_len
                if index < total_len:
                    # find which repetition of sequence contains the index
                    index_in_seq = index % seq_len
                    return char_at(s[start:end], index_in_seq)
                else:
                    index -= total_len
            else:
                # single letter repeated
                if index < num:
                    return s[i]
                else:
                    index -= num
                i += 1
        else:
            # normal letter
            if index == 0:
                return s[i]
            index -= 1
            i += 1
    return '0'


while True:
    line = input()
    if line == '0 0':
        break
    s,i_str = line.split()
    i = int(i_str)
    print(char_at(s, i))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' decompress' (ID: 195938)
  → Token d'amorce (pas de prédiction)

Token 2: '_length' (ID: 11514)
  → Token d'amorce (pas de prédiction)

Token 3: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003987336531281471
    2. '_' → logprob: -8.125398635864258
    3. '(_:' → logprob: -10.500398635864258
    4. '(:' → logprob: -10.750398635864258
    5. '(_' → logprob: -11.000398635864258
    6. '```' → logprob: -11.750398635864258
    7. ''' → logprob: -12.000398635864258
    8. ' (' → logprob: -12.250398635864258
    9. '"' → logprob: -12.500398635864258
    10. '_:' → logprob: -13.000398635864258

Token 4: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14978060126304626
    2. '[' → logprob: -2.399780511856079
    3. ')' → logprob: -3.149780511856079
    4. ':' → logprob: -5.274780750274658
    5. '[s' → logprob: -9.3997802734375
    6. '[int' → logprob: -10.1497802734375
    7. 'def' → logprob: -10.2747802734375
    8. '[]):' → logprob: -10.3997802734375
    9. 's' → logprob: -10.5247802734375
    10. '):
' → logprob: -10.6497802734375

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03805537521839142
    2. '   ' → logprob: -3.913055419921875
    3. '(' → logprob: -4.538055419921875
    4. '():' → logprob: -5.413055419921875
    5. '```' → logprob: -7.413055419921875
    6. '(:' → logprob: -7.788055419921875
    7. '':' → logprob: -8.538055419921875
    8. ''' → logprob: -8.913055419921875
    9. ':return' → logprob: -9.288055419921875
    10. '":' → logprob: -9.413055419921875

Token 6: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17495594918727875
    2. 'i' → logprob: -2.5499558448791504
    3. 'd' → logprob: -4.29995584487915
    4. 'l' → logprob: -4.42495584487915
    5. '```' → logprob: -4.42495584487915
    6. 'length' → logprob: -4.92495584487915
    7. 'n' → logprob: -5.04995584487915
    8. 'if' → logprob: -5.29995584487915
    9. '_' → logprob: -5.42495584487915
    10. ' ' → logprob: -5.54995584487915

Token 7: ' Return' (ID: 6318)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5093863606452942
    2. 'i' → logprob: -1.6343863010406494
    3. '   ' → logprob: -2.2593863010406494
    4. ' i' → logprob: -4.0093865394592285
    5. 'd' → logprob: -4.6343865394592285
    6. ' if' → logprob: -4.6343865394592285
    7. 'n' → logprob: -5.0093865394592285
    8. 'count' → logprob: -5.0093865394592285
    9. ' """' → logprob: -5.2593865394592285
    10. 'r' → logprob: -5.3843865394592285

Token 8: ' the' (ID: 290)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5451911091804504
    2. ' len' → logprob: -1.0451910495758057
    3. ' s' → logprob: -3.5451910495758057
    4. 'len' → logprob: -4.170191287994385
    5. 's' → logprob: -4.295191287994385
    6. '  ' → logprob: -5.045191287994385
    7. ''' → logprob: -6.920191287994385
    8. ' the' → logprob: -7.295191287994385
    9. ' a' → logprob: -7.420191287994385
    10. '(len' → logprob: -7.545191287994385

Token 9: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.049983929842710495
    2. ' total' → logprob: -4.049983978271484
    3. ' len' → logprob: -4.049983978271484
    4. ' ' → logprob: -4.549983978271484
    5. ' full' → logprob: -6.924983978271484
    6. 'length' → logprob: -7.174983978271484
    7. ' decom' → logprob: -7.674983978271484
    8. ' number' → logprob: -7.799983978271484
    9. 'len' → logprob: -8.049983978271484
    10. ' next' → logprob: -9.799983978271484

Token 10: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7151338458061218
    2. ' of' → logprob: -1.0901339054107666
    3. ' ' → logprob: -1.8401339054107666
    4. '(s' → logprob: -5.2151336669921875
    5. ' (' → logprob: -5.4651336669921875
    6. 's' → logprob: -6.5901336669921875
    7. ''' → logprob: -6.8401336669921875
    8. '<|end|>' → logprob: -6.9651336669921875
    9. ')' → logprob: -7.4651336669921875
    10. '(space' → logprob: -8.090133666992188

Token 11: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9645798802375793
    2. ' ' → logprob: -1.3395798206329346
    3. 's' → logprob: -1.5895798206329346
    4. ''' → logprob: -2.7145798206329346
    5. ' a' → logprob: -3.3395798206329346
    6. ' s' → logprob: -3.4645798206329346
    7. '"' → logprob: -5.214580059051514
    8. 'the' → logprob: -5.464580059051514
    9. ''s' → logprob: -5.589580059051514
    10. '(s' → logprob: -6.339580059051514

Token 12: ' decom' (ID: 57661)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5234179496765137
    2. ' decom' → logprob: -2.2734179496765137
    3. ' string' → logprob: -2.6484179496765137
    4. ''' → logprob: -2.8984179496765137
    5. ' expanded' → logprob: -3.0234179496765137
    6. ' s' → logprob: -3.6484179496765137
    7. ' ' → logprob: -3.8984179496765137
    8. 'string' → logprob: -4.398417949676514
    9. ''s' → logprob: -4.523417949676514
    10. 'decoded' → logprob: -4.523417949676514

Token 13: 'pressed' (ID: 26974)
  Prédit: 'pressed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pressed' → logprob: -0.003863854566588998
    2. 'pression' → logprob: -5.75386381149292
    3. 'press' → logprob: -7.87886381149292
    4. ' pressed' → logprob: -9.003864288330078
    5. 'p' → logprob: -9.753864288330078
    6. '```' → logprob: -10.503864288330078
    7. 'pressions' → logprob: -10.628864288330078
    8. 'pressor' → logprob: -11.253864288330078
    9. '_pressed' → logprob: -11.378864288330078
    10. 'pr' → logprob: -11.503864288330078

Token 14: ' string' (ID: 1621)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1058152914047241
    2. ''' → logprob: -1.2308152914047241
    3. ' string' → logprob: -2.1058154106140137
    4. '_' → logprob: -2.4808154106140137
    5. '(' → logprob: -3.2308154106140137
    6. '"' → logprob: -3.4808154106140137
    7. 'string' → logprob: -3.4808154106140137
    8. 's' → logprob: -3.4808154106140137
    9. ' (' → logprob: -5.355815410614014
    10. ' version' → logprob: -5.355815410614014

Token 15: ' without' (ID: 2935)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4006189703941345
    2. '\n' → logprob: -2.1506190299987793
    3. '\' → logprob: -2.6506190299987793
    4. ':' → logprob: -2.7756190299987793
    5. '```' → logprob: -3.4006190299987793
    6. ' ' → logprob: -4.400619029998779
    7. '
' → logprob: -5.150619029998779
    8. '    
' → logprob: -5.150619029998779
    9. '(' → logprob: -5.150619029998779
    10. '    ' → logprob: -5.775619029998779

Token 16: ' decompress' (ID: 195938)
  Prédit: ' actually'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' actually' → logprob: -0.15091347694396973
    2. ' decompress' → logprob: -2.6509134769439697
    3. ' expanding' → logprob: -3.1509134769439697
    4. 'actually' → logprob: -4.275913238525391
    5. ' fully' → logprob: -4.650913238525391
    6. 'exp' → logprob: -7.025913238525391
    7. ' explicitly' → logprob: -7.775913238525391
    8. ' iter' → logprob: -8.02591323852539
    9. ' executing' → logprob: -8.40091323852539
    10. ' any' → logprob: -8.90091323852539

Token 17: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -5.5027299822540954e-05
    2. '```' → logprob: -11.000055313110352
    3. 'i' → logprob: -11.625055313110352
    4. 'def' → logprob: -12.000055313110352
    5. ' ' → logprob: -12.125055313110352
    6. 's' → logprob: -12.375055313110352
    7. 'ed' → logprob: -12.750055313110352
    8. 'in' → logprob: -12.875055313110352
    9. '   ' → logprob: -12.875055313110352
    10. 'e' → logprob: -14.125055313110352

Token 18: ' whole' (ID: 6062)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5756848454475403
    2. ':' → logprob: -1.3256847858428955
    3. '```' → logprob: -2.5756847858428955
    4. '(' → logprob: -3.9506847858428955
    5. '\' → logprob: -4.075685024261475
    6. '    
' → logprob: -4.950685024261475
    7. '\n' → logprob: -4.950685024261475
    8. ' ' → logprob: -5.325685024261475
    9. '    ' → logprob: -5.450685024261475
    10. ':
' → logprob: -5.700685024261475

Token 19: ' string' (ID: 1621)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.006971836090088
    2. '(' → logprob: -1.506971836090088
    3. '(s' → logprob: -2.006971836090088
    4. ')' → logprob: -2.506971836090088
    5. ' ' → logprob: -2.881971836090088
    6. '_' → logprob: -3.006971836090088
    7. '   ' → logprob: -3.756971836090088
    8. ' (' → logprob: -4.756971836090088
    9. ':' → logprob: -4.881971836090088
    10. '\' → logprob: -5.131971836090088

Token 20: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15278728306293488
    2. '   ' → logprob: -2.777787208557129
    3. '\' → logprob: -3.402787208557129
    4. ' :' → logprob: -4.402787208557129
    5. '```' → logprob: -4.402787208557129
    6. '(' → logprob: -4.902787208557129
    7. ':
' → logprob: -5.277787208557129
    8. '\n' → logprob: -6.527787208557129
    9. '
' → logprob: -6.652787208557129
    10. ''' → logprob: -7.027787208557129

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3152463734149933
    2. ':' → logprob: -2.065246343612671
    3. '```' → logprob: -2.565246343612671
    4. '\' → logprob: -3.565246343612671
    5. '    ' → logprob: -4.69024658203125
    6. ' ' → logprob: -4.94024658203125
    7. ' :' → logprob: -5.31524658203125
    8. '    
' → logprob: -6.31524658203125
    9. '
' → logprob: -6.44024658203125
    10. '\n' → logprob: -6.44024658203125

Token 22: ' stack' (ID: 10825)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6496127247810364
    2. '   ' → logprob: -1.3996126651763916
    3. '    ' → logprob: -3.0246126651763916
    4. ':' → logprob: -3.1496126651763916
    5. '```' → logprob: -3.6496126651763916
    6. '\' → logprob: -3.7746126651763916
    7. ' 
' → logprob: -3.8996126651763916
    8. '_' → logprob: -4.149612903594971
    9. 'd' → logprob: -4.524612903594971
    10. 'i' → logprob: -4.899612903594971

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3459542393684387
    2. '=' → logprob: -1.845954179763794
    3. '[' → logprob: -2.345954179763794
    4. '.' → logprob: -3.595954179763794
    5. '.append' → logprob: -4.845954418182373
    6. '=[]' → logprob: -6.970954418182373
    7. '[:]' → logprob: -7.220954418182373
    8. '[]' → logprob: -7.470954418182373
    9. '   ' → logprob: -8.345953941345215
    10. '[-' → logprob: -8.595953941345215

Token 24: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.07892657816410065
    2. '[]' → logprob: -2.5789265632629395
    3. ' [' → logprob: -10.828927040100098
    4. '[' → logprob: -11.953927040100098
    5. '[]}' → logprob: -12.328927040100098
    6. ' ' → logprob: -12.703927040100098
    7. '[]>' → logprob: -13.828927040100098
    8. ' []
' → logprob: -14.078927040100098
    9. ' [];' → logprob: -14.953927040100098
    10. '   ' → logprob: -15.203927040100098

Token 25: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.26369354128837585
    2. 'for' → logprob: -1.7636935710906982
    3. ' ' → logprob: -4.013693332672119
    4. ' i' → logprob: -4.263693332672119
    5. 'i' → logprob: -4.388693332672119
    6. '   ' → logprob: -4.513693332672119
    7. '    ' → logprob: -6.013693332672119
    8. 'n' → logprob: -8.138693809509277
    9. '  ' → logprob: -8.138693809509277
    10. 'token' → logprob: -8.638693809509277

Token 26: ' i' (ID: 575)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5864195227622986
    2. 'for' → logprob: -0.8364195227622986
    3. 'i' (adapté à ' i') → logprob: -5.086419582366943
    4. ' i' → logprob: -5.836419582366943
    5. 'result' → logprob: -8.336419105529785
    6. 'n' → logprob: -8.461419105529785
    7. '   ' → logprob: -8.586419105529785
    8. ' ' → logprob: -8.711419105529785
    9. ' result' → logprob: -8.961419105529785
    10. 'length' → logprob: -9.211419105529785

Token 27: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3442295491695404
    2. ' =' → logprob: -1.3442295789718628
    3. ' ' → logprob: -4.094229698181152
    4. ' +=' → logprob: -5.219229698181152
    5. '+' → logprob: -5.844229698181152
    6. 's' → logprob: -6.844229698181152
    7. '<|end|>' → logprob: -6.844229698181152
    8. ' ==' → logprob: -6.969229698181152
    9. '+=' → logprob: -7.469229698181152
    10. 'n' → logprob: -7.594229698181152

Token 28: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6326003670692444
    2. '0' → logprob: -0.7576003670692444
    3. '1' → logprob: -14.007600784301758
    4. '2' → logprob: -15.882600784301758
    5. '۰' → logprob: -16.257600784301758
    6. ' ' → logprob: -16.382600784301758
    7. '<|end|>' → logprob: -16.382600784301758
    8. '  ' → logprob: -17.507600784301758
    9. ')' → logprob: -18.007600784301758
    10. '3' → logprob: -18.195100784301758

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017994173686020076
    2. ' ' → logprob: -8.6251802444458
    3. '1' → logprob: -15.3751802444458
    4. '   ' → logprob: -16.875179290771484
    5. '`' → logprob: -18.500179290771484
    6. '```' → logprob: -18.625179290771484
    7. '۰' → logprob: -18.687679290771484
    8. '=' → logprob: -18.750179290771484
    9. '2' → logprob: -18.937679290771484
    10. ')' → logprob: -19.062679290771484

Token 30: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0562913417816162
    2. ' ' → logprob: -1.0562913417816162
    3. '<|end|>' → logprob: -1.6812913417816162
    4. ' 
' → logprob: -2.806291341781616
    5. '  
' → logprob: -4.306291580200195
    6. ':' → logprob: -4.806291580200195
    7. '    
' → logprob: -4.806291580200195
    8. '   ' → logprob: -5.306291580200195
    9. '   
' → logprob: -5.681291580200195
    10. '  ' → logprob: -5.681291580200195

Token 31: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44452592730522156
    2. ' ' → logprob: -1.819525957107544
    3. ' 
' → logprob: -2.694525957107544
    4. 's' → logprob: -3.569525957107544
    5. '<|end|>' → logprob: -3.694525957107544
    6. '   ' → logprob: -4.319525718688965
    7. '  
' → logprob: -4.444525718688965
    8. '    
' → logprob: -4.819525718688965
    9. ')' → logprob: -4.819525718688965
    10. ' while' → logprob: -4.944525718688965

Token 32: ' n' (ID: 297)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2849408984184265
    2. ' while' → logprob: -2.0349409580230713
    3. ' ' → logprob: -2.2849409580230713
    4. 's' → logprob: -5.534940719604492
    5. 'n' (adapté à ' n') → logprob: -5.659940719604492
    6. 'w' → logprob: -6.034940719604492
    7. '   ' → logprob: -6.409940719604492
    8. '<|end|>' → logprob: -6.409940719604492
    9. 'length' → logprob: -7.534940719604492
    10. 'wh' → logprob: -7.909940719604492

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5762642621994019
    2. '=' → logprob: -0.8262642621994019
    3. ' ==' → logprob: -9.451264381408691
    4. ' ' → logprob: -9.451264381408691
    5. ')' → logprob: -10.326264381408691
    6. ' >' → logprob: -10.701264381408691
    7. ',' → logprob: -10.826264381408691
    8. '>' → logprob: -10.951264381408691
    9. '==' → logprob: -11.451264381408691
    10. '<|end|>' → logprob: -11.576264381408691

Token 34: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.061967913061380386
    2. 'len' → logprob: -2.8119678497314453
    3. '(len' → logprob: -15.936967849731445
    4. '=len' → logprob: -16.061967849731445
    5. ' ' → logprob: -16.936967849731445
    6. '<len' → logprob: -18.061967849731445
    7. '[len' → logprob: -18.186967849731445
    8. ' length' → logprob: -18.436967849731445
    9. '	len' → logprob: -19.061967849731445
    10. ',len' → logprob: -19.186967849731445

Token 35: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00034273360506631434
    2. '(' → logprob: -8.00034236907959
    3. 's' → logprob: -11.87534236907959
    4. ')' → logprob: -15.50034236907959
    5. '(n' → logprob: -17.125343322753906
    6. ' (' → logprob: -17.875343322753906
    7. '(
' → logprob: -18.875343322753906
    8. '(S' → logprob: -19.500343322753906
    9. '(str' → logprob: -19.625343322753906
    10. '()' → logprob: -20.000343322753906

Token 36: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.9153885558771435e-06
    2. ' )' → logprob: -12.625005722045898
    3. '))' → logprob: -14.000005722045898
    4. ')
' → logprob: -14.625005722045898
    5. ')))' → logprob: -15.000005722045898
    6. ')s' → logprob: -15.375005722045898
    7. '')' → logprob: -15.875005722045898
    8. 's' → logprob: -16.0000057220459
    9. '`)' → logprob: -16.5000057220459
    10. ')n' → logprob: -16.7500057220459

Token 37: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.495619773864746
    2. ' ' → logprob: -1.620619773864746
    3. '\' → logprob: -1.745619773864746
    4. '   ' → logprob: -2.245619773864746
    5. 'while' → logprob: -2.370619773864746
    6. '```' → logprob: -2.745619773864746
    7. ' 
' → logprob: -3.370619773864746
    8. '    
' → logprob: -3.870619773864746
    9. '     
' → logprob: -3.995619773864746
    10. '    ' → logprob: -4.370619773864746

Token 38: ' length' (ID: 5517)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2669201195240021
    2. ' while' → logprob: -1.7669200897216797
    3. '```' → logprob: -3.6419200897216797
    4. ' ' → logprob: -3.8919200897216797
    5. '   ' → logprob: -4.89192008972168
    6. '\' → logprob: -5.89192008972168
    7. 'w' → logprob: -5.89192008972168
    8. 'While' → logprob: -7.26692008972168
    9. '<|end|>' → logprob: -7.51692008972168
    10. '\n' → logprob: -7.64192008972168

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22649893164634705
    2. '=' → logprob: -1.6014989614486694
    3. ' +=' → logprob: -7.101499080657959
    4. ' ' → logprob: -8.7264986038208
    5. '_' → logprob: -9.6014986038208
    6. ')' → logprob: -11.6014986038208
    7. 'space' → logprob: -12.6014986038208
    8. '+=' → logprob: -12.8514986038208
    9. 's' → logprob: -13.1014986038208
    10. ',' → logprob: -13.1014986038208

Token 40: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007606151048094034
    2. ' ' → logprob: -4.882606029510498
    3. '1' → logprob: -16.632606506347656
    4. '۰' → logprob: -18.382606506347656
    5. ' ' → logprob: -19.257606506347656
    6. '```' → logprob: -19.382606506347656
    7. '   ' → logprob: -19.695106506347656
    8. '  ' → logprob: -20.070106506347656
    9. '`' → logprob: -20.132606506347656
    10. 's' → logprob: -20.195106506347656

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '1' → logprob: -18.500009536743164
    4. '۰' → logprob: -19.500009536743164
    5. '   ' → logprob: -21.000009536743164
    6. '```' → logprob: -21.125009536743164
    7. '０' → logprob: -21.812509536743164
    8. '  ' → logprob: -21.937509536743164
    9. '`' → logprob: -21.937509536743164
    10. '=' → logprob: -22.125009536743164

Token 42: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.097546935081482
    2. '
' → logprob: -1.222546935081482
    3. '\' → logprob: -1.347546935081482
    4. '```' → logprob: -3.5975470542907715
    5. ':' → logprob: -3.7225470542907715
    6. 'while' → logprob: -4.0975470542907715
    7. '<|end|>' → logprob: -4.4725470542907715
    8. ' while' → logprob: -5.2225470542907715
    9. '   ' → logprob: -5.4725470542907715
    10. '    
' → logprob: -5.7225470542907715

Token 43: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.820107638835907
    2. '<|end|>' → logprob: -1.9451076984405518
    3. '\' → logprob: -2.3201076984405518
    4. '   ' → logprob: -2.5701076984405518
    5. '```' → logprob: -2.5701076984405518
    6. 'while' → logprob: -2.8201076984405518
    7. ' while' → logprob: -3.3201076984405518
    8. '
' → logprob: -3.4451076984405518
    9. ':' → logprob: -5.195107460021973
    10. ' ' → logprob: -5.320107460021973

Token 44: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.04157410189509392
    2. 'w' → logprob: -3.666574001312256
    3. ' while' → logprob: -4.666574001312256
    4. '```' → logprob: -5.416574001312256
    5. '\n' → logprob: -8.291574478149414
    6. '\' → logprob: -8.291574478149414
    7. '   ' → logprob: -8.416574478149414
    8. '<|end|>' → logprob: -8.916574478149414
    9. '	while' → logprob: -9.041574478149414
    10. 'While' → logprob: -9.166574478149414

Token 45: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.014353299513459206
    2. 'i' → logprob: -4.264353275299072
    3. ' ' → logprob: -8.63935375213623
    4. '	i' → logprob: -12.63935375213623
    5. '<|end|>' → logprob: -12.88935375213623
    6. '  ' → logprob: -13.51435375213623
    7. ' True' → logprob: -13.88935375213623
    8. ' ' → logprob: -14.01435375213623
    9. 's' → logprob: -14.01435375213623
    10. '    ' → logprob: -14.51435375213623

Token 46: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.10053929686546326
    2. '<' → logprob: -2.350539207458496
    3. ' ' → logprob: -8.225539207458496
    4. ' <=' → logprob: -10.475539207458496
    5. '<len' → logprob: -11.475539207458496
    6. '<|end|>' → logprob: -11.725539207458496
    7. '<=' → logprob: -12.725539207458496
    8. '<size' → logprob: -13.225539207458496
    9. 's' → logprob: -13.600539207458496
    10. ' <
' → logprob: -13.600539207458496

Token 47: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3132622241973877
    2. 'n' → logprob: -1.3132622241973877
    3. '	n' → logprob: -15.188261985778809
    4. ' ' → logprob: -16.063262939453125
    5. '_n' → logprob: -17.563262939453125
    6. ')n' → logprob: -17.688262939453125
    7. '<n' → logprob: -17.813262939453125
    8. '=n' → logprob: -19.188262939453125
    9. '```' → logprob: -19.438262939453125
    10. ' н' → logprob: -19.438262939453125

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.310693111619912e-05
    2. ':**' → logprob: -11.000042915344238
    3. ':
' → logprob: -11.375042915344238
    4. '):' → logprob: -12.000042915344238
    5. ' :' → logprob: -12.250042915344238
    6. '<|end|>' → logprob: -13.750042915344238
    7. ',' → logprob: -14.250042915344238
    8. ':

' → logprob: -15.125042915344238
    9. '+:' → logprob: -15.250042915344238
    10. '   ' → logprob: -15.500042915344238

Token 49: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005285696126520634
    2. '       ' → logprob: -6.630285739898682
    3. ' if' → logprob: -7.005285739898682
    4. '    ' → logprob: -7.255285739898682
    5. '  ' → logprob: -7.380285739898682
    6. 'if' → logprob: -8.005285263061523
    7. ' ,' → logprob: -8.130285263061523
    8. '   ' → logprob: -8.380285263061523
    9. '<|end|>' → logprob: -8.630285263061523
    10. ':' → logprob: -9.130285263061523

Token 50: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5656469464302063
    2. 'if' (adapté à ' if') → logprob: -1.4406468868255615
    3. 'c' → logprob: -2.0656468868255615
    4. ' ' → logprob: -3.0656468868255615
    5. 's' → logprob: -4.065647125244141
    6. ' c' → logprob: -6.315647125244141
    7. 'char' → logprob: -6.815647125244141
    8. '```' → logprob: -8.19064712524414
    9. '   ' → logprob: -8.31564712524414
    10. 'ch' → logprob: -8.31564712524414

Token 51: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.01855982095003128
    2. 's' → logprob: -4.01855993270874
    3. ' ' → logprob: -7.89355993270874
    4. ' not' → logprob: -11.018559455871582
    5. ' ' → logprob: -11.268559455871582
    6. '  ' → logprob: -13.143559455871582
    7. '<|end|>' → logprob: -13.518559455871582
    8. '	s' → logprob: -14.018559455871582
    9. ' (' → logprob: -14.518559455871582
    10. ' '' → logprob: -14.518559455871582

Token 52: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.018157318234443665
    2. '[' → logprob: -4.018157482147217
    3. '[
' → logprob: -13.268157005310059
    4. ''' → logprob: -13.893157005310059
    5. '[I' → logprob: -14.018157005310059
    6. '```' → logprob: -14.268157005310059
    7. '[s' → logprob: -14.643157005310059
    8. '['' → logprob: -14.768157005310059
    9. '[...]' → logprob: -15.018157005310059
    10. '[in' → logprob: -15.143157005310059

Token 53: '].' (ID: 1651)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7476306557655334
    2. '==' → logprob: -0.8726306557655334
    3. ']' → logprob: -2.9976305961608887
    4. ''' → logprob: -3.4976305961608887
    5. '=' → logprob: -5.122630596160889
    6. '!=' → logprob: -5.247630596160889
    7. ']==' → logprob: -5.372630596160889
    8. ' !=' → logprob: -5.622630596160889
    9. ' ' → logprob: -5.872630596160889
    10. '[' → logprob: -6.372630596160889

Token 54: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -0.00865121092647314
    2. 'startswith' → logprob: -5.633651256561279
    3. 'iss' → logprob: -5.883651256561279
    4. 'is' → logprob: -6.133651256561279
    5. 'isal' → logprob: -10.133650779724121
    6. 'match' → logprob: -11.133650779724121
    7. '==' → logprob: -11.633650779724121
    8. 'char' → logprob: -11.883650779724121
    9. 'isas' → logprob: -13.008650779724121
    10. 'digit' → logprob: -13.008650779724121

Token 55: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.002856709063053131
    2. '()' → logprob: -6.127856731414795
    3. '(' → logprob: -7.752856731414795
    4. ':' → logprob: -8.877856254577637
    5. '):' → logprob: -10.127856254577637
    6. ' ():' → logprob: -10.502856254577637
    7. '():
' → logprob: -10.752856254577637
    8. '()==' → logprob: -12.627856254577637
    9. '()>' → logprob: -12.752856254577637
    10. '())' → logprob: -13.502856254577637

Token 56: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1636100858449936
    2. '<|end|>' → logprob: -3.0386099815368652
    3. ' :' → logprob: -3.2886099815368652
    4. ' ' → logprob: -3.4136099815368652
    5. '(' → logprob: -4.663609981536865
    6. '       ' → logprob: -5.163609981536865
    7. '<|end|>' → logprob: -5.288609981536865
    8. ' (' → logprob: -5.538609981536865
    9. ')' → logprob: -6.288609981536865
    10. '):' → logprob: -6.413609981536865

Token 57: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.732606828212738
    2. ' (' → logprob: -1.1076068878173828
    3. ' ' → logprob: -1.8576068878173828
    4. '    ' → logprob: -5.232606887817383
    5. 'j' → logprob: -5.607606887817383
    6. '        ' → logprob: -5.857606887817383
    7. ')' → logprob: -6.107606887817383
    8. 'm' → logprob: -6.107606887817383
    9. ' num' → logprob: -6.482606887817383
    10. '            ' → logprob: -6.607606887817383

Token 58: ' read' (ID: 1729)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6631340384483337
    2. 'num' → logprob: -1.6631340980529785
    3. 'j' → logprob: -2.1631340980529785
    4. ' (' → logprob: -2.5381340980529785
    5. ' j' → logprob: -3.7881340980529785
    6. ' num' → logprob: -4.1631340980529785
    7. 'count' → logprob: -4.5381340980529785
    8. '#' → logprob: -4.6631340980529785
    9. 'start' → logprob: -5.4131340980529785
    10. 'number' → logprob: -5.4131340980529785

Token 59: ' number' (ID: 2086)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2824106216430664
    2. '(' → logprob: -1.5324106216430664
    3. '<|end|>' → logprob: -1.6574106216430664
    4. 'num' → logprob: -2.9074106216430664
    5. '<|end|>' → logprob: -2.9074106216430664
    6. 'number' → logprob: -3.5324106216430664
    7. ' (' → logprob: -3.6574106216430664
    8. 'j' → logprob: -3.6574106216430664
    9. 'length' → logprob: -3.7824106216430664
    10. 'digits' → logprob: -4.532410621643066

Token 60: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9391809701919556
    2. '(' → logprob: -1.4391809701919556
    3. '<|end|>' → logprob: -1.4391809701919556
    4. ')' → logprob: -3.064180850982666
    5. '<|end|>' → logprob: -3.564180850982666
    6. ' (' → logprob: -4.314180850982666
    7. ':' → logprob: -4.689180850982666
    8. 's' → logprob: -5.189180850982666
    9. '    ' → logprob: -5.314180850982666
    10. ',' → logprob: -6.064180850982666

Token 61: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36630573868751526
    2. 'j' → logprob: -2.4913058280944824
    3. '(' → logprob: -2.9913058280944824
    4. 'num' → logprob: -3.1163058280944824
    5. ' j' → logprob: -3.8663058280944824
    6. ' num' → logprob: -3.9913058280944824
    7. ')' → logprob: -4.241305828094482
    8. 'm' → logprob: -4.366305828094482
    9. '    ' → logprob: -4.491305828094482
    10. '=' → logprob: -4.866305828094482

Token 62: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.2233409732580185
    2. 'num' (adapté à ' num') → logprob: -1.9733409881591797
    3. 'j' → logprob: -3.8483409881591797
    4. ' j' → logprob: -3.9733409881591797
    5. ' ' → logprob: -4.59834098815918
    6. ' number' → logprob: -6.09834098815918
    7. 'n' → logprob: -6.72334098815918
    8. '    ' → logprob: -6.84834098815918
    9. '0' → logprob: -7.09834098815918
    10. '            ' → logprob: -7.47334098815918

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0206440687179565
    2. '=' → logprob: -1.2706440687179565
    3. '_start' → logprob: -1.6456440687179565
    4. '_str' → logprob: -2.270644187927246
    5. 'ber' → logprob: -3.270644187927246
    6. '_' → logprob: -4.270644187927246
    7. 's' → logprob: -5.520644187927246
    8. '_chars' → logprob: -6.020644187927246
    9. '_end' → logprob: -6.770644187927246
    10. '_digits' → logprob: -7.645644187927246

Token 64: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033372942358255386
    2. ' ' → logprob: -3.7833728790283203
    3. 'num' → logprob: -4.90837287902832
    4. ' num' → logprob: -6.40837287902832
    5. 'int' → logprob: -7.78337287902832
    6. '""' → logprob: -8.53337287902832
    7. '''' → logprob: -8.78337287902832
    8. ' int' → logprob: -9.28337287902832
    9. ' ''' → logprob: -9.40837287902832
    10. '"' → logprob: -10.28337287902832

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08335062116384506
    2. 'num' → logprob: -2.583350658416748
    3. '''' → logprob: -6.083350658416748
    4. '""' → logprob: -7.083350658416748
    5. 'int' → logprob: -7.083350658416748
    6. ' ' → logprob: -8.58335018157959
    7. '1' → logprob: -9.95835018157959
    8. 'i' → logprob: -9.95835018157959
    9. '```' → logprob: -9.95835018157959
    10. '"' → logprob: -10.45835018157959

Token 66: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' while' (ID: 2049)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6121280789375305
    2. ' i' → logprob: -1.6121280193328857
    3. ' ' → logprob: -1.7371280193328857
    4. ' while' → logprob: -3.4871280193328857
    5. 'while' (adapté à ' while') → logprob: -4.112128257751465
    6. '<|end|>' → logprob: -4.612128257751465
    7. ')' → logprob: -4.987128257751465
    8. '            ' → logprob: -5.862128257751465
    9. 's' → logprob: -6.487128257751465
    10. '           ' → logprob: -6.612128257751465

Token 69: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5085692405700684
    2. ' i' → logprob: -1.5085692405700684
    3. ' s' → logprob: -2.2585692405700684
    4. 's' → logprob: -2.6335692405700684
    5. 'isdigit' → logprob: -7.133569240570068
    6. ' ' → logprob: -8.508569717407227
    7. '   ' → logprob: -10.008569717407227
    8. '0' → logprob: -12.133569717407227
    9. 'digit' → logprob: -12.696069717407227
    10. '  ' → logprob: -12.758569717407227

Token 70: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.13121414184570312
    2. '+' → logprob: -2.381214141845703
    3. '<' → logprob: -3.631214141845703
    4. ' +' → logprob: -5.881214141845703
    5. '<|end|>' → logprob: -7.256214141845703
    6. '<len' → logprob: -8.631214141845703
    7. '[' → logprob: -8.756214141845703
    8. '<n' → logprob: -9.256214141845703
    9. ' ' → logprob: -10.131214141845703
    10. '<s' → logprob: -11.506214141845703

Token 71: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2519373297691345
    2. ' n' → logprob: -1.5019373893737793
    3. '	n' → logprob: -13.001936912536621
    4. 'i' → logprob: -13.376936912536621
    5. 'len' → logprob: -13.376936912536621
    6. '   ' → logprob: -14.001936912536621
    7. ' ' → logprob: -14.126936912536621
    8. 's' → logprob: -15.126936912536621
    9. '<n' → logprob: -15.626936912536621
    10. ' i' → logprob: -16.001937866210938

Token 72: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10021325200796127
    2. 'and' → logprob: -2.3502132892608643
    3. '           ' → logprob: -13.350213050842285
    4. '   ' → logprob: -13.725213050842285
    5. ' ' → logprob: -13.850213050842285
    6. '    ' → logprob: -13.975213050842285
    7. '	and' → logprob: -14.350213050842285
    8. '        ' → logprob: -14.850213050842285
    9. '            ' → logprob: -14.975213050842285
    10. '          ' → logprob: -15.225213050842285

Token 73: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14268310368061066
    2. ' s' → logprob: -2.0176830291748047
    3. 'isdigit' → logprob: -12.517683029174805
    4. '	s' → logprob: -14.392683029174805
    5. 'ord' → logprob: -14.642683029174805
    6. 'int' → logprob: -14.892683029174805
    7. '(s' → logprob: -15.017683029174805
    8. '`s' → logprob: -15.267683029174805
    9. '>s' → logprob: -15.392683029174805
    10. '<s' → logprob: -15.392683029174805

Token 74: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.00000286102295
    3. '[I' → logprob: -15.37500286102295
    4. 'i' → logprob: -16.000001907348633
    5. '```' → logprob: -16.625001907348633
    6. '[int' → logprob: -17.375001907348633
    7. '[
' → logprob: -18.000001907348633
    8. '[index' → logprob: -18.375001907348633
    9. 'isdigit' → logprob: -18.375001907348633
    10. '[ii' → logprob: -18.875001907348633

Token 75: '].' (ID: 1651)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0808110162615776
    2. '.' → logprob: -2.580811023712158
    3. 'isdigit' → logprob: -6.955811023712158
    4. '].' → logprob: -7.330811023712158
    5. ' .' → logprob: -8.455810546875
    6. ').' → logprob: -9.580810546875
    7. '>.' → logprob: -10.955810546875
    8. '}.' → logprob: -12.580810546875
    9. '[' → logprob: -13.080810546875
    10. '   ' → logprob: -13.330810546875

Token 76: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -1.0280383548888494e-06
    2. 'digit' → logprob: -14.000000953674316
    3. 'isd' → logprob: -16.000001907348633
    4. ' is' → logprob: -20.375001907348633
    5. 'is' → logprob: -21.375001907348633
    6. '```' → logprob: -22.250001907348633
    7. '0' → logprob: -22.750001907348633
    8. '`' → logprob: -22.875001907348633
    9. 'isas' → logprob: -23.000001907348633
    10. 'rstrip' → logprob: -23.000001907348633

Token 77: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001970981014892459
    2. '()' → logprob: -6.3769707679748535
    3. '():
' → logprob: -8.251971244812012
    4. ' ():' → logprob: -12.376971244812012
    5. ':' → logprob: -13.501971244812012
    6. '(' → logprob: -14.126971244812012
    7. '():
' → logprob: -14.376971244812012
    8. '():

' → logprob: -14.751971244812012
    9. '()==' → logprob: -15.751971244812012
    10. '):' → logprob: -16.001970291137695

Token 78: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08253253996372223
    2. ' num' → logprob: -3.4575326442718506
    3. '<|end|>' → logprob: -3.8325326442718506
    4. ' ' → logprob: -4.3325324058532715
    5. 'num' → logprob: -5.0825324058532715
    6. '           ' → logprob: -5.9575324058532715
    7. '            ' → logprob: -6.4575324058532715
    8. '<|end|>' → logprob: -6.9575324058532715
    9. '                ' → logprob: -7.7075324058532715
    10. ' 
' → logprob: -9.20753288269043

Token 79: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.01867881789803505
    2. 'num' (adapté à ' num') → logprob: -4.018678665161133
    3. ' ' → logprob: -8.143678665161133
    4. '               ' → logprob: -9.768678665161133
    5. ' ' → logprob: -10.018678665161133
    6. '	num' → logprob: -10.393678665161133
    7. '                ' → logprob: -10.768678665161133
    8. '            ' → logprob: -10.893678665161133
    9. ' 
' → logprob: -11.393678665161133
    10. '0' → logprob: -11.643678665161133

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16040609776973724
    2. '=' → logprob: -1.9104061126708984
    3. ' *=' → logprob: -8.910406112670898
    4. '*=' → logprob: -10.785406112670898
    5. '*' → logprob: -11.535406112670898
    6. ' *' → logprob: -11.910406112670898
    7. ' ' → logprob: -12.160406112670898
    8. ' +=' → logprob: -13.285406112670898
    9. ')' → logprob: -13.910406112670898
    10. '+=' → logprob: -15.160406112670898

Token 81: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.16022981703281403
    2. 'num' → logprob: -1.9102298021316528
    3. ' ' → logprob: -12.660229682922363
    4. '	num' → logprob: -13.410229682922363
    5. '(num' → logprob: -14.410229682922363
    6. ' nums' → logprob: -16.16023063659668
    7. ' ' → logprob: -16.53523063659668
    8. '10' → logprob: -16.53523063659668
    9. '                ' → logprob: -16.66023063659668
    10. '=num' → logprob: -16.91023063659668

Token 82: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10117234289646149
    2. '*' → logprob: -2.35117244720459
    3. '*num' → logprob: -6.97617244720459
    4. ' ' → logprob: -11.35117244720459
    5. 'num' → logprob: -11.97617244720459
    6. '10' → logprob: -12.22617244720459
    7. '0' → logprob: -12.97617244720459
    8. '```' → logprob: -13.22617244720459
    9. 's' → logprob: -13.47617244720459
    10. ' num' → logprob: -14.22617244720459

Token 83: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.003179855877533555
    2. ' ' → logprob: -5.753180027008057
    3. '1' → logprob: -14.003179550170898
    4. '<|end|>' → logprob: -14.003179550170898
    5. '```' → logprob: -15.253179550170898
    6. 'int' → logprob: -15.878179550170898
    7. '  ' → logprob: -17.7531795501709
    8. '"' → logprob: -18.2531795501709
    9. ')' → logprob: -18.2531795501709
    10. '    ' → logprob: -18.5031795501709

Token 84: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.000000953674316
    3. '1' → logprob: -15.125000953674316
    4. '```' → logprob: -18.375
    5. '0' → logprob: -18.625
    6. '   ' → logprob: -19.625
    7. '`' → logprob: -21.25
    8. '``' → logprob: -21.875
    9. '۱۰' → logprob: -22.0
    10. '１０' → logprob: -22.125

Token 85: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38688457012176514
    2. ' +' → logprob: -1.1368845701217651
    3. '+s' → logprob: -11.761884689331055
    4. ' ' → logprob: -12.386884689331055
    5. ' +
' → logprob: -14.761884689331055
    6. 's' → logprob: -15.261884689331055
    7. '+i' → logprob: -15.386884689331055
    8. '+
' → logprob: -15.886884689331055
    9. ')' → logprob: -16.261884689331055
    10. '                ' → logprob: -16.886884689331055

Token 86: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2520654797554016
    2. ' int' → logprob: -1.5020654201507568
    3. 'ord' → logprob: -9.502065658569336
    4. ' ord' → logprob: -10.002065658569336
    5. '(int' → logprob: -11.377065658569336
    6. 's' → logprob: -13.252065658569336
    7. '1' → logprob: -13.627065658569336
    8. '<int' → logprob: -14.127065658569336
    9. '=int' → logprob: -14.752065658569336
    10. '[int' → logprob: -15.127065658569336

Token 87: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0001238004770129919
    2. '(' → logprob: -9.125123977661133
    3. 's' → logprob: -11.125123977661133
    4. '(
' → logprob: -16.625123977661133
    5. ' (' → logprob: -19.500123977661133
    6. '(

' → logprob: -20.750123977661133
    7. ')' → logprob: -20.875123977661133
    8. ')s' → logprob: -21.375123977661133
    9. '```' → logprob: -21.375123977661133
    10. '`s' → logprob: -21.875123977661133

Token 88: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0532059371471405
    2. '[s' → logprob: -3.053205966949463
    3. 's' → logprob: -5.428205966949463
    4. '[' → logprob: -8.553205490112305
    5. '(s' → logprob: -12.053205490112305
    6. '[
' → logprob: -12.303205490112305
    7. ' s' → logprob: -12.553205490112305
    8. ' [' → logprob: -12.678205490112305
    9. ')' → logprob: -12.803205490112305
    10. '```' → logprob: -13.803205490112305

Token 89: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.004806160926818848
    2. '])
' → logprob: -5.379806041717529
    3. ')' → logprob: -8.879806518554688
    4. ']' → logprob: -10.754806518554688
    5. '])
' → logprob: -12.254806518554688
    6. ')
' → logprob: -12.379806518554688
    7. '])]' → logprob: -12.379806518554688
    8. ' ])' → logprob: -13.129806518554688
    9. ''])' → logprob: -13.379806518554688
    10. ')])' → logprob: -13.379806518554688

Token 90: '               ' (ID: 506)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6558273434638977
    2. '           ' → logprob: -1.030827283859253
    3. '               ' → logprob: -2.780827283859253
    4. ' i' → logprob: -3.530827283859253
    5. '       ' → logprob: -4.280827522277832
    6. '   ' → logprob: -5.405827522277832
    7. '                   ' → logprob: -6.030827522277832
    8. '<|end|>' → logprob: -6.155827522277832
    9. ')' → logprob: -6.280827522277832
    10. '            ' → logprob: -6.905827522277832

Token 91: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759895443916321
    2. 'i' (adapté à ' i') → logprob: -0.8259895443916321
    3. 's' → logprob: -10.950989723205566
    4. '           ' → logprob: -11.325989723205566
    5. '               ' → logprob: -11.825989723205566
    6. '	i' → logprob: -12.575989723205566
    7. ')' → logprob: -13.200989723205566
    8. '            ' → logprob: -13.575989723205566
    9. '   ' → logprob: -13.825989723205566
    10. ' ' → logprob: -13.950989723205566

Token 92: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5283601880073547
    2. '+=' → logprob: -0.9033601880073547
    3. '+' → logprob: -5.278360366821289
    4. '<|end|>' → logprob: -10.028360366821289
    5. '=' → logprob: -10.278360366821289
    6. ' +' → logprob: -10.903360366821289
    7. '+='' → logprob: -11.903360366821289
    8. ']+=' → logprob: -12.278360366821289
    9. ')' → logprob: -12.903360366821289
    10. '<|end|>' → logprob: -12.903360366821289

Token 93: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '```' → logprob: -19.25037956237793
    4. '   ' → logprob: -20.25037956237793
    5. ' ' → logprob: -20.87537956237793
    6. '۱' → logprob: -21.12537956237793
    7. '<|end|>' → logprob: -21.50037956237793
    8. '  ' → logprob: -21.62537956237793
    9. '１' → logprob: -21.87537956237793
    10. '‌' → logprob: -22.87537956237793

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -18.1250057220459
    4. '   ' → logprob: -19.8750057220459
    5. '१' → logprob: -20.3125057220459
    6. '۱' → logprob: -20.5000057220459
    7. '১' → logprob: -20.7500057220459
    8. '  ' → logprob: -20.9375057220459
    9. '１' → logprob: -21.3750057220459
    10. '`' → logprob: -21.7500057220459

Token 95: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2530163526535034
    2. '       ' → logprob: -2.878016471862793
    3. '    ' → logprob: -3.628016471862793
    4. '     
' → logprob: -4.003016471862793
    5. ' 
' → logprob: -4.128016471862793
    6. '   ' → logprob: -4.253016471862793
    7. ')' → logprob: -4.628016471862793
    8. ' (' → logprob: -4.628016471862793
    9. '         
' → logprob: -5.003016471862793
    10. '        
' → logprob: -5.253016471862793

Token 96: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45835810899734497
    2. ' ' → logprob: -1.4583580493927002
    3. '           ' → logprob: -3.3333580493927
    4. ' 
' → logprob: -4.208358287811279
    5. '        ' → logprob: -4.333358287811279
    6. ')' → logprob: -4.583358287811279
    7. '   ' → logprob: -4.708358287811279
    8. ' elif' → logprob: -4.833358287811279
    9. '    ' → logprob: -4.958358287811279
    10. '        
' → logprob: -5.333358287811279

Token 97: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8336190581321716
    2. ' ' → logprob: -1.2086191177368164
    3. 'if' (adapté à ' if') → logprob: -2.3336191177368164
    4. '       ' → logprob: -2.8336191177368164
    5. '   ' → logprob: -3.0836191177368164
    6. '    ' → logprob: -4.083619117736816
    7. '           ' → logprob: -4.083619117736816
    8. 'elif' → logprob: -5.458619117736816
    9. ' 
' → logprob: -5.833619117736816
    10. ' *' → logprob: -5.833619117736816

Token 98: ' i' (ID: 575)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.02124318853020668
    2. 's' → logprob: -4.021243095397949
    3. ' i' → logprob: -5.896243095397949
    4. ' ' → logprob: -8.64624309539795
    5. 'i' → logprob: -8.77124309539795
    6. '  ' → logprob: -12.64624309539795
    7. '	s' → logprob: -13.39624309539795
    8. '   ' → logprob: -13.52124309539795
    9. '<s' → logprob: -15.58374309539795
    10. '_s' → logprob: -15.64624309539795

Token 99: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5823855996131897
    2. '<' → logprob: -0.8323855996131897
    3. '[' → logprob: -5.332385540008545
    4. ' >=' → logprob: -7.957385540008545
    5. ' ' → logprob: -8.207386016845703
    6. '<len' → logprob: -8.207386016845703
    7. '>=' → logprob: -8.332386016845703
    8. ' and' → logprob: -8.457386016845703
    9. 'and' → logprob: -10.082386016845703
    10. '<n' → logprob: -10.582386016845703

Token 100: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.060793109238147736
    2. ' n' → logprob: -2.935793161392212
    3. 'len' → logprob: -5.185792922973633
    4. ' len' → logprob: -8.185792922973633
    5. ' ' → logprob: -11.810792922973633
    6. '   ' → logprob: -12.560792922973633
    7. '<n' → logprob: -12.935792922973633
    8. '	n' → logprob: -13.435792922973633
    9. '<len' → logprob: -13.560792922973633
    10. '  ' → logprob: -13.685792922973633

Token 101: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2519397437572479
    2. 'and' → logprob: -1.5019397735595703
    3. ' ' → logprob: -12.37693977355957
    4. '   ' → logprob: -12.37693977355957
    5. '           ' → logprob: -14.37693977355957
    6. '	and' → logprob: -14.50193977355957
    7. '    ' → logprob: -14.75193977355957
    8. '  ' → logprob: -15.62693977355957
    9. '
' → logprob: -16.25193977355957
    10. '       ' → logprob: -16.50193977355957

Token 102: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5760765075683594
    2. ' s' → logprob: -0.8260765075683594
    3. ' ' → logprob: -9.20107650756836
    4. '   ' → logprob: -11.07607650756836
    5. '  ' → logprob: -12.07607650756836
    6. '	s' → logprob: -12.32607650756836
    7. '    ' → logprob: -12.45107650756836
    8. '`s' → logprob: -13.82607650756836
    9. '     ' → logprob: -13.95107650756836
    10. '```' → logprob: -14.07607650756836

Token 103: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005526985041797161
    2. '==' → logprob: -5.505527019500732
    3. ' ==' → logprob: -7.130527019500732
    4. '[' → logprob: -7.505527019500732
    5. ']==' → logprob: -10.505526542663574
    6. '[
' → logprob: -11.130526542663574
    7. '=='' → logprob: -11.755526542663574
    8. '```' → logprob: -11.880526542663574
    9. ']' → logprob: -12.005526542663574
    10. '`' → logprob: -12.130526542663574

Token 104: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.033338941633701324
    2. ']==' → logprob: -3.533339023590088
    3. '==' → logprob: -5.658339023590088
    4. ']=='' → logprob: -9.90833854675293
    5. ' ==' → logprob: -10.28333854675293
    6. ' ]' → logprob: -12.90833854675293
    7. ']=="' → logprob: -13.53333854675293
    8. '[' → logprob: -13.53333854675293
    9. '=' → logprob: -13.78333854675293
    10. '==
' → logprob: -14.65833854675293

Token 105: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08918951451778412
    2. ' ==' → logprob: -2.4641895294189453
    3. '=' → logprob: -9.089189529418945
    4. '==
' → logprob: -9.589189529418945
    5. '=='' → logprob: -9.964189529418945
    6. ' ' → logprob: -11.714189529418945
    7. '=="' → logprob: -13.089189529418945
    8. ']==' → logprob: -13.214189529418945
    9. '[' → logprob: -13.589189529418945
    10. ' in' → logprob: -13.964189529418945

Token 106: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.47455090284347534
    2. ''x' → logprob: -0.9745509028434753
    3. '(' → logprob: -9.0995512008667
    4. ' '('' → logprob: -9.2245512008667
    5. ''A' → logprob: -9.8495512008667
    6. '"' → logprob: -9.8495512008667
    7. ''*' → logprob: -10.4745512008667
    8. '"x' → logprob: -10.4745512008667
    9. ''a' → logprob: -11.0995512008667
    10. ' '' → logprob: -11.2245512008667

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17148232460021973
    2. ':
' → logprob: -2.0464823246002197
    3. '):' → logprob: -4.796482086181641
    4. ')' → logprob: -5.171482086181641
    5. '<|end|>' → logprob: -5.546482086181641
    6. '):
' → logprob: -5.796482086181641
    7. '
' → logprob: -6.171482086181641
    8. '           ' → logprob: -6.171482086181641
    9. '<|end|>' → logprob: -6.296482086181641
    10. 'i' → logprob: -7.671482086181641

Token 108: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3104994297027588
    2. 'i' → logprob: -1.5604994297027588
    3. '               ' → logprob: -3.310499429702759
    4. ' i' → logprob: -4.43549919128418
    5. '       ' → logprob: -5.18549919128418
    6. '(' → logprob: -6.81049919128418
    7. '   ' → logprob: -7.56049919128418
    8. ' (' → logprob: -7.68549919128418
    9. '            ' → logprob: -8.93549919128418
    10. '<|end|>' → logprob: -9.06049919128418

Token 109: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01414787583053112
    2. 'stack' → logprob: -4.514147758483887
    3. '                   ' → logprob: -6.889147758483887
    4. '               ' → logprob: -7.264147758483887
    5. '   ' → logprob: -7.264147758483887
    6. '(' → logprob: -8.139147758483887
    7. ' i' → logprob: -8.889147758483887
    8. '           ' → logprob: -9.264147758483887
    9. ' stack' → logprob: -10.764147758483887
    10. ')' → logprob: -10.889147758483887

Token 110: ' find' (ID: 1646)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06857605278491974
    2. 'stack' → logprob: -3.0685760974884033
    3. ' i' → logprob: -4.693575859069824
    4. ' stack' → logprob: -5.318575859069824
    5. ')' → logprob: -6.193575859069824
    6. '(' → logprob: -7.068575859069824
    7. '   ' → logprob: -7.693575859069824
    8. '#' → logprob: -7.693575859069824
    9. '               ' → logprob: -7.943575859069824
    10. ' (' → logprob: -8.318575859069824

Token 111: ' matching' (ID: 20238)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.507426381111145
    2. ')' → logprob: -1.132426381111145
    3. '   ' → logprob: -4.1324262619018555
    4. ' i' → logprob: -4.3824262619018555
    5. 'paren' → logprob: -4.5074262619018555
    6. '(' → logprob: -4.7574262619018555
    7. '<|end|>' → logprob: -5.0074262619018555
    8. 'j' → logprob: -5.6324262619018555
    9. 'marker' → logprob: -6.2574262619018555
    10. 'start' → logprob: -6.3824262619018555

Token 112: ' ')' (ID: 35910)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05377432703971863
    2. '(' → logprob: -3.678774356842041
    3. 'paren' → logprob: -4.428774356842041
    4. 'i' → logprob: -4.803774356842041
    5. '<|end|>' → logprob: -5.678774356842041
    6. 'parent' → logprob: -6.678774356842041
    7. ' )' → logprob: -7.428774356842041
    8. ' i' → logprob: -7.803774356842041
    9. ' (' → logprob: -8.803773880004883
    10. '   ' → logprob: -8.928773880004883

Token 113: ''
' (ID: 2207)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6594154834747314
    2. '           ' → logprob: -1.2844154834747314
    3. 'i' → logprob: -2.5344154834747314
    4. ')' → logprob: -2.6594154834747314
    5. ' i' → logprob: -3.7844154834747314
    6. '<|end|>' → logprob: -4.034415245056152
    7. 'stack' → logprob: -5.284415245056152
    8. '<|end|>' → logprob: -5.909415245056152
    9. '                   ' → logprob: -6.534415245056152
    10. '                ' → logprob: -6.659415245056152

Token 114: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3461781442165375
    2. '               ' → logprob: -1.8461781740188599
    3. 'i' → logprob: -2.0961780548095703
    4. ' i' → logprob: -4.84617805480957
    5. ')' → logprob: -6.59617805480957
    6. 'stack' → logprob: -6.72117805480957
    7. '(' → logprob: -7.97117805480957
    8. '                   ' → logprob: -8.09617805480957
    9. '                ' → logprob: -8.97117805480957
    10. '       ' → logprob: -9.34617805480957

Token 115: ' start' (ID: 1604)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.30904489755630493
    2. 'stack' → logprob: -2.30904483795166
    3. '               ' → logprob: -3.30904483795166
    4. 'start' (adapté à ' start') → logprob: -3.43404483795166
    5. 'count' → logprob: -3.68404483795166
    6. 'depth' → logprob: -4.18404483795166
    7. 'open' → logprob: -4.43404483795166
    8. ' stack' → logprob: -4.80904483795166
    9. ' i' → logprob: -4.80904483795166
    10. 'paren' → logprob: -4.93404483795166

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006403069477528334
    2. '=' → logprob: -5.131402969360352
    3. 'i' → logprob: -8.756402969360352
    4. '               ' → logprob: -8.756402969360352
    5. '=i' → logprob: -10.381402969360352
    6. ' +=' → logprob: -10.631402969360352
    7. ')' → logprob: -10.881402969360352
    8. '           ' → logprob: -11.006402969360352
    9. '_idx' → logprob: -11.006402969360352
    10. '+' → logprob: -11.506402969360352

Token 117: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20141343772411346
    2. ' i' → logprob: -1.7014133930206299
    3. '	i' → logprob: -16.326414108276367
    4. ')i' → logprob: -17.326414108276367
    5. ' ' → logprob: -17.826414108276367
    6. '   ' → logprob: -18.076414108276367
    7. '(i' → logprob: -18.826414108276367
    8. 'I' → logprob: -19.076414108276367
    9. 's' → logprob: -19.326414108276367
    10. '```' → logprob: -19.576414108276367

Token 118: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.043014831840991974
    2. ' +' → logprob: -3.1680147647857666
    3. '+
' → logprob: -12.668014526367188
    4. '<|end|>' → logprob: -12.793014526367188
    5. '           ' → logprob: -12.918014526367188
    6. ')' → logprob: -13.293014526367188
    7. '               ' → logprob: -13.418014526367188
    8. '<|end|>' → logprob: -14.418014526367188
    9. ' +
' → logprob: -14.543014526367188
    10. '+=' → logprob: -14.793014526367188

Token 119: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3795937522663735e-05
    2. ' ' → logprob: -11.12502384185791
    3. '2' → logprob: -11.75002384185791
    4. '   ' → logprob: -14.25002384185791
    5. '```' → logprob: -16.000022888183594
    6. 'len' → logprob: -16.750022888183594
    7. '           ' → logprob: -17.000022888183594
    8. '
' → logprob: -17.750022888183594
    9. '6' → logprob: -18.062522888183594
    10. '3' → logprob: -18.125022888183594

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.129266067640856e-05
    2. '2' → logprob: -11.375020980834961
    3. ' ' → logprob: -11.625020980834961
    4. '   ' → logprob: -14.875020980834961
    5. '3' → logprob: -16.25002098083496
    6. 'len' → logprob: -16.25002098083496
    7. '```' → logprob: -16.25002098083496
    8. '           ' → logprob: -17.12502098083496
    9. '

' → logprob: -17.43752098083496
    10. '
' → logprob: -17.81252098083496

Token 121: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6615824699401855
    2. 'i' → logprob: -1.4115824699401855
    3. ')' → logprob: -1.6615824699401855
    4. '
' → logprob: -4.1615824699401855
    5. 'count' → logprob: -4.6615824699401855
    6. '           ' → logprob: -4.9115824699401855
    7. 'stack' → logprob: -5.1615824699401855
    8. ' i' → logprob: -6.2865824699401855
    9. 'depth' → logprob: -6.2865824699401855
    10. ')
' → logprob: -6.5365824699401855

Token 122: '               ' (ID: 506)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.23751738667488098
    2. '               ' → logprob: -1.9875173568725586
    3. ')' → logprob: -2.9875173568725586
    4. '           ' → logprob: -4.737517356872559
    5. 'stack' → logprob: -5.362517356872559
    6. '<|end|>' → logprob: -5.362517356872559
    7. ' i' → logprob: -5.487517356872559
    8. 'count' → logprob: -7.612517356872559
    9. '<|end|>' → logprob: -8.737517356872559
    10. '                ' → logprob: -8.737517356872559

Token 123: ' cnt' (ID: 27340)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3599770963191986
    2. 'depth' → logprob: -1.484977126121521
    3. 'balance' → logprob: -3.3599770069122314
    4. 'end' → logprob: -3.9849770069122314
    5. 'paren' → logprob: -4.7349772453308105
    6. 'open' → logprob: -5.3599772453308105
    7. 'level' → logprob: -5.8599772453308105
    8. 'cnt' (adapté à ' cnt') → logprob: -6.1099772453308105
    9. 'counter' → logprob: -6.3599772453308105
    10. ')' → logprob: -7.3599772453308105

Token 124: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269298940896988
    2. ' =' → logprob: -2.126929998397827
    3. ')' → logprob: -13.626930236816406
    4. '(' → logprob: -15.626930236816406
    5. 's' → logprob: -16.001930236816406
    6. ' ' → logprob: -16.751930236816406
    7. ',' → logprob: -16.876930236816406
    8. 'paren' → logprob: -17.376930236816406
    9. 'stack' → logprob: -17.626930236816406
    10. 'open' → logprob: -17.751930236816406

Token 125: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012122603366151452
    2. '0' → logprob: -6.876212120056152
    3. ' ' → logprob: -8.626212120056152
    4. '   ' → logprob: -17.06371307373047
    5. '```' → logprob: -17.18871307373047
    6. '<|end|>' → logprob: -17.81371307373047
    7. '  ' → logprob: -17.93871307373047
    8. ')' → logprob: -18.12621307373047
    9. ' ' → logprob: -18.12621307373047
    10. '' → logprob: -18.37621307373047

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008687060908414423
    2. '0' → logprob: -7.250868797302246
    3. ' ' → logprob: -8.750868797302246
    4. ')' → logprob: -15.875868797302246
    5. '(' → logprob: -16.75086784362793
    6. '```' → logprob: -16.93836784362793
    7. '   ' → logprob: -17.06336784362793
    8. '  ' → logprob: -17.68836784362793
    9. '۱' → logprob: -17.87586784362793
    10. '{' → logprob: -17.93836784362793

Token 127: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0209343358874321
    2. ' i' → logprob: -4.645934104919434
    3. '               ' → logprob: -5.145934104919434
    4. '
' → logprob: -5.895934104919434
    5. '           ' → logprob: -6.270934104919434
    6. ')' → logprob: -8.520934104919434
    7. '<|end|>' → logprob: -8.520934104919434
    8. '<|end|>' → logprob: -9.895934104919434
    9. '	i' → logprob: -10.145934104919434
    10. '   ' → logprob: -10.895934104919434

Token 128: '               ' (ID: 506)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007658808026462793
    2. ' i' → logprob: -5.007658958435059
    3. '           ' → logprob: -8.007658958435059
    4. '               ' → logprob: -8.132658958435059
    5. '<|end|>' → logprob: -9.257658958435059
    6. '
' → logprob: -9.382658958435059
    7. ')' → logprob: -10.007658958435059
    8. '   ' → logprob: -11.257658958435059
    9. '<|end|>' → logprob: -11.257658958435059
    10. '	i' → logprob: -11.257658958435059

Token 129: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0007455448503606021
    2. ' i' → logprob: -7.50074577331543
    3. '               ' → logprob: -8.87574577331543
    4. '           ' → logprob: -10.00074577331543
    5. '                   ' → logprob: -12.87574577331543
    6. '   ' → logprob: -13.00074577331543
    7. 'while' → logprob: -13.50074577331543
    8. '	i' → logprob: -14.75074577331543
    9. '       ' → logprob: -15.00074577331543
    10. '              ' → logprob: -15.62574577331543

Token 130: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6376607418060303
    2. '+=' → logprob: -0.8876607418060303
    3. '=' → logprob: -2.8876607418060303
    4. ' =' → logprob: -6.012660980224609
    5. '+' → logprob: -6.387660980224609
    6. ' +' → logprob: -11.13766098022461
    7. '<|end|>' → logprob: -13.26266098022461
    8. ' ' → logprob: -14.38766098022461
    9. ']+=' → logprob: -14.63766098022461
    10. 's' → logprob: -15.01266098022461

Token 131: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008052219054661691
    2. ' ' → logprob: -7.125805377960205
    3. '2' → logprob: -15.000804901123047
    4. '   ' → logprob: -15.625804901123047
    5. '```' → logprob: -15.625804901123047
    6. '  ' → logprob: -17.000804901123047
    7. '１' → logprob: -18.063304901123047
    8. '۱' → logprob: -18.313304901123047
    9. '+' → logprob: -18.438304901123047
    10. ' ' → logprob: -18.938304901123047

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2723104848410003e-05
    2. ' ' → logprob: -10.750022888183594
    3. '2' → logprob: -14.125022888183594
    4. '```' → logprob: -15.000022888183594
    5. '   ' → logprob: -16.062522888183594
    6. '۱' → logprob: -17.562522888183594
    7. '１' → logprob: -17.937522888183594
    8. '  ' → logprob: -18.187522888183594
    9. '
' → logprob: -18.437522888183594
    10. '3' → logprob: -18.562522888183594

Token 133: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7458677291870117
    2. '<|end|>' → logprob: -0.9958677291870117
    3. 'while' → logprob: -2.4958677291870117
    4. '           ' → logprob: -3.2458677291870117
    5. '       ' → logprob: -3.9958677291870117
    6. ' while' → logprob: -4.870867729187012
    7. '<|end|>' → logprob: -5.120867729187012
    8. '	       ' → logprob: -6.745867729187012
    9. '		       ' → logprob: -8.245867729187012
    10. '	while' → logprob: -8.495867729187012

Token 134: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9605377316474915
    2. '<|end|>' → logprob: -1.2105376720428467
    3. 'while' → logprob: -1.5855376720428467
    4. '               ' → logprob: -2.9605376720428467
    5. '           ' → logprob: -3.3355376720428467
    6. ' while' → logprob: -3.8355376720428467
    7. '<|end|>' → logprob: -6.585537910461426
    8. '	       ' → logprob: -6.710537910461426
    9. ')' → logprob: -6.960537910461426
    10. ' ' → logprob: -7.710537910461426

Token 135: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0012071382952854037
    2. ' while' → logprob: -6.75120735168457
    3. '               ' → logprob: -11.37620735168457
    4. 'continue' → logprob: -11.37620735168457
    5. '           ' → logprob: -12.25120735168457
    6. 'While' → logprob: -12.75120735168457
    7. 'end' → logprob: -13.00120735168457
    8. '```' → logprob: -13.62620735168457
    9. ')' → logprob: -14.00120735168457
    10. '	while' → logprob: -14.12620735168457

Token 136: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6630357503890991
    2. 'cnt' → logprob: -1.0380357503890991
    3. ' i' → logprob: -2.2880358695983887
    4. ' cnt' → logprob: -3.5380358695983887
    5. '(cnt' → logprob: -11.28803539276123
    6. ' ' → logprob: -12.41303539276123
    7. '	cnt' → logprob: -12.41303539276123
    8. '   ' → logprob: -12.91303539276123
    9. '  ' → logprob: -14.03803539276123
    10. '	i' → logprob: -14.16303539276123

Token 137: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2465352565050125
    2. ' <' → logprob: -1.746535301208496
    3. '<n' → logprob: -3.121535301208496
    4. '<len' → logprob: -11.621535301208496
    5. ' ' → logprob: -12.121535301208496
    6. '<s' → logprob: -12.371535301208496
    7. '<|end|>' → logprob: -12.871535301208496
    8. '<N' → logprob: -13.371535301208496
    9. '<num' → logprob: -13.746535301208496
    10. 'n' → logprob: -13.871535301208496

Token 138: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018150296062231064
    2. ' n' → logprob: -4.018150329589844
    3. '	n' → logprob: -16.018150329589844
    4. ' ' → logprob: -16.643150329589844
    5. 'len' → logprob: -16.893150329589844
    6. '<n' → logprob: -17.143150329589844
    7. '   ' → logprob: -17.518150329589844
    8. '<|end|>' → logprob: -17.518150329589844
    9. ')n' → logprob: -17.643150329589844
    10. '(n' → logprob: -18.393150329589844

Token 139: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.31326353549957275
    2. 'and' → logprob: -1.3132635354995728
    3. ' ' → logprob: -14.563263893127441
    4. '   ' → logprob: -14.938263893127441
    5. '           ' → logprob: -15.188263893127441
    6. '	and' → logprob: -15.313263893127441
    7. '               ' → logprob: -16.438262939453125
    8. '            ' → logprob: -16.438262939453125
    9. '    ' → logprob: -16.813262939453125
    10. '&&' → logprob: -17.063262939453125

Token 140: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.10022855550050735
    2. ' cnt' → logprob: -2.3502285480499268
    3. '(cnt' → logprob: -11.225228309631348
    4. '	cnt' → logprob: -11.975228309631348
    5. ' ' → logprob: -14.100228309631348
    6. '[cnt' → logprob: -14.100228309631348
    7. '   ' → logprob: -14.975228309631348
    8. 'Cnt' → logprob: -16.225229263305664
    9. '_cnt' → logprob: -16.475229263305664
    10. '  ' → logprob: -16.975229263305664

Token 141: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.22388669848442078
    2. '>' → logprob: -1.7238867282867432
    3. ' !=' → logprob: -3.973886728286743
    4. '!=' → logprob: -5.723886489868164
    5. '<|end|>' → logprob: -9.598886489868164
    6. ':' → logprob: -10.473886489868164
    7. ' ' → logprob: -11.223886489868164
    8. '   ' → logprob: -11.348886489868164
    9. ' <' → logprob: -11.973886489868164
    10. ' +=' → logprob: -12.348886489868164

Token 142: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04858884960412979
    2. ' ' → logprob: -3.048588752746582
    3. '   ' → logprob: -14.423588752746582
    4. '  ' → logprob: -14.673588752746582
    5. '1' → logprob: -15.923588752746582
    6. ' ' → logprob: -16.4235897064209
    7. '    ' → logprob: -16.7985897064209
    8. '<|end|>' → logprob: -17.0485897064209
    9. '     ' → logprob: -18.2985897064209
    10. '۰' → logprob: -18.4235897064209

Token 143: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '1' → logprob: -16.62509536743164
    4. '   ' → logprob: -17.75009536743164
    5. '  ' → logprob: -18.00009536743164
    6. '۰' → logprob: -18.87509536743164
    7. '<|end|>' → logprob: -19.37509536743164
    8. '```' → logprob: -19.87509536743164
    9. ' ' → logprob: -20.25009536743164
    10. '    ' → logprob: -20.37509536743164

Token 144: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0902448296546936
    2. ':' → logprob: -2.465244770050049
    3. ' and' → logprob: -7.590244770050049
    4. '           ' → logprob: -7.965244770050049
    5. '               ' → logprob: -8.215245246887207
    6. '):
' → logprob: -10.215245246887207
    7. '   ' → logprob: -10.340245246887207
    8. '       ' → logprob: -10.590245246887207
    9. ' :
' → logprob: -10.715245246887207
    10. 'and' → logprob: -11.215245246887207

Token 145: '                   ' (ID: 699)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6672999262809753
    2. 'if' → logprob: -1.5422999858856201
    3. '           ' → logprob: -1.6672999858856201
    4. '               ' → logprob: -2.91729998588562
    5. '   ' → logprob: -3.79229998588562
    6. '       ' → logprob: -5.042299747467041
    7. '                   ' → logprob: -7.292299747467041
    8. ' ' → logprob: -8.9173002243042
    9. '	if' → logprob: -9.7923002243042
    10. '<|end|>' → logprob: -10.2923002243042

Token 146: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4745103418827057
    2. ' if' → logprob: -0.9745103120803833
    3. '   ' → logprob: -8.224510192871094
    4. '                   ' → logprob: -8.974510192871094
    5. '       ' → logprob: -10.974510192871094
    6. '                       ' → logprob: -11.724510192871094
    7. ' ' → logprob: -12.849510192871094
    8. '               ' → logprob: -12.974510192871094
    9. '           ' → logprob: -13.099510192871094
    10. '```' → logprob: -13.099510192871094

Token 147: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.313265860080719
    2. ' s' → logprob: -1.3132658004760742
    3. ' ' → logprob: -13.313265800476074
    4. '   ' → logprob: -14.438265800476074
    5. '	s' → logprob: -14.813265800476074
    6. '(s' → logprob: -14.813265800476074
    7. '    ' → logprob: -15.313265800476074
    8. '  ' → logprob: -15.563265800476074
    9. ' ' → logprob: -15.688265800476074
    10. '`s' → logprob: -15.938265800476074

Token 148: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.4849443838757e-06
    2. '[' → logprob: -12.875004768371582
    3. 'i' → logprob: -13.375004768371582
    4. '```' → logprob: -16.250003814697266
    5. '[
' → logprob: -16.750003814697266
    6. '[I' → logprob: -17.250003814697266
    7. '[index' → logprob: -17.625003814697266
    8. '[s' → logprob: -18.000003814697266
    9. '[j' → logprob: -18.375003814697266
    10. '[...]' → logprob: -18.375003814697266

Token 149: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22555923461914062
    2. '==' → logprob: -1.6005592346191406
    3. '=='' → logprob: -9.97555923461914
    4. '=' → logprob: -10.47555923461914
    5. ']==' → logprob: -10.72555923461914
    6. '(' → logprob: -11.35055923461914
    7. ')' → logprob: -11.47555923461914
    8. ''' → logprob: -12.10055923461914
    9. ']' → logprob: -12.35055923461914
    10. ' =='' → logprob: -12.47555923461914

Token 150: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.638820230960846
    2. ' ==' → logprob: -0.763820230960846
    3. '=='' → logprob: -5.388820171356201
    4. ''' → logprob: -7.013820171356201
    5. '(' → logprob: -8.13882064819336
    6. '=' → logprob: -8.13882064819336
    7. ' '('' → logprob: -10.01382064819336
    8. '"' → logprob: -10.51382064819336
    9. ' =='' → logprob: -10.51382064819336
    10. '==
' → logprob: -11.13882064819336

Token 151: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0003422567679081112
    2. '(' → logprob: -8.75034236907959
    3. '"' → logprob: -9.25034236907959
    4. ' '('' → logprob: -10.12534236907959
    5. '')' → logprob: -10.25034236907959
    6. '('' → logprob: -12.12534236907959
    7. ' '' → logprob: -12.75034236907959
    8. ''(' → logprob: -13.50034236907959
    9. ''s' → logprob: -13.87534236907959
    10. ')' → logprob: -15.00034236907959

Token 152: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14728006720542908
    2. ':' → logprob: -2.147279977798462
    3. '                   ' → logprob: -4.272280216217041
    4. '                       ' → logprob: -5.397280216217041
    5. '):
' → logprob: -7.272280216217041
    6. ')' → logprob: -8.022279739379883
    7. '):' → logprob: -9.022279739379883
    8. '<|end|>' → logprob: -9.022279739379883
    9. 'cnt' → logprob: -9.272279739379883
    10. ' or' → logprob: -9.397279739379883

Token 153: '                       ' (ID: 968)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.39212051033973694
    2. ' cnt' → logprob: -1.3921204805374146
    3. '                       ' → logprob: -2.642120599746704
    4. '                   ' → logprob: -6.017120361328125
    5. '	cnt' → logprob: -7.142120361328125
    6. '(cnt' → logprob: -7.392120361328125
    7. '[cnt' → logprob: -7.892120361328125
    8. '
' → logprob: -8.517120361328125
    9. '               ' → logprob: -10.267120361328125
    10. '       ' → logprob: -10.267120361328125

Token 154: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.038152918219566345
    2. ' cnt' → logprob: -3.2881529331207275
    3. '	cnt' → logprob: -9.663152694702148
    4. '                   ' → logprob: -10.538152694702148
    5. '(cnt' → logprob: -11.663152694702148
    6. '                       ' → logprob: -12.163152694702148
    7. '[cnt' → logprob: -12.538152694702148
    8. '
' → logprob: -13.288152694702148
    9. '               ' → logprob: -13.788152694702148
    10. '_cnt' → logprob: -14.288152694702148

Token 155: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01815345324575901
    2. ' +=' → logprob: -4.018153667449951
    3. '=' → logprob: -12.643153190612793
    4. '+' → logprob: -15.768153190612793
    5. ']+=' → logprob: -15.893153190612793
    6. '-=' → logprob: -17.01815414428711
    7. '               ' → logprob: -19.01815414428711
    8. '                   ' → logprob: -19.14315414428711
    9. ' -=' → logprob: -19.89315414428711
    10. ')' → logprob: -20.14315414428711

Token 156: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '<|end|>' → logprob: -18.750335693359375
    4. '   ' → logprob: -20.125335693359375
    5. ' ' → logprob: -20.125335693359375
    6. '```' → logprob: -20.250335693359375
    7. ')' → logprob: -22.000335693359375
    8. '۱' → logprob: -22.000335693359375
    9. '
' → logprob: -22.250335693359375
    10. '           ' → logprob: -22.250335693359375

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '<|end|>' → logprob: -19.0
    4. '```' → logprob: -19.875
    5. '۱' → logprob: -22.5
    6. '
' → logprob: -22.875
    7. '-' → logprob: -23.0
    8. ')' → logprob: -23.375
    9. '   ' → logprob: -23.625
    10. '`' → logprob: -23.625

Token 158: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.5284351110458374
    2. '                   ' → logprob: -0.9034351110458374
    3. ' elif' → logprob: -6.278435230255127
    4. '               ' → logprob: -6.403435230255127
    5. '           ' → logprob: -7.153435230255127
    6. '
' → logprob: -7.778435230255127
    7. ')' → logprob: -8.528434753417969
    8. '<|end|>' → logprob: -9.528434753417969
    9. '   ' → logprob: -9.653434753417969
    10. '       ' → logprob: -9.778434753417969

Token 159: '                   ' (ID: 699)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.03277081251144409
    2. '                   ' → logprob: -3.532770872116089
    3. ' elif' → logprob: -6.15777063369751
    4. '               ' → logprob: -7.78277063369751
    5. ')' → logprob: -8.407771110534668
    6. '           ' → logprob: -9.282771110534668
    7. 'i' → logprob: -9.907771110534668
    8. '```' → logprob: -10.157771110534668
    9. '<|end|>' → logprob: -10.782771110534668
    10. 'else' → logprob: -11.032771110534668

Token 160: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.0040830280631780624
    2. ' elif' → logprob: -5.504083156585693
    3. 'i' → logprob: -13.129082679748535
    4. '               ' → logprob: -14.004082679748535
    5. 'if' → logprob: -14.254082679748535
    6. 'else' → logprob: -14.754082679748535
    7. '                   ' → logprob: -15.379082679748535
    8. ' i' → logprob: -16.00408363342285
    9. 'el' → logprob: -16.12908363342285
    10. '	elif' → logprob: -16.62908363342285

Token 161: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3484610915184021
    2. 's' → logprob: -1.2234611511230469
    3. ')' → logprob: -11.723461151123047
    4. '')' → logprob: -12.098461151123047
    5. ' ')' → logprob: -14.348461151123047
    6. ')s' → logprob: -14.848461151123047
    7. ' ' → logprob: -14.848461151123047
    8. ' ' → logprob: -15.098461151123047
    9. ' ')'' → logprob: -15.223461151123047
    10. '   ' → logprob: -15.598461151123047

Token 162: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0015437841648235917
    2. 's' → logprob: -6.626543998718262
    3. '[' → logprob: -8.751543998718262
    4. '[s' → logprob: -9.751543998718262
    5. '[
' → logprob: -14.376543998718262
    6. ']' → logprob: -14.876543998718262
    7. ' s' → logprob: -16.126543045043945
    8. '[o' → logprob: -16.626543045043945
    9. ')' → logprob: -17.126543045043945
    10. 'i' → logprob: -17.126543045043945

Token 163: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007119550718925893
    2. ']==' → logprob: -7.875711917877197
    3. '==' → logprob: -8.625712394714355
    4. ' ==' → logprob: -9.125712394714355
    5. '']' → logprob: -10.250712394714355
    6. '[i' → logprob: -12.125712394714355
    7. '"]' → logprob: -13.500712394714355
    8. '[' → logprob: -14.500712394714355
    9. ' ]' → logprob: -15.000712394714355
    10. '[]' → logprob: -16.25071144104004

Token 164: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7426453828811646
    2. ' ==' → logprob: -0.9926453828811646
    3. ']' → logprob: -2.367645263671875
    4. '']' → logprob: -3.242645263671875
    5. '')' → logprob: -4.242645263671875
    6. ')' → logprob: -5.492645263671875
    7. ']==' → logprob: -6.242645263671875
    8. '=' → logprob: -9.367645263671875
    9. ' ' → logprob: -9.492645263671875
    10. '']==' → logprob: -9.867645263671875

Token 165: ' ')' (ID: 35910)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0005649457452818751
    2. ')' → logprob: -7.500565052032471
    3. ' ')' → logprob: -11.500564575195312
    4. '")' → logprob: -13.875564575195312
    5. ' ')'' → logprob: -14.375564575195312
    6. '']' → logprob: -15.500564575195312
    7. ''' → logprob: -16.375564575195312
    8. ')'' → logprob: -18.000564575195312
    9. ''):' → logprob: -18.500564575195312
    10. '')"' → logprob: -19.000564575195312

Token 166: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.1734522581100464
    2. '                   ' → logprob: -1.2984522581100464
    3. '                       ' → logprob: -1.5484522581100464
    4. 'cnt' → logprob: -1.9234522581100464
    5. ' cnt' → logprob: -3.298452377319336
    6. ':' → logprob: -4.673452377319336
    7. '               ' → logprob: -4.923452377319336
    8. '):
' → logprob: -6.048452377319336
    9. '(cnt' → logprob: -6.923452377319336
    10. '[cnt' → logprob: -7.423452377319336

Token 167: '                       ' (ID: 968)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.31905031204223633
    2. '                   ' → logprob: -2.0690503120422363
    3. ' cnt' → logprob: -2.0690503120422363
    4. '                       ' → logprob: -3.9440503120422363
    5. '               ' → logprob: -7.444050312042236
    6. '	cnt' → logprob: -8.194049835205078
    7. '(cnt' → logprob: -8.944049835205078
    8. '[cnt' → logprob: -9.194049835205078
    9. '                    ' → logprob: -10.819049835205078
    10. '           ' → logprob: -11.444049835205078

Token 168: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -9.639096970204264e-05
    2. ' cnt' → logprob: -9.250096321105957
    3. '	cnt' → logprob: -15.875096321105957
    4. '(cnt' → logprob: -17.000097274780273
    5. '                   ' → logprob: -17.250097274780273
    6. '[cnt' → logprob: -17.500097274780273
    7. '               ' → logprob: -19.375097274780273
    8. 'count' → logprob: -20.375097274780273
    9. '_cnt' → logprob: -20.625097274780273
    10. '
' → logprob: -21.000097274780273

Token 169: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.48692354559898376
    2. '-=' → logprob: -0.9869235754013062
    3. '-' → logprob: -4.361923694610596
    4. ' -' → logprob: -12.736923217773438
    5. '   ' → logprob: -12.986923217773438
    6. '+=' → logprob: -13.611923217773438
    7. '=' → logprob: -14.111923217773438
    8. '>' → logprob: -14.361923217773438
    9. ' ' → logprob: -14.736923217773438
    10. '--' → logprob: -14.736923217773438

Token 170: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02630099281668663
    2. ' ' → logprob: -3.6513009071350098
    3. '   ' → logprob: -15.526301383972168
    4. '                   ' → logprob: -15.526301383972168
    5. '           ' → logprob: -16.15130043029785
    6. '               ' → logprob: -16.40130043029785
    7. '                       ' → logprob: -17.15130043029785
    8. '0' → logprob: -17.27630043029785
    9. ' ' → logprob: -17.90130043029785
    10. '```' → logprob: -17.90130043029785

Token 171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '<|end|>' → logprob: -16.7500057220459
    4. '```' → logprob: -18.6250057220459
    5. '   ' → logprob: -19.0000057220459
    6. '0' → logprob: -20.0000057220459
    7. '۱' → logprob: -20.3750057220459
    8. ')' → logprob: -20.8125057220459
    9. '<|end|>' → logprob: -21.0625057220459
    10. '
' → logprob: -21.3125057220459

Token 172: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012723772786557674
    2. '               ' → logprob: -4.512723922729492
    3. '           ' → logprob: -7.012723922729492
    4. 'i' → logprob: -8.387723922729492
    5. '
' → logprob: -8.512723922729492
    6. ' i' → logprob: -8.762723922729492
    7. '                       ' → logprob: -9.762723922729492
    8. '   ' → logprob: -9.887723922729492
    9. ',' → logprob: -11.012723922729492
    10. ')' → logprob: -11.762723922729492

Token 173: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003333133412525058
    2. '               ' → logprob: -5.87833309173584
    3. '           ' → logprob: -8.50333309173584
    4. ' i' → logprob: -9.00333309173584
    5. 'i' → logprob: -9.50333309173584
    6. '   ' → logprob: -9.87833309173584
    7. '
' → logprob: -10.25333309173584
    8. '                       ' → logprob: -11.12833309173584
    9. ')' → logprob: -12.25333309173584
    10. ' ' → logprob: -12.75333309173584

Token 174: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.5142742395401001
    2. ' i' → logprob: -1.0142742395401
    3. '                   ' → logprob: -3.3892741203308105
    4. '               ' → logprob: -5.5142741203308105
    5. '   ' → logprob: -6.8892741203308105
    6. '           ' → logprob: -8.514274597167969
    7. ' ' → logprob: -8.889274597167969
    8. ')' → logprob: -9.264274597167969
    9. '       ' → logprob: -9.514274597167969
    10. '	i' → logprob: -11.389274597167969

Token 175: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10022058337926865
    2. '+=' → logprob: -2.3502206802368164
    3. '+' → logprob: -11.350220680236816
    4. ' +' → logprob: -13.975220680236816
    5. '=' → logprob: -15.100220680236816
    6. '    ' → logprob: -15.225220680236816
    7. '   ' → logprob: -15.725220680236816
    8. ']+=' → logprob: -15.850220680236816
    9. '            ' → logprob: -16.3502197265625
    10. '        ' → logprob: -16.3502197265625

Token 176: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003806257154792547
    2. ' ' → logprob: -7.875380516052246
    3. '```' → logprob: -15.375380516052246
    4. '   ' → logprob: -15.500380516052246
    5. '
' → logprob: -17.625381469726562
    6. '  ' → logprob: -18.250381469726562
    7. '<|end|>' → logprob: -18.375381469726562
    8. '１' → logprob: -18.625381469726562
    9. '...' → logprob: -18.625381469726562
    10. '۱' → logprob: -18.937881469726562

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -10.875019073486328
    3. '```' → logprob: -15.750019073486328
    4. '
' → logprob: -16.250019073486328
    5. '   ' → logprob: -16.750019073486328
    6. '-' → logprob: -17.312519073486328
    7. '...' → logprob: -18.250019073486328
    8. '۱' → logprob: -18.375019073486328
    9. '  ' → logprob: -18.687519073486328
    10. '１' → logprob: -18.750019073486328

Token 178: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.27379342913627625
    2. 'segment' → logprob: -2.2737934589385986
    3. ' segment' → logprob: -2.6487934589385986
    4. '
' → logprob: -3.7737934589385986
    5. ' substring' → logprob: -3.7737934589385986
    6. 'substring' → logprob: -4.2737932205200195
    7. 'length' → logprob: -7.1487932205200195
    8. 'sub' → logprob: -7.2737932205200195
    9. 'token' → logprob: -7.3987932205200195
    10. 'substr' → logprob: -7.5237932205200195

Token 179: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.49685317277908325
    2. ' substring' → logprob: -1.8718531131744385
    3. ' segment' → logprob: -2.1218531131744385
    4. 'segment' → logprob: -2.4968531131744385
    5. 'substring' → logprob: -3.7468531131744385
    6. '
' → logprob: -5.496853351593018
    7. 'sub' → logprob: -6.496853351593018
    8. ' fragment' → logprob: -7.371853351593018
    9. 'substr' → logprob: -7.371853351593018
    10. '           ' → logprob: -7.496853351593018

Token 180: ' end' (ID: 1268)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.9518483281135559
    2. 'sub' → logprob: -1.5768482685089111
    3. 'substring' → logprob: -1.9518482685089111
    4. 'substr' → logprob: -2.701848268508911
    5. ' substring' → logprob: -3.076848268508911
    6. 'inner' → logprob: -3.201848268508911
    7. ' segment' → logprob: -3.326848268508911
    8. '               ' → logprob: -3.826848268508911
    9. 'length' → logprob: -4.70184850692749
    10. ' substr' → logprob: -4.82684850692749

Token 181: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38688376545906067
    2. ' =' → logprob: -1.1368837356567383
    3. '-' → logprob: -11.761883735656738
    4. '=end' → logprob: -13.011883735656738
    5. ' ' → logprob: -14.011883735656738
    6. ' -' → logprob: -14.386883735656738
    7. '=start' → logprob: -14.761883735656738
    8. '>' → logprob: -15.636883735656738
    9. ')' → logprob: -15.886883735656738
    10. '<|end|>' → logprob: -16.011884689331055

Token 182: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5759401321411133
    2. ' i' → logprob: -0.8259401321411133
    3. 'start' → logprob: -14.825940132141113
    4. ' start' → logprob: -15.575940132141113
    5. 's' → logprob: -16.450939178466797
    6. ' ' → logprob: -17.450939178466797
    7. '	i' → logprob: -17.825939178466797
    8. '(i' → logprob: -17.950939178466797
    9. '   ' → logprob: -18.075939178466797
    10. '_i' → logprob: -19.450939178466797

Token 183: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931532025337219
    2. ' -' → logprob: -0.6931532025337219
    3. ' ' → logprob: -13.068153381347656
    4. '   ' → logprob: -13.818153381347656
    5. '```' → logprob: -14.318153381347656
    6. ')' → logprob: -14.568153381347656
    7. '<|end|>' → logprob: -14.568153381347656
    8. '       ' → logprob: -15.068153381347656
    9. '           ' → logprob: -15.443153381347656
    10. '
' → logprob: -15.693153381347656

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -20.125
    4. ')' → logprob: -20.5
    5. '
' → logprob: -21.25
    6. '   ' → logprob: -21.5
    7. '0' → logprob: -21.875
    8. '2' → logprob: -22.125
    9. '<|end|>' → logprob: -22.75
    10. '۱' → logprob: -23.1875

Token 185: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.031879108399152756
    2. ')' → logprob: -4.40687894821167
    3. ' segment' → logprob: -5.40687894821167
    4. ' length' → logprob: -5.53187894821167
    5. 'length' → logprob: -6.15687894821167
    6. '
' → logprob: -6.15687894821167
    7. 'segment' → logprob: -6.28187894821167
    8. '           ' → logprob: -6.90687894821167
    9. '                
' → logprob: -7.40687894821167
    10. 'token' → logprob: -8.031879425048828

Token 186: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10474767535924911
    2. '
' → logprob: -2.604747772216797
    3. ' length' → logprob: -4.729747772216797
    4. 'length' → logprob: -5.479747772216797
    5. '           ' → logprob: -5.979747772216797
    6. ' segment' → logprob: -6.104747772216797
    7. '                
' → logprob: -6.104747772216797
    8. '```' → logprob: -7.229747772216797
    9. 'segment' → logprob: -7.229747772216797
    10. '       ' → logprob: -7.354747772216797

Token 187: ' seq' (ID: 26775)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.9214349389076233
    2. 'sub' → logprob: -1.1714348793029785
    3. 'length' → logprob: -2.1714348793029785
    4. 'inner' → logprob: -2.5464348793029785
    5. 'substring' → logprob: -3.2964348793029785
    6. 'substr' → logprob: -4.0464348793029785
    7. ' segment' → logprob: -4.5464348793029785
    8. 'stack' → logprob: -4.9214348793029785
    9. 'seg' → logprob: -5.2964348793029785
    10. ' length' → logprob: -5.7964348793029785

Token 188: '_len' (ID: 13683)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.20602509379386902
    2. ' =' → logprob: -2.0810251235961914
    3. '_len' → logprob: -2.9560251235961914
    4. '_' → logprob: -4.956025123596191
    5. '=' → logprob: -6.206025123596191
    6. 'length' → logprob: -8.956025123596191
    7. 'ength' → logprob: -9.456025123596191
    8. 'len' → logprob: -9.581025123596191
    9. '_l' → logprob: -12.456025123596191
    10. '=len' → logprob: -12.956025123596191

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193917751312256
    2. '=' → logprob: -1.5019391775131226
    3. ' ' → logprob: -12.251938819885254
    4. ',' → logprob: -13.001938819885254
    5. ')' → logprob: -13.751938819885254
    6. ' +=' → logprob: -14.126938819885254
    7. 's' → logprob: -15.376938819885254
    8. ' ' → logprob: -15.626938819885254
    9. '   ' → logprob: -15.751938819885254
    10. '_' → logprob: -16.25193977355957

Token 190: ' decompress' (ID: 195938)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.0009308716980740428
    2. ' decompress' → logprob: -7.1259307861328125
    3. ' decom' → logprob: -9.500930786132812
    4. 'end' → logprob: -10.375930786132812
    5. ' de' → logprob: -11.375930786132812
    6. '   ' → logprob: -12.375930786132812
    7. ' ' → logprob: -13.500930786132812
    8. '	de' → logprob: -13.875930786132812
    9. 'decrypt' → logprob: -13.875930786132812
    10. '(de' → logprob: -14.375930786132812

Token 191: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.5048530030981055e-06
    2. '_len' → logprob: -13.500001907348633
    3. 'length' → logprob: -17.750001907348633
    4. '_lengths' → logprob: -17.750001907348633
    5. '_l' → logprob: -18.500001907348633
    6. '```' → logprob: -19.750001907348633
    7. '_depth' → logprob: -20.250001907348633
    8. 'Length' → logprob: -20.375001907348633
    9. '_Length' → logprob: -20.500001907348633
    10. '_LENGTH' → logprob: -20.625001907348633

Token 192: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00044544681441038847
    2. '(' → logprob: -8.000445365905762
    3. 's' → logprob: -9.125445365905762
    4. '(
' → logprob: -14.375445365905762
    5. ' (' → logprob: -15.000445365905762
    6. '('' → logprob: -16.250446319580078
    7. '("("' → logprob: -16.625446319580078
    8. '((' → logprob: -17.375446319580078
    9. '(ss' → logprob: -18.250446319580078
    10. '```' → logprob: -18.750446319580078

Token 193: '[start' (ID: 62179)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.1447349190711975
    2. 's' → logprob: -2.3947348594665527
    3. '[s' → logprob: -3.7697348594665527
    4. '[start' → logprob: -4.519734859466553
    5. '(' → logprob: -5.519734859466553
    6. '(start' → logprob: -5.769734859466553
    7. '[' → logprob: -6.269734859466553
    8. ' s' → logprob: -8.769735336303711
    9. ' (' → logprob: -8.894735336303711
    10. ')' → logprob: -9.019735336303711

Token 194: ':end' (ID: 63990)
  Prédit: ':end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':end' → logprob: -0.0014416613848879933
    2. ':' → logprob: -6.751441478729248
    3. ' :' → logprob: -8.251441955566406
    4. 'end' → logprob: -11.751441955566406
    5. ',end' → logprob: -13.751441955566406
    6. ' ' → logprob: -14.626441955566406
    7. '[end' → logprob: -14.876441955566406
    8. ' end' → logprob: -15.126441955566406
    9. '	end' → logprob: -16.751441955566406
    10. ':semicolon' → logprob: -17.001441955566406

Token 195: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00019328886992298067
    2. '])
' → logprob: -8.87519359588623
    3. ')' → logprob: -10.37519359588623
    4. ']' → logprob: -10.87519359588623
    5. ' ])' → logprob: -13.75019359588623
    6. ''])' → logprob: -15.12519359588623
    7. '])*' → logprob: -15.12519359588623
    8. '])

' → logprob: -15.12519359588623
    9. '"])' → logprob: -15.25019359588623
    10. ')])' → logprob: -15.37519359588623

Token 196: '               ' (ID: 506)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.7105703949928284
    2. '           ' → logprob: -1.7105703353881836
    3. '               ' → logprob: -1.8355703353881836
    4. ' length' → logprob: -1.9605703353881836
    5. '
' → logprob: -3.9605703353881836
    6. ' *' → logprob: -6.210570335388184
    7. ')' → logprob: -6.335570335388184
    8. '[length' → logprob: -6.585570335388184
    9. '*' → logprob: -6.710570335388184
    10. '_length' → logprob: -7.835570335388184

Token 197: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' (adapté à ' length') → logprob: -0.011053716763854027
    2. ' length' → logprob: -4.511053562164307
    3. '               ' → logprob: -12.136054039001465
    4. '           ' → logprob: -15.011054039001465
    5. '
' → logprob: -16.26105308532715
    6. '_length' → logprob: -16.38605308532715
    7. '(length' → logprob: -18.01105308532715
    8. '	length' → logprob: -18.01105308532715
    9. ',length' → logprob: -18.76105308532715
    10. '   ' → logprob: -19.01105308532715

Token 198: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3132777214050293
    2. '+=' → logprob: -1.3132777214050293
    3. '=' → logprob: -12.063278198242188
    4. '+=(' → logprob: -12.188278198242188
    5. ']+=' → logprob: -12.938278198242188
    6. '+' → logprob: -13.313278198242188
    7. '   ' → logprob: -15.563278198242188
    8. ' =' → logprob: -15.813278198242188
    9. '+='' → logprob: -15.938278198242188
    10. ' ' → logprob: -16.188278198242188

Token 199: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.2519790232181549
    2. ' num' → logprob: -1.5019789934158325
    3. ' ' → logprob: -10.626978874206543
    4. 'seq' → logprob: -11.001978874206543
    5. ' seq' → logprob: -12.001978874206543
    6. '	num' → logprob: -14.001978874206543
    7. '   ' → logprob: -14.251978874206543
    8. ' ' → logprob: -15.126978874206543
    9. '  ' → logprob: -15.251978874206543
    10. 'length' → logprob: -15.626978874206543

Token 200: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.25192973017692566
    2. '*' → logprob: -1.501929759979248
    3. ' ' → logprob: -14.50192928314209
    4. ' ' → logprob: -16.001930236816406
    5. '**' → logprob: -17.001930236816406
    6. '`' → logprob: -18.251930236816406
    7. '"' → logprob: -18.501930236816406
    8. '*object' → logprob: -18.626930236816406
    9. '```' → logprob: -19.126930236816406
    10. ' *
' → logprob: -19.126930236816406

Token 201: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.12692968547344208
    2. ' seq' → logprob: -2.126929759979248
    3. '(seq' → logprob: -13.37692928314209
    4. ' ' → logprob: -17.751930236816406
    5. 'sequence' → logprob: -17.876930236816406
    6. ' sequence' → logprob: -18.001930236816406
    7. '_seq' → logprob: -18.126930236816406
    8. 'se' → logprob: -19.876930236816406
    9. '.seq' → logprob: -20.001930236816406
    10. 'sequ' → logprob: -20.751930236816406

Token 202: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: 0.0
    2. 'len' → logprob: -19.625
    3. '_LEN' → logprob: -20.625
    4. '_l' → logprob: -21.25
    5. ' _' → logprob: -21.625
    6. '_length' → logprob: -22.625
    7. 'Len' → logprob: -23.0
    8. '_le' → logprob: -23.375
    9. '__' → logprob: -23.625
    10. '_' → logprob: -23.75

Token 203: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002924587344750762
    2. '
' → logprob: -6.50292444229126
    3. '<|end|>' → logprob: -7.25292444229126
    4. '   ' → logprob: -8.502924919128418
    5. '<|end|>' → logprob: -9.502924919128418
    6. '        
' → logprob: -9.752924919128418
    7. '           ' → logprob: -9.752924919128418
    8. '+' → logprob: -9.752924919128418
    9. '      ' → logprob: -10.377924919128418
    10. '\n' → logprob: -10.627924919128418

Token 204: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008928788010962307
    2. '   ' → logprob: -8.500892639160156
    3. '
' → logprob: -8.625892639160156
    4. '           ' → logprob: -8.875892639160156
    5. ' else' → logprob: -9.250892639160156
    6. 'else' → logprob: -9.375892639160156
    7. '<|end|>' → logprob: -9.625892639160156
    8. '\n' → logprob: -10.750892639160156
    9. '	' → logprob: -11.500892639160156
    10. '+' → logprob: -11.500892639160156

Token 205: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005687495693564415
    2. 'else' (adapté à ' else') → logprob: -5.630687713623047
    3. ' else' → logprob: -6.255687713623047
    4. '
' → logprob: -9.755687713623047
    5. 'elif' → logprob: -9.880687713623047
    6. '   ' → logprob: -10.005687713623047
    7. ' elif' → logprob: -12.130687713623047
    8. '      ' → logprob: -13.505687713623047
    9. '           ' → logprob: -14.130687713623047
    10. '	' → logprob: -14.255687713623047

Token 206: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43029114603996277
    2. ':
' → logprob: -1.0552911758422852
    3. '               ' → logprob: -7.305291175842285
    4. ' :
' → logprob: -7.930291175842285
    5. ' :' → logprob: -8.180291175842285
    6. '           ' → logprob: -8.805291175842285
    7. '            ' → logprob: -10.180291175842285
    8. ':length' → logprob: -10.680291175842285
    9. ' length' → logprob: -11.055291175842285
    10. 'length' → logprob: -11.805291175842285

Token 207: '               ' (ID: 506)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.0022620675154030323
    2. 'length' → logprob: -6.127262115478516
    3. '               ' → logprob: -9.877262115478516
    4. '            ' → logprob: -11.877262115478516
    5. ' return' → logprob: -12.252262115478516
    6. ' i' → logprob: -12.502262115478516
    7. '                ' → logprob: -12.877262115478516
    8. ' #' → logprob: -13.752262115478516
    9. ' pass' → logprob: -13.752262115478516
    10. ' else' → logprob: -14.002262115478516

Token 208: ' #' (ID: 1069)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.06224136799573898
    2. 'length' → logprob: -2.812241315841675
    3. ' pass' → logprob: -9.187241554260254
    4. ' return' → logprob: -9.937241554260254
    5. 'pass' → logprob: -10.937241554260254
    6. ' i' → logprob: -11.062241554260254
    7. ' num' → logprob: -11.187241554260254
    8. ' break' → logprob: -11.187241554260254
    9. ' #' → logprob: -11.187241554260254
    10. 'return' → logprob: -11.562241554260254

Token 209: ' single' (ID: 4590)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.12694554030895233
    2. 'length' → logprob: -2.1269454956054688
    3. ' #' → logprob: -12.501945495605469
    4. ' return' → logprob: -12.626945495605469
    5. ' ' → logprob: -12.876945495605469
    6. '(length' → logprob: -13.501945495605469
    7. '#' → logprob: -14.126945495605469
    8. '    ' → logprob: -14.376945495605469
    9. 'return' → logprob: -14.501945495605469
    10. '           ' → logprob: -14.626945495605469

Token 210: ' letter' (ID: 10263)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.7328093647956848
    2. ' character' → logprob: -1.35780930519104
    3. 'length' → logprob: -2.60780930519104
    4. ' ' → logprob: -2.73280930519104
    5. ')' → logprob: -3.98280930519104
    6. 'character' → logprob: -4.232809543609619
    7. ' )' → logprob: -4.482809543609619
    8. 'char' → logprob: -4.607809543609619
    9. ' digit' → logprob: -4.732809543609619
    10. ' char' → logprob: -4.732809543609619

Token 211: ' after' (ID: 1934)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.07256902754306793
    2. 'length' → logprob: -2.6975691318511963
    3. '           ' → logprob: -6.322568893432617
    4. '               ' → logprob: -7.197568893432617
    5. ' i' → logprob: -10.572568893432617
    6. 'i' → logprob: -11.197568893432617
    7. '   ' → logprob: -11.822568893432617
    8. '            ' → logprob: -11.947568893432617
    9. '_length' → logprob: -12.322568893432617
    10. '                   ' → logprob: -12.447568893432617

Token 212: ' number' (ID: 2086)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.9538001418113708
    2. 'num' → logprob: -1.0788002014160156
    3. ' i' → logprob: -2.2038002014160156
    4. 'i' → logprob: -2.8288002014160156
    5. ' length' → logprob: -3.7038002014160156
    6. ' s' → logprob: -3.8288002014160156
    7. 's' → logprob: -4.078800201416016
    8. ' ' → logprob: -4.078800201416016
    9. 'length' → logprob: -4.078800201416016
    10. ' =' → logprob: -6.953800201416016

Token 213: '
' (ID: 198)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.2980993390083313
    2. 'length' → logprob: -1.4230992794036865
    3. '           ' → logprob: -4.673099517822266
    4. '               ' → logprob: -5.423099517822266
    5. '            ' → logprob: -6.798099517822266
    6. '(length' → logprob: -7.673099517822266
    7. ' +' → logprob: -8.548099517822266
    8. ' i' → logprob: -8.798099517822266
    9. '
' → logprob: -8.923099517822266
    10. '            
' → logprob: -9.298099517822266

Token 214: '               ' (ID: 506)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.08955405652523041
    2. '               ' → logprob: -3.2145540714263916
    3. 'length' → logprob: -3.2145540714263916
    4. '           ' → logprob: -5.4645538330078125
    5. '(length' → logprob: -8.089553833007812
    6. ':
' → logprob: -8.339553833007812
    7. '            ' → logprob: -9.089553833007812
    8. ',length' → logprob: -9.589553833007812
    9. ' and' → logprob: -10.214553833007812
    10. '                ' → logprob: -10.714553833007812

Token 215: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.17989838123321533
    2. 'length' (adapté à ' length') → logprob: -1.8048983812332153
    3. ' if' → logprob: -9.054898262023926
    4. 'if' → logprob: -10.804898262023926
    5. '   ' → logprob: -12.679898262023926
    6. '               ' → logprob: -12.929898262023926
    7. ' i' → logprob: -13.054898262023926
    8. 'num' → logprob: -13.429898262023926
    9. '                ' → logprob: -13.929898262023926
    10. ' num' → logprob: -14.054898262023926

Token 216: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0006272526225075126
    2. '+=' → logprob: -7.375627040863037
    3. ' -=' → logprob: -15.500627517700195
    4. ' ' → logprob: -15.875627517700195
    5. ' ' → logprob: -16.625627517700195
    6. '```' → logprob: -16.875627517700195
    7. ' +' → logprob: -17.250627517700195
    8. ' *=' → logprob: -17.375627517700195
    9. '+' → logprob: -17.875627517700195
    10. ']+=' → logprob: -18.000627517700195

Token 217: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.03377547860145569
    2. ' num' → logprob: -3.408775568008423
    3. '1' → logprob: -9.033775329589844
    4. ' ' → logprob: -12.408775329589844
    5. 'length' → logprob: -13.158775329589844
    6. 'int' → logprob: -13.408775329589844
    7. '(num' → logprob: -14.158775329589844
    8. '0' → logprob: -14.408775329589844
    9. 'len' → logprob: -14.533775329589844
    10. '	num' → logprob: -15.283775329589844

Token 218: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7453470230102539
    2. '<|end|>' → logprob: -0.7453470230102539
    3. ' ' → logprob: -3.620347023010254
    4. '*' → logprob: -4.495347023010254
    5. '
' → logprob: -4.995347023010254
    6. '1' → logprob: -5.995347023010254
    7. '<|end|>' → logprob: -6.620347023010254
    8. '   ' → logprob: -7.745347023010254
    9. ' 
' → logprob: -7.870347023010254
    10. '  ' → logprob: -8.120347023010254

Token 219: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3018416464328766
    2. '           ' → logprob: -1.5518416166305542
    3. '               ' → logprob: -3.1768417358398438
    4. ' else' → logprob: -6.176841735839844
    5. 'else' → logprob: -6.801841735839844
    6. ' elif' → logprob: -6.926841735839844
    7. 'elif' → logprob: -6.926841735839844
    8. 's' → logprob: -7.551841735839844
    9. ' i' → logprob: -7.801841735839844
    10. '   ' → logprob: -8.551841735839844

Token 220: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.20229128003120422
    2. ' i' → logprob: -1.7022912502288818
    3. 'if' → logprob: -8.452291488647461
    4. '   ' → logprob: -9.077291488647461
    5. ' while' → logprob: -9.202291488647461
    6. ' if' → logprob: -9.202291488647461
    7. '           ' → logprob: -9.327291488647461
    8. '       ' → logprob: -9.827291488647461
    9. 'while' → logprob: -10.077291488647461
    10. ' length' → logprob: -10.202291488647461

Token 221: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5762979388237
    2. '+=' → logprob: -0.8262979388237
    3. '+' → logprob: -7.951297760009766
    4. '```' → logprob: -13.451297760009766
    5. '<|end|>' → logprob: -14.201297760009766
    6. ' +' → logprob: -14.326297760009766
    7. '   ' → logprob: -14.451297760009766
    8. ' ' → logprob: -14.576297760009766
    9. '++' → logprob: -14.576297760009766
    10. '    ' → logprob: -14.826297760009766

Token 222: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003357006062287837
    2. ' ' → logprob: -8.000335693359375
    3. '0' → logprob: -15.125335693359375
    4. '   ' → logprob: -18.250335693359375
    5. ' ' → logprob: -19.125335693359375
    6. '  ' → logprob: -19.375335693359375
    7. '```' → logprob: -19.812835693359375
    8. '2' → logprob: -20.000335693359375
    9. '۱' → logprob: -20.562835693359375
    10. '7' → logprob: -20.875335693359375

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '0' → logprob: -17.37502670288086
    4. '   ' → logprob: -19.25002670288086
    5. '  ' → logprob: -20.31252670288086
    6. '１' → logprob: -20.50002670288086
    7. '۱' → logprob: -20.56252670288086
    8. '```' → logprob: -20.75002670288086
    9. '+' → logprob: -20.87502670288086
    10. '१' → logprob: -21.56252670288086

Token 224: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.245724504580721e-05
    2. 'else' → logprob: -9.875092506408691
    3. ' else' → logprob: -11.000092506408691
    4. '   ' → logprob: -11.750092506408691
    5. '<|end|>' → logprob: -11.875092506408691
    6. 'elif' → logprob: -12.250092506408691
    7. '...' → logprob: -14.000092506408691
    8. ')' → logprob: -14.500092506408691
    9. '```' → logprob: -14.750092506408691
    10. '           ' → logprob: -14.750092506408691

Token 225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00037251986213959754
    2. 'else' → logprob: -8.250372886657715
    3. ' else' → logprob: -9.375372886657715
    4. '   ' → logprob: -11.250372886657715
    5. 'elif' → logprob: -12.500372886657715
    6. '```' → logprob: -12.750372886657715
    7. '<|end|>' → logprob: -13.000372886657715
    8. 'return' → logprob: -14.125372886657715
    9. '      ' → logprob: -14.375372886657715
    10. '           ' → logprob: -14.375372886657715

Token 226: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020912738516926765
    2. 'else' (adapté à ' else') → logprob: -4.0209126472473145
    3. ' else' → logprob: -6.0209126472473145
    4. 'elif' → logprob: -8.145913124084473
    5. '   ' → logprob: -10.395913124084473
    6. ' elif' → logprob: -11.520913124084473
    7. '           ' → logprob: -15.145913124084473
    8. '	else' → logprob: -15.145913124084473
    9. '```' → logprob: -15.395913124084473
    10. '	elif' → logprob: -16.145912170410156

Token 227: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007082025986164808
    2. ':
' → logprob: -5.007081985473633
    3. '           ' → logprob: -8.132081985473633
    4. '       ' → logprob: -10.007081985473633
    5. ' :' → logprob: -11.007081985473633
    6. '[' → logprob: -12.632081985473633
    7. 'if' → logprob: -13.757081985473633
    8. '   ' → logprob: -13.757081985473633
    9. ' if' → logprob: -14.007081985473633
    10. ' :
' → logprob: -14.132081985473633

Token 228: '           ' (ID: 352)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.10945767164230347
    2. 'length' → logprob: -2.4844577312469482
    3. '           ' → logprob: -4.234457492828369
    4. '   ' → logprob: -5.359457492828369
    5. '       ' → logprob: -7.109457492828369
    6. ' if' → logprob: -8.859457969665527
    7. '    ' → logprob: -9.609457969665527
    8. 'if' → logprob: -11.359457969665527
    9. ' #' → logprob: -11.359457969665527
    10. ' ' → logprob: -11.484457969665527

Token 229: ' #' (ID: 1069)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.20143575966358185
    2. 'length' → logprob: -1.7014358043670654
    3. '   ' → logprob: -11.951436042785645
    4. '           ' → logprob: -12.326436042785645
    5. ' if' → logprob: -12.326436042785645
    6. '    ' → logprob: -12.951436042785645
    7. '	length' → logprob: -13.451436042785645
    8. '
' → logprob: -14.076436042785645
    9. '       ' → logprob: -14.451436042785645
    10. ' ' → logprob: -14.701436042785645

Token 230: ' normal' (ID: 6078)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.004078997299075127
    2. ' length' → logprob: -5.5040788650512695
    3. '#' → logprob: -15.50407886505127
    4. 'if' → logprob: -15.75407886505127
    5. '   ' → logprob: -16.754079818725586
    6. '	length' → logprob: -17.254079818725586
    7. '           ' → logprob: -17.379079818725586
    8. ' if' → logprob: -19.254079818725586
    9. ' ' → logprob: -19.254079818725586
    10. '
' → logprob: -19.379079818725586

Token 231: ' letter' (ID: 10263)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.160366490483284
    2. ' length' → logprob: -1.9103665351867676
    3. '_length' → logprob: -10.41036605834961
    4. 'letter' → logprob: -10.53536605834961
    5. 'char' → logprob: -10.91036605834961
    6. '           ' → logprob: -11.16036605834961
    7. '   ' → logprob: -11.53536605834961
    8. ' letter' → logprob: -11.53536605834961
    9. 'else' → logprob: -11.66036605834961
    10. 'elif' → logprob: -11.91036605834961

Token 232: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3418745696544647
    2. 'length' → logprob: -1.466874599456787
    3. ' length' → logprob: -2.841874599456787
    4. '   ' → logprob: -8.591874122619629
    5. '       ' → logprob: -9.216874122619629
    6. ',length' → logprob: -9.716874122619629
    7. '
' → logprob: -9.966874122619629
    8. '_length' → logprob: -10.091874122619629
    9. '            
' → logprob: -10.216874122619629
    10. '(length' → logprob: -10.341874122619629

Token 233: '           ' (ID: 352)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.6341245174407959
    2. ' length' → logprob: -0.8841245174407959
    3. '           ' → logprob: -2.884124517440796
    4. '   ' → logprob: -7.509124755859375
    5. '       ' → logprob: -9.884124755859375
    6. '	length' → logprob: -12.134124755859375
    7. '_length' → logprob: -12.884124755859375
    8. '    ' → logprob: -13.009124755859375
    9. '          ' → logprob: -13.134124755859375
    10. ',length' → logprob: -13.634124755859375

Token 234: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' (adapté à ' length') → logprob: -0.0067161982879042625
    2. ' length' → logprob: -5.006716251373291
    3. '   ' → logprob: -14.256715774536133
    4. '           ' → logprob: -16.381715774536133
    5. '	length' → logprob: -16.631715774536133
    6. '    ' → logprob: -17.131715774536133
    7. '       ' → logprob: -17.381715774536133
    8. ' ' → logprob: -18.506715774536133
    9. 'len' → logprob: -19.131715774536133
    10. '
' → logprob: -19.381715774536133

Token 235: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12693755328655243
    2. '+=' → logprob: -2.1269376277923584
    3. '           ' → logprob: -12.376937866210938
    4. '   ' → logprob: -13.001937866210938
    5. ']+=' → logprob: -14.251937866210938
    6. '+' → logprob: -14.751937866210938
    7. '            ' → logprob: -14.751937866210938
    8. '       ' → logprob: -15.001937866210938
    9. '    ' → logprob: -15.126937866210938
    10. '=' → logprob: -15.251937866210938

Token 236: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011047814972698689
    2. ' ' → logprob: -4.511047840118408
    3. '   ' → logprob: -20.51104736328125
    4. ' ' → logprob: -21.01104736328125
    5. 's' → logprob: -22.01104736328125
    6. '۱' → logprob: -22.01104736328125
    7. '```' → logprob: -22.13604736328125
    8. '<|end|>' → logprob: -22.13604736328125
    9. '  ' → logprob: -22.51104736328125
    10. '0' → logprob: -22.51104736328125

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '   ' → logprob: -20.875
    4. '１' → logprob: -21.375
    5. '۱' → logprob: -21.375
    6. '```' → logprob: -22.125
    7. 's' → logprob: -22.25
    8. '१' → logprob: -22.625
    9. '১' → logprob: -23.125
    10. 'len' → logprob: -23.25

Token 238: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042648568749427795
    2. '   ' → logprob: -3.7926485538482666
    3. '           ' → logprob: -4.542648792266846
    4. 'i' → logprob: -5.042648792266846
    5. '
' → logprob: -6.292648792266846
    6. ' i' → logprob: -8.542648315429688
    7. '	i' → logprob: -11.167648315429688
    8. '	   ' → logprob: -11.792648315429688
    9. '```' → logprob: -12.042648315429688
    10. '	' → logprob: -12.292648315429688

Token 239: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16007673740386963
    2. 'i' → logprob: -2.16007661819458
    3. '   ' → logprob: -4.03507661819458
    4. '           ' → logprob: -4.28507661819458
    5. ' i' → logprob: -7.16007661819458
    6. '
' → logprob: -9.035077095031738
    7. '	i' → logprob: -9.785077095031738
    8. '\n' → logprob: -10.535077095031738
    9. '```' → logprob: -10.660077095031738
    10. 'return' → logprob: -10.660077095031738

Token 240: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.001172129064798355
    2. ' i' → logprob: -6.751172065734863
    3. '   ' → logprob: -13.376172065734863
    4. '           ' → logprob: -15.001172065734863
    5. '       ' → logprob: -17.00117301940918
    6. '	i' → logprob: -17.12617301940918
    7. '
' → logprob: -17.25117301940918
    8. '_i' → logprob: -20.62617301940918
    9. '  ' → logprob: -21.37617301940918
    10. '```' → logprob: -21.62617301940918

Token 241: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023290663957595825
    2. ' +=' → logprob: -4.023290634155273
    3. '+' → logprob: -5.273290634155273
    4. '=' → logprob: -15.398290634155273
    5. '+="' → logprob: -15.398290634155273
    6. '+='' → logprob: -16.023290634155273
    7. '++' → logprob: -16.148290634155273
    8. ']+=' → logprob: -16.273290634155273
    9. ' +' → logprob: -17.023290634155273
    10. '```' → logprob: -17.648290634155273

Token 242: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '```' → logprob: -20.250261306762695
    4. '   ' → logprob: -20.625261306762695
    5. ' ' → logprob: -22.875261306762695
    6. '۱' → logprob: -23.250261306762695
    7. '  ' → logprob: -23.375261306762695
    8. '１' → logprob: -23.750261306762695
    9. '0' → logprob: -24.500261306762695
    10. '    ' → logprob: -25.312761306762695

Token 243: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '```' → logprob: -20.75
    4. '۱' → logprob: -21.875
    5. '   ' → logprob: -22.75
    6. '１' → logprob: -23.0
    7. '१' → logprob: -23.5625
    8. '১' → logprob: -24.1875
    9. '
' → logprob: -24.25
    10. '  ' → logprob: -24.8125

Token 244: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7448723912239075
    2. 'return' → logprob: -0.8698723912239075
    3. '
' → logprob: -3.1198723316192627
    4. '<|end|>' → logprob: -3.3698723316192627
    5. ' return' → logprob: -4.119872570037842
    6. '	return' → logprob: -5.244872570037842
    7. ':return' → logprob: -5.994872570037842
    8. '    
' → logprob: -7.119872570037842
    9. ')' → logprob: -7.244872570037842
    10. '```' → logprob: -7.869872570037842

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13726286590099335
    2. 'return' → logprob: -2.1372628211975098
    3. '<|end|>' → logprob: -5.26226282119751
    4. ' return' → logprob: -5.51226282119751
    5. ':return' → logprob: -7.51226282119751
    6. '	return' → logprob: -9.137263298034668
    7. '```' → logprob: -9.387263298034668
    8. ')' → logprob: -9.637263298034668
    9. '}' → logprob: -10.137263298034668
    10. ')return' → logprob: -10.137263298034668

Token 246: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.048763930797576904
    2. ' return' → logprob: -3.2987639904022217
    3. '   ' → logprob: -4.548763751983643
    4. '	return' → logprob: -9.7987642288208
    5. ':return' → logprob: -10.6737642288208
    6. ' ' → logprob: -13.4237642288208
    7. '{return' → logprob: -14.0487642288208
    8. '```' → logprob: -14.4237642288208
    9. '
' → logprob: -14.6737642288208
    10. 'Return' → logprob: -14.6737642288208

Token 247: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.4740770161151886
    2. ' length' → logprob: -0.9740769863128662
    3. '(length' → logprob: -18.724077224731445
    4. '	length' → logprob: -19.224077224731445
    5. '[length' → logprob: -19.974077224731445
    6. '_length' → logprob: -19.974077224731445
    7. ' lenght' → logprob: -20.849077224731445
    8. 'leng' → logprob: -21.474077224731445
    9. ',length' → logprob: -21.974077224731445
    10. 'len' → logprob: -22.224077224731445

Token 248: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 249: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: ' char' (ID: 1826)
  Prédit: ' decompress'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' decompress' → logprob: -0.1643637865781784
    2. ' compress' → logprob: -2.0393638610839844
    3. ' expand' → logprob: -4.789363861083984
    4. ' main' → logprob: -5.164363861083984
    5. ' compressed' → logprob: -6.414363861083984
    6. ' decom' → logprob: -6.914363861083984
    7. ' repeat' → logprob: -7.039363861083984
    8. ' calculate' → logprob: -7.164363861083984
    9. 'compress' → logprob: -7.914363861083984
    10. ' encode' → logprob: -7.914363861083984

Token 251: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.42013081908226013
    2. '_count' → logprob: -1.1701308488845825
    3. 'acters' → logprob: -4.670130729675293
    4. 's' → logprob: -4.920130729675293
    5. 'acter' → logprob: -5.670130729675293
    6. '_index' → logprob: -5.920130729675293
    7. '_length' → logprob: -6.170130729675293
    8. '_frequency' → logprob: -6.170130729675293
    9. '_' → logprob: -6.420130729675293
    10. '_counts' → logprob: -7.045130729675293

Token 252: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4774836301803589
    2. '(s' → logprob: -0.9774836301803589
    3. ' (' → logprob: -5.727483749389648
    4. 's' → logprob: -9.352483749389648
    5. '_index' → logprob: -11.477483749389648
    6. ' ' → logprob: -11.852483749389648
    7. '(index' → logprob: -11.852483749389648
    8. 'def' → logprob: -12.352483749389648
    9. '_' → logprob: -12.477483749389648
    10. '(
' → logprob: -12.727483749389648

Token 253: ',' (ID: 11)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.035317953675985336
    2. '(' → logprob: -3.660317897796631
    3. ',' → logprob: -4.910317897796631
    4. ' (' → logprob: -7.285317897796631
    5. ',s' → logprob: -8.160318374633789
    6. 's' → logprob: -8.535318374633789
    7. ')' → logprob: -8.785318374633789
    8. '   ' → logprob: -9.160318374633789
    9. ' ,' → logprob: -9.285318374633789
    10. '(index' → logprob: -10.785318374633789

Token 254: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.30457964539527893
    2. 'pos' → logprob: -1.8045796155929565
    3. ' index' → logprob: -3.304579734802246
    4. 'idx' → logprob: -3.304579734802246
    5. 'k' → logprob: -4.304579734802246
    6. ' pos' → logprob: -5.054579734802246
    7. ' idx' → logprob: -5.429579734802246
    8. ' k' → logprob: -8.679579734802246
    9. 'i' → logprob: -8.929579734802246
    10. 'n' → logprob: -12.054579734802246

Token 255: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013397661969065666
    2. ',' → logprob: -7.251339912414551
    3. '):
' → logprob: -8.12633991241455
    4. ')' → logprob: -8.25133991241455
    5. ' ):' → logprob: -9.87633991241455
    6. '   ' → logprob: -11.62633991241455
    7. 's' → logprob: -11.75133991241455
    8. ',s' → logprob: -14.00133991241455
    9. ':' → logprob: -14.12633991241455
    10. '):
' → logprob: -14.25133991241455

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003945688367821276
    2. '    ' → logprob: -8.250394821166992
    3. ' i' → logprob: -10.750394821166992
    4. ' if' → logprob: -10.875394821166992
    5. ' def' → logprob: -11.625394821166992
    6. '   ' → logprob: -11.750394821166992
    7. '    
' → logprob: -11.875394821166992
    8. ' #' → logprob: -12.000394821166992
    9. '   ' → logprob: -12.000394821166992
    10. '<|end|>' → logprob: -12.000394821166992

Token 257: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6863173246383667
    2. ' stack' → logprob: -1.0613173246383667
    3. 'stack' → logprob: -3.1863174438476562
    4. '   ' → logprob: -3.4363174438476562
    5. 'if' → logprob: -3.4363174438476562
    6. ' length' → logprob: -3.9363174438476562
    7. ' def' → logprob: -4.811317443847656
    8. ' n' → logprob: -5.436317443847656
    9. ' #' → logprob: -5.561317443847656
    10. 'length' → logprob: -5.811317443847656

Token 258: ' Return' (ID: 6318)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9276793003082275
    2. '#' → logprob: -1.8026793003082275
    3. 'def' → logprob: -2.0526793003082275
    4. 'stack' → logprob: -2.3026793003082275
    5. 'length' → logprob: -2.4276793003082275
    6. ' if' → logprob: -3.8026793003082275
    7. ' stack' → logprob: -3.9276793003082275
    8. 'Return' → logprob: -3.9276793003082275
    9. ' #' → logprob: -4.177679061889648
    10. '   ' → logprob: -4.927679061889648

Token 259: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2645370662212372
    2. ' decom' → logprob: -2.2645370960235596
    3. 'de' → logprob: -2.5145370960235596
    4. ' decompress' → logprob: -3.6395370960235596
    5. 'the' → logprob: -4.5145368576049805
    6. ' '' → logprob: -5.5145368576049805
    7. ' ' → logprob: -6.1395368576049805
    8. ' de' → logprob: -6.8895368576049805
    9. ' length' → logprob: -7.0145368576049805
    10. ' character' → logprob: -7.7645368576049805

Token 260: ' character' (ID: 5855)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.31336793303489685
    2. ' length' → logprob: -2.0633678436279297
    3. 'de' → logprob: -2.4383678436279297
    4. 'character' → logprob: -3.9383678436279297
    5. ' decom' → logprob: -4.06336784362793
    6. ' character' → logprob: -4.06336784362793
    7. 'char' → logprob: -7.93836784362793
    8. 'len' → logprob: -8.81336784362793
    9. 'total' → logprob: -8.93836784362793
    10. ' total' → logprob: -9.06336784362793

Token 261: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.04745003208518028
    2. ' ' → logprob: -3.172450065612793
    3. ' a' → logprob: -6.047450065612793
    4. 'at' → logprob: -6.797450065612793
    5. ' that' → logprob: -8.422450065612793
    6. ' (' → logprob: -9.297450065612793
    7. 'a' → logprob: -9.297450065612793
    8. '(' → logprob: -9.422450065612793
    9. '   ' → logprob: -9.422450065612793
    10. '  ' → logprob: -9.672450065612793

Token 262: ' decom' (ID: 57661)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6682529449462891
    2. ' the' → logprob: -1.168252944946289
    3. ' decom' → logprob: -2.043252944946289
    4. 's' → logprob: -3.668252944946289
    5. 'the' → logprob: -4.918252944946289
    6. 'de' → logprob: -5.293252944946289
    7. ' decompress' → logprob: -6.043252944946289
    8. ' position' → logprob: -6.168252944946289
    9. ' index' → logprob: -6.168252944946289
    10. ' a' → logprob: -7.293252944946289

Token 263: 'pressed' (ID: 26974)
  Prédit: 'pressed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pressed' → logprob: -0.000591874762903899
    2. 'p' → logprob: -7.50059175491333
    3. 'press' → logprob: -10.875592231750488
    4. 'pr' → logprob: -11.000592231750488
    5. 'pres' → logprob: -14.375592231750488
    6. '   ' → logprob: -14.375592231750488
    7. 'r' → logprob: -14.625592231750488
    8. 'pression' → logprob: -14.625592231750488
    9. '_pressed' → logprob: -15.125592231750488
    10. '```' → logprob: -15.125592231750488

Token 264: ' string' (ID: 1621)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.6250362992286682
    2. '_' → logprob: -0.8750362992286682
    3. ' _' → logprob: -3.5000362396240234
    4. ' length' → logprob: -4.500036239624023
    5. 'length' → logprob: -6.000036239624023
    6. '_string' → logprob: -6.375036239624023
    7. '_index' → logprob: -7.250036239624023
    8. '_position' → logprob: -7.250036239624023
    9. '_size' → logprob: -8.500036239624023
    10. '_s' → logprob: -8.750036239624023

Token 265: ' position' (ID: 4010)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.15918657183647156
    2. '(' → logprob: -2.284186601638794
    3. '_at' → logprob: -4.409186363220215
    4. '_length' → logprob: -4.409186363220215
    5. '(
' → logprob: -5.034186363220215
    6. ' at' → logprob: -5.534186363220215
    7. 'def' → logprob: -5.909186363220215
    8. ' (' → logprob: -6.034186363220215
    9. 'length' → logprob: -6.409186363220215
    10. 'at' → logprob: -6.659186363220215

Token 266: ' index' (ID: 3472)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.55168217420578
    2. '(s' → logprob: -1.1766822338104248
    3. '(' → logprob: -2.176682233810425
    4. ' ' → logprob: -7.426681995391846
    5. 's' → logprob: -7.801681995391846
    6. ' at' → logprob: -7.801681995391846
    7. '(index' → logprob: -8.301682472229004
    8. '(
' → logprob: -8.551682472229004
    9. '   ' → logprob: -9.051682472229004
    10. ' s' → logprob: -9.051682472229004

Token 267: ' or' (ID: 503)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7200731039047241
    2. '   ' → logprob: -1.0950731039047241
    3. '(s' → logprob: -1.8450731039047241
    4. ' (' → logprob: -4.345073223114014
    5. ':' → logprob: -5.345073223114014
    6. ',' → logprob: -7.220073223114014
    7. '(
' → logprob: -7.470073223114014
    8. 'def' → logprob: -7.970073223114014
    9. ' ' → logprob: -8.470072746276855
    10. '  ' → logprob: -8.720072746276855

Token 268: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7987850308418274
    2. 'None' → logprob: -1.0487849712371826
    3. ' None' → logprob: -1.6737849712371826
    4. ' '' → logprob: -5.423785209655762
    5. ''\' → logprob: -5.798785209655762
    6. '   ' → logprob: -6.798785209655762
    7. 'def' → logprob: -7.298785209655762
    8. ' raise' → logprob: -7.923785209655762
    9. 's' → logprob: -8.048785209655762
    10. ''s' → logprob: -8.048785209655762

Token 269: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07703607529401779
    2. ' '' → logprob: -3.202036142349243
    3. 'None' → logprob: -3.952036142349243
    4. ' None' → logprob: -4.452035903930664
    5. '''' → logprob: -7.827035903930664
    6. ' ''' → logprob: -8.202035903930664
    7. '?'' → logprob: -8.202035903930664
    8. '\n' → logprob: -8.327035903930664
    9. '"' → logprob: -8.827035903930664
    10. '?' → logprob: -8.827035903930664

Token 270: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -3.1186566047836095e-05
    2. ' '' → logprob: -11.000031471252441
    3. '')' → logprob: -13.000031471252441
    4. ''
' → logprob: -13.250031471252441
    5. ' if' → logprob: -13.375031471252441
    6. ''''' → logprob: -13.625031471252441
    7. 'if' → logprob: -13.875031471252441
    8. '"' → logprob: -14.000031471252441
    9. '''' → logprob: -14.125031471252441
    10. 'f' → logprob: -14.250031471252441

Token 271: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.008593653328716755
    2. 'def' → logprob: -5.633593559265137
    3. ',' → logprob: -6.008593559265137
    4. '   ' → logprob: -6.883593559265137
    5. 'if' → logprob: -7.758593559265137
    6. ' def' → logprob: -8.133593559265137
    7. ' ' → logprob: -8.508593559265137
    8. ''' → logprob: -9.008593559265137
    9. '    ' → logprob: -9.258593559265137
    10. ' for' → logprob: -9.383593559265137

Token 272: ' out' (ID: 842)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.3132660686969757
    2. 'index' → logprob: -1.3132660388946533
    3. '   ' → logprob: -12.563265800476074
    4. ' ' → logprob: -14.188265800476074
    5. '	index' → logprob: -16.68826675415039
    6. ' not' → logprob: -17.06326675415039
    7. '#index' → logprob: -17.31326675415039
    8. '  ' → logprob: -17.93826675415039
    9. '(index' → logprob: -17.93826675415039
    10. '```' → logprob: -18.18826675415039

Token 273: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0051310500130057335
    2. 'of' → logprob: -5.380131244659424
    3. '_of' → logprob: -7.755131244659424
    4. ' if' → logprob: -9.880130767822266
    5. '=' → logprob: -11.505130767822266
    6. 'Of' → logprob: -12.255130767822266
    7. '   ' → logprob: -12.505130767822266
    8. 'if' → logprob: -13.005130767822266
    9. '0' → logprob: -13.130130767822266
    10. '-of' → logprob: -13.130130767822266

Token 274: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10069604218006134
    2. 'bounds' → logprob: -2.350696086883545
    3. 'bound' → logprob: -8.100695610046387
    4. 'length' → logprob: -9.600695610046387
    5. ' range' → logprob: -9.725695610046387
    6. 'index' → logprob: -10.100695610046387
    7. ' bounds' → logprob: -11.350695610046387
    8. 'de' → logprob: -13.600695610046387
    9. '
' → logprob: -13.850695610046387
    10. '_bounds' → logprob: -13.975695610046387

Token 275: '
' (ID: 198)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.9907091856002808
    2. '   ' → logprob: -1.1157091856002808
    3. '(' → logprob: -1.3657091856002808
    4. ':' → logprob: -3.3657093048095703
    5. ' (' → logprob: -5.49070930480957
    6. ' def' → logprob: -6.24070930480957
    7. 'def' → logprob: -6.24070930480957
    8. '(
' → logprob: -7.49070930480957
    9. ' :' → logprob: -7.86570930480957
    10. ',' → logprob: -7.86570930480957

Token 276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024267466738820076
    2. ':' → logprob: -3.7742674350738525
    3. ':
' → logprob: -8.149267196655273
    4. ' :' → logprob: -8.649267196655273
    5. ' def' → logprob: -9.649267196655273
    6. '    
' → logprob: -9.774267196655273
    7. ',' → logprob: -9.774267196655273
    8. ' if' → logprob: -10.024267196655273
    9. '(' → logprob: -10.149267196655273
    10. ' (' → logprob: -10.399267196655273

Token 277: ' n' (ID: 297)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.34869280457496643
    2. ' n' → logprob: -1.723692774772644
    3. ' if' → logprob: -2.8486928939819336
    4. ' length' → logprob: -3.0986928939819336
    5. '   ' → logprob: -5.598692893981934
    6. ' def' → logprob: -5.848692893981934
    7. 'stack' → logprob: -6.098692893981934
    8. ' i' → logprob: -6.348692893981934
    9. 'n' (adapté à ' n') → logprob: -6.473692893981934
    10. ' space' → logprob: -8.473692893981934

Token 278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.632952094078064
    2. '=' → logprob: -0.757952094078064
    3. '   ' → logprob: -8.132951736450195
    4. ')' → logprob: -10.632951736450195
    5. '  ' → logprob: -11.632951736450195
    6. ',' → logprob: -12.132951736450195
    7. ' ' → logprob: -12.632951736450195
    8. 's' → logprob: -13.007951736450195
    9. '    ' → logprob: -13.007951736450195
    10. '[' → logprob: -13.507951736450195

Token 279: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.08090050518512726
    2. 'de' → logprob: -2.5809004306793213
    3. ' len' → logprob: -6.4559006690979
    4. ' decompress' → logprob: -8.205900192260742
    5. '   ' → logprob: -9.705900192260742
    6. 'length' → logprob: -10.330900192260742
    7. ' decom' → logprob: -10.330900192260742
    8. ' de' → logprob: -11.330900192260742
    9. ' ' → logprob: -11.955900192260742
    10. '(len' → logprob: -12.330900192260742

Token 280: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.004088373854756355
    2. 's' → logprob: -5.504088401794434
    3. '(' → logprob: -11.629088401794434
    4. ')' → logprob: -14.254088401794434
    5. ' (' → logprob: -15.254088401794434
    6. ' s' → logprob: -16.254087448120117
    7. '(
' → logprob: -17.879087448120117
    8. 'n' → logprob: -18.129087448120117
    9. 'a' → logprob: -18.629087448120117
    10. '```' → logprob: -18.879087448120117

Token 281: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029761025682091713
    2. ')
' → logprob: -3.5297610759735107
    3. '   ' → logprob: -11.90476131439209
    4. ' )' → logprob: -12.90476131439209
    5. ')
' → logprob: -14.15476131439209
    6. ' )
' → logprob: -15.15476131439209
    7. ')n' → logprob: -15.77976131439209
    8. ')

' → logprob: -16.654760360717773
    9. ' ' → logprob: -17.779760360717773
    10. ')s' → logprob: -18.404760360717773

Token 282: '   ' (ID: 271)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.09964659810066223
    2. ' stack' → logprob: -3.22464656829834
    3. 'i' → logprob: -3.47464656829834
    4. '   ' → logprob: -4.22464656829834
    5. 'length' → logprob: -5.09964656829834
    6. 'def' → logprob: -6.97464656829834
    7. ' i' → logprob: -6.97464656829834
    8. 'pos' → logprob: -7.34964656829834
    9. 'if' → logprob: -8.47464656829834
    10. ' length' → logprob: -8.59964656829834

Token 283: ' i' (ID: 575)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.1992247849702835
    2. 'i' (adapté à ' i') → logprob: -2.4492247104644775
    3. 'length' → logprob: -3.0742247104644775
    4. 'def' → logprob: -3.8242247104644775
    5. 'if' → logprob: -3.8242247104644775
    6. 'pos' → logprob: -5.574224948883057
    7. '   ' → logprob: -8.699224472045898
    8. ' stack' → logprob: -9.574224472045898
    9. 'result' → logprob: -9.949224472045898
    10. 'start' → logprob: -10.074224472045898

Token 284: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132842779159546
    2. '=' → logprob: -1.3132842779159546
    3. ' ' → logprob: -10.938283920288086
    4. ' +=' → logprob: -13.563283920288086
    5. '<|end|>' → logprob: -13.563283920288086
    6. '0' → logprob: -14.063283920288086
    7. ',' → logprob: -15.063283920288086
    8. ')' → logprob: -15.313283920288086
    9. '   ' → logprob: -15.438283920288086
    10. ' =
' → logprob: -15.563283920288086

Token 285: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '۰' → logprob: -17.000028610229492
    4. '   ' → logprob: -17.250028610229492
    5. '[' → logprob: -17.875028610229492
    6. '```' → logprob: -18.000028610229492
    7. 'def' → logprob: -18.062528610229492
    8. '=' → logprob: -18.812528610229492
    9. '<|end|>' → logprob: -18.812528610229492
    10. 'i' → logprob: -18.875028610229492

Token 286: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. 'index' → logprob: -16.125003814697266
    4. 'i' → logprob: -16.625003814697266
    5. '1' → logprob: -18.500003814697266
    6. '   ' → logprob: -18.562503814697266
    7. 'def' → logprob: -18.625003814697266
    8. 's' → logprob: -18.812503814697266
    9. '[' → logprob: -18.875003814697266
    10. '۰' → logprob: -18.875003814697266

Token 287: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0855027437210083
    2. '<|end|>' → logprob: -1.0855027437210083
    3. ' 
' → logprob: -1.3355027437210083
    4. ' ,' → logprob: -4.210502624511719
    5. '
' → logprob: -4.210502624511719
    6. ' length' → logprob: -4.585502624511719
    7. ',' → logprob: -5.085502624511719
    8. ' while' → logprob: -5.335502624511719
    9. '   ' → logprob: -5.960502624511719
    10. '  
' → logprob: -6.085502624511719

Token 288: '   ' (ID: 271)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.02941972389817238
    2. 'length' → logprob: -4.529419898986816
    3. '   ' → logprob: -4.779419898986816
    4. ' while' → logprob: -5.029419898986816
    5. ' 
' → logprob: -6.904419898986816
    6. ' ' → logprob: -7.154419898986816
    7. ' pos' → logprob: -8.154419898986816
    8. ' stack' → logprob: -8.654419898986816
    9. ' current' → logprob: -8.904419898986816
    10. '    ' → logprob: -9.029419898986816

Token 289: ' while' (ID: 2049)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.6552577614784241
    2. 'length' → logprob: -0.9052577614784241
    3. 'pos' → logprob: -2.7802577018737793
    4. 'offset' → logprob: -5.530257701873779
    5. 'while' (adapté à ' while') → logprob: -5.905257701873779
    6. 'curr' → logprob: -6.280257701873779
    7. 'current' → logprob: -6.405257701873779
    8. 'cur' → logprob: -7.155257701873779
    9. 'de' → logprob: -7.280257701873779
    10. 'position' → logprob: -7.780257701873779

Token 290: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11494454741477966
    2. ' i' → logprob: -2.2399444580078125
    3. 'index' → logprob: -6.3649444580078125
    4. ' index' → logprob: -8.614944458007812
    5. 'True' → logprob: -9.114944458007812
    6. ' True' → logprob: -9.239944458007812
    7. '   ' → logprob: -12.239944458007812
    8. '	i' → logprob: -13.364944458007812
    9. ' ' → logprob: -13.739944458007812
    10. 'n' → logprob: -14.114944458007812

Token 291: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.014791624620556831
    2. '<' → logprob: -4.264791488647461
    3. '<n' → logprob: -7.389791488647461
    4. ' ' → logprob: -12.764791488647461
    5. '<s' → logprob: -12.764791488647461
    6. '<len' → logprob: -13.139791488647461
    7. '<|end|>' → logprob: -14.264791488647461
    8. '[' → logprob: -14.389791488647461
    9. ' <
' → logprob: -14.639791488647461
    10. 'n' → logprob: -15.514791488647461

Token 292: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007291130605153739
    2. 'len' → logprob: -7.375729084014893
    3. ' n' → logprob: -9.25072956085205
    4. 'i' → logprob: -12.75072956085205
    5. '   ' → logprob: -13.50072956085205
    6. ' len' → logprob: -14.12572956085205
    7. 'index' → logprob: -14.50072956085205
    8. ' ' → logprob: -15.12572956085205
    9. '	n' → logprob: -15.62572956085205
    10. 'length' → logprob: -15.87572956085205

Token 293: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07532478868961334
    2. ':
' → logprob: -2.700324773788452
    3. ' and' → logprob: -5.325325012207031
    4. '       ' → logprob: -8.700325012207031
    5. 'and' → logprob: -8.950325012207031
    6. '   ' → logprob: -9.200325012207031
    7. ' :' → logprob: -10.700325012207031
    8. '):
' → logprob: -11.075325012207031
    9. '<|end|>' → logprob: -11.325325012207031
    10. ',' → logprob: -11.450325012207031

Token 294: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10926831513643265
    2. ' if' → logprob: -2.3592684268951416
    3. 'if' → logprob: -5.1092681884765625
    4. '   ' → logprob: -5.9842681884765625
    5. ' ' → logprob: -8.859268188476562
    6. '    ' → logprob: -8.984268188476562
    7. '<|end|>' → logprob: -9.984268188476562
    8. '	if' → logprob: -10.234268188476562
    9. '	' → logprob: -10.359268188476562
    10. '	   ' → logprob: -11.109268188476562

Token 295: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2548222243785858
    2. 'if' (adapté à ' if') → logprob: -1.5048222541809082
    3. '       ' → logprob: -5.879822254180908
    4. '   ' → logprob: -9.62982177734375
    5. ' ' → logprob: -11.37982177734375
    6. '    ' → logprob: -12.37982177734375
    7. '	if' → logprob: -12.75482177734375
    8. '        ' → logprob: -13.00482177734375
    9. 's' → logprob: -13.25482177734375
    10. '  ' → logprob: -14.00482177734375

Token 296: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0024787469301372766
    2. ' s' → logprob: -6.00247859954834
    3. 'not' → logprob: -13.62747859954834
    4. 'i' → logprob: -14.12747859954834
    5. ' not' → logprob: -14.25247859954834
    6. 'index' → logprob: -15.12747859954834
    7. '   ' → logprob: -16.377479553222656
    8. ' i' → logprob: -17.127479553222656
    9. '`s' → logprob: -17.127479553222656
    10. 'isdigit' → logprob: -17.127479553222656

Token 297: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.392202976712724e-06
    2. '[' → logprob: -12.000006675720215
    3. '[I' → logprob: -15.625006675720215
    4. '```' → logprob: -17.3750057220459
    5. ' [' → logprob: -17.5000057220459
    6. 'i' → logprob: -17.6250057220459
    7. '   ' → logprob: -17.8750057220459
    8. '[
' → logprob: -18.2500057220459
    9. '[j' → logprob: -18.8750057220459
    10. '[index' → logprob: -19.3750057220459

Token 298: '].' (ID: 1651)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.28029704093933105
    2. '.is' → logprob: -1.655297040939331
    3. '].' → logprob: -3.155297040939331
    4. ').' → logprob: -4.90529727935791
    5. ' .' → logprob: -6.15529727935791
    6. 'isdigit' → logprob: -7.40529727935791
    7. '}.' → logprob: -8.15529727935791
    8. '>.' → logprob: -8.90529727935791
    9. 's' → logprob: -9.53029727935791
    10. ''.' → logprob: -10.03029727935791

Token 299: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -2.4272752852994017e-05
    2. 'digit' → logprob: -10.75002384185791
    3. 'is' → logprob: -13.25002384185791
    4. 'isd' → logprob: -13.87502384185791
    5. ' is' → logprob: -17.250024795532227
    6. 'isal' → logprob: -17.500024795532227
    7. 'iss' → logprob: -18.250024795532227
    8. 'digits' → logprob: -18.750024795532227
    9. 'isl' → logprob: -19.375024795532227
    10. 'd' → logprob: -20.875024795532227

Token 300: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.02993040718138218
    2. '():
' → logprob: -3.529930353164673
    3. '()' → logprob: -8.779930114746094
    4. ' ():' → logprob: -10.779930114746094
    5. '():

' → logprob: -13.279930114746094
    6. '(' → logprob: -13.529930114746094
    7. '():
' → logprob: -13.904930114746094
    8. ':' → logprob: -14.029930114746094
    9. '()>' → logprob: -15.404930114746094
    10. '()==' → logprob: -15.904930114746094

Token 301: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03108161687850952
    2. ' ' → logprob: -4.656081676483154
    3. '       ' → logprob: -5.156081676483154
    4. ' #' → logprob: -5.781081676483154
    5. ':
' → logprob: -6.406081676483154
    6. '#' → logprob: -6.656081676483154
    7. '   ' → logprob: -6.781081676483154
    8. '		' → logprob: -6.906081676483154
    9. ':' → logprob: -7.156081676483154
    10. ' num' → logprob: -7.281081676483154

Token 302: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.1649891138076782
    2. ' #' → logprob: -1.2899891138076782
    3. 'num' → logprob: -1.9149891138076782
    4. '           ' → logprob: -2.0399889945983887
    5. ' num' → logprob: -2.0399889945983887
    6. ' ' → logprob: -6.039988994598389
    7. '       ' → logprob: -6.289988994598389
    8. '   ' → logprob: -7.914988994598389
    9. '```' → logprob: -8.539989471435547
    10. '
' → logprob: -8.789989471435547

Token 303: ' get' (ID: 717)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.006890961900353432
    2. '#' → logprob: -5.006890773773193
    3. ' num' → logprob: -8.881891250610352
    4. '           ' → logprob: -10.506891250610352
    5. ' #' → logprob: -11.881891250610352
    6. 'start' → logprob: -13.881891250610352
    7. ' ' → logprob: -15.381891250610352
    8. '```' → logprob: -15.381891250610352
    9. 'j' → logprob: -15.756891250610352
    10. '       ' → logprob: -15.881891250610352

Token 304: ' repeat' (ID: 22962)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.018170664086937904
    2. ' num' → logprob: -4.0181708335876465
    3. '           ' → logprob: -11.768170356750488
    4. 'j' → logprob: -12.268170356750488
    5. 'number' → logprob: -12.518170356750488
    6. '	num' → logprob: -13.768170356750488
    7. '               ' → logprob: -14.268170356750488
    8. 'n' → logprob: -14.643170356750488
    9. ' ' → logprob: -14.768170356750488
    10. '            ' → logprob: -14.768170356750488

Token 305: ' number' (ID: 2086)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.126441240310669
    2. 'count' → logprob: -1.126441240310669
    3. ' count' → logprob: -2.126441240310669
    4. '_count' → logprob: -2.251441240310669
    5. ' ' → logprob: -3.126441240310669
    6. ' num' → logprob: -3.251441240310669
    7. '_num' → logprob: -3.626441240310669
    8. 'ed' → logprob: -4.87644100189209
    9. ' =' → logprob: -6.12644100189209
    10. ' number' → logprob: -6.75144100189209

Token 306: '
' (ID: 198)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.565997838973999
    2. ' num' → logprob: -0.940997838973999
    3. '=' → logprob: -3.815997838973999
    4. ' =' → logprob: -4.815998077392578
    5. '           ' → logprob: -4.940998077392578
    6. ' ' → logprob: -5.815998077392578
    7. '=num' → logprob: -7.815998077392578
    8. ':' → logprob: -8.065998077392578
    9. '(num' → logprob: -8.315998077392578
    10. '	num' → logprob: -8.565998077392578

Token 307: '           ' (ID: 352)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.5712979435920715
    2. ' num' → logprob: -0.9462979435920715
    3. '           ' → logprob: -3.5712978839874268
    4. ' ' → logprob: -4.071298122406006
    5. ' ' → logprob: -8.071297645568848
    6. '	num' → logprob: -8.196297645568848
    7. '```' → logprob: -8.571297645568848
    8. '            ' → logprob: -8.946297645568848
    9. '       ' → logprob: -9.071297645568848
    10. '   ' → logprob: -9.196297645568848

Token 308: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.020563142374157906
    2. ' num' → logprob: -3.8955631256103516
    3. '           ' → logprob: -11.145563125610352
    4. ' ' → logprob: -13.020563125610352
    5. 'j' → logprob: -13.770563125610352
    6. 'repeat' → logprob: -14.145563125610352
    7. '	num' → logprob: -14.520563125610352
    8. '```' → logprob: -14.645563125610352
    9. '   ' → logprob: -14.770563125610352
    10. 'count' → logprob: -15.395563125610352

Token 309: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029752103611826897
    2. '=' → logprob: -3.529752016067505
    3. ' ' → logprob: -13.529751777648926
    4. ')' → logprob: -16.154752731323242
    5. ' ' → logprob: -16.654752731323242
    6. ',' → logprob: -17.404752731323242
    7. 'space' → logprob: -17.404752731323242
    8. '_' → logprob: -17.654752731323242
    9. 's' → logprob: -17.654752731323242
    10. '           ' → logprob: -17.779752731323242

Token 310: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011047814972698689
    2. ' ' → logprob: -4.511047840118408
    3. 'int' → logprob: -19.13604736328125
    4. '           ' → logprob: -20.63604736328125
    5. 'num' → logprob: -21.13604736328125
    6. ' ' → logprob: -21.13604736328125
    7. ' int' → logprob: -21.26104736328125
    8. '۰' → logprob: -21.51104736328125
    9. '   ' → logprob: -21.88604736328125
    10. '    ' → logprob: -22.26104736328125

Token 311: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. 'int' → logprob: -19.000001907348633
    4. '""' → logprob: -19.250001907348633
    5. '۰' → logprob: -21.875001907348633
    6. '''' → logprob: -22.000001907348633
    7. '   ' → logprob: -22.000001907348633
    8. '"' → logprob: -22.250001907348633
    9. 'num' → logprob: -22.875001907348633
    10. '```' → logprob: -23.125001907348633

Token 312: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028394922614097595
    2. '            ' → logprob: -4.52839469909668
    3. ' 
' → logprob: -5.15339469909668
    4. ' ' → logprob: -5.65339469909668
    5. '               ' → logprob: -5.77839469909668
    6. 'while' → logprob: -6.15339469909668
    7. ' while' → logprob: -6.52839469909668
    8. '
' → logprob: -8.27839469909668
    9. '=' → logprob: -8.77839469909668
    10. '            
' → logprob: -8.90339469909668

Token 313: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5726855993270874
    2. ' i' → logprob: -1.5726855993270874
    3. 'i' → logprob: -2.072685718536377
    4. '            ' → logprob: -3.447685718536377
    5. ' while' → logprob: -3.572685718536377
    6. '               ' → logprob: -4.072685718536377
    7. ' ' → logprob: -4.197685718536377
    8. 'while' → logprob: -4.947685718536377
    9. ' 
' → logprob: -6.072685718536377
    10. '                ' → logprob: -8.322685241699219

Token 314: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7727004885673523
    2. 'while' (adapté à ' while') → logprob: -1.022700548171997
    3. 'i' → logprob: -2.522700548171997
    4. '           ' → logprob: -3.022700548171997
    5. ' i' → logprob: -3.647700548171997
    6. '            ' → logprob: -4.397700309753418
    7. ' ' → logprob: -5.022700309753418
    8. '               ' → logprob: -6.397700309753418
    9. ' 
' → logprob: -6.647700309753418
    10. '0' → logprob: -6.772700309753418

Token 315: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1128639429807663
    2. 'i' → logprob: -2.2378640174865723
    3. ' s' → logprob: -10.612863540649414
    4. 's' → logprob: -11.362863540649414
    5. ' ' → logprob: -12.612863540649414
    6. 'index' → logprob: -14.362863540649414
    7. ' index' → logprob: -14.612863540649414
    8. '(i' → logprob: -15.362863540649414
    9. '    ' → logprob: -15.987863540649414
    10. '   ' → logprob: -16.112863540649414

Token 316: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0004989399458281696
    2. '<' → logprob: -7.6254987716674805
    3. '<n' → logprob: -11.50049877166748
    4. ' ' → logprob: -14.50049877166748
    5. '<s' → logprob: -16.250499725341797
    6. '<len' → logprob: -16.875499725341797
    7. '[' → logprob: -17.125499725341797
    8. '+' → logprob: -17.375499725341797
    9. ' +' → logprob: -18.000499725341797
    10. '<N' → logprob: -18.125499725341797

Token 317: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5759396553039551
    2. ' n' → logprob: -0.8259396553039551
    3. '<n' → logprob: -15.700939178466797
    4. '	n' → logprob: -16.075939178466797
    5. ')n' → logprob: -17.950939178466797
    6. '=n' → logprob: -18.450939178466797
    7. 'i' → logprob: -18.450939178466797
    8. '_n' → logprob: -18.825939178466797
    9. ' ' → logprob: -19.075939178466797
    10. 'len' → logprob: -19.575939178466797

Token 318: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03804252669215202
    2. 'and' → logprob: -3.2880425453186035
    3. '           ' → logprob: -15.038042068481445
    4. ' ' → logprob: -15.163042068481445
    5. '	and' → logprob: -16.163042068481445
    6. '    ' → logprob: -16.788042068481445
    7. '        ' → logprob: -16.913042068481445
    8. '            ' → logprob: -16.913042068481445
    9. '   ' → logprob: -16.913042068481445
    10. ' и' → logprob: -17.288042068481445

Token 319: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2014172375202179
    2. ' s' → logprob: -1.7014172077178955
    3. 'isdigit' → logprob: -14.076416969299316
    4. 'i' → logprob: -14.326416969299316
    5. '	s' → logprob: -14.451416969299316
    6. '   ' → logprob: -14.701416969299316
    7. ' ' → logprob: -14.951416969299316
    8. '(s' → logprob: -14.951416969299316
    9. 'int' → logprob: -15.576416969299316
    10. '0' → logprob: -15.951416969299316

Token 320: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.5
    3. '[
' → logprob: -18.125
    4. 'i' → logprob: -18.25
    5. '[I' → logprob: -18.375
    6. '```' → logprob: -18.5
    7. '   ' → logprob: -19.5
    8. ' [' → logprob: -20.375
    9. '[index' → logprob: -20.625
    10. '
' → logprob: -20.625

Token 321: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0644589439034462
    2. '[i' → logprob: -2.8144588470458984
    3. '.' → logprob: -6.689458847045898
    4. '.is' → logprob: -7.689458847045898
    5. ']' → logprob: -8.314458847045898
    6. '[' → logprob: -8.439458847045898
    7. 's' → logprob: -8.564458847045898
    8. 'isdigit' → logprob: -10.064458847045898
    9. ' .' → logprob: -10.689458847045898
    10. '   ' → logprob: -11.314458847045898

Token 322: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -2.45848218582978e-06
    2. 'digit' → logprob: -13.12500286102295
    3. ' is' → logprob: -14.87500286102295
    4. 'isd' → logprob: -16.500001907348633
    5. 'digits' → logprob: -18.375001907348633
    6. '0' → logprob: -19.625001907348633
    7. '1' → logprob: -19.875001907348633
    8. 'i' → logprob: -20.750001907348633
    9. '.is' → logprob: -20.750001907348633
    10. 's' → logprob: -21.250001907348633

Token 323: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.39046362042427063
    2. '():
' → logprob: -1.1404635906219482
    3. '()' → logprob: -5.640463829040527
    4. '():

' → logprob: -11.140463829040527
    5. '():
' → logprob: -11.890463829040527
    6. ':' → logprob: -12.265463829040527
    7. '()[' → logprob: -13.140463829040527
    8. ' ():' → logprob: -13.265463829040527
    9. '()>' → logprob: -13.765463829040527
    10. '()):
' → logprob: -13.890463829040527

Token 324: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015704913064837456
    2. 'num' → logprob: -5.015705108642578
    3. ' num' → logprob: -5.265705108642578
    4. ':
' → logprob: -6.515705108642578
    5. ':' → logprob: -6.765705108642578
    6. '           ' → logprob: -7.640705108642578
    7. '{
' → logprob: -8.515705108642578
    8. '   ' → logprob: -8.890705108642578
    9. '):
' → logprob: -9.515705108642578
    10. ' i' → logprob: -10.140705108642578

Token 325: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.03822347894310951
    2. 'num' (adapté à ' num') → logprob: -3.2882235050201416
    3. ' ' → logprob: -8.663223266601562
    4. ' ' → logprob: -12.663223266601562
    5. ' 
' → logprob: -13.413223266601562
    6. '	num' → logprob: -13.413223266601562
    7. '               ' → logprob: -13.663223266601562
    8. ' i' → logprob: -14.413223266601562
    9. '   ' → logprob: -15.163223266601562
    10. 'i' → logprob: -15.413223266601562

Token 326: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038337405771017075
    2. '=' → logprob: -3.288337469100952
    3. ' +=' → logprob: -8.288337707519531
    4. ' ' → logprob: -11.038337707519531
    5. '+=' → logprob: -11.038337707519531
    6. ')' → logprob: -12.413337707519531
    7. ' *=' → logprob: -12.538337707519531
    8. ' <<=' → logprob: -14.413337707519531
    9. '=num' → logprob: -14.538337707519531
    10. '    ' → logprob: -14.788337707519531

Token 327: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.02328508161008358
    2. 'num' → logprob: -3.773285150527954
    3. ' ' → logprob: -10.148284912109375
    4. '	num' → logprob: -15.648284912109375
    5. '(num' → logprob: -16.398284912109375
    6. ' ' → logprob: -16.523284912109375
    7. '0' → logprob: -18.398284912109375
    8. '[num' → logprob: -18.398284912109375
    9. ',num' → logprob: -18.398284912109375
    10. '=num' → logprob: -18.773284912109375

Token 328: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0011655801208689809
    2. ' ' → logprob: -7.126165390014648
    3. '*' → logprob: -8.001165390014648
    4. ' ' → logprob: -10.876165390014648
    5. ' _' → logprob: -13.251165390014648
    6. '        ' → logprob: -14.376165390014648
    7. 's' → logprob: -14.501165390014648
    8. '_' → logprob: -14.501165390014648
    9. 'num' → logprob: -14.751165390014648
    10. ' +' → logprob: -14.751165390014648

Token 329: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.002475777640938759
    2. ' ' → logprob: -6.002475738525391
    3. '1' → logprob: -17.50247573852539
    4. 'int' → logprob: -19.37747573852539
    5. '   ' → logprob: -19.50247573852539
    6. '```' → logprob: -19.50247573852539
    7. '=' → logprob: -19.75247573852539
    8. '0' → logprob: -20.25247573852539
    9. ' ' → logprob: -21.50247573852539
    10. '  ' → logprob: -21.75247573852539

Token 330: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. 'int' → logprob: -18.87500762939453
    4. '0' → logprob: -19.62500762939453
    5. '1' → logprob: -20.00000762939453
    6. '```' → logprob: -21.12500762939453
    7. '   ' → logprob: -21.50000762939453
    8. '
' → logprob: -22.50000762939453
    9. '  ' → logprob: -23.37500762939453
    10. '=' → logprob: -23.62500762939453

Token 331: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2014141082763672
    2. ' +' → logprob: -1.7014141082763672
    3. '+i' → logprob: -14.951414108276367
    4. ' ' → logprob: -15.576414108276367
    5. '10' → logprob: -16.576414108276367
    6. '```' → logprob: -16.701414108276367
    7. '+s' → logprob: -17.076414108276367
    8. ' plus' → logprob: -17.701414108276367
    9. '+b' → logprob: -17.826414108276367
    10. ' ' → logprob: -17.826414108276367

Token 332: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.061967913061380386
    2. ' int' → logprob: -2.8119678497314453
    3. '10' → logprob: -15.936967849731445
    4. '1' → logprob: -16.311967849731445
    5. '0' → logprob: -17.686967849731445
    6. '(int' → logprob: -18.061967849731445
    7. ' ' → logprob: -18.311967849731445
    8. '=int' → logprob: -18.561967849731445
    9. '   ' → logprob: -19.061967849731445
    10. '    ' → logprob: -20.061967849731445

Token 333: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.16029226779937744
    2. 's' → logprob: -1.9102922677993774
    3. '(' → logprob: -10.035292625427246
    4. ' s' → logprob: -10.660292625427246
    5. ' (' → logprob: -14.660292625427246
    6. ')' → logprob: -15.910292625427246
    7. '[s' → logprob: -16.66029167175293
    8. ' ' → logprob: -17.28529167175293
    9. '_s' → logprob: -17.66029167175293
    10. ')s' → logprob: -17.78529167175293

Token 334: '[i' (ID: 1768)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.5310482978820801
    2. 's' → logprob: -1.28104829788208
    3. '[i' → logprob: -2.03104829788208
    4. '(s' → logprob: -6.03104829788208
    5. '[' → logprob: -7.40604829788208
    6. 'i' → logprob: -10.906047821044922
    7. ' s' → logprob: -11.156047821044922
    8. '[
' → logprob: -11.656047821044922
    9. '{s' → logprob: -12.531047821044922
    10. ' [' → logprob: -13.281047821044922

Token 335: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.022038687020540237
    2. '[i' → logprob: -3.897038698196411
    3. '])
' → logprob: -6.522038459777832
    4. 's' → logprob: -12.147038459777832
    5. '[s' → logprob: -12.647038459777832
    6. ')' → logprob: -13.022038459777832
    7. '[' → logprob: -13.272038459777832
    8. '])
' → logprob: -13.272038459777832
    9. ']' → logprob: -13.397038459777832
    10. '   ' → logprob: -13.522038459777832

Token 336: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0816766545176506
    2. 'i' → logprob: -2.706676721572876
    3. '           ' → logprob: -4.581676483154297
    4. ' i' → logprob: -6.831676483154297
    5. '   ' → logprob: -8.956676483154297
    6. '                   ' → logprob: -10.081676483154297
    7. '[i' → logprob: -10.456676483154297
    8. '       ' → logprob: -10.706676483154297
    9. '	i' → logprob: -10.706676483154297
    10. ' ' → logprob: -11.081676483154297

Token 337: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2614273726940155
    2. 'i' (adapté à ' i') → logprob: -1.511427402496338
    3. '               ' → logprob: -4.761427402496338
    4. '   ' → logprob: -7.761427402496338
    5. '           ' → logprob: -8.13642692565918
    6. ' ' → logprob: -9.01142692565918
    7. 's' → logprob: -11.26142692565918
    8. '                   ' → logprob: -11.51142692565918
    9. '	i' → logprob: -11.76142692565918
    10. '       ' → logprob: -12.26142692565918

Token 338: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10023804754018784
    2. '+=' → logprob: -2.350238084793091
    3. '+' → logprob: -11.100237846374512
    4. ']+=' → logprob: -11.475237846374512
    5. '=' → logprob: -13.350237846374512
    6. ' +' → logprob: -13.475237846374512
    7. ' ' → logprob: -14.350237846374512
    8. '    ' → logprob: -14.725237846374512
    9. '```' → logprob: -14.850237846374512
    10. '            ' → logprob: -14.850237846374512

Token 339: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011047814972698689
    2. ' ' → logprob: -4.511047840118408
    3. '   ' → logprob: -18.51104736328125
    4. '```' → logprob: -19.13604736328125
    5. ' ' → logprob: -19.63604736328125
    6. '１' → logprob: -20.44854736328125
    7. '0' → logprob: -20.44854736328125
    8. '۱' → logprob: -20.63604736328125
    9. '           ' → logprob: -20.94854736328125
    10. '
' → logprob: -20.94854736328125

Token 340: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -22.125
    4. '
' → logprob: -22.5
    5. '0' → logprob: -22.625
    6. '```' → logprob: -23.375
    7. '１' → logprob: -24.0
    8. '2' → logprob: -24.125
    9. '۱' → logprob: -24.5625
    10. '+' → logprob: -24.5625

Token 341: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3738660514354706
    2. ' if' → logprob: -1.748866081237793
    3. '           ' → logprob: -2.748866081237793
    4. 'if' → logprob: -3.123866081237793
    5. ' ' → logprob: -4.623866081237793
    6. '<|end|>' → logprob: -4.623866081237793
    7. ' 
' → logprob: -5.748866081237793
    8. '        
' → logprob: -6.123866081237793
    9. '        ' → logprob: -6.248866081237793
    10. '            
' → logprob: -7.623866081237793

Token 342: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05713513493537903
    2. ' if' → logprob: -3.1821351051330566
    3. '           ' → logprob: -5.682135105133057
    4. ' ' → logprob: -6.057135105133057
    5. 'if' → logprob: -6.057135105133057
    6. '        ' → logprob: -6.182135105133057
    7. '        
' → logprob: -6.432135105133057
    8. ' 
' → logprob: -6.557135105133057
    9. '    ' → logprob: -8.682135581970215
    10. '   ' → logprob: -9.182135581970215

Token 343: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3140650689601898
    2. 'if' (adapté à ' if') → logprob: -1.3140650987625122
    3. '           ' → logprob: -7.564064979553223
    4. ' ' → logprob: -8.564064979553223
    5. ' 
' → logprob: -10.064064979553223
    6. ' (' → logprob: -11.064064979553223
    7. '       ' → logprob: -11.689064979553223
    8. '(' → logprob: -11.939064979553223
    9. '            ' → logprob: -12.939064979553223
    10. ' )' → logprob: -12.939064979553223

Token 344: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14498841762542725
    2. ' i' → logprob: -2.019988536834717
    3. ' s' → logprob: -6.769988536834717
    4. 's' → logprob: -6.769988536834717
    5. '   ' → logprob: -11.269988059997559
    6. ' ' → logprob: -13.769988059997559
    7. '     ' → logprob: -15.144988059997559
    8. '	i' → logprob: -15.144988059997559
    9. '  ' → logprob: -15.269988059997559
    10. '    ' → logprob: -15.644988059997559

Token 345: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07011838257312775
    2. '<' → logprob: -2.6951184272766113
    3. '<n' → logprob: -9.070117950439453
    4. '<s' → logprob: -9.945117950439453
    5. '<len' → logprob: -11.695117950439453
    6. '[' → logprob: -13.195117950439453
    7. ' >=' → logprob: -13.570117950439453
    8. 's' → logprob: -13.695117950439453
    9. ' ' → logprob: -13.945117950439453
    10. '<m' → logprob: -14.070117950439453

Token 346: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0067682997323572636
    2. ' n' → logprob: -5.006768226623535
    3. 'len' → logprob: -9.881768226623535
    4. ' len' → logprob: -13.256768226623535
    5. '1' → logprob: -17.00676918029785
    6. ' ' → logprob: -17.75676918029785
    7. '<n' → logprob: -19.38176918029785
    8. '	n' → logprob: -19.75676918029785
    9. '   ' → logprob: -20.00676918029785
    10. '0' → logprob: -20.13176918029785

Token 347: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06197687238454819
    2. 'and' → logprob: -2.811976909637451
    3. ' <' → logprob: -11.686976432800293
    4. '<' → logprob: -15.936976432800293
    5. ' ==' → logprob: -16.18697738647461
    6. ' a' → logprob: -16.31197738647461
    7. '==' → logprob: -16.56197738647461
    8. '	and' → logprob: -16.93697738647461
    9. 'if' → logprob: -17.06197738647461
    10. 'a' → logprob: -17.06197738647461

Token 348: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.018151935189962387
    2. ' s' → logprob: -4.018151760101318
    3. '(s' → logprob: -13.518152236938477
    4. ' (' → logprob: -15.393152236938477
    5. ''s' → logprob: -16.518152236938477
    6. '(' → logprob: -16.518152236938477
    7. ' ' → logprob: -16.518152236938477
    8. '`s' → logprob: -16.893152236938477
    9. '	s' → logprob: -17.393152236938477
    10. '   ' → logprob: -17.518152236938477

Token 349: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2231178879737854
    2. 's' → logprob: -2.3481178283691406
    3. '[s' → logprob: -2.9731178283691406
    4. ' ==' → logprob: -3.0981178283691406
    5. '==' → logprob: -5.598117828369141
    6. '[' → logprob: -6.348117828369141
    7. ' s' → logprob: -6.473117828369141
    8. ''' → logprob: -7.598117828369141
    9. ''s' → logprob: -8.97311782836914
    10. '['' → logprob: -8.97311782836914

Token 350: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.391332745552063
    2. ' ==' → logprob: -1.266332745552063
    3. '==' → logprob: -3.2663326263427734
    4. ']==' → logprob: -5.641332626342773
    5. ' ]' → logprob: -8.766332626342773
    6. ']=='' → logprob: -9.516332626342773
    7. '=='' → logprob: -10.141332626342773
    8. 's' → logprob: -12.266332626342773
    9. '[' → logprob: -13.266332626342773
    10. 'is' → logprob: -13.266332626342773

Token 351: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3873695135116577
    2. '==' → logprob: -1.1373695135116577
    3. '=='' → logprob: -7.637369632720947
    4. ' =='' → logprob: -12.387369155883789
    5. '=="' → logprob: -12.512369155883789
    6. '=' → logprob: -12.512369155883789
    7. '==
' → logprob: -13.887369155883789
    8. ']==' → logprob: -14.762369155883789
    9. ''' → logprob: -14.887369155883789
    10. '==(' → logprob: -14.887369155883789

Token 352: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0011320014018565416
    2. ' '('' → logprob: -6.876132011413574
    3. '"' → logprob: -9.626132011413574
    4. ''(' → logprob: -10.376132011413574
    5. '(' → logprob: -13.876132011413574
    6. ' '' → logprob: -14.126132011413574
    7. ' ' → logprob: -15.876132011413574
    8. '('' → logprob: -16.626131057739258
    9. '   ' → logprob: -17.251131057739258
    10. '')' → logprob: -17.376131057739258

Token 353: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.026741210371255875
    2. '           ' → logprob: -3.9017412662506104
    3. '<|end|>' → logprob: -6.401741027832031
    4. 'start' → logprob: -6.526741027832031
    5. ':' → logprob: -6.901741027832031
    6. '       ' → logprob: -7.526741027832031
    7. ')' → logprob: -8.026741027832031
    8. '#' → logprob: -8.276741027832031
    9. '):' → logprob: -8.651741027832031
    10. '):
' → logprob: -9.151741027832031

Token 354: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002248984295874834
    2. 'i' → logprob: -6.627248764038086
    3. '           ' → logprob: -7.252248764038086
    4. ' i' → logprob: -8.752248764038086
    5. '   ' → logprob: -10.502248764038086
    6. 'start' → logprob: -11.377248764038086
    7. '#' → logprob: -12.252248764038086
    8. '                   ' → logprob: -13.002248764038086
    9. '       ' → logprob: -13.127248764038086
    10. '	           ' → logprob: -13.627248764038086

Token 355: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3315957486629486
    2. 'start' → logprob: -1.706595778465271
    3. 'i' → logprob: -2.5815956592559814
    4. '           ' → logprob: -4.3315958976745605
    5. '   ' → logprob: -4.8315958976745605
    6. ' i' → logprob: -6.2065958976745605
    7. '       ' → logprob: -7.8315958976745605
    8. '#' (adapté à ' #') → logprob: -7.8315958976745605
    9. ' start' → logprob: -7.9565958976745605
    10. '                   ' → logprob: -8.081595420837402

Token 356: ' get' (ID: 717)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.002292398363351822
    2. ' start' → logprob: -7.002292633056641
    3. '#' → logprob: -7.752292633056641
    4. 'i' → logprob: -7.752292633056641
    5. 'stack' → logprob: -8.37729263305664
    6. '               ' → logprob: -8.50229263305664
    7. '   ' → logprob: -10.25229263305664
    8. 'match' → logprob: -11.75229263305664
    9. 'end' → logprob: -11.87729263305664
    10. '           ' → logprob: -12.25229263305664

Token 357: ' sequence' (ID: 16281)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.002950720489025116
    2. ' start' → logprob: -5.877950668334961
    3. 'i' → logprob: -9.377950668334961
    4. '               ' → logprob: -10.127950668334961
    5. 'stack' → logprob: -12.127950668334961
    6. '   ' → logprob: -12.252950668334961
    7. ' i' → logprob: -12.627950668334961
    8. ' ' → logprob: -13.377950668334961
    9. '#' → logprob: -13.502950668334961
    10. '  ' → logprob: -14.002950668334961

Token 358: ' inside' (ID: 6772)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.06859786808490753
    2. '               ' → logprob: -3.3185977935791016
    3. ' start' → logprob: -3.5685977935791016
    4. '   ' → logprob: -7.193597793579102
    5. '_start' → logprob: -8.193597793579102
    6. '                   ' → logprob: -8.443597793579102
    7. 'length' → logprob: -9.068597793579102
    8. '           ' → logprob: -9.068597793579102
    9. '
' → logprob: -9.318597793579102
    10. '_len' → logprob: -9.318597793579102

Token 359: ' parentheses' (ID: 180602)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.004144761245697737
    2. ' start' → logprob: -5.754144668579102
    3. 'i' → logprob: -7.879144668579102
    4. '   ' → logprob: -8.504144668579102
    5. ')' → logprob: -8.754144668579102
    6. ' ' → logprob: -9.504144668579102
    7. '(' → logprob: -10.379144668579102
    8. '  ' → logprob: -11.004144668579102
    9. '(start' → logprob: -11.004144668579102
    10. ' i' → logprob: -11.129144668579102

Token 360: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009753965772688389
    2. 'start' → logprob: -4.759754180908203
    3. '           ' → logprob: -7.759754180908203
    4. '   ' → logprob: -7.884754180908203
    5. '                   ' → logprob: -9.384754180908203
    6. ' start' → logprob: -9.884754180908203
    7. '       ' → logprob: -10.009754180908203
    8. '<|end|>' → logprob: -10.259754180908203
    9. '<|end|>' → logprob: -10.634754180908203
    10. 'i' → logprob: -10.634754180908203

Token 361: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009612997062504292
    2. 'start' → logprob: -5.009613037109375
    3. '   ' → logprob: -6.884613037109375
    4. '           ' → logprob: -6.884613037109375
    5. '                   ' → logprob: -7.509613037109375
    6. ' start' → logprob: -9.384613037109375
    7. 'i' → logprob: -9.384613037109375
    8. '       ' → logprob: -10.509613037109375
    9. ' i' → logprob: -10.509613037109375
    10. '                ' → logprob: -11.134613037109375

Token 362: ' i' (ID: 575)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0017126628663390875
    2. '               ' → logprob: -7.126712799072266
    3. 'i' (adapté à ' i') → logprob: -7.376712799072266
    4. ' start' → logprob: -8.626712799072266
    5. '   ' → logprob: -10.001712799072266
    6. 'stack' → logprob: -10.376712799072266
    7. '           ' → logprob: -12.376712799072266
    8. '                   ' → logprob: -12.376712799072266
    9. 'open' → logprob: -13.001712799072266
    10. 'left' → logprob: -13.251712799072266

Token 363: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4741329550743103
    2. '+=' → logprob: -0.9741329550743103
    3. '=' → logprob: -10.474132537841797
    4. '+' → logprob: -10.849132537841797
    5. ' =' → logprob: -12.099132537841797
    6. ' +' → logprob: -14.099132537841797
    7. ']+=' → logprob: -14.849132537841797
    8. 's' → logprob: -14.974132537841797
    9. '   ' → logprob: -15.224132537841797
    10. 'start' → logprob: -15.599132537841797

Token 364: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.125295639038086
    3. '```' → logprob: -18.125295639038086
    4. '2' → logprob: -18.250295639038086
    5. '0' → logprob: -18.250295639038086
    6. '   ' → logprob: -18.625295639038086
    7. '１' → logprob: -19.187795639038086
    8. '(' → logprob: -20.312795639038086
    9. '﻿' → logprob: -20.375295639038086
    10. '
' → logprob: -20.500295639038086

Token 365: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '0' → logprob: -17.625019073486328
    4. '   ' → logprob: -18.375019073486328
    5. '```' → logprob: -19.125019073486328
    6. '2' → logprob: -19.687519073486328
    7. '
' → logprob: -20.250019073486328
    8. '           ' → logprob: -20.687519073486328
    9. '１' → logprob: -20.875019073486328
    10. '3' → logprob: -20.875019073486328

Token 366: '
' (ID: 198)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.12805379927158356
    2. '               ' → logprob: -2.128053903579712
    3. '           ' → logprob: -7.003053665161133
    4. ' start' → logprob: -8.503053665161133
    5. '       ' → logprob: -12.003053665161133
    6. '   ' → logprob: -13.003053665161133
    7. '              ' → logprob: -13.128053665161133
    8. '                   ' → logprob: -14.253053665161133
    9. 'stack' → logprob: -14.753053665161133
    10. '```' → logprob: -15.378053665161133

Token 367: '               ' (ID: 506)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.11516226828098297
    2. '               ' → logprob: -2.2401623725891113
    3. '           ' → logprob: -6.240162372589111
    4. ' start' → logprob: -8.740161895751953
    5. '       ' → logprob: -8.740161895751953
    6. '   ' → logprob: -9.990161895751953
    7. 'stack' → logprob: -11.240161895751953
    8. '                   ' → logprob: -13.115161895751953
    9. 'seq' → logprob: -13.365161895751953
    10. '              ' → logprob: -13.490161895751953

Token 368: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.00011510594777064398
    2. 'stack' → logprob: -9.375115394592285
    3. ' start' → logprob: -11.000115394592285
    4. 'seq' → logprob: -11.500115394592285
    5. 'depth' → logprob: -13.500115394592285
    6. '               ' → logprob: -13.875115394592285
    7. 'level' → logprob: -15.500115394592285
    8. '   ' → logprob: -15.875115394592285
    9. 'sub' → logprob: -15.875115394592285
    10. 'count' → logprob: -16.00011444091797

Token 369: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693136930465698
    2. ' =' → logprob: -2.1269314289093018
    3. '=i' → logprob: -12.876931190490723
    4. '=start' → logprob: -15.126931190490723
    5. ' ' → logprob: -16.37693214416504
    6. '_=' → logprob: -16.62693214416504
    7. 'i' → logprob: -17.37693214416504
    8. ',' → logprob: -17.37693214416504
    9. 'start' → logprob: -17.50193214416504
    10. '=end' → logprob: -17.62693214416504

Token 370: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.7697225252486533e-06
    2. ' i' → logprob: -12.500003814697266
    3. '	i' → logprob: -20.500003814697266
    4. '   ' → logprob: -20.750003814697266
    5. '               ' → logprob: -21.250003814697266
    6. 'index' → logprob: -21.625003814697266
    7. '
' → logprob: -22.125003814697266
    8. 'I' → logprob: -22.375003814697266
    9. '                   ' → logprob: -22.500003814697266
    10. '```' → logprob: -23.000003814697266

Token 371: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26603326201438904
    2. 'cnt' → logprob: -1.5160332918167114
    3. '
' → logprob: -4.516033172607422
    4. 'count' → logprob: -6.891033172607422
    5. '           ' → logprob: -7.266033172607422
    6. 'stack' → logprob: -7.641033172607422
    7. '<|end|>' → logprob: -7.766033172607422
    8. 'start' → logprob: -9.391033172607422
    9. ' cnt' → logprob: -9.391033172607422
    10. 'counter' → logprob: -10.016033172607422

Token 372: '               ' (ID: 506)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.09060823172330856
    2. '               ' → logprob: -2.4656081199645996
    3. 'count' → logprob: -6.7156081199646
    4. '           ' → logprob: -8.465608596801758
    5. ' cnt' → logprob: -8.465608596801758
    6. 'stack' → logprob: -11.340608596801758
    7. 'counter' → logprob: -12.215608596801758
    8. 'depth' → logprob: -12.215608596801758
    9. '                   ' → logprob: -12.340608596801758
    10. '   ' → logprob: -13.215608596801758

Token 373: ' count' (ID: 3605)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.00012594614236149937
    2. 'count' (adapté à ' count') → logprob: -9.625125885009766
    3. '               ' → logprob: -10.000125885009766
    4. ' cnt' → logprob: -11.250125885009766
    5. 'stack' → logprob: -14.375125885009766
    6. 'depth' → logprob: -14.750125885009766
    7. 'counter' → logprob: -15.500125885009766
    8. '
' → logprob: -16.250125885009766
    9. '	cnt' → logprob: -17.000125885009766
    10. '           ' → logprob: -17.000125885009766

Token 374: '_p' (ID: 1359)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975083328783512
    2. '=' → logprob: -3.5297508239746094
    3. '   ' → logprob: -16.52975082397461
    4. 'stack' → logprob: -16.52975082397461
    5. '_stack' → logprob: -17.15475082397461
    6. 's' → logprob: -17.52975082397461
    7. ' ' → logprob: -17.77975082397461
    8. '    ' → logprob: -18.40475082397461
    9. '  ' → logprob: -18.77975082397461
    10. 'cnt' → logprob: -18.77975082397461

Token 375: ' =' (ID: 314)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -2.558399319241289e-05
    2. '=' → logprob: -11.250025749206543
    3. ' =' → logprob: -11.875025749206543
    4. 'aren' → logprob: -12.500025749206543
    5. 'ars' → logprob: -14.250025749206543
    6. '1' → logprob: -14.250025749206543
    7. 'a' → logprob: -15.375025749206543
    8. 'r' → logprob: -16.375024795532227
    9. ' ' → logprob: -16.500024795532227
    10. '   ' → logprob: -17.000024795532227

Token 376: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0160358939319849
    2. ' ' → logprob: -4.141036033630371
    3. '0' → logprob: -13.641036033630371
    4. '   ' → logprob: -15.391036033630371
    5. '  ' → logprob: -16.391035079956055
    6. ' ' → logprob: -16.516035079956055
    7. '```' → logprob: -18.641035079956055
    8. '2' → logprob: -19.141035079956055
    9. '۱' → logprob: -19.578535079956055
    10. '+' → logprob: -19.703535079956055

Token 377: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. '0' → logprob: -12.87500286102295
    3. ' ' → logprob: -14.87500286102295
    4. '```' → logprob: -19.937503814697266
    5. '   ' → logprob: -20.437503814697266
    6. '
' → logprob: -20.562503814697266
    7. '(' → logprob: -20.812503814697266
    8. '' → logprob: -21.625003814697266
    9. '۱' → logprob: -21.625003814697266
    10. ' ' → logprob: -21.687503814697266

Token 378: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11496080458164215
    2. 'while' → logprob: -2.8649609088897705
    3. '
' → logprob: -3.1149609088897705
    4. '           ' → logprob: -5.989960670471191
    5. ' while' → logprob: -5.989960670471191
    6. '<|end|>' → logprob: -6.864960670471191
    7. '       ' → logprob: -7.239960670471191
    8. '	       ' → logprob: -9.489960670471191
    9. '	while' → logprob: -9.864960670471191
    10. '                   ' → logprob: -10.114960670471191

Token 379: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4756023585796356
    2. 'while' → logprob: -0.975602388381958
    3. ' while' → logprob: -6.850602149963379
    4. '           ' → logprob: -8.100602149963379
    5. 'i' → logprob: -9.725602149963379
    6. 'count' → logprob: -9.975602149963379
    7. '       ' → logprob: -10.350602149963379
    8. '	while' → logprob: -11.975602149963379
    9. '   ' → logprob: -12.600602149963379
    10. '              ' → logprob: -12.725602149963379

Token 380: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.007360394578427076
    2. '               ' → logprob: -5.507360458374023
    3. ' while' → logprob: -5.757360458374023
    4. 'i' → logprob: -9.882360458374023
    5. 'if' → logprob: -10.382360458374023
    6. '           ' → logprob: -10.507360458374023
    7. ' i' → logprob: -12.757360458374023
    8. '   ' → logprob: -13.382360458374023
    9. '                   ' → logprob: -14.257360458374023
    10. '
' → logprob: -14.257360458374023

Token 381: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.180258110165596
    2. ' i' → logprob: -1.8052581548690796
    3. 'count' → logprob: -7.805258274078369
    4. ' count' → logprob: -9.180257797241211
    5. ' ' → logprob: -13.555257797241211
    6. 'index' → logprob: -14.680257797241211
    7. '   ' → logprob: -15.180257797241211
    8. '	i' → logprob: -15.430257797241211
    9. '  ' → logprob: -16.05525779724121
    10. ' index' → logprob: -16.30525779724121

Token 382: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07759649306535721
    2. '<n' → logprob: -2.827596426010132
    3. '<' → logprob: -4.202596664428711
    4. '<s' → logprob: -7.577596664428711
    5. '<len' → logprob: -11.702596664428711
    6. '<p' → logprob: -11.827596664428711
    7. '<N' → logprob: -12.077596664428711
    8. 's' → logprob: -12.452596664428711
    9. '<count' → logprob: -12.452596664428711
    10. ' ' → logprob: -12.702596664428711

Token 383: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005266838241368532
    2. ' n' → logprob: -5.2552666664123535
    3. 'i' → logprob: -10.380267143249512
    4. ' i' → logprob: -13.880267143249512
    5. 's' → logprob: -14.005267143249512
    6. 'len' → logprob: -17.255266189575195
    7. '<n' → logprob: -17.380266189575195
    8. ' ' → logprob: -17.505266189575195
    9. '	n' → logprob: -17.755266189575195
    10. ' s' → logprob: -18.130266189575195

Token 384: ' and' (ID: 326)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.15077538788318634
    2. ' and' → logprob: -2.65077543258667
    3. 'and' → logprob: -3.02577543258667
    4. '<' → logprob: -4.27577543258667
    5. '<n' → logprob: -5.27577543258667
    6. '<count' → logprob: -7.40077543258667
    7. 'count' → logprob: -7.77577543258667
    8. '<s' → logprob: -8.025774955749512
    9. ' count' → logprob: -8.400774955749512
    10. ' ' → logprob: -9.525774955749512

Token 385: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -3.547789674485102e-05
    2. ' count' → logprob: -10.250035285949707
    3. ' ' → logprob: -21.500036239624023
    4. '(count' → logprob: -22.000036239624023
    5. '	count' → logprob: -22.875036239624023
    6. '   ' → logprob: -23.000036239624023
    7. 'counter' → logprob: -23.625036239624023
    8. '  ' → logprob: -23.750036239624023
    9. '
' → logprob: -24.125036239624023
    10. '$count' → logprob: -24.125036239624023

Token 386: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -2.2200749754119897e-06
    2. '_' → logprob: -13.250001907348633
    3. 'p' → logprob: -15.875001907348633
    4. ' _' → logprob: -17.000001907348633
    5. '=' → logprob: -17.250001907348633
    6. 's' → logprob: -17.250001907348633
    7. '   ' → logprob: -17.375001907348633
    8. '```' → logprob: -17.750001907348633
    9. '
' → logprob: -17.875001907348633
    10. '<p' → logprob: -18.125001907348633

Token 387: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4740777611732483
    2. ' >' → logprob: -0.9740777611732483
    3. ' ' → logprob: -15.599078178405762
    4. '<' → logprob: -15.599078178405762
    5. '!=' → logprob: -15.599078178405762
    6. '   ' → logprob: -16.474077224731445
    7. ' <' → logprob: -16.599077224731445
    8. ' !=' → logprob: -16.849077224731445
    9. ' ' → logprob: -17.474077224731445
    10. ' +=' → logprob: -17.599077224731445

Token 388: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. '1' → logprob: -16.751502990722656
    4. '   ' → logprob: -18.376502990722656
    5. '=' → logprob: -19.501502990722656
    6. ' ' → logprob: -19.751502990722656
    7. '  ' → logprob: -19.751502990722656
    8. '```' → logprob: -20.126502990722656
    9. '۰' → logprob: -20.751502990722656
    10. '>' → logprob: -21.626502990722656

Token 389: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.2166411478538066e-05
    2. ' ' → logprob: -9.875052452087402
    3. '1' → logprob: -14.250052452087402
    4. '   ' → logprob: -18.000051498413086
    5. '```' → logprob: -18.750051498413086
    6. '
' → logprob: -19.312551498413086
    7. '۰' → logprob: -19.375051498413086
    8. '  ' → logprob: -19.687551498413086
    9. ' ' → logprob: -19.812551498413086
    10. '=' → logprob: -19.937551498413086

Token 390: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16329534351825714
    2. ':' → logprob: -2.163295269012451
    3. '                   ' → logprob: -3.538295269012451
    4. '           ' → logprob: -5.538295269012451
    5. '               ' → logprob: -6.538295269012451
    6. ',' → logprob: -7.663295269012451
    7. ' and' → logprob: -8.53829574584961
    8. '):
' → logprob: -8.78829574584961
    9. '<|end|>' → logprob: -9.41329574584961
    10. '   ' → logprob: -9.53829574584961

Token 391: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0020233318209648132
    2. '           ' → logprob: -7.002023220062256
    3. '               ' → logprob: -7.627023220062256
    4. '   ' → logprob: -7.752023220062256
    5. 'i' → logprob: -9.627023696899414
    6. ' i' → logprob: -9.627023696899414
    7. 'if' → logprob: -11.002023696899414
    8. ' if' → logprob: -11.252023696899414
    9. '       ' → logprob: -11.877023696899414
    10. ' ' → logprob: -12.252023696899414

Token 392: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20186838507652283
    2. ' if' → logprob: -1.7018684148788452
    3. '                   ' → logprob: -7.701868534088135
    4. '   ' → logprob: -13.076868057250977
    5. '```' → logprob: -14.826868057250977
    6. ' ' → logprob: -15.576868057250977
    7. '               ' → logprob: -15.576868057250977
    8. '	if' → logprob: -16.451868057250977
    9. '                       ' → logprob: -16.951868057250977
    10. 'If' → logprob: -17.576868057250977

Token 393: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.25192990899086
    2. ' s' → logprob: -1.5019298791885376
    3. '(s' → logprob: -14.876930236816406
    4. ' ' → logprob: -15.626930236816406
    5. '   ' → logprob: -16.626930236816406
    6. '	s' → logprob: -16.751930236816406
    7. '                   ' → logprob: -17.251930236816406
    8. ' ' → logprob: -17.376930236816406
    9. '`s' → logprob: -17.501930236816406
    10. '           ' → logprob: -18.126930236816406

Token 394: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. 'i' → logprob: -15.375
    3. '```' → logprob: -17.0
    4. '[' → logprob: -18.625
    5. '[
' → logprob: -18.875
    6. '   ' → logprob: -20.125
    7. '
' → logprob: -20.875
    8. '[index' → logprob: -20.875
    9. '[I' → logprob: -21.0
    10. 's' → logprob: -21.125

Token 395: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.020779751241207123
    2. '==' → logprob: -3.895779848098755
    3. '=='' → logprob: -8.770779609680176
    4. ' =='' → logprob: -10.395779609680176
    5. '=' → logprob: -11.145779609680176
    6. ']==' → logprob: -11.770779609680176
    7. ' '('' → logprob: -11.895779609680176
    8. '(' → logprob: -11.895779609680176
    9. ')==' → logprob: -12.770779609680176
    10. ')' → logprob: -13.020779609680176

Token 396: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31497055292129517
    2. '==' → logprob: -1.3149704933166504
    3. '(' → logprob: -7.31497049331665
    4. ''' → logprob: -7.68997049331665
    5. '=='' → logprob: -7.93997049331665
    6. '=' → logprob: -8.939970970153809
    7. ' '('' → logprob: -10.189970970153809
    8. '==
' → logprob: -11.064970970153809
    9. ' =='' → logprob: -11.439970970153809
    10. '==(' → logprob: -11.689970970153809

Token 397: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0004882152716163546
    2. '(' → logprob: -7.87548828125
    3. '"' → logprob: -9.75048828125
    4. ' '('' → logprob: -10.50048828125
    5. '')' → logprob: -11.00048828125
    6. '('' → logprob: -12.50048828125
    7. ''(' → logprob: -13.87548828125
    8. ' '' → logprob: -14.62548828125
    9. ')' → logprob: -15.87548828125
    10. '`' → logprob: -16.12548828125

Token 398: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.04912718012928963
    2. ':
' → logprob: -3.5491271018981934
    3. '                   ' → logprob: -4.424127101898193
    4. ':' → logprob: -5.174127101898193
    5. 'count' → logprob: -8.049127578735352
    6. '               ' → logprob: -8.174127578735352
    7. '<|end|>' → logprob: -8.424127578735352
    8. '       ' → logprob: -9.049127578735352
    9. '):
' → logprob: -9.799127578735352
    10. '                      ' → logprob: -9.924127578735352

Token 399: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4046449661254883
    2. 'count' → logprob: -1.1546449661254883
    3. ' count' → logprob: -4.529644966125488
    4. '                   ' → logprob: -5.029644966125488
    5. '               ' → logprob: -9.029644966125488
    6. '   ' → logprob: -10.154644966125488
    7. '                    ' → logprob: -10.404644966125488
    8. '                           ' → logprob: -10.529644966125488
    9. '	count' → logprob: -11.029644966125488
    10. '       ' → logprob: -11.154644966125488

Token 400: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.006727803498506546
    2. ' count' → logprob: -5.006727695465088
    3. '                       ' → logprob: -11.381728172302246
    4. '	count' → logprob: -14.881728172302246
    5. '                   ' → logprob: -15.131728172302246
    6. '
' → logprob: -15.881728172302246
    7. '1' → logprob: -16.25672721862793
    8. ' ' → logprob: -16.63172721862793
    9. '   ' → logprob: -16.63172721862793
    10. '                           ' → logprob: -17.25672721862793

Token 401: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0005249153473414481
    2. '+=' → logprob: -7.625524997711182
    3. ' +=' → logprob: -10.250524520874023
    4. '+' → logprob: -14.000524520874023
    5. '_' → logprob: -14.500524520874023
    6. '   ' → logprob: -16.250524520874023
    7. 'p' → logprob: -16.875524520874023
    8. '                   ' → logprob: -16.875524520874023
    9. '```' → logprob: -17.625524520874023
    10. '               ' → logprob: -17.875524520874023

Token 402: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20143312215805054
    2. ' +=' → logprob: -1.7014331817626953
    3. '+' → logprob: -10.951433181762695
    4. ']+=' → logprob: -14.326433181762695
    5. '=' → logprob: -14.451433181762695
    6. '                   ' → logprob: -14.951433181762695
    7. ' +' → logprob: -15.576433181762695
    8. '               ' → logprob: -16.076433181762695
    9. '           ' → logprob: -16.201433181762695
    10. '                       ' → logprob: -16.326433181762695

Token 403: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006715370807796717
    2. ' ' → logprob: -5.006715297698975
    3. '   ' → logprob: -18.006715774536133
    4. '           ' → logprob: -20.131715774536133
    5. '0' → logprob: -20.631715774536133
    6. '```' → logprob: -20.631715774536133
    7. ' ' → logprob: -21.006715774536133
    8. '                   ' → logprob: -21.381715774536133
    9. '+' → logprob: -21.631715774536133
    10. '۱' → logprob: -21.756715774536133

Token 404: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '-' → logprob: -19.875009536743164
    4. '   ' → logprob: -20.000009536743164
    5. '```' → logprob: -21.250009536743164
    6. '
' → logprob: -22.250009536743164
    7. '           ' → logprob: -22.250009536743164
    8. ' -' → logprob: -22.437509536743164
    9. '۱' → logprob: -22.500009536743164
    10. '0' → logprob: -22.875009536743164

Token 405: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00434110639616847
    2. 'elif' → logprob: -5.629341125488281
    3. '               ' → logprob: -7.754341125488281
    4. '           ' → logprob: -8.629341125488281
    5. '                       ' → logprob: -10.629341125488281
    6. '   ' → logprob: -10.879341125488281
    7. '<|end|>' → logprob: -10.879341125488281
    8. ' elif' → logprob: -11.004341125488281
    9. '```' → logprob: -11.004341125488281
    10. '       ' → logprob: -11.129341125488281

Token 406: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008255688473582268
    2. 'elif' → logprob: -5.133255481719971
    3. '               ' → logprob: -6.258255481719971
    4. '           ' → logprob: -8.383255958557129
    5. 'i' → logprob: -9.133255958557129
    6. ' elif' → logprob: -10.883255958557129
    7. '```' → logprob: -11.133255958557129
    8. '   ' → logprob: -11.258255958557129
    9. '                       ' → logprob: -11.633255958557129
    10. ' i' → logprob: -12.133255958557129

Token 407: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.005425254348665476
    2. ' elif' → logprob: -5.255425453186035
    3. '                   ' → logprob: -8.630425453186035
    4. '               ' → logprob: -11.630425453186035
    5. '```' → logprob: -13.005425453186035
    6. 'i' → logprob: -14.255425453186035
    7. '           ' → logprob: -15.505425453186035
    8. ' i' → logprob: -15.755425453186035
    9. '                       ' → logprob: -15.880425453186035
    10. 'el' → logprob: -16.00542449951172

Token 408: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.38687241077423096
    2. 's' → logprob: -1.136872410774231
    3. '(s' → logprob: -15.386872291564941
    4. 'count' → logprob: -15.511872291564941
    5. '                   ' → logprob: -15.761872291564941
    6. '0' → logprob: -15.761872291564941
    7. ' ' → logprob: -15.761872291564941
    8. '   ' → logprob: -16.011873245239258
    9. '               ' → logprob: -16.136873245239258
    10. '           ' → logprob: -16.261873245239258

Token 409: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.2994620242971e-06
    2. '[' → logprob: -12.000008583068848
    3. '[count' → logprob: -14.125008583068848
    4. 's' → logprob: -14.375008583068848
    5. 'i' → logprob: -15.625008583068848
    6. '[s' → logprob: -15.875008583068848
    7. '[index' → logprob: -16.25000762939453
    8. '```' → logprob: -16.37500762939453
    9. 'count' → logprob: -16.75000762939453
    10. '[
' → logprob: -16.87500762939453

Token 410: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007481683976948261
    2. '[i' → logprob: -5.757481575012207
    3. '==' → logprob: -6.007481575012207
    4. ' ==' → logprob: -7.007481575012207
    5. ']==' → logprob: -7.007481575012207
    6. '[' → logprob: -11.132481575012207
    7. '']' → logprob: -12.757481575012207
    8. 'i' → logprob: -13.882481575012207
    9. ']=='' → logprob: -14.007481575012207
    10. 's' → logprob: -14.382481575012207

Token 411: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.48196566104888916
    2. ' ==' → logprob: -0.9819656610488892
    3. ']' → logprob: -5.1069655418396
    4. ']==' → logprob: -6.9819655418396
    5. '[i' → logprob: -7.6069655418396
    6. '']' → logprob: -8.481966018676758
    7. ')' → logprob: -9.106966018676758
    8. '')' → logprob: -10.731966018676758
    9. '=' → logprob: -11.106966018676758
    10. ' ' → logprob: -11.731966018676758

Token 412: ' ')' (ID: 35910)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00025394887779839337
    2. ')' → logprob: -8.375253677368164
    3. ' ')' → logprob: -11.000253677368164
    4. ' ')'' → logprob: -12.000253677368164
    5. '")' → logprob: -14.750253677368164
    6. '')"' → logprob: -17.500253677368164
    7. '']' → logprob: -17.875253677368164
    8. ')'' → logprob: -17.875253677368164
    9. ''' → logprob: -18.125253677368164
    10. '`)' → logprob: -18.125253677368164

Token 413: '':
' (ID: 7669)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03513289988040924
    2. '                   ' → logprob: -3.535132884979248
    3. ':
' → logprob: -6.035132884979248
    4. '               ' → logprob: -6.285132884979248
    5. '<|end|>' → logprob: -8.160133361816406
    6. '):
' → logprob: -8.285133361816406
    7. 'count' → logprob: -8.910133361816406
    8. ''):
' → logprob: -9.410133361816406
    9. ')' → logprob: -10.160133361816406
    10. '                      ' → logprob: -10.160133361816406

Token 414: '                       ' (ID: 968)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4716262221336365
    2. '                       ' → logprob: -1.0966262817382812
    3. ' count' → logprob: -3.7216262817382812
    4. '                   ' → logprob: -4.096626281738281
    5. '               ' → logprob: -6.971626281738281
    6. '	count' → logprob: -9.596626281738281
    7. '   ' → logprob: -10.096626281738281
    8. '           ' → logprob: -10.471626281738281
    9. '[count' → logprob: -10.721626281738281
    10. '       ' → logprob: -10.846626281738281

Token 415: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.018153218552470207
    2. ' count' → logprob: -4.018153190612793
    3. '                       ' → logprob: -13.018153190612793
    4. '                   ' → logprob: -13.768153190612793
    5. '	count' → logprob: -17.26815414428711
    6. '[count' → logprob: -17.89315414428711
    7. '
' → logprob: -18.01815414428711
    8. '               ' → logprob: -18.39315414428711
    9. '(count' → logprob: -18.39315414428711
    10. '=count' → logprob: -19.26815414428711

Token 416: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -3.292907877039397e-06
    2. 'p' → logprob: -13.12500286102295
    3. '_' → logprob: -14.12500286102295
    4. '   ' → logprob: -15.75000286102295
    5. '-' → logprob: -16.625003814697266
    6. '```' → logprob: -17.125003814697266
    7. ' ' → logprob: -17.750003814697266
    8. 's' → logprob: -17.750003814697266
    9. '>' → logprob: -17.750003814697266
    10. '[' → logprob: -17.875003814697266

Token 417: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.6071988940238953
    2. ' -=' → logprob: -0.8571988940238953
    3. '-' → logprob: -3.48219895362854
    4. '   ' → logprob: -11.357198715209961
    5. ' -' → logprob: -11.607198715209961
    6. '```' → logprob: -12.482198715209961
    7. '                   ' → logprob: -13.607198715209961
    8. ' ' → logprob: -13.732198715209961
    9. '+=' → logprob: -13.732198715209961
    10. '           ' → logprob: -13.732198715209961

Token 418: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029750484973192215
    2. ' ' → logprob: -3.5297505855560303
    3. '0' → logprob: -16.77975082397461
    4. '```' → logprob: -18.15475082397461
    5. '   ' → logprob: -18.52975082397461
    6. '                   ' → logprob: -19.02975082397461
    7. '<|end|>' → logprob: -19.90475082397461
    8. '               ' → logprob: -20.52975082397461
    9. ' ' → logprob: -20.52975082397461
    10. '2' → logprob: -20.77975082397461

Token 419: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -19.25002098083496
    4. '0' → logprob: -20.25002098083496
    5. '   ' → logprob: -20.37502098083496
    6. '<|end|>' → logprob: -21.75002098083496
    7. '-' → logprob: -22.00002098083496
    8. '           ' → logprob: -22.12502098083496
    9. '۱' → logprob: -22.25002098083496
    10. '                   ' → logprob: -22.31252098083496

Token 420: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00414891866967082
    2. '               ' → logprob: -5.879148960113525
    3. 'i' → logprob: -7.254148960113525
    4. '           ' → logprob: -8.129148483276367
    5. ' i' → logprob: -8.754148483276367
    6. '
' → logprob: -9.504148483276367
    7. '   ' → logprob: -9.879148483276367
    8. '                       ' → logprob: -10.879148483276367
    9. '```' → logprob: -10.879148483276367
    10. '       ' → logprob: -11.879148483276367

Token 421: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007787139620631933
    2. '               ' → logprob: -5.257787227630615
    3. 'i' → logprob: -6.882787227630615
    4. '   ' → logprob: -7.007787227630615
    5. ' i' → logprob: -8.007786750793457
    6. '           ' → logprob: -8.632786750793457
    7. '```' → logprob: -10.257786750793457
    8. '                       ' → logprob: -10.632786750793457
    9. '
' → logprob: -10.882786750793457
    10. '       ' → logprob: -10.882786750793457

Token 422: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.1630687266588211
    2. ' i' → logprob: -1.9130687713623047
    3. '                   ' → logprob: -6.413068771362305
    4. '               ' → logprob: -7.038068771362305
    5. '   ' → logprob: -8.288068771362305
    6. '           ' → logprob: -10.038068771362305
    7. ' ' → logprob: -11.413068771362305
    8. '       ' → logprob: -12.038068771362305
    9. '```' → logprob: -12.788068771362305
    10. '	i' → logprob: -13.163068771362305

Token 423: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1002078503370285
    2. '+=' → logprob: -2.350207805633545
    3. '+' → logprob: -14.100208282470703
    4. '=' → logprob: -15.850208282470703
    5. ']+=' → logprob: -16.475208282470703
    6. '```' → logprob: -16.600208282470703
    7. ' +' → logprob: -16.600208282470703
    8. ' ' → logprob: -17.350208282470703
    9. ' -=' → logprob: -18.350208282470703
    10. '   ' → logprob: -18.725208282470703

Token 424: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010329303331673145
    2. ' ' → logprob: -6.876032829284668
    3. '```' → logprob: -16.626033782958984
    4. '   ' → logprob: -17.751033782958984
    5. '0' → logprob: -18.626033782958984
    6. '
' → logprob: -19.501033782958984
    7. '           ' → logprob: -20.626033782958984
    8. '                       ' → logprob: -20.688533782958984
    9. ' ' → logprob: -20.688533782958984
    10. '۱' → logprob: -20.938533782958984

Token 425: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -16.125
    4. '0' → logprob: -17.5
    5. '-' → logprob: -18.4375
    6. '
' → logprob: -18.4375
    7. '   ' → logprob: -19.3125
    8. '۱' → logprob: -19.6875
    9. '１' → logprob: -20.125
    10. '``' → logprob: -20.125

Token 426: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004711595829576254
    2. 'end' → logprob: -5.379711627960205
    3. ' end' → logprob: -10.504711151123047
    4. '           ' → logprob: -10.754711151123047
    5. '```' → logprob: -10.879711151123047
    6. '              ' → logprob: -11.879711151123047
    7. 'start' → logprob: -12.254711151123047
    8. ')' → logprob: -12.629711151123047
    9. '                ' → logprob: -12.879711151123047
    10. '       ' → logprob: -12.879711151123047

Token 427: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01254037581384182
    2. 'end' → logprob: -4.387540340423584
    3. '           ' → logprob: -11.387540817260742
    4. ' end' → logprob: -11.762540817260742
    5. '```' → logprob: -12.637540817260742
    6. '              ' → logprob: -13.137540817260742
    7. '       ' → logprob: -13.262540817260742
    8. '
' → logprob: -13.262540817260742
    9. '                ' → logprob: -13.887540817260742
    10. '                   ' → logprob: -14.012540817260742

Token 428: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -1.9743012671824545e-05
    2. '               ' → logprob: -11.000020027160645
    3. ' end' → logprob: -12.750020027160645
    4. '
' → logprob: -16.875019073486328
    5. '   ' → logprob: -18.125019073486328
    6. '           ' → logprob: -18.625019073486328
    7. '       ' → logprob: -19.250019073486328
    8. '```' → logprob: -19.375019073486328
    9. '	end' → logprob: -19.500019073486328
    10. '                
' → logprob: -20.125019073486328

Token 429: ' =' (ID: 314)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9058552384376526
    2. '=' → logprob: -1.5308551788330078
    3. ' =' → logprob: -1.6558551788330078
    4. ' -=' → logprob: -2.530855178833008
    5. '-=' → logprob: -2.530855178833008
    6. ' -' → logprob: -3.905855178833008
    7. '               ' → logprob: -4.780855178833008
    8. '           ' → logprob: -8.655855178833008
    9. '                ' → logprob: -9.030855178833008
    10. '                   ' → logprob: -9.405855178833008

Token 430: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01814994215965271
    2. ' i' → logprob: -4.0181498527526855
    3. 'start' → logprob: -20.643150329589844
    4. ' ' → logprob: -21.268150329589844
    5. '               ' → logprob: -21.768150329589844
    6. '	i' → logprob: -22.018150329589844
    7. ' start' → logprob: -22.518150329589844
    8. '   ' → logprob: -22.768150329589844
    9. '                   ' → logprob: -23.268150329589844
    10. ' ' → logprob: -23.768150329589844

Token 431: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04858794063329697
    2. '-' → logprob: -3.0485880374908447
    3. ' ' → logprob: -15.173587799072266
    4. '   ' → logprob: -16.048587799072266
    5. '<|end|>' → logprob: -16.048587799072266
    6. '–' → logprob: -17.798587799072266
    7. '```' → logprob: -17.923587799072266
    8. '       ' → logprob: -18.173587799072266
    9. ' ' → logprob: -18.798587799072266
    10. '           ' → logprob: -18.798587799072266

Token 432: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -18.875
    4. '0' → logprob: -20.375
    5. '2' → logprob: -20.375
    6. '
' → logprob: -21.375
    7. '   ' → logprob: -21.375
    8. '１' → logprob: -22.0
    9. '۱' → logprob: -22.5625
    10. '-' → logprob: -22.75

Token 433: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '2' → logprob: -18.500001907348633
    4. '0' → logprob: -20.000001907348633
    5. '```' → logprob: -20.250001907348633
    6. '   ' → logprob: -20.625001907348633
    7. '１' → logprob: -21.375001907348633
    8. '
' → logprob: -21.562501907348633
    9. '۱' → logprob: -21.937501907348633
    10. '-' → logprob: -22.875001907348633

Token 434: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017298025777563453
    2. '
' → logprob: -6.876729965209961
    3. '       ' → logprob: -8.251729965209961
    4. 'token' → logprob: -8.751729965209961
    5. 'length' → logprob: -9.501729965209961
    6. '           ' → logprob: -10.376729965209961
    7. 'sequence' → logprob: -10.501729965209961
    8. ' length' → logprob: -10.876729965209961
    9. 'seq' → logprob: -10.876729965209961
    10. '<|end|>' → logprob: -11.001729965209961

Token 435: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006041454034857452
    2. 'length' → logprob: -8.625603675842285
    3. 'seq' → logprob: -9.000603675842285
    4. '
' → logprob: -9.250603675842285
    5. 'sequence' → logprob: -9.750603675842285
    6. 'token' → logprob: -10.000603675842285
    7. ' length' → logprob: -11.000603675842285
    8. '```' → logprob: -11.125603675842285
    9. '       ' → logprob: -11.250603675842285
    10. '                
' → logprob: -11.625603675842285

Token 436: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' (adapté à ' seq') → logprob: -0.42155468463897705
    2. 'sub' → logprob: -2.1715545654296875
    3. 'segment' → logprob: -2.1715545654296875
    4. 'length' → logprob: -2.5465545654296875
    5. 'seg' → logprob: -3.4215545654296875
    6. '               ' → logprob: -6.5465545654296875
    7. 'sequence' → logprob: -6.7965545654296875
    8. 'substr' → logprob: -7.0465545654296875
    9. 'substring' → logprob: -7.6715545654296875
    10. 'total' → logprob: -8.046554565429688

Token 437: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.20151099562644958
    2. '_length' → logprob: -1.701511025428772
    3. '_' → logprob: -9.82651138305664
    4. ' =' → logprob: -10.32651138305664
    5. '=' → logprob: -12.57651138305664
    6. '_l' → logprob: -12.70151138305664
    7. 'len' → logprob: -13.57651138305664
    8. 'length' → logprob: -13.82651138305664
    9. '_str' → logprob: -14.20151138305664
    10. '=_' → logprob: -15.32651138305664

Token 438: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868710398674011
    2. ' =' → logprob: -1.136871099472046
    3. ',' → logprob: -19.261871337890625
    4. 'de' → logprob: -19.511871337890625
    5. ' ' → logprob: -19.511871337890625
    6. 's' → logprob: -19.636871337890625
    7. '=sub' → logprob: -19.886871337890625
    8. '=
' → logprob: -20.136871337890625
    9. '＝' → logprob: -20.386871337890625
    10. ' ' → logprob: -20.386871337890625

Token 439: ' decompress' (ID: 195938)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -6.2729995988775045e-06
    2. ' decompress' → logprob: -12.000006675720215
    3. ' decom' → logprob: -16.5000057220459
    4. 'decrypt' → logprob: -18.7500057220459
    5. '   ' → logprob: -19.7500057220459
    6. '  ' → logprob: -21.2500057220459
    7. '	de' → logprob: -21.3750057220459
    8. ' ' → logprob: -21.5000057220459
    9. '(de' → logprob: -21.7500057220459
    10. 'deque' → logprob: -22.2500057220459

Token 440: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.5048530030981055e-06
    2. '_len' → logprob: -13.500001907348633
    3. 'length' → logprob: -16.875001907348633
    4. '_l' → logprob: -18.250001907348633
    5. ' _' → logprob: -20.000001907348633
    6. '_lengths' → logprob: -20.375001907348633
    7. '_LENGTH' → logprob: -20.500001907348633
    8. '```' → logprob: -20.500001907348633
    9. '_' → logprob: -20.875001907348633
    10. 'Length' → logprob: -21.000001907348633

Token 441: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.771655115589965e-05
    2. 's' → logprob: -11.125018119812012
    3. '(' → logprob: -12.750018119812012
    4. ' (' → logprob: -17.125017166137695
    5. '(
' → logprob: -19.375017166137695
    6. '```' → logprob: -19.500017166137695
    7. ' s' → logprob: -19.625017166137695
    8. '#' → logprob: -19.625017166137695
    9. ')' → logprob: -19.750017166137695
    10. 'def' → logprob: -19.875017166137695

Token 442: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.015364059247076511
    2. '[s' → logprob: -4.390364170074463
    3. '(s' → logprob: -6.765364170074463
    4. 's' → logprob: -7.015364170074463
    5. '[' → logprob: -7.640364170074463
    6. '(start' → logprob: -8.765363693237305
    7. ')' → logprob: -9.765363693237305
    8. ')[' → logprob: -9.890363693237305
    9. 'start' → logprob: -11.265363693237305
    10. ',start' → logprob: -11.265363693237305

Token 443: ':end' (ID: 63990)
  Prédit: ':end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':end' → logprob: -9.460291767027229e-05
    2. 'end' → logprob: -9.500094413757324
    3. ':' → logprob: -11.375094413757324
    4. ' :' → logprob: -12.750094413757324
    5. ',end' → logprob: -12.875094413757324
    6. '[end' → logprob: -13.375094413757324
    7. '	end' → logprob: -15.125094413757324
    8. '
' → logprob: -15.625094413757324
    9. ' end' → logprob: -15.750094413757324
    10. '@end' → logprob: -16.12509536743164

Token 444: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014003420248627663
    2. ')
' → logprob: -4.389003276824951
    3. '               ' → logprob: -6.514003276824951
    4. '           ' → logprob: -12.51400375366211
    5. ')
' → logprob: -13.13900375366211
    6. ']' → logprob: -13.51400375366211
    7. '）' → logprob: -14.26400375366211
    8. ')

' → logprob: -14.63900375366211
    9. ' )' → logprob: -14.76400375366211
    10. '])' → logprob: -14.88900375366211

Token 445: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00031389365904033184
    2. 'if' → logprob: -9.000313758850098
    3. ' if' → logprob: -9.375313758850098
    4. '```' → logprob: -9.500313758850098
    5. '                
' → logprob: -11.375313758850098
    6. '           ' → logprob: -11.750313758850098
    7. '       ' → logprob: -12.500313758850098
    8. '``' → logprob: -13.375313758850098
    9. '
' → logprob: -13.500313758850098
    10. '                   ' → logprob: -13.750313758850098

Token 446: ' total' (ID: 3609)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.022313734516501427
    2. '               ' → logprob: -4.772313594818115
    3. 'total' (adapté à ' total') → logprob: -5.147313594818115
    4. ' if' → logprob: -5.772313594818115
    5. 'length' → logprob: -5.772313594818115
    6. 'rep' → logprob: -7.647313594818115
    7. 'segment' → logprob: -8.022314071655273
    8. 'repeat' → logprob: -9.022314071655273
    9. 'index' → logprob: -9.272314071655273
    10. 'token' → logprob: -9.272314071655273

Token 447: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.05172477290034294
    2. '_length' → logprob: -3.051724672317505
    3. '_seq' → logprob: -5.801724910736084
    4. ' =' → logprob: -9.676724433898926
    5. '_' → logprob: -11.176724433898926
    6. '=' → logprob: -11.176724433898926
    7. '_size' → logprob: -11.551724433898926
    8. 'len' → logprob: -12.426724433898926
    9. '_repeat' → logprob: -13.051724433898926
    10. '_block' → logprob: -13.801724433898926

Token 448: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16025489568710327
    2. '=' → logprob: -1.910254955291748
    3. ' +=' → logprob: -10.53525447845459
    4. '+=' → logprob: -13.03525447845459
    5. ' ' → logprob: -14.66025447845459
    6. '               ' → logprob: -15.16025447845459
    7. ' *=' → logprob: -15.53525447845459
    8. '                ' → logprob: -15.53525447845459
    9. '*' → logprob: -15.91025447845459
    10. '   ' → logprob: -16.035255432128906

Token 449: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.005729094613343477
    2. 'seq' → logprob: -5.2557291984558105
    3. ' num' → logprob: -7.6307291984558105
    4. ' seq' → logprob: -12.255728721618652
    5. '   ' → logprob: -12.755728721618652
    6. ' ' → logprob: -13.130728721618652
    7. '  ' → logprob: -16.63072967529297
    8. '	num' → logprob: -16.63072967529297
    9. '     ' → logprob: -17.63072967529297
    10. 'sequence' → logprob: -17.75572967529297

Token 450: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.00033546582562848926
    2. '*' → logprob: -8.000335693359375
    3. ' ' → logprob: -17.500335693359375
    4. ' *=' → logprob: -20.750335693359375
    5. '*object' → logprob: -20.750335693359375
    6. ',' → logprob: -21.000335693359375
    7. ' ' → logprob: -21.375335693359375
    8. '#' → logprob: -21.375335693359375
    9. ' =' → logprob: -21.500335693359375
    10. ')' → logprob: -21.625335693359375

Token 451: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.00033581978641450405
    2. ' seq' → logprob: -8.000335693359375
    3. '(seq' → logprob: -15.000335693359375
    4. '_seq' → logprob: -20.875335693359375
    5. '                   ' → logprob: -21.375335693359375
    6. ' ' → logprob: -21.500335693359375
    7. '               ' → logprob: -21.750335693359375
    8. 'sq' → logprob: -22.250335693359375
    9. '.seq' → logprob: -22.625335693359375
    10. 'int' → logprob: -22.625335693359375

Token 452: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -5.512236498361744e-07
    2. ' _' → logprob: -15.375000953674316
    3. '_LEN' → logprob: -15.500000953674316
    4. '(_' → logprob: -17.25
    5. '._' → logprob: -17.375
    6. '[_' → logprob: -17.875
    7. '_seq' → logprob: -18.125
    8. '__' → logprob: -18.75
    9. '_' → logprob: -19.5
    10. 'len' → logprob: -19.625

Token 453: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3909038305282593
    2. '               ' → logprob: -1.2659038305282593
    3. '\n' → logprob: -3.515903949737549
    4. '                
' → logprob: -5.140903949737549
    5. ' 
' → logprob: -6.015903949737549
    6. '  
' → logprob: -6.640903949737549
    7. '<|end|>' → logprob: -6.765903949737549
    8. '
' → logprob: -8.51590347290039
    9. ' if' → logprob: -8.64090347290039
    10. '\' → logprob: -9.51590347290039

Token 454: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2582263946533203
    2. '               ' → logprob: -1.5082263946533203
    3. '```' → logprob: -6.00822639465332
    4. ' if' → logprob: -6.88322639465332
    5. '       ' → logprob: -7.25822639465332
    6. '<|end|>' → logprob: -7.38322639465332
    7. '\n' → logprob: -7.63322639465332
    8. '                
' → logprob: -8.25822639465332
    9. 'if' → logprob: -8.88322639465332
    10. '``' → logprob: -8.88322639465332

Token 455: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12461712211370468
    2. ' if' → logprob: -2.874617099761963
    3. '               ' → logprob: -2.874617099761963
    4. '
' → logprob: -5.499617099761963
    5. '       ' → logprob: -9.249617576599121
    6. '                
' → logprob: -9.874617576599121
    7. '           ' → logprob: -10.749617576599121
    8. '\n' → logprob: -12.124617576599121
    9. '```' → logprob: -12.124617576599121
    10. '	if' → logprob: -12.749617576599121

Token 456: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.6931970119476318
    2. ' index' → logprob: -0.6931970119476318
    3. ' total' → logprob: -10.943197250366211
    4. '   ' → logprob: -11.068197250366211
    5. 'total' → logprob: -11.318197250366211
    6. '	index' → logprob: -13.193197250366211
    7. ' ' → logprob: -13.318197250366211
    8. '(index' → logprob: -15.068197250366211
    9. '#index' → logprob: -16.31819725036621
    10. '=index' → logprob: -16.81819725036621

Token 457: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08915451914072037
    2. '<' → logprob: -2.4641544818878174
    3. ' >=' → logprob: -8.589154243469238
    4. ' ' → logprob: -11.089154243469238
    5. '>=' → logprob: -12.214154243469238
    6. '<num' → logprob: -13.339154243469238
    7. '<size' → logprob: -13.339154243469238
    8. '[' → logprob: -14.089154243469238
    9. '<int' → logprob: -14.089154243469238
    10. ' ' → logprob: -14.714154243469238

Token 458: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.2620193660259247
    2. ' total' → logprob: -1.512019395828247
    3. 'seq' → logprob: -4.887019157409668
    4. ' seq' → logprob: -6.012019157409668
    5. '               ' → logprob: -10.637019157409668
    6. 'length' → logprob: -12.262019157409668
    7. '0' → logprob: -12.637019157409668
    8. '                   ' → logprob: -12.887019157409668
    9. 'sequence' → logprob: -13.137019157409668
    10. '                ' → logprob: -13.262019157409668

Token 459: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.250000953674316
    3. '_l' → logprob: -16.25
    4. ' _' → logprob: -17.0
    5. '_le' → logprob: -17.0
    6. '_length' → logprob: -18.75
    7. '_LEN' → logprob: -19.875
    8. 'len' → logprob: -20.625
    9. '_
' → logprob: -21.125
    10. '_val' → logprob: -21.5

Token 460: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.195166677236557
    2. ':
' → logprob: -1.8201667070388794
    3. '               ' → logprob: -4.69516658782959
    4. '                   ' → logprob: -5.44516658782959
    5. '                       ' → logprob: -6.94516658782959
    6. '           ' → logprob: -8.07016658782959
    7. '<|end|>' → logprob: -8.94516658782959
    8. '                           ' → logprob: -9.82016658782959
    9. '<|end|>' → logprob: -9.82016658782959
    10. ' and' → logprob: -9.94516658782959

Token 461: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05268889665603638
    2. ' if' → logprob: -4.427689075469971
    3. 'if' → logprob: -4.677689075469971
    4. '                       ' → logprob: -4.802689075469971
    5. '               ' → logprob: -5.052689075469971
    6. '                    
' → logprob: -5.177689075469971
    7. ':
' → logprob: -6.302689075469971
    8. '
' → logprob: -6.552689075469971
    9. 'return' → logprob: -7.052689075469971
    10. ' return' → logprob: -7.427689075469971

Token 462: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.39715561270713806
    2. 'sub' → logprob: -2.647155523300171
    3. 'pos' → logprob: -3.022155523300171
    4. 'seq' → logprob: -3.022155523300171
    5. 'index' → logprob: -3.522155523300171
    6. 'for' → logprob: -3.897155523300171
    7. 'offset' → logprob: -3.897155523300171
    8. '                   ' → logprob: -4.02215576171875
    9. 'idx' → logprob: -4.27215576171875
    10. ' return' → logprob: -4.39715576171875

Token 463: ' find' (ID: 1646)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2080160677433014
    2. 'index' → logprob: -1.833016037940979
    3. 'for' → logprob: -5.0830159187316895
    4. 'sub' → logprob: -5.2080159187316895
    5. ' return' → logprob: -5.5830159187316895
    6. 'idx' → logprob: -5.9580159187316895
    7. 'seq' → logprob: -6.2080159187316895
    8. '                   ' → logprob: -6.3330159187316895
    9. '                       ' → logprob: -6.7080159187316895
    10. 'pos' → logprob: -6.8330159187316895

Token 464: ' which' (ID: 1118)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -1.313884973526001
    2. 'seq' → logprob: -1.688884973526001
    3. 'pos' → logprob: -1.813884973526001
    4. 'return' → logprob: -2.438884973526001
    5. ' offset' → logprob: -2.813884973526001
    6. ' return' → logprob: -3.438884973526001
    7. ' seq' → logprob: -3.438884973526001
    8. 'sub' → logprob: -3.563884973526001
    9. 'char' → logprob: -3.688884973526001
    10. 'inner' → logprob: -4.313884735107422

Token 465: ' repetition' (ID: 100556)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.3847086727619171
    2. 'rep' → logprob: -2.0097086429595947
    3. 'repeat' → logprob: -2.3847086429595947
    4. 'seq' → logprob: -3.2597086429595947
    5. 'occ' → logprob: -4.259708881378174
    6. 'block' → logprob: -4.634708881378174
    7. 'pos' → logprob: -5.134708881378174
    8. ' part' → logprob: -5.134708881378174
    9. 'sub' → logprob: -5.509708881378174
    10. 'segment' → logprob: -5.634708881378174

Token 466: ' of' (ID: 328)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6138837933540344
    2. '                       ' → logprob: -1.8638837337493896
    3. '                        
' → logprob: -3.4888837337493896
    4. 'block' → logprob: -3.7388837337493896
    5. '                    
' → logprob: -3.8638837337493896
    6. 're' → logprob: -3.8638837337493896
    7. '(' → logprob: -4.113883972167969
    8. 'rep' → logprob: -4.113883972167969
    9. 'repeat' → logprob: -4.113883972167969
    10. 'segment' → logprob: -4.238883972167969

Token 467: ' sequence' (ID: 16281)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.03951083496212959
    2. 'the' → logprob: -3.789510726928711
    3. 'index' → logprob: -5.164510726928711
    4. '(seq' → logprob: -5.539510726928711
    5. 'sequence' → logprob: -5.789510726928711
    6. 's' → logprob: -6.039510726928711
    7. ' seq' → logprob: -7.789510726928711
    8. ' the' → logprob: -8.914510726928711
    9. '(s' → logprob: -9.039510726928711
    10. ' (' → logprob: -9.414510726928711

Token 468: ' contains' (ID: 8895)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.900947630405426
    2. 'seq' → logprob: -1.9009475708007812
    3. '                       ' → logprob: -2.6509475708007812
    4. ' and' → logprob: -2.6509475708007812
    5. 'if' → logprob: -3.1509475708007812
    6. ' seq' → logprob: -3.4009475708007812
    7. 'and' → logprob: -3.7759475708007812
    8. '               ' → logprob: -4.275947570800781
    9. 'pos' → logprob: -4.400947570800781
    10. ' if' → logprob: -4.400947570800781

Token 469: ' the' (ID: 290)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.08146537095308304
    2. 'seq' → logprob: -3.081465482711792
    3. ' index' → logprob: -4.081465244293213
    4. 'the' → logprob: -5.831465244293213
    5. 'if' → logprob: -5.956465244293213
    6. 'start' → logprob: -6.081465244293213
    7. 'sequence' → logprob: -6.206465244293213
    8. ' seq' → logprob: -6.331465244293213
    9. '   ' → logprob: -7.206465244293213
    10. 'return' → logprob: -7.331465244293213

Token 470: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.15112216770648956
    2. 'char' → logprob: -2.9011220932006836
    3. 'token' → logprob: -3.4011220932006836
    4. 'character' → logprob: -4.276122093200684
    5. ' index' → logprob: -4.651122093200684
    6. 'next' → logprob: -5.026122093200684
    7. 'seq' → logprob: -5.151122093200684
    8. 'sequence' → logprob: -5.651122093200684
    9. ''' → logprob: -6.276122093200684
    10. ' character' → logprob: -6.901122093200684

Token 471: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.2785110473632812
    2. 'seq' → logprob: -1.4035110473632812
    3. ' seq' → logprob: -2.0285110473632812
    4. 'if' → logprob: -2.9035110473632812
    5. 'block' → logprob: -3.4035110473632812
    6. 'repeat' → logprob: -3.5285110473632812
    7. '                       ' → logprob: -3.9035110473632812
    8. 'rep' → logprob: -3.9035110473632812
    9. 'segment' → logprob: -4.028511047363281
    10. 'index' → logprob: -4.028511047363281

Token 472: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7045451998710632
    2. 'seq' → logprob: -1.079545259475708
    3. 'index' → logprob: -2.829545259475708
    4. ' seq' → logprob: -3.204545259475708
    5. 'segment' → logprob: -4.454545021057129
    6. '                       ' → logprob: -5.204545021057129
    7. 'start' → logprob: -5.454545021057129
    8. ' and' → logprob: -5.454545021057129
    9. 'return' → logprob: -5.454545021057129
    10. 'if' → logprob: -5.704545021057129

Token 473: ' index' (ID: 3472)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -1.1713324785232544
    2. 'offset' → logprob: -1.9213324785232544
    3. 'seq' → logprob: -2.046332359313965
    4. 'rep' → logprob: -2.421332359313965
    5. ' repeat' → logprob: -3.046332359313965
    6. 'pos' → logprob: -3.171332359313965
    7. ' rep' → logprob: -3.171332359313965
    8. 're' → logprob: -3.671332359313965
    9. ' seq' → logprob: -3.671332359313965
    10. ' offset' → logprob: -3.921332359313965

Token 474: '_in' (ID: 2267)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04089300334453583
    2. ' =' → logprob: -3.915893077850342
    3. '//=' → logprob: -4.415893077850342
    4. '%=' → logprob: -5.415893077850342
    5. ' %=' → logprob: -5.915893077850342
    6. ' //' → logprob: -7.040893077850342
    7. '//' → logprob: -11.040892601013184
    8. '%' → logprob: -11.665892601013184
    9. ' ' → logprob: -12.415892601013184
    10. '   ' → logprob: -12.415892601013184

Token 475: '_seq' (ID: 34260)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.09481173753738403
    2. '_seq' → logprob: -2.5948116779327393
    3. 'sequence' → logprob: -4.469811916351318
    4. '_sequence' → logprob: -6.094811916351318
    5. '=' → logprob: -6.969811916351318
    6. ' =' → logprob: -7.469811916351318
    7. '(seq' → logprob: -7.969811916351318
    8. 'the' → logprob: -10.09481143951416
    9. ' sequence' → logprob: -10.09481143951416
    10. ' seq' → logprob: -10.34481143951416

Token 476: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741057753562927
    2. '=' → logprob: -0.9741057753562927
    3. ' %=' → logprob: -10.724105834960938
    4. '%=' → logprob: -12.724105834960938
    5. ' ' → logprob: -13.099105834960938
    6. '=index' → logprob: -13.974105834960938
    7. '    ' → logprob: -14.974105834960938
    8. '   ' → logprob: -15.474105834960938
    9. ' -=' → logprob: -16.599105834960938
    10. '%' → logprob: -17.349105834960938

Token 477: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.3868744373321533
    2. 'index' → logprob: -1.1368744373321533
    3. '(index' → logprob: -13.761874198913574
    4. '                   ' → logprob: -13.886874198913574
    5. '   ' → logprob: -14.886874198913574
    6. ' ' → logprob: -15.136874198913574
    7. '	index' → logprob: -15.511874198913574
    8. '#index' → logprob: -15.886874198913574
    9. '=index' → logprob: -16.13687515258789
    10. '[index' → logprob: -16.26187515258789

Token 478: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1005108430981636
    2. '%' → logprob: -2.350510835647583
    3. ' //' → logprob: -8.225510597229004
    4. ' ' → logprob: -10.975510597229004
    5. '%s' → logprob: -12.100510597229004
    6. '//' → logprob: -12.475510597229004
    7. ' %=' → logprob: -12.975510597229004
    8. '%d' → logprob: -13.225510597229004
    9. '%n' → logprob: -14.225510597229004
    10. '                        ' → logprob: -14.600510597229004

Token 479: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -2.7848862373502925e-05
    2. ' seq' → logprob: -10.500027656555176
    3. '(seq' → logprob: -15.250027656555176
    4. 'sequence' → logprob: -21.875028610229492
    5. 'seg' → logprob: -22.375028610229492
    6. ' ' → logprob: -23.625028610229492
    7. '.seq' → logprob: -23.750028610229492
    8. '_seq' → logprob: -23.875028610229492
    9. 'sequ' → logprob: -23.875028610229492
    10. '                   ' → logprob: -25.000028610229492

Token 480: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: 0.0
    2. '_LEN' → logprob: -18.75
    3. '_' → logprob: -19.25
    4. 'len' → logprob: -20.0
    5. '_l' → logprob: -20.0
    6. '__' → logprob: -20.875
    7. '_le' → logprob: -21.125
    8. ' _' → logprob: -21.5
    9. '_seq' → logprob: -21.75
    10. '[_' → logprob: -22.625

Token 481: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5024204850196838
    2. '
' → logprob: -1.502420425415039
    3. '<|end|>' → logprob: -2.127420425415039
    4. '               ' → logprob: -4.002420425415039
    5. '                    
' → logprob: -4.127420425415039
    6. ')' → logprob: -4.877420425415039
    7. '<|end|>' → logprob: -6.252420425415039
    8. '                    ' → logprob: -6.752420425415039
    9. '                ' → logprob: -7.002420425415039
    10. '                       ' → logprob: -7.252420425415039

Token 482: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12916868925094604
    2. 'return' → logprob: -2.129168748855591
    3. ' return' → logprob: -6.129168510437012
    4. '               ' → logprob: -10.254168510437012
    5. '           ' → logprob: -12.129168510437012
    6. '                    
' → logprob: -12.629168510437012
    7. '                       ' → logprob: -12.754168510437012
    8. '
' → logprob: -12.879168510437012
    9. '```' → logprob: -13.629168510437012
    10. '   ' → logprob: -13.629168510437012

Token 483: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06830230355262756
    2. '                   ' → logprob: -2.8183023929595947
    3. ' return' → logprob: -5.068302154541016
    4. '           ' → logprob: -11.443302154541016
    5. '               ' → logprob: -12.068302154541016
    6. '   ' → logprob: -13.193302154541016
    7. '       ' → logprob: -13.943302154541016
    8. '	return' → logprob: -14.443302154541016
    9. '                       ' → logprob: -15.068302154541016
    10. '
' → logprob: -15.193302154541016

Token 484: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.0007099286303855479
    2. ' char' → logprob: -7.2507100105285645
    3. '(char' → logprob: -22.000709533691406
    4. '               ' → logprob: -22.125709533691406
    5. '                   ' → logprob: -22.500709533691406
    6. '   ' → logprob: -23.000709533691406
    7. '.char' → logprob: -23.125709533691406
    8. '	char' → logprob: -23.250709533691406
    9. '<char' → logprob: -23.375709533691406
    10. ' ' → logprob: -23.625709533691406

Token 485: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -14.750000953674316
    3. '_a' → logprob: -17.5
    4. '__' → logprob: -17.625
    5. ' _' → logprob: -17.75
    6. '_in' → logprob: -18.25
    7. ')_' → logprob: -18.625
    8. '_for' → logprob: -19.0
    9. '_AT' → logprob: -19.0
    10. '_to' → logprob: -19.25

Token 486: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0008371464791707695
    2. 's' → logprob: -7.250837326049805
    3. '(' → logprob: -9.000837326049805
    4. ' (' → logprob: -13.625837326049805
    5. '```' → logprob: -13.625837326049805
    6. '(
' → logprob: -13.750837326049805
    7. '((' → logprob: -15.875837326049805
    8. '`s' → logprob: -16.500837326049805
    9. ' s' → logprob: -17.625837326049805
    10. '`' → logprob: -17.625837326049805

Token 487: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.0264965258538723
    2. '[s' → logprob: -3.651496410369873
    3. '[' → logprob: -8.651496887207031
    4. 's' → logprob: -12.776496887207031
    5. ')[' → logprob: -12.776496887207031
    6. '```' → logprob: -12.776496887207031
    7. '(s' → logprob: -13.151496887207031
    8. '[end' → logprob: -13.401496887207031
    9. '(start' → logprob: -13.526496887207031
    10. ',' → logprob: -13.901496887207031

Token 488: ':end' (ID: 63990)
  Prédit: ':end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':end' → logprob: -0.07014027237892151
    2. ':' → logprob: -2.8201403617858887
    3. ':index' → logprob: -5.320140361785889
    4. ':],' → logprob: -6.195140361785889
    5. ' :' → logprob: -7.445140361785889
    6. ',' → logprob: -9.07013988494873
    7. '[end' → logprob: -9.19513988494873
    8. ':return' → logprob: -9.82013988494873
    9. ':]' → logprob: -9.94513988494873
    10. ',end' → logprob: -10.07013988494873

Token 489: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023474086076021194
    2. ',index' → logprob: -3.7734739780426025
    3. ' ,' → logprob: -8.398473739624023
    4. '],' → logprob: -13.148473739624023
    5. 'index' → logprob: -14.773473739624023
    6. '                   ' → logprob: -15.023473739624023
    7. '[index' → logprob: -15.273473739624023
    8. '(index' → logprob: -16.023473739624023
    9. '‌,' → logprob: -16.148473739624023
    10. ',
' → logprob: -16.523473739624023

Token 490: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.575939953327179
    2. ' index' → logprob: -0.825939953327179
    3. '                    ' → logprob: -15.075940132141113
    4. '                   ' → logprob: -15.700940132141113
    5. '	index' → logprob: -17.575939178466797
    6. '(index' → logprob: -17.700939178466797
    7. ',index' → logprob: -18.950939178466797
    8. '[index' → logprob: -19.075939178466797
    9. '#index' → logprob: -19.325939178466797
    10. ' ' → logprob: -19.450939178466797

Token 491: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.00025966696557588875
    2. '_index' → logprob: -8.875259399414062
    3. '=index' → logprob: -9.625259399414062
    4. 'index' → logprob: -10.625259399414062
    5. 'in' → logprob: -11.875259399414062
    6. '[index' → logprob: -12.125259399414062
    7. '_at' → logprob: -12.375259399414062
    8. '   ' → logprob: -12.375259399414062
    9. ')' → logprob: -12.750259399414062
    10. '=' → logprob: -13.250259399414062

Token 492: '_seq' (ID: 34260)
  Prédit: '_seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seq' → logprob: -0.04868706315755844
    2. 'seq' → logprob: -3.048686981201172
    3. 'ex' → logprob: -9.673686981201172
    4. 'dex' → logprob: -10.423686981201172
    5. '_' → logprob: -12.798686981201172
    6. ' seq' → logprob: -13.673686981201172
    7. 'Seq' → logprob: -13.923686981201172
    8. 'index' → logprob: -14.548686981201172
    9. 'sequence' → logprob: -15.298686981201172
    10. '(seq' → logprob: -15.298686981201172

Token 493: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7729658540920354e-05
    2. ')
' → logprob: -10.625027656555176
    3. '               ' → logprob: -13.375027656555176
    4. ' )' → logprob: -13.500027656555176
    5. '       ' → logprob: -15.375027656555176
    6. ')return' → logprob: -16.375028610229492
    7. '           ' → logprob: -16.750028610229492
    8. '                   ' → logprob: -17.125028610229492
    9. '   ' → logprob: -17.500028610229492
    10. '')' → logprob: -17.750028610229492

Token 494: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12217683345079422
    2. '       ' → logprob: -2.6221768856048584
    3. '           ' → logprob: -3.3721768856048584
    4. 'else' → logprob: -4.872176647186279
    5. 'return' → logprob: -8.497177124023438
    6. '```' → logprob: -9.122177124023438
    7. ' else' → logprob: -10.372177124023438
    8. 'continue' → logprob: -11.247177124023438
    9. 'index' → logprob: -11.247177124023438
    10. '
' → logprob: -11.622177124023438

Token 495: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26620858907699585
    2. 'else' (adapté à ' else') → logprob: -1.5162086486816406
    3. 'index' → logprob: -4.266208648681641
    4. '       ' → logprob: -9.89120864868164
    5. '               ' → logprob: -10.14120864868164
    6. ' else' → logprob: -10.26620864868164
    7. '
' → logprob: -11.89120864868164
    8. 'elif' → logprob: -12.51620864868164
    9. ' index' → logprob: -13.14120864868164
    10. '   ' → logprob: -13.39120864868164

Token 496: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9597342014312744
    2. ':
' → logprob: -1.0847342014312744
    3. ':' → logprob: -1.4597342014312744
    4. '           ' → logprob: -3.2097342014312744
    5. 'index' → logprob: -6.209733963012695
    6. '               ' → logprob: -6.834733963012695
    7. ':index' → logprob: -7.084733963012695
    8. ' index' → logprob: -7.209733963012695
    9. ' :' → logprob: -7.959733963012695
    10. '#index' → logprob: -8.084733963012695

Token 497: '                   ' (ID: 699)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.41239574551582336
    2. '           ' → logprob: -1.162395715713501
    3. ' index' → logprob: -4.16239595413208
    4. '               ' → logprob: -5.16239595413208
    5. '                   ' → logprob: -5.78739595413208
    6. '       ' → logprob: -7.66239595413208
    7. '   ' → logprob: -8.787395477294922
    8. '#index' → logprob: -9.162395477294922
    9. '
' → logprob: -9.912395477294922
    10. '	index' → logprob: -10.787395477294922

Token 498: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' (adapté à ' index') → logprob: -0.0031879288144409657
    2. ' index' → logprob: -5.753188133239746
    3. '
' → logprob: -12.378188133239746
    4. '           ' → logprob: -13.378188133239746
    5. '       ' → logprob: -13.378188133239746
    6. '                   ' → logprob: -13.878188133239746
    7. '   ' → logprob: -14.253188133239746
    8. '#index' → logprob: -14.628188133239746
    9. '	index' → logprob: -14.878188133239746
    10. '               ' → logprob: -15.128188133239746

Token 499: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.5307177901268005
    2. '-=' → logprob: -1.0307178497314453
    3. '-' → logprob: -2.9057178497314453
    4. ' -' → logprob: -8.905717849731445
    5. '    ' → logprob: -9.405717849731445
    6. '=' → logprob: -9.655717849731445
    7. '   ' → logprob: -10.155717849731445
    8. '```' → logprob: -11.530717849731445
    9. '>' → logprob: -11.780717849731445
    10. '        ' → logprob: -12.030717849731445

Token 500: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.676292231422849e-05
    2. ' total' → logprob: -11.000017166137695
    3. '                   ' → logprob: -18.250017166137695
    4. '               ' → logprob: -20.375017166137695
    5. '$total' → logprob: -20.625017166137695
    6. '(total' → logprob: -21.125017166137695
    7. '	total' → logprob: -21.375017166137695
    8. 'Total' → logprob: -22.000017166137695
    9. '_total' → logprob: -22.875017166137695
    10. '   ' → logprob: -23.375017166137695

Token 501: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: 0.0
    2. '_' → logprob: -17.875
    3. 'len' → logprob: -19.125
    4. '_l' → logprob: -20.25
    5. '_LEN' → logprob: -20.75
    6. '_le' → logprob: -21.25
    7. 'Len' → logprob: -22.375
    8. '__' → logprob: -22.625
    9. 'length' → logprob: -22.875
    10. ' _' → logprob: -23.0

Token 502: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 503: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010979671962559223
    2. '<|end|>' → logprob: -5.010979652404785
    3. 'continue' → logprob: -6.385979652404785
    4. '           ' → logprob: -6.885979652404785
    5. '```' → logprob: -6.885979652404785
    6. ' continue' → logprob: -8.010979652404785
    7. '   ' → logprob: -10.260979652404785
    8. 'else' → logprob: -10.260979652404785
    9. '	continue' → logprob: -10.510979652404785
    10. '               ' → logprob: -10.760979652404785

Token 504: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16099323332309723
    2. 'else' (adapté à ' else') → logprob: -1.910993218421936
    3. ' else' → logprob: -7.7859930992126465
    4. 'continue' → logprob: -8.160993576049805
    5. 'elif' → logprob: -10.160993576049805
    6. '   ' → logprob: -11.035993576049805
    7. '           ' → logprob: -12.660993576049805
    8. 'return' → logprob: -12.910993576049805
    9. '```' → logprob: -13.410993576049805
    10. '
' → logprob: -13.535993576049805

Token 505: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.35612475872039795
    2. ':' → logprob: -1.481124758720398
    3. '               ' → logprob: -2.9811248779296875
    4. '           ' → logprob: -3.9811248779296875
    5. ' :
' → logprob: -6.4811248779296875
    6. ' :' → logprob: -7.4811248779296875
    7. '       ' → logprob: -8.481124877929688
    8. '            ' → logprob: -9.231124877929688
    9. ' if' → logprob: -9.731124877929688
    10. '                   ' → logprob: -9.856124877929688

Token 506: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5424713492393494
    2. ' length' → logprob: -2.167471408843994
    3. ' index' → logprob: -2.667471408843994
    4. 'length' → logprob: -2.667471408843994
    5. ' i' → logprob: -3.042471408843994
    6. 'index' → logprob: -3.042471408843994
    7. '           ' → logprob: -3.292471408843994
    8. 'i' → logprob: -3.667471408843994
    9. '                   ' → logprob: -6.167471408843994
    10. ' return' → logprob: -6.792471408843994

Token 507: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6943396329879761
    2. 'length' → logprob: -1.694339632987976
    3. ' length' → logprob: -1.944339632987976
    4. 'if' → logprob: -1.944339632987976
    5. '           ' → logprob: -4.819339752197266
    6. '               ' → logprob: -4.819339752197266
    7. '#' (adapté à ' #') → logprob: -5.319339752197266
    8. 'char' → logprob: -6.069339752197266
    9. ' #' → logprob: -6.194339752197266
    10. 'index' → logprob: -7.069339752197266

Token 508: ' single' (ID: 4590)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0739881619811058
    2. 'if' → logprob: -3.573988199234009
    3. ' length' → logprob: -3.573988199234009
    4. '#' → logprob: -5.07398796081543
    5. 'return' → logprob: -5.44898796081543
    6. ' if' → logprob: -6.07398796081543
    7. 'index' → logprob: -7.19898796081543
    8. ' #' → logprob: -7.44898796081543
    9. 'char' → logprob: -7.94898796081543
    10. ' return' → logprob: -7.94898796081543

Token 509: ' letter' (ID: 10263)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.957538366317749
    2. 's' → logprob: -1.082538366317749
    3. ' ' → logprob: -1.957538366317749
    4. ')' → logprob: -3.957538366317749
    5. ' =' → logprob: -3.957538366317749
    6. ' i' → logprob: -4.332538604736328
    7. '=' → logprob: -4.457538604736328
    8. 'i' → logprob: -4.707538604736328
    9. 'letter' → logprob: -4.832538604736328
    10. ' letter' → logprob: -4.957538604736328

Token 510: ' repeated' (ID: 24161)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5730427503585815
    2. ' if' → logprob: -1.8230427503585815
    3. ' +=' → logprob: -2.573042869567871
    4. ' 
' → logprob: -2.698042869567871
    5. '               ' → logprob: -3.073042869567871
    6. ' ' → logprob: -3.573042869567871
    7. '            ' → logprob: -4.573042869567871
    8. '            
' → logprob: -4.948042869567871
    9. ' length' → logprob: -4.948042869567871
    10. ' =' → logprob: -5.448042869567871

Token 511: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5477414131164551
    2. ' s' → logprob: -1.422741413116455
    3. '           ' → logprob: -3.047741413116455
    4. ' if' → logprob: -4.047741413116455
    5. '               ' → logprob: -4.047741413116455
    6. 'num' → logprob: -4.422741413116455
    7. '(s' → logprob: -4.547741413116455
    8. ' +=' → logprob: -4.672741413116455
    9. '=' → logprob: -4.922741413116455
    10. '+=' → logprob: -4.922741413116455

Token 512: '               ' (ID: 506)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6978359222412109
    2. 'if' → logprob: -0.9478359222412109
    3. 'num' → logprob: -3.072835922241211
    4. '           ' → logprob: -4.697835922241211
    5. ' num' → logprob: -4.697835922241211
    6. ' ' → logprob: -4.947835922241211
    7. 's' → logprob: -5.197835922241211
    8. '0' → logprob: -5.197835922241211
    9. 'index' → logprob: -5.322835922241211
    10. '               ' → logprob: -5.822835922241211

Token 513: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0013996411580592394
    2. 'char' → logprob: -7.126399517059326
    3. 'letter' → logprob: -8.001399993896484
    4. 'length' → logprob: -9.501399993896484
    5. ' if' → logprob: -9.501399993896484
    6. 'c' → logprob: -10.626399993896484
    7. 'count' → logprob: -11.001399993896484
    8. 'seq' → logprob: -11.126399993896484
    9. 'ch' → logprob: -11.251399993896484
    10. '           ' → logprob: -11.376399993896484

Token 514: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.38696587085723877
    2. ' index' → logprob: -1.1369658708572388
    3. 'num' → logprob: -9.51196575164795
    4. ' num' → logprob: -10.88696575164795
    5. '   ' → logprob: -14.13696575164795
    6. ' ' → logprob: -14.76196575164795
    7. '	index' → logprob: -15.13696575164795
    8. 'i' → logprob: -15.76196575164795
    9. '(index' → logprob: -16.136966705322266
    10. 's' → logprob: -16.136966705322266

Token 515: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.16075502336025238
    2. '<' → logprob: -1.9107550382614136
    3. ' >=' → logprob: -7.660755157470703
    4. '>=' → logprob: -10.785755157470703
    5. ' ' → logprob: -10.910755157470703
    6. '<num' → logprob: -11.660755157470703
    7. '<size' → logprob: -12.285755157470703
    8. '<int' → logprob: -13.535755157470703
    9. '<len' → logprob: -13.910755157470703
    10. '<n' → logprob: -14.535755157470703

Token 516: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.011047814972698689
    2. ' num' → logprob: -4.511047840118408
    3. '(num' → logprob: -19.76104736328125
    4. '1' → logprob: -19.88604736328125
    5. '	num' → logprob: -19.88604736328125
    6. '           ' → logprob: -20.76104736328125
    7. '               ' → logprob: -21.13604736328125
    8. '=num' → logprob: -21.38604736328125
    9. '$num' → logprob: -21.38604736328125
    10. '[num' → logprob: -21.51104736328125

Token 517: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10652761161327362
    2. ':
' → logprob: -2.73152756690979
    3. ' and' → logprob: -3.60652756690979
    4. 'and' → logprob: -6.481527805328369
    5. ':return' → logprob: -6.606527805328369
    6. ' :' → logprob: -6.731527805328369
    7. '               ' → logprob: -7.106527805328369
    8. '==' → logprob: -7.106527805328369
    9. '):' → logprob: -7.481527805328369
    10. '           ' → logprob: -7.481527805328369

Token 518: '                   ' (ID: 699)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7398406863212585
    2. '               ' → logprob: -1.6148407459259033
    3. '                   ' → logprob: -1.7398407459259033
    4. ' return' → logprob: -1.9898407459259033
    5. ':return' → logprob: -4.864840507507324
    6. ':
' → logprob: -6.364840507507324
    7. ':' → logprob: -7.114840507507324
    8. '	return' → logprob: -8.364840507507324
    9. '   ' → logprob: -8.489840507507324
    10. '                       ' → logprob: -8.739840507507324

Token 519: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0004612935590557754
    2. ' return' → logprob: -7.875461101531982
    3. '               ' → logprob: -10.25046157836914
    4. '                   ' → logprob: -10.25046157836914
    5. '           ' → logprob: -11.75046157836914
    6. '                       ' → logprob: -14.62546157836914
    7. 's' → logprob: -14.75046157836914
    8. '{return' → logprob: -14.87546157836914
    9. ':return' → logprob: -14.87546157836914
    10. '   ' → logprob: -15.62546157836914

Token 520: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0019975120667368174
    2. ' s' → logprob: -6.251997470855713
    3. ''s' → logprob: -10.126997947692871
    4. ''' → logprob: -10.626997947692871
    5. ' ' → logprob: -13.501997947692871
    6. '0' → logprob: -14.251997947692871
    7. '`s' → logprob: -14.626997947692871
    8. '   ' → logprob: -14.751997947692871
    9. ' '' → logprob: -14.876997947692871
    10. '(s' → logprob: -15.126997947692871

Token 521: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.016168443486094475
    2. 'i' → logprob: -4.141168594360352
    3. ' i' → logprob: -9.266168594360352
    4. '[' → logprob: -10.891168594360352
    5. ' [' → logprob: -12.141168594360352
    6. '(i' → logprob: -12.391168594360352
    7. '   ' → logprob: -12.641168594360352
    8. '{i' → logprob: -13.766168594360352
    9. 's' → logprob: -13.891168594360352
    10. '```' → logprob: -14.141168594360352

Token 522: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14963947236537933
    2. '+' → logprob: -2.024639368057251
    3. '-' → logprob: -5.89963960647583
    4. ' ]' → logprob: -6.02463960647583
    5. ' +' → logprob: -7.52463960647583
    6. '[i' → logprob: -8.149639129638672
    7. '(i' → logprob: -8.649639129638672
    8. '```' → logprob: -8.649639129638672
    9. '+i' → logprob: -8.774639129638672
    10. ']
' → logprob: -9.024639129638672

Token 523: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00237885769456625
    2. '                   ' → logprob: -6.502378940582275
    3. '           ' → logprob: -7.377378940582275
    4. '       ' → logprob: -8.752378463745117
    5. 'i' → logprob: -10.002378463745117
    6. '```' → logprob: -11.502378463745117
    7. '   ' → logprob: -12.002378463745117
    8. '                
' → logprob: -12.127378463745117
    9. '<|end|>' → logprob: -12.377378463745117
    10. ' i' → logprob: -12.502378463745117

Token 524: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.10354552417993546
    2. '           ' → logprob: -2.9785454273223877
    3. 'index' → logprob: -3.4785454273223877
    4. '               ' → logprob: -4.353545665740967
    5. ' else' → logprob: -6.103545665740967
    6. 'i' → logprob: -6.728545665740967
    7. '                   ' → logprob: -8.478545188903809
    8. '       ' → logprob: -9.603545188903809
    9. ' index' → logprob: -10.603545188903809
    10. '   ' → logprob: -10.853545188903809

Token 525: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.33589622378349304
    2. ' index' → logprob: -1.8358962535858154
    3. ':
' → logprob: -2.5858962535858154
    4. 'index' → logprob: -3.7108962535858154
    5. ':' → logprob: -4.210896015167236
    6. ':index' → logprob: -5.585896015167236
    7. '               ' → logprob: -6.210896015167236
    8. '#index' → logprob: -6.710896015167236
    9. '(index' → logprob: -7.210896015167236
    10. '           ' → logprob: -7.335896015167236

Token 526: '                   ' (ID: 699)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.39814507961273193
    2. 'index' → logprob: -1.398145079612732
    3. '                   ' → logprob: -2.5231451988220215
    4. '               ' → logprob: -7.0231451988220215
    5. '           ' → logprob: -8.898144721984863
    6. ' ' → logprob: -10.398144721984863
    7. '   ' → logprob: -10.523144721984863
    8. '#index' → logprob: -10.523144721984863
    9. '                       ' → logprob: -11.398144721984863
    10. '                    ' → logprob: -11.523144721984863

Token 527: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' (adapté à ' index') → logprob: -0.20141646265983582
    2. ' index' → logprob: -1.7014164924621582
    3. '                   ' → logprob: -12.951416015625
    4. '           ' → logprob: -15.576416015625
    5. '#index' → logprob: -15.826416015625
    6. '               ' → logprob: -16.201416015625
    7. '       ' → logprob: -16.326416015625
    8. '   ' → logprob: -16.576416015625
    9. '	index' → logprob: -17.201416015625
    10. ' ' → logprob: -17.201416015625

Token 528: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.025679580867290497
    2. ' -=' → logprob: -3.900679588317871
    3. '-' → logprob: -5.275679588317871
    4. '=' → logprob: -11.650679588317871
    5. ' -' → logprob: -15.650679588317871
    6. '```' → logprob: -15.775679588317871
    7. '    ' → logprob: -15.900679588317871
    8. '>' → logprob: -16.025678634643555
    9. '   ' → logprob: -16.150678634643555
    10. ')' → logprob: -16.150678634643555

Token 529: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0002613358374219388
    2. ' num' → logprob: -8.250261306762695
    3. '(num' → logprob: -24.125261306762695
    4. '	num' → logprob: -24.125261306762695
    5. '[num' → logprob: -24.250261306762695
    6. '$num' → logprob: -24.875261306762695
    7. '           ' → logprob: -25.250261306762695
    8. ',num' → logprob: -25.625261306762695
    9. 'nu' → logprob: -25.750261306762695
    10. 'n' → logprob: -26.000261306762695

Token 530: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08399148285388947
    2. '               ' → logprob: -2.708991527557373
    3. 'i' → logprob: -5.083991527557373
    4. '                   ' → logprob: -5.208991527557373
    5. ' i' → logprob: -6.833991527557373
    6. '       ' → logprob: -6.833991527557373
    7. '   ' → logprob: -9.458991050720215
    8. '	       ' → logprob: -10.958991050720215
    9. '		' → logprob: -11.458991050720215
    10. '	           ' → logprob: -11.833991050720215

Token 531: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28405052423477173
    2. '           ' → logprob: -1.534050464630127
    3. 'i' → logprob: -3.534050464630127
    4. '               ' → logprob: -6.159050464630127
    5. '   ' → logprob: -9.034050941467285
    6. '```' → logprob: -9.534050941467285
    7. 'else' → logprob: -9.909050941467285
    8. ' i' → logprob: -10.284050941467285
    9. '                   ' → logprob: -10.534050941467285
    10. '	       ' → logprob: -13.659050941467285

Token 532: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4170999526977539
    2. 'i' (adapté à ' i') → logprob: -1.667099952697754
    3. '       ' → logprob: -1.917099952697754
    4. '               ' → logprob: -5.417099952697754
    5. ' i' → logprob: -7.667099952697754
    6. '   ' → logprob: -8.167099952697754
    7. '```' → logprob: -11.542099952697754
    8. 'else' → logprob: -12.417099952697754
    9. '                   ' → logprob: -12.542099952697754
    10. '	       ' → logprob: -13.292099952697754

Token 533: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20144900679588318
    2. ' +=' → logprob: -1.7014490365982056
    3. '+' → logprob: -10.326449394226074
    4. '=' → logprob: -12.826449394226074
    5. ' +' → logprob: -15.951449394226074
    6. ']+=' → logprob: -16.826448440551758
    7. '   ' → logprob: -17.701448440551758
    8. '```' → logprob: -17.951448440551758
    9. ' ' → logprob: -18.326448440551758
    10. '++' → logprob: -18.576448440551758

Token 534: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -21.000009536743164
    4. '```' → logprob: -21.125009536743164
    5. '2' → logprob: -21.250009536743164
    6. '0' → logprob: -21.500009536743164
    7. '１' → logprob: -21.500009536743164
    8. '۱' → logprob: -22.250009536743164
    9. ' ' → logprob: -22.875009536743164
    10. '﻿' → logprob: -22.875009536743164

Token 535: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -20.625
    4. '0' → logprob: -20.875
    5. '۱' → logprob: -21.0625
    6. '```' → logprob: -21.1875
    7. '１' → logprob: -21.8125
    8. '१' → logprob: -22.125
    9. '2' → logprob: -22.8125
    10. '১' → logprob: -22.875

Token 536: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016539888747502118
    2. '   ' → logprob: -9.375164985656738
    3. 'else' → logprob: -9.500164985656738
    4. ' else' → logprob: -12.625164985656738
    5. 'return' → logprob: -14.000164985656738
    6. '<|end|>' → logprob: -14.750164985656738
    7. '           ' → logprob: -15.125164985656738
    8. '```' → logprob: -15.250164985656738
    9. 'elif' → logprob: -15.625164985656738
    10. '
' → logprob: -15.625164985656738

Token 537: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007408959208987653
    2. 'else' → logprob: -7.500741004943848
    3. '   ' → logprob: -8.750741004943848
    4. ' else' → logprob: -11.000741004943848
    5. 'return' → logprob: -12.125741004943848
    6. '<|end|>' → logprob: -12.625741004943848
    7. '```' → logprob: -13.375741004943848
    8. 'elif' → logprob: -14.000741004943848
    9. '           ' → logprob: -14.375741004943848
    10. ' return' → logprob: -15.875741004943848

Token 538: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.017379725351929665
    2. '       ' → logprob: -4.2673797607421875
    3. ' else' → logprob: -5.7673797607421875
    4. '   ' → logprob: -9.517379760742188
    5. 'elif' → logprob: -12.142379760742188
    6. '```' → logprob: -13.642379760742188
    7. '           ' → logprob: -13.767379760742188
    8. '	else' → logprob: -13.892379760742188
    9. ')' → logprob: -15.392379760742188
    10. '     ' → logprob: -15.767379760742188

Token 539: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3845544159412384
    2. ':
' → logprob: -1.509554386138916
    3. '           ' → logprob: -2.384554386138916
    4. '       ' → logprob: -5.134554386138916
    5. '   ' → logprob: -9.259554862976074
    6. ' :' → logprob: -10.259554862976074
    7. ' :
' → logprob: -10.884554862976074
    8. '{' → logprob: -11.259554862976074
    9. '{
' → logprob: -11.509554862976074
    10. ' if' → logprob: -11.759554862976074

Token 540: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20764072239398956
    2. '       ' → logprob: -1.7076407670974731
    3. 'if' → logprob: -5.707640647888184
    4. ' if' → logprob: -6.332640647888184
    5. 'return' → logprob: -7.582640647888184
    6. '#' → logprob: -8.332640647888184
    7. '   ' → logprob: -8.582640647888184
    8. ' return' → logprob: -9.707640647888184
    9. ' #' → logprob: -9.957640647888184
    10. '        ' → logprob: -11.082640647888184

Token 541: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01758752390742302
    2. ' if' → logprob: -4.267587661743164
    3. '           ' → logprob: -5.767587661743164
    4. '       ' → logprob: -8.267587661743164
    5. 'return' → logprob: -10.517587661743164
    6. '#' (adapté à ' #') → logprob: -12.017587661743164
    7. '   ' → logprob: -14.392587661743164
    8. 'index' → logprob: -15.517587661743164
    9. ' return' → logprob: -15.892587661743164
    10. ' #' → logprob: -16.642587661743164

Token 542: ' normal' (ID: 6078)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011189645156264305
    2. ' if' → logprob: -4.5111894607543945
    3. 'length' → logprob: -9.886189460754395
    4. '           ' → logprob: -10.386189460754395
    5. 'return' → logprob: -10.636189460754395
    6. '#' → logprob: -11.511189460754395
    7. 'c' → logprob: -11.636189460754395
    8. 'char' → logprob: -12.261189460754395
    9. '       ' → logprob: -12.386189460754395
    10. 'index' → logprob: -12.886189460754395

Token 543: ' letter' (ID: 10263)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1506483554840088
    2. ' if' → logprob: -1.4006483554840088
    3. 'if' → logprob: -1.7756483554840088
    4. ' ' → logprob: -1.9006483554840088
    5. ' s' → logprob: -2.650648355484009
    6. 'letter' → logprob: -4.40064811706543
    7. ' letter' → logprob: -5.02564811706543
    8. ')' → logprob: -5.27564811706543
    9. 'char' → logprob: -5.40064811706543
    10. '   ' → logprob: -5.65064811706543

Token 544: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011739654466509819
    2. ' if' → logprob: -5.136739730834961
    3. '       ' → logprob: -5.261739730834961
    4. 'if' → logprob: -7.636739730834961
    5. '        ' → logprob: -10.011739730834961
    6. '          ' → logprob: -11.011739730834961
    7. ' 
' → logprob: -11.636739730834961
    8. '               ' → logprob: -12.011739730834961
    9. '```' → logprob: -12.011739730834961
    10. '   ' → logprob: -12.136739730834961

Token 545: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05537167936563492
    2. '       ' → logprob: -3.8053717613220215
    3. ' if' → logprob: -3.8053717613220215
    4. 'if' → logprob: -4.6803717613220215
    5. '          ' → logprob: -10.805371284484863
    6. '   ' → logprob: -10.930371284484863
    7. '        ' → logprob: -11.180371284484863
    8. '               ' → logprob: -12.055371284484863
    9. '{
' → logprob: -12.305371284484863
    10. '```' → logprob: -12.305371284484863

Token 546: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0037534094881266356
    2. ' if' → logprob: -5.753753185272217
    3. '           ' → logprob: -7.503753185272217
    4. '       ' → logprob: -10.628753662109375
    5. '   ' → logprob: -15.628753662109375
    6. 'If' → logprob: -16.378753662109375
    7. 'return' → logprob: -17.003753662109375
    8. '
' → logprob: -17.253753662109375
    9. '```' → logprob: -17.378753662109375
    10. '               ' → logprob: -17.878753662109375

Token 547: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.16022422909736633
    2. 'index' → logprob: -1.910224199295044
    3. '#index' → logprob: -17.28522491455078
    4. ' ' → logprob: -18.53522491455078
    5. '(index' → logprob: -19.41022491455078
    6. '   ' → logprob: -19.41022491455078
    7. '	index' → logprob: -19.66022491455078
    8. '=index' → logprob: -20.28522491455078
    9. '[index' → logprob: -20.41022491455078
    10. '@index' → logprob: -20.91022491455078

Token 548: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.012550151906907558
    2. '==' → logprob: -4.387550354003906
    3. ' <' → logprob: -10.512550354003906
    4. ' ' → logprob: -11.887550354003906
    5. ' ' → logprob: -12.762550354003906
    6. '0' → logprob: -13.387550354003906
    7. '=' → logprob: -14.262550354003906
    8. '<' → logprob: -14.887550354003906
    9. ' =' → logprob: -15.137550354003906
    10. '    ' → logprob: -15.762550354003906

Token 549: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -19.125045776367188
    4. '       ' → logprob: -21.750045776367188
    5. '۰' → logprob: -22.000045776367188
    6. '  ' → logprob: -23.625045776367188
    7. '           ' → logprob: -24.000045776367188
    8. '０' → logprob: -24.000045776367188
    9. '
' → logprob: -24.500045776367188
    10. '     ' → logprob: -24.500045776367188

Token 550: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. 'i' → logprob: -21.25
    4. '   ' → logprob: -23.5
    5. '۰' → logprob: -23.75
    6. 'n' → logprob: -24.625
    7. '```' → logprob: -25.25
    8. 'zero' → logprob: -25.375
    9. 's' → logprob: -25.5
    10. '=' → logprob: -25.5

Token 551: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7045347690582275
    2. ':' → logprob: -1.2045347690582275
    3. '               ' → logprob: -2.2045347690582275
    4. '           ' → logprob: -2.7045347690582275
    5. ':return' → logprob: -3.5795347690582275
    6. 'return' → logprob: -8.454534530639648
    7. ' return' → logprob: -8.579534530639648
    8. '       ' → logprob: -9.204534530639648
    9. '   ' → logprob: -9.954534530639648
    10. ',' → logprob: -10.829534530639648

Token 552: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26741090416908264
    2. '               ' → logprob: -1.5174108743667603
    3. ' return' → logprob: -4.267410755157471
    4. 'return' → logprob: -6.642410755157471
    5. '          ' → logprob: -11.142411231994629
    6. '            ' → logprob: -11.642411231994629
    7. '   ' → logprob: -12.642411231994629
    8. '              ' → logprob: -13.142411231994629
    9. '       ' → logprob: -13.392411231994629
    10. ' ' → logprob: -13.392411231994629

Token 553: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08120623975992203
    2. ' return' → logprob: -2.5812063217163086
    3. '               ' → logprob: -6.081206321716309
    4. '           ' → logprob: -10.581206321716309
    5. '                   ' → logprob: -12.956206321716309
    6. '	return' → logprob: -14.706206321716309
    7. '   ' → logprob: -15.706206321716309
    8. '{return' → logprob: -16.956205368041992
    9. ':return' → logprob: -17.331205368041992
    10. ' ' → logprob: -17.831205368041992

Token 554: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.627176768844947e-05
    2. ' s' → logprob: -9.250096321105957
    3. '`s' → logprob: -17.37509536743164
    4. ''s' → logprob: -19.50009536743164
    5. ' ' → logprob: -21.62509536743164
    6. '   ' → logprob: -21.87509536743164
    7. '```' → logprob: -22.25009536743164
    8. ' ' → logprob: -22.50009536743164
    9. '_s' → logprob: -22.87509536743164
    10. '	s' → logprob: -23.00009536743164

Token 555: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.750001907348633
    3. 'i' → logprob: -14.500001907348633
    4. '[
' → logprob: -17.250001907348633
    5. '```' → logprob: -17.625001907348633
    6. '`' → logprob: -19.000001907348633
    7. '[I' → logprob: -19.250001907348633
    8. ' [' → logprob: -19.750001907348633
    9. '   ' → logprob: -20.500001907348633
    10. 's' → logprob: -20.875001907348633

Token 556: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33147886395454407
    2. ']' → logprob: -1.4564788341522217
    3. ')
' → logprob: -4.081479072570801
    4. '           ' → logprob: -4.331479072570801
    5. '       ' → logprob: -4.581479072570801
    6. ']
' → logprob: -4.956479072570801
    7. '               ' → logprob: -7.331479072570801
    8. '}' → logprob: -7.956479072570801
    9. '   ' → logprob: -8.2064790725708
    10. 's' → logprob: -9.0814790725708

Token 557: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6498323678970337
    2. '           ' → logprob: -0.8998323678970337
    3. 'i' → logprob: -2.649832248687744
    4. ' i' → logprob: -8.399832725524902
    5. '   ' → logprob: -8.649832725524902
    6. '```' → logprob: -9.274832725524902
    7. '          ' → logprob: -11.149832725524902
    8. 'index' → logprob: -11.399832725524902
    9. '               ' → logprob: -11.524832725524902
    10. '         ' → logprob: -12.274832725524902

Token 558: ' index' (ID: 3472)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1634448915719986
    2. '       ' → logprob: -2.663444995880127
    3. '           ' → logprob: -2.913444995880127
    4. '   ' → logprob: -4.413444995880127
    5. ' i' → logprob: -4.663444995880127
    6. 'index' (adapté à ' index') → logprob: -5.288444995880127
    7. ' index' → logprob: -8.913444519042969
    8. '    ' → logprob: -11.288444519042969
    9. '               ' → logprob: -11.663444519042969
    10. '     ' → logprob: -11.788444519042969

Token 559: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.5765244364738464
    2. ' -=' → logprob: -0.8265244364738464
    3. '-' → logprob: -7.451524257659912
    4. '   ' → logprob: -13.20152473449707
    5. '    ' → logprob: -13.32652473449707
    6. '+=' → logprob: -15.45152473449707
    7. '=' → logprob: -15.57652473449707
    8. '>' → logprob: -15.70152473449707
    9. '  ' → logprob: -16.20152473449707
    10. '```' → logprob: -17.20152473449707

Token 560: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -21.125
    4. '```' → logprob: -24.0
    5. '۱' → logprob: -24.875
    6. '１' → logprob: -25.0
    7. '  ' → logprob: -25.75
    8. '       ' → logprob: -26.25
    9. ' ' → logprob: -26.25
    10. '           ' → logprob: -26.5

Token 561: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '   ' → logprob: -22.5
    4. '```' → logprob: -24.875
    5. '１' → logprob: -25.375
    6. '۱' → logprob: -25.5
    7. '  ' → logprob: -26.25
    8. '       ' → logprob: -26.75
    9. '           ' → logprob: -27.375
    10. ' ' → logprob: -27.375

Token 562: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06946990638971329
    2. '       ' → logprob: -2.819469928741455
    3. '   ' → logprob: -5.194469928741455
    4. ' i' → logprob: -6.694469928741455
    5. '           ' → logprob: -7.444469928741455
    6. '	i' → logprob: -10.069469451904297
    7. '<|end|>' → logprob: -10.819469451904297
    8. ',i' → logprob: -11.069469451904297
    9. '[i' → logprob: -12.194469451904297
    10. '
' → logprob: -12.444469451904297

Token 563: '           ' (ID: 352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.131742462515831
    2. '       ' → logprob: -2.381742477416992
    3. '   ' → logprob: -3.506742477416992
    4. '           ' → logprob: -7.631742477416992
    5. ' i' → logprob: -7.631742477416992
    6. '	i' → logprob: -10.256742477416992
    7. '<|end|>' → logprob: -10.881742477416992
    8. '```' → logprob: -11.506742477416992
    9. '     ' → logprob: -12.756742477416992
    10. '  ' → logprob: -12.881742477416992

Token 564: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -1.7120533811976202e-05
    2. ' i' → logprob: -11.250017166137695
    3. '   ' → logprob: -12.500017166137695
    4. '       ' → logprob: -15.250017166137695
    5. '           ' → logprob: -16.250017166137695
    6. '	i' → logprob: -17.750017166137695
    7. '```' → logprob: -19.125017166137695
    8. '  ' → logprob: -20.500017166137695
    9. ' ' → logprob: -21.375017166137695
    10. '1' → logprob: -21.375017166137695

Token 565: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004340156447142363
    2. ' +=' → logprob: -5.504340171813965
    3. '+' → logprob: -8.254340171813965
    4. '++' → logprob: -14.004340171813965
    5. ']+=' → logprob: -15.004340171813965
    6. '+="' → logprob: -16.12933921813965
    7. '+='' → logprob: -16.25433921813965
    8. '```' → logprob: -16.62933921813965
    9. '<|end|>' → logprob: -17.25433921813965
    10. '+++' → logprob: -17.37933921813965

Token 566: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '```' → logprob: -18.12510871887207
    4. '۱' → logprob: -20.37510871887207
    5. '   ' → logprob: -21.12510871887207
    6. '１' → logprob: -21.37510871887207
    7. '0' → logprob: -21.75010871887207
    8. ' ' → logprob: -22.50010871887207
    9. '१' → logprob: -22.68760871887207
    10. '١' → logprob: -22.75010871887207

Token 567: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '```' → logprob: -20.375
    4. '۱' → logprob: -22.625
    5. '   ' → logprob: -22.625
    6. '１' → logprob: -22.875
    7. '१' → logprob: -24.0
    8. '0' → logprob: -24.75
    9. '১' → logprob: -24.75
    10. '2' → logprob: -24.875

Token 568: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5965463519096375
    2. 'return' → logprob: -1.8465464115142822
    3. '<|end|>' → logprob: -1.9715464115142822
    4. '\' → logprob: -3.4715464115142822
    5. '```' → logprob: -3.4715464115142822
    6. '
' → logprob: -3.4715464115142822
    7. ' return' → logprob: -4.096546173095703
    8. ':return' → logprob: -4.721546173095703
    9. '#' → logprob: -4.846546173095703
    10. '	return' → logprob: -5.221546173095703

Token 569: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3259592056274414
    2. 'return' → logprob: -1.4509592056274414
    3. '\' → logprob: -4.075959205627441
    4. '```' → logprob: -4.825959205627441
    5. '#' → logprob: -5.075959205627441
    6. '0' → logprob: -5.325959205627441
    7. ' return' → logprob: -6.200959205627441
    8. '
' → logprob: -6.450959205627441
    9. '\n' → logprob: -7.575959205627441
    10. '       ' → logprob: -7.825959205627441

Token 570: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.030034296214580536
    2. ''' → logprob: -3.530034303665161
    3. ' return' → logprob: -8.780034065246582
    4. '0' → logprob: -9.155034065246582
    5. '`' → logprob: -11.155034065246582
    6. '   ' → logprob: -11.905034065246582
    7. '```' → logprob: -13.780034065246582
    8. ''\' → logprob: -14.405034065246582
    9. '	return' → logprob: -14.655034065246582
    10. ''re' → logprob: -14.780034065246582

Token 571: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1041145626222715e-05
    2. ' '' → logprob: -11.500011444091797
    3. '"'' → logprob: -14.250011444091797
    4. '"' → logprob: -15.125011444091797
    5. '''' → logprob: -17.375011444091797
    6. ''"' → logprob: -18.375011444091797
    7. '‘' → logprob: -19.625011444091797
    8. '`' → logprob: -19.750011444091797
    9. '('' → logprob: -20.250011444091797
    10. ''''' → logprob: -20.250011444091797

Token 572: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ''' → logprob: -9.875051498413086
    3. ' ' → logprob: -18.875051498413086
    4. '"' → logprob: -19.000051498413086
    5. '\'' → logprob: -20.375051498413086
    6. '۰' → logprob: -21.375051498413086
    7. '')' → logprob: -22.000051498413086
    8. '00' → logprob: -22.125051498413086
    9. '`' → logprob: -22.125051498413086
    10. ''\' → logprob: -22.250051498413086

Token 573: ''


' (ID: 58266)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.003003373509272933
    2. '<|end|>' → logprob: -6.7530035972595215
    3. ')' → logprob: -7.1280035972595215
    4. '')' → logprob: -7.3780035972595215
    5. '```' → logprob: -8.628003120422363
    6. ''''' → logprob: -9.253003120422363
    7. '"' → logprob: -9.503003120422363
    8. ')'' → logprob: -11.128003120422363
    9. '`' → logprob: -11.128003120422363
    10. '']' → logprob: -12.378003120422363

Token 574: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 575: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.1276373267173767
    2. 'True' → logprob: -2.1276373863220215
    3. ' index' → logprob: -7.3776373863220215
    4. 'index' → logprob: -9.627636909484863
    5. ' ' → logprob: -11.627636909484863
    6. '1' → logprob: -12.627636909484863
    7. '(True' → logprob: -13.127636909484863
    8. ' i' → logprob: -13.252636909484863
    9. ' input' → logprob: -14.252636909484863
    10. ' len' → logprob: -14.627636909484863

Token 576: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24895840883255005
    2. ' :' → logprob: -2.3739583492279053
    3. '():' → logprob: -2.4989583492279053
    4. '(' → logprob: -4.373958587646484
    5. '   ' → logprob: -4.498958587646484
    6. ':
' → logprob: -5.248958587646484
    7. ' (' → logprob: -5.623958587646484
    8. ' input' → logprob: -5.873958587646484
    9. 'input' → logprob: -6.123958587646484
    10. '():
' → logprob: -6.248958587646484

Token 577: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09691312164068222
    2. ' line' → logprob: -2.5969130992889404
    3. ' try' → logprob: -4.5969133377075195
    4. ' inp' → logprob: -6.3469133377075195
    5. ' query' → logprob: -6.4719133377075195
    6. 'try' → logprob: -6.8469133377075195
    7. ' s' → logprob: -6.9719133377075195
    8. 'line' → logprob: -7.0969133377075195
    9. ' command' → logprob: -7.3469133377075195
    10. 'query' → logprob: -8.09691333770752

Token 578: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.3957667350769043
    2. 'try' → logprob: -1.1457667350769043
    3. 's' → logprob: -5.645766735076904
    4. ' line' → logprob: -5.645766735076904
    5. ' try' → logprob: -7.395766735076904
    6. 'cmd' → logprob: -7.520766735076904
    7. 'query' → logprob: -8.395767211914062
    8. 'l' → logprob: -8.770767211914062
    9. 't' → logprob: -9.770767211914062
    10. 'command' → logprob: -10.020767211914062

Token 579: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004078758880496025
    2. '=' → logprob: -5.5040788650512695
    3. ' ' → logprob: -15.37907886505127
    4. '   ' → logprob: -16.879077911376953
    5. 's' → logprob: -17.004077911376953
    6. '=input' → logprob: -17.504077911376953
    7. '=line' → logprob: -17.879077911376953
    8. ' ' → logprob: -18.754077911376953
    9. '(' → logprob: -18.879077911376953
    10. '  ' → logprob: -19.254077911376953

Token 580: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06196768581867218
    2. ' input' → logprob: -2.811967611312866
    3. '(input' → logprob: -17.936967849731445
    4. '=input' → logprob: -19.436967849731445
    5. '   ' → logprob: -21.311967849731445
    6. '<input' → logprob: -21.686967849731445
    7. '```' → logprob: -21.936967849731445
    8. '_input' → logprob: -22.311967849731445
    9. '	input' → logprob: -22.311967849731445
    10. 'try' → logprob: -22.561967849731445

Token 581: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0033327757846564054
    2. '().' → logprob: -5.753332614898682
    3. '()
' → logprob: -9.62833309173584
    4. '(' → logprob: -9.62833309173584
    5. '()>' → logprob: -11.75333309173584
    6. '()

' → logprob: -13.00333309173584
    7. '();' → logprob: -13.12833309173584
    8. '())' → logprob: -13.25333309173584
    9. '("")' → logprob: -13.75333309173584
    10. ')' → logprob: -13.87833309173584

Token 582: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3371031880378723
    2. '   ' → logprob: -1.3371031284332275
    3. '.strip' → logprob: -4.087103366851807
    4. '<|end|>' → logprob: -5.962103366851807
    5. '.rstrip' → logprob: -6.837103366851807
    6. 'if' → logprob: -6.962103366851807
    7. ' =' → logprob: -7.337103366851807
    8. ',' → logprob: -8.337102890014648
    9. '=' → logprob: -8.712102890014648
    10. ' ' → logprob: -8.837102890014648

Token 583: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.01815076172351837
    2. 'if' (adapté à ' if') → logprob: -4.018150806427002
    3. ' line' → logprob: -15.393150329589844
    4. '   ' → logprob: -15.893150329589844
    5. '.strip' → logprob: -16.018150329589844
    6. 'strip' → logprob: -16.643150329589844
    7. '	if' → logprob: -16.768150329589844
    8. 'line' → logprob: -16.893150329589844
    9. 'rstrip' → logprob: -17.018150329589844
    10. ' ' → logprob: -17.143150329589844

Token 584: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.01461660023778677
    2. ' line' → logprob: -4.5146164894104
    3. 'not' → logprob: -5.7646164894104
    4. 'line' → logprob: -7.7646164894104
    5. ' ' → logprob: -13.764616966247559
    6. '#line' → logprob: -15.389616966247559
    7. '	line' → logprob: -17.639616012573242
    8. '(line' → logprob: -17.889616012573242
    9. '[line' → logprob: -17.889616012573242
    10. '	not' → logprob: -17.889616012573242

Token 585: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10248231142759323
    2. '==' → logprob: -2.352482318878174
    3. '.strip' → logprob: -6.102482318878174
    4. '()==' → logprob: -11.102481842041016
    5. '.startswith' → logprob: -11.852481842041016
    6. '.' → logprob: -12.227481842041016
    7. '=='' → logprob: -13.227481842041016
    8. '=="' → logprob: -13.352481842041016
    9. '==
' → logprob: -13.852481842041016
    10. ' =' → logprob: -13.977481842041016

Token 586: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.5723481178283691
    2. '"' → logprob: -1.5723481178283691
    3. '""' → logprob: -1.5723481178283691
    4. ''' → logprob: -4.197348117828369
    5. '"":' → logprob: -5.197348117828369
    6. ' "":
' → logprob: -10.072347640991211
    7. ''ex' → logprob: -10.572347640991211
    8. ' '':
' → logprob: -10.822347640991211
    9. ' ""' → logprob: -11.322347640991211
    10. ' ''' → logprob: -12.322347640991211

Token 587: '0' (ID: 15)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.12119109183549881
    2. ''' → logprob: -2.6211910247802734
    3. '':
' → logprob: -3.3711910247802734
    4. '''' → logprob: -5.621191024780273
    5. '0' → logprob: -6.746191024780273
    6. '"' → logprob: -6.996191024780273
    7. '""' → logprob: -7.246191024780273
    8. '':
' → logprob: -8.621191024780273
    9. '":' → logprob: -9.246191024780273
    10. 'end' → logprob: -9.871191024780273

Token 588: ' ' (ID: 220)
  Prédit: '':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.2531786859035492
    2. '':' → logprob: -1.5031787157058716
    3. ''' → logprob: -7.503178596496582
    4. ':
' → logprob: -8.128178596496582
    5. '':
' → logprob: -8.878178596496582
    6. ':' → logprob: -9.253178596496582
    7. ''):
' → logprob: -9.378178596496582
    8. '():
' → logprob: -10.378178596496582
    9. ' break' → logprob: -11.128178596496582
    10. '):
' → logprob: -11.628178596496582

Token 589: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36782604455947876
    2. '':' → logprob: -1.617825984954834
    3. '':
' → logprob: -2.242825984954834
    4. ''' → logprob: -6.367825984954834
    5. ' ' → logprob: -6.867825984954834
    6. '':
' → logprob: -8.117826461791992
    7. ' break' → logprob: -9.867826461791992
    8. 'break' → logprob: -10.242826461791992
    9. ''):
' → logprob: -10.867826461791992
    10. '\n' → logprob: -11.492826461791992

Token 590: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.07978614419698715
    2. '':' → logprob: -2.5797860622406006
    3. ''' → logprob: -7.70478630065918
    4. '':
' → logprob: -8.57978630065918
    5. '\n' → logprob: -8.82978630065918
    6. '0' → logprob: -9.45478630065918
    7. ''):
' → logprob: -11.70478630065918
    8. '":
' → logprob: -12.07978630065918
    9. '':

' → logprob: -12.32978630065918
    10. ':
' → logprob: -12.57978630065918

Token 591: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0631588697433472
    2. ':' → logprob: -1.1881588697433472
    3. ':
' → logprob: -1.4381588697433472
    4. '       ' → logprob: -2.1881589889526367
    5. ' break' → logprob: -8.813158988952637
    6. '	break' → logprob: -9.313158988952637
    7. ' :
' → logprob: -10.688158988952637
    8. ' ' → logprob: -10.938158988952637
    9. '	' → logprob: -11.188158988952637
    10. ' :' → logprob: -11.188158988952637

Token 592: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3883592188358307
    2. 'break' (adapté à ' break') → logprob: -1.6383591890335083
    3. '   ' → logprob: -2.388359308242798
    4. ' break' → logprob: -3.388359308242798
    5. '	break' → logprob: -6.263359069824219
    6. '           ' → logprob: -10.013359069824219
    7. '
' → logprob: -10.638359069824219
    8. '_break' → logprob: -12.513359069824219
    9. '     ' → logprob: -13.013359069824219
    10. '```' → logprob: -13.513359069824219

Token 593: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4966001510620117
    2. 'index' → logprob: -1.6216001510620117
    3. '    
' → logprob: -2.3716001510620117
    4. 'i' → logprob: -3.3716001510620117
    5. 'idx' → logprob: -3.7466001510620117
    6. ' index' → logprob: -5.371600151062012
    7. '  
' → logprob: -5.371600151062012
    8. 'pos' → logprob: -5.496600151062012
    9. 'token' → logprob: -5.621600151062012
    10. '
' → logprob: -5.871600151062012

Token 594: '   ' (ID: 271)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.4649111032485962
    2. 'query' → logprob: -1.8399111032485962
    3. 'i' → logprob: -2.3399109840393066
    4. ' query' → logprob: -2.7149109840393066
    5. ' pos' → logprob: -2.9649109840393066
    6. 'start' → logprob: -3.3399109840393066
    7. 'n' → logprob: -3.3399109840393066
    8. 'length' → logprob: -3.4649109840393066
    9. 'index' → logprob: -3.5899109840393066
    10. 'q' → logprob: -3.5899109840393066

Token 595: ' s' (ID: 265)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5675626397132874
    2. 'l' → logprob: -2.6925625801086426
    3. 'pos' → logprob: -2.6925625801086426
    4. 'n' → logprob: -2.9425625801086426
    5. 's' (adapté à ' s') → logprob: -3.1925625801086426
    6. 'L' → logprob: -3.1925625801086426
    7. ' k' → logprob: -3.6925625801086426
    8. 'length' → logprob: -3.6925625801086426
    9. 'q' → logprob: -3.9425625801086426
    10. 'a' → logprob: -4.317562580108643

Token 596: ',i' (ID: 25032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002627662615850568
    2. ' ,' → logprob: -9.125263214111328
    3. ',index' → logprob: -9.500263214111328
    4. '=' → logprob: -10.250263214111328
    5. ',num' → logprob: -11.500263214111328
    6. ' =' → logprob: -11.875263214111328
    7. 'index' → logprob: -12.625263214111328
    8. ',k' → logprob: -12.625263214111328
    9. 'space' → logprob: -12.875263214111328
    10. 'query' → logprob: -13.250263214111328

Token 597: '_str' (ID: 6182)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024801742285490036
    2. ',index' → logprob: -4.399801731109619
    3. ',num' → logprob: -5.649801731109619
    4. ',i' → logprob: -6.274801731109619
    5. ',x' → logprob: -6.399801731109619
    6. ',n' → logprob: -6.399801731109619
    7. ',line' → logprob: -7.524801731109619
    8. ',j' → logprob: -7.649801731109619
    9. ',s' → logprob: -7.899801731109619
    10. 'x' → logprob: -8.024802207946777

Token 598: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04033521190285683
    2. ',i' → logprob: -3.290335178375244
    3. ' ,' → logprob: -6.540335178375244
    4. ',index' → logprob: -8.540335655212402
    5. ',num' → logprob: -8.790335655212402
    6. '=' → logprob: -8.790335655212402
    7. ' =' → logprob: -8.790335655212402
    8. ',j' → logprob: -9.790335655212402
    9. ',s' → logprob: -10.290335655212402
    10. ',n' → logprob: -10.415335655212402

Token 599: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.25192928314208984
    2. ' line' → logprob: -1.5019292831420898
    3. 'input' → logprob: -16.501930236816406
    4. '   ' → logprob: -17.251930236816406
    5. '	line' → logprob: -17.501930236816406
    6. '#line' → logprob: -18.876930236816406
    7. '(line' → logprob: -19.501930236816406
    8. '[line' → logprob: -19.751930236816406
    9. ' input' → logprob: -19.876930236816406
    10. ' ' → logprob: -20.001930236816406

Token 600: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.041568271815776825
    2. ' =' → logprob: -3.2915682792663574
    3. '.split' → logprob: -5.916568279266357
    4. ',' → logprob: -7.291568279266357
    5. '.' → logprob: -9.4165678024292
    6. 'split' → logprob: -10.4165678024292
    7. '=line' → logprob: -11.7915678024292
    8. '.strip' → logprob: -11.9165678024292
    9. '   ' → logprob: -12.4165678024292
    10. '.=' → logprob: -12.5415678024292

Token 601: '()
' (ID: 1234)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09986863285303116
    2. '()' → logprob: -3.2248685359954834
    3. ' s' → logprob: -3.7248685359954834
    4. ' ,' → logprob: -4.4748687744140625
    5. 's' → logprob: -4.7248687744140625
    6. ' ' → logprob: -6.2248687744140625
    7. '('' → logprob: -6.5998687744140625
    8. ',s' → logprob: -6.8498687744140625
    9. '()
' → logprob: -6.9748687744140625
    10. 'i' → logprob: -6.9748687744140625

Token 602: '   ' (ID: 271)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6214293837547302
    2. ' index' → logprob: -1.246429443359375
    3. '   ' → logprob: -2.246429443359375
    4. 'index' → logprob: -3.246429443359375
    5. 'i' → logprob: -4.121429443359375
    6. ' 
' → logprob: -5.371429443359375
    7. ' ' → logprob: -5.871429443359375
    8. '
' → logprob: -5.996429443359375
    9. ' idx' → logprob: -6.746429443359375
    10. ' ind' → logprob: -7.371429443359375

Token 603: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.317348450422287
    2. 'index' → logprob: -1.3173484802246094
    3. ' index' → logprob: -6.067348480224609
    4. ' i' → logprob: -6.942348480224609
    5. 'idx' → logprob: -7.317348480224609
    6. '   ' → logprob: -9.19234848022461
    7. '
' → logprob: -11.81734848022461
    8. ' idx' → logprob: -12.06734848022461
    9. '    
' → logprob: -12.69234848022461
    10. 'print' → logprob: -12.69234848022461

Token 604: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5966252088546753
    2. ' =' → logprob: -0.9716252088546753
    3. '_' → logprob: -2.721625328063965
    4. '_index' → logprob: -6.221625328063965
    5. '_=' → logprob: -6.471625328063965
    6. '=int' → logprob: -7.221625328063965
    7. '_idx' → logprob: -8.346625328063965
    8. 'index' → logprob: -9.596625328063965
    9. '=index' → logprob: -9.596625328063965
    10. '=_' → logprob: -9.596625328063965

Token 605: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002613358374219388
    2. ' int' → logprob: -8.250261306762695
    3. '[int' → logprob: -20.625261306762695
    4. '(int' → logprob: -21.625261306762695
    5. '   ' → logprob: -22.125261306762695
    6. '=int' → logprob: -22.250261306762695
    7. '<int' → logprob: -23.125261306762695
    8. '	int' → logprob: -23.375261306762695
    9. '0' → logprob: -24.125261306762695
    10. '  ' → logprob: -24.375261306762695

Token 606: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.650518920039758e-06
    2. 'i' → logprob: -12.625003814697266
    3. '(' → logprob: -15.750003814697266
    4. '(
' → logprob: -16.250003814697266
    5. ' i' → logprob: -19.375003814697266
    6. ' (' → logprob: -20.875003814697266
    7. '   ' → logprob: -21.250003814697266
    8. '
' → logprob: -21.250003814697266
    9. '((' → logprob: -21.875003814697266
    10. '{i' → logprob: -21.875003814697266

Token 607: '_str' (ID: 6182)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3774660527706146
    2. '_str' → logprob: -1.252466082572937
    3. '(i' → logprob: -3.7524659633636475
    4. 'i' → logprob: -6.627466201782227
    5. ')
' → logprob: -6.627466201782227
    6. ')-' → logprob: -6.627466201782227
    7. '-' → logprob: -8.252466201782227
    8. 'str' → logprob: -8.627466201782227
    9. ')i' → logprob: -8.627466201782227
    10. '   ' → logprob: -8.627466201782227

Token 608: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01118315476924181
    2. ')
' → logprob: -4.511183261871338
    3. '-' → logprob: -9.38618278503418
    4. ' )' → logprob: -11.01118278503418
    5. ')-' → logprob: -11.88618278503418
    6. ')
' → logprob: -11.88618278503418
    7. '[' → logprob: -12.38618278503418
    8. '<|end|>' → logprob: -12.63618278503418
    9. '   ' → logprob: -12.88618278503418
    10. ' -' → logprob: -13.01118278503418

Token 609: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003778816433623433
    2. '```' → logprob: -6.87877893447876
    3. ' print' → logprob: -7.12877893447876
    4. '   ' → logprob: -7.12877893447876
    5. 'result' → logprob: -7.25377893447876
    6. 'c' → logprob: -8.378778457641602
    7. 'char' → logprob: -10.003778457641602
    8. 'token' → logprob: -10.503778457641602
    9. 'output' → logprob: -10.503778457641602
    10. '``' → logprob: -10.503778457641602

Token 610: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00011284107313258573
    2. ' print' → logprob: -9.250112533569336
    3. 'c' → logprob: -11.875112533569336
    4. '   ' → logprob: -12.750112533569336
    5. 'ch' → logprob: -12.875112533569336
    6. 'result' → logprob: -13.125112533569336
    7. '```' → logprob: -13.375112533569336
    8. '
' → logprob: -14.500112533569336
    9. 'char' → logprob: -15.625112533569336
    10. 'try' → logprob: -17.250112533569336

Token 611: '(char' (ID: 14823)
  Prédit: '(char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(char' → logprob: -0.0485910028219223
    2. 'char' → logprob: -3.048590898513794
    3. ' char' → logprob: -12.548590660095215
    4. '(' → logprob: -16.79859161376953
    5. '<char' → logprob: -18.92359161376953
    6. ',char' → logprob: -19.04859161376953
    7. '.char' → logprob: -19.04859161376953
    8. '(chr' → logprob: -19.54859161376953
    9. '	char' → logprob: -19.67359161376953
    10. '_char' → logprob: -20.04859161376953

Token 612: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -2.0100624169572257e-05
    2. '_' → logprob: -11.000020027160645
    3. '_(' → logprob: -12.625020027160645
    4. '_AT' → logprob: -17.75002098083496
    5. '(s' → logprob: -17.87502098083496
    6. '(' → logprob: -18.12502098083496
    7. '_a' → logprob: -18.37502098083496
    8. ' at' → logprob: -18.62502098083496
    9. ')_' → logprob: -18.75002098083496
    10. 'at' → logprob: -19.00002098083496

Token 613: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00014096579980105162
    2. '(' → logprob: -8.875141143798828
    3. 's' → logprob: -14.875141143798828
    4. ' (' → logprob: -15.375141143798828
    5. '(
' → logprob: -15.375141143798828
    6. ')' → logprob: -15.625141143798828
    7. ')(' → logprob: -16.500141143798828
    8. '```' → logprob: -18.375141143798828
    9. ')s' → logprob: -18.500141143798828
    10. '(f' → logprob: -18.625141143798828

Token 614: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0789974108338356
    2. ',i' → logprob: -2.5789973735809326
    3. ' ,' → logprob: -9.203997611999512
    4. ',index' → logprob: -12.703997611999512
    5. ',s' → logprob: -13.328997611999512
    6. '(i' → logprob: -14.203997611999512
    7. ',int' → logprob: -14.328997611999512
    8. ',
' → logprob: -15.453997611999512
    9. '   ' → logprob: -15.953997611999512
    10. 'i' → logprob: -16.578996658325195

Token 615: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.686778503237292e-05
    2. ' i' → logprob: -9.250097274780273
    3. '   ' → logprob: -14.125097274780273
    4. '	i' → logprob: -19.125097274780273
    5. '  ' → logprob: -20.500097274780273
    6. '       ' → logprob: -20.625097274780273
    7. '    ' → logprob: -21.250097274780273
    8. ' ' → logprob: -21.750097274780273
    9. '(i' → logprob: -21.875097274780273
    10. ' ' → logprob: -22.000097274780273

Token 616: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0017230116063728929
    2. ')' → logprob: -7.126722812652588
    3. '-' → logprob: -7.126722812652588
    4. ' ))' → logprob: -9.251723289489746
    5. ' -' → logprob: -11.626723289489746
    6. '))
' → logprob: -12.376723289489746
    7. ')))' → logprob: -13.126723289489746
    8. ' )' → logprob: -13.251723289489746
    9. '),' → logprob: -14.251723289489746
    10. '));' → logprob: -15.501723289489746


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 614
Tokens correctement prédits (1ère position, stricte): 218
Tokens correctement prédits (1ère position, avec adaptation): 257
Tokens correctement prédits (top 10): 527
Précision stricte (1ère position): 35.50%
Précision adaptée (1ère position): 41.86%
Précision (top 10): 85.83%
================================================================================
